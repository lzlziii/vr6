using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Diagnostics;
using System.IO;
using System.Reflection;
using System.Runtime.InteropServices;
using System.Runtime.Serialization.Formatters.Binary;
using System.Text;
using System.Text.RegularExpressions;
using System.Threading;
using Il2CppDummyDll;
using LitJson;
using ProBuilder2.Common;
using Pvr_UnitySDKAPI;
using UnityEngine;
using UnityEngine.AI;
using UnityEngine.Audio;
using UnityEngine.EventSystems;
using UnityEngine.Events;
using UnityEngine.Experimental.Rendering;
using UnityEngine.Playables;
using UnityEngine.Rendering;
using UnityEngine.Rendering.PostProcessing;
using UnityEngine.SceneManagement;
using UnityEngine.Timeline;
using UnityEngine.UI;
using UnityEngine.Video;
using UnityEngine.XR;
using VRTK;
using VRTK.Controllables;
using VRTK.Controllables.ArtificialBased;
using VRTK.Controllables.PhysicsBased;
using VRTK.GrabAttachMechanics;
using VRTK.Highlighters;
using VRTK.SecondaryControllerGrabActions;
using VRTK.UnityEventHelper;
using Valve.VR;

[assembly: AssemblyVersion("0.0.0.0")]
[Serializable]
[Token(Token = "0x2000002")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x63CE84", Offset = "0x63CE84")]
public class AchievementData : ScriptableObject
{
	[Serializable]
	[Token(Token = "0x2000506")]
	public class AchievementIDInfo
	{
		[Token(Token = "0x4002367")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string _steam;

		[Token(Token = "0x4002368")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int _ps4;

		[Token(Token = "0x4002369")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool _enableOnPS4;

		[Token(Token = "0x60028E4")]
		[Address(RVA = "0x8B34D8", Offset = "0x8B34D8", VA = "0x8B34D8")]
		public AchievementIDInfo()
		{
		}
	}

	[Token(Token = "0x4000001")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public List<AchievementIDInfo> _achievement;

	[Token(Token = "0x6000001")]
	[Address(RVA = "0x8B34D0", Offset = "0x8B34D0", VA = "0x8B34D0")]
	public AchievementData()
	{
	}
}
[Token(Token = "0x2000003")]
public class Achievements
{
	[Serializable]
	[Token(Token = "0x2000507")]
	public class AchievementData
	{
		[Token(Token = "0x400236A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		public bool _enable;

		[Token(Token = "0x400236B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public string _steamAchievementAPIName;

		[Token(Token = "0x60028E5")]
		[Address(RVA = "0x8B3628", Offset = "0x8B3628", VA = "0x8B3628")]
		public AchievementData()
		{
		}
	}

	[Token(Token = "0x4000002")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static AchievementsInterface _implementation;

	[Token(Token = "0x17000001")]
	public static AchievementsInterface instance
	{
		[Token(Token = "0x6000002")]
		[Address(RVA = "0x8B32EC", Offset = "0x8B32EC", VA = "0x8B32EC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000003")]
	[Address(RVA = "0x8B34E0", Offset = "0x8B34E0", VA = "0x8B34E0")]
	public static void Init()
	{
	}

	[Token(Token = "0x6000004")]
	[Address(RVA = "0x8B361C", Offset = "0x8B361C", VA = "0x8B361C")]
	public Achievements()
	{
	}
}
[Token(Token = "0x2000004")]
public class AchievementsNull : AchievementsInterface
{
	[Token(Token = "0x6000006")]
	[Address(RVA = "0x8B3630", Offset = "0x8B3630", VA = "0x8B3630", Slot = "4")]
	public void Init()
	{
	}

	[Token(Token = "0x6000007")]
	[Address(RVA = "0x8B3634", Offset = "0x8B3634", VA = "0x8B3634", Slot = "5")]
	public void ResetAll()
	{
	}

	[Token(Token = "0x6000008")]
	[Address(RVA = "0x8B3638", Offset = "0x8B3638", VA = "0x8B3638", Slot = "6")]
	public void UnlockAchievement(Achievements.AchievementData achievementId)
	{
	}

	[Token(Token = "0x6000009")]
	[Address(RVA = "0x8B3614", Offset = "0x8B3614", VA = "0x8B3614")]
	public AchievementsNull()
	{
	}
}
[Token(Token = "0x2000005")]
public interface AchievementsInterface
{
	[Token(Token = "0x600000A")]
	void Init();

	[Token(Token = "0x600000B")]
	void ResetAll();

	[Token(Token = "0x600000C")]
	void UnlockAchievement(Achievements.AchievementData achievementId);
}
[Token(Token = "0x2000006")]
public class AnimateTiledTexture : MonoBehaviour
{
	[Token(Token = "0x2000508")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x643C28", Offset = "0x643C28")]
	private sealed class <updateTiling>d__15 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400236C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400236D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400236E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AnimateTiledTexture <>4__this;

		[Token(Token = "0x17000209")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60028E9")]
			[Address(RVA = "0x8BAC40", Offset = "0x8BAC40", VA = "0x8BAC40", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700020A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60028EB")]
			[Address(RVA = "0x8BACB0", Offset = "0x8BACB0", VA = "0x8BACB0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60028E6")]
		[Address(RVA = "0x8BA8C0", Offset = "0x8BA8C0", VA = "0x8BA8C0")]
		[DebuggerHidden]
		public <updateTiling>d__15(int <>1__state)
		{
		}

		[Token(Token = "0x60028E7")]
		[Address(RVA = "0x8BA960", Offset = "0x8BA960", VA = "0x8BA960", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60028E8")]
		[Address(RVA = "0x8BA964", Offset = "0x8BA964", VA = "0x8BA964", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60028EA")]
		[Address(RVA = "0x8BAC48", Offset = "0x8BAC48", VA = "0x8BAC48", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000003")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int columns;

	[Token(Token = "0x4000004")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int rows;

	[Token(Token = "0x4000005")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float framesPerSecond;

	[Token(Token = "0x4000006")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool flip;

	[Token(Token = "0x4000007")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int materialNum;

	[Token(Token = "0x4000008")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool showActive;

	[Token(Token = "0x4000009")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
	public bool useSharedMaterial;

	[Token(Token = "0x400000A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int index;

	[Token(Token = "0x400000B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Texture idleTexture;

	[Token(Token = "0x400000C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Texture activeTexture;

	[Token(Token = "0x400000D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public string _textureName;

	[Token(Token = "0x400000E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int _texturePropertyID;

	[Token(Token = "0x400000F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private WaitForSeconds _waitForSecondsReturn;

	[Token(Token = "0x4000010")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Material _material;

	[Token(Token = "0x600000D")]
	[Address(RVA = "0x8BA660", Offset = "0x8BA660", VA = "0x8BA660")]
	private void Start()
	{
	}

	[Token(Token = "0x600000E")]
	[Address(RVA = "0x8BA84C", Offset = "0x8BA84C", VA = "0x8BA84C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x664F18", Offset = "0x664F18")]
	private IEnumerator updateTiling()
	{
		return null;
	}

	[Token(Token = "0x600000F")]
	[Address(RVA = "0x8BA8EC", Offset = "0x8BA8EC", VA = "0x8BA8EC")]
	public AnimateTiledTexture()
	{
	}
}
[Token(Token = "0x2000007")]
public class IKHandling : MonoBehaviour
{
	[Token(Token = "0x4000011")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Animator anim;

	[Token(Token = "0x4000012")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float lookWeight;

	[Token(Token = "0x4000013")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private float lookSmoother;

	[Token(Token = "0x4000014")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private bool lookAtEnabled;

	[Token(Token = "0x4000015")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform lookTarget;

	[Token(Token = "0x6000010")]
	[Address(RVA = "0x84D740", Offset = "0x84D740", VA = "0x84D740")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000011")]
	[Address(RVA = "0x84D7DC", Offset = "0x84D7DC", VA = "0x84D7DC")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000012")]
	[Address(RVA = "0x84D900", Offset = "0x84D900", VA = "0x84D900")]
	private void OnAnimatorIK()
	{
	}

	[Token(Token = "0x6000013")]
	[Address(RVA = "0x84DA54", Offset = "0x84DA54", VA = "0x84DA54")]
	public IKHandling()
	{
	}
}
[Token(Token = "0x2000008")]
public class ScrollTexture : MonoBehaviour
{
	[Token(Token = "0x4000016")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int materialIndex;

	[Token(Token = "0x4000017")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector2 uvAnimationRate;

	[Token(Token = "0x4000018")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string textureName;

	[Token(Token = "0x4000019")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Renderer gameobjectRenderer;

	[Token(Token = "0x400001A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int _propertyID;

	[Token(Token = "0x400001B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Material _scrollMaterial;

	[Token(Token = "0x400001C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Vector2 uvOffset;

	[Token(Token = "0x6000014")]
	[Address(RVA = "0x86036C", Offset = "0x86036C", VA = "0x86036C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000015")]
	[Address(RVA = "0x860444", Offset = "0x860444", VA = "0x860444")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000016")]
	[Address(RVA = "0x860570", Offset = "0x860570", VA = "0x860570")]
	public ScrollTexture()
	{
	}
}
[Token(Token = "0x2000009")]
public class AudioSourceHelper : MonoBehaviour
{
	[Token(Token = "0x400001D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float _fadeTarget;

	[Token(Token = "0x400001E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float _fadeRate;

	[Token(Token = "0x400001F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float _fadeTime;

	[Token(Token = "0x4000020")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private bool _fading;

	[Token(Token = "0x4000021")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float _volume;

	[Token(Token = "0x4000022")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float _masterVolume;

	[Token(Token = "0x4000023")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private AudioSource _source;

	[Token(Token = "0x17000002")]
	public float masterVolume
	{
		[Token(Token = "0x6000017")]
		[Address(RVA = "0x8BDC48", Offset = "0x8BDC48", VA = "0x8BDC48")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000018")]
		[Address(RVA = "0x8BDC50", Offset = "0x8BDC50", VA = "0x8BDC50")]
		set
		{
		}
	}

	[Token(Token = "0x17000003")]
	public bool isFading
	{
		[Token(Token = "0x6000019")]
		[Address(RVA = "0x8BDC58", Offset = "0x8BDC58", VA = "0x8BDC58")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x600001A")]
	[Address(RVA = "0x8BDC60", Offset = "0x8BDC60", VA = "0x8BDC60")]
	private void Awake()
	{
	}

	[Token(Token = "0x600001B")]
	[Address(RVA = "0x8BDCD8", Offset = "0x8BDCD8", VA = "0x8BDCD8")]
	public void StartFadeIn(float fadeTime, float targetVolume = 1f)
	{
	}

	[Token(Token = "0x600001C")]
	[Address(RVA = "0x8BDCF8", Offset = "0x8BDCF8", VA = "0x8BDCF8")]
	public void StartFadeOut(float fadeTime, float targetVolume = 0f)
	{
	}

	[Token(Token = "0x600001D")]
	[Address(RVA = "0x8BDD18", Offset = "0x8BDD18", VA = "0x8BDD18")]
	public void Update()
	{
	}

	[Token(Token = "0x600001E")]
	[Address(RVA = "0x8BDDB4", Offset = "0x8BDDB4", VA = "0x8BDDB4")]
	public AudioSourceHelper()
	{
	}
}
[Token(Token = "0x200000A")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x63CEF4", Offset = "0x63CEF4")]
public class AudioSourceTemplateData : ScriptableObject
{
	[Token(Token = "0x2000509")]
	private enum RollOffMode
	{
		[Token(Token = "0x4002370")]
		Linear,
		[Token(Token = "0x4002371")]
		Logarithmic,
		[Token(Token = "0x4002372")]
		Custom
	}

	[Token(Token = "0x4000024")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x646210", Offset = "0x646210")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x646210", Offset = "0x646210")]
	[SerializeField]
	private AudioMixerGroup _outputAudioMixerGroup;

	[Token(Token = "0x4000025")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x646280", Offset = "0x646280")]
	[SerializeField]
	private bool _bypassEffects;

	[Token(Token = "0x4000026")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6462CC", Offset = "0x6462CC")]
	[SerializeField]
	private bool _bypassListenerEffects;

	[Token(Token = "0x4000027")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x646318", Offset = "0x646318")]
	[SerializeField]
	private bool _bypassReverbZones;

	[Token(Token = "0x4000028")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x646364", Offset = "0x646364")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x646364", Offset = "0x646364")]
	[SerializeField]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x646364", Offset = "0x646364")]
	private int _priority;

	[Token(Token = "0x4000029")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6463F0", Offset = "0x6463F0")]
	[SerializeField]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6463F0", Offset = "0x6463F0")]
	private float _volume;

	[Token(Token = "0x400002A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x646454", Offset = "0x646454")]
	[SerializeField]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x646454", Offset = "0x646454")]
	private float _pitch;

	[Token(Token = "0x400002B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6464B8", Offset = "0x6464B8")]
	[SerializeField]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6464B8", Offset = "0x6464B8")]
	private float _stereoPan;

	[Token(Token = "0x400002C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64651C", Offset = "0x64651C")]
	[SerializeField]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x64651C", Offset = "0x64651C")]
	private float _spacialBlend;

	[Token(Token = "0x400002D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x646580", Offset = "0x646580")]
	[SerializeField]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x646580", Offset = "0x646580")]
	private float _reverbZoneMix;

	[Token(Token = "0x400002E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6465E4", Offset = "0x6465E4")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6465E4", Offset = "0x6465E4")]
	[SerializeField]
	private RollOffMode _rollOffMode;

	[Token(Token = "0x400002F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x646654", Offset = "0x646654")]
	[SerializeField]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x646654", Offset = "0x646654")]
	private float _rolloffMinDistance;

	[Token(Token = "0x4000030")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6466BC", Offset = "0x6466BC")]
	[SerializeField]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6466BC", Offset = "0x6466BC")]
	private float _rolloffMaxDistance;

	[Token(Token = "0x4000031")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x646724", Offset = "0x646724")]
	[SerializeField]
	private AnimationCurve _customRollOffCurve;

	[Token(Token = "0x17000004")]
	public float pitch
	{
		[Token(Token = "0x600001F")]
		[Address(RVA = "0x8BDDC4", Offset = "0x8BDDC4", VA = "0x8BDDC4")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000005")]
	public float volume
	{
		[Token(Token = "0x6000020")]
		[Address(RVA = "0x8BDDCC", Offset = "0x8BDDCC", VA = "0x8BDDCC")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000006")]
	public float rollOffMinDistance
	{
		[Token(Token = "0x6000021")]
		[Address(RVA = "0x8BDDD4", Offset = "0x8BDDD4", VA = "0x8BDDD4")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000007")]
	public float rollOffMaxDistance
	{
		[Token(Token = "0x6000022")]
		[Address(RVA = "0x8BDDDC", Offset = "0x8BDDDC", VA = "0x8BDDDC")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x6000023")]
	[Address(RVA = "0x8BDDE4", Offset = "0x8BDDE4", VA = "0x8BDDE4")]
	public void Set(AudioSource source)
	{
	}

	[Token(Token = "0x6000024")]
	[Address(RVA = "0x8BE0A4", Offset = "0x8BE0A4", VA = "0x8BE0A4")]
	public AudioSourceTemplateData()
	{
	}
}
[Token(Token = "0x200000B")]
public class ControllableAudio : MonoBehaviour
{
	[Token(Token = "0x4000032")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x646770", Offset = "0x646770")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x646770", Offset = "0x646770")]
	[SerializeField]
	private float _stepSize;

	[Token(Token = "0x4000033")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6467E0", Offset = "0x6467E0")]
	[SerializeField]
	private SoundEffect _changedSoundEffectName;

	[Token(Token = "0x4000034")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64682C", Offset = "0x64682C")]
	[SerializeField]
	private HapticsParameters _changedHaptics;

	[Token(Token = "0x4000035")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x646878", Offset = "0x646878")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x646878", Offset = "0x646878")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x646878", Offset = "0x646878")]
	[SerializeField]
	private SoundEffect _maximumLimitEnterEffectName;

	[Token(Token = "0x4000036")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64690C", Offset = "0x64690C")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x64690C", Offset = "0x64690C")]
	[SerializeField]
	private HapticsParameters _maximumLimitEnterHaptics;

	[Token(Token = "0x4000037")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x64697C", Offset = "0x64697C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64697C", Offset = "0x64697C")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x64697C", Offset = "0x64697C")]
	[SerializeField]
	private SoundEffect _minimumLimitEnterEffectName;

	[Token(Token = "0x4000038")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x646A10", Offset = "0x646A10")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x646A10", Offset = "0x646A10")]
	[SerializeField]
	private HapticsParameters _minimumLimitEnterHaptics;

	[Token(Token = "0x4000039")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x646A80", Offset = "0x646A80")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x646A80", Offset = "0x646A80")]
	[SerializeField]
	private SoundEffect _maximumLimitLeaveEffectName;

	[Token(Token = "0x400003A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x646AF0", Offset = "0x646AF0")]
	[SerializeField]
	private HapticsParameters _maximumLimitLeaveHaptics;

	[Token(Token = "0x400003B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x646B3C", Offset = "0x646B3C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x646B3C", Offset = "0x646B3C")]
	[SerializeField]
	private SoundEffect _minimumLimitLeaveEffectName;

	[Token(Token = "0x400003C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x646BAC", Offset = "0x646BAC")]
	[SerializeField]
	private HapticsParameters _minimumLimitLeaveHaptics;

	[Token(Token = "0x400003D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x646BF8", Offset = "0x646BF8")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x646BF8", Offset = "0x646BF8")]
	[SerializeField]
	private float _movementTheshold;

	[Token(Token = "0x400003E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x646C68", Offset = "0x646C68")]
	[SerializeField]
	private SoundEffect _startMovementEffectName;

	[Token(Token = "0x400003F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x646CB4", Offset = "0x646CB4")]
	[SerializeField]
	private HapticsParameters _startMovementHaptics;

	[Token(Token = "0x4000040")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x646D00", Offset = "0x646D00")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x646D00", Offset = "0x646D00")]
	[SerializeField]
	private SoundEffect _stopMovementEffectName;

	[Token(Token = "0x4000041")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x646D70", Offset = "0x646D70")]
	[SerializeField]
	private HapticsParameters _stopMovementHaptics;

	[Token(Token = "0x4000042")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x646DBC", Offset = "0x646DBC")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x646DBC", Offset = "0x646DBC")]
	[SerializeField]
	private SoundEffect _movementLoop;

	[Token(Token = "0x4000043")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x646E2C", Offset = "0x646E2C")]
	[SerializeField]
	private float _minimumSpeed;

	[Token(Token = "0x4000044")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x646E78", Offset = "0x646E78")]
	[SerializeField]
	private float _maximumSpeed;

	[Token(Token = "0x4000045")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x646EC4", Offset = "0x646EC4")]
	[SerializeField]
	private AnimationCurve _volumeCurve;

	[Token(Token = "0x4000046")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x646F10", Offset = "0x646F10")]
	[SerializeField]
	private AnimationCurve _pitchCurve;

	[Token(Token = "0x4000047")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x646F5C", Offset = "0x646F5C")]
	[ObsoleteField]
	[SerializeField]
	private AudioClip _changedAudioClip;

	[Token(Token = "0x4000048")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	[ObsoleteField]
	[SerializeField]
	private AudioSource _source;

	[Token(Token = "0x4000049")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	[ObsoleteField]
	[SerializeField]
	private Transform _sourcePrefab;

	[Token(Token = "0x400004A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	private VRTK_BaseControllable _controllable;

	[Token(Token = "0x400004B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	private float _previousValue;

	[Token(Token = "0x400004C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C4")]
	private float _offset;

	[Token(Token = "0x400004D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	private float _speed;

	[Token(Token = "0x400004E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1CC")]
	private bool _playingLoop;

	[Token(Token = "0x400004F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	private float _playingTime;

	[Token(Token = "0x4000050")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D4")]
	private bool _movingNow;

	[Token(Token = "0x4000051")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	private SoundChannel _loopChannel;

	[Token(Token = "0x4000052")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	private float _previousFrameValue;

	[Token(Token = "0x4000053")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E4")]
	private bool _initInProgress;

	[Token(Token = "0x4000054")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E5")]
	private bool _registered;

	[Token(Token = "0x6000025")]
	[Address(RVA = "0x7AD200", Offset = "0x7AD200", VA = "0x7AD200")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000026")]
	[Address(RVA = "0x7AD5B8", Offset = "0x7AD5B8", VA = "0x7AD5B8")]
	public void OnStartInit()
	{
	}

	[Token(Token = "0x6000027")]
	[Address(RVA = "0x7AD5C4", Offset = "0x7AD5C4", VA = "0x7AD5C4")]
	public void OnFinishInit()
	{
	}

	[Token(Token = "0x6000028")]
	[Address(RVA = "0x7AD5CC", Offset = "0x7AD5CC", VA = "0x7AD5CC")]
	private void OnMinLimitExited(object sender, ControllableEventArgs e)
	{
	}

	[Token(Token = "0x6000029")]
	[Address(RVA = "0x7AD65C", Offset = "0x7AD65C", VA = "0x7AD65C")]
	private void OnMaxLimitExited(object sender, ControllableEventArgs e)
	{
	}

	[Token(Token = "0x600002A")]
	[Address(RVA = "0x7AD6EC", Offset = "0x7AD6EC", VA = "0x7AD6EC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600002B")]
	[Address(RVA = "0x7AD8D4", Offset = "0x7AD8D4", VA = "0x7AD8D4")]
	private void Start()
	{
	}

	[Token(Token = "0x600002C")]
	[Address(RVA = "0x7AD914", Offset = "0x7AD914", VA = "0x7AD914")]
	private void OnMinLimitReached(object sender, ControllableEventArgs e)
	{
	}

	[Token(Token = "0x600002D")]
	[Address(RVA = "0x7AD9A4", Offset = "0x7AD9A4", VA = "0x7AD9A4")]
	private void OnMaxLimitReached(object sender, ControllableEventArgs e)
	{
	}

	[Token(Token = "0x600002E")]
	[Address(RVA = "0x7ADA34", Offset = "0x7ADA34", VA = "0x7ADA34")]
	private void OnValueChanged(object sender, ControllableEventArgs e)
	{
	}

	[Token(Token = "0x600002F")]
	[Address(RVA = "0x7ADBC4", Offset = "0x7ADBC4", VA = "0x7ADBC4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000030")]
	[Address(RVA = "0x7ADE9C", Offset = "0x7ADE9C", VA = "0x7ADE9C")]
	public ControllableAudio()
	{
	}
}
[Token(Token = "0x200000C")]
public class DialogueAnimation : MonoBehaviour
{
	[Token(Token = "0x4000055")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x647028", Offset = "0x647028")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x647028", Offset = "0x647028")]
	[SerializeField]
	private Animator _dialogueAnimator;

	[Token(Token = "0x4000056")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x647098", Offset = "0x647098")]
	[SerializeField]
	private string _dialoguePlayingBoolName;

	[Token(Token = "0x4000057")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6470E4", Offset = "0x6470E4")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6470E4", Offset = "0x6470E4")]
	[SerializeField]
	private PlayableDirector _dialogueTimeline;

	[Token(Token = "0x4000058")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x647154", Offset = "0x647154")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x647154", Offset = "0x647154")]
	[SerializeField]
	private GameObject _dialogueEnable;

	[Token(Token = "0x4000059")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6471C4", Offset = "0x6471C4")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6471C4", Offset = "0x6471C4")]
	[SerializeField]
	private MazeVideoPlayer _videoPlayerComponent;

	[Token(Token = "0x400005A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x647234", Offset = "0x647234")]
	[SerializeField]
	private List<string> _talkVideoLoopName;

	[Token(Token = "0x400005B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x647280", Offset = "0x647280")]
	[SerializeField]
	private List<string> _idleVideoLoopName;

	[Token(Token = "0x400005C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool _startedIdleLoop;

	[Token(Token = "0x6000031")]
	[Address(RVA = "0x7B8B28", Offset = "0x7B8B28", VA = "0x7B8B28")]
	public void Start()
	{
	}

	[Token(Token = "0x6000032")]
	[Address(RVA = "0x7B8CF8", Offset = "0x7B8CF8", VA = "0x7B8CF8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000033")]
	[Address(RVA = "0x7B8BD0", Offset = "0x7B8BD0", VA = "0x7B8BD0")]
	public void PlayRandomIdleLoop()
	{
	}

	[Token(Token = "0x6000034")]
	[Address(RVA = "0x7B8DD8", Offset = "0x7B8DD8", VA = "0x7B8DD8")]
	public void OnDialogueStart(DialogueData.DialogueBlock block)
	{
	}

	[Token(Token = "0x6000035")]
	[Address(RVA = "0x7B90B4", Offset = "0x7B90B4", VA = "0x7B90B4")]
	public void OnDialogueFinish(DialogueData.DialogueBlock block)
	{
	}

	[Token(Token = "0x6000036")]
	[Address(RVA = "0x7B92A8", Offset = "0x7B92A8", VA = "0x7B92A8")]
	public DialogueAnimation()
	{
	}
}
[Token(Token = "0x200000D")]
public class DialogueSystem : MonoBehaviour
{
	[Token(Token = "0x200050A")]
	public enum DialogueType
	{
		[Token(Token = "0x4002374")]
		Master,
		[Token(Token = "0x4002375")]
		Secondary
	}

	[Token(Token = "0x200050B")]
	public delegate void DialogueFinished(DialogueData.DialogueBlock block);

	[Token(Token = "0x200050C")]
	private class PlayingDialogue
	{
		[Token(Token = "0x4002376")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public DialogueData.DialogueBlock _currentBlock;

		[Token(Token = "0x4002377")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AudioSource _currentSource;

		[Token(Token = "0x4002378")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DialogueAnimation _currentDialogueAnimation;

		[Token(Token = "0x4002379")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int _lineIndex;

		[Token(Token = "0x400237A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public DialogueFinished _finishedCallback;

		[Token(Token = "0x400237B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float _delayTimer;

		[Token(Token = "0x60028F0")]
		[Address(RVA = "0x7BAD10", Offset = "0x7BAD10", VA = "0x7BAD10")]
		public PlayingDialogue()
		{
		}
	}

	[Token(Token = "0x200050D")]
	private struct DialogueQueueEntry
	{
		[Token(Token = "0x400237C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public DialogueData.DialogueBlock block;

		[Token(Token = "0x400237D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public GameObject source;

		[Token(Token = "0x400237E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public DialogueFinished callback;

		[Token(Token = "0x60028F1")]
		[Address(RVA = "0x6DDD84", Offset = "0x6DDD84", VA = "0x6DDD84")]
		public DialogueQueueEntry(DialogueData.DialogueBlock block, GameObject source, DialogueFinished callback)
		{
		}
	}

	[Token(Token = "0x200050E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x643C38", Offset = "0x643C38")]
	private sealed class <>c__DisplayClass22_0
	{
		[Token(Token = "0x400237F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string blockName;

		[Token(Token = "0x60028F2")]
		[Address(RVA = "0x7BACF4", Offset = "0x7BACF4", VA = "0x7BACF4")]
		public <>c__DisplayClass22_0()
		{
		}

		[Token(Token = "0x60028F3")]
		[Address(RVA = "0x7BB548", Offset = "0x7BB548", VA = "0x7BB548")]
		internal bool <PlayQueued>b__0(DialogueData.DialogueBlock block)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x200050F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x643C48", Offset = "0x643C48")]
	private sealed class <>c__DisplayClass23_0
	{
		[Token(Token = "0x4002380")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string blockName;

		[Token(Token = "0x60028F4")]
		[Address(RVA = "0x7BAD08", Offset = "0x7BAD08", VA = "0x7BAD08")]
		public <>c__DisplayClass23_0()
		{
		}

		[Token(Token = "0x60028F5")]
		[Address(RVA = "0x7BB580", Offset = "0x7BB580", VA = "0x7BB580")]
		internal bool <Play>b__0(DialogueData.DialogueBlock block)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x400005D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static DialogueSystem _instance;

	[Token(Token = "0x400005E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private DialogueData _data;

	[Token(Token = "0x400005F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private AudioSource _defaultSource;

	[Token(Token = "0x4000060")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<PlayingDialogue> _playingDialogue;

	[Token(Token = "0x4000061")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private PlayingDialogue _masterDialogue;

	[Token(Token = "0x4000062")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int _currentSubtitleId;

	[Token(Token = "0x4000063")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private bool _leaveSubtitleEnabled;

	[Token(Token = "0x4000064")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
	private bool _useCallbacks;

	[Token(Token = "0x4000065")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Queue<DialogueQueueEntry> _queue;

	[Token(Token = "0x17000008")]
	public static DialogueSystem instance
	{
		[Token(Token = "0x6000037")]
		[Address(RVA = "0x7B96A8", Offset = "0x7B96A8", VA = "0x7B96A8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000009")]
	public bool isPlaying
	{
		[Token(Token = "0x6000038")]
		[Address(RVA = "0x7BA0DC", Offset = "0x7BA0DC", VA = "0x7BA0DC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000039")]
	[Address(RVA = "0x7BA0EC", Offset = "0x7BA0EC", VA = "0x7BA0EC")]
	private void Awake()
	{
	}

	[Token(Token = "0x600003A")]
	[Address(RVA = "0x7BA168", Offset = "0x7BA168", VA = "0x7BA168")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600003B")]
	[Address(RVA = "0x7BA3E0", Offset = "0x7BA3E0", VA = "0x7BA3E0")]
	public void Stop()
	{
	}

	[Token(Token = "0x600003C")]
	[Address(RVA = "0x7BA210", Offset = "0x7BA210", VA = "0x7BA210")]
	public void StopAll()
	{
	}

	[Token(Token = "0x600003D")]
	[Address(RVA = "0x7BA3E8", Offset = "0x7BA3E8", VA = "0x7BA3E8")]
	private void Stop(PlayingDialogue dialogue)
	{
	}

	[Token(Token = "0x600003E")]
	[Address(RVA = "0x7B99B0", Offset = "0x7B99B0", VA = "0x7B99B0")]
	public void PlayQueued(string blockName, [Optional] GameObject source, [Optional] DialogueFinished callback)
	{
	}

	[Token(Token = "0x600003F")]
	[Address(RVA = "0x7B9708", Offset = "0x7B9708", VA = "0x7B9708")]
	public void Play(string blockName, [Optional] GameObject source, [Optional] DialogueFinished callback, DialogueType type = DialogueType.Master)
	{
	}

	[Token(Token = "0x6000040")]
	[Address(RVA = "0x7BAD18", Offset = "0x7BAD18", VA = "0x7BAD18")]
	private void PlayNextLine(PlayingDialogue dialogue)
	{
	}

	[Token(Token = "0x6000041")]
	[Address(RVA = "0x7B9BE0", Offset = "0x7B9BE0", VA = "0x7B9BE0")]
	public void HideSubtitle(bool force = false)
	{
	}

	[Token(Token = "0x6000042")]
	[Address(RVA = "0x7BB048", Offset = "0x7BB048", VA = "0x7BB048")]
	private void Update()
	{
	}

	[Token(Token = "0x6000043")]
	[Address(RVA = "0x7BB4C8", Offset = "0x7BB4C8", VA = "0x7BB4C8")]
	public DialogueSystem()
	{
	}
}
[Serializable]
[Token(Token = "0x200000E")]
public struct HashedString
{
	[Token(Token = "0x4000066")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[SerializeField]
	private string _string;

	[Token(Token = "0x4000067")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	[SerializeField]
	private int _hash;

	[Token(Token = "0x1700000A")]
	public int hash
	{
		[Token(Token = "0x6000045")]
		[Address(RVA = "0x6DE42C", Offset = "0x6DE42C", VA = "0x6DE42C")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700000B")]
	public string value
	{
		[Token(Token = "0x6000046")]
		[Address(RVA = "0x6DE434", Offset = "0x6DE434", VA = "0x6DE434")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000047")]
		[Address(RVA = "0x6DE43C", Offset = "0x6DE43C", VA = "0x6DE43C")]
		set
		{
		}
	}

	[Token(Token = "0x6000044")]
	[Address(RVA = "0x6DE3FC", Offset = "0x6DE3FC", VA = "0x6DE3FC")]
	public HashedString(string value)
	{
	}
}
[Token(Token = "0x200000F")]
public class InteractionAudio : MonoBehaviour
{
	[Token(Token = "0x4000068")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x64730C", Offset = "0x64730C")]
	[ObsoleteField]
	[SerializeField]
	private AudioClip _completeAudioClip;

	[Token(Token = "0x4000069")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[ObsoleteField]
	[SerializeField]
	private float _completeDelay;

	[Token(Token = "0x400006A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private SoundEffect _completeSoundEffectName;

	[Token(Token = "0x400006B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6473B0", Offset = "0x6473B0")]
	[ObsoleteField]
	[SerializeField]
	private AudioClip _uncompleteAudioClip;

	[Token(Token = "0x400006C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[ObsoleteField]
	[SerializeField]
	private float _uncompleteDelay;

	[Token(Token = "0x400006D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private SoundEffect _uncompleteSoundEffectName;

	[Token(Token = "0x400006E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x647454", Offset = "0x647454")]
	[ObsoleteField]
	[SerializeField]
	private AudioSource _source;

	[Token(Token = "0x400006F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private Transform _sourcePrefab;

	[Token(Token = "0x4000070")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Interaction _interaction;

	[Token(Token = "0x4000071")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool _attached;

	[Token(Token = "0x6000048")]
	[Address(RVA = "0x851F08", Offset = "0x851F08", VA = "0x851F08")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000049")]
	[Address(RVA = "0x8521C4", Offset = "0x8521C4", VA = "0x8521C4")]
	private void OnUncomplete(object sender, Interaction interaction)
	{
	}

	[Token(Token = "0x600004A")]
	[Address(RVA = "0x852298", Offset = "0x852298", VA = "0x852298")]
	private void OnComplete(object sender, Interaction interaction)
	{
	}

	[Token(Token = "0x600004B")]
	[Address(RVA = "0x85234C", Offset = "0x85234C", VA = "0x85234C")]
	public InteractionAudio()
	{
	}
}
[Token(Token = "0x2000010")]
public class IntroSnapshotFadeIn : MonoBehaviour
{
	[Token(Token = "0x4000072")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private AudioMixerSnapshot wakingUp;

	[Token(Token = "0x4000073")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float timer;

	[Token(Token = "0x600004C")]
	[Address(RVA = "0x853CB4", Offset = "0x853CB4", VA = "0x853CB4")]
	private void Start()
	{
	}

	[Token(Token = "0x600004D")]
	[Address(RVA = "0x853CB8", Offset = "0x853CB8", VA = "0x853CB8")]
	private void FadeIn()
	{
	}

	[Token(Token = "0x600004E")]
	[Address(RVA = "0x853CF8", Offset = "0x853CF8", VA = "0x853CF8")]
	public IntroSnapshotFadeIn()
	{
	}
}
[Token(Token = "0x2000011")]
public class MusicPlayer : MonoBehaviour
{
	[Token(Token = "0x2000510")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x643C58", Offset = "0x643C58")]
	private sealed class <>c__DisplayClass23_0
	{
		[Token(Token = "0x4002381")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x60028F6")]
		[Address(RVA = "0x7FCF50", Offset = "0x7FCF50", VA = "0x7FCF50")]
		public <>c__DisplayClass23_0()
		{
		}

		[Token(Token = "0x60028F7")]
		[Address(RVA = "0x7FCF60", Offset = "0x7FCF60", VA = "0x7FCF60")]
		internal bool <GetVariant>b__0(MusicTrackGroupData.Variant variant)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4000074")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform _musicTrackPrefab;

	[Token(Token = "0x4000075")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private MusicTrackGroupData.Track _track;

	[Token(Token = "0x4000076")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private MusicTrackGroupData.Variant _variant;

	[Token(Token = "0x4000077")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<AudioSource> _audioSource;

	[Token(Token = "0x4000078")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private List<bool> _audioSourceEnable;

	[Token(Token = "0x4000079")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private AudioSource _introAudioSource;

	[Token(Token = "0x400007A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool _fadingToStop;

	[Token(Token = "0x400007B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	private bool _isFinished;

	[Token(Token = "0x1700000C")]
	public Transform sourcePrefab
	{
		[Token(Token = "0x600004F")]
		[Address(RVA = "0x7FBD04", Offset = "0x7FBD04", VA = "0x7FBD04")]
		set
		{
		}
	}

	[Token(Token = "0x1700000D")]
	public bool isFinished
	{
		[Token(Token = "0x6000050")]
		[Address(RVA = "0x7FBD0C", Offset = "0x7FBD0C", VA = "0x7FBD0C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700000E")]
	public MusicTrackGroupData.Variant currentVariant
	{
		[Token(Token = "0x6000051")]
		[Address(RVA = "0x7FBD14", Offset = "0x7FBD14", VA = "0x7FBD14")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000052")]
	[Address(RVA = "0x7FBD1C", Offset = "0x7FBD1C", VA = "0x7FBD1C")]
	public float GetBeatSyncDelay(MusicTrackGroupData.Variant syncSource)
	{
		return default(float);
	}

	[Token(Token = "0x6000053")]
	[Address(RVA = "0x7FBD90", Offset = "0x7FBD90", VA = "0x7FBD90")]
	public void Play(MusicTrackGroupData.Track track, string variantName, float fadeTime = 0f, [Optional] MusicTrackGroupData.Variant syncSource)
	{
	}

	[Token(Token = "0x6000054")]
	[Address(RVA = "0x7FC1DC", Offset = "0x7FC1DC", VA = "0x7FC1DC")]
	public void PlayVariant(string variantName, float fadeTime = 0f, float delay = 0f, [Optional] MusicTrackGroupData.Variant syncSource)
	{
	}

	[Token(Token = "0x6000055")]
	[Address(RVA = "0x7FC828", Offset = "0x7FC828", VA = "0x7FC828")]
	public void Update()
	{
	}

	[Token(Token = "0x6000056")]
	[Address(RVA = "0x7FCAEC", Offset = "0x7FCAEC", VA = "0x7FCAEC")]
	public void FadeIn(float fadeTime)
	{
	}

	[Token(Token = "0x6000057")]
	[Address(RVA = "0x7FCC68", Offset = "0x7FCC68", VA = "0x7FCC68")]
	public void FadeOut(float fadeTime)
	{
	}

	[Token(Token = "0x6000058")]
	[Address(RVA = "0x7FB380", Offset = "0x7FB380", VA = "0x7FB380")]
	public void FadeInPart(string partNameListString, float fadeTime)
	{
	}

	[Token(Token = "0x6000059")]
	[Address(RVA = "0x7FB840", Offset = "0x7FB840", VA = "0x7FB840")]
	public void FadeOutPart(string partNameListString, float fadeTime)
	{
	}

	[Token(Token = "0x600005A")]
	[Address(RVA = "0x7FCDAC", Offset = "0x7FCDAC", VA = "0x7FCDAC")]
	public void FadeToStop(float fadeTime)
	{
	}

	[Token(Token = "0x600005B")]
	[Address(RVA = "0x7FC748", Offset = "0x7FC748", VA = "0x7FC748")]
	public MusicTrackGroupData.Variant GetVariant(string name)
	{
		return null;
	}

	[Token(Token = "0x600005C")]
	[Address(RVA = "0x7FCF58", Offset = "0x7FCF58", VA = "0x7FCF58")]
	public MusicPlayer()
	{
	}
}
[Token(Token = "0x2000012")]
public class MusicSystem : MonoBehaviour
{
	[Token(Token = "0x2000511")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x643C68", Offset = "0x643C68")]
	private sealed class <>c__DisplayClass19_0
	{
		[Token(Token = "0x4002382")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string trackName;

		[Token(Token = "0x60028F8")]
		[Address(RVA = "0x7FD4A8", Offset = "0x7FD4A8", VA = "0x7FD4A8")]
		public <>c__DisplayClass19_0()
		{
		}

		[Token(Token = "0x60028F9")]
		[Address(RVA = "0x7FD6B8", Offset = "0x7FD6B8", VA = "0x7FD6B8")]
		internal bool <StartMusicPlayer>b__0(MusicTrackGroupData.Track trackEntry)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x2000512")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x643C78", Offset = "0x643C78")]
	private sealed class <>c__DisplayClass20_0
	{
		[Token(Token = "0x4002383")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string trackName;

		[Token(Token = "0x60028FA")]
		[Address(RVA = "0x7FD4B0", Offset = "0x7FD4B0", VA = "0x7FD4B0")]
		public <>c__DisplayClass20_0()
		{
		}

		[Token(Token = "0x60028FB")]
		[Address(RVA = "0x7FD6F0", Offset = "0x7FD6F0", VA = "0x7FD6F0")]
		internal bool <Play>b__0(MusicTrackGroupData.Track trackEntry)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x400007C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static MusicSystem _instance;

	[Token(Token = "0x400007D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private AudioMixer _mixer;

	[Token(Token = "0x400007E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Transform _sourcePrefab;

	[Token(Token = "0x400007F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private MusicTrackGroupData _musicData;

	[Token(Token = "0x4000080")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private MusicPlayer _currentMusicPlayer;

	[Token(Token = "0x4000081")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private MusicPlayer _currentStingPlayer;

	[Token(Token = "0x4000082")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private string _nextMusicTrackName;

	[Token(Token = "0x4000083")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private string _nextMusicTrackVariantName;

	[Token(Token = "0x4000084")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float _nextMusicTrackFadeTime;

	[Token(Token = "0x1700000F")]
	public static MusicSystem instance
	{
		[Token(Token = "0x600005D")]
		[Address(RVA = "0x7FAF6C", Offset = "0x7FAF6C", VA = "0x7FAF6C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000010")]
	public MusicTrackGroupData musicData
	{
		[Token(Token = "0x600005E")]
		[Address(RVA = "0x7FCF98", Offset = "0x7FCF98", VA = "0x7FCF98")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000011")]
	public MusicPlayer currentPlayer
	{
		[Token(Token = "0x6000060")]
		[Address(RVA = "0x7FB378", Offset = "0x7FB378", VA = "0x7FB378")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600005F")]
	[Address(RVA = "0x7FCFA0", Offset = "0x7FCFA0", VA = "0x7FCFA0")]
	public void Awake()
	{
	}

	[Token(Token = "0x6000061")]
	[Address(RVA = "0x7FCFF4", Offset = "0x7FCFF4", VA = "0x7FCFF4")]
	public void Reset()
	{
	}

	[Token(Token = "0x6000062")]
	[Address(RVA = "0x7FD0F4", Offset = "0x7FD0F4", VA = "0x7FD0F4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000063")]
	[Address(RVA = "0x7FB2D4", Offset = "0x7FB2D4", VA = "0x7FB2D4")]
	public void StopMusicPlayer(float fadeTime)
	{
	}

	[Token(Token = "0x6000064")]
	[Address(RVA = "0x7FD190", Offset = "0x7FD190", VA = "0x7FD190")]
	private MusicPlayer StartMusicPlayer(string objName, string trackName, string variantName, float fadeTime)
	{
		return null;
	}

	[Token(Token = "0x6000065")]
	[Address(RVA = "0x7FAFBC", Offset = "0x7FAFBC", VA = "0x7FAFBC")]
	public void Play(string trackName, string variantName, float fadeTime)
	{
	}

	[Token(Token = "0x6000066")]
	[Address(RVA = "0x7FD4B8", Offset = "0x7FD4B8", VA = "0x7FD4B8")]
	public void Start()
	{
	}

	[Token(Token = "0x6000067")]
	[Address(RVA = "0x7FD4BC", Offset = "0x7FD4BC", VA = "0x7FD4BC")]
	public void Update()
	{
	}

	[Token(Token = "0x6000068")]
	[Address(RVA = "0x7FD6B0", Offset = "0x7FD6B0", VA = "0x7FD6B0")]
	public MusicSystem()
	{
	}
}
[Token(Token = "0x2000013")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x63CF64", Offset = "0x63CF64")]
public class MusicTrackGroupData : ScriptableObject
{
	[Serializable]
	[Token(Token = "0x2000513")]
	public class Part
	{
		[Token(Token = "0x4002384")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		public string _name;

		[Token(Token = "0x4002385")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public AudioClip _clip;

		[Token(Token = "0x4002386")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		public float _volume;

		[Token(Token = "0x4002387")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		public bool _defaultEnabled;

		[Token(Token = "0x60028FC")]
		[Address(RVA = "0x7FD730", Offset = "0x7FD730", VA = "0x7FD730")]
		public Part()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000514")]
	public class Variant
	{
		[Token(Token = "0x4002388")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		public string _name;

		[Token(Token = "0x4002389")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public bool _useFadeIn;

		[Token(Token = "0x400238A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		public float _bpm;

		[Token(Token = "0x400238B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		public int _beatCountSync;

		[Token(Token = "0x400238C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		public AudioClip _intro;

		[Token(Token = "0x400238D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		public List<Part> _part;

		[Token(Token = "0x60028FD")]
		[Address(RVA = "0x7FD748", Offset = "0x7FD748", VA = "0x7FD748")]
		public Variant()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000515")]
	public class Track
	{
		[Token(Token = "0x400238E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		public string _name;

		[Token(Token = "0x400238F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public bool _isSting;

		[Token(Token = "0x4002390")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		public List<Variant> _variant;

		[Token(Token = "0x60028FE")]
		[Address(RVA = "0x7FD740", Offset = "0x7FD740", VA = "0x7FD740")]
		public Track()
		{
		}
	}

	[Token(Token = "0x4000085")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public List<Track> _track;

	[Token(Token = "0x6000069")]
	[Address(RVA = "0x7FD728", Offset = "0x7FD728", VA = "0x7FD728")]
	public MusicTrackGroupData()
	{
	}
}
[Token(Token = "0x2000014")]
public class ParticleEffectSoundTrigger : MonoBehaviour
{
	[Token(Token = "0x2000516")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x643C88", Offset = "0x643C88")]
	private sealed class <DoTrigger>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002391")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002392")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002393")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ParticleEffectSoundTrigger <>4__this;

		[Token(Token = "0x1700020B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002902")]
			[Address(RVA = "0x8000DC", Offset = "0x8000DC", VA = "0x8000DC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700020C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002904")]
			[Address(RVA = "0x80014C", Offset = "0x80014C", VA = "0x80014C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60028FF")]
		[Address(RVA = "0x7FFF6C", Offset = "0x7FFF6C", VA = "0x7FFF6C")]
		[DebuggerHidden]
		public <DoTrigger>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x6002900")]
		[Address(RVA = "0x7FFFA0", Offset = "0x7FFFA0", VA = "0x7FFFA0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002901")]
		[Address(RVA = "0x7FFFA4", Offset = "0x7FFFA4", VA = "0x7FFFA4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002903")]
		[Address(RVA = "0x8000E4", Offset = "0x8000E4", VA = "0x8000E4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000086")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ParticleSystem _particle;

	[Token(Token = "0x4000087")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float _duration;

	[Token(Token = "0x4000088")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private SoundEffectEmitter _emitter;

	[Token(Token = "0x600006A")]
	[Address(RVA = "0x7FFDF0", Offset = "0x7FFDF0", VA = "0x7FFDF0")]
	private void Start()
	{
	}

	[Token(Token = "0x600006B")]
	[Address(RVA = "0x7FFF64", Offset = "0x7FFF64", VA = "0x7FFF64")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600006C")]
	[Address(RVA = "0x7FFEF0", Offset = "0x7FFEF0", VA = "0x7FFEF0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x664F7C", Offset = "0x664F7C")]
	private IEnumerator DoTrigger()
	{
		return null;
	}

	[Token(Token = "0x600006D")]
	[Address(RVA = "0x7FFF98", Offset = "0x7FFF98", VA = "0x7FFF98")]
	public ParticleEffectSoundTrigger()
	{
	}
}
[Token(Token = "0x2000015")]
public class SoundChannel : MonoBehaviour
{
	[Token(Token = "0x4000089")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Dictionary<SoundEffectChannelClassData, int> _channelAllocation;

	[Token(Token = "0x400008A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private AudioSource _audioSource;

	[Token(Token = "0x400008B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private AudioSourceTemplateData _template;

	[Token(Token = "0x400008C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private SoundEffectGroupData.Sound _sound;

	[Token(Token = "0x400008D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform _location;

	[Token(Token = "0x400008E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool _allocated;

	[Token(Token = "0x400008F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float _startTime;

	[Token(Token = "0x17000012")]
	public bool isPlaying
	{
		[Token(Token = "0x600006F")]
		[Address(RVA = "0x869258", Offset = "0x869258", VA = "0x869258")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000013")]
	public SoundEffectChannelClassData channelClass
	{
		[Token(Token = "0x6000070")]
		[Address(RVA = "0x869288", Offset = "0x869288", VA = "0x869288")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000014")]
	public float startTime
	{
		[Token(Token = "0x6000071")]
		[Address(RVA = "0x8692A0", Offset = "0x8692A0", VA = "0x8692A0")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000015")]
	public SoundEffectGroupData.Sound sound
	{
		[Token(Token = "0x6000073")]
		[Address(RVA = "0x86945C", Offset = "0x86945C", VA = "0x86945C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000016")]
	public Transform location
	{
		[Token(Token = "0x6000074")]
		[Address(RVA = "0x869464", Offset = "0x869464", VA = "0x869464")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600006E")]
	[Address(RVA = "0x869200", Offset = "0x869200", VA = "0x869200")]
	public void Awake()
	{
	}

	[Token(Token = "0x6000072")]
	[Address(RVA = "0x8692A8", Offset = "0x8692A8", VA = "0x8692A8")]
	public void OnDestroy()
	{
	}

	[Token(Token = "0x6000075")]
	[Address(RVA = "0x86946C", Offset = "0x86946C", VA = "0x86946C")]
	public static int GetNumberOfPlayingChannelsInClass(SoundEffectChannelClassData channelClass)
	{
		return default(int);
	}

	[Token(Token = "0x6000076")]
	[Address(RVA = "0x869510", Offset = "0x869510", VA = "0x869510")]
	public static string GetClassDescription()
	{
		return null;
	}

	[Token(Token = "0x6000077")]
	[Address(RVA = "0x8699EC", Offset = "0x8699EC", VA = "0x8699EC")]
	private void AllocateChannel()
	{
	}

	[Token(Token = "0x6000078")]
	[Address(RVA = "0x8692AC", Offset = "0x8692AC", VA = "0x8692AC")]
	private void ReleaseChannel()
	{
	}

	[Token(Token = "0x6000079")]
	[Address(RVA = "0x869CA0", Offset = "0x869CA0", VA = "0x869CA0")]
	public void Play(SoundEffectGroupData.Sound sound, [Optional] Transform location)
	{
	}

	[Token(Token = "0x600007A")]
	[Address(RVA = "0x86A09C", Offset = "0x86A09C", VA = "0x86A09C")]
	public void Stop()
	{
	}

	[Token(Token = "0x600007B")]
	[Address(RVA = "0x86A0D8", Offset = "0x86A0D8", VA = "0x86A0D8")]
	public void StopIfLooping()
	{
	}

	[Token(Token = "0x600007C")]
	[Address(RVA = "0x86A124", Offset = "0x86A124", VA = "0x86A124")]
	public void SetVolumePitchMultipliers(float volumeMultiplier, float pitchMultiplier)
	{
	}

	[Token(Token = "0x600007D")]
	[Address(RVA = "0x86A214", Offset = "0x86A214", VA = "0x86A214")]
	public void Update()
	{
	}

	[Token(Token = "0x600007E")]
	[Address(RVA = "0x86A358", Offset = "0x86A358", VA = "0x86A358")]
	public SoundChannel()
	{
	}
}
[Token(Token = "0x2000016")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x63CFD4", Offset = "0x63CFD4")]
public class SoundEffectChannelClassData : ScriptableObject
{
	[Token(Token = "0x4000090")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public int _maxChannels;

	[NonSerialized]
	[Token(Token = "0x4000091")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int _currentChannels;

	[Token(Token = "0x6000080")]
	[Address(RVA = "0x86B608", Offset = "0x86B608", VA = "0x86B608")]
	public SoundEffectChannelClassData()
	{
	}
}
[Token(Token = "0x2000017")]
public class SoundEffectEmitter : MonoBehaviour
{
	[Token(Token = "0x2000517")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x643C98", Offset = "0x643C98")]
	private sealed class <RunDistanceCheck>d__15 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002394")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002395")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002396")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SoundEffectEmitter <>4__this;

		[Token(Token = "0x1700020D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002908")]
			[Address(RVA = "0x86C034", Offset = "0x86C034", VA = "0x86C034", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700020E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600290A")]
			[Address(RVA = "0x86C0A4", Offset = "0x86C0A4", VA = "0x86C0A4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002905")]
		[Address(RVA = "0x86BE50", Offset = "0x86BE50", VA = "0x86BE50")]
		[DebuggerHidden]
		public <RunDistanceCheck>d__15(int <>1__state)
		{
		}

		[Token(Token = "0x6002906")]
		[Address(RVA = "0x86BF00", Offset = "0x86BF00", VA = "0x86BF00", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002907")]
		[Address(RVA = "0x86BF04", Offset = "0x86BF04", VA = "0x86BF04", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002909")]
		[Address(RVA = "0x86C03C", Offset = "0x86C03C", VA = "0x86C03C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000092")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private SoundEffect _soundEffectName;

	[Token(Token = "0x4000093")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float _maxDistance;

	[Token(Token = "0x4000094")]
	private const float WAIT_TIME = 0.3f;

	[Token(Token = "0x4000095")]
	private const float HYSTERESIS = 0.1f;

	[Token(Token = "0x4000096")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private bool _exit;

	[Token(Token = "0x4000097")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
	private bool _playing;

	[Token(Token = "0x4000098")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform _headset;

	[Token(Token = "0x4000099")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private SoundChannel _channel;

	[Token(Token = "0x400009A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static WaitForSeconds s_waitYield;

	[Token(Token = "0x6000081")]
	[Address(RVA = "0x86B610", Offset = "0x86B610", VA = "0x86B610")]
	private void Start()
	{
	}

	[Token(Token = "0x6000082")]
	[Address(RVA = "0x86B6B0", Offset = "0x86B6B0", VA = "0x86B6B0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000083")]
	[Address(RVA = "0x86B758", Offset = "0x86B758", VA = "0x86B758")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000084")]
	[Address(RVA = "0x86B800", Offset = "0x86B800", VA = "0x86B800")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000085")]
	[Address(RVA = "0x86B834", Offset = "0x86B834", VA = "0x86B834")]
	private void UpdateDistance()
	{
	}

	[Token(Token = "0x6000086")]
	[Address(RVA = "0x86BA54", Offset = "0x86BA54", VA = "0x86BA54")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x6000087")]
	[Address(RVA = "0x86BE0C", Offset = "0x86BE0C", VA = "0x86BE0C")]
	public void Restart()
	{
	}

	[Token(Token = "0x6000088")]
	[Address(RVA = "0x86B63C", Offset = "0x86B63C", VA = "0x86B63C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x664FE0", Offset = "0x664FE0")]
	private IEnumerator RunDistanceCheck()
	{
		return null;
	}

	[Token(Token = "0x6000089")]
	[Address(RVA = "0x86BE7C", Offset = "0x86BE7C", VA = "0x86BE7C")]
	public SoundEffectEmitter()
	{
	}
}
[Token(Token = "0x2000018")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x63D044", Offset = "0x63D044")]
public class SoundEffectGroupData : ScriptableObject
{
	[Serializable]
	[Token(Token = "0x2000518")]
	public class Sound
	{
		[Token(Token = "0x4002397")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[HideInInspector]
		[SerializeField]
		public HashedString _name;

		[Token(Token = "0x4002398")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		[SerializeField]
		public SoundEffectGroupData _group;

		[Token(Token = "0x4002399")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6638E0", Offset = "0x6638E0")]
		[SerializeField]
		public List<AudioClip> _clip;

		[Token(Token = "0x400239A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x66392C", Offset = "0x66392C")]
		[SerializeField]
		public float _delay;

		[Token(Token = "0x400239B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x663978", Offset = "0x663978")]
		[SerializeField]
		public bool _loop;

		[Token(Token = "0x400239C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6639C4", Offset = "0x6639C4")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6639C4", Offset = "0x6639C4")]
		public float _minVolume;

		[Token(Token = "0x400239D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x663A28", Offset = "0x663A28")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x663A28", Offset = "0x663A28")]
		public float _maxVolume;

		[Token(Token = "0x400239E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x663A8C", Offset = "0x663A8C")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x663A8C", Offset = "0x663A8C")]
		public float _minPitch;

		[Token(Token = "0x400239F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x663AF0", Offset = "0x663AF0")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x663AF0", Offset = "0x663AF0")]
		public float _maxPitch;

		[Token(Token = "0x40023A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x663B54", Offset = "0x663B54")]
		[SerializeField]
		public bool _followSource;

		[Token(Token = "0x40023A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x663BA0", Offset = "0x663BA0")]
		[SerializeField]
		public Vector3 _sourceOffset;

		[Token(Token = "0x40023A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x663BEC", Offset = "0x663BEC")]
		[SerializeField]
		public AudioSourceTemplateData _sourceTemplate;

		[Token(Token = "0x40023A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x663C38", Offset = "0x663C38")]
		[SerializeField]
		public SoundEffectChannelClassData _channelClass;

		[Token(Token = "0x600290B")]
		[Address(RVA = "0x869F04", Offset = "0x869F04", VA = "0x869F04")]
		public void Set(AudioSource src, AudioSourceTemplateData template)
		{
		}

		[Token(Token = "0x600290C")]
		[Address(RVA = "0x86A170", Offset = "0x86A170", VA = "0x86A170")]
		public void SetVolumePitch(AudioSource src, AudioSourceTemplateData template, float volumeMultiplier, float pitchMultiplier)
		{
		}

		[Token(Token = "0x600290D")]
		[Address(RVA = "0x86C5BC", Offset = "0x86C5BC", VA = "0x86C5BC")]
		public Sound()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000519")]
	public class SoundDictionaryEntry
	{
		[Token(Token = "0x40023A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x663C84", Offset = "0x663C84")]
		[SerializeField]
		public HashedString _soundName;

		[Token(Token = "0x40023A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x663CD0", Offset = "0x663CD0")]
		[SerializeField]
		public Sound _sound;

		[Token(Token = "0x600290E")]
		[Address(RVA = "0x86C63C", Offset = "0x86C63C", VA = "0x86C63C")]
		public SoundDictionaryEntry()
		{
		}
	}

	[Token(Token = "0x400009B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SoundDictionaryEntry[] _dictionary;

	[Token(Token = "0x400009C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x647560", Offset = "0x647560")]
	[SerializeField]
	public AudioSourceTemplateData _defaultSourceTemplate;

	[NonSerialized]
	[Token(Token = "0x400009D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	private Dictionary<int, Sound> _soundDictionary;

	[Token(Token = "0x600008B")]
	[Address(RVA = "0x86C0AC", Offset = "0x86C0AC", VA = "0x86C0AC")]
	public void BakeDictionary()
	{
	}

	[Token(Token = "0x600008C")]
	[Address(RVA = "0x86C464", Offset = "0x86C464", VA = "0x86C464")]
	public Sound GetInEditor(HashedString name)
	{
		return null;
	}

	[Token(Token = "0x600008D")]
	[Address(RVA = "0x86C520", Offset = "0x86C520", VA = "0x86C520")]
	public Sound Get(HashedString name)
	{
		return null;
	}

	[Token(Token = "0x600008E")]
	[Address(RVA = "0x86C5B4", Offset = "0x86C5B4", VA = "0x86C5B4")]
	public SoundEffectGroupData()
	{
	}
}
[Serializable]
[Token(Token = "0x2000019")]
public struct SoundEffect
{
	[Token(Token = "0x400009E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[SerializeField]
	private HashedString _soundName;

	[Token(Token = "0x17000017")]
	public HashedString name
	{
		[Token(Token = "0x600008F")]
		[Address(RVA = "0x6DE6E4", Offset = "0x6DE6E4", VA = "0x6DE6E4")]
		get
		{
			return default(HashedString);
		}
	}

	[Token(Token = "0x6000090")]
	[Address(RVA = "0x6DE6F0", Offset = "0x6DE6F0", VA = "0x6DE6F0")]
	public SoundChannel Play(Transform t)
	{
		return null;
	}

	[Token(Token = "0x6000091")]
	[Address(RVA = "0x6DE6F8", Offset = "0x6DE6F8", VA = "0x6DE6F8")]
	public void Stop(Transform t)
	{
	}

	[Token(Token = "0x6000092")]
	[Address(RVA = "0x6DE700", Offset = "0x6DE700", VA = "0x6DE700")]
	public void Stop(SoundChannel s)
	{
	}

	[Token(Token = "0x6000093")]
	[Address(RVA = "0x6DE704", Offset = "0x6DE704", VA = "0x6DE704")]
	public void Set(string soundName)
	{
	}
}
[Token(Token = "0x200001A")]
public class SoundEffectSystem : MonoBehaviour
{
	[Token(Token = "0x400009F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform _audioSourcePrefab;

	[Token(Token = "0x40000A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private int _maxChannels;

	[Token(Token = "0x40000A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private List<SoundEffectGroupData> _soundEffectGroup;

	[Token(Token = "0x40000A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool _warned;

	[Token(Token = "0x40000A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<SoundChannel> _channel;

	[Token(Token = "0x40000A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static SoundEffectSystem _instance;

	[Token(Token = "0x40000A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool _initialised;

	[Token(Token = "0x17000018")]
	public List<SoundChannel> channelList
	{
		[Token(Token = "0x6000094")]
		[Address(RVA = "0x86C644", Offset = "0x86C644", VA = "0x86C644")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000019")]
	public static SoundEffectSystem instance
	{
		[Token(Token = "0x6000095")]
		[Address(RVA = "0x86C64C", Offset = "0x86C64C", VA = "0x86C64C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000096")]
	[Address(RVA = "0x86C6B4", Offset = "0x86C6B4", VA = "0x86C6B4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000097")]
	[Address(RVA = "0x86CB78", Offset = "0x86CB78", VA = "0x86CB78")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000098")]
	[Address(RVA = "0x86C6B8", Offset = "0x86C6B8", VA = "0x86C6B8")]
	public void Init()
	{
	}

	[Token(Token = "0x6000099")]
	[Address(RVA = "0x86CC48", Offset = "0x86CC48", VA = "0x86CC48")]
	private void Start()
	{
	}

	[Token(Token = "0x600009A")]
	[Address(RVA = "0x86CC4C", Offset = "0x86CC4C", VA = "0x86CC4C")]
	public int GetChannelCountForObject(Transform t)
	{
		return default(int);
	}

	[Token(Token = "0x600009B")]
	[Address(RVA = "0x86CE0C", Offset = "0x86CE0C", VA = "0x86CE0C")]
	public static SoundChannel Play(SoundEffectGroupData.Sound sound, [Optional] Transform location)
	{
		return null;
	}

	[Token(Token = "0x600009C")]
	[Address(RVA = "0x86A990", Offset = "0x86A990", VA = "0x86A990")]
	public static void Stop(HashedString soundName, [Optional] Transform location)
	{
	}

	[Token(Token = "0x600009D")]
	[Address(RVA = "0x86A3E0", Offset = "0x86A3E0", VA = "0x86A3E0")]
	public static SoundChannel Play(HashedString soundName, [Optional] Transform location)
	{
		return null;
	}

	[Token(Token = "0x600009E")]
	[Address(RVA = "0x86D0E8", Offset = "0x86D0E8", VA = "0x86D0E8")]
	public static void PauseAll()
	{
	}

	[Token(Token = "0x600009F")]
	[Address(RVA = "0x86D0F4", Offset = "0x86D0F4", VA = "0x86D0F4")]
	public static void ResumeAll()
	{
	}

	[Token(Token = "0x60000A0")]
	[Address(RVA = "0x86BC90", Offset = "0x86BC90", VA = "0x86BC90")]
	public static SoundEffectGroupData.Sound GetEditorSoundData(HashedString soundName)
	{
		return null;
	}

	[Token(Token = "0x60000A1")]
	[Address(RVA = "0x86D100", Offset = "0x86D100", VA = "0x86D100")]
	private SoundChannel StopOldestChannel()
	{
		return null;
	}

	[Token(Token = "0x60000A2")]
	[Address(RVA = "0x86D2E4", Offset = "0x86D2E4", VA = "0x86D2E4")]
	private SoundChannel StopOldestChannelInClass(SoundEffectChannelClassData channelClass)
	{
		return null;
	}

	[Token(Token = "0x60000A3")]
	[Address(RVA = "0x86CF08", Offset = "0x86CF08", VA = "0x86CF08")]
	private SoundChannel FindFreeChannel(SoundEffectChannelClassData channelClass)
	{
		return null;
	}

	[Token(Token = "0x60000A4")]
	[Address(RVA = "0x86D518", Offset = "0x86D518", VA = "0x86D518")]
	public static List<string> GetSoundNamesList()
	{
		return null;
	}

	[Token(Token = "0x60000A5")]
	[Address(RVA = "0x86D760", Offset = "0x86D760", VA = "0x86D760")]
	public SoundEffectSystem()
	{
	}
}
[Token(Token = "0x200001B")]
public class TardisSnapshotFadeOut : MonoBehaviour
{
	[Token(Token = "0x40000A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private AudioMixerSnapshot enterTardis;

	[Token(Token = "0x60000A7")]
	[Address(RVA = "0x886BFC", Offset = "0x886BFC", VA = "0x886BFC")]
	private void Start()
	{
	}

	[Token(Token = "0x60000A8")]
	[Address(RVA = "0x886C00", Offset = "0x886C00", VA = "0x886C00")]
	private void FadeOut()
	{
	}

	[Token(Token = "0x60000A9")]
	[Address(RVA = "0x886C34", Offset = "0x886C34", VA = "0x886C34")]
	public TardisSnapshotFadeOut()
	{
	}
}
[Token(Token = "0x200001C")]
public class CullingCameraArea : MonoBehaviour
{
	[Token(Token = "0x40000A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private List<CullingZone> _visibleZone;

	[Token(Token = "0x1700001A")]
	public List<CullingZone> visibleZone
	{
		[Token(Token = "0x60000AB")]
		[Address(RVA = "0x7AFE34", Offset = "0x7AFE34", VA = "0x7AFE34")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60000AA")]
	[Address(RVA = "0x7AFD40", Offset = "0x7AFD40", VA = "0x7AFD40")]
	public void Awake()
	{
	}

	[Token(Token = "0x60000AC")]
	[Address(RVA = "0x7AFE3C", Offset = "0x7AFE3C", VA = "0x7AFE3C")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60000AD")]
	[Address(RVA = "0x7AFE40", Offset = "0x7AFE40", VA = "0x7AFE40")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x60000AE")]
	[Address(RVA = "0x7AFE44", Offset = "0x7AFE44", VA = "0x7AFE44")]
	public CullingCameraArea()
	{
	}
}
[Token(Token = "0x200001D")]
public class CullingViewController : MonoBehaviour
{
	[Token(Token = "0x40000A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private CullingZone[] _allZones;

	[Token(Token = "0x40000A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private VRTK_HeadsetCollision _headsetCollision;

	[Token(Token = "0x60000AF")]
	[Address(RVA = "0x7AFE4C", Offset = "0x7AFE4C", VA = "0x7AFE4C")]
	private void Start()
	{
	}

	[Token(Token = "0x60000B0")]
	[Address(RVA = "0x7AFF54", Offset = "0x7AFF54", VA = "0x7AFF54")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60000B1")]
	[Address(RVA = "0x7B0028", Offset = "0x7B0028", VA = "0x7B0028")]
	private void OnHeadsetCollisionEnded(object sender, HeadsetCollisionEventArgs e)
	{
	}

	[Token(Token = "0x60000B2")]
	[Address(RVA = "0x7B002C", Offset = "0x7B002C", VA = "0x7B002C")]
	private void OnHeadsetCollisionDetect(object sender, HeadsetCollisionEventArgs e)
	{
	}

	[Token(Token = "0x60000B3")]
	[Address(RVA = "0x7B01A4", Offset = "0x7B01A4", VA = "0x7B01A4")]
	private void Update()
	{
	}

	[Token(Token = "0x60000B4")]
	[Address(RVA = "0x7B0034", Offset = "0x7B0034", VA = "0x7B0034")]
	private void OnHeadsetEnter(Collider other)
	{
	}

	[Token(Token = "0x60000B5")]
	[Address(RVA = "0x7B0418", Offset = "0x7B0418", VA = "0x7B0418")]
	public CullingViewController()
	{
	}
}
[Token(Token = "0x200001E")]
public class CullingZone : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200051A")]
	private struct Root
	{
		[Token(Token = "0x40023A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public GameObject _root;

		[Token(Token = "0x40023A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public bool _includeChildren;

		[Token(Token = "0x40023A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<GameObject> _excludeRoot;
	}

	[Token(Token = "0x40000AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private List<Root> _cullingRoot;

	[Token(Token = "0x40000AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private bool _initiallyShowing;

	[Token(Token = "0x40000AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<GameObject, int> _originalLayer;

	[Token(Token = "0x40000AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool _showing;

	[Token(Token = "0x40000AE")]
	private const string _hiddenLayerName = "Cameras";

	[Token(Token = "0x40000AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int _hiddenLayerId;

	[Token(Token = "0x40000B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private bool _testToggle;

	[Token(Token = "0x60000B6")]
	[Address(RVA = "0x7B0420", Offset = "0x7B0420", VA = "0x7B0420")]
	private void Awake()
	{
	}

	[Token(Token = "0x60000B7")]
	[Address(RVA = "0x7B0478", Offset = "0x7B0478", VA = "0x7B0478")]
	private void Start()
	{
	}

	[Token(Token = "0x60000B8")]
	[Address(RVA = "0x7B047C", Offset = "0x7B047C", VA = "0x7B047C")]
	private void ClearLayerState()
	{
	}

	[Token(Token = "0x60000B9")]
	[Address(RVA = "0x7B04E4", Offset = "0x7B04E4", VA = "0x7B04E4")]
	private void SetToLayer(GameObject root, int layerId, bool includeChildren, List<GameObject> excludeRoot)
	{
	}

	[Token(Token = "0x60000BA")]
	[Address(RVA = "0x7B062C", Offset = "0x7B062C", VA = "0x7B062C")]
	private void SaveLayerState(GameObject root, bool includeChildren, List<GameObject> excludeRoot)
	{
	}

	[Token(Token = "0x60000BB")]
	[Address(RVA = "0x7B0810", Offset = "0x7B0810", VA = "0x7B0810")]
	private void RestoreLayerState(GameObject root, bool includeChildren, List<GameObject> excludeRoot)
	{
	}

	[Token(Token = "0x60000BC")]
	[Address(RVA = "0x7B0414", Offset = "0x7B0414", VA = "0x7B0414")]
	public void Hide()
	{
	}

	[Token(Token = "0x60000BD")]
	[Address(RVA = "0x7B02C0", Offset = "0x7B02C0", VA = "0x7B02C0")]
	public void Show()
	{
	}

	[Token(Token = "0x60000BE")]
	[Address(RVA = "0x7B0988", Offset = "0x7B0988", VA = "0x7B0988")]
	public void Update()
	{
	}

	[Token(Token = "0x60000BF")]
	[Address(RVA = "0x7B09A4", Offset = "0x7B09A4", VA = "0x7B09A4")]
	public CullingZone()
	{
	}
}
[Token(Token = "0x200001F")]
public interface IProjectileHit
{
	[Token(Token = "0x60000C0")]
	bool OnProjectileHit(Projectile projectile);
}
[Token(Token = "0x2000020")]
public class Projectile : MonoBehaviour
{
	[Token(Token = "0x40000B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float _velocity;

	[Token(Token = "0x40000B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float _lifeTime;

	[Token(Token = "0x40000B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float _destroyTime;

	[Token(Token = "0x40000B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private float _damageHitPoints;

	[Token(Token = "0x40000B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Transform _firingPrefab;

	[Token(Token = "0x40000B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Transform _destroyPrefab;

	[Token(Token = "0x40000B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Transform _hitSuccessPrefab;

	[Token(Token = "0x40000B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Transform _hitFailPrefab;

	[Token(Token = "0x40000B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6476DC", Offset = "0x6476DC")]
	[SerializeField]
	private string _ignoreLayerName;

	[Token(Token = "0x40000BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x647728", Offset = "0x647728")]
	[SerializeField]
	private string _triggerLayerName;

	[Token(Token = "0x40000BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float _lifeTimer;

	[Token(Token = "0x40000BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Rigidbody _rigidbody;

	[Token(Token = "0x40000BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Transform _firingObject;

	[Token(Token = "0x40000BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private LifetimeObjectManager _lifetimeObjectManager;

	[Token(Token = "0x40000BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float _hitTimer;

	[Token(Token = "0x40000C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private bool _hit;

	[Token(Token = "0x40000C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private int _ignoreLayer;

	[Token(Token = "0x40000C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private int _triggerLayer;

	[Token(Token = "0x40000C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Vector3 _forwardDirection;

	[Token(Token = "0x1700001B")]
	public float damageHitPoints
	{
		[Token(Token = "0x60000C1")]
		[Address(RVA = "0x8E0074", Offset = "0x8E0074", VA = "0x8E0074")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700001C")]
	public Transform firingObject
	{
		[Token(Token = "0x60000C2")]
		[Address(RVA = "0x8E007C", Offset = "0x8E007C", VA = "0x8E007C")]
		get
		{
			return null;
		}
		[Token(Token = "0x60000C3")]
		[Address(RVA = "0x8DB460", Offset = "0x8DB460", VA = "0x8DB460")]
		set
		{
		}
	}

	[Token(Token = "0x1700001D")]
	public LifetimeObjectManager lifetimeObjectManager
	{
		[Token(Token = "0x60000C4")]
		[Address(RVA = "0x8DB468", Offset = "0x8DB468", VA = "0x8DB468")]
		set
		{
		}
	}

	[Token(Token = "0x60000C5")]
	[Address(RVA = "0x8E0084", Offset = "0x8E0084", VA = "0x8E0084")]
	public void Start()
	{
	}

	[Token(Token = "0x60000C6")]
	[Address(RVA = "0x8E0110", Offset = "0x8E0110", VA = "0x8E0110")]
	public void Reset()
	{
	}

	[Token(Token = "0x60000C7")]
	[Address(RVA = "0x8E0BBC", Offset = "0x8E0BBC", VA = "0x8E0BBC")]
	public void Update()
	{
	}

	[Token(Token = "0x60000C8")]
	[Address(RVA = "0x8E0E38", Offset = "0x8E0E38", VA = "0x8E0E38")]
	public void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60000C9")]
	[Address(RVA = "0x8E1088", Offset = "0x8E1088", VA = "0x8E1088")]
	public void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x60000CA")]
	[Address(RVA = "0x8E04D0", Offset = "0x8E04D0", VA = "0x8E04D0")]
	public void ProcessCollide(Collider other, Vector3 hitPoint)
	{
	}

	[Token(Token = "0x60000CB")]
	[Address(RVA = "0x8E1240", Offset = "0x8E1240", VA = "0x8E1240")]
	public Projectile()
	{
	}
}
[Token(Token = "0x2000021")]
public class swarmer : MonoBehaviour
{
	[Token(Token = "0x40000C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Transform player;

	[Token(Token = "0x40000C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float heightScale;

	[Token(Token = "0x40000C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float widthScale;

	[Token(Token = "0x40000C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float xScale;

	[Token(Token = "0x40000C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float yScale;

	[Token(Token = "0x40000C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3 startingPos;

	[Token(Token = "0x60000CC")]
	[Address(RVA = "0x14D548C", Offset = "0x14D548C", VA = "0x14D548C")]
	private void Start()
	{
	}

	[Token(Token = "0x60000CD")]
	[Address(RVA = "0x14D5508", Offset = "0x14D5508", VA = "0x14D5508")]
	private void Update()
	{
	}

	[Token(Token = "0x60000CE")]
	[Address(RVA = "0x14D56E0", Offset = "0x14D56E0", VA = "0x14D56E0")]
	public swarmer()
	{
	}
}
[Token(Token = "0x2000022")]
public class ParticleAttractor : MonoBehaviour
{
	[Token(Token = "0x40000CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ParticleSystem pSys;

	[Token(Token = "0x40000CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float attraction;

	[Token(Token = "0x40000CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool worldSpaceParticles;

	[Token(Token = "0x40000CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private ParticleSystem.Particle[] m_Particles;

	[Token(Token = "0x60000CF")]
	[Address(RVA = "0x7FF928", Offset = "0x7FF928", VA = "0x7FF928")]
	private void Start()
	{
	}

	[Token(Token = "0x60000D0")]
	[Address(RVA = "0x7FF9F0", Offset = "0x7FF9F0", VA = "0x7FF9F0")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60000D1")]
	[Address(RVA = "0x7FFD0C", Offset = "0x7FFD0C", VA = "0x7FFD0C")]
	private void InitializeIfNeeded()
	{
	}

	[Token(Token = "0x60000D2")]
	[Address(RVA = "0x7FFDE0", Offset = "0x7FFDE0", VA = "0x7FFDE0")]
	public ParticleAttractor()
	{
	}
}
[Token(Token = "0x2000023")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x63D0B4", Offset = "0x63D0B4")]
public class RigidbodyParticleWind : MonoBehaviour
{
	[Token(Token = "0x40000CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform obj;

	[Token(Token = "0x40000CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ParticleSystem particlesSystem;

	[Token(Token = "0x40000D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private ParticleSystem.Particle[] particles;

	[Token(Token = "0x40000D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Rigidbody myRigidbody;

	[Token(Token = "0x60000D3")]
	[Address(RVA = "0x9D03E8", Offset = "0x9D03E8", VA = "0x9D03E8")]
	private void Start()
	{
	}

	[Token(Token = "0x60000D4")]
	[Address(RVA = "0x9D067C", Offset = "0x9D067C", VA = "0x9D067C")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60000D5")]
	[Address(RVA = "0x9D04A8", Offset = "0x9D04A8", VA = "0x9D04A8")]
	private void SetupParticleSystem()
	{
	}

	[Token(Token = "0x60000D6")]
	[Address(RVA = "0x9D08B4", Offset = "0x9D08B4", VA = "0x9D08B4")]
	public RigidbodyParticleWind()
	{
	}
}
[Serializable]
[Token(Token = "0x2000024")]
public struct DataEntry
{
	[Token(Token = "0x40000D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public string _name;

	[Token(Token = "0x40000D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public Value _value;

	[Token(Token = "0x60000D7")]
	[Address(RVA = "0x6DDCB4", Offset = "0x6DDCB4", VA = "0x6DDCB4")]
	public DataEntry(string name, Value value)
	{
	}
}
[Serializable]
[Token(Token = "0x2000025")]
public class SaveState
{
	[Token(Token = "0x40000D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string _currentSceneName;

	[Token(Token = "0x40000D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string _currentCheckpointName;

	[Token(Token = "0x40000D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<DataEntry> _state;

	[Token(Token = "0x60000D8")]
	[Address(RVA = "0x8601B0", Offset = "0x8601B0", VA = "0x8601B0")]
	public SaveState()
	{
	}
}
[Serializable]
[Token(Token = "0x2000026")]
public class Value
{
	[Token(Token = "0x200051B")]
	public enum Type
	{
		[Token(Token = "0x40023AA")]
		Flag,
		[Token(Token = "0x40023AB")]
		Integer,
		[Token(Token = "0x40023AC")]
		numTypes
	}

	[Token(Token = "0x40000D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Value valueDefaultTrue;

	[Token(Token = "0x40000D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static Value valueDefaultFalse;

	[Token(Token = "0x40000D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Type _type;

	[Token(Token = "0x40000DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private int _counter;

	[Token(Token = "0x1700001E")]
	public bool flag
	{
		[Token(Token = "0x60000DD")]
		[Address(RVA = "0x8FDC0C", Offset = "0x8FDC0C", VA = "0x8FDC0C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60000DE")]
		[Address(RVA = "0x8FDC1C", Offset = "0x8FDC1C", VA = "0x8FDC1C")]
		set
		{
		}
	}

	[Token(Token = "0x1700001F")]
	public int counter
	{
		[Token(Token = "0x60000DF")]
		[Address(RVA = "0x8FDC48", Offset = "0x8FDC48", VA = "0x8FDC48")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60000E0")]
		[Address(RVA = "0x8FDC50", Offset = "0x8FDC50", VA = "0x8FDC50")]
		set
		{
		}
	}

	[Token(Token = "0x17000020")]
	public Type type
	{
		[Token(Token = "0x60000E1")]
		[Address(RVA = "0x8FDC58", Offset = "0x8FDC58", VA = "0x8FDC58")]
		get
		{
			return default(Type);
		}
		[Token(Token = "0x60000E2")]
		[Address(RVA = "0x8FDC60", Offset = "0x8FDC60", VA = "0x8FDC60")]
		set
		{
		}
	}

	[Token(Token = "0x60000D9")]
	[Address(RVA = "0x8FDADC", Offset = "0x8FDADC", VA = "0x8FDADC")]
	public static void Init()
	{
	}

	[Token(Token = "0x60000DA")]
	[Address(RVA = "0x8FDBB4", Offset = "0x8FDBB4", VA = "0x8FDBB4")]
	public Value()
	{
	}

	[Token(Token = "0x60000DB")]
	[Address(RVA = "0x8FDBDC", Offset = "0x8FDBDC", VA = "0x8FDBDC")]
	public Value(int counter)
	{
	}

	[Token(Token = "0x60000DC")]
	[Address(RVA = "0x8FDB78", Offset = "0x8FDB78", VA = "0x8FDB78")]
	public Value(bool flag)
	{
	}
}
[Token(Token = "0x2000027")]
public class GameState : MonoBehaviour, IEnumerable
{
	[Token(Token = "0x200051C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x643CA8", Offset = "0x643CA8")]
	private sealed class <>c__DisplayClass28_0
	{
		[Token(Token = "0x40023AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string checkpointName;

		[Token(Token = "0x600290F")]
		[Address(RVA = "0x83E8E4", Offset = "0x83E8E4", VA = "0x83E8E4")]
		public <>c__DisplayClass28_0()
		{
		}

		[Token(Token = "0x6002910")]
		[Address(RVA = "0x83E990", Offset = "0x83E990", VA = "0x83E990")]
		internal bool <RestartCheckpoint>b__0(StageCheckpoint cp)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x40000DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Dictionary<string, Value> _state;

	[Token(Token = "0x40000DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static GameState _instance;

	[Token(Token = "0x40000DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private StageCheckpoint _currentCheckpoint;

	[Token(Token = "0x40000DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private SaveState _saveState;

	[Token(Token = "0x17000021")]
	public static GameState instance
	{
		[Token(Token = "0x60000E3")]
		[Address(RVA = "0x83D5F8", Offset = "0x83D5F8", VA = "0x83D5F8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000022")]
	public StageCheckpoint currentCheckpoint
	{
		[Token(Token = "0x60000E6")]
		[Address(RVA = "0x83D6E8", Offset = "0x83D6E8", VA = "0x83D6E8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60000E4")]
	[Address(RVA = "0x83D648", Offset = "0x83D648", VA = "0x83D648")]
	public SaveState GetSaveState()
	{
		return null;
	}

	[Token(Token = "0x60000E5")]
	[Address(RVA = "0x83D650", Offset = "0x83D650", VA = "0x83D650", Slot = "4")]
	public IEnumerator GetEnumerator()
	{
		return null;
	}

	[Token(Token = "0x60000E7")]
	[Address(RVA = "0x83D6F0", Offset = "0x83D6F0", VA = "0x83D6F0")]
	public Value Get(string name, int defaultValue)
	{
		return null;
	}

	[Token(Token = "0x60000E8")]
	[Address(RVA = "0x83D7A8", Offset = "0x83D7A8", VA = "0x83D7A8")]
	public Value Get(string name, bool defaultValue)
	{
		return null;
	}

	[Token(Token = "0x60000E9")]
	[Address(RVA = "0x83D85C", Offset = "0x83D85C", VA = "0x83D85C")]
	public void Set(string name, Value val)
	{
	}

	[Token(Token = "0x60000EA")]
	[Address(RVA = "0x83D8D4", Offset = "0x83D8D4", VA = "0x83D8D4")]
	public void Increment(string name)
	{
	}

	[Token(Token = "0x60000EB")]
	[Address(RVA = "0x83D958", Offset = "0x83D958", VA = "0x83D958")]
	public void Decrement(string name)
	{
	}

	[Token(Token = "0x60000EC")]
	[Address(RVA = "0x83D9DC", Offset = "0x83D9DC", VA = "0x83D9DC")]
	public void Invert(string name)
	{
	}

	[Token(Token = "0x60000ED")]
	[Address(RVA = "0x83DA64", Offset = "0x83DA64", VA = "0x83DA64")]
	public void Clear()
	{
	}

	[Token(Token = "0x60000EE")]
	[Address(RVA = "0x83DAC4", Offset = "0x83DAC4", VA = "0x83DAC4")]
	public void Clear(string name)
	{
	}

	[Token(Token = "0x60000EF")]
	[Address(RVA = "0x83DB34", Offset = "0x83DB34", VA = "0x83DB34")]
	private void Awake()
	{
	}

	[Token(Token = "0x60000F0")]
	[Address(RVA = "0x83DB88", Offset = "0x83DB88", VA = "0x83DB88")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60000F1")]
	[Address(RVA = "0x83DBD8", Offset = "0x83DBD8", VA = "0x83DBD8")]
	public void SetCurrentCheckpoint(StageCheckpoint checkpoint)
	{
	}

	[Token(Token = "0x60000F2")]
	[Address(RVA = "0x83DE68", Offset = "0x83DE68", VA = "0x83DE68")]
	public string GetCurrentCheckpointName()
	{
		return null;
	}

	[Token(Token = "0x60000F3")]
	[Address(RVA = "0x83DEB0", Offset = "0x83DEB0", VA = "0x83DEB0")]
	private void BackupStateData(ref List<DataEntry> target)
	{
	}

	[Token(Token = "0x60000F4")]
	[Address(RVA = "0x83E07C", Offset = "0x83E07C", VA = "0x83E07C")]
	private void RestoreStateData(List<DataEntry> source)
	{
	}

	[Token(Token = "0x60000F5")]
	[Address(RVA = "0x83DCC8", Offset = "0x83DCC8", VA = "0x83DCC8")]
	private void SaveToSaveState(string checkpointName)
	{
	}

	[Token(Token = "0x60000F6")]
	[Address(RVA = "0x83E530", Offset = "0x83E530", VA = "0x83E530")]
	public static void LoadSavedGame()
	{
	}

	[Token(Token = "0x60000F7")]
	[Address(RVA = "0x83E5AC", Offset = "0x83E5AC", VA = "0x83E5AC")]
	private void LoadFromSaveState()
	{
	}

	[Token(Token = "0x60000F8")]
	[Address(RVA = "0x83E674", Offset = "0x83E674", VA = "0x83E674")]
	public void RestartCurrentCheckpoint()
	{
	}

	[Token(Token = "0x60000F9")]
	[Address(RVA = "0x83E748", Offset = "0x83E748", VA = "0x83E748")]
	public void RestartCheckpoint(string checkpointName)
	{
	}

	[Token(Token = "0x60000FA")]
	[Address(RVA = "0x83E8EC", Offset = "0x83E8EC", VA = "0x83E8EC")]
	public GameState()
	{
	}

	[Token(Token = "0x60000FB")]
	[Address(RVA = "0x83E95C", Offset = "0x83E95C", VA = "0x83E95C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x666044", Offset = "0x666044")]
	private void <RestartCurrentCheckpoint>b__27_0()
	{
	}
}
[Token(Token = "0x2000028")]
public class HealthIndicator : MonoBehaviour, IDamageable
{
	[Serializable]
	[Token(Token = "0x200051D")]
	private struct AudioEffect
	{
		[Token(Token = "0x40023AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string _parameterName;

		[Token(Token = "0x40023AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float _minimumValue;

		[Token(Token = "0x40023B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float _maximumValue;
	}

	[Token(Token = "0x40000DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x647774", Offset = "0x647774")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x647774", Offset = "0x647774")]
	[SerializeField]
	private HealthBar _healthBar;

	[Token(Token = "0x40000E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6477E4", Offset = "0x6477E4")]
	[SerializeField]
	private Transform _playerPosition;

	[Token(Token = "0x40000E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x647830", Offset = "0x647830")]
	[SerializeField]
	private Image _healthOverlay;

	[Token(Token = "0x40000E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64787C", Offset = "0x64787C")]
	[SerializeField]
	private float _hitIndicatorTime;

	[Token(Token = "0x40000E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6478C8", Offset = "0x6478C8")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6478C8", Offset = "0x6478C8")]
	[SerializeField]
	private PostProcessProfile _healthLossPostProcessProfile;

	[Token(Token = "0x40000E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x647938", Offset = "0x647938")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x647938", Offset = "0x647938")]
	[SerializeField]
	private Texture2D _lutFullHealth;

	[Token(Token = "0x40000E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6479A8", Offset = "0x6479A8")]
	[SerializeField]
	private Texture2D _lutZeroHealth;

	[Token(Token = "0x40000E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6479F4", Offset = "0x6479F4")]
	[SerializeField]
	private List<AudioEffect> _audioEffect;

	[Token(Token = "0x40000E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private AudioMixer _audioMixer;

	[Token(Token = "0x40000E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x647A50", Offset = "0x647A50")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x647A50", Offset = "0x647A50")]
	[SerializeField]
	private bool _handlePlayerDeath;

	[Token(Token = "0x40000E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x647AC0", Offset = "0x647AC0")]
	[SerializeField]
	private Transform _playerDeathEnableObject;

	[Token(Token = "0x40000EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x647B0C", Offset = "0x647B0C")]
	[SerializeField]
	private Transform _playerDeathDisableObject;

	[Token(Token = "0x40000EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x647B58", Offset = "0x647B58")]
	[SerializeField]
	private List<PlayableDirector> _playerDeathStopTimeline;

	[Token(Token = "0x40000EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x647BA4", Offset = "0x647BA4")]
	[SerializeField]
	private float _playerDeathRespawnTime;

	[Token(Token = "0x40000ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x647BF0", Offset = "0x647BF0")]
	[SerializeField]
	private float _healthSlider;

	[Token(Token = "0x40000EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Material _overlayMaterial;

	[Token(Token = "0x40000EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private PostProcessVolume _volume;

	[Token(Token = "0x40000F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Grain _grainEffect;

	[Token(Token = "0x40000F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Vector2 _hitIndicatorAngle;

	[Token(Token = "0x40000F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private float _hitIndicatorStrength;

	[Token(Token = "0x40000F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private float _deathSpawnTimer;

	[Token(Token = "0x40000F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private bool _dead;

	[Token(Token = "0x40000F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB1")]
	private bool _processedDeath;

	[Token(Token = "0x40000F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private ColourGrading _grading;

	[Token(Token = "0x40000F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private bool _postSetupDone;

	[Token(Token = "0x60000FC")]
	[Address(RVA = "0x844D10", Offset = "0x844D10", VA = "0x844D10")]
	private void Start()
	{
	}

	[Token(Token = "0x60000FD")]
	[Address(RVA = "0x844DE0", Offset = "0x844DE0", VA = "0x844DE0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60000FE")]
	[Address(RVA = "0x844F30", Offset = "0x844F30", VA = "0x844F30")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x60000FF")]
	[Address(RVA = "0x844FD0", Offset = "0x844FD0", VA = "0x844FD0", Slot = "4")]
	public void OnDamaged(float hp, Transform source)
	{
	}

	[Token(Token = "0x6000100")]
	[Address(RVA = "0x84513C", Offset = "0x84513C", VA = "0x84513C", Slot = "5")]
	public void OnDestroyed(Transform source)
	{
	}

	[Token(Token = "0x6000101")]
	[Address(RVA = "0x84514C", Offset = "0x84514C", VA = "0x84514C")]
	private void PerformPlayerDeath()
	{
	}

	[Token(Token = "0x6000102")]
	[Address(RVA = "0x845350", Offset = "0x845350", VA = "0x845350")]
	public void Update()
	{
	}

	[Token(Token = "0x6000103")]
	[Address(RVA = "0x845B00", Offset = "0x845B00", VA = "0x845B00")]
	public HealthIndicator()
	{
	}
}
[Token(Token = "0x2000029")]
public static class CopyExtension
{
	[Token(Token = "0x40000F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int BUFFER_LENGTH;

	[Token(Token = "0x6000104")]
	[Address(RVA = "0x7AF0B8", Offset = "0x7AF0B8", VA = "0x7AF0B8")]
	public static void CopyTo(this Stream input, Stream output)
	{
	}
}
[Token(Token = "0x200002A")]
public abstract class SaveImplementation
{
	[Token(Token = "0x200051E")]
	public delegate void PrecacheComplete(bool success);

	[Token(Token = "0x40000F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private bool _inSaveSection;

	[Token(Token = "0x17000023")]
	public abstract bool operationHasFinished
	{
		[Token(Token = "0x6000115")]
		get;
	}

	[Token(Token = "0x17000024")]
	public abstract bool isInitialized
	{
		[Token(Token = "0x6000116")]
		get;
	}

	[Token(Token = "0x17000025")]
	public abstract uint errorCode
	{
		[Token(Token = "0x6000117")]
		get;
	}

	[Token(Token = "0x17000026")]
	public bool inSaveSection
	{
		[Token(Token = "0x6000118")]
		[Address(RVA = "0x85C01C", Offset = "0x85C01C", VA = "0x85C01C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000106")]
	public abstract void Init();

	[Token(Token = "0x6000107")]
	public abstract void Mount(bool writable, bool async = false);

	[Token(Token = "0x6000108")]
	public abstract void Unmount();

	[Token(Token = "0x6000109")]
	[Address(RVA = "0x85DDDC", Offset = "0x85DDDC", VA = "0x85DDDC")]
	public void EnterSaveSection()
	{
	}

	[Token(Token = "0x600010A")]
	[Address(RVA = "0x85C918", Offset = "0x85C918", VA = "0x85C918")]
	public void LeaveSaveSection()
	{
	}

	[Token(Token = "0x600010B")]
	public abstract string GetNamedFilePath(string name);

	[Token(Token = "0x600010C")]
	public abstract string GetSlotFileName(int slot);

	[Token(Token = "0x600010D")]
	public abstract bool SaveFileExists(int slot);

	[Token(Token = "0x600010E")]
	public abstract Stream CreateSaveGameStream(string filename);

	[Token(Token = "0x600010F")]
	public abstract Stream CreateSaveGameStream(int slot);

	[Token(Token = "0x6000110")]
	public abstract Stream CreateLoadGameStream(string filename);

	[Token(Token = "0x6000111")]
	public abstract Stream CreateLoadGameStream(int slot);

	[Token(Token = "0x6000112")]
	public abstract void Flush(Stream stream);

	[Token(Token = "0x6000113")]
	public abstract void PrecacheFile(string filename, [Optional] PrecacheComplete complete);

	[Token(Token = "0x6000114")]
	public abstract void PrecacheFile(int slot, [Optional] PrecacheComplete complete);

	[Token(Token = "0x6000119")]
	[Address(RVA = "0x85EBEC", Offset = "0x85EBEC", VA = "0x85EBEC")]
	protected SaveImplementation()
	{
	}
}
[Token(Token = "0x200002B")]
public class PersistentDataSaveImplementation : SaveImplementation
{
	[Token(Token = "0x40000FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private float _time;

	[Token(Token = "0x17000027")]
	public override bool isInitialized
	{
		[Token(Token = "0x600011B")]
		[Address(RVA = "0x8D0A44", Offset = "0x8D0A44", VA = "0x8D0A44", Slot = "18")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000028")]
	public override bool operationHasFinished
	{
		[Token(Token = "0x6000128")]
		[Address(RVA = "0x8D0DE0", Offset = "0x8D0DE0", VA = "0x8D0DE0", Slot = "17")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000029")]
	public override uint errorCode
	{
		[Token(Token = "0x6000129")]
		[Address(RVA = "0x8D0DE8", Offset = "0x8D0DE8", VA = "0x8D0DE8", Slot = "19")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x600011A")]
	[Address(RVA = "0x8D09B4", Offset = "0x8D09B4", VA = "0x8D09B4", Slot = "4")]
	public override void Init()
	{
	}

	[Token(Token = "0x600011C")]
	[Address(RVA = "0x8D0A4C", Offset = "0x8D0A4C", VA = "0x8D0A4C", Slot = "5")]
	public override void Mount(bool writable, bool async = false)
	{
	}

	[Token(Token = "0x600011D")]
	[Address(RVA = "0x8D0A50", Offset = "0x8D0A50", VA = "0x8D0A50", Slot = "6")]
	public override void Unmount()
	{
	}

	[Token(Token = "0x600011E")]
	[Address(RVA = "0x8D0A54", Offset = "0x8D0A54", VA = "0x8D0A54", Slot = "7")]
	public override string GetNamedFilePath(string name)
	{
		return null;
	}

	[Token(Token = "0x600011F")]
	[Address(RVA = "0x8D0AB0", Offset = "0x8D0AB0", VA = "0x8D0AB0", Slot = "8")]
	public override string GetSlotFileName(int slot)
	{
		return null;
	}

	[Token(Token = "0x6000120")]
	[Address(RVA = "0x8D0B38", Offset = "0x8D0B38", VA = "0x8D0B38", Slot = "9")]
	public override bool SaveFileExists(int slot)
	{
		return default(bool);
	}

	[Token(Token = "0x6000121")]
	[Address(RVA = "0x8D0B78", Offset = "0x8D0B78", VA = "0x8D0B78", Slot = "11")]
	public override Stream CreateSaveGameStream(int slot)
	{
		return null;
	}

	[Token(Token = "0x6000122")]
	[Address(RVA = "0x8D0C1C", Offset = "0x8D0C1C", VA = "0x8D0C1C", Slot = "10")]
	public override Stream CreateSaveGameStream(string filename)
	{
		return null;
	}

	[Token(Token = "0x6000123")]
	[Address(RVA = "0x8D0C84", Offset = "0x8D0C84", VA = "0x8D0C84", Slot = "13")]
	public override Stream CreateLoadGameStream(int slot)
	{
		return null;
	}

	[Token(Token = "0x6000124")]
	[Address(RVA = "0x8D0CD0", Offset = "0x8D0CD0", VA = "0x8D0CD0", Slot = "12")]
	public override Stream CreateLoadGameStream(string filename)
	{
		return null;
	}

	[Token(Token = "0x6000125")]
	[Address(RVA = "0x8D0D4C", Offset = "0x8D0D4C", VA = "0x8D0D4C", Slot = "14")]
	public override void Flush(Stream stream)
	{
	}

	[Token(Token = "0x6000126")]
	[Address(RVA = "0x8D0D50", Offset = "0x8D0D50", VA = "0x8D0D50", Slot = "15")]
	public override void PrecacheFile(string filename, [Optional] PrecacheComplete complete)
	{
	}

	[Token(Token = "0x6000127")]
	[Address(RVA = "0x8D0D98", Offset = "0x8D0D98", VA = "0x8D0D98", Slot = "16")]
	public override void PrecacheFile(int slot, [Optional] PrecacheComplete complete)
	{
	}

	[Token(Token = "0x600012A")]
	[Address(RVA = "0x8D0DF0", Offset = "0x8D0DF0", VA = "0x8D0DF0")]
	public PersistentDataSaveImplementation()
	{
	}
}
[Token(Token = "0x200002C")]
public class WaitForSaveReady : CustomYieldInstruction
{
	[Token(Token = "0x40000FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private SaveImplementation _si;

	[Token(Token = "0x1700002A")]
	public override bool keepWaiting
	{
		[Token(Token = "0x600012C")]
		[Address(RVA = "0x80DA74", Offset = "0x80DA74", VA = "0x80DA74", Slot = "7")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x600012B")]
	[Address(RVA = "0x80DA48", Offset = "0x80DA48", VA = "0x80DA48")]
	public WaitForSaveReady(SaveImplementation si)
	{
	}
}
[Token(Token = "0x200002D")]
public class SaveGame
{
	[Token(Token = "0x200051F")]
	public delegate void SaveCompleteDelegate(uint errorCode);

	[Serializable]
	[Token(Token = "0x2000520")]
	public class SaveGameData
	{
		[Token(Token = "0x40023B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public BuildInfo buildInfo;

		[Token(Token = "0x40023B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public WhoSaveData saveData;

		[Token(Token = "0x6002919")]
		[Address(RVA = "0x85C47C", Offset = "0x85C47C", VA = "0x85C47C")]
		public SaveGameData()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000521")]
	public class BuildInfo
	{
		[Token(Token = "0x40023B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int majorVersion;

		[Token(Token = "0x40023B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int minorVersion;

		[Token(Token = "0x40023B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string platform;

		[Token(Token = "0x40023B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string gpu;

		[Token(Token = "0x40023B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string os;

		[Token(Token = "0x40023B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int ram;

		[Token(Token = "0x600291A")]
		[Address(RVA = "0x85C484", Offset = "0x85C484", VA = "0x85C484")]
		public BuildInfo()
		{
		}

		[Token(Token = "0x600291B")]
		[Address(RVA = "0x85E6D4", Offset = "0x85E6D4", VA = "0x85E6D4")]
		public bool IsSupported()
		{
			return default(bool);
		}
	}

	[Token(Token = "0x2000522")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x643CB8", Offset = "0x643CB8")]
	private sealed class <DoSave>d__23 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40023B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40023BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40023BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int slot;

		[Token(Token = "0x40023BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public MemoryStream memoryStream;

		[Token(Token = "0x40023BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public SaveCompleteDelegate saveComplete;

		[Token(Token = "0x40023BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Thread <t>5__2;

		[Token(Token = "0x1700020F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600291F")]
			[Address(RVA = "0x85E65C", Offset = "0x85E65C", VA = "0x85E65C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000210")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002921")]
			[Address(RVA = "0x85E6CC", Offset = "0x85E6CC", VA = "0x85E6CC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600291C")]
		[Address(RVA = "0x85C84C", Offset = "0x85C84C", VA = "0x85C84C")]
		[DebuggerHidden]
		public <DoSave>d__23(int <>1__state)
		{
		}

		[Token(Token = "0x600291D")]
		[Address(RVA = "0x85E29C", Offset = "0x85E29C", VA = "0x85E29C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600291E")]
		[Address(RVA = "0x85E2A0", Offset = "0x85E2A0", VA = "0x85E2A0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002920")]
		[Address(RVA = "0x85E664", Offset = "0x85E664", VA = "0x85E664", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40000FC")]
	private const int MAJOR_VERSION = 1;

	[Token(Token = "0x40000FD")]
	private const int MINOR_VERSION = 0;

	[Token(Token = "0x40000FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static byte[] _headerMagic;

	[Token(Token = "0x40000FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static SaveCompleteDelegate _saveDelegate;

	[Token(Token = "0x4000100")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static Stream _fileStream;

	[Token(Token = "0x4000101")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static MemoryStream _memoryStream;

	[Token(Token = "0x4000102")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static byte[] _buffer;

	[Token(Token = "0x4000103")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static bool _processing;

	[Token(Token = "0x4000104")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	private static bool _failed;

	[Token(Token = "0x4000105")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static SaveImplementation _saveImplementation;

	[Token(Token = "0x4000106")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private static SaveGameData _cutsceneSaveBuffer;

	[Token(Token = "0x4000107")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static int BUFFER_SIZE;

	[Token(Token = "0x600012D")]
	[Address(RVA = "0x85BC14", Offset = "0x85BC14", VA = "0x85BC14")]
	static SaveGame()
	{
	}

	[Token(Token = "0x600012E")]
	[Address(RVA = "0x85BD88", Offset = "0x85BD88", VA = "0x85BD88")]
	public static void Init()
	{
	}

	[Token(Token = "0x600012F")]
	[Address(RVA = "0x85BE90", Offset = "0x85BE90", VA = "0x85BE90")]
	public static bool IsProcessing()
	{
		return default(bool);
	}

	[Token(Token = "0x6000130")]
	[Address(RVA = "0x85BFAC", Offset = "0x85BFAC", VA = "0x85BFAC")]
	public static bool IsMounted()
	{
		return default(bool);
	}

	[Token(Token = "0x6000131")]
	[Address(RVA = "0x85C024", Offset = "0x85C024", VA = "0x85C024")]
	public static bool HasFailed()
	{
		return default(bool);
	}

	[Token(Token = "0x6000132")]
	[Address(RVA = "0x85BF44", Offset = "0x85BF44", VA = "0x85BF44")]
	public static SaveImplementation GetSaveImplementation()
	{
		return null;
	}

	[Token(Token = "0x6000133")]
	[Address(RVA = "0x85C0D8", Offset = "0x85C0D8", VA = "0x85C0D8")]
	public static void SaveToFile(int slot, WhoSaveData saveData, SaveCompleteDelegate saveComplete, MonoBehaviour coroutineHost)
	{
	}

	[Token(Token = "0x6000134")]
	[Address(RVA = "0x85C184", Offset = "0x85C184", VA = "0x85C184")]
	public static SaveGameData SaveStateToStructure(WhoSaveData saveData)
	{
		return null;
	}

	[Token(Token = "0x6000135")]
	[Address(RVA = "0x85C22C", Offset = "0x85C22C", VA = "0x85C22C")]
	private static void SerialiseAndSave(int slot, SaveGameData sg, SaveCompleteDelegate saveComplete, MonoBehaviour coroutineHost)
	{
	}

	[Token(Token = "0x6000136")]
	[Address(RVA = "0x85C79C", Offset = "0x85C79C", VA = "0x85C79C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x666064", Offset = "0x666064")]
	private static IEnumerator DoSave(int slot, SaveCompleteDelegate saveComplete, MemoryStream memoryStream)
	{
		return null;
	}

	[Token(Token = "0x6000137")]
	[Address(RVA = "0x85C878", Offset = "0x85C878", VA = "0x85C878")]
	public static void FinishSave()
	{
	}

	[Token(Token = "0x6000138")]
	[Address(RVA = "0x85C920", Offset = "0x85C920", VA = "0x85C920")]
	public static void ThreadWriteFile()
	{
	}

	[Token(Token = "0x6000139")]
	[Address(RVA = "0x85D0A0", Offset = "0x85D0A0", VA = "0x85D0A0")]
	public static bool CompareHeader(byte[] file)
	{
		return default(bool);
	}

	[Token(Token = "0x600013A")]
	[Address(RVA = "0x85CF20", Offset = "0x85CF20", VA = "0x85CF20")]
	public static MemoryStream SuperSuperSecretObsfucateFunction(Stream input, int size)
	{
		return null;
	}

	[Token(Token = "0x600013B")]
	[Address(RVA = "0x85D1A4", Offset = "0x85D1A4", VA = "0x85D1A4")]
	public static SaveImplementation PrepareLoad(int slot)
	{
		return null;
	}

	[Token(Token = "0x600013C")]
	[Address(RVA = "0x85D24C", Offset = "0x85D24C", VA = "0x85D24C")]
	public static bool LoadFromFile(int slot, ref WhoSaveData saveData)
	{
		return default(bool);
	}

	[Token(Token = "0x600013D")]
	[Address(RVA = "0x85E26C", Offset = "0x85E26C", VA = "0x85E26C")]
	public static WhoSaveData LoadStateFromStructure(SaveGameData sg)
	{
		return null;
	}

	[Token(Token = "0x600013E")]
	[Address(RVA = "0x85CBB0", Offset = "0x85CBB0", VA = "0x85CBB0")]
	public static byte[] Compress(byte[] inputData)
	{
		return null;
	}

	[Token(Token = "0x600013F")]
	[Address(RVA = "0x85DDE8", Offset = "0x85DDE8", VA = "0x85DDE8")]
	public static byte[] Decompress(byte[] inputData)
	{
		return null;
	}

	[Token(Token = "0x6000140")]
	[Address(RVA = "0x85E294", Offset = "0x85E294", VA = "0x85E294")]
	public SaveGame()
	{
	}
}
[Token(Token = "0x200002E")]
public class DynamicResolution : MonoBehaviour
{
	[Token(Token = "0x4000108")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private FrameTiming[] frameTimings;

	[Token(Token = "0x4000109")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float _minimumScale;

	[Token(Token = "0x400010A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool _overrideScale;

	[Token(Token = "0x400010B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static float _overrideMinimumScale;

	[Token(Token = "0x400010C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float scaleIncrementsDown;

	[Token(Token = "0x400010D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float scaleIncremetsUp;

	[Token(Token = "0x400010E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float timeBeforeScalingUp;

	[Token(Token = "0x400010F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float scaleUpTimeIncrements;

	[Token(Token = "0x4000110")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float _requiredHeadsetAngularVelocityToScale;

	[Token(Token = "0x4000111")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float _scale;

	[Token(Token = "0x4000112")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float _timeSinceScaleDown;

	[Token(Token = "0x4000113")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private uint m_frameCount;

	[Token(Token = "0x4000114")]
	private const uint kNumFrameTimings = 3u;

	[Token(Token = "0x4000115")]
	private const float kLatencyThreshold = 0.67f;

	[Token(Token = "0x4000116")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float gpuTimeThreshold;

	[Token(Token = "0x4000117")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private double _gpuFrameTime;

	[Token(Token = "0x4000118")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private double _cpuFrameTime;

	[Token(Token = "0x4000119")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private long _presentCalledTime;

	[Token(Token = "0x400011A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private long _frameCompleteTime;

	[Token(Token = "0x400011B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float _gpuTime;

	[Token(Token = "0x400011C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private int _frameDrops;

	[Token(Token = "0x400011D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private int _framePresent;

	[Token(Token = "0x400011E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x647C30", Offset = "0x647C30")]
	public float overrideScale;

	[Token(Token = "0x1700002B")]
	public static float overrideMinimumScale
	{
		[Token(Token = "0x6000141")]
		[Address(RVA = "0x7BC62C", Offset = "0x7BC62C", VA = "0x7BC62C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000142")]
		[Address(RVA = "0x7BC694", Offset = "0x7BC694", VA = "0x7BC694")]
		set
		{
		}
	}

	[Token(Token = "0x6000143")]
	[Address(RVA = "0x7BC708", Offset = "0x7BC708", VA = "0x7BC708")]
	private void Start()
	{
	}

	[Token(Token = "0x6000144")]
	[Address(RVA = "0x7BC7F4", Offset = "0x7BC7F4", VA = "0x7BC7F4")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000145")]
	[Address(RVA = "0x7BC7F8", Offset = "0x7BC7F8", VA = "0x7BC7F8")]
	public DynamicResolution()
	{
	}

	[Token(Token = "0x6000147")]
	[Address(RVA = "0x7BC898", Offset = "0x7BC898", VA = "0x7BC898")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6660C8", Offset = "0x6660C8")]
	private void <Start>b__26_0(bool clicked, out string name, out string value)
	{
	}

	[Token(Token = "0x6000148")]
	[Address(RVA = "0x7BC914", Offset = "0x7BC914", VA = "0x7BC914")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6660D8", Offset = "0x6660D8")]
	private void <Start>b__26_1(float value)
	{
	}
}
[Token(Token = "0x200002F")]
public class DynamicResolutionLimit : MonoBehaviour
{
	[Token(Token = "0x400011F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float _minimumResolutionScale;

	[Token(Token = "0x6000149")]
	[Address(RVA = "0x7BC91C", Offset = "0x7BC91C", VA = "0x7BC91C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600014A")]
	[Address(RVA = "0x7BC98C", Offset = "0x7BC98C", VA = "0x7BC98C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600014B")]
	[Address(RVA = "0x7BC9EC", Offset = "0x7BC9EC", VA = "0x7BC9EC")]
	public DynamicResolutionLimit()
	{
	}
}
[Token(Token = "0x2000030")]
public class ActivateRotationalTeleportGroup : VRTK_DestinationMarker
{
	[Token(Token = "0x600014C")]
	[Address(RVA = "0x8B36CC", Offset = "0x8B36CC", VA = "0x8B36CC")]
	private void Start()
	{
	}

	[Token(Token = "0x600014D")]
	[Address(RVA = "0x8B37B4", Offset = "0x8B37B4", VA = "0x8B37B4")]
	private void ActivateRotationalTeleportGroup_DestinationMarkerSet(object sender, DestinationMarkerEventArgs e)
	{
	}

	[Token(Token = "0x600014E")]
	[Address(RVA = "0x8B3820", Offset = "0x8B3820", VA = "0x8B3820")]
	private void ActivateRotationalTeleportGroup_DestinationMarkerExit(object sender, DestinationMarkerEventArgs e)
	{
	}

	[Token(Token = "0x600014F")]
	[Address(RVA = "0x8B388C", Offset = "0x8B388C", VA = "0x8B388C")]
	private void ActivateRotationalTeleportGroup_DestinationMarkerEnter(object sender, DestinationMarkerEventArgs e)
	{
	}

	[Token(Token = "0x6000150")]
	[Address(RVA = "0x8B38F8", Offset = "0x8B38F8", VA = "0x8B38F8")]
	public ActivateRotationalTeleportGroup()
	{
	}
}
[Token(Token = "0x2000031")]
public class ActivateTeleportGroup : MonoBehaviour
{
	[Token(Token = "0x4000120")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private VRTK_BasicTeleport _teleport;

	[Token(Token = "0x4000121")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private RotationalTeleportEnabler _teleportGroup;

	[Token(Token = "0x4000122")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool showHoverState;

	[Token(Token = "0x6000151")]
	[Address(RVA = "0x8B3900", Offset = "0x8B3900", VA = "0x8B3900")]
	private void Start()
	{
	}

	[Token(Token = "0x6000152")]
	[Address(RVA = "0x8B3CAC", Offset = "0x8B3CAC", VA = "0x8B3CAC")]
	private void _teleport_Teleporting(object sender, DestinationMarkerEventArgs e)
	{
	}

	[Token(Token = "0x6000153")]
	[Address(RVA = "0x8B3EE8", Offset = "0x8B3EE8", VA = "0x8B3EE8")]
	private void DebugLogger(uint index, string action, Transform target, RaycastHit raycastHit, float distance, Vector3 tipPosition)
	{
	}

	[Token(Token = "0x6000154")]
	[Address(RVA = "0x8B4498", Offset = "0x8B4498", VA = "0x8B4498")]
	private void DoPointerIn(object sender, DestinationMarkerEventArgs e)
	{
	}

	[Token(Token = "0x6000155")]
	[Address(RVA = "0x8B456C", Offset = "0x8B456C", VA = "0x8B456C")]
	private void DoPointerOut(object sender, DestinationMarkerEventArgs e)
	{
	}

	[Token(Token = "0x6000156")]
	[Address(RVA = "0x8B4640", Offset = "0x8B4640", VA = "0x8B4640")]
	private void DoPointerHover(object sender, DestinationMarkerEventArgs e)
	{
	}

	[Token(Token = "0x6000157")]
	[Address(RVA = "0x8B4714", Offset = "0x8B4714", VA = "0x8B4714")]
	private void DoPointerDestinationSet(object sender, DestinationMarkerEventArgs e)
	{
	}

	[Token(Token = "0x6000158")]
	[Address(RVA = "0x8B47E8", Offset = "0x8B47E8", VA = "0x8B47E8")]
	public ActivateTeleportGroup()
	{
	}
}
[Token(Token = "0x2000032")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x63D128", Offset = "0x63D128")]
public class ArtificalRotatorInteraction : MonoBehaviour, Interaction
{
	[Token(Token = "0x2000523")]
	private enum Location
	{
		[Token(Token = "0x40023C0")]
		MaxAngle,
		[Token(Token = "0x40023C1")]
		MinAngle
	}

	[Token(Token = "0x4000123")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private VRTK_ArtificialRotator _rotator;

	[Token(Token = "0x4000124")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Location _interactingAngle;

	[Token(Token = "0x4000125")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private bool _complete;

	[Token(Token = "0x1700002C")]
	public bool isInteractionComplete
	{
		[Token(Token = "0x6000159")]
		[Address(RVA = "0x8BB578", Offset = "0x8BB578", VA = "0x8BB578", Slot = "8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700002D")]
	public bool interactionProgressing
	{
		[Token(Token = "0x600015A")]
		[Address(RVA = "0x8BB580", Offset = "0x8BB580", VA = "0x8BB580", Slot = "13")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x14000001")]
	public event InteractionCompleteEventHandler onInteractionComplete
	{
		[Token(Token = "0x600015B")]
		[Address(RVA = "0x8BB588", Offset = "0x8BB588", VA = "0x8BB588", Slot = "4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6660E8", Offset = "0x6660E8")]
		add
		{
		}
		[Token(Token = "0x600015C")]
		[Address(RVA = "0x8BB674", Offset = "0x8BB674", VA = "0x8BB674", Slot = "5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6660F8", Offset = "0x6660F8")]
		remove
		{
		}
	}

	[Token(Token = "0x14000002")]
	public event InteractionCompleteEventHandler onInteractionUncomplete
	{
		[Token(Token = "0x600015D")]
		[Address(RVA = "0x8BB760", Offset = "0x8BB760", VA = "0x8BB760", Slot = "6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x666108", Offset = "0x666108")]
		add
		{
		}
		[Token(Token = "0x600015E")]
		[Address(RVA = "0x8BB84C", Offset = "0x8BB84C", VA = "0x8BB84C", Slot = "7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x666118", Offset = "0x666118")]
		remove
		{
		}
	}

	[Token(Token = "0x14000003")]
	public event InteractionCompleteEventHandler onInteractionProgressStart
	{
		[Token(Token = "0x600015F")]
		[Address(RVA = "0x8BB938", Offset = "0x8BB938", VA = "0x8BB938", Slot = "9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x666128", Offset = "0x666128")]
		add
		{
		}
		[Token(Token = "0x6000160")]
		[Address(RVA = "0x8BBA24", Offset = "0x8BBA24", VA = "0x8BBA24", Slot = "10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x666138", Offset = "0x666138")]
		remove
		{
		}
	}

	[Token(Token = "0x14000004")]
	public event InteractionCompleteEventHandler onInteractionProgressStop
	{
		[Token(Token = "0x6000161")]
		[Address(RVA = "0x8BBB10", Offset = "0x8BBB10", VA = "0x8BBB10", Slot = "11")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x666148", Offset = "0x666148")]
		add
		{
		}
		[Token(Token = "0x6000162")]
		[Address(RVA = "0x8BBBFC", Offset = "0x8BBBFC", VA = "0x8BBBFC", Slot = "12")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x666158", Offset = "0x666158")]
		remove
		{
		}
	}

	[Token(Token = "0x6000163")]
	[Address(RVA = "0x8BBCE8", Offset = "0x8BBCE8", VA = "0x8BBCE8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000164")]
	[Address(RVA = "0x8BBDD4", Offset = "0x8BBDD4", VA = "0x8BBDD4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000165")]
	[Address(RVA = "0x8BBEA8", Offset = "0x8BBEA8", VA = "0x8BBEA8")]
	private void MinLimitReached(object sender, ControllableEventArgs e)
	{
	}

	[Token(Token = "0x6000166")]
	[Address(RVA = "0x8BBED4", Offset = "0x8BBED4", VA = "0x8BBED4", Slot = "14")]
	public void Reset()
	{
	}

	[Token(Token = "0x6000167")]
	[Address(RVA = "0x8BBED8", Offset = "0x8BBED8", VA = "0x8BBED8")]
	private void MaxLimitReached(object sender, ControllableEventArgs e)
	{
	}

	[Token(Token = "0x6000168")]
	[Address(RVA = "0x8BBF04", Offset = "0x8BBF04", VA = "0x8BBF04")]
	public ArtificalRotatorInteraction()
	{
	}
}
[Token(Token = "0x2000033")]
public class ArtificialControllableInteraction : MonoBehaviour, Interaction
{
	[Token(Token = "0x2000524")]
	private enum Location
	{
		[Token(Token = "0x40023C3")]
		MaxValue,
		[Token(Token = "0x40023C4")]
		MinValue
	}

	[Token(Token = "0x400012A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private VRTK_BaseControllable _controllable;

	[Token(Token = "0x400012B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Location _targetLocation;

	[Token(Token = "0x400012C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private bool _allowComplete;

	[Token(Token = "0x400012D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
	[SerializeField]
	private bool _allowUncomplete;

	[Token(Token = "0x400012E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x26")]
	private bool _complete;

	[Token(Token = "0x1700002E")]
	public bool isInteractionComplete
	{
		[Token(Token = "0x6000169")]
		[Address(RVA = "0x8BBF0C", Offset = "0x8BBF0C", VA = "0x8BBF0C", Slot = "8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700002F")]
	public bool interactionProgressing
	{
		[Token(Token = "0x600016A")]
		[Address(RVA = "0x8BBF14", Offset = "0x8BBF14", VA = "0x8BBF14", Slot = "13")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x14000005")]
	public event InteractionCompleteEventHandler onInteractionComplete
	{
		[Token(Token = "0x600016B")]
		[Address(RVA = "0x8BBF1C", Offset = "0x8BBF1C", VA = "0x8BBF1C", Slot = "4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x666168", Offset = "0x666168")]
		add
		{
		}
		[Token(Token = "0x600016C")]
		[Address(RVA = "0x8BC008", Offset = "0x8BC008", VA = "0x8BC008", Slot = "5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x666178", Offset = "0x666178")]
		remove
		{
		}
	}

	[Token(Token = "0x14000006")]
	public event InteractionCompleteEventHandler onInteractionUncomplete
	{
		[Token(Token = "0x600016D")]
		[Address(RVA = "0x8BC0F4", Offset = "0x8BC0F4", VA = "0x8BC0F4", Slot = "6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x666188", Offset = "0x666188")]
		add
		{
		}
		[Token(Token = "0x600016E")]
		[Address(RVA = "0x8BC1E0", Offset = "0x8BC1E0", VA = "0x8BC1E0", Slot = "7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x666198", Offset = "0x666198")]
		remove
		{
		}
	}

	[Token(Token = "0x14000007")]
	public event InteractionCompleteEventHandler onInteractionProgressStart
	{
		[Token(Token = "0x600016F")]
		[Address(RVA = "0x8BC2CC", Offset = "0x8BC2CC", VA = "0x8BC2CC", Slot = "9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6661A8", Offset = "0x6661A8")]
		add
		{
		}
		[Token(Token = "0x6000170")]
		[Address(RVA = "0x8BC3B8", Offset = "0x8BC3B8", VA = "0x8BC3B8", Slot = "10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6661B8", Offset = "0x6661B8")]
		remove
		{
		}
	}

	[Token(Token = "0x14000008")]
	public event InteractionCompleteEventHandler onInteractionProgressStop
	{
		[Token(Token = "0x6000171")]
		[Address(RVA = "0x8BC4A4", Offset = "0x8BC4A4", VA = "0x8BC4A4", Slot = "11")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6661C8", Offset = "0x6661C8")]
		add
		{
		}
		[Token(Token = "0x6000172")]
		[Address(RVA = "0x8BC590", Offset = "0x8BC590", VA = "0x8BC590", Slot = "12")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6661D8", Offset = "0x6661D8")]
		remove
		{
		}
	}

	[Token(Token = "0x6000173")]
	[Address(RVA = "0x8BC67C", Offset = "0x8BC67C", VA = "0x8BC67C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000174")]
	[Address(RVA = "0x8BC94C", Offset = "0x8BC94C", VA = "0x8BC94C")]
	private void MinLimitExited(object sender, ControllableEventArgs e)
	{
	}

	[Token(Token = "0x6000175")]
	[Address(RVA = "0x8BC980", Offset = "0x8BC980", VA = "0x8BC980")]
	private void MaxLimitExited(object sender, ControllableEventArgs e)
	{
	}

	[Token(Token = "0x6000176")]
	[Address(RVA = "0x8BC9B8", Offset = "0x8BC9B8", VA = "0x8BC9B8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000177")]
	[Address(RVA = "0x8BCB5C", Offset = "0x8BCB5C", VA = "0x8BCB5C")]
	private void MinLimitReached(object sender, ControllableEventArgs e)
	{
	}

	[Token(Token = "0x6000178")]
	[Address(RVA = "0x8BCBC4", Offset = "0x8BCBC4", VA = "0x8BCBC4")]
	private void MaxLimitReached(object sender, ControllableEventArgs e)
	{
	}

	[Token(Token = "0x6000179")]
	[Address(RVA = "0x8BCC28", Offset = "0x8BCC28", VA = "0x8BCC28", Slot = "14")]
	public void Reset()
	{
	}

	[Token(Token = "0x600017A")]
	[Address(RVA = "0x8BCC2C", Offset = "0x8BCC2C", VA = "0x8BCC2C")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x600017B")]
	[Address(RVA = "0x8BCC34", Offset = "0x8BCC34", VA = "0x8BCC34")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x600017C")]
	[Address(RVA = "0x8BCC38", Offset = "0x8BCC38", VA = "0x8BCC38")]
	public ArtificialControllableInteraction()
	{
	}
}
[Token(Token = "0x2000034")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x63D18C", Offset = "0x63D18C")]
public class ArtificialRotatorTwiddleInteraction : MonoBehaviour, Interaction
{
	[Token(Token = "0x4000133")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	[SerializeField]
	private VRTK_ArtificialRotator _controllable;

	[Token(Token = "0x4000134")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool _complete;

	[Token(Token = "0x17000030")]
	public bool isInteractionComplete
	{
		[Token(Token = "0x600017D")]
		[Address(RVA = "0x8BCC48", Offset = "0x8BCC48", VA = "0x8BCC48", Slot = "8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000031")]
	public bool interactionProgressing
	{
		[Token(Token = "0x600017E")]
		[Address(RVA = "0x8BCC50", Offset = "0x8BCC50", VA = "0x8BCC50", Slot = "13")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x14000009")]
	public event InteractionCompleteEventHandler onInteractionComplete
	{
		[Token(Token = "0x600017F")]
		[Address(RVA = "0x8BCC58", Offset = "0x8BCC58", VA = "0x8BCC58", Slot = "4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6661E8", Offset = "0x6661E8")]
		add
		{
		}
		[Token(Token = "0x6000180")]
		[Address(RVA = "0x8BCD44", Offset = "0x8BCD44", VA = "0x8BCD44", Slot = "5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6661F8", Offset = "0x6661F8")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000A")]
	public event InteractionCompleteEventHandler onInteractionUncomplete
	{
		[Token(Token = "0x6000181")]
		[Address(RVA = "0x8BCE30", Offset = "0x8BCE30", VA = "0x8BCE30", Slot = "6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x666208", Offset = "0x666208")]
		add
		{
		}
		[Token(Token = "0x6000182")]
		[Address(RVA = "0x8BCF1C", Offset = "0x8BCF1C", VA = "0x8BCF1C", Slot = "7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x666218", Offset = "0x666218")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000B")]
	public event InteractionCompleteEventHandler onInteractionProgressStart
	{
		[Token(Token = "0x6000183")]
		[Address(RVA = "0x8BD008", Offset = "0x8BD008", VA = "0x8BD008", Slot = "9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x666228", Offset = "0x666228")]
		add
		{
		}
		[Token(Token = "0x6000184")]
		[Address(RVA = "0x8BD0F4", Offset = "0x8BD0F4", VA = "0x8BD0F4", Slot = "10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x666238", Offset = "0x666238")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000C")]
	public event InteractionCompleteEventHandler onInteractionProgressStop
	{
		[Token(Token = "0x6000185")]
		[Address(RVA = "0x8BD1E0", Offset = "0x8BD1E0", VA = "0x8BD1E0", Slot = "11")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x666248", Offset = "0x666248")]
		add
		{
		}
		[Token(Token = "0x6000186")]
		[Address(RVA = "0x8BD2CC", Offset = "0x8BD2CC", VA = "0x8BD2CC", Slot = "12")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x666258", Offset = "0x666258")]
		remove
		{
		}
	}

	[Token(Token = "0x6000187")]
	[Address(RVA = "0x8BD3B8", Offset = "0x8BD3B8", VA = "0x8BD3B8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000188")]
	[Address(RVA = "0x8BD524", Offset = "0x8BD524", VA = "0x8BD524")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x6000189")]
	[Address(RVA = "0x8BD52C", Offset = "0x8BD52C", VA = "0x8BD52C")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x600018A")]
	[Address(RVA = "0x8BD530", Offset = "0x8BD530", VA = "0x8BD530")]
	private void TwiddleCompleted(object sender, ControllableEventArgs e)
	{
	}

	[Token(Token = "0x600018B")]
	[Address(RVA = "0x8BD554", Offset = "0x8BD554", VA = "0x8BD554")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600018C")]
	[Address(RVA = "0x8BD62C", Offset = "0x8BD62C", VA = "0x8BD62C", Slot = "14")]
	public void Reset()
	{
	}

	[Token(Token = "0x600018D")]
	[Address(RVA = "0x8BD634", Offset = "0x8BD634", VA = "0x8BD634")]
	public ArtificialRotatorTwiddleInteraction()
	{
	}
}
[Token(Token = "0x2000035")]
public class AudioTrigger : MonoBehaviour
{
	[Token(Token = "0x2000525")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x643CC8", Offset = "0x643CC8")]
	private sealed class <PlayClipAtCoroutine>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40023C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40023C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40023C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 pos;

		[Token(Token = "0x40023C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float delay;

		[Token(Token = "0x40023C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AudioClip clip;

		[Token(Token = "0x40023CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public AudioTrigger <>4__this;

		[Token(Token = "0x40023CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float minDistance;

		[Token(Token = "0x40023CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float maxDistance;

		[Token(Token = "0x40023CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float pitch;

		[Token(Token = "0x40023CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float volume;

		[Token(Token = "0x40023CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public bool threedee;

		[Token(Token = "0x40023D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private GameObject <tempGO>5__2;

		[Token(Token = "0x17000211")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002925")]
			[Address(RVA = "0x8BE648", Offset = "0x8BE648", VA = "0x8BE648", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000212")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002927")]
			[Address(RVA = "0x8BE6B8", Offset = "0x8BE6B8", VA = "0x8BE6B8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002922")]
		[Address(RVA = "0x8BE260", Offset = "0x8BE260", VA = "0x8BE260")]
		[DebuggerHidden]
		public <PlayClipAtCoroutine>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x6002923")]
		[Address(RVA = "0x8BE2E8", Offset = "0x8BE2E8", VA = "0x8BE2E8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002924")]
		[Address(RVA = "0x8BE2EC", Offset = "0x8BE2EC", VA = "0x8BE2EC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002926")]
		[Address(RVA = "0x8BE650", Offset = "0x8BE650", VA = "0x8BE650", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000139")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static AudioTrigger instance;

	[Token(Token = "0x400013A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private AudioMixerGroup effectsMixerGroup;

	[Token(Token = "0x600018E")]
	[Address(RVA = "0x8BE0D0", Offset = "0x8BE0D0", VA = "0x8BE0D0")]
	public void PlayClipAt(AudioClip clip, Vector3 pos, float volume = 1f, bool threedee = true, float minDistance = 1f, float maxDistance = 8f, float delay = 0f, float pitch = 1f)
	{
	}

	[Token(Token = "0x600018F")]
	[Address(RVA = "0x8BE100", Offset = "0x8BE100", VA = "0x8BE100")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x666268", Offset = "0x666268")]
	private IEnumerator PlayClipAtCoroutine(AudioClip clip, Vector3 pos, float volume, bool threedee, float minDistance, float maxDistance, float delay, float pitch)
	{
		return null;
	}

	[Token(Token = "0x6000190")]
	[Address(RVA = "0x8BE28C", Offset = "0x8BE28C", VA = "0x8BE28C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000191")]
	[Address(RVA = "0x8BE2E0", Offset = "0x8BE2E0", VA = "0x8BE2E0")]
	public AudioTrigger()
	{
	}
}
[Token(Token = "0x2000036")]
public class BeaconA : MonoBehaviour
{
	[Token(Token = "0x6000192")]
	[Address(RVA = "0x8C1D3C", Offset = "0x8C1D3C", VA = "0x8C1D3C")]
	public BeaconA()
	{
	}
}
[Token(Token = "0x2000037")]
public class BeaconB : MonoBehaviour
{
	[Token(Token = "0x6000193")]
	[Address(RVA = "0x8C1D44", Offset = "0x8C1D44", VA = "0x8C1D44")]
	public BeaconB()
	{
	}
}
[Token(Token = "0x2000038")]
public class BeaconC : MonoBehaviour
{
	[Token(Token = "0x6000194")]
	[Address(RVA = "0x8C1D4C", Offset = "0x8C1D4C", VA = "0x8C1D4C")]
	public BeaconC()
	{
	}
}
[Token(Token = "0x2000039")]
public class CableComponent : MonoBehaviour
{
	[Token(Token = "0x400013B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform endPoint;

	[Token(Token = "0x400013C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Material cableMaterial;

	[Token(Token = "0x400013D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float cableLength;

	[Token(Token = "0x400013E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private int totalSegments;

	[Token(Token = "0x400013F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private float segmentsPerUnit;

	[Token(Token = "0x4000140")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int segments;

	[Token(Token = "0x4000141")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private float cableWidth;

	[Token(Token = "0x4000142")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[SerializeField]
	private int verletIterations;

	[Token(Token = "0x4000143")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private int solverIterations;

	[Token(Token = "0x4000144")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[SerializeField]
	private float stiffness;

	[Token(Token = "0x4000145")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private LineRenderer line;

	[Token(Token = "0x4000146")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private CableParticle[] points;

	[Token(Token = "0x6000195")]
	[Address(RVA = "0x8C7E08", Offset = "0x8C7E08", VA = "0x8C7E08")]
	private void Start()
	{
	}

	[Token(Token = "0x6000196")]
	[Address(RVA = "0x8C7E2C", Offset = "0x8C7E2C", VA = "0x8C7E2C")]
	private void InitCableParticles()
	{
	}

	[Token(Token = "0x6000197")]
	[Address(RVA = "0x8C81DC", Offset = "0x8C81DC", VA = "0x8C81DC")]
	private void InitLineRenderer()
	{
	}

	[Token(Token = "0x6000198")]
	[Address(RVA = "0x8C83EC", Offset = "0x8C83EC", VA = "0x8C83EC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000199")]
	[Address(RVA = "0x8C83F0", Offset = "0x8C83F0", VA = "0x8C83F0")]
	private void RenderCable()
	{
	}

	[Token(Token = "0x600019A")]
	[Address(RVA = "0x8C84D4", Offset = "0x8C84D4", VA = "0x8C84D4")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x600019B")]
	[Address(RVA = "0x8C8520", Offset = "0x8C8520", VA = "0x8C8520")]
	private void VerletIntegrate()
	{
	}

	[Token(Token = "0x600019C")]
	[Address(RVA = "0x8C865C", Offset = "0x8C865C", VA = "0x8C865C")]
	private void SolveConstraints()
	{
	}

	[Token(Token = "0x600019D")]
	[Address(RVA = "0x8C891C", Offset = "0x8C891C", VA = "0x8C891C")]
	private void SolveDistanceConstraint()
	{
	}

	[Token(Token = "0x600019E")]
	[Address(RVA = "0x8C8B90", Offset = "0x8C8B90", VA = "0x8C8B90")]
	private void SolveDistanceConstraint(CableParticle particleA, CableParticle particleB, float segmentLength)
	{
	}

	[Token(Token = "0x600019F")]
	[Address(RVA = "0x8C89F8", Offset = "0x8C89F8", VA = "0x8C89F8")]
	private void SolveStiffnessConstraint()
	{
	}

	[Token(Token = "0x60001A0")]
	[Address(RVA = "0x8C8EF0", Offset = "0x8C8EF0", VA = "0x8C8EF0")]
	private void SolveStiffnessConstraint(CableParticle cableParticle, float distance)
	{
	}

	[Token(Token = "0x60001A1")]
	[Address(RVA = "0x8C8EF4", Offset = "0x8C8EF4", VA = "0x8C8EF4")]
	public CableComponent()
	{
	}
}
[Token(Token = "0x200003A")]
public class CableParticle
{
	[Token(Token = "0x4000147")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Vector3 _position;

	[Token(Token = "0x4000148")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private Vector3 _oldPosition;

	[Token(Token = "0x4000149")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Transform _boundTo;

	[Token(Token = "0x400014A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Rigidbody _boundRigid;

	[Token(Token = "0x17000032")]
	public Vector3 Position
	{
		[Token(Token = "0x60001A2")]
		[Address(RVA = "0x8C84C8", Offset = "0x8C84C8", VA = "0x8C84C8")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x60001A3")]
		[Address(RVA = "0x8C8EE4", Offset = "0x8C8EE4", VA = "0x8C8EE4")]
		set
		{
		}
	}

	[Token(Token = "0x17000033")]
	public Vector3 Velocity
	{
		[Token(Token = "0x60001A4")]
		[Address(RVA = "0x8C8F28", Offset = "0x8C8F28", VA = "0x8C8F28")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x60001A5")]
	[Address(RVA = "0x8C8304", Offset = "0x8C8304", VA = "0x8C8304")]
	public CableParticle(Vector3 newPosition)
	{
	}

	[Token(Token = "0x60001A6")]
	[Address(RVA = "0x8C86A8", Offset = "0x8C86A8", VA = "0x8C86A8")]
	public void UpdateVerlet(Vector3 gravityDisplacement)
	{
	}

	[Token(Token = "0x60001A7")]
	[Address(RVA = "0x8C9038", Offset = "0x8C9038", VA = "0x8C9038")]
	public void UpdatePosition(Vector3 newPos)
	{
	}

	[Token(Token = "0x60001A8")]
	[Address(RVA = "0x8C8350", Offset = "0x8C8350", VA = "0x8C8350")]
	public void Bind(Transform to)
	{
	}

	[Token(Token = "0x60001A9")]
	[Address(RVA = "0x8C9054", Offset = "0x8C9054", VA = "0x8C9054")]
	public void UnBind()
	{
	}

	[Token(Token = "0x60001AA")]
	[Address(RVA = "0x8C8E74", Offset = "0x8C8E74", VA = "0x8C8E74")]
	public bool IsFree()
	{
		return default(bool);
	}

	[Token(Token = "0x60001AB")]
	[Address(RVA = "0x8C8FC8", Offset = "0x8C8FC8", VA = "0x8C8FC8")]
	public bool IsBound()
	{
		return default(bool);
	}
}
[Token(Token = "0x200003B")]
public class ClothInteraction : MonoBehaviour
{
	[Token(Token = "0x400014B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float tempRadiusA;

	[Token(Token = "0x400014C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float tempRadiusB;

	[Token(Token = "0x400014D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float tempRadiusC;

	[Token(Token = "0x400014E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Cloth a;

	[Token(Token = "0x400014F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private ClothSphereColliderPair[] colliders;

	[Token(Token = "0x60001AC")]
	[Address(RVA = "0x8CBC10", Offset = "0x8CBC10", VA = "0x8CBC10")]
	private void Start()
	{
	}

	[Token(Token = "0x60001AD")]
	[Address(RVA = "0x8CBCFC", Offset = "0x8CBCFC", VA = "0x8CBCFC")]
	private void Update()
	{
	}

	[Token(Token = "0x60001AE")]
	[Address(RVA = "0x8CBD00", Offset = "0x8CBD00", VA = "0x8CBD00")]
	private void OnTriggerStay(Collider other)
	{
	}

	[Token(Token = "0x60001AF")]
	[Address(RVA = "0x8CC2BC", Offset = "0x8CC2BC", VA = "0x8CC2BC")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x60001B0")]
	[Address(RVA = "0x8CC848", Offset = "0x8CC848", VA = "0x8CC848")]
	public ClothInteraction()
	{
	}
}
[Token(Token = "0x200003C")]
public class coin : MonoBehaviour
{
	[Token(Token = "0x4000150")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private AudioClip[] coinCollision;

	[Token(Token = "0x60001B1")]
	[Address(RVA = "0x80FE3C", Offset = "0x80FE3C", VA = "0x80FE3C")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x60001B2")]
	[Address(RVA = "0x80FFC4", Offset = "0x80FFC4", VA = "0x80FFC4")]
	public coin()
	{
	}
}
[Token(Token = "0x200003D")]
public class CollisionResponse : MonoBehaviour
{
	[Token(Token = "0x4000151")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x647E80", Offset = "0x647E80")]
	[SerializeField]
	private SoundEffect _collisionSoundEffectName;

	[Token(Token = "0x4000152")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x647ECC", Offset = "0x647ECC")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x647ECC", Offset = "0x647ECC")]
	[SerializeField]
	private float _minimumSoundVelocity;

	[Token(Token = "0x4000153")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x647F3C", Offset = "0x647F3C")]
	[SerializeField]
	private int _maximumChannels;

	[Token(Token = "0x4000154")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x647F88", Offset = "0x647F88")]
	[SerializeField]
	private float _minimumRepeatTime;

	[Token(Token = "0x4000155")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x647FD4", Offset = "0x647FD4")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x647FD4", Offset = "0x647FD4")]
	[SerializeField]
	private float _minimumBreakVelocity;

	[Token(Token = "0x4000156")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x648044", Offset = "0x648044")]
	[SerializeField]
	private SoundEffect _breakSoundEffectName;

	[Token(Token = "0x4000157")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x648090", Offset = "0x648090")]
	[SerializeField]
	private Transform _unbrokenObject;

	[Token(Token = "0x4000158")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6480DC", Offset = "0x6480DC")]
	[SerializeField]
	private Transform _brokenObject;

	[Token(Token = "0x4000159")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x648128", Offset = "0x648128")]
	[ObsoleteField]
	[SerializeField]
	private AudioClip[] soundCollision;

	[Token(Token = "0x400015A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Rigidbody _rigidBody;

	[Token(Token = "0x400015B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float _lastPlayTime;

	[Token(Token = "0x400015C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private bool _broken;

	[Token(Token = "0x60001B3")]
	[Address(RVA = "0x8CF030", Offset = "0x8CF030", VA = "0x8CF030")]
	private void Start()
	{
	}

	[Token(Token = "0x60001B4")]
	[Address(RVA = "0x8CF16C", Offset = "0x8CF16C", VA = "0x8CF16C")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x60001B5")]
	[Address(RVA = "0x8CF544", Offset = "0x8CF544", VA = "0x8CF544")]
	public CollisionResponse()
	{
	}
}
[Token(Token = "0x200003E")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x63D1F0", Offset = "0x63D1F0")]
public class ConsumeSnapDroppedObjects : MonoBehaviour
{
	[Token(Token = "0x400015D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private VRTK_SnapDropZone _zone;

	[Token(Token = "0x60001B6")]
	[Address(RVA = "0x7ABCD4", Offset = "0x7ABCD4", VA = "0x7ABCD4")]
	private void Start()
	{
	}

	[Token(Token = "0x60001B7")]
	[Address(RVA = "0x7ABD7C", Offset = "0x7ABD7C", VA = "0x7ABD7C")]
	private void SnappedToDropZone(object sender, SnapDropZoneEventArgs e)
	{
	}

	[Token(Token = "0x60001B8")]
	[Address(RVA = "0x7ABE10", Offset = "0x7ABE10", VA = "0x7ABE10")]
	public ConsumeSnapDroppedObjects()
	{
	}
}
[Token(Token = "0x200003F")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x63D254", Offset = "0x63D254")]
public class ControllableEffect : MonoBehaviour
{
	[Token(Token = "0x2000526")]
	public enum EffectType
	{
		[Token(Token = "0x40023D2")]
		AnimationScrub,
		[Token(Token = "0x40023D3")]
		AnimationSpeed,
		[Token(Token = "0x40023D4")]
		Particle,
		[Token(Token = "0x40023D5")]
		Light,
		[Token(Token = "0x40023D6")]
		AudioSource
	}

	[Token(Token = "0x400015E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public EffectType _type;

	[Token(Token = "0x400015F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private PlayableDirector _scrubTimeline;

	[Token(Token = "0x4000160")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private double _minTime;

	[Token(Token = "0x4000161")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private double _maxTime;

	[Token(Token = "0x4000162")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private PlayableDirector _speedTimeline;

	[Token(Token = "0x4000163")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private double _minSpeed;

	[Token(Token = "0x4000164")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private double _maxSpeed;

	[Token(Token = "0x4000165")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private double _speed;

	[Token(Token = "0x4000166")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private ParticleSystem _particleSystem;

	[Token(Token = "0x4000167")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private float _minEmissionRate;

	[Token(Token = "0x4000168")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[SerializeField]
	private float _maxEmissionRate;

	[Token(Token = "0x4000169")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private Light _light;

	[Token(Token = "0x400016A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private float _minLightBrightness;

	[Token(Token = "0x400016B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[SerializeField]
	private float _maxLightBrightness;

	[Token(Token = "0x400016C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private Color _minLightColor;

	[Token(Token = "0x400016D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private Color _maxLightColor;

	[Token(Token = "0x400016E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private AudioSource _audioSource;

	[Token(Token = "0x400016F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private float _minVolume;

	[Token(Token = "0x4000170")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	[SerializeField]
	private float _maxVolume;

	[Token(Token = "0x4000171")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private VRTK_BaseControllable _controllable;

	[Token(Token = "0x60001B9")]
	[Address(RVA = "0x7ADEA4", Offset = "0x7ADEA4", VA = "0x7ADEA4")]
	private void Start()
	{
	}

	[Token(Token = "0x60001BA")]
	[Address(RVA = "0x7AE1EC", Offset = "0x7AE1EC", VA = "0x7AE1EC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60001BB")]
	[Address(RVA = "0x7AE2C4", Offset = "0x7AE2C4", VA = "0x7AE2C4")]
	private void ValueChanged(object sender, ControllableEventArgs e)
	{
	}

	[Token(Token = "0x60001BC")]
	[Address(RVA = "0x7AE628", Offset = "0x7AE628", VA = "0x7AE628")]
	public void Update()
	{
	}

	[Token(Token = "0x60001BD")]
	[Address(RVA = "0x7AE78C", Offset = "0x7AE78C", VA = "0x7AE78C")]
	public ControllableEffect()
	{
	}
}
[Token(Token = "0x2000040")]
public class CreatePlayerColliders : MonoBehaviour
{
	[Token(Token = "0x60001BE")]
	[Address(RVA = "0x7AF238", Offset = "0x7AF238", VA = "0x7AF238")]
	public void Awake()
	{
	}

	[Token(Token = "0x60001BF")]
	[Address(RVA = "0x7AF2B8", Offset = "0x7AF2B8", VA = "0x7AF2B8")]
	public void OnDestroy()
	{
	}

	[Token(Token = "0x60001C0")]
	[Address(RVA = "0x7AF338", Offset = "0x7AF338", VA = "0x7AF338")]
	public void Start()
	{
	}

	[Token(Token = "0x60001C1")]
	[Address(RVA = "0x7AF534", Offset = "0x7AF534", VA = "0x7AF534")]
	public CreatePlayerColliders()
	{
	}
}
[Token(Token = "0x2000041")]
public class cubePuzzleA : MonoBehaviour
{
	[Token(Token = "0x60001C2")]
	[Address(RVA = "0x80FFCC", Offset = "0x80FFCC", VA = "0x80FFCC")]
	public cubePuzzleA()
	{
	}
}
[Token(Token = "0x2000042")]
public class cubePuzzleB : MonoBehaviour
{
	[Token(Token = "0x60001C3")]
	[Address(RVA = "0x80FFD4", Offset = "0x80FFD4", VA = "0x80FFD4")]
	public cubePuzzleB()
	{
	}
}
[Token(Token = "0x2000043")]
public class cubePuzzleC : MonoBehaviour
{
	[Token(Token = "0x60001C4")]
	[Address(RVA = "0x80FFDC", Offset = "0x80FFDC", VA = "0x80FFDC")]
	public cubePuzzleC()
	{
	}
}
[Token(Token = "0x2000044")]
public class cubePuzzleD : MonoBehaviour
{
	[Token(Token = "0x60001C5")]
	[Address(RVA = "0x80FFE4", Offset = "0x80FFE4", VA = "0x80FFE4")]
	public cubePuzzleD()
	{
	}
}
[Token(Token = "0x2000045")]
public class CustomHighlight : VRTK_BaseHighlighter
{
	[Token(Token = "0x4000172")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool _overrideGlobalThreshholds;

	[Token(Token = "0x4000173")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float _lowerThreshold;

	[Token(Token = "0x4000174")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float _upperThreshold;

	[Token(Token = "0x4000175")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject[] customOutlineModels;

	[Token(Token = "0x4000176")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool enableSubmeshHighlight;

	[Token(Token = "0x4000177")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	protected Material highlightMaterial;

	[Token(Token = "0x4000178")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	protected Renderer[] highlightModels;

	[Token(Token = "0x4000179")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	protected string[] copyComponents;

	[Token(Token = "0x60001C6")]
	[Address(RVA = "0x7B0E78", Offset = "0x7B0E78", VA = "0x7B0E78", Slot = "4")]
	public override void Initialise([Optional] Color? color, [Optional] GameObject affectObject, [Optional] Dictionary<string, object> options)
	{
	}

	[Token(Token = "0x60001C7")]
	[Address(RVA = "0x7B1058", Offset = "0x7B1058", VA = "0x7B1058", Slot = "5")]
	public override void ResetHighlighter()
	{
	}

	[Token(Token = "0x60001C8")]
	[Address(RVA = "0x7B10A4", Offset = "0x7B10A4", VA = "0x7B10A4", Slot = "6")]
	public override void Highlight(Color? color, float duration = 0f)
	{
	}

	[Token(Token = "0x60001C9")]
	[Address(RVA = "0x7B13F4", Offset = "0x7B13F4", VA = "0x7B13F4", Slot = "7")]
	public override void Unhighlight([Optional] Color? color, float duration = 0f)
	{
	}

	[Token(Token = "0x60001CA")]
	[Address(RVA = "0x7B1578", Offset = "0x7B1578", VA = "0x7B1578", Slot = "11")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x60001CB")]
	[Address(RVA = "0x7B15D8", Offset = "0x7B15D8", VA = "0x7B15D8", Slot = "12")]
	protected virtual void OnDestroy()
	{
	}

	[Token(Token = "0x60001CC")]
	[Address(RVA = "0x7B1748", Offset = "0x7B1748", VA = "0x7B1748", Slot = "13")]
	protected virtual void ResetHighlighterWithCustomModels()
	{
	}

	[Token(Token = "0x60001CD")]
	[Address(RVA = "0x7B186C", Offset = "0x7B186C", VA = "0x7B186C", Slot = "14")]
	protected virtual void ResetHighlightersWithCurrentGameObject()
	{
	}

	[Token(Token = "0x60001CE")]
	[Address(RVA = "0x7B1944", Offset = "0x7B1944", VA = "0x7B1944", Slot = "15")]
	protected virtual void SetOptions([Optional] Dictionary<string, object> options)
	{
	}

	[Token(Token = "0x60001CF")]
	[Address(RVA = "0x7B1A90", Offset = "0x7B1A90", VA = "0x7B1A90", Slot = "16")]
	protected virtual void DeleteExistingHighlightModels()
	{
	}

	[Token(Token = "0x60001D0")]
	[Address(RVA = "0x7B1BF0", Offset = "0x7B1BF0", VA = "0x7B1BF0", Slot = "17")]
	protected virtual Renderer CreateHighlightModel(int index)
	{
		return null;
	}

	[Token(Token = "0x60001D1")]
	[Address(RVA = "0x7B27B8", Offset = "0x7B27B8", VA = "0x7B27B8")]
	public CustomHighlight()
	{
	}
}
[Token(Token = "0x2000046")]
public class EnableSceneObjectOnGrab : MonoBehaviour
{
	[Token(Token = "0x400017A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private string _objectName;

	[Token(Token = "0x400017B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject _sceneObject;

	[Token(Token = "0x60001D2")]
	[Address(RVA = "0x7BCFA0", Offset = "0x7BCFA0", VA = "0x7BCFA0")]
	private void Start()
	{
	}

	[Token(Token = "0x60001D3")]
	[Address(RVA = "0x7BD088", Offset = "0x7BD088", VA = "0x7BD088")]
	private void ControllerUngrabInteractableObject(object sender, ObjectInteractEventArgs e)
	{
	}

	[Token(Token = "0x60001D4")]
	[Address(RVA = "0x7BD190", Offset = "0x7BD190", VA = "0x7BD190")]
	private void ControllerGrabInteractableObject(object sender, ObjectInteractEventArgs e)
	{
	}

	[Token(Token = "0x60001D5")]
	[Address(RVA = "0x7BD298", Offset = "0x7BD298", VA = "0x7BD298")]
	private void Update()
	{
	}

	[Token(Token = "0x60001D6")]
	[Address(RVA = "0x7BD29C", Offset = "0x7BD29C", VA = "0x7BD29C")]
	public EnableSceneObjectOnGrab()
	{
	}
}
[Token(Token = "0x2000047")]
public class FiguresLookHide : MonoBehaviour
{
	[Token(Token = "0x60001D7")]
	[Address(RVA = "0x7C00AC", Offset = "0x7C00AC", VA = "0x7C00AC")]
	private void Update()
	{
	}

	[Token(Token = "0x60001D8")]
	[Address(RVA = "0x7C03EC", Offset = "0x7C03EC", VA = "0x7C03EC")]
	public FiguresLookHide()
	{
	}
}
[Token(Token = "0x2000048")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x63D2B8", Offset = "0x63D2B8")]
public class FollowOnGrab : MonoBehaviour
{
	[Token(Token = "0x400017C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Interaction _source;

	[Token(Token = "0x400017D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6482C4", Offset = "0x6482C4")]
	[SerializeField]
	private GameObject _destination;

	[Token(Token = "0x400017E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private VRTK_InteractableObject _firstGrab;

	[Token(Token = "0x400017F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool _secondStageReached;

	[Token(Token = "0x60001D9")]
	[Address(RVA = "0x7C44F4", Offset = "0x7C44F4", VA = "0x7C44F4")]
	private void Start()
	{
	}

	[Token(Token = "0x60001DA")]
	[Address(RVA = "0x7C465C", Offset = "0x7C465C", VA = "0x7C465C")]
	public VRTK_InteractGrab GetInteractGrab(GameObject obj)
	{
		return null;
	}

	[Token(Token = "0x60001DB")]
	[Address(RVA = "0x7C483C", Offset = "0x7C483C", VA = "0x7C483C")]
	public void FollowOnReset()
	{
	}

	[Token(Token = "0x60001DC")]
	[Address(RVA = "0x7C4B70", Offset = "0x7C4B70", VA = "0x7C4B70")]
	private void OnObjectGrabbed(object sender, InteractableObjectEventArgs e)
	{
	}

	[Token(Token = "0x60001DD")]
	[Address(RVA = "0x7C4D18", Offset = "0x7C4D18", VA = "0x7C4D18")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60001DE")]
	[Address(RVA = "0x7C4E08", Offset = "0x7C4E08", VA = "0x7C4E08")]
	private void OnMaxLimitReached(object sender, Interaction i)
	{
	}

	[Token(Token = "0x60001DF")]
	[Address(RVA = "0x7C4994", Offset = "0x7C4994", VA = "0x7C4994")]
	public GameObject GetControlInteractable(GameObject obj)
	{
		return null;
	}

	[Token(Token = "0x60001E0")]
	[Address(RVA = "0x7C5284", Offset = "0x7C5284", VA = "0x7C5284")]
	public FollowOnGrab()
	{
	}
}
[Token(Token = "0x2000049")]
public class FollowOnReset : MonoBehaviour
{
	[Token(Token = "0x2000527")]
	private enum Location
	{
		[Token(Token = "0x40023D8")]
		MaxValue,
		[Token(Token = "0x40023D9")]
		MinValue
	}

	[Token(Token = "0x4000180")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x648310", Offset = "0x648310")]
	[SerializeField]
	private VRTK_BaseControllable _controllable;

	[Token(Token = "0x4000181")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64835C", Offset = "0x64835C")]
	[SerializeField]
	private Location _targetLocation;

	[Token(Token = "0x4000182")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6483A8", Offset = "0x6483A8")]
	[SerializeField]
	private FollowOnGrab _followOnGrab;

	[Token(Token = "0x4000183")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool _complete;

	[Token(Token = "0x4000184")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	private bool _exited;

	[Token(Token = "0x17000034")]
	public bool isInteractionComplete
	{
		[Token(Token = "0x60001E1")]
		[Address(RVA = "0x7C528C", Offset = "0x7C528C", VA = "0x7C528C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000035")]
	public bool interactionProgressing
	{
		[Token(Token = "0x60001E2")]
		[Address(RVA = "0x7C5294", Offset = "0x7C5294", VA = "0x7C5294")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60001E3")]
	[Address(RVA = "0x7C529C", Offset = "0x7C529C", VA = "0x7C529C")]
	private void Start()
	{
	}

	[Token(Token = "0x60001E4")]
	[Address(RVA = "0x7C550C", Offset = "0x7C550C", VA = "0x7C550C")]
	private void MinLimitExited(object sender, ControllableEventArgs e)
	{
	}

	[Token(Token = "0x60001E5")]
	[Address(RVA = "0x7C5520", Offset = "0x7C5520", VA = "0x7C5520")]
	private void MaxLimitExited(object sender, ControllableEventArgs e)
	{
	}

	[Token(Token = "0x60001E6")]
	[Address(RVA = "0x7C5538", Offset = "0x7C5538", VA = "0x7C5538")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60001E7")]
	[Address(RVA = "0x7C56DC", Offset = "0x7C56DC", VA = "0x7C56DC")]
	private void MinLimitReached(object sender, ControllableEventArgs e)
	{
	}

	[Token(Token = "0x60001E8")]
	[Address(RVA = "0x7C5720", Offset = "0x7C5720", VA = "0x7C5720")]
	private void MaxLimitReached(object sender, ControllableEventArgs e)
	{
	}

	[Token(Token = "0x60001E9")]
	[Address(RVA = "0x7C5760", Offset = "0x7C5760", VA = "0x7C5760")]
	public FollowOnReset()
	{
	}
}
[Token(Token = "0x200004A")]
public class GenericSonicScrewdriverInteraction : SonicScrewdriverInteraction
{
	[Token(Token = "0x2000528")]
	private enum Mode
	{
		[Token(Token = "0x40023DB")]
		OneShot,
		[Token(Token = "0x40023DC")]
		Repeated,
		[Token(Token = "0x40023DD")]
		Toggle
	}

	[Token(Token = "0x4000185")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private float _completeInteractionAfterTime;

	[Token(Token = "0x4000186")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	[SerializeField]
	private Mode _mode;

	[Token(Token = "0x4000187")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private bool _uncompleteOnDisable;

	[Token(Token = "0x4000188")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private float _timer;

	[Token(Token = "0x4000189")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private bool _triggered;

	[Token(Token = "0x60001EA")]
	[Address(RVA = "0x83F218", Offset = "0x83F218", VA = "0x83F218", Slot = "23")]
	protected override void OnScrewdriverStart()
	{
	}

	[Token(Token = "0x60001EB")]
	[Address(RVA = "0x83F224", Offset = "0x83F224", VA = "0x83F224", Slot = "24")]
	protected override void OnScrewdriverUpdate()
	{
	}

	[Token(Token = "0x60001EC")]
	[Address(RVA = "0x83F49C", Offset = "0x83F49C", VA = "0x83F49C", Slot = "19")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x60001ED")]
	[Address(RVA = "0x83F4E4", Offset = "0x83F4E4", VA = "0x83F4E4", Slot = "28")]
	public override void Reset()
	{
	}

	[Token(Token = "0x60001EE")]
	[Address(RVA = "0x83F5CC", Offset = "0x83F5CC", VA = "0x83F5CC", Slot = "25")]
	protected override void OnScrewdriverEnd()
	{
	}

	[Token(Token = "0x60001EF")]
	[Address(RVA = "0x83F670", Offset = "0x83F670", VA = "0x83F670")]
	public GenericSonicScrewdriverInteraction()
	{
	}
}
[Token(Token = "0x200004B")]
public class HandController : MonoBehaviour
{
	[Token(Token = "0x2000529")]
	private enum Hand
	{
		[Token(Token = "0x40023DF")]
		Left,
		[Token(Token = "0x40023E0")]
		Right
	}

	[Token(Token = "0x400018A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Hand _hand;

	[Token(Token = "0x400018B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x648434", Offset = "0x648434")]
	[SerializeField]
	private Animator _animator;

	[Token(Token = "0x400018C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x648480", Offset = "0x648480")]
	[SerializeField]
	private Transform _hideRoot;

	[Token(Token = "0x400018D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6484CC", Offset = "0x6484CC")]
	[SerializeField]
	private string _interactionInRangeParameter;

	[Token(Token = "0x400018E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x648518", Offset = "0x648518")]
	[SerializeField]
	private string _grabAmountParameter;

	[Token(Token = "0x400018F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x648564", Offset = "0x648564")]
	[SerializeField]
	private Vector3 _OculusPositionOffset;

	[Token(Token = "0x4000190")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6485B0", Offset = "0x6485B0")]
	[SerializeField]
	private Vector3 _SteamVRPositionOffset;

	[Token(Token = "0x4000191")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6485FC", Offset = "0x6485FC")]
	[SerializeField]
	private Vector3 _PSVRPositionOffset;

	[Token(Token = "0x4000192")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private int _interactionInRangeHash;

	[Token(Token = "0x4000193")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int _grabAmountHash;

	[Token(Token = "0x4000194")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Transform _controller;

	[Token(Token = "0x4000195")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private VRTK_ControllerEvents _events;

	[Token(Token = "0x4000196")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private VRTK_InteractTouch _interactTouch;

	[Token(Token = "0x4000197")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private VRTK_UIPointer _uiPointer;

	[Token(Token = "0x4000198")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private VRTK_InteractGrab[] _interactGrabs;

	[Token(Token = "0x4000199")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private SDK_BaseController.ButtonTypes _grabButton;

	[Token(Token = "0x400019A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private SDK_BaseController.ButtonTypes _alternateGrabButton;

	[Token(Token = "0x400019B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private float _grabButtonPressure;

	[Token(Token = "0x400019C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private float _alternateGrabButtonPressure;

	[Token(Token = "0x400019D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private bool _visible;

	[Token(Token = "0x400019E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA9")]
	private bool _gameVisibleFlag;

	[Token(Token = "0x400019F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAA")]
	private bool _pauseVisibleFlag;

	[Token(Token = "0x40001A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAB")]
	private bool _controllerConnected;

	[Token(Token = "0x40001A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Camera _postCamera;

	[Token(Token = "0x40001A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[SerializeField]
	private Transform _visualiseObject;

	[Token(Token = "0x40001A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private bool _visualiseVelocityEnable;

	[Token(Token = "0x40001A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[SerializeField]
	private HolsterInventory _holster;

	[Token(Token = "0x40001A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static PauseMenuManager _pauseMenuManager;

	[Token(Token = "0x40001A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static HolsterInventory _holsterStatic;

	[Token(Token = "0x40001A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static HandController _leftHandController;

	[Token(Token = "0x40001A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static HandController _rightHandController;

	[Token(Token = "0x60001F0")]
	[Address(RVA = "0x841238", Offset = "0x841238", VA = "0x841238")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001F1")]
	[Address(RVA = "0x841400", Offset = "0x841400", VA = "0x841400")]
	public void SetVisualiseVelocityEnable(bool en)
	{
	}

	[Token(Token = "0x60001F2")]
	[Address(RVA = "0x8414D8", Offset = "0x8414D8", VA = "0x8414D8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60001F3")]
	[Address(RVA = "0x841768", Offset = "0x841768", VA = "0x841768")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60001F4")]
	[Address(RVA = "0x8419AC", Offset = "0x8419AC", VA = "0x8419AC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60001F5")]
	[Address(RVA = "0x841B3C", Offset = "0x841B3C", VA = "0x841B3C")]
	private void Update()
	{
	}

	[Token(Token = "0x60001F6")]
	[Address(RVA = "0x84286C", Offset = "0x84286C", VA = "0x84286C")]
	public static void SetHandsVisible(bool en)
	{
	}

	[Token(Token = "0x60001F7")]
	[Address(RVA = "0x842B90", Offset = "0x842B90", VA = "0x842B90")]
	public static void SetHandsVisiblePause(bool en)
	{
	}

	[Token(Token = "0x60001F8")]
	[Address(RVA = "0x842B1C", Offset = "0x842B1C", VA = "0x842B1C")]
	private void SetGameVisibleFlag(bool en)
	{
	}

	[Token(Token = "0x60001F9")]
	[Address(RVA = "0x842E44", Offset = "0x842E44", VA = "0x842E44")]
	private void SetPauseVisibleFlag(bool en)
	{
	}

	[Token(Token = "0x60001FA")]
	[Address(RVA = "0x842E50", Offset = "0x842E50", VA = "0x842E50")]
	private void SetVisible(bool visible)
	{
	}

	[Token(Token = "0x60001FB")]
	[Address(RVA = "0x842610", Offset = "0x842610", VA = "0x842610")]
	private void UpdateVisibility()
	{
	}

	[Token(Token = "0x60001FC")]
	[Address(RVA = "0x842E5C", Offset = "0x842E5C", VA = "0x842E5C")]
	private void OnUngrabObject(object sender, ObjectInteractEventArgs e)
	{
	}

	[Token(Token = "0x60001FD")]
	[Address(RVA = "0x842E68", Offset = "0x842E68", VA = "0x842E68")]
	private void OnGrabObject(object sender, ObjectInteractEventArgs e)
	{
	}

	[Token(Token = "0x60001FE")]
	[Address(RVA = "0x842E70", Offset = "0x842E70", VA = "0x842E70")]
	private void OnStartTouch(object sender, ObjectInteractEventArgs e)
	{
	}

	[Token(Token = "0x60001FF")]
	[Address(RVA = "0x842EAC", Offset = "0x842EAC", VA = "0x842EAC")]
	private void OnStopTouch(object sender, ObjectInteractEventArgs e)
	{
	}

	[Token(Token = "0x6000200")]
	[Address(RVA = "0x842EE8", Offset = "0x842EE8", VA = "0x842EE8")]
	private void OnAxisChanged(object sender, ControllerInteractionEventArgs e)
	{
	}

	[Token(Token = "0x6000201")]
	[Address(RVA = "0x842FA0", Offset = "0x842FA0", VA = "0x842FA0")]
	private void OnAlternateAxisChanged(object sender, ControllerInteractionEventArgs e)
	{
	}

	[Token(Token = "0x6000202")]
	[Address(RVA = "0x843058", Offset = "0x843058", VA = "0x843058")]
	public HandController()
	{
	}
}
[Serializable]
[Token(Token = "0x200004C")]
public struct HapticsParameters
{
	[Token(Token = "0x40001A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[SerializeField]
	private float _strength;

	[Token(Token = "0x40001AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	[SerializeField]
	private float _duration;

	[Token(Token = "0x40001AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	[SerializeField]
	private float _pulseInterval;

	[Token(Token = "0x40001AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[SerializeField]
	private HapticsParametricResponse _parameter;

	[Token(Token = "0x6000204")]
	[Address(RVA = "0x6DE35C", Offset = "0x6DE35C", VA = "0x6DE35C")]
	public void Play([Optional] GameObject obj, float value = 0f)
	{
	}

	[Token(Token = "0x6000205")]
	[Address(RVA = "0x6DE364", Offset = "0x6DE364", VA = "0x6DE364")]
	public void Play(VRTK_ControllerReference controller, float value = 0f)
	{
	}
}
[Serializable]
[Token(Token = "0x200004D")]
public struct HapticsParametricResponse
{
	[Token(Token = "0x40001AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[SerializeField]
	public bool _useParameter;

	[Token(Token = "0x40001AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	[SerializeField]
	public float _minParameterValue;

	[Token(Token = "0x40001AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	[SerializeField]
	public float _maxParameterValue;

	[Token(Token = "0x40001B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[SerializeField]
	public float _minStrengthMultiplier;

	[Token(Token = "0x40001B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	public float _maxStrengthMultiplier;
}
[Token(Token = "0x200004E")]
public class HintSystem : MonoBehaviour
{
	[Token(Token = "0x200052A")]
	public class OpenHint
	{
		[Token(Token = "0x40023E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public LevelHintData.Hint hintData;

		[Token(Token = "0x40023E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int dialogueIndex;

		[Token(Token = "0x40023E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float timer;

		[Token(Token = "0x40023E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject audioSourceObject;

		[Token(Token = "0x6002928")]
		[Address(RVA = "0x847F38", Offset = "0x847F38", VA = "0x847F38")]
		public OpenHint(LevelHintData.Hint hint, GameObject source)
		{
		}
	}

	[Token(Token = "0x200052B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x643CD8", Offset = "0x643CD8")]
	private sealed class <>c__DisplayClass38_0
	{
		[Token(Token = "0x40023E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public HintSystem <>4__this;

		[Token(Token = "0x40023E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public OpenHint oh;

		[Token(Token = "0x6002929")]
		[Address(RVA = "0x8488E0", Offset = "0x8488E0", VA = "0x8488E0")]
		public <>c__DisplayClass38_0()
		{
		}

		[Token(Token = "0x600292A")]
		[Address(RVA = "0x848B58", Offset = "0x848B58", VA = "0x848B58")]
		internal void <AdvanceHint>b__0(DialogueData.DialogueBlock block)
		{
		}
	}

	[Token(Token = "0x40001B2")]
	private const float HINT_TIMER_RETAIN_DELAY = 2f;

	[Token(Token = "0x40001B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private LevelHintData _hintData;

	[Token(Token = "0x40001B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static HintSystem _instance;

	[Token(Token = "0x40001B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool _enabled;

	[Token(Token = "0x40001B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<OpenHint> _openHint;

	[Token(Token = "0x40001B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<OpenHint> _recentlyClosed;

	[Token(Token = "0x40001B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private List<string> _insideZone;

	[Token(Token = "0x40001B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private OpenHint _playingHint;

	[Token(Token = "0x40001BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float _globalHintTimer;

	[Token(Token = "0x40001BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float _recentlyClosedFlushTimer;

	[Token(Token = "0x17000036")]
	public List<OpenHint> openHint
	{
		[Token(Token = "0x6000206")]
		[Address(RVA = "0x8479C4", Offset = "0x8479C4", VA = "0x8479C4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000037")]
	public OpenHint playingHint
	{
		[Token(Token = "0x6000207")]
		[Address(RVA = "0x8479CC", Offset = "0x8479CC", VA = "0x8479CC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000038")]
	public float globalHintTimer
	{
		[Token(Token = "0x6000208")]
		[Address(RVA = "0x8479D4", Offset = "0x8479D4", VA = "0x8479D4")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000039")]
	public List<string> insideZoneList
	{
		[Token(Token = "0x6000209")]
		[Address(RVA = "0x8479DC", Offset = "0x8479DC", VA = "0x8479DC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700003A")]
	public bool systemEnabled
	{
		[Token(Token = "0x600020A")]
		[Address(RVA = "0x847360", Offset = "0x847360", VA = "0x847360")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700003B")]
	public static HintSystem instance
	{
		[Token(Token = "0x600020B")]
		[Address(RVA = "0x847310", Offset = "0x847310", VA = "0x847310")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600020C")]
	[Address(RVA = "0x8479E4", Offset = "0x8479E4", VA = "0x8479E4")]
	private void Awake()
	{
	}

	[Token(Token = "0x600020D")]
	[Address(RVA = "0x847A38", Offset = "0x847A38", VA = "0x847A38")]
	private void Start()
	{
	}

	[Token(Token = "0x600020E")]
	[Address(RVA = "0x847A6C", Offset = "0x847A6C", VA = "0x847A6C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600020F")]
	[Address(RVA = "0x847B08", Offset = "0x847B08", VA = "0x847B08")]
	public void OnExitedZone(string zoneName)
	{
	}

	[Token(Token = "0x6000210")]
	[Address(RVA = "0x847B78", Offset = "0x847B78", VA = "0x847B78")]
	public void OnEnteredZone(string zoneName)
	{
	}

	[Token(Token = "0x6000211")]
	[Address(RVA = "0x847390", Offset = "0x847390", VA = "0x847390")]
	public void HintOpen(ref string hintName, [Optional] GameObject audioSourceObject)
	{
	}

	[Token(Token = "0x6000212")]
	[Address(RVA = "0x847528", Offset = "0x847528", VA = "0x847528")]
	public void HintClose(ref string hintName)
	{
	}

	[Token(Token = "0x6000213")]
	[Address(RVA = "0x847374", Offset = "0x847374", VA = "0x847374")]
	public bool IsHintOpen(ref string hintName)
	{
		return default(bool);
	}

	[Token(Token = "0x6000214")]
	[Address(RVA = "0x847FEC", Offset = "0x847FEC", VA = "0x847FEC")]
	public OpenHint FindOpenHintByName(ref string name)
	{
		return null;
	}

	[Token(Token = "0x6000215")]
	[Address(RVA = "0x847BE8", Offset = "0x847BE8", VA = "0x847BE8")]
	public OpenHint FindRecentlyClosedHintByName(ref string name)
	{
		return null;
	}

	[Token(Token = "0x6000216")]
	[Address(RVA = "0x847D80", Offset = "0x847D80", VA = "0x847D80")]
	public LevelHintData.Hint FindHintByName(ref string name)
	{
		return null;
	}

	[Token(Token = "0x6000217")]
	[Address(RVA = "0x847F78", Offset = "0x847F78", VA = "0x847F78")]
	private float GetHintTimer(LevelHintData.HintDialogue dialogue)
	{
		return default(float);
	}

	[Token(Token = "0x6000218")]
	[Address(RVA = "0x847368", Offset = "0x847368", VA = "0x847368")]
	public void SetSystemEnable(bool en)
	{
	}

	[Token(Token = "0x6000219")]
	[Address(RVA = "0x848184", Offset = "0x848184", VA = "0x848184")]
	private void Update()
	{
	}

	[Token(Token = "0x600021A")]
	[Address(RVA = "0x848404", Offset = "0x848404", VA = "0x848404")]
	public bool IsPlayerInZone(LevelHintData.Hint hint)
	{
		return default(bool);
	}

	[Token(Token = "0x600021B")]
	[Address(RVA = "0x848690", Offset = "0x848690", VA = "0x848690")]
	public void AdvanceHint(OpenHint oh)
	{
	}

	[Token(Token = "0x600021C")]
	[Address(RVA = "0x8488E8", Offset = "0x8488E8", VA = "0x8488E8")]
	public void OnDialogueFinished(DialogueData.DialogueBlock block, OpenHint oh)
	{
	}

	[Token(Token = "0x600021D")]
	[Address(RVA = "0x848A98", Offset = "0x848A98", VA = "0x848A98")]
	public HintSystem()
	{
	}
}
[Token(Token = "0x200004F")]
public class HintZone : MonoBehaviour
{
	[Token(Token = "0x40001BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private string _zoneName;

	[Token(Token = "0x600021E")]
	[Address(RVA = "0x848B88", Offset = "0x848B88", VA = "0x848B88")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600021F")]
	[Address(RVA = "0x848C74", Offset = "0x848C74", VA = "0x848C74")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000220")]
	[Address(RVA = "0x848D60", Offset = "0x848D60", VA = "0x848D60")]
	public HintZone()
	{
	}
}
[Token(Token = "0x2000050")]
public class HolsterableObject : MonoBehaviour
{
	[Token(Token = "0x40001BD")]
	private const string HOLSTERABLE_POLICY_NAME = "ToolbeltDockable";

	[Token(Token = "0x40001BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private VRTK_InteractableObject _interactable;

	[Token(Token = "0x40001BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool _hasBeenSnapped;

	[Token(Token = "0x40001C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float _timer;

	[Token(Token = "0x6000221")]
	[Address(RVA = "0x84D474", Offset = "0x84D474", VA = "0x84D474")]
	private void Start()
	{
	}

	[Token(Token = "0x6000222")]
	[Address(RVA = "0x84D588", Offset = "0x84D588", VA = "0x84D588")]
	private void Update()
	{
	}

	[Token(Token = "0x6000223")]
	[Address(RVA = "0x84D6EC", Offset = "0x84D6EC", VA = "0x84D6EC")]
	public HolsterableObject()
	{
	}
}
[Token(Token = "0x2000051")]
public class HolsterButtonControl : MonoBehaviour
{
	[Token(Token = "0x40001C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private VRTK_ControllerEvents.ButtonAlias _holsterButton;

	[Token(Token = "0x40001C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private VRTK_ControllerEvents _controllerEvents;

	[Token(Token = "0x40001C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private HolsterInventory _holster;

	[Token(Token = "0x6000224")]
	[Address(RVA = "0x8499BC", Offset = "0x8499BC", VA = "0x8499BC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000225")]
	[Address(RVA = "0x849AB0", Offset = "0x849AB0", VA = "0x849AB0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000226")]
	[Address(RVA = "0x849B54", Offset = "0x849B54", VA = "0x849B54")]
	private void ControllerPressed(object sender, ControllerInteractionEventArgs e)
	{
	}

	[Token(Token = "0x6000227")]
	[Address(RVA = "0x84A22C", Offset = "0x84A22C", VA = "0x84A22C")]
	public HolsterButtonControl()
	{
	}
}
[Token(Token = "0x2000052")]
public class HolsterInteraction : MonoBehaviour, Interaction
{
	[Token(Token = "0x200052C")]
	private enum Mode
	{
		[Token(Token = "0x40023E8")]
		Holster,
		[Token(Token = "0x40023E9")]
		Unholster
	}

	[Token(Token = "0x200052D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x643CE8", Offset = "0x643CE8")]
	private sealed class <CheckHolsterAfterFrame>d__25 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40023EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40023EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40023EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HolsterInteraction <>4__this;

		[Token(Token = "0x17000213")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600292E")]
			[Address(RVA = "0x84B7C8", Offset = "0x84B7C8", VA = "0x84B7C8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000214")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002930")]
			[Address(RVA = "0x84B838", Offset = "0x84B838", VA = "0x84B838", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600292B")]
		[Address(RVA = "0x84B398", Offset = "0x84B398", VA = "0x84B398")]
		[DebuggerHidden]
		public <CheckHolsterAfterFrame>d__25(int <>1__state)
		{
		}

		[Token(Token = "0x600292C")]
		[Address(RVA = "0x84B490", Offset = "0x84B490", VA = "0x84B490", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600292D")]
		[Address(RVA = "0x84B494", Offset = "0x84B494", VA = "0x84B494", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600292F")]
		[Address(RVA = "0x84B7D0", Offset = "0x84B7D0", VA = "0x84B7D0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200052E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x643CF8", Offset = "0x643CF8")]
	private sealed class <CheckUnholsterAfterFrame>d__26 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40023ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40023EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40023EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HolsterInteraction <>4__this;

		[Token(Token = "0x17000215")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002934")]
			[Address(RVA = "0x84BA00", Offset = "0x84BA00", VA = "0x84BA00", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000216")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002936")]
			[Address(RVA = "0x84BA70", Offset = "0x84BA70", VA = "0x84BA70", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002931")]
		[Address(RVA = "0x84B3C4", Offset = "0x84B3C4", VA = "0x84B3C4")]
		[DebuggerHidden]
		public <CheckUnholsterAfterFrame>d__26(int <>1__state)
		{
		}

		[Token(Token = "0x6002932")]
		[Address(RVA = "0x84B840", Offset = "0x84B840", VA = "0x84B840", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002933")]
		[Address(RVA = "0x84B844", Offset = "0x84B844", VA = "0x84B844", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002935")]
		[Address(RVA = "0x84BA08", Offset = "0x84BA08", VA = "0x84BA08", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40001C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Mode _completeOn;

	[Token(Token = "0x40001C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private bool _holstered;

	[Token(Token = "0x40001C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	private bool _complete;

	[Token(Token = "0x40001C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private VRTK_InteractableObject _object;

	[Token(Token = "0x1700003C")]
	private bool Interaction.isInteractionComplete
	{
		[Token(Token = "0x6000229")]
		[Address(RVA = "0x84A360", Offset = "0x84A360", VA = "0x84A360", Slot = "8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700003D")]
	private bool Interaction.interactionProgressing
	{
		[Token(Token = "0x600022A")]
		[Address(RVA = "0x84A368", Offset = "0x84A368", VA = "0x84A368", Slot = "13")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1400000D")]
	public event InteractionCompleteEventHandler onInteractionComplete
	{
		[Token(Token = "0x600022B")]
		[Address(RVA = "0x84A370", Offset = "0x84A370", VA = "0x84A370", Slot = "4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6662CC", Offset = "0x6662CC")]
		add
		{
		}
		[Token(Token = "0x600022C")]
		[Address(RVA = "0x84A45C", Offset = "0x84A45C", VA = "0x84A45C", Slot = "5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6662DC", Offset = "0x6662DC")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000E")]
	public event InteractionCompleteEventHandler onInteractionUncomplete
	{
		[Token(Token = "0x600022D")]
		[Address(RVA = "0x84A548", Offset = "0x84A548", VA = "0x84A548", Slot = "6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6662EC", Offset = "0x6662EC")]
		add
		{
		}
		[Token(Token = "0x600022E")]
		[Address(RVA = "0x84A634", Offset = "0x84A634", VA = "0x84A634", Slot = "7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6662FC", Offset = "0x6662FC")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000F")]
	public event InteractionCompleteEventHandler onInteractionProgressStart
	{
		[Token(Token = "0x600022F")]
		[Address(RVA = "0x84A720", Offset = "0x84A720", VA = "0x84A720", Slot = "9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66630C", Offset = "0x66630C")]
		add
		{
		}
		[Token(Token = "0x6000230")]
		[Address(RVA = "0x84A80C", Offset = "0x84A80C", VA = "0x84A80C", Slot = "10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66631C", Offset = "0x66631C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000010")]
	public event InteractionCompleteEventHandler onInteractionProgressStop
	{
		[Token(Token = "0x6000231")]
		[Address(RVA = "0x84A8F8", Offset = "0x84A8F8", VA = "0x84A8F8", Slot = "11")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66632C", Offset = "0x66632C")]
		add
		{
		}
		[Token(Token = "0x6000232")]
		[Address(RVA = "0x84A9E4", Offset = "0x84A9E4", VA = "0x84A9E4", Slot = "12")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66633C", Offset = "0x66633C")]
		remove
		{
		}
	}

	[Token(Token = "0x6000228")]
	[Address(RVA = "0x84A234", Offset = "0x84A234", VA = "0x84A234")]
	private void Start()
	{
	}

	[Token(Token = "0x6000233")]
	[Address(RVA = "0x84AAD0", Offset = "0x84AAD0", VA = "0x84AAD0", Slot = "14")]
	public void Reset()
	{
	}

	[Token(Token = "0x6000234")]
	[Address(RVA = "0x84B258", Offset = "0x84B258", VA = "0x84B258")]
	private void OnGrabbed(object sender, InteractableObjectEventArgs e)
	{
	}

	[Token(Token = "0x6000235")]
	[Address(RVA = "0x84B2F8", Offset = "0x84B2F8", VA = "0x84B2F8")]
	private void OnUngrabbed(object sender, InteractableObjectEventArgs e)
	{
	}

	[Token(Token = "0x6000236")]
	[Address(RVA = "0x84B324", Offset = "0x84B324", VA = "0x84B324")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x66634C", Offset = "0x66634C")]
	private IEnumerator CheckHolsterAfterFrame()
	{
		return null;
	}

	[Token(Token = "0x6000237")]
	[Address(RVA = "0x84B284", Offset = "0x84B284", VA = "0x84B284")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6663B0", Offset = "0x6663B0")]
	private IEnumerator CheckUnholsterAfterFrame()
	{
		return null;
	}

	[Token(Token = "0x6000238")]
	[Address(RVA = "0x84B3F0", Offset = "0x84B3F0", VA = "0x84B3F0")]
	private void SetHolsterStatus(bool holstered)
	{
	}

	[Token(Token = "0x6000239")]
	[Address(RVA = "0x84B488", Offset = "0x84B488", VA = "0x84B488")]
	public HolsterInteraction()
	{
	}
}
[Token(Token = "0x2000053")]
public class HolsterInventory : MonoBehaviour
{
	[Token(Token = "0x200052F")]
	public enum HolsterSide
	{
		[Token(Token = "0x40023F1")]
		Left,
		[Token(Token = "0x40023F2")]
		Right,
		[Token(Token = "0x40023F3")]
		Any
	}

	[Token(Token = "0x2000530")]
	public delegate bool RestartValidate();

	[Token(Token = "0x2000531")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x643D08", Offset = "0x643D08")]
	private sealed class <RestartActionCoroutine>d__24 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40023F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40023F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40023F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RestartValidate validate;

		[Token(Token = "0x40023F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform touch;

		[Token(Token = "0x17000217")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600293E")]
			[Address(RVA = "0x84D37C", Offset = "0x84D37C", VA = "0x84D37C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000218")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002940")]
			[Address(RVA = "0x84D3EC", Offset = "0x84D3EC", VA = "0x84D3EC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600293B")]
		[Address(RVA = "0x84CDF0", Offset = "0x84CDF0", VA = "0x84CDF0")]
		[DebuggerHidden]
		public <RestartActionCoroutine>d__24(int <>1__state)
		{
		}

		[Token(Token = "0x600293C")]
		[Address(RVA = "0x84CE28", Offset = "0x84CE28", VA = "0x84CE28", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600293D")]
		[Address(RVA = "0x84CE2C", Offset = "0x84CE2C", VA = "0x84CE2C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600293F")]
		[Address(RVA = "0x84D384", Offset = "0x84D384", VA = "0x84D384", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40001CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static HolsterInventory _instance;

	[Token(Token = "0x40001CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Renderer _leftRenderer;

	[Token(Token = "0x40001CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Renderer _rightRenderer;

	[Token(Token = "0x40001CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private MazeSnapDropZone _leftDropZone;

	[Token(Token = "0x40001D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private MazeSnapDropZone _rightDropZone;

	[Token(Token = "0x40001D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool _preferLeft;

	[Token(Token = "0x1700003E")]
	public static HolsterInventory instance
	{
		[Token(Token = "0x600023A")]
		[Address(RVA = "0x84B650", Offset = "0x84B650", VA = "0x84B650")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600023B")]
	[Address(RVA = "0x84BA78", Offset = "0x84BA78", VA = "0x84BA78")]
	private void Awake()
	{
	}

	[Token(Token = "0x600023C")]
	[Address(RVA = "0x84BAE4", Offset = "0x84BAE4", VA = "0x84BAE4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600023D")]
	[Address(RVA = "0x84BB4C", Offset = "0x84BB4C", VA = "0x84BB4C")]
	public bool IsObjectHovering(GameObject obj)
	{
		return default(bool);
	}

	[Token(Token = "0x600023E")]
	[Address(RVA = "0x84B6B8", Offset = "0x84B6B8", VA = "0x84B6B8")]
	public bool IsObjectHolstered(GameObject obj)
	{
		return default(bool);
	}

	[Token(Token = "0x600023F")]
	[Address(RVA = "0x84BC34", Offset = "0x84BC34", VA = "0x84BC34")]
	public void Reset()
	{
	}

	[Token(Token = "0x6000240")]
	[Address(RVA = "0x84C040", Offset = "0x84C040", VA = "0x84C040")]
	private void ClearHovering()
	{
	}

	[Token(Token = "0x6000241")]
	[Address(RVA = "0x84C600", Offset = "0x84C600", VA = "0x84C600")]
	public void SetActive(bool en)
	{
	}

	[Token(Token = "0x6000242")]
	[Address(RVA = "0x84C828", Offset = "0x84C828", VA = "0x84C828")]
	public void HolsterObject(Transform obj, HolsterSide side = HolsterSide.Any)
	{
	}

	[Token(Token = "0x6000243")]
	[Address(RVA = "0x84CAE8", Offset = "0x84CAE8", VA = "0x84CAE8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000244")]
	[Address(RVA = "0x842B28", Offset = "0x842B28", VA = "0x842B28")]
	public void SetVisible(bool showHolster)
	{
	}

	[Token(Token = "0x6000245")]
	[Address(RVA = "0x84CB94", Offset = "0x84CB94", VA = "0x84CB94")]
	private void ForceSnap(MazeSnapDropZone zone, GameObject snapObject)
	{
	}

	[Token(Token = "0x6000246")]
	[Address(RVA = "0x84CC20", Offset = "0x84CC20", VA = "0x84CC20")]
	private void GrabFromSnapDropZone(MazeInteractGrab grab, MazeSnapDropZone zone)
	{
	}

	[Token(Token = "0x6000247")]
	[Address(RVA = "0x849B80", Offset = "0x849B80", VA = "0x849B80")]
	public void PerformHolster()
	{
	}

	[Token(Token = "0x6000248")]
	[Address(RVA = "0x84CD2C", Offset = "0x84CD2C", VA = "0x84CD2C")]
	public void RestartAction(Transform touch, [Optional] RestartValidate validate)
	{
	}

	[Token(Token = "0x6000249")]
	[Address(RVA = "0x84CD58", Offset = "0x84CD58", VA = "0x84CD58")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x666414", Offset = "0x666414")]
	private IEnumerator RestartActionCoroutine(Transform touch, RestartValidate validate)
	{
		return null;
	}

	[Token(Token = "0x600024A")]
	[Address(RVA = "0x84CE1C", Offset = "0x84CE1C", VA = "0x84CE1C")]
	public HolsterInventory()
	{
	}
}
[Token(Token = "0x2000054")]
public interface IFunctionalitySpawned
{
	[Token(Token = "0x600024C")]
	void OnSpawned(InteractableObjectFunction f);
}
[Token(Token = "0x2000055")]
public class InteractableObjectFunction : MonoBehaviour
{
	[Token(Token = "0x40001D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform _functionalityControllerPrefab;

	[Token(Token = "0x40001D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private bool _disableCollidersOnGrab;

	[Token(Token = "0x40001D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Transform _functionalitySpawn;

	[Token(Token = "0x40001D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private VRTK_InteractableObject _interactable;

	[Token(Token = "0x40001D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool _grabbed;

	[Token(Token = "0x600024D")]
	[Address(RVA = "0x84FD8C", Offset = "0x84FD8C", VA = "0x84FD8C", Slot = "4")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x600024E")]
	[Address(RVA = "0x84FF48", Offset = "0x84FF48", VA = "0x84FF48", Slot = "5")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x600024F")]
	[Address(RVA = "0x850164", Offset = "0x850164", VA = "0x850164")]
	public void StopFunction()
	{
	}

	[Token(Token = "0x6000250")]
	[Address(RVA = "0x85028C", Offset = "0x85028C", VA = "0x85028C")]
	private void InteractableObjectUngrabbed(object sender, InteractableObjectEventArgs e)
	{
	}

	[Token(Token = "0x6000251")]
	[Address(RVA = "0x850364", Offset = "0x850364", VA = "0x850364")]
	private void InteractableObjectGrabbed(object sender, InteractableObjectEventArgs e)
	{
	}

	[Token(Token = "0x6000252")]
	[Address(RVA = "0x85054C", Offset = "0x85054C", VA = "0x85054C")]
	private void InteractableObjectUnused(object sender, InteractableObjectEventArgs e)
	{
	}

	[Token(Token = "0x6000253")]
	[Address(RVA = "0x850698", Offset = "0x850698", VA = "0x850698")]
	private void InteractableObjectUsed(object sender, InteractableObjectEventArgs e)
	{
	}

	[Token(Token = "0x6000254")]
	[Address(RVA = "0x85069C", Offset = "0x85069C", VA = "0x85069C")]
	public InteractableObjectFunction()
	{
	}
}
[Token(Token = "0x2000056")]
public class InteractableObjectReset : MonoBehaviour
{
	[Token(Token = "0x2000532")]
	private struct SavedMaterial
	{
		[Token(Token = "0x40023F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Renderer renderer;

		[Token(Token = "0x40023F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Material material;

		[Token(Token = "0x40023FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Shader shader;

		[Token(Token = "0x40023FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool alphaTest;

		[Token(Token = "0x40023FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool alphaBlend;

		[Token(Token = "0x40023FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int renderQueue;
	}

	[Token(Token = "0x2000533")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x643D18", Offset = "0x643D18")]
	private sealed class <InitInitialPosition>d__19 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40023FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40023FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002400")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public InteractableObjectReset <>4__this;

		[Token(Token = "0x17000219")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002944")]
			[Address(RVA = "0x85195C", Offset = "0x85195C", VA = "0x85195C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700021A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002946")]
			[Address(RVA = "0x8519CC", Offset = "0x8519CC", VA = "0x8519CC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002941")]
		[Address(RVA = "0x850910", Offset = "0x850910", VA = "0x850910")]
		[DebuggerHidden]
		public <InitInitialPosition>d__19(int <>1__state)
		{
		}

		[Token(Token = "0x6002942")]
		[Address(RVA = "0x851750", Offset = "0x851750", VA = "0x851750", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002943")]
		[Address(RVA = "0x851754", Offset = "0x851754", VA = "0x851754", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002945")]
		[Address(RVA = "0x851964", Offset = "0x851964", VA = "0x851964", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000534")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x643D28", Offset = "0x643D28")]
	private sealed class <ResetObjectSequence>d__33 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002401")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002402")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002403")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public InteractableObjectReset <>4__this;

		[Token(Token = "0x4002404")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <startTime>5__2;

		[Token(Token = "0x4002405")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <normalisedTime>5__3;

		[Token(Token = "0x1700021B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600294A")]
			[Address(RVA = "0x851E90", Offset = "0x851E90", VA = "0x851E90", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700021C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600294C")]
			[Address(RVA = "0x851F00", Offset = "0x851F00", VA = "0x851F00", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002947")]
		[Address(RVA = "0x8516B8", Offset = "0x8516B8", VA = "0x8516B8")]
		[DebuggerHidden]
		public <ResetObjectSequence>d__33(int <>1__state)
		{
		}

		[Token(Token = "0x6002948")]
		[Address(RVA = "0x8519D4", Offset = "0x8519D4", VA = "0x8519D4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002949")]
		[Address(RVA = "0x8519D8", Offset = "0x8519D8", VA = "0x8519D8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600294B")]
		[Address(RVA = "0x851E98", Offset = "0x851E98", VA = "0x851E98", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40001D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6487E8", Offset = "0x6487E8")]
	[SerializeField]
	private float _resetTime;

	[Token(Token = "0x40001D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x648834", Offset = "0x648834")]
	[SerializeField]
	private float _dissolveLength;

	[Token(Token = "0x40001D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x648880", Offset = "0x648880")]
	[SerializeField]
	private bool _resetTorque;

	[Token(Token = "0x40001DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6488CC", Offset = "0x6488CC")]
	[SerializeField]
	private Texture _dissolveMask;

	[Token(Token = "0x40001DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x648918", Offset = "0x648918")]
	[SerializeField]
	private string _dissolveMaskName;

	[Token(Token = "0x40001DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private VRTK_InteractableObject _object;

	[Token(Token = "0x40001DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3 _originalPosition;

	[Token(Token = "0x40001DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Quaternion _originalRotation;

	[Token(Token = "0x40001DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private VRTK_SnapDropZone _originalSnapDropZone;

	[Token(Token = "0x40001E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool _resetInProgress;

	[Token(Token = "0x40001E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private List<SavedMaterial> _savedMaterialList;

	[Token(Token = "0x40001E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Shader _dissolveShader;

	[Token(Token = "0x40001E3")]
	private const float _distanceEpsilon = 0.1f;

	[Token(Token = "0x40001E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float _timer;

	[Token(Token = "0x40001E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private bool _snapped;

	[Token(Token = "0x40001E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x85")]
	private bool _grabbed;

	[Token(Token = "0x40001E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x86")]
	private bool _ready;

	[Token(Token = "0x6000255")]
	[Address(RVA = "0x8506A4", Offset = "0x8506A4", VA = "0x8506A4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000256")]
	[Address(RVA = "0x85089C", Offset = "0x85089C", VA = "0x85089C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x666478", Offset = "0x666478")]
	private IEnumerator InitInitialPosition()
	{
		return null;
	}

	[Token(Token = "0x6000257")]
	[Address(RVA = "0x85093C", Offset = "0x85093C", VA = "0x85093C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000258")]
	[Address(RVA = "0x850A98", Offset = "0x850A98", VA = "0x850A98")]
	private void OnSnapToDropZone(object sender, InteractableObjectEventArgs e)
	{
	}

	[Token(Token = "0x6000259")]
	[Address(RVA = "0x850B20", Offset = "0x850B20", VA = "0x850B20")]
	private void OnUnsnapFromDropZone(object sender, InteractableObjectEventArgs e)
	{
	}

	[Token(Token = "0x600025A")]
	[Address(RVA = "0x850B28", Offset = "0x850B28", VA = "0x850B28")]
	private void OnObjectGrabbed(object sender, InteractableObjectEventArgs e)
	{
	}

	[Token(Token = "0x600025B")]
	[Address(RVA = "0x850DB8", Offset = "0x850DB8", VA = "0x850DB8")]
	private void OnObjectUngrabbed(object sender, InteractableObjectEventArgs e)
	{
	}

	[Token(Token = "0x600025C")]
	[Address(RVA = "0x850E64", Offset = "0x850E64", VA = "0x850E64")]
	private void StartResetTimer()
	{
	}

	[Token(Token = "0x600025D")]
	[Address(RVA = "0x850B18", Offset = "0x850B18", VA = "0x850B18")]
	private void StopResetTimer()
	{
	}

	[Token(Token = "0x600025E")]
	[Address(RVA = "0x850E70", Offset = "0x850E70", VA = "0x850E70")]
	private void Update()
	{
	}

	[Token(Token = "0x600025F")]
	[Address(RVA = "0x85100C", Offset = "0x85100C", VA = "0x85100C")]
	private void ResetObject()
	{
	}

	[Token(Token = "0x6000260")]
	[Address(RVA = "0x8510AC", Offset = "0x8510AC", VA = "0x8510AC")]
	private void SaveObjectMaterials()
	{
	}

	[Token(Token = "0x6000261")]
	[Address(RVA = "0x850B70", Offset = "0x850B70", VA = "0x850B70")]
	private void RestoreObjectMaterials()
	{
	}

	[Token(Token = "0x6000262")]
	[Address(RVA = "0x85131C", Offset = "0x85131C", VA = "0x85131C")]
	private void SetDissolveShader()
	{
	}

	[Token(Token = "0x6000263")]
	[Address(RVA = "0x851570", Offset = "0x851570", VA = "0x851570")]
	private void SetDissolveAmount(float amount)
	{
	}

	[Token(Token = "0x6000264")]
	[Address(RVA = "0x851038", Offset = "0x851038", VA = "0x851038")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6664DC", Offset = "0x6664DC")]
	private IEnumerator ResetObjectSequence()
	{
		return null;
	}

	[Token(Token = "0x6000265")]
	[Address(RVA = "0x8516E4", Offset = "0x8516E4", VA = "0x8516E4")]
	public InteractableObjectReset()
	{
	}
}
[Token(Token = "0x2000057")]
public delegate void InteractionCompleteEventHandler(object sender, Interaction interaction);
[Token(Token = "0x2000058")]
public interface Interaction
{
	[Token(Token = "0x1700003F")]
	bool isInteractionComplete
	{
		[Token(Token = "0x600026E")]
		get;
	}

	[Token(Token = "0x17000040")]
	bool interactionProgressing
	{
		[Token(Token = "0x6000273")]
		get;
	}

	[Token(Token = "0x14000011")]
	event InteractionCompleteEventHandler onInteractionComplete;

	[Token(Token = "0x14000012")]
	event InteractionCompleteEventHandler onInteractionUncomplete;

	[Token(Token = "0x14000013")]
	event InteractionCompleteEventHandler onInteractionProgressStart;

	[Token(Token = "0x14000014")]
	event InteractionCompleteEventHandler onInteractionProgressStop;

	[Token(Token = "0x6000274")]
	void Reset();
}
[Token(Token = "0x2000059")]
public class InteractionSetup : MonoBehaviour
{
	[Token(Token = "0x40001E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private VRTK_ControllerEvents.ButtonAlias _grabButton;

	[Token(Token = "0x40001E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private VRTK_ControllerEvents.ButtonAlias _alternateGrabButton;

	[Token(Token = "0x40001EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private VRTK_ControllerEvents.ButtonAlias _useButton;

	[Token(Token = "0x40001EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private VRTK_ControllerEvents.ButtonAlias _alternateUseButton;

	[Token(Token = "0x40001EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private SDK_BaseController.ButtonTypes _handAnimateButton;

	[Token(Token = "0x40001ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private bool _requireAlternateHandAnimation;

	[Token(Token = "0x40001EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private SDK_BaseController.ButtonTypes _alternateHandAnimateButton;

	[Token(Token = "0x40001EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private bool _completed;

	[Token(Token = "0x17000041")]
	public SDK_BaseController.ButtonTypes handAnimateButton
	{
		[Token(Token = "0x6000275")]
		[Address(RVA = "0x842848", Offset = "0x842848", VA = "0x842848")]
		get
		{
			return default(SDK_BaseController.ButtonTypes);
		}
	}

	[Token(Token = "0x17000042")]
	public SDK_BaseController.ButtonTypes alternateHandAnimateButton
	{
		[Token(Token = "0x6000276")]
		[Address(RVA = "0x842850", Offset = "0x842850", VA = "0x842850")]
		get
		{
			return default(SDK_BaseController.ButtonTypes);
		}
	}

	[Token(Token = "0x6000277")]
	[Address(RVA = "0x852390", Offset = "0x852390", VA = "0x852390")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000278")]
	[Address(RVA = "0x85252C", Offset = "0x85252C", VA = "0x85252C")]
	public InteractionSetup()
	{
	}
}
[Token(Token = "0x200005A")]
internal interface ILaserHit
{
	[Token(Token = "0x6000279")]
	void OnLaserHit(LaserBeam sender, Vector3 point, Vector3 direction, Vector3 normal, Color color, int bouncesLeft);
}
[Token(Token = "0x200005B")]
public class LaserBeam : MonoBehaviour
{
	[Token(Token = "0x40001F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private LineRenderer _laserLineRenderer;

	[Token(Token = "0x40001F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Transform _joinPrefab;

	[Token(Token = "0x40001F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6489F4", Offset = "0x6489F4")]
	[SerializeField]
	private SoundEffect _emitLoopSoundName;

	[Token(Token = "0x40001F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x648A40", Offset = "0x648A40")]
	[SerializeField]
	private SoundEffect _enableSoundName;

	[Token(Token = "0x40001F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x648A8C", Offset = "0x648A8C")]
	[SerializeField]
	private SoundEffect _disableSoundName;

	[Token(Token = "0x40001F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<Transform> _joinInstance;

	[Token(Token = "0x40001F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private Color _initialColor;

	[Token(Token = "0x40001F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private int _maxBounces;

	[Token(Token = "0x40001F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private int _bounces;

	[Token(Token = "0x40001F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private SoundChannel _emitLoopChannel;

	[Token(Token = "0x40001FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private List<Vector3> _point;

	[Token(Token = "0x17000043")]
	public Color color
	{
		[Token(Token = "0x600027B")]
		[Address(RVA = "0x856B40", Offset = "0x856B40", VA = "0x856B40")]
		get
		{
			return default(Color);
		}
		[Token(Token = "0x600027A")]
		[Address(RVA = "0x856B34", Offset = "0x856B34", VA = "0x856B34")]
		set
		{
		}
	}

	[Token(Token = "0x17000044")]
	public int maxBounces
	{
		[Token(Token = "0x600027C")]
		[Address(RVA = "0x856B4C", Offset = "0x856B4C", VA = "0x856B4C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600027D")]
		[Address(RVA = "0x856B54", Offset = "0x856B54", VA = "0x856B54")]
		set
		{
		}
	}

	[Token(Token = "0x600027E")]
	[Address(RVA = "0x856B5C", Offset = "0x856B5C", VA = "0x856B5C")]
	private void Start()
	{
	}

	[Token(Token = "0x600027F")]
	[Address(RVA = "0x856CB0", Offset = "0x856CB0", VA = "0x856CB0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000280")]
	[Address(RVA = "0x856D08", Offset = "0x856D08", VA = "0x856D08")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000281")]
	[Address(RVA = "0x856DBC", Offset = "0x856DBC", VA = "0x856DBC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000282")]
	[Address(RVA = "0x856F1C", Offset = "0x856F1C", VA = "0x856F1C")]
	public void AddRay(Vector3 origin, Vector3 direction, Color color)
	{
	}

	[Token(Token = "0x6000283")]
	[Address(RVA = "0x857440", Offset = "0x857440", VA = "0x857440")]
	private void HandleNotify(GameObject hit, Vector3 point, Vector3 direction, Vector3 normal)
	{
	}

	[Token(Token = "0x6000284")]
	[Address(RVA = "0x8570DC", Offset = "0x8570DC", VA = "0x8570DC")]
	private void UpdateRender()
	{
	}

	[Token(Token = "0x6000285")]
	[Address(RVA = "0x8575A8", Offset = "0x8575A8", VA = "0x8575A8")]
	public LaserBeam()
	{
	}
}
[Token(Token = "0x200005C")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x63D31C", Offset = "0x63D31C")]
public class LaserInteraction : MonoBehaviour, Interaction, ILaserHit
{
	[Token(Token = "0x40001FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x648AF8", Offset = "0x648AF8")]
	[SerializeField]
	private SoundEffect _interactionCompleteSoundName;

	[Token(Token = "0x40001FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x648B44", Offset = "0x648B44")]
	[SerializeField]
	private SoundEffect _interactionUncompleteSoundName;

	[Token(Token = "0x40001FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x648B90", Offset = "0x648B90")]
	[SerializeField]
	private SoundEffect _interactionCompleteLoopSoundName;

	[Token(Token = "0x40001FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x648BDC", Offset = "0x648BDC")]
	[SerializeField]
	private List<Color> _acceptColor;

	[Token(Token = "0x40001FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x648C28", Offset = "0x648C28")]
	[SerializeField]
	private bool _complete;

	[Token(Token = "0x4000200")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x648C74", Offset = "0x648C74")]
	[SerializeField]
	private float _completionTime;

	[Token(Token = "0x4000201")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private SoundChannel _loopChannel;

	[Token(Token = "0x4000202")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool _hit;

	[Token(Token = "0x4000203")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float _completionTimer;

	[Token(Token = "0x17000045")]
	public bool isInteractionComplete
	{
		[Token(Token = "0x6000286")]
		[Address(RVA = "0x857618", Offset = "0x857618", VA = "0x857618", Slot = "8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000046")]
	public bool interactionProgressing
	{
		[Token(Token = "0x6000287")]
		[Address(RVA = "0x857620", Offset = "0x857620", VA = "0x857620", Slot = "13")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x14000015")]
	public event InteractionCompleteEventHandler onInteractionComplete
	{
		[Token(Token = "0x6000288")]
		[Address(RVA = "0x857628", Offset = "0x857628", VA = "0x857628", Slot = "4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6665C0", Offset = "0x6665C0")]
		add
		{
		}
		[Token(Token = "0x6000289")]
		[Address(RVA = "0x857714", Offset = "0x857714", VA = "0x857714", Slot = "5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6665D0", Offset = "0x6665D0")]
		remove
		{
		}
	}

	[Token(Token = "0x14000016")]
	public event InteractionCompleteEventHandler onInteractionUncomplete
	{
		[Token(Token = "0x600028A")]
		[Address(RVA = "0x857800", Offset = "0x857800", VA = "0x857800", Slot = "6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6665E0", Offset = "0x6665E0")]
		add
		{
		}
		[Token(Token = "0x600028B")]
		[Address(RVA = "0x8578EC", Offset = "0x8578EC", VA = "0x8578EC", Slot = "7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6665F0", Offset = "0x6665F0")]
		remove
		{
		}
	}

	[Token(Token = "0x14000017")]
	public event InteractionCompleteEventHandler onInteractionProgressStart
	{
		[Token(Token = "0x600028C")]
		[Address(RVA = "0x8579D8", Offset = "0x8579D8", VA = "0x8579D8", Slot = "9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x666600", Offset = "0x666600")]
		add
		{
		}
		[Token(Token = "0x600028D")]
		[Address(RVA = "0x857AC4", Offset = "0x857AC4", VA = "0x857AC4", Slot = "10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x666610", Offset = "0x666610")]
		remove
		{
		}
	}

	[Token(Token = "0x14000018")]
	public event InteractionCompleteEventHandler onInteractionProgressStop
	{
		[Token(Token = "0x600028E")]
		[Address(RVA = "0x857BB0", Offset = "0x857BB0", VA = "0x857BB0", Slot = "11")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x666620", Offset = "0x666620")]
		add
		{
		}
		[Token(Token = "0x600028F")]
		[Address(RVA = "0x857C9C", Offset = "0x857C9C", VA = "0x857C9C", Slot = "12")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x666630", Offset = "0x666630")]
		remove
		{
		}
	}

	[Token(Token = "0x6000290")]
	[Address(RVA = "0x857D88", Offset = "0x857D88", VA = "0x857D88")]
	private void Start()
	{
	}

	[Token(Token = "0x6000291")]
	[Address(RVA = "0x857D90", Offset = "0x857D90", VA = "0x857D90")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000292")]
	[Address(RVA = "0x857E28", Offset = "0x857E28", VA = "0x857E28", Slot = "15")]
	public void OnLaserHit(LaserBeam sender, Vector3 point, Vector3 direction, Vector3 normal, Color color, int bouncesLeft)
	{
	}

	[Token(Token = "0x6000293")]
	[Address(RVA = "0x858078", Offset = "0x858078", VA = "0x858078")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000294")]
	[Address(RVA = "0x85817C", Offset = "0x85817C", VA = "0x85817C", Slot = "14")]
	public void Reset()
	{
	}

	[Token(Token = "0x6000295")]
	[Address(RVA = "0x858180", Offset = "0x858180", VA = "0x858180")]
	public LaserInteraction()
	{
	}
}
[Token(Token = "0x200005D")]
public class LaserLens : MonoBehaviour, ILaserHit
{
	[Token(Token = "0x2000535")]
	private class Beam
	{
		[Token(Token = "0x4002406")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public LaserBeam source;

		[Token(Token = "0x4002407")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<LaserBeam> reflection;

		[Token(Token = "0x4002408")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<SoundChannel> sound;

		[Token(Token = "0x4002409")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool seen;

		[Token(Token = "0x600294D")]
		[Address(RVA = "0x7E6B5C", Offset = "0x7E6B5C", VA = "0x7E6B5C")]
		public Beam()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000536")]
	private struct ColorTransform
	{
		[Token(Token = "0x400240A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x663D1C", Offset = "0x663D1C")]
		public Color entryColor;

		[Token(Token = "0x400240B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x663D54", Offset = "0x663D54")]
		public Color exitColor;
	}

	[Token(Token = "0x2000537")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x643D38", Offset = "0x643D38")]
	private sealed class <>c__DisplayClass16_0
	{
		[Token(Token = "0x400240C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public LaserBeam laserBeam;

		[Token(Token = "0x600294E")]
		[Address(RVA = "0x7E5A54", Offset = "0x7E5A54", VA = "0x7E5A54")]
		public <>c__DisplayClass16_0()
		{
		}

		[Token(Token = "0x600294F")]
		[Address(RVA = "0x7E71E8", Offset = "0x7E71E8", VA = "0x7E71E8")]
		internal bool <GetBeam>b__0(Beam obj)
		{
			return default(bool);
		}
	}

	[Serializable]
	[Token(Token = "0x2000538")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x643D48", Offset = "0x643D48")]
	private sealed class <>c
	{
		[Token(Token = "0x400240D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x400240E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Predicate<Beam> <>9__20_0;

		[Token(Token = "0x6002951")]
		[Address(RVA = "0x7E71AC", Offset = "0x7E71AC", VA = "0x7E71AC")]
		public <>c()
		{
		}

		[Token(Token = "0x6002952")]
		[Address(RVA = "0x7E71B4", Offset = "0x7E71B4", VA = "0x7E71B4")]
		internal bool <LateUpdate>b__20_0(Beam obj)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4000208")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform _laserPrefab;

	[Token(Token = "0x4000209")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x648D10", Offset = "0x648D10")]
	[SerializeField]
	private SoundEffect _lensActiveLoopSoundName;

	[Token(Token = "0x400020A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x648D5C", Offset = "0x648D5C")]
	[SerializeField]
	private SoundEffect _lensBeginActiveSoundName;

	[Token(Token = "0x400020B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x648DA8", Offset = "0x648DA8")]
	[SerializeField]
	private SoundEffect _lensEndActiveSoundName;

	[Token(Token = "0x400020C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private SoundChannel _lensActiveChannel;

	[Token(Token = "0x400020D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<Beam> _beam;

	[Token(Token = "0x400020E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x648DF4", Offset = "0x648DF4")]
	[SerializeField]
	private bool _refract;

	[Token(Token = "0x400020F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x648E40", Offset = "0x648E40")]
	[SerializeField]
	private int _splitCount;

	[Token(Token = "0x4000210")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x648E8C", Offset = "0x648E8C")]
	[SerializeField]
	private float _splitAngle;

	[Token(Token = "0x4000211")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x648ED8", Offset = "0x648ED8")]
	[SerializeField]
	private float _depth;

	[Token(Token = "0x4000212")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private bool _depthInBeamDirection;

	[Token(Token = "0x4000213")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x648F34", Offset = "0x648F34")]
	[SerializeField]
	private List<ColorTransform> _colorTransform;

	[Token(Token = "0x4000214")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x648F80", Offset = "0x648F80")]
	[SerializeField]
	private bool _transformUnknownColor;

	[Token(Token = "0x4000215")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x648FCC", Offset = "0x648FCC")]
	[SerializeField]
	private Color _unknownExitColor;

	[Token(Token = "0x6000296")]
	[Address(RVA = "0x7E5984", Offset = "0x7E5984", VA = "0x7E5984")]
	private Beam GetBeam(LaserBeam laserBeam)
	{
		return null;
	}

	[Token(Token = "0x6000297")]
	[Address(RVA = "0x7E5A5C", Offset = "0x7E5A5C", VA = "0x7E5A5C")]
	public static bool CompareColor(Color a, Color b)
	{
		return default(bool);
	}

	[Token(Token = "0x6000298")]
	[Address(RVA = "0x7E5B60", Offset = "0x7E5B60", VA = "0x7E5B60")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000299")]
	[Address(RVA = "0x7E5BF8", Offset = "0x7E5BF8", VA = "0x7E5BF8", Slot = "4")]
	public void OnLaserHit(LaserBeam sender, Vector3 point, Vector3 direction, Vector3 normal, Color color, int bouncesLeft)
	{
	}

	[Token(Token = "0x600029A")]
	[Address(RVA = "0x7E6B64", Offset = "0x7E6B64", VA = "0x7E6B64")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600029B")]
	[Address(RVA = "0x7E70C0", Offset = "0x7E70C0", VA = "0x7E70C0")]
	public LaserLens()
	{
	}
}
[Token(Token = "0x200005E")]
public class LaserReflector : MonoBehaviour, ILaserHit
{
	[Token(Token = "0x4000216")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x649018", Offset = "0x649018")]
	[SerializeField]
	private SoundEffect _lensActiveLoopSoundName;

	[Token(Token = "0x4000217")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x649064", Offset = "0x649064")]
	[SerializeField]
	private SoundEffect _lensBeginActiveSoundName;

	[Token(Token = "0x4000218")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6490B0", Offset = "0x6490B0")]
	[SerializeField]
	private SoundEffect _lensEndActiveSoundName;

	[Token(Token = "0x4000219")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool _seen;

	[Token(Token = "0x400021A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	private bool _previousSeen;

	[Token(Token = "0x400021B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private SoundChannel _reflectorLoopChannel;

	[Token(Token = "0x600029C")]
	[Address(RVA = "0x7E7274", Offset = "0x7E7274", VA = "0x7E7274", Slot = "4")]
	public void OnLaserHit(LaserBeam sender, Vector3 point, Vector3 direction, Vector3 normal, Color color, int bounces)
	{
	}

	[Token(Token = "0x600029D")]
	[Address(RVA = "0x7E73E4", Offset = "0x7E73E4", VA = "0x7E73E4")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x600029E")]
	[Address(RVA = "0x7E747C", Offset = "0x7E747C", VA = "0x7E747C")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600029F")]
	[Address(RVA = "0x7E7594", Offset = "0x7E7594", VA = "0x7E7594")]
	public LaserReflector()
	{
	}
}
[Token(Token = "0x200005F")]
public class laserReflectorObject : MonoBehaviour
{
	[Token(Token = "0x400021C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private AudioClip[] objectCollision;

	[Token(Token = "0x60002A0")]
	[Address(RVA = "0x14D4C74", Offset = "0x14D4C74", VA = "0x14D4C74")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x60002A1")]
	[Address(RVA = "0x14D4E14", Offset = "0x14D4E14", VA = "0x14D4E14")]
	public laserReflectorObject()
	{
	}
}
[Token(Token = "0x2000060")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x63D380", Offset = "0x63D380")]
public class LevelHintData : ScriptableObject
{
	[Token(Token = "0x2000539")]
	public enum Delay
	{
		[Token(Token = "0x4002410")]
		Short,
		[Token(Token = "0x4002411")]
		Medium,
		[Token(Token = "0x4002412")]
		Long
	}

	[Token(Token = "0x200053A")]
	public enum HintZoneType
	{
		[Token(Token = "0x4002414")]
		Include,
		[Token(Token = "0x4002415")]
		Exclude
	}

	[Serializable]
	[Token(Token = "0x200053B")]
	public struct HintDialogue
	{
		[Token(Token = "0x4002416")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		public Delay delay;

		[Token(Token = "0x4002417")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[SerializeField]
		public string dialogueBlockName;
	}

	[Serializable]
	[Token(Token = "0x200053C")]
	public class Hint
	{
		[Token(Token = "0x4002418")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		public string name;

		[Token(Token = "0x4002419")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x663DBC", Offset = "0x663DBC")]
		[SerializeField]
		public HintZoneType zoneType;

		[Token(Token = "0x400241A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		public List<string> zoneName;

		[Token(Token = "0x400241B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x663E08", Offset = "0x663E08")]
		[SerializeField]
		public bool loop;

		[Token(Token = "0x400241C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		public List<HintDialogue> dialogue;

		[Token(Token = "0x6002953")]
		[Address(RVA = "0x7E7648", Offset = "0x7E7648", VA = "0x7E7648")]
		public Hint()
		{
		}
	}

	[Token(Token = "0x400021D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public List<Hint> hint;

	[Token(Token = "0x400021E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	public float shortHintRemindTime;

	[Token(Token = "0x400021F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	public float mediumHintRemindTime;

	[Token(Token = "0x4000220")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	public float longHintRemindTime;

	[Token(Token = "0x4000221")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	public float globalHintDelayTime;

	[Token(Token = "0x60002A2")]
	[Address(RVA = "0x7E7634", Offset = "0x7E7634", VA = "0x7E7634")]
	public LevelHintData()
	{
	}
}
[Token(Token = "0x2000061")]
public class Lift : MonoBehaviour
{
	[Token(Token = "0x4000222")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject oldParent;

	[Token(Token = "0x4000223")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Transform initialParent;

	[Token(Token = "0x4000224")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Transform initialObject;

	[Token(Token = "0x4000225")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool onLift;

	[Token(Token = "0x4000226")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Vector3 prevPosition;

	[Token(Token = "0x60002A3")]
	[Address(RVA = "0x7E7A64", Offset = "0x7E7A64", VA = "0x7E7A64")]
	public void LateUpdate()
	{
	}

	[Token(Token = "0x60002A4")]
	[Address(RVA = "0x7E7C4C", Offset = "0x7E7C4C", VA = "0x7E7C4C")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60002A5")]
	[Address(RVA = "0x7E7CD8", Offset = "0x7E7CD8", VA = "0x7E7CD8")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x60002A6")]
	[Address(RVA = "0x7E7D60", Offset = "0x7E7D60", VA = "0x7E7D60")]
	public Lift()
	{
	}
}
[Token(Token = "0x2000062")]
public class LookAtInteraction : MonoBehaviour, Interaction
{
	[Token(Token = "0x200053D")]
	private enum Mode
	{
		[Token(Token = "0x400241E")]
		DotAngle,
		[Token(Token = "0x400241F")]
		FrustumCheck
	}

	[Token(Token = "0x4000227")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64918C", Offset = "0x64918C")]
	[SerializeField]
	private Mode _mode;

	[Token(Token = "0x4000228")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6491D8", Offset = "0x6491D8")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6491D8", Offset = "0x6491D8")]
	[SerializeField]
	private float _maxViewAngle;

	[Token(Token = "0x4000229")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x649248", Offset = "0x649248")]
	[SerializeField]
	private Renderer _frustumCheckRenderer;

	[Token(Token = "0x400022A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x649294", Offset = "0x649294")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x649294", Offset = "0x649294")]
	[SerializeField]
	private float _maxDistance;

	[Token(Token = "0x400022B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6492F4", Offset = "0x6492F4")]
	[SerializeField]
	private float _maxNormalAngle;

	[Token(Token = "0x400022C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x649340", Offset = "0x649340")]
	[SerializeField]
	private float _triggerTime;

	[Token(Token = "0x400022D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64938C", Offset = "0x64938C")]
	[SerializeField]
	private bool _checkClearView;

	[Token(Token = "0x400022E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6493D8", Offset = "0x6493D8")]
	[SerializeField]
	private bool _ignoreDistanceForUncomplete;

	[Token(Token = "0x400022F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float _currentViewAngle;

	[Token(Token = "0x4000230")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float _currentNormalAngle;

	[Token(Token = "0x4000231")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool _currentClearView;

	[Token(Token = "0x4000232")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float _currentDistanceSq;

	[Token(Token = "0x4000233")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Plane[] _cameraPlanes;

	[Token(Token = "0x4000234")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float _triggerTimer;

	[Token(Token = "0x4000235")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private bool _complete;

	[Token(Token = "0x17000047")]
	private bool Interaction.isInteractionComplete
	{
		[Token(Token = "0x60002A7")]
		[Address(RVA = "0x7ECB80", Offset = "0x7ECB80", VA = "0x7ECB80", Slot = "8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000048")]
	private bool Interaction.interactionProgressing
	{
		[Token(Token = "0x60002A8")]
		[Address(RVA = "0x7ECB88", Offset = "0x7ECB88", VA = "0x7ECB88", Slot = "13")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x14000019")]
	public event InteractionCompleteEventHandler onInteractionComplete
	{
		[Token(Token = "0x60002A9")]
		[Address(RVA = "0x7ECB90", Offset = "0x7ECB90", VA = "0x7ECB90", Slot = "4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x666640", Offset = "0x666640")]
		add
		{
		}
		[Token(Token = "0x60002AA")]
		[Address(RVA = "0x7ECC7C", Offset = "0x7ECC7C", VA = "0x7ECC7C", Slot = "5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x666650", Offset = "0x666650")]
		remove
		{
		}
	}

	[Token(Token = "0x1400001A")]
	public event InteractionCompleteEventHandler onInteractionUncomplete
	{
		[Token(Token = "0x60002AB")]
		[Address(RVA = "0x7ECD68", Offset = "0x7ECD68", VA = "0x7ECD68", Slot = "6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x666660", Offset = "0x666660")]
		add
		{
		}
		[Token(Token = "0x60002AC")]
		[Address(RVA = "0x7ECE54", Offset = "0x7ECE54", VA = "0x7ECE54", Slot = "7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x666670", Offset = "0x666670")]
		remove
		{
		}
	}

	[Token(Token = "0x1400001B")]
	public event InteractionCompleteEventHandler onInteractionProgressStart
	{
		[Token(Token = "0x60002AD")]
		[Address(RVA = "0x7ECF40", Offset = "0x7ECF40", VA = "0x7ECF40", Slot = "9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x666680", Offset = "0x666680")]
		add
		{
		}
		[Token(Token = "0x60002AE")]
		[Address(RVA = "0x7ED02C", Offset = "0x7ED02C", VA = "0x7ED02C", Slot = "10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x666690", Offset = "0x666690")]
		remove
		{
		}
	}

	[Token(Token = "0x1400001C")]
	public event InteractionCompleteEventHandler onInteractionProgressStop
	{
		[Token(Token = "0x60002AF")]
		[Address(RVA = "0x7ED118", Offset = "0x7ED118", VA = "0x7ED118", Slot = "11")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6666A0", Offset = "0x6666A0")]
		add
		{
		}
		[Token(Token = "0x60002B0")]
		[Address(RVA = "0x7ED204", Offset = "0x7ED204", VA = "0x7ED204", Slot = "12")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6666B0", Offset = "0x6666B0")]
		remove
		{
		}
	}

	[Token(Token = "0x60002B1")]
	[Address(RVA = "0x7ED2F0", Offset = "0x7ED2F0", VA = "0x7ED2F0", Slot = "14")]
	public void Reset()
	{
	}

	[Token(Token = "0x60002B2")]
	[Address(RVA = "0x7ED2F4", Offset = "0x7ED2F4", VA = "0x7ED2F4")]
	private void Update()
	{
	}

	[Token(Token = "0x60002B3")]
	[Address(RVA = "0x7ED9A4", Offset = "0x7ED9A4", VA = "0x7ED9A4")]
	public LookAtInteraction()
	{
	}
}
[Token(Token = "0x2000063")]
public class MazeInteractGrab : VRTK_InteractGrab
{
	[Token(Token = "0x200053E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x643D58", Offset = "0x643D58")]
	private sealed class <DoGrabObjectImpl>d__13 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002420")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002421")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002422")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MazeInteractGrab <>4__this;

		[Token(Token = "0x4002423")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ControllerInteractionEventArgs e;

		[Token(Token = "0x4002424")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private GameObject <objectToGrab>5__2;

		[Token(Token = "0x4002425")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private PreGrabHandler <handler>5__3;

		[Token(Token = "0x4002426")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private PreGrabHandler.Result <result>5__4;

		[Token(Token = "0x1700021D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002957")]
			[Address(RVA = "0x7F116C", Offset = "0x7F116C", VA = "0x7F116C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700021E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002959")]
			[Address(RVA = "0x7F11DC", Offset = "0x7F11DC", VA = "0x7F11DC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002954")]
		[Address(RVA = "0x7F0C5C", Offset = "0x7F0C5C", VA = "0x7F0C5C")]
		[DebuggerHidden]
		public <DoGrabObjectImpl>d__13(int <>1__state)
		{
		}

		[Token(Token = "0x6002955")]
		[Address(RVA = "0x7F0EE0", Offset = "0x7F0EE0", VA = "0x7F0EE0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002956")]
		[Address(RVA = "0x7F0EE4", Offset = "0x7F0EE4", VA = "0x7F0EE4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002958")]
		[Address(RVA = "0x7F1174", Offset = "0x7F1174", VA = "0x7F1174", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400023A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private float _delayTime;

	[Token(Token = "0x400023B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private float _grabDistance;

	[Token(Token = "0x400023C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[SerializeField]
	private float _dualShock4ThrowMultiplier;

	[Token(Token = "0x400023D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private bool _grabReleased;

	[Token(Token = "0x400023E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private VRTK_ControllerEvents.ButtonAlias _alternateGrabButton;

	[Token(Token = "0x400023F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private int _grabFlag;

	[Token(Token = "0x17000049")]
	public float dualShock4ThrowMultiplier
	{
		[Token(Token = "0x60002B4")]
		[Address(RVA = "0x7F0374", Offset = "0x7F0374", VA = "0x7F0374")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x60002B5")]
	[Address(RVA = "0x7F037C", Offset = "0x7F037C", VA = "0x7F037C", Slot = "16")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x60002B6")]
	[Address(RVA = "0x7F0444", Offset = "0x7F0444", VA = "0x7F0444", Slot = "17")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x60002B7")]
	[Address(RVA = "0x7F0504", Offset = "0x7F0504", VA = "0x7F0504")]
	public void AddAlternateGrabButton(VRTK_ControllerEvents.ButtonAlias alternateGrabButton)
	{
	}

	[Token(Token = "0x60002B8")]
	[Address(RVA = "0x7F06C4", Offset = "0x7F06C4", VA = "0x7F06C4")]
	public void RemoveAlternateGrabButton()
	{
	}

	[Token(Token = "0x60002B9")]
	[Address(RVA = "0x7F07CC", Offset = "0x7F07CC", VA = "0x7F07CC", Slot = "46")]
	protected override void DoGrabObject(object sender, ControllerInteractionEventArgs e)
	{
	}

	[Token(Token = "0x60002BA")]
	[Address(RVA = "0x7F0B70", Offset = "0x7F0B70", VA = "0x7F0B70")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6666C0", Offset = "0x6666C0")]
	protected IEnumerator DoGrabObjectImpl(object sender, ControllerInteractionEventArgs e)
	{
		return null;
	}

	[Token(Token = "0x60002BB")]
	[Address(RVA = "0x7F0C88", Offset = "0x7F0C88", VA = "0x7F0C88", Slot = "47")]
	protected override void DoReleaseObject(object sender, ControllerInteractionEventArgs e)
	{
	}

	[Token(Token = "0x60002BC")]
	[Address(RVA = "0x7F0A04", Offset = "0x7F0A04", VA = "0x7F0A04")]
	private void UpdateGrabHighlightState()
	{
	}

	[Token(Token = "0x60002BD")]
	[Address(RVA = "0x7F0EB0", Offset = "0x7F0EB0", VA = "0x7F0EB0")]
	private void OnGrabButtonReleased(object sender, ControllerInteractionEventArgs e)
	{
	}

	[Token(Token = "0x60002BE")]
	[Address(RVA = "0x7F0EBC", Offset = "0x7F0EBC", VA = "0x7F0EBC")]
	private void OnGrabButtonPressed(object sender, ControllerInteractionEventArgs e)
	{
	}

	[Token(Token = "0x60002BF")]
	[Address(RVA = "0x7F0EC0", Offset = "0x7F0EC0", VA = "0x7F0EC0")]
	public MazeInteractGrab()
	{
	}
}
[Token(Token = "0x2000064")]
public class MazeSnapDropZone : VRTK_SnapDropZone
{
	[Token(Token = "0x200053F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x643D68", Offset = "0x643D68")]
	private sealed class <IgnoreCollisionsWithObject>d__19 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002427")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002428")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002429")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MazeSnapDropZone <>4__this;

		[Token(Token = "0x400242A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SnapDropZoneEventArgs e;

		[Token(Token = "0x400242B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool en;

		[Token(Token = "0x1700021F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600295D")]
			[Address(RVA = "0x7F36BC", Offset = "0x7F36BC", VA = "0x7F36BC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000220")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600295F")]
			[Address(RVA = "0x7F372C", Offset = "0x7F372C", VA = "0x7F372C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600295A")]
		[Address(RVA = "0x7F2AC4", Offset = "0x7F2AC4", VA = "0x7F2AC4")]
		[DebuggerHidden]
		public <IgnoreCollisionsWithObject>d__19(int <>1__state)
		{
		}

		[Token(Token = "0x600295B")]
		[Address(RVA = "0x7F358C", Offset = "0x7F358C", VA = "0x7F358C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600295C")]
		[Address(RVA = "0x7F3590", Offset = "0x7F3590", VA = "0x7F3590", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600295E")]
		[Address(RVA = "0x7F36C4", Offset = "0x7F36C4", VA = "0x7F36C4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000240")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x649474", Offset = "0x649474")]
	[SerializeField]
	private float _angleDelta;

	[Token(Token = "0x4000241")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	[SerializeField]
	private bool _angleIgnoreX;

	[Token(Token = "0x4000242")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x119")]
	[SerializeField]
	private bool _angleIgnoreY;

	[Token(Token = "0x4000243")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11A")]
	[SerializeField]
	private bool _angleIgnoreZ;

	[Token(Token = "0x4000244")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11B")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6494F0", Offset = "0x6494F0")]
	[SerializeField]
	private bool _highlightSetToHoveringObject;

	[Token(Token = "0x4000245")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
	[SerializeField]
	private bool _ignoreBodyCollidersWhenSnapped;

	[Token(Token = "0x4000246")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private GameObject _currentHighlight;

	[Token(Token = "0x4000247")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	[SerializeField]
	public bool enableStay;

	[Token(Token = "0x4000248")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private VRTK_BodyPhysics _bodyPhysics;

	[Token(Token = "0x60002C0")]
	[Address(RVA = "0x7F1D30", Offset = "0x7F1D30", VA = "0x7F1D30")]
	private void Start()
	{
	}

	[Token(Token = "0x60002C1")]
	[Address(RVA = "0x7F1DB0", Offset = "0x7F1DB0", VA = "0x7F1DB0", Slot = "11")]
	public override void ForceSnap(GameObject objectToSnap)
	{
	}

	[Token(Token = "0x60002C2")]
	[Address(RVA = "0x7F1E40", Offset = "0x7F1E40", VA = "0x7F1E40", Slot = "10")]
	public override void InitaliseHighlightObject(bool removeOldObject = false)
	{
	}

	[Token(Token = "0x60002C3")]
	[Address(RVA = "0x7F1F38", Offset = "0x7F1F38", VA = "0x7F1F38")]
	private bool ValidSnapAngle(VRTK_InteractableObject obj)
	{
		return default(bool);
	}

	[Token(Token = "0x60002C4")]
	[Address(RVA = "0x7F21B4", Offset = "0x7F21B4", VA = "0x7F21B4", Slot = "78")]
	protected virtual void OnTriggerStay(Collider collider)
	{
	}

	[Token(Token = "0x60002C5")]
	[Address(RVA = "0x7F22E8", Offset = "0x7F22E8", VA = "0x7F22E8", Slot = "59")]
	protected override void AddCurrentValidSnapObject(VRTK_InteractableObject givenObject)
	{
	}

	[Token(Token = "0x60002C6")]
	[Address(RVA = "0x7F2468", Offset = "0x7F2468", VA = "0x7F2468", Slot = "13")]
	public override void ForceUnsnap()
	{
	}

	[Token(Token = "0x60002C7")]
	[Address(RVA = "0x7F2510", Offset = "0x7F2510", VA = "0x7F2510", Slot = "60")]
	protected override void RemoveCurrentValidSnapObject(VRTK_InteractableObject givenObject)
	{
	}

	[Token(Token = "0x60002C8")]
	[Address(RVA = "0x7F26B4", Offset = "0x7F26B4", VA = "0x7F26B4", Slot = "6")]
	public override void OnObjectSnappedToDropZone(SnapDropZoneEventArgs e)
	{
	}

	[Token(Token = "0x60002C9")]
	[Address(RVA = "0x7F29BC", Offset = "0x7F29BC", VA = "0x7F29BC", Slot = "7")]
	public override void OnObjectSnappingToDropZone(SnapDropZoneEventArgs e)
	{
	}

	[Token(Token = "0x60002CA")]
	[Address(RVA = "0x7F2A14", Offset = "0x7F2A14", VA = "0x7F2A14")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x666724", Offset = "0x666724")]
	private IEnumerator IgnoreCollisionsWithObject(SnapDropZoneEventArgs e, bool en)
	{
		return null;
	}

	[Token(Token = "0x60002CB")]
	[Address(RVA = "0x7F26FC", Offset = "0x7F26FC", VA = "0x7F26FC")]
	private void IgnoreColliders(GameObject obj, bool en)
	{
	}

	[Token(Token = "0x60002CC")]
	[Address(RVA = "0x7F2AF0", Offset = "0x7F2AF0", VA = "0x7F2AF0", Slot = "8")]
	public override void OnObjectUnsnappedFromDropZone(SnapDropZoneEventArgs e)
	{
	}

	[Token(Token = "0x60002CD")]
	[Address(RVA = "0x7F2AF8", Offset = "0x7F2AF8", VA = "0x7F2AF8", Slot = "69")]
	protected override void DeleteHighlightObject()
	{
	}

	[Token(Token = "0x60002CE")]
	[Address(RVA = "0x7F2BB8", Offset = "0x7F2BB8", VA = "0x7F2BB8", Slot = "70")]
	protected override void GenerateEditorHighlightObject()
	{
	}

	[Token(Token = "0x60002CF")]
	[Address(RVA = "0x7F2E3C", Offset = "0x7F2E3C", VA = "0x7F2E3C", Slot = "67")]
	protected override void GenerateHighlightObject()
	{
	}

	[Token(Token = "0x60002D0")]
	[Address(RVA = "0x7F326C", Offset = "0x7F326C", VA = "0x7F326C", Slot = "79")]
	protected virtual void InstantiateHighlight(GameObject objectBlueprint, ref GameObject clonedObject, string givenName)
	{
	}

	[Token(Token = "0x60002D1")]
	[Address(RVA = "0x7F351C", Offset = "0x7F351C", VA = "0x7F351C")]
	public MazeSnapDropZone()
	{
	}
}
[Token(Token = "0x2000065")]
public class ParentChildren : MonoBehaviour
{
	[Token(Token = "0x60002D2")]
	[Address(RVA = "0x7FF690", Offset = "0x7FF690", VA = "0x7FF690")]
	private void OnTriggerEnter(Collider child)
	{
	}

	[Token(Token = "0x60002D3")]
	[Address(RVA = "0x7FF7CC", Offset = "0x7FF7CC", VA = "0x7FF7CC")]
	private void OnTriggerExit(Collider child)
	{
	}

	[Token(Token = "0x60002D4")]
	[Address(RVA = "0x7FF920", Offset = "0x7FF920", VA = "0x7FF920")]
	public ParentChildren()
	{
	}
}
[Token(Token = "0x2000066")]
public class phoneHandset : MonoBehaviour
{
	[Token(Token = "0x60002D5")]
	[Address(RVA = "0x14D4E1C", Offset = "0x14D4E1C", VA = "0x14D4E1C")]
	public phoneHandset()
	{
	}
}
[Token(Token = "0x2000067")]
public class phonographCone : MonoBehaviour
{
	[Token(Token = "0x4000249")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private AudioClip[] objectCollision;

	[Token(Token = "0x60002D6")]
	[Address(RVA = "0x14D4E24", Offset = "0x14D4E24", VA = "0x14D4E24")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x60002D7")]
	[Address(RVA = "0x14D4FC4", Offset = "0x14D4FC4", VA = "0x14D4FC4")]
	public phonographCone()
	{
	}
}
[Token(Token = "0x2000068")]
public class phonographCylinder : MonoBehaviour
{
	[Token(Token = "0x400024A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private AudioClip[] objectCollision;

	[Token(Token = "0x60002D8")]
	[Address(RVA = "0x14D4FCC", Offset = "0x14D4FCC", VA = "0x14D4FCC")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x60002D9")]
	[Address(RVA = "0x14D516C", Offset = "0x14D516C", VA = "0x14D516C")]
	public phonographCylinder()
	{
	}
}
[Token(Token = "0x2000069")]
public class PickUpInteraction : MonoBehaviour, Interaction
{
	[Token(Token = "0x400024B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private VRTK_InteractableObject _object;

	[Token(Token = "0x400024C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private bool _uncompleteOnDrop;

	[Token(Token = "0x400024D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	private bool _complete;

	[Token(Token = "0x1700004A")]
	public bool isInteractionComplete
	{
		[Token(Token = "0x60002DA")]
		[Address(RVA = "0x8D1398", Offset = "0x8D1398", VA = "0x8D1398", Slot = "8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700004B")]
	public bool interactionProgressing
	{
		[Token(Token = "0x60002DB")]
		[Address(RVA = "0x8D13A0", Offset = "0x8D13A0", VA = "0x8D13A0", Slot = "13")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1400001D")]
	public event InteractionCompleteEventHandler onInteractionComplete
	{
		[Token(Token = "0x60002DC")]
		[Address(RVA = "0x8D13A8", Offset = "0x8D13A8", VA = "0x8D13A8", Slot = "4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x666788", Offset = "0x666788")]
		add
		{
		}
		[Token(Token = "0x60002DD")]
		[Address(RVA = "0x8D1494", Offset = "0x8D1494", VA = "0x8D1494", Slot = "5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x666798", Offset = "0x666798")]
		remove
		{
		}
	}

	[Token(Token = "0x1400001E")]
	public event InteractionCompleteEventHandler onInteractionUncomplete
	{
		[Token(Token = "0x60002DE")]
		[Address(RVA = "0x8D1580", Offset = "0x8D1580", VA = "0x8D1580", Slot = "6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6667A8", Offset = "0x6667A8")]
		add
		{
		}
		[Token(Token = "0x60002DF")]
		[Address(RVA = "0x8D166C", Offset = "0x8D166C", VA = "0x8D166C", Slot = "7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6667B8", Offset = "0x6667B8")]
		remove
		{
		}
	}

	[Token(Token = "0x1400001F")]
	public event InteractionCompleteEventHandler onInteractionProgressStart
	{
		[Token(Token = "0x60002E0")]
		[Address(RVA = "0x8D1758", Offset = "0x8D1758", VA = "0x8D1758", Slot = "9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6667C8", Offset = "0x6667C8")]
		add
		{
		}
		[Token(Token = "0x60002E1")]
		[Address(RVA = "0x8D1844", Offset = "0x8D1844", VA = "0x8D1844", Slot = "10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6667D8", Offset = "0x6667D8")]
		remove
		{
		}
	}

	[Token(Token = "0x14000020")]
	public event InteractionCompleteEventHandler onInteractionProgressStop
	{
		[Token(Token = "0x60002E2")]
		[Address(RVA = "0x8D1930", Offset = "0x8D1930", VA = "0x8D1930", Slot = "11")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6667E8", Offset = "0x6667E8")]
		add
		{
		}
		[Token(Token = "0x60002E3")]
		[Address(RVA = "0x8D1A1C", Offset = "0x8D1A1C", VA = "0x8D1A1C", Slot = "12")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6667F8", Offset = "0x6667F8")]
		remove
		{
		}
	}

	[Token(Token = "0x60002E4")]
	[Address(RVA = "0x8D1B08", Offset = "0x8D1B08", VA = "0x8D1B08")]
	public void Awake()
	{
	}

	[Token(Token = "0x60002E5")]
	[Address(RVA = "0x8D1BF4", Offset = "0x8D1BF4", VA = "0x8D1BF4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60002E6")]
	[Address(RVA = "0x8D1CC8", Offset = "0x8D1CC8", VA = "0x8D1CC8")]
	private void OnInteractableObjectUngrabbed(object sender, InteractableObjectEventArgs e)
	{
	}

	[Token(Token = "0x60002E7")]
	[Address(RVA = "0x8D1D0C", Offset = "0x8D1D0C", VA = "0x8D1D0C", Slot = "14")]
	public void Reset()
	{
	}

	[Token(Token = "0x60002E8")]
	[Address(RVA = "0x8D1D14", Offset = "0x8D1D14", VA = "0x8D1D14")]
	private void OnInteractableObjectGrabbed(object sender, InteractableObjectEventArgs e)
	{
	}

	[Token(Token = "0x60002E9")]
	[Address(RVA = "0x8D1D38", Offset = "0x8D1D38", VA = "0x8D1D38")]
	public PickUpInteraction()
	{
	}
}
[Token(Token = "0x200006A")]
public class pictureFrame : MonoBehaviour
{
	[Token(Token = "0x4000252")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private AudioClip[] objectCollision;

	[Token(Token = "0x60002EA")]
	[Address(RVA = "0x14D5174", Offset = "0x14D5174", VA = "0x14D5174")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x60002EB")]
	[Address(RVA = "0x14D5314", Offset = "0x14D5314", VA = "0x14D5314")]
	public pictureFrame()
	{
	}
}
[Token(Token = "0x200006B")]
public class PreGrabHandler : MonoBehaviour
{
	[Token(Token = "0x2000540")]
	private enum HapticsType
	{
		[Token(Token = "0x400242D")]
		Velocity,
		[Token(Token = "0x400242E")]
		Position
	}

	[Token(Token = "0x2000541")]
	private enum AnimationType
	{
		[Token(Token = "0x4002430")]
		PlaybackPosition,
		[Token(Token = "0x4002431")]
		PlaybackSpeed
	}

	[Token(Token = "0x2000542")]
	public enum Result
	{
		[Token(Token = "0x4002433")]
		Continue,
		[Token(Token = "0x4002434")]
		Grab,
		[Token(Token = "0x4002435")]
		Cancel
	}

	[Token(Token = "0x4000253")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6495DC", Offset = "0x6495DC")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6495DC", Offset = "0x6495DC")]
	[SerializeField]
	private float _grabDragDistance;

	[Token(Token = "0x4000254")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64964C", Offset = "0x64964C")]
	[SerializeField]
	private float _grabDragMinTime;

	[Token(Token = "0x4000255")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x649698", Offset = "0x649698")]
	[SerializeField]
	private HapticsType _hapticsType;

	[Token(Token = "0x4000256")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6496E4", Offset = "0x6496E4")]
	[SerializeField]
	private AnimationType _animationType;

	[Token(Token = "0x4000257")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x649730", Offset = "0x649730")]
	[SerializeField]
	private TimelineAsset _timeline;

	[Token(Token = "0x4000258")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x64977C", Offset = "0x64977C")]
	[SerializeField]
	private float _minimumSpeed;

	[Token(Token = "0x4000259")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private float _maximumSpeed;

	[Token(Token = "0x400025A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6497D8", Offset = "0x6497D8")]
	[SerializeField]
	private float _grabbedStrength;

	[Token(Token = "0x400025B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[SerializeField]
	private float _grabbedDuration;

	[Token(Token = "0x400025C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private float _grabbedPulseInterval;

	[Token(Token = "0x400025D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x649844", Offset = "0x649844")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x649844", Offset = "0x649844")]
	[SerializeField]
	private SoundEffect _startPreGrabSoundEffectName;

	[Token(Token = "0x400025E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6498B4", Offset = "0x6498B4")]
	[SerializeField]
	private SoundEffect _grabSuccessSoundEffectName;

	[Token(Token = "0x400025F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x649900", Offset = "0x649900")]
	[SerializeField]
	private SoundEffect _grabFailedSoundEffectName;

	[Token(Token = "0x4000260")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float _startTime;

	[Token(Token = "0x4000261")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private PlayableDirector _director;

	[Token(Token = "0x4000262")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Animator _animator;

	[Token(Token = "0x4000263")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Vector3 _startPosition;

	[Token(Token = "0x4000264")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private Vector3 _previousPositon;

	[Token(Token = "0x4000265")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Vector3 _velocity;

	[Token(Token = "0x60002EC")]
	[Address(RVA = "0x8DEEC0", Offset = "0x8DEEC0", VA = "0x8DEEC0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60002ED")]
	[Address(RVA = "0x8DF46C", Offset = "0x8DF46C", VA = "0x8DF46C")]
	public void StartPreGrab(Transform grabber)
	{
	}

	[Token(Token = "0x60002EE")]
	[Address(RVA = "0x8DF52C", Offset = "0x8DF52C", VA = "0x8DF52C")]
	public Result UpdatePreGrab(Transform grabber, VRTK_ControllerReference controller)
	{
		return default(Result);
	}

	[Token(Token = "0x60002EF")]
	[Address(RVA = "0x8DFA4C", Offset = "0x8DFA4C", VA = "0x8DFA4C")]
	public void FinishPreGrab()
	{
	}

	[Token(Token = "0x60002F0")]
	[Address(RVA = "0x8DFAB0", Offset = "0x8DFAB0", VA = "0x8DFAB0")]
	public PreGrabHandler()
	{
	}
}
[Token(Token = "0x200006C")]
public class RandomAudio : MonoBehaviour
{
	[Token(Token = "0x2000543")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x643D78", Offset = "0x643D78")]
	private sealed class <PlayRandomAudio>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002436")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002437")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002438")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float delay;

		[Token(Token = "0x4002439")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public RandomAudio <>4__this;

		[Token(Token = "0x17000221")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002963")]
			[Address(RVA = "0x9CF064", Offset = "0x9CF064", VA = "0x9CF064", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000222")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002965")]
			[Address(RVA = "0x9CF0D4", Offset = "0x9CF0D4", VA = "0x9CF0D4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002960")]
		[Address(RVA = "0x9CEA98", Offset = "0x9CEA98", VA = "0x9CEA98")]
		[DebuggerHidden]
		public <PlayRandomAudio>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x6002961")]
		[Address(RVA = "0x9CEB34", Offset = "0x9CEB34", VA = "0x9CEB34", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002962")]
		[Address(RVA = "0x9CEB38", Offset = "0x9CEB38", VA = "0x9CEB38", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002964")]
		[Address(RVA = "0x9CF06C", Offset = "0x9CF06C", VA = "0x9CF06C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000266")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[ObsoleteField]
	[SerializeField]
	private AudioClip[] randomSounds;

	[Token(Token = "0x4000267")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private SoundEffect[] _soundEffectName;

	[Token(Token = "0x4000268")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<SoundEffect> _availableSoundEffectName;

	[Token(Token = "0x60002F1")]
	[Address(RVA = "0x9CE954", Offset = "0x9CE954", VA = "0x9CE954")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60002F2")]
	[Address(RVA = "0x9CEA6C", Offset = "0x9CEA6C", VA = "0x9CEA6C")]
	public void StartRandomAudio(float delay = 0f)
	{
	}

	[Token(Token = "0x60002F3")]
	[Address(RVA = "0x9CE9D4", Offset = "0x9CE9D4", VA = "0x9CE9D4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x666808", Offset = "0x666808")]
	private IEnumerator PlayRandomAudio(float delay)
	{
		return null;
	}

	[Token(Token = "0x60002F4")]
	[Address(RVA = "0x9CEAC4", Offset = "0x9CEAC4", VA = "0x9CEAC4")]
	public RandomAudio()
	{
	}
}
[Token(Token = "0x200006D")]
public class RandomRotation : MonoBehaviour
{
	[Token(Token = "0x4000269")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float power;

	[Token(Token = "0x400026A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private bool onStart;

	[Token(Token = "0x60002F5")]
	[Address(RVA = "0x9CF0DC", Offset = "0x9CF0DC", VA = "0x9CF0DC")]
	private void Start()
	{
	}

	[Token(Token = "0x60002F6")]
	[Address(RVA = "0x9CF0EC", Offset = "0x9CF0EC", VA = "0x9CF0EC")]
	public void Rotate()
	{
	}

	[Token(Token = "0x60002F7")]
	[Address(RVA = "0x9CF1EC", Offset = "0x9CF1EC", VA = "0x9CF1EC")]
	public RandomRotation()
	{
	}
}
[Token(Token = "0x200006E")]
public class RotateLeverChargeInteraction : MonoBehaviour, Interaction
{
	[Token(Token = "0x400026B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private VRTK_ArtificialRotator _rotator;

	[Token(Token = "0x400026C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private PlayableDirector _dialRangeDirector;

	[Token(Token = "0x400026D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private PlayableDirector _rangeCorrectDirector;

	[Token(Token = "0x400026E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private float _activationRangeMin;

	[Token(Token = "0x400026F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private float _activationRangeMax;

	[Token(Token = "0x4000270")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private float _chargeSpeed;

	[Token(Token = "0x4000271")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[SerializeField]
	private float _dischargeSpeed;

	[Token(Token = "0x4000272")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private float _needleWobbleAmplitude;

	[Token(Token = "0x4000273")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[SerializeField]
	private float _needleWobbleFrequency;

	[Token(Token = "0x4000274")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private bool _lockInActivationRange;

	[Token(Token = "0x4000275")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float _previousValue;

	[Token(Token = "0x4000276")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float _valueChange;

	[Token(Token = "0x4000277")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float _charge;

	[Token(Token = "0x4000278")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool _inRange;

	[Token(Token = "0x1700004C")]
	public float chargeSpeed
	{
		[Token(Token = "0x60002F8")]
		[Address(RVA = "0x9D08BC", Offset = "0x9D08BC", VA = "0x9D08BC")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60002F9")]
		[Address(RVA = "0x9D08C4", Offset = "0x9D08C4", VA = "0x9D08C4")]
		set
		{
		}
	}

	[Token(Token = "0x1700004D")]
	public float dischargeSpeed
	{
		[Token(Token = "0x60002FA")]
		[Address(RVA = "0x9D08CC", Offset = "0x9D08CC", VA = "0x9D08CC")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60002FB")]
		[Address(RVA = "0x9D08D4", Offset = "0x9D08D4", VA = "0x9D08D4")]
		set
		{
		}
	}

	[Token(Token = "0x1700004E")]
	private bool Interaction.isInteractionComplete
	{
		[Token(Token = "0x60002FC")]
		[Address(RVA = "0x9D08DC", Offset = "0x9D08DC", VA = "0x9D08DC", Slot = "8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700004F")]
	private bool Interaction.interactionProgressing
	{
		[Token(Token = "0x60002FD")]
		[Address(RVA = "0x9D08E4", Offset = "0x9D08E4", VA = "0x9D08E4", Slot = "13")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000050")]
	public float value
	{
		[Token(Token = "0x6000306")]
		[Address(RVA = "0x9D104C", Offset = "0x9D104C", VA = "0x9D104C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000307")]
		[Address(RVA = "0x9D1054", Offset = "0x9D1054", VA = "0x9D1054")]
		set
		{
		}
	}

	[Token(Token = "0x14000021")]
	public event InteractionCompleteEventHandler onInteractionComplete
	{
		[Token(Token = "0x60002FE")]
		[Address(RVA = "0x9D08EC", Offset = "0x9D08EC", VA = "0x9D08EC", Slot = "4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66686C", Offset = "0x66686C")]
		add
		{
		}
		[Token(Token = "0x60002FF")]
		[Address(RVA = "0x9D09D8", Offset = "0x9D09D8", VA = "0x9D09D8", Slot = "5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66687C", Offset = "0x66687C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000022")]
	public event InteractionCompleteEventHandler onInteractionUncomplete
	{
		[Token(Token = "0x6000300")]
		[Address(RVA = "0x9D0AC4", Offset = "0x9D0AC4", VA = "0x9D0AC4", Slot = "6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66688C", Offset = "0x66688C")]
		add
		{
		}
		[Token(Token = "0x6000301")]
		[Address(RVA = "0x9D0BB0", Offset = "0x9D0BB0", VA = "0x9D0BB0", Slot = "7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66689C", Offset = "0x66689C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000023")]
	public event InteractionCompleteEventHandler onInteractionProgressStart
	{
		[Token(Token = "0x6000302")]
		[Address(RVA = "0x9D0C9C", Offset = "0x9D0C9C", VA = "0x9D0C9C", Slot = "9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6668AC", Offset = "0x6668AC")]
		add
		{
		}
		[Token(Token = "0x6000303")]
		[Address(RVA = "0x9D0D88", Offset = "0x9D0D88", VA = "0x9D0D88", Slot = "10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6668BC", Offset = "0x6668BC")]
		remove
		{
		}
	}

	[Token(Token = "0x14000024")]
	public event InteractionCompleteEventHandler onInteractionProgressStop
	{
		[Token(Token = "0x6000304")]
		[Address(RVA = "0x9D0E74", Offset = "0x9D0E74", VA = "0x9D0E74", Slot = "11")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6668CC", Offset = "0x6668CC")]
		add
		{
		}
		[Token(Token = "0x6000305")]
		[Address(RVA = "0x9D0F60", Offset = "0x9D0F60", VA = "0x9D0F60", Slot = "12")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6668DC", Offset = "0x6668DC")]
		remove
		{
		}
	}

	[Token(Token = "0x6000308")]
	[Address(RVA = "0x9D105C", Offset = "0x9D105C", VA = "0x9D105C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000309")]
	[Address(RVA = "0x9D1144", Offset = "0x9D1144", VA = "0x9D1144")]
	private void OnValueChanged(object sender, ControllableEventArgs e)
	{
	}

	[Token(Token = "0x600030A")]
	[Address(RVA = "0x9D11EC", Offset = "0x9D11EC", VA = "0x9D11EC")]
	private void Update()
	{
	}

	[Token(Token = "0x600030B")]
	[Address(RVA = "0x9D1508", Offset = "0x9D1508", VA = "0x9D1508", Slot = "14")]
	private void Interaction.Reset()
	{
	}

	[Token(Token = "0x600030C")]
	[Address(RVA = "0x9D1570", Offset = "0x9D1570", VA = "0x9D1570")]
	public RotateLeverChargeInteraction()
	{
	}
}
[Token(Token = "0x200006F")]
public class setLinkedMeshRendererActive : MonoBehaviour
{
	[Token(Token = "0x400027D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private MeshRenderer meshRendToSet;

	[Token(Token = "0x600030D")]
	[Address(RVA = "0x14D531C", Offset = "0x14D531C", VA = "0x14D531C")]
	private void Update()
	{
	}

	[Token(Token = "0x600030E")]
	[Address(RVA = "0x14D5484", Offset = "0x14D5484", VA = "0x14D5484")]
	public setLinkedMeshRendererActive()
	{
	}
}
[Token(Token = "0x2000070")]
public class SliderMoveHaptics : VRTK_InteractableListener
{
	[Token(Token = "0x400027E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float _hapticSpacing;

	[Token(Token = "0x400027F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private float _minVelocity;

	[Token(Token = "0x4000280")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float _maxVelocity;

	[Token(Token = "0x4000281")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private bool _usePositionHapticCurve;

	[Token(Token = "0x4000282")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private AnimationCurve _positionHapticStrength;

	[Token(Token = "0x4000283")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private bool _useVelocityHapticCurve;

	[Token(Token = "0x4000284")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private AnimationCurve _velocityHapticStrength;

	[Token(Token = "0x4000285")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float _previousValue;

	[Token(Token = "0x4000286")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private VRTK_PhysicsSlider _slider;

	[Token(Token = "0x4000287")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private VRTK_ControllerReference _controllerReference;

	[Token(Token = "0x4000288")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public VRTK_InteractableObject objectToAffect;

	[Token(Token = "0x4000289")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float _velocity;

	[Token(Token = "0x600030F")]
	[Address(RVA = "0x865B14", Offset = "0x865B14", VA = "0x865B14", Slot = "9")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x6000310")]
	[Address(RVA = "0x865B20", Offset = "0x865B20", VA = "0x865B20", Slot = "10")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x6000311")]
	[Address(RVA = "0x865B2C", Offset = "0x865B2C", VA = "0x865B2C", Slot = "4")]
	protected override bool SetupListeners(bool throwError)
	{
		return default(bool);
	}

	[Token(Token = "0x6000312")]
	[Address(RVA = "0x865CA8", Offset = "0x865CA8", VA = "0x865CA8", Slot = "5")]
	protected override void TearDownListeners()
	{
	}

	[Token(Token = "0x6000313")]
	[Address(RVA = "0x865CAC", Offset = "0x865CAC", VA = "0x865CAC", Slot = "11")]
	protected virtual void GrabHaptics(object sender, InteractableObjectEventArgs e)
	{
	}

	[Token(Token = "0x6000314")]
	[Address(RVA = "0x865D28", Offset = "0x865D28", VA = "0x865D28", Slot = "12")]
	protected virtual void UngrabHaptics(object sender, InteractableObjectEventArgs e)
	{
	}

	[Token(Token = "0x6000315")]
	[Address(RVA = "0x865DB0", Offset = "0x865DB0", VA = "0x865DB0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000316")]
	[Address(RVA = "0x865E58", Offset = "0x865E58", VA = "0x865E58")]
	private void OnValueChanged(object sender, ControllableEventArgs e)
	{
	}

	[Token(Token = "0x6000317")]
	[Address(RVA = "0x86629C", Offset = "0x86629C", VA = "0x86629C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000318")]
	[Address(RVA = "0x8662A0", Offset = "0x8662A0", VA = "0x8662A0")]
	public SliderMoveHaptics()
	{
	}
}
[Token(Token = "0x2000071")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x63D3F0", Offset = "0x63D3F0")]
public class SnapDropInteraction : MonoBehaviour, Interaction
{
	[Token(Token = "0x400028A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x649B04", Offset = "0x649B04")]
	[SerializeField]
	private VRTK_SnapDropZone _snapDropZone;

	[Token(Token = "0x400028B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x649B50", Offset = "0x649B50")]
	[SerializeField]
	private Transform _correctObject;

	[Token(Token = "0x400028C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x649B9C", Offset = "0x649B9C")]
	[SerializeField]
	private VRTK_PolicyList _correctPolicyList;

	[Token(Token = "0x400028D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x649BE8", Offset = "0x649BE8")]
	[SerializeField]
	private bool _allowComplete;

	[Token(Token = "0x400028E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x649C34", Offset = "0x649C34")]
	[SerializeField]
	private bool _allowUncomplete;

	[Token(Token = "0x400028F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
	private bool _complete;

	[Token(Token = "0x17000051")]
	public bool isInteractionComplete
	{
		[Token(Token = "0x6000319")]
		[Address(RVA = "0x866AE4", Offset = "0x866AE4", VA = "0x866AE4", Slot = "8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000052")]
	public bool interactionProgressing
	{
		[Token(Token = "0x600031A")]
		[Address(RVA = "0x866AEC", Offset = "0x866AEC", VA = "0x866AEC", Slot = "13")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x14000025")]
	public event InteractionCompleteEventHandler onInteractionComplete
	{
		[Token(Token = "0x600031B")]
		[Address(RVA = "0x866AF4", Offset = "0x866AF4", VA = "0x866AF4", Slot = "4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6668EC", Offset = "0x6668EC")]
		add
		{
		}
		[Token(Token = "0x600031C")]
		[Address(RVA = "0x866BE0", Offset = "0x866BE0", VA = "0x866BE0", Slot = "5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6668FC", Offset = "0x6668FC")]
		remove
		{
		}
	}

	[Token(Token = "0x14000026")]
	public event InteractionCompleteEventHandler onInteractionUncomplete
	{
		[Token(Token = "0x600031D")]
		[Address(RVA = "0x866CCC", Offset = "0x866CCC", VA = "0x866CCC", Slot = "6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66690C", Offset = "0x66690C")]
		add
		{
		}
		[Token(Token = "0x600031E")]
		[Address(RVA = "0x866DB8", Offset = "0x866DB8", VA = "0x866DB8", Slot = "7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66691C", Offset = "0x66691C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000027")]
	public event InteractionCompleteEventHandler onInteractionProgressStart
	{
		[Token(Token = "0x600031F")]
		[Address(RVA = "0x866EA4", Offset = "0x866EA4", VA = "0x866EA4", Slot = "9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66692C", Offset = "0x66692C")]
		add
		{
		}
		[Token(Token = "0x6000320")]
		[Address(RVA = "0x866F90", Offset = "0x866F90", VA = "0x866F90", Slot = "10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66693C", Offset = "0x66693C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000028")]
	public event InteractionCompleteEventHandler onInteractionProgressStop
	{
		[Token(Token = "0x6000321")]
		[Address(RVA = "0x86707C", Offset = "0x86707C", VA = "0x86707C", Slot = "11")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66694C", Offset = "0x66694C")]
		add
		{
		}
		[Token(Token = "0x6000322")]
		[Address(RVA = "0x867168", Offset = "0x867168", VA = "0x867168", Slot = "12")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66695C", Offset = "0x66695C")]
		remove
		{
		}
	}

	[Token(Token = "0x6000323")]
	[Address(RVA = "0x867254", Offset = "0x867254", VA = "0x867254")]
	public void Awake()
	{
	}

	[Token(Token = "0x6000324")]
	[Address(RVA = "0x867380", Offset = "0x867380", VA = "0x867380")]
	private void ObjectUnsnappedFromDropZone(object sender, SnapDropZoneEventArgs e)
	{
	}

	[Token(Token = "0x6000325")]
	[Address(RVA = "0x86746C", Offset = "0x86746C", VA = "0x86746C")]
	private void ObjectSnappedToDropZone(object sender, SnapDropZoneEventArgs e)
	{
	}

	[Token(Token = "0x6000326")]
	[Address(RVA = "0x867680", Offset = "0x867680", VA = "0x867680", Slot = "14")]
	public void Reset()
	{
	}

	[Token(Token = "0x6000327")]
	[Address(RVA = "0x867688", Offset = "0x867688", VA = "0x867688")]
	public SnapDropInteraction()
	{
	}
}
[Token(Token = "0x2000072")]
public class SonicScrewdriverAnimation : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000544")]
	private class SonicAnimationType
	{
		[Token(Token = "0x400243A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		public SonicScrewdriverInteraction.SonicScrewdriverMode _mode;

		[Token(Token = "0x400243B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public PlayableAsset _timelineAsset;

		[Token(Token = "0x6002966")]
		[Address(RVA = "0x867B60", Offset = "0x867B60", VA = "0x867B60")]
		public SonicAnimationType()
		{
		}
	}

	[Token(Token = "0x2000545")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x643D88", Offset = "0x643D88")]
	private sealed class <>c__DisplayClass8_0
	{
		[Token(Token = "0x400243C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SonicScrewdriverInteraction.SonicScrewdriverMode mode;

		[Token(Token = "0x6002967")]
		[Address(RVA = "0x867B14", Offset = "0x867B14", VA = "0x867B14")]
		public <>c__DisplayClass8_0()
		{
		}

		[Token(Token = "0x6002968")]
		[Address(RVA = "0x867B24", Offset = "0x867B24", VA = "0x867B24")]
		internal bool <PlayAnimation>b__0(SonicAnimationType spec)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4000294")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private List<SonicAnimationType> _sonicAnimation;

	[Token(Token = "0x4000295")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private PlayableDirector _sonicDirector;

	[Token(Token = "0x4000296")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private PlayableAsset _currentAsset;

	[Token(Token = "0x4000297")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private HolsterInventory _holster;

	[Token(Token = "0x6000328")]
	[Address(RVA = "0x867698", Offset = "0x867698", VA = "0x867698")]
	public void Start()
	{
	}

	[Token(Token = "0x6000329")]
	[Address(RVA = "0x86770C", Offset = "0x86770C", VA = "0x86770C")]
	public void OnPress()
	{
	}

	[Token(Token = "0x600032A")]
	[Address(RVA = "0x867A58", Offset = "0x867A58", VA = "0x867A58")]
	public void OnRelease()
	{
	}

	[Token(Token = "0x600032B")]
	[Address(RVA = "0x867714", Offset = "0x867714", VA = "0x867714")]
	public void PlayAnimation(SonicScrewdriverInteraction.SonicScrewdriverMode mode)
	{
	}

	[Token(Token = "0x600032C")]
	[Address(RVA = "0x867A5C", Offset = "0x867A5C", VA = "0x867A5C")]
	public void StopAnimation()
	{
	}

	[Token(Token = "0x600032D")]
	[Address(RVA = "0x867B1C", Offset = "0x867B1C", VA = "0x867B1C")]
	public SonicScrewdriverAnimation()
	{
	}
}
[Token(Token = "0x2000073")]
public class SonicScrewdriverHandler : MonoBehaviour, IFunctionalitySpawned
{
	[Token(Token = "0x4000298")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private GameObject _sonicScrewdriverObject;

	[Token(Token = "0x4000299")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private SonicScrewdriverAnimation _sonicAnim;

	[Token(Token = "0x17000053")]
	public GameObject sonicGameObject
	{
		[Token(Token = "0x600032E")]
		[Address(RVA = "0x867B68", Offset = "0x867B68", VA = "0x867B68")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600032F")]
	[Address(RVA = "0x867B70", Offset = "0x867B70", VA = "0x867B70", Slot = "4")]
	public void OnSpawned(InteractableObjectFunction f)
	{
	}

	[Token(Token = "0x6000330")]
	[Address(RVA = "0x867BFC", Offset = "0x867BFC", VA = "0x867BFC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000331")]
	[Address(RVA = "0x867CE4", Offset = "0x867CE4", VA = "0x867CE4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000332")]
	[Address(RVA = "0x867DCC", Offset = "0x867DCC", VA = "0x867DCC")]
	private void P_ActivationButtonReleased(object sender, ControllerInteractionEventArgs e)
	{
	}

	[Token(Token = "0x6000333")]
	[Address(RVA = "0x867DF8", Offset = "0x867DF8", VA = "0x867DF8")]
	private void P_ActivationButtonPressed(object sender, ControllerInteractionEventArgs e)
	{
	}

	[Token(Token = "0x6000334")]
	[Address(RVA = "0x867E28", Offset = "0x867E28", VA = "0x867E28")]
	public SonicScrewdriverHandler()
	{
	}
}
[Token(Token = "0x2000074")]
public class SonicScrewdriverInteraction : MonoBehaviour, Interaction, PointerAimHighlight
{
	[Token(Token = "0x2000546")]
	public enum SonicScrewdriverMode
	{
		[Token(Token = "0x400243E")]
		Standard,
		[Token(Token = "0x400243F")]
		Hacking
	}

	[Token(Token = "0x400029A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private SonicScrewdriverMode _sonicScrewdriverMode;

	[Token(Token = "0x400029B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public VRTK_InteractableObject _object;

	[Token(Token = "0x400029C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected bool _running;

	[Token(Token = "0x40002A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private InteractableObjectEventArgs _event;

	[Token(Token = "0x40002A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private object _sender;

	[Token(Token = "0x40002A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	protected InteractionCompleteEventHandler _interactionCompleteEvent;

	[Token(Token = "0x40002A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	protected InteractionCompleteEventHandler _interactionUncompleteEvent;

	[Token(Token = "0x40002A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	protected InteractionCompleteEventHandler _interactionProgressStartEvent;

	[Token(Token = "0x40002A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	protected InteractionCompleteEventHandler _interactionProgressStopEvent;

	[Token(Token = "0x40002A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private bool _complete;

	[Token(Token = "0x40002A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private object _stopSender;

	[Token(Token = "0x40002A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private InteractableObjectEventArgs _stopEvent;

	[Token(Token = "0x40002A9")]
	private const string _usingObjectName = "SonicScrewdriverPointer";

	[Token(Token = "0x17000054")]
	public Transform interactingObjectTansform
	{
		[Token(Token = "0x6000343")]
		[Address(RVA = "0x8689D8", Offset = "0x8689D8", VA = "0x8689D8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000055")]
	public virtual bool isInteractionComplete
	{
		[Token(Token = "0x6000344")]
		[Address(RVA = "0x868A08", Offset = "0x868A08", VA = "0x868A08", Slot = "15")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000056")]
	public virtual bool interactionProgressing
	{
		[Token(Token = "0x6000345")]
		[Address(RVA = "0x868A10", Offset = "0x868A10", VA = "0x868A10", Slot = "16")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000057")]
	public virtual bool canStopInteractingNow
	{
		[Token(Token = "0x6000346")]
		[Address(RVA = "0x868A18", Offset = "0x868A18", VA = "0x868A18", Slot = "17")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x14000029")]
	public event InteractableObjectEventHandler _screwdriverStart
	{
		[Token(Token = "0x6000335")]
		[Address(RVA = "0x867E30", Offset = "0x867E30", VA = "0x867E30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66696C", Offset = "0x66696C")]
		add
		{
		}
		[Token(Token = "0x6000336")]
		[Address(RVA = "0x867F1C", Offset = "0x867F1C", VA = "0x867F1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66697C", Offset = "0x66697C")]
		remove
		{
		}
	}

	[Token(Token = "0x1400002A")]
	public event InteractableObjectEventHandler _screwdriverUpdate
	{
		[Token(Token = "0x6000337")]
		[Address(RVA = "0x868008", Offset = "0x868008", VA = "0x868008")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66698C", Offset = "0x66698C")]
		add
		{
		}
		[Token(Token = "0x6000338")]
		[Address(RVA = "0x8680F4", Offset = "0x8680F4", VA = "0x8680F4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66699C", Offset = "0x66699C")]
		remove
		{
		}
	}

	[Token(Token = "0x1400002B")]
	public event InteractableObjectEventHandler _screwdriverEnd
	{
		[Token(Token = "0x6000339")]
		[Address(RVA = "0x8681E0", Offset = "0x8681E0", VA = "0x8681E0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6669AC", Offset = "0x6669AC")]
		add
		{
		}
		[Token(Token = "0x600033A")]
		[Address(RVA = "0x8682CC", Offset = "0x8682CC", VA = "0x8682CC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6669BC", Offset = "0x6669BC")]
		remove
		{
		}
	}

	[Token(Token = "0x1400002C")]
	public event InteractionCompleteEventHandler onInteractionComplete
	{
		[Token(Token = "0x600033B")]
		[Address(RVA = "0x8683B8", Offset = "0x8683B8", VA = "0x8683B8", Slot = "4")]
		add
		{
		}
		[Token(Token = "0x600033C")]
		[Address(RVA = "0x86847C", Offset = "0x86847C", VA = "0x86847C", Slot = "5")]
		remove
		{
		}
	}

	[Token(Token = "0x1400002D")]
	public event InteractionCompleteEventHandler onInteractionUncomplete
	{
		[Token(Token = "0x600033D")]
		[Address(RVA = "0x868540", Offset = "0x868540", VA = "0x868540", Slot = "6")]
		add
		{
		}
		[Token(Token = "0x600033E")]
		[Address(RVA = "0x868604", Offset = "0x868604", VA = "0x868604", Slot = "7")]
		remove
		{
		}
	}

	[Token(Token = "0x1400002E")]
	public event InteractionCompleteEventHandler onInteractionProgressStart
	{
		[Token(Token = "0x600033F")]
		[Address(RVA = "0x8686C8", Offset = "0x8686C8", VA = "0x8686C8", Slot = "9")]
		add
		{
		}
		[Token(Token = "0x6000340")]
		[Address(RVA = "0x86878C", Offset = "0x86878C", VA = "0x86878C", Slot = "10")]
		remove
		{
		}
	}

	[Token(Token = "0x1400002F")]
	public event InteractionCompleteEventHandler onInteractionProgressStop
	{
		[Token(Token = "0x6000341")]
		[Address(RVA = "0x868850", Offset = "0x868850", VA = "0x868850", Slot = "11")]
		add
		{
		}
		[Token(Token = "0x6000342")]
		[Address(RVA = "0x868914", Offset = "0x868914", VA = "0x868914", Slot = "12")]
		remove
		{
		}
	}

	[Token(Token = "0x14000030")]
	public event InteractableObjectEventHandler screwdriverStart
	{
		[Token(Token = "0x6000347")]
		[Address(RVA = "0x868A20", Offset = "0x868A20", VA = "0x868A20")]
		add
		{
		}
		[Token(Token = "0x6000348")]
		[Address(RVA = "0x868A24", Offset = "0x868A24", VA = "0x868A24")]
		remove
		{
		}
	}

	[Token(Token = "0x14000031")]
	public event InteractableObjectEventHandler screwdriverUpdate
	{
		[Token(Token = "0x6000349")]
		[Address(RVA = "0x868A28", Offset = "0x868A28", VA = "0x868A28")]
		add
		{
		}
		[Token(Token = "0x600034A")]
		[Address(RVA = "0x868A2C", Offset = "0x868A2C", VA = "0x868A2C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000032")]
	public event InteractableObjectEventHandler screwdriverEnd
	{
		[Token(Token = "0x600034B")]
		[Address(RVA = "0x868A30", Offset = "0x868A30", VA = "0x868A30")]
		add
		{
		}
		[Token(Token = "0x600034C")]
		[Address(RVA = "0x868A34", Offset = "0x868A34", VA = "0x868A34")]
		remove
		{
		}
	}

	[Token(Token = "0x600034D")]
	[Address(RVA = "0x868A38", Offset = "0x868A38", VA = "0x868A38", Slot = "18")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x600034E")]
	[Address(RVA = "0x868BA0", Offset = "0x868BA0", VA = "0x868BA0", Slot = "19")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x600034F")]
	[Address(RVA = "0x868CB4", Offset = "0x868CB4", VA = "0x868CB4", Slot = "20")]
	protected virtual void Update()
	{
	}

	[Token(Token = "0x6000350")]
	[Address(RVA = "0x868EDC", Offset = "0x868EDC", VA = "0x868EDC", Slot = "21")]
	public virtual void CompleteScrewdriverInteraction()
	{
	}

	[Token(Token = "0x6000351")]
	[Address(RVA = "0x868F04", Offset = "0x868F04", VA = "0x868F04", Slot = "22")]
	public virtual void UncompleteScrewdriverInteraction()
	{
	}

	[Token(Token = "0x6000352")]
	[Address(RVA = "0x868F28", Offset = "0x868F28", VA = "0x868F28", Slot = "23")]
	protected virtual void OnScrewdriverStart()
	{
	}

	[Token(Token = "0x6000353")]
	[Address(RVA = "0x868F2C", Offset = "0x868F2C", VA = "0x868F2C", Slot = "24")]
	protected virtual void OnScrewdriverUpdate()
	{
	}

	[Token(Token = "0x6000354")]
	[Address(RVA = "0x868F30", Offset = "0x868F30", VA = "0x868F30", Slot = "25")]
	protected virtual void OnScrewdriverEnd()
	{
	}

	[Token(Token = "0x6000355")]
	[Address(RVA = "0x868F34", Offset = "0x868F34", VA = "0x868F34", Slot = "26")]
	protected virtual void InteractableObjectUsed(object sender, InteractableObjectEventArgs e)
	{
	}

	[Token(Token = "0x6000356")]
	[Address(RVA = "0x86912C", Offset = "0x86912C", VA = "0x86912C", Slot = "27")]
	protected virtual void InteractableObjectUnused(object sender, InteractableObjectEventArgs e)
	{
	}

	[Token(Token = "0x6000357")]
	[Address(RVA = "0x868D38", Offset = "0x868D38", VA = "0x868D38")]
	private void StopInteracting(object sender, InteractableObjectEventArgs e)
	{
	}

	[Token(Token = "0x6000358")]
	[Address(RVA = "0x8691F4", Offset = "0x8691F4", VA = "0x8691F4", Slot = "28")]
	public virtual void Reset()
	{
	}

	[Token(Token = "0x6000359")]
	[Address(RVA = "0x8691F8", Offset = "0x8691F8", VA = "0x8691F8")]
	public SonicScrewdriverInteraction()
	{
	}
}
[Token(Token = "0x2000075")]
public class SphereCustomRaycast : VRTK_CustomRaycast
{
	[Token(Token = "0x40002AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float _detectionRadius;

	[Token(Token = "0x600035A")]
	[Address(RVA = "0x86E4EC", Offset = "0x86E4EC", VA = "0x86E4EC", Slot = "4")]
	public override bool CustomRaycast(Ray ray, out RaycastHit hitData, float length = float.PositiveInfinity)
	{
		return default(bool);
	}

	[Token(Token = "0x600035B")]
	[Address(RVA = "0x86E5AC", Offset = "0x86E5AC", VA = "0x86E5AC")]
	public SphereCustomRaycast()
	{
	}
}
[Token(Token = "0x2000076")]
public class TardisDoorCloser : MonoBehaviour
{
	[Token(Token = "0x40002AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Collider _doorRangeCollider;

	[Token(Token = "0x40002AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private VRTK_ArtificialRotator _leftDoor;

	[Token(Token = "0x40002AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private VRTK_ArtificialRotator _rightDoor;

	[Token(Token = "0x40002AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Transform _interiorRoot;

	[Token(Token = "0x40002AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private PortalSwitcher _portalSwitcher;

	[Token(Token = "0x40002B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool _leftDoorOpen;

	[Token(Token = "0x40002B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	private bool _rightDoorOpen;

	[Token(Token = "0x40002B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private string untaggedTag;

	[Token(Token = "0x40002B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private string ignoreHeadsetFadeTag;

	[Token(Token = "0x600035C")]
	[Address(RVA = "0x886674", Offset = "0x886674", VA = "0x886674")]
	private void Start()
	{
	}

	[Token(Token = "0x600035D")]
	[Address(RVA = "0x8869B0", Offset = "0x8869B0", VA = "0x8869B0")]
	private void OnRightDoorOpened(object sender, ControllableEventArgs e)
	{
	}

	[Token(Token = "0x600035E")]
	[Address(RVA = "0x886A04", Offset = "0x886A04", VA = "0x886A04")]
	private void OnRightDoorClosed(object sender, ControllableEventArgs e)
	{
	}

	[Token(Token = "0x600035F")]
	[Address(RVA = "0x886A54", Offset = "0x886A54", VA = "0x886A54")]
	private void OnLeftDoorOpened(object sender, ControllableEventArgs e)
	{
	}

	[Token(Token = "0x6000360")]
	[Address(RVA = "0x886AA8", Offset = "0x886AA8", VA = "0x886AA8")]
	private void OnLeftDoorClosed(object sender, ControllableEventArgs e)
	{
	}

	[Token(Token = "0x6000361")]
	[Address(RVA = "0x886AF8", Offset = "0x886AF8", VA = "0x886AF8")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000362")]
	[Address(RVA = "0x886820", Offset = "0x886820", VA = "0x886820")]
	public void UpdateInteriorState()
	{
	}

	[Token(Token = "0x6000363")]
	[Address(RVA = "0x886B94", Offset = "0x886B94", VA = "0x886B94")]
	public TardisDoorCloser()
	{
	}
}
[Token(Token = "0x2000077")]
public class TorchBeamColliderControl : MonoBehaviour
{
	[Token(Token = "0x40002B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private string _colliderName;

	[Token(Token = "0x40002B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float _beamSize;

	[Token(Token = "0x40002B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Light _light;

	[Token(Token = "0x40002B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float _savedBeamSize;

	[Token(Token = "0x6000364")]
	[Address(RVA = "0x8899DC", Offset = "0x8899DC", VA = "0x8899DC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000365")]
	[Address(RVA = "0x889A34", Offset = "0x889A34", VA = "0x889A34")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000366")]
	[Address(RVA = "0x889B54", Offset = "0x889B54", VA = "0x889B54")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000367")]
	[Address(RVA = "0x889BD4", Offset = "0x889BD4", VA = "0x889BD4")]
	public TorchBeamColliderControl()
	{
	}
}
[Token(Token = "0x2000078")]
public class victorianBook : MonoBehaviour
{
	[Token(Token = "0x40002B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private AudioClip[] objectCollision;

	[Token(Token = "0x6000368")]
	[Address(RVA = "0x14D56F4", Offset = "0x14D56F4", VA = "0x14D56F4")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000369")]
	[Address(RVA = "0x14D5894", Offset = "0x14D5894", VA = "0x14D5894")]
	public victorianBook()
	{
	}
}
[Token(Token = "0x2000079")]
public class AnimateCookieTexture : MonoBehaviour
{
	[Token(Token = "0x2000547")]
	public enum AnimMode
	{
		[Token(Token = "0x4002441")]
		forwards,
		[Token(Token = "0x4002442")]
		backwards,
		[Token(Token = "0x4002443")]
		random
	}

	[Token(Token = "0x2000548")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x643D98", Offset = "0x643D98")]
	private sealed class <switchCookie>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002444")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002445")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002446")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AnimateCookieTexture <>4__this;

		[Token(Token = "0x17000223")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600296C")]
			[Address(RVA = "0x8BA5E8", Offset = "0x8BA5E8", VA = "0x8BA5E8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000224")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600296E")]
			[Address(RVA = "0x8BA658", Offset = "0x8BA658", VA = "0x8BA658", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002969")]
		[Address(RVA = "0x8BA3C0", Offset = "0x8BA3C0", VA = "0x8BA3C0")]
		[DebuggerHidden]
		public <switchCookie>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x600296A")]
		[Address(RVA = "0x8BA3FC", Offset = "0x8BA3FC", VA = "0x8BA3FC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600296B")]
		[Address(RVA = "0x8BA400", Offset = "0x8BA400", VA = "0x8BA400", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600296D")]
		[Address(RVA = "0x8BA5F0", Offset = "0x8BA5F0", VA = "0x8BA5F0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40002B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Texture2D[] textures;

	[Token(Token = "0x40002BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float fps;

	[Token(Token = "0x40002BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public AnimMode animMode;

	[Token(Token = "0x40002BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int frameNr;

	[Token(Token = "0x40002BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Light cLight;

	[Token(Token = "0x600036A")]
	[Address(RVA = "0x8BA20C", Offset = "0x8BA20C", VA = "0x8BA20C")]
	private void Start()
	{
	}

	[Token(Token = "0x600036B")]
	[Address(RVA = "0x8BA34C", Offset = "0x8BA34C", VA = "0x8BA34C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6669CC", Offset = "0x6669CC")]
	private IEnumerator switchCookie()
	{
		return null;
	}

	[Token(Token = "0x600036C")]
	[Address(RVA = "0x8BA3EC", Offset = "0x8BA3EC", VA = "0x8BA3EC")]
	public AnimateCookieTexture()
	{
	}
}
[Token(Token = "0x200007A")]
public class PlatformDisableShadow : MonoBehaviour
{
	[Token(Token = "0x2000549")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x643DA8", Offset = "0x643DA8")]
	private sealed class <WaitForVR>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002447")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002448")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002449")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PlatformDisableShadow <>4__this;

		[Token(Token = "0x17000225")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002972")]
			[Address(RVA = "0x8D2918", Offset = "0x8D2918", VA = "0x8D2918", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000226")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002974")]
			[Address(RVA = "0x8D2988", Offset = "0x8D2988", VA = "0x8D2988", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600296F")]
		[Address(RVA = "0x8D2698", Offset = "0x8D2698", VA = "0x8D2698")]
		[DebuggerHidden]
		public <WaitForVR>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x6002970")]
		[Address(RVA = "0x8D26DC", Offset = "0x8D26DC", VA = "0x8D26DC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002971")]
		[Address(RVA = "0x8D26E0", Offset = "0x8D26E0", VA = "0x8D26E0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002973")]
		[Address(RVA = "0x8D2920", Offset = "0x8D2920", VA = "0x8D2920", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40002BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private bool _disablePS4;

	[Token(Token = "0x40002BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	[SerializeField]
	private bool _disableSteamVR;

	[Token(Token = "0x40002C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	[SerializeField]
	private bool _disableOculus;

	[Token(Token = "0x600036D")]
	[Address(RVA = "0x8D25F8", Offset = "0x8D25F8", VA = "0x8D25F8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600036E")]
	[Address(RVA = "0x8D2624", Offset = "0x8D2624", VA = "0x8D2624")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x666A30", Offset = "0x666A30")]
	private IEnumerator WaitForVR()
	{
		return null;
	}

	[Token(Token = "0x600036F")]
	[Address(RVA = "0x8D26C4", Offset = "0x8D26C4", VA = "0x8D26C4")]
	public PlatformDisableShadow()
	{
	}
}
[Token(Token = "0x200007B")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x63D454", Offset = "0x63D454")]
public class DialogueData : ScriptableObject, Localisable
{
	[Serializable]
	[Token(Token = "0x200054A")]
	public class DialogueLine
	{
		[Token(Token = "0x400244A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x663E74", Offset = "0x663E74")]
		[SerializeField]
		public AudioClip _clip;

		[Token(Token = "0x400244B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "LocalisedString", RVA = "0x663EC0", Offset = "0x663EC0")]
		[SerializeField]
		public string _text;

		[Token(Token = "0x400244C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x663F0C", Offset = "0x663F0C")]
		[SerializeField]
		public float _delay;

		[Token(Token = "0x400244D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		[HideInInspector]
		public string _generatedText;

		[Token(Token = "0x6002975")]
		[Address(RVA = "0x7BA0D4", Offset = "0x7BA0D4", VA = "0x7BA0D4")]
		public DialogueLine()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x200054B")]
	public class DialogueBlock
	{
		[Token(Token = "0x400244E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x663F90", Offset = "0x663F90")]
		[SerializeField]
		public string _blockName;

		[Token(Token = "0x400244F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x663FDC", Offset = "0x663FDC")]
		[SerializeField]
		public bool _alwaysShowSubtitles;

		[Token(Token = "0x4002450")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x664028", Offset = "0x664028")]
		[SerializeField]
		public bool _subtitlesRemain;

		[Token(Token = "0x4002451")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x664074", Offset = "0x664074")]
		[SerializeField]
		public string _videoFilename;

		[Token(Token = "0x4002452")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6640C0", Offset = "0x6640C0")]
		[SerializeField]
		public List<DialogueLine> _line;

		[Token(Token = "0x6002976")]
		[Address(RVA = "0x7BA0CC", Offset = "0x7BA0CC", VA = "0x7BA0CC")]
		public DialogueBlock()
		{
		}
	}

	[Token(Token = "0x40002C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public List<DialogueBlock> _block;

	[Token(Token = "0x6000370")]
	[Address(RVA = "0x7B9CD4", Offset = "0x7B9CD4", VA = "0x7B9CD4", Slot = "4")]
	public void Localise()
	{
	}

	[Token(Token = "0x6000371")]
	[Address(RVA = "0x7BA0C4", Offset = "0x7BA0C4", VA = "0x7BA0C4")]
	public DialogueData()
	{
	}
}
[Token(Token = "0x200007C")]
public interface Localisable
{
	[Token(Token = "0x6000372")]
	void Localise();
}
[Token(Token = "0x200007D")]
public class LocalisedString : PropertyAttribute
{
	[Token(Token = "0x40002C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public readonly string documentation;

	[Token(Token = "0x6000373")]
	[Address(RVA = "0x7EB53C", Offset = "0x7EB53C", VA = "0x7EB53C")]
	public LocalisedString(string doc)
	{
	}
}
[Token(Token = "0x200007E")]
public class StringDatabase
{
	[Token(Token = "0x200054C")]
	private class UnityLanguage
	{
		[Token(Token = "0x4002453")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SystemLanguage _unityLanguage;

		[Token(Token = "0x4002454")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string _isoLanguageCode;

		[Token(Token = "0x6002977")]
		[Address(RVA = "0x883CDC", Offset = "0x883CDC", VA = "0x883CDC")]
		public UnityLanguage(SystemLanguage unityLanguage, string isoLanguage)
		{
		}
	}

	[Token(Token = "0x200054D")]
	public class Language
	{
		[Token(Token = "0x4002455")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x4002456")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int column;

		[Token(Token = "0x4002457")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool asianWrapping;

		[Token(Token = "0x4002458")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Dictionary<string, string> _string;

		[Token(Token = "0x6002978")]
		[Address(RVA = "0x880B54", Offset = "0x880B54", VA = "0x880B54")]
		public Language(string name, int column, bool asianWrapping)
		{
		}
	}

	[Serializable]
	[Token(Token = "0x200054E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x643DB8", Offset = "0x643DB8")]
	private sealed class <>c
	{
		[Token(Token = "0x4002459")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x400245A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static DebugParameterItem.DebugParameterFunction <>9__37_1;

		[Token(Token = "0x600297A")]
		[Address(RVA = "0x883EA8", Offset = "0x883EA8", VA = "0x883EA8")]
		public <>c()
		{
		}

		[Token(Token = "0x600297B")]
		[Address(RVA = "0x883EB0", Offset = "0x883EB0", VA = "0x883EB0")]
		internal void <Init>b__37_1(bool clicked, out string name, out string value)
		{
		}
	}

	[Token(Token = "0x200054F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x643DC8", Offset = "0x643DC8")]
	private sealed class <>c__DisplayClass50_0
	{
		[Token(Token = "0x400245B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public StringDatabase <>4__this;

		[Token(Token = "0x400245C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Language lang;

		[Token(Token = "0x600297C")]
		[Address(RVA = "0x882658", Offset = "0x882658", VA = "0x882658")]
		public <>c__DisplayClass50_0()
		{
		}

		[Token(Token = "0x600297D")]
		[Address(RVA = "0x883FB8", Offset = "0x883FB8", VA = "0x883FB8")]
		internal string <GetTranslation>b__0(Match match)
		{
			return null;
		}
	}

	[Token(Token = "0x40002C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static StringDatabase _instance;

	[Token(Token = "0x40002C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private List<string> _languageName;

	[Token(Token = "0x40002C5")]
	public const string StringTablePath = "data/localisation/localisation";

	[Token(Token = "0x40002C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int _currentLanguage;

	[Token(Token = "0x40002C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private bool _importReverseMode;

	[Token(Token = "0x40002C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	private bool _showSubtitles;

	[Token(Token = "0x40002C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static string[] _asianLanguageList;

	[Token(Token = "0x40002CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static UnityLanguage[] _unityLanguage;

	[Token(Token = "0x40002CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Language[] _text;

	[Token(Token = "0x40002CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<string, string> _context;

	[Token(Token = "0x40002CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<string> _currentContext;

	[Token(Token = "0x40002CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private TextHighlightData _textHighlight;

	[Token(Token = "0x40002CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static int _freeStringID;

	[Token(Token = "0x40002D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool _modified;

	[Token(Token = "0x40002D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	private bool _ready;

	[Token(Token = "0x40002D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private string _systemLanguageID;

	[Token(Token = "0x40002D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int _systemLanguageIndex;

	[Token(Token = "0x17000058")]
	public string currentLanguageISO
	{
		[Token(Token = "0x6000374")]
		[Address(RVA = "0x880338", Offset = "0x880338", VA = "0x880338")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000059")]
	public int currentLanguageIndex
	{
		[Token(Token = "0x6000375")]
		[Address(RVA = "0x8803A0", Offset = "0x8803A0", VA = "0x8803A0")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000376")]
		[Address(RVA = "0x8803A8", Offset = "0x8803A8", VA = "0x8803A8")]
		set
		{
		}
	}

	[Token(Token = "0x1700005A")]
	public static StringDatabase instance
	{
		[Token(Token = "0x6000378")]
		[Address(RVA = "0x880574", Offset = "0x880574", VA = "0x880574")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700005B")]
	public bool showSubtitles
	{
		[Token(Token = "0x6000379")]
		[Address(RVA = "0x880A20", Offset = "0x880A20", VA = "0x880A20")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600037A")]
		[Address(RVA = "0x880A28", Offset = "0x880A28", VA = "0x880A28")]
		set
		{
		}
	}

	[Token(Token = "0x1700005C")]
	public bool importReverseMode
	{
		[Token(Token = "0x600037B")]
		[Address(RVA = "0x880A34", Offset = "0x880A34", VA = "0x880A34")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600037C")]
		[Address(RVA = "0x880A3C", Offset = "0x880A3C", VA = "0x880A3C")]
		set
		{
		}
	}

	[Token(Token = "0x1700005D")]
	public bool modified
	{
		[Token(Token = "0x600037D")]
		[Address(RVA = "0x880A48", Offset = "0x880A48", VA = "0x880A48")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600037E")]
		[Address(RVA = "0x880A50", Offset = "0x880A50", VA = "0x880A50")]
		set
		{
		}
	}

	[Token(Token = "0x6000377")]
	[Address(RVA = "0x8803B8", Offset = "0x8803B8", VA = "0x8803B8")]
	public static string GetUnityDefaultLanguage()
	{
		return null;
	}

	[Token(Token = "0x600037F")]
	[Address(RVA = "0x880614", Offset = "0x880614", VA = "0x880614")]
	public StringDatabase()
	{
	}

	[Token(Token = "0x6000380")]
	[Address(RVA = "0x880BF4", Offset = "0x880BF4", VA = "0x880BF4")]
	public void Init()
	{
	}

	[Token(Token = "0x6000381")]
	[Address(RVA = "0x881798", Offset = "0x881798", VA = "0x881798")]
	public string[] GetLanguageList()
	{
		return null;
	}

	[Token(Token = "0x6000382")]
	[Address(RVA = "0x8817F8", Offset = "0x8817F8", VA = "0x8817F8")]
	public string[] ExtractISOCodes(string languageHeader)
	{
		return null;
	}

	[Token(Token = "0x6000383")]
	[Address(RVA = "0x880A5C", Offset = "0x880A5C", VA = "0x880A5C")]
	public bool IsAsianLanguage(string languageHeader)
	{
		return default(bool);
	}

	[Token(Token = "0x6000384")]
	[Address(RVA = "0x8819C0", Offset = "0x8819C0", VA = "0x8819C0")]
	public bool IsLanguageMatch(string languageHeader, string languageCheck)
	{
		return default(bool);
	}

	[Token(Token = "0x6000385")]
	[Address(RVA = "0x881594", Offset = "0x881594", VA = "0x881594")]
	private void DetectSystemLanguage()
	{
	}

	[Token(Token = "0x6000386")]
	[Address(RVA = "0x880D98", Offset = "0x880D98", VA = "0x880D98")]
	public void Load()
	{
	}

	[Token(Token = "0x6000387")]
	[Address(RVA = "0x881AB8", Offset = "0x881AB8", VA = "0x881AB8")]
	public List<string> GetStringIDListForLanguage(int langId)
	{
		return null;
	}

	[Token(Token = "0x6000388")]
	[Address(RVA = "0x881CC0", Offset = "0x881CC0", VA = "0x881CC0")]
	public string GetSummary()
	{
		return null;
	}

	[Token(Token = "0x6000389")]
	[Address(RVA = "0x882070", Offset = "0x882070", VA = "0x882070")]
	private string GetNextStringID()
	{
		return null;
	}

	[Token(Token = "0x600038A")]
	[Address(RVA = "0x8821C8", Offset = "0x8821C8", VA = "0x8821C8")]
	public string AllocateNewString(string primaryLanguageText)
	{
		return null;
	}

	[Token(Token = "0x600038B")]
	[Address(RVA = "0x882288", Offset = "0x882288", VA = "0x882288")]
	public string GetStringIDForText(string text)
	{
		return null;
	}

	[Token(Token = "0x600038C")]
	[Address(RVA = "0x882434", Offset = "0x882434", VA = "0x882434")]
	public string WrapAsianString(string text, int lineLength)
	{
		return null;
	}

	[Token(Token = "0x600038D")]
	[Address(RVA = "0x88243C", Offset = "0x88243C", VA = "0x88243C")]
	public string GetTranslation(string text, [Optional] Language lang, [Optional] string category, bool processTags = true, int asianLineLength = -1)
	{
		return null;
	}

	[Token(Token = "0x600038E")]
	[Address(RVA = "0x8828C4", Offset = "0x8828C4", VA = "0x8828C4")]
	public string GetTranslationAllLanguages(string text)
	{
		return null;
	}

	[Token(Token = "0x600038F")]
	[Address(RVA = "0x882B6C", Offset = "0x882B6C", VA = "0x882B6C")]
	public string GetLocalisedString(string stringId, string defaultValue = "", [Optional] Language lang)
	{
		return null;
	}

	[Token(Token = "0x6000390")]
	[Address(RVA = "0x8803B0", Offset = "0x8803B0", VA = "0x8803B0")]
	public void SetCurrentLanguage(int langId)
	{
	}

	[Token(Token = "0x6000391")]
	[Address(RVA = "0x881678", Offset = "0x881678", VA = "0x881678")]
	public void SetCurrentLanguage(string isoCode)
	{
	}

	[Token(Token = "0x6000392")]
	[Address(RVA = "0x8828BC", Offset = "0x8828BC", VA = "0x8828BC")]
	public int GetCurrentLanguageId()
	{
		return default(int);
	}

	[Token(Token = "0x6000393")]
	[Address(RVA = "0x882C6C", Offset = "0x882C6C", VA = "0x882C6C")]
	public int GetMasterLanguageId()
	{
		return default(int);
	}

	[Token(Token = "0x6000394")]
	[Address(RVA = "0x881C6C", Offset = "0x881C6C", VA = "0x881C6C")]
	public Language GetLanguage(int languageId)
	{
		return null;
	}

	[Token(Token = "0x6000395")]
	[Address(RVA = "0x882C74", Offset = "0x882C74", VA = "0x882C74")]
	public string ReverseLocaliseString(string original)
	{
		return null;
	}

	[Token(Token = "0x6000396")]
	[Address(RVA = "0x882C88", Offset = "0x882C88", VA = "0x882C88")]
	public string AddLocaliseStringToDatabase(string original, bool allowMerge = true)
	{
		return null;
	}

	[Token(Token = "0x6000397")]
	[Address(RVA = "0x883260", Offset = "0x883260", VA = "0x883260")]
	public string GetCurrentContextString()
	{
		return null;
	}

	[Token(Token = "0x6000398")]
	[Address(RVA = "0x8833A8", Offset = "0x8833A8", VA = "0x8833A8")]
	public void PushContext(string info)
	{
	}

	[Token(Token = "0x6000399")]
	[Address(RVA = "0x883418", Offset = "0x883418", VA = "0x883418")]
	public void PopContext()
	{
	}

	[Token(Token = "0x600039B")]
	[Address(RVA = "0x883D18", Offset = "0x883D18", VA = "0x883D18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x666A94", Offset = "0x666A94")]
	private void <Init>b__37_0(bool clicked, out string name, out string value)
	{
	}
}
[Token(Token = "0x200007F")]
public class Subtitles : MonoBehaviour
{
	[Token(Token = "0x2000550")]
	private class Subtitle
	{
		[Token(Token = "0x400245D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string _text;

		[Token(Token = "0x400245E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float _minimumDisplayTime;

		[Token(Token = "0x400245F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float _normalDisplayTime;

		[Token(Token = "0x4002460")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int _id;

		[Token(Token = "0x4002461")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool _shortcut;

		[Token(Token = "0x4002462")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
		public bool _alwaysShow;

		[Token(Token = "0x4002463")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float _showTime;

		[Token(Token = "0x600297E")]
		[Address(RVA = "0x884294", Offset = "0x884294", VA = "0x884294")]
		public Subtitle(string text, float minTime, float normTime, bool alwaysShow)
		{
		}
	}

	[Token(Token = "0x40002D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Subtitles _instance;

	[Token(Token = "0x40002D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform _subtitleCanvasRoot;

	[Token(Token = "0x40002D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Text _textElement;

	[Token(Token = "0x40002D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Queue<Subtitle> _queue;

	[Token(Token = "0x40002D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool _subtitleShowing;

	[Token(Token = "0x40002D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	private bool _subtitleHidden;

	[Token(Token = "0x40002DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Subtitle _currentSubtitle;

	[Token(Token = "0x40002DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int _nextId;

	[Token(Token = "0x1700005E")]
	public static Subtitles instance
	{
		[Token(Token = "0x600039C")]
		[Address(RVA = "0x8840CC", Offset = "0x8840CC", VA = "0x8840CC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700005F")]
	public int nextId
	{
		[Token(Token = "0x600039D")]
		[Address(RVA = "0x88411C", Offset = "0x88411C", VA = "0x88411C")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x600039E")]
	[Address(RVA = "0x884130", Offset = "0x884130", VA = "0x884130")]
	private void Start()
	{
	}

	[Token(Token = "0x600039F")]
	[Address(RVA = "0x884184", Offset = "0x884184", VA = "0x884184")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60003A0")]
	[Address(RVA = "0x8841D4", Offset = "0x8841D4", VA = "0x8841D4")]
	public int Show(string text, float minimumDisplayTime, float normalDisplayTime, bool alwaysShow)
	{
		return default(int);
	}

	[Token(Token = "0x60003A1")]
	[Address(RVA = "0x884340", Offset = "0x884340", VA = "0x884340")]
	public void Hide(int id)
	{
	}

	[Token(Token = "0x60003A2")]
	[Address(RVA = "0x884444", Offset = "0x884444", VA = "0x884444")]
	public void FinishAll()
	{
	}

	[Token(Token = "0x60003A3")]
	[Address(RVA = "0x8844AC", Offset = "0x8844AC", VA = "0x8844AC")]
	private void HideSubtitle()
	{
	}

	[Token(Token = "0x60003A4")]
	[Address(RVA = "0x884508", Offset = "0x884508", VA = "0x884508")]
	private void ShowSubtitle(Subtitle subtitle)
	{
	}

	[Token(Token = "0x60003A5")]
	[Address(RVA = "0x8846F4", Offset = "0x8846F4", VA = "0x8846F4")]
	public void SetHidden(bool en)
	{
	}

	[Token(Token = "0x60003A6")]
	[Address(RVA = "0x884798", Offset = "0x884798", VA = "0x884798")]
	private void Update()
	{
	}

	[Token(Token = "0x60003A7")]
	[Address(RVA = "0x88490C", Offset = "0x88490C", VA = "0x88490C")]
	public Subtitles()
	{
	}
}
[Serializable]
[Token(Token = "0x2000080")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x63D4C4", Offset = "0x63D4C4")]
public class TextHighlightData : ScriptableObject
{
	[Serializable]
	[Token(Token = "0x2000551")]
	private struct Category
	{
		[Token(Token = "0x4002464")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x66410C", Offset = "0x66410C")]
		public string name;

		[Token(Token = "0x4002465")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x664144", Offset = "0x664144")]
		public Color color;
	}

	[Serializable]
	[Token(Token = "0x2000552")]
	private class TextHighlightDef
	{
		[Token(Token = "0x4002466")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x66417C", Offset = "0x66417C")]
		public string tagName;

		[Token(Token = "0x4002467")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6641B4", Offset = "0x6641B4")]
		public Color color;

		[Token(Token = "0x4002468")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6641EC", Offset = "0x6641EC")]
		public List<Category> category;

		[Token(Token = "0x600297F")]
		[Address(RVA = "0x8871C8", Offset = "0x8871C8", VA = "0x8871C8")]
		public TextHighlightDef()
		{
		}
	}

	[Token(Token = "0x2000553")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x643DD8", Offset = "0x643DD8")]
	private sealed class <>c__DisplayClass4_0
	{
		[Token(Token = "0x4002469")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public TextHighlightData <>4__this;

		[Token(Token = "0x400246A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string category;

		[Token(Token = "0x6002980")]
		[Address(RVA = "0x886D28", Offset = "0x886D28", VA = "0x886D28")]
		public <>c__DisplayClass4_0()
		{
		}

		[Token(Token = "0x6002981")]
		[Address(RVA = "0x886D38", Offset = "0x886D38", VA = "0x886D38")]
		internal string <ProcessString>b__0(Match match)
		{
			return null;
		}

		[Token(Token = "0x6002982")]
		[Address(RVA = "0x886F70", Offset = "0x886F70", VA = "0x886F70")]
		internal bool <ProcessString>b__3(Category cat)
		{
			return default(bool);
		}

		[Token(Token = "0x6002983")]
		[Address(RVA = "0x886F84", Offset = "0x886F84", VA = "0x886F84")]
		internal string <ProcessString>b__1(Match match)
		{
			return null;
		}
	}

	[Token(Token = "0x2000554")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x643DE8", Offset = "0x643DE8")]
	private sealed class <>c__DisplayClass4_1
	{
		[Token(Token = "0x400246B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Match match;

		[Token(Token = "0x6002984")]
		[Address(RVA = "0x886F68", Offset = "0x886F68", VA = "0x886F68")]
		public <>c__DisplayClass4_1()
		{
		}

		[Token(Token = "0x6002985")]
		[Address(RVA = "0x8870A8", Offset = "0x8870A8", VA = "0x8870A8")]
		internal bool <ProcessString>b__2(TextHighlightDef h)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x2000555")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x643DF8", Offset = "0x643DF8")]
	private sealed class <>c__DisplayClass4_2
	{
		[Token(Token = "0x400246C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Match match;

		[Token(Token = "0x6002986")]
		[Address(RVA = "0x8870A0", Offset = "0x8870A0", VA = "0x8870A0")]
		public <>c__DisplayClass4_2()
		{
		}

		[Token(Token = "0x6002987")]
		[Address(RVA = "0x887138", Offset = "0x887138", VA = "0x887138")]
		internal bool <ProcessString>b__4(TextHighlightDef h)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x40002DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private List<TextHighlightDef> _highlightTypes;

	[Token(Token = "0x60003A8")]
	[Address(RVA = "0x886C3C", Offset = "0x886C3C", VA = "0x886C3C")]
	public string HexColor(Color c)
	{
		return null;
	}

	[Token(Token = "0x60003A9")]
	[Address(RVA = "0x882660", Offset = "0x882660", VA = "0x882660")]
	public string ProcessString(string str, [Optional] string category)
	{
		return null;
	}

	[Token(Token = "0x60003AA")]
	[Address(RVA = "0x886D30", Offset = "0x886D30", VA = "0x886D30")]
	public TextHighlightData()
	{
	}
}
[Token(Token = "0x2000081")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x63D534", Offset = "0x63D534")]
public class TextLocalisedUI : MonoBehaviour, Localisable
{
	[Token(Token = "0x40002DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "LocalisedString", RVA = "0x649E20", Offset = "0x649E20")]
	[SerializeField]
	private string _text;

	[Token(Token = "0x40002DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Text m_text;

	[Token(Token = "0x17000060")]
	private Text p_text
	{
		[Token(Token = "0x60003AB")]
		[Address(RVA = "0x8871D0", Offset = "0x8871D0", VA = "0x8871D0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000061")]
	public Text LocalisedText
	{
		[Token(Token = "0x60003AC")]
		[Address(RVA = "0x887230", Offset = "0x887230", VA = "0x887230")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60003AD")]
	[Address(RVA = "0x887328", Offset = "0x887328", VA = "0x887328")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60003AE")]
	[Address(RVA = "0x887254", Offset = "0x887254", VA = "0x887254")]
	private string SetLocalisationstring()
	{
		return null;
	}

	[Token(Token = "0x60003AF")]
	[Address(RVA = "0x88732C", Offset = "0x88732C", VA = "0x88732C", Slot = "4")]
	public void Localise()
	{
	}

	[Token(Token = "0x60003B0")]
	[Address(RVA = "0x8873F4", Offset = "0x8873F4", VA = "0x8873F4")]
	public TextLocalisedUI()
	{
	}
}
[Token(Token = "0x2000082")]
public class AutoHolster : MonoBehaviour
{
	[Token(Token = "0x2000556")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x643E08", Offset = "0x643E08")]
	private sealed class <>c__DisplayClass21_0
	{
		[Token(Token = "0x400246D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public VRTK_ControllerEvents evRight;

		[Token(Token = "0x400246E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AutoHolster <>4__this;

		[Token(Token = "0x6002988")]
		[Address(RVA = "0x8C0050", Offset = "0x8C0050", VA = "0x8C0050")]
		public <>c__DisplayClass21_0()
		{
		}

		[Token(Token = "0x6002989")]
		[Address(RVA = "0x8C0340", Offset = "0x8C0340", VA = "0x8C0340")]
		internal bool <ActivationButtonPressed>b__2()
		{
			return default(bool);
		}
	}

	[Token(Token = "0x2000557")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x643E18", Offset = "0x643E18")]
	private sealed class <>c__DisplayClass21_1
	{
		[Token(Token = "0x400246F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public VRTK_ControllerEvents evLeft;

		[Token(Token = "0x4002470")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AutoHolster <>4__this;

		[Token(Token = "0x600298A")]
		[Address(RVA = "0x8C0058", Offset = "0x8C0058", VA = "0x8C0058")]
		public <>c__DisplayClass21_1()
		{
		}

		[Token(Token = "0x600298B")]
		[Address(RVA = "0x8C039C", Offset = "0x8C039C", VA = "0x8C039C")]
		internal bool <ActivationButtonPressed>b__3()
		{
			return default(bool);
		}
	}

	[Token(Token = "0x40002DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private FlexiblePointer _pointer;

	[Token(Token = "0x40002E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private HolsterInventory _holster;

	[Token(Token = "0x40002E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private VRTK_InteractTouch _leftTouch;

	[Token(Token = "0x40002E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private VRTK_InteractTouch _rightTouch;

	[Token(Token = "0x40002E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private VRTK_InteractGrab _leftGrab;

	[Token(Token = "0x40002E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private VRTK_InteractGrab _rightGrab;

	[Token(Token = "0x40002E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private List<GameObject> _leftTouching;

	[Token(Token = "0x40002E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private List<GameObject> _rightTouching;

	[Token(Token = "0x40002E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool _wasEnabled;

	[Token(Token = "0x40002E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	private bool _prevLeftGrabPressed;

	[Token(Token = "0x40002E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5A")]
	private bool _prevRightGrabPressed;

	[Token(Token = "0x60003B1")]
	[Address(RVA = "0x8BE6C0", Offset = "0x8BE6C0", VA = "0x8BE6C0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60003B2")]
	[Address(RVA = "0x8BE740", Offset = "0x8BE740", VA = "0x8BE740")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60003B3")]
	[Address(RVA = "0x8BE7C0", Offset = "0x8BE7C0", VA = "0x8BE7C0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60003B4")]
	[Address(RVA = "0x8BEC78", Offset = "0x8BEC78", VA = "0x8BEC78")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60003B5")]
	[Address(RVA = "0x8BF17C", Offset = "0x8BF17C", VA = "0x8BF17C")]
	public void Reinit()
	{
	}

	[Token(Token = "0x60003B6")]
	[Address(RVA = "0x8BF1A0", Offset = "0x8BF1A0", VA = "0x8BF1A0")]
	private void TouchStopRight(object sender, ObjectInteractEventArgs e)
	{
	}

	[Token(Token = "0x60003B7")]
	[Address(RVA = "0x8BF210", Offset = "0x8BF210", VA = "0x8BF210")]
	private void TouchStartRight(object sender, ObjectInteractEventArgs e)
	{
	}

	[Token(Token = "0x60003B8")]
	[Address(RVA = "0x8BF280", Offset = "0x8BF280", VA = "0x8BF280")]
	private void TouchStopLeft(object sender, ObjectInteractEventArgs e)
	{
	}

	[Token(Token = "0x60003B9")]
	[Address(RVA = "0x8BF2F0", Offset = "0x8BF2F0", VA = "0x8BF2F0")]
	private void TouchStartLeft(object sender, ObjectInteractEventArgs e)
	{
	}

	[Token(Token = "0x60003BA")]
	[Address(RVA = "0x8BF360", Offset = "0x8BF360", VA = "0x8BF360")]
	public void Update()
	{
	}

	[Token(Token = "0x60003BB")]
	[Address(RVA = "0x8BF6BC", Offset = "0x8BF6BC", VA = "0x8BF6BC")]
	private void ActivationButtonPressed(object sender, ControllerInteractionEventArgs e)
	{
	}

	[Token(Token = "0x60003BC")]
	[Address(RVA = "0x8C0060", Offset = "0x8C0060", VA = "0x8C0060")]
	public AutoHolster()
	{
	}

	[Token(Token = "0x60003BD")]
	[Address(RVA = "0x8C00F0", Offset = "0x8C00F0", VA = "0x8C00F0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x666AA4", Offset = "0x666AA4")]
	private bool <ActivationButtonPressed>b__21_0(GameObject item)
	{
		return default(bool);
	}

	[Token(Token = "0x60003BE")]
	[Address(RVA = "0x8C0218", Offset = "0x8C0218", VA = "0x8C0218")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x666AB4", Offset = "0x666AB4")]
	private bool <ActivationButtonPressed>b__21_1(GameObject item)
	{
		return default(bool);
	}
}
[Token(Token = "0x2000083")]
public class AxisPointerActivate : MonoBehaviour
{
	[Token(Token = "0x2000558")]
	private enum Axis
	{
		[Token(Token = "0x4002472")]
		X,
		[Token(Token = "0x4002473")]
		Y
	}

	[Token(Token = "0x2000559")]
	private enum Direction
	{
		[Token(Token = "0x4002475")]
		Positive,
		[Token(Token = "0x4002476")]
		Negative
	}

	[Token(Token = "0x40002EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Axis _axis;

	[Token(Token = "0x40002EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private Direction _direction;

	[Token(Token = "0x40002EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private VRTK_TouchpadControl _touchPadControlDisable;

	[Token(Token = "0x40002ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private VRTK_Pointer _pointer;

	[Token(Token = "0x40002EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private VRTK_TouchpadControl _touchPad;

	[Token(Token = "0x40002EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool _pressed;

	[Token(Token = "0x60003BF")]
	[Address(RVA = "0x8C03F8", Offset = "0x8C03F8", VA = "0x8C03F8")]
	private void Awake()
	{
	}

	[Token(Token = "0x60003C0")]
	[Address(RVA = "0x8C04FC", Offset = "0x8C04FC", VA = "0x8C04FC")]
	private void XAxisChanged(object sender, ObjectControlEventArgs e)
	{
	}

	[Token(Token = "0x60003C1")]
	[Address(RVA = "0x8C06B8", Offset = "0x8C06B8", VA = "0x8C06B8")]
	private void YAxisChanged(object sender, ObjectControlEventArgs e)
	{
	}

	[Token(Token = "0x60003C2")]
	[Address(RVA = "0x8C0878", Offset = "0x8C0878", VA = "0x8C0878")]
	public AxisPointerActivate()
	{
	}
}
[Token(Token = "0x2000084")]
public class ClearAreaRaycast : VRTK_CustomRaycast
{
	[Token(Token = "0x60003C3")]
	[Address(RVA = "0x8CB1B0", Offset = "0x8CB1B0", VA = "0x8CB1B0", Slot = "8")]
	public new virtual bool CustomLinecast(Vector3 startPosition, Vector3 endPosition, out RaycastHit hitData)
	{
		return default(bool);
	}

	[Token(Token = "0x60003C4")]
	[Address(RVA = "0x8CB234", Offset = "0x8CB234", VA = "0x8CB234")]
	public ClearAreaRaycast()
	{
	}
}
[Token(Token = "0x2000085")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x63D598", Offset = "0x63D598")]
public class ContainerReparent : MonoBehaviour
{
	[Token(Token = "0x200055A")]
	private enum Position
	{
		[Token(Token = "0x4002478")]
		Min,
		[Token(Token = "0x4002479")]
		Max
	}

	[Token(Token = "0x40002F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Dictionary<VRTK_InteractableObject, Transform> _savedRoot;

	[Token(Token = "0x40002F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x649EAC", Offset = "0x649EAC")]
	[SerializeField]
	private VRTK_BaseControllable _control;

	[Token(Token = "0x40002F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x649EF8", Offset = "0x649EF8")]
	[SerializeField]
	private Position _closedControlPosition;

	[Token(Token = "0x40002F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private bool _closed;

	[Token(Token = "0x60003C5")]
	[Address(RVA = "0x7ABE18", Offset = "0x7ABE18", VA = "0x7ABE18")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60003C6")]
	[Address(RVA = "0x7AC0C4", Offset = "0x7AC0C4", VA = "0x7AC0C4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60003C7")]
	[Address(RVA = "0x7AC268", Offset = "0x7AC268", VA = "0x7AC268")]
	private void MaxLimitExited(object sender, ControllableEventArgs e)
	{
	}

	[Token(Token = "0x60003C8")]
	[Address(RVA = "0x7AC4A8", Offset = "0x7AC4A8", VA = "0x7AC4A8")]
	private void MaxLimitReached(object sender, ControllableEventArgs e)
	{
	}

	[Token(Token = "0x60003C9")]
	[Address(RVA = "0x7AC6EC", Offset = "0x7AC6EC", VA = "0x7AC6EC")]
	private void MinLimitExited(object sender, ControllableEventArgs e)
	{
	}

	[Token(Token = "0x60003CA")]
	[Address(RVA = "0x7AC6FC", Offset = "0x7AC6FC", VA = "0x7AC6FC")]
	private void MinLimitReached(object sender, ControllableEventArgs e)
	{
	}

	[Token(Token = "0x60003CB")]
	[Address(RVA = "0x7AC27C", Offset = "0x7AC27C", VA = "0x7AC27C")]
	private void OpenedControl()
	{
	}

	[Token(Token = "0x60003CC")]
	[Address(RVA = "0x7AC4BC", Offset = "0x7AC4BC", VA = "0x7AC4BC")]
	private void ClosedControl()
	{
	}

	[Token(Token = "0x60003CD")]
	[Address(RVA = "0x7AC70C", Offset = "0x7AC70C", VA = "0x7AC70C")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60003CE")]
	[Address(RVA = "0x7ACB54", Offset = "0x7ACB54", VA = "0x7ACB54")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x60003CF")]
	[Address(RVA = "0x7ACEDC", Offset = "0x7ACEDC", VA = "0x7ACEDC")]
	public ContainerReparent()
	{
	}
}
[Token(Token = "0x2000086")]
public class FlexiblePointer : VRTK_Pointer
{
	[Token(Token = "0x40002F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	[SerializeField]
	private bool _delectOnPointerExit;

	[Token(Token = "0x40002F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x131")]
	[SerializeField]
	private bool _highlightAimedObjects;

	[Token(Token = "0x40002F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
	[SerializeField]
	private Color _highlightColour;

	[Token(Token = "0x40002F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x649F74", Offset = "0x649F74")]
	[SerializeField]
	private VRTK_ControllerEvents.ButtonAlias _alternateActivationButton;

	[Token(Token = "0x40002F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private int _activationFlag;

	[Token(Token = "0x40002F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private VRTK_BaseHighlighter _currentHighlight;

	[Token(Token = "0x40002FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private Maze_InteractObjectHighlighter _currentMazeHighlight;

	[Token(Token = "0x60003D0")]
	[Address(RVA = "0x7C03F4", Offset = "0x7C03F4", VA = "0x7C03F4", Slot = "23")]
	public override void PointerEnter(RaycastHit givenHit)
	{
	}

	[Token(Token = "0x60003D1")]
	[Address(RVA = "0x7C07DC", Offset = "0x7C07DC", VA = "0x7C07DC", Slot = "24")]
	public override void PointerExit(RaycastHit givenHit)
	{
	}

	[Token(Token = "0x60003D2")]
	[Address(RVA = "0x7C0A30", Offset = "0x7C0A30", VA = "0x7C0A30", Slot = "34")]
	protected override void Update()
	{
	}

	[Token(Token = "0x60003D3")]
	[Address(RVA = "0x7C11A0", Offset = "0x7C11A0", VA = "0x7C11A0", Slot = "45")]
	protected override void SetupController()
	{
	}

	[Token(Token = "0x60003D4")]
	[Address(RVA = "0x7C12F8", Offset = "0x7C12F8", VA = "0x7C12F8", Slot = "55")]
	protected override void DoActivationButtonPressed(object sender, ControllerInteractionEventArgs e)
	{
	}

	[Token(Token = "0x60003D5")]
	[Address(RVA = "0x7C1358", Offset = "0x7C1358", VA = "0x7C1358", Slot = "56")]
	protected override void DoActivationButtonReleased(object sender, ControllerInteractionEventArgs e)
	{
	}

	[Token(Token = "0x60003D6")]
	[Address(RVA = "0x7C13BC", Offset = "0x7C13BC", VA = "0x7C13BC")]
	public FlexiblePointer()
	{
	}
}
[Token(Token = "0x2000087")]
public interface PointerAimHighlight
{
}
[Token(Token = "0x2000088")]
public class FlexibleTeleporter : VRTK_HeightAdjustTeleport
{
	[Token(Token = "0x200055B")]
	public delegate void TeleportCallback(Vector3 targetPoint);

	[Token(Token = "0x40002FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x649FC0", Offset = "0x649FC0")]
	[SerializeField]
	public bool _processMarkers;

	[Token(Token = "0x40002FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC1")]
	[SerializeField]
	public bool _playerControlledTeleporter;

	[Token(Token = "0x14000033")]
	public static event TeleportCallback OnPlayerControlledTeleport
	{
		[Token(Token = "0x60003D7")]
		[Address(RVA = "0x7C1400", Offset = "0x7C1400", VA = "0x7C1400")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x666AC4", Offset = "0x666AC4")]
		add
		{
		}
		[Token(Token = "0x60003D8")]
		[Address(RVA = "0x7C14FC", Offset = "0x7C14FC", VA = "0x7C14FC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x666AD4", Offset = "0x666AD4")]
		remove
		{
		}
	}

	[Token(Token = "0x60003D9")]
	[Address(RVA = "0x7C15F8", Offset = "0x7C15F8", VA = "0x7C15F8", Slot = "13")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x60003DA")]
	[Address(RVA = "0x7C1600", Offset = "0x7C1600", VA = "0x7C1600", Slot = "14")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x60003DB")]
	[Address(RVA = "0x7C1608", Offset = "0x7C1608", VA = "0x7C1608", Slot = "9")]
	public override void ForceTeleport(Vector3 destinationPosition, [Optional] Quaternion? destinationRotation)
	{
	}

	[Token(Token = "0x60003DC")]
	[Address(RVA = "0x7C18B0", Offset = "0x7C18B0", VA = "0x7C18B0", Slot = "19")]
	protected override void DoTeleport(object sender, DestinationMarkerEventArgs e)
	{
	}

	[Token(Token = "0x60003DD")]
	[Address(RVA = "0x7C20EC", Offset = "0x7C20EC", VA = "0x7C20EC", Slot = "36")]
	protected override float GetTeleportY(Transform target, Vector3 tipPosition)
	{
		return default(float);
	}

	[Token(Token = "0x60003DE")]
	[Address(RVA = "0x7C2300", Offset = "0x7C2300", VA = "0x7C2300", Slot = "33")]
	protected override void InitDestinationMarkerListeners(bool state)
	{
	}

	[Token(Token = "0x60003DF")]
	[Address(RVA = "0x7C2568", Offset = "0x7C2568", VA = "0x7C2568")]
	public FlexibleTeleporter()
	{
	}
}
[Token(Token = "0x2000089")]
public class MazeBodyPhysics : VRTK_BodyPhysics
{
	[Token(Token = "0x200055C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x643E28", Offset = "0x643E28")]
	private sealed class <InitHandlers>d__10 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400247A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400247B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400247C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MazeBodyPhysics <>4__this;

		[Token(Token = "0x17000227")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002993")]
			[Address(RVA = "0x7EFBE0", Offset = "0x7EFBE0", VA = "0x7EFBE0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000228")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002995")]
			[Address(RVA = "0x7EFC50", Offset = "0x7EFC50", VA = "0x7EFC50", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002990")]
		[Address(RVA = "0x7EED80", Offset = "0x7EED80", VA = "0x7EED80")]
		[DebuggerHidden]
		public <InitHandlers>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x6002991")]
		[Address(RVA = "0x7EFB2C", Offset = "0x7EFB2C", VA = "0x7EFB2C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002992")]
		[Address(RVA = "0x7EFB30", Offset = "0x7EFB30", VA = "0x7EFB30", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002994")]
		[Address(RVA = "0x7EFBE8", Offset = "0x7EFBE8", VA = "0x7EFBE8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200055D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x643E38", Offset = "0x643E38")]
	private sealed class <PerformPhysicsWaitImpl>d__16 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400247D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400247E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400247F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MazeBodyPhysics <>4__this;

		[Token(Token = "0x4002480")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private StageCheckpoint <checkpoint>5__2;

		[Token(Token = "0x4002481")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int <idx>5__3;

		[Token(Token = "0x17000229")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002999")]
			[Address(RVA = "0x7EFEBC", Offset = "0x7EFEBC", VA = "0x7EFEBC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700022A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600299B")]
			[Address(RVA = "0x7EFF2C", Offset = "0x7EFF2C", VA = "0x7EFF2C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002996")]
		[Address(RVA = "0x7EF174", Offset = "0x7EF174", VA = "0x7EF174")]
		[DebuggerHidden]
		public <PerformPhysicsWaitImpl>d__16(int <>1__state)
		{
		}

		[Token(Token = "0x6002997")]
		[Address(RVA = "0x7EFC58", Offset = "0x7EFC58", VA = "0x7EFC58", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002998")]
		[Address(RVA = "0x7EFC5C", Offset = "0x7EFC5C", VA = "0x7EFC5C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600299A")]
		[Address(RVA = "0x7EFEC4", Offset = "0x7EFEC4", VA = "0x7EFEC4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200055E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x643E48", Offset = "0x643E48")]
	private sealed class <PhysicsPauseImpl>d__17 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002482")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002483")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002484")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MazeBodyPhysics <>4__this;

		[Token(Token = "0x4002485")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <duration>5__2;

		[Token(Token = "0x4002486")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <i>5__3;

		[Token(Token = "0x1700022B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600299F")]
			[Address(RVA = "0x7F00C8", Offset = "0x7F00C8", VA = "0x7F00C8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700022C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60029A1")]
			[Address(RVA = "0x7F0138", Offset = "0x7F0138", VA = "0x7F0138", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600299C")]
		[Address(RVA = "0x7EF1A0", Offset = "0x7EF1A0", VA = "0x7EF1A0")]
		[DebuggerHidden]
		public <PhysicsPauseImpl>d__17(int <>1__state)
		{
		}

		[Token(Token = "0x600299D")]
		[Address(RVA = "0x7EFF34", Offset = "0x7EFF34", VA = "0x7EFF34", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600299E")]
		[Address(RVA = "0x7EFF38", Offset = "0x7EFF38", VA = "0x7EFF38", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60029A0")]
		[Address(RVA = "0x7F00D0", Offset = "0x7F00D0", VA = "0x7F00D0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200055F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x643E58", Offset = "0x643E58")]
	private sealed class <RestoreCollisions>d__21 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002487")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002488")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002489")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject obj;

		[Token(Token = "0x400248A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public MazeBodyPhysics <>4__this;

		[Token(Token = "0x1700022D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60029A5")]
			[Address(RVA = "0x7F02FC", Offset = "0x7F02FC", VA = "0x7F02FC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700022E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60029A7")]
			[Address(RVA = "0x7F036C", Offset = "0x7F036C", VA = "0x7F036C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60029A2")]
		[Address(RVA = "0x7EFA28", Offset = "0x7EFA28", VA = "0x7EFA28")]
		[DebuggerHidden]
		public <RestoreCollisions>d__21(int <>1__state)
		{
		}

		[Token(Token = "0x60029A3")]
		[Address(RVA = "0x7F0140", Offset = "0x7F0140", VA = "0x7F0140", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60029A4")]
		[Address(RVA = "0x7F0144", Offset = "0x7F0144", VA = "0x7F0144", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60029A6")]
		[Address(RVA = "0x7F0304", Offset = "0x7F0304", VA = "0x7F0304", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40002FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
	public WalkSpeedModifier walkSpeedModifier;

	[Token(Token = "0x40002FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
	private bool _insideTardis;

	[Token(Token = "0x4000300")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22C")]
	public float _colliderLeashLength;

	[Token(Token = "0x4000301")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
	private float startWalkSpeedModifier;

	[Token(Token = "0x17000062")]
	public bool insideTardis
	{
		[Token(Token = "0x60003E0")]
		[Address(RVA = "0x7EE848", Offset = "0x7EE848", VA = "0x7EE848")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60003E1")]
		[Address(RVA = "0x7EE850", Offset = "0x7EE850", VA = "0x7EE850")]
		set
		{
		}
	}

	[Token(Token = "0x60003E2")]
	[Address(RVA = "0x7EE9C0", Offset = "0x7EE9C0", VA = "0x7EE9C0")]
	public Rigidbody GetRigidbody()
	{
		return null;
	}

	[Token(Token = "0x60003E3")]
	[Address(RVA = "0x7EE9C8", Offset = "0x7EE9C8", VA = "0x7EE9C8")]
	private void Start()
	{
	}

	[Token(Token = "0x60003E4")]
	[Address(RVA = "0x7EEABC", Offset = "0x7EEABC", VA = "0x7EEABC")]
	public static void RemoveDisallowedObjects()
	{
	}

	[Token(Token = "0x60003E5")]
	[Address(RVA = "0x7EEA48", Offset = "0x7EEA48", VA = "0x7EEA48")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x666AE4", Offset = "0x666AE4")]
	private IEnumerator InitHandlers()
	{
		return null;
	}

	[Token(Token = "0x60003E6")]
	[Address(RVA = "0x7EEDAC", Offset = "0x7EEDAC", VA = "0x7EEDAC", Slot = "77")]
	protected override void EnableBodyPhysics()
	{
	}

	[Token(Token = "0x60003E7")]
	[Address(RVA = "0x7EE85C", Offset = "0x7EE85C", VA = "0x7EE85C")]
	private void SetColliderLayers()
	{
	}

	[Token(Token = "0x60003E8")]
	[Address(RVA = "0x7EEF88", Offset = "0x7EEF88", VA = "0x7EEF88", Slot = "78")]
	protected override void DisableBodyPhysics()
	{
	}

	[Token(Token = "0x60003E9")]
	[Address(RVA = "0x7EEEA8", Offset = "0x7EEEA8", VA = "0x7EEEA8")]
	public void PerformPhysicsWait()
	{
	}

	[Token(Token = "0x60003EA")]
	[Address(RVA = "0x7EF0C8", Offset = "0x7EF0C8", VA = "0x7EF0C8")]
	public void PhysicsPause()
	{
	}

	[Token(Token = "0x60003EB")]
	[Address(RVA = "0x7EF054", Offset = "0x7EF054", VA = "0x7EF054")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x666B48", Offset = "0x666B48")]
	private IEnumerator PerformPhysicsWaitImpl()
	{
		return null;
	}

	[Token(Token = "0x60003EC")]
	[Address(RVA = "0x7EF100", Offset = "0x7EF100", VA = "0x7EF100")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x666BAC", Offset = "0x666BAC")]
	private IEnumerator PhysicsPauseImpl()
	{
		return null;
	}

	[Token(Token = "0x60003ED")]
	[Address(RVA = "0x7EF1CC", Offset = "0x7EF1CC", VA = "0x7EF1CC", Slot = "35")]
	protected override void OnDestroy()
	{
	}

	[Token(Token = "0x60003EE")]
	[Address(RVA = "0x7EF268", Offset = "0x7EF268", VA = "0x7EF268")]
	public void SnapHeadToBody()
	{
	}

	[Token(Token = "0x60003EF")]
	[Address(RVA = "0x7EF354", Offset = "0x7EF354", VA = "0x7EF354", Slot = "91")]
	protected override void UpdateCollider()
	{
	}

	[Token(Token = "0x60003F0")]
	[Address(RVA = "0x7EF990", Offset = "0x7EF990", VA = "0x7EF990", Slot = "94")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x666C10", Offset = "0x666C10")]
	protected override IEnumerator RestoreCollisions(GameObject obj)
	{
		return null;
	}

	[Token(Token = "0x60003F1")]
	[Address(RVA = "0x7EFA54", Offset = "0x7EFA54", VA = "0x7EFA54")]
	public void SetHandlers(bool en)
	{
	}

	[Token(Token = "0x60003F2")]
	[Address(RVA = "0x7EFB10", Offset = "0x7EFB10", VA = "0x7EFB10")]
	public MazeBodyPhysics()
	{
	}
}
[Token(Token = "0x200008A")]
public class MazeSeatedModifier : MonoBehaviour
{
	[Token(Token = "0x4000302")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float _seatedOffset;

	[Token(Token = "0x4000303")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private int _lastSaveVersion;

	[Token(Token = "0x4000304")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float _initialOffset;

	[Token(Token = "0x4000305")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private MazeBodyPhysics _bodyPhysics;

	[Token(Token = "0x60003F3")]
	[Address(RVA = "0x7F11E4", Offset = "0x7F11E4", VA = "0x7F11E4")]
	private void Start()
	{
	}

	[Token(Token = "0x60003F4")]
	[Address(RVA = "0x7F128C", Offset = "0x7F128C", VA = "0x7F128C")]
	private void Update()
	{
	}

	[Token(Token = "0x60003F5")]
	[Address(RVA = "0x7F154C", Offset = "0x7F154C", VA = "0x7F154C")]
	public MazeSeatedModifier()
	{
	}
}
[Token(Token = "0x200008B")]
public class MazeSlideObjectControlAction : VRTK_BaseObjectControlAction
{
	[Token(Token = "0x4000306")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x64A02C", Offset = "0x64A02C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64A02C", Offset = "0x64A02C")]
	public float maximumSpeedPositive;

	[Token(Token = "0x4000307")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64A08C", Offset = "0x64A08C")]
	public float maximumSpeedNegative;

	[Token(Token = "0x4000308")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64A0C4", Offset = "0x64A0C4")]
	public float deceleration;

	[Token(Token = "0x4000309")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64A0FC", Offset = "0x64A0FC")]
	public float fallingDeceleration;

	[Token(Token = "0x400030A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64A134", Offset = "0x64A134")]
	public float speedMultiplier;

	[Token(Token = "0x400030B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x64A16C", Offset = "0x64A16C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64A16C", Offset = "0x64A16C")]
	public VRTK_BodyPhysics bodyPhysics;

	[Token(Token = "0x400030C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	protected float currentSpeed;

	[Token(Token = "0x400030D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool _movingX;

	[Token(Token = "0x400030E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
	private static bool _movingY;

	[Token(Token = "0x17000063")]
	public static bool movingX
	{
		[Token(Token = "0x60003F6")]
		[Address(RVA = "0x7F155C", Offset = "0x7F155C", VA = "0x7F155C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000064")]
	public static bool movingY
	{
		[Token(Token = "0x60003F7")]
		[Address(RVA = "0x7F15C4", Offset = "0x7F15C4", VA = "0x7F15C4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60003F8")]
	[Address(RVA = "0x7F162C", Offset = "0x7F162C", VA = "0x7F162C", Slot = "4")]
	protected override void Process(GameObject controlledGameObject, Transform directionDevice, Vector3 axisDirection, float axis, float deadzone, bool currentlyFalling, bool modifierActive)
	{
	}

	[Token(Token = "0x60003F9")]
	[Address(RVA = "0x7F16BC", Offset = "0x7F16BC", VA = "0x7F16BC", Slot = "6")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x60003FA")]
	[Address(RVA = "0x7F16CC", Offset = "0x7F16CC", VA = "0x7F16CC", Slot = "7")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x60003FB")]
	[Address(RVA = "0x7F1784", Offset = "0x7F1784", VA = "0x7F1784", Slot = "18")]
	protected virtual float CalculateSpeed(float inputValue, bool currentlyFalling, bool modifierActive)
	{
		return default(float);
	}

	[Token(Token = "0x60003FC")]
	[Address(RVA = "0x7F17C8", Offset = "0x7F17C8", VA = "0x7F17C8", Slot = "19")]
	protected virtual float Decelerate(float speed, bool currentlyFalling)
	{
		return default(float);
	}

	[Token(Token = "0x60003FD")]
	[Address(RVA = "0x7F18E0", Offset = "0x7F18E0", VA = "0x7F18E0", Slot = "20")]
	protected virtual void Move(GameObject controlledGameObject, Transform directionDevice, Vector3 axisDirection)
	{
	}

	[Token(Token = "0x60003FE")]
	[Address(RVA = "0x7F1D10", Offset = "0x7F1D10", VA = "0x7F1D10")]
	public MazeSlideObjectControlAction()
	{
	}
}
[Token(Token = "0x200008C")]
public class MazeStraightPointerRenderer : VRTK_StraightPointerRenderer
{
	[Token(Token = "0x6000400")]
	[Address(RVA = "0x7F3734", Offset = "0x7F3734", VA = "0x7F3734")]
	public bool PerformRaycast(out RaycastHit pointerCollidedWith)
	{
		return default(bool);
	}

	[Token(Token = "0x6000401")]
	[Address(RVA = "0x7F381C", Offset = "0x7F381C", VA = "0x7F381C", Slot = "57")]
	protected override float CastRayForward()
	{
		return default(float);
	}

	[Token(Token = "0x6000402")]
	[Address(RVA = "0x7F3934", Offset = "0x7F3934", VA = "0x7F3934")]
	public MazeStraightPointerRenderer()
	{
	}
}
[Token(Token = "0x200008D")]
public class PortalInitialInside : MonoBehaviour
{
	[Token(Token = "0x400030F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private StencilBufferInitialise _initComponent;

	[Token(Token = "0x6000403")]
	[Address(RVA = "0x8DC974", Offset = "0x8DC974", VA = "0x8DC974")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000404")]
	[Address(RVA = "0x8DC9F4", Offset = "0x8DC9F4", VA = "0x8DC9F4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000405")]
	[Address(RVA = "0x8DCA74", Offset = "0x8DCA74", VA = "0x8DCA74")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000406")]
	[Address(RVA = "0x8DCC64", Offset = "0x8DCC64", VA = "0x8DCC64")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000407")]
	[Address(RVA = "0x8DCD10", Offset = "0x8DCD10", VA = "0x8DCD10")]
	public PortalInitialInside()
	{
	}
}
[Token(Token = "0x200008E")]
public class PortalSwitcher : MonoBehaviour
{
	[Token(Token = "0x4000310")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private List<GameObject> _outsideEnable;

	[Token(Token = "0x4000311")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private List<GameObject> _insideEnable;

	[Token(Token = "0x4000312")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private List<GameObject> _visibilityEnable;

	[Token(Token = "0x4000313")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private List<GameObject> _visibilityDisable;

	[Token(Token = "0x4000314")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private GameObject _portalObject;

	[Token(Token = "0x4000315")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private bool _usePhysicsLayerSwitch;

	[Token(Token = "0x4000316")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private TardisDoorCloser _closer;

	[Token(Token = "0x4000317")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool _portalDotVisible;

	[Token(Token = "0x4000318")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
	private bool _in;

	[Token(Token = "0x4000319")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private StencilBufferInitialise _initComponent;

	[Token(Token = "0x400031A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private MazeBodyPhysics _physics;

	[Token(Token = "0x400031B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string _tagBodyCollider;

	[Token(Token = "0x17000065")]
	public bool insidePortal
	{
		[Token(Token = "0x6000408")]
		[Address(RVA = "0x8DD0A8", Offset = "0x8DD0A8", VA = "0x8DD0A8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000066")]
	public GameObject PortalObject
	{
		[Token(Token = "0x6000409")]
		[Address(RVA = "0x8DCE14", Offset = "0x8DCE14", VA = "0x8DCE14")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600040A")]
	[Address(RVA = "0x8DD0B0", Offset = "0x8DD0B0", VA = "0x8DD0B0")]
	private void Start()
	{
	}

	[Token(Token = "0x600040B")]
	[Address(RVA = "0x8DD46C", Offset = "0x8DD46C", VA = "0x8DD46C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600040C")]
	[Address(RVA = "0x8DD4E0", Offset = "0x8DD4E0", VA = "0x8DD4E0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600040D")]
	[Address(RVA = "0x8DD554", Offset = "0x8DD554", VA = "0x8DD554")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600040E")]
	[Address(RVA = "0x8DD5A4", Offset = "0x8DD5A4", VA = "0x8DD5A4")]
	private void RemoveInitStencilBuffer()
	{
	}

	[Token(Token = "0x600040F")]
	[Address(RVA = "0x8DD670", Offset = "0x8DD670", VA = "0x8DD670")]
	public void Reset()
	{
	}

	[Token(Token = "0x6000410")]
	[Address(RVA = "0x8DD694", Offset = "0x8DD694", VA = "0x8DD694")]
	private void OnTeleported(Vector3 targetPoint)
	{
	}

	[Token(Token = "0x6000411")]
	[Address(RVA = "0x8DDEE4", Offset = "0x8DDEE4", VA = "0x8DDEE4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000412")]
	[Address(RVA = "0x8DE4E8", Offset = "0x8DE4E8", VA = "0x8DE4E8")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000413")]
	[Address(RVA = "0x8DE5E4", Offset = "0x8DE5E4", VA = "0x8DE5E4")]
	private void OnCollisionStay(Collision collision)
	{
	}

	[Token(Token = "0x6000414")]
	[Address(RVA = "0x8DE624", Offset = "0x8DE624", VA = "0x8DE624")]
	private void OnCollisionExit(Collision collision)
	{
	}

	[Token(Token = "0x6000415")]
	[Address(RVA = "0x8DE528", Offset = "0x8DE528", VA = "0x8DE528")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000416")]
	[Address(RVA = "0x8DE8C8", Offset = "0x8DE8C8", VA = "0x8DE8C8")]
	private void OnTriggerStay(Collider other)
	{
	}

	[Token(Token = "0x6000417")]
	[Address(RVA = "0x8DE664", Offset = "0x8DE664", VA = "0x8DE664")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000418")]
	[Address(RVA = "0x8DDAD0", Offset = "0x8DDAD0", VA = "0x8DDAD0")]
	private void SwitchToInside()
	{
	}

	[Token(Token = "0x6000419")]
	[Address(RVA = "0x8DD180", Offset = "0x8DD180", VA = "0x8DD180")]
	private void SwitchToOutside()
	{
	}

	[Token(Token = "0x600041A")]
	[Address(RVA = "0x8DE8CC", Offset = "0x8DE8CC", VA = "0x8DE8CC")]
	public PortalSwitcher()
	{
	}
}
[Token(Token = "0x200008F")]
public class PositionAtHeadset : MonoBehaviour
{
	[Token(Token = "0x400031C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private bool _setOrientation;

	[Token(Token = "0x400031D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private Vector3 _worldOffset;

	[Token(Token = "0x400031E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private bool _ignoreLeanOffset;

	[Token(Token = "0x400031F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private MazeBodyPhysics _physics;

	[Token(Token = "0x600041C")]
	[Address(RVA = "0x8DE938", Offset = "0x8DE938", VA = "0x8DE938")]
	private void Start()
	{
	}

	[Token(Token = "0x600041D")]
	[Address(RVA = "0x8DE9B4", Offset = "0x8DE9B4", VA = "0x8DE9B4")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600041E")]
	[Address(RVA = "0x8DEC94", Offset = "0x8DEC94", VA = "0x8DEC94")]
	public PositionAtHeadset()
	{
	}
}
[Token(Token = "0x2000090")]
public class RotationalTeleportEnabler : MonoBehaviour
{
	[Token(Token = "0x4000320")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private VRTK_ControllerEvents _controllerEvents;

	[Token(Token = "0x4000321")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private FlexibleTeleporter _teleport;

	[Token(Token = "0x4000322")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private List<GameObject> _teleportPositions;

	[Token(Token = "0x4000323")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private List<GameObject> _playerPositions;

	[Token(Token = "0x4000324")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int _stationIndex;

	[Token(Token = "0x4000325")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private int _needsSetActiveStation;

	[Token(Token = "0x4000326")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool _needsSetActive;

	[Token(Token = "0x4000327")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	private bool _rightPressed;

	[Token(Token = "0x4000328")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x42")]
	private bool _leftPressed;

	[Token(Token = "0x4000329")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x43")]
	private bool _prevLeftPressed;

	[Token(Token = "0x400032A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private bool _prevRightPressed;

	[Token(Token = "0x400032B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
	private bool _leftDown;

	[Token(Token = "0x400032C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x46")]
	private bool _rightDown;

	[Token(Token = "0x600041F")]
	[Address(RVA = "0x859514", Offset = "0x859514", VA = "0x859514")]
	private void Start()
	{
	}

	[Token(Token = "0x6000420")]
	[Address(RVA = "0x859874", Offset = "0x859874", VA = "0x859874")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000421")]
	[Address(RVA = "0x859904", Offset = "0x859904", VA = "0x859904")]
	private void TouchpadAxisChanged(object sender, ControllerInteractionEventArgs e)
	{
	}

	[Token(Token = "0x6000422")]
	[Address(RVA = "0x859714", Offset = "0x859714", VA = "0x859714")]
	private void RefreshTeleporter()
	{
	}

	[Token(Token = "0x6000423")]
	[Address(RVA = "0x859988", Offset = "0x859988", VA = "0x859988")]
	private void Update()
	{
	}

	[Token(Token = "0x6000424")]
	[Address(RVA = "0x8595B8", Offset = "0x8595B8", VA = "0x8595B8")]
	private void SetActiveStation(int idx)
	{
	}

	[Token(Token = "0x6000425")]
	[Address(RVA = "0x859D8C", Offset = "0x859D8C", VA = "0x859D8C")]
	public void ActivateClosestStation(Vector3 currentPosition, ref Vector3 position, ref Quaternion rotation)
	{
	}

	[Token(Token = "0x6000426")]
	[Address(RVA = "0x85A090", Offset = "0x85A090", VA = "0x85A090")]
	private void Teleported(object sender, DestinationMarkerEventArgs e)
	{
	}

	[Token(Token = "0x6000427")]
	[Address(RVA = "0x85A424", Offset = "0x85A424", VA = "0x85A424")]
	public RotationalTeleportEnabler()
	{
	}
}
[Token(Token = "0x2000091")]
public class SwitchHandAliases : MonoBehaviour
{
	[Token(Token = "0x2000560")]
	private enum ControllerType
	{
		[Token(Token = "0x400248C")]
		PS4DS4,
		[Token(Token = "0x400248D")]
		PS4Move,
		[Token(Token = "0x400248E")]
		OculusTouch,
		[Token(Token = "0x400248F")]
		ViveWand
	}

	[Serializable]
	[Token(Token = "0x2000561")]
	public class HandConfiguration
	{
		[Token(Token = "0x4002490")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		public string _name;

		[Token(Token = "0x4002491")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		[SerializeField]
		public KeyCode _keyCode;

		[Token(Token = "0x4002492")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		public GameObject _left;

		[Token(Token = "0x4002493")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		public GameObject _right;

		[Token(Token = "0x4002494")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		public bool _defaultOnPSVRDualShock4;

		[Token(Token = "0x4002495")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		[SerializeField]
		public bool _defaultOnPSVRMove;

		[Token(Token = "0x4002496")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
		[SerializeField]
		public bool _defaultOnViveWand;

		[Token(Token = "0x4002497")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x33")]
		[SerializeField]
		public bool _defaultOnViveCosmos;

		[Token(Token = "0x4002498")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		public bool _defaultOnOculusTouch;

		[Token(Token = "0x4002499")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
		[SerializeField]
		public bool _default;

		[Token(Token = "0x400249A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x36")]
		[SerializeField]
		public bool _enableOnPSVR;

		[Token(Token = "0x400249B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x37")]
		[SerializeField]
		public bool _enableOnWindows;

		[Token(Token = "0x60029A8")]
		[Address(RVA = "0x885AD0", Offset = "0x885AD0", VA = "0x885AD0")]
		public void Enable()
		{
		}

		[Token(Token = "0x60029A9")]
		[Address(RVA = "0x885724", Offset = "0x885724", VA = "0x885724")]
		public void Disable()
		{
		}

		[Token(Token = "0x60029AA")]
		[Address(RVA = "0x886664", Offset = "0x886664", VA = "0x886664")]
		public HandConfiguration()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000562")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x643E68", Offset = "0x643E68")]
	private sealed class <>c
	{
		[Token(Token = "0x400249C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x400249D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Predicate<HandConfiguration> <>9__24_0;

		[Token(Token = "0x400249E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Predicate<HandConfiguration> <>9__24_1;

		[Token(Token = "0x400249F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static Predicate<HandConfiguration> <>9__24_2;

		[Token(Token = "0x40024A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static Predicate<HandConfiguration> <>9__29_0;

		[Token(Token = "0x40024A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static Predicate<HandConfiguration> <>9__29_1;

		[Token(Token = "0x60029AC")]
		[Address(RVA = "0x8863B8", Offset = "0x8863B8", VA = "0x8863B8")]
		public <>c()
		{
		}

		[Token(Token = "0x60029AD")]
		[Address(RVA = "0x8863C0", Offset = "0x8863C0", VA = "0x8863C0")]
		internal bool <SetupController>b__24_0(HandConfiguration config)
		{
			return default(bool);
		}

		[Token(Token = "0x60029AE")]
		[Address(RVA = "0x8863EC", Offset = "0x8863EC", VA = "0x8863EC")]
		internal bool <SetupController>b__24_1(HandConfiguration config)
		{
			return default(bool);
		}

		[Token(Token = "0x60029AF")]
		[Address(RVA = "0x886418", Offset = "0x886418", VA = "0x886418")]
		internal bool <SetupController>b__24_2(HandConfiguration config)
		{
			return default(bool);
		}

		[Token(Token = "0x60029B0")]
		[Address(RVA = "0x886444", Offset = "0x886444", VA = "0x886444")]
		internal bool <OnHardwareChanged>b__29_0(HandConfiguration config)
		{
			return default(bool);
		}

		[Token(Token = "0x60029B1")]
		[Address(RVA = "0x886470", Offset = "0x886470", VA = "0x886470")]
		internal bool <OnHardwareChanged>b__29_1(HandConfiguration config)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x2000563")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x643E78", Offset = "0x643E78")]
	private sealed class <EnableHandlers>d__28 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40024A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40024A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40024A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MazeBodyPhysics phy;

		[Token(Token = "0x1700022F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60029B5")]
			[Address(RVA = "0x8865EC", Offset = "0x8865EC", VA = "0x8865EC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000230")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60029B7")]
			[Address(RVA = "0x88665C", Offset = "0x88665C", VA = "0x88665C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60029B2")]
		[Address(RVA = "0x885D74", Offset = "0x885D74", VA = "0x885D74")]
		[DebuggerHidden]
		public <EnableHandlers>d__28(int <>1__state)
		{
		}

		[Token(Token = "0x60029B3")]
		[Address(RVA = "0x88649C", Offset = "0x88649C", VA = "0x88649C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60029B4")]
		[Address(RVA = "0x8864A0", Offset = "0x8864A0", VA = "0x8864A0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60029B6")]
		[Address(RVA = "0x8865F4", Offset = "0x8865F4", VA = "0x8865F4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400032D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static SwitchHandAliases _instance;

	[Token(Token = "0x400032E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private List<HandConfiguration> _config;

	[Token(Token = "0x400032F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private int _overrideUIIndex;

	[Token(Token = "0x4000330")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int _currentIndex;

	[Token(Token = "0x4000331")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private HandConfiguration _current;

	[Token(Token = "0x4000332")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private HandConfiguration _currentOverride;

	[Token(Token = "0x4000333")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int _currentOverrideIndex;

	[Token(Token = "0x4000334")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private bool _movementEnable;

	[Token(Token = "0x4000335")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
	private bool _turnEnable;

	[Token(Token = "0x4000336")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private SDK_BaseController.ControllerType _currentControllerType;

	[Token(Token = "0x17000067")]
	public bool movementEnable
	{
		[Token(Token = "0x6000429")]
		[Address(RVA = "0x884AA8", Offset = "0x884AA8", VA = "0x884AA8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000068")]
	public bool turnEnable
	{
		[Token(Token = "0x600042A")]
		[Address(RVA = "0x884AB0", Offset = "0x884AB0", VA = "0x884AB0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000069")]
	public static SwitchHandAliases instance
	{
		[Token(Token = "0x600042B")]
		[Address(RVA = "0x884AB8", Offset = "0x884AB8", VA = "0x884AB8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700006A")]
	public ControlStrings controlStrings
	{
		[Token(Token = "0x600042C")]
		[Address(RVA = "0x884B08", Offset = "0x884B08", VA = "0x884B08")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000428")]
	[Address(RVA = "0x884A7C", Offset = "0x884A7C", VA = "0x884A7C")]
	public bool IsDS4()
	{
		return default(bool);
	}

	[Token(Token = "0x600042D")]
	[Address(RVA = "0x884CA8", Offset = "0x884CA8", VA = "0x884CA8")]
	private void Awake()
	{
	}

	[Token(Token = "0x600042E")]
	[Address(RVA = "0x884D40", Offset = "0x884D40", VA = "0x884D40")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600042F")]
	[Address(RVA = "0x884DC0", Offset = "0x884DC0", VA = "0x884DC0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000430")]
	[Address(RVA = "0x8853E8", Offset = "0x8853E8", VA = "0x8853E8")]
	private void SetupController()
	{
	}

	[Token(Token = "0x6000431")]
	[Address(RVA = "0x88565C", Offset = "0x88565C", VA = "0x88565C")]
	public void SetUIOverride()
	{
	}

	[Token(Token = "0x6000432")]
	[Address(RVA = "0x8856DC", Offset = "0x8856DC", VA = "0x8856DC")]
	public void ClearOverride()
	{
	}

	[Token(Token = "0x6000433")]
	[Address(RVA = "0x885088", Offset = "0x885088", VA = "0x885088")]
	private void SetCurrent(HandConfiguration current, bool isOverride = false)
	{
	}

	[Token(Token = "0x6000434")]
	[Address(RVA = "0x885D00", Offset = "0x885D00", VA = "0x885D00")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x666C74", Offset = "0x666C74")]
	private IEnumerator EnableHandlers(MazeBodyPhysics phy)
	{
		return null;
	}

	[Token(Token = "0x6000435")]
	[Address(RVA = "0x885DA0", Offset = "0x885DA0", VA = "0x885DA0")]
	private void OnHardwareChanged(SDK_PlayStationVRInput.PSControllerType type)
	{
	}

	[Token(Token = "0x6000436")]
	[Address(RVA = "0x886054", Offset = "0x886054", VA = "0x886054")]
	private void Update()
	{
	}

	[Token(Token = "0x6000437")]
	private void EnableComponentsOfType<T>(Transform a, Transform b, bool en) where T : MonoBehaviour
	{
	}

	[Token(Token = "0x6000438")]
	[Address(RVA = "0x8857EC", Offset = "0x8857EC", VA = "0x8857EC")]
	public void SetMovementEnable(bool movementEnable, bool turnEnable)
	{
	}

	[Token(Token = "0x6000439")]
	[Address(RVA = "0x8861A8", Offset = "0x8861A8", VA = "0x8861A8")]
	public SwitchHandAliases()
	{
	}

	[Token(Token = "0x600043A")]
	[Address(RVA = "0x8861C0", Offset = "0x8861C0", VA = "0x8861C0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x666CD8", Offset = "0x666CD8")]
	private void <OnEnable>b__23_0(bool clicked, out string name, out string value)
	{
	}
}
[Token(Token = "0x2000092")]
public class TimeZoneRoot : MonoBehaviour
{
	[Token(Token = "0x4000337")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x64A2CC", Offset = "0x64A2CC")]
	[SerializeField]
	private Transform _locationReference;

	[Token(Token = "0x4000338")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private List<GameObject> _rootObjectList;

	[Token(Token = "0x4000339")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private KeyCode _debugKey;

	[Token(Token = "0x400033A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private bool _initiallyActive;

	[Token(Token = "0x400033B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static TimeZoneRoot _currentTimeZone;

	[Token(Token = "0x400033C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static List<TimeZoneRoot> _zones;

	[Token(Token = "0x600043B")]
	[Address(RVA = "0x887A34", Offset = "0x887A34", VA = "0x887A34")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x600043C")]
	[Address(RVA = "0x887C88", Offset = "0x887C88", VA = "0x887C88")]
	public void SetActiveZone(TimeZoneRoot zoneRoot)
	{
	}

	[Token(Token = "0x600043D")]
	[Address(RVA = "0x887FCC", Offset = "0x887FCC", VA = "0x887FCC")]
	public void OnDestroy()
	{
	}

	[Token(Token = "0x600043E")]
	[Address(RVA = "0x888058", Offset = "0x888058", VA = "0x888058")]
	public static void TeleportToZone(string name)
	{
	}

	[Token(Token = "0x600043F")]
	[Address(RVA = "0x888288", Offset = "0x888288", VA = "0x888288")]
	public void Teleport()
	{
	}

	[Token(Token = "0x6000440")]
	[Address(RVA = "0x88843C", Offset = "0x88843C", VA = "0x88843C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000441")]
	[Address(RVA = "0x888440", Offset = "0x888440", VA = "0x888440")]
	public TimeZoneRoot()
	{
	}
}
[Token(Token = "0x2000093")]
public class WalkSpeedModifier : MonoBehaviour
{
	[Token(Token = "0x400033D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static WalkSpeedModifier _instance;

	[Token(Token = "0x400033E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static float _settingsMultiplier;

	[Token(Token = "0x400033F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private MazeSlideObjectControlAction _yAxisWalkControl;

	[Token(Token = "0x4000340")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private MazeSlideObjectControlAction _xAxisWalkControl;

	[Token(Token = "0x4000341")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float _speedForward;

	[Token(Token = "0x4000342")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private float _speedBackward;

	[Token(Token = "0x4000343")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private float _speedStrafe;

	[Token(Token = "0x4000344")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private List<WalkSpeedZone> _currentZone;

	[Token(Token = "0x1700006B")]
	public static WalkSpeedModifier instance
	{
		[Token(Token = "0x6000443")]
		[Address(RVA = "0x80DAB8", Offset = "0x80DAB8", VA = "0x80DAB8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700006C")]
	public static float settingsMultiplier
	{
		[Token(Token = "0x6000446")]
		[Address(RVA = "0x80DFA8", Offset = "0x80DFA8", VA = "0x80DFA8")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000447")]
		[Address(RVA = "0x80E010", Offset = "0x80E010", VA = "0x80E010")]
		set
		{
		}
	}

	[Token(Token = "0x6000444")]
	[Address(RVA = "0x80DB20", Offset = "0x80DB20", VA = "0x80DB20")]
	public void Push(WalkSpeedZone zone)
	{
	}

	[Token(Token = "0x6000445")]
	[Address(RVA = "0x80DF30", Offset = "0x80DF30", VA = "0x80DF30")]
	public void Pop(WalkSpeedZone zone)
	{
	}

	[Token(Token = "0x6000448")]
	[Address(RVA = "0x80E084", Offset = "0x80E084", VA = "0x80E084")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000449")]
	[Address(RVA = "0x80E0F4", Offset = "0x80E0F4", VA = "0x80E0F4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600044A")]
	[Address(RVA = "0x80DB98", Offset = "0x80DB98", VA = "0x80DB98")]
	public void SetWalkSpeeds()
	{
	}

	[Token(Token = "0x600044B")]
	[Address(RVA = "0x80E1DC", Offset = "0x80E1DC", VA = "0x80E1DC")]
	public WalkSpeedModifier()
	{
	}
}
[Token(Token = "0x2000094")]
public class WalkSpeedZone : MonoBehaviour
{
	[Token(Token = "0x4000345")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private bool _useFixedSpeed;

	[Token(Token = "0x4000346")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float _fixedSpeed;

	[Token(Token = "0x4000347")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float _speedMultiplier;

	[Token(Token = "0x1700006D")]
	public bool useFixedSpeed
	{
		[Token(Token = "0x600044D")]
		[Address(RVA = "0x80E1C4", Offset = "0x80E1C4", VA = "0x80E1C4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700006E")]
	public float fixedSpeed
	{
		[Token(Token = "0x600044E")]
		[Address(RVA = "0x80E1CC", Offset = "0x80E1CC", VA = "0x80E1CC")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700006F")]
	public float speedMultiplier
	{
		[Token(Token = "0x600044F")]
		[Address(RVA = "0x80E1D4", Offset = "0x80E1D4", VA = "0x80E1D4")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x6000450")]
	[Address(RVA = "0x80E2C4", Offset = "0x80E2C4", VA = "0x80E2C4")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000451")]
	[Address(RVA = "0x80E404", Offset = "0x80E404", VA = "0x80E404")]
	private void OnCollisionExit(Collision collision)
	{
	}

	[Token(Token = "0x6000452")]
	[Address(RVA = "0x80E544", Offset = "0x80E544", VA = "0x80E544")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000453")]
	[Address(RVA = "0x80E684", Offset = "0x80E684", VA = "0x80E684")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000454")]
	[Address(RVA = "0x80E7C4", Offset = "0x80E7C4", VA = "0x80E7C4")]
	public WalkSpeedZone()
	{
	}
}
[Token(Token = "0x2000095")]
public class GlobalsManager : MonoBehaviour
{
	[Token(Token = "0x4000348")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject entitlementMessage;

	[Token(Token = "0x4000349")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public QuestOnScreenLog onScreenLog;

	[Token(Token = "0x400034A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public LoadCommonScene loader;

	[Token(Token = "0x400034B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static GlobalsManager _instance;

	[Token(Token = "0x400034C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static bool creatingInstance;

	[Token(Token = "0x400034D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int _lastSaveVersion;

	[Token(Token = "0x400034E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	public SaveManager _saveManager;

	[Token(Token = "0x400034F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public VRInteractionSettings _vrInteractionSettings;

	[Token(Token = "0x17000070")]
	public SaveManager saveManager
	{
		[Token(Token = "0x600045C")]
		[Address(RVA = "0x83E528", Offset = "0x83E528", VA = "0x83E528")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000455")]
	[Address(RVA = "0x83F878", Offset = "0x83F878", VA = "0x83F878")]
	private static QuestOnScreenLog GetOnScreenLog()
	{
		return null;
	}

	[Token(Token = "0x6000456")]
	[Address(RVA = "0x83E1F8", Offset = "0x83E1F8", VA = "0x83E1F8")]
	public static GlobalsManager GetInstance()
	{
		return null;
	}

	[Token(Token = "0x6000457")]
	[Address(RVA = "0x83F8F0", Offset = "0x83F8F0", VA = "0x83F8F0")]
	private void Init()
	{
	}

	[Token(Token = "0x6000458")]
	[Address(RVA = "0x83FED8", Offset = "0x83FED8", VA = "0x83FED8")]
	public static void Quit()
	{
	}

	[Token(Token = "0x6000459")]
	[Address(RVA = "0x83FCD4", Offset = "0x83FCD4", VA = "0x83FCD4")]
	private void SetupSaveManager()
	{
	}

	[Token(Token = "0x600045A")]
	[Address(RVA = "0x83FEE0", Offset = "0x83FEE0", VA = "0x83FEE0")]
	private void Update()
	{
	}

	[Token(Token = "0x600045B")]
	[Address(RVA = "0x83FEE4", Offset = "0x83FEE4", VA = "0x83FEE4")]
	private void Awake()
	{
	}

	[Token(Token = "0x600045D")]
	[Address(RVA = "0x840188", Offset = "0x840188", VA = "0x840188")]
	public GlobalsManager()
	{
	}
}
[Token(Token = "0x2000096")]
public class HiddenObjectManager : MonoBehaviour
{
	[Token(Token = "0x4000350")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject _hiddenObjectPrefab;

	[Token(Token = "0x4000351")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public HiddenObject[] _hiddenObjects;

	[Token(Token = "0x600045F")]
	[Address(RVA = "0x845B30", Offset = "0x845B30", VA = "0x845B30")]
	private void Start()
	{
	}

	[Token(Token = "0x6000460")]
	[Address(RVA = "0x845EB4", Offset = "0x845EB4", VA = "0x845EB4")]
	public void FinishedCallback(GameObject gameObject)
	{
	}

	[Token(Token = "0x6000461")]
	[Address(RVA = "0x845FEC", Offset = "0x845FEC", VA = "0x845FEC")]
	public HiddenObjectManager()
	{
	}
}
[Serializable]
[Token(Token = "0x2000097")]
public struct HiddenObject
{
	[Token(Token = "0x4000352")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Mesh _mesh;

	[Token(Token = "0x4000353")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public Transform _transform;

	[Token(Token = "0x4000354")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string _name;

	[Token(Token = "0x4000355")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private GameObject _gameObject;

	[Token(Token = "0x6000462")]
	[Address(RVA = "0x6DE530", Offset = "0x6DE530", VA = "0x6DE530")]
	public void SetGameObject(GameObject gameObject)
	{
	}

	[Token(Token = "0x6000463")]
	[Address(RVA = "0x6DE538", Offset = "0x6DE538", VA = "0x6DE538")]
	public GameObject GetGameObject()
	{
		return null;
	}
}
[Token(Token = "0x2000098")]
public class PauseMenuManager : MonoBehaviour
{
	[Token(Token = "0x2000564")]
	public delegate void SettingsClosedCallback();

	[Token(Token = "0x4000356")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private VRTK_TransformFollow _followComponent;

	[Token(Token = "0x4000357")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject m_pauseMenuStage;

	[Token(Token = "0x4000358")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int _blockPauseMenu;

	[Token(Token = "0x4000359")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private bool _returnToMainMenu;

	[Token(Token = "0x400035A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private SettingsClosedCallback _settingsClosedCallback;

	[Token(Token = "0x400035B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool _paused;

	[Token(Token = "0x400035C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static float m_prePauseVolume;

	[Token(Token = "0x400035D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool _steamVRSubscribed;

	[Token(Token = "0x400035E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	private bool _steamVRFocus;

	[Token(Token = "0x400035F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
	private bool _needsHolsterDisable;

	[Token(Token = "0x4000360")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3B")]
	private bool _showOverlay;

	[Token(Token = "0x4000361")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private bool _oculusFocus;

	[Token(Token = "0x4000362")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
	private bool _oculusResumed;

	[Token(Token = "0x4000363")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3E")]
	private bool LASTPICOFOCUS;

	[Token(Token = "0x4000364")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3 _pausePlayerPosition;

	[Token(Token = "0x4000365")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private int _restoreCount;

	[Token(Token = "0x4000366")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private GameObject saveGrabLeft;

	[Token(Token = "0x4000367")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private GameObject saveGrabRight;

	[Token(Token = "0x4000368")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private VRTK_ControllerEvents controllerEvents;

	[Token(Token = "0x4000369")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public CanvasGroup _backgroundCanvasGroup;

	[Token(Token = "0x400036A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public CanvasGroup MenuCanvasGroup;

	[Token(Token = "0x400036B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public CanvasGroup SettingsCanvasGroup;

	[Token(Token = "0x400036C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject childGameObject;

	[Token(Token = "0x400036D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private CanvasGroup currentMenu;

	[Token(Token = "0x400036E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private GameObject _leftHand;

	[Token(Token = "0x400036F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private bool _controllerEventAssignedLeft;

	[Token(Token = "0x4000370")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static bool _menuOnScreen;

	[Token(Token = "0x4000371")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private int _previousHandIndex;

	[Token(Token = "0x17000071")]
	public bool enablePauseMenuKey
	{
		[Token(Token = "0x6000464")]
		[Address(RVA = "0x8009E0", Offset = "0x8009E0", VA = "0x8009E0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000465")]
		[Address(RVA = "0x7EB0FC", Offset = "0x7EB0FC", VA = "0x7EB0FC")]
		set
		{
		}
	}

	[Token(Token = "0x17000072")]
	public static bool isPaused
	{
		[Token(Token = "0x600047B")]
		[Address(RVA = "0x802EDC", Offset = "0x802EDC", VA = "0x802EDC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000466")]
	[Address(RVA = "0x800D10", Offset = "0x800D10", VA = "0x800D10")]
	private void OculusFocusLost()
	{
	}

	[Token(Token = "0x6000467")]
	[Address(RVA = "0x800D88", Offset = "0x800D88", VA = "0x800D88")]
	private void OculusFocusAcquired()
	{
	}

	[Token(Token = "0x6000468")]
	[Address(RVA = "0x800E0C", Offset = "0x800E0C", VA = "0x800E0C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000469")]
	[Address(RVA = "0x800FA4", Offset = "0x800FA4", VA = "0x800FA4")]
	public void OnInputFocus(bool focused)
	{
	}

	[Token(Token = "0x600046A")]
	[Address(RVA = "0x800FB0", Offset = "0x800FB0", VA = "0x800FB0")]
	private void Update()
	{
	}

	[Token(Token = "0x600046B")]
	[Address(RVA = "0x80200C", Offset = "0x80200C", VA = "0x80200C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600046C")]
	[Address(RVA = "0x8020E4", Offset = "0x8020E4", VA = "0x8020E4")]
	private void StartReleased(object sender, ControllerInteractionEventArgs e)
	{
	}

	[Token(Token = "0x600046D")]
	[Address(RVA = "0x802320", Offset = "0x802320", VA = "0x802320")]
	private void ResetGrab()
	{
	}

	[Token(Token = "0x600046E")]
	[Address(RVA = "0x801A1C", Offset = "0x801A1C", VA = "0x801A1C")]
	public void ShowPauseMenu(bool pause = true, bool showOverlay = true)
	{
	}

	[Token(Token = "0x600046F")]
	[Address(RVA = "0x8009F0", Offset = "0x8009F0", VA = "0x8009F0")]
	public void HidePauseMenu(bool unpause = true)
	{
	}

	[Token(Token = "0x6000470")]
	[Address(RVA = "0x80254C", Offset = "0x80254C", VA = "0x80254C")]
	public static void PauseGame()
	{
	}

	[Token(Token = "0x6000471")]
	[Address(RVA = "0x7EB198", Offset = "0x7EB198", VA = "0x7EB198")]
	public static void UnPauseGame()
	{
	}

	[Token(Token = "0x6000472")]
	[Address(RVA = "0x8026A8", Offset = "0x8026A8", VA = "0x8026A8")]
	public void ResumeGame()
	{
	}

	[Token(Token = "0x6000473")]
	[Address(RVA = "0x8027C4", Offset = "0x8027C4", VA = "0x8027C4")]
	private void TogglePauseObjects(bool set)
	{
	}

	[Token(Token = "0x6000474")]
	[Address(RVA = "0x80292C", Offset = "0x80292C", VA = "0x80292C")]
	public void SettingsButton()
	{
	}

	[Token(Token = "0x6000475")]
	[Address(RVA = "0x7F628C", Offset = "0x7F628C", VA = "0x7F628C")]
	public void ShowStaticSettingsMenu(Transform location, SettingsClosedCallback callback)
	{
	}

	[Token(Token = "0x6000476")]
	[Address(RVA = "0x802A40", Offset = "0x802A40", VA = "0x802A40")]
	public static void SetLayerRecursively(GameObject go, int layerNumber)
	{
	}

	[Token(Token = "0x6000477")]
	[Address(RVA = "0x802B30", Offset = "0x802B30", VA = "0x802B30")]
	public void BackToMainMenu()
	{
	}

	[Token(Token = "0x6000478")]
	[Address(RVA = "0x802228", Offset = "0x802228", VA = "0x802228")]
	public void SaveSettings()
	{
	}

	[Token(Token = "0x6000479")]
	[Address(RVA = "0x802DD0", Offset = "0x802DD0", VA = "0x802DD0")]
	public void QuitToMainMenu()
	{
	}

	[Token(Token = "0x600047A")]
	[Address(RVA = "0x802DD4", Offset = "0x802DD4", VA = "0x802DD4")]
	private void ProcessQuit()
	{
	}

	[Token(Token = "0x600047C")]
	[Address(RVA = "0x802F44", Offset = "0x802F44", VA = "0x802F44")]
	public PauseMenuManager()
	{
	}
}
[Token(Token = "0x2000099")]
public class SaveManager : MonoBehaviour
{
	[Token(Token = "0x2000565")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x643E88", Offset = "0x643E88")]
	private sealed class <InitialiseAfterDelay>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40024A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40024A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40024A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SaveManager <>4__this;

		[Token(Token = "0x17000231")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60029BF")]
			[Address(RVA = "0x860138", Offset = "0x860138", VA = "0x860138", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000232")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60029C1")]
			[Address(RVA = "0x8601A8", Offset = "0x8601A8", VA = "0x8601A8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60029BC")]
		[Address(RVA = "0x85F180", Offset = "0x85F180", VA = "0x85F180")]
		[DebuggerHidden]
		public <InitialiseAfterDelay>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x60029BD")]
		[Address(RVA = "0x860020", Offset = "0x860020", VA = "0x860020", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60029BE")]
		[Address(RVA = "0x860024", Offset = "0x860024", VA = "0x860024", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60029C0")]
		[Address(RVA = "0x860140", Offset = "0x860140", VA = "0x860140", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000566")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x643E98", Offset = "0x643E98")]
	private sealed class <>c
	{
		[Token(Token = "0x40024A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x40024A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static SaveGame.SaveCompleteDelegate <>9__6_0;

		[Token(Token = "0x60029C3")]
		[Address(RVA = "0x85FFAC", Offset = "0x85FFAC", VA = "0x85FFAC")]
		public <>c()
		{
		}

		[Token(Token = "0x60029C4")]
		[Address(RVA = "0x85FFB4", Offset = "0x85FFB4", VA = "0x85FFB4")]
		internal void <SaveData>b__6_0(uint <p0>)
		{
		}
	}

	[Token(Token = "0x4000372")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64A3F8", Offset = "0x64A3F8")]
	[SerializeField]
	private List<string> _debugUnlockAllFeatureList;

	[Token(Token = "0x4000373")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private WhoSaveData _whoSaveData;

	[Token(Token = "0x4000374")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private BinaryFormatter _sharedBinaryFormatter;

	[Token(Token = "0x4000375")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int _saveVersion;

	[Token(Token = "0x4000376")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private bool _initialised;

	[Token(Token = "0x600047E")]
	[Address(RVA = "0x85F0E0", Offset = "0x85F0E0", VA = "0x85F0E0")]
	public void Start()
	{
	}

	[Token(Token = "0x600047F")]
	[Address(RVA = "0x85F10C", Offset = "0x85F10C", VA = "0x85F10C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x666CE8", Offset = "0x666CE8")]
	private IEnumerator InitialiseAfterDelay()
	{
		return null;
	}

	[Token(Token = "0x6000480")]
	[Address(RVA = "0x85F1AC", Offset = "0x85F1AC", VA = "0x85F1AC")]
	public void Initialise()
	{
	}

	[Token(Token = "0x6000481")]
	[Address(RVA = "0x85F370", Offset = "0x85F370", VA = "0x85F370")]
	public void UnlockAllFeatures()
	{
	}

	[Token(Token = "0x6000482")]
	[Address(RVA = "0x85F680", Offset = "0x85F680", VA = "0x85F680")]
	public void ClearSaveData()
	{
	}

	[Token(Token = "0x6000483")]
	[Address(RVA = "0x85F55C", Offset = "0x85F55C", VA = "0x85F55C")]
	public void SaveData()
	{
	}

	[Token(Token = "0x6000484")]
	[Address(RVA = "0x85F6E4", Offset = "0x85F6E4", VA = "0x85F6E4")]
	public void SetSaveState(SaveState state)
	{
	}

	[Token(Token = "0x6000485")]
	[Address(RVA = "0x85F71C", Offset = "0x85F71C", VA = "0x85F71C")]
	public SaveState GetSaveState()
	{
		return null;
	}

	[Token(Token = "0x6000486")]
	[Address(RVA = "0x85F758", Offset = "0x85F758", VA = "0x85F758")]
	public bool IsHiddenObjectFound(string hiddenObjectName)
	{
		return default(bool);
	}

	[Token(Token = "0x6000487")]
	[Address(RVA = "0x85F8C8", Offset = "0x85F8C8", VA = "0x85F8C8")]
	public void FindHiddenObject(string hiddenObjectName, bool autoSave = false)
	{
	}

	[Token(Token = "0x6000488")]
	[Address(RVA = "0x85F9D4", Offset = "0x85F9D4", VA = "0x85F9D4")]
	public int GetSetttingsOption(string optionName, int defaultOption = -1)
	{
		return default(int);
	}

	[Token(Token = "0x6000489")]
	[Address(RVA = "0x85FB44", Offset = "0x85FB44", VA = "0x85FB44")]
	public void SetSettingsOption(string optionName, int optionValue, bool autoSave = false)
	{
	}

	[Token(Token = "0x600048A")]
	[Address(RVA = "0x85F490", Offset = "0x85F490", VA = "0x85F490")]
	public void UnlockFeature(string featureName)
	{
	}

	[Token(Token = "0x600048B")]
	[Address(RVA = "0x85FD48", Offset = "0x85FD48", VA = "0x85FD48")]
	public bool IsFeatureUnlocked(string featureName)
	{
		return default(bool);
	}

	[Token(Token = "0x600048C")]
	[Address(RVA = "0x85FDC8", Offset = "0x85FDC8", VA = "0x85FDC8")]
	public int GetSaveVersion()
	{
		return default(int);
	}

	[Token(Token = "0x600048D")]
	[Address(RVA = "0x85FDD0", Offset = "0x85FDD0", VA = "0x85FDD0")]
	public SaveManager()
	{
	}

	[Token(Token = "0x600048E")]
	[Address(RVA = "0x85FE38", Offset = "0x85FE38", VA = "0x85FE38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x666D4C", Offset = "0x666D4C")]
	private void <Initialise>b__3_0(bool clicked, out string name, out string value)
	{
	}

	[Token(Token = "0x600048F")]
	[Address(RVA = "0x85FEC0", Offset = "0x85FEC0", VA = "0x85FEC0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x666D5C", Offset = "0x666D5C")]
	private void <Initialise>b__3_1(bool clicked, out string name, out string value)
	{
	}
}
[Serializable]
[Token(Token = "0x200009A")]
public class WhoSaveData
{
	[Token(Token = "0x4000377")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public List<FoundHiddenObject> _foundObjects;

	[Token(Token = "0x4000378")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<SettingsOption> _settings;

	[Token(Token = "0x4000379")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<string> _unlockedFeature;

	[Token(Token = "0x400037A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SaveState _saveState;

	[Token(Token = "0x6000490")]
	[Address(RVA = "0x80FD7C", Offset = "0x80FD7C", VA = "0x80FD7C")]
	public WhoSaveData()
	{
	}
}
[Serializable]
[Token(Token = "0x200009B")]
public class FoundHiddenObject
{
	[Token(Token = "0x400037B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int _foundOrder;

	[Token(Token = "0x400037C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string _name;

	[Token(Token = "0x6000491")]
	[Address(RVA = "0x83B480", Offset = "0x83B480", VA = "0x83B480")]
	public FoundHiddenObject()
	{
	}
}
[Serializable]
[Token(Token = "0x200009C")]
public class SettingsOption
{
	[Token(Token = "0x400037D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int _settingsValue;

	[Token(Token = "0x400037E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string _name;

	[Token(Token = "0x6000492")]
	[Address(RVA = "0x85FD40", Offset = "0x85FD40", VA = "0x85FD40")]
	public SettingsOption()
	{
	}
}
[Serializable]
[Token(Token = "0x200009D")]
public struct VRInteractionSettings
{
	[Serializable]
	[Token(Token = "0x2000567")]
	public struct InteractionTypeDef
	{
		[Token(Token = "0x40024AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		public bool _enable;

		[Token(Token = "0x40024AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		[SerializeField]
		public Color _max;

		[Token(Token = "0x40024AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		public Color _min;

		[Token(Token = "0x40024AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		public bool _customCurve;

		[Token(Token = "0x40024AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		public AnimationCurve _pulseAnimationCurve;

		[Token(Token = "0x40024AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		public float _pulseAnimationCurveLength;
	}

	[Token(Token = "0x400037F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[SerializeField]
	public float _fadeInTime;

	[Token(Token = "0x4000380")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	[SerializeField]
	public float _fadeOutTime;

	[Token(Token = "0x4000381")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	[SerializeField]
	public AnimationCurve _pulseAnimationCurve;

	[Token(Token = "0x4000382")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	public float _pulseAnimationCurveLength;

	[Token(Token = "0x4000383")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public InteractionTypeDef _nearTouch;

	[Token(Token = "0x4000384")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	public InteractionTypeDef _touch;

	[Token(Token = "0x4000385")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	public InteractionTypeDef _grab;

	[Token(Token = "0x4000386")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[SerializeField]
	public InteractionTypeDef _pickedUp;

	[Token(Token = "0x4000387")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	[SerializeField]
	public InteractionTypeDef _use;

	[Token(Token = "0x4000388")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	[SerializeField]
	public InteractionTypeDef _pointer;

	[Token(Token = "0x4000389")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	[SerializeField]
	public float _customHighlightLowerThreshhold;

	[Token(Token = "0x400038A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
	[SerializeField]
	public float _customHightlightUpperThreshhold;
}
[Token(Token = "0x200009E")]
public class AngelsGame : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000568")]
	private struct SectionDef
	{
		[Token(Token = "0x40024B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		public GameObject _sectionEnable;

		[Token(Token = "0x40024B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x66437C", Offset = "0x66437C")]
		[SerializeField]
		public PlayableDirector _liftActivateDelayStart;

		[Token(Token = "0x40024B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6643C8", Offset = "0x6643C8")]
		[SerializeField]
		public PlayableDirector _liftActivateDelayComplete;

		[Token(Token = "0x40024B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public PlayableDirector _sectionComplete;

		[Token(Token = "0x40024B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		public float _switchResetTime;

		[Token(Token = "0x40024B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		public float _dischargeRate;
	}

	[Serializable]
	[Token(Token = "0x2000569")]
	private struct AngelPathDef
	{
		[Token(Token = "0x40024B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		public PlayableDirector _hintTimeline;

		[Token(Token = "0x40024B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[SerializeField]
		public WeepingAngel _weepingAngel;
	}

	[Token(Token = "0x200056A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x643EA8", Offset = "0x643EA8")]
	private sealed class <ResetSwitchAfterDelay>d__51 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40024B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40024B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40024BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AngelsGame <>4__this;

		[Token(Token = "0x40024BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float delay;

		[Token(Token = "0x40024BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <time>5__2;

		[Token(Token = "0x17000233")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60029C8")]
			[Address(RVA = "0x8BA194", Offset = "0x8BA194", VA = "0x8BA194", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000234")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60029CA")]
			[Address(RVA = "0x8BA204", Offset = "0x8BA204", VA = "0x8BA204", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60029C5")]
		[Address(RVA = "0x8B7B24", Offset = "0x8B7B24", VA = "0x8B7B24")]
		[DebuggerHidden]
		public <ResetSwitchAfterDelay>d__51(int <>1__state)
		{
		}

		[Token(Token = "0x60029C6")]
		[Address(RVA = "0x8B9D9C", Offset = "0x8B9D9C", VA = "0x8B9D9C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60029C7")]
		[Address(RVA = "0x8B9DA0", Offset = "0x8B9DA0", VA = "0x8B9DA0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60029C9")]
		[Address(RVA = "0x8BA19C", Offset = "0x8BA19C", VA = "0x8BA19C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200056B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x643EB8", Offset = "0x643EB8")]
	private sealed class <LightsOff>d__54 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40024BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40024BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40024BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AngelsGame <>4__this;

		[Token(Token = "0x17000235")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60029CE")]
			[Address(RVA = "0x8B95BC", Offset = "0x8B95BC", VA = "0x8B95BC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000236")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60029D0")]
			[Address(RVA = "0x8B962C", Offset = "0x8B962C", VA = "0x8B962C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60029CB")]
		[Address(RVA = "0x8B80EC", Offset = "0x8B80EC", VA = "0x8B80EC")]
		[DebuggerHidden]
		public <LightsOff>d__54(int <>1__state)
		{
		}

		[Token(Token = "0x60029CC")]
		[Address(RVA = "0x8B9394", Offset = "0x8B9394", VA = "0x8B9394", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60029CD")]
		[Address(RVA = "0x8B9398", Offset = "0x8B9398", VA = "0x8B9398", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60029CF")]
		[Address(RVA = "0x8B95C4", Offset = "0x8B95C4", VA = "0x8B95C4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200056C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x643EC8", Offset = "0x643EC8")]
	private sealed class <LightsOn>d__55 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40024C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40024C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40024C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AngelsGame <>4__this;

		[Token(Token = "0x17000237")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60029D4")]
			[Address(RVA = "0x8B98A4", Offset = "0x8B98A4", VA = "0x8B98A4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000238")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60029D6")]
			[Address(RVA = "0x8B9914", Offset = "0x8B9914", VA = "0x8B9914", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60029D1")]
		[Address(RVA = "0x8B818C", Offset = "0x8B818C", VA = "0x8B818C")]
		[DebuggerHidden]
		public <LightsOn>d__55(int <>1__state)
		{
		}

		[Token(Token = "0x60029D2")]
		[Address(RVA = "0x8B9634", Offset = "0x8B9634", VA = "0x8B9634", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60029D3")]
		[Address(RVA = "0x8B9638", Offset = "0x8B9638", VA = "0x8B9638", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60029D5")]
		[Address(RVA = "0x8B98AC", Offset = "0x8B98AC", VA = "0x8B98AC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200056D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x643ED8", Offset = "0x643ED8")]
	private sealed class <AngelStun>d__56 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40024C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40024C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40024C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AngelsGame <>4__this;

		[Token(Token = "0x17000239")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60029DA")]
			[Address(RVA = "0x8B8760", Offset = "0x8B8760", VA = "0x8B8760", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700023A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60029DC")]
			[Address(RVA = "0x8B87D0", Offset = "0x8B87D0", VA = "0x8B87D0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60029D7")]
		[Address(RVA = "0x8B822C", Offset = "0x8B822C", VA = "0x8B822C")]
		[DebuggerHidden]
		public <AngelStun>d__56(int <>1__state)
		{
		}

		[Token(Token = "0x60029D8")]
		[Address(RVA = "0x8B862C", Offset = "0x8B862C", VA = "0x8B862C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60029D9")]
		[Address(RVA = "0x8B8630", Offset = "0x8B8630", VA = "0x8B8630", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60029DB")]
		[Address(RVA = "0x8B8768", Offset = "0x8B8768", VA = "0x8B8768", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200056E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x643EE8", Offset = "0x643EE8")]
	private sealed class <AngelWait>d__57 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40024C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40024C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40024C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float min;

		[Token(Token = "0x40024C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float max;

		[Token(Token = "0x40024CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AngelsGame <>4__this;

		[Token(Token = "0x40024CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <angelWaitTime>5__2;

		[Token(Token = "0x40024CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <timer>5__3;

		[Token(Token = "0x1700023B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60029E0")]
			[Address(RVA = "0x8B8B1C", Offset = "0x8B8B1C", VA = "0x8B8B1C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700023C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60029E2")]
			[Address(RVA = "0x8B8B8C", Offset = "0x8B8B8C", VA = "0x8B8B8C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60029DD")]
		[Address(RVA = "0x8B8308", Offset = "0x8B8308", VA = "0x8B8308")]
		[DebuggerHidden]
		public <AngelWait>d__57(int <>1__state)
		{
		}

		[Token(Token = "0x60029DE")]
		[Address(RVA = "0x8B87D8", Offset = "0x8B87D8", VA = "0x8B87D8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60029DF")]
		[Address(RVA = "0x8B87DC", Offset = "0x8B87DC", VA = "0x8B87DC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60029E1")]
		[Address(RVA = "0x8B8B24", Offset = "0x8B8B24", VA = "0x8B8B24", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200056F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x643EF8", Offset = "0x643EF8")]
	private sealed class <AngelsMain>d__58 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40024CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40024CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40024CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AngelsGame <>4__this;

		[Token(Token = "0x40024D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <redHerringCount>5__2;

		[Token(Token = "0x40024D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private bool <firstTime>5__3;

		[Token(Token = "0x40024D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int <angel>5__4;

		[Token(Token = "0x40024D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private bool <canSwitchPath>5__5;

		[Token(Token = "0x40024D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int <r>5__6;

		[Token(Token = "0x40024D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int <selectedRedHerring>5__7;

		[Token(Token = "0x1700023D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60029E6")]
			[Address(RVA = "0x8B931C", Offset = "0x8B931C", VA = "0x8B931C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700023E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60029E8")]
			[Address(RVA = "0x8B938C", Offset = "0x8B938C", VA = "0x8B938C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60029E3")]
		[Address(RVA = "0x8B8334", Offset = "0x8B8334", VA = "0x8B8334")]
		[DebuggerHidden]
		public <AngelsMain>d__58(int <>1__state)
		{
		}

		[Token(Token = "0x60029E4")]
		[Address(RVA = "0x8B8B94", Offset = "0x8B8B94", VA = "0x8B8B94", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60029E5")]
		[Address(RVA = "0x8B8B98", Offset = "0x8B8B98", VA = "0x8B8B98", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60029E7")]
		[Address(RVA = "0x8B9324", Offset = "0x8B9324", VA = "0x8B9324", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000570")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x643F08", Offset = "0x643F08")]
	private sealed class <RandomWait>d__60 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40024D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40024D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40024D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float min;

		[Token(Token = "0x40024D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float max;

		[Token(Token = "0x1700023F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60029EC")]
			[Address(RVA = "0x8B9D24", Offset = "0x8B9D24", VA = "0x8B9D24", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000240")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60029EE")]
			[Address(RVA = "0x8B9D94", Offset = "0x8B9D94", VA = "0x8B9D94", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60029E9")]
		[Address(RVA = "0x8B84E0", Offset = "0x8B84E0", VA = "0x8B84E0")]
		[DebuggerHidden]
		public <RandomWait>d__60(int <>1__state)
		{
		}

		[Token(Token = "0x60029EA")]
		[Address(RVA = "0x8B9C74", Offset = "0x8B9C74", VA = "0x8B9C74", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60029EB")]
		[Address(RVA = "0x8B9C78", Offset = "0x8B9C78", VA = "0x8B9C78", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60029ED")]
		[Address(RVA = "0x8B9D2C", Offset = "0x8B9D2C", VA = "0x8B9D2C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000571")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x643F18", Offset = "0x643F18")]
	private sealed class <PlayTimeline>d__61 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40024DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40024DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40024DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PlayableDirector timeline;

		[Token(Token = "0x40024DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float speed;

		[Token(Token = "0x17000241")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60029F2")]
			[Address(RVA = "0x8B9BFC", Offset = "0x8B9BFC", VA = "0x8B9BFC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000242")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60029F4")]
			[Address(RVA = "0x8B9C6C", Offset = "0x8B9C6C", VA = "0x8B9C6C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60029EF")]
		[Address(RVA = "0x8B85A4", Offset = "0x8B85A4", VA = "0x8B85A4")]
		[DebuggerHidden]
		public <PlayTimeline>d__61(int <>1__state)
		{
		}

		[Token(Token = "0x60029F0")]
		[Address(RVA = "0x8B991C", Offset = "0x8B991C", VA = "0x8B991C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60029F1")]
		[Address(RVA = "0x8B9920", Offset = "0x8B9920", VA = "0x8B9920", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60029F3")]
		[Address(RVA = "0x8B9C04", Offset = "0x8B9C04", VA = "0x8B9C04", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400038B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private AudioSource _audioSource;

	[Token(Token = "0x400038C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject _chargeDialInteraction;

	[Token(Token = "0x400038D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject _liftButtonInteraction;

	[Token(Token = "0x400038E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private PlayableDirector _resetLiftButtonFailTimeline;

	[Token(Token = "0x400038F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private List<WeepingAngel> _angelPath;

	[Token(Token = "0x4000390")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private PlayableDirector _globalHintTimeline;

	[Token(Token = "0x4000391")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private RotateLeverChargeInteraction _rotateLeverChargeInteraction;

	[Token(Token = "0x4000392")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private float _completeGameTimelineDischargeRate;

	[Token(Token = "0x4000393")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[SerializeField]
	private float _rotateLeverChargeSpeed;

	[Token(Token = "0x4000394")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private float _rotateLeverDischargeSpeed;

	[Token(Token = "0x4000395")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private PlayableDirector _mainLightOffTimeline;

	[Token(Token = "0x4000396")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private List<GameObject> _disableLightsOff;

	[Token(Token = "0x4000397")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private PlayableDirector _mainLightOnTimeline;

	[Token(Token = "0x4000398")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private AudioClip _lightOffSound;

	[Token(Token = "0x4000399")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private AudioClip _lightOnSound;

	[Token(Token = "0x400039A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private SoundEffect _lightOffSoundEffectName;

	[Token(Token = "0x400039B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private SoundEffect _lightOnSoundEffectName;

	[Token(Token = "0x400039C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64A614", Offset = "0x64A614")]
	[SerializeField]
	private float _angelStunTime;

	[Token(Token = "0x400039D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SerializeField]
	private PlayableDirector _angelStunTimeline;

	[Token(Token = "0x400039E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[SerializeField]
	private PlayableDirector _completeGameTimeline;

	[Token(Token = "0x400039F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[SerializeField]
	private List<GameObject> _completeGameEnable;

	[Token(Token = "0x40003A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[SerializeField]
	private List<SectionDef> _section;

	[Token(Token = "0x40003A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[SerializeField]
	private float _angelAppearTimeMin;

	[Token(Token = "0x40003A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	[SerializeField]
	private float _angelAppearTimeMax;

	[Token(Token = "0x40003A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[SerializeField]
	private float _mainLightOffTimeMin;

	[Token(Token = "0x40003A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	[SerializeField]
	private float _mainLightOffTimeMax;

	[Token(Token = "0x40003A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[SerializeField]
	private float _angelStayTimeMin;

	[Token(Token = "0x40003A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	[SerializeField]
	private float _angelStayTimeMax;

	[Token(Token = "0x40003A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[SerializeField]
	private int _redHerringCountMin;

	[Token(Token = "0x40003A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	[SerializeField]
	private int _redHerringCountMax;

	[Token(Token = "0x40003A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[SerializeField]
	private List<PlayableDirector> _redHerringTimeline;

	[Token(Token = "0x40003AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	[SerializeField]
	private float _warningTimelineSpeedMin;

	[Token(Token = "0x40003AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	[SerializeField]
	private float _warningTimelineSpeedMax;

	[Token(Token = "0x40003AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private bool _chargeComplete;

	[Token(Token = "0x40003AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	private int _sectionsCompleted;

	[Token(Token = "0x40003AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private bool _allowLeverReset;

	[Token(Token = "0x40003AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x109")]
	private bool _angelStunNeeded;

	[Token(Token = "0x40003B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private Coroutine _angelsCoroutine;

	[Token(Token = "0x40003B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private bool _gameCompleted;

	[Token(Token = "0x40003B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x119")]
	private bool _interruptable;

	[Token(Token = "0x40003B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11A")]
	private bool _startedCompleteTimeline;

	[Token(Token = "0x40003B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11B")]
	private bool _resetCompleted;

	[Token(Token = "0x40003B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
	private bool _lockout;

	[Token(Token = "0x40003B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private List<PlayableDirector> _redHerringAvailable;

	[Token(Token = "0x40003B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private MazeSnapRotateObjectControlAction _rotateAction;

	[Token(Token = "0x6000493")]
	[Address(RVA = "0x8B6F20", Offset = "0x8B6F20", VA = "0x8B6F20")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000494")]
	[Address(RVA = "0x8B7264", Offset = "0x8B7264", VA = "0x8B7264")]
	private void OnChargeComplete(object sender, Interaction interaction)
	{
	}

	[Token(Token = "0x6000495")]
	[Address(RVA = "0x8B73A0", Offset = "0x8B73A0", VA = "0x8B73A0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000496")]
	[Address(RVA = "0x8B7724", Offset = "0x8B7724", VA = "0x8B7724")]
	private void OnLiftButtonPressed(object sender, Interaction interaction)
	{
	}

	[Token(Token = "0x6000497")]
	[Address(RVA = "0x8B7308", Offset = "0x8B7308", VA = "0x8B7308")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x666D6C", Offset = "0x666D6C")]
	private IEnumerator ResetSwitchAfterDelay(float delay)
	{
		return null;
	}

	[Token(Token = "0x6000498")]
	[Address(RVA = "0x8B79F0", Offset = "0x8B79F0", VA = "0x8B79F0")]
	private void CompleteGame()
	{
	}

	[Token(Token = "0x6000499")]
	[Address(RVA = "0x8B7B50", Offset = "0x8B7B50", VA = "0x8B7B50")]
	private void Update()
	{
	}

	[Token(Token = "0x600049A")]
	[Address(RVA = "0x8B8078", Offset = "0x8B8078", VA = "0x8B8078")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x666DD0", Offset = "0x666DD0")]
	private IEnumerator LightsOff()
	{
		return null;
	}

	[Token(Token = "0x600049B")]
	[Address(RVA = "0x8B8118", Offset = "0x8B8118", VA = "0x8B8118")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x666E34", Offset = "0x666E34")]
	private IEnumerator LightsOn()
	{
		return null;
	}

	[Token(Token = "0x600049C")]
	[Address(RVA = "0x8B81B8", Offset = "0x8B81B8", VA = "0x8B81B8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x666E98", Offset = "0x666E98")]
	private IEnumerator AngelStun()
	{
		return null;
	}

	[Token(Token = "0x600049D")]
	[Address(RVA = "0x8B8258", Offset = "0x8B8258", VA = "0x8B8258")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x666EFC", Offset = "0x666EFC")]
	private IEnumerator AngelWait(float min, float max)
	{
		return null;
	}

	[Token(Token = "0x600049E")]
	[Address(RVA = "0x8B71F0", Offset = "0x8B71F0", VA = "0x8B71F0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x666F60", Offset = "0x666F60")]
	private IEnumerator AngelsMain()
	{
		return null;
	}

	[Token(Token = "0x600049F")]
	[Address(RVA = "0x8B8360", Offset = "0x8B8360", VA = "0x8B8360")]
	private void PlaySound(AudioClip clip, SoundEffect se)
	{
	}

	[Token(Token = "0x60004A0")]
	[Address(RVA = "0x8B8448", Offset = "0x8B8448", VA = "0x8B8448")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x666FC4", Offset = "0x666FC4")]
	private IEnumerator RandomWait(float min, float max)
	{
		return null;
	}

	[Token(Token = "0x60004A1")]
	[Address(RVA = "0x8B850C", Offset = "0x8B850C", VA = "0x8B850C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x668028", Offset = "0x668028")]
	private IEnumerator PlayTimeline(PlayableDirector timeline, float speed = 1f)
	{
		return null;
	}

	[Token(Token = "0x60004A2")]
	[Address(RVA = "0x8B85D0", Offset = "0x8B85D0", VA = "0x8B85D0")]
	public AngelsGame()
	{
	}
}
[Token(Token = "0x200009F")]
public class WeepingAngel : MonoBehaviour
{
	[Token(Token = "0x40003B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private List<WeepingAngelPoint> _point;

	[Token(Token = "0x40003B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private List<Transform> _angelModel;

	[Token(Token = "0x40003BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private int _penaltyLookAwayAdanceSteps;

	[Token(Token = "0x40003BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private int _penaltyDisappearAdvanceSteps;

	[Token(Token = "0x40003BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private AudioSource _audioSource;

	[Token(Token = "0x40003BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Transform _playerDeathPoint;

	[Token(Token = "0x40003BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[ObsoleteField]
	[SerializeField]
	private List<AudioClip> _move1StepClip;

	[Token(Token = "0x40003BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[ObsoleteField]
	[SerializeField]
	private List<AudioClip> _move2StepClip;

	[Token(Token = "0x40003C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[ObsoleteField]
	[SerializeField]
	private List<AudioClip> _move3StepClip;

	[Token(Token = "0x40003C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[ObsoleteField]
	[SerializeField]
	private List<SoundEffect> _move1StepSoundName;

	[Token(Token = "0x40003C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[ObsoleteField]
	[SerializeField]
	private List<SoundEffect> _move2StepSoundName;

	[Token(Token = "0x40003C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[ObsoleteField]
	[SerializeField]
	private List<SoundEffect> _move3StepSoundName;

	[Token(Token = "0x40003C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64A900", Offset = "0x64A900")]
	[SerializeField]
	private float _angelAdvanceTime;

	[Token(Token = "0x40003C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64A94C", Offset = "0x64A94C")]
	[SerializeField]
	private int _angelAdvanceStepsMin;

	[Token(Token = "0x40003C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64A998", Offset = "0x64A998")]
	[SerializeField]
	private int _angelAdvanceStepsMax;

	[Token(Token = "0x40003C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64A9E4", Offset = "0x64A9E4")]
	[SerializeField]
	private bool _enableFinalStepRestriction;

	[Token(Token = "0x40003C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7D")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64AA30", Offset = "0x64AA30")]
	[SerializeField]
	private bool _enableFinalStepConstantPose;

	[Token(Token = "0x40003C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7E")]
	private bool _facing;

	[Token(Token = "0x40003CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7F")]
	private bool _beenSpottedOnce;

	[Token(Token = "0x40003CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int _pointIndex;

	[Token(Token = "0x40003CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private bool _visible;

	[Token(Token = "0x40003CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x81")]
	private bool _lookedAway;

	[Token(Token = "0x40003CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private float _facingAwayTime;

	[Token(Token = "0x40003CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float _facingAwayTimeCumilative;

	[Token(Token = "0x40003D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private bool _playedAngelSound;

	[Token(Token = "0x40003D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Transform _activeAngelModel;

	[Token(Token = "0x40003D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private int _stepsAdvanced;

	[Token(Token = "0x40003D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private bool _allowKill;

	[Token(Token = "0x40003D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9D")]
	private bool _prevLightsOn;

	[Token(Token = "0x40003D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Plane[] _cameraPlanes;

	[Token(Token = "0x40003D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private bool _lightsOn;

	[Token(Token = "0x17000073")]
	public bool lightsOn
	{
		[Token(Token = "0x60004A3")]
		[Address(RVA = "0x80E954", Offset = "0x80E954", VA = "0x80E954")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60004A4")]
		[Address(RVA = "0x80E95C", Offset = "0x80E95C", VA = "0x80E95C")]
		set
		{
		}
	}

	[Token(Token = "0x17000074")]
	public bool allowKill
	{
		[Token(Token = "0x60004A5")]
		[Address(RVA = "0x80E968", Offset = "0x80E968", VA = "0x80E968")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60004A6")]
		[Address(RVA = "0x80E970", Offset = "0x80E970", VA = "0x80E970")]
		set
		{
		}
	}

	[Token(Token = "0x17000075")]
	public bool canSwitchPath
	{
		[Token(Token = "0x60004A7")]
		[Address(RVA = "0x80E97C", Offset = "0x80E97C", VA = "0x80E97C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60004A8")]
	[Address(RVA = "0x80EA00", Offset = "0x80EA00", VA = "0x80EA00")]
	private void Start()
	{
	}

	[Token(Token = "0x60004A9")]
	[Address(RVA = "0x80EBD0", Offset = "0x80EBD0", VA = "0x80EBD0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60004AA")]
	[Address(RVA = "0x80EA04", Offset = "0x80EA04", VA = "0x80EA04")]
	public void Reset()
	{
	}

	[Token(Token = "0x60004AB")]
	[Address(RVA = "0x80EC8C", Offset = "0x80EC8C", VA = "0x80EC8C")]
	private void Update()
	{
	}

	[Token(Token = "0x60004AC")]
	[Address(RVA = "0x80F570", Offset = "0x80F570", VA = "0x80F570")]
	private void PlayAngelSound()
	{
	}

	[Token(Token = "0x60004AD")]
	[Address(RVA = "0x80FB24", Offset = "0x80FB24", VA = "0x80FB24")]
	public void Appear()
	{
	}

	[Token(Token = "0x60004AE")]
	[Address(RVA = "0x80F21C", Offset = "0x80F21C", VA = "0x80F21C")]
	public void ShowAngelPoseModel()
	{
	}

	[Token(Token = "0x60004AF")]
	[Address(RVA = "0x80EBD4", Offset = "0x80EBD4", VA = "0x80EBD4")]
	public void HideAngelPoseModel()
	{
	}

	[Token(Token = "0x60004B0")]
	[Address(RVA = "0x80FD00", Offset = "0x80FD00", VA = "0x80FD00")]
	public bool Disappear()
	{
		return default(bool);
	}

	[Token(Token = "0x60004B1")]
	[Address(RVA = "0x80F7C8", Offset = "0x80F7C8", VA = "0x80F7C8")]
	public void Advance(int steps)
	{
	}

	[Token(Token = "0x60004B2")]
	[Address(RVA = "0x80FD54", Offset = "0x80FD54", VA = "0x80FD54")]
	public WeepingAngel()
	{
	}
}
[Token(Token = "0x20000A0")]
public class WeepingAngelPoint : MonoBehaviour
{
	[Token(Token = "0x40003D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64AA7C", Offset = "0x64AA7C")]
	[SerializeField]
	private int _angelModelIndex;

	[Token(Token = "0x40003D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64AAC8", Offset = "0x64AAC8")]
	[SerializeField]
	private List<int> _angelModelIndexList;

	[Token(Token = "0x17000076")]
	public int angelModelIndex
	{
		[Token(Token = "0x60004B3")]
		[Address(RVA = "0x80FCF8", Offset = "0x80FCF8", VA = "0x80FCF8")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000077")]
	public List<int> angelModelIndexList
	{
		[Token(Token = "0x60004B4")]
		[Address(RVA = "0x80FCF0", Offset = "0x80FCF0", VA = "0x80FCF0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60004B5")]
	[Address(RVA = "0x80FD6C", Offset = "0x80FD6C", VA = "0x80FD6C")]
	private void Start()
	{
	}

	[Token(Token = "0x60004B6")]
	[Address(RVA = "0x80FD70", Offset = "0x80FD70", VA = "0x80FD70")]
	private void Update()
	{
	}

	[Token(Token = "0x60004B7")]
	[Address(RVA = "0x80FD74", Offset = "0x80FD74", VA = "0x80FD74")]
	public WeepingAngelPoint()
	{
	}
}
[Token(Token = "0x20000A1")]
public class ColliderMessage : MonoBehaviour
{
	[Token(Token = "0x40003D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private string _colliderName;

	[Token(Token = "0x40003DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool _in;

	[Token(Token = "0x17000078")]
	public bool playerContact
	{
		[Token(Token = "0x60004B8")]
		[Address(RVA = "0x8CC850", Offset = "0x8CC850", VA = "0x8CC850")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60004B9")]
	[Address(RVA = "0x8CC858", Offset = "0x8CC858", VA = "0x8CC858")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x60004BA")]
	[Address(RVA = "0x8CC860", Offset = "0x8CC860", VA = "0x8CC860")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60004BB")]
	[Address(RVA = "0x8CC8CC", Offset = "0x8CC8CC", VA = "0x8CC8CC")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x60004BC")]
	[Address(RVA = "0x8CC934", Offset = "0x8CC934", VA = "0x8CC934")]
	public ColliderMessage()
	{
	}
}
[Token(Token = "0x20000A2")]
public class GridMaze : MonoBehaviour
{
	[Token(Token = "0x40003DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private List<Collider> _gridCollider;

	[Token(Token = "0x40003DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private List<Collider> _pathCollider;

	[Token(Token = "0x40003DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private List<Transform> _pathEnable;

	[Token(Token = "0x40003DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private List<Transform> _pathDisable;

	[Token(Token = "0x40003DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Transform _globalFail;

	[Token(Token = "0x40003E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Transform _globalSuccess;

	[Token(Token = "0x40003E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private string _successFlagName;

	[Token(Token = "0x40003E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private string _failFlagName;

	[Token(Token = "0x40003E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private int _index;

	[Token(Token = "0x40003E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private List<ColliderMessage> _gridColliderMessage;

	[Token(Token = "0x60004BD")]
	[Address(RVA = "0x840488", Offset = "0x840488", VA = "0x840488")]
	private void Start()
	{
	}

	[Token(Token = "0x60004BE")]
	[Address(RVA = "0x840618", Offset = "0x840618", VA = "0x840618")]
	public void Update()
	{
	}

	[Token(Token = "0x60004BF")]
	[Address(RVA = "0x840BF4", Offset = "0x840BF4", VA = "0x840BF4")]
	private void Fail()
	{
	}

	[Token(Token = "0x60004C0")]
	[Address(RVA = "0x840AA8", Offset = "0x840AA8", VA = "0x840AA8")]
	private void Pass()
	{
	}

	[Token(Token = "0x60004C1")]
	[Address(RVA = "0x840F24", Offset = "0x840F24", VA = "0x840F24")]
	public GridMaze()
	{
	}
}
[Token(Token = "0x20000A3")]
public class LockGamePacMan : SonicScrewdriverInteraction
{
	[Serializable]
	[Token(Token = "0x2000572")]
	private class LockSectionDef
	{
		[Token(Token = "0x40024DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform _prefab;

		[Token(Token = "0x40024DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float _initialAngle;

		[Token(Token = "0x40024E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float _targetAngle;

		[Token(Token = "0x40024E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TimelineAsset _enterTargetAngleTimeline;

		[Token(Token = "0x40024E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TimelineAsset _exitTargetAngleTimeline;

		[Token(Token = "0x40024E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public TimelineAsset _gameCompleteTimeline;

		[Token(Token = "0x40024E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public List<LockSectionAffectorDef> _affector;

		[Token(Token = "0x60029F5")]
		[Address(RVA = "0x7ECAB0", Offset = "0x7ECAB0", VA = "0x7ECAB0")]
		public LockSectionDef()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000573")]
	private class LockSectionAffectorDef
	{
		[Token(Token = "0x40024E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int sectionIndex;

		[Token(Token = "0x40024E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float angleMultiplier;

		[Token(Token = "0x60029F6")]
		[Address(RVA = "0x7ECAA8", Offset = "0x7ECAA8", VA = "0x7ECAA8")]
		public LockSectionAffectorDef()
		{
		}
	}

	[Token(Token = "0x2000574")]
	private class LockSection
	{
		[Token(Token = "0x40024E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float _angle;

		[Token(Token = "0x40024E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform _object;

		[Token(Token = "0x40024E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PlayableDirector _director;

		[Token(Token = "0x40024EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool _solved;

		[Token(Token = "0x60029F7")]
		[Address(RVA = "0x7EBB7C", Offset = "0x7EBB7C", VA = "0x7EBB7C")]
		public LockSection()
		{
		}
	}

	[Token(Token = "0x40003E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private List<LockSectionDef> _lockSection;

	[Token(Token = "0x40003E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private Vector3 _rootOffset;

	[Token(Token = "0x40003E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	[SerializeField]
	private float _sectionModelDistance;

	[Token(Token = "0x40003E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	private float _sectionSelectDistance;

	[Token(Token = "0x40003E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	[SerializeField]
	private float _snapRotationAngle;

	[Token(Token = "0x40003EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SerializeField]
	private float _snapTargetAngle;

	[Token(Token = "0x40003EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[SerializeField]
	private Transform _lockCasingPrefab;

	[Token(Token = "0x40003EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[SerializeField]
	private TimelineAsset _lockCasingCompleteAnim;

	[Token(Token = "0x40003ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[SerializeField]
	private SoundEffect _enterTargetAngleSoundEffectName;

	[Token(Token = "0x40003EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[SerializeField]
	private SoundEffect _leaveTargetAngleSoundEffectName;

	[Token(Token = "0x40003EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[SerializeField]
	private SoundEffect _switchLockSectionSoundEffectName;

	[Token(Token = "0x40003F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	[SerializeField]
	private SoundEffect _sonicStartSoundEffectName;

	[Token(Token = "0x40003F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	[SerializeField]
	private SoundEffect _sonicStopSoundEffectName;

	[Token(Token = "0x40003F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	[SerializeField]
	private SoundEffect _solvePuzzleSoundEffectName;

	[Token(Token = "0x40003F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	[SerializeField]
	private SoundEffect _rotateLockSoundEffectName;

	[Token(Token = "0x40003F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	[SerializeField]
	private float _rotateLockSoundAngle;

	[Token(Token = "0x40003F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
	[SerializeField]
	private Vector3 _lockSectionOffset;

	[Token(Token = "0x40003F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private List<LockSection> _section;

	[Token(Token = "0x40003F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private float _startAngle;

	[Token(Token = "0x40003F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
	private float _startDistance;

	[Token(Token = "0x40003F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private int _selectedSection;

	[Token(Token = "0x40003FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
	private bool _gameComplete;

	[Token(Token = "0x40003FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15D")]
	private bool _solved;

	[Token(Token = "0x40003FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private Transform _lockSectionRoot;

	[Token(Token = "0x40003FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private Transform _lockCasingObject;

	[Token(Token = "0x40003FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private PlayableDirector _lockCasingTimeline;

	[Token(Token = "0x40003FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private float _rotateSoundAngleCounter;

	[Token(Token = "0x17000079")]
	public override bool canStopInteractingNow
	{
		[Token(Token = "0x60004C9")]
		[Address(RVA = "0x7EC8B8", Offset = "0x7EC8B8", VA = "0x7EC8B8", Slot = "17")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60004C2")]
	[Address(RVA = "0x7EB568", Offset = "0x7EB568", VA = "0x7EB568")]
	protected void Awake()
	{
	}

	[Token(Token = "0x60004C3")]
	[Address(RVA = "0x7EBB84", Offset = "0x7EBB84", VA = "0x7EBB84")]
	protected float GetCurrentDistance()
	{
		return default(float);
	}

	[Token(Token = "0x60004C4")]
	[Address(RVA = "0x7EBD38", Offset = "0x7EBD38", VA = "0x7EBD38")]
	protected float GetCurrentAngle()
	{
		return default(float);
	}

	[Token(Token = "0x60004C5")]
	[Address(RVA = "0x7EBF14", Offset = "0x7EBF14", VA = "0x7EBF14", Slot = "29")]
	protected virtual void Unhighlight()
	{
	}

	[Token(Token = "0x60004C6")]
	[Address(RVA = "0x7EBF18", Offset = "0x7EBF18", VA = "0x7EBF18", Slot = "30")]
	protected virtual void Highlight()
	{
	}

	[Token(Token = "0x60004C7")]
	[Address(RVA = "0x7EBF1C", Offset = "0x7EBF1C", VA = "0x7EBF1C", Slot = "23")]
	protected override void OnScrewdriverStart()
	{
	}

	[Token(Token = "0x60004C8")]
	[Address(RVA = "0x7EBFFC", Offset = "0x7EBFFC", VA = "0x7EBFFC", Slot = "24")]
	protected override void OnScrewdriverUpdate()
	{
	}

	[Token(Token = "0x60004CA")]
	[Address(RVA = "0x7EC8D8", Offset = "0x7EC8D8", VA = "0x7EC8D8", Slot = "20")]
	protected override void Update()
	{
	}

	[Token(Token = "0x60004CB")]
	[Address(RVA = "0x7EC658", Offset = "0x7EC658", VA = "0x7EC658")]
	protected void SetRotateAngle(int selectedSection, float angleDelta)
	{
	}

	[Token(Token = "0x60004CC")]
	[Address(RVA = "0x7EC998", Offset = "0x7EC998", VA = "0x7EC998", Slot = "25")]
	protected override void OnScrewdriverEnd()
	{
	}

	[Token(Token = "0x60004CD")]
	[Address(RVA = "0x7ECA20", Offset = "0x7ECA20", VA = "0x7ECA20")]
	public new void Reset()
	{
	}

	[Token(Token = "0x60004CE")]
	[Address(RVA = "0x7ECA24", Offset = "0x7ECA24", VA = "0x7ECA24")]
	public LockGamePacMan()
	{
	}
}
[Token(Token = "0x20000A4")]
public class SafeInteraction : MonoBehaviour, Interaction
{
	[Token(Token = "0x2000575")]
	private enum State
	{
		[Token(Token = "0x40024EC")]
		Input,
		[Token(Token = "0x40024ED")]
		Failure,
		[Token(Token = "0x40024EE")]
		Success
	}

	[Token(Token = "0x2000576")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x643F28", Offset = "0x643F28")]
	private sealed class <HighlightDigit>d__44 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40024EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40024F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40024F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SafeInteraction <>4__this;

		[Token(Token = "0x40024F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int digit;

		[Token(Token = "0x17000243")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60029FB")]
			[Address(RVA = "0x85BAC0", Offset = "0x85BAC0", VA = "0x85BAC0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000244")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60029FD")]
			[Address(RVA = "0x85BB30", Offset = "0x85BB30", VA = "0x85BB30", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60029F8")]
		[Address(RVA = "0x85B62C", Offset = "0x85B62C", VA = "0x85B62C")]
		[DebuggerHidden]
		public <HighlightDigit>d__44(int <>1__state)
		{
		}

		[Token(Token = "0x60029F9")]
		[Address(RVA = "0x85B94C", Offset = "0x85B94C", VA = "0x85B94C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60029FA")]
		[Address(RVA = "0x85B950", Offset = "0x85B950", VA = "0x85B950", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60029FC")]
		[Address(RVA = "0x85BAC8", Offset = "0x85BAC8", VA = "0x85BAC8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000400")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64ACC4", Offset = "0x64ACC4")]
	[SerializeField]
	private VRTK_BaseControllable controllable;

	[Token(Token = "0x4000401")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64AD10", Offset = "0x64AD10")]
	[SerializeField]
	private Material _blankMaterial;

	[Token(Token = "0x4000402")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64AD5C", Offset = "0x64AD5C")]
	[SerializeField]
	private List<Material> _digitMaterial;

	[Token(Token = "0x4000403")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64ADA8", Offset = "0x64ADA8")]
	[SerializeField]
	private List<Renderer> _displayObject;

	[Token(Token = "0x4000404")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64ADF4", Offset = "0x64ADF4")]
	[SerializeField]
	private List<GameObject> _keypadObject;

	[Token(Token = "0x4000405")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64AE40", Offset = "0x64AE40")]
	[SerializeField]
	private string _correctCode;

	[Token(Token = "0x4000406")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64AE8C", Offset = "0x64AE8C")]
	[SerializeField]
	private string _correctCodeFlagName;

	[Token(Token = "0x4000407")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64AED8", Offset = "0x64AED8")]
	[SerializeField]
	private GameObject _failureObject;

	[Token(Token = "0x4000408")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64AF24", Offset = "0x64AF24")]
	[SerializeField]
	private List<string> _failureDialogue;

	[Token(Token = "0x4000409")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64AF70", Offset = "0x64AF70")]
	[SerializeField]
	private GameObject _successObject;

	[Token(Token = "0x400040A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64AFBC", Offset = "0x64AFBC")]
	[SerializeField]
	private float _failureResetTime;

	[Token(Token = "0x400040B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64B008", Offset = "0x64B008")]
	[SerializeField]
	private float _keypadHighlightTime;

	[Token(Token = "0x400040C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private List<Material> _idleDisplay;

	[Token(Token = "0x400040D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float _idleTimer;

	[Token(Token = "0x400040E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private int _currentDigit;

	[Token(Token = "0x400040F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private int[] _digitDisplay;

	[Token(Token = "0x4000410")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private State _state;

	[Token(Token = "0x4000411")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private float _resetTimer;

	[Token(Token = "0x4000412")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private bool _useCorrectCode;

	[Token(Token = "0x4000413")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x91")]
	private bool _flashState;

	[Token(Token = "0x4000414")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private float _activeTime;

	[Token(Token = "0x1700007A")]
	public bool isInteractionComplete
	{
		[Token(Token = "0x60004CF")]
		[Address(RVA = "0x85A47C", Offset = "0x85A47C", VA = "0x85A47C", Slot = "8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700007B")]
	public bool interactionProgressing
	{
		[Token(Token = "0x60004D0")]
		[Address(RVA = "0x85A48C", Offset = "0x85A48C", VA = "0x85A48C", Slot = "13")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x14000034")]
	public event InteractionCompleteEventHandler onInteractionComplete
	{
		[Token(Token = "0x60004D1")]
		[Address(RVA = "0x85A494", Offset = "0x85A494", VA = "0x85A494", Slot = "4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66808C", Offset = "0x66808C")]
		add
		{
		}
		[Token(Token = "0x60004D2")]
		[Address(RVA = "0x85A580", Offset = "0x85A580", VA = "0x85A580", Slot = "5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66809C", Offset = "0x66809C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000035")]
	public event InteractionCompleteEventHandler onInteractionUncomplete
	{
		[Token(Token = "0x60004D3")]
		[Address(RVA = "0x85A66C", Offset = "0x85A66C", VA = "0x85A66C", Slot = "6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6680AC", Offset = "0x6680AC")]
		add
		{
		}
		[Token(Token = "0x60004D4")]
		[Address(RVA = "0x85A758", Offset = "0x85A758", VA = "0x85A758", Slot = "7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6680BC", Offset = "0x6680BC")]
		remove
		{
		}
	}

	[Token(Token = "0x14000036")]
	public event InteractionCompleteEventHandler onInteractionProgressStart
	{
		[Token(Token = "0x60004D5")]
		[Address(RVA = "0x85A844", Offset = "0x85A844", VA = "0x85A844", Slot = "9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6680CC", Offset = "0x6680CC")]
		add
		{
		}
		[Token(Token = "0x60004D6")]
		[Address(RVA = "0x85A930", Offset = "0x85A930", VA = "0x85A930", Slot = "10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6680DC", Offset = "0x6680DC")]
		remove
		{
		}
	}

	[Token(Token = "0x14000037")]
	public event InteractionCompleteEventHandler onInteractionProgressStop
	{
		[Token(Token = "0x60004D7")]
		[Address(RVA = "0x85AA1C", Offset = "0x85AA1C", VA = "0x85AA1C", Slot = "11")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6680EC", Offset = "0x6680EC")]
		add
		{
		}
		[Token(Token = "0x60004D8")]
		[Address(RVA = "0x85AB08", Offset = "0x85AB08", VA = "0x85AB08", Slot = "12")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6680FC", Offset = "0x6680FC")]
		remove
		{
		}
	}

	[Token(Token = "0x60004D9")]
	[Address(RVA = "0x85ABF4", Offset = "0x85ABF4", VA = "0x85ABF4", Slot = "15")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x60004DA")]
	[Address(RVA = "0x85AEB4", Offset = "0x85AEB4", VA = "0x85AEB4")]
	private void ResetDigitDisplay()
	{
	}

	[Token(Token = "0x60004DB")]
	[Address(RVA = "0x85B1F0", Offset = "0x85B1F0", VA = "0x85B1F0", Slot = "16")]
	protected virtual void OnDestroy()
	{
	}

	[Token(Token = "0x60004DC")]
	[Address(RVA = "0x85B28C", Offset = "0x85B28C", VA = "0x85B28C", Slot = "17")]
	protected virtual void MaxLimitReached(object sender, ControllableEventArgs e)
	{
	}

	[Token(Token = "0x60004DD")]
	[Address(RVA = "0x85B3C4", Offset = "0x85B3C4", VA = "0x85B3C4")]
	private void Update()
	{
	}

	[Token(Token = "0x60004DE")]
	[Address(RVA = "0x85AF4C", Offset = "0x85AF4C", VA = "0x85AF4C")]
	private void UpdateDisplay()
	{
	}

	[Token(Token = "0x60004DF")]
	[Address(RVA = "0x85B594", Offset = "0x85B594", VA = "0x85B594")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x66810C", Offset = "0x66810C")]
	private IEnumerator HighlightDigit(int digit)
	{
		return null;
	}

	[Token(Token = "0x60004E0")]
	[Address(RVA = "0x85B658", Offset = "0x85B658", VA = "0x85B658")]
	private void AddDigit(int digit)
	{
	}

	[Token(Token = "0x60004E1")]
	[Address(RVA = "0x85B91C", Offset = "0x85B91C", VA = "0x85B91C", Slot = "14")]
	public void Reset()
	{
	}

	[Token(Token = "0x60004E2")]
	[Address(RVA = "0x85B290", Offset = "0x85B290", VA = "0x85B290")]
	private void AdvanceState()
	{
	}

	[Token(Token = "0x60004E3")]
	[Address(RVA = "0x85B92C", Offset = "0x85B92C", VA = "0x85B92C")]
	public SafeInteraction()
	{
	}
}
[Token(Token = "0x20000A5")]
public class BallBotAgent : MonoBehaviour, IDamageable
{
	[Token(Token = "0x2000577")]
	private enum MoveStyle
	{
		[Token(Token = "0x40024F4")]
		Patrol,
		[Token(Token = "0x40024F5")]
		Flank
	}

	[Token(Token = "0x4000419")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private StealthPatrolPath _path;

	[Token(Token = "0x400041A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private StealthSense _sense;

	[Token(Token = "0x400041B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Transform _gunTransform;

	[Token(Token = "0x400041C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private float _accelerateForce;

	[Token(Token = "0x400041D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private float _maxVelocity;

	[Token(Token = "0x400041E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private float _maxRotateSpeed;

	[Token(Token = "0x400041F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[SerializeField]
	private float _dampingHorizontal;

	[Token(Token = "0x4000420")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private float _dampingVertical;

	[Token(Token = "0x4000421")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[SerializeField]
	private float _dampingHorizontalBrake;

	[Token(Token = "0x4000422")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private float _dampingVerticalBrake;

	[Token(Token = "0x4000423")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[SerializeField]
	private bool _shootingCheckForClearView;

	[Token(Token = "0x4000424")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private float _deleteObjectAfterDeathDelay;

	[Token(Token = "0x4000425")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private List<SoundEffectEmitter> _stopEmitterOnDeath;

	[Token(Token = "0x4000426")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x64B174", Offset = "0x64B174")]
	[SerializeField]
	private bool _approachTarget;

	[Token(Token = "0x4000427")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[SerializeField]
	private float _approachTargetHeightRandomnessMin;

	[Token(Token = "0x4000428")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private float _approachTargetHeightRandomnessMax;

	[Token(Token = "0x4000429")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[SerializeField]
	private float _approachTargetXRandomness;

	[Token(Token = "0x400042A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private float _approachTargetDistance;

	[Token(Token = "0x400042B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[SerializeField]
	private float _approachTargetRefreshTime;

	[Token(Token = "0x400042C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x64B210", Offset = "0x64B210")]
	[SerializeField]
	private float _weaponReloadTime;

	[Token(Token = "0x400042D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private StealthAgent.FiringPattern _firingPattern;

	[Token(Token = "0x400042E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private Transform _weaponProjectilePrefab;

	[Token(Token = "0x400042F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private StealthPatrolPoint _point;

	[Token(Token = "0x4000430")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private int _index;

	[Token(Token = "0x4000431")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private StealthObject _target;

	[Token(Token = "0x4000432")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Rigidbody _rigidbody;

	[Token(Token = "0x4000433")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private CharacterLookAt _lookAt;

	[Token(Token = "0x4000434")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private float _weaponReloadTimer;

	[Token(Token = "0x4000435")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private bool _dead;

	[Token(Token = "0x4000436")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private MoveStyle _moveStyle;

	[Token(Token = "0x4000437")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	private float _approachTargetRefreshTimer;

	[Token(Token = "0x4000438")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private Quaternion _flankTargetRotation;

	[Token(Token = "0x4000439")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private LifetimeObjectManager _lifetimeObjectManager;

	[Token(Token = "0x400043A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private Vector3 _flankTargetOffset;

	[Token(Token = "0x60004E4")]
	[Address(RVA = "0x8C09EC", Offset = "0x8C09EC", VA = "0x8C09EC")]
	private void Start()
	{
	}

	[Token(Token = "0x60004E5")]
	[Address(RVA = "0x8C0AA0", Offset = "0x8C0AA0", VA = "0x8C0AA0")]
	private void NextPoint()
	{
	}

	[Token(Token = "0x60004E6")]
	[Address(RVA = "0x8C0B70", Offset = "0x8C0B70", VA = "0x8C0B70")]
	private void Update()
	{
	}

	[Token(Token = "0x60004E7")]
	[Address(RVA = "0x8C1388", Offset = "0x8C1388", VA = "0x8C1388")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60004E8")]
	[Address(RVA = "0x8C138C", Offset = "0x8C138C", VA = "0x8C138C")]
	public void UpdateWeapon()
	{
	}

	[Token(Token = "0x60004E9")]
	[Address(RVA = "0x8C0C10", Offset = "0x8C0C10", VA = "0x8C0C10")]
	public void UpdateMovement()
	{
	}

	[Token(Token = "0x60004EA")]
	[Address(RVA = "0x8C16C8", Offset = "0x8C16C8", VA = "0x8C16C8")]
	public void WeaponFire()
	{
	}

	[Token(Token = "0x60004EB")]
	[Address(RVA = "0x8C1AB8", Offset = "0x8C1AB8", VA = "0x8C1AB8", Slot = "4")]
	public void OnDamaged(float hp, Transform source)
	{
	}

	[Token(Token = "0x60004EC")]
	[Address(RVA = "0x8C1ABC", Offset = "0x8C1ABC", VA = "0x8C1ABC", Slot = "5")]
	public void OnDestroyed(Transform source)
	{
	}

	[Token(Token = "0x60004ED")]
	[Address(RVA = "0x8C1C90", Offset = "0x8C1C90", VA = "0x8C1C90")]
	public BallBotAgent()
	{
	}
}
[Token(Token = "0x20000A6")]
public class Crosshair : MonoBehaviour
{
	[Token(Token = "0x400043B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float _distance;

	[Token(Token = "0x400043C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float _minDisplayDistance;

	[Token(Token = "0x400043D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float _maxScanDistance;

	[Token(Token = "0x400043E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private float _crosshairSize;

	[Token(Token = "0x400043F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float _rotateLag;

	[Token(Token = "0x4000440")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private bool _lagEnable;

	[Token(Token = "0x4000441")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
	[SerializeField]
	private bool _useRaycastScan;

	[Token(Token = "0x4000442")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E")]
	[SerializeField]
	private bool _useScanMask;

	[Token(Token = "0x4000443")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private LayerMask _scanMask;

	[Token(Token = "0x4000444")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Quaternion _prevRotation;

	[Token(Token = "0x60004EE")]
	[Address(RVA = "0x7AF53C", Offset = "0x7AF53C", VA = "0x7AF53C")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60004EF")]
	[Address(RVA = "0x7AFD1C", Offset = "0x7AFD1C", VA = "0x7AFD1C")]
	public Crosshair()
	{
	}
}
[Token(Token = "0x20000A7")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x63D5FC", Offset = "0x63D5FC")]
public class DamageCollider : MonoBehaviour
{
	[Token(Token = "0x4000445")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64B30C", Offset = "0x64B30C")]
	[SerializeField]
	private float _damageAmount;

	[Token(Token = "0x4000446")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64B358", Offset = "0x64B358")]
	[SerializeField]
	private float _lifeTime;

	[Token(Token = "0x60004F0")]
	[Address(RVA = "0x7B29C4", Offset = "0x7B29C4", VA = "0x7B29C4")]
	private void Start()
	{
	}

	[Token(Token = "0x60004F1")]
	[Address(RVA = "0x7B2A6C", Offset = "0x7B2A6C", VA = "0x7B2A6C")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x60004F2")]
	[Address(RVA = "0x7B2B78", Offset = "0x7B2B78", VA = "0x7B2B78")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60004F3")]
	[Address(RVA = "0x7B2C84", Offset = "0x7B2C84", VA = "0x7B2C84")]
	public DamageCollider()
	{
	}
}
[Token(Token = "0x20000A8")]
public interface IPacedAttacker
{
	[Token(Token = "0x60004F4")]
	void OnAllocatedAttack();
}
[Token(Token = "0x20000A9")]
public class EnemyAttackPacing : MonoBehaviour
{
	[Token(Token = "0x4000447")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static EnemyAttackPacing _instance;

	[Token(Token = "0x4000448")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float _timeBetweenAttacksMin;

	[Token(Token = "0x4000449")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float _timeBetweenAttacksMax;

	[Token(Token = "0x400044A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float _attackTimer;

	[Token(Token = "0x400044B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<IPacedAttacker> _attackerList;

	[Token(Token = "0x1700007C")]
	public static EnemyAttackPacing instance
	{
		[Token(Token = "0x60004F5")]
		[Address(RVA = "0x7BD808", Offset = "0x7BD808", VA = "0x7BD808")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60004F6")]
	[Address(RVA = "0x7BD858", Offset = "0x7BD858", VA = "0x7BD858")]
	private void Awake()
	{
	}

	[Token(Token = "0x60004F7")]
	[Address(RVA = "0x7BD8AC", Offset = "0x7BD8AC", VA = "0x7BD8AC")]
	public void AddAttacker(IPacedAttacker attacker)
	{
	}

	[Token(Token = "0x60004F8")]
	[Address(RVA = "0x7BD91C", Offset = "0x7BD91C", VA = "0x7BD91C")]
	public void RemoveAttacker(IPacedAttacker attacker)
	{
	}

	[Token(Token = "0x60004F9")]
	[Address(RVA = "0x7BD98C", Offset = "0x7BD98C", VA = "0x7BD98C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60004FA")]
	[Address(RVA = "0x7BD9DC", Offset = "0x7BD9DC", VA = "0x7BD9DC")]
	private void Start()
	{
	}

	[Token(Token = "0x60004FB")]
	[Address(RVA = "0x7BDA08", Offset = "0x7BDA08", VA = "0x7BDA08")]
	private void ResetAttackTimer()
	{
	}

	[Token(Token = "0x60004FC")]
	[Address(RVA = "0x7BDA34", Offset = "0x7BDA34", VA = "0x7BDA34")]
	private void Update()
	{
	}

	[Token(Token = "0x60004FD")]
	[Address(RVA = "0x7BDAE8", Offset = "0x7BDAE8", VA = "0x7BDAE8")]
	private void StartAttack()
	{
	}

	[Token(Token = "0x60004FE")]
	[Address(RVA = "0x7BDBF8", Offset = "0x7BDBF8", VA = "0x7BDBF8")]
	public EnemyAttackPacing()
	{
	}
}
[Token(Token = "0x20000AA")]
public class EnemyHealthInteraction : MonoBehaviour, IDamageable, Interaction
{
	[Token(Token = "0x2000578")]
	private enum Type
	{
		[Token(Token = "0x40024F7")]
		Destroy,
		[Token(Token = "0x40024F8")]
		Damage
	}

	[Token(Token = "0x400044C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private HealthBar _health;

	[Token(Token = "0x400044D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Type _type;

	[Token(Token = "0x400044E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private float _damageAmount;

	[Token(Token = "0x400044F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private bool _uncompleteOnDisable;

	[Token(Token = "0x4000450")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	private bool _complete;

	[Token(Token = "0x4000451")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float _damageTaken;

	[Token(Token = "0x1700007D")]
	private bool Interaction.isInteractionComplete
	{
		[Token(Token = "0x6000502")]
		[Address(RVA = "0x7BDE18", Offset = "0x7BDE18", VA = "0x7BDE18", Slot = "10")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700007E")]
	private bool Interaction.interactionProgressing
	{
		[Token(Token = "0x6000503")]
		[Address(RVA = "0x7BDE20", Offset = "0x7BDE20", VA = "0x7BDE20", Slot = "15")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x14000038")]
	public event InteractionCompleteEventHandler onInteractionComplete
	{
		[Token(Token = "0x6000504")]
		[Address(RVA = "0x7BDE28", Offset = "0x7BDE28", VA = "0x7BDE28", Slot = "6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x668170", Offset = "0x668170")]
		add
		{
		}
		[Token(Token = "0x6000505")]
		[Address(RVA = "0x7BDF14", Offset = "0x7BDF14", VA = "0x7BDF14", Slot = "7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x668180", Offset = "0x668180")]
		remove
		{
		}
	}

	[Token(Token = "0x14000039")]
	public event InteractionCompleteEventHandler onInteractionUncomplete
	{
		[Token(Token = "0x6000506")]
		[Address(RVA = "0x7BE000", Offset = "0x7BE000", VA = "0x7BE000", Slot = "8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x668190", Offset = "0x668190")]
		add
		{
		}
		[Token(Token = "0x6000507")]
		[Address(RVA = "0x7BE0EC", Offset = "0x7BE0EC", VA = "0x7BE0EC", Slot = "9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6681A0", Offset = "0x6681A0")]
		remove
		{
		}
	}

	[Token(Token = "0x1400003A")]
	public event InteractionCompleteEventHandler onInteractionProgressStart
	{
		[Token(Token = "0x6000508")]
		[Address(RVA = "0x7BE1D8", Offset = "0x7BE1D8", VA = "0x7BE1D8", Slot = "11")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6681B0", Offset = "0x6681B0")]
		add
		{
		}
		[Token(Token = "0x6000509")]
		[Address(RVA = "0x7BE2C4", Offset = "0x7BE2C4", VA = "0x7BE2C4", Slot = "12")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6681C0", Offset = "0x6681C0")]
		remove
		{
		}
	}

	[Token(Token = "0x1400003B")]
	public event InteractionCompleteEventHandler onInteractionProgressStop
	{
		[Token(Token = "0x600050A")]
		[Address(RVA = "0x7BE3B0", Offset = "0x7BE3B0", VA = "0x7BE3B0", Slot = "13")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6681D0", Offset = "0x6681D0")]
		add
		{
		}
		[Token(Token = "0x600050B")]
		[Address(RVA = "0x7BE49C", Offset = "0x7BE49C", VA = "0x7BE49C", Slot = "14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6681E0", Offset = "0x6681E0")]
		remove
		{
		}
	}

	[Token(Token = "0x60004FF")]
	[Address(RVA = "0x7BDC68", Offset = "0x7BDC68", VA = "0x7BDC68")]
	private void Start()
	{
	}

	[Token(Token = "0x6000500")]
	[Address(RVA = "0x7BDD90", Offset = "0x7BDD90", VA = "0x7BDD90")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000501")]
	[Address(RVA = "0x7BDDE0", Offset = "0x7BDDE0", VA = "0x7BDDE0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600050C")]
	[Address(RVA = "0x7BE588", Offset = "0x7BE588", VA = "0x7BE588", Slot = "4")]
	public void OnDamaged(float hp, Transform source)
	{
	}

	[Token(Token = "0x600050D")]
	[Address(RVA = "0x7BE604", Offset = "0x7BE604", VA = "0x7BE604", Slot = "5")]
	public void OnDestroyed(Transform source)
	{
	}

	[Token(Token = "0x600050E")]
	[Address(RVA = "0x7BE5DC", Offset = "0x7BE5DC", VA = "0x7BE5DC")]
	private void CompleteInteraction()
	{
	}

	[Token(Token = "0x600050F")]
	[Address(RVA = "0x7BDDBC", Offset = "0x7BDDBC", VA = "0x7BDDBC")]
	private void UncompleteInteraction()
	{
	}

	[Token(Token = "0x6000510")]
	[Address(RVA = "0x7BE634", Offset = "0x7BE634", VA = "0x7BE634", Slot = "16")]
	public void Reset()
	{
	}

	[Token(Token = "0x6000511")]
	[Address(RVA = "0x7BE638", Offset = "0x7BE638", VA = "0x7BE638")]
	public EnemyHealthInteraction()
	{
	}
}
[Token(Token = "0x20000AB")]
public interface IDamageable
{
	[Token(Token = "0x6000512")]
	void OnDamaged(float hp, Transform source);

	[Token(Token = "0x6000513")]
	void OnDestroyed(Transform source);
}
[Token(Token = "0x20000AC")]
public class HealthBar : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000579")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x643F38", Offset = "0x643F38")]
	private sealed class <>c
	{
		[Token(Token = "0x40024F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x40024FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static DebugParameterItem.DebugParameterFunction <>9__32_0;

		[Token(Token = "0x60029FF")]
		[Address(RVA = "0x844C24", Offset = "0x844C24", VA = "0x844C24")]
		public <>c()
		{
		}

		[Token(Token = "0x6002A00")]
		[Address(RVA = "0x844C2C", Offset = "0x844C2C", VA = "0x844C2C")]
		internal void <Start>b__32_0(bool clicked, out string name, out string value)
		{
		}
	}

	[Token(Token = "0x4000456")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64B444", Offset = "0x64B444")]
	[SerializeField]
	private float _initialHitPoints;

	[Token(Token = "0x4000457")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64B490", Offset = "0x64B490")]
	[SerializeField]
	private float _fullHitPoints;

	[Token(Token = "0x4000458")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64B4DC", Offset = "0x64B4DC")]
	[SerializeField]
	private float _rechargeDelay;

	[Token(Token = "0x4000459")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64B528", Offset = "0x64B528")]
	[SerializeField]
	private float _rechargeRate;

	[Token(Token = "0x400045A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64B574", Offset = "0x64B574")]
	[SerializeField]
	private bool _isPlayer;

	[Token(Token = "0x400045B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64B5C0", Offset = "0x64B5C0")]
	[SerializeField]
	private bool _disableCollidersOnDeath;

	[Token(Token = "0x400045C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64B60C", Offset = "0x64B60C")]
	[SerializeField]
	private float _playerAIDistance;

	[Token(Token = "0x400045D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64B658", Offset = "0x64B658")]
	[SerializeField]
	private Transform _destroyedSpawnLocation;

	[Token(Token = "0x400045E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private List<Transform> _destroyedSpawnPrefab;

	[Token(Token = "0x400045F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private List<Transform> _destroyedDisable;

	[Token(Token = "0x4000460")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private List<Transform> _destroyedEnable;

	[Token(Token = "0x4000461")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private List<Transform> _destroyedEnableSelectRandom;

	[Token(Token = "0x4000462")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private Vector3 _deathExplosionForce;

	[Token(Token = "0x4000463")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private List<IDamageable> _damageable;

	[Token(Token = "0x4000464")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static HealthBar _playerHealthBar;

	[Token(Token = "0x4000465")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static bool _playerInvincible;

	[Token(Token = "0x4000466")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float _currentHitPoints;

	[Token(Token = "0x4000467")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private float _lastHitTime;

	[Token(Token = "0x4000468")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private bool _dead;

	[Token(Token = "0x4000469")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private LifetimeObjectManager _lifetimeObjectManager;

	[Token(Token = "0x400046A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private DebugParameterItem.DebugParameterFunction _debugFunc;

	[Token(Token = "0x1700007F")]
	public float hitPoints
	{
		[Token(Token = "0x6000514")]
		[Address(RVA = "0x8437D0", Offset = "0x8437D0", VA = "0x8437D0")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000080")]
	public bool alive
	{
		[Token(Token = "0x6000515")]
		[Address(RVA = "0x8437D8", Offset = "0x8437D8", VA = "0x8437D8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000081")]
	public float fullHitPoints
	{
		[Token(Token = "0x6000516")]
		[Address(RVA = "0x8437E8", Offset = "0x8437E8", VA = "0x8437E8")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000082")]
	public static HealthBar playerHealthBar
	{
		[Token(Token = "0x6000517")]
		[Address(RVA = "0x8437F0", Offset = "0x8437F0", VA = "0x8437F0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000518")]
	[Address(RVA = "0x843858", Offset = "0x843858", VA = "0x843858")]
	public static bool IsCloseToPlayer(Transform t, float distance = 0f)
	{
		return default(bool);
	}

	[Token(Token = "0x6000519")]
	[Address(RVA = "0x843A04", Offset = "0x843A04", VA = "0x843A04")]
	public void AddDamageable(IDamageable damageable)
	{
	}

	[Token(Token = "0x600051A")]
	[Address(RVA = "0x843A74", Offset = "0x843A74", VA = "0x843A74")]
	public void RemoveDamageable(IDamageable damageable)
	{
	}

	[Token(Token = "0x600051B")]
	[Address(RVA = "0x843AE4", Offset = "0x843AE4", VA = "0x843AE4")]
	private void Start()
	{
	}

	[Token(Token = "0x600051C")]
	[Address(RVA = "0x843CF4", Offset = "0x843CF4", VA = "0x843CF4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600051D")]
	[Address(RVA = "0x843E04", Offset = "0x843E04", VA = "0x843E04")]
	public void DestroyEnemy(Transform source)
	{
	}

	[Token(Token = "0x600051E")]
	[Address(RVA = "0x84481C", Offset = "0x84481C", VA = "0x84481C")]
	public void Kill(Transform source)
	{
	}

	[Token(Token = "0x600051F")]
	[Address(RVA = "0x844824", Offset = "0x844824", VA = "0x844824")]
	public void ApplyDamage(float hp, Transform source)
	{
	}

	[Token(Token = "0x6000520")]
	[Address(RVA = "0x843C6C", Offset = "0x843C6C", VA = "0x843C6C")]
	private void ClampHitPoints()
	{
	}

	[Token(Token = "0x6000521")]
	[Address(RVA = "0x844ADC", Offset = "0x844ADC", VA = "0x844ADC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000522")]
	[Address(RVA = "0x844B44", Offset = "0x844B44", VA = "0x844B44")]
	public HealthBar()
	{
	}
}
[Token(Token = "0x20000AD")]
public class HitZone : MonoBehaviour, IProjectileHit
{
	[Token(Token = "0x400046B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float _initialHitPoints;

	[Token(Token = "0x400046C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private bool _canBeDestroyed;

	[Token(Token = "0x400046D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private HealthBar _owner;

	[Token(Token = "0x400046E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private List<Transform> _destroyedSpawnPrefab;

	[Token(Token = "0x400046F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private List<Transform> _destroyedDisable;

	[Token(Token = "0x4000470")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private List<Transform> _destroyedEnable;

	[Token(Token = "0x4000471")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float _hitPoints;

	[Token(Token = "0x4000472")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private bool _destroyed;

	[Token(Token = "0x4000473")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private LifetimeObjectManager _lifetimeObjectManager;

	[Token(Token = "0x6000524")]
	[Address(RVA = "0x848D68", Offset = "0x848D68", VA = "0x848D68")]
	private void Start()
	{
	}

	[Token(Token = "0x6000525")]
	[Address(RVA = "0x848DE4", Offset = "0x848DE4", VA = "0x848DE4")]
	public void DestroyPart()
	{
	}

	[Token(Token = "0x6000526")]
	[Address(RVA = "0x849234", Offset = "0x849234", VA = "0x849234")]
	public void ApplyDamage(float hp, Transform source)
	{
	}

	[Token(Token = "0x6000527")]
	[Address(RVA = "0x84932C", Offset = "0x84932C", VA = "0x84932C", Slot = "4")]
	public bool OnProjectileHit(Projectile projectile)
	{
		return default(bool);
	}

	[Token(Token = "0x6000528")]
	[Address(RVA = "0x8493AC", Offset = "0x8493AC", VA = "0x8493AC")]
	public HitZone()
	{
	}
}
[Token(Token = "0x20000AE")]
public class PlayerPatrolPoint : MonoBehaviour
{
	[Token(Token = "0x6000529")]
	[Address(RVA = "0x8DA024", Offset = "0x8DA024", VA = "0x8DA024")]
	public PlayerPatrolPoint()
	{
	}
}
[Token(Token = "0x20000AF")]
public class PlayerWeaponFire : MonoBehaviour
{
	[Token(Token = "0x200057A")]
	private enum Hand
	{
		[Token(Token = "0x40024FC")]
		Left,
		[Token(Token = "0x40024FD")]
		Right
	}

	[Serializable]
	[Token(Token = "0x200057B")]
	public class WeaponParams
	{
		[Token(Token = "0x40024FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool _buttonHold;

		[Token(Token = "0x40024FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float _reloadDelay;

		[Token(Token = "0x4002500")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float _overheatIncrement;

		[Token(Token = "0x4002501")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float _cooldownRate;

		[Token(Token = "0x4002502")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float _overheatCooldownRate;

		[Token(Token = "0x4002503")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float _accuracy;

		[Token(Token = "0x4002504")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform _projectilePrefab;

		[Token(Token = "0x4002505")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform _overheatPrefab;

		[Token(Token = "0x6002A01")]
		[Address(RVA = "0x8DB490", Offset = "0x8DB490", VA = "0x8DB490")]
		public WeaponParams()
		{
		}
	}

	[Token(Token = "0x4000474")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static PlayerWeaponFire _instance;

	[Token(Token = "0x4000475")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private VRTK_ControllerEvents.ButtonAlias _fireButton;

	[Token(Token = "0x4000476")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private Hand _hand;

	[Token(Token = "0x4000477")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Image _overheatBar;

	[Token(Token = "0x4000478")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float _overheatBarSize;

	[Token(Token = "0x4000479")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private WeaponParams _defaultWeapon;

	[Token(Token = "0x400047A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private SoundEffect _overheatSoundName;

	[Token(Token = "0x400047B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private SoundEffect _cooledDownSoundName;

	[Token(Token = "0x400047C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private WeaponParams _currentWeapon;

	[Token(Token = "0x400047D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float _bonusWeaponTimer;

	[Token(Token = "0x400047E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private bool _overheated;

	[Token(Token = "0x400047F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float _reloadTimer;

	[Token(Token = "0x4000480")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float _heatLevel;

	[Token(Token = "0x4000481")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool _prevFireButtonPressed;

	[Token(Token = "0x4000482")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private LifetimeObjectManager _lifetimeObjectManager;

	[Token(Token = "0x17000083")]
	public static PlayerWeaponFire instance
	{
		[Token(Token = "0x600052A")]
		[Address(RVA = "0x8DAABC", Offset = "0x8DAABC", VA = "0x8DAABC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600052B")]
	[Address(RVA = "0x8DAB0C", Offset = "0x8DAB0C", VA = "0x8DAB0C")]
	private void Start()
	{
	}

	[Token(Token = "0x600052C")]
	[Address(RVA = "0x8DAB9C", Offset = "0x8DAB9C", VA = "0x8DAB9C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600052D")]
	[Address(RVA = "0x8DABEC", Offset = "0x8DABEC", VA = "0x8DABEC")]
	private void Update()
	{
	}

	[Token(Token = "0x600052E")]
	[Address(RVA = "0x8DAF2C", Offset = "0x8DAF2C", VA = "0x8DAF2C")]
	private void FirePressed()
	{
	}

	[Token(Token = "0x600052F")]
	[Address(RVA = "0x8DAFDC", Offset = "0x8DAFDC", VA = "0x8DAFDC")]
	private void FireWeapon()
	{
	}

	[Token(Token = "0x6000530")]
	[Address(RVA = "0x8DB470", Offset = "0x8DB470", VA = "0x8DB470")]
	public void SetWeaponBonus(WeaponParams weaponParams, float bonusTime)
	{
	}

	[Token(Token = "0x6000531")]
	[Address(RVA = "0x8DB47C", Offset = "0x8DB47C", VA = "0x8DB47C")]
	public PlayerWeaponFire()
	{
	}
}
[Token(Token = "0x20000B0")]
public class SmoothedCrosshair : MonoBehaviour
{
	[Token(Token = "0x4000483")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float _distance;

	[Token(Token = "0x4000484")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float _minDisplayDistance;

	[Token(Token = "0x4000485")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float _maxScanDistance;

	[Token(Token = "0x4000486")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private float _crosshairSize;

	[Token(Token = "0x4000487")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float _rotateLag;

	[Token(Token = "0x4000488")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private bool _lagEnable;

	[Token(Token = "0x4000489")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
	[SerializeField]
	private bool _useRaycastScan;

	[Token(Token = "0x400048A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E")]
	[SerializeField]
	private bool _useScanMask;

	[Token(Token = "0x400048B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private LayerMask _scanMask;

	[Token(Token = "0x400048C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Transform _uiRoot;

	[Token(Token = "0x400048D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private float m_smoothing;

	[Token(Token = "0x400048E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Quaternion _prevRotation;

	[Token(Token = "0x6000532")]
	[Address(RVA = "0x8663E8", Offset = "0x8663E8", VA = "0x8663E8")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000533")]
	[Address(RVA = "0x866AB0", Offset = "0x866AB0", VA = "0x866AB0")]
	public SmoothedCrosshair()
	{
	}
}
[Token(Token = "0x20000B1")]
public class SimonSaysGame : MonoBehaviour, Interaction
{
	[Token(Token = "0x200057C")]
	public delegate void CompleteDelegate();

	[Token(Token = "0x200057D")]
	private enum State
	{
		[Token(Token = "0x4002507")]
		RoundStart,
		[Token(Token = "0x4002508")]
		Highlight,
		[Token(Token = "0x4002509")]
		Gameplay,
		[Token(Token = "0x400250A")]
		RoundSuccess,
		[Token(Token = "0x400250B")]
		RoundFailed,
		[Token(Token = "0x400250C")]
		GameFinished
	}

	[Serializable]
	[Token(Token = "0x200057E")]
	private struct Control
	{
		[Token(Token = "0x400250D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public GameObject _interaction;
	}

	[Serializable]
	[Token(Token = "0x200057F")]
	private struct ControlSet
	{
		[Token(Token = "0x400250E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public List<Control> _control;
	}

	[Serializable]
	[Token(Token = "0x2000580")]
	private class Round
	{
		[Token(Token = "0x400250F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x664464", Offset = "0x664464")]
		[SerializeField]
		public PlayableDirector startTimeline;

		[Token(Token = "0x4002510")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6644B0", Offset = "0x6644B0")]
		[SerializeField]
		public int numControls;

		[Token(Token = "0x4002511")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6644FC", Offset = "0x6644FC")]
		[SerializeField]
		public bool highlightsRemainDuringGameplay;

		[Token(Token = "0x4002512")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x664548", Offset = "0x664548")]
		[SerializeField]
		public bool highlightsRemainDuringInstruction;

		[Token(Token = "0x4002513")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x664594", Offset = "0x664594")]
		[SerializeField]
		public bool ordered;

		[Token(Token = "0x4002514")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6645E0", Offset = "0x6645E0")]
		[SerializeField]
		public bool uniqueControls;

		[Token(Token = "0x4002515")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x66462C", Offset = "0x66462C")]
		[SerializeField]
		public bool wrongControlFailsRound;

		[Token(Token = "0x4002516")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x664678", Offset = "0x664678")]
		[SerializeField]
		public bool keepPreviousRoundList;

		[Token(Token = "0x4002517")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6646C4", Offset = "0x6646C4")]
		[SerializeField]
		public int showOnlyFinalNControls;

		[Token(Token = "0x4002518")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x664710", Offset = "0x664710")]
		[SerializeField]
		public int finalControlIndex;

		[Token(Token = "0x4002519")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x66475C", Offset = "0x66475C")]
		[SerializeField]
		public int ignoreRandomControl;

		[Token(Token = "0x400251A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6647A8", Offset = "0x6647A8")]
		[SerializeField]
		public float timeLimit;

		[Token(Token = "0x400251B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6647F4", Offset = "0x6647F4")]
		[SerializeField]
		public float highlightShowTime;

		[Token(Token = "0x400251C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x664840", Offset = "0x664840")]
		[SerializeField]
		public PlayableDirector successTimeline;

		[Token(Token = "0x400251D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x66488C", Offset = "0x66488C")]
		[SerializeField]
		public PlayableDirector failTimeline;

		[Token(Token = "0x6002A06")]
		[Address(RVA = "0x86511C", Offset = "0x86511C", VA = "0x86511C")]
		public Round()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000581")]
	private class Game
	{
		[Token(Token = "0x400251E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		public string name;

		[Token(Token = "0x400251F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public List<Round> _round;

		[Token(Token = "0x4002520")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6648F8", Offset = "0x6648F8")]
		[SerializeField]
		public bool restartRoundOnFail;

		[Token(Token = "0x6002A07")]
		[Address(RVA = "0x865114", Offset = "0x865114", VA = "0x865114")]
		public Game()
		{
		}
	}

	[Token(Token = "0x2000582")]
	private delegate void TimelineDel(PlayableDirector dir);

	[Token(Token = "0x2000583")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x643F48", Offset = "0x643F48")]
	private sealed class <PlayHighlightsImpl>d__47 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002521")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002522")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002523")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SimonSaysGame <>4__this;

		[Token(Token = "0x4002524")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public CompleteDelegate complete;

		[Token(Token = "0x4002525")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int <r>5__2;

		[Token(Token = "0x4002526")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Transform <obj>5__3;

		[Token(Token = "0x17000245")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002A0F")]
			[Address(RVA = "0x863EE4", Offset = "0x863EE4", VA = "0x863EE4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000246")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002A11")]
			[Address(RVA = "0x863F54", Offset = "0x863F54", VA = "0x863F54", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002A0C")]
		[Address(RVA = "0x862E78", Offset = "0x862E78", VA = "0x862E78")]
		[DebuggerHidden]
		public <PlayHighlightsImpl>d__47(int <>1__state)
		{
		}

		[Token(Token = "0x6002A0D")]
		[Address(RVA = "0x8639C0", Offset = "0x8639C0", VA = "0x8639C0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002A0E")]
		[Address(RVA = "0x8639C4", Offset = "0x8639C4", VA = "0x8639C4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002A10")]
		[Address(RVA = "0x863EEC", Offset = "0x863EEC", VA = "0x863EEC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000584")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x643F58", Offset = "0x643F58")]
	private sealed class <>c
	{
		[Token(Token = "0x4002527")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4002528")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action<Transform> <>9__48_0;

		[Token(Token = "0x6002A13")]
		[Address(RVA = "0x86384C", Offset = "0x86384C", VA = "0x86384C")]
		public <>c()
		{
		}

		[Token(Token = "0x6002A14")]
		[Address(RVA = "0x863854", Offset = "0x863854", VA = "0x863854")]
		internal void <DestroyAllHighlights>b__48_0(Transform tr)
		{
		}
	}

	[Token(Token = "0x2000585")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x643F68", Offset = "0x643F68")]
	private sealed class <>c__DisplayClass51_0
	{
		[Token(Token = "0x4002529")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public CompleteDelegate complete;

		[Token(Token = "0x400252A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PlayableDirector timeline;

		[Token(Token = "0x400252B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TimelineDel del;

		[Token(Token = "0x6002A15")]
		[Address(RVA = "0x863914", Offset = "0x863914", VA = "0x863914")]
		public <>c__DisplayClass51_0()
		{
		}

		[Token(Token = "0x6002A16")]
		[Address(RVA = "0x86391C", Offset = "0x86391C", VA = "0x86391C")]
		internal void <PlayTimelineImpl>b__0(PlayableDirector dir)
		{
		}
	}

	[Token(Token = "0x2000586")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x643F78", Offset = "0x643F78")]
	private sealed class <PlayTimelineImpl>d__51 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400252C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400252D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400252E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CompleteDelegate complete;

		[Token(Token = "0x400252F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public PlayableDirector timeline;

		[Token(Token = "0x17000247")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002A1A")]
			[Address(RVA = "0x864134", Offset = "0x864134", VA = "0x864134", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000248")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002A1C")]
			[Address(RVA = "0x8641A4", Offset = "0x8641A4", VA = "0x8641A4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002A17")]
		[Address(RVA = "0x86333C", Offset = "0x86333C", VA = "0x86333C")]
		[DebuggerHidden]
		public <PlayTimelineImpl>d__51(int <>1__state)
		{
		}

		[Token(Token = "0x6002A18")]
		[Address(RVA = "0x863F5C", Offset = "0x863F5C", VA = "0x863F5C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002A19")]
		[Address(RVA = "0x863F60", Offset = "0x863F60", VA = "0x863F60", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002A1B")]
		[Address(RVA = "0x86413C", Offset = "0x86413C", VA = "0x86413C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000587")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x643F88", Offset = "0x643F88")]
	private sealed class <ProcessGameplayImpl>d__56 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002530")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002531")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002532")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SimonSaysGame <>4__this;

		[Token(Token = "0x4002533")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public CompleteDelegate success;

		[Token(Token = "0x4002534")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public CompleteDelegate failure;

		[Token(Token = "0x4002535")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool[] <controlComplete>5__2;

		[Token(Token = "0x4002536")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float <startTime>5__3;

		[Token(Token = "0x4002537")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private bool <roundComplete>5__4;

		[Token(Token = "0x4002538")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int <completedIndex>5__5;

		[Token(Token = "0x4002539")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private bool <failedControl>5__6;

		[Token(Token = "0x17000249")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002A20")]
			[Address(RVA = "0x86505C", Offset = "0x86505C", VA = "0x86505C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700024A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002A22")]
			[Address(RVA = "0x8650CC", Offset = "0x8650CC", VA = "0x8650CC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002A1D")]
		[Address(RVA = "0x863628", Offset = "0x863628", VA = "0x863628")]
		[DebuggerHidden]
		public <ProcessGameplayImpl>d__56(int <>1__state)
		{
		}

		[Token(Token = "0x6002A1E")]
		[Address(RVA = "0x8641AC", Offset = "0x8641AC", VA = "0x8641AC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002A1F")]
		[Address(RVA = "0x8641B0", Offset = "0x8641B0", VA = "0x8641B0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002A21")]
		[Address(RVA = "0x865064", Offset = "0x865064", VA = "0x865064", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400048F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private List<ControlSet> _controlSet;

	[Token(Token = "0x4000490")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private List<Game> _game;

	[Token(Token = "0x4000491")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private string _gameToPlay;

	[Token(Token = "0x4000492")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Transform _highlightPrefab;

	[Token(Token = "0x4000493")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private string _failureCountStateName;

	[Token(Token = "0x4000494")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[ObsoleteField]
	[SerializeField]
	private AudioClip _correctControlAudioClip;

	[Token(Token = "0x4000495")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private SoundEffect _correctControlSoundEffectName;

	[Token(Token = "0x4000496")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<int> _roundControl;

	[Token(Token = "0x4000497")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private List<Transform> _currentHighlights;

	[Token(Token = "0x4000498")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private Text _timeLimitElement;

	[Token(Token = "0x4000499")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private PlayableDirector _timeLimitTimeline;

	[Token(Token = "0x400049A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private State _state;

	[Token(Token = "0x400049B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private ControlSet _currentControlSet;

	[Token(Token = "0x400049C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Round _currentRound;

	[Token(Token = "0x400049D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private int _currentRoundNumber;

	[Token(Token = "0x400049E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Game _currentGame;

	[Token(Token = "0x400049F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private bool _complete;

	[Token(Token = "0x17000084")]
	public bool isInteractionComplete
	{
		[Token(Token = "0x6000534")]
		[Address(RVA = "0x8616F8", Offset = "0x8616F8", VA = "0x8616F8", Slot = "8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000085")]
	public bool interactionProgressing
	{
		[Token(Token = "0x6000535")]
		[Address(RVA = "0x861700", Offset = "0x861700", VA = "0x861700", Slot = "13")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1400003C")]
	public event InteractionCompleteEventHandler onInteractionComplete
	{
		[Token(Token = "0x6000536")]
		[Address(RVA = "0x861708", Offset = "0x861708", VA = "0x861708", Slot = "4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6681F0", Offset = "0x6681F0")]
		add
		{
		}
		[Token(Token = "0x6000537")]
		[Address(RVA = "0x8617F4", Offset = "0x8617F4", VA = "0x8617F4", Slot = "5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x668200", Offset = "0x668200")]
		remove
		{
		}
	}

	[Token(Token = "0x1400003D")]
	public event InteractionCompleteEventHandler onInteractionUncomplete
	{
		[Token(Token = "0x6000538")]
		[Address(RVA = "0x8618E0", Offset = "0x8618E0", VA = "0x8618E0", Slot = "6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x668210", Offset = "0x668210")]
		add
		{
		}
		[Token(Token = "0x6000539")]
		[Address(RVA = "0x8619CC", Offset = "0x8619CC", VA = "0x8619CC", Slot = "7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x668220", Offset = "0x668220")]
		remove
		{
		}
	}

	[Token(Token = "0x1400003E")]
	public event InteractionCompleteEventHandler onInteractionProgressStart
	{
		[Token(Token = "0x600053A")]
		[Address(RVA = "0x861AB8", Offset = "0x861AB8", VA = "0x861AB8", Slot = "9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x668230", Offset = "0x668230")]
		add
		{
		}
		[Token(Token = "0x600053B")]
		[Address(RVA = "0x861BA4", Offset = "0x861BA4", VA = "0x861BA4", Slot = "10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x668240", Offset = "0x668240")]
		remove
		{
		}
	}

	[Token(Token = "0x1400003F")]
	public event InteractionCompleteEventHandler onInteractionProgressStop
	{
		[Token(Token = "0x600053C")]
		[Address(RVA = "0x861C90", Offset = "0x861C90", VA = "0x861C90", Slot = "11")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x668250", Offset = "0x668250")]
		add
		{
		}
		[Token(Token = "0x600053D")]
		[Address(RVA = "0x861D7C", Offset = "0x861D7C", VA = "0x861D7C", Slot = "12")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x668260", Offset = "0x668260")]
		remove
		{
		}
	}

	[Token(Token = "0x600053E")]
	[Address(RVA = "0x861E68", Offset = "0x861E68", VA = "0x861E68")]
	public void Start()
	{
	}

	[Token(Token = "0x600053F")]
	[Address(RVA = "0x8623C4", Offset = "0x8623C4", VA = "0x8623C4")]
	private void SetState(State newState)
	{
	}

	[Token(Token = "0x6000540")]
	[Address(RVA = "0x862AD8", Offset = "0x862AD8", VA = "0x862AD8")]
	private void SetGameComplete()
	{
	}

	[Token(Token = "0x6000541")]
	[Address(RVA = "0x8629C4", Offset = "0x8629C4", VA = "0x8629C4")]
	private void AddFailureCount()
	{
	}

	[Token(Token = "0x6000542")]
	[Address(RVA = "0x862B00", Offset = "0x862B00", VA = "0x862B00")]
	private bool IsFinalRound()
	{
		return default(bool);
	}

	[Token(Token = "0x6000543")]
	[Address(RVA = "0x862B8C", Offset = "0x862B8C", VA = "0x862B8C")]
	private void ResetControls()
	{
	}

	[Token(Token = "0x6000544")]
	[Address(RVA = "0x861FB0", Offset = "0x861FB0", VA = "0x861FB0")]
	private void CreateNextRound()
	{
	}

	[Token(Token = "0x6000545")]
	[Address(RVA = "0x862868", Offset = "0x862868", VA = "0x862868")]
	private void PlayControlHighlights(CompleteDelegate complete)
	{
	}

	[Token(Token = "0x6000546")]
	[Address(RVA = "0x862DE0", Offset = "0x862DE0", VA = "0x862DE0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x668270", Offset = "0x668270")]
	private IEnumerator PlayHighlightsImpl(CompleteDelegate complete)
	{
		return null;
	}

	[Token(Token = "0x6000547")]
	[Address(RVA = "0x8628C0", Offset = "0x8628C0", VA = "0x8628C0")]
	private void DestroyAllHighlights()
	{
	}

	[Token(Token = "0x6000548")]
	[Address(RVA = "0x8627AC", Offset = "0x8627AC", VA = "0x8627AC")]
	private void PlayTimeline(PlayableDirector timeline, CompleteDelegate complete)
	{
	}

	[Token(Token = "0x6000549")]
	[Address(RVA = "0x862EA4", Offset = "0x862EA4", VA = "0x862EA4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6682D4", Offset = "0x6682D4")]
	private IEnumerator PlayTimelineImpl(PlayableDirector timeline, CompleteDelegate complete)
	{
		return null;
	}

	[Token(Token = "0x600054A")]
	[Address(RVA = "0x862894", Offset = "0x862894", VA = "0x862894")]
	private void ProcessGameplay(CompleteDelegate success, CompleteDelegate failure)
	{
	}

	[Token(Token = "0x600054B")]
	[Address(RVA = "0x863414", Offset = "0x863414", VA = "0x863414")]
	private GameObject GetControlObject(int idx)
	{
		return null;
	}

	[Token(Token = "0x600054C")]
	[Address(RVA = "0x862648", Offset = "0x862648", VA = "0x862648")]
	private void SetControlsLock(bool en)
	{
	}

	[Token(Token = "0x600054D")]
	[Address(RVA = "0x863484", Offset = "0x863484", VA = "0x863484")]
	private void PlayCorrectControlSound()
	{
	}

	[Token(Token = "0x600054E")]
	[Address(RVA = "0x863368", Offset = "0x863368", VA = "0x863368")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x668338", Offset = "0x668338")]
	private IEnumerator ProcessGameplayImpl(CompleteDelegate success, CompleteDelegate failure)
	{
		return null;
	}

	[Token(Token = "0x600054F")]
	[Address(RVA = "0x863654", Offset = "0x863654", VA = "0x863654", Slot = "14")]
	private void Interaction.Reset()
	{
	}

	[Token(Token = "0x6000550")]
	[Address(RVA = "0x863658", Offset = "0x863658", VA = "0x863658")]
	public SimonSaysGame()
	{
	}

	[Token(Token = "0x6000551")]
	[Address(RVA = "0x863660", Offset = "0x863660", VA = "0x863660")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66839C", Offset = "0x66839C")]
	private bool <Start>b__39_0(Game item)
	{
		return default(bool);
	}

	[Token(Token = "0x6000552")]
	[Address(RVA = "0x863698", Offset = "0x863698", VA = "0x863698")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6683AC", Offset = "0x6683AC")]
	private void <SetState>b__40_0()
	{
	}

	[Token(Token = "0x6000553")]
	[Address(RVA = "0x8636A0", Offset = "0x8636A0", VA = "0x8636A0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6683BC", Offset = "0x6683BC")]
	private void <SetState>b__40_1()
	{
	}

	[Token(Token = "0x6000554")]
	[Address(RVA = "0x8636A8", Offset = "0x8636A8", VA = "0x8636A8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6683CC", Offset = "0x6683CC")]
	private void <SetState>b__40_2()
	{
	}

	[Token(Token = "0x6000555")]
	[Address(RVA = "0x8636B0", Offset = "0x8636B0", VA = "0x8636B0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6683DC", Offset = "0x6683DC")]
	private void <SetState>b__40_3()
	{
	}

	[Token(Token = "0x6000556")]
	[Address(RVA = "0x8636B8", Offset = "0x8636B8", VA = "0x8636B8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6683EC", Offset = "0x6683EC")]
	private void <SetState>b__40_4()
	{
	}

	[Token(Token = "0x6000557")]
	[Address(RVA = "0x86374C", Offset = "0x86374C", VA = "0x86374C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6683FC", Offset = "0x6683FC")]
	private void <SetState>b__40_5()
	{
	}
}
[Token(Token = "0x20000B2")]
public class SimonSaysGameCustomHighlight : MonoBehaviour
{
	[Token(Token = "0x40004A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform _prefab;

	[Token(Token = "0x40004A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Transform m_targetOverride;

	[Token(Token = "0x17000086")]
	public Transform prefab
	{
		[Token(Token = "0x6000558")]
		[Address(RVA = "0x863ED4", Offset = "0x863ED4", VA = "0x863ED4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000087")]
	public Transform TargetOverride
	{
		[Token(Token = "0x6000559")]
		[Address(RVA = "0x863EDC", Offset = "0x863EDC", VA = "0x863EDC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600055A")]
	[Address(RVA = "0x865890", Offset = "0x865890", VA = "0x865890")]
	public SimonSaysGameCustomHighlight()
	{
	}
}
[Token(Token = "0x20000B3")]
public class StealthActivateOnCollision : MonoBehaviour
{
	[Token(Token = "0x40004A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float _minimumCollisionForce;

	[Token(Token = "0x40004A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float _activationTime;

	[Token(Token = "0x40004A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float _minSpeed;

	[Token(Token = "0x40004A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private StealthObject _stealthObject;

	[Token(Token = "0x40004AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float _attractTimer;

	[Token(Token = "0x40004AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float _lifeTimer;

	[Token(Token = "0x40004AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Rigidbody _rigidBody;

	[Token(Token = "0x600055B")]
	[Address(RVA = "0x871F84", Offset = "0x871F84", VA = "0x871F84")]
	private void Start()
	{
	}

	[Token(Token = "0x600055C")]
	[Address(RVA = "0x87200C", Offset = "0x87200C", VA = "0x87200C")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x600055D")]
	[Address(RVA = "0x87208C", Offset = "0x87208C", VA = "0x87208C")]
	private void StartAttract()
	{
	}

	[Token(Token = "0x600055E")]
	[Address(RVA = "0x8720CC", Offset = "0x8720CC", VA = "0x8720CC")]
	private void Update()
	{
	}

	[Token(Token = "0x600055F")]
	[Address(RVA = "0x8721A4", Offset = "0x8721A4", VA = "0x8721A4")]
	public StealthActivateOnCollision()
	{
	}
}
[Token(Token = "0x20000B4")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x63D660", Offset = "0x63D660")]
public class StealthAgent : MonoBehaviour, IDamageable, IPacedAttacker
{
	[Token(Token = "0x2000588")]
	private enum State
	{
		[Token(Token = "0x400253B")]
		Patrol,
		[Token(Token = "0x400253C")]
		Investigate,
		[Token(Token = "0x400253D")]
		Chase
	}

	[Token(Token = "0x2000589")]
	private enum BehaviourType
	{
		[Token(Token = "0x400253F")]
		Stealth,
		[Token(Token = "0x4002540")]
		Shooter
	}

	[Serializable]
	[Token(Token = "0x200058A")]
	private struct PatrolParameters
	{
		[Token(Token = "0x4002541")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string _stateTriggerName;

		[Token(Token = "0x4002542")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float _movementSpeed;

		[Token(Token = "0x4002543")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform _objectEnable;

		[Token(Token = "0x4002544")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "ColorUsageAttribute", RVA = "0x664944", Offset = "0x664944")]
		public Color _eyeColour;

		[Token(Token = "0x4002545")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<string> _idleDialogueLine;

		[Token(Token = "0x4002546")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float _idleDialogueFrequencyMin;

		[Token(Token = "0x4002547")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float _idleDialogueFrequencyMax;
	}

	[Serializable]
	[Token(Token = "0x200058B")]
	private struct InvestigateParameters
	{
		[Token(Token = "0x4002548")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string _stateTriggerName;

		[Token(Token = "0x4002549")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string _scanTriggerName;

		[Token(Token = "0x400254A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform _objectEnable;

		[Token(Token = "0x400254B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "ColorUsageAttribute", RVA = "0x66496C", Offset = "0x66496C")]
		public Color _eyeColour;

		[Token(Token = "0x400254C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float _movementSpeed;

		[Token(Token = "0x400254D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float _investigateTime;

		[Token(Token = "0x400254E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float _transitionToChaseTime;

		[Token(Token = "0x400254F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float _staticTurnSpeed;

		[Token(Token = "0x4002550")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public List<string> _investigateDialogueLine;

		[Token(Token = "0x4002551")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public List<string> _scanStartDialogueLine;

		[Token(Token = "0x4002552")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public List<string> _scanFinishDialogueLine;
	}

	[Serializable]
	[Token(Token = "0x200058C")]
	private struct ChaseParameters
	{
		[Token(Token = "0x4002553")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string _stateTriggerName;

		[Token(Token = "0x4002554")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string _sightedTargetTriggerName;

		[Token(Token = "0x4002555")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string _lostTargetTriggerName;

		[Token(Token = "0x4002556")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform _objectEnable;

		[Token(Token = "0x4002557")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "ColorUsageAttribute", RVA = "0x664994", Offset = "0x664994")]
		public Color _eyeColour;

		[Token(Token = "0x4002558")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float _movementSpeed;

		[Token(Token = "0x4002559")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float _minimumDistance;

		[Token(Token = "0x400255A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float _loseTargetTime;

		[Token(Token = "0x400255B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float _firingStartTime;

		[Token(Token = "0x400255C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float _firingRepeatTime;

		[Token(Token = "0x400255D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float _maxFiringAngle;

		[Token(Token = "0x400255E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float _firingRotateSpeed;

		[Token(Token = "0x400255F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float _alertAgentGroupTime;

		[Token(Token = "0x4002560")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public List<string> _startChaseDialogueLine;

		[Token(Token = "0x4002561")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public List<string> _sightedTargetDialogueLine;

		[Token(Token = "0x4002562")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public List<string> _lostTargetDialogueLine;

		[Token(Token = "0x4002563")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public List<string> _endChaseDialogueLine;

		[Token(Token = "0x4002564")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public List<string> _sightedTargetIdle;

		[Token(Token = "0x4002565")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public List<string> _lostTargetIdle;

		[Token(Token = "0x4002566")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public float _idleDialogueFrequencyMin;

		[Token(Token = "0x4002567")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public float _idleDialogueFrequencyMax;
	}

	[Serializable]
	[Token(Token = "0x200058D")]
	private struct ShooterChaseParameters
	{
		[Token(Token = "0x4002568")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string _stateTriggerName;

		[Token(Token = "0x4002569")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float _movementSpeed;

		[Token(Token = "0x400256A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float _firingMinDistance;

		[Token(Token = "0x400256B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float _firingMaxDistance;

		[Token(Token = "0x400256C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float _firingRepeatTime;

		[Token(Token = "0x400256D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float _firingAccuracy;

		[Token(Token = "0x400256E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float _alertAgentGroupTime;

		[Token(Token = "0x400256F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FiringPattern _firingPattern;

		[Token(Token = "0x4002570")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "ColorUsageAttribute", RVA = "0x6649BC", Offset = "0x6649BC")]
		public Color _eyeColour;

		[Token(Token = "0x4002571")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float _maxFiringAngle;

		[Token(Token = "0x4002572")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float _firingRotateSpeed;

		[Token(Token = "0x4002573")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public bool _followPathWhenAttacking;

		[Token(Token = "0x4002574")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public List<string> _idleDialogueLine;

		[Token(Token = "0x4002575")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float _idleDialogueFrequencyMin;

		[Token(Token = "0x4002576")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public float _idleDialogueFrequencyMax;

		[Token(Token = "0x4002577")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public List<string> _damagedDialogueLine;

		[Token(Token = "0x4002578")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public float _chanceToTalkWhenDamagedPerHp;

		[Token(Token = "0x4002579")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public List<string> _destroyedDialogueLine;

		[Token(Token = "0x400257A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public float _chanceToTalkWhenDestroyed;
	}

	[Serializable]
	[Token(Token = "0x200058E")]
	public struct FiringPattern
	{
		[Token(Token = "0x400257B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private float[] _entry;

		[Token(Token = "0x400257C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private float _time;

		[Token(Token = "0x400257D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private float _stepTime;

		[Token(Token = "0x400257E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int _index;

		[Token(Token = "0x6002A23")]
		[Address(RVA = "0x6E1380", Offset = "0x6E1380", VA = "0x6E1380")]
		public void Reset()
		{
		}

		[Token(Token = "0x6002A24")]
		[Address(RVA = "0x6E1388", Offset = "0x6E1388", VA = "0x6E1388")]
		public bool ShouldFire()
		{
			return default(bool);
		}
	}

	[Serializable]
	[Token(Token = "0x200058F")]
	private struct DeadParameters
	{
		[Token(Token = "0x400257F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string _stateTriggerName;
	}

	[Token(Token = "0x2000590")]
	private interface AgentState
	{
		[Token(Token = "0x1700024B")]
		string description
		{
			[Token(Token = "0x6002A2C")]
			get;
		}

		[Token(Token = "0x1700024C")]
		StealthObject currentTarget
		{
			[Token(Token = "0x6002A2D")]
			get;
		}

		[Token(Token = "0x1700024D")]
		StealthAgentGroup.AlertLevel alertLevel
		{
			[Token(Token = "0x6002A2E")]
			get;
		}

		[Token(Token = "0x6002A25")]
		void Init(StealthAgent agent);

		[Token(Token = "0x6002A26")]
		void Enter();

		[Token(Token = "0x6002A27")]
		void Exit();

		[Token(Token = "0x6002A28")]
		void Damaged(float hp);

		[Token(Token = "0x6002A29")]
		void Destroyed();

		[Token(Token = "0x6002A2A")]
		void Update();

		[Token(Token = "0x6002A2B")]
		void OnDrawGizmos();
	}

	[Token(Token = "0x2000591")]
	private class PatrolState : AgentState
	{
		[Token(Token = "0x4002580")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private StealthAgent _agent;

		[Token(Token = "0x4002581")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private StealthPatrolPath _path;

		[Token(Token = "0x4002582")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private StealthPatrolPoint _currentPoint;

		[Token(Token = "0x4002583")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int _pathIndex;

		[Token(Token = "0x4002584")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private PatrolParameters _param;

		[Token(Token = "0x4002585")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float _pauseTimer;

		[Token(Token = "0x1700024E")]
		public string description
		{
			[Token(Token = "0x6002A31")]
			[Address(RVA = "0x91710C", Offset = "0x91710C", VA = "0x91710C", Slot = "11")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700024F")]
		public StealthObject currentTarget
		{
			[Token(Token = "0x6002A37")]
			[Address(RVA = "0x917A04", Offset = "0x917A04", VA = "0x917A04", Slot = "12")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000250")]
		public StealthAgentGroup.AlertLevel alertLevel
		{
			[Token(Token = "0x6002A38")]
			[Address(RVA = "0x917A0C", Offset = "0x917A0C", VA = "0x917A0C", Slot = "13")]
			get
			{
				return default(StealthAgentGroup.AlertLevel);
			}
		}

		[Token(Token = "0x6002A2F")]
		[Address(RVA = "0x9170B0", Offset = "0x9170B0", VA = "0x9170B0")]
		public PatrolState(StealthPatrolPath path, PatrolParameters param)
		{
		}

		[Token(Token = "0x6002A30")]
		[Address(RVA = "0x917100", Offset = "0x917100", VA = "0x917100", Slot = "4")]
		public void Init(StealthAgent agent)
		{
		}

		[Token(Token = "0x6002A32")]
		[Address(RVA = "0x91718C", Offset = "0x91718C", VA = "0x91718C", Slot = "5")]
		public void Enter()
		{
		}

		[Token(Token = "0x6002A33")]
		[Address(RVA = "0x91746C", Offset = "0x91746C", VA = "0x91746C", Slot = "6")]
		public void Exit()
		{
		}

		[Token(Token = "0x6002A34")]
		[Address(RVA = "0x91751C", Offset = "0x91751C", VA = "0x91751C", Slot = "9")]
		public void Update()
		{
		}

		[Token(Token = "0x6002A35")]
		[Address(RVA = "0x9172F8", Offset = "0x9172F8", VA = "0x9172F8")]
		public void NextPoint()
		{
		}

		[Token(Token = "0x6002A36")]
		[Address(RVA = "0x917A00", Offset = "0x917A00", VA = "0x917A00", Slot = "10")]
		public void OnDrawGizmos()
		{
		}

		[Token(Token = "0x6002A39")]
		[Address(RVA = "0x917A14", Offset = "0x917A14", VA = "0x917A14", Slot = "7")]
		public void Damaged(float hp)
		{
		}

		[Token(Token = "0x6002A3A")]
		[Address(RVA = "0x917A18", Offset = "0x917A18", VA = "0x917A18", Slot = "8")]
		public void Destroyed()
		{
		}
	}

	[Token(Token = "0x2000592")]
	private class InvestigateState : AgentState
	{
		[Token(Token = "0x4002586")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private StealthAgent _agent;

		[Token(Token = "0x4002587")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private StealthObject _target;

		[Token(Token = "0x4002588")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private InvestigateParameters _param;

		[Token(Token = "0x4002589")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool _scanning;

		[Token(Token = "0x400258A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private float _investigateTimer;

		[Token(Token = "0x400258B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float _stateTimer;

		[Token(Token = "0x400258C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private Vector3 _cachedTargetPosition;

		[Token(Token = "0x17000251")]
		public StealthObject target
		{
			[Token(Token = "0x6002A3B")]
			[Address(RVA = "0x915E20", Offset = "0x915E20", VA = "0x915E20")]
			set
			{
			}
		}

		[Token(Token = "0x17000252")]
		public string description
		{
			[Token(Token = "0x6002A3C")]
			[Address(RVA = "0x915E28", Offset = "0x915E28", VA = "0x915E28", Slot = "11")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000253")]
		public StealthObject currentTarget
		{
			[Token(Token = "0x6002A43")]
			[Address(RVA = "0x91706C", Offset = "0x91706C", VA = "0x91706C", Slot = "12")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000254")]
		public StealthAgentGroup.AlertLevel alertLevel
		{
			[Token(Token = "0x6002A44")]
			[Address(RVA = "0x917074", Offset = "0x917074", VA = "0x917074", Slot = "13")]
			get
			{
				return default(StealthAgentGroup.AlertLevel);
			}
		}

		[Token(Token = "0x6002A3D")]
		[Address(RVA = "0x915EBC", Offset = "0x915EBC", VA = "0x915EBC")]
		public InvestigateState(InvestigateParameters param)
		{
		}

		[Token(Token = "0x6002A3E")]
		[Address(RVA = "0x915EF4", Offset = "0x915EF4", VA = "0x915EF4", Slot = "4")]
		public void Init(StealthAgent agent)
		{
		}

		[Token(Token = "0x6002A3F")]
		[Address(RVA = "0x915EFC", Offset = "0x915EFC", VA = "0x915EFC", Slot = "5")]
		public void Enter()
		{
		}

		[Token(Token = "0x6002A40")]
		[Address(RVA = "0x916124", Offset = "0x916124", VA = "0x916124", Slot = "6")]
		public void Exit()
		{
		}

		[Token(Token = "0x6002A41")]
		[Address(RVA = "0x916248", Offset = "0x916248", VA = "0x916248", Slot = "9")]
		public void Update()
		{
		}

		[Token(Token = "0x6002A42")]
		[Address(RVA = "0x917068", Offset = "0x917068", VA = "0x917068", Slot = "10")]
		public void OnDrawGizmos()
		{
		}

		[Token(Token = "0x6002A45")]
		[Address(RVA = "0x9170A8", Offset = "0x9170A8", VA = "0x9170A8", Slot = "7")]
		public void Damaged(float hp)
		{
		}

		[Token(Token = "0x6002A46")]
		[Address(RVA = "0x9170AC", Offset = "0x9170AC", VA = "0x9170AC", Slot = "8")]
		public void Destroyed()
		{
		}
	}

	[Token(Token = "0x2000593")]
	private class ChaseState : AgentState
	{
		[Token(Token = "0x400258D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private StealthAgent _agent;

		[Token(Token = "0x400258E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private ChaseParameters _param;

		[Token(Token = "0x400258F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private float _targetPathTimer;

		[Token(Token = "0x4002590")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private StealthObject _target;

		[Token(Token = "0x4002591")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private float _pathRefreshTime;

		[Token(Token = "0x4002592")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		private float _lostTargetTimer;

		[Token(Token = "0x4002593")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private float _aimTargetTimer;

		[Token(Token = "0x4002594")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private float _lastFiringTime;

		[Token(Token = "0x4002595")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private int _firingCount;

		[Token(Token = "0x4002596")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private bool _alertedGroup;

		[Token(Token = "0x4002597")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC5")]
		private bool _rotating;

		[Token(Token = "0x17000255")]
		public StealthObject target
		{
			[Token(Token = "0x6002A47")]
			[Address(RVA = "0x873BF4", Offset = "0x873BF4", VA = "0x873BF4")]
			set
			{
			}
		}

		[Token(Token = "0x17000256")]
		public string description
		{
			[Token(Token = "0x6002A48")]
			[Address(RVA = "0x8742DC", Offset = "0x8742DC", VA = "0x8742DC", Slot = "11")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000257")]
		public StealthObject currentTarget
		{
			[Token(Token = "0x6002A4F")]
			[Address(RVA = "0x8750EC", Offset = "0x8750EC", VA = "0x8750EC", Slot = "12")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000258")]
		public StealthAgentGroup.AlertLevel alertLevel
		{
			[Token(Token = "0x6002A51")]
			[Address(RVA = "0x8752F0", Offset = "0x8752F0", VA = "0x8752F0", Slot = "13")]
			get
			{
				return default(StealthAgentGroup.AlertLevel);
			}
		}

		[Token(Token = "0x6002A49")]
		[Address(RVA = "0x8725D0", Offset = "0x8725D0", VA = "0x8725D0")]
		public ChaseState(ChaseParameters param)
		{
		}

		[Token(Token = "0x6002A4A")]
		[Address(RVA = "0x872610", Offset = "0x872610", VA = "0x872610", Slot = "4")]
		public void Init(StealthAgent agent)
		{
		}

		[Token(Token = "0x6002A4B")]
		[Address(RVA = "0x874350", Offset = "0x874350", VA = "0x874350", Slot = "5")]
		public void Enter()
		{
		}

		[Token(Token = "0x6002A4C")]
		[Address(RVA = "0x874C74", Offset = "0x874C74", VA = "0x874C74", Slot = "6")]
		public void Exit()
		{
		}

		[Token(Token = "0x6002A4D")]
		[Address(RVA = "0x874D70", Offset = "0x874D70", VA = "0x874D70", Slot = "9")]
		public void Update()
		{
		}

		[Token(Token = "0x6002A4E")]
		[Address(RVA = "0x874528", Offset = "0x874528", VA = "0x874528")]
		public void UpdateTargetPosition()
		{
		}

		[Token(Token = "0x6002A50")]
		[Address(RVA = "0x8750F4", Offset = "0x8750F4", VA = "0x8750F4", Slot = "10")]
		public void OnDrawGizmos()
		{
		}

		[Token(Token = "0x6002A52")]
		[Address(RVA = "0x875308", Offset = "0x875308", VA = "0x875308", Slot = "7")]
		public void Damaged(float hp)
		{
		}

		[Token(Token = "0x6002A53")]
		[Address(RVA = "0x87530C", Offset = "0x87530C", VA = "0x87530C", Slot = "8")]
		public void Destroyed()
		{
		}
	}

	[Token(Token = "0x2000594")]
	private class ShooterChaseState : AgentState
	{
		[Token(Token = "0x4002598")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private StealthAgent _agent;

		[Token(Token = "0x4002599")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private StealthPatrolPath _path;

		[Token(Token = "0x400259A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int _pathIndex;

		[Token(Token = "0x400259B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private ShooterChaseParameters _param;

		[Token(Token = "0x400259C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private bool _enemyVisible;

		[Token(Token = "0x400259D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private StealthObject _target;

		[Token(Token = "0x400259E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private float _firingRepeatTimer;

		[Token(Token = "0x400259F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private bool _chargeAvailable;

		[Token(Token = "0x40025A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private float _pauseTimer;

		[Token(Token = "0x17000259")]
		public string description
		{
			[Token(Token = "0x6002A56")]
			[Address(RVA = "0x917A70", Offset = "0x917A70", VA = "0x917A70", Slot = "11")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700025A")]
		public StealthObject currentTarget
		{
			[Token(Token = "0x6002A5B")]
			[Address(RVA = "0x918B24", Offset = "0x918B24", VA = "0x918B24", Slot = "12")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700025B")]
		public StealthAgentGroup.AlertLevel alertLevel
		{
			[Token(Token = "0x6002A5D")]
			[Address(RVA = "0x918B30", Offset = "0x918B30", VA = "0x918B30", Slot = "13")]
			get
			{
				return default(StealthAgentGroup.AlertLevel);
			}
		}

		[Token(Token = "0x6002A54")]
		[Address(RVA = "0x917A1C", Offset = "0x917A1C", VA = "0x917A1C")]
		public ShooterChaseState(StealthPatrolPath path, ShooterChaseParameters param)
		{
		}

		[Token(Token = "0x6002A55")]
		[Address(RVA = "0x917A64", Offset = "0x917A64", VA = "0x917A64", Slot = "4")]
		public void Init(StealthAgent agent)
		{
		}

		[Token(Token = "0x6002A57")]
		[Address(RVA = "0x917C58", Offset = "0x917C58", VA = "0x917C58", Slot = "5")]
		public void Enter()
		{
		}

		[Token(Token = "0x6002A58")]
		[Address(RVA = "0x917F34", Offset = "0x917F34", VA = "0x917F34", Slot = "6")]
		public void Exit()
		{
		}

		[Token(Token = "0x6002A59")]
		[Address(RVA = "0x917FD4", Offset = "0x917FD4", VA = "0x917FD4", Slot = "9")]
		public void Update()
		{
		}

		[Token(Token = "0x6002A5A")]
		[Address(RVA = "0x917DB8", Offset = "0x917DB8", VA = "0x917DB8")]
		public void NextPoint()
		{
		}

		[Token(Token = "0x6002A5C")]
		[Address(RVA = "0x918B2C", Offset = "0x918B2C", VA = "0x918B2C", Slot = "10")]
		public void OnDrawGizmos()
		{
		}

		[Token(Token = "0x6002A5E")]
		[Address(RVA = "0x918B38", Offset = "0x918B38", VA = "0x918B38", Slot = "7")]
		public void Damaged(float hp)
		{
		}

		[Token(Token = "0x6002A5F")]
		[Address(RVA = "0x918BA8", Offset = "0x918BA8", VA = "0x918BA8", Slot = "8")]
		public void Destroyed()
		{
		}
	}

	[Token(Token = "0x2000595")]
	private class DeadState : AgentState
	{
		[Token(Token = "0x40025A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private StealthAgent _agent;

		[Token(Token = "0x40025A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private DeadParameters _param;

		[Token(Token = "0x1700025C")]
		public string description
		{
			[Token(Token = "0x6002A62")]
			[Address(RVA = "0x915B8C", Offset = "0x915B8C", VA = "0x915B8C", Slot = "11")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700025D")]
		public StealthObject currentTarget
		{
			[Token(Token = "0x6002A67")]
			[Address(RVA = "0x915D3C", Offset = "0x915D3C", VA = "0x915D3C", Slot = "12")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700025E")]
		public StealthAgentGroup.AlertLevel alertLevel
		{
			[Token(Token = "0x6002A68")]
			[Address(RVA = "0x915D44", Offset = "0x915D44", VA = "0x915D44", Slot = "13")]
			get
			{
				return default(StealthAgentGroup.AlertLevel);
			}
		}

		[Token(Token = "0x6002A60")]
		[Address(RVA = "0x915B7C", Offset = "0x915B7C", VA = "0x915B7C")]
		public DeadState(DeadParameters param)
		{
		}

		[Token(Token = "0x6002A61")]
		[Address(RVA = "0x915B84", Offset = "0x915B84", VA = "0x915B84", Slot = "4")]
		public void Init(StealthAgent agent)
		{
		}

		[Token(Token = "0x6002A63")]
		[Address(RVA = "0x915BD4", Offset = "0x915BD4", VA = "0x915BD4", Slot = "5")]
		public void Enter()
		{
		}

		[Token(Token = "0x6002A64")]
		[Address(RVA = "0x915CE0", Offset = "0x915CE0", VA = "0x915CE0", Slot = "6")]
		public void Exit()
		{
		}

		[Token(Token = "0x6002A65")]
		[Address(RVA = "0x915D34", Offset = "0x915D34", VA = "0x915D34", Slot = "9")]
		public void Update()
		{
		}

		[Token(Token = "0x6002A66")]
		[Address(RVA = "0x915D38", Offset = "0x915D38", VA = "0x915D38", Slot = "10")]
		public void OnDrawGizmos()
		{
		}

		[Token(Token = "0x6002A69")]
		[Address(RVA = "0x915D4C", Offset = "0x915D4C", VA = "0x915D4C", Slot = "7")]
		public void Damaged(float hp)
		{
		}

		[Token(Token = "0x6002A6A")]
		[Address(RVA = "0x915D50", Offset = "0x915D50", VA = "0x915D50", Slot = "8")]
		public void Destroyed()
		{
		}
	}

	[Token(Token = "0x2000596")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x643F98", Offset = "0x643F98")]
	private sealed class <FireChargedShot>d__101 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40025A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40025A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40025A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public StealthAgent <>4__this;

		[Token(Token = "0x40025A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private StealthObject <target>5__2;

		[Token(Token = "0x40025A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Transform <chargeUp>5__3;

		[Token(Token = "0x40025A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float <waitTime>5__4;

		[Token(Token = "0x1700025F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002A6E")]
			[Address(RVA = "0x874264", Offset = "0x874264", VA = "0x874264", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000260")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002A70")]
			[Address(RVA = "0x8742D4", Offset = "0x8742D4", VA = "0x8742D4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002A6B")]
		[Address(RVA = "0x873F30", Offset = "0x873F30", VA = "0x873F30")]
		[DebuggerHidden]
		public <FireChargedShot>d__101(int <>1__state)
		{
		}

		[Token(Token = "0x6002A6C")]
		[Address(RVA = "0x873F7C", Offset = "0x873F7C", VA = "0x873F7C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002A6D")]
		[Address(RVA = "0x873F80", Offset = "0x873F80", VA = "0x873F80", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002A6F")]
		[Address(RVA = "0x87426C", Offset = "0x87426C", VA = "0x87426C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40004AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private PatrolParameters _patrolParameters;

	[Token(Token = "0x40004AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private InvestigateParameters _investigateParameters;

	[Token(Token = "0x40004AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private ChaseParameters _chaseParameters;

	[Token(Token = "0x40004B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	[SerializeField]
	private ShooterChaseParameters _shooterChaseParameters;

	[Token(Token = "0x40004B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	[SerializeField]
	private DeadParameters _deadParameters;

	[Token(Token = "0x40004B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	[SerializeField]
	private BehaviourType _behaviourType;

	[Token(Token = "0x40004B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	[SerializeField]
	private Material _eyeMaterial;

	[Token(Token = "0x40004B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	private PatrolState _patrolState;

	[Token(Token = "0x40004B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	private InvestigateState _investigateState;

	[Token(Token = "0x40004B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	private ChaseState _chaseState;

	[Token(Token = "0x40004B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	private ShooterChaseState _shooterChaseState;

	[Token(Token = "0x40004B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	private DeadState _deadState;

	[Token(Token = "0x40004B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	[SerializeField]
	private StealthPatrolPath _patrolPath;

	[Token(Token = "0x40004BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	[SerializeField]
	private StealthSense _stealthSense;

	[Token(Token = "0x40004BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	[SerializeField]
	private Animator _animator;

	[Token(Token = "0x40004BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	[SerializeField]
	private Transform _weaponFirePrefab;

	[Token(Token = "0x40004BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	[SerializeField]
	private Transform _weaponFireOrigin;

	[Token(Token = "0x40004BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
	[SerializeField]
	private List<float> _weaponFireAccuracy;

	[Token(Token = "0x40004BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
	[SerializeField]
	private AudioSource _audioSource;

	[Token(Token = "0x40004C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
	[SerializeField]
	private Transform _headBone;

	[Token(Token = "0x40004C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
	[SerializeField]
	private SoundEffect _headTurnSoundEffectName;

	[Token(Token = "0x40004C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
	[SerializeField]
	private SoundEffect _bodyTurnSoundEffectName;

	[Token(Token = "0x40004C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
	[SerializeField]
	private SoundEffect _movementSoundEffectName;

	[Token(Token = "0x40004C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
	private SoundChannel _headTurnChannel;

	[Token(Token = "0x40004C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
	private SoundChannel _bodyTurnChannel;

	[Token(Token = "0x40004C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
	private SoundChannel _movementChannel;

	[Token(Token = "0x40004C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
	private float _prevAngle;

	[Token(Token = "0x40004C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
	private AgentState _currentState;

	[Token(Token = "0x40004C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
	private NavMeshAgent _navMeshAgent;

	[Token(Token = "0x40004CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
	private float _movementSpeed;

	[Token(Token = "0x40004CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x294")]
	private bool _turnWhileMoving;

	[Token(Token = "0x40004CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
	private List<string> _idleDialogueList;

	[Token(Token = "0x40004CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
	private float _idleMinFrequency;

	[Token(Token = "0x40004CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A4")]
	private float _idleMaxFrequency;

	[Token(Token = "0x40004CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
	private float _idleDialogueTimer;

	[Token(Token = "0x40004D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2AC")]
	private bool _playingDialogue;

	[Token(Token = "0x40004D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64BADC", Offset = "0x64BADC")]
	[SerializeField]
	private float _dialogueMaxDistance;

	[Token(Token = "0x40004D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B8")]
	private Transform _lookTarget;

	[Token(Token = "0x40004D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C0")]
	private StealthAgentGroup _group;

	[Token(Token = "0x40004D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C8")]
	private CharacterLookAt _characterLookAt;

	[Token(Token = "0x40004D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D0")]
	[SerializeField]
	private PointAtTarget _weaponLookAt;

	[Token(Token = "0x40004D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D8")]
	[SerializeField]
	private Transform _chargeProjectilePrefab;

	[Token(Token = "0x40004D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E0")]
	[SerializeField]
	private Transform _chargeProjectileChargeUp;

	[Token(Token = "0x40004D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E8")]
	[SerializeField]
	private Transform _chargeProjectilChargeUpRoot;

	[Token(Token = "0x40004D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F0")]
	[SerializeField]
	private float _chargeTime;

	[Token(Token = "0x40004DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F4")]
	private bool _rotating;

	[Token(Token = "0x40004DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F5")]
	private bool _blockFiring;

	[Token(Token = "0x40004DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F8")]
	private LifetimeObjectManager _lifetimeObjectManager;

	[Token(Token = "0x17000088")]
	public StealthPatrolPath patrolPath
	{
		[Token(Token = "0x6000560")]
		[Address(RVA = "0x8721BC", Offset = "0x8721BC", VA = "0x8721BC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000089")]
	public NavMeshAgent navMeshAgent
	{
		[Token(Token = "0x6000561")]
		[Address(RVA = "0x8721C4", Offset = "0x8721C4", VA = "0x8721C4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700008A")]
	public StealthSense stealthSense
	{
		[Token(Token = "0x6000562")]
		[Address(RVA = "0x8721CC", Offset = "0x8721CC", VA = "0x8721CC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700008B")]
	public Transform lookTarget
	{
		[Token(Token = "0x6000564")]
		[Address(RVA = "0x8721DC", Offset = "0x8721DC", VA = "0x8721DC")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000563")]
		[Address(RVA = "0x8721D4", Offset = "0x8721D4", VA = "0x8721D4")]
		set
		{
		}
	}

	[Token(Token = "0x1700008C")]
	public Animator animator
	{
		[Token(Token = "0x6000565")]
		[Address(RVA = "0x8721E4", Offset = "0x8721E4", VA = "0x8721E4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700008D")]
	public StealthAgentGroup group
	{
		[Token(Token = "0x6000566")]
		[Address(RVA = "0x8721EC", Offset = "0x8721EC", VA = "0x8721EC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700008E")]
	public bool turnWhileMoving
	{
		[Token(Token = "0x6000567")]
		[Address(RVA = "0x8721F4", Offset = "0x8721F4", VA = "0x8721F4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000568")]
		[Address(RVA = "0x8721FC", Offset = "0x8721FC", VA = "0x8721FC")]
		set
		{
		}
	}

	[Token(Token = "0x1700008F")]
	public float movementSpeed
	{
		[Token(Token = "0x6000569")]
		[Address(RVA = "0x872208", Offset = "0x872208", VA = "0x872208")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600056A")]
		[Address(RVA = "0x872210", Offset = "0x872210", VA = "0x872210")]
		set
		{
		}
	}

	[Token(Token = "0x17000090")]
	public bool blockFiring
	{
		[Token(Token = "0x600056B")]
		[Address(RVA = "0x872218", Offset = "0x872218", VA = "0x872218")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000091")]
	public StealthAgentGroup.AlertLevel alertLevel
	{
		[Token(Token = "0x600056C")]
		[Address(RVA = "0x872220", Offset = "0x872220", VA = "0x872220")]
		get
		{
			return default(StealthAgentGroup.AlertLevel);
		}
	}

	[Token(Token = "0x600056D")]
	[Address(RVA = "0x8722E0", Offset = "0x8722E0", VA = "0x8722E0")]
	private void Start()
	{
	}

	[Token(Token = "0x600056E")]
	[Address(RVA = "0x872758", Offset = "0x872758", VA = "0x872758")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600056F")]
	[Address(RVA = "0x872820", Offset = "0x872820", VA = "0x872820")]
	public void SetGroup(StealthAgentGroup group)
	{
	}

	[Token(Token = "0x6000570")]
	[Address(RVA = "0x872828", Offset = "0x872828", VA = "0x872828")]
	public void AlertToTarget(StealthObject target)
	{
	}

	[Token(Token = "0x6000571")]
	[Address(RVA = "0x872618", Offset = "0x872618", VA = "0x872618")]
	private void SwitchState(AgentState state)
	{
	}

	[Token(Token = "0x6000572")]
	[Address(RVA = "0x872890", Offset = "0x872890", VA = "0x872890")]
	public void RotateToFaceTarget(StealthObject target, float maxAngleToTarget, float rotateSpeed)
	{
	}

	[Token(Token = "0x6000573")]
	[Address(RVA = "0x872B74", Offset = "0x872B74", VA = "0x872B74")]
	public bool RotateToAngle(Quaternion targetOrientation, float closeEnoughAngle, float rotateSpeed)
	{
		return default(bool);
	}

	[Token(Token = "0x6000574")]
	[Address(RVA = "0x872D70", Offset = "0x872D70", VA = "0x872D70")]
	private void Update()
	{
	}

	[Token(Token = "0x6000575")]
	[Address(RVA = "0x873598", Offset = "0x873598", VA = "0x873598")]
	public void SetIdleDialogue(List<string> dialogue, float minFrequency, float maxFrequency)
	{
	}

	[Token(Token = "0x6000576")]
	[Address(RVA = "0x8735CC", Offset = "0x8735CC", VA = "0x8735CC")]
	public void ClearIdleDialogue()
	{
	}

	[Token(Token = "0x6000577")]
	[Address(RVA = "0x873568", Offset = "0x873568", VA = "0x873568")]
	public void SelectIdleDialogue()
	{
	}

	[Token(Token = "0x6000578")]
	[Address(RVA = "0x8735D4", Offset = "0x8735D4", VA = "0x8735D4")]
	public void SetEyeColour(Color c)
	{
	}

	[Token(Token = "0x6000579")]
	[Address(RVA = "0x8736B4", Offset = "0x8736B4", VA = "0x8736B4")]
	public void FireAt(StealthObject target, int fireIndex, float forceFireAccuracy = 0f, [Optional] Transform projectilePrefab)
	{
	}

	[Token(Token = "0x600057A")]
	[Address(RVA = "0x873368", Offset = "0x873368", VA = "0x873368")]
	private void StartDialogue(List<string> dialogue, bool important = true)
	{
	}

	[Token(Token = "0x600057B")]
	[Address(RVA = "0x873A94", Offset = "0x873A94", VA = "0x873A94")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x600057C")]
	[Address(RVA = "0x872840", Offset = "0x872840", VA = "0x872840")]
	private void StartInvestigate(StealthObject so)
	{
	}

	[Token(Token = "0x600057D")]
	[Address(RVA = "0x873BA8", Offset = "0x873BA8", VA = "0x873BA8")]
	private void StartPatrol()
	{
	}

	[Token(Token = "0x600057E")]
	[Address(RVA = "0x873BB0", Offset = "0x873BB0", VA = "0x873BB0")]
	private void StartChase(StealthObject so)
	{
	}

	[Token(Token = "0x600057F")]
	[Address(RVA = "0x873BFC", Offset = "0x873BFC", VA = "0x873BFC", Slot = "4")]
	public void OnDamaged(float hp, Transform source)
	{
	}

	[Token(Token = "0x6000580")]
	[Address(RVA = "0x873CC4", Offset = "0x873CC4", VA = "0x873CC4", Slot = "5")]
	public void OnDestroyed(Transform source)
	{
	}

	[Token(Token = "0x6000581")]
	[Address(RVA = "0x873E64", Offset = "0x873E64", VA = "0x873E64", Slot = "6")]
	private void IPacedAttacker.OnAllocatedAttack()
	{
	}

	[Token(Token = "0x6000582")]
	[Address(RVA = "0x873E90", Offset = "0x873E90", VA = "0x873E90")]
	private void StartChargeAttack()
	{
	}

	[Token(Token = "0x6000583")]
	[Address(RVA = "0x873EBC", Offset = "0x873EBC", VA = "0x873EBC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x66840C", Offset = "0x66840C")]
	private IEnumerator FireChargedShot()
	{
		return null;
	}

	[Token(Token = "0x6000584")]
	[Address(RVA = "0x873F5C", Offset = "0x873F5C", VA = "0x873F5C")]
	public StealthAgent()
	{
	}

	[Token(Token = "0x6000585")]
	[Address(RVA = "0x873F74", Offset = "0x873F74", VA = "0x873F74")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x668470", Offset = "0x668470")]
	private void <StartDialogue>b__92_0(DialogueData.DialogueBlock block)
	{
	}
}
[Token(Token = "0x20000B5")]
public class StealthAgentGroup : MonoBehaviour
{
	[Token(Token = "0x2000597")]
	public enum AlertLevel
	{
		[Token(Token = "0x40025AA")]
		Normal,
		[Token(Token = "0x40025AB")]
		Spotted,
		[Token(Token = "0x40025AC")]
		Alert
	}

	[Token(Token = "0x40004DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private List<StealthAgent> _group;

	[Token(Token = "0x40004DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private PlayableDirector _normalTimeline;

	[Token(Token = "0x40004DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private PlayableDirector _spottedTimeline;

	[Token(Token = "0x40004E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private PlayableDirector _alertedTimeline;

	[Token(Token = "0x40004E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AlertLevel _currentAlertLevel;

	[Token(Token = "0x6000586")]
	[Address(RVA = "0x918C08", Offset = "0x918C08", VA = "0x918C08")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000587")]
	[Address(RVA = "0x918F58", Offset = "0x918F58", VA = "0x918F58")]
	public void Update()
	{
	}

	[Token(Token = "0x6000588")]
	[Address(RVA = "0x918D40", Offset = "0x918D40", VA = "0x918D40")]
	public void SwitchLevel(AlertLevel level)
	{
	}

	[Token(Token = "0x6000589")]
	[Address(RVA = "0x9190CC", Offset = "0x9190CC", VA = "0x9190CC")]
	public void AlertGroup(StealthObject target)
	{
	}

	[Token(Token = "0x600058A")]
	[Address(RVA = "0x9191FC", Offset = "0x9191FC", VA = "0x9191FC")]
	public StealthAgentGroup()
	{
	}
}
[Token(Token = "0x20000B6")]
public class StealthInvestigateInteraction : MonoBehaviour, Interaction
{
	[Token(Token = "0x40004E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool _complete;

	[Token(Token = "0x17000092")]
	private bool Interaction.isInteractionComplete
	{
		[Token(Token = "0x6000595")]
		[Address(RVA = "0x919988", Offset = "0x919988", VA = "0x919988", Slot = "8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000093")]
	private bool Interaction.interactionProgressing
	{
		[Token(Token = "0x6000596")]
		[Address(RVA = "0x919990", Offset = "0x919990", VA = "0x919990", Slot = "13")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x14000040")]
	public event InteractionCompleteEventHandler onInteractionComplete
	{
		[Token(Token = "0x600058B")]
		[Address(RVA = "0x919204", Offset = "0x919204", VA = "0x919204", Slot = "4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x668480", Offset = "0x668480")]
		add
		{
		}
		[Token(Token = "0x600058C")]
		[Address(RVA = "0x9192F0", Offset = "0x9192F0", VA = "0x9192F0", Slot = "5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x668490", Offset = "0x668490")]
		remove
		{
		}
	}

	[Token(Token = "0x14000041")]
	public event InteractionCompleteEventHandler onInteractionUncomplete
	{
		[Token(Token = "0x600058D")]
		[Address(RVA = "0x9193DC", Offset = "0x9193DC", VA = "0x9193DC", Slot = "6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6684A0", Offset = "0x6684A0")]
		add
		{
		}
		[Token(Token = "0x600058E")]
		[Address(RVA = "0x9194C8", Offset = "0x9194C8", VA = "0x9194C8", Slot = "7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6684B0", Offset = "0x6684B0")]
		remove
		{
		}
	}

	[Token(Token = "0x14000042")]
	public event InteractionCompleteEventHandler onInteractionProgressStart
	{
		[Token(Token = "0x600058F")]
		[Address(RVA = "0x9195B4", Offset = "0x9195B4", VA = "0x9195B4", Slot = "9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6684C0", Offset = "0x6684C0")]
		add
		{
		}
		[Token(Token = "0x6000590")]
		[Address(RVA = "0x9196A0", Offset = "0x9196A0", VA = "0x9196A0", Slot = "10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6684D0", Offset = "0x6684D0")]
		remove
		{
		}
	}

	[Token(Token = "0x14000043")]
	public event InteractionCompleteEventHandler onInteractionProgressStop
	{
		[Token(Token = "0x6000591")]
		[Address(RVA = "0x91978C", Offset = "0x91978C", VA = "0x91978C", Slot = "11")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6684E0", Offset = "0x6684E0")]
		add
		{
		}
		[Token(Token = "0x6000592")]
		[Address(RVA = "0x919878", Offset = "0x919878", VA = "0x919878", Slot = "12")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6684F0", Offset = "0x6684F0")]
		remove
		{
		}
	}

	[Token(Token = "0x6000593")]
	[Address(RVA = "0x919964", Offset = "0x919964", VA = "0x919964")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000594")]
	[Address(RVA = "0x9168DC", Offset = "0x9168DC", VA = "0x9168DC")]
	public void StealthAgentInvestigateCompleted()
	{
	}

	[Token(Token = "0x6000597")]
	[Address(RVA = "0x919998", Offset = "0x919998", VA = "0x919998", Slot = "14")]
	private void Interaction.Reset()
	{
	}

	[Token(Token = "0x6000598")]
	[Address(RVA = "0x91999C", Offset = "0x91999C", VA = "0x91999C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000599")]
	[Address(RVA = "0x9199A0", Offset = "0x9199A0", VA = "0x9199A0")]
	public StealthInvestigateInteraction()
	{
	}
}
[Token(Token = "0x20000B7")]
public class StealthObject : MonoBehaviour
{
	[Token(Token = "0x2000598")]
	public enum Type
	{
		[Token(Token = "0x40025AE")]
		Interest,
		[Token(Token = "0x40025AF")]
		StaticTarget,
		[Token(Token = "0x40025B0")]
		Enemy
	}

	[Token(Token = "0x40004E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static List<StealthObject> _stealthObject;

	[Token(Token = "0x40004E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private bool _requiresLineOfSight;

	[Token(Token = "0x40004E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	[SerializeField]
	private bool _requiresPovAngle;

	[Token(Token = "0x40004EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private Type _objectType;

	[Token(Token = "0x40004EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private bool _attractingAttention;

	[Token(Token = "0x40004EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	[SerializeField]
	private bool _isPlayer;

	[Token(Token = "0x17000094")]
	public bool isPlayer
	{
		[Token(Token = "0x600059A")]
		[Address(RVA = "0x9199A8", Offset = "0x9199A8", VA = "0x9199A8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000095")]
	public int priority
	{
		[Token(Token = "0x600059B")]
		[Address(RVA = "0x916BA4", Offset = "0x916BA4", VA = "0x916BA4")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000096")]
	public bool requiresLineOfSight
	{
		[Token(Token = "0x600059C")]
		[Address(RVA = "0x9199B0", Offset = "0x9199B0", VA = "0x9199B0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000097")]
	public Type objectType
	{
		[Token(Token = "0x600059D")]
		[Address(RVA = "0x916BC0", Offset = "0x916BC0", VA = "0x916BC0")]
		get
		{
			return default(Type);
		}
	}

	[Token(Token = "0x17000098")]
	public bool requiresPovAngle
	{
		[Token(Token = "0x600059E")]
		[Address(RVA = "0x9199B8", Offset = "0x9199B8", VA = "0x9199B8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000099")]
	public bool isAttractingAttention
	{
		[Token(Token = "0x600059F")]
		[Address(RVA = "0x9199C0", Offset = "0x9199C0", VA = "0x9199C0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700009A")]
	public static List<StealthObject> objectList
	{
		[Token(Token = "0x60005A0")]
		[Address(RVA = "0x9199C8", Offset = "0x9199C8", VA = "0x9199C8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60005A1")]
	[Address(RVA = "0x919A30", Offset = "0x919A30", VA = "0x919A30")]
	private void Awake()
	{
	}

	[Token(Token = "0x60005A2")]
	[Address(RVA = "0x919ABC", Offset = "0x919ABC", VA = "0x919ABC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60005A3")]
	[Address(RVA = "0x9168D4", Offset = "0x9168D4", VA = "0x9168D4")]
	public void StopAttactingAttention()
	{
	}

	[Token(Token = "0x60005A4")]
	[Address(RVA = "0x919B48", Offset = "0x919B48", VA = "0x919B48")]
	public void StartAttactingAttention()
	{
	}

	[Token(Token = "0x60005A5")]
	[Address(RVA = "0x919B54", Offset = "0x919B54", VA = "0x919B54")]
	public void OnDrawGizmos()
	{
	}

	[Token(Token = "0x60005A6")]
	[Address(RVA = "0x919CD0", Offset = "0x919CD0", VA = "0x919CD0")]
	public StealthObject()
	{
	}
}
[Token(Token = "0x20000B8")]
public class StealthPatrolPath : MonoBehaviour
{
	[Token(Token = "0x2000599")]
	private enum Type
	{
		[Token(Token = "0x40025B2")]
		Looping,
		[Token(Token = "0x40025B3")]
		PingPong
	}

	[Token(Token = "0x40004ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Type _type;

	[Token(Token = "0x40004EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private List<StealthPatrolPoint> _point;

	[Token(Token = "0x60005A8")]
	[Address(RVA = "0x919D54", Offset = "0x919D54", VA = "0x919D54")]
	public void Awake()
	{
	}

	[Token(Token = "0x60005A9")]
	[Address(RVA = "0x9178D0", Offset = "0x9178D0", VA = "0x9178D0")]
	public StealthPatrolPoint GetPatrolPoint(int idx)
	{
		return null;
	}

	[Token(Token = "0x60005AA")]
	[Address(RVA = "0x9188C8", Offset = "0x9188C8", VA = "0x9188C8")]
	public StealthPatrolPoint GetClosestPatrolPointTo(Vector3 position)
	{
		return null;
	}

	[Token(Token = "0x60005AB")]
	[Address(RVA = "0x91780C", Offset = "0x91780C", VA = "0x91780C")]
	public int GetNextPatrolPoint(int idx)
	{
		return default(int);
	}

	[Token(Token = "0x60005AC")]
	[Address(RVA = "0x919E84", Offset = "0x919E84", VA = "0x919E84")]
	public StealthPatrolPath()
	{
	}
}
[Token(Token = "0x20000B9")]
public class StealthPatrolPoint : MonoBehaviour
{
	[Token(Token = "0x40004EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private bool _useFacingAngle;

	[Token(Token = "0x40004F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float _pauseTime;

	[Token(Token = "0x40004F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int _index;

	[Token(Token = "0x1700009B")]
	public bool useFacingAngle
	{
		[Token(Token = "0x60005AD")]
		[Address(RVA = "0x9177FC", Offset = "0x9177FC", VA = "0x9177FC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700009C")]
	public float pauseTime
	{
		[Token(Token = "0x60005AE")]
		[Address(RVA = "0x917804", Offset = "0x917804", VA = "0x917804")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700009D")]
	public int index
	{
		[Token(Token = "0x60005AF")]
		[Address(RVA = "0x918B1C", Offset = "0x918B1C", VA = "0x918B1C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60005B0")]
		[Address(RVA = "0x919E7C", Offset = "0x919E7C", VA = "0x919E7C")]
		set
		{
		}
	}

	[Token(Token = "0x60005B1")]
	[Address(RVA = "0x919E8C", Offset = "0x919E8C", VA = "0x919E8C")]
	public StealthPatrolPoint()
	{
	}
}
[Token(Token = "0x20000BA")]
public class StealthSense : MonoBehaviour
{
	[Token(Token = "0x40004F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float _sightRange;

	[Token(Token = "0x40004F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float _fovAngle;

	[Token(Token = "0x40004F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float _closeDetectRange;

	[Token(Token = "0x40004F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private bool _useLineOfSight;

	[Token(Token = "0x40004F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Transform _agentRoot;

	[Token(Token = "0x40004F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Transform _sensePosition;

	[Token(Token = "0x40004F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private LayerMask _layerMask;

	[Token(Token = "0x40004F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<StealthObject> _visibleObject;

	[Token(Token = "0x1700009E")]
	public List<StealthObject> visibleObjectList
	{
		[Token(Token = "0x60005B2")]
		[Address(RVA = "0x919E94", Offset = "0x919E94", VA = "0x919E94")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60005B3")]
	[Address(RVA = "0x919E9C", Offset = "0x919E9C", VA = "0x919E9C")]
	public void Start()
	{
	}

	[Token(Token = "0x60005B4")]
	[Address(RVA = "0x916904", Offset = "0x916904", VA = "0x916904")]
	public StealthObject GetObjectOfInterest()
	{
		return null;
	}

	[Token(Token = "0x60005B5")]
	[Address(RVA = "0x91A0F8", Offset = "0x91A0F8", VA = "0x91A0F8")]
	private void Update()
	{
	}

	[Token(Token = "0x60005B6")]
	[Address(RVA = "0x919F4C", Offset = "0x919F4C", VA = "0x919F4C")]
	private void UpdateVisibleList()
	{
	}

	[Token(Token = "0x60005B7")]
	[Address(RVA = "0x916BC8", Offset = "0x916BC8", VA = "0x916BC8")]
	public bool IsObjectVisible(StealthObject so, bool ignorePovAngle = false, bool forceLineOfSight = false)
	{
		return default(bool);
	}

	[Token(Token = "0x60005B8")]
	[Address(RVA = "0x91A1C8", Offset = "0x91A1C8", VA = "0x91A1C8")]
	public StealthSense()
	{
	}
}
[Serializable]
[Token(Token = "0x20000BB")]
[AttributeAttribute(Name = "PostProcessAttribute", RVA = "0x63D6C4", Offset = "0x63D6C4")]
public sealed class Greyscale : PostProcessEffectSettings
{
	[Token(Token = "0x40004FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x64BCF8", Offset = "0x64BCF8")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64BCF8", Offset = "0x64BCF8")]
	public FloatParameter blend;

	[Token(Token = "0x60005B9")]
	[Address(RVA = "0x840194", Offset = "0x840194", VA = "0x840194")]
	public Greyscale()
	{
	}
}
[Token(Token = "0x20000BC")]
public sealed class GreyscaleRenderer : PostProcessEffectRenderer<Greyscale>
{
	[Token(Token = "0x60005BA")]
	[Address(RVA = "0x840210", Offset = "0x840210", VA = "0x840210", Slot = "8")]
	public override void Render(PostProcessRenderContext context)
	{
	}

	[Token(Token = "0x60005BB")]
	[Address(RVA = "0x840438", Offset = "0x840438", VA = "0x840438")]
	public GreyscaleRenderer()
	{
	}
}
[Serializable]
[Token(Token = "0x20000BD")]
[AttributeAttribute(Name = "PostProcessAttribute", RVA = "0x63D744", Offset = "0x63D744")]
public sealed class UIHealthDisplay : PostProcessEffectSettings
{
	[Token(Token = "0x40004FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TextureParameter overlay;

	[Token(Token = "0x40004FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x64BD4C", Offset = "0x64BD4C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64BD4C", Offset = "0x64BD4C")]
	public FloatParameter IrisAmount;

	[Token(Token = "0x40004FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x64BDA0", Offset = "0x64BDA0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64BDA0", Offset = "0x64BDA0")]
	public FloatParameter Tightness;

	[Token(Token = "0x40004FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Vector4Parameter Angle;

	[Token(Token = "0x40004FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x64BDF4", Offset = "0x64BDF4")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64BDF4", Offset = "0x64BDF4")]
	public FloatParameter AngleStrength;

	[Token(Token = "0x4000500")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public ColorParameter EffectColor;

	[Token(Token = "0x60005BC")]
	[Address(RVA = "0x88AF88", Offset = "0x88AF88", VA = "0x88AF88")]
	public UIHealthDisplay()
	{
	}
}
[Token(Token = "0x20000BE")]
public sealed class UIHealthDisplayRenderer : PostProcessEffectRenderer<UIHealthDisplay>
{
	[Token(Token = "0x60005BD")]
	[Address(RVA = "0x88B144", Offset = "0x88B144", VA = "0x88B144", Slot = "8")]
	public override void Render(PostProcessRenderContext context)
	{
	}

	[Token(Token = "0x60005BE")]
	[Address(RVA = "0x88B5E0", Offset = "0x88B5E0", VA = "0x88B5E0")]
	public UIHealthDisplayRenderer()
	{
	}
}
[Token(Token = "0x20000BF")]
public class AchievementAsset : TimelineAssetBase<AchievementBehaviour>
{
	[Token(Token = "0x4000501")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private List<StateTriggerAsset.StateCondition> _condition;

	[Token(Token = "0x4000502")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Achievements.AchievementData _achievement;

	[Token(Token = "0x60005BF")]
	[Address(RVA = "0x8B3140", Offset = "0x8B3140", VA = "0x8B3140", Slot = "6")]
	public override Playable CreatePlayable(PlayableGraph graph, GameObject owner)
	{
		return default(Playable);
	}

	[Token(Token = "0x60005C0")]
	[Address(RVA = "0x8B3218", Offset = "0x8B3218", VA = "0x8B3218")]
	public AchievementAsset()
	{
	}
}
[Token(Token = "0x20000C0")]
public class AchievementBehaviour : TimelineBehaviourBase
{
	[Token(Token = "0x4000503")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	public Achievements.AchievementData _achievement;

	[Token(Token = "0x4000504")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	public List<StateTriggerAsset.StateCondition> _condition;

	[Token(Token = "0x60005C1")]
	[Address(RVA = "0x8B3268", Offset = "0x8B3268", VA = "0x8B3268", Slot = "23")]
	public override void Initialize(GameObject owner, TimelineAssetNamed baseAsset)
	{
	}

	[Token(Token = "0x60005C2")]
	[Address(RVA = "0x8B3394", Offset = "0x8B3394", VA = "0x8B3394", Slot = "26")]
	public override void OnBehaviourEnter(Playable playable, FrameData info)
	{
	}

	[Token(Token = "0x60005C3")]
	[Address(RVA = "0x8B34C8", Offset = "0x8B34C8", VA = "0x8B34C8")]
	public AchievementBehaviour()
	{
	}
}
[Token(Token = "0x20000C1")]
public class ActivatorAsset : TimelineAssetBase<ActivatorBehaviour>
{
	[Token(Token = "0x200059A")]
	public enum Action
	{
		[Token(Token = "0x40025B5")]
		EnableGameObject,
		[Token(Token = "0x40025B6")]
		DisableGameObject,
		[Token(Token = "0x40025B7")]
		EnableComponent,
		[Token(Token = "0x40025B8")]
		DisableComponent,
		[Token(Token = "0x40025B9")]
		FreezeRigidBody,
		[Token(Token = "0x40025BA")]
		UnfreezeRigidBody,
		[Token(Token = "0x40025BB")]
		EnableControllable,
		[Token(Token = "0x40025BC")]
		DisableControllable,
		[Token(Token = "0x40025BD")]
		SetBoolProperty,
		[Token(Token = "0x40025BE")]
		EnableCollider,
		[Token(Token = "0x40025BF")]
		DisableCollider
	}

	[Serializable]
	[Token(Token = "0x200059B")]
	public class ActivatorEntry
	{
		[Token(Token = "0x40025C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		public ExposedReference<GameObject> _object;

		[Token(Token = "0x40025C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		public Action _action;

		[Token(Token = "0x40025C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		public string _componentName;

		[Token(Token = "0x40025C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		public string _propertyName;

		[Token(Token = "0x40025C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		public bool _flagValue;

		[Token(Token = "0x6002A71")]
		[Address(RVA = "0x8B48F8", Offset = "0x8B48F8", VA = "0x8B48F8")]
		public ActivatorEntry()
		{
		}
	}

	[Token(Token = "0x4000505")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64BE88", Offset = "0x64BE88")]
	[SerializeField]
	public List<ActivatorEntry> _action;

	[Token(Token = "0x60005C4")]
	[Address(RVA = "0x8B47F0", Offset = "0x8B47F0", VA = "0x8B47F0", Slot = "6")]
	public override Playable CreatePlayable(PlayableGraph graph, GameObject owner)
	{
		return default(Playable);
	}

	[Token(Token = "0x60005C5")]
	[Address(RVA = "0x8B48A8", Offset = "0x8B48A8", VA = "0x8B48A8")]
	public ActivatorAsset()
	{
	}
}
[Token(Token = "0x20000C2")]
public class ActivatorBehaviour : TimelineBehaviourBase
{
	[Token(Token = "0x4000506")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<ActivatorAsset.ActivatorEntry> _action;

	[Token(Token = "0x4000507")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<GameObject> _object;

	[Token(Token = "0x60005C6")]
	[Address(RVA = "0x8B4900", Offset = "0x8B4900", VA = "0x8B4900", Slot = "23")]
	public override void Initialize(GameObject owner, TimelineAssetNamed baseAsset)
	{
	}

	[Token(Token = "0x60005C7")]
	[Address(RVA = "0x8B4908", Offset = "0x8B4908", VA = "0x8B4908", Slot = "26")]
	public override void OnBehaviourEnter(Playable playable, FrameData info)
	{
	}

	[Token(Token = "0x60005C8")]
	[Address(RVA = "0x8B62D0", Offset = "0x8B62D0", VA = "0x8B62D0")]
	private static Component GetComponentByName(GameObject obj, string componentType)
	{
		return null;
	}

	[Token(Token = "0x60005C9")]
	[Address(RVA = "0x8B637C", Offset = "0x8B637C", VA = "0x8B637C")]
	private void SetComponentEnable(Component comp, bool en)
	{
	}

	[Token(Token = "0x60005CA")]
	[Address(RVA = "0x8B6574", Offset = "0x8B6574", VA = "0x8B6574")]
	public static void EnableControllable(GameObject obj, bool en)
	{
	}

	[Token(Token = "0x60005CB")]
	[Address(RVA = "0x8B666C", Offset = "0x8B666C", VA = "0x8B666C")]
	public static void SetProperty(GameObject obj, string componentName, string propName, bool value, string context)
	{
	}

	[Token(Token = "0x60005CC")]
	[Address(RVA = "0x8B6D70", Offset = "0x8B6D70", VA = "0x8B6D70")]
	public ActivatorBehaviour()
	{
	}
}
[Token(Token = "0x20000C3")]
public class AnimationAsset : TimelineAssetBase<AnimationBehaviour>
{
	[Token(Token = "0x4000508")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private ExposedReference<GameObject> _animatorObject;

	[Token(Token = "0x4000509")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private string _triggerName;

	[Token(Token = "0x400050A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private bool _triggerOnEnter;

	[Token(Token = "0x400050B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	[SerializeField]
	private bool _triggerOnExit;

	[Token(Token = "0x60005CD")]
	[Address(RVA = "0x8BACB8", Offset = "0x8BACB8", VA = "0x8BACB8", Slot = "6")]
	public override Playable CreatePlayable(PlayableGraph graph, GameObject owner)
	{
		return default(Playable);
	}

	[Token(Token = "0x60005CE")]
	[Address(RVA = "0x8BAE08", Offset = "0x8BAE08", VA = "0x8BAE08")]
	public AnimationAsset()
	{
	}
}
[Token(Token = "0x20000C4")]
public class AnimationBehaviour : TimelineBehaviourBase
{
	[Token(Token = "0x400050C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject _animatorObject;

	[Token(Token = "0x400050D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string _triggerName;

	[Token(Token = "0x400050E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool _triggerOnEnter;

	[Token(Token = "0x400050F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	public bool _triggerOnExit;

	[Token(Token = "0x4000510")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Animator _animator;

	[Token(Token = "0x60005CF")]
	[Address(RVA = "0x8BAE60", Offset = "0x8BAE60", VA = "0x8BAE60", Slot = "23")]
	public override void Initialize(GameObject owner, TimelineAssetNamed baseAsset)
	{
	}

	[Token(Token = "0x60005D0")]
	[Address(RVA = "0x8BAE68", Offset = "0x8BAE68", VA = "0x8BAE68", Slot = "26")]
	public override void OnBehaviourEnter(Playable playable, FrameData info)
	{
	}

	[Token(Token = "0x60005D1")]
	[Address(RVA = "0x8BB1EC", Offset = "0x8BB1EC", VA = "0x8BB1EC", Slot = "27")]
	public override void OnBehaviourExit(Playable playable, FrameData info)
	{
	}

	[Token(Token = "0x60005D2")]
	[Address(RVA = "0x8BB570", Offset = "0x8BB570", VA = "0x8BB570")]
	public AnimationBehaviour()
	{
	}
}
[Token(Token = "0x20000C5")]
public class AudioMixerAsset : TimelineAssetBase<AudioMixerBehaviour>
{
	[Token(Token = "0x200059C")]
	public enum Mode
	{
		[Token(Token = "0x40025C6")]
		Absolute,
		[Token(Token = "0x40025C7")]
		Relative
	}

	[Token(Token = "0x4000511")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private AudioMixer _mixer;

	[Token(Token = "0x4000512")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private string _parameterName;

	[Token(Token = "0x4000513")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private AnimationCurve _mixerCurve;

	[Token(Token = "0x4000514")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private Mode _mode;

	[Token(Token = "0x60005D3")]
	[Address(RVA = "0x8BD63C", Offset = "0x8BD63C", VA = "0x8BD63C", Slot = "6")]
	public override Playable CreatePlayable(PlayableGraph graph, GameObject owner)
	{
		return default(Playable);
	}

	[Token(Token = "0x60005D4")]
	[Address(RVA = "0x8BD754", Offset = "0x8BD754", VA = "0x8BD754")]
	public AudioMixerAsset()
	{
	}
}
[Token(Token = "0x20000C6")]
public class AudioMixerBehaviour : TimelineBehaviourBase
{
	[Token(Token = "0x4000515")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public AudioMixerAsset.Mode _mode;

	[Token(Token = "0x4000516")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string _parameterName;

	[Token(Token = "0x4000517")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AnimationCurve _mixerCurve;

	[Token(Token = "0x4000518")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AudioMixer _mixer;

	[Token(Token = "0x4000519")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float _initialMixerValue;

	[Token(Token = "0x60005D5")]
	[Address(RVA = "0x8BD7A4", Offset = "0x8BD7A4", VA = "0x8BD7A4", Slot = "23")]
	public override void Initialize(GameObject owner, TimelineAssetNamed baseAsset)
	{
	}

	[Token(Token = "0x60005D6")]
	[Address(RVA = "0x8BD7AC", Offset = "0x8BD7AC", VA = "0x8BD7AC", Slot = "26")]
	public override void OnBehaviourEnter(Playable playable, FrameData info)
	{
	}

	[Token(Token = "0x60005D7")]
	[Address(RVA = "0x8BD898", Offset = "0x8BD898", VA = "0x8BD898", Slot = "28")]
	public override void OnBehaviourUpdate(Playable playable, FrameData info)
	{
	}

	[Token(Token = "0x60005D8")]
	[Address(RVA = "0x8BD974", Offset = "0x8BD974", VA = "0x8BD974", Slot = "27")]
	public override void OnBehaviourExit(Playable playable, FrameData info)
	{
	}

	[Token(Token = "0x60005D9")]
	[Address(RVA = "0x8BD9EC", Offset = "0x8BD9EC", VA = "0x8BD9EC")]
	public AudioMixerBehaviour()
	{
	}
}
[Token(Token = "0x20000C7")]
public class AudioMixerSnapshotAsset : TimelineAssetBase<AudioMixerSnapshotBehaviour>
{
	[Token(Token = "0x200059D")]
	public enum Mode
	{
		[Token(Token = "0x40025C9")]
		Instant,
		[Token(Token = "0x40025CA")]
		FadeInOverBlock,
		[Token(Token = "0x40025CB")]
		FadeInOverTime
	}

	[Token(Token = "0x400051A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Mode _mode;

	[Token(Token = "0x400051B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private float _fadeInLength;

	[Token(Token = "0x400051C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private AudioMixerSnapshot _snapshot;

	[Token(Token = "0x60005DA")]
	[Address(RVA = "0x8BD9F4", Offset = "0x8BD9F4", VA = "0x8BD9F4", Slot = "6")]
	public override Playable CreatePlayable(PlayableGraph graph, GameObject owner)
	{
		return default(Playable);
	}

	[Token(Token = "0x60005DB")]
	[Address(RVA = "0x8BDAEC", Offset = "0x8BDAEC", VA = "0x8BDAEC")]
	public AudioMixerSnapshotAsset()
	{
	}
}
[Token(Token = "0x20000C8")]
public class AudioMixerSnapshotBehaviour : TimelineBehaviourBase
{
	[Token(Token = "0x400051D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public AudioMixerSnapshotAsset.Mode _mode;

	[Token(Token = "0x400051E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioMixerSnapshot _snapshot;

	[Token(Token = "0x400051F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float _fadeLength;

	[Token(Token = "0x60005DC")]
	[Address(RVA = "0x8BDB3C", Offset = "0x8BDB3C", VA = "0x8BDB3C", Slot = "23")]
	public override void Initialize(GameObject owner, TimelineAssetNamed baseAsset)
	{
	}

	[Token(Token = "0x60005DD")]
	[Address(RVA = "0x8BDB44", Offset = "0x8BDB44", VA = "0x8BDB44", Slot = "26")]
	public override void OnBehaviourEnter(Playable playable, FrameData info)
	{
	}

	[Token(Token = "0x60005DE")]
	[Address(RVA = "0x8BDC40", Offset = "0x8BDC40", VA = "0x8BDC40")]
	public AudioMixerSnapshotBehaviour()
	{
	}
}
[Token(Token = "0x20000C9")]
public class ChangeLevelAsset : TimelineAssetBase<ChangeLevelBehaviour>
{
	[Token(Token = "0x4000520")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private string _sceneName;

	[Token(Token = "0x4000521")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private string _checkpointName;

	[Token(Token = "0x60005DF")]
	[Address(RVA = "0x8CA1E8", Offset = "0x8CA1E8", VA = "0x8CA1E8", Slot = "6")]
	public override Playable CreatePlayable(PlayableGraph graph, GameObject owner)
	{
		return default(Playable);
	}

	[Token(Token = "0x60005E0")]
	[Address(RVA = "0x8CA2C0", Offset = "0x8CA2C0", VA = "0x8CA2C0")]
	public ChangeLevelAsset()
	{
	}
}
[Token(Token = "0x20000CA")]
public class ChangeLevelBehaviour : TimelineBehaviourBase
{
	[Token(Token = "0x4000522")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string _sceneName;

	[Token(Token = "0x4000523")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string _checkpointName;

	[Token(Token = "0x60005E1")]
	[Address(RVA = "0x8CA310", Offset = "0x8CA310", VA = "0x8CA310", Slot = "23")]
	public override void Initialize(GameObject owner, TimelineAssetNamed baseAsset)
	{
	}

	[Token(Token = "0x60005E2")]
	[Address(RVA = "0x8CA318", Offset = "0x8CA318", VA = "0x8CA318", Slot = "26")]
	public override void OnBehaviourEnter(Playable playable, FrameData info)
	{
	}

	[Token(Token = "0x60005E3")]
	[Address(RVA = "0x8CA3F4", Offset = "0x8CA3F4", VA = "0x8CA3F4")]
	public ChangeLevelBehaviour()
	{
	}
}
[Token(Token = "0x20000CB")]
public class CheckpointAsset : TimelineAssetBase<CheckpointBehaviour>
{
	[Token(Token = "0x4000524")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private ExposedReference<StageCheckpoint> _checkpoint;

	[Token(Token = "0x60005E4")]
	[Address(RVA = "0x8CAF00", Offset = "0x8CAF00", VA = "0x8CAF00", Slot = "6")]
	public override Playable CreatePlayable(PlayableGraph graph, GameObject owner)
	{
		return default(Playable);
	}

	[Token(Token = "0x60005E5")]
	[Address(RVA = "0x8CAFF0", Offset = "0x8CAFF0", VA = "0x8CAFF0")]
	public CheckpointAsset()
	{
	}
}
[Token(Token = "0x20000CC")]
public class CheckpointBehaviour : TimelineBehaviourBase
{
	[Token(Token = "0x4000525")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public StageCheckpoint _checkpoint;

	[Token(Token = "0x60005E6")]
	[Address(RVA = "0x8CB040", Offset = "0x8CB040", VA = "0x8CB040", Slot = "23")]
	public override void Initialize(GameObject owner, TimelineAssetNamed baseAsset)
	{
	}

	[Token(Token = "0x60005E7")]
	[Address(RVA = "0x8CB100", Offset = "0x8CB100", VA = "0x8CB100", Slot = "26")]
	public override void OnBehaviourEnter(Playable playable, FrameData info)
	{
	}

	[Token(Token = "0x60005E8")]
	[Address(RVA = "0x8CB1A8", Offset = "0x8CB1A8", VA = "0x8CB1A8")]
	public CheckpointBehaviour()
	{
	}
}
[Token(Token = "0x20000CD")]
public class ColliderTriggerAsset : TimelineAssetBase<ColliderTriggerBehaviour>
{
	[Token(Token = "0x200059E")]
	public enum Mode
	{
		[Token(Token = "0x40025CD")]
		Player,
		[Token(Token = "0x40025CE")]
		Custom
	}

	[Token(Token = "0x200059F")]
	public enum PlayerPart
	{
		[Token(Token = "0x40025D0")]
		Headset,
		[Token(Token = "0x40025D1")]
		LeftController,
		[Token(Token = "0x40025D2")]
		RightController,
		[Token(Token = "0x40025D3")]
		AnyController,
		[Token(Token = "0x40025D4")]
		Anything
	}

	[Token(Token = "0x4000526")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x64BFB4", Offset = "0x64BFB4")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64BFB4", Offset = "0x64BFB4")]
	[SerializeField]
	private Mode _targetMode;

	[Token(Token = "0x4000527")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64C024", Offset = "0x64C024")]
	[SerializeField]
	private PlayerPart _playerPart;

	[Token(Token = "0x4000528")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64C070", Offset = "0x64C070")]
	[SerializeField]
	private ExposedReference<Collider> _customTarget;

	[Token(Token = "0x4000529")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x64C0BC", Offset = "0x64C0BC")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64C0BC", Offset = "0x64C0BC")]
	[SerializeField]
	private ExposedReference<Collider> _collider;

	[Token(Token = "0x400052A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64C12C", Offset = "0x64C12C")]
	[SerializeField]
	private bool _onEnter;

	[Token(Token = "0x400052B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64C178", Offset = "0x64C178")]
	[SerializeField]
	private bool _onStay;

	[Token(Token = "0x400052C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5A")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64C1C4", Offset = "0x64C1C4")]
	[SerializeField]
	private bool _onExit;

	[Token(Token = "0x400052D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private TimelineAction _onComplete;

	[Token(Token = "0x60005E9")]
	[Address(RVA = "0x8CC98C", Offset = "0x8CC98C", VA = "0x8CC98C", Slot = "6")]
	public override Playable CreatePlayable(PlayableGraph graph, GameObject owner)
	{
		return default(Playable);
	}

	[Token(Token = "0x60005EA")]
	[Address(RVA = "0x8CD6DC", Offset = "0x8CD6DC", VA = "0x8CD6DC")]
	public ColliderTriggerAsset()
	{
	}
}
[Token(Token = "0x20000CE")]
public class ColliderTriggerBehaviour : TimelineBehaviourBase, ICollisionNotify
{
	[Token(Token = "0x400052E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private ColliderTriggerAsset.Mode _mode;

	[Token(Token = "0x400052F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private ColliderTriggerAsset.PlayerPart _playerPart;

	[Token(Token = "0x4000530")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Collider _collider;

	[Token(Token = "0x4000531")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Collider _customTarget;

	[Token(Token = "0x4000532")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private CollisionEvent[] _collisionEvent;

	[Token(Token = "0x4000533")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Transform[] _collisionTransforms;

	[Token(Token = "0x4000534")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private TimelineAction _onComplete;

	[Token(Token = "0x4000535")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool _onEnterFlag;

	[Token(Token = "0x4000536")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	private bool _onExitFlag;

	[Token(Token = "0x4000537")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5A")]
	private bool _onStayFlag;

	[Token(Token = "0x4000538")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5B")]
	private bool _collisionEventsSet;

	[Token(Token = "0x4000539")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private bool _performedAction;

	[Token(Token = "0x400053A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float _addTime;

	[Token(Token = "0x400053B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private double _addTimelinePos;

	[Token(Token = "0x400053C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool _notifiersSet;

	[Token(Token = "0x1700009F")]
	public bool onEnterFlag
	{
		[Token(Token = "0x60005EB")]
		[Address(RVA = "0x8CD734", Offset = "0x8CD734", VA = "0x8CD734")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60005EC")]
		[Address(RVA = "0x8CCD2C", Offset = "0x8CCD2C", VA = "0x8CCD2C")]
		set
		{
		}
	}

	[Token(Token = "0x170000A0")]
	public bool onStayFlag
	{
		[Token(Token = "0x60005ED")]
		[Address(RVA = "0x8CD73C", Offset = "0x8CD73C", VA = "0x8CD73C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60005EE")]
		[Address(RVA = "0x8CCD38", Offset = "0x8CCD38", VA = "0x8CCD38")]
		set
		{
		}
	}

	[Token(Token = "0x170000A1")]
	public bool onExitFlag
	{
		[Token(Token = "0x60005EF")]
		[Address(RVA = "0x8CD744", Offset = "0x8CD744", VA = "0x8CD744")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60005F0")]
		[Address(RVA = "0x8CCD44", Offset = "0x8CCD44", VA = "0x8CCD44")]
		set
		{
		}
	}

	[Token(Token = "0x170000A2")]
	public TimelineAction onComplete
	{
		[Token(Token = "0x60005F1")]
		[Address(RVA = "0x8CD74C", Offset = "0x8CD74C", VA = "0x8CD74C")]
		get
		{
			return null;
		}
		[Token(Token = "0x60005F2")]
		[Address(RVA = "0x8CCD50", Offset = "0x8CCD50", VA = "0x8CCD50")]
		set
		{
		}
	}

	[Token(Token = "0x170000A3")]
	public ExposedReference<Collider> collider
	{
		[Token(Token = "0x60005F3")]
		[Address(RVA = "0x8CCC44", Offset = "0x8CCC44", VA = "0x8CCC44")]
		set
		{
		}
	}

	[Token(Token = "0x170000A4")]
	public ExposedReference<Collider> targetCollider
	{
		[Token(Token = "0x60005F4")]
		[Address(RVA = "0x8CCCB8", Offset = "0x8CCCB8", VA = "0x8CCCB8")]
		set
		{
		}
	}

	[Token(Token = "0x170000A5")]
	public ColliderTriggerAsset.Mode mode
	{
		[Token(Token = "0x60005F5")]
		[Address(RVA = "0x8CD754", Offset = "0x8CD754", VA = "0x8CD754")]
		get
		{
			return default(ColliderTriggerAsset.Mode);
		}
		[Token(Token = "0x60005F6")]
		[Address(RVA = "0x8CCC34", Offset = "0x8CCC34", VA = "0x8CCC34")]
		set
		{
		}
	}

	[Token(Token = "0x170000A6")]
	public ColliderTriggerAsset.PlayerPart playerPart
	{
		[Token(Token = "0x60005F7")]
		[Address(RVA = "0x8CD75C", Offset = "0x8CD75C", VA = "0x8CD75C")]
		get
		{
			return default(ColliderTriggerAsset.PlayerPart);
		}
		[Token(Token = "0x60005F8")]
		[Address(RVA = "0x8CCC3C", Offset = "0x8CCC3C", VA = "0x8CCC3C")]
		set
		{
		}
	}

	[Token(Token = "0x60005F9")]
	[Address(RVA = "0x8CD764", Offset = "0x8CD764", VA = "0x8CD764", Slot = "23")]
	public override void Initialize(GameObject owner, TimelineAssetNamed baseAsset)
	{
	}

	[Token(Token = "0x60005FA")]
	[Address(RVA = "0x8CD76C", Offset = "0x8CD76C", VA = "0x8CD76C")]
	public void OnDestroy()
	{
	}

	[Token(Token = "0x60005FB")]
	[Address(RVA = "0x8CD7D4", Offset = "0x8CD7D4", VA = "0x8CD7D4", Slot = "26")]
	public override void OnBehaviourEnter(Playable playable, FrameData info)
	{
	}

	[Token(Token = "0x60005FC")]
	[Address(RVA = "0x8CDED0", Offset = "0x8CDED0", VA = "0x8CDED0", Slot = "27")]
	public override void OnBehaviourExit(Playable playable, FrameData info)
	{
	}

	[Token(Token = "0x60005FD")]
	[Address(RVA = "0x8CE050", Offset = "0x8CE050", VA = "0x8CE050", Slot = "28")]
	public override void OnBehaviourUpdate(Playable playable, FrameData info)
	{
	}

	[Token(Token = "0x60005FE")]
	[Address(RVA = "0x8CE10C", Offset = "0x8CE10C", VA = "0x8CE10C", Slot = "29")]
	public void OnCollisionEnter(Collider other)
	{
	}

	[Token(Token = "0x60005FF")]
	[Address(RVA = "0x8CE1D0", Offset = "0x8CE1D0", VA = "0x8CE1D0", Slot = "31")]
	public void OnCollisionStay(Collider other)
	{
	}

	[Token(Token = "0x6000600")]
	[Address(RVA = "0x8CE294", Offset = "0x8CE294", VA = "0x8CE294", Slot = "30")]
	public void OnCollisionExit(Collider other)
	{
	}

	[Token(Token = "0x6000601")]
	[Address(RVA = "0x8CDDE0", Offset = "0x8CDDE0", VA = "0x8CDDE0")]
	public void AddNotifiers()
	{
	}

	[Token(Token = "0x6000602")]
	[Address(RVA = "0x8CDF64", Offset = "0x8CDF64", VA = "0x8CDF64")]
	public void RemoveNotifiers()
	{
	}

	[Token(Token = "0x6000603")]
	[Address(RVA = "0x8CCD8C", Offset = "0x8CCD8C", VA = "0x8CCD8C")]
	public void CreateCollisionEvents()
	{
	}

	[Token(Token = "0x6000604")]
	[Address(RVA = "0x8CE438", Offset = "0x8CE438", VA = "0x8CE438")]
	private CollisionEvent AddOrGetEvent(GameObject go)
	{
		return null;
	}

	[Token(Token = "0x6000605")]
	[Address(RVA = "0x8CD87C", Offset = "0x8CD87C", VA = "0x8CD87C")]
	public bool AreCollisionEventsValid()
	{
		return default(bool);
	}

	[Token(Token = "0x6000606")]
	[Address(RVA = "0x8CD7A0", Offset = "0x8CD7A0", VA = "0x8CD7A0")]
	public void DestroyCollisionEvents()
	{
	}

	[Token(Token = "0x6000607")]
	[Address(RVA = "0x8CE500", Offset = "0x8CE500", VA = "0x8CE500", Slot = "24")]
	public override void OnJumped(double sourceTime, double targetTime)
	{
	}

	[Token(Token = "0x6000608")]
	[Address(RVA = "0x8CE588", Offset = "0x8CE588", VA = "0x8CE588")]
	public ColliderTriggerBehaviour()
	{
	}
}
[Token(Token = "0x20000CF")]
public interface ICollisionNotify
{
	[Token(Token = "0x6000609")]
	void OnCollisionEnter(Collider other);

	[Token(Token = "0x600060A")]
	void OnCollisionExit(Collider other);

	[Token(Token = "0x600060B")]
	void OnCollisionStay(Collider other);
}
[Token(Token = "0x20000D0")]
public class CollisionEvent : MonoBehaviour
{
	[Token(Token = "0x400053D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Collider _collider;

	[Token(Token = "0x400053E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<ICollisionNotify> _objectNotify;

	[Token(Token = "0x600060C")]
	[Address(RVA = "0x8CE590", Offset = "0x8CE590", VA = "0x8CE590")]
	private void Awake()
	{
	}

	[Token(Token = "0x600060D")]
	[Address(RVA = "0x8CE358", Offset = "0x8CE358", VA = "0x8CE358")]
	public void AddNotify(ICollisionNotify notify)
	{
	}

	[Token(Token = "0x600060E")]
	[Address(RVA = "0x8CE3C8", Offset = "0x8CE3C8", VA = "0x8CE3C8")]
	public void RemoveNotify(ICollisionNotify notify)
	{
	}

	[Token(Token = "0x600060F")]
	[Address(RVA = "0x8CE5E8", Offset = "0x8CE5E8", VA = "0x8CE5E8")]
	public List<GameObject> DebugNotify()
	{
		return null;
	}

	[Token(Token = "0x6000610")]
	[Address(RVA = "0x8CE818", Offset = "0x8CE818", VA = "0x8CE818")]
	public void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000611")]
	[Address(RVA = "0x8CE96C", Offset = "0x8CE96C", VA = "0x8CE96C")]
	public void OnCollisionStay(Collision collision)
	{
	}

	[Token(Token = "0x6000612")]
	[Address(RVA = "0x8CEAC4", Offset = "0x8CEAC4", VA = "0x8CEAC4")]
	public void OnCollisionExit(Collision collision)
	{
	}

	[Token(Token = "0x6000613")]
	[Address(RVA = "0x8CEC1C", Offset = "0x8CEC1C", VA = "0x8CEC1C")]
	public void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000614")]
	[Address(RVA = "0x8CED50", Offset = "0x8CED50", VA = "0x8CED50")]
	public void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000615")]
	[Address(RVA = "0x8CEE88", Offset = "0x8CEE88", VA = "0x8CEE88")]
	public void OnTriggerStay(Collider other)
	{
	}

	[Token(Token = "0x6000616")]
	[Address(RVA = "0x8CEFC0", Offset = "0x8CEFC0", VA = "0x8CEFC0")]
	public CollisionEvent()
	{
	}
}
[Token(Token = "0x20000D1")]
public class ControllableValueAsset : TimelineAssetBase<ControllableValueBehaviour>
{
	[Token(Token = "0x20005A0")]
	public enum Mode
	{
		[Token(Token = "0x40025D6")]
		Relative,
		[Token(Token = "0x40025D7")]
		Absolute
	}

	[Token(Token = "0x400053F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	public Mode _mode;

	[Token(Token = "0x4000540")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	public AnimationCurve _curve;

	[Token(Token = "0x4000541")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	public ExposedReference<GameObject> _controllableObject;

	[Token(Token = "0x4000542")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	public bool _limitToFirstRotation;

	[Token(Token = "0x4000543")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[SerializeField]
	public float _rotationPeriod;

	[Token(Token = "0x4000544")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	public bool _snapToValue;

	[Token(Token = "0x4000545")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[SerializeField]
	public float _snapDivisionSize;

	[Token(Token = "0x6000617")]
	[Address(RVA = "0x7AE79C", Offset = "0x7AE79C", VA = "0x7AE79C", Slot = "6")]
	public override Playable CreatePlayable(PlayableGraph graph, GameObject owner)
	{
		return default(Playable);
	}

	[Token(Token = "0x6000618")]
	[Address(RVA = "0x7AE94C", Offset = "0x7AE94C", VA = "0x7AE94C")]
	public ControllableValueAsset()
	{
	}
}
[Token(Token = "0x20000D2")]
public class ControllableValueBehaviour : TimelineBehaviourBase
{
	[Token(Token = "0x4000546")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public ControllableValueAsset.Mode _mode;

	[Token(Token = "0x4000547")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AnimationCurve _curve;

	[Token(Token = "0x4000548")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject _controllableObject;

	[Token(Token = "0x4000549")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool _limitToFirstRotation;

	[Token(Token = "0x400054A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float _rotationPeriod;

	[Token(Token = "0x400054B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool _snapToValue;

	[Token(Token = "0x400054C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float _snapDivisionSize;

	[Token(Token = "0x400054D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private VRTK_BaseControllable _controllable;

	[Token(Token = "0x400054E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float _startValue;

	[Token(Token = "0x6000619")]
	[Address(RVA = "0x7AE99C", Offset = "0x7AE99C", VA = "0x7AE99C", Slot = "23")]
	public override void Initialize(GameObject owner, TimelineAssetNamed baseAsset)
	{
	}

	[Token(Token = "0x600061A")]
	[Address(RVA = "0x7AE9A4", Offset = "0x7AE9A4", VA = "0x7AE9A4", Slot = "26")]
	public override void OnBehaviourEnter(Playable playable, FrameData info)
	{
	}

	[Token(Token = "0x600061B")]
	[Address(RVA = "0x7AEAA0", Offset = "0x7AEAA0", VA = "0x7AEAA0", Slot = "28")]
	public override void OnBehaviourUpdate(Playable playable, FrameData info)
	{
	}

	[Token(Token = "0x600061C")]
	[Address(RVA = "0x7AED3C", Offset = "0x7AED3C", VA = "0x7AED3C", Slot = "27")]
	public override void OnBehaviourExit(Playable playable, FrameData info)
	{
	}

	[Token(Token = "0x600061D")]
	[Address(RVA = "0x7AF0B0", Offset = "0x7AF0B0", VA = "0x7AF0B0")]
	public ControllableValueBehaviour()
	{
	}
}
[Token(Token = "0x20000D3")]
public class CullingZoneAsset : TimelineAssetBase<CullingZoneBehaviour>
{
	[Serializable]
	[Token(Token = "0x20005A1")]
	public class Entry
	{
		[Token(Token = "0x40025D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		public ExposedReference<GameObject> _cullingZone;

		[Token(Token = "0x40025D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		public bool _show;

		[Token(Token = "0x6002A72")]
		[Address(RVA = "0x7B0AE0", Offset = "0x7B0AE0", VA = "0x7B0AE0")]
		public Entry()
		{
		}
	}

	[Token(Token = "0x400054F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	public List<Entry> _entries;

	[Token(Token = "0x600061E")]
	[Address(RVA = "0x7B09B4", Offset = "0x7B09B4", VA = "0x7B09B4", Slot = "6")]
	public override Playable CreatePlayable(PlayableGraph graph, GameObject owner)
	{
		return default(Playable);
	}

	[Token(Token = "0x600061F")]
	[Address(RVA = "0x7B0A90", Offset = "0x7B0A90", VA = "0x7B0A90")]
	public CullingZoneAsset()
	{
	}
}
[Token(Token = "0x20000D4")]
public class CullingZoneBehaviour : TimelineBehaviourBase
{
	[Token(Token = "0x4000550")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	public List<CullingZoneAsset.Entry> _entries;

	[Token(Token = "0x4000551")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public PlayableGraph _graph;

	[Token(Token = "0x6000620")]
	[Address(RVA = "0x7B0AE8", Offset = "0x7B0AE8", VA = "0x7B0AE8", Slot = "23")]
	public override void Initialize(GameObject owner, TimelineAssetNamed baseAsset)
	{
	}

	[Token(Token = "0x6000621")]
	[Address(RVA = "0x7B0AF0", Offset = "0x7B0AF0", VA = "0x7B0AF0", Slot = "26")]
	public override void OnBehaviourEnter(Playable playable, FrameData info)
	{
	}

	[Token(Token = "0x6000622")]
	[Address(RVA = "0x7B0E70", Offset = "0x7B0E70", VA = "0x7B0E70")]
	public CullingZoneBehaviour()
	{
	}
}
[Token(Token = "0x20000D5")]
public class DamageEnemyAsset : TimelineAssetBase<DamageEnemyBehaviour>
{
	[Token(Token = "0x4000552")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private ExposedReference<GameObject> _enemyHealth;

	[Token(Token = "0x4000553")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private float _damageHitPoints;

	[Token(Token = "0x4000554")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[SerializeField]
	private bool _killEnemy;

	[Token(Token = "0x6000623")]
	[Address(RVA = "0x7B2C94", Offset = "0x7B2C94", VA = "0x7B2C94", Slot = "6")]
	public override Playable CreatePlayable(PlayableGraph graph, GameObject owner)
	{
		return default(Playable);
	}

	[Token(Token = "0x6000624")]
	[Address(RVA = "0x7B2DC4", Offset = "0x7B2DC4", VA = "0x7B2DC4")]
	public DamageEnemyAsset()
	{
	}
}
[Token(Token = "0x20000D6")]
public class DamageEnemyBehaviour : TimelineBehaviourBase
{
	[Token(Token = "0x4000555")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject _enemyHealth;

	[Token(Token = "0x4000556")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float _damageHitPoints;

	[Token(Token = "0x4000557")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool _killEnemy;

	[Token(Token = "0x6000625")]
	[Address(RVA = "0x7B2E14", Offset = "0x7B2E14", VA = "0x7B2E14", Slot = "26")]
	public override void OnBehaviourEnter(Playable playable, FrameData info)
	{
	}

	[Token(Token = "0x6000626")]
	[Address(RVA = "0x7B3050", Offset = "0x7B3050", VA = "0x7B3050", Slot = "23")]
	public override void Initialize(GameObject owner, TimelineAssetNamed baseAsset)
	{
	}

	[Token(Token = "0x6000627")]
	[Address(RVA = "0x7B3058", Offset = "0x7B3058", VA = "0x7B3058")]
	public DamageEnemyBehaviour()
	{
	}
}
[Token(Token = "0x20000D7")]
public class DelayAsset : TimelineAssetBase<DelayBehaviour>
{
	[Token(Token = "0x4000558")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64C2E0", Offset = "0x64C2E0")]
	[SerializeField]
	private float _delayTime;

	[Token(Token = "0x6000628")]
	[Address(RVA = "0x7B6D7C", Offset = "0x7B6D7C", VA = "0x7B6D7C", Slot = "6")]
	public override Playable CreatePlayable(PlayableGraph graph, GameObject owner)
	{
		return default(Playable);
	}

	[Token(Token = "0x6000629")]
	[Address(RVA = "0x7B6E34", Offset = "0x7B6E34", VA = "0x7B6E34")]
	public DelayAsset()
	{
	}
}
[Token(Token = "0x20000D8")]
public class DelayBehaviour : TimelineBehaviourBase
{
	[Token(Token = "0x4000559")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float _delayTime;

	[Token(Token = "0x400055A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float _addTime;

	[Token(Token = "0x400055B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public double _addTimelinePos;

	[Token(Token = "0x400055C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private ResumeTimeline _delayComponent;

	[Token(Token = "0x600062A")]
	[Address(RVA = "0x7B6E84", Offset = "0x7B6E84", VA = "0x7B6E84", Slot = "23")]
	public override void Initialize(GameObject owner, TimelineAssetNamed baseAsset)
	{
	}

	[Token(Token = "0x600062B")]
	[Address(RVA = "0x7B6E8C", Offset = "0x7B6E8C", VA = "0x7B6E8C", Slot = "26")]
	public override void OnBehaviourEnter(Playable playable, FrameData info)
	{
	}

	[Token(Token = "0x600062C")]
	[Address(RVA = "0x7B6FB4", Offset = "0x7B6FB4", VA = "0x7B6FB4", Slot = "24")]
	public override void OnJumped(double sourceTime, double targetTime)
	{
	}

	[Token(Token = "0x600062D")]
	[Address(RVA = "0x7B70C8", Offset = "0x7B70C8", VA = "0x7B70C8")]
	public DelayBehaviour()
	{
	}
}
[Token(Token = "0x20000D9")]
public class DestroyOnTimelinePlayed : MonoBehaviour
{
	[Token(Token = "0x400055D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private List<GameObject> _destroy;

	[Token(Token = "0x400055E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private bool _destroySelf;

	[Token(Token = "0x400055F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	private bool _playStarted;

	[Token(Token = "0x4000560")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private PlayableDirector _director;

	[Token(Token = "0x600062E")]
	[Address(RVA = "0x7B88E8", Offset = "0x7B88E8", VA = "0x7B88E8")]
	private void Start()
	{
	}

	[Token(Token = "0x600062F")]
	[Address(RVA = "0x7B8940", Offset = "0x7B8940", VA = "0x7B8940")]
	private void Update()
	{
	}

	[Token(Token = "0x6000630")]
	[Address(RVA = "0x7B8B20", Offset = "0x7B8B20", VA = "0x7B8B20")]
	public DestroyOnTimelinePlayed()
	{
	}
}
[Token(Token = "0x20000DA")]
public class DialogueAsset : TimelineAssetBase<DialogueBehaviour>
{
	[Token(Token = "0x4000561")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64C34C", Offset = "0x64C34C")]
	[SerializeField]
	public List<string> _dialogueblockName;

	[Token(Token = "0x4000562")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64C398", Offset = "0x64C398")]
	[SerializeField]
	public ExposedReference<GameObject> _source;

	[Token(Token = "0x4000563")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64C3E4", Offset = "0x64C3E4")]
	[SerializeField]
	public bool _pauseUntilComplete;

	[Token(Token = "0x4000564")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64C430", Offset = "0x64C430")]
	[SerializeField]
	public bool _hideSubtitleOnExit;

	[Token(Token = "0x4000565")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64C47C", Offset = "0x64C47C")]
	[SerializeField]
	public bool _interruptPlayingDialogue;

	[Token(Token = "0x6000631")]
	[Address(RVA = "0x7B92B0", Offset = "0x7B92B0", VA = "0x7B92B0", Slot = "6")]
	public override Playable CreatePlayable(PlayableGraph graph, GameObject owner)
	{
		return default(Playable);
	}

	[Token(Token = "0x6000632")]
	[Address(RVA = "0x7B9420", Offset = "0x7B9420", VA = "0x7B9420")]
	public DialogueAsset()
	{
	}
}
[Token(Token = "0x20000DB")]
public class DialogueBehaviour : TimelineBehaviourBase
{
	[Token(Token = "0x4000566")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<string> _dialogueBlockName;

	[Token(Token = "0x4000567")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject _source;

	[Token(Token = "0x4000568")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool _pauseUntilComplete;

	[Token(Token = "0x4000569")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	public bool _hideSubtitleOnExit;

	[Token(Token = "0x400056A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
	public bool _interruptPlayingDialogue;

	[Token(Token = "0x6000633")]
	[Address(RVA = "0x7B9470", Offset = "0x7B9470", VA = "0x7B9470", Slot = "23")]
	public override void Initialize(GameObject owner, TimelineAssetNamed baseAsset)
	{
	}

	[Token(Token = "0x6000634")]
	[Address(RVA = "0x7B9478", Offset = "0x7B9478", VA = "0x7B9478", Slot = "26")]
	public override void OnBehaviourEnter(Playable playable, FrameData info)
	{
	}

	[Token(Token = "0x6000635")]
	[Address(RVA = "0x7B9B70", Offset = "0x7B9B70", VA = "0x7B9B70", Slot = "27")]
	public override void OnBehaviourExit(Playable playable, FrameData info)
	{
	}

	[Token(Token = "0x6000636")]
	[Address(RVA = "0x7B9C4C", Offset = "0x7B9C4C", VA = "0x7B9C4C")]
	public DialogueBehaviour()
	{
	}

	[Token(Token = "0x6000637")]
	[Address(RVA = "0x7B9C54", Offset = "0x7B9C54", VA = "0x7B9C54")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x668500", Offset = "0x668500")]
	private void <OnBehaviourEnter>b__6_0(DialogueData.DialogueBlock block)
	{
	}

	[Token(Token = "0x6000638")]
	[Address(RVA = "0x7B9C94", Offset = "0x7B9C94", VA = "0x7B9C94")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x668510", Offset = "0x668510")]
	private void <OnBehaviourEnter>b__6_1(DialogueData.DialogueBlock block)
	{
	}
}
[Token(Token = "0x20000DC")]
public class DropAsset : TimelineAssetBase<DropBehaviour>
{
	[Token(Token = "0x6000639")]
	[Address(RVA = "0x7BBF40", Offset = "0x7BBF40", VA = "0x7BBF40", Slot = "6")]
	public override Playable CreatePlayable(PlayableGraph graph, GameObject owner)
	{
		return default(Playable);
	}

	[Token(Token = "0x600063A")]
	[Address(RVA = "0x7BBFB8", Offset = "0x7BBFB8", VA = "0x7BBFB8")]
	public DropAsset()
	{
	}
}
[Token(Token = "0x20000DD")]
public class DropBehaviour : TimelineBehaviourBase
{
	[Token(Token = "0x600063B")]
	[Address(RVA = "0x7BC008", Offset = "0x7BC008", VA = "0x7BC008", Slot = "23")]
	public override void Initialize(GameObject owner, TimelineAssetNamed baseAsset)
	{
	}

	[Token(Token = "0x600063C")]
	[Address(RVA = "0x7BC010", Offset = "0x7BC010", VA = "0x7BC010", Slot = "26")]
	public override void OnBehaviourEnter(Playable playable, FrameData info)
	{
	}

	[Token(Token = "0x600063D")]
	[Address(RVA = "0x7BC2DC", Offset = "0x7BC2DC", VA = "0x7BC2DC")]
	public DropBehaviour()
	{
	}
}
[Token(Token = "0x20000DE")]
public class FadeAsset : TimelineAssetBase<FadeBehaviour>
{
	[Token(Token = "0x20005A2")]
	public enum Direction
	{
		[Token(Token = "0x40025DB")]
		In,
		[Token(Token = "0x40025DC")]
		Out,
		[Token(Token = "0x40025DD")]
		Curve
	}

	[Token(Token = "0x400056B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64C4C8", Offset = "0x64C4C8")]
	[SerializeField]
	private Direction _direction;

	[Token(Token = "0x400056C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64C514", Offset = "0x64C514")]
	[SerializeField]
	private Color _colour;

	[Token(Token = "0x400056D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64C560", Offset = "0x64C560")]
	[SerializeField]
	private Color _curveStartColour;

	[Token(Token = "0x400056E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64C5AC", Offset = "0x64C5AC")]
	[SerializeField]
	private AnimationCurve _curve;

	[Token(Token = "0x600063E")]
	[Address(RVA = "0x7BE640", Offset = "0x7BE640", VA = "0x7BE640", Slot = "6")]
	public override Playable CreatePlayable(PlayableGraph graph, GameObject owner)
	{
		return default(Playable);
	}

	[Token(Token = "0x600063F")]
	[Address(RVA = "0x7BE778", Offset = "0x7BE778", VA = "0x7BE778")]
	public FadeAsset()
	{
	}
}
[Token(Token = "0x20000DF")]
public class FadeBehaviour : TimelineBehaviourBase
{
	[Token(Token = "0x400056F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public FadeAsset.Direction _direction;

	[Token(Token = "0x4000570")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Color _colour;

	[Token(Token = "0x4000571")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Color _curveStartColour;

	[Token(Token = "0x4000572")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AnimationCurve _curve;

	[Token(Token = "0x6000640")]
	[Address(RVA = "0x7BE7C8", Offset = "0x7BE7C8", VA = "0x7BE7C8", Slot = "23")]
	public override void Initialize(GameObject owner, TimelineAssetNamed baseAsset)
	{
	}

	[Token(Token = "0x6000641")]
	[Address(RVA = "0x7BE7D0", Offset = "0x7BE7D0", VA = "0x7BE7D0", Slot = "26")]
	public override void OnBehaviourEnter(Playable playable, FrameData info)
	{
	}

	[Token(Token = "0x6000642")]
	[Address(RVA = "0x7BEBCC", Offset = "0x7BEBCC", VA = "0x7BEBCC", Slot = "28")]
	public override void OnBehaviourUpdate(Playable playable, FrameData info)
	{
	}

	[Token(Token = "0x6000643")]
	[Address(RVA = "0x7BEE74", Offset = "0x7BEE74", VA = "0x7BEE74", Slot = "27")]
	public override void OnBehaviourExit(Playable playable, FrameData info)
	{
	}

	[Token(Token = "0x6000644")]
	[Address(RVA = "0x7BF0C4", Offset = "0x7BF0C4", VA = "0x7BF0C4")]
	public FadeBehaviour()
	{
	}
}
[Token(Token = "0x20000E0")]
public class FlowControlAsset : TimelineAssetBase<FlowControlBehaviour>
{
	[Token(Token = "0x20005A3")]
	public enum FlowControlType
	{
		[Token(Token = "0x40025DF")]
		None,
		[Token(Token = "0x40025E0")]
		Loop,
		[Token(Token = "0x40025E1")]
		PauseAtEnd,
		[Token(Token = "0x40025E2")]
		PauseAtStart
	}

	[Token(Token = "0x4000573")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	public FlowControlType _type;

	[Token(Token = "0x6000645")]
	[Address(RVA = "0x7C2624", Offset = "0x7C2624", VA = "0x7C2624", Slot = "6")]
	public override Playable CreatePlayable(PlayableGraph graph, GameObject owner)
	{
		return default(Playable);
	}

	[Token(Token = "0x6000646")]
	[Address(RVA = "0x7C26E4", Offset = "0x7C26E4", VA = "0x7C26E4")]
	public FlowControlAsset()
	{
	}
}
[Token(Token = "0x20000E1")]
public class FlowControlBehaviour : TimelineBehaviourBase
{
	[Token(Token = "0x4000574")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private FlowControlAsset.FlowControlType _type;

	[Token(Token = "0x6000647")]
	[Address(RVA = "0x7C2734", Offset = "0x7C2734", VA = "0x7C2734", Slot = "23")]
	public override void Initialize(GameObject owner, TimelineAssetNamed baseAsset)
	{
	}

	[Token(Token = "0x6000648")]
	[Address(RVA = "0x7C26DC", Offset = "0x7C26DC", VA = "0x7C26DC")]
	public void SetData(FlowControlAsset.FlowControlType type)
	{
	}

	[Token(Token = "0x6000649")]
	[Address(RVA = "0x7C273C", Offset = "0x7C273C", VA = "0x7C273C", Slot = "26")]
	public override void OnBehaviourEnter(Playable playable, FrameData info)
	{
	}

	[Token(Token = "0x600064A")]
	[Address(RVA = "0x7C2780", Offset = "0x7C2780", VA = "0x7C2780", Slot = "27")]
	public override void OnBehaviourExit(Playable playable, FrameData info)
	{
	}

	[Token(Token = "0x600064B")]
	[Address(RVA = "0x7C2860", Offset = "0x7C2860", VA = "0x7C2860")]
	public FlowControlBehaviour()
	{
	}
}
[Token(Token = "0x20000E2")]
[AttributeAttribute(Name = "TrackBindingTypeAttribute", RVA = "0x63D7C4", Offset = "0x63D7C4")]
[AttributeAttribute(Name = "TrackClipTypeAttribute", RVA = "0x63D7C4", Offset = "0x63D7C4")]
[AttributeAttribute(Name = "TrackClipTypeAttribute", RVA = "0x63D7C4", Offset = "0x63D7C4")]
[AttributeAttribute(Name = "TrackClipTypeAttribute", RVA = "0x63D7C4", Offset = "0x63D7C4")]
[AttributeAttribute(Name = "TrackClipTypeAttribute", RVA = "0x63D7C4", Offset = "0x63D7C4")]
[AttributeAttribute(Name = "TrackClipTypeAttribute", RVA = "0x63D7C4", Offset = "0x63D7C4")]
[AttributeAttribute(Name = "TrackClipTypeAttribute", RVA = "0x63D7C4", Offset = "0x63D7C4")]
[AttributeAttribute(Name = "TrackClipTypeAttribute", RVA = "0x63D7C4", Offset = "0x63D7C4")]
[AttributeAttribute(Name = "TrackClipTypeAttribute", RVA = "0x63D7C4", Offset = "0x63D7C4")]
[AttributeAttribute(Name = "TrackClipTypeAttribute", RVA = "0x63D7C4", Offset = "0x63D7C4")]
[AttributeAttribute(Name = "TrackClipTypeAttribute", RVA = "0x63D7C4", Offset = "0x63D7C4")]
[AttributeAttribute(Name = "TrackClipTypeAttribute", RVA = "0x63D7C4", Offset = "0x63D7C4")]
[AttributeAttribute(Name = "TrackClipTypeAttribute", RVA = "0x63D7C4", Offset = "0x63D7C4")]
[AttributeAttribute(Name = "TrackClipTypeAttribute", RVA = "0x63D7C4", Offset = "0x63D7C4")]
[AttributeAttribute(Name = "TrackClipTypeAttribute", RVA = "0x63D7C4", Offset = "0x63D7C4")]
[AttributeAttribute(Name = "TrackClipTypeAttribute", RVA = "0x63D7C4", Offset = "0x63D7C4")]
[AttributeAttribute(Name = "TrackClipTypeAttribute", RVA = "0x63D7C4", Offset = "0x63D7C4")]
[AttributeAttribute(Name = "TrackClipTypeAttribute", RVA = "0x63D7C4", Offset = "0x63D7C4")]
[AttributeAttribute(Name = "TrackClipTypeAttribute", RVA = "0x63D7C4", Offset = "0x63D7C4")]
[AttributeAttribute(Name = "TrackClipTypeAttribute", RVA = "0x63D7C4", Offset = "0x63D7C4")]
[AttributeAttribute(Name = "TrackClipTypeAttribute", RVA = "0x63D7C4", Offset = "0x63D7C4")]
[AttributeAttribute(Name = "TrackClipTypeAttribute", RVA = "0x63D7C4", Offset = "0x63D7C4")]
[AttributeAttribute(Name = "TrackClipTypeAttribute", RVA = "0x63D7C4", Offset = "0x63D7C4")]
[AttributeAttribute(Name = "TrackClipTypeAttribute", RVA = "0x63D7C4", Offset = "0x63D7C4")]
[AttributeAttribute(Name = "TrackClipTypeAttribute", RVA = "0x63D7C4", Offset = "0x63D7C4")]
[AttributeAttribute(Name = "TrackClipTypeAttribute", RVA = "0x63D7C4", Offset = "0x63D7C4")]
[AttributeAttribute(Name = "TrackClipTypeAttribute", RVA = "0x63D7C4", Offset = "0x63D7C4")]
[AttributeAttribute(Name = "TrackClipTypeAttribute", RVA = "0x63D7C4", Offset = "0x63D7C4")]
[AttributeAttribute(Name = "TrackClipTypeAttribute", RVA = "0x63D7C4", Offset = "0x63D7C4")]
[AttributeAttribute(Name = "TrackClipTypeAttribute", RVA = "0x63D7C4", Offset = "0x63D7C4")]
[AttributeAttribute(Name = "TrackClipTypeAttribute", RVA = "0x63D7C4", Offset = "0x63D7C4")]
[AttributeAttribute(Name = "TrackClipTypeAttribute", RVA = "0x63D7C4", Offset = "0x63D7C4")]
[AttributeAttribute(Name = "TrackClipTypeAttribute", RVA = "0x63D7C4", Offset = "0x63D7C4")]
[AttributeAttribute(Name = "TrackClipTypeAttribute", RVA = "0x63D7C4", Offset = "0x63D7C4")]
[AttributeAttribute(Name = "TrackClipTypeAttribute", RVA = "0x63D7C4", Offset = "0x63D7C4")]
[AttributeAttribute(Name = "TrackClipTypeAttribute", RVA = "0x63D7C4", Offset = "0x63D7C4")]
[AttributeAttribute(Name = "TrackClipTypeAttribute", RVA = "0x63D7C4", Offset = "0x63D7C4")]
[AttributeAttribute(Name = "TrackClipTypeAttribute", RVA = "0x63D7C4", Offset = "0x63D7C4")]
[AttributeAttribute(Name = "TrackClipTypeAttribute", RVA = "0x63D7C4", Offset = "0x63D7C4")]
[AttributeAttribute(Name = "TrackClipTypeAttribute", RVA = "0x63D7C4", Offset = "0x63D7C4")]
[AttributeAttribute(Name = "TrackClipTypeAttribute", RVA = "0x63D7C4", Offset = "0x63D7C4")]
public class FlowControlTrack : PlayableTrack
{
	[Token(Token = "0x600064C")]
	[Address(RVA = "0x7C2868", Offset = "0x7C2868", VA = "0x7C2868", Slot = "14")]
	public override Playable CreateTrackMixer(PlayableGraph graph, GameObject go, int inputCount)
	{
		return default(Playable);
	}

	[Token(Token = "0x600064D")]
	[Address(RVA = "0x7C2C44", Offset = "0x7C2C44", VA = "0x7C2C44")]
	public FlowControlTrack()
	{
	}
}
[Token(Token = "0x20000E3")]
public class FlyToCameraAsset : TimelineAssetBase<FlyToCameraBehaviour>
{
	[Token(Token = "0x4000575")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Vector3 _cameraOffset;

	[Token(Token = "0x4000576")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[SerializeField]
	private float _velocity;

	[Token(Token = "0x4000577")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private float _flyOffTime;

	[Token(Token = "0x4000578")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[SerializeField]
	private float _timeInFrontOfCamera;

	[Token(Token = "0x4000579")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private float _rotationSpeed;

	[Token(Token = "0x400057A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[SerializeField]
	private bool _pauseUntilTarget;

	[Token(Token = "0x600064E")]
	[Address(RVA = "0x7C2C4C", Offset = "0x7C2C4C", VA = "0x7C2C4C", Slot = "6")]
	public override Playable CreatePlayable(PlayableGraph graph, GameObject owner)
	{
		return default(Playable);
	}

	[Token(Token = "0x600064F")]
	[Address(RVA = "0x7C2DB4", Offset = "0x7C2DB4", VA = "0x7C2DB4")]
	public FlyToCameraAsset()
	{
	}
}
[Token(Token = "0x20000E4")]
public class FlyToCameraBehaviour : TimelineBehaviourBase
{
	[Token(Token = "0x400057B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector3 _cameraOffset;

	[Token(Token = "0x400057C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float _velocity;

	[Token(Token = "0x400057D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool _pauseUntilTarget;

	[Token(Token = "0x400057E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float _flyOffTime;

	[Token(Token = "0x400057F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float _timeInFrontOfCamera;

	[Token(Token = "0x4000580")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float _rotationSpeed;

	[Token(Token = "0x4000581")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public bool _finished;

	[Token(Token = "0x4000582")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private GameObject _owner;

	[Token(Token = "0x6000650")]
	[Address(RVA = "0x7C2E04", Offset = "0x7C2E04", VA = "0x7C2E04", Slot = "23")]
	public override void Initialize(GameObject owner, TimelineAssetNamed baseAsset)
	{
	}

	[Token(Token = "0x6000651")]
	[Address(RVA = "0x7C2E30", Offset = "0x7C2E30", VA = "0x7C2E30", Slot = "28")]
	public override void OnBehaviourUpdate(Playable playable, FrameData info)
	{
	}

	[Token(Token = "0x6000652")]
	[Address(RVA = "0x7C2E74", Offset = "0x7C2E74", VA = "0x7C2E74", Slot = "26")]
	public override void OnBehaviourEnter(Playable playable, FrameData info)
	{
	}

	[Token(Token = "0x6000653")]
	[Address(RVA = "0x7C30F0", Offset = "0x7C30F0", VA = "0x7C30F0", Slot = "27")]
	public override void OnBehaviourExit(Playable playable, FrameData info)
	{
	}

	[Token(Token = "0x6000654")]
	[Address(RVA = "0x7C31E4", Offset = "0x7C31E4", VA = "0x7C31E4")]
	public FlyToCameraBehaviour()
	{
	}

	[Token(Token = "0x6000655")]
	[Address(RVA = "0x7C31EC", Offset = "0x7C31EC", VA = "0x7C31EC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x668520", Offset = "0x668520")]
	private void <OnBehaviourEnter>b__10_0(GameObject gameObject)
	{
	}
}
[Token(Token = "0x20000E5")]
public class FlyToCameraHelper : MonoBehaviour
{
	[Token(Token = "0x20005A4")]
	public delegate void OnFinished(GameObject gameObject);

	[Token(Token = "0x20005A5")]
	public enum FlyPhase
	{
		[Token(Token = "0x40025E4")]
		Fly,
		[Token(Token = "0x40025E5")]
		TimeOnCamera,
		[Token(Token = "0x40025E6")]
		FlyOff,
		[Token(Token = "0x40025E7")]
		Finished,
		[Token(Token = "0x40025E8")]
		NotStarted
	}

	[Token(Token = "0x4000583")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Transform _objectToMove;

	[Token(Token = "0x4000584")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private PlayableDirector _resumeDirector;

	[Token(Token = "0x4000585")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 _cameraOffset;

	[Token(Token = "0x4000586")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float _velocity;

	[Token(Token = "0x4000587")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float _flyOffTime;

	[Token(Token = "0x4000588")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float _timeInFrontOfCamera;

	[Token(Token = "0x4000589")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float _internalTimer;

	[Token(Token = "0x400058A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float _rotationSpeed;

	[Token(Token = "0x400058B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool _flyOff;

	[Token(Token = "0x400058C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private FlyPhase _flyPhase;

	[Token(Token = "0x400058D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private List<OnFinished> _onFinishedList;

	[Token(Token = "0x170000A7")]
	public bool isFinished
	{
		[Token(Token = "0x6000656")]
		[Address(RVA = "0x7C3230", Offset = "0x7C3230", VA = "0x7C3230")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000657")]
	[Address(RVA = "0x7C3240", Offset = "0x7C3240", VA = "0x7C3240")]
	public void AddFinishedCallback(OnFinished onFinished)
	{
	}

	[Token(Token = "0x6000658")]
	[Address(RVA = "0x7C2FF4", Offset = "0x7C2FF4", VA = "0x7C2FF4")]
	public void Setup(Vector3 cameraOffset, float velocity, PlayableDirector resumeDirector, float flyOffTime, float timeInFrontOfCamera, float rotationSpeed, OnFinished onFinished)
	{
	}

	[Token(Token = "0x6000659")]
	[Address(RVA = "0x7C32B0", Offset = "0x7C32B0", VA = "0x7C32B0")]
	private void Update()
	{
	}

	[Token(Token = "0x600065A")]
	[Address(RVA = "0x7C444C", Offset = "0x7C444C", VA = "0x7C444C")]
	public FlyToCameraHelper()
	{
	}
}
[Token(Token = "0x20000E6")]
public class ForceInteractionAsset : TimelineAssetBase<ForceInteractionBehaviour>
{
	[Token(Token = "0x20005A6")]
	public enum Action
	{
		[Token(Token = "0x40025EA")]
		ForceComplete,
		[Token(Token = "0x40025EB")]
		ForceUncomplete
	}

	[Token(Token = "0x400058E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private ExposedReference<GameObject> _interaction;

	[Token(Token = "0x400058F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Action _action;

	[Token(Token = "0x600065B")]
	[Address(RVA = "0x83B1E0", Offset = "0x83B1E0", VA = "0x83B1E0", Slot = "6")]
	public override Playable CreatePlayable(PlayableGraph graph, GameObject owner)
	{
		return default(Playable);
	}

	[Token(Token = "0x600065C")]
	[Address(RVA = "0x83B2F0", Offset = "0x83B2F0", VA = "0x83B2F0")]
	public ForceInteractionAsset()
	{
	}
}
[Token(Token = "0x20000E7")]
public class ForceInteractionBehaviour : TimelineBehaviourBase
{
	[Token(Token = "0x4000590")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject _interaction;

	[Token(Token = "0x4000591")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ForceInteractionAsset.Action _action;

	[Token(Token = "0x600065D")]
	[Address(RVA = "0x83B340", Offset = "0x83B340", VA = "0x83B340", Slot = "23")]
	public override void Initialize(GameObject owner, TimelineAssetNamed baseAsset)
	{
	}

	[Token(Token = "0x600065E")]
	[Address(RVA = "0x83B348", Offset = "0x83B348", VA = "0x83B348", Slot = "26")]
	public override void OnBehaviourEnter(Playable playable, FrameData info)
	{
	}

	[Token(Token = "0x600065F")]
	[Address(RVA = "0x83B478", Offset = "0x83B478", VA = "0x83B478")]
	public ForceInteractionBehaviour()
	{
	}
}
[Token(Token = "0x20000E8")]
public class HapticsAsset : TimelineAssetBase<HapticsBehaviour>
{
	[Token(Token = "0x4000592")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private float _pulseInterval;

	[Token(Token = "0x4000593")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private AnimationCurve _strengthCurve;

	[Token(Token = "0x6000660")]
	[Address(RVA = "0x8430D4", Offset = "0x8430D4", VA = "0x8430D4", Slot = "6")]
	public override Playable CreatePlayable(PlayableGraph graph, GameObject owner)
	{
		return default(Playable);
	}

	[Token(Token = "0x6000661")]
	[Address(RVA = "0x8431AC", Offset = "0x8431AC", VA = "0x8431AC")]
	public HapticsAsset()
	{
	}
}
[Token(Token = "0x20000E9")]
public class HapticsBehaviour : TimelineBehaviourBase
{
	[Token(Token = "0x4000594")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float _pulseInterval;

	[Token(Token = "0x4000595")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AnimationCurve _strengthCurve;

	[Token(Token = "0x6000662")]
	[Address(RVA = "0x8431FC", Offset = "0x8431FC", VA = "0x8431FC", Slot = "23")]
	public override void Initialize(GameObject owner, TimelineAssetNamed baseAsset)
	{
	}

	[Token(Token = "0x6000663")]
	[Address(RVA = "0x843204", Offset = "0x843204", VA = "0x843204", Slot = "26")]
	public override void OnBehaviourEnter(Playable playable, FrameData info)
	{
	}

	[Token(Token = "0x6000664")]
	[Address(RVA = "0x843208", Offset = "0x843208", VA = "0x843208", Slot = "28")]
	public override void OnBehaviourUpdate(Playable playable, FrameData info)
	{
	}

	[Token(Token = "0x6000665")]
	[Address(RVA = "0x843358", Offset = "0x843358", VA = "0x843358", Slot = "27")]
	public override void OnBehaviourExit(Playable playable, FrameData info)
	{
	}

	[Token(Token = "0x6000666")]
	[Address(RVA = "0x84335C", Offset = "0x84335C", VA = "0x84335C")]
	public HapticsBehaviour()
	{
	}
}
[Token(Token = "0x20000EA")]
public class HintAsset : TimelineAssetBase<HintBehaviour>
{
	[Token(Token = "0x20005A7")]
	public enum ActionType
	{
		[Token(Token = "0x40025ED")]
		Open,
		[Token(Token = "0x40025EE")]
		Close
	}

	[Token(Token = "0x20005A8")]
	public enum SystemActionType
	{
		[Token(Token = "0x40025F0")]
		None,
		[Token(Token = "0x40025F1")]
		EnableSystem,
		[Token(Token = "0x40025F2")]
		DisableSystem
	}

	[Serializable]
	[Token(Token = "0x20005A9")]
	public class HintAction
	{
		[Token(Token = "0x40025F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		public ActionType _hintAction;

		[Token(Token = "0x40025F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public string _hintName;

		[Token(Token = "0x40025F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		public ExposedReference<GameObject> _audioSourceObject;

		[Token(Token = "0x40025F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public GameObject _audioSourceObjectRef;

		[Token(Token = "0x6002A77")]
		[Address(RVA = "0x846F2C", Offset = "0x846F2C", VA = "0x846F2C")]
		public HintAction()
		{
		}
	}

	[Token(Token = "0x4000596")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private SystemActionType _systemAction;

	[Token(Token = "0x4000597")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private List<HintAction> _action;

	[Token(Token = "0x4000598")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private bool _restoreOnExit;

	[Token(Token = "0x6000667")]
	[Address(RVA = "0x846D00", Offset = "0x846D00", VA = "0x846D00", Slot = "6")]
	public override Playable CreatePlayable(PlayableGraph graph, GameObject owner)
	{
		return default(Playable);
	}

	[Token(Token = "0x6000668")]
	[Address(RVA = "0x846EDC", Offset = "0x846EDC", VA = "0x846EDC")]
	public HintAsset()
	{
	}
}
[Token(Token = "0x20000EB")]
public class HintBehaviour : TimelineBehaviourBase
{
	[Token(Token = "0x4000599")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public HintAsset.SystemActionType _systemAction;

	[Token(Token = "0x400059A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<HintAsset.HintAction> _action;

	[Token(Token = "0x400059B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<bool> _initialHintOpen;

	[Token(Token = "0x400059C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool _initialSystemEnable;

	[Token(Token = "0x400059D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	public bool _restoreOnExit;

	[Token(Token = "0x400059E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
	public bool _entered;

	[Token(Token = "0x6000669")]
	[Address(RVA = "0x846F34", Offset = "0x846F34", VA = "0x846F34", Slot = "26")]
	public override void OnBehaviourEnter(Playable playable, FrameData info)
	{
	}

	[Token(Token = "0x600066A")]
	[Address(RVA = "0x8475EC", Offset = "0x8475EC", VA = "0x8475EC", Slot = "28")]
	public override void OnBehaviourUpdate(Playable playable, FrameData info)
	{
	}

	[Token(Token = "0x600066B")]
	[Address(RVA = "0x8476A8", Offset = "0x8476A8", VA = "0x8476A8", Slot = "24")]
	public override void OnJumped(double sourceTime, double targetTime)
	{
	}

	[Token(Token = "0x600066C")]
	[Address(RVA = "0x84797C", Offset = "0x84797C", VA = "0x84797C", Slot = "27")]
	public override void OnBehaviourExit(Playable playable, FrameData info)
	{
	}

	[Token(Token = "0x600066D")]
	[Address(RVA = "0x8476E8", Offset = "0x8476E8", VA = "0x8476E8")]
	private void Close()
	{
	}

	[Token(Token = "0x600066E")]
	[Address(RVA = "0x8479B4", Offset = "0x8479B4", VA = "0x8479B4", Slot = "23")]
	public override void Initialize(GameObject owner, TimelineAssetNamed baseAsset)
	{
	}

	[Token(Token = "0x600066F")]
	[Address(RVA = "0x8479BC", Offset = "0x8479BC", VA = "0x8479BC")]
	public HintBehaviour()
	{
	}
}
[Token(Token = "0x20000EC")]
public class InteractionTriggerAsset : TimelineAssetBase<InteractionTriggerBehaviour>
{
	[Serializable]
	[Token(Token = "0x20005AA")]
	public enum TriggerState
	{
		[Token(Token = "0x40025F8")]
		Complete,
		[Token(Token = "0x40025F9")]
		Uncomplete
	}

	[Serializable]
	[Token(Token = "0x20005AB")]
	public class ExposedReferenceGameObject
	{
		[Token(Token = "0x40025FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		public ExposedReference<GameObject> _object;

		[Token(Token = "0x6002A78")]
		[Address(RVA = "0x852910", Offset = "0x852910", VA = "0x852910")]
		public ExposedReferenceGameObject()
		{
		}
	}

	[Token(Token = "0x400059F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64C6D8", Offset = "0x64C6D8")]
	[SerializeField]
	public List<ExposedReferenceGameObject> _interaction;

	[Token(Token = "0x40005A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x64C724", Offset = "0x64C724")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64C724", Offset = "0x64C724")]
	[SerializeField]
	private TriggerState _triggerState;

	[Token(Token = "0x40005A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64C794", Offset = "0x64C794")]
	[SerializeField]
	private bool _requireAllInteractions;

	[Token(Token = "0x40005A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64C7E0", Offset = "0x64C7E0")]
	[SerializeField]
	private bool _pauseUntilInteractionsComplete;

	[Token(Token = "0x40005A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	public TimelineAction _onComplete;

	[Token(Token = "0x40005A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x64C83C", Offset = "0x64C83C")]
	[SerializeField]
	public bool _resumeOnProgressStart;

	[Token(Token = "0x40005A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	[SerializeField]
	public bool _pauseOnProgressEnd;

	[Token(Token = "0x40005A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	public TimelineAction _onProgressStart;

	[Token(Token = "0x40005A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	public TimelineAction _onProgressEnd;

	[Token(Token = "0x6000670")]
	[Address(RVA = "0x852534", Offset = "0x852534", VA = "0x852534", Slot = "6")]
	public override Playable CreatePlayable(PlayableGraph graph, GameObject owner)
	{
		return default(Playable);
	}

	[Token(Token = "0x6000671")]
	[Address(RVA = "0x8528C0", Offset = "0x8528C0", VA = "0x8528C0")]
	public InteractionTriggerAsset()
	{
	}
}
[Token(Token = "0x20000ED")]
public class InteractionTriggerBehaviour : TimelineBehaviourBase
{
	[Token(Token = "0x40005A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<GameObject> _interactionList;

	[Token(Token = "0x40005A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<bool> _complete;

	[Token(Token = "0x40005AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool _requireAllInteractions;

	[Token(Token = "0x40005AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	public bool _pauseUntilInteractionsComplete;

	[Token(Token = "0x40005AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
	public bool _jumpOnComplete;

	[Token(Token = "0x40005AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3B")]
	public bool _jumpOnUncomplete;

	[Token(Token = "0x40005AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public bool _resumeOnProgressStart;

	[Token(Token = "0x40005AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
	public bool _pauseOnProgressEnd;

	[Token(Token = "0x40005B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TimelineAction _onProgressStart;

	[Token(Token = "0x40005B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TimelineAction _onProgressEnd;

	[Token(Token = "0x40005B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private TimelineAction _action;

	[Token(Token = "0x170000A8")]
	public List<GameObject> interactionList
	{
		[Token(Token = "0x6000672")]
		[Address(RVA = "0x852918", Offset = "0x852918", VA = "0x852918")]
		set
		{
		}
	}

	[Token(Token = "0x6000673")]
	[Address(RVA = "0x852920", Offset = "0x852920", VA = "0x852920")]
	public InteractionTriggerBehaviour()
	{
	}

	[Token(Token = "0x6000674")]
	[Address(RVA = "0x852990", Offset = "0x852990", VA = "0x852990", Slot = "23")]
	public override void Initialize(GameObject owner, TimelineAssetNamed baseAsset)
	{
	}

	[Token(Token = "0x6000675")]
	[Address(RVA = "0x852884", Offset = "0x852884", VA = "0x852884")]
	public void SetAction(TimelineAction action)
	{
	}

	[Token(Token = "0x6000676")]
	[Address(RVA = "0x852998", Offset = "0x852998", VA = "0x852998")]
	protected void OnDestroy()
	{
	}

	[Token(Token = "0x6000677")]
	[Address(RVA = "0x85299C", Offset = "0x85299C", VA = "0x85299C")]
	private void RemoveHandlers()
	{
	}

	[Token(Token = "0x6000678")]
	[Address(RVA = "0x852D94", Offset = "0x852D94", VA = "0x852D94", Slot = "17")]
	public override void OnBehaviourPlay(Playable playable, FrameData info)
	{
	}

	[Token(Token = "0x6000679")]
	[Address(RVA = "0x853940", Offset = "0x853940", VA = "0x853940")]
	private void InteractionProgressStopEvent(object sender, Interaction interaction)
	{
	}

	[Token(Token = "0x600067A")]
	[Address(RVA = "0x8539FC", Offset = "0x8539FC", VA = "0x8539FC")]
	private void InteractionProgressStartEvent(object sender, Interaction interaction)
	{
	}

	[Token(Token = "0x600067B")]
	[Address(RVA = "0x853A94", Offset = "0x853A94", VA = "0x853A94")]
	private void InteractionUncompleteEvent(object sender, Interaction interaction)
	{
	}

	[Token(Token = "0x600067C")]
	[Address(RVA = "0x853C5C", Offset = "0x853C5C", VA = "0x853C5C")]
	private void InteractionCompleteEvent(object sender, Interaction interaction)
	{
	}

	[Token(Token = "0x600067D")]
	[Address(RVA = "0x853C6C", Offset = "0x853C6C", VA = "0x853C6C", Slot = "26")]
	public override void OnBehaviourEnter(Playable playable, FrameData info)
	{
	}

	[Token(Token = "0x600067E")]
	[Address(RVA = "0x853CAC", Offset = "0x853CAC", VA = "0x853CAC", Slot = "27")]
	public override void OnBehaviourExit(Playable playable, FrameData info)
	{
	}

	[Token(Token = "0x600067F")]
	[Address(RVA = "0x853668", Offset = "0x853668", VA = "0x853668")]
	public bool IsConditionSatisfied()
	{
		return default(bool);
	}

	[Token(Token = "0x6000680")]
	[Address(RVA = "0x853AA0", Offset = "0x853AA0", VA = "0x853AA0")]
	private void SetInteractionComplete(Interaction interaction, bool val)
	{
	}

	[Token(Token = "0x6000681")]
	[Address(RVA = "0x853CB0", Offset = "0x853CB0", VA = "0x853CB0", Slot = "28")]
	public override void OnBehaviourUpdate(Playable playable, FrameData info)
	{
	}

	[Token(Token = "0x6000682")]
	[Address(RVA = "0x853890", Offset = "0x853890", VA = "0x853890")]
	public void PerformAction()
	{
	}
}
[Serializable]
[Token(Token = "0x20000EE")]
public class JumpTargetSelector
{
	[Token(Token = "0x20005AC")]
	private enum Whence
	{
		[Token(Token = "0x40025FC")]
		Start,
		[Token(Token = "0x40025FD")]
		Middle,
		[Token(Token = "0x40025FE")]
		End
	}

	[Token(Token = "0x40005B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static List<JumpTargetSelector> _list;

	[Token(Token = "0x40005B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	private TimelineBehaviourBase _behaviour;

	[Token(Token = "0x40005B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private string _targetPointName;

	[Token(Token = "0x40005B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Whence _relativePosition;

	[Token(Token = "0x40005B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private PlayableDirector _director;

	[Token(Token = "0x40005B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private PlayableDirector _cachedDirector;

	[Token(Token = "0x40005B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private TimelineClip _cachedTimelineClip;

	[Token(Token = "0x170000A9")]
	public TimelineBehaviourBase behaviour
	{
		[Token(Token = "0x6000683")]
		[Address(RVA = "0x853D08", Offset = "0x853D08", VA = "0x853D08")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000684")]
		[Address(RVA = "0x853D10", Offset = "0x853D10", VA = "0x853D10")]
		set
		{
		}
	}

	[Token(Token = "0x170000AA")]
	public PlayableDirector director
	{
		[Token(Token = "0x6000685")]
		[Address(RVA = "0x853D18", Offset = "0x853D18", VA = "0x853D18")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000686")]
		[Address(RVA = "0x853DB8", Offset = "0x853DB8", VA = "0x853DB8")]
		set
		{
		}
	}

	[Token(Token = "0x6000687")]
	[Address(RVA = "0x853DC0", Offset = "0x853DC0", VA = "0x853DC0")]
	public string DebugString()
	{
		return null;
	}

	[Token(Token = "0x6000688")]
	[Address(RVA = "0x853DC8", Offset = "0x853DC8", VA = "0x853DC8")]
	public static TimelineClip FindClipFromPath(PlayableDirector director, string path)
	{
		return null;
	}

	[Token(Token = "0x6000689")]
	[Address(RVA = "0x8543DC", Offset = "0x8543DC", VA = "0x8543DC")]
	public void Jump()
	{
	}

	[Token(Token = "0x600068A")]
	[Address(RVA = "0x854768", Offset = "0x854768", VA = "0x854768")]
	public JumpTargetSelector()
	{
	}
}
[Token(Token = "0x20000EF")]
public class LookAtTriggerAsset : TimelineAssetBase<LookAtTriggerBehaviour>
{
	[Token(Token = "0x40005BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private ExposedReference<Collider> _target;

	[Token(Token = "0x40005BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private float _sightDistance;

	[Token(Token = "0x40005BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[SerializeField]
	private float _lookMinimumTime;

	[Token(Token = "0x40005BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private TimelineAction _onComplete;

	[Token(Token = "0x600068C")]
	[Address(RVA = "0x7ED9CC", Offset = "0x7ED9CC", VA = "0x7ED9CC", Slot = "6")]
	public override Playable CreatePlayable(PlayableGraph graph, GameObject owner)
	{
		return default(Playable);
	}

	[Token(Token = "0x600068D")]
	[Address(RVA = "0x7EDB84", Offset = "0x7EDB84", VA = "0x7EDB84")]
	public LookAtTriggerAsset()
	{
	}
}
[Token(Token = "0x20000F0")]
public class LookAtTriggerBehaviour : TimelineBehaviourBase
{
	[Token(Token = "0x40005BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Transform _headset;

	[Token(Token = "0x40005BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Collider _target;

	[Token(Token = "0x40005C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float _sightDistance;

	[Token(Token = "0x40005C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float _lookMinimumTime;

	[Token(Token = "0x40005C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool _isLooking;

	[Token(Token = "0x40005C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float _currentLookTime;

	[Token(Token = "0x40005C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private TimelineAction _onComplete;

	[Token(Token = "0x40005C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool _actionComplete;

	[Token(Token = "0x170000AB")]
	public ExposedReference<Collider> target
	{
		[Token(Token = "0x600068E")]
		[Address(RVA = "0x7EDAF8", Offset = "0x7EDAF8", VA = "0x7EDAF8")]
		set
		{
		}
	}

	[Token(Token = "0x170000AC")]
	public TimelineAction onComplete
	{
		[Token(Token = "0x600068F")]
		[Address(RVA = "0x7EDB7C", Offset = "0x7EDB7C", VA = "0x7EDB7C")]
		set
		{
		}
	}

	[Token(Token = "0x170000AD")]
	public float sightDistance
	{
		[Token(Token = "0x6000690")]
		[Address(RVA = "0x7EDB6C", Offset = "0x7EDB6C", VA = "0x7EDB6C")]
		set
		{
		}
	}

	[Token(Token = "0x170000AE")]
	public float lookMinimumTime
	{
		[Token(Token = "0x6000691")]
		[Address(RVA = "0x7EDB74", Offset = "0x7EDB74", VA = "0x7EDB74")]
		set
		{
		}
	}

	[Token(Token = "0x6000692")]
	[Address(RVA = "0x7EDBD4", Offset = "0x7EDBD4", VA = "0x7EDBD4", Slot = "23")]
	public override void Initialize(GameObject owner, TimelineAssetNamed baseAsset)
	{
	}

	[Token(Token = "0x6000693")]
	[Address(RVA = "0x7EDBDC", Offset = "0x7EDBDC", VA = "0x7EDBDC", Slot = "26")]
	public override void OnBehaviourEnter(Playable playable, FrameData info)
	{
	}

	[Token(Token = "0x6000694")]
	[Address(RVA = "0x7EDBE0", Offset = "0x7EDBE0", VA = "0x7EDBE0", Slot = "27")]
	public override void OnBehaviourExit(Playable playable, FrameData info)
	{
	}

	[Token(Token = "0x6000695")]
	[Address(RVA = "0x7EDBE8", Offset = "0x7EDBE8", VA = "0x7EDBE8", Slot = "28")]
	public override void OnBehaviourUpdate(Playable playable, FrameData info)
	{
	}

	[Token(Token = "0x6000696")]
	[Address(RVA = "0x7EDE3C", Offset = "0x7EDE3C", VA = "0x7EDE3C")]
	public LookAtTriggerBehaviour()
	{
	}
}
[Token(Token = "0x20000F1")]
public class MoveToPointAsset : TimelineAssetBase<MoveToPointBehaviour>
{
	[Token(Token = "0x40005C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private ExposedReference<Transform> _objectToMove;

	[Token(Token = "0x40005C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private ExposedReference<Transform> _targetPoint;

	[Token(Token = "0x40005C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private float _velocity;

	[Token(Token = "0x40005C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[SerializeField]
	private bool _pauseUntilTarget;

	[Token(Token = "0x40005CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
	[SerializeField]
	private bool _ignoreY;

	[Token(Token = "0x40005CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x64C998", Offset = "0x64C998")]
	[SerializeField]
	private SoundEffect _moveLoopSoundEffect;

	[Token(Token = "0x40005CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private SoundEffect _moveStartSoundEffect;

	[Token(Token = "0x40005CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private SoundEffect _moveStopSoundEffect;

	[Token(Token = "0x6000697")]
	[Address(RVA = "0x7F9428", Offset = "0x7F9428", VA = "0x7F9428", Slot = "6")]
	public override Playable CreatePlayable(PlayableGraph graph, GameObject owner)
	{
		return default(Playable);
	}

	[Token(Token = "0x6000698")]
	[Address(RVA = "0x7F9624", Offset = "0x7F9624", VA = "0x7F9624")]
	public MoveToPointAsset()
	{
	}
}
[Token(Token = "0x20000F2")]
public class MoveToPointBehaviour : TimelineBehaviourBase
{
	[Token(Token = "0x20005AD")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x643FA8", Offset = "0x643FA8")]
	private sealed class <>c__DisplayClass13_0
	{
		[Token(Token = "0x40025FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public MoveToPointBehaviour <>4__this;

		[Token(Token = "0x4002600")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MoveToPointHelper mtph;

		[Token(Token = "0x6002A79")]
		[Address(RVA = "0x7F9924", Offset = "0x7F9924", VA = "0x7F9924")]
		public <>c__DisplayClass13_0()
		{
		}

		[Token(Token = "0x6002A7A")]
		[Address(RVA = "0x7F9C68", Offset = "0x7F9C68", VA = "0x7F9C68")]
		internal void <OnBehaviourEnter>b__0()
		{
		}
	}

	[Token(Token = "0x40005CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform _objectToMove;

	[Token(Token = "0x40005CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform _targetPoint;

	[Token(Token = "0x40005D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float _velocity;

	[Token(Token = "0x40005D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public bool _pauseUntilTarget;

	[Token(Token = "0x40005D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
	public bool _ignoreY;

	[Token(Token = "0x40005D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3E")]
	public bool _finished;

	[Token(Token = "0x40005D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public MoveToPointHelper _mtph;

	[Token(Token = "0x40005D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public SoundEffect _moveLoopSoundEffect;

	[Token(Token = "0x40005D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public SoundEffect _moveStartSoundEffect;

	[Token(Token = "0x40005D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public SoundEffect _moveStopSoundEffect;

	[Token(Token = "0x40005D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private SoundChannel _moveLoopChannel;

	[Token(Token = "0x6000699")]
	[Address(RVA = "0x7F9674", Offset = "0x7F9674", VA = "0x7F9674", Slot = "23")]
	public override void Initialize(GameObject owner, TimelineAssetNamed baseAsset)
	{
	}

	[Token(Token = "0x600069A")]
	[Address(RVA = "0x7F967C", Offset = "0x7F967C", VA = "0x7F967C", Slot = "28")]
	public override void OnBehaviourUpdate(Playable playable, FrameData info)
	{
	}

	[Token(Token = "0x600069B")]
	[Address(RVA = "0x7F96C0", Offset = "0x7F96C0", VA = "0x7F96C0", Slot = "26")]
	public override void OnBehaviourEnter(Playable playable, FrameData info)
	{
	}

	[Token(Token = "0x600069C")]
	[Address(RVA = "0x7F9A60", Offset = "0x7F9A60", VA = "0x7F9A60", Slot = "27")]
	public override void OnBehaviourExit(Playable playable, FrameData info)
	{
	}

	[Token(Token = "0x600069D")]
	[Address(RVA = "0x7F9BB4", Offset = "0x7F9BB4", VA = "0x7F9BB4", Slot = "16")]
	public override void OnPlayableDestroy(Playable playable)
	{
	}

	[Token(Token = "0x600069E")]
	[Address(RVA = "0x7F9C60", Offset = "0x7F9C60", VA = "0x7F9C60")]
	public MoveToPointBehaviour()
	{
	}
}
[Token(Token = "0x20000F3")]
public class MoveToPointHelper : MonoBehaviour
{
	[Token(Token = "0x20005AE")]
	public delegate void OnFinished();

	[Token(Token = "0x40005D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector3 _targetPoint;

	[Token(Token = "0x40005DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float _velocity;

	[Token(Token = "0x40005DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool _finished;

	[Token(Token = "0x40005DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform _objectToMove;

	[Token(Token = "0x40005DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool _ignoreY;

	[Token(Token = "0x40005DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private PlayableDirector _resumeDirector;

	[Token(Token = "0x40005DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Vector3 _direction;

	[Token(Token = "0x40005E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private OnFinished _onFinished;

	[Token(Token = "0x170000AF")]
	public bool isFinished
	{
		[Token(Token = "0x600069F")]
		[Address(RVA = "0x7F9D5C", Offset = "0x7F9D5C", VA = "0x7F9D5C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60006A0")]
	[Address(RVA = "0x7F993C", Offset = "0x7F993C", VA = "0x7F993C")]
	public void Setup(Vector3 targetPoint, float velocity, PlayableDirector resumeDirector, bool ignoreY, OnFinished onFinished)
	{
	}

	[Token(Token = "0x60006A1")]
	[Address(RVA = "0x7F9D64", Offset = "0x7F9D64", VA = "0x7F9D64")]
	private void Update()
	{
	}

	[Token(Token = "0x60006A2")]
	[Address(RVA = "0x7FA504", Offset = "0x7FA504", VA = "0x7FA504")]
	public MoveToPointHelper()
	{
	}
}
[Token(Token = "0x20000F4")]
public class MusicAsset : TimelineAssetBase<MusicBehaviour>
{
	[Token(Token = "0x40005E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x64CA04", Offset = "0x64CA04")]
	[SerializeField]
	private bool _startTrack;

	[Token(Token = "0x40005E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private string _trackName;

	[Token(Token = "0x40005E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private string _variantName;

	[Token(Token = "0x40005E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x64CA70", Offset = "0x64CA70")]
	[SerializeField]
	private bool _stopMusic;

	[Token(Token = "0x40005E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x64CABC", Offset = "0x64CABC")]
	[SerializeField]
	private List<string> _enablePart;

	[Token(Token = "0x40005E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private List<string> _disablePart;

	[Token(Token = "0x60006A3")]
	[Address(RVA = "0x7FA800", Offset = "0x7FA800", VA = "0x7FA800", Slot = "6")]
	public override Playable CreatePlayable(PlayableGraph graph, GameObject owner)
	{
		return default(Playable);
	}

	[Token(Token = "0x60006A4")]
	[Address(RVA = "0x7FA958", Offset = "0x7FA958", VA = "0x7FA958")]
	public MusicAsset()
	{
	}
}
[Token(Token = "0x20000F5")]
public class MusicBehaviour : TimelineBehaviourBase
{
	[Token(Token = "0x40005E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool _startTrack;

	[Token(Token = "0x40005E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string _trackName;

	[Token(Token = "0x40005E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string _variantName;

	[Token(Token = "0x40005EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool _stopMusic;

	[Token(Token = "0x40005EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public List<string> _enablePart;

	[Token(Token = "0x40005EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public List<string> _disablePart;

	[Token(Token = "0x60006A5")]
	[Address(RVA = "0x7FA9A8", Offset = "0x7FA9A8", VA = "0x7FA9A8", Slot = "23")]
	public override void Initialize(GameObject owner, TimelineAssetNamed baseAsset)
	{
	}

	[Token(Token = "0x60006A6")]
	[Address(RVA = "0x7FA9B0", Offset = "0x7FA9B0", VA = "0x7FA9B0", Slot = "26")]
	public override void OnBehaviourEnter(Playable playable, FrameData info)
	{
	}

	[Token(Token = "0x60006A7")]
	[Address(RVA = "0x7FBCFC", Offset = "0x7FBCFC", VA = "0x7FBCFC")]
	public MusicBehaviour()
	{
	}
}
[Token(Token = "0x20000F6")]
public class ParticleEmissionAsset : TimelineAssetBase<ParticleEmissionBehaviour>
{
	[Serializable]
	[Token(Token = "0x20005AF")]
	public class Entry
	{
		[Token(Token = "0x4002601")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ExposedReference<GameObject> _object;

		[Token(Token = "0x6002A7F")]
		[Address(RVA = "0x80040C", Offset = "0x80040C", VA = "0x80040C")]
		public Entry()
		{
		}
	}

	[Token(Token = "0x40005ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private bool _includeChildren;

	[Token(Token = "0x40005EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private List<Entry> _particleSystem;

	[Token(Token = "0x60006A8")]
	[Address(RVA = "0x800154", Offset = "0x800154", VA = "0x800154", Slot = "6")]
	public override Playable CreatePlayable(PlayableGraph graph, GameObject owner)
	{
		return default(Playable);
	}

	[Token(Token = "0x60006A9")]
	[Address(RVA = "0x8003BC", Offset = "0x8003BC", VA = "0x8003BC")]
	public ParticleEmissionAsset()
	{
	}
}
[Token(Token = "0x20000F7")]
public class ParticleEmissionBehaviour : TimelineBehaviourBase
{
	[Token(Token = "0x40005EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool _includeChildren;

	[Token(Token = "0x40005F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<GameObject> _particleSystem;

	[Token(Token = "0x40005F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool _entered;

	[Token(Token = "0x60006AA")]
	[Address(RVA = "0x800414", Offset = "0x800414", VA = "0x800414", Slot = "23")]
	public override void Initialize(GameObject owner, TimelineAssetNamed baseAsset)
	{
	}

	[Token(Token = "0x60006AB")]
	[Address(RVA = "0x80041C", Offset = "0x80041C", VA = "0x80041C", Slot = "26")]
	public override void OnBehaviourEnter(Playable playable, FrameData info)
	{
	}

	[Token(Token = "0x60006AC")]
	[Address(RVA = "0x800660", Offset = "0x800660", VA = "0x800660", Slot = "28")]
	public override void OnBehaviourUpdate(Playable playable, FrameData info)
	{
	}

	[Token(Token = "0x60006AD")]
	[Address(RVA = "0x800694", Offset = "0x800694", VA = "0x800694", Slot = "27")]
	public override void OnBehaviourExit(Playable playable, FrameData info)
	{
	}

	[Token(Token = "0x60006AE")]
	[Address(RVA = "0x800428", Offset = "0x800428", VA = "0x800428")]
	private void StartEmission()
	{
	}

	[Token(Token = "0x60006AF")]
	[Address(RVA = "0x800698", Offset = "0x800698", VA = "0x800698")]
	private void StopEmission()
	{
	}

	[Token(Token = "0x60006B0")]
	[Address(RVA = "0x8008D0", Offset = "0x8008D0", VA = "0x8008D0", Slot = "24")]
	public override void OnJumped(double sourceTime, double targetTime)
	{
	}

	[Token(Token = "0x60006B1")]
	[Address(RVA = "0x800910", Offset = "0x800910", VA = "0x800910")]
	public ParticleEmissionBehaviour()
	{
	}
}
[Token(Token = "0x20000F8")]
public class PhysicsControlAsset : TimelineAssetBase<PhysicsControlBehaviour>
{
	[Token(Token = "0x20005B0")]
	public enum ModeChange
	{
		[Token(Token = "0x4002603")]
		None,
		[Token(Token = "0x4002604")]
		Kinematic,
		[Token(Token = "0x4002605")]
		Dynamic
	}

	[Token(Token = "0x40005F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private ModeChange _modeChange;

	[Token(Token = "0x40005F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private ExposedReference<GameObject> _rigidBody;

	[Token(Token = "0x40005F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private Vector3 _force;

	[Token(Token = "0x40005F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[SerializeField]
	private Vector3 _torque;

	[Token(Token = "0x40005F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private bool _instantaneous;

	[Token(Token = "0x60006B2")]
	[Address(RVA = "0x8D0DF8", Offset = "0x8D0DF8", VA = "0x8D0DF8", Slot = "6")]
	public override Playable CreatePlayable(PlayableGraph graph, GameObject owner)
	{
		return default(Playable);
	}

	[Token(Token = "0x60006B3")]
	[Address(RVA = "0x8D0F80", Offset = "0x8D0F80", VA = "0x8D0F80")]
	public PhysicsControlAsset()
	{
	}
}
[Token(Token = "0x20000F9")]
public class PhysicsControlBehaviour : TimelineBehaviourBase
{
	[Token(Token = "0x40005F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public PhysicsControlAsset.ModeChange _modeChange;

	[Token(Token = "0x40005F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject _rigidbody;

	[Token(Token = "0x40005F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector3 _force;

	[Token(Token = "0x40005FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Vector3 _torque;

	[Token(Token = "0x40005FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool _instantaneous;

	[Token(Token = "0x60006B4")]
	[Address(RVA = "0x8D0FD0", Offset = "0x8D0FD0", VA = "0x8D0FD0", Slot = "26")]
	public override void OnBehaviourEnter(Playable playable, FrameData info)
	{
	}

	[Token(Token = "0x60006B5")]
	[Address(RVA = "0x8D1224", Offset = "0x8D1224", VA = "0x8D1224", Slot = "28")]
	public override void OnBehaviourUpdate(Playable playable, FrameData info)
	{
	}

	[Token(Token = "0x60006B6")]
	[Address(RVA = "0x8D1388", Offset = "0x8D1388", VA = "0x8D1388", Slot = "23")]
	public override void Initialize(GameObject owner, TimelineAssetNamed baseAsset)
	{
	}

	[Token(Token = "0x60006B7")]
	[Address(RVA = "0x8D1390", Offset = "0x8D1390", VA = "0x8D1390")]
	public PhysicsControlBehaviour()
	{
	}
}
[Token(Token = "0x20000FA")]
public class PlayableDirectorFramePacer : MonoBehaviour
{
	[Token(Token = "0x40005FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private PlayableDirector _playableDirector;

	[Token(Token = "0x40005FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private int _frameRate;

	[Token(Token = "0x40005FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float _frameTime;

	[Token(Token = "0x60006B8")]
	[Address(RVA = "0x8D9A24", Offset = "0x8D9A24", VA = "0x8D9A24")]
	private void Start()
	{
	}

	[Token(Token = "0x60006B9")]
	[Address(RVA = "0x8D9A90", Offset = "0x8D9A90", VA = "0x8D9A90")]
	private void Update()
	{
	}

	[Token(Token = "0x60006BA")]
	[Address(RVA = "0x8D9B18", Offset = "0x8D9B18", VA = "0x8D9B18")]
	public PlayableDirectorFramePacer()
	{
	}
}
[Token(Token = "0x20000FB")]
public class PlayerMovementAsset : TimelineAssetBase<PlayerMovementBehaviour>
{
	[Token(Token = "0x20005B1")]
	public enum MovementLockAction
	{
		[Token(Token = "0x4002607")]
		None,
		[Token(Token = "0x4002608")]
		LockMovement,
		[Token(Token = "0x4002609")]
		LockMovementAndTurn,
		[Token(Token = "0x400260A")]
		UnlockMovementAndTurn
	}

	[Token(Token = "0x20005B2")]
	public enum HandsAction
	{
		[Token(Token = "0x400260C")]
		NoChange,
		[Token(Token = "0x400260D")]
		ShowHands,
		[Token(Token = "0x400260E")]
		HideHands
	}

	[Token(Token = "0x40005FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x64CB98", Offset = "0x64CB98")]
	[SerializeField]
	private bool _teleportPlayer;

	[Token(Token = "0x4000600")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private ExposedReference<GameObject> _teleportTarget;

	[Token(Token = "0x4000601")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x64CBF4", Offset = "0x64CBF4")]
	[SerializeField]
	private MovementLockAction _lockMovement;

	[Token(Token = "0x4000602")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[SerializeField]
	private HandsAction _hands;

	[Token(Token = "0x4000603")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	public bool _restoreOnExit;

	[Token(Token = "0x60006BB")]
	[Address(RVA = "0x8D9B28", Offset = "0x8D9B28", VA = "0x8D9B28", Slot = "6")]
	public override Playable CreatePlayable(PlayableGraph graph, GameObject owner)
	{
		return default(Playable);
	}

	[Token(Token = "0x60006BC")]
	[Address(RVA = "0x8D9C98", Offset = "0x8D9C98", VA = "0x8D9C98")]
	public PlayerMovementAsset()
	{
	}
}
[Token(Token = "0x20000FC")]
public class PlayerMovementBehaviour : TimelineBehaviourBase
{
	[Token(Token = "0x4000604")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool _teleportPlayer;

	[Token(Token = "0x4000605")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject _teleportTarget;

	[Token(Token = "0x4000606")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public PlayerMovementAsset.MovementLockAction _lockMovement;

	[Token(Token = "0x4000607")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public PlayerMovementAsset.HandsAction _hands;

	[Token(Token = "0x4000608")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool _restoreOnExit;

	[Token(Token = "0x4000609")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public PlayerMovementAsset.MovementLockAction _savedLockMovement;

	[Token(Token = "0x400060A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool _savedMovementEnable;

	[Token(Token = "0x400060B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	private bool _savedTurnEnable;

	[Token(Token = "0x60006BD")]
	[Address(RVA = "0x8D9CE8", Offset = "0x8D9CE8", VA = "0x8D9CE8", Slot = "23")]
	public override void Initialize(GameObject owner, TimelineAssetNamed baseAsset)
	{
	}

	[Token(Token = "0x60006BE")]
	[Address(RVA = "0x8D9CF0", Offset = "0x8D9CF0", VA = "0x8D9CF0", Slot = "26")]
	public override void OnBehaviourEnter(Playable playable, FrameData info)
	{
	}

	[Token(Token = "0x60006BF")]
	[Address(RVA = "0x8D9FAC", Offset = "0x8D9FAC", VA = "0x8D9FAC", Slot = "27")]
	public override void OnBehaviourExit(Playable playable, FrameData info)
	{
	}

	[Token(Token = "0x60006C0")]
	[Address(RVA = "0x8DA01C", Offset = "0x8DA01C", VA = "0x8DA01C")]
	public PlayerMovementBehaviour()
	{
	}
}
[Token(Token = "0x20000FD")]
public class RenderingSettingsAsset : TimelineAssetBase<RenderingSettingsBehaviour>
{
	[Serializable]
	[Token(Token = "0x20005B3")]
	public enum SkyboxType
	{
		[Token(Token = "0x4002610")]
		Skybox,
		[Token(Token = "0x4002611")]
		Colour
	}

	[Token(Token = "0x400060C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x64CC60", Offset = "0x64CC60")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64CC60", Offset = "0x64CC60")]
	[SerializeField]
	private bool _setFarClipPlane;

	[Token(Token = "0x400060D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64CCD0", Offset = "0x64CCD0")]
	[SerializeField]
	private float _farClipPlane;

	[Token(Token = "0x400060E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x64CD1C", Offset = "0x64CD1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64CD1C", Offset = "0x64CD1C")]
	[SerializeField]
	private bool _setFogSettings;

	[Token(Token = "0x400060F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64CD8C", Offset = "0x64CD8C")]
	[SerializeField]
	private bool _fogEnable;

	[Token(Token = "0x4000610")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64CDD8", Offset = "0x64CDD8")]
	[SerializeField]
	private float _fogStart;

	[Token(Token = "0x4000611")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64CE24", Offset = "0x64CE24")]
	[SerializeField]
	private float _fogEnd;

	[Token(Token = "0x4000612")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64CE70", Offset = "0x64CE70")]
	[SerializeField]
	private Color _fogColor;

	[Token(Token = "0x4000613")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64CEBC", Offset = "0x64CEBC")]
	[SerializeField]
	private AnimationCurve _fogBlend;

	[Token(Token = "0x4000614")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x64CF08", Offset = "0x64CF08")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64CF08", Offset = "0x64CF08")]
	[SerializeField]
	private bool _setSkyboxMaterial;

	[Token(Token = "0x4000615")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64CF78", Offset = "0x64CF78")]
	[SerializeField]
	private SkyboxType _skyboxType;

	[Token(Token = "0x4000616")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64CFC4", Offset = "0x64CFC4")]
	[SerializeField]
	private Color _skyboxClearColour;

	[Token(Token = "0x4000617")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64D010", Offset = "0x64D010")]
	[SerializeField]
	private Material _skyboxMaterial;

	[Token(Token = "0x60006C1")]
	[Address(RVA = "0x9CF5FC", Offset = "0x9CF5FC", VA = "0x9CF5FC", Slot = "6")]
	public override Playable CreatePlayable(PlayableGraph graph, GameObject owner)
	{
		return default(Playable);
	}

	[Token(Token = "0x60006C2")]
	[Address(RVA = "0x9CF834", Offset = "0x9CF834", VA = "0x9CF834")]
	public RenderingSettingsAsset()
	{
	}
}
[Token(Token = "0x20000FE")]
public class RenderingSettingsBehaviour : TimelineBehaviourBase
{
	[Token(Token = "0x4000618")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool _setFarClipPlane;

	[Token(Token = "0x4000619")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float _farClipPlane;

	[Token(Token = "0x400061A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool _setFogSettings;

	[Token(Token = "0x400061B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool _fogEnable;

	[Token(Token = "0x400061C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Color _fogColor;

	[Token(Token = "0x400061D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float _fogStart;

	[Token(Token = "0x400061E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float _fogEnd;

	[Token(Token = "0x400061F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AnimationCurve _fogBlend;

	[Token(Token = "0x4000620")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool _setSkyboxMaterial;

	[Token(Token = "0x4000621")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Material _skyboxMaterial;

	[Token(Token = "0x4000622")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Color _initialFogColor;

	[Token(Token = "0x4000623")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float _initialFogStart;

	[Token(Token = "0x4000624")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private float _initialFogEnd;

	[Token(Token = "0x4000625")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public RenderingSettingsAsset.SkyboxType _skyboxType;

	[Token(Token = "0x4000626")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public Color _skyboxClearColor;

	[Token(Token = "0x4000627")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Camera mainCameraPicoLeft;

	[Token(Token = "0x4000628")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Camera mainCameraPicoRight;

	[Token(Token = "0x4000629")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static RenderingSettingsBehaviour instance;

	[Token(Token = "0x60006C3")]
	[Address(RVA = "0x9CF88C", Offset = "0x9CF88C", VA = "0x9CF88C", Slot = "23")]
	public override void Initialize(GameObject owner, TimelineAssetNamed baseAsset)
	{
	}

	[Token(Token = "0x60006C4")]
	[Address(RVA = "0x9CF900", Offset = "0x9CF900", VA = "0x9CF900")]
	private void GrabPicoEyes()
	{
	}

	[Token(Token = "0x60006C5")]
	[Address(RVA = "0x9CF9F8", Offset = "0x9CF9F8", VA = "0x9CF9F8", Slot = "26")]
	public override void OnBehaviourEnter(Playable playable, FrameData info)
	{
	}

	[Token(Token = "0x60006C6")]
	[Address(RVA = "0x9D0004", Offset = "0x9D0004", VA = "0x9D0004", Slot = "28")]
	public override void OnBehaviourUpdate(Playable playable, FrameData info)
	{
	}

	[Token(Token = "0x60006C7")]
	[Address(RVA = "0x9D01C0", Offset = "0x9D01C0", VA = "0x9D01C0", Slot = "27")]
	public override void OnBehaviourExit(Playable playable, FrameData info)
	{
	}

	[Token(Token = "0x60006C8")]
	[Address(RVA = "0x9D0214", Offset = "0x9D0214", VA = "0x9D0214")]
	public RenderingSettingsBehaviour()
	{
	}
}
[Token(Token = "0x20000FF")]
public class ResumeTimeline : MonoBehaviour
{
	[Token(Token = "0x400062A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float _timeRemaining;

	[Token(Token = "0x400062B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private PlayableDirector _director;

	[Token(Token = "0x400062C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool _init;

	[Token(Token = "0x60006C9")]
	[Address(RVA = "0x9D02C0", Offset = "0x9D02C0", VA = "0x9D02C0")]
	public void Init(PlayableDirector director, float time)
	{
	}

	[Token(Token = "0x60006CA")]
	[Address(RVA = "0x9D02D4", Offset = "0x9D02D4", VA = "0x9D02D4")]
	private void Update()
	{
	}

	[Token(Token = "0x60006CB")]
	[Address(RVA = "0x9D03E0", Offset = "0x9D03E0", VA = "0x9D03E0")]
	public ResumeTimeline()
	{
	}
}
[Token(Token = "0x2000100")]
public class SkyboxMaterialPropertyAsset : TimelineAssetBase<SkyboxMaterialPropertyBehaviour>
{
	[Token(Token = "0x400062D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string _propertyName;

	[Token(Token = "0x400062E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AnimationCurve _curve;

	[Token(Token = "0x60006CC")]
	[Address(RVA = "0x865898", Offset = "0x865898", VA = "0x865898", Slot = "6")]
	public override Playable CreatePlayable(PlayableGraph graph, GameObject owner)
	{
		return default(Playable);
	}

	[Token(Token = "0x60006CD")]
	[Address(RVA = "0x865970", Offset = "0x865970", VA = "0x865970")]
	public SkyboxMaterialPropertyAsset()
	{
	}
}
[Token(Token = "0x2000101")]
public class SkyboxMaterialPropertyBehaviour : TimelineBehaviourBase
{
	[Token(Token = "0x400062F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string _propertyName;

	[Token(Token = "0x4000630")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AnimationCurve _curve;

	[Token(Token = "0x4000631")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material _skyboxMaterial;

	[Token(Token = "0x4000632")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int _nameId;

	[Token(Token = "0x60006CE")]
	[Address(RVA = "0x8659C0", Offset = "0x8659C0", VA = "0x8659C0", Slot = "23")]
	public override void Initialize(GameObject owner, TimelineAssetNamed baseAsset)
	{
	}

	[Token(Token = "0x60006CF")]
	[Address(RVA = "0x8659C8", Offset = "0x8659C8", VA = "0x8659C8", Slot = "26")]
	public override void OnBehaviourEnter(Playable playable, FrameData info)
	{
	}

	[Token(Token = "0x60006D0")]
	[Address(RVA = "0x865A34", Offset = "0x865A34", VA = "0x865A34", Slot = "28")]
	public override void OnBehaviourUpdate(Playable playable, FrameData info)
	{
	}

	[Token(Token = "0x60006D1")]
	[Address(RVA = "0x865B0C", Offset = "0x865B0C", VA = "0x865B0C")]
	public SkyboxMaterialPropertyBehaviour()
	{
	}
}
[Token(Token = "0x2000102")]
public class SoundEffectAsset : TimelineAssetBase<SoundEffectBehaviour>
{
	[Token(Token = "0x20005B4")]
	public enum Action
	{
		[Token(Token = "0x4002613")]
		Start,
		[Token(Token = "0x4002614")]
		Stop,
		[Token(Token = "0x4002615")]
		StartAndStop
	}

	[Token(Token = "0x4000633")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Action _action;

	[Token(Token = "0x4000634")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private ExposedReference<GameObject> _audioSource;

	[Token(Token = "0x4000635")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[ObsoleteField]
	[SerializeField]
	private List<AudioClip> _audioClip;

	[Token(Token = "0x4000636")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private SoundEffect _soundEffectName;

	[Token(Token = "0x60006D2")]
	[Address(RVA = "0x86ADDC", Offset = "0x86ADDC", VA = "0x86ADDC", Slot = "6")]
	public override Playable CreatePlayable(PlayableGraph graph, GameObject owner)
	{
		return default(Playable);
	}

	[Token(Token = "0x60006D3")]
	[Address(RVA = "0x86AF2C", Offset = "0x86AF2C", VA = "0x86AF2C")]
	public SoundEffectAsset()
	{
	}
}
[Token(Token = "0x2000103")]
public class SoundEffectBehaviour : TimelineBehaviourBase
{
	[Token(Token = "0x4000637")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	public GameObject _audioSource;

	[Token(Token = "0x4000638")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	public List<AudioClip> _audioClip;

	[Token(Token = "0x4000639")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	public SoundEffectAsset.Action _action;

	[Token(Token = "0x400063A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	public Transform _soundEffectPrefab;

	[Token(Token = "0x400063B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	public SoundEffect _soundEffectName;

	[Token(Token = "0x400063C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private AudioSource _source;

	[Token(Token = "0x60006D4")]
	[Address(RVA = "0x86AF7C", Offset = "0x86AF7C", VA = "0x86AF7C", Slot = "23")]
	public override void Initialize(GameObject owner, TimelineAssetNamed baseAsset)
	{
	}

	[Token(Token = "0x60006D5")]
	[Address(RVA = "0x86AF84", Offset = "0x86AF84", VA = "0x86AF84", Slot = "26")]
	public override void OnBehaviourEnter(Playable playable, FrameData info)
	{
	}

	[Token(Token = "0x60006D6")]
	[Address(RVA = "0x86B51C", Offset = "0x86B51C", VA = "0x86B51C", Slot = "27")]
	public override void OnBehaviourExit(Playable playable, FrameData info)
	{
	}

	[Token(Token = "0x60006D7")]
	[Address(RVA = "0x86B600", Offset = "0x86B600", VA = "0x86B600")]
	public SoundEffectBehaviour()
	{
	}
}
[Token(Token = "0x2000104")]
public class SpawnPrefabAsset : TimelineAssetBase<SpawnPrefabBehaviour>
{
	[Token(Token = "0x20005B5")]
	public enum SpawnPrefabPositionMode
	{
		[Token(Token = "0x4002617")]
		Object,
		[Token(Token = "0x4002618")]
		Headset,
		[Token(Token = "0x4002619")]
		ControllerLeft,
		[Token(Token = "0x400261A")]
		ControllerRight
	}

	[Token(Token = "0x400063D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64D124", Offset = "0x64D124")]
	[SerializeField]
	private List<Transform> _prefabToSpawn;

	[Token(Token = "0x400063E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64D170", Offset = "0x64D170")]
	[SerializeField]
	private int _prefabPoolSize;

	[Token(Token = "0x400063F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64D1BC", Offset = "0x64D1BC")]
	[SerializeField]
	private SpawnPrefabPositionMode _positionMode;

	[Token(Token = "0x4000640")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64D208", Offset = "0x64D208")]
	[SerializeField]
	private ExposedReference<Transform> _objectPosition;

	[Token(Token = "0x4000641")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64D254", Offset = "0x64D254")]
	[SerializeField]
	private Vector3 _offset;

	[Token(Token = "0x4000642")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64D2A0", Offset = "0x64D2A0")]
	[SerializeField]
	private Vector3 _randomSpawnArea;

	[Token(Token = "0x4000643")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64D2EC", Offset = "0x64D2EC")]
	[SerializeField]
	private bool _orientationAsObject;

	[Token(Token = "0x4000644")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64D338", Offset = "0x64D338")]
	[SerializeField]
	private Vector3 _minRandomAngle;

	[Token(Token = "0x4000645")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64D384", Offset = "0x64D384")]
	[SerializeField]
	private Vector3 _maxRandomAngle;

	[Token(Token = "0x4000646")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64D3D0", Offset = "0x64D3D0")]
	[SerializeField]
	private int _numOfPrefabsToSpawn;

	[Token(Token = "0x4000647")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64D41C", Offset = "0x64D41C")]
	[SerializeField]
	private bool _createInsideParent;

	[Token(Token = "0x4000648")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Transform[] _pool;

	[Token(Token = "0x60006D8")]
	[Address(RVA = "0x86D774", Offset = "0x86D774", VA = "0x86D774")]
	public void Awake()
	{
	}

	[Token(Token = "0x60006D9")]
	[Address(RVA = "0x86D7D0", Offset = "0x86D7D0", VA = "0x86D7D0", Slot = "6")]
	public override Playable CreatePlayable(PlayableGraph graph, GameObject owner)
	{
		return default(Playable);
	}

	[Token(Token = "0x60006DA")]
	[Address(RVA = "0x86DA94", Offset = "0x86DA94", VA = "0x86DA94")]
	public SpawnPrefabAsset()
	{
	}
}
[Token(Token = "0x2000105")]
public class SpawnPrefabBehaviour : TimelineBehaviourBase
{
	[Token(Token = "0x4000649")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<Transform> _prefabToSpawn;

	[Token(Token = "0x400064A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private SpawnPrefabAsset.SpawnPrefabPositionMode _positionMode;

	[Token(Token = "0x400064B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Transform _objectPosition;

	[Token(Token = "0x400064C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3 _offset;

	[Token(Token = "0x400064D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Vector3 _randomSpawnArea;

	[Token(Token = "0x400064E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool _orientationAsObject;

	[Token(Token = "0x400064F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private int _numOfPrefabsToSpawn;

	[Token(Token = "0x4000650")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool _createInsideParent;

	[Token(Token = "0x4000651")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private Vector3 _minRandomAngle;

	[Token(Token = "0x4000652")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Vector3 _maxRandomAngle;

	[Token(Token = "0x4000653")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Transform[] _pool;

	[Token(Token = "0x60006DB")]
	[Address(RVA = "0x86DAEC", Offset = "0x86DAEC", VA = "0x86DAEC", Slot = "23")]
	public override void Initialize(GameObject owner, TimelineAssetNamed baseAsset)
	{
	}

	[Token(Token = "0x60006DC")]
	[Address(RVA = "0x86DAF4", Offset = "0x86DAF4", VA = "0x86DAF4", Slot = "26")]
	public override void OnBehaviourEnter(Playable playable, FrameData info)
	{
	}

	[Token(Token = "0x60006DD")]
	[Address(RVA = "0x86D94C", Offset = "0x86D94C", VA = "0x86D94C")]
	public void Setup(List<Transform> prefabToSpawn, SpawnPrefabAsset.SpawnPrefabPositionMode positionMode, ExposedReference<Transform> objectPositon, Vector3 offset, Vector3 randomSpawnArea, bool orientationAsObject, int numOfPrefabsToSpawn, bool createInsideParent, Vector3 minRandomAngle, Vector3 maxRandomAngle, [Optional] Transform[] pool)
	{
	}

	[Token(Token = "0x60006DE")]
	[Address(RVA = "0x86E2E4", Offset = "0x86E2E4", VA = "0x86E2E4")]
	public SpawnPrefabBehaviour()
	{
	}
}
[Token(Token = "0x2000106")]
public class StartTimelineAsset : TimelineAssetBase<StartTimelineBehaviour>
{
	[Token(Token = "0x20005B6")]
	public enum Action
	{
		[Token(Token = "0x400261C")]
		MovePlayHeadAndStart,
		[Token(Token = "0x400261D")]
		MovePlayHead,
		[Token(Token = "0x400261E")]
		StartAtCurrentPosition,
		[Token(Token = "0x400261F")]
		None
	}

	[Token(Token = "0x4000654")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x64D468", Offset = "0x64D468")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64D468", Offset = "0x64D468")]
	[SerializeField]
	public ExposedReference<PlayableDirector> _timeline;

	[Token(Token = "0x4000655")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64D4D8", Offset = "0x64D4D8")]
	[SerializeField]
	public Action _action;

	[Token(Token = "0x4000656")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64D524", Offset = "0x64D524")]
	[SerializeField]
	private JumpTargetSelector _position;

	[Token(Token = "0x4000657")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private PlayableGraph _graph;

	[Token(Token = "0x60006DF")]
	[Address(RVA = "0x871244", Offset = "0x871244", VA = "0x871244", Slot = "6")]
	public override Playable CreatePlayable(PlayableGraph graph, GameObject owner)
	{
		return default(Playable);
	}

	[Token(Token = "0x60006E0")]
	[Address(RVA = "0x8713D4", Offset = "0x8713D4", VA = "0x8713D4")]
	public void RefreshDirector()
	{
	}

	[Token(Token = "0x60006E1")]
	[Address(RVA = "0x871584", Offset = "0x871584", VA = "0x871584")]
	public StartTimelineAsset()
	{
	}
}
[Token(Token = "0x2000107")]
public class StartTimelineBehaviour : TimelineBehaviourBase
{
	[Token(Token = "0x4000658")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private PlayableDirector _timeline;

	[Token(Token = "0x4000659")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private JumpTargetSelector _position;

	[Token(Token = "0x400065A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private StartTimelineAsset.Action _action;

	[Token(Token = "0x60006E2")]
	[Address(RVA = "0x8715D4", Offset = "0x8715D4", VA = "0x8715D4", Slot = "23")]
	public override void Initialize(GameObject owner, TimelineAssetNamed baseAsset)
	{
	}

	[Token(Token = "0x60006E3")]
	[Address(RVA = "0x87132C", Offset = "0x87132C", VA = "0x87132C")]
	public void Setup(ExposedReference<PlayableDirector> timeline, JumpTargetSelector position, StartTimelineAsset.Action action)
	{
	}

	[Token(Token = "0x60006E4")]
	[Address(RVA = "0x8715DC", Offset = "0x8715DC", VA = "0x8715DC", Slot = "26")]
	public override void OnBehaviourEnter(Playable playable, FrameData info)
	{
	}

	[Token(Token = "0x60006E5")]
	[Address(RVA = "0x871674", Offset = "0x871674", VA = "0x871674")]
	public StartTimelineBehaviour()
	{
	}
}
[Token(Token = "0x2000108")]
public class StartTimelineOnInteractionComplete : MonoBehaviour
{
	[Token(Token = "0x60006E6")]
	[Address(RVA = "0x87167C", Offset = "0x87167C", VA = "0x87167C")]
	public StartTimelineOnInteractionComplete()
	{
	}
}
[Token(Token = "0x2000109")]
public class StateChangeAsset : TimelineAssetBase<StateChangeBehaviour>
{
	[Serializable]
	[Token(Token = "0x20005B7")]
	public class StateChange
	{
		[Token(Token = "0x20008A3")]
		public enum Action
		{
			[Token(Token = "0x4002C8B")]
			Set,
			[Token(Token = "0x4002C8C")]
			Invert,
			[Token(Token = "0x4002C8D")]
			Increment,
			[Token(Token = "0x4002C8E")]
			Decrement
		}

		[Token(Token = "0x4002620")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Value.Type type;

		[Token(Token = "0x4002621")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public Action action;

		[Token(Token = "0x4002622")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string variableName;

		[Token(Token = "0x4002623")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int value;

		[Token(Token = "0x4002624")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool valueFlag;

		[Token(Token = "0x4002625")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
		public bool localScope;

		[Token(Token = "0x6002A80")]
		[Address(RVA = "0x870564", Offset = "0x870564", VA = "0x870564")]
		public void Perform(Transform scope)
		{
		}

		[Token(Token = "0x6002A81")]
		[Address(RVA = "0x871794", Offset = "0x871794", VA = "0x871794")]
		public StateChange()
		{
		}
	}

	[Token(Token = "0x400065B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private List<StateChange> _state;

	[Token(Token = "0x60006E7")]
	[Address(RVA = "0x871684", Offset = "0x871684", VA = "0x871684", Slot = "6")]
	public override Playable CreatePlayable(PlayableGraph graph, GameObject owner)
	{
		return default(Playable);
	}

	[Token(Token = "0x60006E8")]
	[Address(RVA = "0x871744", Offset = "0x871744", VA = "0x871744")]
	public StateChangeAsset()
	{
	}
}
[Token(Token = "0x200010A")]
public class StateChangeBehaviour : TimelineBehaviourBase
{
	[Token(Token = "0x400065C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<StateChangeAsset.StateChange> _state;

	[Token(Token = "0x170000B0")]
	public List<StateChangeAsset.StateChange> state
	{
		[Token(Token = "0x60006E9")]
		[Address(RVA = "0x87173C", Offset = "0x87173C", VA = "0x87173C")]
		set
		{
		}
	}

	[Token(Token = "0x60006EA")]
	[Address(RVA = "0x87179C", Offset = "0x87179C", VA = "0x87179C", Slot = "23")]
	public override void Initialize(GameObject owner, TimelineAssetNamed baseAsset)
	{
	}

	[Token(Token = "0x60006EB")]
	[Address(RVA = "0x8717A4", Offset = "0x8717A4", VA = "0x8717A4", Slot = "26")]
	public override void OnBehaviourEnter(Playable playable, FrameData info)
	{
	}

	[Token(Token = "0x60006EC")]
	[Address(RVA = "0x871908", Offset = "0x871908", VA = "0x871908")]
	public StateChangeBehaviour()
	{
	}
}
[Token(Token = "0x200010B")]
public class StateTriggerAsset : TimelineAssetBase<StateTriggerBehaviour>
{
	[Serializable]
	[Token(Token = "0x20005B8")]
	public class StateCondition
	{
		[Token(Token = "0x20008A4")]
		public enum Condition
		{
			[Token(Token = "0x4002C90")]
			EqualTo,
			[Token(Token = "0x4002C91")]
			NotEqualTo,
			[Token(Token = "0x4002C92")]
			GreaterThan,
			[Token(Token = "0x4002C93")]
			LessThan
		}

		[Token(Token = "0x20008A5")]
		public enum OperatorType
		{
			[Token(Token = "0x4002C95")]
			And,
			[Token(Token = "0x4002C96")]
			Or
		}

		[Token(Token = "0x4002626")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private OperatorType operatorSelection;

		[Token(Token = "0x4002627")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private Value.Type type;

		[Token(Token = "0x4002628")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private string variableName;

		[Token(Token = "0x4002629")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Condition condition;

		[Token(Token = "0x400262A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private int value;

		[Token(Token = "0x400262B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private bool valueBool;

		[Token(Token = "0x400262C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		[SerializeField]
		private bool localScope;

		[Token(Token = "0x17000261")]
		public OperatorType operatorOption
		{
			[Token(Token = "0x6002A82")]
			[Address(RVA = "0x871A48", Offset = "0x871A48", VA = "0x871A48")]
			get
			{
				return default(OperatorType);
			}
		}

		[Token(Token = "0x6002A83")]
		[Address(RVA = "0x871A50", Offset = "0x871A50", VA = "0x871A50")]
		public bool IsSatisfied(Transform context)
		{
			return default(bool);
		}

		[Token(Token = "0x6002A84")]
		[Address(RVA = "0x871CB0", Offset = "0x871CB0", VA = "0x871CB0")]
		public StateCondition()
		{
		}
	}

	[Token(Token = "0x400065D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x64D580", Offset = "0x64D580")]
	[SerializeField]
	private List<StateCondition> _condition;

	[Token(Token = "0x400065E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x64D5CC", Offset = "0x64D5CC")]
	[SerializeField]
	private JumpTargetSelector _jumpTarget;

	[Token(Token = "0x60006ED")]
	[Address(RVA = "0x871910", Offset = "0x871910", VA = "0x871910", Slot = "6")]
	public override Playable CreatePlayable(PlayableGraph graph, GameObject owner)
	{
		return default(Playable);
	}

	[Token(Token = "0x60006EE")]
	[Address(RVA = "0x8719F8", Offset = "0x8719F8", VA = "0x8719F8")]
	public StateTriggerAsset()
	{
	}
}
[Token(Token = "0x200010C")]
public class StateTriggerBehaviour : TimelineBehaviourBase
{
	[Token(Token = "0x400065F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private JumpTargetSelector _jumpTarget;

	[Token(Token = "0x4000660")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<StateTriggerAsset.StateCondition> _condition;

	[Token(Token = "0x170000B1")]
	public JumpTargetSelector jumpTarget
	{
		[Token(Token = "0x60006EF")]
		[Address(RVA = "0x8719F0", Offset = "0x8719F0", VA = "0x8719F0")]
		set
		{
		}
	}

	[Token(Token = "0x170000B2")]
	public List<StateTriggerAsset.StateCondition> condition
	{
		[Token(Token = "0x60006F0")]
		[Address(RVA = "0x8719E8", Offset = "0x8719E8", VA = "0x8719E8")]
		set
		{
		}
	}

	[Token(Token = "0x60006F1")]
	[Address(RVA = "0x871CB8", Offset = "0x871CB8", VA = "0x871CB8", Slot = "26")]
	public override void OnBehaviourEnter(Playable playable, FrameData info)
	{
	}

	[Token(Token = "0x60006F2")]
	[Address(RVA = "0x871CBC", Offset = "0x871CBC", VA = "0x871CBC", Slot = "28")]
	public override void OnBehaviourUpdate(Playable playable, FrameData info)
	{
	}

	[Token(Token = "0x60006F3")]
	[Address(RVA = "0x871CC0", Offset = "0x871CC0", VA = "0x871CC0")]
	public void EvaluateCondition()
	{
	}

	[Token(Token = "0x60006F4")]
	[Address(RVA = "0x871D60", Offset = "0x871D60", VA = "0x871D60")]
	public static bool EvaluateCondition(List<StateTriggerAsset.StateCondition> condition, Transform context)
	{
		return default(bool);
	}

	[Token(Token = "0x60006F5")]
	[Address(RVA = "0x871F3C", Offset = "0x871F3C", VA = "0x871F3C", Slot = "25")]
	public override void OnPausedFrame()
	{
	}

	[Token(Token = "0x60006F6")]
	[Address(RVA = "0x871F74", Offset = "0x871F74", VA = "0x871F74", Slot = "23")]
	public override void Initialize(GameObject owner, TimelineAssetNamed baseAsset)
	{
	}

	[Token(Token = "0x60006F7")]
	[Address(RVA = "0x871F7C", Offset = "0x871F7C", VA = "0x871F7C")]
	public StateTriggerBehaviour()
	{
	}
}
[Token(Token = "0x200010D")]
public class TimeLabelAsset : TimelineAssetBase<TimeLabelBehaviour>
{
	[Token(Token = "0x60006F8")]
	[Address(RVA = "0x887844", Offset = "0x887844", VA = "0x887844", Slot = "6")]
	public override Playable CreatePlayable(PlayableGraph graph, GameObject owner)
	{
		return default(Playable);
	}

	[Token(Token = "0x60006F9")]
	[Address(RVA = "0x8878BC", Offset = "0x8878BC", VA = "0x8878BC")]
	public TimeLabelAsset()
	{
	}
}
[Token(Token = "0x200010E")]
public class TimeLabelBehaviour : TimelineBehaviourBase
{
	[Token(Token = "0x60006FA")]
	[Address(RVA = "0x88790C", Offset = "0x88790C", VA = "0x88790C", Slot = "23")]
	public override void Initialize(GameObject owner, TimelineAssetNamed baseAsset)
	{
	}

	[Token(Token = "0x60006FB")]
	[Address(RVA = "0x887A24", Offset = "0x887A24", VA = "0x887A24")]
	public TimeLabelBehaviour()
	{
	}
}
[Serializable]
[Token(Token = "0x200010F")]
public class TimelineAction
{
	[Token(Token = "0x4000661")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	private JumpTargetSelector _jumpTarget;

	[Token(Token = "0x4000662")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private TimelineBehaviourBase _behaviour;

	[Token(Token = "0x170000B3")]
	public TimelineBehaviourBase behaviour
	{
		[Token(Token = "0x60006FD")]
		[Address(RVA = "0x888814", Offset = "0x888814", VA = "0x888814")]
		get
		{
			return null;
		}
		[Token(Token = "0x60006FE")]
		[Address(RVA = "0x88881C", Offset = "0x88881C", VA = "0x88881C")]
		set
		{
		}
	}

	[Token(Token = "0x170000B4")]
	public PlayableDirector director
	{
		[Token(Token = "0x60006FF")]
		[Address(RVA = "0x888858", Offset = "0x888858", VA = "0x888858")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60006FC")]
	[Address(RVA = "0x888734", Offset = "0x888734", VA = "0x888734")]
	public TimelineAction(TimelineBehaviourBase behaviour)
	{
	}

	[Token(Token = "0x6000700")]
	[Address(RVA = "0x88888C", Offset = "0x88888C", VA = "0x88888C")]
	public void PerformAction(PlayableDirector dir)
	{
	}

	[Token(Token = "0x6000701")]
	[Address(RVA = "0x8888EC", Offset = "0x8888EC", VA = "0x8888EC")]
	public string DebugString()
	{
		return null;
	}
}
[Token(Token = "0x2000110")]
internal interface ITimelineClipStore
{
	[Token(Token = "0x170000B5")]
	TimelineClip clip
	{
		[Token(Token = "0x6000703")]
		get;
		[Token(Token = "0x6000702")]
		set;
	}
}
[Token(Token = "0x2000111")]
internal interface INamedTimelineClip
{
	[Token(Token = "0x170000B6")]
	string clipName
	{
		[Token(Token = "0x6000705")]
		get;
		[Token(Token = "0x6000704")]
		set;
	}
}
[Token(Token = "0x2000112")]
public class TimelineAssetBase<T> : TimelineAssetNamed, ITimelineClipStore, INamedTimelineClip where T : TimelineBehaviourBase, new()
{
	[Token(Token = "0x4000663")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private T _behaviour;

	[Token(Token = "0x4000664")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private TimelineClip _clip;

	[Token(Token = "0x170000B7")]
	public T behaviour
	{
		[Token(Token = "0x6000706")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000B8")]
	public new TimelineClip clip
	{
		[Token(Token = "0x6000707")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000708")]
		set
		{
		}
	}

	[Token(Token = "0x170000B9")]
	public string clipName
	{
		[Token(Token = "0x6000709")]
		get
		{
			return null;
		}
		[Token(Token = "0x600070A")]
		set
		{
		}
	}

	[Token(Token = "0x600070B")]
	public override Playable CreatePlayable(PlayableGraph graph, GameObject owner)
	{
		return default(Playable);
	}

	[Token(Token = "0x600070C")]
	public TimelineAssetBase()
	{
	}
}
[Token(Token = "0x2000113")]
public class TimelineAssetNamed : PlayableAsset
{
	[Token(Token = "0x4000665")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public string _name;

	[Token(Token = "0x170000BA")]
	public string timelineClipName
	{
		[Token(Token = "0x600070D")]
		[Address(RVA = "0x88891C", Offset = "0x88891C", VA = "0x88891C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000BB")]
	public TimelineClip clip
	{
		[Token(Token = "0x600070E")]
		[Address(RVA = "0x888924", Offset = "0x888924", VA = "0x888924")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600070F")]
	[Address(RVA = "0x888A10", Offset = "0x888A10", VA = "0x888A10", Slot = "6")]
	public override Playable CreatePlayable(PlayableGraph graph, GameObject owner)
	{
		return default(Playable);
	}

	[Token(Token = "0x6000710")]
	[Address(RVA = "0x888A70", Offset = "0x888A70", VA = "0x888A70")]
	public TimelineAssetNamed()
	{
	}
}
[Token(Token = "0x2000114")]
public class TimelineBehaviourBase : PlayableBehaviour
{
	[Token(Token = "0x4000666")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private PlayableDirector _director;

	[Token(Token = "0x4000667")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private TimelineAssetNamed _baseAsset;

	[Token(Token = "0x4000668")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool _hasEntered;

	[Token(Token = "0x170000BC")]
	public PlayableDirector director
	{
		[Token(Token = "0x6000711")]
		[Address(RVA = "0x888884", Offset = "0x888884", VA = "0x888884")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000BD")]
	public TimelineAssetNamed baseAsset
	{
		[Token(Token = "0x6000712")]
		[Address(RVA = "0x888A78", Offset = "0x888A78", VA = "0x888A78")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000BE")]
	public bool hasEntered
	{
		[Token(Token = "0x6000713")]
		[Address(RVA = "0x888A80", Offset = "0x888A80", VA = "0x888A80")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000714")]
	[Address(RVA = "0x888B3C", Offset = "0x888B3C", VA = "0x888B3C")]
	public bool IsInTimeRange(double time)
	{
		return default(bool);
	}

	[Token(Token = "0x6000715")]
	[Address(RVA = "0x887910", Offset = "0x887910", VA = "0x887910", Slot = "23")]
	public virtual void Initialize(GameObject owner, TimelineAssetNamed baseAsset)
	{
	}

	[Token(Token = "0x6000716")]
	[Address(RVA = "0x888D00", Offset = "0x888D00", VA = "0x888D00", Slot = "17")]
	public override void OnBehaviourPlay(Playable playable, FrameData info)
	{
	}

	[Token(Token = "0x6000717")]
	[Address(RVA = "0x888EE4", Offset = "0x888EE4", VA = "0x888EE4", Slot = "24")]
	public virtual void OnJumped(double sourceTime, double targetTime)
	{
	}

	[Token(Token = "0x6000718")]
	[Address(RVA = "0x888F1C", Offset = "0x888F1C", VA = "0x888F1C", Slot = "25")]
	public virtual void OnPausedFrame()
	{
	}

	[Token(Token = "0x6000719")]
	[Address(RVA = "0x888F20", Offset = "0x888F20", VA = "0x888F20", Slot = "18")]
	public override void OnBehaviourPause(Playable playable, FrameData info)
	{
	}

	[Token(Token = "0x600071A")]
	[Address(RVA = "0x888F24", Offset = "0x888F24", VA = "0x888F24", Slot = "26")]
	public virtual void OnBehaviourEnter(Playable playable, FrameData info)
	{
	}

	[Token(Token = "0x600071B")]
	[Address(RVA = "0x888F28", Offset = "0x888F28", VA = "0x888F28", Slot = "27")]
	public virtual void OnBehaviourExit(Playable playable, FrameData info)
	{
	}

	[Token(Token = "0x600071C")]
	[Address(RVA = "0x888F2C", Offset = "0x888F2C", VA = "0x888F2C", Slot = "28")]
	public virtual void OnBehaviourUpdate(Playable playable, FrameData info)
	{
	}

	[Token(Token = "0x600071D")]
	[Address(RVA = "0x888F30", Offset = "0x888F30", VA = "0x888F30", Slot = "19")]
	public override void PrepareData(Playable playable, FrameData info)
	{
	}

	[Token(Token = "0x600071E")]
	[Address(RVA = "0x888F34", Offset = "0x888F34", VA = "0x888F34", Slot = "21")]
	public override void ProcessFrame(Playable playable, FrameData info, object playerData)
	{
	}

	[Token(Token = "0x600071F")]
	[Address(RVA = "0x888F38", Offset = "0x888F38", VA = "0x888F38", Slot = "20")]
	public override void PrepareFrame(Playable playable, FrameData info)
	{
	}

	[Token(Token = "0x6000720")]
	[Address(RVA = "0x887A2C", Offset = "0x887A2C", VA = "0x887A2C")]
	public TimelineBehaviourBase()
	{
	}
}
[Token(Token = "0x2000115")]
public class TimelineHelper : MonoBehaviour
{
	[Token(Token = "0x4000669")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<TimelineBehaviourBase> _behaviour;

	[Token(Token = "0x400066A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool _jumped;

	[Token(Token = "0x400066B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private double _jumpSourceTime;

	[Token(Token = "0x400066C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private double _jumpTargetTime;

	[Token(Token = "0x400066D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private PlayableDirector _director;

	[Token(Token = "0x400066E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Dictionary<string, CheckpointBehaviour> _checkpointDictionary;

	[Token(Token = "0x6000721")]
	[Address(RVA = "0x889114", Offset = "0x889114", VA = "0x889114")]
	public void Awake()
	{
	}

	[Token(Token = "0x6000722")]
	[Address(RVA = "0x88916C", Offset = "0x88916C", VA = "0x88916C")]
	public void AddCheckpoint(string checkpointName, CheckpointBehaviour beh)
	{
	}

	[Token(Token = "0x6000723")]
	[Address(RVA = "0x889238", Offset = "0x889238", VA = "0x889238")]
	public void JumpToCheckpoint(string checkpointName)
	{
	}

	[Token(Token = "0x6000724")]
	[Address(RVA = "0x888C54", Offset = "0x888C54", VA = "0x888C54")]
	public void AddBehaviour(TimelineBehaviourBase tbb)
	{
	}

	[Token(Token = "0x6000725")]
	[Address(RVA = "0x8896E4", Offset = "0x8896E4", VA = "0x8896E4")]
	public void OnJumped(double originalTime, double jumpTargetTime)
	{
	}

	[Token(Token = "0x6000726")]
	[Address(RVA = "0x8896F4", Offset = "0x8896F4", VA = "0x8896F4")]
	public void LateUpdate()
	{
	}

	[Token(Token = "0x6000727")]
	[Address(RVA = "0x889944", Offset = "0x889944", VA = "0x889944")]
	public TimelineHelper()
	{
	}
}
[Token(Token = "0x2000116")]
public class TimeZoneSwitchAsset : TimelineAssetBase<TimeZoneSwitchBehaviour>
{
	[Token(Token = "0x400066F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private string _timeZoneName;

	[Token(Token = "0x6000728")]
	[Address(RVA = "0x88844C", Offset = "0x88844C", VA = "0x88844C", Slot = "6")]
	public override Playable CreatePlayable(PlayableGraph graph, GameObject owner)
	{
		return default(Playable);
	}

	[Token(Token = "0x6000729")]
	[Address(RVA = "0x888504", Offset = "0x888504", VA = "0x888504")]
	public TimeZoneSwitchAsset()
	{
	}
}
[Token(Token = "0x2000117")]
public class TimeZoneSwitchBehaviour : TimelineBehaviourBase
{
	[Token(Token = "0x4000670")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string _timeZoneName;

	[Token(Token = "0x4000671")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64D648", Offset = "0x64D648")]
	private static float <LastTeleportTime>k__BackingField;

	[Token(Token = "0x170000BF")]
	public static float LastTeleportTime
	{
		[Token(Token = "0x600072A")]
		[Address(RVA = "0x888554", Offset = "0x888554", VA = "0x888554")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x668530", Offset = "0x668530")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600072B")]
		[Address(RVA = "0x8885BC", Offset = "0x8885BC", VA = "0x8885BC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x668540", Offset = "0x668540")]
		private set
		{
		}
	}

	[Token(Token = "0x600072C")]
	[Address(RVA = "0x888630", Offset = "0x888630", VA = "0x888630", Slot = "23")]
	public override void Initialize(GameObject owner, TimelineAssetNamed baseAsset)
	{
	}

	[Token(Token = "0x600072D")]
	[Address(RVA = "0x888634", Offset = "0x888634", VA = "0x888634", Slot = "26")]
	public override void OnBehaviourEnter(Playable playable, FrameData info)
	{
	}

	[Token(Token = "0x600072E")]
	[Address(RVA = "0x8886D8", Offset = "0x8886D8", VA = "0x8886D8")]
	public TimeZoneSwitchBehaviour()
	{
	}
}
[Token(Token = "0x2000118")]
public class UnlockFeatureAsset : TimelineAssetBase<UnlockFeatureBehaviour>
{
	[Token(Token = "0x4000672")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private string _featureName;

	[Token(Token = "0x6000730")]
	[Address(RVA = "0x88C248", Offset = "0x88C248", VA = "0x88C248", Slot = "6")]
	public override Playable CreatePlayable(PlayableGraph graph, GameObject owner)
	{
		return default(Playable);
	}

	[Token(Token = "0x6000731")]
	[Address(RVA = "0x88C300", Offset = "0x88C300", VA = "0x88C300")]
	public UnlockFeatureAsset()
	{
	}
}
[Token(Token = "0x2000119")]
public class UnlockFeatureBehaviour : TimelineBehaviourBase
{
	[Token(Token = "0x4000673")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string _featureName;

	[Token(Token = "0x6000732")]
	[Address(RVA = "0x88C350", Offset = "0x88C350", VA = "0x88C350", Slot = "23")]
	public override void Initialize(GameObject owner, TimelineAssetNamed baseAsset)
	{
	}

	[Token(Token = "0x6000733")]
	[Address(RVA = "0x88C354", Offset = "0x88C354", VA = "0x88C354", Slot = "26")]
	public override void OnBehaviourEnter(Playable playable, FrameData info)
	{
	}

	[Token(Token = "0x6000734")]
	[Address(RVA = "0x88C428", Offset = "0x88C428", VA = "0x88C428")]
	public UnlockFeatureBehaviour()
	{
	}
}
[Token(Token = "0x200011A")]
public class VideoPlayerAsset : TimelineAssetBase<VideoPlayerBehaviour>
{
	[Token(Token = "0x20005B9")]
	public enum Action
	{
		[Token(Token = "0x400262E")]
		Play,
		[Token(Token = "0x400262F")]
		Stop
	}

	[Token(Token = "0x4000674")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private ExposedReference<MazeVideoPlayer> _player;

	[Token(Token = "0x4000675")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Action _action;

	[Token(Token = "0x4000676")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private string _videoName;

	[Token(Token = "0x4000677")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private bool _loop;

	[Token(Token = "0x6000735")]
	[Address(RVA = "0x80D784", Offset = "0x80D784", VA = "0x80D784", Slot = "6")]
	public override Playable CreatePlayable(PlayableGraph graph, GameObject owner)
	{
		return default(Playable);
	}

	[Token(Token = "0x6000736")]
	[Address(RVA = "0x80D8D4", Offset = "0x80D8D4", VA = "0x80D8D4")]
	public VideoPlayerAsset()
	{
	}
}
[Token(Token = "0x200011B")]
public class VideoPlayerBehaviour : TimelineBehaviourBase
{
	[Token(Token = "0x4000678")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	public VideoPlayerAsset.Action _action;

	[Token(Token = "0x4000679")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	public string _videoName;

	[Token(Token = "0x400067A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	public bool _loop;

	[Token(Token = "0x400067B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	public MazeVideoPlayer _player;

	[Token(Token = "0x6000737")]
	[Address(RVA = "0x80D924", Offset = "0x80D924", VA = "0x80D924", Slot = "23")]
	public override void Initialize(GameObject owner, TimelineAssetNamed baseAsset)
	{
	}

	[Token(Token = "0x6000738")]
	[Address(RVA = "0x80D92C", Offset = "0x80D92C", VA = "0x80D92C", Slot = "26")]
	public override void OnBehaviourEnter(Playable playable, FrameData info)
	{
	}

	[Token(Token = "0x6000739")]
	[Address(RVA = "0x80DA40", Offset = "0x80DA40", VA = "0x80DA40")]
	public VideoPlayerBehaviour()
	{
	}
}
[Token(Token = "0x200011C")]
public class WeaponSwitchAsset : TimelineAssetBase<WeaponSwitchBehaviour>
{
	[Token(Token = "0x400067C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private PlayerWeaponFire.WeaponParams _weaponParams;

	[Token(Token = "0x400067D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private float _bonusTime;

	[Token(Token = "0x600073A")]
	[Address(RVA = "0x80E7CC", Offset = "0x80E7CC", VA = "0x80E7CC", Slot = "6")]
	public override Playable CreatePlayable(PlayableGraph graph, GameObject owner)
	{
		return default(Playable);
	}

	[Token(Token = "0x600073B")]
	[Address(RVA = "0x80E8A4", Offset = "0x80E8A4", VA = "0x80E8A4")]
	public WeaponSwitchAsset()
	{
	}
}
[Token(Token = "0x200011D")]
public class WeaponSwitchBehaviour : TimelineBehaviourBase
{
	[Token(Token = "0x400067E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public PlayerWeaponFire.WeaponParams _weaponParams;

	[Token(Token = "0x400067F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float _bonusTime;

	[Token(Token = "0x600073C")]
	[Address(RVA = "0x80E8F4", Offset = "0x80E8F4", VA = "0x80E8F4", Slot = "23")]
	public override void Initialize(GameObject owner, TimelineAssetNamed baseAsset)
	{
	}

	[Token(Token = "0x600073D")]
	[Address(RVA = "0x80E8FC", Offset = "0x80E8FC", VA = "0x80E8FC", Slot = "26")]
	public override void OnBehaviourEnter(Playable playable, FrameData info)
	{
	}

	[Token(Token = "0x600073E")]
	[Address(RVA = "0x80E94C", Offset = "0x80E94C", VA = "0x80E94C")]
	public WeaponSwitchBehaviour()
	{
	}
}
[Token(Token = "0x200011E")]
public class ButtonActionChangeScreen : MonoBehaviour
{
	[Token(Token = "0x4000680")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private string _screenName;

	[Token(Token = "0x4000681")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private bool _backwards;

	[Token(Token = "0x600073F")]
	[Address(RVA = "0x8C7000", Offset = "0x8C7000", VA = "0x8C7000")]
	private void Start()
	{
	}

	[Token(Token = "0x6000740")]
	[Address(RVA = "0x8C70C0", Offset = "0x8C70C0", VA = "0x8C70C0")]
	private void ChangeScreen()
	{
	}

	[Token(Token = "0x6000741")]
	[Address(RVA = "0x8C7158", Offset = "0x8C7158", VA = "0x8C7158")]
	public ButtonActionChangeScreen()
	{
	}
}
[Token(Token = "0x200011F")]
public class ButtonActionLoadSavedGame : MonoBehaviour
{
	[Token(Token = "0x6000742")]
	[Address(RVA = "0x8C7160", Offset = "0x8C7160", VA = "0x8C7160")]
	private void Start()
	{
	}

	[Token(Token = "0x6000743")]
	[Address(RVA = "0x8C7220", Offset = "0x8C7220", VA = "0x8C7220")]
	private void LoadSavedGame()
	{
	}

	[Token(Token = "0x6000744")]
	[Address(RVA = "0x8C72D8", Offset = "0x8C72D8", VA = "0x8C72D8")]
	public ButtonActionLoadSavedGame()
	{
	}
}
[Token(Token = "0x2000120")]
public class ButtonActionQuitApplication : MonoBehaviour
{
	[Token(Token = "0x6000745")]
	[Address(RVA = "0x8C72E0", Offset = "0x8C72E0", VA = "0x8C72E0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000746")]
	[Address(RVA = "0x8C73A0", Offset = "0x8C73A0", VA = "0x8C73A0")]
	private void QuitApplication()
	{
	}

	[Token(Token = "0x6000747")]
	[Address(RVA = "0x8C73A8", Offset = "0x8C73A8", VA = "0x8C73A8")]
	public ButtonActionQuitApplication()
	{
	}
}
[Token(Token = "0x2000121")]
public class ButtonActionShowSettings : MonoBehaviour
{
	[Token(Token = "0x6000748")]
	[Address(RVA = "0x8C73B0", Offset = "0x8C73B0", VA = "0x8C73B0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000749")]
	[Address(RVA = "0x8C7470", Offset = "0x8C7470", VA = "0x8C7470")]
	private void ShowSettings()
	{
	}

	[Token(Token = "0x600074A")]
	[Address(RVA = "0x8C74E8", Offset = "0x8C74E8", VA = "0x8C74E8")]
	public ButtonActionShowSettings()
	{
	}
}
[Token(Token = "0x2000122")]
public class ButtonActionStartGame : MonoBehaviour
{
	[Token(Token = "0x20005BA")]
	private enum Mode
	{
		[Token(Token = "0x4002631")]
		SwitchScenesImmediately,
		[Token(Token = "0x4002632")]
		StoreSceneAndChangeScreenIfSaveExists,
		[Token(Token = "0x4002633")]
		SwitchToStoredScene
	}

	[Token(Token = "0x4000682")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Mode _mode;

	[Token(Token = "0x4000683")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private string _sceneName;

	[Token(Token = "0x4000684")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private string _checkpointName;

	[Token(Token = "0x4000685")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private string _screenName;

	[Token(Token = "0x600074B")]
	[Address(RVA = "0x8C74F0", Offset = "0x8C74F0", VA = "0x8C74F0")]
	private void Start()
	{
	}

	[Token(Token = "0x600074C")]
	[Address(RVA = "0x8C75B0", Offset = "0x8C75B0", VA = "0x8C75B0")]
	private void ChangeScreen()
	{
	}

	[Token(Token = "0x600074D")]
	[Address(RVA = "0x8C77B0", Offset = "0x8C77B0", VA = "0x8C77B0")]
	public ButtonActionStartGame()
	{
	}
}
[Token(Token = "0x2000123")]
public class ButtonAudio : MonoBehaviour, IPointerDownHandler, IEventSystemHandler, ISelectHandler
{
	[Token(Token = "0x4000686")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private SoundEffect _highlightEffectName;

	[Token(Token = "0x4000687")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private HapticsParameters _highlightHaptics;

	[Token(Token = "0x4000688")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private SoundEffect _selectEffectName;

	[Token(Token = "0x4000689")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private HapticsParameters _selectHaptics;

	[Token(Token = "0x600074E")]
	[Address(RVA = "0x8C77B8", Offset = "0x8C77B8", VA = "0x8C77B8")]
	private void Start()
	{
	}

	[Token(Token = "0x600074F")]
	[Address(RVA = "0x8C7878", Offset = "0x8C7878", VA = "0x8C7878")]
	public void OnPointerClick(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000750")]
	[Address(RVA = "0x8C787C", Offset = "0x8C787C", VA = "0x8C787C")]
	private void PlaySelect()
	{
	}

	[Token(Token = "0x6000751")]
	[Address(RVA = "0x8C7938", Offset = "0x8C7938", VA = "0x8C7938", Slot = "4")]
	public void OnPointerDown(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000752")]
	[Address(RVA = "0x8C793C", Offset = "0x8C793C", VA = "0x8C793C")]
	public void Select(BaseEventData eventData)
	{
	}

	[Token(Token = "0x6000753")]
	[Address(RVA = "0x8C7940", Offset = "0x8C7940", VA = "0x8C7940", Slot = "5")]
	public void OnSelect(BaseEventData eventData)
	{
	}

	[Token(Token = "0x6000754")]
	[Address(RVA = "0x8C79FC", Offset = "0x8C79FC", VA = "0x8C79FC")]
	public ButtonAudio()
	{
	}

	[Token(Token = "0x6000755")]
	[Address(RVA = "0x8C7A04", Offset = "0x8C7A04", VA = "0x8C7A04")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x668550", Offset = "0x668550")]
	private void <Start>b__4_0()
	{
	}
}
[Token(Token = "0x2000124")]
public class ButtonNavigationPatcher : MonoBehaviour
{
	[Token(Token = "0x400068A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private bool _patchLeftNav;

	[Token(Token = "0x400068B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	[SerializeField]
	private bool _patchRightNav;

	[Token(Token = "0x6000756")]
	[Address(RVA = "0x8C7A08", Offset = "0x8C7A08", VA = "0x8C7A08")]
	private void Update()
	{
	}

	[Token(Token = "0x6000757")]
	[Address(RVA = "0x8C7D88", Offset = "0x8C7D88", VA = "0x8C7D88")]
	public ButtonNavigationPatcher()
	{
	}
}
[Token(Token = "0x2000125")]
public class FeatureUnlockEnable : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20005BB")]
	private struct Feature
	{
		[Token(Token = "0x4002634")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		public string _featureName;

		[Token(Token = "0x4002635")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[SerializeField]
		public Transform _enabled;

		[Token(Token = "0x4002636")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		public Transform _disabled;
	}

	[Token(Token = "0x400068C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private List<Feature> _feature;

	[Token(Token = "0x6000758")]
	[Address(RVA = "0x7BFD34", Offset = "0x7BFD34", VA = "0x7BFD34")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000759")]
	[Address(RVA = "0x7C00A4", Offset = "0x7C00A4", VA = "0x7C00A4")]
	public FeatureUnlockEnable()
	{
	}
}
[Token(Token = "0x2000126")]
public class FontPreLoader : MonoBehaviour
{
	[Token(Token = "0x20005BC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x643FB8", Offset = "0x643FB8")]
	private sealed class <PreloadGlyphs>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002637")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002638")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002639")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FontPreLoader <>4__this;

		[Token(Token = "0x400263A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <numArrays>5__2;

		[Token(Token = "0x400263B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int <arrayIdx>5__3;

		[Token(Token = "0x17000262")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002A88")]
			[Address(RVA = "0x7C5A74", Offset = "0x7C5A74", VA = "0x7C5A74", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000263")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002A8A")]
			[Address(RVA = "0x7C5AE4", Offset = "0x7C5AE4", VA = "0x7C5AE4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002A85")]
		[Address(RVA = "0x7C5808", Offset = "0x7C5808", VA = "0x7C5808")]
		[DebuggerHidden]
		public <PreloadGlyphs>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x6002A86")]
		[Address(RVA = "0x7C583C", Offset = "0x7C583C", VA = "0x7C583C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002A87")]
		[Address(RVA = "0x7C5840", Offset = "0x7C5840", VA = "0x7C5840", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002A89")]
		[Address(RVA = "0x7C5A7C", Offset = "0x7C5A7C", VA = "0x7C5A7C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400068D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Font m_font;

	[Token(Token = "0x400068E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private TextLocalisedUI[] m_textFields;

	[Token(Token = "0x600075A")]
	[Address(RVA = "0x7C5768", Offset = "0x7C5768", VA = "0x7C5768")]
	private void Awake()
	{
	}

	[Token(Token = "0x600075B")]
	[Address(RVA = "0x7C5794", Offset = "0x7C5794", VA = "0x7C5794")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x668560", Offset = "0x668560")]
	private IEnumerator PreloadGlyphs()
	{
		return null;
	}

	[Token(Token = "0x600075C")]
	[Address(RVA = "0x7C5834", Offset = "0x7C5834", VA = "0x7C5834")]
	public FontPreLoader()
	{
	}
}
[Token(Token = "0x2000127")]
public class HoverImageChange : MonoBehaviour, ISelectHandler, IEventSystemHandler
{
	[Token(Token = "0x400068F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private ImageShow _imageShow;

	[Token(Token = "0x4000690")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Sprite _sprite;

	[Token(Token = "0x600075D")]
	[Address(RVA = "0x84D6F4", Offset = "0x84D6F4", VA = "0x84D6F4", Slot = "4")]
	public void OnSelect(BaseEventData eventData)
	{
	}

	[Token(Token = "0x600075E")]
	[Address(RVA = "0x84D738", Offset = "0x84D738", VA = "0x84D738")]
	public HoverImageChange()
	{
	}
}
[Token(Token = "0x2000128")]
public class ImageShow : MonoBehaviour
{
	[Token(Token = "0x20005BD")]
	private enum State
	{
		[Token(Token = "0x400263D")]
		In,
		[Token(Token = "0x400263E")]
		Idle,
		[Token(Token = "0x400263F")]
		Out
	}

	[Token(Token = "0x4000691")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private State _state;

	[Token(Token = "0x4000692")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Sprite _nextSprite;

	[Token(Token = "0x4000693")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Sprite _sprite;

	[Token(Token = "0x4000694")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Image _image;

	[Token(Token = "0x4000695")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool _transitionTrigger;

	[Token(Token = "0x4000696")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float _timer;

	[Token(Token = "0x4000697")]
	private const float _fadeTime = 0.25f;

	[Token(Token = "0x600075F")]
	[Address(RVA = "0x84DE54", Offset = "0x84DE54", VA = "0x84DE54")]
	private void Start()
	{
	}

	[Token(Token = "0x6000760")]
	[Address(RVA = "0x84D728", Offset = "0x84D728", VA = "0x84D728")]
	public void SetImage(Sprite sprite)
	{
	}

	[Token(Token = "0x6000761")]
	[Address(RVA = "0x84DEAC", Offset = "0x84DEAC", VA = "0x84DEAC")]
	public void FadeOut()
	{
	}

	[Token(Token = "0x6000762")]
	[Address(RVA = "0x84DEBC", Offset = "0x84DEBC", VA = "0x84DEBC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000763")]
	[Address(RVA = "0x84E13C", Offset = "0x84E13C", VA = "0x84E13C")]
	public ImageShow()
	{
	}
}
[Token(Token = "0x2000129")]
public class LoadingSpinner : MonoBehaviour
{
	[Token(Token = "0x4000698")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private List<Sprite> _imageList;

	[Token(Token = "0x4000699")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float _timer;

	[Token(Token = "0x400069A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float _frameRate;

	[Token(Token = "0x6000764")]
	[Address(RVA = "0x7EB42C", Offset = "0x7EB42C", VA = "0x7EB42C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000765")]
	[Address(RVA = "0x7EB52C", Offset = "0x7EB52C", VA = "0x7EB52C")]
	public LoadingSpinner()
	{
	}
}
[Token(Token = "0x200012A")]
public class MazeUIPointerRenderer : VRTK_StraightPointerRenderer
{
	[Token(Token = "0x400069B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private VRTK_UIPointer _uiPointer;

	[Token(Token = "0x6000766")]
	[Address(RVA = "0x7F393C", Offset = "0x7F393C", VA = "0x7F393C", Slot = "54")]
	protected override void CreateCursor()
	{
	}

	[Token(Token = "0x6000767")]
	[Address(RVA = "0x7F39BC", Offset = "0x7F39BC", VA = "0x7F39BC", Slot = "53")]
	protected override void CreateTracer()
	{
	}

	[Token(Token = "0x6000768")]
	[Address(RVA = "0x7F3A3C", Offset = "0x7F3A3C", VA = "0x7F3A3C", Slot = "57")]
	protected override float CastRayForward()
	{
		return default(float);
	}

	[Token(Token = "0x6000769")]
	[Address(RVA = "0x7F3E08", Offset = "0x7F3E08", VA = "0x7F3E08")]
	public MazeUIPointerRenderer()
	{
	}
}
[Token(Token = "0x200012B")]
public class MenuSequence : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20005BE")]
	private class MenuScreen
	{
		[Token(Token = "0x4002640")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		public string _screenName;

		[Token(Token = "0x4002641")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public RectTransform _root;

		[Token(Token = "0x6002A8B")]
		[Address(RVA = "0x7F7AC8", Offset = "0x7F7AC8", VA = "0x7F7AC8")]
		public MenuScreen()
		{
		}
	}

	[Token(Token = "0x20005BF")]
	private delegate void Callback();

	[Token(Token = "0x20005C0")]
	private enum State
	{
		[Token(Token = "0x4002643")]
		TransitionIn,
		[Token(Token = "0x4002644")]
		Input,
		[Token(Token = "0x4002645")]
		TransitionOut
	}

	[Token(Token = "0x20005C1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x643FC8", Offset = "0x643FC8")]
	private sealed class <MenuRoutine>d__24 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002646")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002647")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002648")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MenuSequence <>4__this;

		[Token(Token = "0x17000264")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002A93")]
			[Address(RVA = "0x7F7144", Offset = "0x7F7144", VA = "0x7F7144", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000265")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002A95")]
			[Address(RVA = "0x7F71B4", Offset = "0x7F71B4", VA = "0x7F71B4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002A90")]
		[Address(RVA = "0x7F5D58", Offset = "0x7F5D58", VA = "0x7F5D58")]
		[DebuggerHidden]
		public <MenuRoutine>d__24(int <>1__state)
		{
		}

		[Token(Token = "0x6002A91")]
		[Address(RVA = "0x7F6F68", Offset = "0x7F6F68", VA = "0x7F6F68", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002A92")]
		[Address(RVA = "0x7F6F6C", Offset = "0x7F6F6C", VA = "0x7F6F6C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002A94")]
		[Address(RVA = "0x7F714C", Offset = "0x7F714C", VA = "0x7F714C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20005C2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x643FD8", Offset = "0x643FD8")]
	private sealed class <>c__DisplayClass25_0
	{
		[Token(Token = "0x4002649")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string screenName;

		[Token(Token = "0x6002A96")]
		[Address(RVA = "0x7F5EB4", Offset = "0x7F5EB4", VA = "0x7F5EB4")]
		public <>c__DisplayClass25_0()
		{
		}

		[Token(Token = "0x6002A97")]
		[Address(RVA = "0x7F6850", Offset = "0x7F6850", VA = "0x7F6850")]
		internal bool <ChangeScreen>b__0(MenuScreen s)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x20005C3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x643FE8", Offset = "0x643FE8")]
	private sealed class <>c__DisplayClass28_0
	{
		[Token(Token = "0x400264A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string sceneName;

		[Token(Token = "0x400264B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string checkpointName;

		[Token(Token = "0x6002A98")]
		[Address(RVA = "0x7F60B4", Offset = "0x7F60B4", VA = "0x7F60B4")]
		public <>c__DisplayClass28_0()
		{
		}

		[Token(Token = "0x6002A99")]
		[Address(RVA = "0x7F6888", Offset = "0x7F6888", VA = "0x7F6888")]
		internal void <StartGame>b__0()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20005C4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x643FF8", Offset = "0x643FF8")]
	private sealed class <>c
	{
		[Token(Token = "0x400264C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x400264D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Callback <>9__30_0;

		[Token(Token = "0x6002A9B")]
		[Address(RVA = "0x7F6840", Offset = "0x7F6840", VA = "0x7F6840")]
		public <>c()
		{
		}

		[Token(Token = "0x6002A9C")]
		[Address(RVA = "0x7F6848", Offset = "0x7F6848", VA = "0x7F6848")]
		internal void <ContinueGame>b__30_0()
		{
		}
	}

	[Token(Token = "0x20005C5")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x644008", Offset = "0x644008")]
	private sealed class <ExitUISequence>d__31 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400264E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400264F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002650")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MenuSequence <>4__this;

		[Token(Token = "0x4002651")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Callback callback;

		[Token(Token = "0x17000266")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002AA0")]
			[Address(RVA = "0x7F6EF0", Offset = "0x7F6EF0", VA = "0x7F6EF0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000267")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002AA2")]
			[Address(RVA = "0x7F6F60", Offset = "0x7F6F60", VA = "0x7F6F60", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002A9D")]
		[Address(RVA = "0x7F6630", Offset = "0x7F6630", VA = "0x7F6630")]
		[DebuggerHidden]
		public <ExitUISequence>d__31(int <>1__state)
		{
		}

		[Token(Token = "0x6002A9E")]
		[Address(RVA = "0x7F6904", Offset = "0x7F6904", VA = "0x7F6904", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002A9F")]
		[Address(RVA = "0x7F6908", Offset = "0x7F6908", VA = "0x7F6908", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002AA1")]
		[Address(RVA = "0x7F6EF8", Offset = "0x7F6EF8", VA = "0x7F6EF8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20005C6")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x644018", Offset = "0x644018")]
	private sealed class <StartTransition>d__32 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002652")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002653")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002654")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MenuScreen screen;

		[Token(Token = "0x4002655")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public MenuSequence <>4__this;

		[Token(Token = "0x4002656")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool backwards;

		[Token(Token = "0x4002657")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Callback callback;

		[Token(Token = "0x4002658")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool cancelRoutine;

		[Token(Token = "0x4002659")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private MenuScreen <outgoingScreen>5__2;

		[Token(Token = "0x17000268")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002AA6")]
			[Address(RVA = "0x7F7A10", Offset = "0x7F7A10", VA = "0x7F7A10", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000269")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002AA8")]
			[Address(RVA = "0x7F7A80", Offset = "0x7F7A80", VA = "0x7F7A80", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002AA3")]
		[Address(RVA = "0x7F665C", Offset = "0x7F665C", VA = "0x7F665C")]
		[DebuggerHidden]
		public <StartTransition>d__32(int <>1__state)
		{
		}

		[Token(Token = "0x6002AA4")]
		[Address(RVA = "0x7F7468", Offset = "0x7F7468", VA = "0x7F7468", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002AA5")]
		[Address(RVA = "0x7F746C", Offset = "0x7F746C", VA = "0x7F746C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002AA7")]
		[Address(RVA = "0x7F7A18", Offset = "0x7F7A18", VA = "0x7F7A18", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20005C7")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x644028", Offset = "0x644028")]
	private sealed class <PlayTimeline>d__33 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400265A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400265B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400265C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PlayableDirector timeline;

		[Token(Token = "0x400265D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float speed;

		[Token(Token = "0x1700026A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002AAC")]
			[Address(RVA = "0x7F73F0", Offset = "0x7F73F0", VA = "0x7F73F0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700026B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002AAE")]
			[Address(RVA = "0x7F7460", Offset = "0x7F7460", VA = "0x7F7460", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002AA9")]
		[Address(RVA = "0x7F6720", Offset = "0x7F6720", VA = "0x7F6720")]
		[DebuggerHidden]
		public <PlayTimeline>d__33(int <>1__state)
		{
		}

		[Token(Token = "0x6002AAA")]
		[Address(RVA = "0x7F71BC", Offset = "0x7F71BC", VA = "0x7F71BC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002AAB")]
		[Address(RVA = "0x7F71C0", Offset = "0x7F71C0", VA = "0x7F71C0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002AAD")]
		[Address(RVA = "0x7F73F8", Offset = "0x7F73F8", VA = "0x7F73F8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400069C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static MenuSequence _instance;

	[Token(Token = "0x400069D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private RectTransform _rootActiveScreen;

	[Token(Token = "0x400069E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private RectTransform _rootPreviousScreen;

	[Token(Token = "0x400069F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private RectTransform _rootInactiveScreen;

	[Token(Token = "0x40006A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private List<MenuScreen> _screenList;

	[Token(Token = "0x40006A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private PlayableDirector _firstEnter;

	[Token(Token = "0x40006A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private PlayableDirector _leaveScene;

	[Token(Token = "0x40006A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private PlayableDirector _menuTransitionIn;

	[Token(Token = "0x40006A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private PlayableDirector _menuTransitionOut;

	[Token(Token = "0x40006A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private Transform _settingsLocation;

	[Token(Token = "0x40006A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private SoundEffect _screenTransitionSoundName;

	[Token(Token = "0x40006A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private MenuScreen _currentScreen;

	[Token(Token = "0x40006A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private string _storedSceneName;

	[Token(Token = "0x40006A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private string _storedCheckpointName;

	[Token(Token = "0x40006AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private IEnumerator m_uiTransitionRoutine;

	[Token(Token = "0x40006AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private State _state;

	[Token(Token = "0x170000C0")]
	public static MenuSequence instance
	{
		[Token(Token = "0x600076A")]
		[Address(RVA = "0x7F5AF4", Offset = "0x7F5AF4", VA = "0x7F5AF4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600076B")]
	[Address(RVA = "0x7F5B5C", Offset = "0x7F5B5C", VA = "0x7F5B5C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600076C")]
	[Address(RVA = "0x7F5BC8", Offset = "0x7F5BC8", VA = "0x7F5BC8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600076D")]
	[Address(RVA = "0x7F5C98", Offset = "0x7F5C98", VA = "0x7F5C98")]
	private void Start()
	{
	}

	[Token(Token = "0x600076E")]
	[Address(RVA = "0x7F5CE4", Offset = "0x7F5CE4", VA = "0x7F5CE4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6685C4", Offset = "0x6685C4")]
	private IEnumerator MenuRoutine()
	{
		return null;
	}

	[Token(Token = "0x600076F")]
	[Address(RVA = "0x7F5D84", Offset = "0x7F5D84", VA = "0x7F5D84")]
	public void ChangeScreen(string screenName, bool backwards = false)
	{
	}

	[Token(Token = "0x6000770")]
	[Address(RVA = "0x7F5FAC", Offset = "0x7F5FAC", VA = "0x7F5FAC")]
	public void SetStoredScene(string sceneName, string checkpointName)
	{
	}

	[Token(Token = "0x6000771")]
	[Address(RVA = "0x7F5FB4", Offset = "0x7F5FB4", VA = "0x7F5FB4")]
	public void StartStoredScene()
	{
	}

	[Token(Token = "0x6000772")]
	[Address(RVA = "0x7F5FBC", Offset = "0x7F5FBC", VA = "0x7F5FBC")]
	public void StartGame(string sceneName, string checkpointName)
	{
	}

	[Token(Token = "0x6000773")]
	[Address(RVA = "0x7F6164", Offset = "0x7F6164", VA = "0x7F6164")]
	public void ShowSettings()
	{
	}

	[Token(Token = "0x6000774")]
	[Address(RVA = "0x7F652C", Offset = "0x7F652C", VA = "0x7F652C")]
	public void ContinueGame()
	{
	}

	[Token(Token = "0x6000775")]
	[Address(RVA = "0x7F60CC", Offset = "0x7F60CC", VA = "0x7F60CC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x668628", Offset = "0x668628")]
	private IEnumerator ExitUISequence(Callback callback)
	{
		return null;
	}

	[Token(Token = "0x6000776")]
	[Address(RVA = "0x7F5EBC", Offset = "0x7F5EBC", VA = "0x7F5EBC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x66868C", Offset = "0x66868C")]
	private IEnumerator StartTransition(MenuScreen screen, bool backwards, [Optional] Callback callback, bool cancelRoutine = false)
	{
		return null;
	}

	[Token(Token = "0x6000777")]
	[Address(RVA = "0x7F6688", Offset = "0x7F6688", VA = "0x7F6688")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6686F0", Offset = "0x6686F0")]
	private IEnumerator PlayTimeline(PlayableDirector timeline, float speed = 1f)
	{
		return null;
	}

	[Token(Token = "0x6000778")]
	[Address(RVA = "0x7F674C", Offset = "0x7F674C", VA = "0x7F674C")]
	public MenuSequence()
	{
	}

	[Token(Token = "0x600077A")]
	[Address(RVA = "0x7F6758", Offset = "0x7F6758", VA = "0x7F6758")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x668754", Offset = "0x668754")]
	private void <ShowSettings>b__29_0()
	{
	}
}
[Token(Token = "0x200012C")]
public class MenuStickController : MonoBehaviour
{
	[Token(Token = "0x40006AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float deadzone;

	[Token(Token = "0x40006AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Selectable defaultSelectable;

	[Token(Token = "0x600077B")]
	[Address(RVA = "0x7F7AD0", Offset = "0x7F7AD0", VA = "0x7F7AD0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600077C")]
	[Address(RVA = "0x7F7B4C", Offset = "0x7F7B4C", VA = "0x7F7B4C")]
	private void Update()
	{
	}

	[Token(Token = "0x600077D")]
	[Address(RVA = "0x7F7D44", Offset = "0x7F7D44", VA = "0x7F7D44")]
	public MenuStickController()
	{
	}
}
[Token(Token = "0x200012D")]
public class NavigationHelper : MonoBehaviour
{
	[Token(Token = "0x40006AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Navigation[] _navigationOptions;

	[Token(Token = "0x40006AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Button _targetButton;

	[Token(Token = "0x600077E")]
	[Address(RVA = "0x7FD764", Offset = "0x7FD764", VA = "0x7FD764")]
	public void SetNavigation(int navigationIndex)
	{
	}

	[Token(Token = "0x600077F")]
	[Address(RVA = "0x7FD8A0", Offset = "0x7FD8A0", VA = "0x7FD8A0")]
	public NavigationHelper()
	{
	}
}
[Token(Token = "0x200012E")]
public class OptionToggle : MonoBehaviour
{
	[Token(Token = "0x40006B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x64D8E8", Offset = "0x64D8E8")]
	[SerializeField]
	private Text _optionText;

	[Token(Token = "0x40006B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x64D934", Offset = "0x64D934")]
	[SerializeField]
	private int _defaultOption;

	[Token(Token = "0x40006B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x64D980", Offset = "0x64D980")]
	[SerializeField]
	private string _optionSettingString;

	[Token(Token = "0x40006B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x64D9CC", Offset = "0x64D9CC")]
	[SerializeField]
	private string[] _optionString;

	[Token(Token = "0x40006B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private string[] _optionDisplayString;

	[Token(Token = "0x40006B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x64DA28", Offset = "0x64DA28")]
	[SerializeField]
	private Button _nextButton;

	[Token(Token = "0x40006B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x64DA74", Offset = "0x64DA74")]
	[SerializeField]
	private Button _previousButton;

	[Token(Token = "0x40006B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x64DAC0", Offset = "0x64DAC0")]
	[SerializeField]
	private OptionToggle[] _dependents;

	[Token(Token = "0x40006B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x64DB0C", Offset = "0x64DB0C")]
	[SerializeField]
	private int _dependentValue;

	[Token(Token = "0x40006B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x64DB58", Offset = "0x64DB58")]
	[SerializeField]
	private NavigationHelper[] _navigationHelpers;

	[Token(Token = "0x40006BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int _currentOption;

	[Token(Token = "0x6000780")]
	[Address(RVA = "0x7FDF08", Offset = "0x7FDF08", VA = "0x7FDF08")]
	public void DependentCallback(int value)
	{
	}

	[Token(Token = "0x6000781")]
	[Address(RVA = "0x7FDF58", Offset = "0x7FDF58", VA = "0x7FDF58")]
	private void Start()
	{
	}

	[Token(Token = "0x6000782")]
	[Address(RVA = "0x7FE284", Offset = "0x7FE284", VA = "0x7FE284")]
	public void NextOption()
	{
	}

	[Token(Token = "0x6000783")]
	[Address(RVA = "0x7FE4C8", Offset = "0x7FE4C8", VA = "0x7FE4C8")]
	public void PreviousOption()
	{
	}

	[Token(Token = "0x6000784")]
	[Address(RVA = "0x7FE2D8", Offset = "0x7FE2D8", VA = "0x7FE2D8")]
	private void SetOption()
	{
	}

	[Token(Token = "0x6000785")]
	[Address(RVA = "0x7FE514", Offset = "0x7FE514", VA = "0x7FE514")]
	public void ReloadSavedValue()
	{
	}

	[Token(Token = "0x6000786")]
	[Address(RVA = "0x7FE6F4", Offset = "0x7FE6F4", VA = "0x7FE6F4")]
	public void SaveValue(bool causeSave = true)
	{
	}

	[Token(Token = "0x6000787")]
	[Address(RVA = "0x7FE7A0", Offset = "0x7FE7A0", VA = "0x7FE7A0")]
	public OptionToggle()
	{
	}
}
[Token(Token = "0x200012F")]
public class PauseMenuBlocker : MonoBehaviour
{
	[Token(Token = "0x40006BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private PauseMenuManager _pauseMenuManager;

	[Token(Token = "0x6000788")]
	[Address(RVA = "0x800918", Offset = "0x800918", VA = "0x800918")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000789")]
	[Address(RVA = "0x8009A0", Offset = "0x8009A0", VA = "0x8009A0")]
	private void Update()
	{
	}

	[Token(Token = "0x600078A")]
	[Address(RVA = "0x8009D0", Offset = "0x8009D0", VA = "0x8009D0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600078B")]
	[Address(RVA = "0x8009D8", Offset = "0x8009D8", VA = "0x8009D8")]
	public PauseMenuBlocker()
	{
	}
}
[Token(Token = "0x2000130")]
public class PlatformNavigationHelper : MonoBehaviour
{
	[Token(Token = "0x40006BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PlatformNavigation[] _platformNavigations;

	[Token(Token = "0x40006BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Button _targetButton;

	[Token(Token = "0x600078C")]
	[Address(RVA = "0x8D2D18", Offset = "0x8D2D18", VA = "0x8D2D18")]
	private void Start()
	{
	}

	[Token(Token = "0x600078D")]
	[Address(RVA = "0x8D2EA8", Offset = "0x8D2EA8", VA = "0x8D2EA8")]
	public PlatformNavigationHelper()
	{
	}
}
[Serializable]
[Token(Token = "0x2000131")]
public class PlatformNavigation
{
	[Token(Token = "0x40006BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public RuntimePlatform _platform;

	[Token(Token = "0x40006BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Navigation _navigation;

	[Token(Token = "0x600078E")]
	[Address(RVA = "0x8D2D10", Offset = "0x8D2D10", VA = "0x8D2D10")]
	public PlatformNavigation()
	{
	}
}
[Token(Token = "0x2000132")]
public class RectTransformSizeTracker : MonoBehaviour
{
	[Token(Token = "0x40006C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private RectTransform m_trackingTransform;

	[Token(Token = "0x40006C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float m_padding;

	[Token(Token = "0x170000C1")]
	private RectTransform rectTransform
	{
		[Token(Token = "0x600078F")]
		[Address(RVA = "0x9CF4A4", Offset = "0x9CF4A4", VA = "0x9CF4A4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000790")]
	[Address(RVA = "0x9CF50C", Offset = "0x9CF50C", VA = "0x9CF50C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000791")]
	[Address(RVA = "0x9CF5EC", Offset = "0x9CF5EC", VA = "0x9CF5EC")]
	public RectTransformSizeTracker()
	{
	}
}
[Token(Token = "0x2000133")]
public class SaveStateExistsEnable : MonoBehaviour
{
	[Token(Token = "0x40006C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool _requireGameProgress;

	[Token(Token = "0x6000792")]
	[Address(RVA = "0x8601B8", Offset = "0x8601B8", VA = "0x8601B8")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x6000793")]
	[Address(RVA = "0x860340", Offset = "0x860340", VA = "0x860340")]
	public SaveStateExistsEnable()
	{
	}
}
[Token(Token = "0x2000134")]
public class SliderToTextLink : MonoBehaviour
{
	[Token(Token = "0x40006C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text targetText;

	[Token(Token = "0x40006C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Slider targetSlider;

	[Token(Token = "0x6000794")]
	[Address(RVA = "0x8662C0", Offset = "0x8662C0", VA = "0x8662C0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000795")]
	[Address(RVA = "0x8662C4", Offset = "0x8662C4", VA = "0x8662C4")]
	public void RefreshText()
	{
	}

	[Token(Token = "0x6000796")]
	[Address(RVA = "0x8663E0", Offset = "0x8663E0", VA = "0x8663E0")]
	public SliderToTextLink()
	{
	}
}
[Token(Token = "0x2000135")]
public class BakeBBcubeProperties : MonoBehaviour
{
	[Token(Token = "0x40006C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool selectStatic;

	[Token(Token = "0x40006C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool selectDynamic;

	[Token(Token = "0x40006C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64DBC4", Offset = "0x64DBC4")]
	public bool bboxContained;

	[Token(Token = "0x40006C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64DBFC", Offset = "0x64DBFC")]
	public bool logOmissions;

	[Token(Token = "0x40006C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64DC34", Offset = "0x64DC34")]
	public GameObject[] excludeObjects;

	[Token(Token = "0x40006CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64DC6C", Offset = "0x64DC6C")]
	public bool materialExclude;

	[Token(Token = "0x40006CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool materialInclude;

	[Token(Token = "0x40006CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Material[] userMaterials;

	[Token(Token = "0x40006CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64DCA4", Offset = "0x64DCA4")]
	public bool rendModeOpaque;

	[Token(Token = "0x40006CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	public bool rendModeCutout;

	[Token(Token = "0x40006CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
	public bool rendModeFade;

	[Token(Token = "0x40006D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3B")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64DCDC", Offset = "0x64DCDC")]
	public bool rendModeExclusive;

	[Token(Token = "0x6000797")]
	[Address(RVA = "0x8C0880", Offset = "0x8C0880", VA = "0x8C0880")]
	public bool isExcluded(GameObject obj)
	{
		return default(bool);
	}

	[Token(Token = "0x6000798")]
	[Address(RVA = "0x8C095C", Offset = "0x8C095C", VA = "0x8C095C")]
	public BakeBBcubeProperties()
	{
	}
}
[Token(Token = "0x2000136")]
public class Billboard : MonoBehaviour
{
	[Token(Token = "0x6000799")]
	[Address(RVA = "0x8C1D54", Offset = "0x8C1D54", VA = "0x8C1D54")]
	private void Update()
	{
	}

	[Token(Token = "0x600079A")]
	[Address(RVA = "0x8C1EF0", Offset = "0x8C1EF0", VA = "0x8C1EF0")]
	public Billboard()
	{
	}
}
[Token(Token = "0x2000137")]
public class CameraDepthBufferEnable : MonoBehaviour
{
	[Token(Token = "0x40006D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private bool _enableDepthTexture;

	[Token(Token = "0x600079B")]
	[Address(RVA = "0x8C9990", Offset = "0x8C9990", VA = "0x8C9990")]
	private void Update()
	{
	}

	[Token(Token = "0x600079C")]
	[Address(RVA = "0x8C9E80", Offset = "0x8C9E80", VA = "0x8C9E80")]
	public CameraDepthBufferEnable()
	{
	}
}
[Token(Token = "0x2000138")]
public class CameraTrack : MonoBehaviour
{
	[Token(Token = "0x40006D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64DD24", Offset = "0x64DD24")]
	[SerializeField]
	private bool _offsetPlayerHeight;

	[Token(Token = "0x40006D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64DD70", Offset = "0x64DD70")]
	[SerializeField]
	private Vector3 _offset;

	[Token(Token = "0x40006D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Transform _playArea;

	[Token(Token = "0x600079D")]
	[Address(RVA = "0x8C9E90", Offset = "0x8C9E90", VA = "0x8C9E90")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600079E")]
	[Address(RVA = "0x8CA1D0", Offset = "0x8CA1D0", VA = "0x8CA1D0")]
	public CameraTrack()
	{
	}
}
[Token(Token = "0x2000139")]
public class CharacterLookAt : MonoBehaviour
{
	[Token(Token = "0x40006D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform _rotateYBone;

	[Token(Token = "0x40006D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private bool _yBoneIsAnimated;

	[Token(Token = "0x40006D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Transform _rotateZBone;

	[Token(Token = "0x40006D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private bool _zBoneIsAnimated;

	[Token(Token = "0x40006D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	[SerializeField]
	private bool _flipLookDirectionY;

	[Token(Token = "0x40006DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
	[SerializeField]
	private bool _flipLookDirectionZ;

	[Token(Token = "0x40006DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private float _maxRotationRateY;

	[Token(Token = "0x40006DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private float _maxRotationRateZ;

	[Token(Token = "0x40006DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[SerializeField]
	private float _reloadTime;

	[Token(Token = "0x40006DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Transform _projectilePrefab;

	[Token(Token = "0x40006DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private SoundEffect _rotateSoundEffectName;

	[Token(Token = "0x40006E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Vector3 _prevYForward;

	[Token(Token = "0x40006E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private Vector3 _prevZForward;

	[Token(Token = "0x40006E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float _aliveTime;

	[Token(Token = "0x40006E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private SoundChannel _rotateSoundChannel;

	[Token(Token = "0x40006E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Transform _lookTarget;

	[Token(Token = "0x40006E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Quaternion _previousRotateY;

	[Token(Token = "0x40006E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Quaternion _previousRotateZ;

	[Token(Token = "0x40006E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Quaternion _initialRotateY;

	[Token(Token = "0x40006E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Quaternion _initialRotateZ;

	[Token(Token = "0x40006E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private float _lerp;

	[Token(Token = "0x40006EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	[SerializeField]
	private bool _lookEnable;

	[Token(Token = "0x170000C2")]
	public SoundEffect rotateSoundEffect
	{
		[Token(Token = "0x600079F")]
		[Address(RVA = "0x8CA3FC", Offset = "0x8CA3FC", VA = "0x8CA3FC")]
		set
		{
		}
	}

	[Token(Token = "0x170000C3")]
	public Transform lookTarget
	{
		[Token(Token = "0x60007A0")]
		[Address(RVA = "0x8CA404", Offset = "0x8CA404", VA = "0x8CA404")]
		get
		{
			return null;
		}
		[Token(Token = "0x60007A1")]
		[Address(RVA = "0x8C1634", Offset = "0x8C1634", VA = "0x8C1634")]
		set
		{
		}
	}

	[Token(Token = "0x60007A2")]
	[Address(RVA = "0x8CA40C", Offset = "0x8CA40C", VA = "0x8CA40C")]
	public void Start()
	{
	}

	[Token(Token = "0x60007A3")]
	[Address(RVA = "0x8CA470", Offset = "0x8CA470", VA = "0x8CA470")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60007A4")]
	[Address(RVA = "0x8CA508", Offset = "0x8CA508", VA = "0x8CA508")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60007A5")]
	[Address(RVA = "0x8CA5A0", Offset = "0x8CA5A0", VA = "0x8CA5A0")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60007A6")]
	[Address(RVA = "0x8CAED4", Offset = "0x8CAED4", VA = "0x8CAED4")]
	public CharacterLookAt()
	{
	}
}
[Token(Token = "0x200013A")]
public class ClearRotation : MonoBehaviour
{
	[Token(Token = "0x60007A7")]
	[Address(RVA = "0x8CB23C", Offset = "0x8CB23C", VA = "0x8CB23C")]
	private void Update()
	{
	}

	[Token(Token = "0x60007A8")]
	[Address(RVA = "0x8CB390", Offset = "0x8CB390", VA = "0x8CB390")]
	public ClearRotation()
	{
	}
}
[Token(Token = "0x200013B")]
public class ConsoleViewer : MonoBehaviour
{
	[Token(Token = "0x40006EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64DE7C", Offset = "0x64DE7C")]
	public int fontSize;

	[Token(Token = "0x40006EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64DEB4", Offset = "0x64DEB4")]
	public Color infoMessage;

	[Token(Token = "0x40006ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64DEEC", Offset = "0x64DEEC")]
	public Color assertMessage;

	[Token(Token = "0x40006EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64DF24", Offset = "0x64DF24")]
	public Color warningMessage;

	[Token(Token = "0x40006EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64DF5C", Offset = "0x64DF5C")]
	public Color errorMessage;

	[Token(Token = "0x40006F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64DF94", Offset = "0x64DF94")]
	public Color exceptionMessage;

	[Token(Token = "0x40006F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	protected Dictionary<LogType, Color> logTypeColors;

	[Token(Token = "0x40006F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	protected ScrollRect scrollWindow;

	[Token(Token = "0x40006F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	protected RectTransform consoleRect;

	[Token(Token = "0x40006F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	protected Text consoleOutput;

	[Token(Token = "0x40006F5")]
	protected const string NEWLINE = "\n";

	[Token(Token = "0x40006F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	protected int lineBuffer;

	[Token(Token = "0x40006F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	protected int currentBuffer;

	[Token(Token = "0x40006F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	protected string lastMessage;

	[Token(Token = "0x40006F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	protected bool collapseLog;

	[Token(Token = "0x60007A9")]
	[Address(RVA = "0x7AB3A4", Offset = "0x7AB3A4", VA = "0x7AB3A4", Slot = "4")]
	public virtual void SetCollapse(bool state)
	{
	}

	[Token(Token = "0x60007AA")]
	[Address(RVA = "0x7AB3B0", Offset = "0x7AB3B0", VA = "0x7AB3B0", Slot = "5")]
	public virtual void ClearLog()
	{
	}

	[Token(Token = "0x60007AB")]
	[Address(RVA = "0x7AB434", Offset = "0x7AB434", VA = "0x7AB434", Slot = "6")]
	protected virtual void Awake()
	{
	}

	[Token(Token = "0x60007AC")]
	[Address(RVA = "0x7AB5F0", Offset = "0x7AB5F0", VA = "0x7AB5F0", Slot = "7")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x60007AD")]
	[Address(RVA = "0x7AB670", Offset = "0x7AB670", VA = "0x7AB670", Slot = "8")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x60007AE")]
	[Address(RVA = "0x7AB74C", Offset = "0x7AB74C", VA = "0x7AB74C", Slot = "9")]
	protected virtual string GetMessage(string message, LogType type)
	{
		return null;
	}

	[Token(Token = "0x60007AF")]
	[Address(RVA = "0x7AB9AC", Offset = "0x7AB9AC", VA = "0x7AB9AC", Slot = "10")]
	protected virtual void HandleLog(string message, string stackTrace, LogType type)
	{
	}

	[Token(Token = "0x60007B0")]
	[Address(RVA = "0x7ABC50", Offset = "0x7ABC50", VA = "0x7ABC50")]
	public ConsoleViewer()
	{
	}
}
[Token(Token = "0x200013C")]
public class ControlStrings : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20005C8")]
	private class ControlString
	{
		[Token(Token = "0x400265E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		public string controlNameTag;

		[Token(Token = "0x400265F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public string controlDisplayName;

		[Token(Token = "0x6002AAF")]
		[Address(RVA = "0x7AD1F8", Offset = "0x7AD1F8", VA = "0x7AD1F8")]
		public ControlString()
		{
		}
	}

	[Token(Token = "0x20005C9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x644038", Offset = "0x644038")]
	private sealed class <>c__DisplayClass2_0
	{
		[Token(Token = "0x4002660")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string t;

		[Token(Token = "0x6002AB0")]
		[Address(RVA = "0x7AD1B8", Offset = "0x7AD1B8", VA = "0x7AD1B8")]
		public <>c__DisplayClass2_0()
		{
		}

		[Token(Token = "0x6002AB1")]
		[Address(RVA = "0x7AD1C0", Offset = "0x7AD1C0", VA = "0x7AD1C0")]
		internal bool <ReplaceTags>b__1(ControlString obj)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x40006FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private List<ControlString> _control;

	[Token(Token = "0x60007B1")]
	[Address(RVA = "0x7ACF4C", Offset = "0x7ACF4C", VA = "0x7ACF4C")]
	public string ReplaceTags(string str)
	{
		return null;
	}

	[Token(Token = "0x60007B2")]
	[Address(RVA = "0x7ACFFC", Offset = "0x7ACFFC", VA = "0x7ACFFC")]
	public ControlStrings()
	{
	}

	[Token(Token = "0x60007B3")]
	[Address(RVA = "0x7AD004", Offset = "0x7AD004", VA = "0x7AD004")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x668764", Offset = "0x668764")]
	private string <ReplaceTags>b__2_0(Match m)
	{
		return null;
	}
}
[Token(Token = "0x200013D")]
public class DebugDisplay : MonoBehaviour
{
	[Token(Token = "0x40006FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static DebugDisplay _instance;

	[Token(Token = "0x40006FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform _debugDisplayPrefab;

	[Token(Token = "0x40006FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Transform _uiCursorPrefab;

	[Token(Token = "0x40006FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private VRTK_ControllerEvents.ButtonAlias _debugButtonWindows;

	[Token(Token = "0x40006FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private VRTK_ControllerEvents.ButtonAlias _debugButtonViveWand;

	[Token(Token = "0x4000700")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private VRTK_ControllerEvents.ButtonAlias _debugButtonViveCosmos;

	[Token(Token = "0x4000701")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private VRTK_ControllerEvents.ButtonAlias _debugButtonPS4;

	[Token(Token = "0x4000702")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private VRTK_ControllerEvents.ButtonAlias _selectionButtonVive;

	[Token(Token = "0x4000703")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[SerializeField]
	private VRTK_ControllerEvents.ButtonAlias _selectionButtonViveCosmos;

	[Token(Token = "0x4000704")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private VRTK_ControllerEvents.ButtonAlias _selectionButtonOculus;

	[Token(Token = "0x4000705")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[SerializeField]
	private VRTK_ControllerEvents.ButtonAlias _selectionButtonPS4;

	[Token(Token = "0x4000706")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private bool dualPressRequired;

	[Token(Token = "0x4000707")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[SerializeField]
	private float dualPressWindow;

	[Token(Token = "0x4000708")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private VRTK_ControllerEvents _eventsRight;

	[Token(Token = "0x4000709")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private VRTK_ControllerEvents _eventsLeft;

	[Token(Token = "0x400070A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Canvas _canvas;

	[Token(Token = "0x400070B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Text _text;

	[Token(Token = "0x400070C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private List<Transform> _modeList;

	[Token(Token = "0x400070D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private int _index;

	[Token(Token = "0x400070E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Transform _debugRoot;

	[Token(Token = "0x400070F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Transform _cursor;

	[Token(Token = "0x4000710")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private bool _showing;

	[Token(Token = "0x4000711")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private float leftHandWindow;

	[Token(Token = "0x4000712")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private float rightHandWindow;

	[Token(Token = "0x4000713")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private float time;

	[Token(Token = "0x170000C4")]
	public static DebugDisplay instance
	{
		[Token(Token = "0x60007B4")]
		[Address(RVA = "0x7B3068", Offset = "0x7B3068", VA = "0x7B3068")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60007B5")]
	[Address(RVA = "0x7B30B8", Offset = "0x7B30B8", VA = "0x7B30B8")]
	private void Awake()
	{
	}

	[Token(Token = "0x60007B6")]
	[Address(RVA = "0x7B3550", Offset = "0x7B3550", VA = "0x7B3550")]
	private void UpdateControllerEvents(ref VRTK_ControllerEvents events, bool left)
	{
	}

	[Token(Token = "0x60007B7")]
	[Address(RVA = "0x7B38CC", Offset = "0x7B38CC", VA = "0x7B38CC")]
	public void RemoveControllerEvents()
	{
	}

	[Token(Token = "0x60007B8")]
	[Address(RVA = "0x7B3AC4", Offset = "0x7B3AC4", VA = "0x7B3AC4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60007B9")]
	[Address(RVA = "0x7B3B20", Offset = "0x7B3B20", VA = "0x7B3B20")]
	public void Hide()
	{
	}

	[Token(Token = "0x60007BA")]
	[Address(RVA = "0x7B3D0C", Offset = "0x7B3D0C", VA = "0x7B3D0C")]
	public void Show()
	{
	}

	[Token(Token = "0x60007BB")]
	[Address(RVA = "0x7B40CC", Offset = "0x7B40CC", VA = "0x7B40CC")]
	private void SetHandTimeWindow(object sender, ControllerInteractionEventArgs e)
	{
	}

	[Token(Token = "0x60007BC")]
	[Address(RVA = "0x7B4124", Offset = "0x7B4124", VA = "0x7B4124")]
	private void ToggleDisplay()
	{
	}

	[Token(Token = "0x60007BD")]
	[Address(RVA = "0x7B3DB8", Offset = "0x7B3DB8", VA = "0x7B3DB8")]
	public void AddCursor()
	{
	}

	[Token(Token = "0x60007BE")]
	[Address(RVA = "0x7B3BD4", Offset = "0x7B3BD4", VA = "0x7B3BD4")]
	public void RemoveCursor()
	{
	}

	[Token(Token = "0x60007BF")]
	[Address(RVA = "0x7B4128", Offset = "0x7B4128", VA = "0x7B4128")]
	private void Update()
	{
	}

	[Token(Token = "0x60007C0")]
	[Address(RVA = "0x7B41A8", Offset = "0x7B41A8", VA = "0x7B41A8")]
	public DebugDisplay()
	{
	}
}
[Token(Token = "0x200013E")]
public class DebugParameterItem : MonoBehaviour
{
	[Token(Token = "0x20005CA")]
	public delegate void DebugParameterFunction(bool clicked, out string name, out string value);

	[Token(Token = "0x4000714")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Text _nameText;

	[Token(Token = "0x4000715")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Text _valueText;

	[Token(Token = "0x4000716")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public DebugParameterFunction _func;

	[Token(Token = "0x4000717")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private DebugScrollView _dsv;

	[Token(Token = "0x170000C5")]
	public DebugParameterFunction function
	{
		[Token(Token = "0x60007C1")]
		[Address(RVA = "0x7B46D8", Offset = "0x7B46D8", VA = "0x7B46D8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60007C2")]
	[Address(RVA = "0x7B46E0", Offset = "0x7B46E0", VA = "0x7B46E0")]
	public void Setup(DebugParameterFunction func, UnityAction<float> funcSlider)
	{
	}

	[Token(Token = "0x60007C3")]
	[Address(RVA = "0x7B47BC", Offset = "0x7B47BC", VA = "0x7B47BC")]
	public void Refresh()
	{
	}

	[Token(Token = "0x60007C4")]
	[Address(RVA = "0x7B4CB4", Offset = "0x7B4CB4", VA = "0x7B4CB4")]
	public void SetText(string name, string value)
	{
	}

	[Token(Token = "0x60007C5")]
	[Address(RVA = "0x7B4D2C", Offset = "0x7B4D2C", VA = "0x7B4D2C")]
	public void OnClick()
	{
	}

	[Token(Token = "0x60007C6")]
	[Address(RVA = "0x7B4E6C", Offset = "0x7B4E6C", VA = "0x7B4E6C")]
	public DebugParameterItem()
	{
	}
}
[Token(Token = "0x200013F")]
public class DebugParameterPanel : MonoBehaviour
{
	[Token(Token = "0x20005CB")]
	public class funcStore
	{
		[Token(Token = "0x4002661")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public DebugParameterItem.DebugParameterFunction func;

		[Token(Token = "0x4002662")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UnityAction<float> funcSlider;

		[Token(Token = "0x4002663")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float sliderMin;

		[Token(Token = "0x4002664")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float sliderMax;

		[Token(Token = "0x4002665")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float sliderInit;

		[Token(Token = "0x6002AB6")]
		[Address(RVA = "0x7B575C", Offset = "0x7B575C", VA = "0x7B575C")]
		public funcStore()
		{
		}
	}

	[Token(Token = "0x20005CC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x644048", Offset = "0x644048")]
	private sealed class <>c__DisplayClass16_0
	{
		[Token(Token = "0x4002666")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public DebugParameterItem.DebugParameterFunction func;

		[Token(Token = "0x4002667")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject item;

		[Token(Token = "0x6002AB7")]
		[Address(RVA = "0x7B5578", Offset = "0x7B5578", VA = "0x7B5578")]
		public <>c__DisplayClass16_0()
		{
		}

		[Token(Token = "0x6002AB8")]
		[Address(RVA = "0x7B5A5C", Offset = "0x7B5A5C", VA = "0x7B5A5C")]
		internal bool <DestroyParameterUI>b__0(GameObject entry)
		{
			return default(bool);
		}

		[Token(Token = "0x6002AB9")]
		[Address(RVA = "0x7B5AE0", Offset = "0x7B5AE0", VA = "0x7B5AE0")]
		internal bool <DestroyParameterUI>b__1(GameObject entry)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4000718")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static List<GameObject> _debugParameter;

	[Token(Token = "0x4000719")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static bool _showBackground;

	[Token(Token = "0x400071A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform _parameterPrefab;

	[Token(Token = "0x400071B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Transform _parameterPrefabSlider;

	[Token(Token = "0x400071C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Transform _parameterRoot;

	[Token(Token = "0x400071D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Transform _menuBackground;

	[Token(Token = "0x400071E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static Image _menuBackgroundImage;

	[Token(Token = "0x400071F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static Color _menuBackgroundColor;

	[Token(Token = "0x4000720")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static DebugParameterPanel _instance;

	[Token(Token = "0x4000721")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static List<funcStore> _funcsToAdd;

	[Token(Token = "0x170000C6")]
	public static DebugParameterPanel instance
	{
		[Token(Token = "0x60007C7")]
		[Address(RVA = "0x7B4F58", Offset = "0x7B4F58", VA = "0x7B4F58")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60007C8")]
	[Address(RVA = "0x7B3284", Offset = "0x7B3284", VA = "0x7B3284")]
	public void Initialize()
	{
	}

	[Token(Token = "0x60007C9")]
	[Address(RVA = "0x7B5214", Offset = "0x7B5214", VA = "0x7B5214")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60007CA")]
	[Address(RVA = "0x7B4FC0", Offset = "0x7B4FC0", VA = "0x7B4FC0")]
	public DebugParameterItem CreateParameterUI(DebugParameterItem.DebugParameterFunction func, [Optional] UnityAction<float> funcSlider, float sliderMin = 0f, float sliderMax = 1f, float sliderInit = 0f)
	{
		return null;
	}

	[Token(Token = "0x60007CB")]
	[Address(RVA = "0x7B5388", Offset = "0x7B5388", VA = "0x7B5388")]
	public void DestroyParameterUI(DebugParameterItem.DebugParameterFunction func)
	{
	}

	[Token(Token = "0x60007CC")]
	[Address(RVA = "0x7B5218", Offset = "0x7B5218", VA = "0x7B5218")]
	public void Refresh()
	{
	}

	[Token(Token = "0x60007CD")]
	[Address(RVA = "0x7B5580", Offset = "0x7B5580", VA = "0x7B5580")]
	public static DebugParameterItem.DebugParameterFunction CreateDebugParameter(DebugParameterItem.DebugParameterFunction func, [Optional] UnityAction<float> funcSlider, float sliderMin = 0f, float sliderMax = 1f, float sliderInit = 0f)
	{
		return null;
	}

	[Token(Token = "0x60007CE")]
	[Address(RVA = "0x7B5764", Offset = "0x7B5764", VA = "0x7B5764")]
	public static void DestroyDebugParameter(DebugParameterItem.DebugParameterFunction item)
	{
	}

	[Token(Token = "0x60007CF")]
	[Address(RVA = "0x7B5854", Offset = "0x7B5854", VA = "0x7B5854")]
	public static void RefreshBackground()
	{
	}

	[Token(Token = "0x60007D0")]
	[Address(RVA = "0x7B5998", Offset = "0x7B5998", VA = "0x7B5998")]
	public DebugParameterPanel()
	{
	}
}
[Token(Token = "0x2000140")]
public class DebugPlayerPosition : MonoBehaviour
{
	[Token(Token = "0x20005CD")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x644058", Offset = "0x644058")]
	private sealed class <TeleportToTargetWhenReady>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002668")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002669")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400266A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DebugPlayerPosition <>4__this;

		[Token(Token = "0x1700026C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002ABD")]
			[Address(RVA = "0x7B6090", Offset = "0x7B6090", VA = "0x7B6090", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700026D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002ABF")]
			[Address(RVA = "0x7B6100", Offset = "0x7B6100", VA = "0x7B6100", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002ABA")]
		[Address(RVA = "0x7B5D28", Offset = "0x7B5D28", VA = "0x7B5D28")]
		[DebuggerHidden]
		public <TeleportToTargetWhenReady>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x6002ABB")]
		[Address(RVA = "0x7B5F84", Offset = "0x7B5F84", VA = "0x7B5F84", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002ABC")]
		[Address(RVA = "0x7B5F88", Offset = "0x7B5F88", VA = "0x7B5F88", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002ABE")]
		[Address(RVA = "0x7B6098", Offset = "0x7B6098", VA = "0x7B6098", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000722")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private KeyCode _teleportKey;

	[Token(Token = "0x4000723")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private bool _teleportOnStart;

	[Token(Token = "0x60007D2")]
	[Address(RVA = "0x7B5B5C", Offset = "0x7B5B5C", VA = "0x7B5B5C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60007D3")]
	[Address(RVA = "0x7B5BDC", Offset = "0x7B5BDC", VA = "0x7B5BDC")]
	private void Start()
	{
	}

	[Token(Token = "0x60007D4")]
	[Address(RVA = "0x7B5D24", Offset = "0x7B5D24", VA = "0x7B5D24")]
	private void Update()
	{
	}

	[Token(Token = "0x60007D5")]
	[Address(RVA = "0x7B5CB0", Offset = "0x7B5CB0", VA = "0x7B5CB0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x668774", Offset = "0x668774")]
	private IEnumerator TeleportToTargetWhenReady()
	{
		return null;
	}

	[Token(Token = "0x60007D6")]
	[Address(RVA = "0x7B5D54", Offset = "0x7B5D54", VA = "0x7B5D54")]
	private void TeleportToTarget()
	{
	}

	[Token(Token = "0x60007D7")]
	[Address(RVA = "0x7B5F20", Offset = "0x7B5F20", VA = "0x7B5F20")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x60007D8")]
	[Address(RVA = "0x7B5F7C", Offset = "0x7B5F7C", VA = "0x7B5F7C")]
	public DebugPlayerPosition()
	{
	}
}
[Token(Token = "0x2000141")]
public class DebugPostFxEditor : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20005CE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x644068", Offset = "0x644068")]
	private sealed class <>c
	{
		[Token(Token = "0x400266B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x400266C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static DebugParameterItem.DebugParameterFunction <>9__7_6;

		[Token(Token = "0x6002AC1")]
		[Address(RVA = "0x7B67C8", Offset = "0x7B67C8", VA = "0x7B67C8")]
		public <>c()
		{
		}

		[Token(Token = "0x6002AC2")]
		[Address(RVA = "0x7B67D0", Offset = "0x7B67D0", VA = "0x7B67D0")]
		internal void <Start>b__7_6(bool clicked, out string name, out string value)
		{
		}
	}

	[Token(Token = "0x4000724")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private PostProcessVolume _postVol;

	[Token(Token = "0x4000725")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ColorGrading _grading;

	[Token(Token = "0x4000726")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private DebugParameterItem.DebugParameterFunction _debugFuncWeight;

	[Token(Token = "0x4000727")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private DebugParameterItem.DebugParameterFunction _debugFuncExposure;

	[Token(Token = "0x4000728")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private DebugParameterItem.DebugParameterFunction _debugFuncContrast;

	[Token(Token = "0x4000729")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private DebugParameterItem.DebugParameterFunction _debugFuncBlackLevel;

	[Token(Token = "0x400072A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private DebugParameterItem.DebugParameterFunction _debugFuncTransBg;

	[Token(Token = "0x60007D9")]
	[Address(RVA = "0x7B6108", Offset = "0x7B6108", VA = "0x7B6108")]
	private void Start()
	{
	}

	[Token(Token = "0x60007DA")]
	[Address(RVA = "0x7B646C", Offset = "0x7B646C", VA = "0x7B646C")]
	public DebugPostFxEditor()
	{
	}

	[Token(Token = "0x60007DB")]
	[Address(RVA = "0x7B6474", Offset = "0x7B6474", VA = "0x7B6474")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6687D8", Offset = "0x6687D8")]
	private void <Start>b__7_0(bool clicked, out string name, out string value)
	{
	}

	[Token(Token = "0x60007DC")]
	[Address(RVA = "0x7B6500", Offset = "0x7B6500", VA = "0x7B6500")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6687E8", Offset = "0x6687E8")]
	private void <Start>b__7_1(float value)
	{
	}

	[Token(Token = "0x60007DD")]
	[Address(RVA = "0x7B6554", Offset = "0x7B6554", VA = "0x7B6554")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6687F8", Offset = "0x6687F8")]
	private void <Start>b__7_2(bool clicked, out string name, out string value)
	{
	}

	[Token(Token = "0x60007DE")]
	[Address(RVA = "0x7B65F0", Offset = "0x7B65F0", VA = "0x7B65F0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x668808", Offset = "0x668808")]
	private void <Start>b__7_3(float value)
	{
	}

	[Token(Token = "0x60007DF")]
	[Address(RVA = "0x7B665C", Offset = "0x7B665C", VA = "0x7B665C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x668818", Offset = "0x668818")]
	private void <Start>b__7_4(bool clicked, out string name, out string value)
	{
	}

	[Token(Token = "0x60007E0")]
	[Address(RVA = "0x7B66F8", Offset = "0x7B66F8", VA = "0x7B66F8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x668828", Offset = "0x668828")]
	private void <Start>b__7_5(float value)
	{
	}
}
[Token(Token = "0x2000142")]
public class DebugScrollView : MonoBehaviour, IBeginDragHandler, IEventSystemHandler, IEndDragHandler
{
	[Token(Token = "0x400072B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ScrollRect _scrollRect;

	[Token(Token = "0x400072C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float _minDistance;

	[Token(Token = "0x400072D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private bool _dragging;

	[Token(Token = "0x400072E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
	private bool _draggingOn;

	[Token(Token = "0x400072F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector2 _changeAccumulate;

	[Token(Token = "0x4000730")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector2 _startValue;

	[Token(Token = "0x170000C7")]
	public bool isDragging
	{
		[Token(Token = "0x60007E1")]
		[Address(RVA = "0x7B4E64", Offset = "0x7B4E64", VA = "0x7B4E64")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60007E2")]
	[Address(RVA = "0x7B68B8", Offset = "0x7B68B8", VA = "0x7B68B8")]
	private void Start()
	{
	}

	[Token(Token = "0x60007E3")]
	[Address(RVA = "0x7B698C", Offset = "0x7B698C", VA = "0x7B698C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60007E4")]
	[Address(RVA = "0x7B6A6C", Offset = "0x7B6A6C", VA = "0x7B6A6C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60007E5")]
	[Address(RVA = "0x7B6B2C", Offset = "0x7B6B2C", VA = "0x7B6B2C", Slot = "4")]
	public void OnBeginDrag(PointerEventData eventData)
	{
	}

	[Token(Token = "0x60007E6")]
	[Address(RVA = "0x7B6B70", Offset = "0x7B6B70", VA = "0x7B6B70", Slot = "5")]
	public void OnEndDrag(PointerEventData eventData)
	{
	}

	[Token(Token = "0x60007E7")]
	[Address(RVA = "0x7B6B78", Offset = "0x7B6B78", VA = "0x7B6B78")]
	private void OnValueChanged(Vector2 value)
	{
	}

	[Token(Token = "0x60007E8")]
	[Address(RVA = "0x7B6D6C", Offset = "0x7B6D6C", VA = "0x7B6D6C")]
	public DebugScrollView()
	{
	}
}
[Token(Token = "0x2000143")]
public class DisableObjectWhenNoParticles : MonoBehaviour
{
	[Token(Token = "0x4000731")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private bool _includeChildren;

	[Token(Token = "0x4000732")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float _disableTime;

	[Token(Token = "0x4000733")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ParticleSystem[] _particleSystem;

	[Token(Token = "0x4000734")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float _timer;

	[Token(Token = "0x60007E9")]
	[Address(RVA = "0x7BB5E8", Offset = "0x7BB5E8", VA = "0x7BB5E8")]
	private void Start()
	{
	}

	[Token(Token = "0x60007EA")]
	[Address(RVA = "0x7BB6D4", Offset = "0x7BB6D4", VA = "0x7BB6D4")]
	private void Update()
	{
	}

	[Token(Token = "0x60007EB")]
	[Address(RVA = "0x7BB7B8", Offset = "0x7BB7B8", VA = "0x7BB7B8")]
	public DisableObjectWhenNoParticles()
	{
	}
}
[Token(Token = "0x2000144")]
public class DisableTunnelOverlay : MonoBehaviour
{
	[Token(Token = "0x4000735")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private VRTK_TunnelOverlay _tunnel;

	[Token(Token = "0x60007EC")]
	[Address(RVA = "0x7BB9DC", Offset = "0x7BB9DC", VA = "0x7BB9DC")]
	private void Start()
	{
	}

	[Token(Token = "0x60007ED")]
	[Address(RVA = "0x7BBA50", Offset = "0x7BBA50", VA = "0x7BBA50")]
	private void Update()
	{
	}

	[Token(Token = "0x60007EE")]
	[Address(RVA = "0x7BBAEC", Offset = "0x7BBAEC", VA = "0x7BBAEC")]
	public DisableTunnelOverlay()
	{
	}
}
[Token(Token = "0x2000145")]
public class FadeSystem : MonoBehaviour
{
	[Token(Token = "0x4000736")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static FadeSystem _instance;

	[Token(Token = "0x4000737")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Color _currentTargetColour;

	[Token(Token = "0x4000738")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float _fadeStartTime;

	[Token(Token = "0x4000739")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float _fadeLength;

	[Token(Token = "0x400073A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int _fadePriority;

	[Token(Token = "0x170000C8")]
	public static FadeSystem instance
	{
		[Token(Token = "0x60007EF")]
		[Address(RVA = "0x7BE954", Offset = "0x7BE954", VA = "0x7BE954")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000C9")]
	public bool isFading
	{
		[Token(Token = "0x60007F5")]
		[Address(RVA = "0x7BF31C", Offset = "0x7BF31C", VA = "0x7BF31C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60007F0")]
	[Address(RVA = "0x7BF140", Offset = "0x7BF140", VA = "0x7BF140")]
	private void Awake()
	{
	}

	[Token(Token = "0x60007F1")]
	[Address(RVA = "0x7BF1C0", Offset = "0x7BF1C0", VA = "0x7BF1C0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60007F2")]
	[Address(RVA = "0x7BF258", Offset = "0x7BF258", VA = "0x7BF258")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60007F3")]
	[Address(RVA = "0x7BE9A4", Offset = "0x7BE9A4", VA = "0x7BE9A4")]
	public bool StartFadeIn(float length = 1f, int priority = 0)
	{
		return default(bool);
	}

	[Token(Token = "0x60007F4")]
	[Address(RVA = "0x7BEAC0", Offset = "0x7BEAC0", VA = "0x7BEAC0")]
	public bool StartFadeOut(Color c, float time, int priority = 0)
	{
		return default(bool);
	}

	[Token(Token = "0x60007F6")]
	[Address(RVA = "0x7BF35C", Offset = "0x7BF35C", VA = "0x7BF35C")]
	public Color GetCurrentTargetColour()
	{
		return default(Color);
	}

	[Token(Token = "0x60007F7")]
	[Address(RVA = "0x7BF004", Offset = "0x7BF004", VA = "0x7BF004")]
	public void CancelFade()
	{
	}

	[Token(Token = "0x60007F8")]
	[Address(RVA = "0x7BF368", Offset = "0x7BF368", VA = "0x7BF368")]
	public void FadeOutInstant()
	{
	}

	[Token(Token = "0x60007F9")]
	[Address(RVA = "0x7BED84", Offset = "0x7BED84", VA = "0x7BED84")]
	public bool FadeOutInstant(Color c, int priority = 0)
	{
		return default(bool);
	}

	[Token(Token = "0x60007FA")]
	[Address(RVA = "0x7BF394", Offset = "0x7BF394", VA = "0x7BF394")]
	public FadeSystem()
	{
	}
}
[Token(Token = "0x2000146")]
public class FallThroughWorldReset : MonoBehaviour
{
	[Token(Token = "0x400073B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float _minimumZ;

	[Token(Token = "0x400073C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private MazeBodyPhysics _physics;

	[Token(Token = "0x400073D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 _safePosition;

	[Token(Token = "0x400073E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Rigidbody _rigidBody;

	[Token(Token = "0x400073F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private StageCheckpoint _safeCheckpoint;

	[Token(Token = "0x60007FB")]
	[Address(RVA = "0x7BF7A8", Offset = "0x7BF7A8", VA = "0x7BF7A8")]
	private void Start()
	{
	}

	[Token(Token = "0x60007FC")]
	[Address(RVA = "0x7BF878", Offset = "0x7BF878", VA = "0x7BF878")]
	private void Update()
	{
	}

	[Token(Token = "0x60007FD")]
	[Address(RVA = "0x7BFCB4", Offset = "0x7BFCB4", VA = "0x7BFCB4")]
	public FallThroughWorldReset()
	{
	}
}
[Token(Token = "0x2000147")]
public class FrameRateDisplay : MonoBehaviour
{
	[Token(Token = "0x4000740")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float _targetFrameRate;

	[Token(Token = "0x4000741")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject _timeDisplayRoot;

	[Token(Token = "0x4000742")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Text _text;

	[Token(Token = "0x4000743")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float deltaTime;

	[Token(Token = "0x4000744")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private DebugParameterItem.DebugParameterFunction _func;

	[Token(Token = "0x4000745")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool _enable;

	[Token(Token = "0x4000746")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private FrameTiming[] frameTimings;

	[Token(Token = "0x4000747")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float _currentAverageFrame;

	[Token(Token = "0x4000748")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float _currentMinFrame;

	[Token(Token = "0x4000749")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float _currentMaxFrame;

	[Token(Token = "0x400074A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float _currentAverageCPU;

	[Token(Token = "0x400074B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float _currentMinCPU;

	[Token(Token = "0x400074C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float _currentMaxCPU;

	[Token(Token = "0x400074D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float _cpuFrameTime;

	[Token(Token = "0x400074E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float _currentAverageGPU;

	[Token(Token = "0x400074F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float _currentMinGPU;

	[Token(Token = "0x4000750")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private float _currentMaxGPU;

	[Token(Token = "0x4000751")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float _gpuFrameTime;

	[Token(Token = "0x4000752")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private float _currentAverageRes;

	[Token(Token = "0x4000753")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float _currentMinRes;

	[Token(Token = "0x4000754")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private float _currentMaxRes;

	[Token(Token = "0x4000755")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float[] _deltaArray;

	[Token(Token = "0x4000756")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private float[] _cpuArray;

	[Token(Token = "0x4000757")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private float[] _gpuArray;

	[Token(Token = "0x4000758")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private float[] _resArray;

	[Token(Token = "0x4000759")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private bool _loopedArray;

	[Token(Token = "0x400075A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA9")]
	private bool _validCpuData;

	[Token(Token = "0x400075B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private int _arrayIndex;

	[Token(Token = "0x400075C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int s_arraySize;

	[Token(Token = "0x400075D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private StringBuilder _stringBuilder;

	[Token(Token = "0x400075E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private string _buildID;

	[Token(Token = "0x60007FE")]
	[Address(RVA = "0x83BD70", Offset = "0x83BD70", VA = "0x83BD70")]
	private void Start()
	{
	}

	[Token(Token = "0x60007FF")]
	[Address(RVA = "0x83BF5C", Offset = "0x83BF5C", VA = "0x83BF5C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000800")]
	[Address(RVA = "0x83BFC8", Offset = "0x83BFC8", VA = "0x83BFC8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000801")]
	[Address(RVA = "0x83BFCC", Offset = "0x83BFCC", VA = "0x83BFCC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000802")]
	[Address(RVA = "0x83D340", Offset = "0x83D340", VA = "0x83D340")]
	public FrameRateDisplay()
	{
	}

	[Token(Token = "0x6000804")]
	[Address(RVA = "0x83D418", Offset = "0x83D418", VA = "0x83D418")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x668838", Offset = "0x668838")]
	private void <Start>b__31_0(bool clicked, out string name, out string value)
	{
	}
}
[Token(Token = "0x2000148")]
public class GroupFade : MonoBehaviour
{
	[Token(Token = "0x400075F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private FadeOffRenderers[] _fadeTargets;

	[Token(Token = "0x4000760")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool _isInitialised;

	[Token(Token = "0x6000805")]
	[Address(RVA = "0x840F94", Offset = "0x840F94", VA = "0x840F94")]
	public void Fade(float alpha)
	{
	}

	[Token(Token = "0x6000806")]
	[Address(RVA = "0x841198", Offset = "0x841198", VA = "0x841198")]
	private void Init()
	{
	}

	[Token(Token = "0x6000807")]
	[Address(RVA = "0x841230", Offset = "0x841230", VA = "0x841230")]
	public GroupFade()
	{
	}
}
[Serializable]
[Token(Token = "0x2000149")]
public struct FadeOffRenderers
{
	[Token(Token = "0x4000761")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Renderer _renderer;

	[Token(Token = "0x4000762")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public string _materialColourTarget;

	[Token(Token = "0x4000763")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Color _colour;

	[Token(Token = "0x6000808")]
	[Address(RVA = "0x6DDDDC", Offset = "0x6DDDDC", VA = "0x6DDDDC")]
	public Color GetColour()
	{
		return default(Color);
	}

	[Token(Token = "0x6000809")]
	[Address(RVA = "0x6DDDE8", Offset = "0x6DDDE8", VA = "0x6DDDE8")]
	public void SetColour()
	{
	}
}
[Token(Token = "0x200014A")]
public class IgnoreHandsRaycast : VRTK_CustomRaycast
{
	[Token(Token = "0x600080A")]
	[Address(RVA = "0x84DA64", Offset = "0x84DA64", VA = "0x84DA64", Slot = "4")]
	public override bool CustomRaycast(Ray ray, out RaycastHit hitData, float length = float.PositiveInfinity)
	{
		return default(bool);
	}

	[Token(Token = "0x600080B")]
	[Address(RVA = "0x84DC88", Offset = "0x84DC88", VA = "0x84DC88", Slot = "5")]
	public override bool CustomLinecast(Vector3 startPosition, Vector3 endPosition, out RaycastHit hitData)
	{
		return default(bool);
	}

	[Token(Token = "0x600080C")]
	[Address(RVA = "0x84DE4C", Offset = "0x84DE4C", VA = "0x84DE4C")]
	public IgnoreHandsRaycast()
	{
	}
}
[Token(Token = "0x200014B")]
public class LaunchOnAwake : MonoBehaviour
{
	[Token(Token = "0x4000764")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Vector3 _launchVelocity;

	[Token(Token = "0x600080D")]
	[Address(RVA = "0x7E759C", Offset = "0x7E759C", VA = "0x7E759C")]
	private void Start()
	{
	}

	[Token(Token = "0x600080E")]
	[Address(RVA = "0x7E762C", Offset = "0x7E762C", VA = "0x7E762C")]
	public LaunchOnAwake()
	{
	}
}
[Token(Token = "0x200014C")]
public class LifetimeObject : MonoBehaviour
{
	[Token(Token = "0x4000765")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool _selfDestruct;

	[Token(Token = "0x4000766")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float _lifetimeDuration;

	[Token(Token = "0x4000767")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float _lifetimeTimer;

	[Token(Token = "0x600080F")]
	[Address(RVA = "0x7E7650", Offset = "0x7E7650", VA = "0x7E7650")]
	private void Start()
	{
	}

	[Token(Token = "0x6000810")]
	[Address(RVA = "0x7E7658", Offset = "0x7E7658", VA = "0x7E7658")]
	private void Update()
	{
	}

	[Token(Token = "0x6000811")]
	[Address(RVA = "0x7E7714", Offset = "0x7E7714", VA = "0x7E7714")]
	public bool ShouldDestroy()
	{
		return default(bool);
	}

	[Token(Token = "0x6000812")]
	[Address(RVA = "0x7E7724", Offset = "0x7E7724", VA = "0x7E7724")]
	public LifetimeObject()
	{
	}
}
[Token(Token = "0x200014D")]
public class LifetimeObjectManager : MonoBehaviour
{
	[Token(Token = "0x4000768")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float _updateInterval;

	[Token(Token = "0x4000769")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float _updateTimer;

	[Token(Token = "0x400076A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<LifetimeObject> _lifetimeObjects;

	[Token(Token = "0x6000813")]
	[Address(RVA = "0x7E772C", Offset = "0x7E772C", VA = "0x7E772C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000814")]
	[Address(RVA = "0x7E7794", Offset = "0x7E7794", VA = "0x7E7794")]
	public void AddLifetimeObject(GameObject objectToAdd)
	{
	}

	[Token(Token = "0x6000815")]
	[Address(RVA = "0x7E7870", Offset = "0x7E7870", VA = "0x7E7870")]
	private void Update()
	{
	}

	[Token(Token = "0x6000816")]
	[Address(RVA = "0x7E7A5C", Offset = "0x7E7A5C", VA = "0x7E7A5C")]
	public LifetimeObjectManager()
	{
	}
}
[Token(Token = "0x200014E")]
public class LoadGameScene : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20005CF")]
	private struct ShaderVariantWarmUpDef
	{
		[Token(Token = "0x400266D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		public string sceneName;

		[Token(Token = "0x400266E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[SerializeField]
		public List<ShaderVariantCollection> variantCollection;
	}

	[Token(Token = "0x20005D0")]
	public delegate void FinishedCallback();

	[Token(Token = "0x20005D1")]
	private enum LoadState
	{
		[Token(Token = "0x4002670")]
		Idle,
		[Token(Token = "0x4002671")]
		AsyncLoad,
		[Token(Token = "0x4002672")]
		NeedsActivate,
		[Token(Token = "0x4002673")]
		Recenter,
		[Token(Token = "0x4002674")]
		Callback
	}

	[Serializable]
	[Token(Token = "0x20005D2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x644078", Offset = "0x644078")]
	private sealed class <>c
	{
		[Token(Token = "0x4002675")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4002676")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static FinishedCallback <>9__31_4;

		[Token(Token = "0x4002677")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static DebugParameterItem.DebugParameterFunction <>9__31_2;

		[Token(Token = "0x6002AC8")]
		[Address(RVA = "0x7EA148", Offset = "0x7EA148", VA = "0x7EA148")]
		public <>c()
		{
		}

		[Token(Token = "0x6002AC9")]
		[Address(RVA = "0x7EA150", Offset = "0x7EA150", VA = "0x7EA150")]
		internal void <Start>b__31_4()
		{
		}

		[Token(Token = "0x6002ACA")]
		[Address(RVA = "0x7EA1B0", Offset = "0x7EA1B0", VA = "0x7EA1B0")]
		internal void <Start>b__31_2(bool clicked, out string name, out string value)
		{
		}
	}

	[Token(Token = "0x20005D3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x644088", Offset = "0x644088")]
	private sealed class <JumpDefaultDelayed>d__39 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002678")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002679")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x1700026E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002ACE")]
			[Address(RVA = "0x7EA444", Offset = "0x7EA444", VA = "0x7EA444", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700026F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002AD0")]
			[Address(RVA = "0x7EA4B4", Offset = "0x7EA4B4", VA = "0x7EA4B4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002ACB")]
		[Address(RVA = "0x7E9844", Offset = "0x7E9844", VA = "0x7E9844")]
		[DebuggerHidden]
		public <JumpDefaultDelayed>d__39(int <>1__state)
		{
		}

		[Token(Token = "0x6002ACC")]
		[Address(RVA = "0x7EA2E0", Offset = "0x7EA2E0", VA = "0x7EA2E0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002ACD")]
		[Address(RVA = "0x7EA2E4", Offset = "0x7EA2E4", VA = "0x7EA2E4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002ACF")]
		[Address(RVA = "0x7EA44C", Offset = "0x7EA44C", VA = "0x7EA44C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20005D4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x644098", Offset = "0x644098")]
	private sealed class <LoadSceneAsync>d__44 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400267A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400267B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400267C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LoadGameScene <>4__this;

		[Token(Token = "0x400267D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string sceneName;

		[Token(Token = "0x400267E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public FinishedCallback callback;

		[Token(Token = "0x400267F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private BundledSceneLoader <bundledSceneLoader>5__2;

		[Token(Token = "0x4002680")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Coroutine <bundleLoad>5__3;

		[Token(Token = "0x4002681")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int <r>5__4;

		[Token(Token = "0x17000270")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002AD4")]
			[Address(RVA = "0x7EB2E4", Offset = "0x7EB2E4", VA = "0x7EB2E4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000271")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002AD6")]
			[Address(RVA = "0x7EB354", Offset = "0x7EB354", VA = "0x7EB354", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002AD1")]
		[Address(RVA = "0x7E9938", Offset = "0x7E9938", VA = "0x7E9938")]
		[DebuggerHidden]
		public <LoadSceneAsync>d__44(int <>1__state)
		{
		}

		[Token(Token = "0x6002AD2")]
		[Address(RVA = "0x7EA4BC", Offset = "0x7EA4BC", VA = "0x7EA4BC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002AD3")]
		[Address(RVA = "0x7EA4C0", Offset = "0x7EA4C0", VA = "0x7EA4C0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002AD5")]
		[Address(RVA = "0x7EB2EC", Offset = "0x7EB2EC", VA = "0x7EB2EC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20005D5")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6440A8", Offset = "0x6440A8")]
	private sealed class <>c__DisplayClass45_0
	{
		[Token(Token = "0x4002682")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string sceneName;

		[Token(Token = "0x6002AD7")]
		[Address(RVA = "0x7E9D44", Offset = "0x7E9D44", VA = "0x7E9D44")]
		public <>c__DisplayClass45_0()
		{
		}

		[Token(Token = "0x6002AD8")]
		[Address(RVA = "0x7EA27C", Offset = "0x7EA27C", VA = "0x7EA27C")]
		internal bool <WarmUpShadersForScene>b__0(ShaderVariantWarmUpDef wu)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x400076B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static LoadGameScene _instance;

	[Token(Token = "0x400076C")]
	private const string COMMON_SCENE_NAME = "CommonScene";

	[Token(Token = "0x400076D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64E1DC", Offset = "0x64E1DC")]
	[SerializeField]
	private string _sceneName;

	[Token(Token = "0x400076E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64E228", Offset = "0x64E228")]
	[SerializeField]
	private List<string> _hideScenesInDebugMenu;

	[Token(Token = "0x400076F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64E274", Offset = "0x64E274")]
	[SerializeField]
	private List<string> _scenesWithoutLoadingScreen;

	[Token(Token = "0x4000770")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64E2C0", Offset = "0x64E2C0")]
	[SerializeField]
	private List<ShaderVariantWarmUpDef> _shaderWarmUp;

	[Token(Token = "0x4000771")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64E30C", Offset = "0x64E30C")]
	[SerializeField]
	private Transform _loadingRoot;

	[Token(Token = "0x4000772")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64E358", Offset = "0x64E358")]
	[SerializeField]
	private Transform _ps4LoadingRoot;

	[Token(Token = "0x4000773")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64E3A4", Offset = "0x64E3A4")]
	[SerializeField]
	private string _missingSceneRedirectName;

	[Token(Token = "0x4000774")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Scene? _scene;

	[Token(Token = "0x4000775")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private string _loadedScene;

	[Token(Token = "0x4000776")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private int _loadedSceneIdx;

	[Token(Token = "0x4000777")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private string _loadingSceneName;

	[Token(Token = "0x4000778")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private FinishedCallback _loadingCallback;

	[Token(Token = "0x4000779")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private List<string> _scenesInBuild;

	[Token(Token = "0x400077A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private bool _isLoading;

	[Token(Token = "0x400077B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private LoadState _state;

	[Token(Token = "0x400077C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private AsyncOperation _async;

	[Token(Token = "0x400077D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private AsyncOperation _unloadAsync;

	[Token(Token = "0x400077E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private bool _needsShowLoadScreen;

	[Token(Token = "0x400077F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x99")]
	private bool _needsHideLoadScreen;

	[Token(Token = "0x4000780")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static float _rotateX;

	[Token(Token = "0x4000781")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static float _rotateY;

	[Token(Token = "0x4000782")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static float _rotateZ;

	[Token(Token = "0x4000783")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public static Quaternion _rotate;

	[Token(Token = "0x4000784")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9A")]
	public bool _visEnable;

	[Token(Token = "0x4000785")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Camera _savedMainCamera;

	[Token(Token = "0x170000CA")]
	public static LoadGameScene instance
	{
		[Token(Token = "0x6000817")]
		[Address(RVA = "0x7E8A0C", Offset = "0x7E8A0C", VA = "0x7E8A0C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000CB")]
	public string currentSceneName
	{
		[Token(Token = "0x6000818")]
		[Address(RVA = "0x7E8A74", Offset = "0x7E8A74", VA = "0x7E8A74")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000CC")]
	public Scene scene
	{
		[Token(Token = "0x6000819")]
		[Address(RVA = "0x7E8A7C", Offset = "0x7E8A7C", VA = "0x7E8A7C")]
		get
		{
			return default(Scene);
		}
	}

	[Token(Token = "0x600081A")]
	[Address(RVA = "0x7E8B28", Offset = "0x7E8B28", VA = "0x7E8B28")]
	private void Awake()
	{
	}

	[Token(Token = "0x600081B")]
	[Address(RVA = "0x7E8D68", Offset = "0x7E8D68", VA = "0x7E8D68")]
	private void Start()
	{
	}

	[Token(Token = "0x600081C")]
	[Address(RVA = "0x7E917C", Offset = "0x7E917C", VA = "0x7E917C")]
	private void Update()
	{
	}

	[Token(Token = "0x600081D")]
	[Address(RVA = "0x7E982C", Offset = "0x7E982C", VA = "0x7E982C")]
	private void SetLoadingScreenVisible(bool enable)
	{
	}

	[Token(Token = "0x600081E")]
	[Address(RVA = "0x7E911C", Offset = "0x7E911C", VA = "0x7E911C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x668848", Offset = "0x668848")]
	private IEnumerator JumpDefaultDelayed()
	{
		return null;
	}

	[Token(Token = "0x600081F")]
	[Address(RVA = "0x7E9870", Offset = "0x7E9870", VA = "0x7E9870")]
	public void SetActiveScene()
	{
	}

	[Token(Token = "0x6000820")]
	[Address(RVA = "0x7E96F0", Offset = "0x7E96F0", VA = "0x7E96F0")]
	private void ShowLoadingScreen()
	{
	}

	[Token(Token = "0x6000821")]
	[Address(RVA = "0x7E97E0", Offset = "0x7E97E0", VA = "0x7E97E0")]
	private void HideLoadingScreen()
	{
	}

	[Token(Token = "0x6000822")]
	[Address(RVA = "0x7E988C", Offset = "0x7E988C", VA = "0x7E988C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6688AC", Offset = "0x6688AC")]
	private IEnumerator LoadSceneAsync(string sceneName, FinishedCallback callback)
	{
		return null;
	}

	[Token(Token = "0x6000823")]
	[Address(RVA = "0x7E9964", Offset = "0x7E9964", VA = "0x7E9964")]
	public void WarmUpShadersForScene(string sceneName)
	{
	}

	[Token(Token = "0x6000824")]
	[Address(RVA = "0x7E907C", Offset = "0x7E907C", VA = "0x7E907C")]
	public void LoadScene(string sceneName, [Optional] FinishedCallback callback)
	{
	}

	[Token(Token = "0x6000825")]
	[Address(RVA = "0x7E9D4C", Offset = "0x7E9D4C", VA = "0x7E9D4C")]
	public LoadGameScene()
	{
	}

	[Token(Token = "0x6000827")]
	[Address(RVA = "0x7E9E3C", Offset = "0x7E9E3C", VA = "0x7E9E3C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x668910", Offset = "0x668910")]
	private void <Start>b__31_0(bool clicked, out string name, out string value)
	{
	}

	[Token(Token = "0x6000828")]
	[Address(RVA = "0x7E9F80", Offset = "0x7E9F80", VA = "0x7E9F80")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x668920", Offset = "0x668920")]
	private void <Start>b__31_1(bool clicked, out string name, out string value)
	{
	}

	[Token(Token = "0x6000829")]
	[Address(RVA = "0x7EA0B8", Offset = "0x7EA0B8", VA = "0x7EA0B8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x668930", Offset = "0x668930")]
	private void <Start>b__31_3()
	{
	}
}
[Token(Token = "0x200014F")]
public class MatchRotation : MonoBehaviour
{
	[Token(Token = "0x4000786")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform _source;

	[Token(Token = "0x4000787")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Vector3 _offset;

	[Token(Token = "0x4000788")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Quaternion _offsetQuat;

	[Token(Token = "0x600082A")]
	[Address(RVA = "0x7EDE44", Offset = "0x7EDE44", VA = "0x7EDE44")]
	private void Start()
	{
	}

	[Token(Token = "0x600082B")]
	[Address(RVA = "0x7EDED8", Offset = "0x7EDED8", VA = "0x7EDED8")]
	private void Update()
	{
	}

	[Token(Token = "0x600082C")]
	[Address(RVA = "0x7EE000", Offset = "0x7EE000", VA = "0x7EE000")]
	public MatchRotation()
	{
	}
}
[Token(Token = "0x2000150")]
public class MaterialInstanceAssign : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20005D6")]
	private struct MaterialDef
	{
		[Token(Token = "0x4002683")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		public Renderer sourceRenderer;

		[Token(Token = "0x4002684")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[SerializeField]
		public int sourceMaterialIndex;

		[Token(Token = "0x4002685")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		public List<MaterialTargetDef> target;
	}

	[Serializable]
	[Token(Token = "0x20005D7")]
	private struct MaterialTargetDef
	{
		[Token(Token = "0x4002686")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		public Renderer targetRenderer;

		[Token(Token = "0x4002687")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[SerializeField]
		public int targetMaterialIndex;
	}

	[Token(Token = "0x4000789")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private List<MaterialDef> _material;

	[Token(Token = "0x600082D")]
	[Address(RVA = "0x7EE008", Offset = "0x7EE008", VA = "0x7EE008")]
	private void Update()
	{
	}

	[Token(Token = "0x600082E")]
	[Address(RVA = "0x7EE350", Offset = "0x7EE350", VA = "0x7EE350")]
	public MaterialInstanceAssign()
	{
	}
}
[Token(Token = "0x2000151")]
[ExecuteInEditMode]
public class MaterialUVScroll : MonoBehaviour
{
	[Token(Token = "0x400078A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float _ScrollSpeedU;

	[Token(Token = "0x400078B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float _ScrollSpeedV;

	[Token(Token = "0x400078C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private int _materialIndex;

	[Token(Token = "0x400078D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private string _textureName;

	[Token(Token = "0x400078E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private float _SecondaryScrollSpeedU;

	[Token(Token = "0x400078F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private float _SecondaryScrollSpeedV;

	[Token(Token = "0x4000790")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private string _secondaryTextureName;

	[Token(Token = "0x4000791")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private bool _previewInEditor;

	[Token(Token = "0x4000792")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	[SerializeField]
	private bool _useInstancedMaterial;

	[Token(Token = "0x4000793")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Renderer _renderer;

	[Token(Token = "0x4000794")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Material _material;

	[Token(Token = "0x4000795")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private int _textureNameId;

	[Token(Token = "0x4000796")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private int _secondaryTextureNameId;

	[Token(Token = "0x4000797")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool hasTexture;

	[Token(Token = "0x4000798")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
	private bool hasSecondaryTexture;

	[Token(Token = "0x600082F")]
	[Address(RVA = "0x7EE358", Offset = "0x7EE358", VA = "0x7EE358")]
	private void Start()
	{
	}

	[Token(Token = "0x6000830")]
	[Address(RVA = "0x7EE4B4", Offset = "0x7EE4B4", VA = "0x7EE4B4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000831")]
	[Address(RVA = "0x7EE4B8", Offset = "0x7EE4B8", VA = "0x7EE4B8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000832")]
	[Address(RVA = "0x7EE4BC", Offset = "0x7EE4BC", VA = "0x7EE4BC")]
	private void UpdateMaterial(Material material)
	{
	}

	[Token(Token = "0x6000833")]
	[Address(RVA = "0x7EE620", Offset = "0x7EE620", VA = "0x7EE620")]
	private void OnUpdate()
	{
	}

	[Token(Token = "0x6000834")]
	[Address(RVA = "0x7EE7A4", Offset = "0x7EE7A4", VA = "0x7EE7A4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000835")]
	[Address(RVA = "0x7EE7E0", Offset = "0x7EE7E0", VA = "0x7EE7E0")]
	public MaterialUVScroll()
	{
	}
}
[Token(Token = "0x2000152")]
public class MazeVideoPlayer : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20005D8")]
	private class Output
	{
		[Token(Token = "0x4002688")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		public Material _materialTarget;

		[Token(Token = "0x4002689")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public string _rgbProperty;

		[Token(Token = "0x400268A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public int _rgbId;

		[Token(Token = "0x400268B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		public string _lumaProperty;

		[Token(Token = "0x400268C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public int _lumaId;

		[Token(Token = "0x400268D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		public string _chromaProperty;

		[Token(Token = "0x400268E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		public int _chromaId;

		[Token(Token = "0x6002AD9")]
		[Address(RVA = "0x7F4F00", Offset = "0x7F4F00", VA = "0x7F4F00")]
		public Output()
		{
		}
	}

	[Token(Token = "0x20005D9")]
	public enum PlayState
	{
		[Token(Token = "0x4002690")]
		Play,
		[Token(Token = "0x4002691")]
		Stop
	}

	[Token(Token = "0x20005DA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6440B8", Offset = "0x6440B8")]
	private sealed class <DelayedStop>d__40 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002692")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002693")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002694")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MazeVideoPlayer <>4__this;

		[Token(Token = "0x17000272")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002ADD")]
			[Address(RVA = "0x7F4E88", Offset = "0x7F4E88", VA = "0x7F4E88", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000273")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002ADF")]
			[Address(RVA = "0x7F4EF8", Offset = "0x7F4EF8", VA = "0x7F4EF8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002ADA")]
		[Address(RVA = "0x7F4D44", Offset = "0x7F4D44", VA = "0x7F4D44")]
		[DebuggerHidden]
		public <DelayedStop>d__40(int <>1__state)
		{
		}

		[Token(Token = "0x6002ADB")]
		[Address(RVA = "0x7F4DF8", Offset = "0x7F4DF8", VA = "0x7F4DF8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002ADC")]
		[Address(RVA = "0x7F4DFC", Offset = "0x7F4DFC", VA = "0x7F4DFC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002ADE")]
		[Address(RVA = "0x7F4E90", Offset = "0x7F4E90", VA = "0x7F4E90", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000799")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static List<MazeVideoPlayer> _allVideoPlayer;

	[Token(Token = "0x400079A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64E4B0", Offset = "0x64E4B0")]
	[SerializeField]
	private string _videoFilename;

	[Token(Token = "0x400079B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private bool _playOnAwake;

	[Token(Token = "0x400079C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private List<Output> _output;

	[Token(Token = "0x400079D")]
	private const string videoPath = "video/";

	[Token(Token = "0x400079E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private VideoPlayer _player;

	[Token(Token = "0x400079F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool _loop;

	[Token(Token = "0x40007A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	private bool _playing;

	[Token(Token = "0x40007A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
	private bool _finished;

	[Token(Token = "0x40007A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3B")]
	private bool _streamBegan;

	[Token(Token = "0x40007A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private int _frameReadyCount;

	[Token(Token = "0x40007A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool _finishedPreparing;

	[Token(Token = "0x170000CD")]
	public string videoFile
	{
		[Token(Token = "0x6000837")]
		[Address(RVA = "0x7F3E2C", Offset = "0x7F3E2C", VA = "0x7F3E2C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000838")]
		[Address(RVA = "0x7F3E34", Offset = "0x7F3E34", VA = "0x7F3E34")]
		set
		{
		}
	}

	[Token(Token = "0x170000CE")]
	public bool loop
	{
		[Token(Token = "0x6000839")]
		[Address(RVA = "0x7F3E80", Offset = "0x7F3E80", VA = "0x7F3E80")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600083A")]
		[Address(RVA = "0x7F3E88", Offset = "0x7F3E88", VA = "0x7F3E88")]
		set
		{
		}
	}

	[Token(Token = "0x170000CF")]
	public PlayState state
	{
		[Token(Token = "0x600083B")]
		[Address(RVA = "0x7F3E94", Offset = "0x7F3E94", VA = "0x7F3E94")]
		get
		{
			return default(PlayState);
		}
	}

	[Token(Token = "0x6000836")]
	[Address(RVA = "0x7F3E10", Offset = "0x7F3E10", VA = "0x7F3E10")]
	private void FrameReadyCallback(VideoPlayer vp, long frame)
	{
	}

	[Token(Token = "0x600083C")]
	[Address(RVA = "0x7F3EA4", Offset = "0x7F3EA4", VA = "0x7F3EA4")]
	private void Start()
	{
	}

	[Token(Token = "0x600083D")]
	[Address(RVA = "0x7F4000", Offset = "0x7F4000", VA = "0x7F4000")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600083E")]
	[Address(RVA = "0x7F4004", Offset = "0x7F4004", VA = "0x7F4004")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600083F")]
	[Address(RVA = "0x7F3E5C", Offset = "0x7F3E5C", VA = "0x7F3E5C")]
	private void RefreshPlayer()
	{
	}

	[Token(Token = "0x6000840")]
	[Address(RVA = "0x7F3F54", Offset = "0x7F3F54", VA = "0x7F3F54")]
	private void InitPlayer()
	{
	}

	[Token(Token = "0x6000841")]
	[Address(RVA = "0x7F4098", Offset = "0x7F4098", VA = "0x7F4098")]
	private void DestroyPlayer()
	{
	}

	[Token(Token = "0x6000842")]
	[Address(RVA = "0x7F45EC", Offset = "0x7F45EC", VA = "0x7F45EC")]
	private void ShowError(VideoPlayer player, string message)
	{
	}

	[Token(Token = "0x6000843")]
	[Address(RVA = "0x7F409C", Offset = "0x7F409C", VA = "0x7F409C")]
	private void AddUnityVideoPlayer()
	{
	}

	[Token(Token = "0x6000844")]
	[Address(RVA = "0x7F4540", Offset = "0x7F4540", VA = "0x7F4540")]
	private void RemoveUnityVideoPlayer()
	{
	}

	[Token(Token = "0x6000845")]
	[Address(RVA = "0x7F46CC", Offset = "0x7F46CC", VA = "0x7F46CC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000846")]
	[Address(RVA = "0x7F3F58", Offset = "0x7F3F58", VA = "0x7F3F58")]
	public void Play()
	{
	}

	[Token(Token = "0x6000847")]
	[Address(RVA = "0x7F4950", Offset = "0x7F4950", VA = "0x7F4950")]
	public void Pause()
	{
	}

	[Token(Token = "0x6000848")]
	[Address(RVA = "0x7F4984", Offset = "0x7F4984", VA = "0x7F4984")]
	public void Resume()
	{
	}

	[Token(Token = "0x6000849")]
	[Address(RVA = "0x7F49B8", Offset = "0x7F49B8", VA = "0x7F49B8")]
	public static void PauseAll()
	{
	}

	[Token(Token = "0x600084A")]
	[Address(RVA = "0x7F4B10", Offset = "0x7F4B10", VA = "0x7F4B10")]
	public static void ResumeAll()
	{
	}

	[Token(Token = "0x600084B")]
	[Address(RVA = "0x7F4C68", Offset = "0x7F4C68", VA = "0x7F4C68")]
	private void OnMovieEvent(int fmVevent)
	{
	}

	[Token(Token = "0x600084C")]
	[Address(RVA = "0x7F4C6C", Offset = "0x7F4C6C", VA = "0x7F4C6C")]
	public void Stop()
	{
	}

	[Token(Token = "0x600084D")]
	[Address(RVA = "0x7F4CD0", Offset = "0x7F4CD0", VA = "0x7F4CD0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x668940", Offset = "0x668940")]
	private IEnumerator DelayedStop()
	{
		return null;
	}

	[Token(Token = "0x600084E")]
	[Address(RVA = "0x7F4D70", Offset = "0x7F4D70", VA = "0x7F4D70")]
	private void CropVideo()
	{
	}

	[Token(Token = "0x600084F")]
	[Address(RVA = "0x7F4D74", Offset = "0x7F4D74", VA = "0x7F4D74")]
	public MazeVideoPlayer()
	{
	}
}
[Token(Token = "0x2000153")]
public class MovementUtils
{
	[Token(Token = "0x6000851")]
	[Address(RVA = "0x7FA54C", Offset = "0x7FA54C", VA = "0x7FA54C")]
	public static void TurnToFace(Vector3 position)
	{
	}

	[Token(Token = "0x6000852")]
	[Address(RVA = "0x7FA7F8", Offset = "0x7FA7F8", VA = "0x7FA7F8")]
	public MovementUtils()
	{
	}
}
[Token(Token = "0x2000154")]
public class ObsoleteFieldAttribute : PropertyAttribute
{
	[Token(Token = "0x6000853")]
	[Address(RVA = "0x7FDF00", Offset = "0x7FDF00", VA = "0x7FDF00")]
	public ObsoleteFieldAttribute()
	{
	}
}
[Token(Token = "0x2000155")]
public class OVREyeLevel : MonoBehaviour
{
	[Token(Token = "0x40007A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<Transform> _shiftObject;

	[Token(Token = "0x40007A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64E51C", Offset = "0x64E51C")]
	[SerializeField]
	private bool _forceEyeHeight;

	[Token(Token = "0x40007A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64E568", Offset = "0x64E568")]
	[SerializeField]
	private float _customEyeHeight;

	[Token(Token = "0x6000854")]
	[Address(RVA = "0x7F1538", Offset = "0x7F1538", VA = "0x7F1538")]
	public void ForceEyeHeight(bool forceEyeHeight)
	{
	}

	[Token(Token = "0x6000855")]
	[Address(RVA = "0x7F1544", Offset = "0x7F1544", VA = "0x7F1544")]
	public void SetEyeHeight(float eyeHeight)
	{
	}

	[Token(Token = "0x6000856")]
	[Address(RVA = "0x7FDC9C", Offset = "0x7FDC9C", VA = "0x7FDC9C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000857")]
	[Address(RVA = "0x7FDEF8", Offset = "0x7FDEF8", VA = "0x7FDEF8")]
	public OVREyeLevel()
	{
	}
}
[Token(Token = "0x2000156")]
public class PlatformEnable : MonoBehaviour
{
	[Token(Token = "0x20005DB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6440C8", Offset = "0x6440C8")]
	private sealed class <WaitForVR>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002695")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002696")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002697")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PlatformEnable <>4__this;

		[Token(Token = "0x17000274")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002AE3")]
			[Address(RVA = "0x8D2C98", Offset = "0x8D2C98", VA = "0x8D2C98", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000275")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002AE5")]
			[Address(RVA = "0x8D2D08", Offset = "0x8D2D08", VA = "0x8D2D08", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002AE0")]
		[Address(RVA = "0x8D2A30", Offset = "0x8D2A30", VA = "0x8D2A30")]
		[DebuggerHidden]
		public <WaitForVR>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x6002AE1")]
		[Address(RVA = "0x8D2A6C", Offset = "0x8D2A6C", VA = "0x8D2A6C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002AE2")]
		[Address(RVA = "0x8D2A70", Offset = "0x8D2A70", VA = "0x8D2A70", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002AE4")]
		[Address(RVA = "0x8D2CA0", Offset = "0x8D2CA0", VA = "0x8D2CA0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40007A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private bool _enablePS4;

	[Token(Token = "0x40007A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	[SerializeField]
	private bool _enableBaseModePS4;

	[Token(Token = "0x40007AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	[SerializeField]
	private bool _enableSteamVR;

	[Token(Token = "0x40007AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	[SerializeField]
	private bool _enableOculus;

	[Token(Token = "0x6000858")]
	[Address(RVA = "0x8D2990", Offset = "0x8D2990", VA = "0x8D2990")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000859")]
	[Address(RVA = "0x8D29BC", Offset = "0x8D29BC", VA = "0x8D29BC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6689A4", Offset = "0x6689A4")]
	private IEnumerator WaitForVR()
	{
		return null;
	}

	[Token(Token = "0x600085A")]
	[Address(RVA = "0x8D2A5C", Offset = "0x8D2A5C", VA = "0x8D2A5C")]
	public PlatformEnable()
	{
	}
}
[Token(Token = "0x2000157")]
public class PlayerPositionReset : MonoBehaviour
{
	[Token(Token = "0x40007AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float _timerAppearDelay;

	[Token(Token = "0x40007AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float _timerDelay;

	[Token(Token = "0x40007AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject _resetTimerRoot;

	[Token(Token = "0x40007AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Image _resetTimerImage;

	[Token(Token = "0x40007B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private VRTK_PolicyList targetListPolicy;

	[Token(Token = "0x40007B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64E644", Offset = "0x64E644")]
	[SerializeField]
	private VRTK_HeadsetCollision headsetCollision;

	[Token(Token = "0x40007B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private bool _enable;

	[Token(Token = "0x40007B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float _collisionTimer;

	[Token(Token = "0x40007B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool _headsetBadPosition;

	[Token(Token = "0x40007B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Vector3 _lastValidPosition;

	[Token(Token = "0x600085B")]
	[Address(RVA = "0x8DA02C", Offset = "0x8DA02C", VA = "0x8DA02C", Slot = "4")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x600085C")]
	[Address(RVA = "0x8DA35C", Offset = "0x8DA35C", VA = "0x8DA35C", Slot = "5")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x600085D")]
	[Address(RVA = "0x8DA470", Offset = "0x8DA470", VA = "0x8DA470")]
	private void SetEnable(bool en)
	{
	}

	[Token(Token = "0x600085E")]
	[Address(RVA = "0x8DA4AC", Offset = "0x8DA4AC", VA = "0x8DA4AC")]
	private void Update()
	{
	}

	[Token(Token = "0x600085F")]
	[Address(RVA = "0x8DA69C", Offset = "0x8DA69C", VA = "0x8DA69C")]
	private void ResetToValidPosition()
	{
	}

	[Token(Token = "0x6000860")]
	[Address(RVA = "0x8DA804", Offset = "0x8DA804", VA = "0x8DA804", Slot = "6")]
	protected virtual void OnHeadsetCollisionDetect(object sender, HeadsetCollisionEventArgs e)
	{
	}

	[Token(Token = "0x6000861")]
	[Address(RVA = "0x8DA8E4", Offset = "0x8DA8E4", VA = "0x8DA8E4", Slot = "7")]
	protected virtual void OnHeadsetCollisionEnded(object sender, HeadsetCollisionEventArgs e)
	{
	}

	[Token(Token = "0x6000862")]
	[Address(RVA = "0x8DA944", Offset = "0x8DA944", VA = "0x8DA944", Slot = "8")]
	protected virtual bool ValidTarget(Collider target)
	{
		return default(bool);
	}

	[Token(Token = "0x6000863")]
	[Address(RVA = "0x8DA9F8", Offset = "0x8DA9F8", VA = "0x8DA9F8")]
	public PlayerPositionReset()
	{
	}

	[Token(Token = "0x6000864")]
	[Address(RVA = "0x8DAA14", Offset = "0x8DAA14", VA = "0x8DAA14")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x668A08", Offset = "0x668A08")]
	private void <OnEnable>b__10_0(bool clicked, out string name, out string value)
	{
	}
}
[Token(Token = "0x2000158")]
public class PointAtTarget : MonoBehaviour
{
	[Token(Token = "0x40007B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform _target;

	[Token(Token = "0x40007B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Vector3 _offset;

	[Token(Token = "0x40007B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private float _maxTurnSpeed;

	[Token(Token = "0x40007B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Quaternion _offsetQuat;

	[Token(Token = "0x170000D0")]
	public Transform target
	{
		[Token(Token = "0x6000865")]
		[Address(RVA = "0x8DB4AC", Offset = "0x8DB4AC", VA = "0x8DB4AC")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000866")]
		[Address(RVA = "0x8DB4B4", Offset = "0x8DB4B4", VA = "0x8DB4B4")]
		set
		{
		}
	}

	[Token(Token = "0x6000867")]
	[Address(RVA = "0x8DB4BC", Offset = "0x8DB4BC", VA = "0x8DB4BC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000868")]
	[Address(RVA = "0x8DB550", Offset = "0x8DB550", VA = "0x8DB550")]
	private void Update()
	{
	}

	[Token(Token = "0x6000869")]
	[Address(RVA = "0x8DB82C", Offset = "0x8DB82C", VA = "0x8DB82C")]
	public PointAtTarget()
	{
	}
}
[Token(Token = "0x2000159")]
public class PolicyName : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20005DC")]
	public struct PolicyNameData
	{
		[Token(Token = "0x4002698")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string name;

		[Token(Token = "0x6002AE6")]
		[Address(RVA = "0x6DEF1C", Offset = "0x6DEF1C", VA = "0x6DEF1C")]
		public PolicyNameData(string name)
		{
		}
	}

	[Token(Token = "0x40007BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private List<PolicyNameData> _policy;

	[Token(Token = "0x600086A")]
	[Address(RVA = "0x8DC34C", Offset = "0x8DC34C", VA = "0x8DC34C")]
	public bool HasPolicy(string name)
	{
		return default(bool);
	}

	[Token(Token = "0x600086B")]
	[Address(RVA = "0x8DC484", Offset = "0x8DC484", VA = "0x8DC484")]
	public void Add(string policy)
	{
	}

	[Token(Token = "0x600086C")]
	[Address(RVA = "0x8DC51C", Offset = "0x8DC51C", VA = "0x8DC51C")]
	public static void CreatePolicyComponent(GameObject go, string[] policyList)
	{
	}

	[Token(Token = "0x600086D")]
	[Address(RVA = "0x8DC648", Offset = "0x8DC648", VA = "0x8DC648")]
	public bool IsIncluded(List<PolicyNameData> identifiers)
	{
		return default(bool);
	}

	[Token(Token = "0x600086E")]
	[Address(RVA = "0x8DC8F4", Offset = "0x8DC8F4", VA = "0x8DC8F4")]
	public PolicyName()
	{
	}
}
[Token(Token = "0x200015A")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x63DE68", Offset = "0x63DE68")]
public class PolicyNameData : ScriptableObject
{
	[Serializable]
	[Token(Token = "0x20005DD")]
	public class Category
	{
		[Token(Token = "0x4002699")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string sceneName;

		[Token(Token = "0x400269A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<string> policyName;

		[Token(Token = "0x6002AE7")]
		[Address(RVA = "0x8DC96C", Offset = "0x8DC96C", VA = "0x8DC96C")]
		public Category()
		{
		}
	}

	[Token(Token = "0x40007BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public List<Category> policyNameData;

	[Token(Token = "0x600086F")]
	[Address(RVA = "0x8DC964", Offset = "0x8DC964", VA = "0x8DC964")]
	public PolicyNameData()
	{
	}
}
[Token(Token = "0x200015B")]
public class PositionAtTrackedObject : MonoBehaviour
{
	[Token(Token = "0x20005DE")]
	private enum TrackedObject
	{
		[Token(Token = "0x400269C")]
		Headset,
		[Token(Token = "0x400269D")]
		LeftController,
		[Token(Token = "0x400269E")]
		RightController
	}

	[Token(Token = "0x40007BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private TrackedObject _object;

	[Token(Token = "0x40007BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform _transform;

	[Token(Token = "0x6000870")]
	[Address(RVA = "0x8DECA4", Offset = "0x8DECA4", VA = "0x8DECA4")]
	private void Init()
	{
	}

	[Token(Token = "0x6000871")]
	[Address(RVA = "0x8DED7C", Offset = "0x8DED7C", VA = "0x8DED7C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000872")]
	[Address(RVA = "0x8DED80", Offset = "0x8DED80", VA = "0x8DED80")]
	private void Update()
	{
	}

	[Token(Token = "0x6000873")]
	[Address(RVA = "0x8DEEB8", Offset = "0x8DEEB8", VA = "0x8DEEB8")]
	public PositionAtTrackedObject()
	{
	}
}
[Token(Token = "0x200015C")]
public class ProximityEnable : MonoBehaviour
{
	[Token(Token = "0x20005DF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6440D8", Offset = "0x6440D8")]
	private sealed class <TestRange>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400269F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40026A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40026A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ProximityEnable <>4__this;

		[Token(Token = "0x17000276")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002AEB")]
			[Address(RVA = "0x8E18C8", Offset = "0x8E18C8", VA = "0x8E18C8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000277")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002AED")]
			[Address(RVA = "0x8E1938", Offset = "0x8E1938", VA = "0x8E1938", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002AE8")]
		[Address(RVA = "0x8E135C", Offset = "0x8E135C", VA = "0x8E135C")]
		[DebuggerHidden]
		public <TestRange>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6002AE9")]
		[Address(RVA = "0x8E139C", Offset = "0x8E139C", VA = "0x8E139C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002AEA")]
		[Address(RVA = "0x8E13A0", Offset = "0x8E13A0", VA = "0x8E13A0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002AEC")]
		[Address(RVA = "0x8E18D0", Offset = "0x8E18D0", VA = "0x8E18D0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40007BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x64E700", Offset = "0x64E700")]
	public float testInterval;

	[Token(Token = "0x40007BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float range;

	[Token(Token = "0x40007C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject[] targets;

	[Token(Token = "0x40007C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject[] targetLights;

	[Token(Token = "0x40007C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<PlayableDirector> _directors;

	[Token(Token = "0x40007C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private List<Light> _lights;

	[Token(Token = "0x6000874")]
	[Address(RVA = "0x8E12BC", Offset = "0x8E12BC", VA = "0x8E12BC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000875")]
	[Address(RVA = "0x8E12E8", Offset = "0x8E12E8", VA = "0x8E12E8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x668A18", Offset = "0x668A18")]
	private IEnumerator TestRange()
	{
		return null;
	}

	[Token(Token = "0x6000876")]
	[Address(RVA = "0x8E1388", Offset = "0x8E1388", VA = "0x8E1388")]
	public ProximityEnable()
	{
	}
}
[Token(Token = "0x200015D")]
public class PS4DynResControl : MonoBehaviour
{
	[Token(Token = "0x40007C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float _scale;

	[Token(Token = "0x40007C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float _previousScale;

	[Token(Token = "0x40007C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool _scaleOnPro;

	[Token(Token = "0x40007C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private DynamicResolution _dynamicResolutionSystem;

	[Token(Token = "0x6000877")]
	[Address(RVA = "0x7FEF3C", Offset = "0x7FEF3C", VA = "0x7FEF3C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000878")]
	[Address(RVA = "0x7FEF40", Offset = "0x7FEF40", VA = "0x7FEF40")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000879")]
	[Address(RVA = "0x7FEF44", Offset = "0x7FEF44", VA = "0x7FEF44")]
	public PS4DynResControl()
	{
	}
}
[Token(Token = "0x200015E")]
public class PS4ObjectDisable : MonoBehaviour
{
	[Token(Token = "0x40007C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool _disableBase;

	[Token(Token = "0x40007C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool _disablePro;

	[Token(Token = "0x600087A")]
	[Address(RVA = "0x7FEF4C", Offset = "0x7FEF4C", VA = "0x7FEF4C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600087B")]
	[Address(RVA = "0x7FEF50", Offset = "0x7FEF50", VA = "0x7FEF50")]
	public PS4ObjectDisable()
	{
	}
}
[Token(Token = "0x200015F")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x63DED8", Offset = "0x63DED8")]
public class PS4TerrainControl : MonoBehaviour
{
	[Token(Token = "0x40007CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool _disableDetail;

	[Token(Token = "0x40007CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool _disableDetailOnPro;

	[Token(Token = "0x40007CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float _pixelErrorWhenDetailDisabled;

	[Token(Token = "0x40007CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Terrain _terrainObject;

	[Token(Token = "0x600087C")]
	[Address(RVA = "0x7FEF58", Offset = "0x7FEF58", VA = "0x7FEF58")]
	private void Awake()
	{
	}

	[Token(Token = "0x600087D")]
	[Address(RVA = "0x7FEF5C", Offset = "0x7FEF5C", VA = "0x7FEF5C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600087E")]
	[Address(RVA = "0x7FEF60", Offset = "0x7FEF60", VA = "0x7FEF60")]
	public PS4TerrainControl()
	{
	}
}
[Token(Token = "0x2000160")]
public class PSRVHeightFix : MonoBehaviour
{
	[Token(Token = "0x40007CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform _heightFix;

	[Token(Token = "0x40007CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float _height;

	[Token(Token = "0x40007D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private bool _wasDisabled;

	[Token(Token = "0x40007D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
	private bool _startupComplete;

	[Token(Token = "0x40007D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x26")]
	private bool _active;

	[Token(Token = "0x600087F")]
	[Address(RVA = "0x7FF274", Offset = "0x7FF274", VA = "0x7FF274")]
	private void Update()
	{
	}

	[Token(Token = "0x6000880")]
	[Address(RVA = "0x7FF688", Offset = "0x7FF688", VA = "0x7FF688")]
	public PSRVHeightFix()
	{
	}
}
[Token(Token = "0x2000161")]
public class RuntimeDisable : MonoBehaviour
{
	[Token(Token = "0x6000881")]
	[Address(RVA = "0x85A434", Offset = "0x85A434", VA = "0x85A434")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000882")]
	[Address(RVA = "0x85A46C", Offset = "0x85A46C", VA = "0x85A46C")]
	public RuntimeDisable()
	{
	}
}
[Token(Token = "0x2000162")]
public class ScreenshotTool : MonoBehaviour
{
	[Token(Token = "0x40007D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64E748", Offset = "0x64E748")]
	[SerializeField]
	private int _shotWidth;

	[Token(Token = "0x40007D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64E794", Offset = "0x64E794")]
	[SerializeField]
	private int _shotHeight;

	[Token(Token = "0x40007D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64E7E0", Offset = "0x64E7E0")]
	[SerializeField]
	private KeyCode _captureKey;

	[Token(Token = "0x6000883")]
	[Address(RVA = "0x860350", Offset = "0x860350", VA = "0x860350")]
	public ScreenshotTool()
	{
	}
}
[Token(Token = "0x2000163")]
public class SeatedStandingModifier : MonoBehaviour
{
	[Token(Token = "0x40007D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float _ps4PlayerHeight;

	[Token(Token = "0x40007D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float _seatingModifier;

	[Token(Token = "0x40007D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform[] _shiftObject;

	[Token(Token = "0x40007D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static float[] _originHeights;

	[Token(Token = "0x40007DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int _lastSaveVersion;

	[Token(Token = "0x6000884")]
	[Address(RVA = "0x86082C", Offset = "0x86082C", VA = "0x86082C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000885")]
	[Address(RVA = "0x860A08", Offset = "0x860A08", VA = "0x860A08")]
	private void Update()
	{
	}

	[Token(Token = "0x6000886")]
	[Address(RVA = "0x860B34", Offset = "0x860B34", VA = "0x860B34")]
	private void ChangeModifier(bool seated)
	{
	}

	[Token(Token = "0x6000887")]
	[Address(RVA = "0x860D74", Offset = "0x860D74", VA = "0x860D74")]
	public SeatedStandingModifier()
	{
	}
}
[Serializable]
[Token(Token = "0x2000164")]
public class TextureUsage
{
	[Token(Token = "0x40007DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string texSlotName;

	[Token(Token = "0x40007DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float scaleFactor;

	[Token(Token = "0x6000888")]
	[Address(RVA = "0x88740C", Offset = "0x88740C", VA = "0x88740C")]
	public TextureUsage(string texSlotName, int scaleFactor)
	{
	}
}
[Token(Token = "0x2000165")]
public class SnapDropHighlight : MonoBehaviour
{
	[Token(Token = "0x40007DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public Transform _highlightPrefab;

	[Token(Token = "0x6000889")]
	[Address(RVA = "0x866ADC", Offset = "0x866ADC", VA = "0x866ADC")]
	public SnapDropHighlight()
	{
	}
}
[Token(Token = "0x2000166")]
public class SpawnedObject : MonoBehaviour
{
	[Token(Token = "0x40007DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private string _sceneName;

	[Token(Token = "0x600088A")]
	[Address(RVA = "0x86E2F4", Offset = "0x86E2F4", VA = "0x86E2F4")]
	private void Awake()
	{
	}

	[Token(Token = "0x600088B")]
	[Address(RVA = "0x86E3B8", Offset = "0x86E3B8", VA = "0x86E3B8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600088C")]
	[Address(RVA = "0x86E434", Offset = "0x86E434", VA = "0x86E434")]
	private void UnloadedScene(Scene current)
	{
	}

	[Token(Token = "0x600088D")]
	[Address(RVA = "0x86E4E4", Offset = "0x86E4E4", VA = "0x86E4E4")]
	public SpawnedObject()
	{
	}
}
[Token(Token = "0x2000167")]
public class StageCheckpoint : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20005E0")]
	private struct TimelineSeek
	{
		[Token(Token = "0x40026A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x664C74", Offset = "0x664C74")]
		[SerializeField]
		public PlayableDirector _timeline;

		[Token(Token = "0x40026A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x664CC0", Offset = "0x664CC0")]
		[SerializeField]
		public string _checkpointName;

		[Token(Token = "0x40026A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x664D0C", Offset = "0x664D0C")]
		[SerializeField]
		public bool _enableComponent;
	}

	[Serializable]
	[Token(Token = "0x20005E1")]
	private struct GameObjectActive
	{
		[Token(Token = "0x40026A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		public GameObject _gameObject;

		[Token(Token = "0x40026A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[SerializeField]
		public bool _active;
	}

	[Token(Token = "0x20005E2")]
	public enum PlayerAlign
	{
		[Token(Token = "0x40026A8")]
		PlayerForward,
		[Token(Token = "0x40026A9")]
		WorldForward
	}

	[Token(Token = "0x20005E3")]
	public delegate void CheckpointLoadComplete();

	[Token(Token = "0x20005E4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6440E8", Offset = "0x6440E8")]
	private sealed class <JumpWhenReady>d__42 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40026AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40026AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40026AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public StageCheckpoint <>4__this;

		[Token(Token = "0x17000278")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002AF5")]
			[Address(RVA = "0x87117C", Offset = "0x87117C", VA = "0x87117C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000279")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002AF7")]
			[Address(RVA = "0x8711EC", Offset = "0x8711EC", VA = "0x8711EC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002AF2")]
		[Address(RVA = "0x86EA8C", Offset = "0x86EA8C", VA = "0x86EA8C")]
		[DebuggerHidden]
		public <JumpWhenReady>d__42(int <>1__state)
		{
		}

		[Token(Token = "0x6002AF3")]
		[Address(RVA = "0x87106C", Offset = "0x87106C", VA = "0x87106C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002AF4")]
		[Address(RVA = "0x871070", Offset = "0x871070", VA = "0x871070", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002AF6")]
		[Address(RVA = "0x871184", Offset = "0x871184", VA = "0x871184", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20005E5")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6440F8", Offset = "0x6440F8")]
	private sealed class <JumpAfterDelay>d__43 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40026AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40026AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40026AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public StageCheckpoint <>4__this;

		[Token(Token = "0x40026B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool loadScene;

		[Token(Token = "0x1700027A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002AFB")]
			[Address(RVA = "0x870FF4", Offset = "0x870FF4", VA = "0x870FF4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700027B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002AFD")]
			[Address(RVA = "0x871064", Offset = "0x871064", VA = "0x871064", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002AF8")]
		[Address(RVA = "0x86EAB8", Offset = "0x86EAB8", VA = "0x86EAB8")]
		[DebuggerHidden]
		public <JumpAfterDelay>d__43(int <>1__state)
		{
		}

		[Token(Token = "0x6002AF9")]
		[Address(RVA = "0x870F14", Offset = "0x870F14", VA = "0x870F14", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002AFA")]
		[Address(RVA = "0x870F18", Offset = "0x870F18", VA = "0x870F18", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002AFC")]
		[Address(RVA = "0x870FFC", Offset = "0x870FFC", VA = "0x870FFC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20005E6")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x644108", Offset = "0x644108")]
	private sealed class <>c__DisplayClass51_0
	{
		[Token(Token = "0x40026B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string checkpoint;

		[Token(Token = "0x40026B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool saveAfterJump;

		[Token(Token = "0x40026B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CheckpointLoadComplete complete;

		[Token(Token = "0x6002AFE")]
		[Address(RVA = "0x87055C", Offset = "0x87055C", VA = "0x87055C")]
		public <>c__DisplayClass51_0()
		{
		}

		[Token(Token = "0x6002AFF")]
		[Address(RVA = "0x870E80", Offset = "0x870E80", VA = "0x870E80")]
		internal void <JumpToSceneWithCheckpoint>b__0()
		{
		}
	}

	[Token(Token = "0x40007DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64E83C", Offset = "0x64E83C")]
	[SerializeField]
	private List<TimelineSeek> _timelineSeek;

	[Token(Token = "0x40007E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64E888", Offset = "0x64E888")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x64E888", Offset = "0x64E888")]
	[SerializeField]
	private List<GameObjectActive> _gameObjectState;

	[Token(Token = "0x40007E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64E8F8", Offset = "0x64E8F8")]
	[SerializeField]
	private TimeZoneRoot _activeTimeZone;

	[Token(Token = "0x40007E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64E944", Offset = "0x64E944")]
	[SerializeField]
	private Transform _playerLocation;

	[Token(Token = "0x40007E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64E990", Offset = "0x64E990")]
	[SerializeField]
	private PlayerAlign _playerAlign;

	[Token(Token = "0x40007E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64E9DC", Offset = "0x64E9DC")]
	[SerializeField]
	private List<StateChangeAsset.StateChange> _stateChange;

	[Token(Token = "0x40007E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64EA28", Offset = "0x64EA28")]
	[SerializeField]
	private List<StateChangeAsset.StateChange> _stateChangeOverrideSaveData;

	[Token(Token = "0x40007E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64EA74", Offset = "0x64EA74")]
	[SerializeField]
	private List<Transform> _holsterObject;

	[Token(Token = "0x40007E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64EAC0", Offset = "0x64EAC0")]
	[SerializeField]
	private bool _fadeInAutomatically;

	[Token(Token = "0x40007E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64EB0C", Offset = "0x64EB0C")]
	[SerializeField]
	private Color _fadeColour;

	[Token(Token = "0x40007E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64EB58", Offset = "0x64EB58")]
	[SerializeField]
	private bool _startPoint;

	[Token(Token = "0x40007EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6D")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64EBA4", Offset = "0x64EBA4")]
	[SerializeField]
	private bool _canSaveState;

	[Token(Token = "0x40007EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64EBF0", Offset = "0x64EBF0")]
	[SerializeField]
	private List<string> _featureUnlock;

	[Token(Token = "0x40007EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64EC3C", Offset = "0x64EC3C")]
	[SerializeField]
	public AudioMixerSnapshot _audioMixerSnapshot;

	[Token(Token = "0x40007ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64EC88", Offset = "0x64EC88")]
	[SerializeField]
	public float _audioMixerTransitionTime;

	[Token(Token = "0x40007EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64ECD4", Offset = "0x64ECD4")]
	[SerializeField]
	public KeyCode _jumpKey;

	[Token(Token = "0x40007EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64ED20", Offset = "0x64ED20")]
	[SerializeField]
	private bool m_unlockMovementOnJump;

	[Token(Token = "0x40007F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static StageCheckpoint _currentCheckpoint;

	[Token(Token = "0x40007F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static string _sceneLoadCheckpointName;

	[Token(Token = "0x40007F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static bool _saveAfterJump;

	[Token(Token = "0x40007F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static CheckpointLoadComplete _checkpointLoadComplete;

	[Token(Token = "0x40007F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static bool _needsJump;

	[Token(Token = "0x40007F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private Vector3 _startPlayAreaPosition;

	[Token(Token = "0x40007F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private DebugParameterItem.DebugParameterFunction _func;

	[Token(Token = "0x40007F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	private static bool _autoJump;

	[Token(Token = "0x170000D1")]
	public static StageCheckpoint currentCheckpoint
	{
		[Token(Token = "0x600088E")]
		[Address(RVA = "0x86E5BC", Offset = "0x86E5BC", VA = "0x86E5BC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000D2")]
	public PlayerAlign playerAlign
	{
		[Token(Token = "0x600088F")]
		[Address(RVA = "0x86E624", Offset = "0x86E624", VA = "0x86E624")]
		get
		{
			return default(PlayerAlign);
		}
	}

	[Token(Token = "0x170000D3")]
	public bool startPoint
	{
		[Token(Token = "0x6000890")]
		[Address(RVA = "0x86E62C", Offset = "0x86E62C", VA = "0x86E62C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000D4")]
	public Vector3 startPosition
	{
		[Token(Token = "0x6000891")]
		[Address(RVA = "0x86E634", Offset = "0x86E634", VA = "0x86E634")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x170000D5")]
	public Transform startTransform
	{
		[Token(Token = "0x6000892")]
		[Address(RVA = "0x86E664", Offset = "0x86E664", VA = "0x86E664")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000D6")]
	public bool canSaveState
	{
		[Token(Token = "0x6000893")]
		[Address(RVA = "0x86E66C", Offset = "0x86E66C", VA = "0x86E66C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000894")]
	[Address(RVA = "0x86E674", Offset = "0x86E674", VA = "0x86E674")]
	public void Start()
	{
	}

	[Token(Token = "0x6000895")]
	[Address(RVA = "0x86E88C", Offset = "0x86E88C", VA = "0x86E88C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000896")]
	[Address(RVA = "0x86E8F8", Offset = "0x86E8F8", VA = "0x86E8F8")]
	public static void JumpToDefault()
	{
	}

	[Token(Token = "0x6000897")]
	[Address(RVA = "0x86EA18", Offset = "0x86EA18", VA = "0x86EA18")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x668A7C", Offset = "0x668A7C")]
	private IEnumerator JumpWhenReady()
	{
		return null;
	}

	[Token(Token = "0x6000898")]
	[Address(RVA = "0x86E7F0", Offset = "0x86E7F0", VA = "0x86E7F0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x668AE0", Offset = "0x668AE0")]
	private IEnumerator JumpAfterDelay(bool loadScene = true)
	{
		return null;
	}

	[Token(Token = "0x6000899")]
	[Address(RVA = "0x86EAE4", Offset = "0x86EAE4", VA = "0x86EAE4")]
	public static void SetupJumpToDefault()
	{
	}

	[Token(Token = "0x600089A")]
	[Address(RVA = "0x86EB84", Offset = "0x86EB84", VA = "0x86EB84")]
	public void Update()
	{
	}

	[Token(Token = "0x600089B")]
	[Address(RVA = "0x86F99C", Offset = "0x86F99C", VA = "0x86F99C")]
	public static void LogTransformHeirarchy(Transform t)
	{
	}

	[Token(Token = "0x600089C")]
	[Address(RVA = "0x86FD24", Offset = "0x86FD24", VA = "0x86FD24")]
	public static void MovePlayerToPosition(Vector3 position, Quaternion playAreaRotation, bool playerForwardDirection = true, bool rotatePlayer = true)
	{
	}

	[Token(Token = "0x600089D")]
	[Address(RVA = "0x8701D0", Offset = "0x8701D0", VA = "0x8701D0")]
	public void JumpToCheckpoint(bool save)
	{
	}

	[Token(Token = "0x600089E")]
	[Address(RVA = "0x870428", Offset = "0x870428", VA = "0x870428")]
	public static void JumpToSceneWithCheckpoint(string sceneName, string checkpoint, bool saveAfterJump = true, [Optional] CheckpointLoadComplete complete)
	{
	}

	[Token(Token = "0x600089F")]
	[Address(RVA = "0x86ECF4", Offset = "0x86ECF4", VA = "0x86ECF4")]
	private void Jump(bool loadScene = true)
	{
	}

	[Token(Token = "0x60008A0")]
	[Address(RVA = "0x870B68", Offset = "0x870B68", VA = "0x870B68")]
	public void OnReached()
	{
	}

	[Token(Token = "0x60008A1")]
	[Address(RVA = "0x870D40", Offset = "0x870D40", VA = "0x870D40")]
	public StageCheckpoint()
	{
	}

	[Token(Token = "0x60008A3")]
	[Address(RVA = "0x870DCC", Offset = "0x870DCC", VA = "0x870DCC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x668B44", Offset = "0x668B44")]
	private void <Start>b__39_0(bool clicked, out string name, out string value)
	{
	}
}
[Token(Token = "0x2000168")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x63DF3C", Offset = "0x63DF3C")]
public class StencilBufferInitialise : MonoBehaviour
{
	[Token(Token = "0x40007F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Texture2D _texture;

	[Token(Token = "0x40007F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Camera _cam;

	[Token(Token = "0x40007FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Material _material;

	[Token(Token = "0x40007FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private CommandBuffer _commands;

	[Token(Token = "0x40007FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private CameraEvent _camEvent;

	[Token(Token = "0x40007FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private PortalStencilOverlay overlay;

	[Token(Token = "0x60008A4")]
	[Address(RVA = "0x880268", Offset = "0x880268", VA = "0x880268")]
	private void Awake()
	{
	}

	[Token(Token = "0x60008A5")]
	[Address(RVA = "0x8802C0", Offset = "0x8802C0", VA = "0x8802C0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60008A6")]
	[Address(RVA = "0x8802F4", Offset = "0x8802F4", VA = "0x8802F4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60008A7")]
	[Address(RVA = "0x880328", Offset = "0x880328", VA = "0x880328")]
	public StencilBufferInitialise()
	{
	}
}
[Serializable]
[Token(Token = "0x2000169")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x63DFA0", Offset = "0x63DFA0")]
public class TextureScaleData : ScriptableObject
{
	[Serializable]
	[Token(Token = "0x20005E7")]
	public class PlatformSetting
	{
		[Token(Token = "0x40026B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		public string name;

		[Token(Token = "0x40026B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public int maxTextureSize;

		[Token(Token = "0x40026B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		public List<TextureUsage> _textureParams;

		[Token(Token = "0x6002B00")]
		[Address(RVA = "0x887404", Offset = "0x887404", VA = "0x887404")]
		public PlatformSetting()
		{
		}
	}

	[Token(Token = "0x40007FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public List<PlatformSetting> _setting;

	[Token(Token = "0x60008A8")]
	[Address(RVA = "0x8873FC", Offset = "0x8873FC", VA = "0x8873FC")]
	public TextureScaleData()
	{
	}
}
[Token(Token = "0x200016A")]
public class UIVersionText : MonoBehaviour
{
	[Token(Token = "0x60008A9")]
	[Address(RVA = "0x88C1A0", Offset = "0x88C1A0", VA = "0x88C1A0")]
	private void Start()
	{
	}

	[Token(Token = "0x60008AA")]
	[Address(RVA = "0x88C240", Offset = "0x88C240", VA = "0x88C240")]
	public UIVersionText()
	{
	}
}
[Token(Token = "0x200016B")]
public class VideoCaptureControl : MonoBehaviour
{
	[Token(Token = "0x40007FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64ED8C", Offset = "0x64ED8C")]
	[SerializeField]
	private float _headsetRenderScale;

	[Token(Token = "0x4000800")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64EDD8", Offset = "0x64EDD8")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x64EDD8", Offset = "0x64EDD8")]
	[SerializeField]
	private float _imageStabalisation;

	[Token(Token = "0x4000801")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64EE3C", Offset = "0x64EE3C")]
	[SerializeField]
	private bool _pictureInPicture;

	[Token(Token = "0x4000802")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	private bool _horizonLeveling;

	[Token(Token = "0x60008AB")]
	[Address(RVA = "0x80CFD0", Offset = "0x80CFD0", VA = "0x80CFD0")]
	private void Start()
	{
	}

	[Token(Token = "0x60008AC")]
	[Address(RVA = "0x80D160", Offset = "0x80D160", VA = "0x80D160")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60008AD")]
	[Address(RVA = "0x80D624", Offset = "0x80D624", VA = "0x80D624")]
	public VideoCaptureControl()
	{
	}

	[Token(Token = "0x60008AE")]
	[Address(RVA = "0x80D63C", Offset = "0x80D63C", VA = "0x80D63C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x668B54", Offset = "0x668B54")]
	private void <Start>b__4_0(bool clicked, out string name, out string value)
	{
	}

	[Token(Token = "0x60008AF")]
	[Address(RVA = "0x80D6E4", Offset = "0x80D6E4", VA = "0x80D6E4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x668B64", Offset = "0x668B64")]
	private void <Start>b__4_1(bool clicked, out string name, out string value)
	{
	}
}
[Token(Token = "0x200016C")]
public class DisableTimer : MonoBehaviour
{
	[Token(Token = "0x20005E8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x644118", Offset = "0x644118")]
	private sealed class <Start>d__1 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40026B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40026B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40026B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DisableTimer <>4__this;

		[Token(Token = "0x1700027C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002B04")]
			[Address(RVA = "0x7BB964", Offset = "0x7BB964", VA = "0x7BB964", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700027D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002B06")]
			[Address(RVA = "0x7BB9D4", Offset = "0x7BB9D4", VA = "0x7BB9D4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002B01")]
		[Address(RVA = "0x7BB83C", Offset = "0x7BB83C", VA = "0x7BB83C")]
		[DebuggerHidden]
		public <Start>d__1(int <>1__state)
		{
		}

		[Token(Token = "0x6002B02")]
		[Address(RVA = "0x7BB870", Offset = "0x7BB870", VA = "0x7BB870", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002B03")]
		[Address(RVA = "0x7BB874", Offset = "0x7BB874", VA = "0x7BB874", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002B05")]
		[Address(RVA = "0x7BB96C", Offset = "0x7BB96C", VA = "0x7BB96C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000803")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64EE88", Offset = "0x64EE88")]
	public float disableTime;

	[Token(Token = "0x60008B0")]
	[Address(RVA = "0x7BB7C8", Offset = "0x7BB7C8", VA = "0x7BB7C8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x668B74", Offset = "0x668B74")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x60008B1")]
	[Address(RVA = "0x7BB868", Offset = "0x7BB868", VA = "0x7BB868")]
	public DisableTimer()
	{
	}
}
[Token(Token = "0x200016D")]
public class LightFlicker : MonoBehaviour
{
	[Token(Token = "0x4000804")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64EEC0", Offset = "0x64EEC0")]
	public Light light;

	[Token(Token = "0x4000805")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64EEF8", Offset = "0x64EEF8")]
	public float minIntensity;

	[Token(Token = "0x4000806")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64EF30", Offset = "0x64EF30")]
	public float maxIntensity;

	[Token(Token = "0x4000807")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64EF68", Offset = "0x64EF68")]
	public LensFlare flare;

	[Token(Token = "0x4000808")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64EFA0", Offset = "0x64EFA0")]
	public float minFlareIntensity;

	[Token(Token = "0x4000809")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64EFD8", Offset = "0x64EFD8")]
	public float maxFlareIntensity;

	[Token(Token = "0x400080A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64F010", Offset = "0x64F010")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x64F010", Offset = "0x64F010")]
	public int smoothing;

	[Token(Token = "0x400080B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64F068", Offset = "0x64F068")]
	public float disableTime;

	[Token(Token = "0x400080C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Queue<float> smoothQueue;

	[Token(Token = "0x400080D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float lastSum;

	[Token(Token = "0x400080E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private bool running;

	[Token(Token = "0x400080F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float elapsedTime;

	[Token(Token = "0x60008B2")]
	[Address(RVA = "0x7E7D68", Offset = "0x7E7D68", VA = "0x7E7D68")]
	public void Reset()
	{
	}

	[Token(Token = "0x60008B3")]
	[Address(RVA = "0x7E7DD0", Offset = "0x7E7DD0", VA = "0x7E7DD0")]
	private void Start()
	{
	}

	[Token(Token = "0x60008B4")]
	[Address(RVA = "0x7E7EE0", Offset = "0x7E7EE0", VA = "0x7E7EE0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60008B5")]
	[Address(RVA = "0x7E7EF0", Offset = "0x7E7EF0", VA = "0x7E7EF0")]
	private void Update()
	{
	}

	[Token(Token = "0x60008B6")]
	[Address(RVA = "0x7E8268", Offset = "0x7E8268", VA = "0x7E8268")]
	public LightFlicker()
	{
	}
}
[Token(Token = "0x200016E")]
public class Maze_InteractObjectHighlighter : VRTK_InteractObjectHighlighter
{
	[Token(Token = "0x20005E9")]
	public enum HighlightFadeState
	{
		[Token(Token = "0x40026BB")]
		Idle,
		[Token(Token = "0x40026BC")]
		In,
		[Token(Token = "0x40026BD")]
		Running,
		[Token(Token = "0x40026BE")]
		Out
	}

	[Token(Token = "0x4000810")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	protected VRTK_InteractableObject.InteractionType _currentInteractionType;

	[Token(Token = "0x4000811")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	protected bool _pointerInteractionType;

	[Token(Token = "0x4000812")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	protected float _fadeTimer;

	[Token(Token = "0x4000813")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	protected float _highlightTimer;

	[Token(Token = "0x4000814")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	protected HighlightFadeState _highlightState;

	[Token(Token = "0x4000815")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	protected HighlightFadeState _highlightStatePrev;

	[Token(Token = "0x4000816")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[SerializeField]
	public bool _overrideInteractionParameters;

	[Token(Token = "0x4000817")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[SerializeField]
	public VRInteractionSettings.InteractionTypeDef _nearTouch;

	[Token(Token = "0x4000818")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	[SerializeField]
	public VRInteractionSettings.InteractionTypeDef _touch;

	[Token(Token = "0x4000819")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	[SerializeField]
	public VRInteractionSettings.InteractionTypeDef _grab;

	[Token(Token = "0x400081A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	[SerializeField]
	public VRInteractionSettings.InteractionTypeDef _pickedUp;

	[Token(Token = "0x400081B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	[SerializeField]
	public VRInteractionSettings.InteractionTypeDef _use;

	[Token(Token = "0x400081C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	[SerializeField]
	public VRInteractionSettings.InteractionTypeDef _pointer;

	[Token(Token = "0x400081D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
	private Color _startColour;

	[Token(Token = "0x400081E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
	private Color _currentColour;

	[Token(Token = "0x60008B7")]
	[Address(RVA = "0x7F4F78", Offset = "0x7F4F78", VA = "0x7F4F78")]
	private void Update()
	{
	}

	[Token(Token = "0x60008B8")]
	[Address(RVA = "0x7F5930", Offset = "0x7F5930", VA = "0x7F5930", Slot = "12")]
	public override void Highlight(Color highlightColor)
	{
	}

	[Token(Token = "0x60008B9")]
	[Address(RVA = "0x7F5998", Offset = "0x7F5998", VA = "0x7F5998", Slot = "13")]
	public override void Unhighlight()
	{
	}

	[Token(Token = "0x60008BA")]
	[Address(RVA = "0x7F577C", Offset = "0x7F577C", VA = "0x7F577C")]
	protected void SetHighlightColour(Color highlightColor)
	{
	}

	[Token(Token = "0x60008BB")]
	[Address(RVA = "0x7F59D8", Offset = "0x7F59D8", VA = "0x7F59D8", Slot = "18")]
	protected override InteractObjectHighlighterEventArgs SetEventArgs(VRTK_InteractableObject.InteractionType interactionType, GameObject affectingObject)
	{
		return default(InteractObjectHighlighterEventArgs);
	}

	[Token(Token = "0x60008BC")]
	[Address(RVA = "0x7F5A4C", Offset = "0x7F5A4C", VA = "0x7F5A4C")]
	public void SetPointerHighlight(GameObject obj)
	{
	}

	[Token(Token = "0x60008BD")]
	[Address(RVA = "0x7F5308", Offset = "0x7F5308", VA = "0x7F5308")]
	protected VRInteractionSettings.InteractionTypeDef GetInteractionData()
	{
		return default(VRInteractionSettings.InteractionTypeDef);
	}

	[Token(Token = "0x60008BE")]
	[Address(RVA = "0x7F5A98", Offset = "0x7F5A98", VA = "0x7F5A98")]
	public Maze_InteractObjectHighlighter()
	{
	}
}
[Token(Token = "0x200016F")]
public class iTween : MonoBehaviour
{
	[Token(Token = "0x20005EA")]
	private delegate float EasingFunction(float start, float end, float Value);

	[Token(Token = "0x20005EB")]
	private delegate void ApplyTween();

	[Token(Token = "0x20005EC")]
	public enum EaseType
	{
		[Token(Token = "0x40026C0")]
		easeInQuad,
		[Token(Token = "0x40026C1")]
		easeOutQuad,
		[Token(Token = "0x40026C2")]
		easeInOutQuad,
		[Token(Token = "0x40026C3")]
		easeInCubic,
		[Token(Token = "0x40026C4")]
		easeOutCubic,
		[Token(Token = "0x40026C5")]
		easeInOutCubic,
		[Token(Token = "0x40026C6")]
		easeInQuart,
		[Token(Token = "0x40026C7")]
		easeOutQuart,
		[Token(Token = "0x40026C8")]
		easeInOutQuart,
		[Token(Token = "0x40026C9")]
		easeInQuint,
		[Token(Token = "0x40026CA")]
		easeOutQuint,
		[Token(Token = "0x40026CB")]
		easeInOutQuint,
		[Token(Token = "0x40026CC")]
		easeInSine,
		[Token(Token = "0x40026CD")]
		easeOutSine,
		[Token(Token = "0x40026CE")]
		easeInOutSine,
		[Token(Token = "0x40026CF")]
		easeInExpo,
		[Token(Token = "0x40026D0")]
		easeOutExpo,
		[Token(Token = "0x40026D1")]
		easeInOutExpo,
		[Token(Token = "0x40026D2")]
		easeInCirc,
		[Token(Token = "0x40026D3")]
		easeOutCirc,
		[Token(Token = "0x40026D4")]
		easeInOutCirc,
		[Token(Token = "0x40026D5")]
		linear,
		[Token(Token = "0x40026D6")]
		spring,
		[Token(Token = "0x40026D7")]
		easeInBounce,
		[Token(Token = "0x40026D8")]
		easeOutBounce,
		[Token(Token = "0x40026D9")]
		easeInOutBounce,
		[Token(Token = "0x40026DA")]
		easeInBack,
		[Token(Token = "0x40026DB")]
		easeOutBack,
		[Token(Token = "0x40026DC")]
		easeInOutBack,
		[Token(Token = "0x40026DD")]
		easeInElastic,
		[Token(Token = "0x40026DE")]
		easeOutElastic,
		[Token(Token = "0x40026DF")]
		easeInOutElastic,
		[Token(Token = "0x40026E0")]
		punch
	}

	[Token(Token = "0x20005ED")]
	public enum LoopType
	{
		[Token(Token = "0x40026E2")]
		none,
		[Token(Token = "0x40026E3")]
		loop,
		[Token(Token = "0x40026E4")]
		pingPong
	}

	[Token(Token = "0x20005EE")]
	public enum NamedValueColor
	{
		[Token(Token = "0x40026E6")]
		_Color,
		[Token(Token = "0x40026E7")]
		_SpecColor,
		[Token(Token = "0x40026E8")]
		_Emission,
		[Token(Token = "0x40026E9")]
		_ReflectColor
	}

	[Token(Token = "0x20005EF")]
	public static class Defaults
	{
		[Token(Token = "0x40026EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static float time;

		[Token(Token = "0x40026EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public static float delay;

		[Token(Token = "0x40026EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static NamedValueColor namedColorValue;

		[Token(Token = "0x40026ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public static LoopType loopType;

		[Token(Token = "0x40026EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static EaseType easeType;

		[Token(Token = "0x40026EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public static float lookSpeed;

		[Token(Token = "0x40026F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static bool isLocal;

		[Token(Token = "0x40026F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public static Space space;

		[Token(Token = "0x40026F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static bool orientToPath;

		[Token(Token = "0x40026F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public static Color color;

		[Token(Token = "0x40026F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public static float updateTimePercentage;

		[Token(Token = "0x40026F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public static float updateTime;

		[Token(Token = "0x40026F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public static float lookAhead;

		[Token(Token = "0x40026F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public static bool useRealTime;

		[Token(Token = "0x40026F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public static Vector3 up;
	}

	[Token(Token = "0x20005F0")]
	private class CRSpline
	{
		[Token(Token = "0x40026F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3[] pts;

		[Token(Token = "0x6002B10")]
		[Address(RVA = "0x14D37B0", Offset = "0x14D37B0", VA = "0x14D37B0")]
		public CRSpline(params Vector3[] pts)
		{
		}

		[Token(Token = "0x6002B11")]
		[Address(RVA = "0x14D384C", Offset = "0x14D384C", VA = "0x14D384C")]
		public Vector3 Interp(float t)
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x20005F1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x644128", Offset = "0x644128")]
	private sealed class <TweenDelay>d__145 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40026FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40026FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40026FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public iTween <>4__this;

		[Token(Token = "0x1700027E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002B15")]
			[Address(RVA = "0x14D3140", Offset = "0x14D3140", VA = "0x14D3140", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700027F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002B17")]
			[Address(RVA = "0x14D31B0", Offset = "0x14D31B0", VA = "0x14D31B0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002B12")]
		[Address(RVA = "0x14D3018", Offset = "0x14D3018", VA = "0x14D3018")]
		[DebuggerHidden]
		public <TweenDelay>d__145(int <>1__state)
		{
		}

		[Token(Token = "0x6002B13")]
		[Address(RVA = "0x14D3044", Offset = "0x14D3044", VA = "0x14D3044", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002B14")]
		[Address(RVA = "0x14D3048", Offset = "0x14D3048", VA = "0x14D3048", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002B16")]
		[Address(RVA = "0x14D3148", Offset = "0x14D3148", VA = "0x14D3148", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20005F2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x644138", Offset = "0x644138")]
	private sealed class <TweenRestart>d__147 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40026FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40026FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40026FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public iTween <>4__this;

		[Token(Token = "0x17000280")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002B1B")]
			[Address(RVA = "0x14D32E8", Offset = "0x14D32E8", VA = "0x14D32E8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000281")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002B1D")]
			[Address(RVA = "0x14D3358", Offset = "0x14D3358", VA = "0x14D3358", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002B18")]
		[Address(RVA = "0x14D31B8", Offset = "0x14D31B8", VA = "0x14D31B8")]
		[DebuggerHidden]
		public <TweenRestart>d__147(int <>1__state)
		{
		}

		[Token(Token = "0x6002B19")]
		[Address(RVA = "0x14D31E4", Offset = "0x14D31E4", VA = "0x14D31E4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002B1A")]
		[Address(RVA = "0x14D31E8", Offset = "0x14D31E8", VA = "0x14D31E8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002B1C")]
		[Address(RVA = "0x14D32F0", Offset = "0x14D32F0", VA = "0x14D32F0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20005F3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x644148", Offset = "0x644148")]
	private sealed class <Start>d__229 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002700")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002701")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002702")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public iTween <>4__this;

		[Token(Token = "0x17000282")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002B21")]
			[Address(RVA = "0x14D2FA0", Offset = "0x14D2FA0", VA = "0x14D2FA0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000283")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002B23")]
			[Address(RVA = "0x14D3010", Offset = "0x14D3010", VA = "0x14D3010", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002B1E")]
		[Address(RVA = "0x14D2EB0", Offset = "0x14D2EB0", VA = "0x14D2EB0")]
		[DebuggerHidden]
		public <Start>d__229(int <>1__state)
		{
		}

		[Token(Token = "0x6002B1F")]
		[Address(RVA = "0x14D2EDC", Offset = "0x14D2EDC", VA = "0x14D2EDC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002B20")]
		[Address(RVA = "0x14D2EE0", Offset = "0x14D2EE0", VA = "0x14D2EE0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002B22")]
		[Address(RVA = "0x14D2FA8", Offset = "0x14D2FA8", VA = "0x14D2FA8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400081F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static List<Hashtable> tweens;

	[Token(Token = "0x4000820")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string id;

	[Token(Token = "0x4000821")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string type;

	[Token(Token = "0x4000822")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string method;

	[Token(Token = "0x4000823")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public EaseType easeType;

	[Token(Token = "0x4000824")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float time;

	[Token(Token = "0x4000825")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float delay;

	[Token(Token = "0x4000826")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public LoopType loopType;

	[Token(Token = "0x4000827")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool isRunning;

	[Token(Token = "0x4000828")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	public bool isPaused;

	[Token(Token = "0x4000829")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public string _name;

	[Token(Token = "0x400082A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float runningTime;

	[Token(Token = "0x400082B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float percentage;

	[Token(Token = "0x400082C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float delayStarted;

	[Token(Token = "0x400082D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private bool kinematic;

	[Token(Token = "0x400082E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5D")]
	private bool isLocal;

	[Token(Token = "0x400082F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5E")]
	private bool loop;

	[Token(Token = "0x4000830")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5F")]
	private bool reverse;

	[Token(Token = "0x4000831")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool wasPaused;

	[Token(Token = "0x4000832")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
	private bool physics;

	[Token(Token = "0x4000833")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Hashtable tweenArguments;

	[Token(Token = "0x4000834")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Space space;

	[Token(Token = "0x4000835")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private EasingFunction ease;

	[Token(Token = "0x4000836")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private ApplyTween apply;

	[Token(Token = "0x4000837")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private AudioSource audioSource;

	[Token(Token = "0x4000838")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Vector3[] vector3s;

	[Token(Token = "0x4000839")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Vector2[] vector2s;

	[Token(Token = "0x400083A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Color[,] colors;

	[Token(Token = "0x400083B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private float[] floats;

	[Token(Token = "0x400083C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Rect[] rects;

	[Token(Token = "0x400083D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private CRSpline path;

	[Token(Token = "0x400083E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private Vector3 preUpdate;

	[Token(Token = "0x400083F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private Vector3 postUpdate;

	[Token(Token = "0x4000840")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private NamedValueColor namedcolorvalue;

	[Token(Token = "0x4000841")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	private float lastRealTime;

	[Token(Token = "0x4000842")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private bool useRealTime;

	[Token(Token = "0x4000843")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private Transform thisTransform;

	[Token(Token = "0x60008BF")]
	[Address(RVA = "0x8100D4", Offset = "0x8100D4", VA = "0x8100D4")]
	public static void Init(GameObject target)
	{
	}

	[Token(Token = "0x60008C0")]
	[Address(RVA = "0x8103C0", Offset = "0x8103C0", VA = "0x8103C0")]
	public static void ValueTo(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x60008C1")]
	[Address(RVA = "0x811498", Offset = "0x811498", VA = "0x811498")]
	public static void FadeFrom(GameObject target, float alpha, float time)
	{
	}

	[Token(Token = "0x60008C2")]
	[Address(RVA = "0x811828", Offset = "0x811828", VA = "0x811828")]
	public static void FadeFrom(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x60008C3")]
	[Address(RVA = "0x8123B0", Offset = "0x8123B0", VA = "0x8123B0")]
	public static void FadeTo(GameObject target, float alpha, float time)
	{
	}

	[Token(Token = "0x60008C4")]
	[Address(RVA = "0x8125C8", Offset = "0x8125C8", VA = "0x8125C8")]
	public static void FadeTo(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x60008C5")]
	[Address(RVA = "0x812C50", Offset = "0x812C50", VA = "0x812C50")]
	public static void ColorFrom(GameObject target, Color color, float time)
	{
	}

	[Token(Token = "0x60008C6")]
	[Address(RVA = "0x81189C", Offset = "0x81189C", VA = "0x81189C")]
	public static void ColorFrom(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x60008C7")]
	[Address(RVA = "0x812E94", Offset = "0x812E94", VA = "0x812E94")]
	public static void ColorTo(GameObject target, Color color, float time)
	{
	}

	[Token(Token = "0x60008C8")]
	[Address(RVA = "0x81263C", Offset = "0x81263C", VA = "0x81263C")]
	public static void ColorTo(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x60008C9")]
	[Address(RVA = "0x8130D8", Offset = "0x8130D8", VA = "0x8130D8")]
	public static void AudioFrom(GameObject target, float volume, float pitch, float time)
	{
	}

	[Token(Token = "0x60008CA")]
	[Address(RVA = "0x8133AC", Offset = "0x8133AC", VA = "0x8133AC")]
	public static void AudioFrom(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x60008CB")]
	[Address(RVA = "0x81383C", Offset = "0x81383C", VA = "0x81383C")]
	public static void AudioTo(GameObject target, float volume, float pitch, float time)
	{
	}

	[Token(Token = "0x60008CC")]
	[Address(RVA = "0x813B10", Offset = "0x813B10", VA = "0x813B10")]
	public static void AudioTo(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x60008CD")]
	[Address(RVA = "0x813C70", Offset = "0x813C70", VA = "0x813C70")]
	public static void Stab(GameObject target, AudioClip audioclip, float delay)
	{
	}

	[Token(Token = "0x60008CE")]
	[Address(RVA = "0x813E6C", Offset = "0x813E6C", VA = "0x813E6C")]
	public static void Stab(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x60008CF")]
	[Address(RVA = "0x813F20", Offset = "0x813F20", VA = "0x813F20")]
	public static void LookFrom(GameObject target, Vector3 looktarget, float time)
	{
	}

	[Token(Token = "0x60008D0")]
	[Address(RVA = "0x814154", Offset = "0x814154", VA = "0x814154")]
	public static void LookFrom(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x60008D1")]
	[Address(RVA = "0x8149F4", Offset = "0x8149F4", VA = "0x8149F4")]
	public static void LookTo(GameObject target, Vector3 looktarget, float time)
	{
	}

	[Token(Token = "0x60008D2")]
	[Address(RVA = "0x814C28", Offset = "0x814C28", VA = "0x814C28")]
	public static void LookTo(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x60008D3")]
	[Address(RVA = "0x81501C", Offset = "0x81501C", VA = "0x81501C")]
	public static void MoveTo(GameObject target, Vector3 position, float time)
	{
	}

	[Token(Token = "0x60008D4")]
	[Address(RVA = "0x815250", Offset = "0x815250", VA = "0x815250")]
	public static void MoveTo(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x60008D5")]
	[Address(RVA = "0x81570C", Offset = "0x81570C", VA = "0x81570C")]
	public static void MoveFrom(GameObject target, Vector3 position, float time)
	{
	}

	[Token(Token = "0x60008D6")]
	[Address(RVA = "0x815940", Offset = "0x815940", VA = "0x815940")]
	public static void MoveFrom(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x60008D7")]
	[Address(RVA = "0x81659C", Offset = "0x81659C", VA = "0x81659C")]
	public static void MoveAdd(GameObject target, Vector3 amount, float time)
	{
	}

	[Token(Token = "0x60008D8")]
	[Address(RVA = "0x8167D0", Offset = "0x8167D0", VA = "0x8167D0")]
	public static void MoveAdd(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x60008D9")]
	[Address(RVA = "0x81018C", Offset = "0x81018C", VA = "0x81018C")]
	public static void MoveBy(GameObject target, Vector3 amount, float time)
	{
	}

	[Token(Token = "0x60008DA")]
	[Address(RVA = "0x8168BC", Offset = "0x8168BC", VA = "0x8168BC")]
	public static void MoveBy(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x60008DB")]
	[Address(RVA = "0x8169A8", Offset = "0x8169A8", VA = "0x8169A8")]
	public static void ScaleTo(GameObject target, Vector3 scale, float time)
	{
	}

	[Token(Token = "0x60008DC")]
	[Address(RVA = "0x816BDC", Offset = "0x816BDC", VA = "0x816BDC")]
	public static void ScaleTo(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x60008DD")]
	[Address(RVA = "0x817090", Offset = "0x817090", VA = "0x817090")]
	public static void ScaleFrom(GameObject target, Vector3 scale, float time)
	{
	}

	[Token(Token = "0x60008DE")]
	[Address(RVA = "0x8172C4", Offset = "0x8172C4", VA = "0x8172C4")]
	public static void ScaleFrom(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x60008DF")]
	[Address(RVA = "0x817844", Offset = "0x817844", VA = "0x817844")]
	public static void ScaleAdd(GameObject target, Vector3 amount, float time)
	{
	}

	[Token(Token = "0x60008E0")]
	[Address(RVA = "0x817A78", Offset = "0x817A78", VA = "0x817A78")]
	public static void ScaleAdd(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x60008E1")]
	[Address(RVA = "0x817B64", Offset = "0x817B64", VA = "0x817B64")]
	public static void ScaleBy(GameObject target, Vector3 amount, float time)
	{
	}

	[Token(Token = "0x60008E2")]
	[Address(RVA = "0x817D98", Offset = "0x817D98", VA = "0x817D98")]
	public static void ScaleBy(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x60008E3")]
	[Address(RVA = "0x817E84", Offset = "0x817E84", VA = "0x817E84")]
	public static void RotateTo(GameObject target, Vector3 rotation, float time)
	{
	}

	[Token(Token = "0x60008E4")]
	[Address(RVA = "0x8180B8", Offset = "0x8180B8", VA = "0x8180B8")]
	public static void RotateTo(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x60008E5")]
	[Address(RVA = "0x818574", Offset = "0x818574", VA = "0x818574")]
	public static void RotateFrom(GameObject target, Vector3 rotation, float time)
	{
	}

	[Token(Token = "0x60008E6")]
	[Address(RVA = "0x8187A8", Offset = "0x8187A8", VA = "0x8187A8")]
	public static void RotateFrom(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x60008E7")]
	[Address(RVA = "0x818DBC", Offset = "0x818DBC", VA = "0x818DBC")]
	public static void RotateAdd(GameObject target, Vector3 amount, float time)
	{
	}

	[Token(Token = "0x60008E8")]
	[Address(RVA = "0x818FF0", Offset = "0x818FF0", VA = "0x818FF0")]
	public static void RotateAdd(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x60008E9")]
	[Address(RVA = "0x8190DC", Offset = "0x8190DC", VA = "0x8190DC")]
	public static void RotateBy(GameObject target, Vector3 amount, float time)
	{
	}

	[Token(Token = "0x60008EA")]
	[Address(RVA = "0x819310", Offset = "0x819310", VA = "0x819310")]
	public static void RotateBy(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x60008EB")]
	[Address(RVA = "0x8193FC", Offset = "0x8193FC", VA = "0x8193FC")]
	public static void ShakePosition(GameObject target, Vector3 amount, float time)
	{
	}

	[Token(Token = "0x60008EC")]
	[Address(RVA = "0x819630", Offset = "0x819630", VA = "0x819630")]
	public static void ShakePosition(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x60008ED")]
	[Address(RVA = "0x81971C", Offset = "0x81971C", VA = "0x81971C")]
	public static void ShakeScale(GameObject target, Vector3 amount, float time)
	{
	}

	[Token(Token = "0x60008EE")]
	[Address(RVA = "0x819950", Offset = "0x819950", VA = "0x819950")]
	public static void ShakeScale(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x60008EF")]
	[Address(RVA = "0x819A3C", Offset = "0x819A3C", VA = "0x819A3C")]
	public static void ShakeRotation(GameObject target, Vector3 amount, float time)
	{
	}

	[Token(Token = "0x60008F0")]
	[Address(RVA = "0x819C70", Offset = "0x819C70", VA = "0x819C70")]
	public static void ShakeRotation(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x60008F1")]
	[Address(RVA = "0x819D5C", Offset = "0x819D5C", VA = "0x819D5C")]
	public static void PunchPosition(GameObject target, Vector3 amount, float time)
	{
	}

	[Token(Token = "0x60008F2")]
	[Address(RVA = "0x819F90", Offset = "0x819F90", VA = "0x819F90")]
	public static void PunchPosition(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x60008F3")]
	[Address(RVA = "0x81A0D0", Offset = "0x81A0D0", VA = "0x81A0D0")]
	public static void PunchRotation(GameObject target, Vector3 amount, float time)
	{
	}

	[Token(Token = "0x60008F4")]
	[Address(RVA = "0x81A304", Offset = "0x81A304", VA = "0x81A304")]
	public static void PunchRotation(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x60008F5")]
	[Address(RVA = "0x81A444", Offset = "0x81A444", VA = "0x81A444")]
	public static void PunchScale(GameObject target, Vector3 amount, float time)
	{
	}

	[Token(Token = "0x60008F6")]
	[Address(RVA = "0x81A678", Offset = "0x81A678", VA = "0x81A678")]
	public static void PunchScale(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x60008F7")]
	[Address(RVA = "0x81A7B8", Offset = "0x81A7B8", VA = "0x81A7B8")]
	private void GenerateTargets()
	{
	}

	[Token(Token = "0x60008F8")]
	[Address(RVA = "0x81B9FC", Offset = "0x81B9FC", VA = "0x81B9FC")]
	private void GenerateRectTargets()
	{
	}

	[Token(Token = "0x60008F9")]
	[Address(RVA = "0x81B834", Offset = "0x81B834", VA = "0x81B834")]
	private void GenerateColorTargets()
	{
	}

	[Token(Token = "0x60008FA")]
	[Address(RVA = "0x81B57C", Offset = "0x81B57C", VA = "0x81B57C")]
	private void GenerateVector3Targets()
	{
	}

	[Token(Token = "0x60008FB")]
	[Address(RVA = "0x81B23C", Offset = "0x81B23C", VA = "0x81B23C")]
	private void GenerateVector2Targets()
	{
	}

	[Token(Token = "0x60008FC")]
	[Address(RVA = "0x81AFEC", Offset = "0x81AFEC", VA = "0x81AFEC")]
	private void GenerateFloatTargets()
	{
	}

	[Token(Token = "0x60008FD")]
	[Address(RVA = "0x81BB68", Offset = "0x81BB68", VA = "0x81BB68")]
	private void GenerateColorToTargets()
	{
	}

	[Token(Token = "0x60008FE")]
	[Address(RVA = "0x81C7EC", Offset = "0x81C7EC", VA = "0x81C7EC")]
	private void GenerateAudioToTargets()
	{
	}

	[Token(Token = "0x60008FF")]
	[Address(RVA = "0x822FE4", Offset = "0x822FE4", VA = "0x822FE4")]
	private void GenerateStabTargets()
	{
	}

	[Token(Token = "0x6000900")]
	[Address(RVA = "0x8222C8", Offset = "0x8222C8", VA = "0x8222C8")]
	private void GenerateLookToTargets()
	{
	}

	[Token(Token = "0x6000901")]
	[Address(RVA = "0x81CBC0", Offset = "0x81CBC0", VA = "0x81CBC0")]
	private void GenerateMoveToPathTargets()
	{
	}

	[Token(Token = "0x6000902")]
	[Address(RVA = "0x81D6A4", Offset = "0x81D6A4", VA = "0x81D6A4")]
	private void GenerateMoveToTargets()
	{
	}

	[Token(Token = "0x6000903")]
	[Address(RVA = "0x81DEB0", Offset = "0x81DEB0", VA = "0x81DEB0")]
	private void GenerateMoveByTargets()
	{
	}

	[Token(Token = "0x6000904")]
	[Address(RVA = "0x81E71C", Offset = "0x81E71C", VA = "0x81E71C")]
	private void GenerateScaleToTargets()
	{
	}

	[Token(Token = "0x6000905")]
	[Address(RVA = "0x81EE08", Offset = "0x81EE08", VA = "0x81EE08")]
	private void GenerateScaleByTargets()
	{
	}

	[Token(Token = "0x6000906")]
	[Address(RVA = "0x81F34C", Offset = "0x81F34C", VA = "0x81F34C")]
	private void GenerateScaleAddTargets()
	{
	}

	[Token(Token = "0x6000907")]
	[Address(RVA = "0x81F868", Offset = "0x81F868", VA = "0x81F868")]
	private void GenerateRotateToTargets()
	{
	}

	[Token(Token = "0x6000908")]
	[Address(RVA = "0x820104", Offset = "0x820104", VA = "0x820104")]
	private void GenerateRotateAddTargets()
	{
	}

	[Token(Token = "0x6000909")]
	[Address(RVA = "0x820644", Offset = "0x820644", VA = "0x820644")]
	private void GenerateRotateByTargets()
	{
	}

	[Token(Token = "0x600090A")]
	[Address(RVA = "0x820BF0", Offset = "0x820BF0", VA = "0x820BF0")]
	private void GenerateShakePositionTargets()
	{
	}

	[Token(Token = "0x600090B")]
	[Address(RVA = "0x820FBC", Offset = "0x820FBC", VA = "0x820FBC")]
	private void GenerateShakeScaleTargets()
	{
	}

	[Token(Token = "0x600090C")]
	[Address(RVA = "0x82132C", Offset = "0x82132C", VA = "0x82132C")]
	private void GenerateShakeRotationTargets()
	{
	}

	[Token(Token = "0x600090D")]
	[Address(RVA = "0x82169C", Offset = "0x82169C", VA = "0x82169C")]
	private void GeneratePunchPositionTargets()
	{
	}

	[Token(Token = "0x600090E")]
	[Address(RVA = "0x821AF4", Offset = "0x821AF4", VA = "0x821AF4")]
	private void GeneratePunchRotationTargets()
	{
	}

	[Token(Token = "0x600090F")]
	[Address(RVA = "0x821EF0", Offset = "0x821EF0", VA = "0x821EF0")]
	private void GeneratePunchScaleTargets()
	{
	}

	[Token(Token = "0x6000910")]
	[Address(RVA = "0x823884", Offset = "0x823884", VA = "0x823884")]
	private void ApplyRectTargets()
	{
	}

	[Token(Token = "0x6000911")]
	[Address(RVA = "0x823D64", Offset = "0x823D64", VA = "0x823D64")]
	private void ApplyColorTargets()
	{
	}

	[Token(Token = "0x6000912")]
	[Address(RVA = "0x82436C", Offset = "0x82436C", VA = "0x82436C")]
	private void ApplyVector3Targets()
	{
	}

	[Token(Token = "0x6000913")]
	[Address(RVA = "0x824714", Offset = "0x824714", VA = "0x824714")]
	private void ApplyVector2Targets()
	{
	}

	[Token(Token = "0x6000914")]
	[Address(RVA = "0x8249F4", Offset = "0x8249F4", VA = "0x8249F4")]
	private void ApplyFloatTargets()
	{
	}

	[Token(Token = "0x6000915")]
	[Address(RVA = "0x824C08", Offset = "0x824C08", VA = "0x824C08")]
	private void ApplyColorToTargets()
	{
	}

	[Token(Token = "0x6000916")]
	[Address(RVA = "0x8256F4", Offset = "0x8256F4", VA = "0x8256F4")]
	private void ApplyAudioToTargets()
	{
	}

	[Token(Token = "0x6000917")]
	[Address(RVA = "0x825A10", Offset = "0x825A10", VA = "0x825A10")]
	private void ApplyStabTargets()
	{
	}

	[Token(Token = "0x6000918")]
	[Address(RVA = "0x825A14", Offset = "0x825A14", VA = "0x825A14")]
	private void ApplyMoveToPathTargets()
	{
	}

	[Token(Token = "0x6000919")]
	[Address(RVA = "0x825E6C", Offset = "0x825E6C", VA = "0x825E6C")]
	private void ApplyMoveToTargets()
	{
	}

	[Token(Token = "0x600091A")]
	[Address(RVA = "0x8262EC", Offset = "0x8262EC", VA = "0x8262EC")]
	private void ApplyMoveByTargets()
	{
	}

	[Token(Token = "0x600091B")]
	[Address(RVA = "0x8268DC", Offset = "0x8268DC", VA = "0x8268DC")]
	private void ApplyScaleToTargets()
	{
	}

	[Token(Token = "0x600091C")]
	[Address(RVA = "0x826C28", Offset = "0x826C28", VA = "0x826C28")]
	private void ApplyLookToTargets()
	{
	}

	[Token(Token = "0x600091D")]
	[Address(RVA = "0x826FD4", Offset = "0x826FD4", VA = "0x826FD4")]
	private void ApplyRotateToTargets()
	{
	}

	[Token(Token = "0x600091E")]
	[Address(RVA = "0x8275A4", Offset = "0x8275A4", VA = "0x8275A4")]
	private void ApplyRotateAddTargets()
	{
	}

	[Token(Token = "0x600091F")]
	[Address(RVA = "0x827AA4", Offset = "0x827AA4", VA = "0x827AA4")]
	private void ApplyShakePositionTargets()
	{
	}

	[Token(Token = "0x6000920")]
	[Address(RVA = "0x8281D0", Offset = "0x8281D0", VA = "0x8281D0")]
	private void ApplyShakeScaleTargets()
	{
	}

	[Token(Token = "0x6000921")]
	[Address(RVA = "0x8285C0", Offset = "0x8285C0", VA = "0x8285C0")]
	private void ApplyShakeRotationTargets()
	{
	}

	[Token(Token = "0x6000922")]
	[Address(RVA = "0x828A74", Offset = "0x828A74", VA = "0x828A74")]
	private void ApplyPunchPositionTargets()
	{
	}

	[Token(Token = "0x6000923")]
	[Address(RVA = "0x829310", Offset = "0x829310", VA = "0x829310")]
	private void ApplyPunchRotationTargets()
	{
	}

	[Token(Token = "0x6000924")]
	[Address(RVA = "0x8299FC", Offset = "0x8299FC", VA = "0x8299FC")]
	private void ApplyPunchScaleTargets()
	{
	}

	[Token(Token = "0x6000925")]
	[Address(RVA = "0x829F4C", Offset = "0x829F4C", VA = "0x829F4C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x668BD8", Offset = "0x668BD8")]
	private IEnumerator TweenDelay()
	{
		return null;
	}

	[Token(Token = "0x6000926")]
	[Address(RVA = "0x829FC0", Offset = "0x829FC0", VA = "0x829FC0")]
	private void TweenStart()
	{
	}

	[Token(Token = "0x6000927")]
	[Address(RVA = "0x82AB7C", Offset = "0x82AB7C", VA = "0x82AB7C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x668C3C", Offset = "0x668C3C")]
	private IEnumerator TweenRestart()
	{
		return null;
	}

	[Token(Token = "0x6000928")]
	[Address(RVA = "0x82ABF0", Offset = "0x82ABF0", VA = "0x82ABF0")]
	private void TweenUpdate()
	{
	}

	[Token(Token = "0x6000929")]
	[Address(RVA = "0x82ACDC", Offset = "0x82ACDC", VA = "0x82ACDC")]
	private void TweenComplete()
	{
	}

	[Token(Token = "0x600092A")]
	[Address(RVA = "0x82ADB4", Offset = "0x82ADB4", VA = "0x82ADB4")]
	private void TweenLoop()
	{
	}

	[Token(Token = "0x600092B")]
	[Address(RVA = "0x82AE60", Offset = "0x82AE60", VA = "0x82AE60")]
	public static Rect RectUpdate(Rect currentValue, Rect targetValue, float speed)
	{
		return default(Rect);
	}

	[Token(Token = "0x600092C")]
	[Address(RVA = "0x82B028", Offset = "0x82B028", VA = "0x82B028")]
	public static Vector3 Vector3Update(Vector3 currentValue, Vector3 targetValue, float speed)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600092D")]
	[Address(RVA = "0x82B134", Offset = "0x82B134", VA = "0x82B134")]
	public static Vector2 Vector2Update(Vector2 currentValue, Vector2 targetValue, float speed)
	{
		return default(Vector2);
	}

	[Token(Token = "0x600092E")]
	[Address(RVA = "0x82AFE8", Offset = "0x82AFE8", VA = "0x82AFE8")]
	public static float FloatUpdate(float currentValue, float targetValue, float speed)
	{
		return default(float);
	}

	[Token(Token = "0x600092F")]
	[Address(RVA = "0x82B218", Offset = "0x82B218", VA = "0x82B218")]
	public static void FadeUpdate(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x6000930")]
	[Address(RVA = "0x82C028", Offset = "0x82C028", VA = "0x82C028")]
	public static void FadeUpdate(GameObject target, float alpha, float time)
	{
	}

	[Token(Token = "0x6000931")]
	[Address(RVA = "0x82B2EC", Offset = "0x82B2EC", VA = "0x82B2EC")]
	public static void ColorUpdate(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x6000932")]
	[Address(RVA = "0x82C240", Offset = "0x82C240", VA = "0x82C240")]
	public static void ColorUpdate(GameObject target, Color color, float time)
	{
	}

	[Token(Token = "0x6000933")]
	[Address(RVA = "0x82C484", Offset = "0x82C484", VA = "0x82C484")]
	public static void AudioUpdate(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x6000934")]
	[Address(RVA = "0x82CAB4", Offset = "0x82CAB4", VA = "0x82CAB4")]
	public static void AudioUpdate(GameObject target, float volume, float pitch, float time)
	{
	}

	[Token(Token = "0x6000935")]
	[Address(RVA = "0x82CD88", Offset = "0x82CD88", VA = "0x82CD88")]
	public static void RotateUpdate(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x6000936")]
	[Address(RVA = "0x82D654", Offset = "0x82D654", VA = "0x82D654")]
	public static void RotateUpdate(GameObject target, Vector3 rotation, float time)
	{
	}

	[Token(Token = "0x6000937")]
	[Address(RVA = "0x82D888", Offset = "0x82D888", VA = "0x82D888")]
	public static void ScaleUpdate(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x6000938")]
	[Address(RVA = "0x82E07C", Offset = "0x82E07C", VA = "0x82E07C")]
	public static void ScaleUpdate(GameObject target, Vector3 scale, float time)
	{
	}

	[Token(Token = "0x6000939")]
	[Address(RVA = "0x82E2B0", Offset = "0x82E2B0", VA = "0x82E2B0")]
	public static void MoveUpdate(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x600093A")]
	[Address(RVA = "0x82FBDC", Offset = "0x82FBDC", VA = "0x82FBDC")]
	public static void MoveUpdate(GameObject target, Vector3 position, float time)
	{
	}

	[Token(Token = "0x600093B")]
	[Address(RVA = "0x82EDCC", Offset = "0x82EDCC", VA = "0x82EDCC")]
	public static void LookUpdate(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x600093C")]
	[Address(RVA = "0x82FE10", Offset = "0x82FE10", VA = "0x82FE10")]
	public static void LookUpdate(GameObject target, Vector3 looktarget, float time)
	{
	}

	[Token(Token = "0x600093D")]
	[Address(RVA = "0x830044", Offset = "0x830044", VA = "0x830044")]
	public static float PathLength(Transform[] path)
	{
		return default(float);
	}

	[Token(Token = "0x600093E")]
	[Address(RVA = "0x823708", Offset = "0x823708", VA = "0x823708")]
	public static float PathLength(Vector3[] path)
	{
		return default(float);
	}

	[Token(Token = "0x600093F")]
	[Address(RVA = "0x830B64", Offset = "0x830B64", VA = "0x830B64")]
	public static void PutOnPath(GameObject target, Vector3[] path, float percent)
	{
	}

	[Token(Token = "0x6000940")]
	[Address(RVA = "0x830C40", Offset = "0x830C40", VA = "0x830C40")]
	public static void PutOnPath(Transform target, Vector3[] path, float percent)
	{
	}

	[Token(Token = "0x6000941")]
	[Address(RVA = "0x830CFC", Offset = "0x830CFC", VA = "0x830CFC")]
	public static void PutOnPath(GameObject target, Transform[] path, float percent)
	{
	}

	[Token(Token = "0x6000942")]
	[Address(RVA = "0x830EA4", Offset = "0x830EA4", VA = "0x830EA4")]
	public static void PutOnPath(Transform target, Transform[] path, float percent)
	{
	}

	[Token(Token = "0x6000943")]
	[Address(RVA = "0x83102C", Offset = "0x83102C", VA = "0x83102C")]
	public static Vector3 PointOnPath(Transform[] path, float percent)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000944")]
	[Address(RVA = "0x831180", Offset = "0x831180", VA = "0x831180")]
	public static void DrawLine(Vector3[] line)
	{
	}

	[Token(Token = "0x6000945")]
	[Address(RVA = "0x831414", Offset = "0x831414", VA = "0x831414")]
	public static void DrawLine(Vector3[] line, Color color)
	{
	}

	[Token(Token = "0x6000946")]
	[Address(RVA = "0x8314DC", Offset = "0x8314DC", VA = "0x8314DC")]
	public static void DrawLine(Transform[] line)
	{
	}

	[Token(Token = "0x6000947")]
	[Address(RVA = "0x831694", Offset = "0x831694", VA = "0x831694")]
	public static void DrawLine(Transform[] line, Color color)
	{
	}

	[Token(Token = "0x6000948")]
	[Address(RVA = "0x831844", Offset = "0x831844", VA = "0x831844")]
	public static void DrawLineGizmos(Vector3[] line)
	{
	}

	[Token(Token = "0x6000949")]
	[Address(RVA = "0x83192C", Offset = "0x83192C", VA = "0x83192C")]
	public static void DrawLineGizmos(Vector3[] line, Color color)
	{
	}

	[Token(Token = "0x600094A")]
	[Address(RVA = "0x8319F4", Offset = "0x8319F4", VA = "0x8319F4")]
	public static void DrawLineGizmos(Transform[] line)
	{
	}

	[Token(Token = "0x600094B")]
	[Address(RVA = "0x831BAC", Offset = "0x831BAC", VA = "0x831BAC")]
	public static void DrawLineGizmos(Transform[] line, Color color)
	{
	}

	[Token(Token = "0x600094C")]
	[Address(RVA = "0x831D5C", Offset = "0x831D5C", VA = "0x831D5C")]
	public static void DrawLineHandles(Vector3[] line)
	{
	}

	[Token(Token = "0x600094D")]
	[Address(RVA = "0x831E44", Offset = "0x831E44", VA = "0x831E44")]
	public static void DrawLineHandles(Vector3[] line, Color color)
	{
	}

	[Token(Token = "0x600094E")]
	[Address(RVA = "0x831F0C", Offset = "0x831F0C", VA = "0x831F0C")]
	public static void DrawLineHandles(Transform[] line)
	{
	}

	[Token(Token = "0x600094F")]
	[Address(RVA = "0x8320C4", Offset = "0x8320C4", VA = "0x8320C4")]
	public static void DrawLineHandles(Transform[] line, Color color)
	{
	}

	[Token(Token = "0x6000950")]
	[Address(RVA = "0x832274", Offset = "0x832274", VA = "0x832274")]
	public static Vector3 PointOnPath(Vector3[] path, float percent)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000951")]
	[Address(RVA = "0x8322EC", Offset = "0x8322EC", VA = "0x8322EC")]
	public static void DrawPath(Vector3[] path)
	{
	}

	[Token(Token = "0x6000952")]
	[Address(RVA = "0x8325CC", Offset = "0x8325CC", VA = "0x8325CC")]
	public static void DrawPath(Vector3[] path, Color color)
	{
	}

	[Token(Token = "0x6000953")]
	[Address(RVA = "0x832694", Offset = "0x832694", VA = "0x832694")]
	public static void DrawPath(Transform[] path)
	{
	}

	[Token(Token = "0x6000954")]
	[Address(RVA = "0x83284C", Offset = "0x83284C", VA = "0x83284C")]
	public static void DrawPath(Transform[] path, Color color)
	{
	}

	[Token(Token = "0x6000955")]
	[Address(RVA = "0x8329FC", Offset = "0x8329FC", VA = "0x8329FC")]
	public static void DrawPathGizmos(Vector3[] path)
	{
	}

	[Token(Token = "0x6000956")]
	[Address(RVA = "0x832AE4", Offset = "0x832AE4", VA = "0x832AE4")]
	public static void DrawPathGizmos(Vector3[] path, Color color)
	{
	}

	[Token(Token = "0x6000957")]
	[Address(RVA = "0x832BAC", Offset = "0x832BAC", VA = "0x832BAC")]
	public static void DrawPathGizmos(Transform[] path)
	{
	}

	[Token(Token = "0x6000958")]
	[Address(RVA = "0x832D64", Offset = "0x832D64", VA = "0x832D64")]
	public static void DrawPathGizmos(Transform[] path, Color color)
	{
	}

	[Token(Token = "0x6000959")]
	[Address(RVA = "0x832F14", Offset = "0x832F14", VA = "0x832F14")]
	public static void DrawPathHandles(Vector3[] path)
	{
	}

	[Token(Token = "0x600095A")]
	[Address(RVA = "0x832FFC", Offset = "0x832FFC", VA = "0x832FFC")]
	public static void DrawPathHandles(Vector3[] path, Color color)
	{
	}

	[Token(Token = "0x600095B")]
	[Address(RVA = "0x8330C4", Offset = "0x8330C4", VA = "0x8330C4")]
	public static void DrawPathHandles(Transform[] path)
	{
	}

	[Token(Token = "0x600095C")]
	[Address(RVA = "0x83327C", Offset = "0x83327C", VA = "0x83327C")]
	public static void DrawPathHandles(Transform[] path, Color color)
	{
	}

	[Token(Token = "0x600095D")]
	[Address(RVA = "0x83342C", Offset = "0x83342C", VA = "0x83342C")]
	public static void Resume(GameObject target)
	{
	}

	[Token(Token = "0x600095E")]
	[Address(RVA = "0x8335F8", Offset = "0x8335F8", VA = "0x8335F8")]
	public static void Resume(GameObject target, bool includechildren)
	{
	}

	[Token(Token = "0x600095F")]
	[Address(RVA = "0x8339AC", Offset = "0x8339AC", VA = "0x8339AC")]
	public static void Resume(GameObject target, string type)
	{
	}

	[Token(Token = "0x6000960")]
	[Address(RVA = "0x833BA4", Offset = "0x833BA4", VA = "0x833BA4")]
	public static void Resume(GameObject target, string type, bool includechildren)
	{
	}

	[Token(Token = "0x6000961")]
	[Address(RVA = "0x8340E4", Offset = "0x8340E4", VA = "0x8340E4")]
	public static void Resume()
	{
	}

	[Token(Token = "0x6000962")]
	[Address(RVA = "0x834274", Offset = "0x834274", VA = "0x834274")]
	public static void Resume(string type)
	{
	}

	[Token(Token = "0x6000963")]
	[Address(RVA = "0x83455C", Offset = "0x83455C", VA = "0x83455C")]
	public static void Pause(GameObject target)
	{
	}

	[Token(Token = "0x6000964")]
	[Address(RVA = "0x8346FC", Offset = "0x8346FC", VA = "0x8346FC")]
	public static void Pause(GameObject target, bool includechildren)
	{
	}

	[Token(Token = "0x6000965")]
	[Address(RVA = "0x834AB0", Offset = "0x834AB0", VA = "0x834AB0")]
	public static void Pause(GameObject target, string type)
	{
	}

	[Token(Token = "0x6000966")]
	[Address(RVA = "0x834D18", Offset = "0x834D18", VA = "0x834D18")]
	public static void Pause(GameObject target, string type, bool includechildren)
	{
	}

	[Token(Token = "0x6000967")]
	[Address(RVA = "0x8352C8", Offset = "0x8352C8", VA = "0x8352C8")]
	public static void Pause()
	{
	}

	[Token(Token = "0x6000968")]
	[Address(RVA = "0x835458", Offset = "0x835458", VA = "0x835458")]
	public static void Pause(string type)
	{
	}

	[Token(Token = "0x6000969")]
	[Address(RVA = "0x835740", Offset = "0x835740", VA = "0x835740")]
	public static int Count()
	{
		return default(int);
	}

	[Token(Token = "0x600096A")]
	[Address(RVA = "0x8357C4", Offset = "0x8357C4", VA = "0x8357C4")]
	public static int Count(string type)
	{
		return default(int);
	}

	[Token(Token = "0x600096B")]
	[Address(RVA = "0x835A94", Offset = "0x835A94", VA = "0x835A94")]
	public static int Count(GameObject target)
	{
		return default(int);
	}

	[Token(Token = "0x600096C")]
	[Address(RVA = "0x835B04", Offset = "0x835B04", VA = "0x835B04")]
	public static int Count(GameObject target, string type)
	{
		return default(int);
	}

	[Token(Token = "0x600096D")]
	[Address(RVA = "0x835CF8", Offset = "0x835CF8", VA = "0x835CF8")]
	public static void Stop()
	{
	}

	[Token(Token = "0x600096E")]
	[Address(RVA = "0x836090", Offset = "0x836090", VA = "0x836090")]
	public static void Stop(string type)
	{
	}

	[Token(Token = "0x600096F")]
	[Address(RVA = "0x836568", Offset = "0x836568", VA = "0x836568")]
	public static void StopByName(string name)
	{
	}

	[Token(Token = "0x6000970")]
	[Address(RVA = "0x835ECC", Offset = "0x835ECC", VA = "0x835ECC")]
	public static void Stop(GameObject target)
	{
	}

	[Token(Token = "0x6000971")]
	[Address(RVA = "0x8369B0", Offset = "0x8369B0", VA = "0x8369B0")]
	public static void Stop(GameObject target, bool includechildren)
	{
	}

	[Token(Token = "0x6000972")]
	[Address(RVA = "0x836378", Offset = "0x836378", VA = "0x836378")]
	public static void Stop(GameObject target, string type)
	{
	}

	[Token(Token = "0x6000973")]
	[Address(RVA = "0x836850", Offset = "0x836850", VA = "0x836850")]
	public static void StopByName(GameObject target, string name)
	{
	}

	[Token(Token = "0x6000974")]
	[Address(RVA = "0x836D64", Offset = "0x836D64", VA = "0x836D64")]
	public static void Stop(GameObject target, string type, bool includechildren)
	{
	}

	[Token(Token = "0x6000975")]
	[Address(RVA = "0x83729C", Offset = "0x83729C", VA = "0x83729C")]
	public static void StopByName(GameObject target, string name, bool includechildren)
	{
	}

	[Token(Token = "0x6000976")]
	[Address(RVA = "0x8116B0", Offset = "0x8116B0", VA = "0x8116B0")]
	public static Hashtable Hash(params object[] args)
	{
		return null;
	}

	[Token(Token = "0x6000977")]
	[Address(RVA = "0x837744", Offset = "0x837744", VA = "0x837744")]
	private iTween(Hashtable h)
	{
	}

	[Token(Token = "0x6000978")]
	[Address(RVA = "0x837770", Offset = "0x837770", VA = "0x837770")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000979")]
	[Address(RVA = "0x838A74", Offset = "0x838A74", VA = "0x838A74")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x668CA0", Offset = "0x668CA0")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x600097A")]
	[Address(RVA = "0x838AE8", Offset = "0x838AE8", VA = "0x838AE8")]
	private void Update()
	{
	}

	[Token(Token = "0x600097B")]
	[Address(RVA = "0x838B28", Offset = "0x838B28", VA = "0x838B28")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x600097C")]
	[Address(RVA = "0x838B68", Offset = "0x838B68", VA = "0x838B68")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600097D")]
	[Address(RVA = "0x838C84", Offset = "0x838C84", VA = "0x838C84")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600097E")]
	[Address(RVA = "0x838D00", Offset = "0x838D00", VA = "0x838D00")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600097F")]
	[Address(RVA = "0x831268", Offset = "0x831268", VA = "0x831268")]
	private static void DrawLineHelper(Vector3[] line, Color color, string method)
	{
	}

	[Token(Token = "0x6000980")]
	[Address(RVA = "0x8323D4", Offset = "0x8323D4", VA = "0x8323D4")]
	private static void DrawPathHelper(Vector3[] path, Color color, string method)
	{
	}

	[Token(Token = "0x6000981")]
	[Address(RVA = "0x830278", Offset = "0x830278", VA = "0x830278")]
	private static Vector3[] PathControlPointGenerator(Vector3[] path)
	{
		return null;
	}

	[Token(Token = "0x6000982")]
	[Address(RVA = "0x8306EC", Offset = "0x8306EC", VA = "0x8306EC")]
	private static Vector3 Interp(Vector3[] pts, float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000983")]
	[Address(RVA = "0x81132C", Offset = "0x81132C", VA = "0x81132C")]
	private static void Launch(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x6000984")]
	[Address(RVA = "0x8108DC", Offset = "0x8108DC", VA = "0x8108DC")]
	private static Hashtable CleanArgs(Hashtable args)
	{
		return null;
	}

	[Token(Token = "0x6000985")]
	[Address(RVA = "0x838D04", Offset = "0x838D04", VA = "0x838D04")]
	private static string GenerateID()
	{
		return null;
	}

	[Token(Token = "0x6000986")]
	[Address(RVA = "0x8377AC", Offset = "0x8377AC", VA = "0x8377AC")]
	private void RetrieveArgs()
	{
	}

	[Token(Token = "0x6000987")]
	[Address(RVA = "0x838D84", Offset = "0x838D84", VA = "0x838D84")]
	private void GetEasingFunction()
	{
	}

	[Token(Token = "0x6000988")]
	[Address(RVA = "0x82AC64", Offset = "0x82AC64", VA = "0x82AC64")]
	private void UpdatePercentage()
	{
	}

	[Token(Token = "0x6000989")]
	[Address(RVA = "0x82A164", Offset = "0x82A164", VA = "0x82A164")]
	private void CallBack(string callbackType)
	{
	}

	[Token(Token = "0x600098A")]
	[Address(RVA = "0x823418", Offset = "0x823418", VA = "0x823418")]
	private void Dispose()
	{
	}

	[Token(Token = "0x600098B")]
	[Address(RVA = "0x82A508", Offset = "0x82A508", VA = "0x82A508")]
	private void ConflictCheck()
	{
	}

	[Token(Token = "0x600098C")]
	[Address(RVA = "0x82AB78", Offset = "0x82AB78", VA = "0x82AB78")]
	private void EnableKinematic()
	{
	}

	[Token(Token = "0x600098D")]
	[Address(RVA = "0x82AE5C", Offset = "0x82AE5C", VA = "0x82AE5C")]
	private void DisableKinematic()
	{
	}

	[Token(Token = "0x600098E")]
	[Address(RVA = "0x838CAC", Offset = "0x838CAC", VA = "0x838CAC")]
	private void ResumeDelay()
	{
	}

	[Token(Token = "0x600098F")]
	[Address(RVA = "0x839178", Offset = "0x839178", VA = "0x839178")]
	private float linear(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x6000990")]
	[Address(RVA = "0x82363C", Offset = "0x82363C", VA = "0x82363C")]
	private float clerp(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x6000991")]
	[Address(RVA = "0x839200", Offset = "0x839200", VA = "0x839200")]
	private float spring(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x6000992")]
	[Address(RVA = "0x839304", Offset = "0x839304", VA = "0x839304")]
	private float easeInQuad(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x6000993")]
	[Address(RVA = "0x839318", Offset = "0x839318", VA = "0x839318")]
	private float easeOutQuad(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x6000994")]
	[Address(RVA = "0x839334", Offset = "0x839334", VA = "0x839334")]
	private float easeInOutQuad(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x6000995")]
	[Address(RVA = "0x839388", Offset = "0x839388", VA = "0x839388")]
	private float easeInCubic(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x6000996")]
	[Address(RVA = "0x8393A0", Offset = "0x8393A0", VA = "0x8393A0")]
	private float easeOutCubic(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x6000997")]
	[Address(RVA = "0x8393C8", Offset = "0x8393C8", VA = "0x8393C8")]
	private float easeInOutCubic(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x6000998")]
	[Address(RVA = "0x839420", Offset = "0x839420", VA = "0x839420")]
	private float easeInQuart(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x6000999")]
	[Address(RVA = "0x83943C", Offset = "0x83943C", VA = "0x83943C")]
	private float easeOutQuart(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x600099A")]
	[Address(RVA = "0x839464", Offset = "0x839464", VA = "0x839464")]
	private float easeInOutQuart(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x600099B")]
	[Address(RVA = "0x8394C0", Offset = "0x8394C0", VA = "0x8394C0")]
	private float easeInQuint(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x600099C")]
	[Address(RVA = "0x8394E0", Offset = "0x8394E0", VA = "0x8394E0")]
	private float easeOutQuint(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x600099D")]
	[Address(RVA = "0x839510", Offset = "0x839510", VA = "0x839510")]
	private float easeInOutQuint(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x600099E")]
	[Address(RVA = "0x839578", Offset = "0x839578", VA = "0x839578")]
	private float easeInSine(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x600099F")]
	[Address(RVA = "0x839610", Offset = "0x839610", VA = "0x839610")]
	private float easeOutSine(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x60009A0")]
	[Address(RVA = "0x8396A4", Offset = "0x8396A4", VA = "0x8396A4")]
	private float easeInOutSine(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x60009A1")]
	[Address(RVA = "0x839748", Offset = "0x839748", VA = "0x839748")]
	private float easeInExpo(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x60009A2")]
	[Address(RVA = "0x8397E0", Offset = "0x8397E0", VA = "0x8397E0")]
	private float easeOutExpo(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x60009A3")]
	[Address(RVA = "0x839878", Offset = "0x839878", VA = "0x839878")]
	private float easeInOutExpo(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x60009A4")]
	[Address(RVA = "0x839968", Offset = "0x839968", VA = "0x839968")]
	private float easeInCirc(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x60009A5")]
	[Address(RVA = "0x839A14", Offset = "0x839A14", VA = "0x839A14")]
	private float easeOutCirc(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x60009A6")]
	[Address(RVA = "0x839AC0", Offset = "0x839AC0", VA = "0x839AC0")]
	private float easeInOutCirc(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x60009A7")]
	[Address(RVA = "0x839BB8", Offset = "0x839BB8", VA = "0x839BB8")]
	private float easeInBounce(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x60009A8")]
	[Address(RVA = "0x839BF4", Offset = "0x839BF4", VA = "0x839BF4")]
	private float easeOutBounce(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x60009A9")]
	[Address(RVA = "0x839CC4", Offset = "0x839CC4", VA = "0x839CC4")]
	private float easeInOutBounce(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x60009AA")]
	[Address(RVA = "0x839D48", Offset = "0x839D48", VA = "0x839D48")]
	private float easeInBack(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x60009AB")]
	[Address(RVA = "0x839D78", Offset = "0x839D78", VA = "0x839D78")]
	private float easeOutBack(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x60009AC")]
	[Address(RVA = "0x839DB8", Offset = "0x839DB8", VA = "0x839DB8")]
	private float easeInOutBack(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x60009AD")]
	[Address(RVA = "0x829250", Offset = "0x829250", VA = "0x829250")]
	private float punch(float amplitude, float value)
	{
		return default(float);
	}

	[Token(Token = "0x60009AE")]
	[Address(RVA = "0x839E3C", Offset = "0x839E3C", VA = "0x839E3C")]
	private float easeInElastic(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x60009AF")]
	[Address(RVA = "0x839F24", Offset = "0x839F24", VA = "0x839F24")]
	private float easeOutElastic(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x60009B0")]
	[Address(RVA = "0x83A008", Offset = "0x83A008", VA = "0x83A008")]
	private float easeInOutElastic(float start, float end, float value)
	{
		return default(float);
	}
}
[Token(Token = "0x2000170")]
public class MoveSample : MonoBehaviour
{
	[Token(Token = "0x60009B2")]
	[Address(RVA = "0x7F8BFC", Offset = "0x7F8BFC", VA = "0x7F8BFC")]
	private void Start()
	{
	}

	[Token(Token = "0x60009B3")]
	[Address(RVA = "0x7F8F88", Offset = "0x7F8F88", VA = "0x7F8F88")]
	public MoveSample()
	{
	}
}
[Token(Token = "0x2000171")]
public class RotateSample : MonoBehaviour
{
	[Token(Token = "0x60009B4")]
	[Address(RVA = "0x859188", Offset = "0x859188", VA = "0x859188")]
	private void Start()
	{
	}

	[Token(Token = "0x60009B5")]
	[Address(RVA = "0x85950C", Offset = "0x85950C", VA = "0x85950C")]
	public RotateSample()
	{
	}
}
[Token(Token = "0x2000172")]
public class SampleInfo : MonoBehaviour
{
	[Token(Token = "0x60009B6")]
	[Address(RVA = "0x85BB38", Offset = "0x85BB38", VA = "0x85BB38")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x60009B7")]
	[Address(RVA = "0x85BC0C", Offset = "0x85BC0C", VA = "0x85BC0C")]
	public SampleInfo()
	{
	}
}
[Token(Token = "0x2000173")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x63E010", Offset = "0x63E010")]
public class iTweenPath : MonoBehaviour
{
	[Token(Token = "0x4000844")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string pathName;

	[Token(Token = "0x4000845")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Color pathColor;

	[Token(Token = "0x4000846")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<Vector3> nodes;

	[Token(Token = "0x4000847")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int nodeCount;

	[Token(Token = "0x4000848")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Dictionary<string, iTweenPath> paths;

	[Token(Token = "0x4000849")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public bool initialized;

	[Token(Token = "0x400084A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string initialName;

	[Token(Token = "0x400084B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool pathVisible;

	[Token(Token = "0x60009B8")]
	[Address(RVA = "0x14D43F8", Offset = "0x14D43F8", VA = "0x14D43F8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60009B9")]
	[Address(RVA = "0x14D4510", Offset = "0x14D4510", VA = "0x14D4510")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60009BA")]
	[Address(RVA = "0x14D45BC", Offset = "0x14D45BC", VA = "0x14D45BC")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x60009BB")]
	[Address(RVA = "0x14D46C0", Offset = "0x14D46C0", VA = "0x14D46C0")]
	public static Vector3[] GetPath(string requestedName)
	{
		return null;
	}

	[Token(Token = "0x60009BC")]
	[Address(RVA = "0x14D485C", Offset = "0x14D485C", VA = "0x14D485C")]
	public static Vector3[] GetPathReversed(string requestedName)
	{
		return null;
	}

	[Token(Token = "0x60009BD")]
	[Address(RVA = "0x14D4AB0", Offset = "0x14D4AB0", VA = "0x14D4AB0")]
	public iTweenPath()
	{
	}
}
[Token(Token = "0x2000174")]
public class ScrollingUVs_Layers : MonoBehaviour
{
	[Token(Token = "0x400084C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector2 uvAnimationRate;

	[Token(Token = "0x400084D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string textureName;

	[Token(Token = "0x400084E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector2 uvOffset;

	[Token(Token = "0x60009BF")]
	[Address(RVA = "0x860620", Offset = "0x860620", VA = "0x860620")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60009C0")]
	[Address(RVA = "0x86077C", Offset = "0x86077C", VA = "0x86077C")]
	public ScrollingUVs_Layers()
	{
	}
}
[Token(Token = "0x2000175")]
public class PS4VideoPlaybackSample : MonoBehaviour
{
	[Token(Token = "0x400084F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x64F110", Offset = "0x64F110")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64F110", Offset = "0x64F110")]
	public string moviePath;

	[Token(Token = "0x4000850")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x64F170", Offset = "0x64F170")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x64F170", Offset = "0x64F170")]
	public Image videoImage;

	[Token(Token = "0x4000851")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Slider timelineSlider;

	[Token(Token = "0x4000852")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Text timelineCurrentDisplay;

	[Token(Token = "0x4000853")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Text timelineTotalDisplay;

	[Token(Token = "0x4000854")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Sprite playIcon;

	[Token(Token = "0x4000855")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Sprite pauseIcon;

	[Token(Token = "0x4000856")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Sprite audioIcon;

	[Token(Token = "0x4000857")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Sprite muteIcon;

	[Token(Token = "0x4000858")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Image playPauseIcon;

	[Token(Token = "0x4000859")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Image audioToggleIcon;

	[Token(Token = "0x400085A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Image loopingIcon;

	[Token(Token = "0x400085B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Text outputText;

	[Token(Token = "0x60009C1")]
	[Address(RVA = "0x7FEF70", Offset = "0x7FEF70", VA = "0x7FEF70")]
	private void Start()
	{
	}

	[Token(Token = "0x60009C2")]
	[Address(RVA = "0x7FEF74", Offset = "0x7FEF74", VA = "0x7FEF74")]
	private void Update()
	{
	}

	[Token(Token = "0x60009C3")]
	[Address(RVA = "0x7FEF78", Offset = "0x7FEF78", VA = "0x7FEF78")]
	private void CropVideo()
	{
	}

	[Token(Token = "0x60009C4")]
	[Address(RVA = "0x7FEF7C", Offset = "0x7FEF7C", VA = "0x7FEF7C")]
	public void VideoPlayPause()
	{
	}

	[Token(Token = "0x60009C5")]
	[Address(RVA = "0x7FEF80", Offset = "0x7FEF80", VA = "0x7FEF80")]
	public void VideoStop()
	{
	}

	[Token(Token = "0x60009C6")]
	[Address(RVA = "0x7FEF84", Offset = "0x7FEF84", VA = "0x7FEF84")]
	public void VideoFastForward()
	{
	}

	[Token(Token = "0x60009C7")]
	[Address(RVA = "0x7FEF88", Offset = "0x7FEF88", VA = "0x7FEF88")]
	public void VideoRewind()
	{
	}

	[Token(Token = "0x60009C8")]
	[Address(RVA = "0x7FEF8C", Offset = "0x7FEF8C", VA = "0x7FEF8C")]
	public void VideoToggleMute()
	{
	}

	[Token(Token = "0x60009C9")]
	[Address(RVA = "0x7FEF90", Offset = "0x7FEF90", VA = "0x7FEF90")]
	public void VideoToggleLooping()
	{
	}

	[Token(Token = "0x60009CA")]
	[Address(RVA = "0x7FEF94", Offset = "0x7FEF94", VA = "0x7FEF94")]
	private void OnMovieEvent(int fmVevent)
	{
	}

	[Token(Token = "0x60009CB")]
	[Address(RVA = "0x7FEF98", Offset = "0x7FEF98", VA = "0x7FEF98")]
	private void AddToOutputText(string message)
	{
	}

	[Token(Token = "0x60009CC")]
	[Address(RVA = "0x7FF21C", Offset = "0x7FF21C", VA = "0x7FF21C")]
	public PS4VideoPlaybackSample()
	{
	}
}
[Token(Token = "0x2000176")]
public struct GazeEventArgs
{
	[Token(Token = "0x400085C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float distance;
}
[Token(Token = "0x2000177")]
public delegate void GazeEventHandler(object sender, GazeEventArgs e);
[Token(Token = "0x2000178")]
public class SteamVR_GazeTracker : MonoBehaviour
{
	[Token(Token = "0x400085D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool isInGaze;

	[Token(Token = "0x4000860")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float gazeInCutoff;

	[Token(Token = "0x4000861")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float gazeOutCutoff;

	[Token(Token = "0x4000862")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Transform hmdTrackedObject;

	[Token(Token = "0x14000044")]
	public event GazeEventHandler GazeOn
	{
		[Token(Token = "0x60009D1")]
		[Address(RVA = "0x925960", Offset = "0x925960", VA = "0x925960")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x668D04", Offset = "0x668D04")]
		add
		{
		}
		[Token(Token = "0x60009D2")]
		[Address(RVA = "0x925A4C", Offset = "0x925A4C", VA = "0x925A4C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x668D14", Offset = "0x668D14")]
		remove
		{
		}
	}

	[Token(Token = "0x14000045")]
	public event GazeEventHandler GazeOff
	{
		[Token(Token = "0x60009D3")]
		[Address(RVA = "0x925B38", Offset = "0x925B38", VA = "0x925B38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x668D24", Offset = "0x668D24")]
		add
		{
		}
		[Token(Token = "0x60009D4")]
		[Address(RVA = "0x925C24", Offset = "0x925C24", VA = "0x925C24")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x668D34", Offset = "0x668D34")]
		remove
		{
		}
	}

	[Token(Token = "0x60009D5")]
	[Address(RVA = "0x925D10", Offset = "0x925D10", VA = "0x925D10")]
	private void Start()
	{
	}

	[Token(Token = "0x60009D6")]
	[Address(RVA = "0x925D14", Offset = "0x925D14", VA = "0x925D14", Slot = "4")]
	public virtual void OnGazeOn(GazeEventArgs e)
	{
	}

	[Token(Token = "0x60009D7")]
	[Address(RVA = "0x925D30", Offset = "0x925D30", VA = "0x925D30", Slot = "5")]
	public virtual void OnGazeOff(GazeEventArgs e)
	{
	}

	[Token(Token = "0x60009D8")]
	[Address(RVA = "0x925D4C", Offset = "0x925D4C", VA = "0x925D4C")]
	private void Update()
	{
	}

	[Token(Token = "0x60009D9")]
	[Address(RVA = "0x92611C", Offset = "0x92611C", VA = "0x92611C")]
	public SteamVR_GazeTracker()
	{
	}
}
[Token(Token = "0x2000179")]
public struct PointerEventArgs
{
	[Token(Token = "0x4000863")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint controllerIndex;

	[Token(Token = "0x4000864")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public uint flags;

	[Token(Token = "0x4000865")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float distance;

	[Token(Token = "0x4000866")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Transform target;
}
[Token(Token = "0x200017A")]
public delegate void PointerEventHandler(object sender, PointerEventArgs e);
[Token(Token = "0x200017B")]
public class SteamVR_LaserPointer : MonoBehaviour
{
	[Token(Token = "0x4000867")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool active;

	[Token(Token = "0x4000868")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Color color;

	[Token(Token = "0x4000869")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float thickness;

	[Token(Token = "0x400086A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject holder;

	[Token(Token = "0x400086B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject pointer;

	[Token(Token = "0x400086C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool isActive;

	[Token(Token = "0x400086D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	public bool addRigidBody;

	[Token(Token = "0x400086E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform reference;

	[Token(Token = "0x4000871")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Transform previousContact;

	[Token(Token = "0x14000046")]
	public event PointerEventHandler PointerIn
	{
		[Token(Token = "0x60009DE")]
		[Address(RVA = "0x927314", Offset = "0x927314", VA = "0x927314")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x668D44", Offset = "0x668D44")]
		add
		{
		}
		[Token(Token = "0x60009DF")]
		[Address(RVA = "0x927400", Offset = "0x927400", VA = "0x927400")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x668D54", Offset = "0x668D54")]
		remove
		{
		}
	}

	[Token(Token = "0x14000047")]
	public event PointerEventHandler PointerOut
	{
		[Token(Token = "0x60009E0")]
		[Address(RVA = "0x9274EC", Offset = "0x9274EC", VA = "0x9274EC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x668D64", Offset = "0x668D64")]
		add
		{
		}
		[Token(Token = "0x60009E1")]
		[Address(RVA = "0x9275D8", Offset = "0x9275D8", VA = "0x9275D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x668D74", Offset = "0x668D74")]
		remove
		{
		}
	}

	[Token(Token = "0x60009E2")]
	[Address(RVA = "0x9276C4", Offset = "0x9276C4", VA = "0x9276C4")]
	private void Start()
	{
	}

	[Token(Token = "0x60009E3")]
	[Address(RVA = "0x927BE0", Offset = "0x927BE0", VA = "0x927BE0", Slot = "4")]
	public virtual void OnPointerIn(PointerEventArgs e)
	{
	}

	[Token(Token = "0x60009E4")]
	[Address(RVA = "0x927C24", Offset = "0x927C24", VA = "0x927C24", Slot = "5")]
	public virtual void OnPointerOut(PointerEventArgs e)
	{
	}

	[Token(Token = "0x60009E5")]
	[Address(RVA = "0x927C68", Offset = "0x927C68", VA = "0x927C68")]
	private void Update()
	{
	}

	[Token(Token = "0x60009E6")]
	[Address(RVA = "0x928168", Offset = "0x928168", VA = "0x928168")]
	public SteamVR_LaserPointer()
	{
	}
}
[Token(Token = "0x200017C")]
public class SteamVR_Teleporter : MonoBehaviour
{
	[Token(Token = "0x20005F4")]
	public enum TeleportType
	{
		[Token(Token = "0x4002704")]
		TeleportTypeUseTerrain,
		[Token(Token = "0x4002705")]
		TeleportTypeUseCollider,
		[Token(Token = "0x4002706")]
		TeleportTypeUseZeroY
	}

	[Token(Token = "0x4000872")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool teleportOnClick;

	[Token(Token = "0x4000873")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public TeleportType teleportType;

	[Token(Token = "0x170000D7")]
	private Transform reference
	{
		[Token(Token = "0x60009E7")]
		[Address(RVA = "0x876EC4", Offset = "0x876EC4", VA = "0x876EC4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60009E8")]
	[Address(RVA = "0x876F68", Offset = "0x876F68", VA = "0x876F68")]
	private void Start()
	{
	}

	[Token(Token = "0x60009E9")]
	[Address(RVA = "0x877280", Offset = "0x877280", VA = "0x877280")]
	private void DoClick(object sender, ClickedEventArgs e)
	{
	}

	[Token(Token = "0x60009EA")]
	[Address(RVA = "0x8776C0", Offset = "0x8776C0", VA = "0x8776C0")]
	public SteamVR_Teleporter()
	{
	}
}
[Token(Token = "0x200017D")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x63E048", Offset = "0x63E048")]
public class SteamVR_TestThrow : MonoBehaviour
{
	[Token(Token = "0x4000874")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject prefab;

	[Token(Token = "0x4000875")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Rigidbody attachPoint;

	[Token(Token = "0x4000876")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private SteamVR_TrackedObject trackedObj;

	[Token(Token = "0x4000877")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private FixedJoint joint;

	[Token(Token = "0x60009EB")]
	[Address(RVA = "0x8789C4", Offset = "0x8789C4", VA = "0x8789C4")]
	private void Awake()
	{
	}

	[Token(Token = "0x60009EC")]
	[Address(RVA = "0x878A1C", Offset = "0x878A1C", VA = "0x878A1C")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60009ED")]
	[Address(RVA = "0x878EE4", Offset = "0x878EE4", VA = "0x878EE4")]
	public SteamVR_TestThrow()
	{
	}
}
[Token(Token = "0x200017E")]
public class SteamVR_TestTrackedCamera : MonoBehaviour
{
	[Token(Token = "0x4000878")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material material;

	[Token(Token = "0x4000879")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform target;

	[Token(Token = "0x400087A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool undistorted;

	[Token(Token = "0x400087B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool cropped;

	[Token(Token = "0x60009EE")]
	[Address(RVA = "0x878EEC", Offset = "0x878EEC", VA = "0x878EEC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60009EF")]
	[Address(RVA = "0x878FEC", Offset = "0x878FEC", VA = "0x878FEC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60009F0")]
	[Address(RVA = "0x87910C", Offset = "0x87910C", VA = "0x87910C")]
	private void Update()
	{
	}

	[Token(Token = "0x60009F1")]
	[Address(RVA = "0x879534", Offset = "0x879534", VA = "0x879534")]
	public SteamVR_TestTrackedCamera()
	{
	}
}
[Token(Token = "0x200017F")]
public struct ClickedEventArgs
{
	[Token(Token = "0x400087C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint controllerIndex;

	[Token(Token = "0x400087D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public uint flags;

	[Token(Token = "0x400087E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float padX;

	[Token(Token = "0x400087F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float padY;
}
[Token(Token = "0x2000180")]
public delegate void ClickedEventHandler(object sender, ClickedEventArgs e);
[Token(Token = "0x2000181")]
public class SteamVR_TrackedController : MonoBehaviour
{
	[Token(Token = "0x4000880")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public uint controllerIndex;

	[Token(Token = "0x4000881")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public VRControllerState_t controllerState;

	[Token(Token = "0x4000882")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public bool triggerPressed;

	[Token(Token = "0x4000883")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
	public bool steamPressed;

	[Token(Token = "0x4000884")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x62")]
	public bool menuPressed;

	[Token(Token = "0x4000885")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x63")]
	public bool padPressed;

	[Token(Token = "0x4000886")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public bool padTouched;

	[Token(Token = "0x4000887")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
	public bool gripped;

	[Token(Token = "0x14000048")]
	public event ClickedEventHandler MenuButtonClicked
	{
		[Token(Token = "0x60009F6")]
		[Address(RVA = "0x87A380", Offset = "0x87A380", VA = "0x87A380")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x668D84", Offset = "0x668D84")]
		add
		{
		}
		[Token(Token = "0x60009F7")]
		[Address(RVA = "0x87A46C", Offset = "0x87A46C", VA = "0x87A46C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x668D94", Offset = "0x668D94")]
		remove
		{
		}
	}

	[Token(Token = "0x14000049")]
	public event ClickedEventHandler MenuButtonUnclicked
	{
		[Token(Token = "0x60009F8")]
		[Address(RVA = "0x87A558", Offset = "0x87A558", VA = "0x87A558")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x668DA4", Offset = "0x668DA4")]
		add
		{
		}
		[Token(Token = "0x60009F9")]
		[Address(RVA = "0x87A644", Offset = "0x87A644", VA = "0x87A644")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x668DB4", Offset = "0x668DB4")]
		remove
		{
		}
	}

	[Token(Token = "0x1400004A")]
	public event ClickedEventHandler TriggerClicked
	{
		[Token(Token = "0x60009FA")]
		[Address(RVA = "0x877194", Offset = "0x877194", VA = "0x877194")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x668DC4", Offset = "0x668DC4")]
		add
		{
		}
		[Token(Token = "0x60009FB")]
		[Address(RVA = "0x87A730", Offset = "0x87A730", VA = "0x87A730")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x668DD4", Offset = "0x668DD4")]
		remove
		{
		}
	}

	[Token(Token = "0x1400004B")]
	public event ClickedEventHandler TriggerUnclicked
	{
		[Token(Token = "0x60009FC")]
		[Address(RVA = "0x87A81C", Offset = "0x87A81C", VA = "0x87A81C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x668DE4", Offset = "0x668DE4")]
		add
		{
		}
		[Token(Token = "0x60009FD")]
		[Address(RVA = "0x87A908", Offset = "0x87A908", VA = "0x87A908")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x668DF4", Offset = "0x668DF4")]
		remove
		{
		}
	}

	[Token(Token = "0x1400004C")]
	public event ClickedEventHandler SteamClicked
	{
		[Token(Token = "0x60009FE")]
		[Address(RVA = "0x87A9F4", Offset = "0x87A9F4", VA = "0x87A9F4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x668E04", Offset = "0x668E04")]
		add
		{
		}
		[Token(Token = "0x60009FF")]
		[Address(RVA = "0x87AAE0", Offset = "0x87AAE0", VA = "0x87AAE0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x668E14", Offset = "0x668E14")]
		remove
		{
		}
	}

	[Token(Token = "0x1400004D")]
	public event ClickedEventHandler PadClicked
	{
		[Token(Token = "0x6000A00")]
		[Address(RVA = "0x87ABCC", Offset = "0x87ABCC", VA = "0x87ABCC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x668E24", Offset = "0x668E24")]
		add
		{
		}
		[Token(Token = "0x6000A01")]
		[Address(RVA = "0x87ACB8", Offset = "0x87ACB8", VA = "0x87ACB8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x668E34", Offset = "0x668E34")]
		remove
		{
		}
	}

	[Token(Token = "0x1400004E")]
	public event ClickedEventHandler PadUnclicked
	{
		[Token(Token = "0x6000A02")]
		[Address(RVA = "0x87ADA4", Offset = "0x87ADA4", VA = "0x87ADA4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x668E44", Offset = "0x668E44")]
		add
		{
		}
		[Token(Token = "0x6000A03")]
		[Address(RVA = "0x87AE90", Offset = "0x87AE90", VA = "0x87AE90")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x668E54", Offset = "0x668E54")]
		remove
		{
		}
	}

	[Token(Token = "0x1400004F")]
	public event ClickedEventHandler PadTouched
	{
		[Token(Token = "0x6000A04")]
		[Address(RVA = "0x87AF7C", Offset = "0x87AF7C", VA = "0x87AF7C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x668E64", Offset = "0x668E64")]
		add
		{
		}
		[Token(Token = "0x6000A05")]
		[Address(RVA = "0x87B068", Offset = "0x87B068", VA = "0x87B068")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x668E74", Offset = "0x668E74")]
		remove
		{
		}
	}

	[Token(Token = "0x14000050")]
	public event ClickedEventHandler PadUntouched
	{
		[Token(Token = "0x6000A06")]
		[Address(RVA = "0x87B154", Offset = "0x87B154", VA = "0x87B154")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x668E84", Offset = "0x668E84")]
		add
		{
		}
		[Token(Token = "0x6000A07")]
		[Address(RVA = "0x87B240", Offset = "0x87B240", VA = "0x87B240")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x668E94", Offset = "0x668E94")]
		remove
		{
		}
	}

	[Token(Token = "0x14000051")]
	public event ClickedEventHandler Gripped
	{
		[Token(Token = "0x6000A08")]
		[Address(RVA = "0x87B32C", Offset = "0x87B32C", VA = "0x87B32C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x668EA4", Offset = "0x668EA4")]
		add
		{
		}
		[Token(Token = "0x6000A09")]
		[Address(RVA = "0x87B418", Offset = "0x87B418", VA = "0x87B418")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x668EB4", Offset = "0x668EB4")]
		remove
		{
		}
	}

	[Token(Token = "0x14000052")]
	public event ClickedEventHandler Ungripped
	{
		[Token(Token = "0x6000A0A")]
		[Address(RVA = "0x87B504", Offset = "0x87B504", VA = "0x87B504")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x668EC4", Offset = "0x668EC4")]
		add
		{
		}
		[Token(Token = "0x6000A0B")]
		[Address(RVA = "0x87B5F0", Offset = "0x87B5F0", VA = "0x87B5F0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x668ED4", Offset = "0x668ED4")]
		remove
		{
		}
	}

	[Token(Token = "0x6000A0C")]
	[Address(RVA = "0x87B6DC", Offset = "0x87B6DC", VA = "0x87B6DC", Slot = "4")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x6000A0D")]
	[Address(RVA = "0x87B854", Offset = "0x87B854", VA = "0x87B854")]
	public void SetDeviceIndex(int index)
	{
	}

	[Token(Token = "0x6000A0E")]
	[Address(RVA = "0x87B85C", Offset = "0x87B85C", VA = "0x87B85C", Slot = "5")]
	public virtual void OnTriggerClicked(ClickedEventArgs e)
	{
	}

	[Token(Token = "0x6000A0F")]
	[Address(RVA = "0x87B888", Offset = "0x87B888", VA = "0x87B888", Slot = "6")]
	public virtual void OnTriggerUnclicked(ClickedEventArgs e)
	{
	}

	[Token(Token = "0x6000A10")]
	[Address(RVA = "0x87B8B4", Offset = "0x87B8B4", VA = "0x87B8B4", Slot = "7")]
	public virtual void OnMenuClicked(ClickedEventArgs e)
	{
	}

	[Token(Token = "0x6000A11")]
	[Address(RVA = "0x87B8E0", Offset = "0x87B8E0", VA = "0x87B8E0", Slot = "8")]
	public virtual void OnMenuUnclicked(ClickedEventArgs e)
	{
	}

	[Token(Token = "0x6000A12")]
	[Address(RVA = "0x87B90C", Offset = "0x87B90C", VA = "0x87B90C", Slot = "9")]
	public virtual void OnSteamClicked(ClickedEventArgs e)
	{
	}

	[Token(Token = "0x6000A13")]
	[Address(RVA = "0x87B938", Offset = "0x87B938", VA = "0x87B938", Slot = "10")]
	public virtual void OnPadClicked(ClickedEventArgs e)
	{
	}

	[Token(Token = "0x6000A14")]
	[Address(RVA = "0x87B964", Offset = "0x87B964", VA = "0x87B964", Slot = "11")]
	public virtual void OnPadUnclicked(ClickedEventArgs e)
	{
	}

	[Token(Token = "0x6000A15")]
	[Address(RVA = "0x87B990", Offset = "0x87B990", VA = "0x87B990", Slot = "12")]
	public virtual void OnPadTouched(ClickedEventArgs e)
	{
	}

	[Token(Token = "0x6000A16")]
	[Address(RVA = "0x87B9BC", Offset = "0x87B9BC", VA = "0x87B9BC", Slot = "13")]
	public virtual void OnPadUntouched(ClickedEventArgs e)
	{
	}

	[Token(Token = "0x6000A17")]
	[Address(RVA = "0x87B9E8", Offset = "0x87B9E8", VA = "0x87B9E8", Slot = "14")]
	public virtual void OnGripped(ClickedEventArgs e)
	{
	}

	[Token(Token = "0x6000A18")]
	[Address(RVA = "0x87BA14", Offset = "0x87BA14", VA = "0x87BA14", Slot = "15")]
	public virtual void OnUngripped(ClickedEventArgs e)
	{
	}

	[Token(Token = "0x6000A19")]
	[Address(RVA = "0x87BA40", Offset = "0x87BA40", VA = "0x87BA40", Slot = "16")]
	protected virtual void Update()
	{
	}

	[Token(Token = "0x6000A1A")]
	[Address(RVA = "0x87BD30", Offset = "0x87BD30", VA = "0x87BD30")]
	public SteamVR_TrackedController()
	{
	}
}
[Token(Token = "0x2000182")]
public class SteamVR : IDisposable
{
	[Token(Token = "0x4000893")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool _enabled;

	[Token(Token = "0x4000894")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static SteamVR _instance;

	[Token(Token = "0x4000895")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64F2B0", Offset = "0x64F2B0")]
	private CVRSystem <hmd>k__BackingField;

	[Token(Token = "0x4000896")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64F2C0", Offset = "0x64F2C0")]
	private CVRCompositor <compositor>k__BackingField;

	[Token(Token = "0x4000897")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64F2D0", Offset = "0x64F2D0")]
	private CVROverlay <overlay>k__BackingField;

	[Token(Token = "0x4000898")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64F2E0", Offset = "0x64F2E0")]
	private static bool <initializing>k__BackingField;

	[Token(Token = "0x4000899")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64F2F0", Offset = "0x64F2F0")]
	private static bool <calibrating>k__BackingField;

	[Token(Token = "0x400089A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64F300", Offset = "0x64F300")]
	private static bool <outOfRange>k__BackingField;

	[Token(Token = "0x400089B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static bool[] connected;

	[Token(Token = "0x400089C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64F310", Offset = "0x64F310")]
	private float <sceneWidth>k__BackingField;

	[Token(Token = "0x400089D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64F320", Offset = "0x64F320")]
	private float <sceneHeight>k__BackingField;

	[Token(Token = "0x400089E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64F330", Offset = "0x64F330")]
	private float <aspect>k__BackingField;

	[Token(Token = "0x400089F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64F340", Offset = "0x64F340")]
	private float <fieldOfView>k__BackingField;

	[Token(Token = "0x40008A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64F350", Offset = "0x64F350")]
	private Vector2 <tanHalfFov>k__BackingField;

	[Token(Token = "0x40008A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64F360", Offset = "0x64F360")]
	private VRTextureBounds_t[] <textureBounds>k__BackingField;

	[Token(Token = "0x40008A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64F370", Offset = "0x64F370")]
	private SteamVR_Utils.RigidTransform[] <eyes>k__BackingField;

	[Token(Token = "0x40008A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ETextureType textureType;

	[Token(Token = "0x170000D8")]
	public static bool active
	{
		[Token(Token = "0x6000A1B")]
		[Address(RVA = "0x91A1D0", Offset = "0x91A1D0", VA = "0x91A1D0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000D9")]
	public static bool enabled
	{
		[Token(Token = "0x6000A1C")]
		[Address(RVA = "0x91A240", Offset = "0x91A240", VA = "0x91A240")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000A1D")]
		[Address(RVA = "0x91A2DC", Offset = "0x91A2DC", VA = "0x91A2DC")]
		set
		{
		}
	}

	[Token(Token = "0x170000DA")]
	public static SteamVR instance
	{
		[Token(Token = "0x6000A1E")]
		[Address(RVA = "0x91A428", Offset = "0x91A428", VA = "0x91A428")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000DB")]
	public static bool usingNativeSupport
	{
		[Token(Token = "0x6000A1F")]
		[Address(RVA = "0x91A764", Offset = "0x91A764", VA = "0x91A764")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000DC")]
	public CVRSystem hmd
	{
		[Token(Token = "0x6000A22")]
		[Address(RVA = "0x91B43C", Offset = "0x91B43C", VA = "0x91B43C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x668EE4", Offset = "0x668EE4")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000A23")]
		[Address(RVA = "0x91B444", Offset = "0x91B444", VA = "0x91B444")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x668EF4", Offset = "0x668EF4")]
		private set
		{
		}
	}

	[Token(Token = "0x170000DD")]
	public CVRCompositor compositor
	{
		[Token(Token = "0x6000A24")]
		[Address(RVA = "0x91B44C", Offset = "0x91B44C", VA = "0x91B44C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x668F04", Offset = "0x668F04")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000A25")]
		[Address(RVA = "0x91B454", Offset = "0x91B454", VA = "0x91B454")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x668F14", Offset = "0x668F14")]
		private set
		{
		}
	}

	[Token(Token = "0x170000DE")]
	public CVROverlay overlay
	{
		[Token(Token = "0x6000A26")]
		[Address(RVA = "0x91B45C", Offset = "0x91B45C", VA = "0x91B45C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x668F24", Offset = "0x668F24")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000A27")]
		[Address(RVA = "0x91B464", Offset = "0x91B464", VA = "0x91B464")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x668F34", Offset = "0x668F34")]
		private set
		{
		}
	}

	[Token(Token = "0x170000DF")]
	public static bool initializing
	{
		[Token(Token = "0x6000A28")]
		[Address(RVA = "0x91B46C", Offset = "0x91B46C", VA = "0x91B46C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x668F44", Offset = "0x668F44")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000A29")]
		[Address(RVA = "0x91B4D4", Offset = "0x91B4D4", VA = "0x91B4D4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x668F54", Offset = "0x668F54")]
		private set
		{
		}
	}

	[Token(Token = "0x170000E0")]
	public static bool calibrating
	{
		[Token(Token = "0x6000A2A")]
		[Address(RVA = "0x91B544", Offset = "0x91B544", VA = "0x91B544")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x668F64", Offset = "0x668F64")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000A2B")]
		[Address(RVA = "0x91B5AC", Offset = "0x91B5AC", VA = "0x91B5AC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x668F74", Offset = "0x668F74")]
		private set
		{
		}
	}

	[Token(Token = "0x170000E1")]
	public static bool outOfRange
	{
		[Token(Token = "0x6000A2C")]
		[Address(RVA = "0x91B61C", Offset = "0x91B61C", VA = "0x91B61C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x668F84", Offset = "0x668F84")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000A2D")]
		[Address(RVA = "0x91B684", Offset = "0x91B684", VA = "0x91B684")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x668F94", Offset = "0x668F94")]
		private set
		{
		}
	}

	[Token(Token = "0x170000E2")]
	public float sceneWidth
	{
		[Token(Token = "0x6000A2E")]
		[Address(RVA = "0x91B6F4", Offset = "0x91B6F4", VA = "0x91B6F4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x668FA4", Offset = "0x668FA4")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000A2F")]
		[Address(RVA = "0x91B6FC", Offset = "0x91B6FC", VA = "0x91B6FC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x668FB4", Offset = "0x668FB4")]
		private set
		{
		}
	}

	[Token(Token = "0x170000E3")]
	public float sceneHeight
	{
		[Token(Token = "0x6000A30")]
		[Address(RVA = "0x91B704", Offset = "0x91B704", VA = "0x91B704")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x668FC4", Offset = "0x668FC4")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000A31")]
		[Address(RVA = "0x91B70C", Offset = "0x91B70C", VA = "0x91B70C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x668FD4", Offset = "0x668FD4")]
		private set
		{
		}
	}

	[Token(Token = "0x170000E4")]
	public float aspect
	{
		[Token(Token = "0x6000A32")]
		[Address(RVA = "0x91B714", Offset = "0x91B714", VA = "0x91B714")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x668FE4", Offset = "0x668FE4")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000A33")]
		[Address(RVA = "0x91B71C", Offset = "0x91B71C", VA = "0x91B71C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x668FF4", Offset = "0x668FF4")]
		private set
		{
		}
	}

	[Token(Token = "0x170000E5")]
	public float fieldOfView
	{
		[Token(Token = "0x6000A34")]
		[Address(RVA = "0x91B724", Offset = "0x91B724", VA = "0x91B724")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x669004", Offset = "0x669004")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000A35")]
		[Address(RVA = "0x91B72C", Offset = "0x91B72C", VA = "0x91B72C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x669014", Offset = "0x669014")]
		private set
		{
		}
	}

	[Token(Token = "0x170000E6")]
	public Vector2 tanHalfFov
	{
		[Token(Token = "0x6000A36")]
		[Address(RVA = "0x91B734", Offset = "0x91B734", VA = "0x91B734")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x669024", Offset = "0x669024")]
		get
		{
			return default(Vector2);
		}
		[Token(Token = "0x6000A37")]
		[Address(RVA = "0x91B73C", Offset = "0x91B73C", VA = "0x91B73C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x669034", Offset = "0x669034")]
		private set
		{
		}
	}

	[Token(Token = "0x170000E7")]
	public VRTextureBounds_t[] textureBounds
	{
		[Token(Token = "0x6000A38")]
		[Address(RVA = "0x91B744", Offset = "0x91B744", VA = "0x91B744")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x669044", Offset = "0x669044")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000A39")]
		[Address(RVA = "0x91B74C", Offset = "0x91B74C", VA = "0x91B74C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x669054", Offset = "0x669054")]
		private set
		{
		}
	}

	[Token(Token = "0x170000E8")]
	public SteamVR_Utils.RigidTransform[] eyes
	{
		[Token(Token = "0x6000A3A")]
		[Address(RVA = "0x91B754", Offset = "0x91B754", VA = "0x91B754")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x669064", Offset = "0x669064")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000A3B")]
		[Address(RVA = "0x91B75C", Offset = "0x91B75C", VA = "0x91B75C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x669074", Offset = "0x669074")]
		private set
		{
		}
	}

	[Token(Token = "0x170000E9")]
	public string hmd_TrackingSystemName
	{
		[Token(Token = "0x6000A3C")]
		[Address(RVA = "0x91B764", Offset = "0x91B764", VA = "0x91B764")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000EA")]
	public string hmd_ModelNumber
	{
		[Token(Token = "0x6000A3D")]
		[Address(RVA = "0x91B8E8", Offset = "0x91B8E8", VA = "0x91B8E8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000EB")]
	public string hmd_SerialNumber
	{
		[Token(Token = "0x6000A3E")]
		[Address(RVA = "0x91B8F4", Offset = "0x91B8F4", VA = "0x91B8F4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000EC")]
	public float hmd_SecondsFromVsyncToPhotons
	{
		[Token(Token = "0x6000A3F")]
		[Address(RVA = "0x91B900", Offset = "0x91B900", VA = "0x91B900")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170000ED")]
	public float hmd_DisplayFrequency
	{
		[Token(Token = "0x6000A40")]
		[Address(RVA = "0x91B960", Offset = "0x91B960", VA = "0x91B960")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x6000A20")]
	[Address(RVA = "0x91A540", Offset = "0x91A540", VA = "0x91A540")]
	private static SteamVR CreateInstance()
	{
		return null;
	}

	[Token(Token = "0x6000A21")]
	[Address(RVA = "0x91A7D0", Offset = "0x91A7D0", VA = "0x91A7D0")]
	private static void ReportError(EVRInitError error)
	{
	}

	[Token(Token = "0x6000A41")]
	[Address(RVA = "0x91B96C", Offset = "0x91B96C", VA = "0x91B96C")]
	public string GetTrackedDeviceString(uint deviceId)
	{
		return null;
	}

	[Token(Token = "0x6000A42")]
	[Address(RVA = "0x91B770", Offset = "0x91B770", VA = "0x91B770")]
	public string GetStringProperty(ETrackedDeviceProperty prop, uint deviceId = 0u)
	{
		return null;
	}

	[Token(Token = "0x6000A43")]
	[Address(RVA = "0x91B90C", Offset = "0x91B90C", VA = "0x91B90C")]
	public float GetFloatProperty(ETrackedDeviceProperty prop, uint deviceId = 0u)
	{
		return default(float);
	}

	[Token(Token = "0x6000A44")]
	[Address(RVA = "0x91BA70", Offset = "0x91BA70", VA = "0x91BA70")]
	private void OnInitializing(bool initializing)
	{
	}

	[Token(Token = "0x6000A45")]
	[Address(RVA = "0x91BAD4", Offset = "0x91BAD4", VA = "0x91BAD4")]
	private void OnCalibrating(bool calibrating)
	{
	}

	[Token(Token = "0x6000A46")]
	[Address(RVA = "0x91BB38", Offset = "0x91BB38", VA = "0x91BB38")]
	private void OnOutOfRange(bool outOfRange)
	{
	}

	[Token(Token = "0x6000A47")]
	[Address(RVA = "0x91BB9C", Offset = "0x91BB9C", VA = "0x91BB9C")]
	private void OnDeviceConnected(int i, bool connected)
	{
	}

	[Token(Token = "0x6000A48")]
	[Address(RVA = "0x91BC4C", Offset = "0x91BC4C", VA = "0x91BC4C")]
	private void OnNewPoses(TrackedDevicePose_t[] poses)
	{
	}

	[Token(Token = "0x6000A49")]
	[Address(RVA = "0x91A924", Offset = "0x91A924", VA = "0x91A924")]
	private SteamVR()
	{
	}

	[Token(Token = "0x6000A4A")]
	[Address(RVA = "0x91C0D0", Offset = "0x91C0D0", VA = "0x91C0D0", Slot = "1")]
	~SteamVR()
	{
	}

	[Token(Token = "0x6000A4B")]
	[Address(RVA = "0x91C3B0", Offset = "0x91C3B0", VA = "0x91C3B0", Slot = "4")]
	public void Dispose()
	{
	}

	[Token(Token = "0x6000A4C")]
	[Address(RVA = "0x91C148", Offset = "0x91C148", VA = "0x91C148")]
	private void Dispose(bool disposing)
	{
	}

	[Token(Token = "0x6000A4D")]
	[Address(RVA = "0x91A37C", Offset = "0x91A37C", VA = "0x91A37C")]
	public static void SafeDispose()
	{
	}
}
[Token(Token = "0x2000183")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x63E0AC", Offset = "0x63E0AC")]
public class SteamVR_Camera : MonoBehaviour
{
	[Token(Token = "0x40008A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform _head;

	[Token(Token = "0x40008A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64F390", Offset = "0x64F390")]
	private Camera <camera>k__BackingField;

	[Token(Token = "0x40008A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Transform _ears;

	[Token(Token = "0x40008A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool wireframe;

	[Token(Token = "0x40008A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Hashtable values;

	[Token(Token = "0x40008A9")]
	private const string eyeSuffix = " (eye)";

	[Token(Token = "0x40008AA")]
	private const string earsSuffix = " (ears)";

	[Token(Token = "0x40008AB")]
	private const string headSuffix = " (head)";

	[Token(Token = "0x40008AC")]
	private const string originSuffix = " (origin)";

	[Token(Token = "0x170000EE")]
	public Transform head
	{
		[Token(Token = "0x6000A4F")]
		[Address(RVA = "0x91C498", Offset = "0x91C498", VA = "0x91C498")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000EF")]
	public Transform offset
	{
		[Token(Token = "0x6000A50")]
		[Address(RVA = "0x91C4A0", Offset = "0x91C4A0", VA = "0x91C4A0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000F0")]
	public Transform origin
	{
		[Token(Token = "0x6000A51")]
		[Address(RVA = "0x91C4A8", Offset = "0x91C4A8", VA = "0x91C4A8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000F1")]
	public Camera camera
	{
		[Token(Token = "0x6000A52")]
		[Address(RVA = "0x91C4D8", Offset = "0x91C4D8", VA = "0x91C4D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x669084", Offset = "0x669084")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000A53")]
		[Address(RVA = "0x91C4E0", Offset = "0x91C4E0", VA = "0x91C4E0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x669094", Offset = "0x669094")]
		private set
		{
		}
	}

	[Token(Token = "0x170000F2")]
	public Transform ears
	{
		[Token(Token = "0x6000A54")]
		[Address(RVA = "0x91C4E8", Offset = "0x91C4E8", VA = "0x91C4E8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000F3")]
	public static float sceneResolutionScale
	{
		[Token(Token = "0x6000A56")]
		[Address(RVA = "0x91C594", Offset = "0x91C594", VA = "0x91C594")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000A57")]
		[Address(RVA = "0x91C59C", Offset = "0x91C59C", VA = "0x91C59C")]
		set
		{
		}
	}

	[Token(Token = "0x170000F4")]
	public string baseName
	{
		[Token(Token = "0x6000A5C")]
		[Address(RVA = "0x91DC2C", Offset = "0x91DC2C", VA = "0x91DC2C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000A55")]
	[Address(RVA = "0x91C4F0", Offset = "0x91C4F0", VA = "0x91C4F0")]
	public Ray GetRay()
	{
		return default(Ray);
	}

	[Token(Token = "0x6000A58")]
	[Address(RVA = "0x91C5A4", Offset = "0x91C5A4", VA = "0x91C5A4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000A59")]
	[Address(RVA = "0x91C65C", Offset = "0x91C65C", VA = "0x91C65C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000A5A")]
	[Address(RVA = "0x91D52C", Offset = "0x91D52C", VA = "0x91D52C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000A5B")]
	[Address(RVA = "0x91D588", Offset = "0x91D588", VA = "0x91D588")]
	public void ForceLast()
	{
	}

	[Token(Token = "0x6000A5D")]
	[Address(RVA = "0x91CAB8", Offset = "0x91CAB8", VA = "0x91CAB8")]
	public void Expand()
	{
	}

	[Token(Token = "0x6000A5E")]
	[Address(RVA = "0x91DD38", Offset = "0x91DD38", VA = "0x91DD38")]
	public void Collapse()
	{
	}

	[Token(Token = "0x6000A5F")]
	[Address(RVA = "0x91E23C", Offset = "0x91E23C", VA = "0x91E23C")]
	public SteamVR_Camera()
	{
	}
}
[Token(Token = "0x2000184")]
[ExecuteInEditMode]
public class SteamVR_CameraFlip : MonoBehaviour
{
	[Token(Token = "0x6000A60")]
	[Address(RVA = "0x91E244", Offset = "0x91E244", VA = "0x91E244")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000A61")]
	[Address(RVA = "0x91E2E0", Offset = "0x91E2E0", VA = "0x91E2E0")]
	public SteamVR_CameraFlip()
	{
	}
}
[Token(Token = "0x2000185")]
[ExecuteInEditMode]
public class SteamVR_CameraMask : MonoBehaviour
{
	[Token(Token = "0x6000A62")]
	[Address(RVA = "0x91E2E8", Offset = "0x91E2E8", VA = "0x91E2E8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000A63")]
	[Address(RVA = "0x91E384", Offset = "0x91E384", VA = "0x91E384")]
	public SteamVR_CameraMask()
	{
	}
}
[Token(Token = "0x2000186")]
public class SteamVR_Controller
{
	[Token(Token = "0x20005F5")]
	public class ButtonMask
	{
		[Token(Token = "0x4002707")]
		public const ulong System = 1uL;

		[Token(Token = "0x4002708")]
		public const ulong ApplicationMenu = 2uL;

		[Token(Token = "0x4002709")]
		public const ulong Grip = 4uL;

		[Token(Token = "0x400270A")]
		public const ulong Axis0 = 4294967296uL;

		[Token(Token = "0x400270B")]
		public const ulong Axis1 = 8589934592uL;

		[Token(Token = "0x400270C")]
		public const ulong Axis2 = 17179869184uL;

		[Token(Token = "0x400270D")]
		public const ulong Axis3 = 34359738368uL;

		[Token(Token = "0x400270E")]
		public const ulong Axis4 = 68719476736uL;

		[Token(Token = "0x400270F")]
		public const ulong Touchpad = 4294967296uL;

		[Token(Token = "0x4002710")]
		public const ulong Trigger = 8589934592uL;

		[Token(Token = "0x6002B24")]
		[Address(RVA = "0x91EB20", Offset = "0x91EB20", VA = "0x91EB20")]
		public ButtonMask()
		{
		}
	}

	[Token(Token = "0x20005F6")]
	public class Device
	{
		[Token(Token = "0x4002711")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x664DA8", Offset = "0x664DA8")]
		private uint <index>k__BackingField;

		[Token(Token = "0x4002712")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x664DB8", Offset = "0x664DB8")]
		private bool <valid>k__BackingField;

		[Token(Token = "0x4002713")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private VRControllerState_t state;

		[Token(Token = "0x4002714")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private VRControllerState_t prevState;

		[Token(Token = "0x4002715")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private TrackedDevicePose_t pose;

		[Token(Token = "0x4002716")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private int prevFrameCount;

		[Token(Token = "0x4002717")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		public float hairTriggerDelta;

		[Token(Token = "0x4002718")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private float hairTriggerLimit;

		[Token(Token = "0x4002719")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		private bool hairTriggerState;

		[Token(Token = "0x400271A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF5")]
		private bool hairTriggerPrevState;

		[Token(Token = "0x17000284")]
		public uint index
		{
			[Token(Token = "0x6002B26")]
			[Address(RVA = "0x91EB30", Offset = "0x91EB30", VA = "0x91EB30")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6711C4", Offset = "0x6711C4")]
			get
			{
				return default(uint);
			}
			[Token(Token = "0x6002B27")]
			[Address(RVA = "0x91EB28", Offset = "0x91EB28", VA = "0x91EB28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6711D4", Offset = "0x6711D4")]
			private set
			{
			}
		}

		[Token(Token = "0x17000285")]
		public bool valid
		{
			[Token(Token = "0x6002B28")]
			[Address(RVA = "0x91EB38", Offset = "0x91EB38", VA = "0x91EB38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6711E4", Offset = "0x6711E4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002B29")]
			[Address(RVA = "0x91EB40", Offset = "0x91EB40", VA = "0x91EB40")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6711F4", Offset = "0x6711F4")]
			private set
			{
			}
		}

		[Token(Token = "0x17000286")]
		public bool connected
		{
			[Token(Token = "0x6002B2A")]
			[Address(RVA = "0x91EAF4", Offset = "0x91EAF4", VA = "0x91EAF4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000287")]
		public bool hasTracking
		{
			[Token(Token = "0x6002B2B")]
			[Address(RVA = "0x91EB4C", Offset = "0x91EB4C", VA = "0x91EB4C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000288")]
		public bool outOfRange
		{
			[Token(Token = "0x6002B2C")]
			[Address(RVA = "0x91EB70", Offset = "0x91EB70", VA = "0x91EB70")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000289")]
		public bool calibrating
		{
			[Token(Token = "0x6002B2D")]
			[Address(RVA = "0x91EBA8", Offset = "0x91EBA8", VA = "0x91EBA8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700028A")]
		public bool uninitialized
		{
			[Token(Token = "0x6002B2E")]
			[Address(RVA = "0x91EBD8", Offset = "0x91EBD8", VA = "0x91EBD8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700028B")]
		public SteamVR_Utils.RigidTransform transform
		{
			[Token(Token = "0x6002B2F")]
			[Address(RVA = "0x91EA94", Offset = "0x91EA94", VA = "0x91EA94")]
			get
			{
				return default(SteamVR_Utils.RigidTransform);
			}
		}

		[Token(Token = "0x1700028C")]
		public Vector3 velocity
		{
			[Token(Token = "0x6002B30")]
			[Address(RVA = "0x91EC04", Offset = "0x91EC04", VA = "0x91EC04")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x1700028D")]
		public Vector3 angularVelocity
		{
			[Token(Token = "0x6002B31")]
			[Address(RVA = "0x91EC54", Offset = "0x91EC54", VA = "0x91EC54")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x6002B25")]
		[Address(RVA = "0x91E520", Offset = "0x91E520", VA = "0x91E520")]
		public Device(uint i)
		{
		}

		[Token(Token = "0x6002B32")]
		[Address(RVA = "0x91ECA8", Offset = "0x91ECA8", VA = "0x91ECA8")]
		public VRControllerState_t GetState()
		{
			return default(VRControllerState_t);
		}

		[Token(Token = "0x6002B33")]
		[Address(RVA = "0x91ECEC", Offset = "0x91ECEC", VA = "0x91ECEC")]
		public VRControllerState_t GetPrevState()
		{
			return default(VRControllerState_t);
		}

		[Token(Token = "0x6002B34")]
		[Address(RVA = "0x91ED30", Offset = "0x91ED30", VA = "0x91ED30")]
		public TrackedDevicePose_t GetPose()
		{
			return default(TrackedDevicePose_t);
		}

		[Token(Token = "0x6002B35")]
		[Address(RVA = "0x91E59C", Offset = "0x91E59C", VA = "0x91E59C")]
		public void Update()
		{
		}

		[Token(Token = "0x6002B36")]
		[Address(RVA = "0x91EF98", Offset = "0x91EF98", VA = "0x91EF98")]
		public bool GetPress(ulong buttonMask)
		{
			return default(bool);
		}

		[Token(Token = "0x6002B37")]
		[Address(RVA = "0x91EFC8", Offset = "0x91EFC8", VA = "0x91EFC8")]
		public bool GetPressDown(ulong buttonMask)
		{
			return default(bool);
		}

		[Token(Token = "0x6002B38")]
		[Address(RVA = "0x91F00C", Offset = "0x91F00C", VA = "0x91F00C")]
		public bool GetPressUp(ulong buttonMask)
		{
			return default(bool);
		}

		[Token(Token = "0x6002B39")]
		[Address(RVA = "0x91F050", Offset = "0x91F050", VA = "0x91F050")]
		public bool GetPress(EVRButtonId buttonId)
		{
			return default(bool);
		}

		[Token(Token = "0x6002B3A")]
		[Address(RVA = "0x91F088", Offset = "0x91F088", VA = "0x91F088")]
		public bool GetPressDown(EVRButtonId buttonId)
		{
			return default(bool);
		}

		[Token(Token = "0x6002B3B")]
		[Address(RVA = "0x91F0D4", Offset = "0x91F0D4", VA = "0x91F0D4")]
		public bool GetPressUp(EVRButtonId buttonId)
		{
			return default(bool);
		}

		[Token(Token = "0x6002B3C")]
		[Address(RVA = "0x91F120", Offset = "0x91F120", VA = "0x91F120")]
		public bool GetTouch(ulong buttonMask)
		{
			return default(bool);
		}

		[Token(Token = "0x6002B3D")]
		[Address(RVA = "0x91F150", Offset = "0x91F150", VA = "0x91F150")]
		public bool GetTouchDown(ulong buttonMask)
		{
			return default(bool);
		}

		[Token(Token = "0x6002B3E")]
		[Address(RVA = "0x91F194", Offset = "0x91F194", VA = "0x91F194")]
		public bool GetTouchUp(ulong buttonMask)
		{
			return default(bool);
		}

		[Token(Token = "0x6002B3F")]
		[Address(RVA = "0x91F1D8", Offset = "0x91F1D8", VA = "0x91F1D8")]
		public bool GetTouch(EVRButtonId buttonId)
		{
			return default(bool);
		}

		[Token(Token = "0x6002B40")]
		[Address(RVA = "0x91F210", Offset = "0x91F210", VA = "0x91F210")]
		public bool GetTouchDown(EVRButtonId buttonId)
		{
			return default(bool);
		}

		[Token(Token = "0x6002B41")]
		[Address(RVA = "0x91F25C", Offset = "0x91F25C", VA = "0x91F25C")]
		public bool GetTouchUp(EVRButtonId buttonId)
		{
			return default(bool);
		}

		[Token(Token = "0x6002B42")]
		[Address(RVA = "0x91F2A8", Offset = "0x91F2A8", VA = "0x91F2A8")]
		public Vector2 GetAxis(EVRButtonId buttonId = EVRButtonId.k_EButton_Axis0)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6002B43")]
		[Address(RVA = "0x91F384", Offset = "0x91F384", VA = "0x91F384")]
		public void TriggerHapticPulse(ushort durationMicroSec = 500, EVRButtonId buttonId = EVRButtonId.k_EButton_Axis0)
		{
		}

		[Token(Token = "0x6002B44")]
		[Address(RVA = "0x91EE98", Offset = "0x91EE98", VA = "0x91EE98")]
		private void UpdateHairTrigger()
		{
		}

		[Token(Token = "0x6002B45")]
		[Address(RVA = "0x91F420", Offset = "0x91F420", VA = "0x91F420")]
		public bool GetHairTrigger()
		{
			return default(bool);
		}

		[Token(Token = "0x6002B46")]
		[Address(RVA = "0x91F444", Offset = "0x91F444", VA = "0x91F444")]
		public bool GetHairTriggerDown()
		{
			return default(bool);
		}

		[Token(Token = "0x6002B47")]
		[Address(RVA = "0x91F480", Offset = "0x91F480", VA = "0x91F480")]
		public bool GetHairTriggerUp()
		{
			return default(bool);
		}
	}

	[Token(Token = "0x20005F7")]
	public enum DeviceRelation
	{
		[Token(Token = "0x400271C")]
		First,
		[Token(Token = "0x400271D")]
		Leftmost,
		[Token(Token = "0x400271E")]
		Rightmost,
		[Token(Token = "0x400271F")]
		FarthestLeft,
		[Token(Token = "0x4002720")]
		FarthestRight
	}

	[Token(Token = "0x40008AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Device[] devices;

	[Token(Token = "0x6000A64")]
	[Address(RVA = "0x91E38C", Offset = "0x91E38C", VA = "0x91E38C")]
	public static Device Input(int deviceIndex)
	{
		return null;
	}

	[Token(Token = "0x6000A65")]
	[Address(RVA = "0x91E558", Offset = "0x91E558", VA = "0x91E558")]
	public static void Update()
	{
	}

	[Token(Token = "0x6000A66")]
	[Address(RVA = "0x91E724", Offset = "0x91E724", VA = "0x91E724")]
	public static int GetDeviceIndex(DeviceRelation relation, ETrackedDeviceClass deviceClass = ETrackedDeviceClass.Controller, int relativeTo = 0)
	{
		return default(int);
	}

	[Token(Token = "0x6000A67")]
	[Address(RVA = "0x91EB18", Offset = "0x91EB18", VA = "0x91EB18")]
	public SteamVR_Controller()
	{
	}
}
[Token(Token = "0x2000187")]
public class SteamVR_ControllerManager : MonoBehaviour
{
	[Token(Token = "0x40008AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject left;

	[Token(Token = "0x40008AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject right;

	[Token(Token = "0x40008B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64F3B0", Offset = "0x64F3B0")]
	public GameObject[] objects;

	[Token(Token = "0x40008B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64F3E8", Offset = "0x64F3E8")]
	public bool assignAllBeforeIdentified;

	[Token(Token = "0x40008B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private uint[] indices;

	[Token(Token = "0x40008B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool[] connected;

	[Token(Token = "0x40008B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private uint leftIndex;

	[Token(Token = "0x40008B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private uint rightIndex;

	[Token(Token = "0x40008B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private SteamVR_Events.Action inputFocusAction;

	[Token(Token = "0x40008B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private SteamVR_Events.Action deviceConnectedAction;

	[Token(Token = "0x40008B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private SteamVR_Events.Action trackedDeviceRoleChangedAction;

	[Token(Token = "0x40008B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string hiddenPrefix;

	[Token(Token = "0x40008BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static string hiddenPostfix;

	[Token(Token = "0x40008BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static string[] labels;

	[Token(Token = "0x6000A68")]
	[Address(RVA = "0x91F4BC", Offset = "0x91F4BC", VA = "0x91F4BC")]
	private void SetUniqueObject(GameObject o, int index)
	{
	}

	[Token(Token = "0x6000A69")]
	[Address(RVA = "0x91F5EC", Offset = "0x91F5EC", VA = "0x91F5EC")]
	public void UpdateTargets()
	{
	}

	[Token(Token = "0x6000A6A")]
	[Address(RVA = "0x91F764", Offset = "0x91F764", VA = "0x91F764")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000A6B")]
	[Address(RVA = "0x91F768", Offset = "0x91F768", VA = "0x91F768")]
	private SteamVR_ControllerManager()
	{
	}

	[Token(Token = "0x6000A6C")]
	[Address(RVA = "0x91FAA8", Offset = "0x91FAA8", VA = "0x91FAA8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000A6D")]
	[Address(RVA = "0x9201E4", Offset = "0x9201E4", VA = "0x9201E4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000A6E")]
	[Address(RVA = "0x920268", Offset = "0x920268", VA = "0x920268")]
	private void OnInputFocus(bool hasFocus)
	{
	}

	[Token(Token = "0x6000A6F")]
	[Address(RVA = "0x9206DC", Offset = "0x9206DC", VA = "0x9206DC")]
	private void HideObject(Transform t, string name)
	{
	}

	[Token(Token = "0x6000A70")]
	[Address(RVA = "0x9205A8", Offset = "0x9205A8", VA = "0x9205A8")]
	private void ShowObject(Transform t, string name)
	{
	}

	[Token(Token = "0x6000A71")]
	[Address(RVA = "0x9208AC", Offset = "0x9208AC", VA = "0x9208AC")]
	private void SetTrackedDeviceIndex(int objectIndex, uint trackedDeviceIndex)
	{
	}

	[Token(Token = "0x6000A72")]
	[Address(RVA = "0x920BC4", Offset = "0x920BC4", VA = "0x920BC4")]
	private void OnTrackedDeviceRoleChanged(VREvent_t vrEvent)
	{
	}

	[Token(Token = "0x6000A73")]
	[Address(RVA = "0x920070", Offset = "0x920070", VA = "0x920070")]
	private void OnDeviceConnected(int index, bool connected)
	{
	}

	[Token(Token = "0x6000A74")]
	[Address(RVA = "0x91FD0C", Offset = "0x91FD0C", VA = "0x91FD0C")]
	public void Refresh()
	{
	}
}
[Token(Token = "0x2000188")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x63E130", Offset = "0x63E130")]
public class SteamVR_Ears : MonoBehaviour
{
	[Token(Token = "0x40008BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SteamVR_Camera vrcam;

	[Token(Token = "0x40008BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool usingSpeakers;

	[Token(Token = "0x40008BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Quaternion offset;

	[Token(Token = "0x6000A76")]
	[Address(RVA = "0x920D14", Offset = "0x920D14", VA = "0x920D14")]
	private void OnNewPosesApplied()
	{
	}

	[Token(Token = "0x6000A77")]
	[Address(RVA = "0x920EB4", Offset = "0x920EB4", VA = "0x920EB4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000A78")]
	[Address(RVA = "0x921060", Offset = "0x921060", VA = "0x921060")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000A79")]
	[Address(RVA = "0x921138", Offset = "0x921138", VA = "0x921138")]
	public SteamVR_Ears()
	{
	}
}
[Token(Token = "0x2000189")]
public static class SteamVR_Events
{
	[Token(Token = "0x20005F8")]
	public abstract class Action
	{
		[Token(Token = "0x1700028E")]
		public bool enabled
		{
			[Token(Token = "0x6002B49")]
			[Address(RVA = "0x9201D4", Offset = "0x9201D4", VA = "0x9201D4")]
			set
			{
			}
		}

		[Token(Token = "0x6002B48")]
		public abstract void Enable(bool enabled);

		[Token(Token = "0x6002B4A")]
		[Address(RVA = "0x921CEC", Offset = "0x921CEC", VA = "0x921CEC")]
		protected Action()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20005F9")]
	public class ActionNoArgs : Action
	{
		[Token(Token = "0x4002721")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Event _event;

		[Token(Token = "0x4002722")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private UnityAction action;

		[Token(Token = "0x6002B4B")]
		[Address(RVA = "0x921320", Offset = "0x921320", VA = "0x921320")]
		public ActionNoArgs(Event _event, UnityAction action)
		{
		}

		[Token(Token = "0x6002B4C")]
		[Address(RVA = "0x921CF4", Offset = "0x921CF4", VA = "0x921CF4", Slot = "4")]
		public override void Enable(bool enabled)
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20005FA")]
	public class Action<T> : Action
	{
		[Token(Token = "0x4002723")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Event<T> _event;

		[Token(Token = "0x4002724")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private UnityAction<T> action;

		[Token(Token = "0x6002B4D")]
		public Action(Event<T> _event, UnityAction<T> action)
		{
		}

		[Token(Token = "0x6002B4E")]
		public override void Enable(bool enabled)
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20005FB")]
	public class Action<T0, T1> : Action
	{
		[Token(Token = "0x4002725")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Event<T0, T1> _event;

		[Token(Token = "0x4002726")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private UnityAction<T0, T1> action;

		[Token(Token = "0x6002B4F")]
		public Action(Event<T0, T1> _event, UnityAction<T0, T1> action)
		{
		}

		[Token(Token = "0x6002B50")]
		public override void Enable(bool enabled)
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20005FC")]
	public class Action<T0, T1, T2> : Action
	{
		[Token(Token = "0x4002727")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Event<T0, T1, T2> _event;

		[Token(Token = "0x4002728")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private UnityAction<T0, T1, T2> action;

		[Token(Token = "0x6002B51")]
		public Action(Event<T0, T1, T2> _event, UnityAction<T0, T1, T2> action)
		{
		}

		[Token(Token = "0x6002B52")]
		public override void Enable(bool enabled)
		{
		}
	}

	[Token(Token = "0x20005FD")]
	public class Event : UnityEvent
	{
		[Token(Token = "0x6002B53")]
		[Address(RVA = "0x921058", Offset = "0x921058", VA = "0x921058")]
		public void Listen(UnityAction action)
		{
		}

		[Token(Token = "0x6002B54")]
		[Address(RVA = "0x921130", Offset = "0x921130", VA = "0x921130")]
		public void Remove(UnityAction action)
		{
		}

		[Token(Token = "0x6002B55")]
		[Address(RVA = "0x921D58", Offset = "0x921D58", VA = "0x921D58")]
		public void Send()
		{
		}

		[Token(Token = "0x6002B56")]
		[Address(RVA = "0x921CE4", Offset = "0x921CE4", VA = "0x921CE4")]
		public Event()
		{
		}
	}

	[Token(Token = "0x20005FE")]
	public class Event<T> : UnityEvent<T>
	{
		[Token(Token = "0x6002B57")]
		public void Listen(UnityAction<T> action)
		{
		}

		[Token(Token = "0x6002B58")]
		public void Remove(UnityAction<T> action)
		{
		}

		[Token(Token = "0x6002B59")]
		public void Send(T arg0)
		{
		}

		[Token(Token = "0x6002B5A")]
		public Event()
		{
		}
	}

	[Token(Token = "0x20005FF")]
	public class Event<T0, T1> : UnityEvent<T0, T1>
	{
		[Token(Token = "0x6002B5B")]
		public void Listen(UnityAction<T0, T1> action)
		{
		}

		[Token(Token = "0x6002B5C")]
		public void Remove(UnityAction<T0, T1> action)
		{
		}

		[Token(Token = "0x6002B5D")]
		public void Send(T0 arg0, T1 arg1)
		{
		}

		[Token(Token = "0x6002B5E")]
		public Event()
		{
		}
	}

	[Token(Token = "0x2000600")]
	public class Event<T0, T1, T2> : UnityEvent<T0, T1, T2>
	{
		[Token(Token = "0x6002B5F")]
		public void Listen(UnityAction<T0, T1, T2> action)
		{
		}

		[Token(Token = "0x6002B60")]
		public void Remove(UnityAction<T0, T1, T2> action)
		{
		}

		[Token(Token = "0x6002B61")]
		public void Send(T0 arg0, T1 arg1, T2 arg2)
		{
		}

		[Token(Token = "0x6002B62")]
		public Event()
		{
		}
	}

	[Token(Token = "0x40008BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Event<bool> Calibrating;

	[Token(Token = "0x40008C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static Event<int, bool> DeviceConnected;

	[Token(Token = "0x40008C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static Event<Color, float, bool> Fade;

	[Token(Token = "0x40008C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static Event FadeReady;

	[Token(Token = "0x40008C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static Event<bool> HideRenderModels;

	[Token(Token = "0x40008C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static Event<bool> Initializing;

	[Token(Token = "0x40008C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static Event<bool> InputFocus;

	[Token(Token = "0x40008C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static Event<bool> Loading;

	[Token(Token = "0x40008C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public static Event<float> LoadingFadeIn;

	[Token(Token = "0x40008C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public static Event<float> LoadingFadeOut;

	[Token(Token = "0x40008C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public static Event<TrackedDevicePose_t[]> NewPoses;

	[Token(Token = "0x40008CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public static Event NewPosesApplied;

	[Token(Token = "0x40008CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public static Event<bool> OutOfRange;

	[Token(Token = "0x40008CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public static Event<SteamVR_RenderModel, bool> RenderModelLoaded;

	[Token(Token = "0x40008CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private static Dictionary<EVREventType, Event<VREvent_t>> systemEvents;

	[Token(Token = "0x6000A7A")]
	[Address(RVA = "0x921140", Offset = "0x921140", VA = "0x921140")]
	public static Action CalibratingAction(UnityAction<bool> action)
	{
		return null;
	}

	[Token(Token = "0x6000A7B")]
	[Address(RVA = "0x91F958", Offset = "0x91F958", VA = "0x91F958")]
	public static Action DeviceConnectedAction(UnityAction<int, bool> action)
	{
		return null;
	}

	[Token(Token = "0x6000A7C")]
	[Address(RVA = "0x9211E4", Offset = "0x9211E4", VA = "0x9211E4")]
	public static Action FadeAction(UnityAction<Color, float, bool> action)
	{
		return null;
	}

	[Token(Token = "0x6000A7D")]
	[Address(RVA = "0x921288", Offset = "0x921288", VA = "0x921288")]
	public static Action FadeReadyAction(UnityAction action)
	{
		return null;
	}

	[Token(Token = "0x6000A7E")]
	[Address(RVA = "0x921358", Offset = "0x921358", VA = "0x921358")]
	public static Action HideRenderModelsAction(UnityAction<bool> action)
	{
		return null;
	}

	[Token(Token = "0x6000A7F")]
	[Address(RVA = "0x9213FC", Offset = "0x9213FC", VA = "0x9213FC")]
	public static Action InitializingAction(UnityAction<bool> action)
	{
		return null;
	}

	[Token(Token = "0x6000A80")]
	[Address(RVA = "0x91F8B4", Offset = "0x91F8B4", VA = "0x91F8B4")]
	public static Action InputFocusAction(UnityAction<bool> action)
	{
		return null;
	}

	[Token(Token = "0x6000A81")]
	[Address(RVA = "0x9214A0", Offset = "0x9214A0", VA = "0x9214A0")]
	public static Action LoadingAction(UnityAction<bool> action)
	{
		return null;
	}

	[Token(Token = "0x6000A82")]
	[Address(RVA = "0x921544", Offset = "0x921544", VA = "0x921544")]
	public static Action LoadingFadeInAction(UnityAction<float> action)
	{
		return null;
	}

	[Token(Token = "0x6000A83")]
	[Address(RVA = "0x9215E8", Offset = "0x9215E8", VA = "0x9215E8")]
	public static Action LoadingFadeOutAction(UnityAction<float> action)
	{
		return null;
	}

	[Token(Token = "0x6000A84")]
	[Address(RVA = "0x92168C", Offset = "0x92168C", VA = "0x92168C")]
	public static Action NewPosesAction(UnityAction<TrackedDevicePose_t[]> action)
	{
		return null;
	}

	[Token(Token = "0x6000A85")]
	[Address(RVA = "0x921730", Offset = "0x921730", VA = "0x921730")]
	public static Action NewPosesAppliedAction(UnityAction action)
	{
		return null;
	}

	[Token(Token = "0x6000A86")]
	[Address(RVA = "0x9217C8", Offset = "0x9217C8", VA = "0x9217C8")]
	public static Action OutOfRangeAction(UnityAction<bool> action)
	{
		return null;
	}

	[Token(Token = "0x6000A87")]
	[Address(RVA = "0x92186C", Offset = "0x92186C", VA = "0x92186C")]
	public static Action RenderModelLoadedAction(UnityAction<SteamVR_RenderModel, bool> action)
	{
		return null;
	}

	[Token(Token = "0x6000A88")]
	[Address(RVA = "0x921910", Offset = "0x921910", VA = "0x921910")]
	public static Event<VREvent_t> System(EVREventType eventType)
	{
		return null;
	}

	[Token(Token = "0x6000A89")]
	[Address(RVA = "0x91F9FC", Offset = "0x91F9FC", VA = "0x91F9FC")]
	public static Action SystemAction(EVREventType eventType, UnityAction<VREvent_t> action)
	{
		return null;
	}
}
[Token(Token = "0x200018A")]
public class SteamVR_ExternalCamera : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000601")]
	public struct Config
	{
		[Token(Token = "0x4002729")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float x;

		[Token(Token = "0x400272A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float y;

		[Token(Token = "0x400272B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float z;

		[Token(Token = "0x400272C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float rx;

		[Token(Token = "0x400272D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float ry;

		[Token(Token = "0x400272E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float rz;

		[Token(Token = "0x400272F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float fov;

		[Token(Token = "0x4002730")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float near;

		[Token(Token = "0x4002731")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float far;

		[Token(Token = "0x4002732")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float sceneResolutionScale;

		[Token(Token = "0x4002733")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float frameSkip;

		[Token(Token = "0x4002734")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float nearOffset;

		[Token(Token = "0x4002735")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float farOffset;

		[Token(Token = "0x4002736")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float hmdOffset;

		[Token(Token = "0x4002737")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float r;

		[Token(Token = "0x4002738")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float g;

		[Token(Token = "0x4002739")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float b;

		[Token(Token = "0x400273A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float a;

		[Token(Token = "0x400273B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool disableStandardAssets;
	}

	[Token(Token = "0x40008CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Config config;

	[Token(Token = "0x40008CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public string configPath;

	[Token(Token = "0x40008D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private FileSystemWatcher watcher;

	[Token(Token = "0x40008D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Camera cam;

	[Token(Token = "0x40008D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Transform target;

	[Token(Token = "0x40008D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private GameObject clipQuad;

	[Token(Token = "0x40008D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Material clipMaterial;

	[Token(Token = "0x40008D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Material colorMat;

	[Token(Token = "0x40008D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Material alphaMat;

	[Token(Token = "0x40008D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Camera[] cameras;

	[Token(Token = "0x40008D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Rect[] cameraRects;

	[Token(Token = "0x40008D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private float sceneResolutionScale;

	[Token(Token = "0x6000A8B")]
	[Address(RVA = "0x921D60", Offset = "0x921D60", VA = "0x921D60")]
	public void ReadConfig()
	{
	}

	[Token(Token = "0x6000A8C")]
	[Address(RVA = "0x9226C0", Offset = "0x9226C0", VA = "0x9226C0")]
	private void OnChanged(object source, FileSystemEventArgs e)
	{
	}

	[Token(Token = "0x6000A8D")]
	[Address(RVA = "0x9226C4", Offset = "0x9226C4", VA = "0x9226C4")]
	public void AttachToCamera(SteamVR_Camera vrcam)
	{
	}

	[Token(Token = "0x6000A8E")]
	[Address(RVA = "0x922F24", Offset = "0x922F24", VA = "0x922F24")]
	public float GetTargetDistance()
	{
		return default(float);
	}

	[Token(Token = "0x6000A8F")]
	[Address(RVA = "0x92322C", Offset = "0x92322C", VA = "0x92322C")]
	public void RenderNear()
	{
	}

	[Token(Token = "0x6000A90")]
	[Address(RVA = "0x923BD8", Offset = "0x923BD8", VA = "0x923BD8")]
	public void RenderFar()
	{
	}

	[Token(Token = "0x6000A91")]
	[Address(RVA = "0x923D34", Offset = "0x923D34", VA = "0x923D34")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000A92")]
	[Address(RVA = "0x923D38", Offset = "0x923D38", VA = "0x923D38")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000A93")]
	[Address(RVA = "0x923FF8", Offset = "0x923FF8", VA = "0x923FF8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000A94")]
	[Address(RVA = "0x924198", Offset = "0x924198", VA = "0x924198")]
	public SteamVR_ExternalCamera()
	{
	}
}
[Token(Token = "0x200018B")]
public class SteamVR_Fade : MonoBehaviour
{
	[Token(Token = "0x40008DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Color currentColor;

	[Token(Token = "0x40008DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Color targetColor;

	[Token(Token = "0x40008DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Color deltaColor;

	[Token(Token = "0x40008DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool fadeOverlay;

	[Token(Token = "0x40008DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Material fadeMaterial;

	[Token(Token = "0x40008DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static int fadeMaterialColorID;

	[Token(Token = "0x6000A95")]
	[Address(RVA = "0x9241A0", Offset = "0x9241A0", VA = "0x9241A0")]
	public static void Start(Color newColor, float duration, bool fadeOverlay = false)
	{
	}

	[Token(Token = "0x6000A96")]
	[Address(RVA = "0x92426C", Offset = "0x92426C", VA = "0x92426C")]
	public static void View(Color newColor, float duration)
	{
	}

	[Token(Token = "0x6000A97")]
	[Address(RVA = "0x924334", Offset = "0x924334", VA = "0x924334")]
	public void OnStartFade(Color newColor, float duration, bool fadeOverlay)
	{
	}

	[Token(Token = "0x6000A98")]
	[Address(RVA = "0x92439C", Offset = "0x92439C", VA = "0x92439C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000A99")]
	[Address(RVA = "0x92456C", Offset = "0x92456C", VA = "0x92456C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000A9A")]
	[Address(RVA = "0x924634", Offset = "0x924634", VA = "0x924634")]
	private void OnPostRender()
	{
	}

	[Token(Token = "0x6000A9B")]
	[Address(RVA = "0x9249E8", Offset = "0x9249E8", VA = "0x9249E8")]
	public SteamVR_Fade()
	{
	}
}
[Token(Token = "0x200018C")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x63E194", Offset = "0x63E194")]
public class SteamVR_Frustum : MonoBehaviour
{
	[Token(Token = "0x40008E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SteamVR_TrackedObject.EIndex index;

	[Token(Token = "0x40008E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float fovLeft;

	[Token(Token = "0x40008E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float fovRight;

	[Token(Token = "0x40008E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float fovTop;

	[Token(Token = "0x40008E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float fovBottom;

	[Token(Token = "0x40008E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float nearZ;

	[Token(Token = "0x40008E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float farZ;

	[Token(Token = "0x6000A9D")]
	[Address(RVA = "0x924B20", Offset = "0x924B20", VA = "0x924B20")]
	public void UpdateModel()
	{
	}

	[Token(Token = "0x6000A9E")]
	[Address(RVA = "0x9254E4", Offset = "0x9254E4", VA = "0x9254E4")]
	private void OnDeviceConnected(int i, bool connected)
	{
	}

	[Token(Token = "0x6000A9F")]
	[Address(RVA = "0x9256AC", Offset = "0x9256AC", VA = "0x9256AC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000AA0")]
	[Address(RVA = "0x9257A4", Offset = "0x9257A4", VA = "0x9257A4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000AA1")]
	[Address(RVA = "0x92589C", Offset = "0x92589C", VA = "0x92589C")]
	public SteamVR_Frustum()
	{
	}
}
[Token(Token = "0x200018D")]
[ExecuteInEditMode]
public class SteamVR_GameView : MonoBehaviour
{
	[Token(Token = "0x6000AA2")]
	[Address(RVA = "0x9258BC", Offset = "0x9258BC", VA = "0x9258BC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000AA3")]
	[Address(RVA = "0x925958", Offset = "0x925958", VA = "0x925958")]
	public SteamVR_GameView()
	{
	}
}
[Token(Token = "0x200018E")]
public class SteamVR_IK : MonoBehaviour
{
	[Token(Token = "0x40008E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform target;

	[Token(Token = "0x40008E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform start;

	[Token(Token = "0x40008E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform joint;

	[Token(Token = "0x40008EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform end;

	[Token(Token = "0x40008EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform poleVector;

	[Token(Token = "0x40008EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform upVector;

	[Token(Token = "0x40008ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float blendPct;

	[Token(Token = "0x40008EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[HideInInspector]
	public Transform startXform;

	[Token(Token = "0x40008EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[HideInInspector]
	public Transform jointXform;

	[Token(Token = "0x40008F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[HideInInspector]
	public Transform endXform;

	[Token(Token = "0x6000AA4")]
	[Address(RVA = "0x926138", Offset = "0x926138", VA = "0x926138")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000AA5")]
	[Address(RVA = "0x926DF8", Offset = "0x926DF8", VA = "0x926DF8")]
	public static bool Solve(Vector3 start, Vector3 end, Vector3 poleVector, float jointDist, float targetDist, ref Vector3 result, out Vector3 forward, out Vector3 up)
	{
		return default(bool);
	}

	[Token(Token = "0x6000AA6")]
	[Address(RVA = "0x927304", Offset = "0x927304", VA = "0x927304")]
	public SteamVR_IK()
	{
	}
}
[Token(Token = "0x200018F")]
public class SteamVR_LoadLevel : MonoBehaviour
{
	[Token(Token = "0x2000602")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x644158", Offset = "0x644158")]
	private sealed class <LoadLevel>d__45 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400273C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400273D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400273E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SteamVR_LoadLevel <>4__this;

		[Token(Token = "0x400273F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private CVROverlay <overlay>5__2;

		[Token(Token = "0x4002740")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool <fadedForeground>5__3;

		[Token(Token = "0x4002741")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private CVRCompositor <compositor>5__4;

		[Token(Token = "0x4002742")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private SteamVR_Controller.Device <hmd>5__5;

		[Token(Token = "0x1700028F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002B66")]
			[Address(RVA = "0x92A1F0", Offset = "0x92A1F0", VA = "0x92A1F0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000290")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002B68")]
			[Address(RVA = "0x92A260", Offset = "0x92A260", VA = "0x92A260", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002B63")]
		[Address(RVA = "0x929078", Offset = "0x929078", VA = "0x929078")]
		[DebuggerHidden]
		public <LoadLevel>d__45(int <>1__state)
		{
		}

		[Token(Token = "0x6002B64")]
		[Address(RVA = "0x9291FC", Offset = "0x9291FC", VA = "0x9291FC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002B65")]
		[Address(RVA = "0x929200", Offset = "0x929200", VA = "0x929200", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002B67")]
		[Address(RVA = "0x92A1F8", Offset = "0x92A1F8", VA = "0x92A1F8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40008F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static SteamVR_LoadLevel _active;

	[Token(Token = "0x40008F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string levelName;

	[Token(Token = "0x40008F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string internalProcessPath;

	[Token(Token = "0x40008F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string internalProcessArgs;

	[Token(Token = "0x40008F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool loadAdditive;

	[Token(Token = "0x40008F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	public bool loadAsync;

	[Token(Token = "0x40008F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Texture loadingScreen;

	[Token(Token = "0x40008F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Texture progressBarEmpty;

	[Token(Token = "0x40008F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Texture progressBarFull;

	[Token(Token = "0x40008FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float loadingScreenWidthInMeters;

	[Token(Token = "0x40008FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float progressBarWidthInMeters;

	[Token(Token = "0x40008FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float loadingScreenDistance;

	[Token(Token = "0x40008FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Transform loadingScreenTransform;

	[Token(Token = "0x40008FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Transform progressBarTransform;

	[Token(Token = "0x40008FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Texture front;

	[Token(Token = "0x4000900")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Texture back;

	[Token(Token = "0x4000901")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Texture left;

	[Token(Token = "0x4000902")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Texture right;

	[Token(Token = "0x4000903")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Texture top;

	[Token(Token = "0x4000904")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Texture bottom;

	[Token(Token = "0x4000905")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Color backgroundColor;

	[Token(Token = "0x4000906")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public bool showGrid;

	[Token(Token = "0x4000907")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	public float fadeOutTime;

	[Token(Token = "0x4000908")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public float fadeInTime;

	[Token(Token = "0x4000909")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	public float postLoadSettleTime;

	[Token(Token = "0x400090A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public float loadingScreenFadeInTime;

	[Token(Token = "0x400090B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	public float loadingScreenFadeOutTime;

	[Token(Token = "0x400090C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private float fadeRate;

	[Token(Token = "0x400090D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private float alpha;

	[Token(Token = "0x400090E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private AsyncOperation async;

	[Token(Token = "0x400090F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private RenderTexture renderTexture;

	[Token(Token = "0x4000910")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private ulong loadingScreenOverlayHandle;

	[Token(Token = "0x4000911")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private ulong progressBarOverlayHandle;

	[Token(Token = "0x4000912")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public bool autoTriggerOnEnable;

	[Token(Token = "0x170000F5")]
	public static bool loading
	{
		[Token(Token = "0x6000AA7")]
		[Address(RVA = "0x928184", Offset = "0x928184", VA = "0x928184")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000F6")]
	public static float progress
	{
		[Token(Token = "0x6000AA8")]
		[Address(RVA = "0x92821C", Offset = "0x92821C", VA = "0x92821C")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170000F7")]
	public static Texture progressTexture
	{
		[Token(Token = "0x6000AA9")]
		[Address(RVA = "0x92834C", Offset = "0x92834C", VA = "0x92834C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000AAA")]
	[Address(RVA = "0x928428", Offset = "0x928428", VA = "0x928428")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000AAB")]
	[Address(RVA = "0x928438", Offset = "0x928438", VA = "0x928438")]
	public void Trigger()
	{
	}

	[Token(Token = "0x6000AAC")]
	[Address(RVA = "0x928544", Offset = "0x928544", VA = "0x928544")]
	public static void Begin(string levelName, bool showGrid = false, float fadeOutTime = 0.5f, float r = 0f, float g = 0f, float b = 0f, float a = 1f)
	{
	}

	[Token(Token = "0x6000AAD")]
	[Address(RVA = "0x9286A8", Offset = "0x9286A8", VA = "0x9286A8")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000AAE")]
	[Address(RVA = "0x928F10", Offset = "0x928F10", VA = "0x928F10")]
	private void Update()
	{
	}

	[Token(Token = "0x6000AAF")]
	[Address(RVA = "0x9284D0", Offset = "0x9284D0", VA = "0x9284D0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6690A4", Offset = "0x6690A4")]
	private IEnumerator LoadLevel()
	{
		return null;
	}

	[Token(Token = "0x6000AB0")]
	[Address(RVA = "0x928B2C", Offset = "0x928B2C", VA = "0x928B2C")]
	private ulong GetOverlayHandle(string overlayName, Transform transform, float widthInMeters = 1f)
	{
		return default(ulong);
	}

	[Token(Token = "0x6000AB1")]
	[Address(RVA = "0x929194", Offset = "0x929194", VA = "0x929194")]
	public SteamVR_LoadLevel()
	{
	}
}
[Token(Token = "0x2000190")]
public class SteamVR_Menu : MonoBehaviour
{
	[Token(Token = "0x4000913")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Texture cursor;

	[Token(Token = "0x4000914")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Texture background;

	[Token(Token = "0x4000915")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Texture logo;

	[Token(Token = "0x4000916")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float logoHeight;

	[Token(Token = "0x4000917")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float menuOffset;

	[Token(Token = "0x4000918")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Vector2 scaleLimits;

	[Token(Token = "0x4000919")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float scaleRate;

	[Token(Token = "0x400091A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private SteamVR_Overlay overlay;

	[Token(Token = "0x400091B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Camera overlayCam;

	[Token(Token = "0x400091C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Vector4 uvOffset;

	[Token(Token = "0x400091D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float distance;

	[Token(Token = "0x400091E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64F450", Offset = "0x64F450")]
	private float <scale>k__BackingField;

	[Token(Token = "0x400091F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private string scaleLimitX;

	[Token(Token = "0x4000920")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private string scaleLimitY;

	[Token(Token = "0x4000921")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private string scaleRateText;

	[Token(Token = "0x4000922")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private CursorLockMode savedCursorLockState;

	[Token(Token = "0x4000923")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private bool savedCursorVisible;

	[Token(Token = "0x170000F8")]
	public RenderTexture texture
	{
		[Token(Token = "0x6000AB3")]
		[Address(RVA = "0x92A268", Offset = "0x92A268", VA = "0x92A268")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000F9")]
	public float scale
	{
		[Token(Token = "0x6000AB4")]
		[Address(RVA = "0x92A338", Offset = "0x92A338", VA = "0x92A338")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x669108", Offset = "0x669108")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000AB5")]
		[Address(RVA = "0x92A340", Offset = "0x92A340", VA = "0x92A340")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x669118", Offset = "0x669118")]
		private set
		{
		}
	}

	[Token(Token = "0x6000AB6")]
	[Address(RVA = "0x92A348", Offset = "0x92A348", VA = "0x92A348")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000AB7")]
	[Address(RVA = "0x92A4D0", Offset = "0x92A4D0", VA = "0x92A4D0")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000AB8")]
	[Address(RVA = "0x92B47C", Offset = "0x92B47C", VA = "0x92B47C")]
	public void ShowMenu()
	{
	}

	[Token(Token = "0x6000AB9")]
	[Address(RVA = "0x92B350", Offset = "0x92B350", VA = "0x92B350")]
	public void HideMenu()
	{
	}

	[Token(Token = "0x6000ABA")]
	[Address(RVA = "0x92B87C", Offset = "0x92B87C", VA = "0x92B87C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000ABB")]
	[Address(RVA = "0x92B260", Offset = "0x92B260", VA = "0x92B260")]
	private void SetScale(float scale)
	{
	}

	[Token(Token = "0x6000ABC")]
	[Address(RVA = "0x92B814", Offset = "0x92B814", VA = "0x92B814")]
	private void SaveCursorState()
	{
	}

	[Token(Token = "0x6000ABD")]
	[Address(RVA = "0x92B84C", Offset = "0x92B84C", VA = "0x92B84C")]
	private void RestoreCursorState()
	{
	}

	[Token(Token = "0x6000ABE")]
	[Address(RVA = "0x92BA4C", Offset = "0x92BA4C", VA = "0x92BA4C")]
	public SteamVR_Menu()
	{
	}
}
[Token(Token = "0x2000191")]
public class SteamVR_Overlay : MonoBehaviour
{
	[Token(Token = "0x2000603")]
	public struct IntersectionResults
	{
		[Token(Token = "0x4002743")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 point;

		[Token(Token = "0x4002744")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Vector3 normal;

		[Token(Token = "0x4002745")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector2 UVs;

		[Token(Token = "0x4002746")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float distance;
	}

	[Token(Token = "0x4000924")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Texture texture;

	[Token(Token = "0x4000925")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool curved;

	[Token(Token = "0x4000926")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool antialias;

	[Token(Token = "0x4000927")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
	public bool highquality;

	[Token(Token = "0x4000928")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64F460", Offset = "0x64F460")]
	public float scale;

	[Token(Token = "0x4000929")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64F498", Offset = "0x64F498")]
	public float distance;

	[Token(Token = "0x400092A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64F4D0", Offset = "0x64F4D0")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x64F4D0", Offset = "0x64F4D0")]
	public float alpha;

	[Token(Token = "0x400092B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector4 uvOffset;

	[Token(Token = "0x400092C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector2 mouseScale;

	[Token(Token = "0x400092D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Vector2 curvedRange;

	[Token(Token = "0x400092E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public VROverlayInputMethod inputMethod;

	[Token(Token = "0x400092F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64F524", Offset = "0x64F524")]
	private static SteamVR_Overlay <instance>k__BackingField;

	[Token(Token = "0x4000930")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private ulong handle;

	[Token(Token = "0x170000FA")]
	public static SteamVR_Overlay instance
	{
		[Token(Token = "0x6000ABF")]
		[Address(RVA = "0x924998", Offset = "0x924998", VA = "0x924998")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x669128", Offset = "0x669128")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000AC0")]
		[Address(RVA = "0x92BAA0", Offset = "0x92BAA0", VA = "0x92BAA0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x669138", Offset = "0x669138")]
		private set
		{
		}
	}

	[Token(Token = "0x170000FB")]
	public static string key
	{
		[Token(Token = "0x6000AC1")]
		[Address(RVA = "0x9290A4", Offset = "0x9290A4", VA = "0x9290A4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000AC2")]
	[Address(RVA = "0x92BAF4", Offset = "0x92BAF4", VA = "0x92BAF4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000AC3")]
	[Address(RVA = "0x92BC50", Offset = "0x92BC50", VA = "0x92BC50")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000AC4")]
	[Address(RVA = "0x92BD0C", Offset = "0x92BD0C", VA = "0x92BD0C")]
	public void UpdateOverlay()
	{
	}

	[Token(Token = "0x6000AC5")]
	[Address(RVA = "0x92C1BC", Offset = "0x92C1BC", VA = "0x92C1BC")]
	public bool PollNextEvent(ref VREvent_t pEvent)
	{
		return default(bool);
	}

	[Token(Token = "0x6000AC6")]
	[Address(RVA = "0x92C2C8", Offset = "0x92C2C8", VA = "0x92C2C8")]
	public bool ComputeIntersection(Vector3 source, Vector3 direction, ref IntersectionResults results)
	{
		return default(bool);
	}

	[Token(Token = "0x6000AC7")]
	[Address(RVA = "0x92C48C", Offset = "0x92C48C", VA = "0x92C48C")]
	public SteamVR_Overlay()
	{
	}
}
[Token(Token = "0x2000192")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x63E234", Offset = "0x63E234")]
public class SteamVR_PlayArea : MonoBehaviour
{
	[Token(Token = "0x2000604")]
	public enum Size
	{
		[Token(Token = "0x4002748")]
		Calibrated,
		[Token(Token = "0x4002749")]
		_400x300,
		[Token(Token = "0x400274A")]
		_300x225,
		[Token(Token = "0x400274B")]
		_200x150
	}

	[Token(Token = "0x2000605")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x644168", Offset = "0x644168")]
	private sealed class <UpdateBounds>d__14 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400274C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400274D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400274E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SteamVR_PlayArea <>4__this;

		[Token(Token = "0x400274F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private CVRChaperone <chaperone>5__2;

		[Token(Token = "0x17000291")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002B6C")]
			[Address(RVA = "0x92DA8C", Offset = "0x92DA8C", VA = "0x92DA8C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000292")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002B6E")]
			[Address(RVA = "0x92DAFC", Offset = "0x92DAFC", VA = "0x92DAFC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002B69")]
		[Address(RVA = "0x92D8EC", Offset = "0x92D8EC", VA = "0x92D8EC")]
		[DebuggerHidden]
		public <UpdateBounds>d__14(int <>1__state)
		{
		}

		[Token(Token = "0x6002B6A")]
		[Address(RVA = "0x92D964", Offset = "0x92D964", VA = "0x92D964", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002B6B")]
		[Address(RVA = "0x92D968", Offset = "0x92D968", VA = "0x92D968", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002B6D")]
		[Address(RVA = "0x92DA94", Offset = "0x92DA94", VA = "0x92DA94", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000931")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float borderThickness;

	[Token(Token = "0x4000932")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float wireframeHeight;

	[Token(Token = "0x4000933")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool drawWireframeWhenSelectedOnly;

	[Token(Token = "0x4000934")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool drawInGame;

	[Token(Token = "0x4000935")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Size size;

	[Token(Token = "0x4000936")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Color color;

	[Token(Token = "0x4000937")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	public Vector3[] vertices;

	[Token(Token = "0x6000AC8")]
	[Address(RVA = "0x92C564", Offset = "0x92C564", VA = "0x92C564")]
	public static bool GetBounds(Size size, ref HmdQuad_t pRect)
	{
		return default(bool);
	}

	[Token(Token = "0x6000AC9")]
	[Address(RVA = "0x92C908", Offset = "0x92C908", VA = "0x92C908")]
	public void BuildMesh()
	{
	}

	[Token(Token = "0x6000ACA")]
	[Address(RVA = "0x92D49C", Offset = "0x92D49C", VA = "0x92D49C")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000ACB")]
	[Address(RVA = "0x92D798", Offset = "0x92D798", VA = "0x92D798")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x6000ACC")]
	[Address(RVA = "0x92D4AC", Offset = "0x92D4AC", VA = "0x92D4AC")]
	public void DrawWireframe()
	{
	}

	[Token(Token = "0x6000ACD")]
	[Address(RVA = "0x92D7A8", Offset = "0x92D7A8", VA = "0x92D7A8")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x6000ACE")]
	[Address(RVA = "0x92D878", Offset = "0x92D878", VA = "0x92D878")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x669148", Offset = "0x669148")]
	private IEnumerator UpdateBounds()
	{
		return null;
	}

	[Token(Token = "0x6000ACF")]
	[Address(RVA = "0x92D918", Offset = "0x92D918", VA = "0x92D918")]
	public SteamVR_PlayArea()
	{
	}
}
[Token(Token = "0x2000193")]
public class SteamVR_Render : MonoBehaviour
{
	[Token(Token = "0x2000606")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x644178", Offset = "0x644178")]
	private sealed class <RenderLoop>d__29 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002750")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002751")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002752")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SteamVR_Render <>4__this;

		[Token(Token = "0x17000293")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002B72")]
			[Address(RVA = "0x92F704", Offset = "0x92F704", VA = "0x92F704", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000294")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002B74")]
			[Address(RVA = "0x92F774", Offset = "0x92F774", VA = "0x92F774", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002B6F")]
		[Address(RVA = "0x92E2B0", Offset = "0x92E2B0", VA = "0x92E2B0")]
		[DebuggerHidden]
		public <RenderLoop>d__29(int <>1__state)
		{
		}

		[Token(Token = "0x6002B70")]
		[Address(RVA = "0x92F534", Offset = "0x92F534", VA = "0x92F534", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002B71")]
		[Address(RVA = "0x92F538", Offset = "0x92F538", VA = "0x92F538", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002B73")]
		[Address(RVA = "0x92F70C", Offset = "0x92F70C", VA = "0x92F70C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000938")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool pauseGameWhenDashboardIsVisible;

	[Token(Token = "0x4000939")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool lockPhysicsUpdateRateToRenderFrequency;

	[Token(Token = "0x400093A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SteamVR_ExternalCamera externalCamera;

	[Token(Token = "0x400093B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string externalCameraConfigPath;

	[Token(Token = "0x400093C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ETrackingUniverseOrigin trackingSpace;

	[Token(Token = "0x400093D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64F544", Offset = "0x64F544")]
	private static EVREye <eye>k__BackingField;

	[Token(Token = "0x400093E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static SteamVR_Render _instance;

	[Token(Token = "0x400093F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static bool isQuitting;

	[Token(Token = "0x4000940")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private SteamVR_Camera[] cameras;

	[Token(Token = "0x4000941")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TrackedDevicePose_t[] poses;

	[Token(Token = "0x4000942")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TrackedDevicePose_t[] gamePoses;

	[Token(Token = "0x4000943")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	private static bool _pauseRendering;

	[Token(Token = "0x4000944")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private WaitForEndOfFrame waitForEndOfFrame;

	[Token(Token = "0x4000945")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float sceneResolutionScale;

	[Token(Token = "0x4000946")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float timeScale;

	[Token(Token = "0x170000FC")]
	public static EVREye eye
	{
		[Token(Token = "0x6000AD0")]
		[Address(RVA = "0x92DB04", Offset = "0x92DB04", VA = "0x92DB04")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6691AC", Offset = "0x6691AC")]
		get
		{
			return default(EVREye);
		}
		[Token(Token = "0x6000AD1")]
		[Address(RVA = "0x92DB54", Offset = "0x92DB54", VA = "0x92DB54")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6691BC", Offset = "0x6691BC")]
		private set
		{
		}
	}

	[Token(Token = "0x170000FD")]
	public static SteamVR_Render instance
	{
		[Token(Token = "0x6000AD2")]
		[Address(RVA = "0x91ED60", Offset = "0x91ED60", VA = "0x91ED60")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000FE")]
	public static bool pauseRendering
	{
		[Token(Token = "0x6000ADB")]
		[Address(RVA = "0x92E1EC", Offset = "0x92E1EC", VA = "0x92E1EC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000ADC")]
		[Address(RVA = "0x92A158", Offset = "0x92A158", VA = "0x92A158")]
		set
		{
		}
	}

	[Token(Token = "0x6000AD3")]
	[Address(RVA = "0x92DBA8", Offset = "0x92DBA8", VA = "0x92DBA8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000AD4")]
	[Address(RVA = "0x92DBF8", Offset = "0x92DBF8", VA = "0x92DBF8")]
	private void OnApplicationQuit()
	{
	}

	[Token(Token = "0x6000AD5")]
	[Address(RVA = "0x91D4B0", Offset = "0x91D4B0", VA = "0x91D4B0")]
	public static void Add(SteamVR_Camera vrcam)
	{
	}

	[Token(Token = "0x6000AD6")]
	[Address(RVA = "0x91C5A8", Offset = "0x91C5A8", VA = "0x91C5A8")]
	public static void Remove(SteamVR_Camera vrcam)
	{
	}

	[Token(Token = "0x6000AD7")]
	[Address(RVA = "0x92911C", Offset = "0x92911C", VA = "0x92911C")]
	public static SteamVR_Camera Top()
	{
		return null;
	}

	[Token(Token = "0x6000AD8")]
	[Address(RVA = "0x92DC6C", Offset = "0x92DC6C", VA = "0x92DC6C")]
	private void AddInternal(SteamVR_Camera vrcam)
	{
	}

	[Token(Token = "0x6000AD9")]
	[Address(RVA = "0x92DF60", Offset = "0x92DF60", VA = "0x92DF60")]
	private void RemoveInternal(SteamVR_Camera vrcam)
	{
	}

	[Token(Token = "0x6000ADA")]
	[Address(RVA = "0x92E16C", Offset = "0x92E16C", VA = "0x92E16C")]
	private SteamVR_Camera TopInternal()
	{
		return null;
	}

	[Token(Token = "0x6000ADD")]
	[Address(RVA = "0x92E23C", Offset = "0x92E23C", VA = "0x92E23C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6691CC", Offset = "0x6691CC")]
	private IEnumerator RenderLoop()
	{
		return null;
	}

	[Token(Token = "0x6000ADE")]
	[Address(RVA = "0x92E2DC", Offset = "0x92E2DC", VA = "0x92E2DC")]
	private void RenderExternalCamera()
	{
	}

	[Token(Token = "0x6000ADF")]
	[Address(RVA = "0x92E464", Offset = "0x92E464", VA = "0x92E464")]
	private void OnInputFocus(bool hasFocus)
	{
	}

	[Token(Token = "0x6000AE0")]
	[Address(RVA = "0x92E4D4", Offset = "0x92E4D4", VA = "0x92E4D4")]
	private void OnQuit(VREvent_t vrEvent)
	{
	}

	[Token(Token = "0x6000AE1")]
	[Address(RVA = "0x92E4DC", Offset = "0x92E4DC", VA = "0x92E4DC")]
	private string GetScreenshotFilename(uint screenshotHandle, EVRScreenshotPropertyFilenames screenshotPropertyFilename)
	{
		return null;
	}

	[Token(Token = "0x6000AE2")]
	[Address(RVA = "0x92E644", Offset = "0x92E644", VA = "0x92E644")]
	private void OnRequestScreenshot(VREvent_t vrEvent)
	{
	}

	[Token(Token = "0x6000AE3")]
	[Address(RVA = "0x92E90C", Offset = "0x92E90C", VA = "0x92E90C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000AE4")]
	[Address(RVA = "0x92EBB0", Offset = "0x92EBB0", VA = "0x92EBB0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000AE5")]
	[Address(RVA = "0x92ED7C", Offset = "0x92ED7C", VA = "0x92ED7C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000AE6")]
	[Address(RVA = "0x92EF28", Offset = "0x92EF28", VA = "0x92EF28")]
	public void UpdatePoses()
	{
	}

	[Token(Token = "0x6000AE7")]
	[Address(RVA = "0x92F02C", Offset = "0x92F02C", VA = "0x92F02C")]
	private void OnBeforeRender()
	{
	}

	[Token(Token = "0x6000AE8")]
	[Address(RVA = "0x92F030", Offset = "0x92F030", VA = "0x92F030")]
	private void Update()
	{
	}

	[Token(Token = "0x6000AE9")]
	[Address(RVA = "0x92F468", Offset = "0x92F468", VA = "0x92F468")]
	public SteamVR_Render()
	{
	}
}
[Token(Token = "0x2000194")]
[ExecuteInEditMode]
public class SteamVR_RenderModel : MonoBehaviour
{
	[Token(Token = "0x2000607")]
	public class RenderModel
	{
		[Token(Token = "0x4002753")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x664DC8", Offset = "0x664DC8")]
		private Mesh <mesh>k__BackingField;

		[Token(Token = "0x4002754")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x664DD8", Offset = "0x664DD8")]
		private Material <material>k__BackingField;

		[Token(Token = "0x17000295")]
		public Mesh mesh
		{
			[Token(Token = "0x6002B76")]
			[Address(RVA = "0x87617C", Offset = "0x87617C", VA = "0x87617C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6712F4", Offset = "0x6712F4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002B77")]
			[Address(RVA = "0x876234", Offset = "0x876234", VA = "0x876234")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x671304", Offset = "0x671304")]
			private set
			{
			}
		}

		[Token(Token = "0x17000296")]
		public Material material
		{
			[Token(Token = "0x6002B78")]
			[Address(RVA = "0x876244", Offset = "0x876244", VA = "0x876244")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x671314", Offset = "0x671314")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002B79")]
			[Address(RVA = "0x87623C", Offset = "0x87623C", VA = "0x87623C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x671324", Offset = "0x671324")]
			private set
			{
			}
		}

		[Token(Token = "0x6002B75")]
		[Address(RVA = "0x8761FC", Offset = "0x8761FC", VA = "0x8761FC")]
		public RenderModel(Mesh mesh, Material material)
		{
		}
	}

	[Token(Token = "0x2000608")]
	public sealed class RenderModelInterfaceHolder : IDisposable
	{
		[Token(Token = "0x4002755")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private bool needsShutdown;

		[Token(Token = "0x4002756")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		private bool failedLoadInterface;

		[Token(Token = "0x4002757")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private CVRRenderModels _instance;

		[Token(Token = "0x17000297")]
		public CVRRenderModels instance
		{
			[Token(Token = "0x6002B7A")]
			[Address(RVA = "0x8754F4", Offset = "0x8754F4", VA = "0x8754F4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002B7B")]
		[Address(RVA = "0x87624C", Offset = "0x87624C", VA = "0x87624C", Slot = "4")]
		public void Dispose()
		{
		}

		[Token(Token = "0x6002B7C")]
		[Address(RVA = "0x8754EC", Offset = "0x8754EC", VA = "0x8754EC")]
		public RenderModelInterfaceHolder()
		{
		}
	}

	[Token(Token = "0x2000609")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x644188", Offset = "0x644188")]
	private sealed class <SetModelAsync>d__21 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002758")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002759")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400275A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string renderModelName;

		[Token(Token = "0x400275B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SteamVR_RenderModel <>4__this;

		[Token(Token = "0x400275C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private RenderModelInterfaceHolder <holder>5__2;

		[Token(Token = "0x400275D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private CVRRenderModels <renderModels>5__3;

		[Token(Token = "0x400275E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private string[] <renderModelNames>5__4;

		[Token(Token = "0x17000298")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002B81")]
			[Address(RVA = "0x876184", Offset = "0x876184", VA = "0x876184", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000299")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002B83")]
			[Address(RVA = "0x8761F4", Offset = "0x8761F4", VA = "0x8761F4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002B7D")]
		[Address(RVA = "0x8756CC", Offset = "0x8756CC", VA = "0x8756CC")]
		[DebuggerHidden]
		public <SetModelAsync>d__21(int <>1__state)
		{
		}

		[Token(Token = "0x6002B7E")]
		[Address(RVA = "0x8756F8", Offset = "0x8756F8", VA = "0x8756F8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002B7F")]
		[Address(RVA = "0x8757D4", Offset = "0x8757D4", VA = "0x8757D4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002B80")]
		[Address(RVA = "0x875714", Offset = "0x875714", VA = "0x875714")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x6002B82")]
		[Address(RVA = "0x87618C", Offset = "0x87618C", VA = "0x87618C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200060A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x644198", Offset = "0x644198")]
	private sealed class <FreeRenderModel>d__24 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400275F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002760")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002761")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public IntPtr pRenderModel;

		[Token(Token = "0x1700029A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002B87")]
			[Address(RVA = "0x875654", Offset = "0x875654", VA = "0x875654", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700029B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002B89")]
			[Address(RVA = "0x8756C4", Offset = "0x8756C4", VA = "0x8756C4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002B84")]
		[Address(RVA = "0x875310", Offset = "0x875310", VA = "0x875310")]
		[DebuggerHidden]
		public <FreeRenderModel>d__24(int <>1__state)
		{
		}

		[Token(Token = "0x6002B85")]
		[Address(RVA = "0x87533C", Offset = "0x87533C", VA = "0x87533C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002B86")]
		[Address(RVA = "0x875340", Offset = "0x875340", VA = "0x875340", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002B88")]
		[Address(RVA = "0x87565C", Offset = "0x87565C", VA = "0x87565C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000947")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SteamVR_TrackedObject.EIndex index;

	[Token(Token = "0x4000948")]
	public const string modelOverrideWarning = "Model override is really only meant to be used in the scene view for lining things up; using it at runtime is discouraged.  Use tracked device index instead to ensure the correct model is displayed for all users.";

	[Token(Token = "0x4000949")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64F554", Offset = "0x64F554")]
	public string modelOverride;

	[Token(Token = "0x400094A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64F58C", Offset = "0x64F58C")]
	public Shader shader;

	[Token(Token = "0x400094B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64F5C4", Offset = "0x64F5C4")]
	public bool verbose;

	[Token(Token = "0x400094C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64F5FC", Offset = "0x64F5FC")]
	public bool createComponents;

	[Token(Token = "0x400094D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64F634", Offset = "0x64F634")]
	public bool updateDynamically;

	[Token(Token = "0x400094E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x33")]
	public RenderModel_ControllerMode_State_t controllerModeState;

	[Token(Token = "0x400094F")]
	public const string k_localTransformName = "attach";

	[Token(Token = "0x4000950")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64F66C", Offset = "0x64F66C")]
	private string <renderModelName>k__BackingField;

	[Token(Token = "0x4000951")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Hashtable models;

	[Token(Token = "0x4000952")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static Hashtable materials;

	[Token(Token = "0x4000953")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private SteamVR_Events.Action deviceConnectedAction;

	[Token(Token = "0x4000954")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private SteamVR_Events.Action hideRenderModelsAction;

	[Token(Token = "0x4000955")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private SteamVR_Events.Action modelSkinSettingsHaveChangedAction;

	[Token(Token = "0x4000956")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Dictionary<int, string> nameCache;

	[Token(Token = "0x170000FF")]
	public string renderModelName
	{
		[Token(Token = "0x6000AEA")]
		[Address(RVA = "0x92F77C", Offset = "0x92F77C", VA = "0x92F77C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x669230", Offset = "0x669230")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000AEB")]
		[Address(RVA = "0x92F784", Offset = "0x92F784", VA = "0x92F784")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x669240", Offset = "0x669240")]
		private set
		{
		}
	}

	[Token(Token = "0x6000AEC")]
	[Address(RVA = "0x92F78C", Offset = "0x92F78C", VA = "0x92F78C")]
	private void OnModelSkinSettingsHaveChanged(VREvent_t vrEvent)
	{
	}

	[Token(Token = "0x6000AED")]
	[Address(RVA = "0x92F9B8", Offset = "0x92F9B8", VA = "0x92F9B8")]
	private void OnHideRenderModels(bool hidden)
	{
	}

	[Token(Token = "0x6000AEE")]
	[Address(RVA = "0x92FB10", Offset = "0x92FB10", VA = "0x92FB10")]
	private void OnDeviceConnected(int i, bool connected)
	{
	}

	[Token(Token = "0x6000AEF")]
	[Address(RVA = "0x92F7FC", Offset = "0x92F7FC", VA = "0x92F7FC")]
	public void UpdateModel()
	{
	}

	[Token(Token = "0x6000AF0")]
	[Address(RVA = "0x92FB28", Offset = "0x92FB28", VA = "0x92FB28")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x669250", Offset = "0x669250")]
	private IEnumerator SetModelAsync(string renderModelName)
	{
		return null;
	}

	[Token(Token = "0x6000AF1")]
	[Address(RVA = "0x92FBC0", Offset = "0x92FBC0", VA = "0x92FBC0")]
	private bool SetModel(string renderModelName)
	{
		return default(bool);
	}

	[Token(Token = "0x6000AF2")]
	[Address(RVA = "0x930F80", Offset = "0x930F80", VA = "0x930F80")]
	private RenderModel LoadRenderModel(CVRRenderModels renderModels, string renderModelName, string baseName)
	{
		return null;
	}

	[Token(Token = "0x6000AF3")]
	[Address(RVA = "0x932074", Offset = "0x932074", VA = "0x932074")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6692B4", Offset = "0x6692B4")]
	private IEnumerator FreeRenderModel(IntPtr pRenderModel)
	{
		return null;
	}

	[Token(Token = "0x6000AF4")]
	[Address(RVA = "0x9320E8", Offset = "0x9320E8", VA = "0x9320E8")]
	public Transform FindComponent(string componentName)
	{
		return null;
	}

	[Token(Token = "0x6000AF5")]
	[Address(RVA = "0x930024", Offset = "0x930024", VA = "0x930024")]
	private void StripMesh(GameObject go)
	{
	}

	[Token(Token = "0x6000AF6")]
	[Address(RVA = "0x930170", Offset = "0x930170", VA = "0x930170")]
	private bool LoadComponents(RenderModelInterfaceHolder holder, string renderModelName)
	{
		return default(bool);
	}

	[Token(Token = "0x6000AF7")]
	[Address(RVA = "0x932190", Offset = "0x932190", VA = "0x932190")]
	private SteamVR_RenderModel()
	{
	}

	[Token(Token = "0x6000AF8")]
	[Address(RVA = "0x9322D0", Offset = "0x9322D0", VA = "0x9322D0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000AF9")]
	[Address(RVA = "0x932418", Offset = "0x932418", VA = "0x932418")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000AFA")]
	[Address(RVA = "0x93249C", Offset = "0x93249C", VA = "0x93249C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000AFB")]
	[Address(RVA = "0x9309CC", Offset = "0x9309CC", VA = "0x9309CC")]
	public void UpdateComponents(CVRRenderModels renderModels)
	{
	}

	[Token(Token = "0x6000AFC")]
	[Address(RVA = "0x932520", Offset = "0x932520", VA = "0x932520")]
	public void SetDeviceIndex(int index)
	{
	}

	[Token(Token = "0x6000AFD")]
	[Address(RVA = "0x931C94", Offset = "0x931C94", VA = "0x931C94")]
	private static void Sleep()
	{
	}

	[Token(Token = "0x6000AFE")]
	[Address(RVA = "0x931CA0", Offset = "0x931CA0", VA = "0x931CA0")]
	private RenderModel_t MarshalRenderModel(IntPtr pRenderModel)
	{
		return default(RenderModel_t);
	}

	[Token(Token = "0x6000AFF")]
	[Address(RVA = "0x931E9C", Offset = "0x931E9C", VA = "0x931E9C")]
	private RenderModel_TextureMap_t MarshalRenderModel_TextureMap(IntPtr pRenderModel)
	{
		return default(RenderModel_TextureMap_t);
	}
}
[Token(Token = "0x2000195")]
public class SteamVR_Skybox : MonoBehaviour
{
	[Token(Token = "0x200060B")]
	public enum CellSize
	{
		[Token(Token = "0x4002763")]
		x1024,
		[Token(Token = "0x4002764")]
		x64,
		[Token(Token = "0x4002765")]
		x32,
		[Token(Token = "0x4002766")]
		x16,
		[Token(Token = "0x4002767")]
		x8
	}

	[Token(Token = "0x4000957")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Texture front;

	[Token(Token = "0x4000958")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Texture back;

	[Token(Token = "0x4000959")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Texture left;

	[Token(Token = "0x400095A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Texture right;

	[Token(Token = "0x400095B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Texture top;

	[Token(Token = "0x400095C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Texture bottom;

	[Token(Token = "0x400095D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public CellSize StereoCellSize;

	[Token(Token = "0x400095E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float StereoIpdMm;

	[Token(Token = "0x6000B01")]
	[Address(RVA = "0x8762C4", Offset = "0x8762C4", VA = "0x8762C4")]
	public void SetTextureByIndex(int i, Texture t)
	{
	}

	[Token(Token = "0x6000B02")]
	[Address(RVA = "0x876318", Offset = "0x876318", VA = "0x876318")]
	public Texture GetTextureByIndex(int i)
	{
		return null;
	}

	[Token(Token = "0x6000B03")]
	[Address(RVA = "0x876374", Offset = "0x876374", VA = "0x876374")]
	public static void SetOverride([Optional] Texture front, [Optional] Texture back, [Optional] Texture left, [Optional] Texture right, [Optional] Texture top, [Optional] Texture bottom)
	{
	}

	[Token(Token = "0x6000B04")]
	[Address(RVA = "0x87684C", Offset = "0x87684C", VA = "0x87684C")]
	public static void ClearOverride()
	{
	}

	[Token(Token = "0x6000B05")]
	[Address(RVA = "0x8768C4", Offset = "0x8768C4", VA = "0x8768C4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000B06")]
	[Address(RVA = "0x8768D8", Offset = "0x8768D8", VA = "0x8768D8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000B07")]
	[Address(RVA = "0x8768DC", Offset = "0x8768DC", VA = "0x8768DC")]
	public SteamVR_Skybox()
	{
	}
}
[Token(Token = "0x2000196")]
[ExecuteInEditMode]
public class SteamVR_SphericalProjection : MonoBehaviour
{
	[Token(Token = "0x400095F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Material material;

	[Token(Token = "0x6000B08")]
	[Address(RVA = "0x8768F0", Offset = "0x8768F0", VA = "0x8768F0")]
	public void Set(Vector3 N, float phi0, float phi1, float theta0, float theta1, Vector3 uAxis, Vector3 uOrigin, float uScale, Vector3 vAxis, Vector3 vOrigin, float vScale)
	{
	}

	[Token(Token = "0x6000B09")]
	[Address(RVA = "0x876D88", Offset = "0x876D88", VA = "0x876D88")]
	private void OnRenderImage(RenderTexture src, RenderTexture dest)
	{
	}

	[Token(Token = "0x6000B0A")]
	[Address(RVA = "0x876E18", Offset = "0x876E18", VA = "0x876E18")]
	public SteamVR_SphericalProjection()
	{
	}
}
[Token(Token = "0x2000197")]
[ExecuteInEditMode]
public class SteamVR_Stats : MonoBehaviour
{
	[Token(Token = "0x6000B0B")]
	[Address(RVA = "0x876E20", Offset = "0x876E20", VA = "0x876E20")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000B0C")]
	[Address(RVA = "0x876EBC", Offset = "0x876EBC", VA = "0x876EBC")]
	public SteamVR_Stats()
	{
	}
}
[Token(Token = "0x2000198")]
public class SteamVR_TestController : MonoBehaviour
{
	[Token(Token = "0x4000960")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<int> controllerIndices;

	[Token(Token = "0x4000961")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private EVRButtonId[] buttonIds;

	[Token(Token = "0x4000962")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private EVRButtonId[] axisIds;

	[Token(Token = "0x4000963")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform point;

	[Token(Token = "0x4000964")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform pointer;

	[Token(Token = "0x6000B0D")]
	[Address(RVA = "0x8776D0", Offset = "0x8776D0", VA = "0x8776D0")]
	private void OnDeviceConnected(int index, bool connected)
	{
	}

	[Token(Token = "0x6000B0E")]
	[Address(RVA = "0x877DDC", Offset = "0x877DDC", VA = "0x877DDC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000B0F")]
	[Address(RVA = "0x877EA4", Offset = "0x877EA4", VA = "0x877EA4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000B10")]
	[Address(RVA = "0x877898", Offset = "0x877898", VA = "0x877898")]
	private void PrintControllerStatus(int index)
	{
	}

	[Token(Token = "0x6000B11")]
	[Address(RVA = "0x877F6C", Offset = "0x877F6C", VA = "0x877F6C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B12")]
	[Address(RVA = "0x8788BC", Offset = "0x8788BC", VA = "0x8788BC")]
	public SteamVR_TestController()
	{
	}
}
[Token(Token = "0x2000199")]
public class SteamVR_TrackedCamera
{
	[Token(Token = "0x200060C")]
	public class VideoStreamTexture
	{
		[Token(Token = "0x4002768")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x664DE8", Offset = "0x664DE8")]
		private bool <undistorted>k__BackingField;

		[Token(Token = "0x4002769")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x664DF8", Offset = "0x664DF8")]
		private VRTextureBounds_t <frameBounds>k__BackingField;

		[Token(Token = "0x400276A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Texture2D _texture;

		[Token(Token = "0x400276B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int prevFrameCount;

		[Token(Token = "0x400276C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private uint glTextureId;

		[Token(Token = "0x400276D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private VideoStream videostream;

		[Token(Token = "0x400276E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private CameraVideoStreamFrameHeader_t header;

		[Token(Token = "0x1700029C")]
		public bool undistorted
		{
			[Token(Token = "0x6002B8B")]
			[Address(RVA = "0x879C74", Offset = "0x879C74", VA = "0x879C74")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6713D4", Offset = "0x6713D4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002B8C")]
			[Address(RVA = "0x879C68", Offset = "0x879C68", VA = "0x879C68")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6713E4", Offset = "0x6713E4")]
			private set
			{
			}
		}

		[Token(Token = "0x1700029D")]
		public uint deviceIndex
		{
			[Token(Token = "0x6002B8D")]
			[Address(RVA = "0x879C7C", Offset = "0x879C7C", VA = "0x879C7C")]
			get
			{
				return default(uint);
			}
		}

		[Token(Token = "0x1700029E")]
		public bool hasCamera
		{
			[Token(Token = "0x6002B8E")]
			[Address(RVA = "0x878FC0", Offset = "0x878FC0", VA = "0x878FC0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700029F")]
		public bool hasTracking
		{
			[Token(Token = "0x6002B8F")]
			[Address(RVA = "0x8794B4", Offset = "0x8794B4", VA = "0x8794B4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002A0")]
		public uint frameId
		{
			[Token(Token = "0x6002B90")]
			[Address(RVA = "0x87A058", Offset = "0x87A058", VA = "0x87A058")]
			get
			{
				return default(uint);
			}
		}

		[Token(Token = "0x170002A1")]
		public VRTextureBounds_t frameBounds
		{
			[Token(Token = "0x6002B91")]
			[Address(RVA = "0x8794A8", Offset = "0x8794A8", VA = "0x8794A8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6713F4", Offset = "0x6713F4")]
			get
			{
				return default(VRTextureBounds_t);
			}
			[Token(Token = "0x6002B92")]
			[Address(RVA = "0x87A07C", Offset = "0x87A07C", VA = "0x87A07C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x671404", Offset = "0x671404")]
			private set
			{
			}
		}

		[Token(Token = "0x170002A2")]
		public EVRTrackedCameraFrameType frameType
		{
			[Token(Token = "0x6002B93")]
			[Address(RVA = "0x87A088", Offset = "0x87A088", VA = "0x87A088")]
			get
			{
				return default(EVRTrackedCameraFrameType);
			}
		}

		[Token(Token = "0x170002A3")]
		public Texture2D texture
		{
			[Token(Token = "0x6002B94")]
			[Address(RVA = "0x879484", Offset = "0x879484", VA = "0x879484")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002A4")]
		public SteamVR_Utils.RigidTransform transform
		{
			[Token(Token = "0x6002B95")]
			[Address(RVA = "0x8794D8", Offset = "0x8794D8", VA = "0x8794D8")]
			get
			{
				return default(SteamVR_Utils.RigidTransform);
			}
		}

		[Token(Token = "0x170002A5")]
		public Vector3 velocity
		{
			[Token(Token = "0x6002B96")]
			[Address(RVA = "0x87A2AC", Offset = "0x87A2AC", VA = "0x87A2AC")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170002A6")]
		public Vector3 angularVelocity
		{
			[Token(Token = "0x6002B97")]
			[Address(RVA = "0x87A2FC", Offset = "0x87A2FC", VA = "0x87A2FC")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x6002B8A")]
		[Address(RVA = "0x8796E4", Offset = "0x8796E4", VA = "0x8796E4")]
		public VideoStreamTexture(uint deviceIndex, bool undistorted)
		{
		}

		[Token(Token = "0x6002B98")]
		[Address(RVA = "0x87A350", Offset = "0x87A350", VA = "0x87A350")]
		public TrackedDevicePose_t GetPose()
		{
			return default(TrackedDevicePose_t);
		}

		[Token(Token = "0x6002B99")]
		[Address(RVA = "0x878F94", Offset = "0x878F94", VA = "0x878F94")]
		public ulong Acquire()
		{
			return default(ulong);
		}

		[Token(Token = "0x6002B9A")]
		[Address(RVA = "0x879058", Offset = "0x879058", VA = "0x879058")]
		public ulong Release()
		{
			return default(ulong);
		}

		[Token(Token = "0x6002B9B")]
		[Address(RVA = "0x879CA8", Offset = "0x879CA8", VA = "0x879CA8")]
		private void Update()
		{
		}
	}

	[Token(Token = "0x200060D")]
	private class VideoStream
	{
		[Token(Token = "0x400276F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x664E08", Offset = "0x664E08")]
		private uint <deviceIndex>k__BackingField;

		[Token(Token = "0x4002770")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private ulong _handle;

		[Token(Token = "0x4002771")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool _hasCamera;

		[Token(Token = "0x4002772")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private ulong refCount;

		[Token(Token = "0x170002A7")]
		public uint deviceIndex
		{
			[Token(Token = "0x6002B9D")]
			[Address(RVA = "0x879B0C", Offset = "0x879B0C", VA = "0x879B0C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x671414", Offset = "0x671414")]
			get
			{
				return default(uint);
			}
			[Token(Token = "0x6002B9E")]
			[Address(RVA = "0x879B04", Offset = "0x879B04", VA = "0x879B04")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x671424", Offset = "0x671424")]
			private set
			{
			}
		}

		[Token(Token = "0x170002A8")]
		public ulong handle
		{
			[Token(Token = "0x6002B9F")]
			[Address(RVA = "0x879B14", Offset = "0x879B14", VA = "0x879B14")]
			get
			{
				return default(ulong);
			}
		}

		[Token(Token = "0x170002A9")]
		public bool hasCamera
		{
			[Token(Token = "0x6002BA0")]
			[Address(RVA = "0x879B1C", Offset = "0x879B1C", VA = "0x879B1C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6002B9C")]
		[Address(RVA = "0x879A58", Offset = "0x879A58", VA = "0x879A58")]
		public VideoStream(uint deviceIndex)
		{
		}

		[Token(Token = "0x6002BA1")]
		[Address(RVA = "0x879B24", Offset = "0x879B24", VA = "0x879B24")]
		public ulong Acquire()
		{
			return default(ulong);
		}

		[Token(Token = "0x6002BA2")]
		[Address(RVA = "0x879BC4", Offset = "0x879BC4", VA = "0x879BC4")]
		public ulong Release()
		{
			return default(ulong);
		}
	}

	[Token(Token = "0x4000965")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static VideoStreamTexture[] distorted;

	[Token(Token = "0x4000966")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static VideoStreamTexture[] undistorted;

	[Token(Token = "0x4000967")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static VideoStream[] videostreams;

	[Token(Token = "0x6000B13")]
	[Address(RVA = "0x879544", Offset = "0x879544", VA = "0x879544")]
	public static VideoStreamTexture Distorted(int deviceIndex = 0)
	{
		return null;
	}

	[Token(Token = "0x6000B14")]
	[Address(RVA = "0x879734", Offset = "0x879734", VA = "0x879734")]
	public static VideoStreamTexture Undistorted(int deviceIndex = 0)
	{
		return null;
	}

	[Token(Token = "0x6000B15")]
	[Address(RVA = "0x878F80", Offset = "0x878F80", VA = "0x878F80")]
	public static VideoStreamTexture Source(bool undistorted, int deviceIndex = 0)
	{
		return null;
	}

	[Token(Token = "0x6000B16")]
	[Address(RVA = "0x8798D4", Offset = "0x8798D4", VA = "0x8798D4")]
	private static VideoStream Stream(uint deviceIndex)
	{
		return null;
	}

	[Token(Token = "0x6000B17")]
	[Address(RVA = "0x879AFC", Offset = "0x879AFC", VA = "0x879AFC")]
	public SteamVR_TrackedCamera()
	{
	}
}
[Token(Token = "0x200019A")]
public class SteamVR_TrackedObject : MonoBehaviour
{
	[Token(Token = "0x200060E")]
	public enum EIndex
	{
		[Token(Token = "0x4002774")]
		None = -1,
		[Token(Token = "0x4002775")]
		Hmd,
		[Token(Token = "0x4002776")]
		Device1,
		[Token(Token = "0x4002777")]
		Device2,
		[Token(Token = "0x4002778")]
		Device3,
		[Token(Token = "0x4002779")]
		Device4,
		[Token(Token = "0x400277A")]
		Device5,
		[Token(Token = "0x400277B")]
		Device6,
		[Token(Token = "0x400277C")]
		Device7,
		[Token(Token = "0x400277D")]
		Device8,
		[Token(Token = "0x400277E")]
		Device9,
		[Token(Token = "0x400277F")]
		Device10,
		[Token(Token = "0x4002780")]
		Device11,
		[Token(Token = "0x4002781")]
		Device12,
		[Token(Token = "0x4002782")]
		Device13,
		[Token(Token = "0x4002783")]
		Device14,
		[Token(Token = "0x4002784")]
		Device15
	}

	[Token(Token = "0x4000968")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public EIndex index;

	[Token(Token = "0x4000969")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64F67C", Offset = "0x64F67C")]
	public Transform origin;

	[Token(Token = "0x400096A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64F6B4", Offset = "0x64F6B4")]
	private bool <isValid>k__BackingField;

	[Token(Token = "0x400096B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private SteamVR_Events.Action newPosesAction;

	[Token(Token = "0x17000100")]
	public bool isValid
	{
		[Token(Token = "0x6000B18")]
		[Address(RVA = "0x87BD38", Offset = "0x87BD38", VA = "0x87BD38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x669318", Offset = "0x669318")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000B19")]
		[Address(RVA = "0x87BD40", Offset = "0x87BD40", VA = "0x87BD40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x669328", Offset = "0x669328")]
		private set
		{
		}
	}

	[Token(Token = "0x6000B1A")]
	[Address(RVA = "0x87BD4C", Offset = "0x87BD4C", VA = "0x87BD4C")]
	private void OnNewPoses(TrackedDevicePose_t[] poses)
	{
	}

	[Token(Token = "0x6000B1B")]
	[Address(RVA = "0x87C088", Offset = "0x87C088", VA = "0x87C088")]
	private SteamVR_TrackedObject()
	{
	}

	[Token(Token = "0x6000B1C")]
	[Address(RVA = "0x87C138", Offset = "0x87C138", VA = "0x87C138")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000B1D")]
	[Address(RVA = "0x87C1F0", Offset = "0x87C1F0", VA = "0x87C1F0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000B1E")]
	[Address(RVA = "0x87C230", Offset = "0x87C230", VA = "0x87C230")]
	public void SetDeviceIndex(int index)
	{
	}
}
[Token(Token = "0x200019B")]
[ExecuteInEditMode]
public class SteamVR_UpdatePoses : MonoBehaviour
{
	[Token(Token = "0x6000B1F")]
	[Address(RVA = "0x87C318", Offset = "0x87C318", VA = "0x87C318")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000B20")]
	[Address(RVA = "0x87C3B4", Offset = "0x87C3B4", VA = "0x87C3B4")]
	public SteamVR_UpdatePoses()
	{
	}
}
[Token(Token = "0x200019C")]
public static class SteamVR_Utils
{
	[Serializable]
	[Token(Token = "0x200060F")]
	public struct RigidTransform
	{
		[Token(Token = "0x4002785")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 pos;

		[Token(Token = "0x4002786")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Quaternion rot;

		[Token(Token = "0x170002AA")]
		public static RigidTransform identity
		{
			[Token(Token = "0x6002BA3")]
			[Address(RVA = "0x87EA7C", Offset = "0x87EA7C", VA = "0x87EA7C")]
			get
			{
				return default(RigidTransform);
			}
		}

		[Token(Token = "0x6002BA4")]
		[Address(RVA = "0x87EB4C", Offset = "0x87EB4C", VA = "0x87EB4C")]
		public static RigidTransform FromLocal(Transform t)
		{
			return default(RigidTransform);
		}

		[Token(Token = "0x6002BA5")]
		[Address(RVA = "0x6DE800", Offset = "0x6DE800", VA = "0x6DE800")]
		public RigidTransform(Vector3 pos, Quaternion rot)
		{
		}

		[Token(Token = "0x6002BA6")]
		[Address(RVA = "0x6DE814", Offset = "0x6DE814", VA = "0x6DE814")]
		public RigidTransform(Transform t)
		{
		}

		[Token(Token = "0x6002BA7")]
		[Address(RVA = "0x6DE81C", Offset = "0x6DE81C", VA = "0x6DE81C")]
		public RigidTransform(Transform from, Transform to)
		{
		}

		[Token(Token = "0x6002BA8")]
		[Address(RVA = "0x6DE824", Offset = "0x6DE824", VA = "0x6DE824")]
		public RigidTransform(HmdMatrix34_t pose)
		{
		}

		[Token(Token = "0x6002BA9")]
		[Address(RVA = "0x6DE860", Offset = "0x6DE860", VA = "0x6DE860")]
		public RigidTransform(HmdMatrix44_t pose)
		{
		}

		[Token(Token = "0x6002BAA")]
		[Address(RVA = "0x6DE8A4", Offset = "0x6DE8A4", VA = "0x6DE8A4")]
		public HmdMatrix44_t ToHmdMatrix44()
		{
			return default(HmdMatrix44_t);
		}

		[Token(Token = "0x6002BAB")]
		[Address(RVA = "0x6DE8AC", Offset = "0x6DE8AC", VA = "0x6DE8AC")]
		public HmdMatrix34_t ToHmdMatrix34()
		{
			return default(HmdMatrix34_t);
		}

		[Token(Token = "0x6002BAC")]
		[Address(RVA = "0x6DE8B4", Offset = "0x6DE8B4", VA = "0x6DE8B4", Slot = "0")]
		public override bool Equals(object o)
		{
			return default(bool);
		}

		[Token(Token = "0x6002BAD")]
		[Address(RVA = "0x6DE8BC", Offset = "0x6DE8BC", VA = "0x6DE8BC", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x6002BAE")]
		[Address(RVA = "0x87F7A8", Offset = "0x87F7A8", VA = "0x87F7A8")]
		public static bool operator ==(RigidTransform a, RigidTransform b)
		{
			return default(bool);
		}

		[Token(Token = "0x6002BAF")]
		[Address(RVA = "0x87F8E0", Offset = "0x87F8E0", VA = "0x87F8E0")]
		public static bool operator !=(RigidTransform a, RigidTransform b)
		{
			return default(bool);
		}

		[Token(Token = "0x6002BB0")]
		[Address(RVA = "0x87FA18", Offset = "0x87FA18", VA = "0x87FA18")]
		public static RigidTransform operator *(RigidTransform a, RigidTransform b)
		{
			return default(RigidTransform);
		}

		[Token(Token = "0x6002BB1")]
		[Address(RVA = "0x6DE8F8", Offset = "0x6DE8F8", VA = "0x6DE8F8")]
		public void Inverse()
		{
		}

		[Token(Token = "0x6002BB2")]
		[Address(RVA = "0x6DE900", Offset = "0x6DE900", VA = "0x6DE900")]
		public RigidTransform GetInverse()
		{
			return default(RigidTransform);
		}

		[Token(Token = "0x6002BB3")]
		[Address(RVA = "0x6DE908", Offset = "0x6DE908", VA = "0x6DE908")]
		public void Multiply(RigidTransform a, RigidTransform b)
		{
		}

		[Token(Token = "0x6002BB4")]
		[Address(RVA = "0x6DE950", Offset = "0x6DE950", VA = "0x6DE950")]
		public Vector3 InverseTransformPoint(Vector3 point)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002BB5")]
		[Address(RVA = "0x6DE958", Offset = "0x6DE958", VA = "0x6DE958")]
		public Vector3 TransformPoint(Vector3 point)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002BB6")]
		[Address(RVA = "0x880044", Offset = "0x880044", VA = "0x880044")]
		public static Vector3 operator *(RigidTransform t, Vector3 v)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002BB7")]
		[Address(RVA = "0x880048", Offset = "0x880048", VA = "0x880048")]
		public static RigidTransform Interpolate(RigidTransform a, RigidTransform b, float t)
		{
			return default(RigidTransform);
		}

		[Token(Token = "0x6002BB8")]
		[Address(RVA = "0x6DE960", Offset = "0x6DE960", VA = "0x6DE960")]
		public void Interpolate(RigidTransform to, float t)
		{
		}
	}

	[Token(Token = "0x2000610")]
	public delegate object SystemFn(CVRSystem system, params object[] args);

	[Token(Token = "0x6000B21")]
	[Address(RVA = "0x87C3BC", Offset = "0x87C3BC", VA = "0x87C3BC")]
	public static Quaternion Slerp(Quaternion A, Quaternion B, float t)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000B22")]
	[Address(RVA = "0x87C588", Offset = "0x87C588", VA = "0x87C588")]
	public static Vector3 Lerp(Vector3 A, Vector3 B, float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000B23")]
	[Address(RVA = "0x87C5E0", Offset = "0x87C5E0", VA = "0x87C5E0")]
	public static float Lerp(float A, float B, float t)
	{
		return default(float);
	}

	[Token(Token = "0x6000B24")]
	[Address(RVA = "0x87C5F0", Offset = "0x87C5F0", VA = "0x87C5F0")]
	public static double Lerp(double A, double B, double t)
	{
		return default(double);
	}

	[Token(Token = "0x6000B25")]
	[Address(RVA = "0x87C600", Offset = "0x87C600", VA = "0x87C600")]
	public static float InverseLerp(Vector3 A, Vector3 B, Vector3 result)
	{
		return default(float);
	}

	[Token(Token = "0x6000B26")]
	[Address(RVA = "0x87C704", Offset = "0x87C704", VA = "0x87C704")]
	public static float InverseLerp(float A, float B, float result)
	{
		return default(float);
	}

	[Token(Token = "0x6000B27")]
	[Address(RVA = "0x87C714", Offset = "0x87C714", VA = "0x87C714")]
	public static double InverseLerp(double A, double B, double result)
	{
		return default(double);
	}

	[Token(Token = "0x6000B28")]
	[Address(RVA = "0x87C724", Offset = "0x87C724", VA = "0x87C724")]
	public static float Saturate(float A)
	{
		return default(float);
	}

	[Token(Token = "0x6000B29")]
	[Address(RVA = "0x87C740", Offset = "0x87C740", VA = "0x87C740")]
	public static Vector2 Saturate(Vector2 A)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000B2A")]
	[Address(RVA = "0x87C78C", Offset = "0x87C78C", VA = "0x87C78C")]
	public static float Abs(float A)
	{
		return default(float);
	}

	[Token(Token = "0x6000B2B")]
	[Address(RVA = "0x87C79C", Offset = "0x87C79C", VA = "0x87C79C")]
	public static Vector2 Abs(Vector2 A)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000B2C")]
	[Address(RVA = "0x87C7E0", Offset = "0x87C7E0", VA = "0x87C7E0")]
	private static float _copysign(float sizeval, float signval)
	{
		return default(float);
	}

	[Token(Token = "0x6000B2D")]
	[Address(RVA = "0x87C89C", Offset = "0x87C89C", VA = "0x87C89C")]
	public static Quaternion GetRotation(this Matrix4x4 matrix)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000B2E")]
	[Address(RVA = "0x87CA68", Offset = "0x87CA68", VA = "0x87CA68")]
	public static Vector3 GetPosition(this Matrix4x4 matrix)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000B2F")]
	[Address(RVA = "0x87CAA4", Offset = "0x87CAA4", VA = "0x87CAA4")]
	public static Vector3 GetScale(this Matrix4x4 m)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000B30")]
	[Address(RVA = "0x87CBDC", Offset = "0x87CBDC", VA = "0x87CBDC")]
	public static object CallSystemFn(SystemFn fn, params object[] args)
	{
		return null;
	}

	[Token(Token = "0x6000B31")]
	[Address(RVA = "0x87D4D8", Offset = "0x87D4D8", VA = "0x87D4D8")]
	public static void TakeStereoScreenshot(uint screenshotHandle, GameObject target, int cellSize, float ipd, ref string previewFilename, ref string VRFilename)
	{
	}
}
[Token(Token = "0x200019D")]
public class gabsAutoButton : MonoBehaviour
{
	[Token(Token = "0x400096C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float autoClickDelay;

	[Token(Token = "0x400096D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private string _sceneName;

	[Token(Token = "0x400096E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private string _checkpointName;

	[Token(Token = "0x400096F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private string _screenName;

	[Token(Token = "0x6000B32")]
	[Address(RVA = "0x80FFEC", Offset = "0x80FFEC", VA = "0x80FFEC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B33")]
	[Address(RVA = "0x80FFF0", Offset = "0x80FFF0", VA = "0x80FFF0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B34")]
	[Address(RVA = "0x8100C4", Offset = "0x8100C4", VA = "0x8100C4")]
	public gabsAutoButton()
	{
	}
}
[Token(Token = "0x200019E")]
public class GabsLastMinuteFix : MonoBehaviour
{
	[Token(Token = "0x4000970")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 angle;

	[Token(Token = "0x4000971")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector3 scale;

	[Token(Token = "0x6000B35")]
	[Address(RVA = "0x83D4F8", Offset = "0x83D4F8", VA = "0x83D4F8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B36")]
	[Address(RVA = "0x83D4FC", Offset = "0x83D4FC", VA = "0x83D4FC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B37")]
	[Address(RVA = "0x83D5E4", Offset = "0x83D5E4", VA = "0x83D5E4")]
	public GabsLastMinuteFix()
	{
	}
}
[Token(Token = "0x200019F")]
public class GabsQAHelp : MonoBehaviour
{
	[Token(Token = "0x4000972")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool GABSQAHELPERON;

	[Token(Token = "0x6000B38")]
	[Address(RVA = "0x83D5EC", Offset = "0x83D5EC", VA = "0x83D5EC")]
	public GabsQAHelp()
	{
	}
}
[Token(Token = "0x20001A0")]
public class Fracture : MonoBehaviour
{
	[Token(Token = "0x4000973")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform parts;

	[Token(Token = "0x4000974")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform breakable;

	[Token(Token = "0x6000B3A")]
	[Address(RVA = "0x83B488", Offset = "0x83B488", VA = "0x83B488")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000B3B")]
	[Address(RVA = "0x83BD68", Offset = "0x83BD68", VA = "0x83BD68")]
	public Fracture()
	{
	}
}
[Token(Token = "0x20001A1")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x63E314", Offset = "0x63E314")]
public class Shoot : MonoBehaviour
{
	[Token(Token = "0x4000975")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Transform camera1;

	[Token(Token = "0x4000976")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Rigidbody[] projectails;

	[Token(Token = "0x4000977")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float time;

	[Token(Token = "0x6000B3C")]
	[Address(RVA = "0x861080", Offset = "0x861080", VA = "0x861080")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B3D")]
	[Address(RVA = "0x86113C", Offset = "0x86113C", VA = "0x86113C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B3E")]
	[Address(RVA = "0x8611C8", Offset = "0x8611C8", VA = "0x8611C8")]
	private void Attack()
	{
	}

	[Token(Token = "0x6000B3F")]
	[Address(RVA = "0x861608", Offset = "0x861608", VA = "0x861608")]
	public Shoot()
	{
	}
}
[Token(Token = "0x20001A2")]
public class Pvr_Controller : MonoBehaviour
{
	[Token(Token = "0x2000611")]
	public enum UserHandNess
	{
		[Token(Token = "0x4002788")]
		Right,
		[Token(Token = "0x4002789")]
		Left
	}

	[Token(Token = "0x2000612")]
	public enum GazeType
	{
		[Token(Token = "0x400278B")]
		Never,
		[Token(Token = "0x400278C")]
		DuringMotion,
		[Token(Token = "0x400278D")]
		Always
	}

	[Token(Token = "0x2000613")]
	public enum ControllerAxis
	{
		[Token(Token = "0x400278F")]
		Controller,
		[Token(Token = "0x4002790")]
		Wrist,
		[Token(Token = "0x4002791")]
		Elbow,
		[Token(Token = "0x4002792")]
		Shoulder
	}

	[Token(Token = "0x4000978")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject controller0;

	[Token(Token = "0x4000979")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject controller1;

	[Token(Token = "0x400097A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static UserHandNess handness;

	[Token(Token = "0x400097B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ControllerAxis Axis;

	[Token(Token = "0x400097C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public GazeType Gazetype;

	[Token(Token = "0x400097D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x64F704", Offset = "0x64F704")]
	public float ElbowHeight;

	[Token(Token = "0x400097E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x64F720", Offset = "0x64F720")]
	public float ElbowDepth;

	[Token(Token = "0x400097F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x64F73C", Offset = "0x64F73C")]
	public float PointerTiltAngle;

	[Token(Token = "0x4000980")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float mouseX;

	[Token(Token = "0x4000981")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float mouseY;

	[Token(Token = "0x4000982")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float mouseZ;

	[Token(Token = "0x4000983")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Vector3[] inputDirection;

	[Token(Token = "0x4000984")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64F754", Offset = "0x64F754")]
	private static Vector3 <pointerPosition>k__BackingField;

	[Token(Token = "0x4000985")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64F764", Offset = "0x64F764")]
	private static Quaternion <pointerRotation>k__BackingField;

	[Token(Token = "0x4000986")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64F774", Offset = "0x64F774")]
	private static Vector3 <elbowPosition>k__BackingField;

	[Token(Token = "0x4000987")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64F784", Offset = "0x64F784")]
	private static Quaternion <elbowRotation>k__BackingField;

	[Token(Token = "0x4000988")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64F794", Offset = "0x64F794")]
	private static Vector3 <wristPosition>k__BackingField;

	[Token(Token = "0x4000989")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64F7A4", Offset = "0x64F7A4")]
	private static Quaternion <wristRotation>k__BackingField;

	[Token(Token = "0x400098A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64F7B4", Offset = "0x64F7B4")]
	private static Vector3 <shoulderPosition>k__BackingField;

	[Token(Token = "0x400098B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64F7C4", Offset = "0x64F7C4")]
	private static Quaternion <shoulderRotation>k__BackingField;

	[Token(Token = "0x17000101")]
	public static Vector3 pointerPosition
	{
		[Token(Token = "0x6000B53")]
		[Address(RVA = "0x8E3E90", Offset = "0x8E3E90", VA = "0x8E3E90")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x669368", Offset = "0x669368")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x6000B54")]
		[Address(RVA = "0x8E3DAC", Offset = "0x8E3DAC", VA = "0x8E3DAC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x669378", Offset = "0x669378")]
		set
		{
		}
	}

	[Token(Token = "0x17000102")]
	public static Quaternion pointerRotation
	{
		[Token(Token = "0x6000B55")]
		[Address(RVA = "0x8E3EE4", Offset = "0x8E3EE4", VA = "0x8E3EE4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x669388", Offset = "0x669388")]
		get
		{
			return default(Quaternion);
		}
		[Token(Token = "0x6000B56")]
		[Address(RVA = "0x8E3E1C", Offset = "0x8E3E1C", VA = "0x8E3E1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x669398", Offset = "0x669398")]
		set
		{
		}
	}

	[Token(Token = "0x17000103")]
	public static Vector3 elbowPosition
	{
		[Token(Token = "0x6000B57")]
		[Address(RVA = "0x8E41A8", Offset = "0x8E41A8", VA = "0x8E41A8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6693A8", Offset = "0x6693A8")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x6000B58")]
		[Address(RVA = "0x8E40C4", Offset = "0x8E40C4", VA = "0x8E40C4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6693B8", Offset = "0x6693B8")]
		set
		{
		}
	}

	[Token(Token = "0x17000104")]
	public static Quaternion elbowRotation
	{
		[Token(Token = "0x6000B59")]
		[Address(RVA = "0x8E41FC", Offset = "0x8E41FC", VA = "0x8E41FC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6693C8", Offset = "0x6693C8")]
		get
		{
			return default(Quaternion);
		}
		[Token(Token = "0x6000B5A")]
		[Address(RVA = "0x8E4134", Offset = "0x8E4134", VA = "0x8E4134")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6693D8", Offset = "0x6693D8")]
		set
		{
		}
	}

	[Token(Token = "0x17000105")]
	public static Vector3 wristPosition
	{
		[Token(Token = "0x6000B5B")]
		[Address(RVA = "0x8E401C", Offset = "0x8E401C", VA = "0x8E401C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6693E8", Offset = "0x6693E8")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x6000B5C")]
		[Address(RVA = "0x8E3F38", Offset = "0x8E3F38", VA = "0x8E3F38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6693F8", Offset = "0x6693F8")]
		set
		{
		}
	}

	[Token(Token = "0x17000106")]
	public static Quaternion wristRotation
	{
		[Token(Token = "0x6000B5D")]
		[Address(RVA = "0x8E4070", Offset = "0x8E4070", VA = "0x8E4070")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x669408", Offset = "0x669408")]
		get
		{
			return default(Quaternion);
		}
		[Token(Token = "0x6000B5E")]
		[Address(RVA = "0x8E3FA8", Offset = "0x8E3FA8", VA = "0x8E3FA8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x669418", Offset = "0x669418")]
		set
		{
		}
	}

	[Token(Token = "0x17000107")]
	public static Vector3 shoulderPosition
	{
		[Token(Token = "0x6000B5F")]
		[Address(RVA = "0x8E4334", Offset = "0x8E4334", VA = "0x8E4334")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x669428", Offset = "0x669428")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x6000B60")]
		[Address(RVA = "0x8E4250", Offset = "0x8E4250", VA = "0x8E4250")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x669438", Offset = "0x669438")]
		set
		{
		}
	}

	[Token(Token = "0x17000108")]
	public static Quaternion shoulderRotation
	{
		[Token(Token = "0x6000B61")]
		[Address(RVA = "0x8E4388", Offset = "0x8E4388", VA = "0x8E4388")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x669448", Offset = "0x669448")]
		get
		{
			return default(Quaternion);
		}
		[Token(Token = "0x6000B62")]
		[Address(RVA = "0x8E42C0", Offset = "0x8E42C0", VA = "0x8E42C0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x669458", Offset = "0x669458")]
		set
		{
		}
	}

	[Token(Token = "0x6000B40")]
	[Address(RVA = "0x8E19B8", Offset = "0x8E19B8", VA = "0x8E19B8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000B41")]
	[Address(RVA = "0x8E1AF4", Offset = "0x8E1AF4", VA = "0x8E1AF4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B42")]
	[Address(RVA = "0x8E1B64", Offset = "0x8E1B64", VA = "0x8E1B64")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000B43")]
	[Address(RVA = "0x8E1CA0", Offset = "0x8E1CA0", VA = "0x8E1CA0")]
	private void MainControllerChanged(string index)
	{
	}

	[Token(Token = "0x6000B44")]
	[Address(RVA = "0x8E1D48", Offset = "0x8E1D48", VA = "0x8E1D48")]
	private void HandnessChanged(string index)
	{
	}

	[Token(Token = "0x6000B45")]
	[Address(RVA = "0x8E1D4C", Offset = "0x8E1D4C", VA = "0x8E1D4C")]
	private void ServiceStartSuccess()
	{
	}

	[Token(Token = "0x6000B46")]
	[Address(RVA = "0x8E1CA4", Offset = "0x8E1CA4", VA = "0x8E1CA4")]
	private void RefreshHandness()
	{
	}

	[Token(Token = "0x6000B47")]
	[Address(RVA = "0x8E1DAC", Offset = "0x8E1DAC", VA = "0x8E1DAC")]
	private void OnApplicationPause(bool pause)
	{
	}

	[Token(Token = "0x6000B48")]
	[Address(RVA = "0x8E1F94", Offset = "0x8E1F94", VA = "0x8E1F94")]
	private void ShowController()
	{
	}

	[Token(Token = "0x6000B49")]
	[Address(RVA = "0x8E2160", Offset = "0x8E2160", VA = "0x8E2160")]
	private void CheckControllerState(string data)
	{
	}

	[Token(Token = "0x6000B4A")]
	[Address(RVA = "0x8E224C", Offset = "0x8E224C", VA = "0x8E224C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B4B")]
	[Address(RVA = "0x8E1D50", Offset = "0x8E1D50", VA = "0x8E1D50")]
	public static void ChangeHandNess()
	{
	}

	[Token(Token = "0x6000B4C")]
	[Address(RVA = "0x8E2534", Offset = "0x8E2534", VA = "0x8E2534")]
	private void DoUpdateControler0()
	{
	}

	[Token(Token = "0x6000B4D")]
	[Address(RVA = "0x8E25B0", Offset = "0x8E25B0", VA = "0x8E25B0")]
	private void DoUpdateControler1()
	{
	}

	[Token(Token = "0x6000B4E")]
	[Address(RVA = "0x8E2634", Offset = "0x8E2634", VA = "0x8E2634")]
	private void UpdateControlloerRay(bool update0 = true, bool update1 = true)
	{
	}

	[Token(Token = "0x6000B4F")]
	[Address(RVA = "0x8E3BC8", Offset = "0x8E3BC8", VA = "0x8E3BC8")]
	private Quaternion UpdateSimulatedFrameParams()
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000B50")]
	[Address(RVA = "0x8E27BC", Offset = "0x8E27BC", VA = "0x8E27BC")]
	private void SetArmParaToSo(int hand, int gazeType, float elbowHeight, float elbowDepth, float pointerTiltAngle)
	{
	}

	[Token(Token = "0x6000B51")]
	[Address(RVA = "0x8E27CC", Offset = "0x8E27CC", VA = "0x8E27CC")]
	private void CalcArmModelfromSo(int hand)
	{
	}

	[Token(Token = "0x6000B52")]
	[Address(RVA = "0x8E2EC0", Offset = "0x8E2EC0", VA = "0x8E2EC0")]
	public void UpdateControllerDataSO(int hand)
	{
	}

	[Token(Token = "0x6000B63")]
	[Address(RVA = "0x8E43DC", Offset = "0x8E43DC", VA = "0x8E43DC")]
	public Pvr_Controller()
	{
	}
}
[Token(Token = "0x20001A3")]
public class Pvr_ControllerDemo : MonoBehaviour
{
	[Token(Token = "0x400098C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject HeadSetController;

	[Token(Token = "0x400098D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject controller0;

	[Token(Token = "0x400098E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject controller1;

	[Token(Token = "0x400098F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject cube;

	[Token(Token = "0x4000990")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Ray ray;

	[Token(Token = "0x4000991")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private GameObject currentController;

	[Token(Token = "0x4000992")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Transform lastHit;

	[Token(Token = "0x4000993")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Transform currentHit;

	[Token(Token = "0x4000994")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private Material normat;

	[Token(Token = "0x4000995")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private Material gazemat;

	[Token(Token = "0x4000996")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private Material clickmat;

	[Token(Token = "0x4000997")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private bool noClick;

	[Token(Token = "0x4000998")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private GameObject referenceObj;

	[Token(Token = "0x4000999")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public float rayDefaultLength;

	[Token(Token = "0x400099A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private bool isHasController;

	[Token(Token = "0x400099B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x95")]
	private bool headcontrolmode;

	[Token(Token = "0x400099C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private RaycastHit hit;

	[Token(Token = "0x400099D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private GameObject rayLine;

	[Token(Token = "0x400099E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private GameObject dot;

	[Token(Token = "0x400099F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private Transform dragObj;

	[Token(Token = "0x40009A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private float disX;

	[Token(Token = "0x40009A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	private float disY;

	[Token(Token = "0x40009A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private float disZ;

	[Token(Token = "0x6000B64")]
	[Address(RVA = "0x8E4444", Offset = "0x8E4444", VA = "0x8E4444")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B65")]
	[Address(RVA = "0x8E45D8", Offset = "0x8E45D8", VA = "0x8E45D8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000B66")]
	[Address(RVA = "0x8E46F0", Offset = "0x8E46F0", VA = "0x8E46F0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B67")]
	[Address(RVA = "0x8E677C", Offset = "0x8E677C", VA = "0x8E677C")]
	private void ServiceStartSuccess()
	{
	}

	[Token(Token = "0x6000B68")]
	[Address(RVA = "0x8E6828", Offset = "0x8E6828", VA = "0x8E6828")]
	private void ControllerStateListener(string data)
	{
	}

	[Token(Token = "0x6000B69")]
	[Address(RVA = "0x8E68D4", Offset = "0x8E68D4", VA = "0x8E68D4")]
	private void CheckControllerStateForGoblin(string state)
	{
	}

	[Token(Token = "0x6000B6A")]
	[Address(RVA = "0x8E6974", Offset = "0x8E6974", VA = "0x8E6974")]
	public void SwitchControlMode()
	{
	}

	[Token(Token = "0x6000B6B")]
	[Address(RVA = "0x8E6978", Offset = "0x8E6978", VA = "0x8E6978")]
	public Pvr_ControllerDemo()
	{
	}
}
[Token(Token = "0x20001A4")]
public class Pvr_ControllerEventsExamples : MonoBehaviour
{
	[Token(Token = "0x6000B6C")]
	[Address(RVA = "0x8E6988", Offset = "0x8E6988", VA = "0x8E6988")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B6D")]
	[Address(RVA = "0x8E6BE4", Offset = "0x8E6BE4", VA = "0x8E6BE4")]
	private void UIPointerElementEnter(object sender, UIPointerEventArgs e)
	{
	}

	[Token(Token = "0x6000B6E")]
	[Address(RVA = "0x8E6C8C", Offset = "0x8E6C8C", VA = "0x8E6C8C")]
	private void UIPointerElementExit(object sender, UIPointerEventArgs e)
	{
	}

	[Token(Token = "0x6000B6F")]
	[Address(RVA = "0x8E6D34", Offset = "0x8E6D34", VA = "0x8E6D34")]
	private void UIPointerElementClick(object sender, UIPointerEventArgs e)
	{
	}

	[Token(Token = "0x6000B70")]
	[Address(RVA = "0x8E6DDC", Offset = "0x8E6DDC", VA = "0x8E6DDC")]
	private void UIPointerElementDragStart(object sender, UIPointerEventArgs e)
	{
	}

	[Token(Token = "0x6000B71")]
	[Address(RVA = "0x8E6E84", Offset = "0x8E6E84", VA = "0x8E6E84")]
	private void UIPointerElementDragEnd(object sender, UIPointerEventArgs e)
	{
	}

	[Token(Token = "0x6000B72")]
	[Address(RVA = "0x8E6F2C", Offset = "0x8E6F2C", VA = "0x8E6F2C")]
	public Pvr_ControllerEventsExamples()
	{
	}
}
[Token(Token = "0x20001A5")]
public class Pvr_ControllerInit : MonoBehaviour
{
	[Token(Token = "0x2000614")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6441A8", Offset = "0x6441A8")]
	private sealed class <RefreshController>d__31 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002793")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002794")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002795")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int id;

		[Token(Token = "0x4002796")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Pvr_ControllerInit <>4__this;

		[Token(Token = "0x170002AB")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002BC0")]
			[Address(RVA = "0x8E945C", Offset = "0x8E945C", VA = "0x8E945C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002AC")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002BC2")]
			[Address(RVA = "0x8E94CC", Offset = "0x8E94CC", VA = "0x8E94CC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002BBD")]
		[Address(RVA = "0x8E7F8C", Offset = "0x8E7F8C", VA = "0x8E7F8C")]
		[DebuggerHidden]
		public <RefreshController>d__31(int <>1__state)
		{
		}

		[Token(Token = "0x6002BBE")]
		[Address(RVA = "0x8E8F04", Offset = "0x8E8F04", VA = "0x8E8F04", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002BBF")]
		[Address(RVA = "0x8E8F08", Offset = "0x8E8F08", VA = "0x8E8F08", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002BC1")]
		[Address(RVA = "0x8E9464", Offset = "0x8E9464", VA = "0x8E9464", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40009A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ControllerVariety Variety;

	[Token(Token = "0x40009A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private bool isCustomModel;

	[Token(Token = "0x40009A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject goblin;

	[Token(Token = "0x40009A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject g2;

	[Token(Token = "0x40009A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject neo2L;

	[Token(Token = "0x40009A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private GameObject neo2R;

	[Token(Token = "0x40009A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private GameObject neo3L;

	[Token(Token = "0x40009AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private GameObject neo3R;

	[Token(Token = "0x40009AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Material standardMat;

	[Token(Token = "0x40009AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private Material unlitMat;

	[Token(Token = "0x40009AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private int controllerType;

	[Token(Token = "0x40009AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[HideInInspector]
	public bool loadModelSuccess;

	[Token(Token = "0x40009AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int systemOrUnity;

	[Token(Token = "0x40009B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private JsonData curControllerData;

	[Token(Token = "0x40009B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private string modelName;

	[Token(Token = "0x40009B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private string texFormat;

	[Token(Token = "0x40009B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private string prePath;

	[Token(Token = "0x40009B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private string modelFilePath;

	[Token(Token = "0x40009B5")]
	private const string goblinTexbasePath = "Controller/controller1/controller1";

	[Token(Token = "0x40009B6")]
	private const string g2TexbasePath = "Controller/controller3/controller3";

	[Token(Token = "0x40009B7")]
	private const string neo2TexbasePath = "Controller/controller4/controller4";

	[Token(Token = "0x40009B8")]
	private const string neo3TexbasePath = "Controller/controller5/controller5";

	[Token(Token = "0x6000B73")]
	[Address(RVA = "0x8E6F34", Offset = "0x8E6F34", VA = "0x8E6F34")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000B74")]
	[Address(RVA = "0x8E70DC", Offset = "0x8E70DC", VA = "0x8E70DC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000B75")]
	[Address(RVA = "0x8E71E0", Offset = "0x8E71E0", VA = "0x8E71E0")]
	private void OnApplicationPause(bool pause)
	{
	}

	[Token(Token = "0x6000B76")]
	[Address(RVA = "0x8E7570", Offset = "0x8E7570", VA = "0x8E7570")]
	private void ServiceStartSuccess()
	{
	}

	[Token(Token = "0x6000B77")]
	[Address(RVA = "0x8E77A4", Offset = "0x8E77A4", VA = "0x8E77A4")]
	private void LoadResFromJson()
	{
	}

	[Token(Token = "0x6000B78")]
	[Address(RVA = "0x8E79D8", Offset = "0x8E79D8", VA = "0x8E79D8")]
	private void CheckControllerStateForGoblin(string state)
	{
	}

	[Token(Token = "0x6000B79")]
	[Address(RVA = "0x8E7E18", Offset = "0x8E7E18", VA = "0x8E7E18")]
	private void CheckControllerStateOfAbility(string data)
	{
	}

	[Token(Token = "0x6000B7A")]
	[Address(RVA = "0x8E71EC", Offset = "0x8E71EC", VA = "0x8E71EC")]
	private void DestroyLocalController()
	{
	}

	[Token(Token = "0x6000B7B")]
	[Address(RVA = "0x8E7AC4", Offset = "0x8E7AC4", VA = "0x8E7AC4")]
	private void DestroySysController()
	{
	}

	[Token(Token = "0x6000B7C")]
	[Address(RVA = "0x8E7940", Offset = "0x8E7940", VA = "0x8E7940")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x669468", Offset = "0x669468")]
	private IEnumerator RefreshController(int id)
	{
		return null;
	}

	[Token(Token = "0x6000B7D")]
	[Address(RVA = "0x8E7FB8", Offset = "0x8E7FB8", VA = "0x8E7FB8")]
	private void LoadControllerFromPrefab()
	{
	}

	[Token(Token = "0x6000B7E")]
	[Address(RVA = "0x8E8684", Offset = "0x8E8684", VA = "0x8E8684")]
	private void LoadControllerFromSystem(int id)
	{
	}

	[Token(Token = "0x6000B7F")]
	[Address(RVA = "0x8E82B4", Offset = "0x8E82B4", VA = "0x8E82B4")]
	private void LoadTexture(Pvr_ControllerVisual visual, string controllerName, bool fromRes)
	{
	}

	[Token(Token = "0x6000B80")]
	[Address(RVA = "0x8E8BFC", Offset = "0x8E8BFC", VA = "0x8E8BFC")]
	private Texture2D LoadOneTexture(string filepath, bool fromRes)
	{
		return null;
	}

	[Token(Token = "0x6000B81")]
	[Address(RVA = "0x8E8D1C", Offset = "0x8E8D1C", VA = "0x8E8D1C")]
	private byte[] ReadPNG(string path)
	{
		return null;
	}

	[Token(Token = "0x6000B82")]
	[Address(RVA = "0x8E8E90", Offset = "0x8E8E90", VA = "0x8E8E90")]
	public Pvr_ControllerInit()
	{
	}
}
[Token(Token = "0x20001A6")]
public class Pvr_ControllerLink
{
	[Token(Token = "0x40009B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public AndroidJavaClass javaHummingbirdClass;

	[Token(Token = "0x40009BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AndroidJavaClass javaPico2ReceiverClass;

	[Token(Token = "0x40009BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AndroidJavaClass javaserviceClass;

	[Token(Token = "0x40009BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AndroidJavaClass javavractivityclass;

	[Token(Token = "0x40009BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AndroidJavaClass javaCVClass;

	[Token(Token = "0x40009BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AndroidJavaObject activity;

	[Token(Token = "0x40009BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string gameobjname;

	[Token(Token = "0x40009C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool picoDevice;

	[Token(Token = "0x40009C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public string hummingBirdMac;

	[Token(Token = "0x40009C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public int hummingBirdRSSI;

	[Token(Token = "0x40009C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public bool goblinserviceStarted;

	[Token(Token = "0x40009C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5D")]
	public bool neoserviceStarted;

	[Token(Token = "0x40009C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5E")]
	public bool controller0Connected;

	[Token(Token = "0x40009C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5F")]
	public bool controller1Connected;

	[Token(Token = "0x40009C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public int mainHandID;

	[Token(Token = "0x40009C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public Pvr_Controller.UserHandNess handness;

	[Token(Token = "0x40009C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public int controllerType;

	[Token(Token = "0x40009CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ControllerHand Controller0;

	[Token(Token = "0x40009CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public ControllerHand Controller1;

	[Token(Token = "0x40009CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public int platFormType;

	[Token(Token = "0x40009CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public int trackingmode;

	[Token(Token = "0x40009CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public int systemProp;

	[Token(Token = "0x40009CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public int enablehand6dofbyhead;

	[Token(Token = "0x40009D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public bool switchHomeKey;

	[Token(Token = "0x40009D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private int iPhoneHMDModeEnabled;

	[Token(Token = "0x40009D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private float[] hbPoseData;

	[Token(Token = "0x40009D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private float[] sensorData;

	[Token(Token = "0x40009D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private int[] keyData;

	[Token(Token = "0x40009D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private int[] neo3TouchValue;

	[Token(Token = "0x40009D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private float[] fixedState;

	[Token(Token = "0x40009D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private float[] neoposeData;

	[Token(Token = "0x40009D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private int[] goblinKeyArray;

	[Token(Token = "0x40009D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private int[] neoKeyArray;

	[Token(Token = "0x40009DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private int[] neotriggerV;

	[Token(Token = "0x40009DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private float[] velocity;

	[Token(Token = "0x40009DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private float[] angularVelocity;

	[Token(Token = "0x40009DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private float[] acceData;

	[Token(Token = "0x6000B83")]
	[Address(RVA = "0x8E94D4", Offset = "0x8E94D4", VA = "0x8E94D4")]
	public Pvr_ControllerLink(string name)
	{
	}

	[Token(Token = "0x6000B84")]
	[Address(RVA = "0x8E98E0", Offset = "0x8E98E0", VA = "0x8E98E0")]
	private void StartHummingBirdService()
	{
	}

	[Token(Token = "0x6000B85")]
	[Address(RVA = "0x8EA304", Offset = "0x8EA304", VA = "0x8EA304")]
	public bool IsServiceExisted()
	{
		return default(bool);
	}

	[Token(Token = "0x6000B86")]
	[Address(RVA = "0x8EA068", Offset = "0x8EA068", VA = "0x8EA068")]
	public void SetGameObjectToJar(string name)
	{
	}

	[Token(Token = "0x6000B87")]
	[Address(RVA = "0x8EA188", Offset = "0x8EA188", VA = "0x8EA188")]
	public void BindService()
	{
	}

	[Token(Token = "0x6000B88")]
	[Address(RVA = "0x8EA4BC", Offset = "0x8EA4BC", VA = "0x8EA4BC")]
	public void UnBindService()
	{
	}

	[Token(Token = "0x6000B89")]
	[Address(RVA = "0x8EA638", Offset = "0x8EA638", VA = "0x8EA638")]
	public void StopLark2Receiver()
	{
	}

	[Token(Token = "0x6000B8A")]
	[Address(RVA = "0x8EA7D0", Offset = "0x8EA7D0", VA = "0x8EA7D0")]
	public void StartLark2Receiver()
	{
	}

	[Token(Token = "0x6000B8B")]
	[Address(RVA = "0x8EA924", Offset = "0x8EA924", VA = "0x8EA924")]
	public void StopLark2Service()
	{
	}

	[Token(Token = "0x6000B8C")]
	[Address(RVA = "0x8EAABC", Offset = "0x8EAABC", VA = "0x8EAABC")]
	public void StartLark2Service()
	{
	}

	[Token(Token = "0x6000B8D")]
	[Address(RVA = "0x8EACA0", Offset = "0x8EACA0", VA = "0x8EACA0")]
	public int getHandness()
	{
		return default(int);
	}

	[Token(Token = "0x6000B8E")]
	[Address(RVA = "0x8EAE38", Offset = "0x8EAE38", VA = "0x8EAE38")]
	public void setHandness(int hand)
	{
	}

	[Token(Token = "0x6000B8F")]
	[Address(RVA = "0x8EAF9C", Offset = "0x8EAF9C", VA = "0x8EAF9C")]
	public void StartScan()
	{
	}

	[Token(Token = "0x6000B90")]
	[Address(RVA = "0x8EB0C8", Offset = "0x8EB0C8", VA = "0x8EB0C8")]
	public void StopScan()
	{
	}

	[Token(Token = "0x6000B91")]
	[Address(RVA = "0x8E9F6C", Offset = "0x8E9F6C", VA = "0x8E9F6C")]
	public int GetSysproc()
	{
		return default(int);
	}

	[Token(Token = "0x6000B92")]
	[Address(RVA = "0x8EB1F0", Offset = "0x8EB1F0", VA = "0x8EB1F0")]
	public void ResetController(int num)
	{
	}

	[Token(Token = "0x6000B93")]
	[Address(RVA = "0x8EB388", Offset = "0x8EB388", VA = "0x8EB388")]
	public void ConnectBLE()
	{
	}

	[Token(Token = "0x6000B94")]
	[Address(RVA = "0x8EB4CC", Offset = "0x8EB4CC", VA = "0x8EB4CC")]
	public void DisConnectBLE()
	{
	}

	[Token(Token = "0x6000B95")]
	[Address(RVA = "0x8EB56C", Offset = "0x8EB56C", VA = "0x8EB56C")]
	public bool StartUpgrade()
	{
		return default(bool);
	}

	[Token(Token = "0x6000B96")]
	[Address(RVA = "0x8EB630", Offset = "0x8EB630", VA = "0x8EB630")]
	public void setBinPath(string path, bool isasset)
	{
	}

	[Token(Token = "0x6000B97")]
	[Address(RVA = "0x8EB7D8", Offset = "0x8EB7D8", VA = "0x8EB7D8")]
	public string GetBLEImageType()
	{
		return null;
	}

	[Token(Token = "0x6000B98")]
	[Address(RVA = "0x8EB8C4", Offset = "0x8EB8C4", VA = "0x8EB8C4")]
	public long GetBLEVersion()
	{
		return default(long);
	}

	[Token(Token = "0x6000B99")]
	[Address(RVA = "0x8EB9B4", Offset = "0x8EB9B4", VA = "0x8EB9B4")]
	public string GetFileImageType()
	{
		return null;
	}

	[Token(Token = "0x6000B9A")]
	[Address(RVA = "0x8EBAA0", Offset = "0x8EBAA0", VA = "0x8EBAA0")]
	public long GetFileVersion()
	{
		return default(long);
	}

	[Token(Token = "0x6000B9B")]
	[Address(RVA = "0x8EBB90", Offset = "0x8EBB90", VA = "0x8EBB90")]
	public int GetControllerConnectionState(int num)
	{
		return default(int);
	}

	[Token(Token = "0x6000B9C")]
	[Address(RVA = "0x8EBEE8", Offset = "0x8EBEE8", VA = "0x8EBEE8")]
	public void RebackToLauncher()
	{
	}

	[Token(Token = "0x6000B9D")]
	[Address(RVA = "0x8EBFD4", Offset = "0x8EBFD4", VA = "0x8EBFD4")]
	public void TurnUpVolume()
	{
	}

	[Token(Token = "0x6000B9E")]
	[Address(RVA = "0x8EC17C", Offset = "0x8EC17C", VA = "0x8EC17C")]
	public void TurnDownVolume()
	{
	}

	[Token(Token = "0x6000B9F")]
	[Address(RVA = "0x8EC324", Offset = "0x8EC324", VA = "0x8EC324")]
	public float[] GetHBControllerPoseData()
	{
		return null;
	}

	[Token(Token = "0x6000BA0")]
	[Address(RVA = "0x8EC7BC", Offset = "0x8EC7BC", VA = "0x8EC7BC")]
	public float[] GetControllerSensorData()
	{
		return null;
	}

	[Token(Token = "0x6000BA1")]
	[Address(RVA = "0x8EC920", Offset = "0x8EC920", VA = "0x8EC920")]
	public int[] GetControllerKeyData()
	{
		return null;
	}

	[Token(Token = "0x6000BA2")]
	[Address(RVA = "0x8EC9AC", Offset = "0x8EC9AC", VA = "0x8EC9AC")]
	public int[] GetNeo3TouchData(int hand)
	{
		return null;
	}

	[Token(Token = "0x6000BA3")]
	[Address(RVA = "0x8ED524", Offset = "0x8ED524", VA = "0x8ED524")]
	public int GetNeo3GripValue(int hand)
	{
		return default(int);
	}

	[Token(Token = "0x6000BA4")]
	[Address(RVA = "0x8ED6C8", Offset = "0x8ED6C8", VA = "0x8ED6C8")]
	public float[] GetControllerFixedSensorState(int hand)
	{
		return null;
	}

	[Token(Token = "0x6000BA5")]
	[Address(RVA = "0x8EDF28", Offset = "0x8EDF28", VA = "0x8EDF28")]
	public float[] GetCvControllerPoseData(int hand)
	{
		return null;
	}

	[Token(Token = "0x6000BA6")]
	[Address(RVA = "0x8EE7C0", Offset = "0x8EE7C0", VA = "0x8EE7C0")]
	public int[] GetHBControllerKeyData()
	{
		return null;
	}

	[Token(Token = "0x6000BA7")]
	[Address(RVA = "0x8F05AC", Offset = "0x8F05AC", VA = "0x8F05AC")]
	public int GetHBKeyValue()
	{
		return default(int);
	}

	[Token(Token = "0x6000BA8")]
	[Address(RVA = "0x8F06D4", Offset = "0x8F06D4", VA = "0x8F06D4")]
	public int[] GetCvControllerKeyData(int hand)
	{
		return null;
	}

	[Token(Token = "0x6000BA9")]
	[Address(RVA = "0x8F3200", Offset = "0x8F3200", VA = "0x8F3200")]
	public int GetCVTriggerValue(int hand)
	{
		return default(int);
	}

	[Token(Token = "0x6000BAA")]
	[Address(RVA = "0x8F33FC", Offset = "0x8F33FC", VA = "0x8F33FC")]
	public void AutoConnectHbController(int scanTimeMs)
	{
	}

	[Token(Token = "0x6000BAB")]
	[Address(RVA = "0x8F35A8", Offset = "0x8F35A8", VA = "0x8F35A8")]
	public void StartControllerThread(int headSensorState, int handSensorState)
	{
	}

	[Token(Token = "0x6000BAC")]
	[Address(RVA = "0x8F37A0", Offset = "0x8F37A0", VA = "0x8F37A0")]
	public void StopControllerThread(int headSensorState, int handSensorState)
	{
	}

	[Token(Token = "0x6000BAD")]
	[Address(RVA = "0x8F3998", Offset = "0x8F3998", VA = "0x8F3998")]
	public void SetUnityVersionToJar(string version)
	{
	}

	[Token(Token = "0x6000BAE")]
	[Address(RVA = "0x8F3AC0", Offset = "0x8F3AC0", VA = "0x8F3AC0")]
	public Vector3 GetVelocity(int num)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000BAF")]
	[Address(RVA = "0x8F3FC0", Offset = "0x8F3FC0", VA = "0x8F3FC0")]
	public Vector3 GetAngularVelocity(int num)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000BB0")]
	[Address(RVA = "0x8F446C", Offset = "0x8F446C", VA = "0x8F446C")]
	public Vector3 GetAcceleration(int num)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000BB1")]
	[Address(RVA = "0x8F4878", Offset = "0x8F4878", VA = "0x8F4878")]
	public string GetConnectedDeviceMac()
	{
		return null;
	}

	[Token(Token = "0x6000BB2")]
	[Address(RVA = "0x8F4964", Offset = "0x8F4964", VA = "0x8F4964")]
	public void VibrateNeo2Controller(float strength, int time, int hand)
	{
	}

	[Token(Token = "0x6000BB3")]
	[Address(RVA = "0x8F4D10", Offset = "0x8F4D10", VA = "0x8F4D10")]
	public int GetMainControllerIndex()
	{
		return default(int);
	}

	[Token(Token = "0x6000BB4")]
	[Address(RVA = "0x8F4E10", Offset = "0x8F4E10", VA = "0x8F4E10")]
	public void SetMainController(int index)
	{
	}

	[Token(Token = "0x6000BB5")]
	[Address(RVA = "0x8F4F70", Offset = "0x8F4F70", VA = "0x8F4F70")]
	public void ResetHeadSensorForController()
	{
	}

	[Token(Token = "0x6000BB6")]
	[Address(RVA = "0x8F5018", Offset = "0x8F5018", VA = "0x8F5018")]
	public void GetDeviceVersion(int deviceType)
	{
	}

	[Token(Token = "0x6000BB7")]
	[Address(RVA = "0x8F5180", Offset = "0x8F5180", VA = "0x8F5180")]
	public void GetControllerSnCode(int controllerSerialNum)
	{
	}

	[Token(Token = "0x6000BB8")]
	[Address(RVA = "0x8F52E8", Offset = "0x8F52E8", VA = "0x8F52E8")]
	public void SetControllerUnbind(int controllerSerialNum)
	{
	}

	[Token(Token = "0x6000BB9")]
	[Address(RVA = "0x8F5450", Offset = "0x8F5450", VA = "0x8F5450")]
	public void SetStationRestart()
	{
	}

	[Token(Token = "0x6000BBA")]
	[Address(RVA = "0x8F54F8", Offset = "0x8F54F8", VA = "0x8F54F8")]
	public void StartStationOtaUpdate()
	{
	}

	[Token(Token = "0x6000BBB")]
	[Address(RVA = "0x8F55A0", Offset = "0x8F55A0", VA = "0x8F55A0")]
	public void StartControllerOtaUpdate(int mode, int controllerSerialNum)
	{
	}

	[Token(Token = "0x6000BBC")]
	[Address(RVA = "0x8F5788", Offset = "0x8F5788", VA = "0x8F5788")]
	public void EnterPairMode(int controllerSerialNum)
	{
	}

	[Token(Token = "0x6000BBD")]
	[Address(RVA = "0x8F58F0", Offset = "0x8F58F0", VA = "0x8F58F0")]
	public void SetControllerShutdown(int controllerSerialNum)
	{
	}

	[Token(Token = "0x6000BBE")]
	[Address(RVA = "0x8F5A58", Offset = "0x8F5A58", VA = "0x8F5A58")]
	public int GetStationPairState()
	{
		return default(int);
	}

	[Token(Token = "0x6000BBF")]
	[Address(RVA = "0x8F5B5C", Offset = "0x8F5B5C", VA = "0x8F5B5C")]
	public int GetStationOtaUpdateProgress()
	{
		return default(int);
	}

	[Token(Token = "0x6000BC0")]
	[Address(RVA = "0x8F5C60", Offset = "0x8F5C60", VA = "0x8F5C60")]
	public int GetControllerOtaUpdateProgress()
	{
		return default(int);
	}

	[Token(Token = "0x6000BC1")]
	[Address(RVA = "0x8F5D64", Offset = "0x8F5D64", VA = "0x8F5D64")]
	public void GetControllerVersionAndSN(int controllerSerialNum)
	{
	}

	[Token(Token = "0x6000BC2")]
	[Address(RVA = "0x8F5ECC", Offset = "0x8F5ECC", VA = "0x8F5ECC")]
	public void GetControllerUniqueID()
	{
	}

	[Token(Token = "0x6000BC3")]
	[Address(RVA = "0x8F5F74", Offset = "0x8F5F74", VA = "0x8F5F74")]
	public void InterruptStationPairMode()
	{
	}

	[Token(Token = "0x6000BC4")]
	[Address(RVA = "0x8F601C", Offset = "0x8F601C", VA = "0x8F601C")]
	public int GetControllerAbility(int controllerSerialNum)
	{
		return default(int);
	}

	[Token(Token = "0x6000BC5")]
	[Address(RVA = "0x8F61A0", Offset = "0x8F61A0", VA = "0x8F61A0")]
	public void SwitchHomeKey(bool state)
	{
	}

	[Token(Token = "0x6000BC6")]
	[Address(RVA = "0x8F6254", Offset = "0x8F6254", VA = "0x8F6254")]
	public void SetBootReconnect()
	{
	}

	[Token(Token = "0x6000BC7")]
	[Address(RVA = "0x8F62F4", Offset = "0x8F62F4", VA = "0x8F62F4")]
	public int GetTemperature()
	{
		return default(int);
	}

	[Token(Token = "0x6000BC8")]
	[Address(RVA = "0x8F63F0", Offset = "0x8F63F0", VA = "0x8F63F0")]
	public int GetDeviceType()
	{
		return default(int);
	}

	[Token(Token = "0x6000BC9")]
	[Address(RVA = "0x8F64EC", Offset = "0x8F64EC", VA = "0x8F64EC")]
	public int GetControllerType()
	{
		return default(int);
	}

	[Token(Token = "0x6000BCA")]
	[Address(RVA = "0x8F657C", Offset = "0x8F657C", VA = "0x8F657C")]
	public string GetHummingBird2SN()
	{
		return null;
	}

	[Token(Token = "0x6000BCB")]
	[Address(RVA = "0x8F6660", Offset = "0x8F6660", VA = "0x8F6660")]
	public string GetControllerVersion()
	{
		return null;
	}

	[Token(Token = "0x6000BCC")]
	[Address(RVA = "0x8F6744", Offset = "0x8F6744", VA = "0x8F6744")]
	public bool IsEnbleTrigger()
	{
		return default(bool);
	}

	[Token(Token = "0x6000BCD")]
	[Address(RVA = "0x8F682C", Offset = "0x8F682C", VA = "0x8F682C")]
	public void StartCV2PairingMode(int devicetype)
	{
	}

	[Token(Token = "0x6000BCE")]
	[Address(RVA = "0x8F6994", Offset = "0x8F6994", VA = "0x8F6994")]
	public void StopCV2PairingMode(int devicetype)
	{
	}

	[Token(Token = "0x6000BCF")]
	[Address(RVA = "0x8F6AFC", Offset = "0x8F6AFC", VA = "0x8F6AFC")]
	public int GetControllerBindingState(int id)
	{
		return default(int);
	}

	[Token(Token = "0x6000BD0")]
	[Address(RVA = "0x8F6C78", Offset = "0x8F6C78", VA = "0x8F6C78")]
	public void setIsEnbleHomeKey(bool state)
	{
	}

	[Token(Token = "0x6000BD1")]
	[Address(RVA = "0x8F6DD0", Offset = "0x8F6DD0", VA = "0x8F6DD0")]
	public int getControllerSensorStatus(int id)
	{
		return default(int);
	}
}
[Token(Token = "0x20001A7")]
public class Pvr_ControllerManager : MonoBehaviour
{
	[Token(Token = "0x2000615")]
	public delegate void PvrServiceStartSuccess();

	[Token(Token = "0x2000616")]
	public delegate void PvrControllerStateChanged(string data);

	[Token(Token = "0x2000617")]
	public delegate void ChangeMainControllerCallBack(string index);

	[Token(Token = "0x2000618")]
	public delegate void ChangeHandNessCallBack(string index);

	[Token(Token = "0x2000619")]
	public delegate void SetHbServiceBindState();

	[Token(Token = "0x200061A")]
	public delegate void ControllerThreadStartedCallback();

	[Token(Token = "0x200061B")]
	public delegate void SetControllerServiceBindState();

	[Token(Token = "0x200061C")]
	public delegate void ControllerStatusChange(string isconnect);

	[Token(Token = "0x200061D")]
	public delegate void SetControllerAbility(string data);

	[Token(Token = "0x200061E")]
	public delegate void SetControllerStateChanged(string data);

	[Token(Token = "0x200061F")]
	public delegate void SetHbControllerMac(string mac);

	[Token(Token = "0x2000620")]
	public delegate void ControllerDeviceVersionCallback(string data);

	[Token(Token = "0x2000621")]
	public delegate void ControllerSnCodeCallback(string data);

	[Token(Token = "0x2000622")]
	public delegate void ControllerUnbindCallback(string status);

	[Token(Token = "0x2000623")]
	public delegate void ControllerStationStatusCallback(string status);

	[Token(Token = "0x2000624")]
	public delegate void ControllerStationBusyCallback(string status);

	[Token(Token = "0x2000625")]
	public delegate void ControllerOtaStartCodeCallback(string data);

	[Token(Token = "0x2000626")]
	public delegate void ControllerDeviceVersionAndSNCallback(string data);

	[Token(Token = "0x2000627")]
	public delegate void ControllerUniqueIDCallback(string data);

	[Token(Token = "0x2000628")]
	public delegate void ControllerCombinedKeyUnbindCallback(string data);

	[Token(Token = "0x40009DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Pvr_ControllerManager instance;

	[Token(Token = "0x40009DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static Pvr_ControllerLink controllerlink;

	[Token(Token = "0x40009E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float cTime;

	[Token(Token = "0x40009E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private bool stopConnect;

	[Token(Token = "0x40009E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text toast;

	[Token(Token = "0x40009E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool controllerServicestate;

	[Token(Token = "0x40009E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float disConnectTime;

	[Token(Token = "0x40009E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool LengthAdaptiveRay;

	[Token(Token = "0x40009E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float[] sensorData;

	[Token(Token = "0x40009E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int[] keyData;

	[Token(Token = "0x40009E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float[] g2SensorData;

	[Token(Token = "0x40009E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int[] g2KeyData;

	[Token(Token = "0x40009EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private int keyOffset;

	[Token(Token = "0x40009EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private int rotControllerMode;

	[Token(Token = "0x17000109")]
	public static Pvr_ControllerManager Instance
	{
		[Token(Token = "0x6000BD2")]
		[Address(RVA = "0xE1AAE8", Offset = "0xE1AAE8", VA = "0xE1AAE8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x14000053")]
	public static event PvrServiceStartSuccess PvrServiceStartSuccessEvent
	{
		[Token(Token = "0x6000BD3")]
		[Address(RVA = "0xE1AD58", Offset = "0xE1AD58", VA = "0xE1AD58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6694CC", Offset = "0x6694CC")]
		add
		{
		}
		[Token(Token = "0x6000BD4")]
		[Address(RVA = "0xE1AE88", Offset = "0xE1AE88", VA = "0xE1AE88")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6694DC", Offset = "0x6694DC")]
		remove
		{
		}
	}

	[Token(Token = "0x14000054")]
	public static event PvrControllerStateChanged PvrControllerStateChangedEvent
	{
		[Token(Token = "0x6000BD5")]
		[Address(RVA = "0xE1AFB8", Offset = "0xE1AFB8", VA = "0xE1AFB8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6694EC", Offset = "0x6694EC")]
		add
		{
		}
		[Token(Token = "0x6000BD6")]
		[Address(RVA = "0xE1B0E8", Offset = "0xE1B0E8", VA = "0xE1B0E8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6694FC", Offset = "0x6694FC")]
		remove
		{
		}
	}

	[Token(Token = "0x14000055")]
	public static event ChangeMainControllerCallBack ChangeMainControllerCallBackEvent
	{
		[Token(Token = "0x6000BD7")]
		[Address(RVA = "0xE1B218", Offset = "0xE1B218", VA = "0xE1B218")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66950C", Offset = "0x66950C")]
		add
		{
		}
		[Token(Token = "0x6000BD8")]
		[Address(RVA = "0xE1B348", Offset = "0xE1B348", VA = "0xE1B348")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66951C", Offset = "0x66951C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000056")]
	public static event ChangeHandNessCallBack ChangeHandNessCallBackEvent
	{
		[Token(Token = "0x6000BD9")]
		[Address(RVA = "0xE1B478", Offset = "0xE1B478", VA = "0xE1B478")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66952C", Offset = "0x66952C")]
		add
		{
		}
		[Token(Token = "0x6000BDA")]
		[Address(RVA = "0xE1B5A8", Offset = "0xE1B5A8", VA = "0xE1B5A8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66953C", Offset = "0x66953C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000057")]
	public static event SetHbServiceBindState SetHbServiceBindStateEvent
	{
		[Token(Token = "0x6000BDB")]
		[Address(RVA = "0xE1B6D8", Offset = "0xE1B6D8", VA = "0xE1B6D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66954C", Offset = "0x66954C")]
		add
		{
		}
		[Token(Token = "0x6000BDC")]
		[Address(RVA = "0xE1B808", Offset = "0xE1B808", VA = "0xE1B808")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66955C", Offset = "0x66955C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000058")]
	public static event ControllerThreadStartedCallback ControllerThreadStartedCallbackEvent
	{
		[Token(Token = "0x6000BDD")]
		[Address(RVA = "0xE1B938", Offset = "0xE1B938", VA = "0xE1B938")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66956C", Offset = "0x66956C")]
		add
		{
		}
		[Token(Token = "0x6000BDE")]
		[Address(RVA = "0xE1BA68", Offset = "0xE1BA68", VA = "0xE1BA68")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66957C", Offset = "0x66957C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000059")]
	public static event SetControllerServiceBindState SetControllerServiceBindStateEvent
	{
		[Token(Token = "0x6000BDF")]
		[Address(RVA = "0xE1BB98", Offset = "0xE1BB98", VA = "0xE1BB98")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66958C", Offset = "0x66958C")]
		add
		{
		}
		[Token(Token = "0x6000BE0")]
		[Address(RVA = "0xE1BCC8", Offset = "0xE1BCC8", VA = "0xE1BCC8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66959C", Offset = "0x66959C")]
		remove
		{
		}
	}

	[Token(Token = "0x1400005A")]
	public static event ControllerStatusChange ControllerStatusChangeEvent
	{
		[Token(Token = "0x6000BE1")]
		[Address(RVA = "0xE1BDF8", Offset = "0xE1BDF8", VA = "0xE1BDF8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6695AC", Offset = "0x6695AC")]
		add
		{
		}
		[Token(Token = "0x6000BE2")]
		[Address(RVA = "0xE1BF28", Offset = "0xE1BF28", VA = "0xE1BF28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6695BC", Offset = "0x6695BC")]
		remove
		{
		}
	}

	[Token(Token = "0x1400005B")]
	public static event SetControllerAbility SetControllerAbilityEvent
	{
		[Token(Token = "0x6000BE3")]
		[Address(RVA = "0xE1C058", Offset = "0xE1C058", VA = "0xE1C058")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6695CC", Offset = "0x6695CC")]
		add
		{
		}
		[Token(Token = "0x6000BE4")]
		[Address(RVA = "0xE1C188", Offset = "0xE1C188", VA = "0xE1C188")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6695DC", Offset = "0x6695DC")]
		remove
		{
		}
	}

	[Token(Token = "0x1400005C")]
	public static event SetControllerStateChanged SetControllerStateChangedEvent
	{
		[Token(Token = "0x6000BE5")]
		[Address(RVA = "0xE1C2B8", Offset = "0xE1C2B8", VA = "0xE1C2B8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6695EC", Offset = "0x6695EC")]
		add
		{
		}
		[Token(Token = "0x6000BE6")]
		[Address(RVA = "0xE1C3E8", Offset = "0xE1C3E8", VA = "0xE1C3E8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6695FC", Offset = "0x6695FC")]
		remove
		{
		}
	}

	[Token(Token = "0x1400005D")]
	public static event SetHbControllerMac SetHbControllerMacEvent
	{
		[Token(Token = "0x6000BE7")]
		[Address(RVA = "0xE1C518", Offset = "0xE1C518", VA = "0xE1C518")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66960C", Offset = "0x66960C")]
		add
		{
		}
		[Token(Token = "0x6000BE8")]
		[Address(RVA = "0xE1C648", Offset = "0xE1C648", VA = "0xE1C648")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66961C", Offset = "0x66961C")]
		remove
		{
		}
	}

	[Token(Token = "0x1400005E")]
	public static event ControllerDeviceVersionCallback ControllerDeviceVersionCallbackEvent
	{
		[Token(Token = "0x6000BE9")]
		[Address(RVA = "0xE1C778", Offset = "0xE1C778", VA = "0xE1C778")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66962C", Offset = "0x66962C")]
		add
		{
		}
		[Token(Token = "0x6000BEA")]
		[Address(RVA = "0xE1C8A8", Offset = "0xE1C8A8", VA = "0xE1C8A8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66963C", Offset = "0x66963C")]
		remove
		{
		}
	}

	[Token(Token = "0x1400005F")]
	public static event ControllerSnCodeCallback ControllerSnCodeCallbackEvent
	{
		[Token(Token = "0x6000BEB")]
		[Address(RVA = "0xE1C9D8", Offset = "0xE1C9D8", VA = "0xE1C9D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66964C", Offset = "0x66964C")]
		add
		{
		}
		[Token(Token = "0x6000BEC")]
		[Address(RVA = "0xE1CB08", Offset = "0xE1CB08", VA = "0xE1CB08")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66965C", Offset = "0x66965C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000060")]
	public static event ControllerUnbindCallback ControllerUnbindCallbackEvent
	{
		[Token(Token = "0x6000BED")]
		[Address(RVA = "0xE1CC38", Offset = "0xE1CC38", VA = "0xE1CC38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66966C", Offset = "0x66966C")]
		add
		{
		}
		[Token(Token = "0x6000BEE")]
		[Address(RVA = "0xE1CD68", Offset = "0xE1CD68", VA = "0xE1CD68")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66967C", Offset = "0x66967C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000061")]
	public static event ControllerStationStatusCallback ControllerStationStatusCallbackEvent
	{
		[Token(Token = "0x6000BEF")]
		[Address(RVA = "0xE1CE98", Offset = "0xE1CE98", VA = "0xE1CE98")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66968C", Offset = "0x66968C")]
		add
		{
		}
		[Token(Token = "0x6000BF0")]
		[Address(RVA = "0xE1CFC8", Offset = "0xE1CFC8", VA = "0xE1CFC8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66969C", Offset = "0x66969C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000062")]
	public static event ControllerStationBusyCallback ControllerStationBusyCallbackEvent
	{
		[Token(Token = "0x6000BF1")]
		[Address(RVA = "0xE1D0F8", Offset = "0xE1D0F8", VA = "0xE1D0F8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6696AC", Offset = "0x6696AC")]
		add
		{
		}
		[Token(Token = "0x6000BF2")]
		[Address(RVA = "0xE1D228", Offset = "0xE1D228", VA = "0xE1D228")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6696BC", Offset = "0x6696BC")]
		remove
		{
		}
	}

	[Token(Token = "0x14000063")]
	public static event ControllerOtaStartCodeCallback ControllerOtaStartCodeCallbackEvent
	{
		[Token(Token = "0x6000BF3")]
		[Address(RVA = "0xE1D358", Offset = "0xE1D358", VA = "0xE1D358")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6696CC", Offset = "0x6696CC")]
		add
		{
		}
		[Token(Token = "0x6000BF4")]
		[Address(RVA = "0xE1D488", Offset = "0xE1D488", VA = "0xE1D488")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6696DC", Offset = "0x6696DC")]
		remove
		{
		}
	}

	[Token(Token = "0x14000064")]
	public static event ControllerDeviceVersionAndSNCallback ControllerDeviceVersionAndSNCallbackEvent
	{
		[Token(Token = "0x6000BF5")]
		[Address(RVA = "0xE1D5B8", Offset = "0xE1D5B8", VA = "0xE1D5B8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6696EC", Offset = "0x6696EC")]
		add
		{
		}
		[Token(Token = "0x6000BF6")]
		[Address(RVA = "0xE1D6E8", Offset = "0xE1D6E8", VA = "0xE1D6E8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6696FC", Offset = "0x6696FC")]
		remove
		{
		}
	}

	[Token(Token = "0x14000065")]
	public static event ControllerUniqueIDCallback ControllerUniqueIDCallbackEvent
	{
		[Token(Token = "0x6000BF7")]
		[Address(RVA = "0xE1D818", Offset = "0xE1D818", VA = "0xE1D818")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66970C", Offset = "0x66970C")]
		add
		{
		}
		[Token(Token = "0x6000BF8")]
		[Address(RVA = "0xE1D948", Offset = "0xE1D948", VA = "0xE1D948")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66971C", Offset = "0x66971C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000066")]
	public static event ControllerCombinedKeyUnbindCallback ControllerCombinedKeyUnbindCallbackEvent
	{
		[Token(Token = "0x6000BF9")]
		[Address(RVA = "0xE1DA78", Offset = "0xE1DA78", VA = "0xE1DA78")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66972C", Offset = "0x66972C")]
		add
		{
		}
		[Token(Token = "0x6000BFA")]
		[Address(RVA = "0xE1DBA8", Offset = "0xE1DBA8", VA = "0xE1DBA8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66973C", Offset = "0x66973C")]
		remove
		{
		}
	}

	[Token(Token = "0x6000BFB")]
	[Address(RVA = "0xE1DCD8", Offset = "0xE1DCD8", VA = "0xE1DCD8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000BFC")]
	[Address(RVA = "0xE1DFF8", Offset = "0xE1DFF8", VA = "0xE1DFF8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000BFD")]
	[Address(RVA = "0xE1E0A4", Offset = "0xE1E0A4", VA = "0xE1E0A4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000BFE")]
	[Address(RVA = "0xE20AA4", Offset = "0xE20AA4", VA = "0xE20AA4")]
	private void OnApplicationPause(bool pause)
	{
	}

	[Token(Token = "0x6000BFF")]
	[Address(RVA = "0xE21440", Offset = "0xE21440", VA = "0xE21440")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000C00")]
	[Address(RVA = "0xE21528", Offset = "0xE21528", VA = "0xE21528")]
	private void OnApplicationQuit()
	{
	}

	[Token(Token = "0x6000C01")]
	[Address(RVA = "0xE216D0", Offset = "0xE216D0", VA = "0xE216D0")]
	public void StopLark2Service()
	{
	}

	[Token(Token = "0x6000C02")]
	[Address(RVA = "0xE21780", Offset = "0xE21780", VA = "0xE21780")]
	public Vector3 GetAngularVelocity(int num)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000C03")]
	[Address(RVA = "0xE2186C", Offset = "0xE2186C", VA = "0xE2186C")]
	public Vector3 GetAcceleration(int num)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000C04")]
	[Address(RVA = "0xE1DF48", Offset = "0xE1DF48", VA = "0xE1DF48")]
	public void BindService()
	{
	}

	[Token(Token = "0x6000C05")]
	[Address(RVA = "0xE21958", Offset = "0xE21958", VA = "0xE21958")]
	public void StartScan()
	{
	}

	[Token(Token = "0x6000C06")]
	[Address(RVA = "0xE21A08", Offset = "0xE21A08", VA = "0xE21A08")]
	public void StopScan()
	{
	}

	[Token(Token = "0x6000C07")]
	[Address(RVA = "0xE21AB8", Offset = "0xE21AB8", VA = "0xE21AB8")]
	public void ResetController(int num)
	{
	}

	[Token(Token = "0x6000C08")]
	[Address(RVA = "0xE20FBC", Offset = "0xE20FBC", VA = "0xE20FBC")]
	public static int GetControllerConnectionState(int num)
	{
		return default(int);
	}

	[Token(Token = "0x6000C09")]
	[Address(RVA = "0xE21B70", Offset = "0xE21B70", VA = "0xE21B70")]
	public void ConnectBLE()
	{
	}

	[Token(Token = "0x6000C0A")]
	[Address(RVA = "0xE21C20", Offset = "0xE21C20", VA = "0xE21C20")]
	public void DisConnectBLE()
	{
	}

	[Token(Token = "0x6000C0B")]
	[Address(RVA = "0xE21CD0", Offset = "0xE21CD0", VA = "0xE21CD0")]
	public void SetBinPath(string path, bool isAsset)
	{
	}

	[Token(Token = "0x6000C0C")]
	[Address(RVA = "0xE21D9C", Offset = "0xE21D9C", VA = "0xE21D9C")]
	public void StartUpgrade()
	{
	}

	[Token(Token = "0x6000C0D")]
	[Address(RVA = "0xE21E4C", Offset = "0xE21E4C", VA = "0xE21E4C")]
	public static string GetBLEImageType()
	{
		return null;
	}

	[Token(Token = "0x6000C0E")]
	[Address(RVA = "0xE21EC8", Offset = "0xE21EC8", VA = "0xE21EC8")]
	public static long GetBLEVersion()
	{
		return default(long);
	}

	[Token(Token = "0x6000C0F")]
	[Address(RVA = "0xE21F44", Offset = "0xE21F44", VA = "0xE21F44")]
	public static string GetFileImageType()
	{
		return null;
	}

	[Token(Token = "0x6000C10")]
	[Address(RVA = "0xE21FC0", Offset = "0xE21FC0", VA = "0xE21FC0")]
	public static long GetFileVersion()
	{
		return default(long);
	}

	[Token(Token = "0x6000C11")]
	[Address(RVA = "0xE2203C", Offset = "0xE2203C", VA = "0xE2203C")]
	public static void AutoConnectHbController(int scans)
	{
	}

	[Token(Token = "0x6000C12")]
	[Address(RVA = "0xE220F4", Offset = "0xE220F4", VA = "0xE220F4")]
	public static string GetConnectedDeviceMac()
	{
		return null;
	}

	[Token(Token = "0x6000C13")]
	[Address(RVA = "0xE221B4", Offset = "0xE221B4", VA = "0xE221B4")]
	public void setHbControllerMac(string mac)
	{
	}

	[Token(Token = "0x6000C14")]
	[Address(RVA = "0xE22AD4", Offset = "0xE22AD4", VA = "0xE22AD4")]
	public int GetControllerRSSI()
	{
		return default(int);
	}

	[Token(Token = "0x6000C15")]
	[Address(RVA = "0xE22B4C", Offset = "0xE22B4C", VA = "0xE22B4C")]
	public void setHbServiceBindState(string state)
	{
	}

	[Token(Token = "0x6000C16")]
	[Address(RVA = "0xE23260", Offset = "0xE23260", VA = "0xE23260")]
	public void setControllerServiceBindState(string state)
	{
	}

	[Token(Token = "0x6000C17")]
	[Address(RVA = "0xE2394C", Offset = "0xE2394C", VA = "0xE2394C")]
	public void setHbControllerConnectState(string isconnect)
	{
	}

	[Token(Token = "0x6000C18")]
	[Address(RVA = "0xE24AD0", Offset = "0xE24AD0", VA = "0xE24AD0")]
	public void setControllerStateChanged(string state)
	{
	}

	[Token(Token = "0x6000C19")]
	[Address(RVA = "0xE2590C", Offset = "0xE2590C", VA = "0xE2590C")]
	public void setControllerAbility(string data)
	{
	}

	[Token(Token = "0x6000C1A")]
	[Address(RVA = "0xE26140", Offset = "0xE26140", VA = "0xE26140")]
	public void controllerThreadStartedCallback()
	{
	}

	[Token(Token = "0x6000C1B")]
	[Address(RVA = "0xE26A58", Offset = "0xE26A58", VA = "0xE26A58")]
	public void controllerDeviceVersionCallback(string data)
	{
	}

	[Token(Token = "0x6000C1C")]
	[Address(RVA = "0xE2728C", Offset = "0xE2728C", VA = "0xE2728C")]
	public void controllerSnCodeCallback(string data)
	{
	}

	[Token(Token = "0x6000C1D")]
	[Address(RVA = "0xE27AC0", Offset = "0xE27AC0", VA = "0xE27AC0")]
	public void controllerUnbindCallback(string status)
	{
	}

	[Token(Token = "0x6000C1E")]
	[Address(RVA = "0xE282F4", Offset = "0xE282F4", VA = "0xE282F4")]
	public void controllerStationStatusCallback(string status)
	{
	}

	[Token(Token = "0x6000C1F")]
	[Address(RVA = "0xE28B28", Offset = "0xE28B28", VA = "0xE28B28")]
	public void controllerStationBusyCallback(string status)
	{
	}

	[Token(Token = "0x6000C20")]
	[Address(RVA = "0xE2935C", Offset = "0xE2935C", VA = "0xE2935C")]
	public void controllerOTAStartCodeCallback(string data)
	{
	}

	[Token(Token = "0x6000C21")]
	[Address(RVA = "0xE29B90", Offset = "0xE29B90", VA = "0xE29B90")]
	public void controllerDeviceVersionAndSNCallback(string data)
	{
	}

	[Token(Token = "0x6000C22")]
	[Address(RVA = "0xE2A3C4", Offset = "0xE2A3C4", VA = "0xE2A3C4")]
	public void controllerUniqueIDCallback(string data)
	{
	}

	[Token(Token = "0x6000C23")]
	[Address(RVA = "0xE2ABF8", Offset = "0xE2ABF8", VA = "0xE2ABF8")]
	public void controllerCombinedKeyUnbindCallback(string controllerSerialNum)
	{
	}

	[Token(Token = "0x6000C24")]
	[Address(RVA = "0xE2B3E0", Offset = "0xE2B3E0", VA = "0xE2B3E0")]
	public void setupdateFailed()
	{
	}

	[Token(Token = "0x6000C25")]
	[Address(RVA = "0xE2B3E4", Offset = "0xE2B3E4", VA = "0xE2B3E4")]
	public void setupdateSuccess()
	{
	}

	[Token(Token = "0x6000C26")]
	[Address(RVA = "0xE2B3E8", Offset = "0xE2B3E8", VA = "0xE2B3E8")]
	public void setupdateProgress(string progress)
	{
	}

	[Token(Token = "0x6000C27")]
	[Address(RVA = "0xE2B3EC", Offset = "0xE2B3EC", VA = "0xE2B3EC")]
	public void setHbAutoConnectState(string state)
	{
	}

	[Token(Token = "0x6000C28")]
	[Address(RVA = "0xE2B728", Offset = "0xE2B728", VA = "0xE2B728")]
	public void callbackControllerServiceState(string state)
	{
	}

	[Token(Token = "0x6000C29")]
	[Address(RVA = "0xE2B884", Offset = "0xE2B884", VA = "0xE2B884")]
	public void changeMainControllerCallback(string index)
	{
	}

	[Token(Token = "0x6000C2A")]
	[Address(RVA = "0xE2C114", Offset = "0xE2C114", VA = "0xE2C114")]
	public void changeHandnessCallback(string index)
	{
	}

	[Token(Token = "0x6000C2B")]
	[Address(RVA = "0xE2B540", Offset = "0xE2B540", VA = "0xE2B540")]
	private void ShowToast(int type)
	{
	}

	[Token(Token = "0x6000C2C")]
	[Address(RVA = "0xE2C9A4", Offset = "0xE2C9A4", VA = "0xE2C9A4")]
	private void HideToast()
	{
	}

	[Token(Token = "0x6000C2D")]
	[Address(RVA = "0xE2CA54", Offset = "0xE2CA54", VA = "0xE2CA54")]
	private void CheckControllerService()
	{
	}

	[Token(Token = "0x6000C2E")]
	[Address(RVA = "0xE2628C", Offset = "0xE2628C", VA = "0xE2628C")]
	private void GetCVControllerState()
	{
	}

	[Token(Token = "0x6000C2F")]
	[Address(RVA = "0xE202C0", Offset = "0xE202C0", VA = "0xE202C0")]
	private void SetSystemKey()
	{
	}

	[Token(Token = "0x6000C30")]
	[Address(RVA = "0xE1FD6C", Offset = "0xE1FD6C", VA = "0xE1FD6C")]
	private void TransformData(ControllerHand hand, int handId, int[] data)
	{
	}

	[Token(Token = "0x6000C31")]
	[Address(RVA = "0xE2CA68", Offset = "0xE2CA68", VA = "0xE2CA68")]
	private void TransSingleKey(PvrControllerKey key, int beginIndex, int[] data)
	{
	}

	[Token(Token = "0x6000C32")]
	[Address(RVA = "0xE2CC20", Offset = "0xE2CC20", VA = "0xE2CC20")]
	private void TransformTouchData(ControllerHand hand, int handId, int[] data)
	{
	}

	[Token(Token = "0x6000C33")]
	[Address(RVA = "0xE2CD50", Offset = "0xE2CD50", VA = "0xE2CD50")]
	private void TransSingleTouchValue(PvrControllerKey key, int beginIndex, int[] data)
	{
	}

	[Token(Token = "0x6000C34")]
	[Address(RVA = "0xE2CE90", Offset = "0xE2CE90", VA = "0xE2CE90")]
	public Pvr_ControllerManager()
	{
	}
}
[Token(Token = "0x20001A8")]
public class Pvr_ControllerModuleInit : MonoBehaviour
{
	[Token(Token = "0x2000629")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6441B8", Offset = "0x6441B8")]
	private sealed class <ShowOrHideRay>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002797")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002798")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002799")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Pvr_ControllerModuleInit <>4__this;

		[Token(Token = "0x400279A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int id;

		[Token(Token = "0x170002AD")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002C16")]
			[Address(RVA = "0xE2DF00", Offset = "0xE2DF00", VA = "0xE2DF00", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002AE")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002C18")]
			[Address(RVA = "0xE2DF70", Offset = "0xE2DF70", VA = "0xE2DF70", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002C13")]
		[Address(RVA = "0xE2D9B4", Offset = "0xE2D9B4", VA = "0xE2D9B4")]
		[DebuggerHidden]
		public <ShowOrHideRay>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x6002C14")]
		[Address(RVA = "0xE2DE0C", Offset = "0xE2DE0C", VA = "0xE2DE0C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002C15")]
		[Address(RVA = "0xE2DE10", Offset = "0xE2DE10", VA = "0xE2DE10", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002C17")]
		[Address(RVA = "0xE2DF08", Offset = "0xE2DF08", VA = "0xE2DF08", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000A00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ControllerVariety Variety;

	[Token(Token = "0x4000A01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool IsCustomModel;

	[Token(Token = "0x4000A02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject dot;

	[Token(Token = "0x4000A03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject rayLine;

	[Token(Token = "0x4000A04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject controller;

	[Token(Token = "0x4000A05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool moduleState;

	[Token(Token = "0x6000C36")]
	[Address(RVA = "0xE2D484", Offset = "0xE2D484", VA = "0xE2D484")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000C37")]
	[Address(RVA = "0xE2D664", Offset = "0xE2D664", VA = "0xE2D664")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000C38")]
	[Address(RVA = "0xE2D74C", Offset = "0xE2D74C", VA = "0xE2D74C")]
	private void ServiceStartSuccess()
	{
	}

	[Token(Token = "0x6000C39")]
	[Address(RVA = "0xE2D7C0", Offset = "0xE2D7C0", VA = "0xE2D7C0")]
	private void ControllerStateChanged(string data)
	{
	}

	[Token(Token = "0x6000C3A")]
	[Address(RVA = "0xE2D918", Offset = "0xE2D918", VA = "0xE2D918")]
	private void MainControllerIDChanged(string data)
	{
	}

	[Token(Token = "0x6000C3B")]
	[Address(RVA = "0xE2D750", Offset = "0xE2D750", VA = "0xE2D750")]
	private void RefreshRay()
	{
	}

	[Token(Token = "0x6000C3C")]
	[Address(RVA = "0xE2D91C", Offset = "0xE2D91C", VA = "0xE2D91C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x66974C", Offset = "0x66974C")]
	private IEnumerator ShowOrHideRay(int id)
	{
		return null;
	}

	[Token(Token = "0x6000C3D")]
	[Address(RVA = "0xE2D9E0", Offset = "0xE2D9E0", VA = "0xE2D9E0")]
	public void ForceHideOrShow(bool state)
	{
	}

	[Token(Token = "0x6000C3E")]
	[Address(RVA = "0xE2DB28", Offset = "0xE2DB28", VA = "0xE2DB28")]
	public void UpdateRay()
	{
	}

	[Token(Token = "0x6000C3F")]
	[Address(RVA = "0xE2DDFC", Offset = "0xE2DDFC", VA = "0xE2DDFC")]
	public Pvr_ControllerModuleInit()
	{
	}
}
[Token(Token = "0x20001A9")]
public class Pvr_ControllerPower : MonoBehaviour
{
	[Token(Token = "0x4000A06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Sprite power1;

	[Token(Token = "0x4000A07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Sprite power2;

	[Token(Token = "0x4000A08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Sprite power3;

	[Token(Token = "0x4000A09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Sprite power4;

	[Token(Token = "0x4000A0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Sprite power5;

	[Token(Token = "0x4000A0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[HideInInspector]
	public ControllerVariety variety;

	[Token(Token = "0x4000A0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[HideInInspector]
	public ControllerDevice currentDevice;

	[Token(Token = "0x4000A0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Image powerImage;

	[Token(Token = "0x4000A0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int powerValue;

	[Token(Token = "0x4000A0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float power;

	[Token(Token = "0x6000C40")]
	[Address(RVA = "0xE2DF78", Offset = "0xE2DF78", VA = "0xE2DF78")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C41")]
	[Address(RVA = "0xE2E070", Offset = "0xE2E070", VA = "0xE2E070")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C42")]
	[Address(RVA = "0xE2E0A8", Offset = "0xE2E0A8", VA = "0xE2E0A8")]
	private void RefreshPower(int hand)
	{
	}

	[Token(Token = "0x6000C43")]
	[Address(RVA = "0xE2E218", Offset = "0xE2E218", VA = "0xE2E218")]
	public Pvr_ControllerPower()
	{
	}
}
[Token(Token = "0x20001AA")]
public class Pvr_ControllerVisual : MonoBehaviour
{
	[Token(Token = "0x4000A10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ControllerDevice currentDevice;

	[Token(Token = "0x4000A11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Texture2D m_idle;

	[Token(Token = "0x4000A12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Texture2D m_app;

	[Token(Token = "0x4000A13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Texture2D m_home;

	[Token(Token = "0x4000A14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Texture2D m_touchpad;

	[Token(Token = "0x4000A15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Texture2D m_volUp;

	[Token(Token = "0x4000A16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Texture2D m_volDn;

	[Token(Token = "0x4000A17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Texture2D m_trigger;

	[Token(Token = "0x4000A18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Texture2D m_a;

	[Token(Token = "0x4000A19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Texture2D m_b;

	[Token(Token = "0x4000A1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Texture2D m_x;

	[Token(Token = "0x4000A1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Texture2D m_y;

	[Token(Token = "0x4000A1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Texture2D m_grip;

	[Token(Token = "0x4000A1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Renderer controllerRenderMat;

	[Token(Token = "0x4000A1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[HideInInspector]
	public ControllerVariety variety;

	[Token(Token = "0x6000C44")]
	[Address(RVA = "0xE2E220", Offset = "0xE2E220", VA = "0xE2E220")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000C45")]
	[Address(RVA = "0xE2E278", Offset = "0xE2E278", VA = "0xE2E278")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C46")]
	[Address(RVA = "0xE2E2F8", Offset = "0xE2E2F8", VA = "0xE2E2F8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C47")]
	[Address(RVA = "0xE2E330", Offset = "0xE2E330", VA = "0xE2E330")]
	private void ChangeKeyEffects(int hand)
	{
	}

	[Token(Token = "0x6000C48")]
	[Address(RVA = "0xE2E6F0", Offset = "0xE2E6F0", VA = "0xE2E6F0")]
	public Pvr_ControllerVisual()
	{
	}
}
[Token(Token = "0x20001AB")]
public class Pvr_ToolTips : MonoBehaviour
{
	[Token(Token = "0x200062A")]
	public enum TipBtn
	{
		[Token(Token = "0x400279C")]
		app,
		[Token(Token = "0x400279D")]
		touchpad,
		[Token(Token = "0x400279E")]
		home,
		[Token(Token = "0x400279F")]
		volup,
		[Token(Token = "0x40027A0")]
		voldown,
		[Token(Token = "0x40027A1")]
		trigger,
		[Token(Token = "0x40027A2")]
		grip
	}

	[Token(Token = "0x4000A1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ControllerDevice currentDevice;

	[Token(Token = "0x4000A20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float tipsAlpha;

	[Token(Token = "0x4000A21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Pvr_ToolTips tooltips;

	[Token(Token = "0x6000C49")]
	[Address(RVA = "0xE33F10", Offset = "0xE33F10", VA = "0xE33F10")]
	public void ChangeTipsText(TipBtn tip, string key)
	{
	}

	[Token(Token = "0x6000C4A")]
	[Address(RVA = "0xE340D8", Offset = "0xE340D8", VA = "0xE340D8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000C4B")]
	[Address(RVA = "0xE34158", Offset = "0xE34158", VA = "0xE34158")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C4C")]
	[Address(RVA = "0xE343F8", Offset = "0xE343F8", VA = "0xE343F8")]
	private void LoadTextFromJson()
	{
	}

	[Token(Token = "0x6000C4D")]
	[Address(RVA = "0xE3494C", Offset = "0xE3494C", VA = "0xE3494C")]
	public static void RefreshTips()
	{
	}

	[Token(Token = "0x6000C4E")]
	[Address(RVA = "0xE349F8", Offset = "0xE349F8", VA = "0xE349F8")]
	public Pvr_ToolTips()
	{
	}
}
[Token(Token = "0x20001AC")]
public class Pvr_TouchPadScroll : MonoBehaviour
{
	[Token(Token = "0x4000A22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ScrollRect scrollRect;

	[Token(Token = "0x4000A23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool isHoving;

	[Token(Token = "0x4000A24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int mainHand;

	[Token(Token = "0x4000A25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private SwipeDirection direction;

	[Token(Token = "0x4000A26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector2 currPos;

	[Token(Token = "0x4000A27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Vector2 tarPos;

	[Token(Token = "0x4000A28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float lerpSpeed;

	[Token(Token = "0x4000A29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Transform tranViewport;

	[Token(Token = "0x4000A2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float ignoreDis;

	[Token(Token = "0x4000A2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Vector2 lastTouchDownPos;

	[Token(Token = "0x4000A2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private Vector2 lastTouchUpPos;

	[Token(Token = "0x4000A2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private bool isTouching;

	[Token(Token = "0x4000A2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5D")]
	private bool isClosed;

	[Token(Token = "0x4000A2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Vector2 vecOrigin;

	[Token(Token = "0x4000A30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Vector2 vecOriginNeo2;

	[Token(Token = "0x6000C4F")]
	[Address(RVA = "0xE34A00", Offset = "0xE34A00", VA = "0xE34A00")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000C50")]
	[Address(RVA = "0xE34AA4", Offset = "0xE34AA4", VA = "0xE34AA4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C51")]
	[Address(RVA = "0xE35000", Offset = "0xE35000", VA = "0xE35000")]
	private bool IsControllerConnect()
	{
		return default(bool);
	}

	[Token(Token = "0x6000C52")]
	[Address(RVA = "0xE34C34", Offset = "0xE34C34", VA = "0xE34C34")]
	private void UpdateTargetPos()
	{
	}

	[Token(Token = "0x6000C53")]
	[Address(RVA = "0xE351FC", Offset = "0xE351FC", VA = "0xE351FC")]
	private void ComputeTouchPos()
	{
	}

	[Token(Token = "0x6000C54")]
	[Address(RVA = "0xE355B0", Offset = "0xE355B0", VA = "0xE355B0")]
	private void ComputeRockerPos()
	{
	}

	[Token(Token = "0x6000C55")]
	[Address(RVA = "0xE35998", Offset = "0xE35998", VA = "0xE35998")]
	private bool VerifyNeo2TouchValid(Vector2 nowTouchPos)
	{
		return default(bool);
	}

	[Token(Token = "0x6000C56")]
	[Address(RVA = "0xE34D90", Offset = "0xE34D90", VA = "0xE34D90")]
	private void UpdatePos()
	{
	}

	[Token(Token = "0x6000C57")]
	[Address(RVA = "0xE350EC", Offset = "0xE350EC", VA = "0xE350EC")]
	private void ResetParameter()
	{
	}

	[Token(Token = "0x6000C58")]
	[Address(RVA = "0xE34AD0", Offset = "0xE34AD0", VA = "0xE34AD0")]
	private void Process()
	{
	}

	[Token(Token = "0x6000C59")]
	[Address(RVA = "0xE359D4", Offset = "0xE359D4", VA = "0xE359D4")]
	private bool IsHovering(Pvr_UIPointer pointer)
	{
		return default(bool);
	}

	[Token(Token = "0x6000C5A")]
	[Address(RVA = "0xE35C00", Offset = "0xE35C00", VA = "0xE35C00")]
	private bool FindTree(Transform tran)
	{
		return default(bool);
	}

	[Token(Token = "0x6000C5B")]
	[Address(RVA = "0xE35CF4", Offset = "0xE35CF4", VA = "0xE35CF4")]
	public Pvr_TouchPadScroll()
	{
	}
}
[Token(Token = "0x20001AD")]
public class Pvr_TouchVisual : MonoBehaviour
{
	[Token(Token = "0x4000A31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public ControllerDevice currentDevice;

	[Token(Token = "0x4000A32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[HideInInspector]
	public ControllerVariety variety;

	[Token(Token = "0x4000A33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private MeshRenderer touchRenderer;

	[Token(Token = "0x6000C5C")]
	[Address(RVA = "0xE35DB0", Offset = "0xE35DB0", VA = "0xE35DB0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C5D")]
	[Address(RVA = "0xE35E70", Offset = "0xE35E70", VA = "0xE35E70")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C5E")]
	[Address(RVA = "0xE35EA8", Offset = "0xE35EA8", VA = "0xE35EA8")]
	private void ChangeEffects(int hand)
	{
	}

	[Token(Token = "0x6000C5F")]
	[Address(RVA = "0xE35FD8", Offset = "0xE35FD8", VA = "0xE35FD8")]
	public Pvr_TouchVisual()
	{
	}
}
[Token(Token = "0x20001AE")]
public class DemoController : MonoBehaviour
{
	[Token(Token = "0x200062B")]
	public delegate void showLoadingEventHandler();

	[Token(Token = "0x200062C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6441C8", Offset = "0x6441C8")]
	private sealed class <>c__DisplayClass12_0
	{
		[Token(Token = "0x40027A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject btnObj;

		[Token(Token = "0x40027A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public DemoController <>4__this;

		[Token(Token = "0x6002C1D")]
		[Address(RVA = "0x7B7A50", Offset = "0x7B7A50", VA = "0x7B7A50")]
		public <>c__DisplayClass12_0()
		{
		}

		[Token(Token = "0x6002C1E")]
		[Address(RVA = "0x7B83F4", Offset = "0x7B83F4", VA = "0x7B83F4")]
		internal void <InitDelegate>b__0()
		{
		}
	}

	[Token(Token = "0x4000A34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Callback callback;

	[Token(Token = "0x4000A35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject msg;

	[Token(Token = "0x4000A36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Pvr_UnitySDKManager picoVrManager;

	[Token(Token = "0x4000A37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private string currentOrderID;

	[Token(Token = "0x4000A38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject loading;

	[Token(Token = "0x4000A39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject BG;

	[Token(Token = "0x4000A3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject InputPanel;

	[Token(Token = "0x4000A3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static showLoadingEventHandler showLoading;

	[Token(Token = "0x6000C60")]
	[Address(RVA = "0x7B70D0", Offset = "0x7B70D0", VA = "0x7B70D0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000C61")]
	[Address(RVA = "0x7B7320", Offset = "0x7B7320", VA = "0x7B7320")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C62")]
	[Address(RVA = "0x7B78CC", Offset = "0x7B78CC", VA = "0x7B78CC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C63")]
	[Address(RVA = "0x7B73F4", Offset = "0x7B73F4", VA = "0x7B73F4")]
	private void InitDelegate()
	{
	}

	[Token(Token = "0x6000C64")]
	[Address(RVA = "0x7B7A58", Offset = "0x7B7A58", VA = "0x7B7A58")]
	private void OnClick(GameObject btnObj)
	{
	}

	[Token(Token = "0x6000C65")]
	[Address(RVA = "0x7B7E1C", Offset = "0x7B7E1C", VA = "0x7B7E1C")]
	public string getRamdomTestOrderID()
	{
		return null;
	}

	[Token(Token = "0x6000C66")]
	[Address(RVA = "0x7B7DC4", Offset = "0x7B7DC4", VA = "0x7B7DC4")]
	private void StartLoading()
	{
	}

	[Token(Token = "0x6000C67")]
	[Address(RVA = "0x7B7E60", Offset = "0x7B7E60", VA = "0x7B7E60")]
	public void StopLoading()
	{
	}

	[Token(Token = "0x6000C68")]
	[Address(RVA = "0x7B7F84", Offset = "0x7B7F84", VA = "0x7B7F84")]
	public void DoPayByCode()
	{
	}

	[Token(Token = "0x6000C69")]
	[Address(RVA = "0x7B82EC", Offset = "0x7B82EC", VA = "0x7B82EC")]
	private bool VerifyLocalToken()
	{
		return default(bool);
	}

	[Token(Token = "0x6000C6A")]
	[Address(RVA = "0x7B83EC", Offset = "0x7B83EC", VA = "0x7B83EC")]
	public DemoController()
	{
	}
}
[Token(Token = "0x20001AF")]
public class LoadingRatation : MonoBehaviour
{
	[Token(Token = "0x6000C6B")]
	[Address(RVA = "0x7EB39C", Offset = "0x7EB39C", VA = "0x7EB39C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C6C")]
	[Address(RVA = "0x7EB3A0", Offset = "0x7EB3A0", VA = "0x7EB3A0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C6D")]
	[Address(RVA = "0x7EB424", Offset = "0x7EB424", VA = "0x7EB424")]
	public LoadingRatation()
	{
	}
}
[Token(Token = "0x20001B0")]
public class InputManager : MonoBehaviour
{
	[Token(Token = "0x200062D")]
	public delegate void doEnterEventHandler();

	[Token(Token = "0x200062E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6441D8", Offset = "0x6441D8")]
	private sealed class <>c__DisplayClass8_0
	{
		[Token(Token = "0x40027A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject btnObj;

		[Token(Token = "0x40027A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InputManager <>4__this;

		[Token(Token = "0x6002C23")]
		[Address(RVA = "0x84ECA8", Offset = "0x84ECA8", VA = "0x84ECA8")]
		public <>c__DisplayClass8_0()
		{
		}

		[Token(Token = "0x6002C24")]
		[Address(RVA = "0x84FD0C", Offset = "0x84FD0C", VA = "0x84FD0C")]
		internal void <InitKeyBoard>b__0()
		{
		}
	}

	[Token(Token = "0x4000A3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static doEnterEventHandler doEnter;

	[Token(Token = "0x4000A3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private StringBuilder sb;

	[Token(Token = "0x4000A3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ArrayList btnsName;

	[Token(Token = "0x4000A3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameObject enter;

	[Token(Token = "0x6000C6E")]
	[Address(RVA = "0x84E14C", Offset = "0x84E14C", VA = "0x84E14C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000C6F")]
	[Address(RVA = "0x84ECA0", Offset = "0x84ECA0", VA = "0x84ECA0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C70")]
	[Address(RVA = "0x84ECA4", Offset = "0x84ECA4", VA = "0x84ECA4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C71")]
	[Address(RVA = "0x84E150", Offset = "0x84E150", VA = "0x84E150")]
	private void InitKeyBoard()
	{
	}

	[Token(Token = "0x6000C72")]
	[Address(RVA = "0x84ECB0", Offset = "0x84ECB0", VA = "0x84ECB0")]
	private void OnClick(GameObject btnObj)
	{
	}

	[Token(Token = "0x6000C73")]
	[Address(RVA = "0x84FB58", Offset = "0x84FB58", VA = "0x84FB58")]
	private void EnterChar(string s)
	{
	}

	[Token(Token = "0x6000C74")]
	[Address(RVA = "0x84EFB4", Offset = "0x84EFB4", VA = "0x84EFB4")]
	private void DoCapslock(bool IsUpper)
	{
	}

	[Token(Token = "0x6000C75")]
	[Address(RVA = "0x84F6A4", Offset = "0x84F6A4", VA = "0x84F6A4")]
	private void ClearBuffer()
	{
	}

	[Token(Token = "0x6000C76")]
	[Address(RVA = "0x84FC84", Offset = "0x84FC84", VA = "0x84FC84")]
	public InputManager()
	{
	}
}
[Token(Token = "0x20001B1")]
public class Callback : MonoBehaviour
{
	[Token(Token = "0x4000A40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string IS_SUCCESS;

	[Token(Token = "0x4000A41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static string MSG;

	[Token(Token = "0x4000A42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static string CODE;

	[Token(Token = "0x6000C77")]
	[Address(RVA = "0x8C905C", Offset = "0x8C905C", VA = "0x8C905C")]
	public void LoginCallback(string LoginInfo)
	{
	}

	[Token(Token = "0x6000C78")]
	[Address(RVA = "0x8C93F0", Offset = "0x8C93F0", VA = "0x8C93F0")]
	public void QueryOrPayCallback(string queryOrPayInfo)
	{
	}

	[Token(Token = "0x6000C79")]
	[Address(RVA = "0x8C96BC", Offset = "0x8C96BC", VA = "0x8C96BC")]
	public void UserInfoCallback(string userInfo)
	{
	}

	[Token(Token = "0x6000C7A")]
	[Address(RVA = "0x8C9308", Offset = "0x8C9308", VA = "0x8C9308")]
	public void SetMassage(string massage)
	{
	}

	[Token(Token = "0x6000C7B")]
	[Address(RVA = "0x8C97AC", Offset = "0x8C97AC", VA = "0x8C97AC")]
	public GameObject GetCurrentGameObject()
	{
		return null;
	}

	[Token(Token = "0x6000C7C")]
	[Address(RVA = "0x8C97F8", Offset = "0x8C97F8", VA = "0x8C97F8")]
	public void ActivityForResultCallback(string activity)
	{
	}

	[Token(Token = "0x6000C7D")]
	[Address(RVA = "0x8C9900", Offset = "0x8C9900", VA = "0x8C9900")]
	public Callback()
	{
	}
}
[Token(Token = "0x20001B2")]
public class CommonDic
{
	[Token(Token = "0x4000A43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static CommonDic dic;

	[Token(Token = "0x4000A44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Dictionary<string, string> mydic;

	[Token(Token = "0x4000A45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private string _app_ID;

	[Token(Token = "0x4000A46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private string _app_Key;

	[Token(Token = "0x4000A47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private string _user_token;

	[Token(Token = "0x4000A48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string _access_token;

	[Token(Token = "0x4000A49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private string _open_id;

	[Token(Token = "0x4000A4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private string _refresh_token;

	[Token(Token = "0x4000A4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private string _expires_in;

	[Token(Token = "0x4000A4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private string _user_info;

	[Token(Token = "0x4000A4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private string _subject;

	[Token(Token = "0x4000A4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private string _body;

	[Token(Token = "0x4000A4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private string _order_id;

	[Token(Token = "0x4000A50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private string _total;

	[Token(Token = "0x4000A51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private string _goods_tag;

	[Token(Token = "0x4000A52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private string _notify_url;

	[Token(Token = "0x4000A53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private string _trade_type;

	[Token(Token = "0x4000A54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private string _pay_code;

	[Token(Token = "0x4000A55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private string _order_info;

	[Token(Token = "0x4000A56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private string _code;

	[Token(Token = "0x4000A57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private string _msg;

	[Token(Token = "0x4000A58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private string _merchant_ID;

	[Token(Token = "0x4000A59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private string _payKey;

	[Token(Token = "0x4000A5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private string _isSuucess;

	[Token(Token = "0x4000A5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private string _loginMsg;

	[Token(Token = "0x1700010A")]
	public string subject
	{
		[Token(Token = "0x6000C83")]
		[Address(RVA = "0x7AB274", Offset = "0x7AB274", VA = "0x7AB274")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000C84")]
		[Address(RVA = "0x7AB1C4", Offset = "0x7AB1C4", VA = "0x7AB1C4")]
		set
		{
		}
	}

	[Token(Token = "0x1700010B")]
	public string body
	{
		[Token(Token = "0x6000C85")]
		[Address(RVA = "0x7AB27C", Offset = "0x7AB27C", VA = "0x7AB27C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000C86")]
		[Address(RVA = "0x7AB1CC", Offset = "0x7AB1CC", VA = "0x7AB1CC")]
		set
		{
		}
	}

	[Token(Token = "0x1700010C")]
	public string order_id
	{
		[Token(Token = "0x6000C87")]
		[Address(RVA = "0x7AB284", Offset = "0x7AB284", VA = "0x7AB284")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000C88")]
		[Address(RVA = "0x7AB1D4", Offset = "0x7AB1D4", VA = "0x7AB1D4")]
		set
		{
		}
	}

	[Token(Token = "0x1700010D")]
	public string total
	{
		[Token(Token = "0x6000C89")]
		[Address(RVA = "0x7AB28C", Offset = "0x7AB28C", VA = "0x7AB28C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000C8A")]
		[Address(RVA = "0x7AB1DC", Offset = "0x7AB1DC", VA = "0x7AB1DC")]
		set
		{
		}
	}

	[Token(Token = "0x1700010E")]
	public string goods_tag
	{
		[Token(Token = "0x6000C8B")]
		[Address(RVA = "0x7AB294", Offset = "0x7AB294", VA = "0x7AB294")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000C8C")]
		[Address(RVA = "0x7AB1E4", Offset = "0x7AB1E4", VA = "0x7AB1E4")]
		set
		{
		}
	}

	[Token(Token = "0x1700010F")]
	public string notify_url
	{
		[Token(Token = "0x6000C8D")]
		[Address(RVA = "0x7AB29C", Offset = "0x7AB29C", VA = "0x7AB29C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000C8E")]
		[Address(RVA = "0x7AB1EC", Offset = "0x7AB1EC", VA = "0x7AB1EC")]
		set
		{
		}
	}

	[Token(Token = "0x17000110")]
	public string pay_code
	{
		[Token(Token = "0x6000C8F")]
		[Address(RVA = "0x7AB2A4", Offset = "0x7AB2A4", VA = "0x7AB2A4")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000C90")]
		[Address(RVA = "0x7AB1FC", Offset = "0x7AB1FC", VA = "0x7AB1FC")]
		set
		{
		}
	}

	[Token(Token = "0x17000111")]
	public string trade_type
	{
		[Token(Token = "0x6000C91")]
		[Address(RVA = "0x7AB2AC", Offset = "0x7AB2AC", VA = "0x7AB2AC")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000C92")]
		[Address(RVA = "0x7AB1F4", Offset = "0x7AB1F4", VA = "0x7AB1F4")]
		set
		{
		}
	}

	[Token(Token = "0x17000112")]
	public string user_token
	{
		[Token(Token = "0x6000C93")]
		[Address(RVA = "0x7AB2B4", Offset = "0x7AB2B4", VA = "0x7AB2B4")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000C94")]
		[Address(RVA = "0x7AB2BC", Offset = "0x7AB2BC", VA = "0x7AB2BC")]
		set
		{
		}
	}

	[Token(Token = "0x17000113")]
	public string access_token
	{
		[Token(Token = "0x6000C95")]
		[Address(RVA = "0x7AB2C4", Offset = "0x7AB2C4", VA = "0x7AB2C4")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000C96")]
		[Address(RVA = "0x7AB2CC", Offset = "0x7AB2CC", VA = "0x7AB2CC")]
		set
		{
		}
	}

	[Token(Token = "0x17000114")]
	public string open_id
	{
		[Token(Token = "0x6000C97")]
		[Address(RVA = "0x7AB2D4", Offset = "0x7AB2D4", VA = "0x7AB2D4")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000C98")]
		[Address(RVA = "0x7AB2DC", Offset = "0x7AB2DC", VA = "0x7AB2DC")]
		set
		{
		}
	}

	[Token(Token = "0x17000115")]
	public string refresh_token
	{
		[Token(Token = "0x6000C99")]
		[Address(RVA = "0x7AB2E4", Offset = "0x7AB2E4", VA = "0x7AB2E4")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000C9A")]
		[Address(RVA = "0x7AB2EC", Offset = "0x7AB2EC", VA = "0x7AB2EC")]
		set
		{
		}
	}

	[Token(Token = "0x17000116")]
	public string expires_in
	{
		[Token(Token = "0x6000C9B")]
		[Address(RVA = "0x7AB2F4", Offset = "0x7AB2F4", VA = "0x7AB2F4")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000C9C")]
		[Address(RVA = "0x7AB2FC", Offset = "0x7AB2FC", VA = "0x7AB2FC")]
		set
		{
		}
	}

	[Token(Token = "0x17000117")]
	public string isSuccess
	{
		[Token(Token = "0x6000C9D")]
		[Address(RVA = "0x7AB304", Offset = "0x7AB304", VA = "0x7AB304")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000C9E")]
		[Address(RVA = "0x7AB30C", Offset = "0x7AB30C", VA = "0x7AB30C")]
		set
		{
		}
	}

	[Token(Token = "0x17000118")]
	public string loginMsg
	{
		[Token(Token = "0x6000C9F")]
		[Address(RVA = "0x7AB314", Offset = "0x7AB314", VA = "0x7AB314")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000CA0")]
		[Address(RVA = "0x7AB31C", Offset = "0x7AB31C", VA = "0x7AB31C")]
		set
		{
		}
	}

	[Token(Token = "0x17000119")]
	public string user_info
	{
		[Token(Token = "0x6000CA1")]
		[Address(RVA = "0x7AB324", Offset = "0x7AB324", VA = "0x7AB324")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000CA2")]
		[Address(RVA = "0x7AB32C", Offset = "0x7AB32C", VA = "0x7AB32C")]
		set
		{
		}
	}

	[Token(Token = "0x1700011A")]
	public string order_info
	{
		[Token(Token = "0x6000CA3")]
		[Address(RVA = "0x7AB334", Offset = "0x7AB334", VA = "0x7AB334")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000CA4")]
		[Address(RVA = "0x7AB33C", Offset = "0x7AB33C", VA = "0x7AB33C")]
		set
		{
		}
	}

	[Token(Token = "0x1700011B")]
	public string code
	{
		[Token(Token = "0x6000CA5")]
		[Address(RVA = "0x7AB344", Offset = "0x7AB344", VA = "0x7AB344")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000CA6")]
		[Address(RVA = "0x7AB34C", Offset = "0x7AB34C", VA = "0x7AB34C")]
		set
		{
		}
	}

	[Token(Token = "0x1700011C")]
	public string msg
	{
		[Token(Token = "0x6000CA7")]
		[Address(RVA = "0x7AB354", Offset = "0x7AB354", VA = "0x7AB354")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000CA8")]
		[Address(RVA = "0x7AB35C", Offset = "0x7AB35C", VA = "0x7AB35C")]
		set
		{
		}
	}

	[Token(Token = "0x1700011D")]
	public string app_ID
	{
		[Token(Token = "0x6000CA9")]
		[Address(RVA = "0x7AB364", Offset = "0x7AB364", VA = "0x7AB364")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000CAA")]
		[Address(RVA = "0x7AB36C", Offset = "0x7AB36C", VA = "0x7AB36C")]
		set
		{
		}
	}

	[Token(Token = "0x1700011E")]
	public string app_Key
	{
		[Token(Token = "0x6000CAB")]
		[Address(RVA = "0x7AB374", Offset = "0x7AB374", VA = "0x7AB374")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000CAC")]
		[Address(RVA = "0x7AB37C", Offset = "0x7AB37C", VA = "0x7AB37C")]
		set
		{
		}
	}

	[Token(Token = "0x1700011F")]
	public string merchant_ID
	{
		[Token(Token = "0x6000CAD")]
		[Address(RVA = "0x7AB384", Offset = "0x7AB384", VA = "0x7AB384")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000CAE")]
		[Address(RVA = "0x7AB38C", Offset = "0x7AB38C", VA = "0x7AB38C")]
		set
		{
		}
	}

	[Token(Token = "0x17000120")]
	public string paykey
	{
		[Token(Token = "0x6000CAF")]
		[Address(RVA = "0x7AB394", Offset = "0x7AB394", VA = "0x7AB394")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000CB0")]
		[Address(RVA = "0x7AB39C", Offset = "0x7AB39C", VA = "0x7AB39C")]
		set
		{
		}
	}

	[Token(Token = "0x6000C7F")]
	[Address(RVA = "0x7AA6B8", Offset = "0x7AA6B8", VA = "0x7AA6B8")]
	public static CommonDic getInstance()
	{
		return null;
	}

	[Token(Token = "0x6000C80")]
	[Address(RVA = "0x7AAFC4", Offset = "0x7AAFC4", VA = "0x7AAFC4")]
	public Dictionary<string, string> getDic()
	{
		return null;
	}

	[Token(Token = "0x6000C81")]
	[Address(RVA = "0x7AB014", Offset = "0x7AB014", VA = "0x7AB014")]
	public void setParameters(string name, string value)
	{
	}

	[Token(Token = "0x6000C82")]
	[Address(RVA = "0x7AB204", Offset = "0x7AB204", VA = "0x7AB204")]
	public string PayOrderString()
	{
		return null;
	}

	[Token(Token = "0x6000CB1")]
	[Address(RVA = "0x7AA7E8", Offset = "0x7AA7E8", VA = "0x7AA7E8")]
	public static void InitDicData(Dictionary<string, string> mydic)
	{
	}

	[Token(Token = "0x6000CB2")]
	[Address(RVA = "0x7AA77C", Offset = "0x7AA77C", VA = "0x7AA77C")]
	public CommonDic()
	{
	}
}
[Token(Token = "0x20001B3")]
public class LoginSDK
{
	[Token(Token = "0x6000CB3")]
	[Address(RVA = "0x7ECAB8", Offset = "0x7ECAB8", VA = "0x7ECAB8")]
	public static void Login()
	{
	}

	[Token(Token = "0x6000CB4")]
	[Address(RVA = "0x7ECB18", Offset = "0x7ECB18", VA = "0x7ECB18")]
	public static void GetUserAPI()
	{
	}

	[Token(Token = "0x6000CB5")]
	[Address(RVA = "0x7ECB78", Offset = "0x7ECB78", VA = "0x7ECB78")]
	public LoginSDK()
	{
	}
}
[Token(Token = "0x20001B4")]
public class PicoPaymentSDK
{
	[Token(Token = "0x4000A5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static AndroidJavaObject _jo;

	[Token(Token = "0x17000121")]
	public static AndroidJavaObject jo
	{
		[Token(Token = "0x6000CB6")]
		[Address(RVA = "0x8D1D40", Offset = "0x8D1D40", VA = "0x8D1D40")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000CB7")]
		[Address(RVA = "0x8D1DA8", Offset = "0x8D1DA8", VA = "0x8D1DA8")]
		set
		{
		}
	}

	[Token(Token = "0x6000CB8")]
	[Address(RVA = "0x8D1E14", Offset = "0x8D1E14", VA = "0x8D1E14")]
	public static void Login()
	{
	}

	[Token(Token = "0x6000CB9")]
	[Address(RVA = "0x8D1FB8", Offset = "0x8D1FB8", VA = "0x8D1FB8")]
	public static void Pay(string payOrderJson)
	{
	}

	[Token(Token = "0x6000CBA")]
	[Address(RVA = "0x8D21B8", Offset = "0x8D21B8", VA = "0x8D21B8")]
	public static void QueryOrder(string orderId)
	{
	}

	[Token(Token = "0x6000CBB")]
	[Address(RVA = "0x8D23B8", Offset = "0x8D23B8", VA = "0x8D23B8")]
	public static void GetUserAPI()
	{
	}

	[Token(Token = "0x6000CBC")]
	[Address(RVA = "0x8D255C", Offset = "0x8D255C", VA = "0x8D255C")]
	public PicoPaymentSDK()
	{
	}
}
[Token(Token = "0x20001B5")]
public class Pvr_ToBService : MonoBehaviour
{
	[Token(Token = "0x4000A5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text deviceInfoText;

	[Token(Token = "0x6000CBE")]
	[Address(RVA = "0xE339E4", Offset = "0xE339E4", VA = "0xE339E4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000CBF")]
	[Address(RVA = "0xE33A1C", Offset = "0xE33A1C", VA = "0xE33A1C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000CC0")]
	[Address(RVA = "0xE33A2C", Offset = "0xE33A2C", VA = "0xE33A2C")]
	private void OnDestory()
	{
	}

	[Token(Token = "0x6000CC1")]
	[Address(RVA = "0xE339E8", Offset = "0xE339E8", VA = "0xE339E8")]
	private void InitToBService()
	{
	}

	[Token(Token = "0x6000CC2")]
	[Address(RVA = "0xE33A24", Offset = "0xE33A24", VA = "0xE33A24")]
	private void BindToBService()
	{
	}

	[Token(Token = "0x6000CC3")]
	[Address(RVA = "0xE33A34", Offset = "0xE33A34", VA = "0xE33A34")]
	private void UnBindToBService()
	{
	}

	[Token(Token = "0x6000CC4")]
	[Address(RVA = "0xE33A3C", Offset = "0xE33A3C", VA = "0xE33A3C")]
	private void BoolCallback(string value)
	{
	}

	[Token(Token = "0x6000CC5")]
	[Address(RVA = "0xE33AEC", Offset = "0xE33AEC", VA = "0xE33AEC")]
	private void IntCallback(string value)
	{
	}

	[Token(Token = "0x6000CC6")]
	[Address(RVA = "0xE33B7C", Offset = "0xE33B7C", VA = "0xE33B7C")]
	private void LongCallback(string value)
	{
	}

	[Token(Token = "0x6000CC7")]
	[Address(RVA = "0xE33C0C", Offset = "0xE33C0C", VA = "0xE33C0C")]
	public void StateGetDeviceInfo()
	{
	}

	[Token(Token = "0x6000CC8")]
	[Address(RVA = "0xE33C9C", Offset = "0xE33C9C", VA = "0xE33C9C")]
	public void ControlSetDeviceAction()
	{
	}

	[Token(Token = "0x6000CC9")]
	[Address(RVA = "0xE33D1C", Offset = "0xE33D1C", VA = "0xE33D1C")]
	private void ControlSetDeviceActionCallBack(int value)
	{
	}

	[Token(Token = "0x6000CCA")]
	[Address(RVA = "0xE33DCC", Offset = "0xE33DCC", VA = "0xE33DCC")]
	public void AppManager()
	{
	}

	[Token(Token = "0x6000CCB")]
	[Address(RVA = "0xE33E58", Offset = "0xE33E58", VA = "0xE33E58")]
	private void AppManagerCallBack(int value)
	{
	}

	[Token(Token = "0x6000CCC")]
	[Address(RVA = "0xE33F08", Offset = "0xE33F08", VA = "0xE33F08")]
	public Pvr_ToBService()
	{
	}
}
[Token(Token = "0x20001B6")]
public class PLOG : MonoBehaviour
{
	[Token(Token = "0x4000A5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int logLevel;

	[Token(Token = "0x6000CCD")]
	[Address(RVA = "0x7FEC64", Offset = "0x7FEC64", VA = "0x7FEC64")]
	public static void getConfigTraceLevel()
	{
	}

	[Token(Token = "0x6000CCE")]
	[Address(RVA = "0x7FECD0", Offset = "0x7FECD0", VA = "0x7FECD0")]
	public static void D(string msg)
	{
	}

	[Token(Token = "0x6000CCF")]
	[Address(RVA = "0x7FED78", Offset = "0x7FED78", VA = "0x7FED78")]
	public static void I(string msg)
	{
	}

	[Token(Token = "0x6000CD0")]
	[Address(RVA = "0x7FEE20", Offset = "0x7FEE20", VA = "0x7FEE20")]
	public static void W(string msg)
	{
	}

	[Token(Token = "0x6000CD1")]
	[Address(RVA = "0x7FEEC8", Offset = "0x7FEEC8", VA = "0x7FEEC8")]
	public static void E(string msg)
	{
	}

	[Token(Token = "0x6000CD2")]
	[Address(RVA = "0x7FEF30", Offset = "0x7FEF30", VA = "0x7FEF30")]
	public PLOG()
	{
	}
}
[Token(Token = "0x20001B7")]
public class CPicoSDKSettingAsset : ScriptableObject
{
	[Token(Token = "0x4000A5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool IgnoreSDKSetting;

	[Token(Token = "0x4000A60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool DontshowBuildWaring;

	[Token(Token = "0x4000A61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool AppIDChecked;

	[Token(Token = "0x6000CD4")]
	[Address(RVA = "0x8C7E00", Offset = "0x8C7E00", VA = "0x8C7E00")]
	public CPicoSDKSettingAsset()
	{
	}
}
[Serializable]
[Token(Token = "0x20001B8")]
public class Pvr_UnitySDKProjectSetting : ScriptableObject
{
	[Token(Token = "0x4000A62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RenderTextureAntiAliasing rtAntiAlising;

	[Token(Token = "0x4000A63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public RenderTextureDepth rtBitDepth;

	[Token(Token = "0x4000A64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public RenderTextureFormat rtFormat;

	[Token(Token = "0x4000A65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool usedefaultRenderTexture;

	[Token(Token = "0x4000A66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector2 customRTSize;

	[Token(Token = "0x4000A67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool usedefaultfps;

	[Token(Token = "0x4000A68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public int customfps;

	[Token(Token = "0x4000A69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool usesinglepass;

	[Token(Token = "0x4000A6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	public bool usecontentprotect;

	[Token(Token = "0x6000CD5")]
	[Address(RVA = "0x9BB3A4", Offset = "0x9BB3A4", VA = "0x9BB3A4")]
	public static Pvr_UnitySDKProjectSetting GetProjectConfig()
	{
		return null;
	}

	[Token(Token = "0x6000CD6")]
	[Address(RVA = "0x9C3B60", Offset = "0x9C3B60", VA = "0x9C3B60")]
	public Pvr_UnitySDKProjectSetting()
	{
	}
}
[Token(Token = "0x20001B9")]
public sealed class Pvr_UnitySDKPlatformSetting : ScriptableObject
{
	[Token(Token = "0x200062F")]
	public enum simulationType
	{
		[Token(Token = "0x40027A8")]
		Null,
		[Token(Token = "0x40027A9")]
		Invalid,
		[Token(Token = "0x40027AA")]
		Valid
	}

	[Token(Token = "0x4000A6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private bool entitlementchecksimulation;

	[Token(Token = "0x4000A6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	[SerializeField]
	private bool startTimeEntitlementCheck;

	[Token(Token = "0x4000A6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	public string appID;

	[Token(Token = "0x4000A6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<string> deviceSN;

	[Token(Token = "0x4000A6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Pvr_UnitySDKPlatformSetting instance;

	[Token(Token = "0x17000122")]
	public static bool Entitlementchecksimulation
	{
		[Token(Token = "0x6000CD7")]
		[Address(RVA = "0x9C2C44", Offset = "0x9C2C44", VA = "0x9C2C44")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000CD8")]
		[Address(RVA = "0x9C2C70", Offset = "0x9C2C70", VA = "0x9C2C70")]
		set
		{
		}
	}

	[Token(Token = "0x17000123")]
	public static bool StartTimeEntitlementCheck
	{
		[Token(Token = "0x6000CD9")]
		[Address(RVA = "0x9C2864", Offset = "0x9C2864", VA = "0x9C2864")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000CDA")]
		[Address(RVA = "0x9C2CC8", Offset = "0x9C2CC8", VA = "0x9C2CC8")]
		set
		{
		}
	}

	[Token(Token = "0x17000124")]
	public static Pvr_UnitySDKPlatformSetting Instance
	{
		[Token(Token = "0x6000CDB")]
		[Address(RVA = "0x9C2890", Offset = "0x9C2890", VA = "0x9C2890")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000CDC")]
		[Address(RVA = "0x9C2D20", Offset = "0x9C2D20", VA = "0x9C2D20")]
		set
		{
		}
	}

	[Token(Token = "0x6000CDD")]
	[Address(RVA = "0x9C2D74", Offset = "0x9C2D74", VA = "0x9C2D74")]
	public Pvr_UnitySDKPlatformSetting()
	{
	}
}
[Token(Token = "0x20001BA")]
public class Pvr_UnitySDKManager : MonoBehaviour
{
	[Token(Token = "0x2000630")]
	public delegate void EntitlementCheckResult(int ReturnValue);

	[Token(Token = "0x2000631")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6441E8", Offset = "0x6441E8")]
	private sealed class <ToastManager>d__98 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40027AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40027AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40027AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float time;

		[Token(Token = "0x40027AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int type;

		[Token(Token = "0x40027AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Pvr_UnitySDKManager <>4__this;

		[Token(Token = "0x40027B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool state;

		[Token(Token = "0x170002AF")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002C2C")]
			[Address(RVA = "0x9C2B24", Offset = "0x9C2B24", VA = "0x9C2B24", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002B0")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002C2E")]
			[Address(RVA = "0x9C2B94", Offset = "0x9C2B94", VA = "0x9C2B94", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002C29")]
		[Address(RVA = "0x9BCC7C", Offset = "0x9BCC7C", VA = "0x9BCC7C")]
		[DebuggerHidden]
		public <ToastManager>d__98(int <>1__state)
		{
		}

		[Token(Token = "0x6002C2A")]
		[Address(RVA = "0x9C29C0", Offset = "0x9C29C0", VA = "0x9C29C0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002C2B")]
		[Address(RVA = "0x9C29C4", Offset = "0x9C29C4", VA = "0x9C29C4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002C2D")]
		[Address(RVA = "0x9C2B2C", Offset = "0x9C2B2C", VA = "0x9C2B2C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000632")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6441F8", Offset = "0x6441F8")]
	private sealed class <>c__DisplayClass103_0
	{
		[Token(Token = "0x40027B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Pvr_UnitySDKManager <>4__this;

		[Token(Token = "0x40027B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform trans;

		[Token(Token = "0x6002C2F")]
		[Address(RVA = "0x9BE4FC", Offset = "0x9BE4FC", VA = "0x9BE4FC")]
		public <>c__DisplayClass103_0()
		{
		}

		[Token(Token = "0x6002C30")]
		[Address(RVA = "0x9C18B0", Offset = "0x9C18B0", VA = "0x9C18B0")]
		internal void <SetProperty>b__0()
		{
		}
	}

	[Token(Token = "0x2000633")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x644208", Offset = "0x644208")]
	private sealed class <G3TipsManager>d__107 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40027B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40027B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40027B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float time;

		[Token(Token = "0x40027B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject tip;

		[Token(Token = "0x170002B1")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002C34")]
			[Address(RVA = "0x9C19F0", Offset = "0x9C19F0", VA = "0x9C19F0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002B2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002C36")]
			[Address(RVA = "0x9C1A60", Offset = "0x9C1A60", VA = "0x9C1A60", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002C31")]
		[Address(RVA = "0x9BE908", Offset = "0x9BE908", VA = "0x9BE908")]
		[DebuggerHidden]
		public <G3TipsManager>d__107(int <>1__state)
		{
		}

		[Token(Token = "0x6002C32")]
		[Address(RVA = "0x9C192C", Offset = "0x9C192C", VA = "0x9C192C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002C33")]
		[Address(RVA = "0x9C1930", Offset = "0x9C1930", VA = "0x9C1930", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002C35")]
		[Address(RVA = "0x9C19F8", Offset = "0x9C19F8", VA = "0x9C19F8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000634")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x644218", Offset = "0x644218")]
	private sealed class <Start>d__119 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40027B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40027B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40027B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Pvr_UnitySDKManager <>4__this;

		[Token(Token = "0x170002B3")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002C3A")]
			[Address(RVA = "0x9C2948", Offset = "0x9C2948", VA = "0x9C2948", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002B4")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002C3C")]
			[Address(RVA = "0x9C29B8", Offset = "0x9C29B8", VA = "0x9C29B8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002C37")]
		[Address(RVA = "0x9C0A34", Offset = "0x9C0A34", VA = "0x9C0A34")]
		[DebuggerHidden]
		public <Start>d__119(int <>1__state)
		{
		}

		[Token(Token = "0x6002C38")]
		[Address(RVA = "0x9C25D8", Offset = "0x9C25D8", VA = "0x9C25D8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002C39")]
		[Address(RVA = "0x9C25DC", Offset = "0x9C25DC", VA = "0x9C25DC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002C3B")]
		[Address(RVA = "0x9C2950", Offset = "0x9C2950", VA = "0x9C2950", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000635")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x644228", Offset = "0x644228")]
	private sealed class <InitRenderThreadRoutine>d__120 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40027BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40027BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40027BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int <i>5__2;

		[Token(Token = "0x170002B5")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002C40")]
			[Address(RVA = "0x9C1D68", Offset = "0x9C1D68", VA = "0x9C1D68", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002B6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002C42")]
			[Address(RVA = "0x9C1DD8", Offset = "0x9C1DD8", VA = "0x9C1DD8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002C3D")]
		[Address(RVA = "0x9C0AC0", Offset = "0x9C0AC0", VA = "0x9C0AC0")]
		[DebuggerHidden]
		public <InitRenderThreadRoutine>d__120(int <>1__state)
		{
		}

		[Token(Token = "0x6002C3E")]
		[Address(RVA = "0x9C1A68", Offset = "0x9C1A68", VA = "0x9C1A68", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002C3F")]
		[Address(RVA = "0x9C1A6C", Offset = "0x9C1A6C", VA = "0x9C1A6C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002C41")]
		[Address(RVA = "0x9C1D70", Offset = "0x9C1D70", VA = "0x9C1D70", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000636")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x644238", Offset = "0x644238")]
	private sealed class <OnResume>d__133 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40027BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40027BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40027BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Pvr_UnitySDKManager <>4__this;

		[Token(Token = "0x40027C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <ability6dof>5__2;

		[Token(Token = "0x40027C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int <waitNum>5__3;

		[Token(Token = "0x40027C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int <resetNum>5__4;

		[Token(Token = "0x40027C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int <i>5__5;

		[Token(Token = "0x170002B7")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002C46")]
			[Address(RVA = "0x9C2560", Offset = "0x9C2560", VA = "0x9C2560", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002B8")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002C48")]
			[Address(RVA = "0x9C25D0", Offset = "0x9C25D0", VA = "0x9C25D0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002C43")]
		[Address(RVA = "0x9C1748", Offset = "0x9C1748", VA = "0x9C1748")]
		[DebuggerHidden]
		public <OnResume>d__133(int <>1__state)
		{
		}

		[Token(Token = "0x6002C44")]
		[Address(RVA = "0x9C1DE0", Offset = "0x9C1DE0", VA = "0x9C1DE0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002C45")]
		[Address(RVA = "0x9C1DE4", Offset = "0x9C1DE4", VA = "0x9C1DE4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002C47")]
		[Address(RVA = "0x9C2568", Offset = "0x9C2568", VA = "0x9C2568", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000A70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static PlatForm platform;

	[Token(Token = "0x4000A71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static bool PICOFOCUS;

	[Token(Token = "0x4000A72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Pvr_UnitySDKManager sdk;

	[Token(Token = "0x4000A73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public float EyesAspect;

	[Token(Token = "0x4000A74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[HideInInspector]
	public int posStatus;

	[Token(Token = "0x4000A75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public bool ismirroring;

	[Token(Token = "0x4000A76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[HideInInspector]
	public Vector3 resetBasePos;

	[Token(Token = "0x4000A77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public int trackingmode;

	[Token(Token = "0x4000A78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[HideInInspector]
	public int systemprop;

	[Token(Token = "0x4000A79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	public bool systemFPS;

	[Token(Token = "0x4000A7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[HideInInspector]
	public float[] headData;

	[Token(Token = "0x4000A7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private bool rotfoldout;

	[Token(Token = "0x4000A7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	[SerializeField]
	private bool hmdOnlyrot;

	[Token(Token = "0x4000A7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
	[SerializeField]
	private bool controllerOnlyrot;

	[Token(Token = "0x4000A7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[SerializeField]
	private TrackingOrigin trackingOrigin;

	[Token(Token = "0x4000A7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool ResetTrackerOnLoad;

	[Token(Token = "0x4000A80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[HideInInspector]
	public Vector3 leftEyeOffset;

	[Token(Token = "0x4000A81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[HideInInspector]
	public Vector3 rightEyeOffset;

	[Token(Token = "0x4000A82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[HideInInspector]
	public Rect leftEyeRect;

	[Token(Token = "0x4000A83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	[HideInInspector]
	public Rect rightEyeRect;

	[Token(Token = "0x4000A84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	[HideInInspector]
	public Matrix4x4 leftEyeView;

	[Token(Token = "0x4000A85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	[HideInInspector]
	public Matrix4x4 rightEyeView;

	[Token(Token = "0x4000A86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	[HideInInspector]
	public Pvr_UnitySDKEditor pvr_UnitySDKEditor;

	[Token(Token = "0x4000A87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	[SerializeField]
	private bool vrModeEnabled;

	[Token(Token = "0x4000A88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	[HideInInspector]
	public Material Eyematerial;

	[Token(Token = "0x4000A89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	[HideInInspector]
	public Material Middlematerial;

	[Token(Token = "0x4000A8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64FC34", Offset = "0x64FC34")]
	private bool <picovrTriggered>k__BackingField;

	[Token(Token = "0x4000A8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x131")]
	[HideInInspector]
	public bool newPicovrTriggered;

	[Token(Token = "0x4000A8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x132")]
	[SerializeField]
	private bool showFPS;

	[Token(Token = "0x4000A8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
	[HideInInspector]
	public Vector3 neckOffset;

	[Token(Token = "0x4000A8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	[SerializeField]
	private bool pVRNeck;

	[Token(Token = "0x4000A8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x141")]
	[HideInInspector]
	public bool UseCustomNeckPara;

	[Token(Token = "0x4000A90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x142")]
	[HideInInspector]
	public bool onResume;

	[Token(Token = "0x4000A91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x143")]
	[HideInInspector]
	public bool isEnterVRMode;

	[Token(Token = "0x4000A92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
	public bool isHasController;

	[Token(Token = "0x4000A93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public Pvr_UnitySDKConfigProfile pvr_UnitySDKConfig;

	[Token(Token = "0x4000A94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private GameObject calltoast;

	[Token(Token = "0x4000A95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private GameObject msgtoast;

	[Token(Token = "0x4000A96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private GameObject lowhmdBatterytoast;

	[Token(Token = "0x4000A97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private GameObject lowphoneBatterytoast;

	[Token(Token = "0x4000A98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private GameObject LowPhoneHealthtoast;

	[Token(Token = "0x4000A99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private GameObject LowcontrollerBatterytoast;

	[Token(Token = "0x4000A9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private bool lowControllerpowerstate;

	[Token(Token = "0x4000A9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
	private float controllerpowershowtime;

	[Token(Token = "0x4000A9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private bool UseToast;

	[Token(Token = "0x4000A9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
	private int iPhoneHMDModeEnabled;

	[Token(Token = "0x4000A9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	private GameObject G3LiteTips;

	[Token(Token = "0x4000A9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	[SerializeField]
	private bool monoscopic;

	[Token(Token = "0x4000AA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x199")]
	private bool mIsAndroid7;

	[Token(Token = "0x4000AA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static Func<bool> eventEnterVRMode;

	[Token(Token = "0x4000AA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19A")]
	[HideInInspector]
	public bool ShowVideoSeethrough;

	[Token(Token = "0x4000AA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19C")]
	public int SystemDebugFFRLevel;

	[Token(Token = "0x4000AA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public int SystemFFRLevel;

	[Token(Token = "0x4000AA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A4")]
	public int AppCheckResult;

	[Token(Token = "0x4000AA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	public Action longPressHomeKeyAction;

	[Token(Token = "0x17000125")]
	public static Pvr_UnitySDKManager SDK
	{
		[Token(Token = "0x6000CDE")]
		[Address(RVA = "0x9B35EC", Offset = "0x9B35EC", VA = "0x9B35EC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000126")]
	public bool Rotfoldout
	{
		[Token(Token = "0x6000CDF")]
		[Address(RVA = "0x9BB2A8", Offset = "0x9BB2A8", VA = "0x9BB2A8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000CE0")]
		[Address(RVA = "0x9BB2B0", Offset = "0x9BB2B0", VA = "0x9BB2B0")]
		set
		{
		}
	}

	[Token(Token = "0x17000127")]
	public bool HmdOnlyrot
	{
		[Token(Token = "0x6000CE1")]
		[Address(RVA = "0x9BB2D0", Offset = "0x9BB2D0", VA = "0x9BB2D0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000CE2")]
		[Address(RVA = "0x9BB2D8", Offset = "0x9BB2D8", VA = "0x9BB2D8")]
		set
		{
		}
	}

	[Token(Token = "0x17000128")]
	public bool ControllerOnlyrot
	{
		[Token(Token = "0x6000CE3")]
		[Address(RVA = "0x9BB2F8", Offset = "0x9BB2F8", VA = "0x9BB2F8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000CE4")]
		[Address(RVA = "0x9BB300", Offset = "0x9BB300", VA = "0x9BB300")]
		set
		{
		}
	}

	[Token(Token = "0x17000129")]
	public TrackingOrigin TrackingOrigin
	{
		[Token(Token = "0x6000CE5")]
		[Address(RVA = "0x9BB320", Offset = "0x9BB320", VA = "0x9BB320")]
		get
		{
			return default(TrackingOrigin);
		}
		[Token(Token = "0x6000CE6")]
		[Address(RVA = "0x9BB328", Offset = "0x9BB328", VA = "0x9BB328")]
		set
		{
		}
	}

	[Token(Token = "0x1700012A")]
	[HideInInspector]
	public bool VRModeEnabled
	{
		[Token(Token = "0x6000CEA")]
		[Address(RVA = "0x9B4330", Offset = "0x9B4330", VA = "0x9B4330")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000CEB")]
		[Address(RVA = "0x9BB434", Offset = "0x9BB434", VA = "0x9BB434")]
		set
		{
		}
	}

	[Token(Token = "0x1700012B")]
	[HideInInspector]
	public bool picovrTriggered
	{
		[Token(Token = "0x6000CEC")]
		[Address(RVA = "0x9BB454", Offset = "0x9BB454", VA = "0x9BB454")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6697B0", Offset = "0x6697B0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000CED")]
		[Address(RVA = "0x9BB45C", Offset = "0x9BB45C", VA = "0x9BB45C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6697C0", Offset = "0x6697C0")]
		set
		{
		}
	}

	[Token(Token = "0x1700012C")]
	public bool ShowFPS
	{
		[Token(Token = "0x6000CEE")]
		[Address(RVA = "0x9BB468", Offset = "0x9BB468", VA = "0x9BB468")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000CEF")]
		[Address(RVA = "0x9BB470", Offset = "0x9BB470", VA = "0x9BB470")]
		set
		{
		}
	}

	[Token(Token = "0x1700012D")]
	public bool PVRNeck
	{
		[Token(Token = "0x6000CF0")]
		[Address(RVA = "0x9BB490", Offset = "0x9BB490", VA = "0x9BB490")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000CF1")]
		[Address(RVA = "0x9BB498", Offset = "0x9BB498", VA = "0x9BB498")]
		set
		{
		}
	}

	[Token(Token = "0x1700012E")]
	[HideInInspector]
	public bool Monoscopic
	{
		[Token(Token = "0x6000CF2")]
		[Address(RVA = "0x9B3754", Offset = "0x9B3754", VA = "0x9B3754")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000CF3")]
		[Address(RVA = "0x9BB4B8", Offset = "0x9BB4B8", VA = "0x9BB4B8")]
		set
		{
		}
	}

	[Token(Token = "0x14000067")]
	public static event EntitlementCheckResult EntitlementCheckResultEvent
	{
		[Token(Token = "0x6000CF4")]
		[Address(RVA = "0x9BB4E4", Offset = "0x9BB4E4", VA = "0x9BB4E4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6697D0", Offset = "0x6697D0")]
		add
		{
		}
		[Token(Token = "0x6000CF5")]
		[Address(RVA = "0x9BB614", Offset = "0x9BB614", VA = "0x9BB614")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6697E0", Offset = "0x6697E0")]
		remove
		{
		}
	}

	[Token(Token = "0x6000CE7")]
	[Address(RVA = "0x9BB348", Offset = "0x9BB348", VA = "0x9BB348")]
	public void ChangeDefaultCustomRtSize(int w, int h)
	{
	}

	[Token(Token = "0x6000CE8")]
	[Address(RVA = "0x9B3714", Offset = "0x9B3714", VA = "0x9B3714")]
	public Vector3 EyeOffset(Eye eye)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000CE9")]
	[Address(RVA = "0x9BB3F8", Offset = "0x9BB3F8", VA = "0x9BB3F8")]
	public Rect EyeRect(Eye eye)
	{
		return default(Rect);
	}

	[Token(Token = "0x6000CF6")]
	[Address(RVA = "0x9BB744", Offset = "0x9BB744", VA = "0x9BB744")]
	private bool SDKManagerInit()
	{
		return default(bool);
	}

	[Token(Token = "0x6000CF7")]
	[Address(RVA = "0x9BB89C", Offset = "0x9BB89C", VA = "0x9BB89C")]
	private bool SDKManagerInitCoreAbility()
	{
		return default(bool);
	}

	[Token(Token = "0x6000CF8")]
	[Address(RVA = "0x9BB9DC", Offset = "0x9BB9DC", VA = "0x9BB9DC")]
	public void smsReceivedCallback(string msg)
	{
	}

	[Token(Token = "0x6000CF9")]
	[Address(RVA = "0x9BC400", Offset = "0x9BC400", VA = "0x9BC400")]
	public void phoneStateCallback(string state)
	{
	}

	[Token(Token = "0x6000CFA")]
	[Address(RVA = "0x9BC85C", Offset = "0x9BC85C", VA = "0x9BC85C")]
	public void phoneBatteryStateCallback(string state)
	{
	}

	[Token(Token = "0x6000CFB")]
	[Address(RVA = "0x9BCB38", Offset = "0x9BCB38", VA = "0x9BCB38")]
	public void hmdLowBatteryCallback(string level)
	{
	}

	[Token(Token = "0x6000CFC")]
	[Address(RVA = "0x9BBE38", Offset = "0x9BBE38", VA = "0x9BBE38")]
	private string TransformNumber(string number)
	{
		return null;
	}

	[Token(Token = "0x6000CFD")]
	[Address(RVA = "0x9BCC78", Offset = "0x9BCC78", VA = "0x9BCC78")]
	public void onHmdOrientationReseted()
	{
	}

	[Token(Token = "0x6000CFE")]
	[Address(RVA = "0x9BC32C", Offset = "0x9BC32C", VA = "0x9BC32C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6697F0", Offset = "0x6697F0")]
	private IEnumerator ToastManager(int type, bool state, float time)
	{
		return null;
	}

	[Token(Token = "0x6000CFF")]
	[Address(RVA = "0x9BCCA8", Offset = "0x9BCCA8", VA = "0x9BCCA8")]
	private void CheckControllerStateForG2(string state)
	{
	}

	[Token(Token = "0x6000D00")]
	[Address(RVA = "0x9BCE60", Offset = "0x9BCE60", VA = "0x9BCE60")]
	public void notificationCallback(string data)
	{
	}

	[Token(Token = "0x6000D01")]
	[Address(RVA = "0x9BE224", Offset = "0x9BE224", VA = "0x9BE224")]
	private Sprite LoadSprite(Vector2 size, string filepath)
	{
		return null;
	}

	[Token(Token = "0x6000D02")]
	[Address(RVA = "0x9BE350", Offset = "0x9BE350", VA = "0x9BE350")]
	private byte[] ReadTex(string path)
	{
		return null;
	}

	[Token(Token = "0x6000D03")]
	[Address(RVA = "0x9BD2B8", Offset = "0x9BD2B8", VA = "0x9BD2B8")]
	private void SetProperty(int type, JsonData data, string value)
	{
	}

	[Token(Token = "0x6000D04")]
	[Address(RVA = "0x9BD900", Offset = "0x9BD900", VA = "0x9BD900")]
	private void SetBaseProperty(Transform trans, JsonData data, string value)
	{
	}

	[Token(Token = "0x6000D05")]
	[Address(RVA = "0x9BDE30", Offset = "0x9BDE30", VA = "0x9BDE30")]
	private void SetImageProperty(Transform image, JsonData data, string value)
	{
	}

	[Token(Token = "0x6000D06")]
	[Address(RVA = "0x9BE504", Offset = "0x9BE504", VA = "0x9BE504")]
	private void SetTextProperty(Transform text, JsonData data, string value)
	{
	}

	[Token(Token = "0x6000D07")]
	[Address(RVA = "0x9BE18C", Offset = "0x9BE18C", VA = "0x9BE18C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x669854", Offset = "0x669854")]
	private IEnumerator G3TipsManager(GameObject tip, float time)
	{
		return null;
	}

	[Token(Token = "0x6000D08")]
	[Address(RVA = "0x9BE88C", Offset = "0x9BE88C", VA = "0x9BE88C")]
	private float JsonToFloat(JsonData data)
	{
		return default(float);
	}

	[Token(Token = "0x6000D09")]
	[Address(RVA = "0x9BE934", Offset = "0x9BE934", VA = "0x9BE934")]
	private bool SDKManagerInitFPS()
	{
		return default(bool);
	}

	[Token(Token = "0x6000D0A")]
	[Address(RVA = "0x9BB828", Offset = "0x9BB828", VA = "0x9BB828")]
	private bool SDKManagerInitConfigProfile()
	{
		return default(bool);
	}

	[Token(Token = "0x6000D0B")]
	[Address(RVA = "0x9BEB14", Offset = "0x9BEB14", VA = "0x9BEB14")]
	private bool SDKManagerInitEditor()
	{
		return default(bool);
	}

	[Token(Token = "0x6000D0C")]
	[Address(RVA = "0x9BEBC4", Offset = "0x9BEBC4", VA = "0x9BEBC4")]
	private bool SDKManagerInitPara()
	{
		return default(bool);
	}

	[Token(Token = "0x6000D0D")]
	[Address(RVA = "0x9BEBCC", Offset = "0x9BEBCC", VA = "0x9BEBCC")]
	public void SDKManagerLongHomeKey()
	{
	}

	[Token(Token = "0x6000D0E")]
	[Address(RVA = "0x9BECDC", Offset = "0x9BECDC", VA = "0x9BECDC")]
	private void setLongHomeKey()
	{
	}

	[Token(Token = "0x6000D0F")]
	[Address(RVA = "0x9BF0FC", Offset = "0x9BF0FC", VA = "0x9BF0FC")]
	public void verifyAPPCallback(string code)
	{
	}

	[Token(Token = "0x6000D10")]
	[Address(RVA = "0x9BF688", Offset = "0x9BF688", VA = "0x9BF688")]
	public void IpdRefreshCallBack(string ipd)
	{
	}

	[Token(Token = "0x6000D11")]
	[Address(RVA = "0x9BF7E0", Offset = "0x9BF7E0", VA = "0x9BF7E0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000D12")]
	[Address(RVA = "0x9C09C0", Offset = "0x9C09C0", VA = "0x9C09C0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6698B8", Offset = "0x6698B8")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000D13")]
	[Address(RVA = "0x9C0A60", Offset = "0x9C0A60", VA = "0x9C0A60")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x66991C", Offset = "0x66991C")]
	private IEnumerator InitRenderThreadRoutine()
	{
		return null;
	}

	[Token(Token = "0x6000D14")]
	[Address(RVA = "0x9C0AEC", Offset = "0x9C0AEC", VA = "0x9C0AEC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D15")]
	[Address(RVA = "0x9C0E44", Offset = "0x9C0E44", VA = "0x9C0E44")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000D16")]
	[Address(RVA = "0x9C0FA4", Offset = "0x9C0FA4", VA = "0x9C0FA4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000D17")]
	[Address(RVA = "0x9C10DC", Offset = "0x9C10DC", VA = "0x9C10DC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000D18")]
	[Address(RVA = "0x9C10E4", Offset = "0x9C10E4", VA = "0x9C10E4")]
	private void OnPause()
	{
	}

	[Token(Token = "0x6000D19")]
	[Address(RVA = "0x9C1380", Offset = "0x9C1380", VA = "0x9C1380")]
	private void OnApplicationPause(bool pause)
	{
	}

	[Token(Token = "0x6000D1A")]
	[Address(RVA = "0x9C1634", Offset = "0x9C1634", VA = "0x9C1634")]
	public void EnterVRMode()
	{
	}

	[Token(Token = "0x6000D1B")]
	[Address(RVA = "0x9C1194", Offset = "0x9C1194", VA = "0x9C1194")]
	public void LeaveVRMode()
	{
	}

	[Token(Token = "0x6000D1C")]
	[Address(RVA = "0x9C1740", Offset = "0x9C1740", VA = "0x9C1740")]
	public void SixDofForceQuit()
	{
	}

	[Token(Token = "0x6000D1D")]
	[Address(RVA = "0x9C01D4", Offset = "0x9C01D4", VA = "0x9C01D4")]
	private void InitUI()
	{
	}

	[Token(Token = "0x6000D1E")]
	[Address(RVA = "0x9C0470", Offset = "0x9C0470", VA = "0x9C0470")]
	private void RefreshTextByLanguage()
	{
	}

	[Token(Token = "0x6000D1F")]
	[Address(RVA = "0x9BFE30", Offset = "0x9BFE30", VA = "0x9BFE30")]
	private void LoadIsMirroringValue()
	{
	}

	[Token(Token = "0x6000D20")]
	[Address(RVA = "0x9C15C0", Offset = "0x9C15C0", VA = "0x9C15C0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x669980", Offset = "0x669980")]
	private IEnumerator OnResume()
	{
		return null;
	}

	[Token(Token = "0x6000D21")]
	[Address(RVA = "0x9C1774", Offset = "0x9C1774", VA = "0x9C1774")]
	public Pvr_UnitySDKManager()
	{
	}
}
[Token(Token = "0x20001BB")]
public class QuitGame : MonoBehaviour
{
	[Token(Token = "0x6000D23")]
	[Address(RVA = "0x9CE91C", Offset = "0x9CE91C", VA = "0x9CE91C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D24")]
	[Address(RVA = "0x9CE920", Offset = "0x9CE920", VA = "0x9CE920")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D25")]
	[Address(RVA = "0x9CE94C", Offset = "0x9CE94C", VA = "0x9CE94C")]
	public QuitGame()
	{
	}
}
[Token(Token = "0x20001BC")]
public class Pvr_UnityEyeMask : MonoBehaviour
{
	[Token(Token = "0x2000637")]
	private class EyeMaskData
	{
		[Token(Token = "0x40027C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Eye eyeSide;

		[Token(Token = "0x40027C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Camera camera;

		[Token(Token = "0x40027C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CommandBuffer cmdBuf;

		[Token(Token = "0x6002C49")]
		[Address(RVA = "0xF423B8", Offset = "0xF423B8", VA = "0xF423B8")]
		public EyeMaskData()
		{
		}
	}

	[Token(Token = "0x4000AA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Shader eyeMaskShader;

	[Token(Token = "0x4000AA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Material eyeMaskMaterial;

	[Token(Token = "0x4000AAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Mesh eyeMaskMeshLeft;

	[Token(Token = "0x4000AAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Mesh eyeMaskMeshRight;

	[Token(Token = "0x4000AAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Mesh eyeMaskMeshBoth;

	[Token(Token = "0x4000AAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float zDir;

	[Token(Token = "0x4000AAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Color eyeMaskColor;

	[Token(Token = "0x4000AAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<EyeMaskData> cameraDataList;

	[Token(Token = "0x6000D26")]
	[Address(RVA = "0xF406F8", Offset = "0xF406F8", VA = "0xF406F8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000D27")]
	[Address(RVA = "0xF407B4", Offset = "0xF407B4", VA = "0xF407B4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000D28")]
	[Address(RVA = "0xF41468", Offset = "0xF41468", VA = "0xF41468")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000D29")]
	[Address(RVA = "0xF40E40", Offset = "0xF40E40", VA = "0xF40E40")]
	private void CreateCommandBuffer()
	{
	}

	[Token(Token = "0x6000D2A")]
	[Address(RVA = "0xF42194", Offset = "0xF42194", VA = "0xF42194")]
	private void OnCustomPreRender(Camera cam)
	{
	}

	[Token(Token = "0x6000D2B")]
	[Address(RVA = "0xF418BC", Offset = "0xF418BC", VA = "0xF418BC")]
	private Mesh GetStencilMesh(Eye eyeSide)
	{
		return null;
	}

	[Token(Token = "0x6000D2C")]
	[Address(RVA = "0xF41D20", Offset = "0xF41D20", VA = "0xF41D20")]
	private Mesh GetStencilMeshBoth(Mesh leftMesh, Mesh rightMesh)
	{
		return null;
	}

	[Token(Token = "0x6000D2D")]
	[Address(RVA = "0xF41778", Offset = "0xF41778", VA = "0xF41778")]
	private bool VerifyCommadBuffer()
	{
		return default(bool);
	}

	[Token(Token = "0x6000D2E")]
	[Address(RVA = "0xF40A7C", Offset = "0xF40A7C", VA = "0xF40A7C")]
	private void PrepareCameras()
	{
	}

	[Token(Token = "0x6000D2F")]
	[Address(RVA = "0xF42354", Offset = "0xF42354", VA = "0xF42354")]
	private void AddCameraCommandBuffer(EyeMaskData data)
	{
	}

	[Token(Token = "0x6000D30")]
	[Address(RVA = "0xF416A4", Offset = "0xF416A4", VA = "0xF416A4")]
	private void RemoveCameraCommandBuffer(EyeMaskData data)
	{
	}

	[Token(Token = "0x6000D31")]
	[Address(RVA = "0xF41704", Offset = "0xF41704", VA = "0xF41704")]
	private void CleanEyeMask()
	{
	}

	[Token(Token = "0x6000D32")]
	[Address(RVA = "0xF423C0", Offset = "0xF423C0", VA = "0xF423C0")]
	public Pvr_UnityEyeMask()
	{
	}
}
[Token(Token = "0x20001BD")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x63E378", Offset = "0x63E378")]
public class Pvr_UnitySDKEye : MonoBehaviour
{
	[Token(Token = "0x4000AB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static List<Pvr_UnitySDKEye> Instances;

	[Token(Token = "0x4000AB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Eye eyeSide;

	[Token(Token = "0x4000AB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64FCE4", Offset = "0x64FCE4")]
	private Camera <eyecamera>k__BackingField;

	[Token(Token = "0x4000AB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int eyeCameraOriginCullingMask;

	[Token(Token = "0x4000AB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private CameraClearFlags eyeCameraOriginClearFlag;

	[Token(Token = "0x4000AB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Color eyeCameraOriginBackgroundColor;

	[Token(Token = "0x4000AB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int lastBoundaryState;

	[Token(Token = "0x4000AB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Matrix4x4 realProj;

	[Token(Token = "0x4000AB8")]
	private const int bufferSize = 3;

	[Token(Token = "0x4000AB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private int IDIndex;

	[Token(Token = "0x4000ABA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private RenderEventType eventType;

	[Token(Token = "0x4000ABB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private int previousId;

	[Token(Token = "0x4000ABC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static bool setLevel;

	[Token(Token = "0x4000ABD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Material mat_Vignette;

	[Token(Token = "0x1700012F")]
	public Camera eyecamera
	{
		[Token(Token = "0x6000D33")]
		[Address(RVA = "0x9B1FB8", Offset = "0x9B1FB8", VA = "0x9B1FB8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6699E4", Offset = "0x6699E4")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000D34")]
		[Address(RVA = "0x9B1FC0", Offset = "0x9B1FC0", VA = "0x9B1FC0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6699F4", Offset = "0x6699F4")]
		private set
		{
		}
	}

	[Token(Token = "0x6000D35")]
	[Address(RVA = "0x9B1FC8", Offset = "0x9B1FC8", VA = "0x9B1FC8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000D36")]
	[Address(RVA = "0x9B2070", Offset = "0x9B2070", VA = "0x9B2070")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D37")]
	[Address(RVA = "0x9B26E8", Offset = "0x9B26E8", VA = "0x9B26E8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D38")]
	[Address(RVA = "0x9B29C8", Offset = "0x9B29C8", VA = "0x9B29C8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000D39")]
	[Address(RVA = "0x9B2A94", Offset = "0x9B2A94", VA = "0x9B2A94")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000D3A")]
	[Address(RVA = "0x9B2B60", Offset = "0x9B2B60", VA = "0x9B2B60")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000D3B")]
	[Address(RVA = "0x9B2BEC", Offset = "0x9B2BEC", VA = "0x9B2BEC")]
	public void MyPreRender(Camera camera)
	{
	}

	[Token(Token = "0x6000D3C")]
	[Address(RVA = "0x9B2E10", Offset = "0x9B2E10", VA = "0x9B2E10")]
	public void MyPreRender(ScriptableRenderContext context, Camera camera)
	{
	}

	[Token(Token = "0x6000D3D")]
	[Address(RVA = "0x9B2ED4", Offset = "0x9B2ED4", VA = "0x9B2ED4")]
	public void MyPostRender(ScriptableRenderContext context, Camera camera)
	{
	}

	[Token(Token = "0x6000D3E")]
	[Address(RVA = "0x9B2CB0", Offset = "0x9B2CB0", VA = "0x9B2CB0")]
	private void OnPreRender()
	{
	}

	[Token(Token = "0x6000D3F")]
	[Address(RVA = "0x9B2F98", Offset = "0x9B2F98", VA = "0x9B2F98")]
	private void OnPostRender()
	{
	}

	[Token(Token = "0x6000D40")]
	[Address(RVA = "0x9B3414", Offset = "0x9B3414", VA = "0x9B3414")]
	public void EyeRender()
	{
	}

	[Token(Token = "0x6000D41")]
	[Address(RVA = "0x9B2160", Offset = "0x9B2160", VA = "0x9B2160")]
	private void Setup(Eye eyeSide)
	{
	}

	[Token(Token = "0x6000D42")]
	[Address(RVA = "0x9B23DC", Offset = "0x9B23DC", VA = "0x9B23DC")]
	private void SetupUpdate()
	{
	}

	[Token(Token = "0x6000D43")]
	[Address(RVA = "0x9B3764", Offset = "0x9B3764", VA = "0x9B3764")]
	public void RefreshCameraPosition(float ipd)
	{
	}

	[Token(Token = "0x6000D44")]
	[Address(RVA = "0x9B3944", Offset = "0x9B3944", VA = "0x9B3944")]
	private void DrawVignetteLine()
	{
	}

	[Token(Token = "0x6000D45")]
	[Address(RVA = "0x9B3A78", Offset = "0x9B3A78", VA = "0x9B3A78")]
	private void vignette()
	{
	}

	[Token(Token = "0x6000D46")]
	[Address(RVA = "0x9B3240", Offset = "0x9B3240", VA = "0x9B3240")]
	private void SetFFRParameter()
	{
	}

	[Token(Token = "0x6000D47")]
	[Address(RVA = "0x9B3DF0", Offset = "0x9B3DF0", VA = "0x9B3DF0")]
	public Pvr_UnitySDKEye()
	{
	}
}
[Token(Token = "0x20001BE")]
public class Pvr_UnitySDKEyeManager : MonoBehaviour
{
	[Token(Token = "0x2000638")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x644248", Offset = "0x644248")]
	private sealed class <EndOfFrame>d__41 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40027C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40027C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40027C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Pvr_UnitySDKEyeManager <>4__this;

		[Token(Token = "0x170002B9")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002C4D")]
			[Address(RVA = "0x9B9580", Offset = "0x9B9580", VA = "0x9B9580", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002BA")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002C4F")]
			[Address(RVA = "0x9B95F0", Offset = "0x9B95F0", VA = "0x9B95F0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002C4A")]
		[Address(RVA = "0x9B6220", Offset = "0x9B6220", VA = "0x9B6220")]
		[DebuggerHidden]
		public <EndOfFrame>d__41(int <>1__state)
		{
		}

		[Token(Token = "0x6002C4B")]
		[Address(RVA = "0x9B7364", Offset = "0x9B7364", VA = "0x9B7364", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002C4C")]
		[Address(RVA = "0x9B7368", Offset = "0x9B7368", VA = "0x9B7368", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002C4E")]
		[Address(RVA = "0x9B9588", Offset = "0x9B9588", VA = "0x9B9588", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000639")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x644258", Offset = "0x644258")]
	private sealed class <ScreenFade>d__64 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40027CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40027CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40027CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Pvr_UnitySDKEyeManager <>4__this;

		[Token(Token = "0x40027CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float startAlpha;

		[Token(Token = "0x40027CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float endAlpha;

		[Token(Token = "0x40027CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <elapsedTime>5__2;

		[Token(Token = "0x170002BB")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002C53")]
			[Address(RVA = "0x9B9734", Offset = "0x9B9734", VA = "0x9B9734", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002BC")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002C55")]
			[Address(RVA = "0x9B97A4", Offset = "0x9B97A4", VA = "0x9B97A4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002C50")]
		[Address(RVA = "0x9B72A0", Offset = "0x9B72A0", VA = "0x9B72A0")]
		[DebuggerHidden]
		public <ScreenFade>d__64(int <>1__state)
		{
		}

		[Token(Token = "0x6002C51")]
		[Address(RVA = "0x9B95F8", Offset = "0x9B95F8", VA = "0x9B95F8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002C52")]
		[Address(RVA = "0x9B95FC", Offset = "0x9B95FC", VA = "0x9B95FC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002C54")]
		[Address(RVA = "0x9B973C", Offset = "0x9B973C", VA = "0x9B973C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000ABE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Pvr_UnitySDKEyeManager instance;

	[Token(Token = "0x4000ABF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Pvr_UnitySDKEye[] eyes;

	[Token(Token = "0x4000AC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public Camera LeftEyeCamera;

	[Token(Token = "0x4000AC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public Camera RightEyeCamera;

	[Token(Token = "0x4000AC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public Camera MonoEyeCamera;

	[Token(Token = "0x4000AC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	public Camera BothEyeCamera;

	[Token(Token = "0x4000AC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int MonoEyeTextureID;

	[Token(Token = "0x4000AC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private readonly int WaitSplashScreenFrames;

	[Token(Token = "0x4000AC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int frameNum;

	[Token(Token = "0x4000AC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[SerializeField]
	[HideInInspector]
	private bool foveatedRendering;

	[Token(Token = "0x4000AC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	[HideInInspector]
	private EFoveationLevel foveationLevel;

	[Token(Token = "0x4000AC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private int eyeTextureId;

	[Token(Token = "0x4000ACA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private RenderEventType eventType;

	[Token(Token = "0x4000ACB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Pvr_UnitySDKEyeOverlay compositeLayer;

	[Token(Token = "0x4000ACC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int overlayLayerDepth;

	[Token(Token = "0x4000ACD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private int underlayLayerDepth;

	[Token(Token = "0x4000ACE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool isHeadLocked;

	[Token(Token = "0x4000ACF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private int layerFlags;

	[Token(Token = "0x4000AD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[HideInInspector]
	public bool EyeTracking;

	[Token(Token = "0x4000AD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	[HideInInspector]
	public Vector3 eyePoint;

	[Token(Token = "0x4000AD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private EyeTrackingData eyePoseData;

	[Token(Token = "0x4000AD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	[HideInInspector]
	public static bool supportEyeTracking;

	[Token(Token = "0x4000AD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64FDD4", Offset = "0x64FDD4")]
	public bool screenFade;

	[Token(Token = "0x4000AD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64FE0C", Offset = "0x64FE0C")]
	public float fadeTime;

	[Token(Token = "0x4000AD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64FE44", Offset = "0x64FE44")]
	public Color fadeColor;

	[Token(Token = "0x4000AD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public int renderQueue;

	[Token(Token = "0x4000AD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private MeshRenderer fadeMeshRenderer;

	[Token(Token = "0x4000AD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private MeshFilter fadeMeshFilter;

	[Token(Token = "0x4000ADA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private Material fadeMaterial;

	[Token(Token = "0x4000ADB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private float elapsedTime;

	[Token(Token = "0x4000ADC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
	private bool isFading;

	[Token(Token = "0x4000ADD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private float currentAlpha;

	[Token(Token = "0x4000ADE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
	private float nowFadeAlpha;

	[Token(Token = "0x17000130")]
	public static Pvr_UnitySDKEyeManager Instance
	{
		[Token(Token = "0x6000D49")]
		[Address(RVA = "0x9B3CF8", Offset = "0x9B3CF8", VA = "0x9B3CF8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000131")]
	public Pvr_UnitySDKEye[] Eyes
	{
		[Token(Token = "0x6000D4A")]
		[Address(RVA = "0x9B3F10", Offset = "0x9B3F10", VA = "0x9B3F10")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000132")]
	[HideInInspector]
	public bool FoveatedRendering
	{
		[Token(Token = "0x6000D4B")]
		[Address(RVA = "0x9B3FA8", Offset = "0x9B3FA8", VA = "0x9B3FA8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000D4C")]
		[Address(RVA = "0x9B3FB0", Offset = "0x9B3FB0", VA = "0x9B3FB0")]
		set
		{
		}
	}

	[Token(Token = "0x17000133")]
	[HideInInspector]
	public EFoveationLevel FoveationLevel
	{
		[Token(Token = "0x6000D4D")]
		[Address(RVA = "0x9B401C", Offset = "0x9B401C", VA = "0x9B401C")]
		get
		{
			return default(EFoveationLevel);
		}
		[Token(Token = "0x6000D4E")]
		[Address(RVA = "0x9B4024", Offset = "0x9B4024", VA = "0x9B4024")]
		set
		{
		}
	}

	[Token(Token = "0x6000D4F")]
	[Address(RVA = "0x9B4038", Offset = "0x9B4038", VA = "0x9B4038")]
	private void SetCameraEnableEditor()
	{
	}

	[Token(Token = "0x6000D50")]
	[Address(RVA = "0x9B4338", Offset = "0x9B4338", VA = "0x9B4338")]
	private void SetCamerasEnableByStereoRendering()
	{
	}

	[Token(Token = "0x6000D51")]
	[Address(RVA = "0x9B4414", Offset = "0x9B4414", VA = "0x9B4414")]
	private void SetupMonoCamera()
	{
	}

	[Token(Token = "0x6000D52")]
	[Address(RVA = "0x9B4578", Offset = "0x9B4578", VA = "0x9B4578")]
	private void SetupUpdate()
	{
	}

	[Token(Token = "0x6000D53")]
	[Address(RVA = "0x9B4688", Offset = "0x9B4688", VA = "0x9B4688")]
	private void MonoEyeRender()
	{
	}

	[Token(Token = "0x6000D54")]
	[Address(RVA = "0x9B4860", Offset = "0x9B4860", VA = "0x9B4860")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000D55")]
	[Address(RVA = "0x9B52B8", Offset = "0x9B52B8", VA = "0x9B52B8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000D56")]
	[Address(RVA = "0x9B5A88", Offset = "0x9B5A88", VA = "0x9B5A88")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D57")]
	[Address(RVA = "0x9B5AAC", Offset = "0x9B5AAC", VA = "0x9B5AAC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D58")]
	[Address(RVA = "0x9B5DFC", Offset = "0x9B5DFC", VA = "0x9B5DFC")]
	private void OnPause()
	{
	}

	[Token(Token = "0x6000D59")]
	[Address(RVA = "0x9B5F24", Offset = "0x9B5F24", VA = "0x9B5F24")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000D5A")]
	[Address(RVA = "0x9B5F2C", Offset = "0x9B5F2C", VA = "0x9B5F2C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000D5B")]
	[Address(RVA = "0x9B6094", Offset = "0x9B6094", VA = "0x9B6094")]
	private void OnPostRender()
	{
	}

	[Token(Token = "0x6000D5C")]
	[Address(RVA = "0x9B61AC", Offset = "0x9B61AC", VA = "0x9B61AC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x669A04", Offset = "0x669A04")]
	private IEnumerator EndOfFrame()
	{
		return null;
	}

	[Token(Token = "0x6000D5D")]
	[Address(RVA = "0x9B624C", Offset = "0x9B624C", VA = "0x9B624C")]
	private void CreateExternalSurface(Pvr_UnitySDKEyeOverlay overlayInstance, int layerDepth)
	{
	}

	[Token(Token = "0x6000D5E")]
	[Address(RVA = "0x9B6880", Offset = "0x9B6880", VA = "0x9B6880")]
	public bool SetEyeTrackingMode()
	{
		return default(bool);
	}

	[Token(Token = "0x6000D5F")]
	[Address(RVA = "0x9B6BE0", Offset = "0x9B6BE0", VA = "0x9B6BE0")]
	public Vector3 GetEyeTrackingPos()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000D60")]
	[Address(RVA = "0x9B6E14", Offset = "0x9B6E14", VA = "0x9B6E14")]
	private EyeDeviceInfo GetDeviceInfo()
	{
		return default(EyeDeviceInfo);
	}

	[Token(Token = "0x6000D61")]
	[Address(RVA = "0x9B4C70", Offset = "0x9B4C70", VA = "0x9B4C70")]
	private void CreateFadeMesh()
	{
	}

	[Token(Token = "0x6000D62")]
	[Address(RVA = "0x9B5F30", Offset = "0x9B5F30", VA = "0x9B5F30")]
	private void DestoryFadeMesh()
	{
	}

	[Token(Token = "0x6000D63")]
	[Address(RVA = "0x9B52B0", Offset = "0x9B52B0", VA = "0x9B52B0")]
	public void SetCurrentAlpha(float alpha)
	{
	}

	[Token(Token = "0x6000D64")]
	[Address(RVA = "0x9B59D8", Offset = "0x9B59D8", VA = "0x9B59D8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x669A68", Offset = "0x669A68")]
	private IEnumerator ScreenFade(float startAlpha, float endAlpha)
	{
		return null;
	}

	[Token(Token = "0x6000D65")]
	[Address(RVA = "0x9B7100", Offset = "0x9B7100", VA = "0x9B7100")]
	private void SetMaterialAlpha()
	{
	}

	[Token(Token = "0x6000D66")]
	[Address(RVA = "0x9B59D0", Offset = "0x9B59D0", VA = "0x9B59D0")]
	public bool GfxDeviceAdvanceFrameGLES()
	{
		return default(bool);
	}

	[Token(Token = "0x6000D67")]
	[Address(RVA = "0x9B72CC", Offset = "0x9B72CC", VA = "0x9B72CC")]
	public Pvr_UnitySDKEyeManager()
	{
	}
}
[Token(Token = "0x20001BF")]
public class Pvr_UnitySDKEyeOverlay : MonoBehaviour, IComparable<Pvr_UnitySDKEyeOverlay>
{
	[Token(Token = "0x200063A")]
	public delegate void ExternalAndroidSurfaceObjectCreated();

	[Token(Token = "0x200063B")]
	public enum OverlayShape
	{
		[Token(Token = "0x40027D1")]
		Quad,
		[Token(Token = "0x40027D2")]
		Cylinder,
		[Token(Token = "0x40027D3")]
		Equirect
	}

	[Token(Token = "0x200063C")]
	public enum OverlayType
	{
		[Token(Token = "0x40027D5")]
		Overlay,
		[Token(Token = "0x40027D6")]
		Underlay
	}

	[Token(Token = "0x200063D")]
	public enum OverlayTexFilterMode
	{
		[Token(Token = "0x40027D8")]
		NotCare,
		[Token(Token = "0x40027D9")]
		Nearest,
		[Token(Token = "0x40027DA")]
		Linear,
		[Token(Token = "0x40027DB")]
		Nearest_Mipmap_Nearest,
		[Token(Token = "0x40027DC")]
		Linear_Mipmap_Nearest,
		[Token(Token = "0x40027DD")]
		Nearest_Mipmap_Linear,
		[Token(Token = "0x40027DE")]
		Linear_Mipmap_Linear
	}

	[Token(Token = "0x4000ADF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static List<Pvr_UnitySDKEyeOverlay> Instances;

	[Token(Token = "0x4000AE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int layerIndex;

	[Token(Token = "0x4000AE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public OverlayType overlayType;

	[Token(Token = "0x4000AE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OverlayShape overlayShape;

	[Token(Token = "0x4000AE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform layerTransform;

	[Token(Token = "0x4000AE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Texture[] layerTextures;

	[Token(Token = "0x4000AE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int[] layerTextureIds;

	[Token(Token = "0x4000AE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Matrix4x4[] MVMatrixs;

	[Token(Token = "0x4000AE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Vector3[] ModelScales;

	[Token(Token = "0x4000AE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Quaternion[] ModelRotations;

	[Token(Token = "0x4000AE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector3[] ModelTranslations;

	[Token(Token = "0x4000AEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Quaternion[] CameraRotations;

	[Token(Token = "0x4000AEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Vector3[] CameraTranslations;

	[Token(Token = "0x4000AEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Camera[] layerEyeCamera;

	[Token(Token = "0x4000AED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public bool overrideColorScaleAndOffset;

	[Token(Token = "0x4000AEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public Vector4 colorScale;

	[Token(Token = "0x4000AEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public Vector4 colorOffset;

	[Token(Token = "0x4000AF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private Vector4 overlayLayerColorScaleDefault;

	[Token(Token = "0x4000AF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private Vector4 overlayLayerColorOffsetDefault;

	[Token(Token = "0x4000AF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	public bool isExternalAndroidSurface;

	[Token(Token = "0x4000AF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public IntPtr externalAndroidSurfaceObject;

	[Token(Token = "0x4000AF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public ExternalAndroidSurfaceObjectCreated externalAndroidSurfaceObjectCreated;

	[Token(Token = "0x6000D69")]
	[Address(RVA = "0x9B97AC", Offset = "0x9B97AC", VA = "0x9B97AC", Slot = "4")]
	public int CompareTo(Pvr_UnitySDKEyeOverlay other)
	{
		return default(int);
	}

	[Token(Token = "0x6000D6A")]
	[Address(RVA = "0x9B97E4", Offset = "0x9B97E4", VA = "0x9B97E4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000D6B")]
	[Address(RVA = "0x9B9DF0", Offset = "0x9B9DF0", VA = "0x9B9DF0")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000D6C")]
	[Address(RVA = "0x9BA4D8", Offset = "0x9BA4D8", VA = "0x9BA4D8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000D6D")]
	[Address(RVA = "0x9B56E4", Offset = "0x9B56E4", VA = "0x9B56E4")]
	public void RefreshCamera()
	{
	}

	[Token(Token = "0x6000D6E")]
	[Address(RVA = "0x9B9BE8", Offset = "0x9B9BE8", VA = "0x9B9BE8")]
	private void InitializeBuffer()
	{
	}

	[Token(Token = "0x6000D6F")]
	[Address(RVA = "0x9B9DF4", Offset = "0x9B9DF4", VA = "0x9B9DF4")]
	private void UpdateCoords()
	{
	}

	[Token(Token = "0x6000D70")]
	[Address(RVA = "0x9BA7E8", Offset = "0x9BA7E8", VA = "0x9BA7E8")]
	public void SetTexture(Texture texture)
	{
	}

	[Token(Token = "0x6000D71")]
	[Address(RVA = "0x9BA8AC", Offset = "0x9BA8AC", VA = "0x9BA8AC")]
	public void SetLayerColorScaleAndOffset(Vector4 scale, Vector4 offset)
	{
	}

	[Token(Token = "0x6000D72")]
	[Address(RVA = "0x9B9500", Offset = "0x9B9500", VA = "0x9B9500")]
	public Vector4 GetLayerColorScale()
	{
		return default(Vector4);
	}

	[Token(Token = "0x6000D73")]
	[Address(RVA = "0x9B9540", Offset = "0x9B9540", VA = "0x9B9540")]
	public Vector4 GetLayerColorOffset()
	{
		return default(Vector4);
	}

	[Token(Token = "0x6000D74")]
	[Address(RVA = "0x9BA8C0", Offset = "0x9BA8C0", VA = "0x9BA8C0")]
	public Pvr_UnitySDKEyeOverlay()
	{
	}
}
[Token(Token = "0x20001C0")]
public class Pvr_UnitySDKRender
{
	[Token(Token = "0x4000AF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Pvr_UnitySDKRender instance;

	[Token(Token = "0x4000AF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public AndroidJavaObject activity;

	[Token(Token = "0x4000AF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static AndroidJavaClass javaVrActivityClass;

	[Token(Token = "0x4000AF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static AndroidJavaClass javaSysActivityClass;

	[Token(Token = "0x4000AF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static AndroidJavaClass javaserviceClass;

	[Token(Token = "0x4000AFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static AndroidJavaClass javaVrActivityLongReceiver;

	[Token(Token = "0x4000AFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static AndroidJavaClass javaVrActivityClientClass;

	[Token(Token = "0x4000AFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool canConnecttoActivity;

	[Token(Token = "0x4000AFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	private bool isInitrenderThread;

	[Token(Token = "0x4000AFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private string model;

	[Token(Token = "0x4000AFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector2 prefinger1;

	[Token(Token = "0x4000B00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector2 prefinger2;

	[Token(Token = "0x4000B01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int eyeTextureCount;

	[Token(Token = "0x4000B02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public RenderTexture[] eyeTextures;

	[Token(Token = "0x4000B03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int[] eyeTextureIds;

	[Token(Token = "0x4000B04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public int currEyeTextureIdx;

	[Token(Token = "0x4000B05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public int nextEyeTextureIdx;

	[Token(Token = "0x4000B06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public int lastEyeTextureIdx;

	[Token(Token = "0x4000B07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public bool isSwitchSDK;

	[Token(Token = "0x4000B08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public int RenderviewNumber;

	[Token(Token = "0x4000B09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public bool isFirstStartup;

	[Token(Token = "0x4000B0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
	public bool isShellMode;

	[Token(Token = "0x4000B0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private StereoRenderingPathPico stereoRenderPath;

	[Token(Token = "0x4000B0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64FE7C", Offset = "0x64FE7C")]
	private SDKStereoRendering <StereoRendering>k__BackingField;

	[Token(Token = "0x4000B0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float rtScaleFactor;

	[Token(Token = "0x4000B0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private float eyeVFov;

	[Token(Token = "0x4000B0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float eyeHFov;

	[Token(Token = "0x17000134")]
	public static Pvr_UnitySDKRender Instance
	{
		[Token(Token = "0x6000D76")]
		[Address(RVA = "0x9B3178", Offset = "0x9B3178", VA = "0x9B3178")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000D77")]
		[Address(RVA = "0x9C3C78", Offset = "0x9C3C78", VA = "0x9C3C78")]
		set
		{
		}
	}

	[Token(Token = "0x17000135")]
	public StereoRenderingPathPico StereoRenderPath
	{
		[Token(Token = "0x6000D79")]
		[Address(RVA = "0x9B374C", Offset = "0x9B374C", VA = "0x9B374C")]
		get
		{
			return default(StereoRenderingPathPico);
		}
	}

	[Token(Token = "0x17000136")]
	public SDKStereoRendering StereoRendering
	{
		[Token(Token = "0x6000D7A")]
		[Address(RVA = "0x9B3238", Offset = "0x9B3238", VA = "0x9B3238")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x669ACC", Offset = "0x669ACC")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000D7B")]
		[Address(RVA = "0x9C4674", Offset = "0x9C4674", VA = "0x9C4674")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x669ADC", Offset = "0x669ADC")]
		private set
		{
		}
	}

	[Token(Token = "0x17000137")]
	public float RtScaleFactor
	{
		[Token(Token = "0x6000D7C")]
		[Address(RVA = "0x9C467C", Offset = "0x9C467C", VA = "0x9C467C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000D7D")]
		[Address(RVA = "0x9C4684", Offset = "0x9C4684", VA = "0x9C4684")]
		set
		{
		}
	}

	[Token(Token = "0x17000138")]
	public float EyeVFoV
	{
		[Token(Token = "0x6000D7E")]
		[Address(RVA = "0x9B375C", Offset = "0x9B375C", VA = "0x9B375C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000D7F")]
		[Address(RVA = "0x9C4824", Offset = "0x9C4824", VA = "0x9C4824")]
		set
		{
		}
	}

	[Token(Token = "0x17000139")]
	public float EyeHFoV
	{
		[Token(Token = "0x6000D80")]
		[Address(RVA = "0x9B70F8", Offset = "0x9B70F8", VA = "0x9B70F8")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000D81")]
		[Address(RVA = "0x9C4838", Offset = "0x9C4838", VA = "0x9C4838")]
		set
		{
		}
	}

	[Token(Token = "0x6000D78")]
	[Address(RVA = "0x9C3B68", Offset = "0x9C3B68", VA = "0x9C3B68")]
	public Pvr_UnitySDKRender()
	{
	}

	[Token(Token = "0x6000D82")]
	[Address(RVA = "0x9C3CE4", Offset = "0x9C3CE4", VA = "0x9C3CE4")]
	public void ConnectToAndriod()
	{
	}

	[Token(Token = "0x6000D83")]
	[Address(RVA = "0x9C45F4", Offset = "0x9C45F4", VA = "0x9C45F4")]
	public void Init()
	{
	}

	[Token(Token = "0x6000D84")]
	[Address(RVA = "0x9C4C00", Offset = "0x9C4C00", VA = "0x9C4C00")]
	private bool InitRenderAbility()
	{
		return default(bool);
	}

	[Token(Token = "0x6000D85")]
	[Address(RVA = "0x9C4D20", Offset = "0x9C4D20", VA = "0x9C4D20")]
	private bool UpdateRenderParaFrame()
	{
		return default(bool);
	}

	[Token(Token = "0x6000D86")]
	[Address(RVA = "0x9C4DD0", Offset = "0x9C4DD0", VA = "0x9C4DD0")]
	private bool CreateEyeBuffer()
	{
		return default(bool);
	}

	[Token(Token = "0x6000D87")]
	[Address(RVA = "0x9C5884", Offset = "0x9C5884", VA = "0x9C5884")]
	private void InitSinglePass()
	{
	}

	[Token(Token = "0x6000D88")]
	[Address(RVA = "0x9C51E8", Offset = "0x9C51E8", VA = "0x9C51E8")]
	public float GetEyeVFOV()
	{
		return default(float);
	}

	[Token(Token = "0x6000D89")]
	[Address(RVA = "0x9C5354", Offset = "0x9C5354", VA = "0x9C5354")]
	public float GetEyeHFOV()
	{
		return default(float);
	}

	[Token(Token = "0x6000D8A")]
	[Address(RVA = "0x9C5AA0", Offset = "0x9C5AA0", VA = "0x9C5AA0")]
	private void ConfigureEyeBuffer(int eyeTextureIndex, Vector2 resolution)
	{
	}

	[Token(Token = "0x6000D8B")]
	[Address(RVA = "0x9C469C", Offset = "0x9C469C", VA = "0x9C469C")]
	public bool ReCreateEyeBuffer()
	{
		return default(bool);
	}

	[Token(Token = "0x6000D8C")]
	[Address(RVA = "0x9C284C", Offset = "0x9C284C", VA = "0x9C284C")]
	public void ReInit()
	{
	}

	[Token(Token = "0x6000D8D")]
	[Address(RVA = "0x9C1C18", Offset = "0x9C1C18", VA = "0x9C1C18")]
	public void IssueRenderThread()
	{
	}

	[Token(Token = "0x6000D8E")]
	[Address(RVA = "0x9C6188", Offset = "0x9C6188", VA = "0x9C6188")]
	private void AutoAdpatForPico1s()
	{
	}

	[Token(Token = "0x6000D8F")]
	[Address(RVA = "0x9C54C0", Offset = "0x9C54C0", VA = "0x9C54C0")]
	public Vector2 GetEyeBufferResolution()
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000D90")]
	[Address(RVA = "0x9C644C", Offset = "0x9C644C", VA = "0x9C644C")]
	public bool GetUsePredictedMatrix()
	{
		return default(bool);
	}

	[Token(Token = "0x6000D91")]
	[Address(RVA = "0x9C484C", Offset = "0x9C484C", VA = "0x9C484C")]
	public bool GetIsShellMode()
	{
		return default(bool);
	}
}
[Token(Token = "0x20001C1")]
public class Pvr_UnitySDKSinglePass : SDKStereoRendering
{
	[Token(Token = "0x4000B10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Camera bothCamera;

	[Token(Token = "0x4000B11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Matrix4x4[] unity_StereoMatrixP;

	[Token(Token = "0x4000B12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Matrix4x4[] unity_StereoMatrixInvP;

	[Token(Token = "0x4000B13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Matrix4x4[] unity_StereoWorldToCamera;

	[Token(Token = "0x4000B14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Matrix4x4[] unity_StereoCameraToWorld;

	[Token(Token = "0x4000B15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Matrix4x4[] unity_StereoMatrixVP;

	[Token(Token = "0x4000B16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3[] eyesOffset;

	[Token(Token = "0x4000B17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static Matrix4x4[] eyesOffsetMatrix;

	[Token(Token = "0x4000B18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private CommandBuffer commandBufferBeforeForwardOpaque;

	[Token(Token = "0x4000B19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private CommandBuffer commandBufferBeforeSkybox;

	[Token(Token = "0x4000B1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private CommandBuffer commandBufferAfterSkybox;

	[Token(Token = "0x6000D93")]
	[Address(RVA = "0x9C9B9C", Offset = "0x9C9B9C", VA = "0x9C9B9C", Slot = "4")]
	public override void InitEye(Camera eye)
	{
	}

	[Token(Token = "0x6000D94")]
	[Address(RVA = "0x9CA62C", Offset = "0x9CA62C", VA = "0x9CA62C", Slot = "5")]
	public override void OnSDKRenderInited()
	{
	}

	[Token(Token = "0x6000D95")]
	[Address(RVA = "0x9CA78C", Offset = "0x9CA78C", VA = "0x9CA78C", Slot = "6")]
	public override void OnSDKPreRender()
	{
	}

	[Token(Token = "0x6000D96")]
	[Address(RVA = "0x9CB25C", Offset = "0x9CB25C", VA = "0x9CB25C", Slot = "7")]
	public override void OnSDKPostRender()
	{
	}

	[Token(Token = "0x6000D97")]
	[Address(RVA = "0x9CA630", Offset = "0x9CA630", VA = "0x9CA630")]
	public void OnSDKRenderInited_SinglePass()
	{
	}

	[Token(Token = "0x6000D98")]
	[Address(RVA = "0x9CB314", Offset = "0x9CB314", VA = "0x9CB314")]
	private void SetAntiAliasing()
	{
	}

	[Token(Token = "0x6000D99")]
	[Address(RVA = "0x9C9FBC", Offset = "0x9C9FBC", VA = "0x9C9FBC")]
	public void SetEyesPosition()
	{
	}

	[Token(Token = "0x6000D9A")]
	[Address(RVA = "0x9CA4B8", Offset = "0x9CA4B8", VA = "0x9CA4B8")]
	public void SetEyeProjection()
	{
	}

	[Token(Token = "0x6000D9B")]
	[Address(RVA = "0x9CB41C", Offset = "0x9CB41C", VA = "0x9CB41C")]
	private static Matrix4x4 GetProjection(float near, float far)
	{
		return default(Matrix4x4);
	}

	[Token(Token = "0x6000D9C")]
	[Address(RVA = "0x9CB6F4", Offset = "0x9CB6F4", VA = "0x9CB6F4")]
	public static Matrix4x4 MakeProjection(float n, float f)
	{
		return default(Matrix4x4);
	}

	[Token(Token = "0x6000D9D")]
	[Address(RVA = "0x9CB4F0", Offset = "0x9CB4F0", VA = "0x9CB4F0")]
	public void SetStereoProjectionMatrix(Matrix4x4 left, Matrix4x4 right)
	{
	}

	[Token(Token = "0x6000D9E")]
	[Address(RVA = "0x9CB264", Offset = "0x9CB264", VA = "0x9CB264")]
	private void SwitchKeywordAndDeviceView(bool enable)
	{
	}

	[Token(Token = "0x6000D9F")]
	[Address(RVA = "0x9BA564", Offset = "0x9BA564", VA = "0x9BA564")]
	public static Matrix4x4[] GetStereoWorldToCameraMat()
	{
		return null;
	}

	[Token(Token = "0x6000DA0")]
	[Address(RVA = "0x9CA790", Offset = "0x9CA790", VA = "0x9CA790")]
	public void SinglePassPreRender()
	{
	}

	[Token(Token = "0x6000DA1")]
	[Address(RVA = "0x9CB994", Offset = "0x9CB994", VA = "0x9CB994")]
	private void SetCommandBuffers()
	{
	}

	[Token(Token = "0x6000DA2")]
	[Address(RVA = "0x9CB8DC", Offset = "0x9CB8DC", VA = "0x9CB8DC")]
	private void SetRenderTextureWithDepth()
	{
	}

	[Token(Token = "0x6000DA3")]
	[Address(RVA = "0x9C60E0", Offset = "0x9C60E0", VA = "0x9C60E0")]
	public Pvr_UnitySDKSinglePass()
	{
	}
}
[Token(Token = "0x20001C2")]
public abstract class SDKStereoRendering
{
	[Token(Token = "0x6000DA5")]
	public abstract void InitEye(Camera eye);

	[Token(Token = "0x6000DA6")]
	public abstract void OnSDKRenderInited();

	[Token(Token = "0x6000DA7")]
	public abstract void OnSDKPreRender();

	[Token(Token = "0x6000DA8")]
	public abstract void OnSDKPostRender();

	[Token(Token = "0x6000DA9")]
	[Address(RVA = "0x85A474", Offset = "0x85A474", VA = "0x85A474")]
	protected SDKStereoRendering()
	{
	}
}
[Token(Token = "0x20001C3")]
public class HighlightAtGaze : MonoBehaviour
{
	[Token(Token = "0x4000B1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Color HighlightColor;

	[Token(Token = "0x4000B1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float AnimationTime;

	[Token(Token = "0x4000B1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Renderer myRenderer;

	[Token(Token = "0x4000B1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Color originalColor;

	[Token(Token = "0x4000B1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Color targetColor;

	[Token(Token = "0x4000B20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private EyeTrackingGazeRay gazeRay;

	[Token(Token = "0x6000DAA")]
	[Address(RVA = "0x845FF4", Offset = "0x845FF4", VA = "0x845FF4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000DAB")]
	[Address(RVA = "0x84608C", Offset = "0x84608C", VA = "0x84608C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000DAC")]
	[Address(RVA = "0x8462CC", Offset = "0x8462CC", VA = "0x8462CC")]
	public HighlightAtGaze()
	{
	}
}
[Token(Token = "0x20001C4")]
public class RayVisualizer : MonoBehaviour
{
	[Token(Token = "0x4000B21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private LineRenderer _line;

	[Token(Token = "0x4000B22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private EyeTrackingGazeRay gazeRay;

	[Token(Token = "0x6000DAD")]
	[Address(RVA = "0x9CF200", Offset = "0x9CF200", VA = "0x9CF200")]
	private void Start()
	{
	}

	[Token(Token = "0x6000DAE")]
	[Address(RVA = "0x9CF2B8", Offset = "0x9CF2B8", VA = "0x9CF2B8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000DAF")]
	[Address(RVA = "0x9CF49C", Offset = "0x9CF49C", VA = "0x9CF49C")]
	public RayVisualizer()
	{
	}
}
[Token(Token = "0x20001C5")]
public class GetSeeThroughImage : MonoBehaviour
{
	[Token(Token = "0x4000B23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RawImage viewImage_left;

	[Token(Token = "0x4000B24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public RawImage viewImage_right;

	[Token(Token = "0x4000B25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int width;

	[Token(Token = "0x4000B26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private int height;

	[Token(Token = "0x4000B27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private RenderTexture cameraTex_left;

	[Token(Token = "0x4000B28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private RenderTexture cameraTex_right;

	[Token(Token = "0x4000B29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool cameraPreview;

	[Token(Token = "0x6000DB0")]
	[Address(RVA = "0x83F680", Offset = "0x83F680", VA = "0x83F680")]
	private void Start()
	{
	}

	[Token(Token = "0x6000DB1")]
	[Address(RVA = "0x83F7CC", Offset = "0x83F7CC", VA = "0x83F7CC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000DB2")]
	[Address(RVA = "0x83F858", Offset = "0x83F858", VA = "0x83F858")]
	private void OnDestory()
	{
	}

	[Token(Token = "0x6000DB3")]
	[Address(RVA = "0x83F684", Offset = "0x83F684", VA = "0x83F684")]
	private void CreateTexture()
	{
	}

	[Token(Token = "0x6000DB4")]
	[Address(RVA = "0x83F808", Offset = "0x83F808", VA = "0x83F808")]
	private void DrawTexture()
	{
	}

	[Token(Token = "0x6000DB5")]
	[Address(RVA = "0x83F870", Offset = "0x83F870", VA = "0x83F870")]
	public GetSeeThroughImage()
	{
	}
}
[Token(Token = "0x20001C6")]
public class OverlayExternalSurfaceDemo : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200063E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x644268", Offset = "0x644268")]
	private sealed class <>c
	{
		[Token(Token = "0x40027DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x40027E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Pvr_UnitySDKEyeOverlay.ExternalAndroidSurfaceObjectCreated <>9__7_0;

		[Token(Token = "0x6002C5B")]
		[Address(RVA = "0x7FEBF0", Offset = "0x7FEBF0", VA = "0x7FEBF0")]
		public <>c()
		{
		}

		[Token(Token = "0x6002C5C")]
		[Address(RVA = "0x7FEBF8", Offset = "0x7FEBF8", VA = "0x7FEBF8")]
		internal void <StartPlay>b__7_0()
		{
		}
	}

	[Token(Token = "0x4000B2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string movieName;

	[Token(Token = "0x4000B2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Pvr_UnitySDKEyeOverlay.OverlayType overlayType;

	[Token(Token = "0x4000B2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Pvr_UnitySDKEyeOverlay.OverlayShape overlayShape;

	[Token(Token = "0x4000B2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Pvr_UnitySDKEyeOverlay overlay;

	[Token(Token = "0x4000B2E")]
	private const string TAG = "[ExternalSurface]>>>>>>";

	[Token(Token = "0x6000DB6")]
	[Address(RVA = "0x7FE7A8", Offset = "0x7FE7A8", VA = "0x7FE7A8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000DB7")]
	[Address(RVA = "0x7FE8F4", Offset = "0x7FE8F4", VA = "0x7FE8F4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000DB8")]
	[Address(RVA = "0x7FE978", Offset = "0x7FE978", VA = "0x7FE978")]
	private void StartPlay(string moviePath, string licenceUrl)
	{
	}

	[Token(Token = "0x6000DB9")]
	[Address(RVA = "0x7FEB84", Offset = "0x7FEB84", VA = "0x7FEB84")]
	public OverlayExternalSurfaceDemo()
	{
	}
}
[Token(Token = "0x20001C7")]
public class MoveCylinder : MonoBehaviour
{
	[Token(Token = "0x4000B2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector3 startingPosition;

	[Token(Token = "0x4000B30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Quaternion startingRotation;

	[Token(Token = "0x6000DBA")]
	[Address(RVA = "0x7F8AEC", Offset = "0x7F8AEC", VA = "0x7F8AEC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000DBB")]
	[Address(RVA = "0x7F8B5C", Offset = "0x7F8B5C", VA = "0x7F8B5C")]
	public void Reset()
	{
	}

	[Token(Token = "0x6000DBC")]
	[Address(RVA = "0x7F8BF4", Offset = "0x7F8BF4", VA = "0x7F8BF4")]
	public MoveCylinder()
	{
	}
}
[Token(Token = "0x20001C8")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x63E3DC", Offset = "0x63E3DC")]
public class MoveSphere : MonoBehaviour
{
	[Token(Token = "0x4000B31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector3 startingPosition;

	[Token(Token = "0x6000DBD")]
	[Address(RVA = "0x7F8F90", Offset = "0x7F8F90", VA = "0x7F8F90")]
	private void Start()
	{
	}

	[Token(Token = "0x6000DBE")]
	[Address(RVA = "0x7F9184", Offset = "0x7F9184", VA = "0x7F9184")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000DBF")]
	[Address(RVA = "0x7F90B0", Offset = "0x7F90B0", VA = "0x7F90B0")]
	public void SetGazedAt(bool gazedAt)
	{
	}

	[Token(Token = "0x6000DC0")]
	[Address(RVA = "0x7F9188", Offset = "0x7F9188", VA = "0x7F9188")]
	public void Reset()
	{
	}

	[Token(Token = "0x6000DC1")]
	[Address(RVA = "0x7F92F8", Offset = "0x7F92F8", VA = "0x7F92F8")]
	public void TeleportRandomly()
	{
	}

	[Token(Token = "0x6000DC2")]
	[Address(RVA = "0x7F9420", Offset = "0x7F9420", VA = "0x7F9420")]
	public MoveSphere()
	{
	}
}
[Token(Token = "0x20001C9")]
public class Resetbutton : MonoBehaviour
{
	[Token(Token = "0x6000DC3")]
	[Address(RVA = "0x9D021C", Offset = "0x9D021C", VA = "0x9D021C")]
	public void DemoResetTracking()
	{
	}

	[Token(Token = "0x6000DC4")]
	[Address(RVA = "0x9D02B8", Offset = "0x9D02B8", VA = "0x9D02B8")]
	public Resetbutton()
	{
	}
}
[Token(Token = "0x20001CA")]
public class UserEntitlementCheck : MonoBehaviour
{
	[Token(Token = "0x6000DC5")]
	[Address(RVA = "0x88C430", Offset = "0x88C430", VA = "0x88C430")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000DC6")]
	[Address(RVA = "0x88C4C4", Offset = "0x88C4C4", VA = "0x88C4C4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000DC7")]
	[Address(RVA = "0x88C558", Offset = "0x88C558", VA = "0x88C558")]
	private void HandelEntitlementCheckResult(int resultCode)
	{
	}

	[Token(Token = "0x6000DC8")]
	[Address(RVA = "0x88C824", Offset = "0x88C824", VA = "0x88C824")]
	public UserEntitlementCheck()
	{
	}
}
[Token(Token = "0x20001CB")]
public class Pvr_UnitySDKHeadTrack : MonoBehaviour
{
	[Token(Token = "0x4000B32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64FE8C", Offset = "0x64FE8C")]
	public bool trackRotation;

	[Token(Token = "0x4000B33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64FEC4", Offset = "0x64FEC4")]
	public bool trackPosition;

	[Token(Token = "0x4000B34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform target;

	[Token(Token = "0x4000B35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool updated;

	[Token(Token = "0x4000B36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	private bool dataClock;

	[Token(Token = "0x1700013A")]
	public Ray Gaze
	{
		[Token(Token = "0x6000DC9")]
		[Address(RVA = "0x9BACA0", Offset = "0x9BACA0", VA = "0x9BACA0")]
		get
		{
			return default(Ray);
		}
	}

	[Token(Token = "0x6000DCA")]
	[Address(RVA = "0x9BB278", Offset = "0x9BB278", VA = "0x9BB278")]
	private void Update()
	{
	}

	[Token(Token = "0x6000DCB")]
	[Address(RVA = "0x9BAD58", Offset = "0x9BAD58", VA = "0x9BAD58")]
	private void UpdateHead()
	{
	}

	[Token(Token = "0x6000DCC")]
	[Address(RVA = "0x9BB298", Offset = "0x9BB298", VA = "0x9BB298")]
	public Pvr_UnitySDKHeadTrack()
	{
	}
}
[Token(Token = "0x20001CC")]
public class Pvr_UnitySDKPose
{
	[Token(Token = "0x4000B37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	protected static readonly Matrix4x4 flipZ;

	[Token(Token = "0x4000B38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64FEFC", Offset = "0x64FEFC")]
	private Vector3 <Position>k__BackingField;

	[Token(Token = "0x4000B39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64FF0C", Offset = "0x64FF0C")]
	private Quaternion <Orientation>k__BackingField;

	[Token(Token = "0x4000B3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64FF1C", Offset = "0x64FF1C")]
	private Matrix4x4 <Matrix>k__BackingField;

	[Token(Token = "0x1700013B")]
	public Matrix4x4 RightHandedMatrix
	{
		[Token(Token = "0x6000DCD")]
		[Address(RVA = "0x9C345C", Offset = "0x9C345C", VA = "0x9C345C")]
		get
		{
			return default(Matrix4x4);
		}
	}

	[Token(Token = "0x1700013C")]
	public Vector3 Position
	{
		[Token(Token = "0x6000DCE")]
		[Address(RVA = "0x9BB28C", Offset = "0x9BB28C", VA = "0x9BB28C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x669AEC", Offset = "0x669AEC")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x6000DCF")]
		[Address(RVA = "0x9C35EC", Offset = "0x9C35EC", VA = "0x9C35EC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x669AFC", Offset = "0x669AFC")]
		protected set
		{
		}
	}

	[Token(Token = "0x1700013D")]
	public Quaternion Orientation
	{
		[Token(Token = "0x6000DD0")]
		[Address(RVA = "0x9BB280", Offset = "0x9BB280", VA = "0x9BB280")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x669B0C", Offset = "0x669B0C")]
		get
		{
			return default(Quaternion);
		}
		[Token(Token = "0x6000DD1")]
		[Address(RVA = "0x9C35F8", Offset = "0x9C35F8", VA = "0x9C35F8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x669B1C", Offset = "0x669B1C")]
		protected set
		{
		}
	}

	[Token(Token = "0x1700013E")]
	public Matrix4x4 Matrix
	{
		[Token(Token = "0x6000DD2")]
		[Address(RVA = "0x9C35C8", Offset = "0x9C35C8", VA = "0x9C35C8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x669B2C", Offset = "0x669B2C")]
		get
		{
			return default(Matrix4x4);
		}
		[Token(Token = "0x6000DD3")]
		[Address(RVA = "0x9C3604", Offset = "0x9C3604", VA = "0x9C3604")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x669B3C", Offset = "0x669B3C")]
		protected set
		{
		}
	}

	[Token(Token = "0x6000DD4")]
	[Address(RVA = "0x9C3620", Offset = "0x9C3620", VA = "0x9C3620")]
	public Pvr_UnitySDKPose(Matrix4x4 matrix)
	{
	}

	[Token(Token = "0x6000DD5")]
	[Address(RVA = "0x9C37E8", Offset = "0x9C37E8", VA = "0x9C37E8")]
	public Pvr_UnitySDKPose(Vector3 position, Quaternion orientation)
	{
	}

	[Token(Token = "0x6000DD6")]
	[Address(RVA = "0x9C3868", Offset = "0x9C3868", VA = "0x9C3868")]
	public void Set(Vector3 position, Quaternion orientation)
	{
	}

	[Token(Token = "0x6000DD7")]
	[Address(RVA = "0x9C367C", Offset = "0x9C367C", VA = "0x9C367C")]
	protected void Set(Matrix4x4 matrix)
	{
	}

	[Token(Token = "0x6000DD8")]
	[Address(RVA = "0x9C39A8", Offset = "0x9C39A8", VA = "0x9C39A8")]
	private Quaternion NormalizeQuaternion(ref Quaternion q)
	{
		return default(Quaternion);
	}
}
[Token(Token = "0x20001CD")]
public class Pvr_UnitySDKSensor
{
	[Token(Token = "0x200063F")]
	public delegate void Enter3DofModel();

	[Token(Token = "0x2000640")]
	public delegate void Exit3DofModel();

	[Token(Token = "0x4000B3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Pvr_UnitySDKSensor instance;

	[Token(Token = "0x4000B3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private bool SensorStart;

	[Token(Token = "0x4000B3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	private bool SensorInit;

	[Token(Token = "0x4000B3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private Quaternion UnityQuaternion;

	[Token(Token = "0x4000B3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector3 UnityPosition;

	[Token(Token = "0x4000B40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Sensorindex sensorIndex;

	[Token(Token = "0x4000B41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private bool dofClock;

	[Token(Token = "0x4000B42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static Action EyeFovChanged;

	[Token(Token = "0x4000B43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Pvr_UnitySDKPose HeadPose;

	[Token(Token = "0x4000B46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float vfov;

	[Token(Token = "0x4000B47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float hfov;

	[Token(Token = "0x4000B48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float w;

	[Token(Token = "0x4000B49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float x;

	[Token(Token = "0x4000B4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float y;

	[Token(Token = "0x4000B4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float z;

	[Token(Token = "0x4000B4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float px;

	[Token(Token = "0x4000B4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float py;

	[Token(Token = "0x4000B4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float pz;

	[Token(Token = "0x1700013F")]
	public static Pvr_UnitySDKSensor Instance
	{
		[Token(Token = "0x6000DDA")]
		[Address(RVA = "0x9B9248", Offset = "0x9B9248", VA = "0x9B9248")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000DDB")]
		[Address(RVA = "0x9C6514", Offset = "0x9C6514", VA = "0x9C6514")]
		set
		{
		}
	}

	[Token(Token = "0x14000068")]
	public static event Enter3DofModel Enter3DofModelEvent
	{
		[Token(Token = "0x6000DDD")]
		[Address(RVA = "0x9C66B4", Offset = "0x9C66B4", VA = "0x9C66B4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x669B4C", Offset = "0x669B4C")]
		add
		{
		}
		[Token(Token = "0x6000DDE")]
		[Address(RVA = "0x9C67E4", Offset = "0x9C67E4", VA = "0x9C67E4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x669B5C", Offset = "0x669B5C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000069")]
	public static event Exit3DofModel Exit3DofModelEvent
	{
		[Token(Token = "0x6000DDF")]
		[Address(RVA = "0x9C6914", Offset = "0x9C6914", VA = "0x9C6914")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x669B6C", Offset = "0x669B6C")]
		add
		{
		}
		[Token(Token = "0x6000DE0")]
		[Address(RVA = "0x9C6A44", Offset = "0x9C6A44", VA = "0x9C6A44")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x669B7C", Offset = "0x669B7C")]
		remove
		{
		}
	}

	[Token(Token = "0x6000DDC")]
	[Address(RVA = "0x9C6458", Offset = "0x9C6458", VA = "0x9C6458")]
	public Pvr_UnitySDKSensor()
	{
	}

	[Token(Token = "0x6000DE1")]
	[Address(RVA = "0x9C6580", Offset = "0x9C6580", VA = "0x9C6580")]
	public void Init()
	{
	}

	[Token(Token = "0x6000DE2")]
	[Address(RVA = "0x9C0DA4", Offset = "0x9C0DA4", VA = "0x9C0DA4")]
	public void SensorUpdate()
	{
	}

	[Token(Token = "0x6000DE3")]
	[Address(RVA = "0x9C6DD8", Offset = "0x9C6DD8", VA = "0x9C6DD8")]
	public bool InitUnitySDKSensor()
	{
		return default(bool);
	}

	[Token(Token = "0x6000DE4")]
	[Address(RVA = "0x9C6B74", Offset = "0x9C6B74", VA = "0x9C6B74")]
	public bool InitUnitySDK6DofSensor()
	{
		return default(bool);
	}

	[Token(Token = "0x6000DE5")]
	[Address(RVA = "0x9C2418", Offset = "0x9C2418", VA = "0x9C2418")]
	public bool StartUnitySDKSensor()
	{
		return default(bool);
	}

	[Token(Token = "0x6000DE6")]
	[Address(RVA = "0x9C1238", Offset = "0x9C1238", VA = "0x9C1238")]
	public bool StopUnitySDKSensor()
	{
		return default(bool);
	}

	[Token(Token = "0x6000DE7")]
	[Address(RVA = "0x9BEF74", Offset = "0x9BEF74", VA = "0x9BEF74")]
	public bool ResetUnitySDKSensor()
	{
		return default(bool);
	}

	[Token(Token = "0x6000DE8")]
	[Address(RVA = "0x9B9308", Offset = "0x9B9308", VA = "0x9B9308")]
	public bool OptionalResetUnitySDKSensor(int resetRot, int resetPos)
	{
		return default(bool);
	}

	[Token(Token = "0x6000DE9")]
	[Address(RVA = "0x9C6F20", Offset = "0x9C6F20", VA = "0x9C6F20")]
	public bool GetUnitySDKSensorState()
	{
		return default(bool);
	}

	[Token(Token = "0x6000DEA")]
	[Address(RVA = "0x9C8A80", Offset = "0x9C8A80", VA = "0x9C8A80")]
	public bool GetUnitySDKPSensorState()
	{
		return default(bool);
	}

	[Token(Token = "0x6000DEB")]
	[Address(RVA = "0x9C882C", Offset = "0x9C882C", VA = "0x9C882C")]
	private void RefreshHeadData(float x, float y, float z, float w, float px, float py, float pz)
	{
	}
}
[Token(Token = "0x20001CE")]
public class CLoadingAsset : ScriptableObject
{
	[Token(Token = "0x4000B4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int SplashScreenType;

	[Token(Token = "0x4000B50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<Texture2D> splashImage;

	[Token(Token = "0x4000B51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Texture2D Inside_background;

	[Token(Token = "0x4000B52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool UseSplashText;

	[Token(Token = "0x4000B53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string DefaultText;

	[Token(Token = "0x4000B54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string ChineseText;

	[Token(Token = "0x4000B55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public string EnglishText;

	[Token(Token = "0x4000B56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public string JapaneseText;

	[Token(Token = "0x4000B57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public string KoreanText;

	[Token(Token = "0x4000B58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public string FontSize;

	[Token(Token = "0x4000B59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Color FontColor;

	[Token(Token = "0x4000B5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public string TextHeight;

	[Token(Token = "0x4000B5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public bool UseCarousel;

	[Token(Token = "0x4000B5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public int SplashTextAlignment;

	[Token(Token = "0x6000DED")]
	[Address(RVA = "0x8C7D90", Offset = "0x8C7D90", VA = "0x8C7D90")]
	public CLoadingAsset()
	{
	}
}
[Serializable]
[Token(Token = "0x20001CF")]
public class Pvr_UnitySDKConfigProfile
{
	[Token(Token = "0x2000641")]
	public struct Lenses
	{
		[Token(Token = "0x40027E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float separation;

		[Token(Token = "0x40027E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float offset;

		[Token(Token = "0x40027E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float distance;

		[Token(Token = "0x40027E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public int alignment;

		[Token(Token = "0x40027E5")]
		public const int AlignTop = -1;

		[Token(Token = "0x40027E6")]
		public const int AlignCenter = 0;

		[Token(Token = "0x40027E7")]
		public const int AlignBottom = 1;
	}

	[Token(Token = "0x2000642")]
	public struct MaxFOV
	{
		[Token(Token = "0x40027E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float upper;

		[Token(Token = "0x40027E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float lower;

		[Token(Token = "0x40027EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float inner;

		[Token(Token = "0x40027EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float outer;
	}

	[Token(Token = "0x2000643")]
	public struct Distortion
	{
		[Token(Token = "0x40027EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float k1;

		[Token(Token = "0x40027ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float k2;

		[Token(Token = "0x40027EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float k3;

		[Token(Token = "0x40027EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float k4;

		[Token(Token = "0x40027F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float k5;

		[Token(Token = "0x40027F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float k6;

		[Token(Token = "0x6002C65")]
		[Address(RVA = "0x6EFF10", Offset = "0x6EFF10", VA = "0x6EFF10")]
		public float distort(float r)
		{
			return default(float);
		}

		[Token(Token = "0x6002C66")]
		[Address(RVA = "0x6EFF18", Offset = "0x6EFF18", VA = "0x6EFF18")]
		public float distort(float r, float dist)
		{
			return default(float);
		}

		[Token(Token = "0x6002C67")]
		[Address(RVA = "0x6EFF20", Offset = "0x6EFF20", VA = "0x6EFF20")]
		public float diatortInv(float radious)
		{
			return default(float);
		}
	}

	[Token(Token = "0x2000644")]
	public struct Device
	{
		[Token(Token = "0x40027F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Lenses devLenses;

		[Token(Token = "0x40027F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public MaxFOV devMaxFov;

		[Token(Token = "0x40027F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Distortion devDistortion;

		[Token(Token = "0x40027F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Distortion devDistortionInv;
	}

	[Token(Token = "0x4000B5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly Device SimulateDevice;

	[Token(Token = "0x4000B5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Device device;

	[Token(Token = "0x4000B5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public static readonly Pvr_UnitySDKConfigProfile Default;

	[Token(Token = "0x6000DEE")]
	[Address(RVA = "0xF5D2C0", Offset = "0xF5D2C0", VA = "0xF5D2C0")]
	public Pvr_UnitySDKConfigProfile Clone()
	{
		return null;
	}

	[Token(Token = "0x6000DEF")]
	[Address(RVA = "0xF5D35C", Offset = "0xF5D35C", VA = "0xF5D35C")]
	public static Pvr_UnitySDKConfigProfile GetPicoProfile()
	{
		return null;
	}

	[Token(Token = "0x6000DF0")]
	[Address(RVA = "0xF5D408", Offset = "0xF5D408", VA = "0xF5D408")]
	public float[] GetLeftEyeVisibleTanAngles(float width, float height)
	{
		return null;
	}

	[Token(Token = "0x6000DF1")]
	[Address(RVA = "0xF5D79C", Offset = "0xF5D79C", VA = "0xF5D79C")]
	public float[] GetLeftEyeNoLensTanAngles(float width, float height)
	{
		return null;
	}

	[Token(Token = "0x6000DF2")]
	[Address(RVA = "0xF5DA10", Offset = "0xF5DA10", VA = "0xF5DA10")]
	public Rect GetLeftEyeVisibleScreenRect(float[] undistortedFrustum, float width, float height)
	{
		return default(Rect);
	}

	[Token(Token = "0x6000DF3")]
	[Address(RVA = "0xF5D354", Offset = "0xF5D354", VA = "0xF5D354")]
	public Pvr_UnitySDKConfigProfile()
	{
	}
}
[Token(Token = "0x20001D0")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x63E440", Offset = "0x63E440")]
public class Pvr_UnitySDKFPS : MonoBehaviour
{
	[Token(Token = "0x4000B60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text fpsText;

	[Token(Token = "0x4000B61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float updateInterval;

	[Token(Token = "0x4000B62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float accum;

	[Token(Token = "0x4000B63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int frames;

	[Token(Token = "0x4000B64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float timeLeft;

	[Token(Token = "0x4000B65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private string strFps;

	[Token(Token = "0x6000DF5")]
	[Address(RVA = "0x9BAAF8", Offset = "0x9BAAF8", VA = "0x9BAAF8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000DF6")]
	[Address(RVA = "0x9BAB80", Offset = "0x9BAB80", VA = "0x9BAB80")]
	private void ShowFps()
	{
	}

	[Token(Token = "0x6000DF7")]
	[Address(RVA = "0x9BAC90", Offset = "0x9BAC90", VA = "0x9BAC90")]
	public Pvr_UnitySDKFPS()
	{
	}
}
[Token(Token = "0x20001D1")]
public class Pvr_GazeFuse : MonoBehaviour
{
	[Token(Token = "0x4000B66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject gazeGameObject;

	[Token(Token = "0x4000B67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Image image;

	[Token(Token = "0x6000DF8")]
	[Address(RVA = "0xE2E700", Offset = "0xE2E700", VA = "0xE2E700")]
	private void Start()
	{
	}

	[Token(Token = "0x6000DF9")]
	[Address(RVA = "0xE2E758", Offset = "0xE2E758", VA = "0xE2E758")]
	private void Update()
	{
	}

	[Token(Token = "0x6000DFA")]
	[Address(RVA = "0xE2E92C", Offset = "0xE2E92C", VA = "0xE2E92C")]
	private void FuseAmountChanged(float fuseAmount)
	{
	}

	[Token(Token = "0x6000DFB")]
	[Address(RVA = "0xE2E9DC", Offset = "0xE2E9DC", VA = "0xE2E9DC")]
	public Pvr_GazeFuse()
	{
	}
}
[Token(Token = "0x20001D2")]
public class Pvr_GazeInputModule : PointerInputModule
{
	[Token(Token = "0x2000645")]
	public enum Mode
	{
		[Token(Token = "0x40027F7")]
		Click,
		[Token(Token = "0x40027F8")]
		Gaze
	}

	[Token(Token = "0x4000B68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Mode mode;

	[Token(Token = "0x4000B69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x64FF4C", Offset = "0x64FF4C")]
	public string ClickInputName;

	[Token(Token = "0x4000B6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x64FF84", Offset = "0x64FF84")]
	public float GazeTimeInSeconds;

	[Token(Token = "0x4000B6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64FFBC", Offset = "0x64FFBC")]
	private static float <gazeFraction>k__BackingField;

	[Token(Token = "0x4000B6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64FFCC", Offset = "0x64FFCC")]
	private static GameObject <gazeGameObject>k__BackingField;

	[Token(Token = "0x4000B6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public RaycastResult CurrentRaycast;

	[Token(Token = "0x4000B6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private PointerEventData pointerEventData;

	[Token(Token = "0x4000B6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private GameObject currentLookAtHandler;

	[Token(Token = "0x4000B70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private float currentLookAtHandlerClickTime;

	[Token(Token = "0x17000140")]
	public static float gazeFraction
	{
		[Token(Token = "0x6000DFC")]
		[Address(RVA = "0xE2E8DC", Offset = "0xE2E8DC", VA = "0xE2E8DC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x669B8C", Offset = "0x669B8C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000DFD")]
		[Address(RVA = "0xE2E9E4", Offset = "0xE2E9E4", VA = "0xE2E9E4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x669B9C", Offset = "0x669B9C")]
		private set
		{
		}
	}

	[Token(Token = "0x17000141")]
	public static GameObject gazeGameObject
	{
		[Token(Token = "0x6000DFE")]
		[Address(RVA = "0xE2E88C", Offset = "0xE2E88C", VA = "0xE2E88C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x669BAC", Offset = "0x669BAC")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000DFF")]
		[Address(RVA = "0xE2EA40", Offset = "0xE2EA40", VA = "0xE2EA40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x669BBC", Offset = "0x669BBC")]
		private set
		{
		}
	}

	[Token(Token = "0x6000E00")]
	[Address(RVA = "0xE2EA94", Offset = "0xE2EA94", VA = "0xE2EA94", Slot = "17")]
	public override void Process()
	{
	}

	[Token(Token = "0x6000E01")]
	[Address(RVA = "0xE2EAB8", Offset = "0xE2EAB8", VA = "0xE2EAB8")]
	private void HandleLook()
	{
	}

	[Token(Token = "0x6000E02")]
	[Address(RVA = "0xE2ECF8", Offset = "0xE2ECF8", VA = "0xE2ECF8")]
	private void HandleSelection()
	{
	}

	[Token(Token = "0x6000E03")]
	[Address(RVA = "0xE2F190", Offset = "0xE2F190", VA = "0xE2F190")]
	public Pvr_GazeInputModule()
	{
	}
}
[Token(Token = "0x20001D3")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x63E4A4", Offset = "0x63E4A4")]
public class Pvr_GazeInputModuleCrosshair : MonoBehaviour
{
	[Token(Token = "0x4000B71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool DisplayCrosshair;

	[Token(Token = "0x4000B72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64FFDC", Offset = "0x64FFDC")]
	public Transform Crosshair;

	[Token(Token = "0x4000B73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Pvr_GazeInputModule gazeInputModule;

	[Token(Token = "0x4000B74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 CrosshairOriginalScale;

	[Token(Token = "0x4000B75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float CrosshairOriginalDistance;

	[Token(Token = "0x6000E04")]
	[Address(RVA = "0xE2F1F0", Offset = "0xE2F1F0", VA = "0xE2F1F0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000E05")]
	[Address(RVA = "0xE2F248", Offset = "0xE2F248", VA = "0xE2F248")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E06")]
	[Address(RVA = "0xE2F2DC", Offset = "0xE2F2DC", VA = "0xE2F2DC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000E07")]
	[Address(RVA = "0xE2F414", Offset = "0xE2F414", VA = "0xE2F414")]
	private void SetCrossHairAtDistance(float dist)
	{
	}

	[Token(Token = "0x6000E08")]
	[Address(RVA = "0xE2F53C", Offset = "0xE2F53C", VA = "0xE2F53C")]
	public Pvr_GazeInputModuleCrosshair()
	{
	}
}
[Token(Token = "0x20001D4")]
public enum RenderEventType
{
	[Token(Token = "0x4000B77")]
	InitRenderThread = 1024,
	[Token(Token = "0x4000B78")]
	Pause,
	[Token(Token = "0x4000B79")]
	Resume,
	[Token(Token = "0x4000B7A")]
	LeftEyeEndFrame,
	[Token(Token = "0x4000B7B")]
	RightEyeEndFrame,
	[Token(Token = "0x4000B7C")]
	TimeWarp,
	[Token(Token = "0x4000B7D")]
	ResetVrModeParms,
	[Token(Token = "0x4000B7E")]
	ShutdownRenderThread,
	[Token(Token = "0x4000B7F")]
	BeginEye,
	[Token(Token = "0x4000B80")]
	EndEye,
	[Token(Token = "0x4000B81")]
	BoundaryRenderLeft,
	[Token(Token = "0x4000B82")]
	BoundaryRenderRight,
	[Token(Token = "0x4000B83")]
	BothEyeEndFrame,
	[Token(Token = "0x4000B84")]
	CameraFrameLeft,
	[Token(Token = "0x4000B85")]
	CameraFrameRight,
	[Token(Token = "0x4000B86")]
	StartCameraFrame,
	[Token(Token = "0x4000B87")]
	StopCameraFrame
}
[Token(Token = "0x20001D5")]
public static class Pvr_UnitySDKPluginEvent
{
	[Token(Token = "0x2000646")]
	private delegate void RenderEventDelegate(int eventId);

	[Token(Token = "0x4000B88")]
	private const uint IS_DATA_FLAG = 2147483648u;

	[Token(Token = "0x4000B89")]
	private const uint DATA_POS_MASK = 1073741824u;

	[Token(Token = "0x4000B8A")]
	private const int DATA_POS_SHIFT = 30;

	[Token(Token = "0x4000B8B")]
	private const uint EVENT_TYPE_MASK = 1056899072u;

	[Token(Token = "0x4000B8C")]
	private const int EVENT_TYPE_SHIFT = 17;

	[Token(Token = "0x4000B8D")]
	private const uint PAYLOAD_MASK = 65535u;

	[Token(Token = "0x4000B8E")]
	private const int PAYLOAD_SHIFT = 16;

	[Token(Token = "0x4000B8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static RenderEventDelegate SetSinglePassBeforeForwardOpaqueHandle;

	[Token(Token = "0x4000B90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static IntPtr SetSinglePassBeforeForwardOpaquePtr;

	[Token(Token = "0x6000E0A")]
	[Address(RVA = "0x9B33E8", Offset = "0x9B33E8", VA = "0x9B33E8")]
	public static void Issue(RenderEventType eventType)
	{
	}

	[Token(Token = "0x6000E0B")]
	[Address(RVA = "0x9C2DEC", Offset = "0x9C2DEC", VA = "0x9C2DEC")]
	private static int EncodeType(int eventType)
	{
		return default(int);
	}

	[Token(Token = "0x6000E0C")]
	[Address(RVA = "0x9C2DF4", Offset = "0x9C2DF4", VA = "0x9C2DF4")]
	private static int EncodeData(int eventId, int eventData, int pos)
	{
		return default(int);
	}

	[Token(Token = "0x6000E0D")]
	[Address(RVA = "0x9C2E14", Offset = "0x9C2E14", VA = "0x9C2E14")]
	private static int DecodeData(int eventData)
	{
		return default(int);
	}

	[Token(Token = "0x6000E0E")]
	[Address(RVA = "0x9C2DE4", Offset = "0x9C2DE4", VA = "0x9C2DE4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x669BCC", Offset = "0x669BCC")]
	private static void SetSinglePassBeforeForwardOpaque(int eventId)
	{
	}

	[Token(Token = "0x6000E0F")]
	[Address(RVA = "0x9C2E28", Offset = "0x9C2E28", VA = "0x9C2E28")]
	public static void SetSinglePassBeforeForwardOpaque(CommandBuffer cmd)
	{
	}
}
[Token(Token = "0x20001D6")]
public class Pvr_UnitySDKSightInputModule : BaseInputModule
{
	[Token(Token = "0x4000B91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x650014", Offset = "0x650014")]
	public GameObject cursor;

	[Token(Token = "0x4000B92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public int trigger;

	[Token(Token = "0x4000B93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[HideInInspector]
	public float clickTime;

	[Token(Token = "0x4000B94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[HideInInspector]
	public Vector2 hotspot;

	[Token(Token = "0x4000B95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private PointerEventData pointerData;

	[Token(Token = "0x6000E11")]
	[Address(RVA = "0x9C8C6C", Offset = "0x9C8C6C", VA = "0x9C8C6C", Slot = "21")]
	public override bool ShouldActivateModule()
	{
		return default(bool);
	}

	[Token(Token = "0x6000E12")]
	[Address(RVA = "0x9C8D00", Offset = "0x9C8D00", VA = "0x9C8D00", Slot = "22")]
	public override void DeactivateModule()
	{
	}

	[Token(Token = "0x6000E13")]
	[Address(RVA = "0x9C904C", Offset = "0x9C904C", VA = "0x9C904C", Slot = "20")]
	public override bool IsPointerOverGameObject(int pointerId)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E14")]
	[Address(RVA = "0x9C90DC", Offset = "0x9C90DC", VA = "0x9C90DC", Slot = "17")]
	public override void Process()
	{
	}

	[Token(Token = "0x6000E15")]
	[Address(RVA = "0x9C9118", Offset = "0x9C9118", VA = "0x9C9118")]
	private void CastRayFromGaze()
	{
	}

	[Token(Token = "0x6000E16")]
	[Address(RVA = "0x9C92C0", Offset = "0x9C92C0", VA = "0x9C92C0")]
	private void UpdateCurrentObject()
	{
	}

	[Token(Token = "0x6000E17")]
	[Address(RVA = "0x9C94BC", Offset = "0x9C94BC", VA = "0x9C94BC")]
	private void PlaceCursor()
	{
	}

	[Token(Token = "0x6000E18")]
	[Address(RVA = "0x9C8E28", Offset = "0x9C8E28", VA = "0x9C8E28")]
	private void HandlePendingClick()
	{
	}

	[Token(Token = "0x6000E19")]
	[Address(RVA = "0x9C97B4", Offset = "0x9C97B4", VA = "0x9C97B4")]
	private void HandleTrigger()
	{
	}

	[Token(Token = "0x6000E1A")]
	[Address(RVA = "0x9C9B48", Offset = "0x9C9B48", VA = "0x9C9B48")]
	public Pvr_UnitySDKSightInputModule()
	{
	}
}
[Token(Token = "0x20001D7")]
public class Pvr_ObjImporter
{
	[Token(Token = "0x4000B96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Pvr_ObjImporter _instance;

	[Token(Token = "0x4000B97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private List<int> triangles;

	[Token(Token = "0x4000B98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<Vector3> vertices;

	[Token(Token = "0x4000B99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<Vector2> uv;

	[Token(Token = "0x4000B9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<Vector3> normals;

	[Token(Token = "0x4000B9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<PvrVector3Int> faceData;

	[Token(Token = "0x4000B9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private List<int> intArray;

	[Token(Token = "0x4000B9D")]
	private const int MIN_POW_10 = -16;

	[Token(Token = "0x4000B9E")]
	private const int MAX_POW_10 = 16;

	[Token(Token = "0x4000B9F")]
	private const int NUM_POWS_10 = 33;

	[Token(Token = "0x4000BA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static readonly float[] pow10;

	[Token(Token = "0x17000142")]
	public static Pvr_ObjImporter Instance
	{
		[Token(Token = "0x6000E1B")]
		[Address(RVA = "0xE32304", Offset = "0xE32304", VA = "0xE32304")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000E1C")]
	[Address(RVA = "0xE323B0", Offset = "0xE323B0", VA = "0xE323B0")]
	public Mesh ImportFile(string filePath)
	{
		return null;
	}

	[Token(Token = "0x6000E1D")]
	[Address(RVA = "0xE32948", Offset = "0xE32948", VA = "0xE32948")]
	private void LoadMeshData(string fileName)
	{
	}

	[Token(Token = "0x6000E1E")]
	[Address(RVA = "0xE331AC", Offset = "0xE331AC", VA = "0xE331AC")]
	private float GetFloat(StringBuilder sb, ref int start, ref StringBuilder sbFloat)
	{
		return default(float);
	}

	[Token(Token = "0x6000E1F")]
	[Address(RVA = "0xE3338C", Offset = "0xE3338C", VA = "0xE3338C")]
	private int GetInt(StringBuilder sb, ref int start, ref StringBuilder sbInt)
	{
		return default(int);
	}

	[Token(Token = "0x6000E20")]
	[Address(RVA = "0xE33878", Offset = "0xE33878", VA = "0xE33878")]
	private static float[] GenerateLookupTable()
	{
		return null;
	}

	[Token(Token = "0x6000E21")]
	[Address(RVA = "0xE33514", Offset = "0xE33514", VA = "0xE33514")]
	private float ParseFloat(StringBuilder value)
	{
		return default(float);
	}

	[Token(Token = "0x6000E22")]
	[Address(RVA = "0xE337F4", Offset = "0xE337F4", VA = "0xE337F4")]
	private int IntParseFast(StringBuilder value)
	{
		return default(int);
	}

	[Token(Token = "0x6000E23")]
	[Address(RVA = "0xE323A8", Offset = "0xE323A8", VA = "0xE323A8")]
	public Pvr_ObjImporter()
	{
	}
}
[Token(Token = "0x20001D8")]
public sealed class PvrVector3Int
{
	[Token(Token = "0x4000BA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x65006C", Offset = "0x65006C")]
	private int <x>k__BackingField;

	[Token(Token = "0x4000BA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x65007C", Offset = "0x65007C")]
	private int <y>k__BackingField;

	[Token(Token = "0x4000BA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x65008C", Offset = "0x65008C")]
	private int <z>k__BackingField;

	[Token(Token = "0x17000143")]
	public int x
	{
		[Token(Token = "0x6000E25")]
		[Address(RVA = "0x8E1940", Offset = "0x8E1940", VA = "0x8E1940")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x669C30", Offset = "0x669C30")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000E26")]
		[Address(RVA = "0x8E1948", Offset = "0x8E1948", VA = "0x8E1948")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x669C40", Offset = "0x669C40")]
		set
		{
		}
	}

	[Token(Token = "0x17000144")]
	public int y
	{
		[Token(Token = "0x6000E27")]
		[Address(RVA = "0x8E1950", Offset = "0x8E1950", VA = "0x8E1950")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x669C50", Offset = "0x669C50")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000E28")]
		[Address(RVA = "0x8E1958", Offset = "0x8E1958", VA = "0x8E1958")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x669C60", Offset = "0x669C60")]
		set
		{
		}
	}

	[Token(Token = "0x17000145")]
	public int z
	{
		[Token(Token = "0x6000E29")]
		[Address(RVA = "0x8E1960", Offset = "0x8E1960", VA = "0x8E1960")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x669C70", Offset = "0x669C70")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000E2A")]
		[Address(RVA = "0x8E1968", Offset = "0x8E1968", VA = "0x8E1968")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x669C80", Offset = "0x669C80")]
		set
		{
		}
	}

	[Token(Token = "0x6000E2B")]
	[Address(RVA = "0x8E1970", Offset = "0x8E1970", VA = "0x8E1970")]
	public PvrVector3Int()
	{
	}

	[Token(Token = "0x6000E2C")]
	[Address(RVA = "0x8E1978", Offset = "0x8E1978", VA = "0x8E1978")]
	public PvrVector3Int(int x, int y, int z)
	{
	}
}
[Token(Token = "0x20001D9")]
public class Pvr_EnumFlags : PropertyAttribute
{
	[Token(Token = "0x6000E2D")]
	[Address(RVA = "0xE2E6F8", Offset = "0xE2E6F8", VA = "0xE2E6F8")]
	public Pvr_EnumFlags()
	{
	}
}
[Token(Token = "0x20001DA")]
public enum ConfirmBtn
{
	[Token(Token = "0x4000BA5")]
	App = 1,
	[Token(Token = "0x4000BA6")]
	TouchPad = 2,
	[Token(Token = "0x4000BA7")]
	Trigger = 4
}
[Token(Token = "0x20001DB")]
public class Pvr_InputModule : PointerInputModule
{
	[Token(Token = "0x4000BA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static List<Pvr_UIPointer> pointers;

	[Token(Token = "0x4000BA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[Pvr_EnumFlags]
	public ConfirmBtn confirmBtn;

	[Token(Token = "0x4000BAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private List<RaycastResult> rayCasts;

	[Token(Token = "0x4000BAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private RaycastResult rayCastResult;

	[Token(Token = "0x6000E2E")]
	[Address(RVA = "0xE2F598", Offset = "0xE2F598", VA = "0xE2F598", Slot = "30")]
	public virtual void Initialise()
	{
	}

	[Token(Token = "0x6000E2F")]
	[Address(RVA = "0xE2F61C", Offset = "0xE2F61C", VA = "0xE2F61C")]
	public static void AddPoint(Pvr_UIPointer point)
	{
	}

	[Token(Token = "0x6000E30")]
	[Address(RVA = "0xE2F70C", Offset = "0xE2F70C", VA = "0xE2F70C")]
	public static void RemovePoint(Pvr_UIPointer point)
	{
	}

	[Token(Token = "0x6000E31")]
	[Address(RVA = "0xE2F7FC", Offset = "0xE2F7FC", VA = "0xE2F7FC", Slot = "17")]
	public override void Process()
	{
	}

	[Token(Token = "0x6000E32")]
	[Address(RVA = "0xE2FBE8", Offset = "0xE2FBE8", VA = "0xE2FBE8", Slot = "31")]
	protected virtual List<RaycastResult> CheckRaycasts(Pvr_UIPointer pointer)
	{
		return null;
	}

	[Token(Token = "0x6000E33")]
	[Address(RVA = "0xE2FCE8", Offset = "0xE2FCE8", VA = "0xE2FCE8", Slot = "32")]
	protected virtual bool CheckTransformTree(Transform target, Transform source)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E34")]
	[Address(RVA = "0xE2FDE8", Offset = "0xE2FDE8", VA = "0xE2FDE8", Slot = "33")]
	protected virtual bool NoValidCollision(Pvr_UIPointer pointer, List<RaycastResult> results)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E35")]
	[Address(RVA = "0xE2FF40", Offset = "0xE2FF40", VA = "0xE2FF40", Slot = "34")]
	protected virtual bool IsHovering(Pvr_UIPointer pointer)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E36")]
	[Address(RVA = "0xE301A4", Offset = "0xE301A4", VA = "0xE301A4", Slot = "35")]
	protected virtual bool ValidElement(GameObject obj)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E37")]
	[Address(RVA = "0xE30260", Offset = "0xE30260", VA = "0xE30260", Slot = "36")]
	protected virtual void CheckPointerHoverClick(Pvr_UIPointer pointer, List<RaycastResult> results)
	{
	}

	[Token(Token = "0x6000E38")]
	[Address(RVA = "0xE30300", Offset = "0xE30300", VA = "0xE30300", Slot = "37")]
	protected virtual void Hover(Pvr_UIPointer pointer, List<RaycastResult> results)
	{
	}

	[Token(Token = "0x6000E39")]
	[Address(RVA = "0xE311E8", Offset = "0xE311E8", VA = "0xE311E8", Slot = "38")]
	protected virtual void Click(Pvr_UIPointer pointer, List<RaycastResult> results)
	{
	}

	[Token(Token = "0x6000E3A")]
	[Address(RVA = "0xE31284", Offset = "0xE31284", VA = "0xE31284", Slot = "39")]
	protected virtual void ClickOnUp(Pvr_UIPointer pointer, List<RaycastResult> results)
	{
	}

	[Token(Token = "0x6000E3B")]
	[Address(RVA = "0xE3135C", Offset = "0xE3135C", VA = "0xE3135C", Slot = "40")]
	protected virtual void ClickOnDown(Pvr_UIPointer pointer, List<RaycastResult> results, bool forceClick = false)
	{
	}

	[Token(Token = "0x6000E3C")]
	[Address(RVA = "0xE31454", Offset = "0xE31454", VA = "0xE31454", Slot = "41")]
	protected virtual bool IsEligibleClick(Pvr_UIPointer pointer, List<RaycastResult> results)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E3D")]
	[Address(RVA = "0xE31788", Offset = "0xE31788", VA = "0xE31788", Slot = "42")]
	protected virtual bool AttemptClick(Pvr_UIPointer pointer)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E3E")]
	[Address(RVA = "0xE31AB0", Offset = "0xE31AB0", VA = "0xE31AB0", Slot = "43")]
	protected virtual void Drag(Pvr_UIPointer pointer, List<RaycastResult> results)
	{
	}

	[Token(Token = "0x6000E3F")]
	[Address(RVA = "0xE32218", Offset = "0xE32218", VA = "0xE32218")]
	public Pvr_InputModule()
	{
	}
}
[Token(Token = "0x20001DC")]
public class Pvr_UICanvas : MonoBehaviour
{
	[Token(Token = "0x2000647")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x644278", Offset = "0x644278")]
	private sealed class <CreateDraggablePanel>d__10 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40027F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40027FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40027FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Canvas canvas;

		[Token(Token = "0x40027FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector2 canvasSize;

		[Token(Token = "0x170002BD")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002C6F")]
			[Address(RVA = "0xE36E00", Offset = "0xE36E00", VA = "0xE36E00", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002BE")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002C71")]
			[Address(RVA = "0xE36E70", Offset = "0xE36E70", VA = "0xE36E70", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002C6C")]
		[Address(RVA = "0xE3658C", Offset = "0xE3658C", VA = "0xE3658C")]
		[DebuggerHidden]
		public <CreateDraggablePanel>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x6002C6D")]
		[Address(RVA = "0xE368FC", Offset = "0xE368FC", VA = "0xE368FC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002C6E")]
		[Address(RVA = "0xE36900", Offset = "0xE36900", VA = "0xE36900", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002C70")]
		[Address(RVA = "0xE36E08", Offset = "0xE36E08", VA = "0xE36E08", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000BAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool clickOnPointerCollision;

	[Token(Token = "0x4000BAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float autoActivateWithinDistance;

	[Token(Token = "0x4000BAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	protected BoxCollider canvasBoxCollider;

	[Token(Token = "0x4000BAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected Rigidbody canvasRigidBody;

	[Token(Token = "0x4000BB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected Coroutine draggablePanelCreation;

	[Token(Token = "0x4000BB1")]
	protected const string CANVAS_DRAGGABLE_PANEL = "UICANVAS_DRAGGABLE_PANEL";

	[Token(Token = "0x6000E41")]
	[Address(RVA = "0xE35FE0", Offset = "0xE35FE0", VA = "0xE35FE0", Slot = "4")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x6000E42")]
	[Address(RVA = "0xE35FEC", Offset = "0xE35FEC", VA = "0xE35FEC", Slot = "5")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x6000E43")]
	[Address(RVA = "0xE35FF8", Offset = "0xE35FF8", VA = "0xE35FF8", Slot = "6")]
	protected virtual void OnDestroy()
	{
	}

	[Token(Token = "0x6000E44")]
	[Address(RVA = "0xE36004", Offset = "0xE36004", VA = "0xE36004", Slot = "7")]
	protected virtual void SetupCanvas()
	{
	}

	[Token(Token = "0x6000E45")]
	[Address(RVA = "0xE364F0", Offset = "0xE364F0", VA = "0xE364F0", Slot = "8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x669C90", Offset = "0x669C90")]
	protected virtual IEnumerator CreateDraggablePanel(Canvas canvas, Vector2 canvasSize)
	{
		return null;
	}

	[Token(Token = "0x6000E46")]
	[Address(RVA = "0xE365B8", Offset = "0xE365B8", VA = "0xE365B8", Slot = "9")]
	protected virtual void RemoveCanvas()
	{
	}

	[Token(Token = "0x6000E47")]
	[Address(RVA = "0xE368F4", Offset = "0xE368F4", VA = "0xE368F4")]
	public Pvr_UICanvas()
	{
	}
}
[Token(Token = "0x20001DD")]
public struct UIDraggableItemEventArgs
{
	[Token(Token = "0x4000BB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public GameObject target;
}
[Token(Token = "0x20001DE")]
public delegate void UIDraggableItemEventHandler(object sender, UIDraggableItemEventArgs e);
[Token(Token = "0x20001DF")]
public class Pvr_UIDraggableItem : MonoBehaviour, IBeginDragHandler, IEventSystemHandler, IDragHandler, IEndDragHandler
{
	[Token(Token = "0x4000BB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool restrictToDropZone;

	[Token(Token = "0x4000BB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool restrictToOriginalCanvas;

	[Token(Token = "0x4000BB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float moveOffset;

	[Token(Token = "0x4000BB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public GameObject validDropZone;

	[Token(Token = "0x4000BB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected RectTransform dragTransform;

	[Token(Token = "0x4000BBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	protected Vector3 startPosition;

	[Token(Token = "0x4000BBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	protected Quaternion startRotation;

	[Token(Token = "0x4000BBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	protected GameObject startDropZone;

	[Token(Token = "0x4000BBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	protected Transform startParent;

	[Token(Token = "0x4000BBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	protected Canvas startCanvas;

	[Token(Token = "0x4000BBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	protected CanvasGroup canvasGroup;

	[Token(Token = "0x4000BC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	protected Pvr_InputModule currentInputmodule;

	[Token(Token = "0x1400006A")]
	public event UIDraggableItemEventHandler DraggableItemDropped
	{
		[Token(Token = "0x6000E4C")]
		[Address(RVA = "0xE36E78", Offset = "0xE36E78", VA = "0xE36E78")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x669CF4", Offset = "0x669CF4")]
		add
		{
		}
		[Token(Token = "0x6000E4D")]
		[Address(RVA = "0xE36F64", Offset = "0xE36F64", VA = "0xE36F64")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x669D04", Offset = "0x669D04")]
		remove
		{
		}
	}

	[Token(Token = "0x1400006B")]
	public event UIDraggableItemEventHandler DraggableItemReset
	{
		[Token(Token = "0x6000E4E")]
		[Address(RVA = "0xE37050", Offset = "0xE37050", VA = "0xE37050")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x669D14", Offset = "0x669D14")]
		add
		{
		}
		[Token(Token = "0x6000E4F")]
		[Address(RVA = "0xE3713C", Offset = "0xE3713C", VA = "0xE3713C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x669D24", Offset = "0x669D24")]
		remove
		{
		}
	}

	[Token(Token = "0x6000E50")]
	[Address(RVA = "0xE37228", Offset = "0xE37228", VA = "0xE37228", Slot = "7")]
	public virtual void OnDraggableItemDropped(UIDraggableItemEventArgs e)
	{
	}

	[Token(Token = "0x6000E51")]
	[Address(RVA = "0xE3724C", Offset = "0xE3724C", VA = "0xE3724C", Slot = "8")]
	public virtual void OnDraggableItemReset(UIDraggableItemEventArgs e)
	{
	}

	[Token(Token = "0x6000E52")]
	[Address(RVA = "0xE37270", Offset = "0xE37270", VA = "0xE37270", Slot = "4")]
	public void OnBeginDrag(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000E53")]
	[Address(RVA = "0xE374D8", Offset = "0xE374D8", VA = "0xE374D8", Slot = "5")]
	public void OnDrag(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000E54")]
	[Address(RVA = "0xE374E4", Offset = "0xE374E4", VA = "0xE374E4", Slot = "6")]
	public void OnEndDrag(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000E55")]
	[Address(RVA = "0xE379CC", Offset = "0xE379CC", VA = "0xE379CC", Slot = "9")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x6000E56")]
	[Address(RVA = "0xE37AC0", Offset = "0xE37AC0", VA = "0xE37AC0", Slot = "10")]
	protected virtual Pvr_UIPointer GetPointer()
	{
		return null;
	}

	[Token(Token = "0x6000E57")]
	[Address(RVA = "0xE37C78", Offset = "0xE37C78", VA = "0xE37C78", Slot = "11")]
	protected virtual void SetDragPosition(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000E58")]
	[Address(RVA = "0xE38028", Offset = "0xE38028", VA = "0xE38028", Slot = "12")]
	protected virtual void ResetElement()
	{
	}

	[Token(Token = "0x6000E59")]
	[Address(RVA = "0xE38138", Offset = "0xE38138", VA = "0xE38138", Slot = "13")]
	protected virtual UIDraggableItemEventArgs SetEventPayload(GameObject target)
	{
		return default(UIDraggableItemEventArgs);
	}

	[Token(Token = "0x6000E5A")]
	[Address(RVA = "0xE38140", Offset = "0xE38140", VA = "0xE38140")]
	public Pvr_UIDraggableItem()
	{
	}
}
[Token(Token = "0x20001E0")]
public class Pvr_UIDropZone : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler
{
	[Token(Token = "0x4000BC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected Pvr_UIDraggableItem droppableItem;

	[Token(Token = "0x6000E5B")]
	[Address(RVA = "0xE38154", Offset = "0xE38154", VA = "0xE38154", Slot = "4")]
	public void OnPointerEnter(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000E5C")]
	[Address(RVA = "0xE38280", Offset = "0xE38280", VA = "0xE38280", Slot = "5")]
	public void OnPointerExit(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000E5D")]
	[Address(RVA = "0xE3830C", Offset = "0xE3830C", VA = "0xE3830C")]
	public Pvr_UIDropZone()
	{
	}
}
[Token(Token = "0x20001E1")]
public class Pvr_UIGraphicRaycaster : GraphicRaycaster
{
	[Serializable]
	[Token(Token = "0x2000648")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x644288", Offset = "0x644288")]
	private sealed class <>c
	{
		[Token(Token = "0x40027FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x40027FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Comparison<RaycastResult> <>9__7_0;

		[Token(Token = "0x6002C73")]
		[Address(RVA = "0xE39410", Offset = "0xE39410", VA = "0xE39410")]
		public <>c()
		{
		}

		[Token(Token = "0x6002C74")]
		[Address(RVA = "0xE39418", Offset = "0xE39418", VA = "0xE39418")]
		internal int <Raycast>b__7_0(RaycastResult g1, RaycastResult g2)
		{
			return default(int);
		}
	}

	[Token(Token = "0x4000BC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected Canvas currentCanvas;

	[Token(Token = "0x4000BC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	protected Vector2 lastKnownPosition;

	[Token(Token = "0x4000BC4")]
	protected const float UI_CONTROL_OFFSET = 1E-05f;

	[NonSerialized]
	[Token(Token = "0x4000BC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static List<RaycastResult> s_RaycastResults;

	[Token(Token = "0x17000146")]
	protected virtual Canvas canvas
	{
		[Token(Token = "0x6000E62")]
		[Address(RVA = "0xE39220", Offset = "0xE39220", VA = "0xE39220", Slot = "25")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000E5E")]
	[Address(RVA = "0xE38314", Offset = "0xE38314", VA = "0xE38314", Slot = "17")]
	public override void Raycast(PointerEventData eventData, List<RaycastResult> resultAppendList)
	{
	}

	[Token(Token = "0x6000E5F")]
	[Address(RVA = "0xE38528", Offset = "0xE38528", VA = "0xE38528", Slot = "22")]
	protected virtual void SetNearestRaycast(ref PointerEventData eventData, ref List<RaycastResult> resultAppendList, ref List<RaycastResult> raycastResults)
	{
	}

	[Token(Token = "0x6000E60")]
	[Address(RVA = "0xE38880", Offset = "0xE38880", VA = "0xE38880", Slot = "23")]
	protected virtual float GetHitDistance(Ray ray)
	{
		return default(float);
	}

	[Token(Token = "0x6000E61")]
	[Address(RVA = "0xE38BF0", Offset = "0xE38BF0", VA = "0xE38BF0", Slot = "24")]
	protected virtual void Raycast(Canvas canvas, Camera eventCamera, Ray ray, ref List<RaycastResult> results)
	{
	}

	[Token(Token = "0x6000E63")]
	[Address(RVA = "0xE392D0", Offset = "0xE392D0", VA = "0xE392D0")]
	public Pvr_UIGraphicRaycaster()
	{
	}
}
[Token(Token = "0x20001E2")]
public struct UIPointerEventArgs
{
	[Token(Token = "0x4000BC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool isActive;

	[Token(Token = "0x4000BC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public GameObject currentTarget;

	[Token(Token = "0x4000BC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public GameObject previousTarget;

	[Token(Token = "0x4000BC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RaycastResult raycastResult;
}
[Token(Token = "0x20001E3")]
public delegate void UIPointerEventHandler(object sender, UIPointerEventArgs e);
[Token(Token = "0x20001E4")]
public class Pvr_UIPointer : MonoBehaviour
{
	[Token(Token = "0x2000649")]
	public enum ClickMethods
	{
		[Token(Token = "0x4002800")]
		ClickOnButtonUp,
		[Token(Token = "0x4002801")]
		ClickOnButtonDown
	}

	[Token(Token = "0x4000BCA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ClickMethods clickMethod;

	[Token(Token = "0x4000BCB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[HideInInspector]
	public bool collisionClick;

	[Token(Token = "0x4000BCC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	[HideInInspector]
	public bool pressToDrag;

	[Token(Token = "0x4000BCD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public GameObject autoActivatingCanvas;

	[Token(Token = "0x4000BCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public PointerEventData pointerEventData;

	[Token(Token = "0x4000BCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public GameObject hoveringElement;

	[Token(Token = "0x4000BD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	public float hoverDurationTimer;

	[Token(Token = "0x4000BD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[HideInInspector]
	public bool canClickOnHover;

	[Token(Token = "0x4000BD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform pointerOriginTransform;

	[Token(Token = "0x4000BD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	protected bool pointerClicked;

	[Token(Token = "0x4000BD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	protected bool beamEnabledState;

	[Token(Token = "0x4000BD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
	protected bool lastPointerPressState;

	[Token(Token = "0x4000BD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4B")]
	protected bool lastPointerClickState;

	[Token(Token = "0x4000BD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	protected GameObject currentTarget;

	[Token(Token = "0x4000BD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	protected EventSystem cachedEventSystem;

	[Token(Token = "0x4000BD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	protected Pvr_InputModule cachedVRInputModule;

	[Token(Token = "0x4000BDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	protected Transform originalPointerOriginTransform;

	[Token(Token = "0x4000BE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool TouchBtnValue;

	[Token(Token = "0x4000BE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
	public static bool AppBtnValue;

	[Token(Token = "0x4000BE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
	public static bool TriggerBtnValue;

	[Token(Token = "0x1400006C")]
	public event UIPointerEventHandler UIPointerElementEnter
	{
		[Token(Token = "0x6000E69")]
		[Address(RVA = "0xE39428", Offset = "0xE39428", VA = "0xE39428")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x669D34", Offset = "0x669D34")]
		add
		{
		}
		[Token(Token = "0x6000E6A")]
		[Address(RVA = "0xE39514", Offset = "0xE39514", VA = "0xE39514")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x669D44", Offset = "0x669D44")]
		remove
		{
		}
	}

	[Token(Token = "0x1400006D")]
	public event UIPointerEventHandler UIPointerElementExit
	{
		[Token(Token = "0x6000E6B")]
		[Address(RVA = "0xE39600", Offset = "0xE39600", VA = "0xE39600")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x669D54", Offset = "0x669D54")]
		add
		{
		}
		[Token(Token = "0x6000E6C")]
		[Address(RVA = "0xE396EC", Offset = "0xE396EC", VA = "0xE396EC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x669D64", Offset = "0x669D64")]
		remove
		{
		}
	}

	[Token(Token = "0x1400006E")]
	public event UIPointerEventHandler UIPointerElementClick
	{
		[Token(Token = "0x6000E6D")]
		[Address(RVA = "0xE397D8", Offset = "0xE397D8", VA = "0xE397D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x669D74", Offset = "0x669D74")]
		add
		{
		}
		[Token(Token = "0x6000E6E")]
		[Address(RVA = "0xE398C4", Offset = "0xE398C4", VA = "0xE398C4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x669D84", Offset = "0x669D84")]
		remove
		{
		}
	}

	[Token(Token = "0x1400006F")]
	public event UIPointerEventHandler UIPointerElementDragStart
	{
		[Token(Token = "0x6000E6F")]
		[Address(RVA = "0xE399B0", Offset = "0xE399B0", VA = "0xE399B0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x669D94", Offset = "0x669D94")]
		add
		{
		}
		[Token(Token = "0x6000E70")]
		[Address(RVA = "0xE39A9C", Offset = "0xE39A9C", VA = "0xE39A9C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x669DA4", Offset = "0x669DA4")]
		remove
		{
		}
	}

	[Token(Token = "0x14000070")]
	public event UIPointerEventHandler UIPointerElementDragEnd
	{
		[Token(Token = "0x6000E71")]
		[Address(RVA = "0xE39B88", Offset = "0xE39B88", VA = "0xE39B88")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x669DB4", Offset = "0x669DB4")]
		add
		{
		}
		[Token(Token = "0x6000E72")]
		[Address(RVA = "0xE39C74", Offset = "0xE39C74", VA = "0xE39C74")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x669DC4", Offset = "0x669DC4")]
		remove
		{
		}
	}

	[Token(Token = "0x6000E73")]
	[Address(RVA = "0xE39D60", Offset = "0xE39D60", VA = "0xE39D60", Slot = "4")]
	public virtual bool PointerActive()
	{
		return default(bool);
	}

	[Token(Token = "0x6000E74")]
	[Address(RVA = "0xE39D68", Offset = "0xE39D68", VA = "0xE39D68", Slot = "5")]
	public virtual bool IsSelectionButtonPressed()
	{
		return default(bool);
	}

	[Token(Token = "0x6000E75")]
	[Address(RVA = "0xE39E48", Offset = "0xE39E48", VA = "0xE39E48", Slot = "6")]
	public virtual Vector3 GetOriginPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000E76")]
	[Address(RVA = "0xE39EE4", Offset = "0xE39EE4", VA = "0xE39EE4", Slot = "7")]
	public virtual Vector3 GetOriginForward()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000E77")]
	[Address(RVA = "0xE39F80", Offset = "0xE39F80", VA = "0xE39F80", Slot = "8")]
	public virtual bool ValidClick(bool checkLastClick, bool lastClickState = false)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E78")]
	[Address(RVA = "0xE39F9C", Offset = "0xE39F9C", VA = "0xE39F9C", Slot = "9")]
	protected virtual void ResetHoverTimer()
	{
	}

	[Token(Token = "0x6000E79")]
	[Address(RVA = "0xE39FA8", Offset = "0xE39FA8", VA = "0xE39FA8", Slot = "10")]
	public virtual void OnUIPointerElementEnter(UIPointerEventArgs e)
	{
	}

	[Token(Token = "0x6000E7A")]
	[Address(RVA = "0xE3A08C", Offset = "0xE3A08C", VA = "0xE3A08C", Slot = "11")]
	public virtual void OnUIPointerElementExit(UIPointerEventArgs e)
	{
	}

	[Token(Token = "0x6000E7B")]
	[Address(RVA = "0xE3A158", Offset = "0xE3A158", VA = "0xE3A158", Slot = "12")]
	public virtual void OnUIPointerElementClick(UIPointerEventArgs e)
	{
	}

	[Token(Token = "0x6000E7C")]
	[Address(RVA = "0xE3A224", Offset = "0xE3A224", VA = "0xE3A224", Slot = "13")]
	public virtual void OnUIPointerElementDragStart(UIPointerEventArgs e)
	{
	}

	[Token(Token = "0x6000E7D")]
	[Address(RVA = "0xE3A270", Offset = "0xE3A270", VA = "0xE3A270", Slot = "14")]
	public virtual void OnUIPointerElementDragEnd(UIPointerEventArgs e)
	{
	}

	[Token(Token = "0x6000E7E")]
	[Address(RVA = "0xE3A2BC", Offset = "0xE3A2BC", VA = "0xE3A2BC", Slot = "15")]
	public virtual UIPointerEventArgs SetUIPointerEvent(RaycastResult currentRaycastResult, GameObject currentTarget, [Optional] GameObject lastTarget)
	{
		return default(UIPointerEventArgs);
	}

	[Token(Token = "0x6000E7F")]
	[Address(RVA = "0xE3A320", Offset = "0xE3A320", VA = "0xE3A320", Slot = "16")]
	protected virtual void Awake()
	{
	}

	[Token(Token = "0x6000E80")]
	[Address(RVA = "0xE3A32C", Offset = "0xE3A32C", VA = "0xE3A32C", Slot = "17")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x6000E81")]
	[Address(RVA = "0xE3A364", Offset = "0xE3A364", VA = "0xE3A364", Slot = "18")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x6000E82")]
	[Address(RVA = "0xE3A3C8", Offset = "0xE3A3C8", VA = "0xE3A3C8", Slot = "19")]
	protected virtual void ConfigureEventSystem()
	{
	}

	[Token(Token = "0x6000E83")]
	[Address(RVA = "0xE3A570", Offset = "0xE3A570", VA = "0xE3A570")]
	public Pvr_UIPointer()
	{
	}
}
[Token(Token = "0x20001E5")]
[ExecuteInEditMode]
public class Pvr_UnitySDKEditor : MonoBehaviour
{
	[Token(Token = "0x4000BE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool vrModeEnabled;

	[Token(Token = "0x4000BE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float mouseX;

	[Token(Token = "0x4000BE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float mouseY;

	[Token(Token = "0x4000BE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float mouseZ;

	[Token(Token = "0x4000BE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float neckModelScale;

	[Token(Token = "0x4000BE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private bool autoUntiltHead;

	[Token(Token = "0x4000BE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Vector3 neckOffset;

	[Token(Token = "0x4000BEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public Matrix4x4 headView;

	[Token(Token = "0x4000BEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[HideInInspector]
	public Matrix4x4 leftEyeUndistortedProj;

	[Token(Token = "0x4000BEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[HideInInspector]
	public Matrix4x4 rightEyeUndistortedProj;

	[Token(Token = "0x4000BED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[HideInInspector]
	public Matrix4x4 leftEyeProj;

	[Token(Token = "0x4000BEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	[HideInInspector]
	public Matrix4x4 rightEyeProj;

	[Token(Token = "0x4000BEF")]
	private const float TOUCH_TIME_LIMIT = 0.2f;

	[Token(Token = "0x4000BF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private float touchStartTime;

	[Token(Token = "0x6000E85")]
	[Address(RVA = "0xF5DC48", Offset = "0xF5DC48", VA = "0xF5DC48")]
	public Matrix4x4 UndistortedProjection(Eye eye)
	{
		return default(Matrix4x4);
	}

	[Token(Token = "0x6000E86")]
	[Address(RVA = "0xF5DC94", Offset = "0xF5DC94", VA = "0xF5DC94")]
	public Matrix4x4 Projection(Eye eye)
	{
		return default(Matrix4x4);
	}

	[Token(Token = "0x6000E87")]
	[Address(RVA = "0xF5DCE0", Offset = "0xF5DCE0", VA = "0xF5DCE0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000E88")]
	[Address(RVA = "0xF5DF0C", Offset = "0xF5DF0C", VA = "0xF5DF0C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000E89")]
	[Address(RVA = "0xF5DCF4", Offset = "0xF5DCF4", VA = "0xF5DCF4")]
	public void InitEyePara()
	{
	}

	[Token(Token = "0x6000E8A")]
	[Address(RVA = "0xF5DE54", Offset = "0xF5DE54", VA = "0xF5DE54")]
	private void InitEditorSensorPara()
	{
	}

	[Token(Token = "0x6000E8B")]
	[Address(RVA = "0xF5E9F0", Offset = "0xF5E9F0", VA = "0xF5E9F0")]
	public static Matrix4x4 MakeProjection(float l, float t, float r, float b, float n, float f)
	{
		return default(Matrix4x4);
	}

	[Token(Token = "0x6000E8C")]
	[Address(RVA = "0xF5EB94", Offset = "0xF5EB94", VA = "0xF5EB94")]
	public bool UpdateStatesensor()
	{
		return default(bool);
	}

	[Token(Token = "0x6000E8D")]
	[Address(RVA = "0xF5E0DC", Offset = "0xF5E0DC", VA = "0xF5E0DC")]
	public void ComputeEyesFromProfile()
	{
	}

	[Token(Token = "0x6000E8E")]
	[Address(RVA = "0xF5F01C", Offset = "0xF5F01C", VA = "0xF5F01C")]
	public bool ResetUnitySDKSensor()
	{
		return default(bool);
	}

	[Token(Token = "0x6000E8F")]
	[Address(RVA = "0xF5DFD0", Offset = "0xF5DFD0", VA = "0xF5DFD0")]
	private void SimulateInput()
	{
	}

	[Token(Token = "0x6000E90")]
	[Address(RVA = "0xF5E91C", Offset = "0xF5E91C", VA = "0xF5E91C")]
	private void FovAdjust()
	{
	}

	[Token(Token = "0x6000E91")]
	[Address(RVA = "0xF5F0C4", Offset = "0xF5F0C4", VA = "0xF5F0C4")]
	private Rect RectAdjust(Rect eyeRect)
	{
		return default(Rect);
	}

	[Token(Token = "0x6000E92")]
	[Address(RVA = "0xF5EBAC", Offset = "0xF5EBAC", VA = "0xF5EBAC")]
	private void UpdateSimulatedSensor()
	{
	}

	[Token(Token = "0x6000E93")]
	[Address(RVA = "0xF5E7AC", Offset = "0xF5E7AC", VA = "0xF5E7AC")]
	private void InitForEye(ref Material mat, ref Material mat1)
	{
	}

	[Token(Token = "0x6000E94")]
	[Address(RVA = "0xF5F030", Offset = "0xF5F030", VA = "0xF5F030")]
	private void EnableVEmodel()
	{
	}

	[Token(Token = "0x6000E95")]
	[Address(RVA = "0xF5F1F4", Offset = "0xF5F1F4", VA = "0xF5F1F4")]
	public Pvr_UnitySDKEditor()
	{
	}
}
[Token(Token = "0x20001E6")]
public class Pvr_VolumePowerBrightness : MonoBehaviour
{
	[Token(Token = "0x4000BF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool VolEnable;

	[Token(Token = "0x4000BF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	private bool BattEnable;

	[Token(Token = "0x4000BF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text showResult;

	[Token(Token = "0x4000BF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text setVolumnum;

	[Token(Token = "0x4000BF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Text setBrightnum;

	[Token(Token = "0x4000BF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string MusicPath;

	[Token(Token = "0x6000E97")]
	[Address(RVA = "0x9CC204", Offset = "0x9CC204", VA = "0x9CC204")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000E98")]
	[Address(RVA = "0x9CC2DC", Offset = "0x9CC2DC", VA = "0x9CC2DC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000E99")]
	[Address(RVA = "0x9CC330", Offset = "0x9CC330", VA = "0x9CC330")]
	public void GetMaxVolumeNumber()
	{
	}

	[Token(Token = "0x6000E9A")]
	[Address(RVA = "0x9CC3D8", Offset = "0x9CC3D8", VA = "0x9CC3D8")]
	public void GetCurrentVolumeNumber()
	{
	}

	[Token(Token = "0x6000E9B")]
	[Address(RVA = "0x9CC480", Offset = "0x9CC480", VA = "0x9CC480")]
	public void VolumeUp()
	{
	}

	[Token(Token = "0x6000E9C")]
	[Address(RVA = "0x9CC504", Offset = "0x9CC504", VA = "0x9CC504")]
	public void VolumeDown()
	{
	}

	[Token(Token = "0x6000E9D")]
	[Address(RVA = "0x9CC588", Offset = "0x9CC588", VA = "0x9CC588")]
	public void SetVolumeNum()
	{
	}

	[Token(Token = "0x6000E9E")]
	[Address(RVA = "0x9CC6B0", Offset = "0x9CC6B0", VA = "0x9CC6B0")]
	public void SetBrightness()
	{
	}

	[Token(Token = "0x6000E9F")]
	[Address(RVA = "0x9CC7D8", Offset = "0x9CC7D8", VA = "0x9CC7D8")]
	public void GetCurrentBrightness()
	{
	}

	[Token(Token = "0x6000EA0")]
	[Address(RVA = "0x9CC880", Offset = "0x9CC880", VA = "0x9CC880")]
	public bool setAudio(string s)
	{
		return default(bool);
	}

	[Token(Token = "0x6000EA1")]
	[Address(RVA = "0x9CC914", Offset = "0x9CC914", VA = "0x9CC914")]
	public bool setBattery(string s)
	{
		return default(bool);
	}

	[Token(Token = "0x6000EA2")]
	[Address(RVA = "0x9CC274", Offset = "0x9CC274", VA = "0x9CC274")]
	private bool InitBatteryVolClass()
	{
		return default(bool);
	}

	[Token(Token = "0x6000EA3")]
	[Address(RVA = "0x9CC27C", Offset = "0x9CC27C", VA = "0x9CC27C")]
	private bool StartBatteryReceiver(string startreceivre)
	{
		return default(bool);
	}

	[Token(Token = "0x6000EA4")]
	[Address(RVA = "0x9CC328", Offset = "0x9CC328", VA = "0x9CC328")]
	private bool StopBatteryReceiver()
	{
		return default(bool);
	}

	[Token(Token = "0x6000EA5")]
	[Address(RVA = "0x9CC2AC", Offset = "0x9CC2AC", VA = "0x9CC2AC")]
	private bool StartAudioReceiver(string startreceivre)
	{
		return default(bool);
	}

	[Token(Token = "0x6000EA6")]
	[Address(RVA = "0x9CC320", Offset = "0x9CC320", VA = "0x9CC320")]
	private bool StopAudioReceiver()
	{
		return default(bool);
	}

	[Token(Token = "0x6000EA7")]
	[Address(RVA = "0x9CC9A8", Offset = "0x9CC9A8", VA = "0x9CC9A8")]
	public Pvr_VolumePowerBrightness()
	{
	}
}
[Token(Token = "0x20001E7")]
public class HighlightNearestFace : MonoBehaviour
{
	[Token(Token = "0x4000BF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float travel;

	[Token(Token = "0x4000BF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float speed;

	[Token(Token = "0x4000BF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private pb_Object target;

	[Token(Token = "0x4000BFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private pb_Face nearest;

	[Token(Token = "0x6000EA8")]
	[Address(RVA = "0x84630C", Offset = "0x84630C", VA = "0x84630C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000EA9")]
	[Address(RVA = "0x846688", Offset = "0x846688", VA = "0x846688")]
	private void Update()
	{
	}

	[Token(Token = "0x6000EAA")]
	[Address(RVA = "0x846AFC", Offset = "0x846AFC", VA = "0x846AFC")]
	private Vector3 FaceCenter(pb_Object pb, pb_Face face)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000EAB")]
	[Address(RVA = "0x846CE8", Offset = "0x846CE8", VA = "0x846CE8")]
	public HighlightNearestFace()
	{
	}
}
[Token(Token = "0x20001E8")]
public class BundledSceneLoader : MonoBehaviour
{
	[Token(Token = "0x200064A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x644298", Offset = "0x644298")]
	private sealed class <UnloadSceneAsyncCoroutine>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002802")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002803")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002804")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BundledSceneLoader <>4__this;

		[Token(Token = "0x4002805")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string scene;

		[Token(Token = "0x4002806")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private string <path>5__2;

		[Token(Token = "0x170002BF")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002C78")]
			[Address(RVA = "0x8C6F88", Offset = "0x8C6F88", VA = "0x8C6F88", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002C0")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002C7A")]
			[Address(RVA = "0x8C6FF8", Offset = "0x8C6FF8", VA = "0x8C6FF8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002C75")]
		[Address(RVA = "0x8C6394", Offset = "0x8C6394", VA = "0x8C6394")]
		[DebuggerHidden]
		public <UnloadSceneAsyncCoroutine>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6002C76")]
		[Address(RVA = "0x8C6BF4", Offset = "0x8C6BF4", VA = "0x8C6BF4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002C77")]
		[Address(RVA = "0x8C6BF8", Offset = "0x8C6BF8", VA = "0x8C6BF8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002C79")]
		[Address(RVA = "0x8C6F90", Offset = "0x8C6F90", VA = "0x8C6F90", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200064B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6442A8", Offset = "0x6442A8")]
	private sealed class <LoadSceneAsyncCoroutine>d__11 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002807")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002808")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002809")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BundledSceneLoader <>4__this;

		[Token(Token = "0x400280A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string scene;

		[Token(Token = "0x400280B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public LoadSceneMode mode;

		[Token(Token = "0x400280C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private AssetBundleCreateRequest <assetBundleCreateRequest>5__2;

		[Token(Token = "0x170002C1")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002C7E")]
			[Address(RVA = "0x8C6B7C", Offset = "0x8C6B7C", VA = "0x8C6B7C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002C2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002C80")]
			[Address(RVA = "0x8C6BEC", Offset = "0x8C6BEC", VA = "0x8C6BEC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002C7B")]
		[Address(RVA = "0x8C658C", Offset = "0x8C658C", VA = "0x8C658C")]
		[DebuggerHidden]
		public <LoadSceneAsyncCoroutine>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x6002C7C")]
		[Address(RVA = "0x8C6628", Offset = "0x8C6628", VA = "0x8C6628", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002C7D")]
		[Address(RVA = "0x8C662C", Offset = "0x8C662C", VA = "0x8C662C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002C7F")]
		[Address(RVA = "0x8C6B84", Offset = "0x8C6B84", VA = "0x8C6B84", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000BFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<string> bundledScenes;

	[Token(Token = "0x4000BFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Dictionary<string, AssetBundle> loadedBundles;

	[Token(Token = "0x4000BFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private AsyncOperation unloadAsync;

	[Token(Token = "0x4000BFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private AsyncOperation loadAsync;

	[Token(Token = "0x6000EAC")]
	[Address(RVA = "0x8C60BC", Offset = "0x8C60BC", VA = "0x8C60BC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000EAD")]
	[Address(RVA = "0x8C6138", Offset = "0x8C6138", VA = "0x8C6138")]
	internal AsyncOperation GetUnloadAsyncOperation()
	{
		return null;
	}

	[Token(Token = "0x6000EAE")]
	[Address(RVA = "0x8C6148", Offset = "0x8C6148", VA = "0x8C6148")]
	internal Coroutine UnloadSceneAsync(string scene)
	{
		return null;
	}

	[Token(Token = "0x6000EAF")]
	[Address(RVA = "0x8C6308", Offset = "0x8C6308", VA = "0x8C6308")]
	internal bool Contains(string scene)
	{
		return default(bool);
	}

	[Token(Token = "0x6000EB0")]
	[Address(RVA = "0x8C6270", Offset = "0x8C6270", VA = "0x8C6270")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x669DD4", Offset = "0x669DD4")]
	private IEnumerator UnloadSceneAsyncCoroutine(string scene)
	{
		return null;
	}

	[Token(Token = "0x6000EB1")]
	[Address(RVA = "0x8C63C0", Offset = "0x8C63C0", VA = "0x8C63C0")]
	internal AsyncOperation GetLoadAsyncOperation()
	{
		return null;
	}

	[Token(Token = "0x6000EB2")]
	[Address(RVA = "0x8C63D0", Offset = "0x8C63D0", VA = "0x8C63D0")]
	internal Coroutine LoadSceneAsync(string scene, LoadSceneMode mode)
	{
		return null;
	}

	[Token(Token = "0x6000EB3")]
	[Address(RVA = "0x8C64E0", Offset = "0x8C64E0", VA = "0x8C64E0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x669E38", Offset = "0x669E38")]
	private IEnumerator LoadSceneAsyncCoroutine(string scene, LoadSceneMode mode)
	{
		return null;
	}

	[Token(Token = "0x6000EB4")]
	[Address(RVA = "0x8C65B8", Offset = "0x8C65B8", VA = "0x8C65B8")]
	public BundledSceneLoader()
	{
	}
}
[Token(Token = "0x20001E9")]
public class DebugNearFarPlanes : MonoBehaviour
{
	[Token(Token = "0x4000BFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text text;

	[Token(Token = "0x4000C00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Camera camera;

	[Token(Token = "0x6000EB5")]
	[Address(RVA = "0x7B4458", Offset = "0x7B4458", VA = "0x7B4458")]
	private void Start()
	{
	}

	[Token(Token = "0x6000EB6")]
	[Address(RVA = "0x7B4480", Offset = "0x7B4480", VA = "0x7B4480")]
	private void Update()
	{
	}

	[Token(Token = "0x6000EB7")]
	[Address(RVA = "0x7B46D0", Offset = "0x7B46D0", VA = "0x7B46D0")]
	public DebugNearFarPlanes()
	{
	}
}
[Token(Token = "0x20001EA")]
public class DestroyOnPlay : MonoBehaviour
{
	[Token(Token = "0x6000EB8")]
	[Address(RVA = "0x7B8864", Offset = "0x7B8864", VA = "0x7B8864")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000EB9")]
	[Address(RVA = "0x7B88E0", Offset = "0x7B88E0", VA = "0x7B88E0")]
	public DestroyOnPlay()
	{
	}
}
[Token(Token = "0x20001EB")]
public class HologramLight : MonoBehaviour
{
	[Token(Token = "0x4000C01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material[] materials;

	[Token(Token = "0x4000C02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Dictionary<Material, Material> originals;

	[Token(Token = "0x4000C03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Light light;

	[Token(Token = "0x6000EBA")]
	[Address(RVA = "0x8493BC", Offset = "0x8493BC", VA = "0x8493BC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000EBB")]
	[Address(RVA = "0x8496A4", Offset = "0x8496A4", VA = "0x8496A4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000EBC")]
	[Address(RVA = "0x849790", Offset = "0x849790", VA = "0x849790")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000EBD")]
	[Address(RVA = "0x8499B0", Offset = "0x8499B0", VA = "0x8499B0")]
	public HologramLight()
	{
	}
}
[Token(Token = "0x20001EC")]
public class LoadCommonScene : MonoBehaviour
{
	[Token(Token = "0x200064C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6442B8", Offset = "0x6442B8")]
	private sealed class <>c__DisplayClass3_0
	{
		[Token(Token = "0x400280D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AsyncOperation load;

		[Token(Token = "0x400280E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LoadCommonScene <>4__this;

		[Token(Token = "0x6002C81")]
		[Address(RVA = "0x7E8330", Offset = "0x7E8330", VA = "0x7E8330")]
		public <>c__DisplayClass3_0()
		{
		}

		[Token(Token = "0x6002C82")]
		[Address(RVA = "0x7E8338", Offset = "0x7E8338", VA = "0x7E8338")]
		internal bool <Start>b__1()
		{
			return default(bool);
		}
	}

	[Token(Token = "0x200064D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6442C8", Offset = "0x6442C8")]
	private sealed class <Start>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400280F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002810")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002811")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LoadCommonScene <>4__this;

		[Token(Token = "0x4002812")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private <>c__DisplayClass3_0 <>8__1;

		[Token(Token = "0x4002813")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Scene <commonScene>5__2;

		[Token(Token = "0x4002814")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Scene <boot>5__3;

		[Token(Token = "0x4002815")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private BundledSceneLoader <loader>5__4;

		[Token(Token = "0x170002C3")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002C86")]
			[Address(RVA = "0x7E8994", Offset = "0x7E8994", VA = "0x7E8994", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002C4")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002C88")]
			[Address(RVA = "0x7E8A04", Offset = "0x7E8A04", VA = "0x7E8A04", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002C83")]
		[Address(RVA = "0x7E82F4", Offset = "0x7E82F4", VA = "0x7E82F4")]
		[DebuggerHidden]
		public <Start>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x6002C84")]
		[Address(RVA = "0x7E83A4", Offset = "0x7E83A4", VA = "0x7E83A4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002C85")]
		[Address(RVA = "0x7E83A8", Offset = "0x7E83A8", VA = "0x7E83A8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002C87")]
		[Address(RVA = "0x7E899C", Offset = "0x7E899C", VA = "0x7E899C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000C04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Camera camera;

	[Token(Token = "0x4000C05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	internal bool start;

	[Token(Token = "0x4000C06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ShaderVariantCollection[] warmups;

	[Token(Token = "0x6000EBF")]
	[Address(RVA = "0x7E8280", Offset = "0x7E8280", VA = "0x7E8280")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x669E9C", Offset = "0x669E9C")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000EC0")]
	[Address(RVA = "0x7E8320", Offset = "0x7E8320", VA = "0x7E8320")]
	public LoadCommonScene()
	{
	}

	[Token(Token = "0x6000EC1")]
	[Address(RVA = "0x7E8328", Offset = "0x7E8328", VA = "0x7E8328")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x669F00", Offset = "0x669F00")]
	private bool <Start>b__3_0()
	{
		return default(bool);
	}
}
[Token(Token = "0x20001ED")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x63E518", Offset = "0x63E518")]
public class LUTPostProcessingCamera : MonoBehaviour
{
	[Token(Token = "0x4000C07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6501EC", Offset = "0x6501EC")]
	private ColourGrading <colourGrading>k__BackingField;

	[Token(Token = "0x4000C08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static List<LUTPostProcessingCamera> Instances;

	[Token(Token = "0x17000147")]
	private ColourGrading colourGrading
	{
		[Token(Token = "0x6000EC2")]
		[Address(RVA = "0x8567B4", Offset = "0x8567B4", VA = "0x8567B4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x669F10", Offset = "0x669F10")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000EC3")]
		[Address(RVA = "0x8567BC", Offset = "0x8567BC", VA = "0x8567BC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x669F20", Offset = "0x669F20")]
		set
		{
		}
	}

	[Token(Token = "0x6000EC4")]
	[Address(RVA = "0x8567C4", Offset = "0x8567C4", VA = "0x8567C4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000EC5")]
	[Address(RVA = "0x85686C", Offset = "0x85686C", VA = "0x85686C")]
	public static void SetLut(Texture2D lut)
	{
	}

	[Token(Token = "0x6000EC6")]
	[Address(RVA = "0x8569D4", Offset = "0x8569D4", VA = "0x8569D4")]
	public LUTPostProcessingCamera()
	{
	}
}
[Token(Token = "0x20001EE")]
public class LUTPostProcessingVolume : MonoBehaviour
{
	[Token(Token = "0x4000C09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Texture2D lut;

	[Token(Token = "0x6000EC8")]
	[Address(RVA = "0x856A50", Offset = "0x856A50", VA = "0x856A50")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000EC9")]
	[Address(RVA = "0x856B2C", Offset = "0x856B2C", VA = "0x856B2C")]
	public LUTPostProcessingVolume()
	{
	}
}
[Token(Token = "0x20001EF")]
[ExecuteInEditMode]
public class NormaliseChildMeshes : MonoBehaviour
{
	[Token(Token = "0x6000ECA")]
	[Address(RVA = "0x7FD8A8", Offset = "0x7FD8A8", VA = "0x7FD8A8")]
	private void OnTransformChildrenChanged()
	{
	}

	[Token(Token = "0x6000ECB")]
	[Address(RVA = "0x7FDC94", Offset = "0x7FDC94", VA = "0x7FDC94")]
	public NormaliseChildMeshes()
	{
	}
}
[Token(Token = "0x20001F0")]
public class MobileLut : MonoBehaviour
{
	[Token(Token = "0x4000C0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6501FC", Offset = "0x6501FC")]
	public int lutDimension;

	[Token(Token = "0x4000C0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x650214", Offset = "0x650214")]
	public float lutAmount;

	[Token(Token = "0x4000C0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Texture2D source;

	[Token(Token = "0x4000C0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly int lutTexture2dString;

	[Token(Token = "0x4000C0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static readonly int lutTexture3dString;

	[Token(Token = "0x4000C0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static readonly int lutAmountString;

	[Token(Token = "0x4000C10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Material material;

	[Token(Token = "0x4000C11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int previousLutDimension;

	[Token(Token = "0x4000C12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int isLinear;

	[Token(Token = "0x4000C13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Texture2D previous;

	[Token(Token = "0x4000C14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Texture2D converted2D;

	[Token(Token = "0x4000C15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Texture3D converted3D;

	[Token(Token = "0x6000ECC")]
	[Address(RVA = "0x7F7D4C", Offset = "0x7F7D4C", VA = "0x7F7D4C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000ECD")]
	[Address(RVA = "0x7F7D8C", Offset = "0x7F7D8C", VA = "0x7F7D8C")]
	public void Update()
	{
	}

	[Token(Token = "0x6000ECE")]
	[Address(RVA = "0x7F7E5C", Offset = "0x7F7E5C", VA = "0x7F7E5C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000ECF")]
	[Address(RVA = "0x7F7F08", Offset = "0x7F7F08", VA = "0x7F7F08")]
	private void Convert2D(Texture2D temp2DTex)
	{
	}

	[Token(Token = "0x6000ED0")]
	[Address(RVA = "0x7F8288", Offset = "0x7F8288", VA = "0x7F8288")]
	private void Convert3D(Texture2D temp3DTex)
	{
	}

	[Token(Token = "0x6000ED1")]
	[Address(RVA = "0x7F7E48", Offset = "0x7F7E48", VA = "0x7F7E48")]
	private void Convert(Texture2D source)
	{
	}

	[Token(Token = "0x6000ED2")]
	[Address(RVA = "0x7F8514", Offset = "0x7F8514", VA = "0x7F8514")]
	private void OnRenderImage(RenderTexture source, RenderTexture destination)
	{
	}

	[Token(Token = "0x6000ED3")]
	[Address(RVA = "0x7F876C", Offset = "0x7F876C", VA = "0x7F876C")]
	public MobileLut()
	{
	}
}
[Token(Token = "0x20001F1")]
public class DoorCloseTrigger : MonoBehaviour
{
	[Token(Token = "0x4000C16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private bool disableOnTrigger;

	[Token(Token = "0x4000C17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private UnityEvent triggerEnterEvent;

	[Token(Token = "0x4000C18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private UnityEvent triggerExitEvent;

	[Token(Token = "0x6000ED5")]
	[Address(RVA = "0x7BBAF4", Offset = "0x7BBAF4", VA = "0x7BBAF4")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000ED6")]
	[Address(RVA = "0x7BBBD8", Offset = "0x7BBBD8", VA = "0x7BBBD8")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000ED7")]
	[Address(RVA = "0x7BBCA4", Offset = "0x7BBCA4", VA = "0x7BBCA4")]
	public DoorCloseTrigger()
	{
	}
}
[Token(Token = "0x20001F2")]
public class DrawDistanceVolume : MonoBehaviour
{
	[Token(Token = "0x4000C19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float farClipPlaneInVolume;

	[Token(Token = "0x4000C1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float farClipPlaneOutVolume;

	[Token(Token = "0x4000C1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Camera cam;

	[Token(Token = "0x4000C1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool insideTrigger;

	[Token(Token = "0x4000C1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	private bool firstTime;

	[Token(Token = "0x6000ED8")]
	[Address(RVA = "0x7BBCB4", Offset = "0x7BBCB4", VA = "0x7BBCB4")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000ED9")]
	[Address(RVA = "0x7BBE04", Offset = "0x7BBE04", VA = "0x7BBE04")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000EDA")]
	[Address(RVA = "0x7BBF30", Offset = "0x7BBF30", VA = "0x7BBF30")]
	public DrawDistanceVolume()
	{
	}
}
[Token(Token = "0x20001F3")]
public class DynamicOcclusionTrigger : MonoBehaviour
{
	[Token(Token = "0x4000C1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Renderer[] renderers;

	[Token(Token = "0x4000C1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private bool includeSkybox;

	[Token(Token = "0x4000C20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	private bool insideTrigger;

	[Token(Token = "0x4000C21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Renderer skyboxRenderer;

	[Token(Token = "0x6000EDB")]
	[Address(RVA = "0x7BC2E4", Offset = "0x7BC2E4", VA = "0x7BC2E4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000EDC")]
	[Address(RVA = "0x7BC350", Offset = "0x7BC350", VA = "0x7BC350")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000EDD")]
	[Address(RVA = "0x7BC498", Offset = "0x7BC498", VA = "0x7BC498")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000EDE")]
	[Address(RVA = "0x7BC5DC", Offset = "0x7BC5DC", VA = "0x7BC5DC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000EDF")]
	[Address(RVA = "0x7BC61C", Offset = "0x7BC61C", VA = "0x7BC61C")]
	public DynamicOcclusionTrigger()
	{
	}
}
[Token(Token = "0x20001F4")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x63E58C", Offset = "0x63E58C")]
public class QuestOcclusionPortal : MonoBehaviour
{
	[Token(Token = "0x4000C22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private bool disableRenderersOnStart;

	[Token(Token = "0x4000C23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private string checkpointToIgnoreDisable;

	[Token(Token = "0x4000C24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject[] objsToEnableOnOpen;

	[Token(Token = "0x4000C25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject[] objsToDisableOnClose;

	[Token(Token = "0x4000C26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Dictionary<Renderer, bool> rendererEnableInitState;

	[Token(Token = "0x4000C27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Dictionary<Renderer, bool> rendererDisableInitState;

	[Token(Token = "0x4000C28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private OcclusionPortal occlusionPortal;

	[Token(Token = "0x6000EE0")]
	[Address(RVA = "0x9CD0D8", Offset = "0x9CD0D8", VA = "0x9CD0D8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000EE1")]
	[Address(RVA = "0x9CD31C", Offset = "0x9CD31C", VA = "0x9CD31C")]
	private void SetInitState()
	{
	}

	[Token(Token = "0x6000EE2")]
	[Address(RVA = "0x9CCC10", Offset = "0x9CCC10", VA = "0x9CCC10")]
	public void OpenPortal()
	{
	}

	[Token(Token = "0x6000EE3")]
	[Address(RVA = "0x9CCE70", Offset = "0x9CCE70", VA = "0x9CCE70")]
	public void ClosePortal()
	{
	}

	[Token(Token = "0x6000EE4")]
	[Address(RVA = "0x9CD56C", Offset = "0x9CD56C", VA = "0x9CD56C")]
	public QuestOcclusionPortal()
	{
	}
}
[Token(Token = "0x20001F5")]
[ExecuteInEditMode]
public class AlignQuad : MonoBehaviour
{
	[Token(Token = "0x4000C29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform planet;

	[Token(Token = "0x4000C2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Transform player;

	[Token(Token = "0x6000EE5")]
	[Address(RVA = "0x8B6D78", Offset = "0x8B6D78", VA = "0x8B6D78")]
	private void Update()
	{
	}

	[Token(Token = "0x6000EE6")]
	[Address(RVA = "0x8B6F18", Offset = "0x8B6F18", VA = "0x8B6F18")]
	public AlignQuad()
	{
	}
}
[Token(Token = "0x20001F6")]
public class QuestOnScreenLog : MonoBehaviour
{
	[Token(Token = "0x4000C2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text log;

	[Token(Token = "0x6000EE7")]
	[Address(RVA = "0x9CD5FC", Offset = "0x9CD5FC", VA = "0x9CD5FC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000EE8")]
	[Address(RVA = "0x9CD634", Offset = "0x9CD634", VA = "0x9CD634")]
	public void Log(string message)
	{
	}

	[Token(Token = "0x6000EE9")]
	[Address(RVA = "0x9CD6E8", Offset = "0x9CD6E8", VA = "0x9CD6E8")]
	public void LogError(string message)
	{
	}

	[Token(Token = "0x6000EEA")]
	[Address(RVA = "0x9CD754", Offset = "0x9CD754", VA = "0x9CD754")]
	public void LogFormat(string format, params string[] values)
	{
	}

	[Token(Token = "0x6000EEB")]
	[Address(RVA = "0x9CD788", Offset = "0x9CD788", VA = "0x9CD788")]
	public void LogErrorFormat(string format, params string[] values)
	{
	}

	[Token(Token = "0x6000EEC")]
	[Address(RVA = "0x9CD7BC", Offset = "0x9CD7BC", VA = "0x9CD7BC")]
	public QuestOnScreenLog()
	{
	}
}
[Token(Token = "0x20001F7")]
public class QuestTunnelOverlay : MonoBehaviour
{
	[Token(Token = "0x4000C2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6502EC", Offset = "0x6502EC")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6502EC", Offset = "0x6502EC")]
	public float minimumRotation;

	[Token(Token = "0x4000C2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65034C", Offset = "0x65034C")]
	public float maximumRotation;

	[Token(Token = "0x4000C2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x650384", Offset = "0x650384")]
	public float minimumSpeed;

	[Token(Token = "0x4000C2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6503BC", Offset = "0x6503BC")]
	public float maximumSpeed;

	[Token(Token = "0x4000C30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6503F4", Offset = "0x6503F4")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6503F4", Offset = "0x6503F4")]
	public Color effectColor;

	[Token(Token = "0x4000C31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x650454", Offset = "0x650454")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x650454", Offset = "0x650454")]
	public float initialEffectSize;

	[Token(Token = "0x4000C32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6504A8", Offset = "0x6504A8")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6504A8", Offset = "0x6504A8")]
	public float maximumEffectSize;

	[Token(Token = "0x4000C33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6504FC", Offset = "0x6504FC")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6504FC", Offset = "0x6504FC")]
	public float featherSize;

	[Token(Token = "0x4000C34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x650550", Offset = "0x650550")]
	public float _ModelWorldSize;

	[Token(Token = "0x4000C35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x650588", Offset = "0x650588")]
	public float smoothingTime;

	[Token(Token = "0x4000C36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6505C0", Offset = "0x6505C0")]
	public Renderer tunnelOverlayRenderer;

	[Token(Token = "0x4000C37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	protected Transform headset;

	[Token(Token = "0x4000C38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	protected Camera headsetCamera;

	[Token(Token = "0x4000C39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	protected Transform playarea;

	[Token(Token = "0x4000C3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	protected float angularVelocity;

	[Token(Token = "0x4000C3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	protected float angularVelocitySlew;

	[Token(Token = "0x4000C3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	protected Vector3 lastForward;

	[Token(Token = "0x4000C3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	protected Vector3 lastPosition;

	[Token(Token = "0x4000C3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	protected Material matCameraEffect;

	[Token(Token = "0x4000C3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	protected int shaderPropertyColor;

	[Token(Token = "0x4000C40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	protected int shaderPropertyAV;

	[Token(Token = "0x4000C41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	protected int shaderPropertyFeather;

	[Token(Token = "0x4000C42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	protected Color originalColor;

	[Token(Token = "0x4000C43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	protected float originalAngularVelocity;

	[Token(Token = "0x4000C44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	protected float originalFeatherSize;

	[Token(Token = "0x4000C45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	protected float maximumEffectCoverage;

	[Token(Token = "0x4000C46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static float[] s_strengthFactor;

	[Token(Token = "0x4000C47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private int _blinkersSetting;

	[Token(Token = "0x4000C48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private int _lastSaveVersion;

	[Token(Token = "0x4000C49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Matrix4x4[] _eyeToWorld;

	[Token(Token = "0x4000C4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static Matrix4x4[] _eyeProjection;

	[Token(Token = "0x4000C4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private int _suppressed;

	[Token(Token = "0x6000EED")]
	[Address(RVA = "0x9CDEB4", Offset = "0x9CDEB4", VA = "0x9CDEB4")]
	public void Suppress()
	{
	}

	[Token(Token = "0x6000EEE")]
	[Address(RVA = "0x9CDEC0", Offset = "0x9CDEC0", VA = "0x9CDEC0", Slot = "4")]
	protected virtual void Awake()
	{
	}

	[Token(Token = "0x6000EEF")]
	[Address(RVA = "0x9CDF90", Offset = "0x9CDF90", VA = "0x9CDF90", Slot = "5")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x6000EF0")]
	[Address(RVA = "0x9CE104", Offset = "0x9CE104", VA = "0x9CE104", Slot = "6")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x6000EF1")]
	[Address(RVA = "0x9CE110", Offset = "0x9CE110", VA = "0x9CE110", Slot = "7")]
	protected virtual void OnDestroy()
	{
	}

	[Token(Token = "0x6000EF2")]
	[Address(RVA = "0x9CE178", Offset = "0x9CE178", VA = "0x9CE178", Slot = "8")]
	protected virtual void FixedUpdate()
	{
	}

	[Token(Token = "0x6000EF3")]
	[Address(RVA = "0x9CE638", Offset = "0x9CE638", VA = "0x9CE638", Slot = "9")]
	protected virtual void SetShaderFeather(Color givenTunnelColor, float givenAngularVelocity, float givenFeatherSize)
	{
	}

	[Token(Token = "0x6000EF4")]
	[Address(RVA = "0x9CE504", Offset = "0x9CE504", VA = "0x9CE504")]
	private void UpdateSavedValues()
	{
	}

	[Token(Token = "0x6000EF5")]
	[Address(RVA = "0x9CE70C", Offset = "0x9CE70C", VA = "0x9CE70C")]
	public QuestTunnelOverlay()
	{
	}
}
[Token(Token = "0x20001F8")]
public class Quit : MonoBehaviour
{
	[Token(Token = "0x6000EF7")]
	[Address(RVA = "0x9CE7EC", Offset = "0x9CE7EC", VA = "0x9CE7EC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000EF8")]
	[Address(RVA = "0x9CE844", Offset = "0x9CE844", VA = "0x9CE844")]
	private void DoQuit()
	{
	}

	[Token(Token = "0x6000EF9")]
	[Address(RVA = "0x9CE914", Offset = "0x9CE914", VA = "0x9CE914")]
	public Quit()
	{
	}
}
[Token(Token = "0x20001F9")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x63E600", Offset = "0x63E600")]
public class SetCameraOpaqueSortMode : MonoBehaviour
{
	[Token(Token = "0x4000C4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private OpaqueSortMode opaqueSortMode;

	[Token(Token = "0x4000C4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Camera camera;

	[Token(Token = "0x6000EFA")]
	[Address(RVA = "0x860D84", Offset = "0x860D84", VA = "0x860D84")]
	private void Start()
	{
	}

	[Token(Token = "0x6000EFB")]
	[Address(RVA = "0x860E00", Offset = "0x860E00", VA = "0x860E00")]
	public SetCameraOpaqueSortMode()
	{
	}
}
[Token(Token = "0x20001FA")]
public class SceneAssetPreloader : MonoBehaviour
{
	[Token(Token = "0x4000C4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UnityEngine.Object[] assetsToPreload;

	[Token(Token = "0x6000EFC")]
	[Address(RVA = "0x860348", Offset = "0x860348", VA = "0x860348")]
	public SceneAssetPreloader()
	{
	}
}
[Token(Token = "0x20001FB")]
public class BillboardFollow : MonoBehaviour
{
	[Token(Token = "0x4000C4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform transformToFollow;

	[Token(Token = "0x4000C50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector3 startPosition;

	[Token(Token = "0x4000C51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector3 startScale;

	[Token(Token = "0x4000C52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 startPositionOffset;

	[Token(Token = "0x4000C53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Vector3 startScaleOffset;

	[Token(Token = "0x4000C54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Renderer rendererToFollow;

	[Token(Token = "0x6000EFD")]
	[Address(RVA = "0x8C1EF8", Offset = "0x8C1EF8", VA = "0x8C1EF8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000EFE")]
	[Address(RVA = "0x8C20B8", Offset = "0x8C20B8", VA = "0x8C20B8")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000EFF")]
	[Address(RVA = "0x8C22F8", Offset = "0x8C22F8", VA = "0x8C22F8")]
	public BillboardFollow()
	{
	}
}
[Token(Token = "0x20001FC")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x63E674", Offset = "0x63E674")]
public class DalekHUD : MonoBehaviour
{
	[Token(Token = "0x4000C55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Pvr_UnitySDKEyeOverlay overlay;

	[Token(Token = "0x6000F00")]
	[Address(RVA = "0x7B28D8", Offset = "0x7B28D8", VA = "0x7B28D8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F01")]
	[Address(RVA = "0x7B2930", Offset = "0x7B2930", VA = "0x7B2930")]
	private void Update()
	{
	}

	[Token(Token = "0x6000F02")]
	[Address(RVA = "0x7B29BC", Offset = "0x7B29BC", VA = "0x7B29BC")]
	public DalekHUD()
	{
	}
}
[Token(Token = "0x20001FD")]
public class DebugEnable : MonoBehaviour
{
	[Token(Token = "0x6000F03")]
	[Address(RVA = "0x7B4228", Offset = "0x7B4228", VA = "0x7B4228")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000F04")]
	[Address(RVA = "0x7B433C", Offset = "0x7B433C", VA = "0x7B433C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000F05")]
	[Address(RVA = "0x7B4450", Offset = "0x7B4450", VA = "0x7B4450")]
	public DebugEnable()
	{
	}
}
[Token(Token = "0x20001FE")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x63E6D8", Offset = "0x63E6D8")]
public class FadeToInvisibleWhenNear : MonoBehaviour
{
	[Token(Token = "0x4000C56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform cameraOverride;

	[Token(Token = "0x4000C57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float fadeStartDistance;

	[Token(Token = "0x4000C58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private float fadeEndDistance;

	[Token(Token = "0x4000C59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Material material;

	[Token(Token = "0x4000C5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Renderer renderer;

	[Token(Token = "0x4000C5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float startOpacity;

	[Token(Token = "0x4000C5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private bool invisible;

	[Token(Token = "0x4000C5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
	private bool activated;

	[Token(Token = "0x6000F06")]
	[Address(RVA = "0x7BF39C", Offset = "0x7BF39C", VA = "0x7BF39C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F07")]
	[Address(RVA = "0x7BF454", Offset = "0x7BF454", VA = "0x7BF454")]
	private void Update()
	{
	}

	[Token(Token = "0x6000F08")]
	[Address(RVA = "0x7BF790", Offset = "0x7BF790", VA = "0x7BF790")]
	public FadeToInvisibleWhenNear()
	{
	}
}
[Token(Token = "0x20001FF")]
public class PortalStencilOverlay : MonoBehaviour
{
	[Token(Token = "0x4000C5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Renderer renderer;

	[Token(Token = "0x4000C5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Renderer portalObjectRenderer;

	[Token(Token = "0x4000C60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private new bool enabled;

	[Token(Token = "0x6000F09")]
	[Address(RVA = "0x8DCD18", Offset = "0x8DCD18", VA = "0x8DCD18")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000F0A")]
	[Address(RVA = "0x8DCD70", Offset = "0x8DCD70", VA = "0x8DCD70")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F0B")]
	[Address(RVA = "0x8DCE1C", Offset = "0x8DCE1C", VA = "0x8DCE1C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000F0C")]
	[Address(RVA = "0x8DCE68", Offset = "0x8DCE68", VA = "0x8DCE68")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000F0D")]
	[Address(RVA = "0x8DCEA8", Offset = "0x8DCEA8", VA = "0x8DCEA8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000F0E")]
	[Address(RVA = "0x8DD02C", Offset = "0x8DD02C", VA = "0x8DD02C")]
	public bool IsVisibleFrom(Renderer renderer, Camera camera)
	{
		return default(bool);
	}

	[Token(Token = "0x6000F0F")]
	[Address(RVA = "0x8DD0A0", Offset = "0x8DD0A0", VA = "0x8DD0A0")]
	public PortalStencilOverlay()
	{
	}
}
[Token(Token = "0x2000200")]
public class CapturePostProcessing : MonoBehaviour
{
	[Token(Token = "0x6000F10")]
	[Address(RVA = "0x8CA1E0", Offset = "0x8CA1E0", VA = "0x8CA1E0")]
	public CapturePostProcessing()
	{
	}
}
[Token(Token = "0x2000201")]
[ExecuteInEditMode]
public class ColourGrading : MonoBehaviour
{
	[Token(Token = "0x200064E")]
	public enum Mode
	{
		[Token(Token = "0x4002817")]
		Blend,
		[Token(Token = "0x4002818")]
		Manual
	}

	[Token(Token = "0x4000C61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float fadeTime;

	[Token(Token = "0x4000C62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Texture2D defaultGrading;

	[Token(Token = "0x4000C63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<Texture2D, Texture3D> tables;

	[Token(Token = "0x4000C64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Texture3D queue;

	[Token(Token = "0x4000C65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float time;

	[Token(Token = "0x4000C66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private Mode _mode;

	[Token(Token = "0x17000148")]
	public Mode mode
	{
		[Token(Token = "0x6000F11")]
		[Address(RVA = "0x7A9830", Offset = "0x7A9830", VA = "0x7A9830")]
		get
		{
			return default(Mode);
		}
		[Token(Token = "0x6000F12")]
		[Address(RVA = "0x7A9838", Offset = "0x7A9838", VA = "0x7A9838")]
		set
		{
		}
	}

	[Token(Token = "0x6000F13")]
	[Address(RVA = "0x7A98FC", Offset = "0x7A98FC", VA = "0x7A98FC")]
	private void Reset()
	{
	}

	[Token(Token = "0x6000F14")]
	[Address(RVA = "0x7A9C58", Offset = "0x7A9C58", VA = "0x7A9C58")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000F15")]
	[Address(RVA = "0x7A9D74", Offset = "0x7A9D74", VA = "0x7A9D74")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F16")]
	[Address(RVA = "0x7A9EE4", Offset = "0x7A9EE4", VA = "0x7A9EE4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000F17")]
	[Address(RVA = "0x7A9A20", Offset = "0x7A9A20", VA = "0x7A9A20")]
	private void CleanUp()
	{
	}

	[Token(Token = "0x6000F18")]
	[Address(RVA = "0x7AA000", Offset = "0x7AA000", VA = "0x7AA000")]
	private void InitialiseColourGrading(Texture2D grading)
	{
	}

	[Token(Token = "0x6000F19")]
	[Address(RVA = "0x7A9BC4", Offset = "0x7A9BC4", VA = "0x7A9BC4")]
	private void CreateDefaultGrading()
	{
	}

	[Token(Token = "0x6000F1A")]
	[Address(RVA = "0x7AA26C", Offset = "0x7AA26C", VA = "0x7AA26C")]
	public void SetColourGrading(Texture2D grading)
	{
	}

	[Token(Token = "0x6000F1B")]
	[Address(RVA = "0x7AA300", Offset = "0x7AA300", VA = "0x7AA300")]
	public void SetManualGradingTextures(Texture2D lut0, Texture2D lut1)
	{
	}

	[Token(Token = "0x6000F1C")]
	[Address(RVA = "0x7AA39C", Offset = "0x7AA39C", VA = "0x7AA39C")]
	public void SetManualGradingBlendFactor(float blend)
	{
	}

	[Token(Token = "0x6000F1D")]
	[Address(RVA = "0x7AA420", Offset = "0x7AA420", VA = "0x7AA420")]
	private void Update()
	{
	}

	[Token(Token = "0x6000F1E")]
	[Address(RVA = "0x7A9870", Offset = "0x7A9870", VA = "0x7A9870")]
	private void SetBlendModeStart()
	{
	}

	[Token(Token = "0x6000F1F")]
	[Address(RVA = "0x7AA0A4", Offset = "0x7AA0A4", VA = "0x7AA0A4")]
	private Texture3D GetGrading3D(Texture2D grading2D)
	{
		return null;
	}

	[Token(Token = "0x6000F20")]
	[Address(RVA = "0x7AA6A8", Offset = "0x7AA6A8", VA = "0x7AA6A8")]
	public ColourGrading()
	{
	}
}
[Token(Token = "0x2000202")]
public class ShowText : MonoBehaviour
{
	[Token(Token = "0x4000C67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string id;

	[Token(Token = "0x4000C68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Text text;

	[Token(Token = "0x6000F21")]
	[Address(RVA = "0x861610", Offset = "0x861610", VA = "0x861610")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000F22")]
	[Address(RVA = "0x8616F0", Offset = "0x8616F0", VA = "0x8616F0")]
	public ShowText()
	{
	}
}
[Token(Token = "0x2000203")]
public class QuestSkybox : MonoBehaviour
{
	[Token(Token = "0x4000C69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Dictionary<string, Material> skyboxes;

	[Token(Token = "0x4000C6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x650648", Offset = "0x650648")]
	private static QuestSkybox <Instance>k__BackingField;

	[Token(Token = "0x4000C6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Renderer renderer;

	[Token(Token = "0x17000149")]
	public static QuestSkybox Instance
	{
		[Token(Token = "0x6000F23")]
		[Address(RVA = "0x9CD7C4", Offset = "0x9CD7C4", VA = "0x9CD7C4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x669F30", Offset = "0x669F30")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000F24")]
		[Address(RVA = "0x9CD814", Offset = "0x9CD814", VA = "0x9CD814")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x669F40", Offset = "0x669F40")]
		private set
		{
		}
	}

	[Token(Token = "0x6000F25")]
	[Address(RVA = "0x9CD868", Offset = "0x9CD868", VA = "0x9CD868")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000F26")]
	[Address(RVA = "0x9CD8F8", Offset = "0x9CD8F8", VA = "0x9CD8F8")]
	public void SetSkybox(string skyboxName, float farClipPlane = 300f)
	{
	}

	[Token(Token = "0x6000F27")]
	[Address(RVA = "0x9CDAD4", Offset = "0x9CDAD4", VA = "0x9CDAD4")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000F28")]
	[Address(RVA = "0x9CDBD8", Offset = "0x9CDBD8", VA = "0x9CDBD8")]
	public void UnloadSkyboxes()
	{
	}

	[Token(Token = "0x6000F29")]
	[Address(RVA = "0x9CDE44", Offset = "0x9CDE44", VA = "0x9CDE44")]
	public QuestSkybox()
	{
	}
}
[Token(Token = "0x2000204")]
public class Sun : MonoBehaviour
{
	[Token(Token = "0x4000C6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x650658", Offset = "0x650658")]
	private static Sun <Instance>k__BackingField;

	[Token(Token = "0x1700014A")]
	public static Sun Instance
	{
		[Token(Token = "0x6000F2A")]
		[Address(RVA = "0x88497C", Offset = "0x88497C", VA = "0x88497C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x669F50", Offset = "0x669F50")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000F2B")]
		[Address(RVA = "0x8849CC", Offset = "0x8849CC", VA = "0x8849CC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x669F60", Offset = "0x669F60")]
		private set
		{
		}
	}

	[Token(Token = "0x6000F2C")]
	[Address(RVA = "0x884A20", Offset = "0x884A20", VA = "0x884A20")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000F2D")]
	[Address(RVA = "0x884A74", Offset = "0x884A74", VA = "0x884A74")]
	public Sun()
	{
	}
}
[Token(Token = "0x2000205")]
public class TorchSphere : MonoBehaviour
{
	[Token(Token = "0x200064F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6442D8", Offset = "0x6442D8")]
	private sealed class <EaseTimeOnEnable>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002819")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400281A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400281B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TorchSphere <>4__this;

		[Token(Token = "0x400281C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <duration>5__2;

		[Token(Token = "0x400281D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <i>5__3;

		[Token(Token = "0x170002C5")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002C8C")]
			[Address(RVA = "0x88A4E0", Offset = "0x88A4E0", VA = "0x88A4E0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002C6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002C8E")]
			[Address(RVA = "0x88A550", Offset = "0x88A550", VA = "0x88A550", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002C89")]
		[Address(RVA = "0x88A368", Offset = "0x88A368", VA = "0x88A368")]
		[DebuggerHidden]
		public <EaseTimeOnEnable>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x6002C8A")]
		[Address(RVA = "0x88A3A4", Offset = "0x88A3A4", VA = "0x88A3A4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002C8B")]
		[Address(RVA = "0x88A3A8", Offset = "0x88A3A8", VA = "0x88A3A8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002C8D")]
		[Address(RVA = "0x88A4E8", Offset = "0x88A4E8", VA = "0x88A4E8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000C6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private LayerMask raycastLayers;

	[Token(Token = "0x4000C6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Light lightToDisable;

	[Token(Token = "0x4000C6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float minDistance;

	[Token(Token = "0x4000C70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float farDistance;

	[Token(Token = "0x4000C71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float easeTime;

	[Token(Token = "0x6000F2E")]
	[Address(RVA = "0x889C34", Offset = "0x889C34", VA = "0x889C34")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000F2F")]
	[Address(RVA = "0x889CD0", Offset = "0x889CD0", VA = "0x889CD0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000F30")]
	[Address(RVA = "0x889D9C", Offset = "0x889D9C", VA = "0x889D9C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000F31")]
	[Address(RVA = "0x889DD0", Offset = "0x889DD0", VA = "0x889DD0")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000F32")]
	[Address(RVA = "0x889D28", Offset = "0x889D28", VA = "0x889D28")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x669F70", Offset = "0x669F70")]
	private IEnumerator EaseTimeOnEnable()
	{
		return null;
	}

	[Token(Token = "0x6000F33")]
	[Address(RVA = "0x88A394", Offset = "0x88A394", VA = "0x88A394")]
	public TorchSphere()
	{
	}
}
[Token(Token = "0x2000206")]
public class TimeGlitchEffect : MonoBehaviour
{
	[Token(Token = "0x6000F34")]
	[Address(RVA = "0x88744C", Offset = "0x88744C", VA = "0x88744C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F35")]
	[Address(RVA = "0x88783C", Offset = "0x88783C", VA = "0x88783C")]
	public TimeGlitchEffect()
	{
	}
}
[Token(Token = "0x2000207")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x63E74C", Offset = "0x63E74C")]
public class EnablePhysicsInProximity : MonoBehaviour
{
	[Token(Token = "0x2000650")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6442E8", Offset = "0x6442E8")]
	private sealed class <CheckProximity>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400281E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400281F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002820")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EnablePhysicsInProximity <>4__this;

		[Token(Token = "0x170002C7")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002C92")]
			[Address(RVA = "0x7BCF28", Offset = "0x7BCF28", VA = "0x7BCF28", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002C8")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002C94")]
			[Address(RVA = "0x7BCF98", Offset = "0x7BCF98", VA = "0x7BCF98", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002C8F")]
		[Address(RVA = "0x7BCAEC", Offset = "0x7BCAEC", VA = "0x7BCAEC")]
		[DebuggerHidden]
		public <CheckProximity>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6002C90")]
		[Address(RVA = "0x7BCC8C", Offset = "0x7BCC8C", VA = "0x7BCC8C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002C91")]
		[Address(RVA = "0x7BCC90", Offset = "0x7BCC90", VA = "0x7BCC90", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002C93")]
		[Address(RVA = "0x7BCF30", Offset = "0x7BCF30", VA = "0x7BCF30", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000C72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float distanceToCheck;

	[Token(Token = "0x4000C73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float checkInterval;

	[Token(Token = "0x4000C74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Vector3 offset;

	[Token(Token = "0x4000C75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Rigidbody rb;

	[Token(Token = "0x4000C76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool physicsEnabled;

	[Token(Token = "0x4000C77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private RandomRotation randomRotation;

	[Token(Token = "0x6000F36")]
	[Address(RVA = "0x7BC9F4", Offset = "0x7BC9F4", VA = "0x7BC9F4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000F37")]
	[Address(RVA = "0x7BCA78", Offset = "0x7BCA78", VA = "0x7BCA78")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x669FD4", Offset = "0x669FD4")]
	private IEnumerator CheckProximity()
	{
		return null;
	}

	[Token(Token = "0x6000F38")]
	[Address(RVA = "0x7BCB18", Offset = "0x7BCB18", VA = "0x7BCB18")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x6000F39")]
	[Address(RVA = "0x7BCC00", Offset = "0x7BCC00", VA = "0x7BCC00")]
	public EnablePhysicsInProximity()
	{
	}
}
[Token(Token = "0x2000208")]
public class EnableTimelineInProximity : MonoBehaviour
{
	[Token(Token = "0x2000651")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6442F8", Offset = "0x6442F8")]
	private sealed class <CheckProximity>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002821")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002822")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002823")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EnableTimelineInProximity <>4__this;

		[Token(Token = "0x170002C9")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002C98")]
			[Address(RVA = "0x7BD790", Offset = "0x7BD790", VA = "0x7BD790", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002CA")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002C9A")]
			[Address(RVA = "0x7BD800", Offset = "0x7BD800", VA = "0x7BD800", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002C95")]
		[Address(RVA = "0x7BD384", Offset = "0x7BD384", VA = "0x7BD384")]
		[DebuggerHidden]
		public <CheckProximity>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6002C96")]
		[Address(RVA = "0x7BD524", Offset = "0x7BD524", VA = "0x7BD524", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002C97")]
		[Address(RVA = "0x7BD528", Offset = "0x7BD528", VA = "0x7BD528", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002C99")]
		[Address(RVA = "0x7BD798", Offset = "0x7BD798", VA = "0x7BD798", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000C78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float distanceToCheck;

	[Token(Token = "0x4000C79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float checkInterval;

	[Token(Token = "0x4000C7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Vector3 offset;

	[Token(Token = "0x4000C7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private PlayableDirector playableDirector;

	[Token(Token = "0x4000C7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool playableDirectorEnabled;

	[Token(Token = "0x6000F3A")]
	[Address(RVA = "0x7BD2A4", Offset = "0x7BD2A4", VA = "0x7BD2A4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000F3B")]
	[Address(RVA = "0x7BD310", Offset = "0x7BD310", VA = "0x7BD310")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x66A038", Offset = "0x66A038")]
	private IEnumerator CheckProximity()
	{
		return null;
	}

	[Token(Token = "0x6000F3C")]
	[Address(RVA = "0x7BD3B0", Offset = "0x7BD3B0", VA = "0x7BD3B0")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x6000F3D")]
	[Address(RVA = "0x7BD498", Offset = "0x7BD498", VA = "0x7BD498")]
	public EnableTimelineInProximity()
	{
	}
}
[Token(Token = "0x2000209")]
public class QuestCullingAsset : TimelineAssetBase<QuestCullingBehaviour>
{
	[Token(Token = "0x4000C7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6506D8", Offset = "0x6506D8")]
	[SerializeField]
	public ExposedReference<QuestOcclusionPortal> _questOcclusionPortal;

	[Token(Token = "0x4000C7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private bool _portalOpen;

	[Token(Token = "0x6000F3E")]
	[Address(RVA = "0x9CC9B0", Offset = "0x9CC9B0", VA = "0x9CC9B0", Slot = "6")]
	public override Playable CreatePlayable(PlayableGraph graph, GameObject owner)
	{
		return default(Playable);
	}

	[Token(Token = "0x6000F3F")]
	[Address(RVA = "0x9CCB08", Offset = "0x9CCB08", VA = "0x9CCB08")]
	public QuestCullingAsset()
	{
	}
}
[Token(Token = "0x200020A")]
public class QuestCullingBehaviour : TimelineBehaviourBase
{
	[Token(Token = "0x4000C7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public QuestOcclusionPortal _questOcclusionPortal;

	[Token(Token = "0x4000C80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool _portalOpen;

	[Token(Token = "0x1700014B")]
	public ExposedReference<QuestOcclusionPortal> questOcclusionPortal
	{
		[Token(Token = "0x6000F40")]
		[Address(RVA = "0x9CCA94", Offset = "0x9CCA94", VA = "0x9CCA94")]
		set
		{
		}
	}

	[Token(Token = "0x6000F41")]
	[Address(RVA = "0x9CCB58", Offset = "0x9CCB58", VA = "0x9CCB58", Slot = "23")]
	public override void Initialize(GameObject owner, TimelineAssetNamed baseAsset)
	{
	}

	[Token(Token = "0x6000F42")]
	[Address(RVA = "0x9CCB60", Offset = "0x9CCB60", VA = "0x9CCB60", Slot = "26")]
	public override void OnBehaviourEnter(Playable playable, FrameData info)
	{
	}

	[Token(Token = "0x6000F43")]
	[Address(RVA = "0x9CD0D0", Offset = "0x9CD0D0", VA = "0x9CD0D0")]
	public QuestCullingBehaviour()
	{
	}
}
[Token(Token = "0x200020B")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x63E7B0", Offset = "0x63E7B0")]
[ExecuteInEditMode]
public class UITightMesh : MonoBehaviour
{
	[Token(Token = "0x6000F44")]
	[Address(RVA = "0x88C12C", Offset = "0x88C12C", VA = "0x88C12C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F45")]
	[Address(RVA = "0x88C198", Offset = "0x88C198", VA = "0x88C198")]
	public UITightMesh()
	{
	}
}
[Token(Token = "0x200020C")]
public class zzTransparencyCaptureExample : MonoBehaviour
{
	[Token(Token = "0x2000652")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x644308", Offset = "0x644308")]
	private sealed class <capture>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002824")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002825")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002826")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public zzTransparencyCaptureExample <>4__this;

		[Token(Token = "0x170002CB")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002C9E")]
			[Address(RVA = "0x14D663C", Offset = "0x14D663C", VA = "0x14D663C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002CC")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002CA0")]
			[Address(RVA = "0x14D66AC", Offset = "0x14D66AC", VA = "0x14D66AC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002C9B")]
		[Address(RVA = "0x14D61AC", Offset = "0x14D61AC", VA = "0x14D61AC")]
		[DebuggerHidden]
		public <capture>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x6002C9C")]
		[Address(RVA = "0x14D64AC", Offset = "0x14D64AC", VA = "0x14D64AC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002C9D")]
		[Address(RVA = "0x14D64B0", Offset = "0x14D64B0", VA = "0x14D64B0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002C9F")]
		[Address(RVA = "0x14D6644", Offset = "0x14D6644", VA = "0x14D6644", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000C81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Texture2D capturedImage;

	[Token(Token = "0x4000C82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform cameraTransform;

	[Token(Token = "0x4000C83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 lastMousePosition;

	[Token(Token = "0x6000F46")]
	[Address(RVA = "0x14D60F8", Offset = "0x14D60F8", VA = "0x14D60F8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F47")]
	[Address(RVA = "0x14D6138", Offset = "0x14D6138", VA = "0x14D6138")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x66A09C", Offset = "0x66A09C")]
	public IEnumerator capture()
	{
		return null;
	}

	[Token(Token = "0x6000F48")]
	[Address(RVA = "0x14D61D8", Offset = "0x14D61D8", VA = "0x14D61D8")]
	public void Update()
	{
	}

	[Token(Token = "0x6000F49")]
	[Address(RVA = "0x14D6288", Offset = "0x14D6288", VA = "0x14D6288")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000F4A")]
	[Address(RVA = "0x14D64A4", Offset = "0x14D64A4", VA = "0x14D64A4")]
	public zzTransparencyCaptureExample()
	{
	}
}
[Token(Token = "0x200020D")]
public class TransparencyCaptureToFile : MonoBehaviour
{
	[Token(Token = "0x2000653")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x644318", Offset = "0x644318")]
	private sealed class <capture>d__0 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002827")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002828")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x170002CD")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002CA4")]
			[Address(RVA = "0x88A6DC", Offset = "0x88A6DC", VA = "0x88A6DC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002CE")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002CA6")]
			[Address(RVA = "0x88A74C", Offset = "0x88A74C", VA = "0x88A74C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002CA1")]
		[Address(RVA = "0x88A5B8", Offset = "0x88A5B8", VA = "0x88A5B8")]
		[DebuggerHidden]
		public <capture>d__0(int <>1__state)
		{
		}

		[Token(Token = "0x6002CA2")]
		[Address(RVA = "0x88A634", Offset = "0x88A634", VA = "0x88A634", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002CA3")]
		[Address(RVA = "0x88A638", Offset = "0x88A638", VA = "0x88A638", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002CA5")]
		[Address(RVA = "0x88A6E4", Offset = "0x88A6E4", VA = "0x88A6E4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x6000F4B")]
	[Address(RVA = "0x88A558", Offset = "0x88A558", VA = "0x88A558")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x66A100", Offset = "0x66A100")]
	public IEnumerator capture()
	{
		return null;
	}

	[Token(Token = "0x6000F4C")]
	[Address(RVA = "0x88A5E4", Offset = "0x88A5E4", VA = "0x88A5E4")]
	public void Update()
	{
	}

	[Token(Token = "0x6000F4D")]
	[Address(RVA = "0x88A62C", Offset = "0x88A62C", VA = "0x88A62C")]
	public TransparencyCaptureToFile()
	{
	}
}
[Token(Token = "0x200020E")]
public class zzTransparencyCapture
{
	[Token(Token = "0x6000F4E")]
	[Address(RVA = "0x14D589C", Offset = "0x14D589C", VA = "0x14D589C")]
	public static Texture2D capture(Rect pRect)
	{
		return null;
	}

	[Token(Token = "0x6000F4F")]
	[Address(RVA = "0x14D5E38", Offset = "0x14D5E38", VA = "0x14D5E38")]
	public static Texture2D captureScreenshot()
	{
		return null;
	}

	[Token(Token = "0x6000F50")]
	[Address(RVA = "0x14D5E98", Offset = "0x14D5E98", VA = "0x14D5E98")]
	public static void captureScreenshot(string pFileName)
	{
	}

	[Token(Token = "0x6000F51")]
	[Address(RVA = "0x14D5DF0", Offset = "0x14D5DF0", VA = "0x14D5DF0")]
	private static Color getColor(Color pColorWhenBlack, Color pColorWhenWhite)
	{
		return default(Color);
	}

	[Token(Token = "0x6000F52")]
	[Address(RVA = "0x14D60E0", Offset = "0x14D60E0", VA = "0x14D60E0")]
	private static float getAlpha(float pColorWhenZero, float pColorWhenOne)
	{
		return default(float);
	}

	[Token(Token = "0x6000F53")]
	[Address(RVA = "0x14D5D08", Offset = "0x14D5D08", VA = "0x14D5D08")]
	private static Texture2D captureView(Rect pRect)
	{
		return null;
	}

	[Token(Token = "0x6000F54")]
	[Address(RVA = "0x14D60F0", Offset = "0x14D60F0", VA = "0x14D60F0")]
	public zzTransparencyCapture()
	{
	}
}
[Token(Token = "0x200020F")]
public class MoveBlock : MonoBehaviour
{
	[Token(Token = "0x4000C84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float moveYAmount;

	[Token(Token = "0x4000C85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float moveSpeed;

	[Token(Token = "0x4000C86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float waitTime;

	[Token(Token = "0x4000C87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float rotateSpeed;

	[Token(Token = "0x4000C88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float startY;

	[Token(Token = "0x4000C89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private bool goingUp;

	[Token(Token = "0x4000C8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float stoppedUntilTime;

	[Token(Token = "0x4000C8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float moveUpAmount;

	[Token(Token = "0x6000F55")]
	[Address(RVA = "0x7F8824", Offset = "0x7F8824", VA = "0x7F8824", Slot = "4")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x6000F56")]
	[Address(RVA = "0x7F88F8", Offset = "0x7F88F8", VA = "0x7F88F8", Slot = "5")]
	protected virtual void Update()
	{
	}

	[Token(Token = "0x6000F57")]
	[Address(RVA = "0x7F8AD0", Offset = "0x7F8AD0", VA = "0x7F8AD0")]
	public MoveBlock()
	{
	}
}
namespace PlayStationVRExample
{
	[Token(Token = "0x2000210")]
	public class VRManager : MonoBehaviour
	{
		[Token(Token = "0x2000654")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x644328", Offset = "0x644328")]
		private sealed class <SetupVR>d__11 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002829")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400282A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x170002CF")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002CAA")]
				[Address(RVA = "0x8D87B8", Offset = "0x8D87B8", VA = "0x8D87B8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002D0")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002CAC")]
				[Address(RVA = "0x8D8828", Offset = "0x8D8828", VA = "0x8D8828", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002CA7")]
			[Address(RVA = "0x8D8514", Offset = "0x8D8514", VA = "0x8D8514")]
			[DebuggerHidden]
			public <SetupVR>d__11(int <>1__state)
			{
			}

			[Token(Token = "0x6002CA8")]
			[Address(RVA = "0x8D8778", Offset = "0x8D8778", VA = "0x8D8778", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002CA9")]
			[Address(RVA = "0x8D877C", Offset = "0x8D877C", VA = "0x8D877C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002CAB")]
			[Address(RVA = "0x8D87C0", Offset = "0x8D87C0", VA = "0x8D87C0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000655")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x644338", Offset = "0x644338")]
		private sealed class <ShutdownVR>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400282B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400282C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400282D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VRManager <>4__this;

			[Token(Token = "0x170002D1")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002CB0")]
				[Address(RVA = "0x8D898C", Offset = "0x8D898C", VA = "0x8D898C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002D2")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002CB2")]
				[Address(RVA = "0x8D89FC", Offset = "0x8D89FC", VA = "0x8D89FC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002CAD")]
			[Address(RVA = "0x8D85E0", Offset = "0x8D85E0", VA = "0x8D85E0")]
			[DebuggerHidden]
			public <ShutdownVR>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x6002CAE")]
			[Address(RVA = "0x8D8830", Offset = "0x8D8830", VA = "0x8D8830", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002CAF")]
			[Address(RVA = "0x8D8834", Offset = "0x8D8834", VA = "0x8D8834", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002CB1")]
			[Address(RVA = "0x8D8994", Offset = "0x8D8994", VA = "0x8D8994", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000656")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x644348", Offset = "0x644348")]
		private sealed class <SetupHmdDevice>d__15 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400282E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400282F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x170002D3")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002CB6")]
				[Address(RVA = "0x8D8700", Offset = "0x8D8700", VA = "0x8D8700", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002D4")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002CB8")]
				[Address(RVA = "0x8D8770", Offset = "0x8D8770", VA = "0x8D8770", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002CB3")]
			[Address(RVA = "0x8D866C", Offset = "0x8D866C", VA = "0x8D866C")]
			[DebuggerHidden]
			public <SetupHmdDevice>d__15(int <>1__state)
			{
			}

			[Token(Token = "0x6002CB4")]
			[Address(RVA = "0x8D86C0", Offset = "0x8D86C0", VA = "0x8D86C0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002CB5")]
			[Address(RVA = "0x8D86C4", Offset = "0x8D86C4", VA = "0x8D86C4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002CB7")]
			[Address(RVA = "0x8D8708", Offset = "0x8D8708", VA = "0x8D8708", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000C8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool showHmdViewOnMonitor;

		[Token(Token = "0x4000C8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static VRManager s_Instance;

		[Token(Token = "0x4000C8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x650734", Offset = "0x650734")]
		private bool <deviceReady>k__BackingField;

		[Token(Token = "0x4000C8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		private bool firstTime;

		[Token(Token = "0x1700014C")]
		public static VRManager instance
		{
			[Token(Token = "0x6000F58")]
			[Address(RVA = "0x8D4AA0", Offset = "0x8D4AA0", VA = "0x8D4AA0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700014D")]
		public bool deviceReady
		{
			[Token(Token = "0x6000F59")]
			[Address(RVA = "0x8D8360", Offset = "0x8D8360", VA = "0x8D8360")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66A164", Offset = "0x66A164")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000F5A")]
			[Address(RVA = "0x8D8368", Offset = "0x8D8368", VA = "0x8D8368")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66A174", Offset = "0x66A174")]
			private set
			{
			}
		}

		[Token(Token = "0x6000F5B")]
		[Address(RVA = "0x8D8374", Offset = "0x8D8374", VA = "0x8D8374")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000F5C")]
		[Address(RVA = "0x8D6418", Offset = "0x8D6418", VA = "0x8D6418")]
		public void BeginVRSetup()
		{
		}

		[Token(Token = "0x6000F5D")]
		[Address(RVA = "0x8D84B4", Offset = "0x8D84B4", VA = "0x8D84B4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x66A184", Offset = "0x66A184")]
		private IEnumerator SetupVR()
		{
			return null;
		}

		[Token(Token = "0x6000F5E")]
		[Address(RVA = "0x8D8540", Offset = "0x8D8540", VA = "0x8D8540")]
		public void BeginShutdownVR()
		{
		}

		[Token(Token = "0x6000F5F")]
		[Address(RVA = "0x8D856C", Offset = "0x8D856C", VA = "0x8D856C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x66A1E8", Offset = "0x66A1E8")]
		private IEnumerator ShutdownVR()
		{
			return null;
		}

		[Token(Token = "0x6000F60")]
		[Address(RVA = "0x8D6574", Offset = "0x8D6574", VA = "0x8D6574")]
		public void SetupHmd()
		{
		}

		[Token(Token = "0x6000F61")]
		[Address(RVA = "0x8D860C", Offset = "0x8D860C", VA = "0x8D860C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x66A24C", Offset = "0x66A24C")]
		public IEnumerator SetupHmdDevice()
		{
			return null;
		}

		[Token(Token = "0x6000F62")]
		[Address(RVA = "0x8D8698", Offset = "0x8D8698", VA = "0x8D8698")]
		public void ToggleHmdViewOnMonitor(bool showOnMonitor)
		{
		}

		[Token(Token = "0x6000F63")]
		[Address(RVA = "0x8D4C2C", Offset = "0x8D4C2C", VA = "0x8D4C2C")]
		public void ToggleHmdViewOnMonitor()
		{
		}

		[Token(Token = "0x6000F64")]
		[Address(RVA = "0x8D4D78", Offset = "0x8D4D78", VA = "0x8D4D78")]
		public void ChangeRenderScale(float scale)
		{
		}

		[Token(Token = "0x6000F65")]
		[Address(RVA = "0x8D86AC", Offset = "0x8D86AC", VA = "0x8D86AC")]
		public VRManager()
		{
		}
	}
	[Token(Token = "0x2000211")]
	public class VRDeviceNames
	{
		[Token(Token = "0x4000C90")]
		public const string None = "None";

		[Token(Token = "0x4000C91")]
		public const string Unknown = "Unknown";

		[Token(Token = "0x4000C92")]
		public const string Oculus = "Oculus";

		[Token(Token = "0x4000C93")]
		public const string playStationVR = "PlayStationVR";

		[Token(Token = "0x6000F66")]
		[Address(RVA = "0x8D8358", Offset = "0x8D8358", VA = "0x8D8358")]
		public VRDeviceNames()
		{
		}
	}
	[Token(Token = "0x2000212")]
	public class VRPostReprojection : MonoBehaviour
	{
		[Token(Token = "0x4000C94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject busySpinner;

		[Token(Token = "0x6000F67")]
		[Address(RVA = "0x8D8C9C", Offset = "0x8D8C9C", VA = "0x8D8C9C")]
		public VRPostReprojection()
		{
		}
	}
	[Token(Token = "0x2000213")]
	public class DisableAfterDelay : MonoBehaviour
	{
		[Token(Token = "0x2000657")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x644358", Offset = "0x644358")]
		private sealed class <Start>d__1 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002830")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002831")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002832")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public DisableAfterDelay <>4__this;

			[Token(Token = "0x170002D5")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002CBC")]
				[Address(RVA = "0x8D3048", Offset = "0x8D3048", VA = "0x8D3048", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002D6")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002CBE")]
				[Address(RVA = "0x8D30B8", Offset = "0x8D30B8", VA = "0x8D30B8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002CB9")]
			[Address(RVA = "0x8D2F24", Offset = "0x8D2F24", VA = "0x8D2F24")]
			[DebuggerHidden]
			public <Start>d__1(int <>1__state)
			{
			}

			[Token(Token = "0x6002CBA")]
			[Address(RVA = "0x8D2F60", Offset = "0x8D2F60", VA = "0x8D2F60", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002CBB")]
			[Address(RVA = "0x8D2F64", Offset = "0x8D2F64", VA = "0x8D2F64", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002CBD")]
			[Address(RVA = "0x8D3050", Offset = "0x8D3050", VA = "0x8D3050", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000C95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float delay;

		[Token(Token = "0x6000F68")]
		[Address(RVA = "0x8D2EB0", Offset = "0x8D2EB0", VA = "0x8D2EB0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x66A2B0", Offset = "0x66A2B0")]
		private IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x6000F69")]
		[Address(RVA = "0x8D2F50", Offset = "0x8D2F50", VA = "0x8D2F50")]
		public DisableAfterDelay()
		{
		}
	}
	[Token(Token = "0x2000214")]
	public class InstructionsManager : MonoBehaviour
	{
		[Token(Token = "0x2000658")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x644368", Offset = "0x644368")]
		private sealed class <BeginGameCoroutine>d__6 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002833")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002834")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002835")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public InstructionsManager <>4__this;

			[Token(Token = "0x170002D7")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002CC2")]
				[Address(RVA = "0x8D417C", Offset = "0x8D417C", VA = "0x8D417C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002D8")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002CC4")]
				[Address(RVA = "0x8D41EC", Offset = "0x8D41EC", VA = "0x8D41EC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002CBF")]
			[Address(RVA = "0x8D3E00", Offset = "0x8D3E00", VA = "0x8D3E00")]
			[DebuggerHidden]
			public <BeginGameCoroutine>d__6(int <>1__state)
			{
			}

			[Token(Token = "0x6002CC0")]
			[Address(RVA = "0x8D3E3C", Offset = "0x8D3E3C", VA = "0x8D3E3C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002CC1")]
			[Address(RVA = "0x8D3E40", Offset = "0x8D3E40", VA = "0x8D3E40", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002CC3")]
			[Address(RVA = "0x8D4184", Offset = "0x8D4184", VA = "0x8D4184", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000C96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public CanvasGroup instructionsCanvasGroup;

		[Token(Token = "0x4000C97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float fadeSpeed;

		[Token(Token = "0x4000C98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private bool m_HasStarted;

		[Token(Token = "0x4000C99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private WeaponController[] m_WeaponControls;

		[Token(Token = "0x6000F6A")]
		[Address(RVA = "0x8D3CCC", Offset = "0x8D3CCC", VA = "0x8D3CCC")]
		private void Start()
		{
		}

		[Token(Token = "0x6000F6B")]
		[Address(RVA = "0x8D3D40", Offset = "0x8D3D40", VA = "0x8D3D40")]
		public void BeginGame()
		{
		}

		[Token(Token = "0x6000F6C")]
		[Address(RVA = "0x8D3D8C", Offset = "0x8D3D8C", VA = "0x8D3D8C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x66A314", Offset = "0x66A314")]
		private IEnumerator BeginGameCoroutine()
		{
			return null;
		}

		[Token(Token = "0x6000F6D")]
		[Address(RVA = "0x8D3E2C", Offset = "0x8D3E2C", VA = "0x8D3E2C")]
		public InstructionsManager()
		{
		}
	}
	[Token(Token = "0x2000215")]
	public class LookAtTarget : MonoBehaviour
	{
		[Token(Token = "0x4000C9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform lookAtTarget;

		[Token(Token = "0x6000F6E")]
		[Address(RVA = "0x8D43DC", Offset = "0x8D43DC", VA = "0x8D43DC")]
		private void Start()
		{
		}

		[Token(Token = "0x6000F6F")]
		[Address(RVA = "0x8D4474", Offset = "0x8D4474", VA = "0x8D4474")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000F70")]
		[Address(RVA = "0x8D45B8", Offset = "0x8D45B8", VA = "0x8D45B8")]
		public LookAtTarget()
		{
		}
	}
	[Token(Token = "0x2000216")]
	public class MainMenuManager : MonoBehaviour
	{
		[Token(Token = "0x4000C9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Text ds4StatusText;

		[Token(Token = "0x4000C9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Slider ds4Slider;

		[Token(Token = "0x4000C9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Text moveStatusText;

		[Token(Token = "0x4000C9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Slider moveSlider;

		[Token(Token = "0x4000C9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Text aimStatusText;

		[Token(Token = "0x4000CA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Slider aimSlider;

		[Token(Token = "0x4000CA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Text renderScaleText;

		[Token(Token = "0x4000CA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Slider renderScaleSlider;

		[Token(Token = "0x4000CA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Text socialScreenText;

		[Token(Token = "0x4000CA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Slider socialScreenSlider;

		[Token(Token = "0x4000CA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Text minOutputColorText;

		[Token(Token = "0x4000CA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Slider minOutputColorSlider;

		[Token(Token = "0x6000F71")]
		[Address(RVA = "0x8D45C0", Offset = "0x8D45C0", VA = "0x8D45C0")]
		private void Start()
		{
		}

		[Token(Token = "0x6000F72")]
		[Address(RVA = "0x8D46D4", Offset = "0x8D46D4", VA = "0x8D46D4")]
		private void Update()
		{
		}

		[Token(Token = "0x6000F73")]
		[Address(RVA = "0x8D46D8", Offset = "0x8D46D8", VA = "0x8D46D8")]
		private void DualShock4Check()
		{
		}

		[Token(Token = "0x6000F74")]
		[Address(RVA = "0x8D46DC", Offset = "0x8D46DC", VA = "0x8D46DC")]
		private void MoveCheck()
		{
		}

		[Token(Token = "0x6000F75")]
		[Address(RVA = "0x8D47A4", Offset = "0x8D47A4", VA = "0x8D47A4")]
		private void AimCheck()
		{
		}

		[Token(Token = "0x6000F76")]
		[Address(RVA = "0x8D47A8", Offset = "0x8D47A8", VA = "0x8D47A8")]
		public void GoToDualShock4Scene()
		{
		}

		[Token(Token = "0x6000F77")]
		[Address(RVA = "0x8D4894", Offset = "0x8D4894", VA = "0x8D4894")]
		public void GoToMoveScene()
		{
		}

		[Token(Token = "0x6000F78")]
		[Address(RVA = "0x8D491C", Offset = "0x8D491C", VA = "0x8D491C")]
		public void GoToAimScene()
		{
		}

		[Token(Token = "0x6000F79")]
		[Address(RVA = "0x8D49A4", Offset = "0x8D49A4", VA = "0x8D49A4")]
		public void OptionsToggleShowHmdView()
		{
		}

		[Token(Token = "0x6000F7A")]
		[Address(RVA = "0x8D4C4C", Offset = "0x8D4C4C", VA = "0x8D4C4C")]
		public void SwitchRenderScale()
		{
		}

		[Token(Token = "0x6000F7B")]
		[Address(RVA = "0x8D4D80", Offset = "0x8D4D80", VA = "0x8D4D80")]
		private void OptionsToggleMinimumOutputColor()
		{
		}

		[Token(Token = "0x6000F7C")]
		[Address(RVA = "0x8D4D84", Offset = "0x8D4D84", VA = "0x8D4D84")]
		public MainMenuManager()
		{
		}
	}
	[Token(Token = "0x2000217")]
	public class SceneSwitcher : MonoBehaviour
	{
		[Token(Token = "0x2000659")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x644378", Offset = "0x644378")]
		private sealed class <Start>d__2 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002836")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002837")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002838")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SceneSwitcher <>4__this;

			[Token(Token = "0x170002D9")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002CC8")]
				[Address(RVA = "0x8D5498", Offset = "0x8D5498", VA = "0x8D5498", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002DA")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002CCA")]
				[Address(RVA = "0x8D5508", Offset = "0x8D5508", VA = "0x8D5508", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002CC5")]
			[Address(RVA = "0x8D4E00", Offset = "0x8D4E00", VA = "0x8D4E00")]
			[DebuggerHidden]
			public <Start>d__2(int <>1__state)
			{
			}

			[Token(Token = "0x6002CC6")]
			[Address(RVA = "0x8D5300", Offset = "0x8D5300", VA = "0x8D5300", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002CC7")]
			[Address(RVA = "0x8D5304", Offset = "0x8D5304", VA = "0x8D5304", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002CC9")]
			[Address(RVA = "0x8D54A0", Offset = "0x8D54A0", VA = "0x8D54A0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200065A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x644388", Offset = "0x644388")]
		private sealed class <FadeDownRoutine>d__5 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002839")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400283A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400283B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SceneSwitcher <>4__this;

			[Token(Token = "0x170002DB")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002CCE")]
				[Address(RVA = "0x8D5288", Offset = "0x8D5288", VA = "0x8D5288", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002DC")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002CD0")]
				[Address(RVA = "0x8D52F8", Offset = "0x8D52F8", VA = "0x8D52F8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002CCB")]
			[Address(RVA = "0x8D4F20", Offset = "0x8D4F20", VA = "0x8D4F20")]
			[DebuggerHidden]
			public <FadeDownRoutine>d__5(int <>1__state)
			{
			}

			[Token(Token = "0x6002CCC")]
			[Address(RVA = "0x8D50E4", Offset = "0x8D50E4", VA = "0x8D50E4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002CCD")]
			[Address(RVA = "0x8D50E8", Offset = "0x8D50E8", VA = "0x8D50E8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002CCF")]
			[Address(RVA = "0x8D5290", Offset = "0x8D5290", VA = "0x8D5290", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200065B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x644398", Offset = "0x644398")]
		private sealed class <SwitchToSceneRoutine>d__6 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400283C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400283D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400283E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SceneSwitcher <>4__this;

			[Token(Token = "0x400283F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public int sceneIndex;

			[Token(Token = "0x170002DD")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002CD4")]
				[Address(RVA = "0x8D56F8", Offset = "0x8D56F8", VA = "0x8D56F8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002DE")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002CD6")]
				[Address(RVA = "0x8D5768", Offset = "0x8D5768", VA = "0x8D5768", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002CD1")]
			[Address(RVA = "0x8D4FE4", Offset = "0x8D4FE4", VA = "0x8D4FE4")]
			[DebuggerHidden]
			public <SwitchToSceneRoutine>d__6(int <>1__state)
			{
			}

			[Token(Token = "0x6002CD2")]
			[Address(RVA = "0x8D5510", Offset = "0x8D5510", VA = "0x8D5510", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002CD3")]
			[Address(RVA = "0x8D5514", Offset = "0x8D5514", VA = "0x8D5514", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002CD5")]
			[Address(RVA = "0x8D5700", Offset = "0x8D5700", VA = "0x8D5700", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200065C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6443A8", Offset = "0x6443A8")]
		private sealed class <SwitchToSceneRoutine>d__7 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002840")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002841")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002842")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SceneSwitcher <>4__this;

			[Token(Token = "0x4002843")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string sceneName;

			[Token(Token = "0x170002DF")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002CDA")]
				[Address(RVA = "0x8D5958", Offset = "0x8D5958", VA = "0x8D5958", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002E0")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002CDC")]
				[Address(RVA = "0x8D59C8", Offset = "0x8D59C8", VA = "0x8D59C8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002CD7")]
			[Address(RVA = "0x8D50A8", Offset = "0x8D50A8", VA = "0x8D50A8")]
			[DebuggerHidden]
			public <SwitchToSceneRoutine>d__7(int <>1__state)
			{
			}

			[Token(Token = "0x6002CD8")]
			[Address(RVA = "0x8D5770", Offset = "0x8D5770", VA = "0x8D5770", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002CD9")]
			[Address(RVA = "0x8D5774", Offset = "0x8D5774", VA = "0x8D5774", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002CDB")]
			[Address(RVA = "0x8D5960", Offset = "0x8D5960", VA = "0x8D5960", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000CA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public CanvasGroup canvasGroup;

		[Token(Token = "0x4000CA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float fadeSpeed;

		[Token(Token = "0x6000F7D")]
		[Address(RVA = "0x8D4D8C", Offset = "0x8D4D8C", VA = "0x8D4D8C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x66A378", Offset = "0x66A378")]
		private IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x6000F7E")]
		[Address(RVA = "0x8D4E2C", Offset = "0x8D4E2C", VA = "0x8D4E2C")]
		public void SwitchToScene(int sceneIndex)
		{
		}

		[Token(Token = "0x6000F7F")]
		[Address(RVA = "0x8D4830", Offset = "0x8D4830", VA = "0x8D4830")]
		public void SwitchToScene(string sceneName)
		{
		}

		[Token(Token = "0x6000F80")]
		[Address(RVA = "0x8D4EAC", Offset = "0x8D4EAC", VA = "0x8D4EAC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x66A3DC", Offset = "0x66A3DC")]
		private IEnumerator FadeDownRoutine()
		{
			return null;
		}

		[Token(Token = "0x6000F81")]
		[Address(RVA = "0x8D4F4C", Offset = "0x8D4F4C", VA = "0x8D4F4C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x66A440", Offset = "0x66A440")]
		private IEnumerator SwitchToSceneRoutine(int sceneIndex)
		{
			return null;
		}

		[Token(Token = "0x6000F82")]
		[Address(RVA = "0x8D5010", Offset = "0x8D5010", VA = "0x8D5010")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x66A4A4", Offset = "0x66A4A4")]
		private IEnumerator SwitchToSceneRoutine(string sceneName)
		{
			return null;
		}

		[Token(Token = "0x6000F83")]
		[Address(RVA = "0x8D50D4", Offset = "0x8D50D4", VA = "0x8D50D4")]
		public SceneSwitcher()
		{
		}
	}
	[Token(Token = "0x2000218")]
	public class ScoreManager : MonoBehaviour
	{
		[Token(Token = "0x200065D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6443B8", Offset = "0x6443B8")]
		private sealed class <EndTimer>d__18 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002844")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002845")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002846")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ScoreManager <>4__this;

			[Token(Token = "0x170002E1")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002CE0")]
				[Address(RVA = "0x8D62CC", Offset = "0x8D62CC", VA = "0x8D62CC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002E2")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002CE2")]
				[Address(RVA = "0x8D633C", Offset = "0x8D633C", VA = "0x8D633C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002CDD")]
			[Address(RVA = "0x8D5ED0", Offset = "0x8D5ED0", VA = "0x8D5ED0")]
			[DebuggerHidden]
			public <EndTimer>d__18(int <>1__state)
			{
			}

			[Token(Token = "0x6002CDE")]
			[Address(RVA = "0x8D6090", Offset = "0x8D6090", VA = "0x8D6090", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002CDF")]
			[Address(RVA = "0x8D6094", Offset = "0x8D6094", VA = "0x8D6094", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002CE1")]
			[Address(RVA = "0x8D62D4", Offset = "0x8D62D4", VA = "0x8D62D4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000CA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Text timerText;

		[Token(Token = "0x4000CAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Image timerDisplay;

		[Token(Token = "0x4000CAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Text scoreText;

		[Token(Token = "0x4000CAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Text accuracyText;

		[Token(Token = "0x4000CAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Text highScoreText;

		[Token(Token = "0x4000CAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float totalTime;

		[Token(Token = "0x4000CAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public int scoreValue;

		[Token(Token = "0x4000CB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int m_TheScore;

		[Token(Token = "0x4000CB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int s_HighScore;

		[Token(Token = "0x4000CB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float m_Accuracy;

		[Token(Token = "0x4000CB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int m_RollingScore;

		[Token(Token = "0x4000CB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float m_CurrentTime;

		[Token(Token = "0x4000CB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool m_TimerIsRunning;

		[Token(Token = "0x4000CB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private TargetsManager m_TargetsManager;

		[Token(Token = "0x4000CB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private WeaponController[] m_WeaponControls;

		[Token(Token = "0x6000F84")]
		[Address(RVA = "0x8D59D0", Offset = "0x8D59D0", VA = "0x8D59D0")]
		private void Start()
		{
		}

		[Token(Token = "0x6000F85")]
		[Address(RVA = "0x8D5B88", Offset = "0x8D5B88", VA = "0x8D5B88")]
		private void Update()
		{
		}

		[Token(Token = "0x6000F86")]
		[Address(RVA = "0x8D5C50", Offset = "0x8D5C50", VA = "0x8D5C50")]
		private void Timer()
		{
		}

		[Token(Token = "0x6000F87")]
		[Address(RVA = "0x8D5BDC", Offset = "0x8D5BDC", VA = "0x8D5BDC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x66A508", Offset = "0x66A508")]
		private IEnumerator EndTimer()
		{
			return null;
		}

		[Token(Token = "0x6000F88")]
		[Address(RVA = "0x8D5D24", Offset = "0x8D5D24", VA = "0x8D5D24")]
		private void UpdateScoreDisplay()
		{
		}

		[Token(Token = "0x6000F89")]
		[Address(RVA = "0x8D4164", Offset = "0x8D4164", VA = "0x8D4164")]
		public void StartTimer()
		{
		}

		[Token(Token = "0x6000F8A")]
		[Address(RVA = "0x8D5EFC", Offset = "0x8D5EFC", VA = "0x8D5EFC")]
		private void CalculateAccuracy()
		{
		}

		[Token(Token = "0x6000F8B")]
		[Address(RVA = "0x8D5FD0", Offset = "0x8D5FD0", VA = "0x8D5FD0")]
		public void IncreaseScore()
		{
		}

		[Token(Token = "0x6000F8C")]
		[Address(RVA = "0x8D5FE0", Offset = "0x8D5FE0", VA = "0x8D5FE0")]
		public void Quit()
		{
		}

		[Token(Token = "0x6000F8D")]
		[Address(RVA = "0x8D6070", Offset = "0x8D6070", VA = "0x8D6070")]
		public ScoreManager()
		{
		}
	}
	[Token(Token = "0x2000219")]
	public class SetupManager : MonoBehaviour
	{
		[Token(Token = "0x4000CB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Animator m_StateMachine;

		[Token(Token = "0x6000F8F")]
		[Address(RVA = "0x8D6344", Offset = "0x8D6344", VA = "0x8D6344")]
		private void Start()
		{
		}

		[Token(Token = "0x6000F90")]
		[Address(RVA = "0x8D6444", Offset = "0x8D6444", VA = "0x8D6444")]
		private void Update()
		{
		}

		[Token(Token = "0x6000F91")]
		[Address(RVA = "0x8D65A0", Offset = "0x8D65A0", VA = "0x8D65A0")]
		public void FinishedUIInteraction()
		{
		}

		[Token(Token = "0x6000F92")]
		[Address(RVA = "0x8D6604", Offset = "0x8D6604", VA = "0x8D6604")]
		public void ProgressToMainMenu()
		{
		}

		[Token(Token = "0x6000F93")]
		[Address(RVA = "0x8D668C", Offset = "0x8D668C", VA = "0x8D668C")]
		public SetupManager()
		{
		}
	}
	[Token(Token = "0x200021A")]
	public class Spinner : MonoBehaviour
	{
		[Token(Token = "0x4000CB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool local;

		[Token(Token = "0x4000CBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool allowManual;

		[Token(Token = "0x4000CBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		public bool allowAutomatic;

		[Token(Token = "0x4000CBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
		public bool lockZ;

		[Token(Token = "0x4000CBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float autoTimer;

		[Token(Token = "0x4000CBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 spinDirection;

		[Token(Token = "0x4000CBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float speed;

		[Token(Token = "0x4000CC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float m_GoAutomaticTime;

		[Token(Token = "0x4000CC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Vector3 m_AutoSpinDirection;

		[Token(Token = "0x6000F94")]
		[Address(RVA = "0x8D6694", Offset = "0x8D6694", VA = "0x8D6694")]
		private void Start()
		{
		}

		[Token(Token = "0x6000F95")]
		[Address(RVA = "0x8D66A8", Offset = "0x8D66A8", VA = "0x8D66A8")]
		private void Update()
		{
		}

		[Token(Token = "0x6000F96")]
		[Address(RVA = "0x8D67D0", Offset = "0x8D67D0", VA = "0x8D67D0")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6000F97")]
		[Address(RVA = "0x8D6AB0", Offset = "0x8D6AB0", VA = "0x8D6AB0")]
		public Spinner()
		{
		}
	}
	[Token(Token = "0x200021B")]
	public class TargetObject : MonoBehaviour
	{
		[Token(Token = "0x4000CC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject explosionEffect;

		[Token(Token = "0x4000CC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject solidTarget;

		[Token(Token = "0x4000CC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject brokenTarget;

		[Token(Token = "0x4000CC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AudioClip audioClipSpawned;

		[Token(Token = "0x4000CC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public AudioClip audioClipHit;

		[Token(Token = "0x4000CC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float destructionForce;

		[Token(Token = "0x4000CC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float debisDestroyDelay;

		[Token(Token = "0x4000CC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private AudioSource m_AudioPlayer;

		[Token(Token = "0x6000F98")]
		[Address(RVA = "0x8D6B48", Offset = "0x8D6B48", VA = "0x8D6B48")]
		private void Start()
		{
		}

		[Token(Token = "0x6000F99")]
		[Address(RVA = "0x8D6C6C", Offset = "0x8D6C6C", VA = "0x8D6C6C")]
		public void DestroyTarget()
		{
		}

		[Token(Token = "0x6000F9A")]
		[Address(RVA = "0x8D7290", Offset = "0x8D7290", VA = "0x8D7290")]
		public TargetObject()
		{
		}
	}
	[Token(Token = "0x200021C")]
	public class TargetsManager : MonoBehaviour
	{
		[Token(Token = "0x200065E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6443C8", Offset = "0x6443C8")]
		private sealed class <SpawnTarget>d__10 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002847")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002848")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002849")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TargetsManager <>4__this;

			[Token(Token = "0x170002E3")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002CE6")]
				[Address(RVA = "0x8D77E0", Offset = "0x8D77E0", VA = "0x8D77E0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002E4")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002CE8")]
				[Address(RVA = "0x8D7850", Offset = "0x8D7850", VA = "0x8D7850", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002CE3")]
			[Address(RVA = "0x8D746C", Offset = "0x8D746C", VA = "0x8D746C")]
			[DebuggerHidden]
			public <SpawnTarget>d__10(int <>1__state)
			{
			}

			[Token(Token = "0x6002CE4")]
			[Address(RVA = "0x8D76B4", Offset = "0x8D76B4", VA = "0x8D76B4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002CE5")]
			[Address(RVA = "0x8D76B8", Offset = "0x8D76B8", VA = "0x8D76B8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002CE7")]
			[Address(RVA = "0x8D77E8", Offset = "0x8D77E8", VA = "0x8D77E8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000CCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float spawnRateMin;

		[Token(Token = "0x4000CCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float spawnRateMax;

		[Token(Token = "0x4000CCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject targetPrefab;

		[Token(Token = "0x4000CCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform spawnPoint;

		[Token(Token = "0x4000CCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector3 spawnArea;

		[Token(Token = "0x4000CCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public int maxSpawnedObjects;

		[Token(Token = "0x4000CD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool m_AllowSpawning;

		[Token(Token = "0x6000F9B")]
		[Address(RVA = "0x8D4130", Offset = "0x8D4130", VA = "0x8D4130")]
		public void BeginSpawning()
		{
		}

		[Token(Token = "0x6000F9C")]
		[Address(RVA = "0x8D62C0", Offset = "0x8D62C0", VA = "0x8D62C0")]
		public void StopSpawning()
		{
		}

		[Token(Token = "0x6000F9D")]
		[Address(RVA = "0x8D7238", Offset = "0x8D7238", VA = "0x8D7238")]
		public void SpawnTargetImmediately()
		{
		}

		[Token(Token = "0x6000F9E")]
		[Address(RVA = "0x8D72A4", Offset = "0x8D72A4", VA = "0x8D72A4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x66A56C", Offset = "0x66A56C")]
		private IEnumerator SpawnTarget()
		{
			return null;
		}

		[Token(Token = "0x6000F9F")]
		[Address(RVA = "0x8D7318", Offset = "0x8D7318", VA = "0x8D7318")]
		private void Spawn()
		{
		}

		[Token(Token = "0x6000FA0")]
		[Address(RVA = "0x8D75D4", Offset = "0x8D75D4", VA = "0x8D75D4")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x6000FA1")]
		[Address(RVA = "0x8D7498", Offset = "0x8D7498", VA = "0x8D7498")]
		private Vector3 RandomSpawnPoint()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000FA2")]
		[Address(RVA = "0x8D7628", Offset = "0x8D7628", VA = "0x8D7628")]
		public TargetsManager()
		{
		}
	}
	[Token(Token = "0x200021D")]
	public class InputVisualiser : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200065F")]
		public class Controller
		{
			[Token(Token = "0x400284A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Transform buttonCross;

			[Token(Token = "0x400284B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Transform buttonCircle;

			[Token(Token = "0x400284C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Transform buttonSquare;

			[Token(Token = "0x400284D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Transform buttonTriangle;

			[Token(Token = "0x400284E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Transform buttonOptions;

			[Token(Token = "0x400284F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Transform buttonTouchpad;

			[Token(Token = "0x4002850")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public Transform dpadDown;

			[Token(Token = "0x4002851")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public Transform dpadRight;

			[Token(Token = "0x4002852")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public Transform dpadUp;

			[Token(Token = "0x4002853")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public Transform dpadLeft;

			[Token(Token = "0x4002854")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public Transform buttonL1;

			[Token(Token = "0x4002855")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public Transform buttonR1;

			[Token(Token = "0x4002856")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			public Transform buttonR12;

			[Token(Token = "0x4002857")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			public Transform triggerL2;

			[Token(Token = "0x4002858")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			public Transform triggerR2;

			[Token(Token = "0x4002859")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			public Transform thumbstickL3;

			[Token(Token = "0x400285A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			public Transform thumbstickR3;

			[Token(Token = "0x6002CE9")]
			[Address(RVA = "0x8D3CC4", Offset = "0x8D3CC4", VA = "0x8D3CC4")]
			public Controller()
			{
			}
		}

		[Token(Token = "0x4000CD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Controller controller;

		[Token(Token = "0x4000CD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float buttonPressDistance;

		[Token(Token = "0x4000CD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float triggerPullAngle;

		[Token(Token = "0x4000CD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float thumbstickAngle;

		[Token(Token = "0x6000FA3")]
		[Address(RVA = "0x8D30C0", Offset = "0x8D30C0", VA = "0x8D30C0")]
		private void Update()
		{
		}

		[Token(Token = "0x6000FA4")]
		[Address(RVA = "0x8D3CBC", Offset = "0x8D3CBC", VA = "0x8D3CBC")]
		public InputVisualiser()
		{
		}
	}
	[Token(Token = "0x200021E")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x63E824", Offset = "0x63E824")]
	public class LaserPointer : MonoBehaviour
	{
		[Token(Token = "0x4000CD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private LineRenderer m_Line;

		[Token(Token = "0x4000CD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private RaycastHit m_Hit;

		[Token(Token = "0x6000FA5")]
		[Address(RVA = "0x8D41F4", Offset = "0x8D41F4", VA = "0x8D41F4")]
		private void Start()
		{
		}

		[Token(Token = "0x6000FA6")]
		[Address(RVA = "0x8D424C", Offset = "0x8D424C", VA = "0x8D424C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000FA7")]
		[Address(RVA = "0x8D43D4", Offset = "0x8D43D4", VA = "0x8D43D4")]
		public LaserPointer()
		{
		}
	}
	[Token(Token = "0x200021F")]
	public class WeaponController : MonoBehaviour
	{
		[Token(Token = "0x2000660")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6443D8", Offset = "0x6443D8")]
		private sealed class <Vibrate>d__17 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400285B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400285C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x170002E5")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002CED")]
				[Address(RVA = "0x8D99AC", Offset = "0x8D99AC", VA = "0x8D99AC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002E6")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002CEF")]
				[Address(RVA = "0x8D9A1C", Offset = "0x8D9A1C", VA = "0x8D9A1C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002CEA")]
			[Address(RVA = "0x8D98D4", Offset = "0x8D98D4", VA = "0x8D98D4")]
			[DebuggerHidden]
			public <Vibrate>d__17(int <>1__state)
			{
			}

			[Token(Token = "0x6002CEB")]
			[Address(RVA = "0x8D9910", Offset = "0x8D9910", VA = "0x8D9910", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002CEC")]
			[Address(RVA = "0x8D9914", Offset = "0x8D9914", VA = "0x8D9914", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002CEE")]
			[Address(RVA = "0x8D99B4", Offset = "0x8D99B4", VA = "0x8D99B4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000CD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float fireRate;

		[Token(Token = "0x4000CD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ParticleSystem shotEmitter;

		[Token(Token = "0x4000CD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool isMoveController;

		[Token(Token = "0x4000CDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		public bool isSecondaryMoveController;

		[Token(Token = "0x4000CDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
		public bool isAimController;

		[Token(Token = "0x4000CDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AudioSource shotSound;

		[Token(Token = "0x4000CDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public AudioSource missSound;

		[Token(Token = "0x4000CDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private LaserPointer m_LaserPointer;

		[Token(Token = "0x4000CDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private RaycastHit m_Hit;

		[Token(Token = "0x4000CE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private float m_LastShotTime;

		[Token(Token = "0x4000CE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private bool m_CanShoot;

		[Token(Token = "0x4000CE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
		private bool m_HasShootInput;

		[Token(Token = "0x4000CE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[HideInInspector]
		public int shotsFired;

		[Token(Token = "0x6000FA8")]
		[Address(RVA = "0x8D9524", Offset = "0x8D9524", VA = "0x8D9524")]
		private void Start()
		{
		}

		[Token(Token = "0x6000FA9")]
		[Address(RVA = "0x8D95A8", Offset = "0x8D95A8", VA = "0x8D95A8")]
		private void Update()
		{
		}

		[Token(Token = "0x6000FAA")]
		[Address(RVA = "0x8D9608", Offset = "0x8D9608", VA = "0x8D9608")]
		private bool CheckForInput()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FAB")]
		[Address(RVA = "0x8D9654", Offset = "0x8D9654", VA = "0x8D9654")]
		private void Fire()
		{
		}

		[Token(Token = "0x6000FAC")]
		[Address(RVA = "0x8D9874", Offset = "0x8D9874", VA = "0x8D9874")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x66A5D0", Offset = "0x66A5D0")]
		private IEnumerator Vibrate()
		{
			return null;
		}

		[Token(Token = "0x6000FAD")]
		[Address(RVA = "0x8D40D8", Offset = "0x8D40D8", VA = "0x8D40D8")]
		public void WeaponCanShoot(bool shootBool)
		{
		}

		[Token(Token = "0x6000FAE")]
		[Address(RVA = "0x8D9900", Offset = "0x8D9900", VA = "0x8D9900")]
		public WeaponController()
		{
		}
	}
	[Token(Token = "0x2000220")]
	public class TrackedPlayStationDevices : MonoBehaviour
	{
		[Token(Token = "0x2000661")]
		public enum TrackedDevicesType
		{
			[Token(Token = "0x400285E")]
			DualShock4 = 1,
			[Token(Token = "0x400285F")]
			Aim = 2,
			[Token(Token = "0x4002860")]
			Move = 4
		}

		[Serializable]
		[Token(Token = "0x2000662")]
		public class TrackedDevice
		{
			[Token(Token = "0x4002861")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int handle;

			[Token(Token = "0x4002862")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Transform transform;

			[Token(Token = "0x4002863")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Renderer light;

			[Token(Token = "0x4002864")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Vector3 position;

			[Token(Token = "0x4002865")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public Quaternion orientation;

			[Token(Token = "0x6002CF0")]
			[Address(RVA = "0x8D82A8", Offset = "0x8D82A8", VA = "0x8D82A8")]
			public TrackedDevice()
			{
			}
		}

		[Token(Token = "0x2000663")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6443E8", Offset = "0x6443E8")]
		private sealed class <Start>d__7 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002866")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002867")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002868")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TrackedPlayStationDevices <>4__this;

			[Token(Token = "0x170002E7")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002CF4")]
				[Address(RVA = "0x8D8230", Offset = "0x8D8230", VA = "0x8D8230", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002E8")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002CF6")]
				[Address(RVA = "0x8D82A0", Offset = "0x8D82A0", VA = "0x8D82A0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002CF1")]
			[Address(RVA = "0x8D78CC", Offset = "0x8D78CC", VA = "0x8D78CC")]
			[DebuggerHidden]
			public <Start>d__7(int <>1__state)
			{
			}

			[Token(Token = "0x6002CF2")]
			[Address(RVA = "0x8D7EA8", Offset = "0x8D7EA8", VA = "0x8D7EA8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002CF3")]
			[Address(RVA = "0x8D7EAC", Offset = "0x8D7EAC", VA = "0x8D7EAC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002CF5")]
			[Address(RVA = "0x8D8238", Offset = "0x8D8238", VA = "0x8D8238", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000664")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6443F8", Offset = "0x6443F8")]
		private sealed class <RegisterDualShock4Controller>d__16 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002869")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400286A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x170002E9")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002CFA")]
				[Address(RVA = "0x8D7D78", Offset = "0x8D7D78", VA = "0x8D7D78", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002EA")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002CFC")]
				[Address(RVA = "0x8D7DE8", Offset = "0x8D7DE8", VA = "0x8D7DE8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002CF7")]
			[Address(RVA = "0x8D7BE0", Offset = "0x8D7BE0", VA = "0x8D7BE0")]
			[DebuggerHidden]
			public <RegisterDualShock4Controller>d__16(int <>1__state)
			{
			}

			[Token(Token = "0x6002CF8")]
			[Address(RVA = "0x8D7D38", Offset = "0x8D7D38", VA = "0x8D7D38", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002CF9")]
			[Address(RVA = "0x8D7D3C", Offset = "0x8D7D3C", VA = "0x8D7D3C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002CFB")]
			[Address(RVA = "0x8D7D80", Offset = "0x8D7D80", VA = "0x8D7D80", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000665")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x644408", Offset = "0x644408")]
		private sealed class <RegisterAimController>d__17 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400286B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400286C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x170002EB")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002D00")]
				[Address(RVA = "0x8D7CC0", Offset = "0x8D7CC0", VA = "0x8D7CC0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002EC")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002D02")]
				[Address(RVA = "0x8D7D30", Offset = "0x8D7D30", VA = "0x8D7D30", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002CFD")]
			[Address(RVA = "0x8D7C0C", Offset = "0x8D7C0C", VA = "0x8D7C0C")]
			[DebuggerHidden]
			public <RegisterAimController>d__17(int <>1__state)
			{
			}

			[Token(Token = "0x6002CFE")]
			[Address(RVA = "0x8D7C80", Offset = "0x8D7C80", VA = "0x8D7C80", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002CFF")]
			[Address(RVA = "0x8D7C84", Offset = "0x8D7C84", VA = "0x8D7C84", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002D01")]
			[Address(RVA = "0x8D7CC8", Offset = "0x8D7CC8", VA = "0x8D7CC8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000666")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x644418", Offset = "0x644418")]
		private sealed class <RegisterMoveControllers>d__18 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400286D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400286E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x170002ED")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002D06")]
				[Address(RVA = "0x8D7E30", Offset = "0x8D7E30", VA = "0x8D7E30", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002EE")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002D08")]
				[Address(RVA = "0x8D7EA0", Offset = "0x8D7EA0", VA = "0x8D7EA0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002D03")]
			[Address(RVA = "0x8D7C38", Offset = "0x8D7C38", VA = "0x8D7C38")]
			[DebuggerHidden]
			public <RegisterMoveControllers>d__18(int <>1__state)
			{
			}

			[Token(Token = "0x6002D04")]
			[Address(RVA = "0x8D7DF0", Offset = "0x8D7DF0", VA = "0x8D7DF0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002D05")]
			[Address(RVA = "0x8D7DF4", Offset = "0x8D7DF4", VA = "0x8D7DF4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002D07")]
			[Address(RVA = "0x8D7E38", Offset = "0x8D7E38", VA = "0x8D7E38", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000CE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TrackedDevicesType trackedDevicesType;

		[Token(Token = "0x4000CE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TrackedDevice deviceDualShock4;

		[Token(Token = "0x4000CE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TrackedDevice deviceAim;

		[Token(Token = "0x4000CE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public TrackedDevice deviceMovePrimary;

		[Token(Token = "0x4000CE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public TrackedDevice deviceMoveSecondary;

		[Token(Token = "0x6000FAF")]
		[Address(RVA = "0x8D7858", Offset = "0x8D7858", VA = "0x8D7858")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x66A634", Offset = "0x66A634")]
		private IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x6000FB0")]
		[Address(RVA = "0x8D78F8", Offset = "0x8D78F8", VA = "0x8D78F8")]
		private void Update()
		{
		}

		[Token(Token = "0x6000FB1")]
		[Address(RVA = "0x8D7990", Offset = "0x8D7990", VA = "0x8D7990")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000FB2")]
		[Address(RVA = "0x8D7A18", Offset = "0x8D7A18", VA = "0x8D7A18")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000FB3")]
		[Address(RVA = "0x8D7A1C", Offset = "0x8D7A1C", VA = "0x8D7A1C")]
		public void ResetDeviceTracking()
		{
		}

		[Token(Token = "0x6000FB4")]
		[Address(RVA = "0x8D7984", Offset = "0x8D7984", VA = "0x8D7984")]
		private void UpdateDualShock4Transforms()
		{
		}

		[Token(Token = "0x6000FB5")]
		[Address(RVA = "0x8D7988", Offset = "0x8D7988", VA = "0x8D7988")]
		private void UpdateAimTransforms()
		{
		}

		[Token(Token = "0x6000FB6")]
		[Address(RVA = "0x8D798C", Offset = "0x8D798C", VA = "0x8D798C")]
		private void UpdateMoveTransforms()
		{
		}

		[Token(Token = "0x6000FB7")]
		[Address(RVA = "0x8D7A40", Offset = "0x8D7A40", VA = "0x8D7A40")]
		public void RegisterDevices()
		{
		}

		[Token(Token = "0x6000FB8")]
		[Address(RVA = "0x8D7AC0", Offset = "0x8D7AC0", VA = "0x8D7AC0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x66A698", Offset = "0x66A698")]
		private IEnumerator RegisterDualShock4Controller()
		{
			return null;
		}

		[Token(Token = "0x6000FB9")]
		[Address(RVA = "0x8D7B20", Offset = "0x8D7B20", VA = "0x8D7B20")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x66A6FC", Offset = "0x66A6FC")]
		private IEnumerator RegisterAimController()
		{
			return null;
		}

		[Token(Token = "0x6000FBA")]
		[Address(RVA = "0x8D7B80", Offset = "0x8D7B80", VA = "0x8D7B80")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x66A760", Offset = "0x66A760")]
		private IEnumerator RegisterMoveControllers()
		{
			return null;
		}

		[Token(Token = "0x6000FBB")]
		[Address(RVA = "0x8D7994", Offset = "0x8D7994", VA = "0x8D7994")]
		public void UnregisterDevices()
		{
		}

		[Token(Token = "0x6000FBC")]
		[Address(RVA = "0x8D7C64", Offset = "0x8D7C64", VA = "0x8D7C64")]
		private void UnregisterDualShock4()
		{
		}

		[Token(Token = "0x6000FBD")]
		[Address(RVA = "0x8D7C68", Offset = "0x8D7C68", VA = "0x8D7C68")]
		private void UnregisterAimController()
		{
		}

		[Token(Token = "0x6000FBE")]
		[Address(RVA = "0x8D7C6C", Offset = "0x8D7C6C", VA = "0x8D7C6C")]
		private void UnregisterMoveControllers()
		{
		}

		[Token(Token = "0x6000FBF")]
		[Address(RVA = "0x8D7C70", Offset = "0x8D7C70", VA = "0x8D7C70")]
		public TrackedPlayStationDevices()
		{
		}
	}
	[Token(Token = "0x2000221")]
	public class VRPlaySpace : MonoBehaviour
	{
		[Token(Token = "0x4000CE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform frustumTransform;

		[Token(Token = "0x4000CEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Renderer[] frustumRenderers;

		[Token(Token = "0x4000CEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float safeDistance;

		[Token(Token = "0x4000CEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float fadeSpeed;

		[Token(Token = "0x4000CED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Color showColor;

		[Token(Token = "0x4000CEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Color hideColor;

		[Token(Token = "0x4000CEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool m_ShowFrustum;

		[Token(Token = "0x4000CF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Vector3 m_CamAcceleration;

		[Token(Token = "0x4000CF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Vector3 m_HmdPositionRaw;

		[Token(Token = "0x4000CF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private Quaternion m_HmdRotationUnity;

		[Token(Token = "0x4000CF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private Quaternion m_HmdRotationRaw;

		[Token(Token = "0x6000FC0")]
		[Address(RVA = "0x8D8A04", Offset = "0x8D8A04", VA = "0x8D8A04")]
		private void Start()
		{
		}

		[Token(Token = "0x6000FC1")]
		[Address(RVA = "0x8D8ACC", Offset = "0x8D8ACC", VA = "0x8D8ACC")]
		private void Update()
		{
		}

		[Token(Token = "0x6000FC2")]
		[Address(RVA = "0x8D8AD0", Offset = "0x8D8AD0", VA = "0x8D8AD0")]
		private void UpdateFrustumTransform()
		{
		}

		[Token(Token = "0x6000FC3")]
		[Address(RVA = "0x8D8AD4", Offset = "0x8D8AD4", VA = "0x8D8AD4")]
		private void UpdateFrustumDisplay()
		{
		}

		[Token(Token = "0x6000FC4")]
		[Address(RVA = "0x8D8C84", Offset = "0x8D8C84", VA = "0x8D8C84")]
		public VRPlaySpace()
		{
		}
	}
	[Token(Token = "0x2000222")]
	public class VRUIComplete : MonoBehaviour
	{
		[Token(Token = "0x4000CF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject target;

		[Token(Token = "0x4000CF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string message;

		[Token(Token = "0x4000CF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool disableColliderAfterUse;

		[Token(Token = "0x6000FC5")]
		[Address(RVA = "0x8D8CA4", Offset = "0x8D8CA4", VA = "0x8D8CA4")]
		public void Complete()
		{
		}

		[Token(Token = "0x6000FC6")]
		[Address(RVA = "0x8D8D98", Offset = "0x8D8D98", VA = "0x8D8D98")]
		public VRUIComplete()
		{
		}
	}
	[Token(Token = "0x2000223")]
	public class VRUIController : MonoBehaviour
	{
		[Token(Token = "0x4000CF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LayerMask uiLayerMask;

		[Token(Token = "0x4000CF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float m_SliderFillSpeed;

		[Token(Token = "0x4000CF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private RaycastHit m_Hit;

		[Token(Token = "0x4000CFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Slider m_CurrentSlider;

		[Token(Token = "0x4000CFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private AudioSource m_AudioSrc;

		[Token(Token = "0x6000FC7")]
		[Address(RVA = "0x8D8DF0", Offset = "0x8D8DF0", VA = "0x8D8DF0")]
		private void Start()
		{
		}

		[Token(Token = "0x6000FC8")]
		[Address(RVA = "0x8D8E48", Offset = "0x8D8E48", VA = "0x8D8E48")]
		private void Update()
		{
		}

		[Token(Token = "0x6000FC9")]
		[Address(RVA = "0x8D9514", Offset = "0x8D9514", VA = "0x8D9514")]
		public VRUIController()
		{
		}
	}
}
namespace ProBuilder2.Examples
{
	[Token(Token = "0x2000224")]
	public class CameraControls : MonoBehaviour
	{
		[Token(Token = "0x4000CFC")]
		private const string INPUT_MOUSE_SCROLLWHEEL = "Mouse ScrollWheel";

		[Token(Token = "0x4000CFD")]
		private const string INPUT_MOUSE_X = "Mouse X";

		[Token(Token = "0x4000CFE")]
		private const string INPUT_MOUSE_Y = "Mouse Y";

		[Token(Token = "0x4000CFF")]
		private const float MIN_CAM_DISTANCE = 10f;

		[Token(Token = "0x4000D00")]
		private const float MAX_CAM_DISTANCE = 40f;

		[Token(Token = "0x4000D01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x650754", Offset = "0x650754")]
		public float orbitSpeed;

		[Token(Token = "0x4000D02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x65076C", Offset = "0x65076C")]
		public float zoomSpeed;

		[Token(Token = "0x4000D03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float distance;

		[Token(Token = "0x4000D04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float idleRotation;

		[Token(Token = "0x4000D05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector2 dir;

		[Token(Token = "0x6000FCA")]
		[Address(RVA = "0x8DFACC", Offset = "0x8DFACC", VA = "0x8DFACC")]
		private void Start()
		{
		}

		[Token(Token = "0x6000FCB")]
		[Address(RVA = "0x8DFB98", Offset = "0x8DFB98", VA = "0x8DFB98")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000FCC")]
		[Address(RVA = "0x8E000C", Offset = "0x8E000C", VA = "0x8E000C")]
		public CameraControls()
		{
		}
	}
}
namespace BoundarySystem_Ext
{
	[Token(Token = "0x2000225")]
	internal static class Pvr_BoundaryAPI
	{
		[Token(Token = "0x4000D06")]
		private const string LibFileName = "Pvr_UnitySDK";

		[PreserveSig]
		[Token(Token = "0x6000FCD")]
		[Address(RVA = "0x8C2300", Offset = "0x8C2300", VA = "0x8C2300")]
		public static extern void Pvr_StartSDKBoundary();

		[PreserveSig]
		[Token(Token = "0x6000FCE")]
		[Address(RVA = "0x8C2390", Offset = "0x8C2390", VA = "0x8C2390")]
		public static extern void Pvr_ShutdownSDKBoundary();

		[PreserveSig]
		[Token(Token = "0x6000FCF")]
		[Address(RVA = "0x8C2420", Offset = "0x8C2420", VA = "0x8C2420")]
		private static extern int Pvr_GetMainSensorStateExt(ref float x, ref float y, ref float z, ref float w, ref float px, ref float py, ref float pz, ref float vfov, ref float hfov, ref int viewNumber);

		[PreserveSig]
		[Token(Token = "0x6000FD0")]
		[Address(RVA = "0x8C2520", Offset = "0x8C2520", VA = "0x8C2520")]
		private static extern IntPtr Pvr_GetCameraData_Ext();

		[PreserveSig]
		[Token(Token = "0x6000FD1")]
		[Address(RVA = "0x8C25B0", Offset = "0x8C25B0", VA = "0x8C25B0")]
		public static extern void Pvr_ResetVrModebyForce();

		[PreserveSig]
		[Token(Token = "0x6000FD2")]
		[Address(RVA = "0x8C2640", Offset = "0x8C2640", VA = "0x8C2640")]
		private static extern bool Pvr_ResumeBoundaryForSTS();

		[PreserveSig]
		[Token(Token = "0x6000FD3")]
		[Address(RVA = "0x8C26D8", Offset = "0x8C26D8", VA = "0x8C26D8")]
		private static extern void Pvr_PauseBoundaryForSTS();

		[Token(Token = "0x6000FD4")]
		[Address(RVA = "0x8C2768", Offset = "0x8C2768", VA = "0x8C2768")]
		public static int UPvr_GetMainSensorStateExt(ref float x, ref float y, ref float z, ref float w, ref float px, ref float py, ref float pz, ref float vfov, ref float hfov, ref int viewNumber)
		{
			return default(int);
		}

		[Token(Token = "0x6000FD5")]
		[Address(RVA = "0x8C2774", Offset = "0x8C2774", VA = "0x8C2774")]
		public static IntPtr UPvr_GetCameraData_Ext()
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6000FD6")]
		[Address(RVA = "0x8C27B0", Offset = "0x8C27B0", VA = "0x8C27B0")]
		public static bool UPvr_ResumeBoundaryForSTS()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FD7")]
		[Address(RVA = "0x8C27B4", Offset = "0x8C27B4", VA = "0x8C27B4")]
		public static void UPvr_PauseBoundaryForSTS()
		{
		}

		[Token(Token = "0x6000FD8")]
		public static IntPtr StructToIntPtr<T>(T info)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6000FD9")]
		public static T IntPtrToStruct<T>(IntPtr info)
		{
			return (T)null;
		}
	}
	[Token(Token = "0x2000226")]
	internal static class Pvr_SafeAreaAlgoAPI
	{
		[Token(Token = "0x2000667")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x644428", Offset = "0x644428")]
		public delegate void SafeAreaCallback(IntPtr lineCollectionPtr, IntPtr safeAreaRectPtr);

		[Token(Token = "0x2000668")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64443C", Offset = "0x64443C")]
		public delegate void SafeAreaCallbackShrink(IntPtr lineCollectionPtr, IntPtr safeAreaDetailRectPtr);

		[Token(Token = "0x2000669")]
		public struct GSAPoint3i
		{
			[Token(Token = "0x400286F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int x;

			[Token(Token = "0x4002870")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public int y;

			[Token(Token = "0x4002871")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int z;
		}

		[Token(Token = "0x200066A")]
		public struct GSALine
		{
			[Token(Token = "0x4002872")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public IntPtr pointArray;

			[Token(Token = "0x4002873")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int pointCount;
		}

		[Token(Token = "0x200066B")]
		public struct GSALineCollection
		{
			[Token(Token = "0x4002874")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public IntPtr lineArray;

			[Token(Token = "0x4002875")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int lineCount;
		}

		[Token(Token = "0x200066C")]
		public struct GSALegalData
		{
			[Token(Token = "0x4002876")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int overMaxRange;

			[Token(Token = "0x4002877")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public int includeBigGrap;

			[Token(Token = "0x4002878")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int bigGapNum;

			[Token(Token = "0x4002879")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public int centerOut;

			[Token(Token = "0x400287A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int removeNarrow;

			[Token(Token = "0x400287B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public int overMaxRange_more;

			[Token(Token = "0x400287C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int validShrinkArea;
		}

		[Token(Token = "0x200066D")]
		public struct GSARect
		{
			[Token(Token = "0x400287D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public GSAPoint3i leftup;

			[Token(Token = "0x400287E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public GSAPoint3i leftdown;

			[Token(Token = "0x400287F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public GSAPoint3i rightup;

			[Token(Token = "0x4002880")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public GSAPoint3i rightdown;

			[Token(Token = "0x4002881")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public GSAPoint3i center;

			[Token(Token = "0x4002882")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public uint width;

			[Token(Token = "0x4002883")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public uint height;

			[Token(Token = "0x4002884")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			public int isLegal;

			[Token(Token = "0x4002885")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public GSALegalData legalData;
		}

		[Token(Token = "0x4000D07")]
		private const string LibFileName = "SafetyArea";

		[PreserveSig]
		[Token(Token = "0x6000FDA")]
		[Address(RVA = "0x8C2AE8", Offset = "0x8C2AE8", VA = "0x8C2AE8")]
		private static extern int GSAInit(int width, int height);

		[PreserveSig]
		[Token(Token = "0x6000FDB")]
		[Address(RVA = "0x8C2B98", Offset = "0x8C2B98", VA = "0x8C2B98")]
		private static extern int GSAShutDown();

		[PreserveSig]
		[Token(Token = "0x6000FDC")]
		[Address(RVA = "0x8C2C28", Offset = "0x8C2C28", VA = "0x8C2C28")]
		private static extern int GSASetCallback(SafeAreaCallback cb);

		[PreserveSig]
		[Token(Token = "0x6000FDD")]
		[Address(RVA = "0x8C2CCC", Offset = "0x8C2CCC", VA = "0x8C2CCC")]
		private static extern int GSASetCallbackShrink(SafeAreaCallbackShrink cb);

		[PreserveSig]
		[Token(Token = "0x6000FDE")]
		[Address(RVA = "0x8C2D70", Offset = "0x8C2D70", VA = "0x8C2D70")]
		private static extern int GSAUpDateData(IntPtr lineCollectionPtr);

		[PreserveSig]
		[Token(Token = "0x6000FDF")]
		[Address(RVA = "0x8C2E10", Offset = "0x8C2E10", VA = "0x8C2E10")]
		private static extern int GSASetConfigFilePath(IntPtr configPath);

		[PreserveSig]
		[Token(Token = "0x6000FE0")]
		[Address(RVA = "0x8C2EB0", Offset = "0x8C2EB0", VA = "0x8C2EB0")]
		private static extern bool GSAGetClosedAreaUpdateFlag();

		[PreserveSig]
		[Token(Token = "0x6000FE1")]
		[Address(RVA = "0x8C2F48", Offset = "0x8C2F48", VA = "0x8C2F48")]
		private static extern int GSALoadSafetyArea(IntPtr lineCollectionPtr);

		[PreserveSig]
		[Token(Token = "0x6000FE2")]
		[Address(RVA = "0x8C2FE8", Offset = "0x8C2FE8", VA = "0x8C2FE8")]
		private static extern double GSABoundaryDetector(ref GSAPoint3i pointPtr);

		[PreserveSig]
		[Token(Token = "0x6000FE3")]
		[Address(RVA = "0x8C3088", Offset = "0x8C3088", VA = "0x8C3088")]
		private static extern int GSALoadSafetyArea2(IntPtr lineCollectionPtr, bool isPlayArea);

		[PreserveSig]
		[Token(Token = "0x6000FE4")]
		[Address(RVA = "0x8C3138", Offset = "0x8C3138", VA = "0x8C3138")]
		private static extern double GSABoundaryDetector2(ref GSAPoint3i point, bool isPlayArea, ref GSAPoint3i closestPoint, ref GSAPoint3i normalDir);

		[Token(Token = "0x6000FE5")]
		[Address(RVA = "0x8C3200", Offset = "0x8C3200", VA = "0x8C3200")]
		public static int Pvr_GSAInit(int width, int height)
		{
			return default(int);
		}

		[Token(Token = "0x6000FE6")]
		[Address(RVA = "0x8C3204", Offset = "0x8C3204", VA = "0x8C3204")]
		public static int Pvr_GSASetCallback(SafeAreaCallback cb)
		{
			return default(int);
		}

		[Token(Token = "0x6000FE7")]
		[Address(RVA = "0x8C3208", Offset = "0x8C3208", VA = "0x8C3208")]
		public static int Pvr_GSASetCallbackShrink(SafeAreaCallbackShrink cb)
		{
			return default(int);
		}

		[Token(Token = "0x6000FE8")]
		[Address(RVA = "0x8C320C", Offset = "0x8C320C", VA = "0x8C320C")]
		public static int Pvr_GSAUpDateData(IntPtr lineCollectionPtr)
		{
			return default(int);
		}

		[Token(Token = "0x6000FE9")]
		[Address(RVA = "0x8C3210", Offset = "0x8C3210", VA = "0x8C3210")]
		public static bool Pvr_GSAGetClosedAreaUpdateFlag()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FEA")]
		[Address(RVA = "0x8C3214", Offset = "0x8C3214", VA = "0x8C3214")]
		public static int Pvr_GSASetConfigFilePath(string configPath)
		{
			return default(int);
		}

		[Token(Token = "0x6000FEB")]
		[Address(RVA = "0x8C329C", Offset = "0x8C329C", VA = "0x8C329C")]
		public static int Pvr_GSALoadSafetyArea(IntPtr lineCollectionPtr)
		{
			return default(int);
		}

		[Token(Token = "0x6000FEC")]
		[Address(RVA = "0x8C32A0", Offset = "0x8C32A0", VA = "0x8C32A0")]
		public static double Pvr_GSABoundaryDetector(ref GSAPoint3i point)
		{
			return default(double);
		}

		[Token(Token = "0x6000FED")]
		[Address(RVA = "0x8C32A4", Offset = "0x8C32A4", VA = "0x8C32A4")]
		public static int Pvr_GSAShutDown()
		{
			return default(int);
		}

		[Token(Token = "0x6000FEE")]
		[Address(RVA = "0x8C32A8", Offset = "0x8C32A8", VA = "0x8C32A8")]
		public static int Pvr_GSALoadSafetyArea2(IntPtr lineCollectionPtr, bool isPlayArea)
		{
			return default(int);
		}

		[Token(Token = "0x6000FEF")]
		[Address(RVA = "0x8C32B0", Offset = "0x8C32B0", VA = "0x8C32B0")]
		public static double Pvr_GSABoundaryDetector2(ref GSAPoint3i point, bool isPlayArea, ref GSAPoint3i closestPoint, ref GSAPoint3i normalDir)
		{
			return default(double);
		}
	}
	[Token(Token = "0x2000227")]
	public class Pvr_BoundarySystem
	{
		[Token(Token = "0x4000D08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Pvr_BoundarySystem instance;

		[Token(Token = "0x4000D09")]
		public const int CameraImageWidth = 1280;

		[Token(Token = "0x4000D0A")]
		public const int CameraImageHeight = 400;

		[Token(Token = "0x4000D0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public IntPtr CameraFramePtr;

		[Token(Token = "0x1700014E")]
		public static Pvr_BoundarySystem Instance
		{
			[Token(Token = "0x6000FF0")]
			[Address(RVA = "0x8C27B8", Offset = "0x8C27B8", VA = "0x8C27B8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000FF1")]
		[Address(RVA = "0x8C2880", Offset = "0x8C2880", VA = "0x8C2880")]
		public void OpenBoundary()
		{
		}

		[Token(Token = "0x6000FF2")]
		[Address(RVA = "0x8C2884", Offset = "0x8C2884", VA = "0x8C2884")]
		public void CloseBoundary()
		{
		}

		[Token(Token = "0x6000FF3")]
		[Address(RVA = "0x8C2888", Offset = "0x8C2888", VA = "0x8C2888")]
		public void Reset6Dof()
		{
		}

		[Token(Token = "0x6000FF4")]
		[Address(RVA = "0x8C288C", Offset = "0x8C288C", VA = "0x8C288C")]
		public float[] GetControllerFixedPoseData(int hand)
		{
			return null;
		}

		[Token(Token = "0x6000FF5")]
		[Address(RVA = "0x8C2834", Offset = "0x8C2834", VA = "0x8C2834")]
		public Pvr_BoundarySystem()
		{
		}
	}
	[Token(Token = "0x2000228")]
	public class Pvr_SafeAreaAlgoModule
	{
		[Token(Token = "0x200066E")]
		public struct ExtraInfo
		{
			[Token(Token = "0x4002886")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public bool overMaxRange;

			[Token(Token = "0x4002887")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
			public bool includeBigGap;

			[Token(Token = "0x4002888")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public int bigGapNum;

			[Token(Token = "0x4002889")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public bool centerOut;

			[Token(Token = "0x400288A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x9")]
			public bool removeNarrow;

			[Token(Token = "0x400288B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA")]
			public bool overMaxRange_more;

			[Token(Token = "0x400288C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public int validShrinkArea;
		}

		[Token(Token = "0x200066F")]
		public struct BoundaryPlayerArea
		{
			[Token(Token = "0x400288D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Vector3 lowerleft;

			[Token(Token = "0x400288E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public Vector3 upperleft;

			[Token(Token = "0x400288F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Vector3 upperRight;

			[Token(Token = "0x4002890")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public Vector3 lowerRight;

			[Token(Token = "0x4002891")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Vector3 center;

			[Token(Token = "0x4002892")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public uint width;

			[Token(Token = "0x4002893")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public uint height;

			[Token(Token = "0x4002894")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			public bool isLegal;

			[Token(Token = "0x4002895")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public ExtraInfo extraInfo;
		}

		[Token(Token = "0x2000670")]
		public delegate void BoundarySystemCallback(BoundaryPlayerArea playAreaInfo, List<Vector3> boundaryPoints, List<List<Vector3>> unusedLines);

		[Token(Token = "0x2000671")]
		public delegate void BoundarySystemCallbackShrink(List<Vector3> rectPoints, List<Vector3> boundaryPoints, List<List<Vector3>> unusedLines);

		[Token(Token = "0x4000D0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Pvr_SafeAreaAlgoModule instance;

		[Token(Token = "0x4000D0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private BoundarySystemCallback boundarySystemCallback;

		[Token(Token = "0x4000D0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private BoundarySystemCallbackShrink boundarySystemCallbackShrink;

		[Token(Token = "0x1700014F")]
		public static Pvr_SafeAreaAlgoModule Instance
		{
			[Token(Token = "0x6000FF6")]
			[Address(RVA = "0x8C4A9C", Offset = "0x8C4A9C", VA = "0x8C4A9C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000FF7")]
		[Address(RVA = "0x8C4B24", Offset = "0x8C4B24", VA = "0x8C4B24")]
		public void RegisterCallBack(BoundarySystemCallback callback)
		{
		}

		[Token(Token = "0x6000FF8")]
		[Address(RVA = "0x8C4B2C", Offset = "0x8C4B2C", VA = "0x8C4B2C")]
		public void RegisterCallBackShrink(BoundarySystemCallbackShrink callback)
		{
		}

		[Token(Token = "0x6000FF9")]
		[Address(RVA = "0x8C4B34", Offset = "0x8C4B34", VA = "0x8C4B34")]
		public bool Start()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FFA")]
		[Address(RVA = "0x8C4C54", Offset = "0x8C4C54", VA = "0x8C4C54")]
		public bool CommitNewLineData(bool isFistLine, Vector3[] points)
		{
			return default(bool);
		}

		[Token(Token = "0x6000FFB")]
		[Address(RVA = "0x8C5020", Offset = "0x8C5020", VA = "0x8C5020")]
		public bool Shutdown()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FFC")]
		[Address(RVA = "0x8C50A4", Offset = "0x8C50A4", VA = "0x8C50A4")]
		public double QueryDistanceOfPoint(Vector3 point)
		{
			return default(double);
		}

		[Token(Token = "0x6000FFD")]
		[Address(RVA = "0x8C50F8", Offset = "0x8C50F8", VA = "0x8C50F8")]
		public double QueryDistanceOfPoint(Vector3 point, bool isPlayArea, ref Vector3 closestPoint, ref Vector3 normalDir)
		{
			return default(double);
		}

		[Token(Token = "0x6000FFE")]
		[Address(RVA = "0x8C3D00", Offset = "0x8C3D00", VA = "0x8C3D00")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x66A7C4", Offset = "0x66A7C4")]
		private static void _SafeAreaCallback(IntPtr lineCollectionPtr, IntPtr safeAreaRectPtr)
		{
		}

		[Token(Token = "0x6000FFF")]
		[Address(RVA = "0x8C4410", Offset = "0x8C4410", VA = "0x8C4410")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x66A828", Offset = "0x66A828")]
		private static void _SafeAreaCallbackShrink(IntPtr lineCollectionPtr, IntPtr safeAreaDetailRectPtr)
		{
		}

		[Token(Token = "0x6001000")]
		[Address(RVA = "0x8C4B1C", Offset = "0x8C4B1C", VA = "0x8C4B1C")]
		public Pvr_SafeAreaAlgoModule()
		{
		}
	}
}
namespace Pvr_UnitySDKAPI
{
	[Token(Token = "0x2000229")]
	public class PvrControllerKey
	{
		[Token(Token = "0x4000D0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool State;

		[Token(Token = "0x4000D10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public bool PressedDown;

		[Token(Token = "0x4000D11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
		public bool PressedUp;

		[Token(Token = "0x4000D12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13")]
		public bool LongPressed;

		[Token(Token = "0x4000D13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public bool Click;

		[Token(Token = "0x4000D14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
		public bool Touch;

		[Token(Token = "0x4000D15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16")]
		public bool TouchDown;

		[Token(Token = "0x4000D16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x17")]
		public bool TouchUp;

		[Token(Token = "0x6001001")]
		[Address(RVA = "0xF4FCEC", Offset = "0xF4FCEC", VA = "0xF4FCEC")]
		public PvrControllerKey()
		{
		}
	}
	[Token(Token = "0x200022A")]
	public class ControllerHand
	{
		[Token(Token = "0x4000D17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public PvrControllerKey App;

		[Token(Token = "0x4000D18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PvrControllerKey Touch;

		[Token(Token = "0x4000D19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PvrControllerKey Home;

		[Token(Token = "0x4000D1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public PvrControllerKey VolumeDown;

		[Token(Token = "0x4000D1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public PvrControllerKey VolumeUp;

		[Token(Token = "0x4000D1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public PvrControllerKey Trigger;

		[Token(Token = "0x4000D1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public PvrControllerKey X;

		[Token(Token = "0x4000D1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public PvrControllerKey Y;

		[Token(Token = "0x4000D1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public PvrControllerKey A;

		[Token(Token = "0x4000D20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public PvrControllerKey B;

		[Token(Token = "0x4000D21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public PvrControllerKey Left;

		[Token(Token = "0x4000D22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public PvrControllerKey Right;

		[Token(Token = "0x4000D23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public PvrControllerKey Thumbrest;

		[Token(Token = "0x4000D24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Vector2 TouchPadPosition;

		[Token(Token = "0x4000D25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public int TriggerNum;

		[Token(Token = "0x4000D26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public int GripValue;

		[Token(Token = "0x4000D27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Quaternion Rotation;

		[Token(Token = "0x4000D28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public Vector3 Position;

		[Token(Token = "0x4000D29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		public int Battery;

		[Token(Token = "0x4000D2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public ControllerState ConnectState;

		[Token(Token = "0x4000D2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		public SwipeDirection SwipeDirection;

		[Token(Token = "0x4000D2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public TouchPadClick TouchPadClick;

		[Token(Token = "0x4000D2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		public bool isShowBoundary;

		[Token(Token = "0x6001002")]
		[Address(RVA = "0xF4FB04", Offset = "0xF4FB04", VA = "0xF4FB04")]
		public ControllerHand()
		{
		}
	}
	[Token(Token = "0x200022B")]
	public enum ControllerState
	{
		[Token(Token = "0x4000D2F")]
		Error = -1,
		[Token(Token = "0x4000D30")]
		DisConnected,
		[Token(Token = "0x4000D31")]
		Connected
	}
	[Token(Token = "0x200022C")]
	public enum Pvr_KeyCode
	{
		[Token(Token = "0x4000D33")]
		APP = 1,
		[Token(Token = "0x4000D34")]
		TOUCHPAD,
		[Token(Token = "0x4000D35")]
		HOME,
		[Token(Token = "0x4000D36")]
		VOLUMEUP,
		[Token(Token = "0x4000D37")]
		VOLUMEDOWN,
		[Token(Token = "0x4000D38")]
		TRIGGER,
		[Token(Token = "0x4000D39")]
		A,
		[Token(Token = "0x4000D3A")]
		B,
		[Token(Token = "0x4000D3B")]
		X,
		[Token(Token = "0x4000D3C")]
		Y,
		[Token(Token = "0x4000D3D")]
		Left,
		[Token(Token = "0x4000D3E")]
		Right,
		[Token(Token = "0x4000D3F")]
		Thumbrest
	}
	[Token(Token = "0x200022D")]
	public enum SwipeDirection
	{
		[Token(Token = "0x4000D41")]
		No,
		[Token(Token = "0x4000D42")]
		SwipeUp,
		[Token(Token = "0x4000D43")]
		SwipeDown,
		[Token(Token = "0x4000D44")]
		SwipeLeft,
		[Token(Token = "0x4000D45")]
		SwipeRight
	}
	[Token(Token = "0x200022E")]
	public enum TouchPadClick
	{
		[Token(Token = "0x4000D47")]
		No,
		[Token(Token = "0x4000D48")]
		ClickUp,
		[Token(Token = "0x4000D49")]
		ClickDown,
		[Token(Token = "0x4000D4A")]
		ClickLeft,
		[Token(Token = "0x4000D4B")]
		ClickRight
	}
	[Token(Token = "0x200022F")]
	public struct Controller
	{
		[Token(Token = "0x4000D4C")]
		public const string LibFileName = "Pvr_UnitySDK";

		[Token(Token = "0x6001003")]
		[Address(RVA = "0xF4A8D4", Offset = "0xF4A8D4", VA = "0xF4A8D4")]
		public static Vector2 UPvr_GetTouchPadPosition(int hand)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001004")]
		[Address(RVA = "0xF4A9E4", Offset = "0xF4A9E4", VA = "0xF4A9E4")]
		public static float UPvr_GetAxis1D(int hand, Pvr_KeyCode key)
		{
			return default(float);
		}

		[Token(Token = "0x6001005")]
		[Address(RVA = "0xF4AB94", Offset = "0xF4AB94", VA = "0xF4AB94")]
		public static Vector2 UPvr_GetAxis2D(int hand)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001006")]
		[Address(RVA = "0xF4AE50", Offset = "0xF4AE50", VA = "0xF4AE50")]
		public static ControllerState UPvr_GetControllerState(int hand)
		{
			return default(ControllerState);
		}

		[Token(Token = "0x6001007")]
		[Address(RVA = "0xF4AF64", Offset = "0xF4AF64", VA = "0xF4AF64")]
		public static Quaternion UPvr_GetControllerQUA(int hand)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6001008")]
		[Address(RVA = "0xF4B090", Offset = "0xF4B090", VA = "0xF4B090")]
		public static Vector3 UPvr_GetControllerPOS(int hand)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001009")]
		[Address(RVA = "0xF4B1B8", Offset = "0xF4B1B8", VA = "0xF4B1B8")]
		public static int UPvr_GetControllerTriggerValue(int hand)
		{
			return default(int);
		}

		[Token(Token = "0x600100A")]
		[Address(RVA = "0xF4B298", Offset = "0xF4B298", VA = "0xF4B298")]
		public static int UPvr_GetControllerPower(int hand)
		{
			return default(int);
		}

		[Token(Token = "0x600100B")]
		[Address(RVA = "0xF4B378", Offset = "0xF4B378", VA = "0xF4B378")]
		public static SwipeDirection UPvr_GetSwipeDirection(int hand)
		{
			return default(SwipeDirection);
		}

		[Token(Token = "0x600100C")]
		[Address(RVA = "0xF4B458", Offset = "0xF4B458", VA = "0xF4B458")]
		public static TouchPadClick UPvr_GetTouchPadClick(int hand)
		{
			return default(TouchPadClick);
		}

		[Token(Token = "0x600100D")]
		[Address(RVA = "0xF4B538", Offset = "0xF4B538", VA = "0xF4B538")]
		public static bool UPvr_GetKey(int hand, Pvr_KeyCode key)
		{
			return default(bool);
		}

		[Token(Token = "0x600100E")]
		[Address(RVA = "0xF4BB78", Offset = "0xF4BB78", VA = "0xF4BB78")]
		public static bool UPvr_GetKeyDown(int hand, Pvr_KeyCode key)
		{
			return default(bool);
		}

		[Token(Token = "0x600100F")]
		[Address(RVA = "0xF4C1B8", Offset = "0xF4C1B8", VA = "0xF4C1B8")]
		public static bool UPvr_GetKeyUp(int hand, Pvr_KeyCode key)
		{
			return default(bool);
		}

		[Token(Token = "0x6001010")]
		[Address(RVA = "0xF4C7F8", Offset = "0xF4C7F8", VA = "0xF4C7F8")]
		public static bool UPvr_GetTouch(int hand, Pvr_KeyCode key)
		{
			return default(bool);
		}

		[Token(Token = "0x6001011")]
		[Address(RVA = "0xF4CBC8", Offset = "0xF4CBC8", VA = "0xF4CBC8")]
		public static bool UPvr_GetTouchDown(int hand, Pvr_KeyCode key)
		{
			return default(bool);
		}

		[Token(Token = "0x6001012")]
		[Address(RVA = "0xF4CF98", Offset = "0xF4CF98", VA = "0xF4CF98")]
		public static bool UPvr_GetTouchUp(int hand, Pvr_KeyCode key)
		{
			return default(bool);
		}

		[Token(Token = "0x6001013")]
		[Address(RVA = "0xF4D368", Offset = "0xF4D368", VA = "0xF4D368")]
		public static bool UPvr_GetKeyClick(int hand, Pvr_KeyCode key)
		{
			return default(bool);
		}

		[Token(Token = "0x6001014")]
		[Address(RVA = "0xF4D9A8", Offset = "0xF4D9A8", VA = "0xF4D9A8")]
		public static bool UPvr_GetKeyLongPressed(int hand, Pvr_KeyCode key)
		{
			return default(bool);
		}

		[Token(Token = "0x6001015")]
		[Address(RVA = "0xF4DFE8", Offset = "0xF4DFE8", VA = "0xF4DFE8")]
		public static bool UPvr_IsTouching(int hand)
		{
			return default(bool);
		}

		[Token(Token = "0x6001016")]
		[Address(RVA = "0xF4E1F0", Offset = "0xF4E1F0", VA = "0xF4E1F0")]
		public static void UPvr_SetHandNess(Pvr_Controller.UserHandNess hand)
		{
		}

		[Token(Token = "0x6001017")]
		[Address(RVA = "0xF4E2D0", Offset = "0xF4E2D0", VA = "0xF4E2D0")]
		public static Pvr_Controller.UserHandNess UPvr_GetHandNess()
		{
			return default(Pvr_Controller.UserHandNess);
		}

		[Token(Token = "0x6001018")]
		[Address(RVA = "0xF4E348", Offset = "0xF4E348", VA = "0xF4E348")]
		public static int UPvr_GetPreferenceDevice()
		{
			return default(int);
		}

		[Token(Token = "0x6001019")]
		[Address(RVA = "0xF4E434", Offset = "0xF4E434", VA = "0xF4E434")]
		public static bool UPvr_IsEnbleTrigger()
		{
			return default(bool);
		}

		[Token(Token = "0x600101A")]
		[Address(RVA = "0xF4E4B0", Offset = "0xF4E4B0", VA = "0xF4E4B0")]
		public static int UPvr_GetDeviceType()
		{
			return default(int);
		}

		[Token(Token = "0x600101B")]
		[Address(RVA = "0xF4E528", Offset = "0xF4E528", VA = "0xF4E528")]
		public static int UPvr_GetMainHandNess()
		{
			return default(int);
		}

		[Token(Token = "0x600101C")]
		[Address(RVA = "0xF4E5A0", Offset = "0xF4E5A0", VA = "0xF4E5A0")]
		public static void UPvr_SetMainHandNess(int hand)
		{
		}

		[Token(Token = "0x600101D")]
		[Address(RVA = "0xF4E624", Offset = "0xF4E624", VA = "0xF4E624")]
		public static int UPvr_GetControllerAbility(int hand)
		{
			return default(int);
		}

		[Token(Token = "0x600101E")]
		[Address(RVA = "0xF4E6A8", Offset = "0xF4E6A8", VA = "0xF4E6A8")]
		public static void UPvr_VibrateNeo2Controller(float strength, int time, int hand)
		{
		}

		[Token(Token = "0x600101F")]
		[Address(RVA = "0xF4E74C", Offset = "0xF4E74C", VA = "0xF4E74C")]
		public static int UPvr_GetControllerBindingState(int hand)
		{
			return default(int);
		}

		[Token(Token = "0x6001020")]
		[Address(RVA = "0xF4E7D0", Offset = "0xF4E7D0", VA = "0xF4E7D0")]
		public static Vector3 UPvr_GetVelocity(int hand)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001021")]
		[Address(RVA = "0xF4E854", Offset = "0xF4E854", VA = "0xF4E854")]
		public static Vector3 UPvr_GetAngularVelocity(int hand)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001022")]
		[Address(RVA = "0xF4E8D8", Offset = "0xF4E8D8", VA = "0xF4E8D8")]
		public static Vector3 UPvr_GetAcceleration(int hand)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001023")]
		[Address(RVA = "0xF4E95C", Offset = "0xF4E95C", VA = "0xF4E95C")]
		public static void UPvr_ScanController()
		{
		}

		[Token(Token = "0x6001024")]
		[Address(RVA = "0xF4E9D8", Offset = "0xF4E9D8", VA = "0xF4E9D8")]
		public static void UPvr_StopScanController()
		{
		}

		[Token(Token = "0x6001025")]
		[Address(RVA = "0xF4EA54", Offset = "0xF4EA54", VA = "0xF4EA54")]
		public static void UPvr_ConnectController(string mac)
		{
		}

		[Token(Token = "0x6001026")]
		[Address(RVA = "0xF4EB2C", Offset = "0xF4EB2C", VA = "0xF4EB2C")]
		public static void UPvr_DisConnectController()
		{
		}

		[Token(Token = "0x6001027")]
		[Address(RVA = "0xF4EBA8", Offset = "0xF4EBA8", VA = "0xF4EBA8")]
		public static void UPvr_ResetController(int hand)
		{
		}

		[Token(Token = "0x6001028")]
		[Address(RVA = "0xF4EC2C", Offset = "0xF4EC2C", VA = "0xF4EC2C")]
		public static string UPvr_GetControllerVersion()
		{
			return null;
		}

		[Token(Token = "0x6001029")]
		[Address(RVA = "0xF4ECA8", Offset = "0xF4ECA8", VA = "0xF4ECA8")]
		public static void UPvr_GetDeviceVersion(int deviceType)
		{
		}

		[Token(Token = "0x600102A")]
		[Address(RVA = "0xF4ED2C", Offset = "0xF4ED2C", VA = "0xF4ED2C")]
		public static void UPvr_GetControllerSnCode(int controllerSerialNum)
		{
		}

		[Token(Token = "0x600102B")]
		[Address(RVA = "0xF4EDB0", Offset = "0xF4EDB0", VA = "0xF4EDB0")]
		public static void UPvr_SetControllerUnbind(int controllerSerialNum)
		{
		}

		[Token(Token = "0x600102C")]
		[Address(RVA = "0xF4EE34", Offset = "0xF4EE34", VA = "0xF4EE34")]
		public static void UPvr_SetStationRestart()
		{
		}

		[Token(Token = "0x600102D")]
		[Address(RVA = "0xF4EEB0", Offset = "0xF4EEB0", VA = "0xF4EEB0")]
		public static void UPvr_StartStationOtaUpdate()
		{
		}

		[Token(Token = "0x600102E")]
		[Address(RVA = "0xF4EF2C", Offset = "0xF4EF2C", VA = "0xF4EF2C")]
		public static void UPvr_StartControllerOtaUpdate(int mode, int controllerSerialNum)
		{
		}

		[Token(Token = "0x600102F")]
		[Address(RVA = "0xF4EFC0", Offset = "0xF4EFC0", VA = "0xF4EFC0")]
		public static void UPvr_EnterPairMode(int controllerSerialNum)
		{
		}

		[Token(Token = "0x6001030")]
		[Address(RVA = "0xF4F044", Offset = "0xF4F044", VA = "0xF4F044")]
		public static void UPvr_SetControllerShutdown(int controllerSerialNum)
		{
		}

		[Token(Token = "0x6001031")]
		[Address(RVA = "0xF4F0C8", Offset = "0xF4F0C8", VA = "0xF4F0C8")]
		public static int UPvr_GetStationPairState()
		{
			return default(int);
		}

		[Token(Token = "0x6001032")]
		[Address(RVA = "0xF4F144", Offset = "0xF4F144", VA = "0xF4F144")]
		public static int UPvr_GetStationOtaUpdateProgress()
		{
			return default(int);
		}

		[Token(Token = "0x6001033")]
		[Address(RVA = "0xF4F1C0", Offset = "0xF4F1C0", VA = "0xF4F1C0")]
		public static int UPvr_GetControllerOtaUpdateProgress()
		{
			return default(int);
		}

		[Token(Token = "0x6001034")]
		[Address(RVA = "0xF4F23C", Offset = "0xF4F23C", VA = "0xF4F23C")]
		public static void UPvr_GetControllerVersionAndSN(int controllerSerialNum)
		{
		}

		[Token(Token = "0x6001035")]
		[Address(RVA = "0xF4F2C0", Offset = "0xF4F2C0", VA = "0xF4F2C0")]
		public static void UPvr_GetControllerUniqueID()
		{
		}

		[Token(Token = "0x6001036")]
		[Address(RVA = "0x6EFB64", Offset = "0x6EFB64", VA = "0x6EFB64")]
		public void UPvr_InterruptStationPairMode()
		{
		}

		[Token(Token = "0x6001037")]
		[Address(RVA = "0x6EFB68", Offset = "0x6EFB68", VA = "0x6EFB68")]
		public void UPvr_StartCV2PairingMode(int deviceType)
		{
		}

		[Token(Token = "0x6001038")]
		[Address(RVA = "0x6EFB6C", Offset = "0x6EFB6C", VA = "0x6EFB6C")]
		public void UPvr_StopCV2PairingMode(int deviceType)
		{
		}

		[Token(Token = "0x6001039")]
		[Address(RVA = "0xF4F4C0", Offset = "0xF4F4C0", VA = "0xF4F4C0")]
		public static void UPvr_SetArmModelParameters(int hand, int gazeType, float elbowHeight, float elbowDepth, float pointerTiltAngle)
		{
		}

		[Token(Token = "0x600103A")]
		[Address(RVA = "0xF4F59C", Offset = "0xF4F59C", VA = "0xF4F59C")]
		public static void UPvr_CalcArmModelParameters(float[] headOrientation, float[] controllerOrientation, float[] controllerPrimary)
		{
		}

		[Token(Token = "0x600103B")]
		[Address(RVA = "0xF4F670", Offset = "0xF4F670", VA = "0xF4F670")]
		public static void UPvr_GetPointerPose(float[] rotation, float[] position)
		{
		}

		[Token(Token = "0x600103C")]
		[Address(RVA = "0xF4F734", Offset = "0xF4F734", VA = "0xF4F734")]
		public static void UPvr_GetElbowPose(float[] rotation, float[] position)
		{
		}

		[Token(Token = "0x600103D")]
		[Address(RVA = "0xF4F7F4", Offset = "0xF4F7F4", VA = "0xF4F7F4")]
		public static void UPvr_GetWristPose(float[] rotation, float[] position)
		{
		}

		[Token(Token = "0x600103E")]
		[Address(RVA = "0xF4F8B4", Offset = "0xF4F8B4", VA = "0xF4F8B4")]
		public static void UPvr_GetShoulderPose(float[] rotation, float[] position)
		{
		}

		[Token(Token = "0x600103F")]
		[Address(RVA = "0xF4F978", Offset = "0xF4F978", VA = "0xF4F978")]
		public static void UPvr_IsEnbleHomeKey(bool state)
		{
		}

		[Token(Token = "0x6001040")]
		[Address(RVA = "0xF4F9FC", Offset = "0xF4F9FC", VA = "0xF4F9FC")]
		public static void UPvr_SwitchHomeKey(bool state)
		{
		}

		[Token(Token = "0x6001041")]
		[Address(RVA = "0xF4FA80", Offset = "0xF4FA80", VA = "0xF4FA80")]
		public static int UPvr_GetControllerSensorStatus(int id)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001042")]
		[Address(RVA = "0xF4F5A0", Offset = "0xF4F5A0", VA = "0xF4F5A0")]
		private static extern void Pvr_CalcArmModelParameters(float[] headOrientation, float[] controllerOrientation, float[] gyro);

		[PreserveSig]
		[Token(Token = "0x6001043")]
		[Address(RVA = "0xF4F674", Offset = "0xF4F674", VA = "0xF4F674")]
		private static extern void Pvr_GetPointerPose(float[] rotation, float[] position);

		[PreserveSig]
		[Token(Token = "0x6001044")]
		[Address(RVA = "0xF4F738", Offset = "0xF4F738", VA = "0xF4F738")]
		private static extern void Pvr_GetElbowPose(float[] rotation, float[] position);

		[PreserveSig]
		[Token(Token = "0x6001045")]
		[Address(RVA = "0xF4F7F8", Offset = "0xF4F7F8", VA = "0xF4F7F8")]
		private static extern void Pvr_GetWristPose(float[] rotation, float[] position);

		[PreserveSig]
		[Token(Token = "0x6001046")]
		[Address(RVA = "0xF4F8B8", Offset = "0xF4F8B8", VA = "0xF4F8B8")]
		private static extern void Pvr_GetShoulderPose(float[] rotation, float[] position);

		[PreserveSig]
		[Token(Token = "0x6001047")]
		[Address(RVA = "0xF4F4C4", Offset = "0xF4F4C4", VA = "0xF4F4C4")]
		private static extern void Pvr_SetArmModelParameters(int hand, int gazeType, float elbowHeight, float elbowDepth, float pointerTiltAngle);
	}
	[Token(Token = "0x2000230")]
	public enum ControllerVariety
	{
		[Token(Token = "0x4000D4E")]
		Controller0,
		[Token(Token = "0x4000D4F")]
		Controller1
	}
	[Token(Token = "0x2000231")]
	public enum ControllerDevice
	{
		[Token(Token = "0x4000D51")]
		Goblin,
		[Token(Token = "0x4000D52")]
		Neo,
		[Token(Token = "0x4000D53")]
		G2,
		[Token(Token = "0x4000D54")]
		Neo2,
		[Token(Token = "0x4000D55")]
		Neo3,
		[Token(Token = "0x4000D56")]
		NewController
	}
	[Token(Token = "0x2000232")]
	public enum PBS_SystemInfoEnum
	{
		[Token(Token = "0x4000D58")]
		ELECTRIC_QUANTITY,
		[Token(Token = "0x4000D59")]
		PUI_VERSION,
		[Token(Token = "0x4000D5A")]
		EQUIPMENT_MODEL,
		[Token(Token = "0x4000D5B")]
		EQUIPMENT_SN,
		[Token(Token = "0x4000D5C")]
		CUSTOMER_SN,
		[Token(Token = "0x4000D5D")]
		INTERNAL_STORAGE_SPACE_OF_THE_DEVICE,
		[Token(Token = "0x4000D5E")]
		DEVICE_BLUETOOTH_STATUS,
		[Token(Token = "0x4000D5F")]
		BLUETOOTH_NAME_CONNECTED,
		[Token(Token = "0x4000D60")]
		BLUETOOTH_MAC_ADDRESS,
		[Token(Token = "0x4000D61")]
		DEVICE_WIFI_STATUS,
		[Token(Token = "0x4000D62")]
		WIFI_NAME_CONNECTED,
		[Token(Token = "0x4000D63")]
		WLAN_MAC_ADDRESS,
		[Token(Token = "0x4000D64")]
		DEVICE_IP
	}
	[Token(Token = "0x2000233")]
	public enum PBS_DeviceControlEnum
	{
		[Token(Token = "0x4000D66")]
		DEVICE_CONTROL_REBOOT,
		[Token(Token = "0x4000D67")]
		DEVICE_CONTROL_SHUTDOWN
	}
	[Token(Token = "0x2000234")]
	public enum PBS_PackageControlEnum
	{
		[Token(Token = "0x4000D69")]
		PACKAGE_SILENCE_INSTALL,
		[Token(Token = "0x4000D6A")]
		PACKAGE_SILENCE_UNINSTALL
	}
	[Token(Token = "0x2000235")]
	public enum PBS_SwitchEnum
	{
		[Token(Token = "0x4000D6C")]
		S_ON,
		[Token(Token = "0x4000D6D")]
		S_OFF
	}
	[Token(Token = "0x2000236")]
	public enum PBS_HomeEventEnum
	{
		[Token(Token = "0x4000D6F")]
		SINGLE_CLICK,
		[Token(Token = "0x4000D70")]
		DOUBLE_CLICK,
		[Token(Token = "0x4000D71")]
		LONG_PRESS
	}
	[Token(Token = "0x2000237")]
	public enum PBS_HomeFunctionEnum
	{
		[Token(Token = "0x4000D73")]
		VALUE_HOME_GO_TO_SETTING,
		[Token(Token = "0x4000D74")]
		VALUE_HOME_BACK,
		[Token(Token = "0x4000D75")]
		VALUE_HOME_RECENTER,
		[Token(Token = "0x4000D76")]
		VALUE_HOME_OPEN_APP,
		[Token(Token = "0x4000D77")]
		VALUE_HOME_DISABLE,
		[Token(Token = "0x4000D78")]
		VALUE_HOME_GO_TO_HOME,
		[Token(Token = "0x4000D79")]
		VALUE_HOME_SEND_BROADCAST,
		[Token(Token = "0x4000D7A")]
		VALUE_HOME_CLEAN_MEMORY
	}
	[Token(Token = "0x2000238")]
	public enum PBS_ScreenOffDelayTimeEnum
	{
		[Token(Token = "0x4000D7C")]
		THREE = 3,
		[Token(Token = "0x4000D7D")]
		TEN = 10,
		[Token(Token = "0x4000D7E")]
		THIRTY = 30,
		[Token(Token = "0x4000D7F")]
		SIXTY = 60,
		[Token(Token = "0x4000D80")]
		THREE_HUNDRED = 300,
		[Token(Token = "0x4000D81")]
		SIX_HUNDRED = 600,
		[Token(Token = "0x4000D82")]
		NEVER = -1
	}
	[Token(Token = "0x2000239")]
	public enum PBS_SleepDelayTimeEnum
	{
		[Token(Token = "0x4000D84")]
		FIFTEEN = 15,
		[Token(Token = "0x4000D85")]
		THIRTY = 30,
		[Token(Token = "0x4000D86")]
		SIXTY = 60,
		[Token(Token = "0x4000D87")]
		THREE_HUNDRED = 300,
		[Token(Token = "0x4000D88")]
		SIX_HUNDRED = 600,
		[Token(Token = "0x4000D89")]
		ONE_THOUSAND_AND_EIGHT_HUNDRED = 1800,
		[Token(Token = "0x4000D8A")]
		NEVER = -1
	}
	[Token(Token = "0x200023A")]
	public enum PBS_SystemFunctionSwitchEnum
	{
		[Token(Token = "0x4000D8C")]
		SFS_USB,
		[Token(Token = "0x4000D8D")]
		SFS_AUTOSLEEP,
		[Token(Token = "0x4000D8E")]
		SFS_SCREENON_CHARGING,
		[Token(Token = "0x4000D8F")]
		SFS_OTG_CHARGING,
		[Token(Token = "0x4000D90")]
		SFS_RETURN_MENU_IN_2DMODE,
		[Token(Token = "0x4000D91")]
		SFS_COMBINATION_KEY,
		[Token(Token = "0x4000D92")]
		SFS_CALIBRATION_WITH_POWER_ON,
		[Token(Token = "0x4000D93")]
		SFS_SYSTEM_UPDATE,
		[Token(Token = "0x4000D94")]
		SFS_CAST_SERVICE,
		[Token(Token = "0x4000D95")]
		SFS_EYE_PROTECTION,
		[Token(Token = "0x4000D96")]
		SFS_SECURITY_ZONE_PERMANENTLY,
		[Token(Token = "0x4000D97")]
		SFS_GLOBAL_CALIBRATION,
		[Token(Token = "0x4000D98")]
		SFS_Auto_Calibration,
		[Token(Token = "0x4000D99")]
		SFS_USB_BOOT
	}
	[Token(Token = "0x200023B")]
	public enum PBS_USBConfigModeEnum
	{
		[Token(Token = "0x4000D9B")]
		MTP,
		[Token(Token = "0x4000D9C")]
		CHARGE
	}
	[Token(Token = "0x200023C")]
	public struct ToBService
	{
		[Token(Token = "0x4000D9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Action<bool> BoolCallback;

		[Token(Token = "0x4000D9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action<int> IntCallback;

		[Token(Token = "0x4000D9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Action<long> LongCallback;

		[Token(Token = "0x4000DA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static AndroidJavaClass unityPlayer;

		[Token(Token = "0x4000DA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static AndroidJavaObject currentActivity;

		[Token(Token = "0x4000DA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static AndroidJavaObject tobHelper;

		[Token(Token = "0x4000DA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static AndroidJavaClass tobHelperClass;

		[Token(Token = "0x6001048")]
		[Address(RVA = "0xF59244", Offset = "0xF59244", VA = "0xF59244")]
		public static void UPvr_InitToBService()
		{
		}

		[Token(Token = "0x6001049")]
		[Address(RVA = "0xF59388", Offset = "0xF59388", VA = "0xF59388")]
		public static void UPvr_SetUnityObjectName(string obj)
		{
		}

		[Token(Token = "0x600104A")]
		[Address(RVA = "0xF59464", Offset = "0xF59464", VA = "0xF59464")]
		public static void UPvr_BindToBService()
		{
		}

		[Token(Token = "0x600104B")]
		[Address(RVA = "0xF59548", Offset = "0xF59548", VA = "0xF59548")]
		public static void UPvr_UnBindToBService()
		{
		}

		[Token(Token = "0x600104C")]
		[Address(RVA = "0xF5962C", Offset = "0xF5962C", VA = "0xF5962C")]
		private static AndroidJavaObject GetEnumType(Enum enumType)
		{
			return null;
		}

		[Token(Token = "0x600104D")]
		[Address(RVA = "0xF5975C", Offset = "0xF5975C", VA = "0xF5975C")]
		public static string UPvr_StateGetDeviceInfo(PBS_SystemInfoEnum type)
		{
			return null;
		}

		[Token(Token = "0x600104E")]
		[Address(RVA = "0xF598EC", Offset = "0xF598EC", VA = "0xF598EC")]
		public static void UPvr_ControlSetDeviceAction(PBS_DeviceControlEnum deviceControl, Action<int> callback)
		{
		}

		[Token(Token = "0x600104F")]
		[Address(RVA = "0xF59A00", Offset = "0xF59A00", VA = "0xF59A00")]
		public static void UPvr_ControlAPPManger(PBS_PackageControlEnum packageControl, string path, Action<int> callback)
		{
		}

		[Token(Token = "0x6001050")]
		[Address(RVA = "0xF59BCC", Offset = "0xF59BCC", VA = "0xF59BCC")]
		public static void UPvr_ControlSetAutoConnectWIFI(string ssid, string pwd, Action<bool> callback)
		{
		}

		[Token(Token = "0x6001051")]
		[Address(RVA = "0xF59D80", Offset = "0xF59D80", VA = "0xF59D80")]
		public static void UPvr_ControlClearAutoConnectWIFI(Action<bool> callback)
		{
		}

		[Token(Token = "0x6001052")]
		[Address(RVA = "0xF59DFC", Offset = "0xF59DFC", VA = "0xF59DFC")]
		public static void UPvr_PropertySetHomeKey(PBS_HomeEventEnum eventEnum, PBS_HomeFunctionEnum function, Action<bool> callback)
		{
		}

		[Token(Token = "0x6001053")]
		[Address(RVA = "0xF59F90", Offset = "0xF59F90", VA = "0xF59F90")]
		public static void UPvr_PropertySetHomeKeyAll(PBS_HomeEventEnum eventEnum, PBS_HomeFunctionEnum function, int timesetup, string pkg, string className, Action<bool> callback)
		{
		}

		[Token(Token = "0x6001054")]
		[Address(RVA = "0xF5A234", Offset = "0xF5A234", VA = "0xF5A234")]
		public static void UPvr_PropertyDisablePowerKey(bool isSingleTap, bool enable, Action<int> callback)
		{
		}

		[Token(Token = "0x6001055")]
		[Address(RVA = "0xF5A3A8", Offset = "0xF5A3A8", VA = "0xF5A3A8")]
		public static void UPvr_PropertySetScreenOffDelay(PBS_ScreenOffDelayTimeEnum timeEnum, Action<int> callback)
		{
		}

		[Token(Token = "0x6001056")]
		[Address(RVA = "0xF5A4BC", Offset = "0xF5A4BC", VA = "0xF5A4BC")]
		public static void UPvr_PropertySetSleepDelay(PBS_SleepDelayTimeEnum timeEnum)
		{
		}

		[Token(Token = "0x6001057")]
		[Address(RVA = "0xF5A5C0", Offset = "0xF5A5C0", VA = "0xF5A5C0")]
		public static void UPvr_SwitchSystemFunction(PBS_SystemFunctionSwitchEnum systemFunction, PBS_SwitchEnum switchEnum)
		{
		}

		[Token(Token = "0x6001058")]
		[Address(RVA = "0xF5A79C", Offset = "0xF5A79C", VA = "0xF5A79C")]
		public static void UPvr_SwitchSetUsbConfigurationOption(PBS_USBConfigModeEnum uSBConfigModeEnum)
		{
		}

		[Token(Token = "0x6001059")]
		[Address(RVA = "0xF5A904", Offset = "0xF5A904", VA = "0xF5A904")]
		public static void UPvr_ScreenOn()
		{
		}

		[Token(Token = "0x600105A")]
		[Address(RVA = "0xF5A978", Offset = "0xF5A978", VA = "0xF5A978")]
		public static void UPvr_ScreenOff()
		{
		}

		[Token(Token = "0x600105B")]
		[Address(RVA = "0xF5A9EC", Offset = "0xF5A9EC", VA = "0xF5A9EC")]
		public static void UPvr_AcquireWakeLock()
		{
		}

		[Token(Token = "0x600105C")]
		[Address(RVA = "0xF5AA60", Offset = "0xF5AA60", VA = "0xF5AA60")]
		public static void UPvr_ReleaseWakeLock()
		{
		}

		[Token(Token = "0x600105D")]
		[Address(RVA = "0xF5AAD4", Offset = "0xF5AAD4", VA = "0xF5AAD4")]
		public static void UPvr_EnableEnterKey()
		{
		}

		[Token(Token = "0x600105E")]
		[Address(RVA = "0xF5AB48", Offset = "0xF5AB48", VA = "0xF5AB48")]
		public static void UPvr_DisableEnterKey()
		{
		}

		[Token(Token = "0x600105F")]
		[Address(RVA = "0xF5ABBC", Offset = "0xF5ABBC", VA = "0xF5ABBC")]
		public static void UPvr_EnableVolumeKey()
		{
		}

		[Token(Token = "0x6001060")]
		[Address(RVA = "0xF5AC30", Offset = "0xF5AC30", VA = "0xF5AC30")]
		public static void UPvr_DisableVolumeKey()
		{
		}

		[Token(Token = "0x6001061")]
		[Address(RVA = "0xF5ACA4", Offset = "0xF5ACA4", VA = "0xF5ACA4")]
		public static void UPvr_EnableBackKey()
		{
		}

		[Token(Token = "0x6001062")]
		[Address(RVA = "0xF5AD18", Offset = "0xF5AD18", VA = "0xF5AD18")]
		public static void UPvr_DisableBackKey()
		{
		}

		[Token(Token = "0x6001063")]
		[Address(RVA = "0xF5AD8C", Offset = "0xF5AD8C", VA = "0xF5AD8C")]
		public static void UPvr_WriteConfigFileToDataLocal(string path, string content, Action<bool> callback)
		{
		}

		[Token(Token = "0x6001064")]
		[Address(RVA = "0xF5AED0", Offset = "0xF5AED0", VA = "0xF5AED0")]
		public static void UPvr_ResetAllKeyToDefault(Action<bool> callback)
		{
		}
	}
	[Token(Token = "0x200023D")]
	public enum GlobalIntConfigs
	{
		[Token(Token = "0x4000DA5")]
		EYE_TEXTURE_RESOLUTION0,
		[Token(Token = "0x4000DA6")]
		EYE_TEXTURE_RESOLUTION1,
		[Token(Token = "0x4000DA7")]
		SEENSOR_COUNT,
		[Token(Token = "0x4000DA8")]
		ABILITY6DOF,
		[Token(Token = "0x4000DA9")]
		PLATFORM_TYPE,
		[Token(Token = "0x4000DAA")]
		TRACKING_MODE,
		[Token(Token = "0x4000DAB")]
		LOG_LEVEL,
		[Token(Token = "0x4000DAC")]
		ENBLE_HAND6DOF_BY_HEAD,
		[Token(Token = "0x4000DAD")]
		ENBLE_6DOF_GLOBAL_TRACKING,
		[Token(Token = "0x4000DAE")]
		TARGET_FRAME_RATE,
		[Token(Token = "0x4000DAF")]
		iShowFPS,
		[Token(Token = "0x4000DB0")]
		SensorMode,
		[Token(Token = "0x4000DB1")]
		LOGICFLOW,
		[Token(Token = "0x4000DB2")]
		EYE_TEXTURE_RES_HIGH,
		[Token(Token = "0x4000DB3")]
		EYE_TEXTURE_RES_NORMAL,
		[Token(Token = "0x4000DB4")]
		iCtrlModelLoadingPri,
		[Token(Token = "0x4000DB5")]
		iPhoneHMDModeEnabled,
		[Token(Token = "0x4000DB6")]
		isEnableBoundary,
		[Token(Token = "0x4000DB7")]
		Enable_Activity_Rotation,
		[Token(Token = "0x4000DB8")]
		GetDisplay_Orientation,
		[Token(Token = "0x4000DB9")]
		GetWaitFrameNum,
		[Token(Token = "0x4000DBA")]
		GetResetFrameNum,
		[Token(Token = "0x4000DBB")]
		EnableFFRBYSYS,
		[Token(Token = "0x4000DBC")]
		RotControllerMode
	}
	[Token(Token = "0x200023E")]
	public enum GlobalFloatConfigs
	{
		[Token(Token = "0x4000DBE")]
		IPD,
		[Token(Token = "0x4000DBF")]
		VFOV,
		[Token(Token = "0x4000DC0")]
		HFOV,
		[Token(Token = "0x4000DC1")]
		NECK_MODEL_X,
		[Token(Token = "0x4000DC2")]
		NECK_MODEL_Y,
		[Token(Token = "0x4000DC3")]
		NECK_MODEL_Z,
		[Token(Token = "0x4000DC4")]
		DISPLAY_REFRESH_RATE
	}
	[Token(Token = "0x200023F")]
	public enum RenderTextureAntiAliasing
	{
		[Token(Token = "0x4000DC6")]
		X_1 = 1,
		[Token(Token = "0x4000DC7")]
		X_2 = 2,
		[Token(Token = "0x4000DC8")]
		X_4 = 4,
		[Token(Token = "0x4000DC9")]
		X_8 = 8
	}
	[Token(Token = "0x2000240")]
	public enum PlatForm
	{
		[Token(Token = "0x4000DCB")]
		Android = 1,
		[Token(Token = "0x4000DCC")]
		IOS,
		[Token(Token = "0x4000DCD")]
		Win,
		[Token(Token = "0x4000DCE")]
		Notsupport
	}
	[Token(Token = "0x2000241")]
	public enum RenderTextureDepth
	{
		[Token(Token = "0x4000DD0")]
		BD_0 = 0,
		[Token(Token = "0x4000DD1")]
		BD_16 = 16,
		[Token(Token = "0x4000DD2")]
		BD_24 = 24
	}
	[Token(Token = "0x2000242")]
	public enum RenderTextureLevel
	{
		[Token(Token = "0x4000DD4")]
		Normal,
		[Token(Token = "0x4000DD5")]
		High
	}
	[Token(Token = "0x2000243")]
	public enum Sensorindex
	{
		[Token(Token = "0x4000DD7")]
		Default,
		[Token(Token = "0x4000DD8")]
		FirstSensor,
		[Token(Token = "0x4000DD9")]
		SecondSensor
	}
	[Token(Token = "0x2000244")]
	public enum Eye
	{
		[Token(Token = "0x4000DDB")]
		LeftEye,
		[Token(Token = "0x4000DDC")]
		RightEye,
		[Token(Token = "0x4000DDD")]
		BothEye
	}
	[Token(Token = "0x2000245")]
	public enum ResUtilsType
	{
		[Token(Token = "0x4000DDF")]
		TYPE_TEXTSIZE,
		[Token(Token = "0x4000DE0")]
		TYPE_COLOR,
		[Token(Token = "0x4000DE1")]
		TYPE_TEXT,
		[Token(Token = "0x4000DE2")]
		TYPE_FONT,
		[Token(Token = "0x4000DE3")]
		TYPE_VALUE,
		[Token(Token = "0x4000DE4")]
		TYPE_DRAWABLE,
		[Token(Token = "0x4000DE5")]
		TYPE_OBJECT,
		[Token(Token = "0x4000DE6")]
		TYPR_OBJECTARRAY
	}
	[Token(Token = "0x2000246")]
	public enum TrackingOrigin
	{
		[Token(Token = "0x4000DE8")]
		EyeLevel,
		[Token(Token = "0x4000DE9")]
		FloorLevel,
		[Token(Token = "0x4000DEA")]
		StageLevel
	}
	[Token(Token = "0x2000247")]
	public enum EFoveationLevel
	{
		[Token(Token = "0x4000DEC")]
		Low,
		[Token(Token = "0x4000DED")]
		Med,
		[Token(Token = "0x4000DEE")]
		High,
		[Token(Token = "0x4000DEF")]
		Top_High
	}
	[Token(Token = "0x2000248")]
	public enum StereoRenderingPathPico
	{
		[Token(Token = "0x4000DF1")]
		MultiPass,
		[Token(Token = "0x4000DF2")]
		SinglePass
	}
	[Token(Token = "0x2000249")]
	public enum pvrEyePoseStatus
	{
		[Token(Token = "0x4000DF4")]
		kGazePointValid = 1,
		[Token(Token = "0x4000DF5")]
		kGazeVectorValid = 2,
		[Token(Token = "0x4000DF6")]
		kEyeOpennessValid = 4,
		[Token(Token = "0x4000DF7")]
		kEyePupilDilationValid = 8,
		[Token(Token = "0x4000DF8")]
		kEyePositionGuideValid = 0x10
	}
	[Token(Token = "0x200024A")]
	public enum TrackingMode
	{
		[Token(Token = "0x4000DFA")]
		PVR_TRACKING_MODE_ROTATION = 1,
		[Token(Token = "0x4000DFB")]
		PVR_TRACKING_MODE_POSITION = 2,
		[Token(Token = "0x4000DFC")]
		PVR_TRACKING_MODE_EYE = 4
	}
	[Token(Token = "0x200024B")]
	public struct EyeTrackingData
	{
		[Token(Token = "0x4000DFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int leftEyePoseStatus;

		[Token(Token = "0x4000DFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int rightEyePoseStatus;

		[Token(Token = "0x4000DFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int combinedEyePoseStatus;

		[Token(Token = "0x4000E00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Vector3 leftEyeGazePoint;

		[Token(Token = "0x4000E01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 rightEyeGazePoint;

		[Token(Token = "0x4000E02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Vector3 combinedEyeGazePoint;

		[Token(Token = "0x4000E03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector3 leftEyeGazeVector;

		[Token(Token = "0x4000E04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public Vector3 rightEyeGazeVector;

		[Token(Token = "0x4000E05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Vector3 combinedEyeGazeVector;

		[Token(Token = "0x4000E06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float leftEyeOpenness;

		[Token(Token = "0x4000E07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float rightEyeOpenness;

		[Token(Token = "0x4000E08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float leftEyePupilDilation;

		[Token(Token = "0x4000E09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float rightEyePupilDilation;

		[Token(Token = "0x4000E0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public Vector3 leftEyePositionGuide;

		[Token(Token = "0x4000E0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Vector3 rightEyePositionGuide;

		[Token(Token = "0x4000E0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public Vector3 foveatedGazeDirection;

		[Token(Token = "0x4000E0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public int foveatedGazeTrackingState;

		[Token(Token = "0x4000E0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public byte[] reserved;
	}
	[Token(Token = "0x200024C")]
	public struct EyeTrackingGazeRay
	{
		[Token(Token = "0x4000E0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 Direction;

		[Token(Token = "0x4000E10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public bool IsValid;

		[Token(Token = "0x4000E11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 Origin;
	}
	[Token(Token = "0x200024D")]
	public struct EyeDeviceInfo
	{
		[Token(Token = "0x4000E12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ViewFrustum targetFrustumLeft;

		[Token(Token = "0x4000E13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ViewFrustum targetFrustumRight;
	}
	[Token(Token = "0x200024E")]
	public struct ViewFrustum
	{
		[Token(Token = "0x4000E14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float left;

		[Token(Token = "0x4000E15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float right;

		[Token(Token = "0x4000E16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float top;

		[Token(Token = "0x4000E17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float bottom;

		[Token(Token = "0x4000E18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float near;

		[Token(Token = "0x4000E19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float far;
	}
	[Token(Token = "0x200024F")]
	public struct EyeSetting
	{
		[Token(Token = "0x4000E1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Transform eyelocalPosition;

		[Token(Token = "0x4000E1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Rect eyeRect;

		[Token(Token = "0x4000E1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float eyeFov;

		[Token(Token = "0x4000E1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float eyeAspect;

		[Token(Token = "0x4000E1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Matrix4x4 eyeProjectionMatrix;

		[Token(Token = "0x4000E1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Shader eyeShader;
	}
	[Token(Token = "0x2000250")]
	public struct Sensor
	{
		[Token(Token = "0x4000E20")]
		public const string LibFileName = "Pvr_UnitySDK";

		[PreserveSig]
		[Token(Token = "0x6001065")]
		[Address(RVA = "0xF52C28", Offset = "0xF52C28", VA = "0xF52C28")]
		private static extern int Pvr_Enable6DofModule(bool enable);

		[PreserveSig]
		[Token(Token = "0x6001066")]
		[Address(RVA = "0xF52CC8", Offset = "0xF52CC8", VA = "0xF52CC8")]
		private static extern int Pvr_OptionalResetSensor(int index, int resetRot, int resetPos);

		[PreserveSig]
		[Token(Token = "0x6001067")]
		[Address(RVA = "0xF52D7C", Offset = "0xF52D7C", VA = "0xF52D7C")]
		private static extern int Pvr_Init(int index);

		[PreserveSig]
		[Token(Token = "0x6001068")]
		[Address(RVA = "0xF52E1C", Offset = "0xF52E1C", VA = "0xF52E1C")]
		private static extern int Pvr_StartSensor(int index);

		[PreserveSig]
		[Token(Token = "0x6001069")]
		[Address(RVA = "0xF52EBC", Offset = "0xF52EBC", VA = "0xF52EBC")]
		private static extern int Pvr_StopSensor(int index);

		[PreserveSig]
		[Token(Token = "0x600106A")]
		[Address(RVA = "0xF52F5C", Offset = "0xF52F5C", VA = "0xF52F5C")]
		private static extern int Pvr_ResetSensor(int index);

		[PreserveSig]
		[Token(Token = "0x600106B")]
		[Address(RVA = "0xF52FFC", Offset = "0xF52FFC", VA = "0xF52FFC")]
		private static extern int Pvr_ResetSensorAll(int index);

		[PreserveSig]
		[Token(Token = "0x600106C")]
		[Address(RVA = "0xF5309C", Offset = "0xF5309C", VA = "0xF5309C")]
		private static extern int Pvr_GetSensorState(int index, ref float x, ref float y, ref float z, ref float w, ref float px, ref float py, ref float pz);

		[PreserveSig]
		[Token(Token = "0x600106D")]
		[Address(RVA = "0xF53194", Offset = "0xF53194", VA = "0xF53194")]
		private static extern int Pvr_GetMainSensorState(ref float x, ref float y, ref float z, ref float w, ref float px, ref float py, ref float pz, ref float vfov, ref float hfov, ref int viewNumber);

		[PreserveSig]
		[Token(Token = "0x600106E")]
		[Address(RVA = "0xF53294", Offset = "0xF53294", VA = "0xF53294")]
		private static extern int Pvr_GetPsensorState();

		[PreserveSig]
		[Token(Token = "0x600106F")]
		[Address(RVA = "0xF53324", Offset = "0xF53324", VA = "0xF53324")]
		private static extern int Pvr_GetHmdPSensorStatus();

		[PreserveSig]
		[Token(Token = "0x6001070")]
		[Address(RVA = "0xF533B4", Offset = "0xF533B4", VA = "0xF533B4")]
		private static extern int Pvr_GetSensorGyroscope(int index, ref float x, ref float y, ref float z);

		[PreserveSig]
		[Token(Token = "0x6001071")]
		[Address(RVA = "0xF5347C", Offset = "0xF5347C", VA = "0xF5347C")]
		private static extern int Pvr_GetSensorMagnet(int index, ref float x, ref float y, ref float z);

		[PreserveSig]
		[Token(Token = "0x6001072")]
		[Address(RVA = "0xF53544", Offset = "0xF53544", VA = "0xF53544")]
		private static extern int Pvr_Get6DofSensorQualityStatus();

		[PreserveSig]
		[Token(Token = "0x6001073")]
		[Address(RVA = "0xF535D4", Offset = "0xF535D4", VA = "0xF535D4")]
		private static extern bool Pvr_Get6DofSafePanelFlag();

		[PreserveSig]
		[Token(Token = "0x6001074")]
		[Address(RVA = "0xF5366C", Offset = "0xF5366C", VA = "0xF5366C")]
		private static extern void Pvr_SetReinPosition(float x, float y, float z, float w, float px, float py, float pz, int hand, bool valid, int key);

		[PreserveSig]
		[Token(Token = "0x6001075")]
		[Address(RVA = "0xF5377C", Offset = "0xF5377C", VA = "0xF5377C")]
		private static extern bool Pvr_SetTrackingOriginType(TrackingOrigin trackingOriginType);

		[Token(Token = "0x6001076")]
		[Address(RVA = "0xF53824", Offset = "0xF53824", VA = "0xF53824")]
		public static bool UPvr_Pvr_Get6DofSafePanelFlag()
		{
			return default(bool);
		}

		[Token(Token = "0x6001077")]
		[Address(RVA = "0xF53828", Offset = "0xF53828", VA = "0xF53828")]
		public static int UPvr_Init(int index)
		{
			return default(int);
		}

		[Token(Token = "0x6001078")]
		[Address(RVA = "0xF5382C", Offset = "0xF5382C", VA = "0xF5382C")]
		public static void UPvr_InitPsensor()
		{
		}

		[Token(Token = "0x6001079")]
		[Address(RVA = "0xF53A30", Offset = "0xF53A30", VA = "0xF53A30")]
		public static int UPvr_GetPsensorState()
		{
			return default(int);
		}

		[Token(Token = "0x600107A")]
		[Address(RVA = "0xF53C1C", Offset = "0xF53C1C", VA = "0xF53C1C")]
		public static int UPvr_GetPSensorStatus()
		{
			return default(int);
		}

		[Token(Token = "0x600107B")]
		[Address(RVA = "0xF53C20", Offset = "0xF53C20", VA = "0xF53C20")]
		public static void UPvr_UnregisterPsensor()
		{
		}

		[Token(Token = "0x600107C")]
		[Address(RVA = "0xF53D9C", Offset = "0xF53D9C", VA = "0xF53D9C")]
		public static int UPvr_StartSensor(int index)
		{
			return default(int);
		}

		[Token(Token = "0x600107D")]
		[Address(RVA = "0xF53DA0", Offset = "0xF53DA0", VA = "0xF53DA0")]
		public static int UPvr_StopSensor(int index)
		{
			return default(int);
		}

		[Token(Token = "0x600107E")]
		[Address(RVA = "0xF53DA4", Offset = "0xF53DA4", VA = "0xF53DA4")]
		public static int UPvr_ResetSensor(int index)
		{
			return default(int);
		}

		[Token(Token = "0x600107F")]
		[Address(RVA = "0xF53E24", Offset = "0xF53E24", VA = "0xF53E24")]
		public static int UPvr_OptionalResetSensor(int index, int resetRot, int resetPos)
		{
			return default(int);
		}

		[Token(Token = "0x6001080")]
		[Address(RVA = "0xF53E28", Offset = "0xF53E28", VA = "0xF53E28")]
		public static int UPvr_GetSensorState(int index, ref float x, ref float y, ref float z, ref float w, ref float px, ref float py, ref float pz)
		{
			return default(int);
		}

		[Token(Token = "0x6001081")]
		[Address(RVA = "0xF53E2C", Offset = "0xF53E2C", VA = "0xF53E2C")]
		public static int UPvr_GetMainSensorState(ref float x, ref float y, ref float z, ref float w, ref float px, ref float py, ref float pz, ref float vfov, ref float hfov, ref int viewNumber)
		{
			return default(int);
		}

		[Token(Token = "0x6001082")]
		[Address(RVA = "0xF53E38", Offset = "0xF53E38", VA = "0xF53E38")]
		public static int UPvr_GetSensorGyroscope(int index, ref float x, ref float y, ref float z)
		{
			return default(int);
		}

		[Token(Token = "0x6001083")]
		[Address(RVA = "0xF53E3C", Offset = "0xF53E3C", VA = "0xF53E3C")]
		public static int UPvr_GetSensorMagnet(int index, ref float x, ref float y, ref float z)
		{
			return default(int);
		}

		[Token(Token = "0x6001084")]
		[Address(RVA = "0xF53E40", Offset = "0xF53E40", VA = "0xF53E40")]
		public static int UPvr_Get6DofSensorQualityStatus()
		{
			return default(int);
		}

		[Token(Token = "0x6001085")]
		[Address(RVA = "0xF53E44", Offset = "0xF53E44", VA = "0xF53E44")]
		public static int UPvr_Enable6DofModule(bool enable)
		{
			return default(int);
		}

		[Token(Token = "0x6001086")]
		[Address(RVA = "0xF53830", Offset = "0xF53830", VA = "0xF53830")]
		public static void Pvr_InitPsensor()
		{
		}

		[Token(Token = "0x6001087")]
		[Address(RVA = "0xF540C8", Offset = "0xF540C8", VA = "0xF540C8")]
		public static bool Pvr_IsHead6dofReset()
		{
			return default(bool);
		}

		[Token(Token = "0x6001088")]
		[Address(RVA = "0xF53A84", Offset = "0xF53A84", VA = "0xF53A84")]
		public static int Pvr_GetAndroidPsensorState()
		{
			return default(int);
		}

		[Token(Token = "0x6001089")]
		[Address(RVA = "0xF53C24", Offset = "0xF53C24", VA = "0xF53C24")]
		public static void Pvr_UnregisterPsensor()
		{
		}

		[Token(Token = "0x600108A")]
		[Address(RVA = "0xF54304", Offset = "0xF54304", VA = "0xF54304")]
		public static int UPvr_ResetSensorAll(int index)
		{
			return default(int);
		}

		[Token(Token = "0x600108B")]
		[Address(RVA = "0xF54308", Offset = "0xF54308", VA = "0xF54308")]
		public static void UPvr_SetReinPosition(float x, float y, float z, float w, float px, float py, float pz, int hand, bool valid, int key)
		{
		}

		[Token(Token = "0x600108C")]
		[Address(RVA = "0xF5485C", Offset = "0xF5485C", VA = "0xF5485C")]
		public static bool UPvr_SetTrackingOriginType(TrackingOrigin trackingOriginType)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000251")]
	public struct Render
	{
		[Token(Token = "0x4000E21")]
		public const string LibFileName = "Pvr_UnitySDK";

		[PreserveSig]
		[Token(Token = "0x600108D")]
		[Address(RVA = "0xF50D5C", Offset = "0xF50D5C", VA = "0xF50D5C")]
		private static extern void Pvr_ChangeScreenParameters(string model, int width, int height, double xppi, double yppi, double densityDpi);

		[PreserveSig]
		[Token(Token = "0x600108E")]
		[Address(RVA = "0xF50E4C", Offset = "0xF50E4C", VA = "0xF50E4C")]
		private static extern int Pvr_SetRatio(float midH, float midV);

		[PreserveSig]
		[Token(Token = "0x600108F")]
		[Address(RVA = "0xF50EF4", Offset = "0xF50EF4", VA = "0xF50EF4")]
		private static extern int Pvr_SetPupillaryPoint(bool enable);

		[PreserveSig]
		[Token(Token = "0x6001090")]
		[Address(RVA = "0xF50F94", Offset = "0xF50F94", VA = "0xF50F94")]
		private static extern IntPtr Pvr_GetSupportHMDTypes();

		[PreserveSig]
		[Token(Token = "0x6001091")]
		[Address(RVA = "0xF51024", Offset = "0xF51024", VA = "0xF51024")]
		private static extern void Pvr_SetCurrentHMDType(string type);

		[PreserveSig]
		[Token(Token = "0x6001092")]
		[Address(RVA = "0xF510D4", Offset = "0xF510D4", VA = "0xF510D4")]
		private static extern int Pvr_GetIntConfig(int configsenum, ref int res);

		[PreserveSig]
		[Token(Token = "0x6001093")]
		[Address(RVA = "0xF51180", Offset = "0xF51180", VA = "0xF51180")]
		private static extern int Pvr_GetFloatConfig(int configsenum, ref float res);

		[PreserveSig]
		[Token(Token = "0x6001094")]
		[Address(RVA = "0xF5122C", Offset = "0xF5122C", VA = "0xF5122C")]
		private static extern void Pvr_SetupLayerData(int layerIndex, int sideMask, int textureId, int textureType, int layerFlags, float[] colorScaleAndOffset);

		[PreserveSig]
		[Token(Token = "0x6001095")]
		[Address(RVA = "0xF51314", Offset = "0xF51314", VA = "0xF51314")]
		private static extern void Pvr_SetupLayerCoords(int layerIndex, int sideMask, float[] lowerLeft, float[] lowerRight, float[] upperLeft, float[] upperRight);

		[PreserveSig]
		[Token(Token = "0x6001096")]
		[Address(RVA = "0xF51414", Offset = "0xF51414", VA = "0xF51414")]
		private static extern void Pvr_SetOverlayModelViewMatrix(int overlayType, int overlayShape, int texId, int eyeSide, int layerIndex, bool isHeadLocked, int layerFlags, float[] mvMatrix, float[] modelS, float[] modelR, float[] modelT, float[] cameraR, float[] cameraT, float[] colorScaleAndOffset);

		[PreserveSig]
		[Token(Token = "0x6001097")]
		[Address(RVA = "0xF51574", Offset = "0xF51574", VA = "0xF51574")]
		private static extern bool Pvr_EnableFoveation(bool enable);

		[PreserveSig]
		[Token(Token = "0x6001098")]
		[Address(RVA = "0xF5161C", Offset = "0xF5161C", VA = "0xF5161C")]
		private static extern void Pvr_SetFoveationParameters(int textureId, int previousId, float focalPointX, float focalPointY, float foveationGainX, float foveationGainY, float foveationArea, float foveationMinimum);

		[PreserveSig]
		[Token(Token = "0x6001099")]
		[Address(RVA = "0xF51714", Offset = "0xF51714", VA = "0xF51714")]
		private static extern void Pvr_SetFoveationResource(int textureId, int previousId, float focalPointX, float focalPointY);

		[PreserveSig]
		[Token(Token = "0x600109A")]
		[Address(RVA = "0xF517DC", Offset = "0xF517DC", VA = "0xF517DC")]
		private static extern void Pvr_SetFoveationParameters2(float foveationGainX, float foveationGainY, float foveationArea, float foveationMinimum);

		[PreserveSig]
		[Token(Token = "0x600109B")]
		[Address(RVA = "0xF518A0", Offset = "0xF518A0", VA = "0xF518A0")]
		private static extern void Pvr_SetFoveationLevel(EFoveationLevel level);

		[PreserveSig]
		[Token(Token = "0x600109C")]
		[Address(RVA = "0xF51940", Offset = "0xF51940", VA = "0xF51940")]
		private static extern EFoveationLevel Pvr_GetFoveationLevel();

		[PreserveSig]
		[Token(Token = "0x600109D")]
		[Address(RVA = "0xF519D0", Offset = "0xF519D0", VA = "0xF519D0")]
		private static extern bool Pvr_GetIntSysProc(string property, ref int res);

		[PreserveSig]
		[Token(Token = "0x600109E")]
		[Address(RVA = "0xF51A9C", Offset = "0xF51A9C", VA = "0xF51A9C")]
		private static extern void Pvr_SetColorspaceType(int colorspaceType);

		[PreserveSig]
		[Token(Token = "0x600109F")]
		[Address(RVA = "0xF51B3C", Offset = "0xF51B3C", VA = "0xF51B3C")]
		private static extern void Pvr_SetCastingColorspaceType(int colorspaceType);

		[PreserveSig]
		[Token(Token = "0x60010A0")]
		[Address(RVA = "0xF51BDC", Offset = "0xF51BDC", VA = "0xF51BDC")]
		private static extern IntPtr Pvr_CreateLayerAndroidSurface(int layerType, int layerIndex);

		[PreserveSig]
		[Token(Token = "0x60010A1")]
		[Address(RVA = "0xF51C8C", Offset = "0xF51C8C", VA = "0xF51C8C")]
		private static extern IntPtr Pvr_GetLayerAndroidSurface(int layerType, int layerIndex);

		[PreserveSig]
		[Token(Token = "0x60010A2")]
		[Address(RVA = "0xF51D3C", Offset = "0xF51D3C", VA = "0xF51D3C")]
		private static extern void Pvr_SetMonoMode(bool openMono);

		[PreserveSig]
		[Token(Token = "0x60010A3")]
		[Address(RVA = "0xF51DDC", Offset = "0xF51DDC", VA = "0xF51DDC")]
		private static extern void Pvr_GetStencilMesh(int eye, ref int vertexCount, ref int triangleCount, ref IntPtr vertexData, ref IntPtr indexData);

		[Token(Token = "0x60010A4")]
		[Address(RVA = "0xF51EAC", Offset = "0xF51EAC", VA = "0xF51EAC")]
		public static void UPvr_ChangeScreenParameters(string model, int width, int height, double xppi, double yppi, double densityDpi)
		{
		}

		[Token(Token = "0x60010A5")]
		[Address(RVA = "0xF51EB0", Offset = "0xF51EB0", VA = "0xF51EB0")]
		public static int UPvr_SetRatio(float midH, float midV)
		{
			return default(int);
		}

		[Token(Token = "0x60010A6")]
		[Address(RVA = "0xF51EB4", Offset = "0xF51EB4", VA = "0xF51EB4")]
		public static void UPvr_EnableFoveation(bool enable)
		{
		}

		[Token(Token = "0x60010A7")]
		[Address(RVA = "0xF51F7C", Offset = "0xF51F7C", VA = "0xF51F7C")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x66A88C", Offset = "0x66A88C")]
		public static void UPvr_SetFoveationParameters(int textureId, int previousId, float focalPointX, float focalPointY, float foveationGainX, float foveationGainY, float foveationArea, float foveationMinimum)
		{
		}

		[Token(Token = "0x60010A8")]
		[Address(RVA = "0xF51F80", Offset = "0xF51F80", VA = "0xF51F80")]
		public static void UPvr_SetFoveationResource(int textureId, int previousId, float focalPointX, float focalPointY)
		{
		}

		[Token(Token = "0x60010A9")]
		[Address(RVA = "0xF51F84", Offset = "0xF51F84", VA = "0xF51F84")]
		public static void SetFoveatedRenderingLevel(EFoveationLevel level)
		{
		}

		[Token(Token = "0x60010AA")]
		[Address(RVA = "0xF520A8", Offset = "0xF520A8", VA = "0xF520A8")]
		public static EFoveationLevel GetFoveatedRenderingLevel()
		{
			return default(EFoveationLevel);
		}

		[Token(Token = "0x60010AB")]
		[Address(RVA = "0xF520AC", Offset = "0xF520AC", VA = "0xF520AC")]
		public static void SetFoveatedRenderingParameters(Vector2 ffrGainValue, float ffrAreaValue, float ffrMinimumValue)
		{
		}

		[Token(Token = "0x60010AC")]
		[Address(RVA = "0xF52200", Offset = "0xF52200", VA = "0xF52200")]
		public static bool UPvr_GetIntSysProc(string property, ref int res)
		{
			return default(bool);
		}

		[Token(Token = "0x60010AD")]
		[Address(RVA = "0xF52204", Offset = "0xF52204", VA = "0xF52204")]
		public static int UPvr_GetIntConfig(int configsenum, ref int res)
		{
			return default(int);
		}

		[Token(Token = "0x60010AE")]
		[Address(RVA = "0xF52208", Offset = "0xF52208", VA = "0xF52208")]
		public static int UPvr_GetFloatConfig(int configsenum, ref float res)
		{
			return default(int);
		}

		[Token(Token = "0x60010AF")]
		[Address(RVA = "0xF5220C", Offset = "0xF5220C", VA = "0xF5220C")]
		public static string UPvr_GetSupportHMDTypes()
		{
			return null;
		}

		[Token(Token = "0x60010B0")]
		[Address(RVA = "0xF52298", Offset = "0xF52298", VA = "0xF52298")]
		public static void UPvr_SetCurrentHMDType(string type)
		{
		}

		[Token(Token = "0x60010B1")]
		[Address(RVA = "0xF5229C", Offset = "0xF5229C", VA = "0xF5229C")]
		public static void UPvr_SetupLayerData(int layerIndex, int sideMask, int textureId, int textureType, int layerFlags, Vector4 colorScale, Vector4 colorOffset)
		{
		}

		[Token(Token = "0x60010B2")]
		[Address(RVA = "0xF52470", Offset = "0xF52470", VA = "0xF52470")]
		public static void UPvr_SetupLayerCoords(int layerIndex, int sideMask, float[] lowerLeft, float[] lowerRight, float[] upperLeft, float[] upperRight)
		{
		}

		[Token(Token = "0x60010B3")]
		[Address(RVA = "0xF52474", Offset = "0xF52474", VA = "0xF52474")]
		public static void UPvr_SetOverlayModelViewMatrix(int overlayType, int overlayShape, int texId, int eyeSide, int layerIndex, bool isHeadLocked, int layerFlags, Matrix4x4 mvMatrix, Vector3 modelS, Quaternion modelR, Vector3 modelT, Quaternion cameraR, Vector3 cameraT, Vector4 colorScale, Vector4 colorOffset)
		{
		}

		[Token(Token = "0x60010B4")]
		[Address(RVA = "0xF52C10", Offset = "0xF52C10", VA = "0xF52C10")]
		public static void UPvr_SetColorspaceType(int colorspaceType)
		{
		}

		[Token(Token = "0x60010B5")]
		[Address(RVA = "0xF52C14", Offset = "0xF52C14", VA = "0xF52C14")]
		public static void UPvr_SetCastingColorspaceType(int colorspaceType)
		{
		}

		[Token(Token = "0x60010B6")]
		[Address(RVA = "0xF52C18", Offset = "0xF52C18", VA = "0xF52C18")]
		public static IntPtr UPvr_CreateLayerAndroidSurface(int layerType, int layerIndex)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x60010B7")]
		[Address(RVA = "0xF52C1C", Offset = "0xF52C1C", VA = "0xF52C1C")]
		public static IntPtr UPvr_GetLayerAndroidSurface(int layerType, int layerIndex)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x60010B8")]
		[Address(RVA = "0xF52C20", Offset = "0xF52C20", VA = "0xF52C20")]
		public static void UPvr_SetMonoMode(bool openMono)
		{
		}

		[Token(Token = "0x60010B9")]
		[Address(RVA = "0xF423B4", Offset = "0xF423B4", VA = "0xF423B4")]
		public static void UPvr_GetStencilMesh(int eye, ref int vertexCount, ref int triangleCount, ref IntPtr vertexDataPtr, ref IntPtr indexDataPtr)
		{
		}
	}
	[Token(Token = "0x2000252")]
	public struct System
	{
		[Token(Token = "0x4000E22")]
		public const string LibFileName = "Pvr_UnitySDK";

		[Token(Token = "0x4000E23")]
		public const string UnitySDKVersion = "2.8.9.12";

		[PreserveSig]
		[Token(Token = "0x60010BA")]
		[Address(RVA = "0xF54860", Offset = "0xF54860", VA = "0xF54860")]
		public static extern void Pvr_SetInitActivity(IntPtr activity, IntPtr vrActivityClass);

		[PreserveSig]
		[Token(Token = "0x60010BB")]
		[Address(RVA = "0xF54910", Offset = "0xF54910", VA = "0xF54910")]
		private static extern IntPtr Pvr_GetSDKVersion();

		[PreserveSig]
		[Token(Token = "0x60010BC")]
		[Address(RVA = "0xF549A0", Offset = "0xF549A0", VA = "0xF549A0")]
		public static extern int Pvr_GetHmdHardwareVersion();

		[PreserveSig]
		[Token(Token = "0x60010BD")]
		[Address(RVA = "0xF54A30", Offset = "0xF54A30", VA = "0xF54A30")]
		public static extern IntPtr Pvr_GetHmdFirmwareVersion();

		[PreserveSig]
		[Token(Token = "0x60010BE")]
		[Address(RVA = "0xF54AC0", Offset = "0xF54AC0", VA = "0xF54AC0")]
		public static extern IntPtr Pvr_GetHmdSerialNumber();

		[PreserveSig]
		[Token(Token = "0x60010BF")]
		[Address(RVA = "0xF54B50", Offset = "0xF54B50", VA = "0xF54B50")]
		public static extern int PVR_GetHmdBatteryStatus();

		[PreserveSig]
		[Token(Token = "0x60010C0")]
		[Address(RVA = "0xF54BE0", Offset = "0xF54BE0", VA = "0xF54BE0")]
		public static extern float PVR_GetHmdBatteryTemperature();

		[PreserveSig]
		[Token(Token = "0x60010C1")]
		[Address(RVA = "0xF54C70", Offset = "0xF54C70", VA = "0xF54C70")]
		public static extern int PVR_SetHmdAudioStatus(bool enable);

		[PreserveSig]
		[Token(Token = "0x60010C2")]
		[Address(RVA = "0xF54D10", Offset = "0xF54D10", VA = "0xF54D10")]
		public static extern bool Pvr_GetEyeTrackingData(ref int leftEyePoseStatus, ref int rightEyePoseStatus, ref int combinedEyePoseStatus, ref float leftEyeGazePointX, ref float leftEyeGazePointY, ref float leftEyeGazePointZ, ref float rightEyeGazePointX, ref float rightEyeGazePointY, ref float rightEyeGazePointZ, ref float combinedEyeGazePointX, ref float combinedEyeGazePointY, ref float combinedEyeGazePointZ, ref float leftEyeGazeVectorX, ref float leftEyeGazeVectorY, ref float leftEyeGazeVectorZ, ref float rightEyeGazeVectorX, ref float rightEyeGazeVectorY, ref float rightEyeGazeVectorZ, ref float combinedEyeGazeVectorX, ref float combinedEyeGazeVectorY, ref float combinedEyeGazeVectorZ, ref float leftEyeOpenness, ref float rightEyeOpenness, ref float leftEyePupilDilation, ref float rightEyePupilDilation, ref float leftEyePositionGuideX, ref float leftEyePositionGuideY, ref float leftEyePositionGuideZ, ref float rightEyePositionGuideX, ref float rightEyePositionGuideY, ref float rightEyePositionGuideZ, ref float foveatedGazeDirectionX, ref float foveatedGazeDirectionY, ref float foveatedGazeDirectionZ, ref int foveatedGazeTrackingState);

		[PreserveSig]
		[Token(Token = "0x60010C3")]
		[Address(RVA = "0xF54E68", Offset = "0xF54E68", VA = "0xF54E68")]
		public static extern bool Pvr_SetTrackingMode(int trackingMode);

		[PreserveSig]
		[Token(Token = "0x60010C4")]
		[Address(RVA = "0xF54F10", Offset = "0xF54F10", VA = "0xF54F10")]
		public static extern int Pvr_GetTrackingMode();

		[PreserveSig]
		[Token(Token = "0x60010C5")]
		[Address(RVA = "0xF54FA0", Offset = "0xF54FA0", VA = "0xF54FA0")]
		public static extern IntPtr GetRenderEventFunc();

		[PreserveSig]
		[Token(Token = "0x60010C6")]
		[Address(RVA = "0xF55030", Offset = "0xF55030", VA = "0xF55030")]
		public static extern void UnityEventData(long data);

		[PreserveSig]
		[Token(Token = "0x60010C7")]
		[Address(RVA = "0xF550D0", Offset = "0xF550D0", VA = "0xF550D0")]
		public static extern bool Pvr_EnableSinglePass(bool enable);

		[PreserveSig]
		[Token(Token = "0x60010C8")]
		[Address(RVA = "0xF55178", Offset = "0xF55178", VA = "0xF55178")]
		public static extern void Pvr_SetAntiAliasing(int antiAliasing);

		[PreserveSig]
		[Token(Token = "0x60010C9")]
		[Address(RVA = "0xF55218", Offset = "0xF55218", VA = "0xF55218")]
		public static extern void Pvr_SinglePassBeforeForwardOpaque();

		[PreserveSig]
		[Token(Token = "0x60010CA")]
		[Address(RVA = "0xF552A8", Offset = "0xF552A8", VA = "0xF552A8")]
		public static extern void Pvr_SetCurrentRenderTexture(uint textureId);

		[PreserveSig]
		[Token(Token = "0x60010CB")]
		[Address(RVA = "0xF55348", Offset = "0xF55348", VA = "0xF55348")]
		public static extern bool Pvr_SetSinglePassDepthBufferWidthHeight(int width, int height);

		[PreserveSig]
		[Token(Token = "0x60010CC")]
		[Address(RVA = "0xF55400", Offset = "0xF55400", VA = "0xF55400")]
		public static extern int PVR_setPerformanceLevels(int cpuLevel, int gpuLevel);

		[PreserveSig]
		[Token(Token = "0x60010CD")]
		[Address(RVA = "0xF554B0", Offset = "0xF554B0", VA = "0xF554B0")]
		public static extern bool Pvr_SetIPD(float distance);

		[PreserveSig]
		[Token(Token = "0x60010CE")]
		[Address(RVA = "0xF5555C", Offset = "0xF5555C", VA = "0xF5555C")]
		public static extern float Pvr_GetIPD();

		[PreserveSig]
		[Token(Token = "0x60010CF")]
		[Address(RVA = "0xF555EC", Offset = "0xF555EC", VA = "0xF555EC")]
		public static extern bool Pvr_SetTrackingIPDEnabled(bool enable);

		[PreserveSig]
		[Token(Token = "0x60010D0")]
		[Address(RVA = "0xF55694", Offset = "0xF55694", VA = "0xF55694")]
		public static extern bool Pvr_GetTrackingIPDEnabled();

		[PreserveSig]
		[Token(Token = "0x60010D1")]
		[Address(RVA = "0xF5572C", Offset = "0xF5572C", VA = "0xF5572C")]
		public static extern bool Pvr_GetEyeTrackingAutoIPD(ref float autoIPD);

		[PreserveSig]
		[Token(Token = "0x60010D2")]
		[Address(RVA = "0xF50CCC", Offset = "0xF50CCC", VA = "0xF50CCC")]
		public static extern int PVR_GetHmdAudioStatus();

		[Token(Token = "0x60010D3")]
		public static bool UPvr_CallStaticMethod<T>(ref T result, AndroidJavaClass jclass, string name, params object[] args)
		{
			return default(bool);
		}

		[Token(Token = "0x60010D4")]
		[Address(RVA = "0xF53E4C", Offset = "0xF53E4C", VA = "0xF53E4C")]
		public static bool UPvr_CallStaticMethod(AndroidJavaObject jobj, string name, params object[] args)
		{
			return default(bool);
		}

		[Token(Token = "0x60010D5")]
		public static bool UPvr_CallMethod<T>(ref T result, AndroidJavaObject jobj, string name, params object[] args)
		{
			return default(bool);
		}

		[Token(Token = "0x60010D6")]
		[Address(RVA = "0xF557D4", Offset = "0xF557D4", VA = "0xF557D4")]
		public static bool UPvr_CallMethod(AndroidJavaObject jobj, string name, params object[] args)
		{
			return default(bool);
		}

		[Token(Token = "0x60010D7")]
		[Address(RVA = "0xF55A50", Offset = "0xF55A50", VA = "0xF55A50")]
		public static string UPvr_GetSDKVersion()
		{
			return null;
		}

		[Token(Token = "0x60010D8")]
		[Address(RVA = "0xF55AE4", Offset = "0xF55AE4", VA = "0xF55AE4")]
		public static string UPvr_GetUnitySDKVersion()
		{
			return null;
		}

		[Token(Token = "0x60010D9")]
		[Address(RVA = "0xF55B2C", Offset = "0xF55B2C", VA = "0xF55B2C")]
		public static string UPvr_GetDeviceMode()
		{
			return null;
		}

		[Token(Token = "0x60010DA")]
		[Address(RVA = "0xF55B34", Offset = "0xF55B34", VA = "0xF55B34")]
		public static string UPvr_GetDeviceModel()
		{
			return null;
		}

		[Token(Token = "0x60010DB")]
		[Address(RVA = "0xF4FF50", Offset = "0xF4FF50", VA = "0xF4FF50")]
		public static string UPvr_GetDeviceSN()
		{
			return null;
		}

		[Token(Token = "0x60010DC")]
		[Address(RVA = "0xF50308", Offset = "0xF50308", VA = "0xF50308")]
		public static AndroidJavaObject UPvr_GetCurrentActivity()
		{
			return null;
		}

		[Token(Token = "0x60010DD")]
		[Address(RVA = "0xF55B3C", Offset = "0xF55B3C", VA = "0xF55B3C")]
		public static bool UPvr_SetMonoPresentation()
		{
			return default(bool);
		}

		[Token(Token = "0x60010DE")]
		[Address(RVA = "0xF55BA8", Offset = "0xF55BA8", VA = "0xF55BA8")]
		public static bool UPvr_IsPresentationExisted()
		{
			return default(bool);
		}

		[Token(Token = "0x60010DF")]
		[Address(RVA = "0xF55C38", Offset = "0xF55C38", VA = "0xF55C38")]
		public static bool UPvr_GetMainActivityPauseStatus()
		{
			return default(bool);
		}

		[Token(Token = "0x60010E0")]
		[Address(RVA = "0xF55CC8", Offset = "0xF55CC8", VA = "0xF55CC8")]
		public static void UPvr_Sleep()
		{
		}

		[Token(Token = "0x60010E1")]
		[Address(RVA = "0xF55D54", Offset = "0xF55D54", VA = "0xF55D54")]
		public static bool UPvr_StartHomeKeyReceiver(string startreceivre)
		{
			return default(bool);
		}

		[Token(Token = "0x60010E2")]
		[Address(RVA = "0xF55FFC", Offset = "0xF55FFC", VA = "0xF55FFC")]
		public static bool UPvr_StopHomeKeyReceiver()
		{
			return default(bool);
		}

		[Token(Token = "0x60010E3")]
		[Address(RVA = "0xF56254", Offset = "0xF56254", VA = "0xF56254")]
		public static void UPvr_StartVRModel()
		{
		}

		[Token(Token = "0x60010E4")]
		[Address(RVA = "0xF562E0", Offset = "0xF562E0", VA = "0xF562E0")]
		public static void UPvr_RemovePlatformLogo()
		{
		}

		[Token(Token = "0x60010E5")]
		[Address(RVA = "0xF5636C", Offset = "0xF5636C", VA = "0xF5636C")]
		public static void UPvr_ShowPlatformLogo()
		{
		}

		[Token(Token = "0x60010E6")]
		[Address(RVA = "0xF563F8", Offset = "0xF563F8", VA = "0xF563F8")]
		public static bool UPvr_IsPicoActivity()
		{
			return default(bool);
		}

		[Token(Token = "0x60010E7")]
		[Address(RVA = "0xF56518", Offset = "0xF56518", VA = "0xF56518")]
		public static void UPvr_StopVRModel()
		{
		}

		[Token(Token = "0x60010E8")]
		[Address(RVA = "0xF565A4", Offset = "0xF565A4", VA = "0xF565A4")]
		public static string UPvr_GetCountryCode()
		{
			return null;
		}

		[Token(Token = "0x60010E9")]
		[Address(RVA = "0xF566C8", Offset = "0xF566C8", VA = "0xF566C8")]
		public static bool UPvr_SetIPD(float distance)
		{
			return default(bool);
		}

		[Token(Token = "0x60010EA")]
		[Address(RVA = "0xF56820", Offset = "0xF56820", VA = "0xF56820")]
		public static float UPvr_GetIPD()
		{
			return default(float);
		}

		[Token(Token = "0x60010EB")]
		[Address(RVA = "0xF568E0", Offset = "0xF568E0", VA = "0xF568E0")]
		public static bool UPvr_SetTrackingIPDEnabled(bool enable)
		{
			return default(bool);
		}

		[Token(Token = "0x60010EC")]
		[Address(RVA = "0xF568E8", Offset = "0xF568E8", VA = "0xF568E8")]
		public static bool UPvr_GetTrackingIPDEnabled()
		{
			return default(bool);
		}

		[Token(Token = "0x60010ED")]
		[Address(RVA = "0xF568EC", Offset = "0xF568EC", VA = "0xF568EC")]
		public static bool UPvr_GetEyeTrackingAutoIPD(ref float autoipd)
		{
			return default(bool);
		}

		[Token(Token = "0x60010EE")]
		[Address(RVA = "0xF4A424", Offset = "0xF4A424", VA = "0xF4A424")]
		public static void UPvr_UnityEventData(long data)
		{
		}

		[Token(Token = "0x60010EF")]
		[Address(RVA = "0xF568F0", Offset = "0xF568F0", VA = "0xF568F0")]
		public static long UPvr_GetEyeBufferData(int id)
		{
			return default(long);
		}

		[Token(Token = "0x60010F0")]
		[Address(RVA = "0xF56970", Offset = "0xF56970", VA = "0xF56970")]
		public static bool UPvr_checkDevice(string packagename)
		{
			return default(bool);
		}

		[Token(Token = "0x60010F1")]
		[Address(RVA = "0xF56AD0", Offset = "0xF56AD0", VA = "0xF56AD0")]
		public static int UPvr_GetHmdHardwareVersion()
		{
			return default(int);
		}

		[Token(Token = "0x60010F2")]
		[Address(RVA = "0xF56AD4", Offset = "0xF56AD4", VA = "0xF56AD4")]
		public static string UPvr_GetHmdFirmwareVersion()
		{
			return null;
		}

		[Token(Token = "0x60010F3")]
		[Address(RVA = "0xF56B68", Offset = "0xF56B68", VA = "0xF56B68")]
		public static string UPvr_GetHmdSerialNumber()
		{
			return null;
		}

		[Token(Token = "0x60010F4")]
		[Address(RVA = "0xF56BFC", Offset = "0xF56BFC", VA = "0xF56BFC")]
		public static int UPvr_GetHmdBatteryStatus()
		{
			return default(int);
		}

		[Token(Token = "0x60010F5")]
		[Address(RVA = "0xF56C00", Offset = "0xF56C00", VA = "0xF56C00")]
		public static float UPvr_GetHmdBatteryTemperature()
		{
			return default(float);
		}

		[Token(Token = "0x60010F6")]
		[Address(RVA = "0xF56C04", Offset = "0xF56C04", VA = "0xF56C04")]
		public static int UPvr_SetHmdAudioStatus(bool enable)
		{
			return default(int);
		}

		[Token(Token = "0x60010F7")]
		[Address(RVA = "0xF56C0C", Offset = "0xF56C0C", VA = "0xF56C0C")]
		public static int UPvr_GetTrackingMode()
		{
			return default(int);
		}

		[Token(Token = "0x60010F8")]
		[Address(RVA = "0xF56C10", Offset = "0xF56C10", VA = "0xF56C10")]
		public static bool UPvr_setTrackingMode(int trackingMode)
		{
			return default(bool);
		}

		[Token(Token = "0x60010F9")]
		[Address(RVA = "0xF56C14", Offset = "0xF56C14", VA = "0xF56C14")]
		public static bool UPvr_getEyeTrackingData(ref EyeTrackingData trackingData)
		{
			return default(bool);
		}

		[Token(Token = "0x60010FA")]
		[Address(RVA = "0xF56E84", Offset = "0xF56E84", VA = "0xF56E84")]
		public static bool UPvr_getEyeTrackingGazeRay(ref EyeTrackingGazeRay gazeRay)
		{
			return default(bool);
		}

		[Token(Token = "0x60010FB")]
		[Address(RVA = "0xF570F8", Offset = "0xF570F8", VA = "0xF570F8")]
		public static bool UPvr_getEyeTrackingGazeRayWorld(ref EyeTrackingGazeRay gazeRay)
		{
			return default(bool);
		}

		[Token(Token = "0x60010FC")]
		[Address(RVA = "0xF57414", Offset = "0xF57414", VA = "0xF57414")]
		public static Vector3 UPvr_getEyeTrackingPos()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60010FD")]
		[Address(RVA = "0xF57574", Offset = "0xF57574", VA = "0xF57574")]
		public static int UPvr_GetPhoneScreenBrightness()
		{
			return default(int);
		}

		[Token(Token = "0x60010FE")]
		[Address(RVA = "0xF5768C", Offset = "0xF5768C", VA = "0xF5768C")]
		public static void UPvr_SetPhoneScreenBrightness(int level)
		{
		}

		[Token(Token = "0x60010FF")]
		[Address(RVA = "0xF577FC", Offset = "0xF577FC", VA = "0xF577FC")]
		public static bool UPvr_IsPicoDefaultActivity()
		{
			return default(bool);
		}

		[Token(Token = "0x6001100")]
		[Address(RVA = "0xF57B1C", Offset = "0xF57B1C", VA = "0xF57B1C")]
		public static bool UPvr_EnableSinglePass(bool enable)
		{
			return default(bool);
		}

		[Token(Token = "0x6001101")]
		[Address(RVA = "0xF57B24", Offset = "0xF57B24", VA = "0xF57B24")]
		public static void UPvr_SetAntiAliasing(int antiAliasing)
		{
		}

		[Token(Token = "0x6001102")]
		[Address(RVA = "0xF57B28", Offset = "0xF57B28", VA = "0xF57B28")]
		public static void UPvr_SinglePassBeforeForwardOpaque()
		{
		}

		[Token(Token = "0x6001103")]
		[Address(RVA = "0xF57B2C", Offset = "0xF57B2C", VA = "0xF57B2C")]
		public static void UPvr_SetCurrentRenderTexture(uint textureId)
		{
		}

		[Token(Token = "0x6001104")]
		[Address(RVA = "0xF57B30", Offset = "0xF57B30", VA = "0xF57B30")]
		public static bool UPvr_SetSinglePassDepthBufferWidthHeight(int width, int height)
		{
			return default(bool);
		}

		[Token(Token = "0x6001105")]
		[Address(RVA = "0xF57B34", Offset = "0xF57B34", VA = "0xF57B34")]
		public static int UPVR_setPerformanceLevels(int cpuLevel, int gpuLevel)
		{
			return default(int);
		}

		[Token(Token = "0x6001106")]
		[Address(RVA = "0xF57B38", Offset = "0xF57B38", VA = "0xF57B38")]
		public static int UPvr_GetColorRes(string name)
		{
			return default(int);
		}

		[Token(Token = "0x6001107")]
		[Address(RVA = "0xF57D2C", Offset = "0xF57D2C", VA = "0xF57D2C")]
		public static int UPvr_GetConfigInt(string name)
		{
			return default(int);
		}

		[Token(Token = "0x6001108")]
		[Address(RVA = "0xF57F20", Offset = "0xF57F20", VA = "0xF57F20")]
		public static string UPvr_GetConfigString(string name)
		{
			return null;
		}

		[Token(Token = "0x6001109")]
		[Address(RVA = "0xF5811C", Offset = "0xF5811C", VA = "0xF5811C")]
		public static string UPvr_GetDrawableLocation(string name)
		{
			return null;
		}

		[Token(Token = "0x600110A")]
		[Address(RVA = "0xF58318", Offset = "0xF58318", VA = "0xF58318")]
		public static int UPvr_GetTextSize(string name)
		{
			return default(int);
		}

		[Token(Token = "0x600110B")]
		[Address(RVA = "0xF5850C", Offset = "0xF5850C", VA = "0xF5850C")]
		public static string UPvr_GetLangString(string name)
		{
			return null;
		}

		[Token(Token = "0x600110C")]
		[Address(RVA = "0xF58708", Offset = "0xF58708", VA = "0xF58708")]
		public static string UPvr_GetStringValue(string id, int type)
		{
			return null;
		}

		[Token(Token = "0x600110D")]
		[Address(RVA = "0xF5897C", Offset = "0xF5897C", VA = "0xF5897C")]
		public static int UPvr_GetIntValue(string id, int type)
		{
			return default(int);
		}

		[Token(Token = "0x600110E")]
		[Address(RVA = "0xF58BE8", Offset = "0xF58BE8", VA = "0xF58BE8")]
		public static float UPvr_GetFloatValue(string id)
		{
			return default(float);
		}

		[Token(Token = "0x600110F")]
		[Address(RVA = "0xF58DDC", Offset = "0xF58DDC", VA = "0xF58DDC")]
		public static string UPvr_GetObjectOrArray(string id, int type)
		{
			return null;
		}

		[Token(Token = "0x6001110")]
		[Address(RVA = "0xF59050", Offset = "0xF59050", VA = "0xF59050")]
		public static int UPvr_GetCharSpace(string id)
		{
			return default(int);
		}
	}
	[Token(Token = "0x2000253")]
	public struct BoundarySystem
	{
		[Token(Token = "0x2000672")]
		public enum BoundaryType
		{
			[Token(Token = "0x4002897")]
			OuterBoundary,
			[Token(Token = "0x4002898")]
			PlayArea
		}

		[Token(Token = "0x2000673")]
		public struct BoundaryTestResult
		{
			[Token(Token = "0x4002899")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public bool IsTriggering;

			[Token(Token = "0x400289A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public float ClosestDistance;

			[Token(Token = "0x400289B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Vector3 ClosestPoint;

			[Token(Token = "0x400289C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public Vector3 ClosestPointNormal;
		}

		[Token(Token = "0x2000674")]
		public enum BoundaryTrackingNode
		{
			[Token(Token = "0x400289E")]
			HandLeft,
			[Token(Token = "0x400289F")]
			HandRight,
			[Token(Token = "0x40028A0")]
			Head
		}

		[Token(Token = "0x2000675")]
		public enum BoundaryTrackingState
		{
			[Token(Token = "0x40028A2")]
			PVR_NOREASON,
			[Token(Token = "0x40028A3")]
			PVRRELOCATION_IN_PROGRESS,
			[Token(Token = "0x40028A4")]
			PVRLOW_FEATURE_COUNT_ERROR,
			[Token(Token = "0x40028A5")]
			PVRLOW_LIGHT_ERROR,
			[Token(Token = "0x40028A6")]
			PVRBRIGHT_LIGHT_ERROR,
			[Token(Token = "0x40028A7")]
			PVRSTEREO_CAMERA_CALIBRATION_ERROR
		}

		[Token(Token = "0x4000E24")]
		public const string LibFileName = "Pvr_UnitySDK";

		[PreserveSig]
		[Token(Token = "0x6001111")]
		[Address(RVA = "0xF48C7C", Offset = "0xF48C7C", VA = "0xF48C7C")]
		private static extern float Pvr_GetFloorHeight();

		[PreserveSig]
		[Token(Token = "0x6001112")]
		[Address(RVA = "0xF48D0C", Offset = "0xF48D0C", VA = "0xF48D0C")]
		private static extern int Pvr_GetSeeThroughState();

		[PreserveSig]
		[Token(Token = "0x6001113")]
		[Address(RVA = "0xF48D9C", Offset = "0xF48D9C", VA = "0xF48D9C")]
		private static extern void Pvr_BoundarySetSTBackground(bool value);

		[PreserveSig]
		[Token(Token = "0x6001114")]
		[Address(RVA = "0xF48E3C", Offset = "0xF48E3C", VA = "0xF48E3C")]
		private static extern int Pvr_GetTrackingState();

		[PreserveSig]
		[Token(Token = "0x6001115")]
		[Address(RVA = "0xF48ECC", Offset = "0xF48ECC", VA = "0xF48ECC")]
		private static extern bool Pvr_GetFrameRateLimit();

		[PreserveSig]
		[Token(Token = "0x6001116")]
		[Address(RVA = "0xF48F64", Offset = "0xF48F64", VA = "0xF48F64")]
		private static extern bool Pvr_IsBoundaryEnable();

		[PreserveSig]
		[Token(Token = "0x6001117")]
		[Address(RVA = "0xF48FFC", Offset = "0xF48FFC", VA = "0xF48FFC")]
		private static extern bool Pvr_BoundaryGetConfigured();

		[PreserveSig]
		[Token(Token = "0x6001118")]
		[Address(RVA = "0xF49094", Offset = "0xF49094", VA = "0xF49094")]
		private static extern bool Pvr_BoundaryTestNode(int node, bool isPlayArea, ref bool isTriggering, ref float closestDistance, ref float px, ref float py, ref float pz, ref float nx, ref float ny, ref float nz);

		[PreserveSig]
		[Token(Token = "0x6001119")]
		[Address(RVA = "0xF491B4", Offset = "0xF491B4", VA = "0xF491B4")]
		private static extern bool Pvr_BoundaryTestPoint(float x, float y, float z, bool isPlayArea, ref bool isTriggering, ref float closestDistance, ref float px, ref float py, ref float pz, ref float nx, ref float ny, ref float nz);

		[PreserveSig]
		[Token(Token = "0x600111A")]
		[Address(RVA = "0xF492FC", Offset = "0xF492FC", VA = "0xF492FC")]
		private static extern int Pvr_BoundaryGetGeometry(out IntPtr handle, bool isPlayArea);

		[PreserveSig]
		[Token(Token = "0x600111B")]
		[Address(RVA = "0xF493A8", Offset = "0xF493A8", VA = "0xF493A8")]
		private static extern int Pvr_BoundaryGetDimensions(ref float x, ref float y, ref float z, bool isPlayArea);

		[PreserveSig]
		[Token(Token = "0x600111C")]
		[Address(RVA = "0xF49470", Offset = "0xF49470", VA = "0xF49470")]
		private static extern bool Pvr_BoundaryGetEnabled();

		[PreserveSig]
		[Token(Token = "0x600111D")]
		[Address(RVA = "0xF49508", Offset = "0xF49508", VA = "0xF49508")]
		private static extern void Pvr_BoundarySetVisible(bool value);

		[PreserveSig]
		[Token(Token = "0x600111E")]
		[Address(RVA = "0xF495A8", Offset = "0xF495A8", VA = "0xF495A8")]
		private static extern bool Pvr_BoundaryGetVisible();

		[PreserveSig]
		[Token(Token = "0x600111F")]
		[Address(RVA = "0xF49640", Offset = "0xF49640", VA = "0xF49640")]
		private static extern bool Pvr_EnableLWRP(bool enable);

		[PreserveSig]
		[Token(Token = "0x6001120")]
		[Address(RVA = "0xF496E8", Offset = "0xF496E8", VA = "0xF496E8")]
		private static extern bool Pvr_SetViewportSize(int w, int h);

		[PreserveSig]
		[Token(Token = "0x6001121")]
		[Address(RVA = "0xF497A0", Offset = "0xF497A0", VA = "0xF497A0")]
		private static extern void Pvr_BoundarySetSeeThroughVisible(bool value);

		[PreserveSig]
		[Token(Token = "0x6001122")]
		[Address(RVA = "0xF49840", Offset = "0xF49840", VA = "0xF49840")]
		private static extern void PVR_SetCameraImageRect(int width, int height);

		[PreserveSig]
		[Token(Token = "0x6001123")]
		[Address(RVA = "0xF498F0", Offset = "0xF498F0", VA = "0xF498F0")]
		private static extern void Pvr_SetGuardianSystemDisable(bool value);

		[PreserveSig]
		[Token(Token = "0x6001124")]
		[Address(RVA = "0xF49990", Offset = "0xF49990", VA = "0xF49990")]
		private static extern int Pvr_GetDialogState();

		[Token(Token = "0x6001125")]
		[Address(RVA = "0xF49A20", Offset = "0xF49A20", VA = "0xF49A20")]
		public static float UPvr_GetFloorHeight()
		{
			return default(float);
		}

		[Token(Token = "0x6001126")]
		[Address(RVA = "0xF49A24", Offset = "0xF49A24", VA = "0xF49A24")]
		public static int UPvr_GetSeeThroughState()
		{
			return default(int);
		}

		[Token(Token = "0x6001127")]
		[Address(RVA = "0xF49A28", Offset = "0xF49A28", VA = "0xF49A28")]
		public static void UPvr_EnableSeeThroughManual(bool enable)
		{
		}

		[Token(Token = "0x6001128")]
		[Address(RVA = "0xF49A30", Offset = "0xF49A30", VA = "0xF49A30")]
		public static BoundaryTrackingState UPvr_GetTrackingState()
		{
			return default(BoundaryTrackingState);
		}

		[Token(Token = "0x6001129")]
		[Address(RVA = "0xF49A34", Offset = "0xF49A34", VA = "0xF49A34")]
		public static bool UPvr_GetFrameRateLimit()
		{
			return default(bool);
		}

		[Token(Token = "0x600112A")]
		[Address(RVA = "0xF49A38", Offset = "0xF49A38", VA = "0xF49A38")]
		public static bool UPvr_IsBoundaryEnable()
		{
			return default(bool);
		}

		[Token(Token = "0x600112B")]
		[Address(RVA = "0xF49A3C", Offset = "0xF49A3C", VA = "0xF49A3C")]
		public static bool UPvr_BoundaryGetConfigured()
		{
			return default(bool);
		}

		[Token(Token = "0x600112C")]
		[Address(RVA = "0xF49A40", Offset = "0xF49A40", VA = "0xF49A40")]
		public static BoundaryTestResult UPvr_BoundaryTestNode(BoundaryTrackingNode node, BoundaryType boundaryType)
		{
			return default(BoundaryTestResult);
		}

		[Token(Token = "0x600112D")]
		[Address(RVA = "0xF49B84", Offset = "0xF49B84", VA = "0xF49B84")]
		public static BoundaryTestResult UPvr_BoundaryTestPoint(Vector3 point, BoundaryType boundaryType)
		{
			return default(BoundaryTestResult);
		}

		[Token(Token = "0x600112E")]
		[Address(RVA = "0xF49CD4", Offset = "0xF49CD4", VA = "0xF49CD4")]
		public static Vector3[] UPvr_BoundaryGetGeometry(BoundaryType boundaryType)
		{
			return null;
		}

		[Token(Token = "0x600112F")]
		[Address(RVA = "0xF49F2C", Offset = "0xF49F2C", VA = "0xF49F2C")]
		public static Vector3 UPvr_BoundaryGetDimensions(BoundaryType boundaryType)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001130")]
		[Address(RVA = "0xF49F88", Offset = "0xF49F88", VA = "0xF49F88")]
		public static bool UPvr_BoundaryGetEnabled()
		{
			return default(bool);
		}

		[Token(Token = "0x6001131")]
		[Address(RVA = "0xF49F8C", Offset = "0xF49F8C", VA = "0xF49F8C")]
		public static void UPvr_BoundarySetVisible(bool value)
		{
		}

		[Token(Token = "0x6001132")]
		[Address(RVA = "0xF49F94", Offset = "0xF49F94", VA = "0xF49F94")]
		public static bool UPvr_BoundaryGetVisible()
		{
			return default(bool);
		}

		[Token(Token = "0x6001133")]
		[Address(RVA = "0xF49F98", Offset = "0xF49F98", VA = "0xF49F98")]
		public static bool UPvr_EnableLWRP(bool enable)
		{
			return default(bool);
		}

		[Token(Token = "0x6001134")]
		[Address(RVA = "0xF49FA0", Offset = "0xF49FA0", VA = "0xF49FA0")]
		public static bool UPvr_SetViewportSize(int width, int height)
		{
			return default(bool);
		}

		[Token(Token = "0x6001135")]
		[Address(RVA = "0xF49FA4", Offset = "0xF49FA4", VA = "0xF49FA4")]
		public static void UPvr_StartCameraFrame()
		{
		}

		[Token(Token = "0x6001136")]
		[Address(RVA = "0xF4A0EC", Offset = "0xF4A0EC", VA = "0xF4A0EC")]
		public static void UPvr_StopCameraFrame()
		{
		}

		[Token(Token = "0x6001137")]
		[Address(RVA = "0xF4A234", Offset = "0xF4A234", VA = "0xF4A234")]
		public static void UPvr_BoundaryGetSeeThroughData(int cameraIndex, RenderTexture renderTexture)
		{
		}

		[Token(Token = "0x6001138")]
		[Address(RVA = "0xF4A428", Offset = "0xF4A428", VA = "0xF4A428")]
		public static void UPvr_BoundarySetCameraImageRect(int width, int height)
		{
		}

		[Token(Token = "0x6001139")]
		[Address(RVA = "0xF4A564", Offset = "0xF4A564", VA = "0xF4A564")]
		public static void UPvr_BoundarySetSeeThroughVisible(bool value)
		{
		}

		[Token(Token = "0x600113A")]
		[Address(RVA = "0xF4A68C", Offset = "0xF4A68C", VA = "0xF4A68C")]
		public static void UPvr_SetGuardianSystemDisable(bool value)
		{
		}

		[Token(Token = "0x600113B")]
		[Address(RVA = "0xF4A7B4", Offset = "0xF4A7B4", VA = "0xF4A7B4")]
		public static int UPvr_GetDialogState()
		{
			return default(int);
		}
	}
	[Token(Token = "0x2000254")]
	public struct PlatformSettings
	{
		[Token(Token = "0x600113C")]
		[Address(RVA = "0xF4FD14", Offset = "0xF4FD14", VA = "0xF4FD14")]
		public static Pvr_UnitySDKPlatformSetting.simulationType UPvr_IsCurrentDeviceValid()
		{
			return default(Pvr_UnitySDKPlatformSetting.simulationType);
		}

		[Token(Token = "0x600113D")]
		[Address(RVA = "0xF50004", Offset = "0xF50004", VA = "0xF50004")]
		public static bool UPvr_AppEntitlementCheck(string appid)
		{
			return default(bool);
		}

		[Token(Token = "0x600113E")]
		[Address(RVA = "0xF50394", Offset = "0xF50394", VA = "0xF50394")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x66A8C4", Offset = "0x66A8C4")]
		public static bool UPvr_KeyEntitlementCheck(string publicKey)
		{
			return default(bool);
		}

		[Token(Token = "0x600113F")]
		[Address(RVA = "0xF50698", Offset = "0xF50698", VA = "0xF50698")]
		public static int UPvr_AppEntitlementCheckExtra(string appid)
		{
			return default(int);
		}

		[Token(Token = "0x6001140")]
		[Address(RVA = "0xF509B0", Offset = "0xF509B0", VA = "0xF509B0")]
		public static int UPvr_KeyEntitlementCheckExtra(string publicKey)
		{
			return default(int);
		}

		[Token(Token = "0x6001141")]
		[Address(RVA = "0xF50CC8", Offset = "0xF50CC8", VA = "0xF50CC8")]
		public static int UPvr_GetHmdAudioStatus()
		{
			return default(int);
		}
	}
	[Token(Token = "0x2000255")]
	public enum DeviceCommand
	{
		[Token(Token = "0x4000E26")]
		SET_PICO_NEO_HMD_BRIGHTNESS = 12,
		[Token(Token = "0x4000E27")]
		SET_PICO_NEO_HMD_SLEEPDELAY
	}
	[Token(Token = "0x2000256")]
	public enum BrightnessLevel
	{
		[Token(Token = "0x4000E29")]
		VR_BRIGHTNESS_LEVEL_MIN = 1,
		[Token(Token = "0x4000E2A")]
		VR_BRIGHTNESS_LEVEL_MAX = 100,
		[Token(Token = "0x4000E2B")]
		VR_BRIGHTNESS_LEVEL_DOWN = 1000,
		[Token(Token = "0x4000E2C")]
		VR_BRIGHTNESS_LEVEL_UP = 1001,
		[Token(Token = "0x4000E2D")]
		VR_BRIGHTNESS_LEVEL_SCREEN_OFF = -100
	}
	[Token(Token = "0x2000257")]
	public struct VolumePowerBrightness
	{
		[Token(Token = "0x4000E2E")]
		public const string LibFileName = "Pvr_UnitySDK";

		[Token(Token = "0x4000E2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public AndroidJavaObject activity;

		[Token(Token = "0x4000E30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static AndroidJavaClass javaSysActivityClass;

		[Token(Token = "0x4000E31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static AndroidJavaClass batteryjavaVrActivityClass;

		[Token(Token = "0x4000E32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static AndroidJavaClass volumejavaVrActivityClass;

		[PreserveSig]
		[Token(Token = "0x6001142")]
		[Address(RVA = "0xF5AF4C", Offset = "0xF5AF4C", VA = "0xF5AF4C")]
		public static extern void Pvr_SetInitActivity(IntPtr activity, IntPtr vrActivityClass);

		[PreserveSig]
		[Token(Token = "0x6001143")]
		[Address(RVA = "0xF5AFFC", Offset = "0xF5AFFC", VA = "0xF5AFFC")]
		private static extern bool Pvr_IsHmdExist();

		[PreserveSig]
		[Token(Token = "0x6001144")]
		[Address(RVA = "0xF5B094", Offset = "0xF5B094", VA = "0xF5B094")]
		private static extern int Pvr_GetHmdScreenBrightness();

		[PreserveSig]
		[Token(Token = "0x6001145")]
		[Address(RVA = "0xF5B124", Offset = "0xF5B124", VA = "0xF5B124")]
		private static extern bool Pvr_SetHmdScreenBrightness(int brightness);

		[Token(Token = "0x6001146")]
		[Address(RVA = "0xF5B1CC", Offset = "0xF5B1CC", VA = "0xF5B1CC")]
		public static bool UPvr_IsHmdExist()
		{
			return default(bool);
		}

		[Token(Token = "0x6001147")]
		[Address(RVA = "0xF5B1D0", Offset = "0xF5B1D0", VA = "0xF5B1D0")]
		public static int UPvr_GetHmdScreenBrightness()
		{
			return default(int);
		}

		[Token(Token = "0x6001148")]
		[Address(RVA = "0xF5B1D4", Offset = "0xF5B1D4", VA = "0xF5B1D4")]
		public static bool UPvr_SetHmdScreenBrightness(int brightness)
		{
			return default(bool);
		}

		[Token(Token = "0x6001149")]
		[Address(RVA = "0xF5B1D8", Offset = "0xF5B1D8", VA = "0xF5B1D8")]
		public static bool UPvr_SetCommonBrightness(int brightness)
		{
			return default(bool);
		}

		[Token(Token = "0x600114A")]
		[Address(RVA = "0xF5B484", Offset = "0xF5B484", VA = "0xF5B484")]
		public static int UPvr_GetCommonBrightness()
		{
			return default(int);
		}

		[Token(Token = "0x600114B")]
		[Address(RVA = "0xF5B6B8", Offset = "0xF5B6B8", VA = "0xF5B6B8")]
		public static int[] UPvr_GetScreenBrightnessLevel()
		{
			return null;
		}

		[Token(Token = "0x600114C")]
		[Address(RVA = "0xF5B848", Offset = "0xF5B848", VA = "0xF5B848")]
		public static void UPvr_SetScreenBrightnessLevel(int vrBrightness, int level)
		{
		}

		[Token(Token = "0x600114D")]
		[Address(RVA = "0xF5BA98", Offset = "0xF5BA98", VA = "0xF5BA98")]
		public static bool UPvr_SetDevicePropForUser(DeviceCommand deviceid, string number)
		{
			return default(bool);
		}

		[Token(Token = "0x600114E")]
		[Address(RVA = "0xF5BC20", Offset = "0xF5BC20", VA = "0xF5BC20")]
		public static string UPvr_GetDevicePropForUser(DeviceCommand deviceid)
		{
			return null;
		}

		[Token(Token = "0x600114F")]
		[Address(RVA = "0xF5BD64", Offset = "0xF5BD64", VA = "0xF5BD64")]
		public static bool UPvr_InitBatteryClass()
		{
			return default(bool);
		}

		[Token(Token = "0x6001150")]
		[Address(RVA = "0xF5BF78", Offset = "0xF5BF78", VA = "0xF5BF78")]
		public static bool UPvr_InitBatteryVolClass()
		{
			return default(bool);
		}

		[Token(Token = "0x6001151")]
		[Address(RVA = "0xF5C26C", Offset = "0xF5C26C", VA = "0xF5C26C")]
		public static bool UPvr_StartBatteryReceiver(string startreceivre)
		{
			return default(bool);
		}

		[Token(Token = "0x6001152")]
		[Address(RVA = "0xF5C4C0", Offset = "0xF5C4C0", VA = "0xF5C4C0")]
		public static bool UPvr_StopBatteryReceiver()
		{
			return default(bool);
		}

		[Token(Token = "0x6001153")]
		[Address(RVA = "0xF5B210", Offset = "0xF5B210", VA = "0xF5B210")]
		public static bool UPvr_SetBrightness(int brightness)
		{
			return default(bool);
		}

		[Token(Token = "0x6001154")]
		[Address(RVA = "0xF5B4A4", Offset = "0xF5B4A4", VA = "0xF5B4A4")]
		public static int UPvr_GetCurrentBrightness()
		{
			return default(int);
		}

		[Token(Token = "0x6001155")]
		[Address(RVA = "0xF5B6BC", Offset = "0xF5B6BC", VA = "0xF5B6BC")]
		public static int[] Pvr_GetScreenBrightnessLevel()
		{
			return null;
		}

		[Token(Token = "0x6001156")]
		[Address(RVA = "0xF5B84C", Offset = "0xF5B84C", VA = "0xF5B84C")]
		public static void Pvr_SetScreenBrightnessLevel(int vrBrightness, int level)
		{
		}

		[Token(Token = "0x6001157")]
		[Address(RVA = "0xF5C6C4", Offset = "0xF5C6C4", VA = "0xF5C6C4")]
		public static bool UPvr_StartAudioReceiver(string startreceivre)
		{
			return default(bool);
		}

		[Token(Token = "0x6001158")]
		[Address(RVA = "0xF5C918", Offset = "0xF5C918", VA = "0xF5C918")]
		public static bool UPvr_StopAudioReceiver()
		{
			return default(bool);
		}

		[Token(Token = "0x6001159")]
		[Address(RVA = "0xF5CB1C", Offset = "0xF5CB1C", VA = "0xF5CB1C")]
		public static int UPvr_GetMaxVolumeNumber()
		{
			return default(int);
		}

		[Token(Token = "0x600115A")]
		[Address(RVA = "0xF5CC94", Offset = "0xF5CC94", VA = "0xF5CC94")]
		public static int UPvr_GetCurrentVolumeNumber()
		{
			return default(int);
		}

		[Token(Token = "0x600115B")]
		[Address(RVA = "0xF5CE0C", Offset = "0xF5CE0C", VA = "0xF5CE0C")]
		public static bool UPvr_VolumeUp()
		{
			return default(bool);
		}

		[Token(Token = "0x600115C")]
		[Address(RVA = "0xF5CF6C", Offset = "0xF5CF6C", VA = "0xF5CF6C")]
		public static bool UPvr_VolumeDown()
		{
			return default(bool);
		}

		[Token(Token = "0x600115D")]
		[Address(RVA = "0xF5D0CC", Offset = "0xF5D0CC", VA = "0xF5D0CC")]
		public static bool UPvr_SetVolumeNum(int volume)
		{
			return default(bool);
		}

		[Token(Token = "0x600115E")]
		[Address(RVA = "0xF5D2B0", Offset = "0xF5D2B0", VA = "0xF5D2B0")]
		public static bool UPvr_SetAudio(string s)
		{
			return default(bool);
		}

		[Token(Token = "0x600115F")]
		[Address(RVA = "0xF5D2B8", Offset = "0xF5D2B8", VA = "0xF5D2B8")]
		public static bool UPvr_SetBattery(string s)
		{
			return default(bool);
		}

		[Token(Token = "0x6001160")]
		[Address(RVA = "0xF5BC24", Offset = "0xF5BC24", VA = "0xF5BC24")]
		private static string getDevicePropForUser(DeviceCommand deviceid)
		{
			return null;
		}

		[Token(Token = "0x6001161")]
		[Address(RVA = "0xF5BA9C", Offset = "0xF5BA9C", VA = "0xF5BA9C")]
		private static bool setDevicePropForUser(DeviceCommand deviceid, string number)
		{
			return default(bool);
		}
	}
}
namespace Pvr_UnitySDKAPI.Achievement
{
	[Token(Token = "0x2000258")]
	public sealed class AchievementCore
	{
		[Token(Token = "0x4000E33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool IsPlatformInitialized;

		[Token(Token = "0x4000E34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		public static bool LogMessages;

		[Token(Token = "0x6001162")]
		[Address(RVA = "0xF42448", Offset = "0xF42448", VA = "0xF42448")]
		public static bool IsInitialized()
		{
			return default(bool);
		}

		[Token(Token = "0x6001163")]
		[Address(RVA = "0xF424B0", Offset = "0xF424B0", VA = "0xF424B0")]
		public static void Initialize()
		{
		}

		[Token(Token = "0x6001164")]
		[Address(RVA = "0xF424B4", Offset = "0xF424B4", VA = "0xF424B4")]
		public static void RegisterNetwork()
		{
		}

		[Token(Token = "0x6001165")]
		[Address(RVA = "0xF4266C", Offset = "0xF4266C", VA = "0xF4266C")]
		public static void UnRegisterNetwork()
		{
		}

		[Token(Token = "0x6001166")]
		[Address(RVA = "0xF42768", Offset = "0xF42768", VA = "0xF42768")]
		public AchievementCore()
		{
		}
	}
	[Token(Token = "0x2000259")]
	public static class Achievements
	{
		[Token(Token = "0x6001168")]
		[Address(RVA = "0xF427D0", Offset = "0xF427D0", VA = "0xF427D0")]
		public static Pvr_Request<Pvr_AchievementUpdate> Init()
		{
			return null;
		}

		[Token(Token = "0x6001169")]
		[Address(RVA = "0xF42CC8", Offset = "0xF42CC8", VA = "0xF42CC8")]
		public static Pvr_Request<Pvr_AchievementUpdate> AddCount(string name, long count)
		{
			return null;
		}

		[Token(Token = "0x600116A")]
		[Address(RVA = "0xF42F78", Offset = "0xF42F78", VA = "0xF42F78")]
		public static Pvr_Request<Pvr_AchievementUpdate> AddFields(string name, string fields)
		{
			return null;
		}

		[Token(Token = "0x600116B")]
		[Address(RVA = "0xF43208", Offset = "0xF43208", VA = "0xF43208")]
		public static Pvr_Request<Pvr_AchievementDefinitionList> GetAllDefinitions()
		{
			return null;
		}

		[Token(Token = "0x600116C")]
		[Address(RVA = "0xF43484", Offset = "0xF43484", VA = "0xF43484")]
		public static Pvr_Request<Pvr_AchievementProgressList> GetAllProgress()
		{
			return null;
		}

		[Token(Token = "0x600116D")]
		[Address(RVA = "0xF4365C", Offset = "0xF4365C", VA = "0xF4365C")]
		public static Pvr_Request<Pvr_AchievementDefinitionList> GetDefinitionsByName(string[] names)
		{
			return null;
		}

		[Token(Token = "0x600116E")]
		[Address(RVA = "0xF438D8", Offset = "0xF438D8", VA = "0xF438D8")]
		public static Pvr_Request<Pvr_AchievementProgressList> GetProgressByName(string[] names)
		{
			return null;
		}

		[Token(Token = "0x600116F")]
		[Address(RVA = "0xF43B04", Offset = "0xF43B04", VA = "0xF43B04")]
		public static Pvr_Request<Pvr_AchievementUpdate> Unlock(string name)
		{
			return null;
		}

		[Token(Token = "0x6001170")]
		[Address(RVA = "0xF43D30", Offset = "0xF43D30", VA = "0xF43D30")]
		public static Pvr_Request<Pvr_AchievementDefinitionList> GetNextAchievementDefinitionListPage(Pvr_AchievementDefinitionList list)
		{
			return null;
		}

		[Token(Token = "0x6001171")]
		[Address(RVA = "0xF4410C", Offset = "0xF4410C", VA = "0xF4410C")]
		public static Pvr_Request<Pvr_AchievementProgressList> GetNextAchievementProgressListPage(Pvr_AchievementProgressList list)
		{
			return null;
		}
	}
	[Token(Token = "0x200025A")]
	public enum AchievementType
	{
		[Token(Token = "0x4000E36")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x650788", Offset = "0x650788")]
		Unknown,
		[Token(Token = "0x4000E37")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x6507C0", Offset = "0x6507C0")]
		Simple,
		[Token(Token = "0x4000E38")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x6507F8", Offset = "0x6507F8")]
		Bitfield,
		[Token(Token = "0x4000E39")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x650830", Offset = "0x650830")]
		Count
	}
	[Token(Token = "0x200025B")]
	public class Pvr_AchievementAPI
	{
		[Token(Token = "0x4000E3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static AndroidJavaClass achievementAPI;

		[Token(Token = "0x4000E3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static AndroidJavaClass definitionArrayHandle;

		[Token(Token = "0x4000E3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static AndroidJavaClass definitionHandle;

		[Token(Token = "0x4000E3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static AndroidJavaClass progressArrayHandle;

		[Token(Token = "0x4000E3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static AndroidJavaClass progressHandle;

		[Token(Token = "0x4000E3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static AndroidJavaClass updateHandle;

		[Token(Token = "0x4000E40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static AndroidJavaObject errorHandle;

		[Token(Token = "0x4000E41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static AndroidJavaObject unityInterface;

		[Token(Token = "0x4000E42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private static string openId;

		[Token(Token = "0x4000E43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private static string accessToken;

		[Token(Token = "0x4000E44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private static string appId;

		[Token(Token = "0x6001172")]
		[Address(RVA = "0xF42894", Offset = "0xF42894", VA = "0xF42894")]
		internal static long Init()
		{
			return default(long);
		}

		[Token(Token = "0x6001173")]
		[Address(RVA = "0xF42510", Offset = "0xF42510", VA = "0xF42510")]
		internal static void RegisterNetwork()
		{
		}

		[Token(Token = "0x6001174")]
		[Address(RVA = "0xF426C8", Offset = "0xF426C8", VA = "0xF426C8")]
		internal static void UnRegisterNetwork()
		{
		}

		[Token(Token = "0x6001175")]
		[Address(RVA = "0xF44B00", Offset = "0xF44B00", VA = "0xF44B00")]
		internal static AndroidJavaObject PopMessage()
		{
			return null;
		}

		[Token(Token = "0x6001176")]
		[Address(RVA = "0xF44BA8", Offset = "0xF44BA8", VA = "0xF44BA8")]
		internal static string pvr_Error_GetMessage(AndroidJavaObject popMessage)
		{
			return null;
		}

		[Token(Token = "0x6001177")]
		[Address(RVA = "0xF44CB4", Offset = "0xF44CB4", VA = "0xF44CB4")]
		internal static int pvr_Error_GetHttpCode(AndroidJavaObject popMessage)
		{
			return default(int);
		}

		[Token(Token = "0x6001178")]
		[Address(RVA = "0xF44DC0", Offset = "0xF44DC0", VA = "0xF44DC0")]
		internal static int pvr_Error_GetCode(AndroidJavaObject popMessage)
		{
			return default(int);
		}

		[Token(Token = "0x6001179")]
		[Address(RVA = "0xF42DA4", Offset = "0xF42DA4", VA = "0xF42DA4")]
		internal static long pvr_Achievements_AddCount(string name, long count)
		{
			return default(long);
		}

		[Token(Token = "0x600117A")]
		[Address(RVA = "0xF43054", Offset = "0xF43054", VA = "0xF43054")]
		internal static long pvr_Achievements_AddFields(string name, string fields)
		{
			return default(long);
		}

		[Token(Token = "0x600117B")]
		[Address(RVA = "0xF432CC", Offset = "0xF432CC", VA = "0xF432CC")]
		internal static long pvr_Achievements_GetAllDefinitions()
		{
			return default(long);
		}

		[Token(Token = "0x600117C")]
		[Address(RVA = "0xF43548", Offset = "0xF43548", VA = "0xF43548")]
		internal static long pvr_Achievements_GetAllProgress()
		{
			return default(long);
		}

		[Token(Token = "0x600117D")]
		[Address(RVA = "0xF43728", Offset = "0xF43728", VA = "0xF43728")]
		internal static long pvr_Achievements_GetDefinitionsByName(string[] names, int v)
		{
			return default(long);
		}

		[Token(Token = "0x600117E")]
		[Address(RVA = "0xF439A4", Offset = "0xF439A4", VA = "0xF439A4")]
		internal static long pvr_Achievements_GetProgressByName(string[] names, int v)
		{
			return default(long);
		}

		[Token(Token = "0x600117F")]
		[Address(RVA = "0xF43BD0", Offset = "0xF43BD0", VA = "0xF43BD0")]
		internal static long pvr_Achievements_Unlock(string name)
		{
			return default(long);
		}

		[Token(Token = "0x6001180")]
		[Address(RVA = "0xF43E84", Offset = "0xF43E84", VA = "0xF43E84")]
		internal static long pvr_HTTP_GetWithMessageType(string nextUrl, Pvr_Message.MessageType messageType)
		{
			return default(long);
		}

		[Token(Token = "0x6001181")]
		[Address(RVA = "0xF44ECC", Offset = "0xF44ECC", VA = "0xF44ECC")]
		internal static long pvr_Message_GetType(AndroidJavaObject popMessage)
		{
			return default(long);
		}

		[Token(Token = "0x6001182")]
		[Address(RVA = "0xF44F98", Offset = "0xF44F98", VA = "0xF44F98")]
		internal static bool pvr_Message_IsError(AndroidJavaObject popMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x6001183")]
		[Address(RVA = "0xF45018", Offset = "0xF45018", VA = "0xF45018")]
		internal static long pvr_Message_GetRequestID(AndroidJavaObject popMessage)
		{
			return default(long);
		}

		[Token(Token = "0x6001184")]
		[Address(RVA = "0xF44A80", Offset = "0xF44A80", VA = "0xF44A80")]
		internal static string pvr_Message_GetString(AndroidJavaObject popMessage)
		{
			return null;
		}

		[Token(Token = "0x6001185")]
		[Address(RVA = "0xF45098", Offset = "0xF45098", VA = "0xF45098")]
		internal static bool pvr_AchievementUpdate_GetJustUnlocked(AndroidJavaObject popMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x6001186")]
		[Address(RVA = "0xF451A4", Offset = "0xF451A4", VA = "0xF451A4")]
		internal static string pvr_AchievementUpdate_GetName(AndroidJavaObject popMessage)
		{
			return null;
		}

		[Token(Token = "0x6001187")]
		[Address(RVA = "0xF452B0", Offset = "0xF452B0", VA = "0xF452B0")]
		internal static int pvr_AchievementProgressArray_GetSize(AndroidJavaObject msg)
		{
			return default(int);
		}

		[Token(Token = "0x6001188")]
		[Address(RVA = "0xF453BC", Offset = "0xF453BC", VA = "0xF453BC")]
		internal static AndroidJavaObject pvr_AchievementProgressArray_GetElement(AndroidJavaObject msg, int index)
		{
			return null;
		}

		[Token(Token = "0x6001189")]
		[Address(RVA = "0xF4553C", Offset = "0xF4553C", VA = "0xF4553C")]
		internal static string pvr_AchievementProgressArray_GetNextUrl(AndroidJavaObject msg)
		{
			return null;
		}

		[Token(Token = "0x600118A")]
		[Address(RVA = "0xF45648", Offset = "0xF45648", VA = "0xF45648")]
		internal static string pvr_AchievementProgress_GetBitfield(AndroidJavaObject msg)
		{
			return null;
		}

		[Token(Token = "0x600118B")]
		[Address(RVA = "0xF45754", Offset = "0xF45754", VA = "0xF45754")]
		internal static long pvr_AchievementProgress_GetCount(AndroidJavaObject msg)
		{
			return default(long);
		}

		[Token(Token = "0x600118C")]
		[Address(RVA = "0xF45860", Offset = "0xF45860", VA = "0xF45860")]
		internal static bool pvr_AchievementProgress_GetIsUnlocked(AndroidJavaObject msg)
		{
			return default(bool);
		}

		[Token(Token = "0x600118D")]
		[Address(RVA = "0xF4596C", Offset = "0xF4596C", VA = "0xF4596C")]
		internal static string pvr_AchievementProgress_GetName(AndroidJavaObject msg)
		{
			return null;
		}

		[Token(Token = "0x600118E")]
		[Address(RVA = "0xF45A78", Offset = "0xF45A78", VA = "0xF45A78")]
		internal static DateTime pvr_AchievementProgress_GetUnlockTime(AndroidJavaObject msg)
		{
			return default(DateTime);
		}

		[Token(Token = "0x600118F")]
		[Address(RVA = "0xF45BC0", Offset = "0xF45BC0", VA = "0xF45BC0")]
		internal static DateTime DateTimeFromNative(long seconds_since_the_one_true_epoch)
		{
			return default(DateTime);
		}

		[Token(Token = "0x6001190")]
		[Address(RVA = "0xF45C30", Offset = "0xF45C30", VA = "0xF45C30")]
		internal static int pvr_AchievementDefinitionArray_GetSize(AndroidJavaObject msg)
		{
			return default(int);
		}

		[Token(Token = "0x6001191")]
		[Address(RVA = "0xF45D3C", Offset = "0xF45D3C", VA = "0xF45D3C")]
		internal static AndroidJavaObject pvr_AchievementDefinitionArray_GetElement(AndroidJavaObject msg, int index)
		{
			return null;
		}

		[Token(Token = "0x6001192")]
		[Address(RVA = "0xF45EBC", Offset = "0xF45EBC", VA = "0xF45EBC")]
		internal static string pvr_AchievementDefinitionArray_GetNextUrl(AndroidJavaObject msg)
		{
			return null;
		}

		[Token(Token = "0x6001193")]
		[Address(RVA = "0xF45FC8", Offset = "0xF45FC8", VA = "0xF45FC8")]
		internal static AchievementType pvr_AchievementDefinition_GetType(AndroidJavaObject msg)
		{
			return default(AchievementType);
		}

		[Token(Token = "0x6001194")]
		[Address(RVA = "0xF46120", Offset = "0xF46120", VA = "0xF46120")]
		internal static string pvr_AchievementDefinition_GetName(AndroidJavaObject msg)
		{
			return null;
		}

		[Token(Token = "0x6001195")]
		[Address(RVA = "0xF4622C", Offset = "0xF4622C", VA = "0xF4622C")]
		internal static int pvr_AchievementDefinition_GetBitfieldLength(AndroidJavaObject msg)
		{
			return default(int);
		}

		[Token(Token = "0x6001196")]
		[Address(RVA = "0xF46338", Offset = "0xF46338", VA = "0xF46338")]
		internal static long pvr_AchievementDefinition_GetTarget(AndroidJavaObject msg)
		{
			return default(long);
		}

		[Token(Token = "0x6001197")]
		[Address(RVA = "0xF46444", Offset = "0xF46444", VA = "0xF46444")]
		internal static string pvr_AchievementDefinition_GetTitle(AndroidJavaObject msg)
		{
			return null;
		}

		[Token(Token = "0x6001198")]
		[Address(RVA = "0xF46550", Offset = "0xF46550", VA = "0xF46550")]
		internal static string pvr_AchievementDefinition_GetUnlockedDescription(AndroidJavaObject msg)
		{
			return null;
		}

		[Token(Token = "0x6001199")]
		[Address(RVA = "0xF4665C", Offset = "0xF4665C", VA = "0xF4665C")]
		internal static string pvr_AchievementDefinition_GetLockedIcon(AndroidJavaObject msg)
		{
			return null;
		}

		[Token(Token = "0x600119A")]
		[Address(RVA = "0xF46768", Offset = "0xF46768", VA = "0xF46768")]
		internal static bool pvr_AchievementDefinition_GetIsSecrect(AndroidJavaObject msg)
		{
			return default(bool);
		}

		[Token(Token = "0x600119B")]
		[Address(RVA = "0xF46874", Offset = "0xF46874", VA = "0xF46874")]
		internal static string pvr_AchievementDefinition_GetUnlockedIcon(AndroidJavaObject msg)
		{
			return null;
		}

		[Token(Token = "0x600119C")]
		[Address(RVA = "0xF46980", Offset = "0xF46980", VA = "0xF46980")]
		internal static string pvr_AchievementDefinition_GetDescription(AndroidJavaObject msg)
		{
			return null;
		}

		[Token(Token = "0x600119D")]
		[Address(RVA = "0xF46A8C", Offset = "0xF46A8C", VA = "0xF46A8C")]
		public Pvr_AchievementAPI()
		{
		}
	}
	[Token(Token = "0x200025C")]
	public class Pvr_AchievementDefinition
	{
		[Token(Token = "0x4000E45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly AchievementType Type;

		[Token(Token = "0x4000E46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string Name;

		[Token(Token = "0x4000E47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly int BitfieldLength;

		[Token(Token = "0x4000E48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly long Target;

		[Token(Token = "0x4000E49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly string Title;

		[Token(Token = "0x4000E4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public readonly string Description;

		[Token(Token = "0x4000E4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public readonly string UnlockedDescription;

		[Token(Token = "0x4000E4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public readonly string UnlockedIcon;

		[Token(Token = "0x4000E4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public readonly string LockedIcon;

		[Token(Token = "0x4000E4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public readonly bool IsSecrect;

		[Token(Token = "0x600119F")]
		[Address(RVA = "0xF46CAC", Offset = "0xF46CAC", VA = "0xF46CAC")]
		public Pvr_AchievementDefinition(AndroidJavaObject msg)
		{
		}
	}
	[Token(Token = "0x200025D")]
	public class Pvr_AchievementDefinitionList : Pvr_DeserializableList<Pvr_AchievementDefinition>
	{
		[Token(Token = "0x60011A0")]
		[Address(RVA = "0xF443B0", Offset = "0xF443B0", VA = "0xF443B0")]
		public Pvr_AchievementDefinitionList(AndroidJavaObject msg)
		{
		}
	}
	[Token(Token = "0x200025E")]
	public class Pvr_AchievementProgress
	{
		[Token(Token = "0x4000E4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string Bitfield;

		[Token(Token = "0x4000E50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly long Count;

		[Token(Token = "0x4000E51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly bool IsUnlocked;

		[Token(Token = "0x4000E52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly string Name;

		[Token(Token = "0x4000E53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly DateTime UnlockTime;

		[Token(Token = "0x60011A1")]
		[Address(RVA = "0xF46DA0", Offset = "0xF46DA0", VA = "0xF46DA0")]
		public Pvr_AchievementProgress(AndroidJavaObject msg)
		{
		}
	}
	[Token(Token = "0x200025F")]
	public class Pvr_AchievementProgressList : Pvr_DeserializableList<Pvr_AchievementProgress>
	{
		[Token(Token = "0x60011A2")]
		[Address(RVA = "0xF44644", Offset = "0xF44644", VA = "0xF44644")]
		public Pvr_AchievementProgressList(AndroidJavaObject msg)
		{
		}
	}
	[Token(Token = "0x2000260")]
	public class Pvr_AchievementUpdate
	{
		[Token(Token = "0x4000E54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly bool JustUnlocked;

		[Token(Token = "0x4000E55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string Name;

		[Token(Token = "0x60011A3")]
		[Address(RVA = "0xF448D8", Offset = "0xF448D8", VA = "0xF448D8")]
		public Pvr_AchievementUpdate(AndroidJavaObject msg)
		{
		}
	}
	[Token(Token = "0x2000261")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x63E888", Offset = "0x63E888")]
	public class Pvr_DeserializableList<T> : IList<T>, ICollection<T>, IEnumerable<T>, IEnumerable
	{
		[Token(Token = "0x4000E56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected List<T> data;

		[Token(Token = "0x4000E57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected string nextUrl;

		[Token(Token = "0x4000E58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected string previousUrl;

		[Token(Token = "0x17000150")]
		public int Count
		{
			[Token(Token = "0x60011A4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000151")]
		private bool System.Collections.Generic.ICollection<T>.IsReadOnly
		{
			[Token(Token = "0x60011A5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000152")]
		public T Item
		{
			[Token(Token = "0x60011A7")]
			get
			{
				return (T)null;
			}
			[Token(Token = "0x60011A8")]
			set
			{
			}
		}

		[Token(Token = "0x17000153")]
		public bool HasNextPage
		{
			[Token(Token = "0x60011B3")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000154")]
		public bool HasPreviousPage
		{
			[Token(Token = "0x60011B4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000155")]
		public string NextUrl
		{
			[Token(Token = "0x60011B5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000156")]
		public string PreviousUrl
		{
			[Token(Token = "0x60011B6")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60011A6")]
		public int IndexOf(T obj)
		{
			return default(int);
		}

		[Token(Token = "0x60011A9")]
		public void Add(T item)
		{
		}

		[Token(Token = "0x60011AA")]
		public void Clear()
		{
		}

		[Token(Token = "0x60011AB")]
		public bool Contains(T item)
		{
			return default(bool);
		}

		[Token(Token = "0x60011AC")]
		public void CopyTo(T[] array, int arrayIndex)
		{
		}

		[Token(Token = "0x60011AD")]
		public IEnumerator<T> GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x60011AE")]
		public void Insert(int index, T item)
		{
		}

		[Token(Token = "0x60011AF")]
		public bool Remove(T item)
		{
			return default(bool);
		}

		[Token(Token = "0x60011B0")]
		public void RemoveAt(int index)
		{
		}

		[Token(Token = "0x60011B1")]
		private IEnumerator GetEnumerator1()
		{
			return null;
		}

		[Token(Token = "0x60011B2")]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x60011B7")]
		public Pvr_DeserializableList()
		{
		}
	}
	[Token(Token = "0x2000262")]
	public static class Pvr_Callback
	{
		[Token(Token = "0x2000676")]
		private class RequestCallback
		{
			[Token(Token = "0x40028A8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private Pvr_Message.Callback messageCallback;

			[Token(Token = "0x6002D19")]
			[Address(RVA = "0xF474D0", Offset = "0xF474D0", VA = "0xF474D0")]
			public RequestCallback()
			{
			}

			[Token(Token = "0x6002D1A")]
			[Address(RVA = "0xF474D8", Offset = "0xF474D8", VA = "0xF474D8")]
			public RequestCallback(Pvr_Message.Callback callback)
			{
			}

			[Token(Token = "0x6002D1B")]
			[Address(RVA = "0xF47504", Offset = "0xF47504", VA = "0xF47504", Slot = "4")]
			public virtual void HandleMessage(Pvr_Message msg)
			{
			}
		}

		[Token(Token = "0x2000677")]
		private sealed class RequestCallback<T> : RequestCallback
		{
			[Token(Token = "0x40028A9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private Pvr_Message<T>.Callback callback;

			[Token(Token = "0x6002D1C")]
			public RequestCallback(Pvr_Message<T>.Callback callback)
			{
			}

			[Token(Token = "0x6002D1D")]
			public override void HandleMessage(Pvr_Message msg)
			{
			}
		}

		[Token(Token = "0x4000E59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Dictionary<long, Request> requestIDsToRequests;

		[Token(Token = "0x4000E5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Dictionary<Pvr_Message.MessageType, RequestCallback> notificationCallbacks;

		[Token(Token = "0x60011B8")]
		[Address(RVA = "0xF46E58", Offset = "0xF46E58", VA = "0xF46E58")]
		internal static void AddRequest(Request request)
		{
		}

		[Token(Token = "0x60011B9")]
		[Address(RVA = "0xF46FF0", Offset = "0xF46FF0", VA = "0xF46FF0")]
		internal static void RunCallbacks()
		{
		}

		[Token(Token = "0x60011BA")]
		[Address(RVA = "0xF472D4", Offset = "0xF472D4", VA = "0xF472D4")]
		internal static void RunLimitedCallbacks(uint limit)
		{
		}

		[Token(Token = "0x60011BB")]
		[Address(RVA = "0xF4736C", Offset = "0xF4736C", VA = "0xF4736C")]
		internal static void OnApplicationQuit()
		{
		}

		[Token(Token = "0x60011BC")]
		[Address(RVA = "0xF470CC", Offset = "0xF470CC", VA = "0xF470CC")]
		internal static void HandleMessage(Pvr_Message msg)
		{
		}
	}
	[Token(Token = "0x2000263")]
	public class Pvr_CallbackRunner : MonoBehaviour
	{
		[Token(Token = "0x4000E5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool IsPersistantBetweenSceneLoads;

		[Token(Token = "0x60011BE")]
		[Address(RVA = "0xF47C48", Offset = "0xF47C48", VA = "0xF47C48")]
		private void Awake()
		{
		}

		[Token(Token = "0x60011BF")]
		[Address(RVA = "0xF47D44", Offset = "0xF47D44", VA = "0xF47D44")]
		private void Update()
		{
		}

		[Token(Token = "0x60011C0")]
		[Address(RVA = "0xF47DD0", Offset = "0xF47DD0", VA = "0xF47DD0")]
		private void OnApplicationQuit()
		{
		}

		[Token(Token = "0x60011C1")]
		[Address(RVA = "0xF47E2C", Offset = "0xF47E2C", VA = "0xF47E2C")]
		public Pvr_CallbackRunner()
		{
		}
	}
	[Token(Token = "0x2000264")]
	public abstract class Pvr_Message<T> : Pvr_Message
	{
		[Token(Token = "0x2000678")]
		public new delegate void Callback(Pvr_Message<T> message);

		[Token(Token = "0x4000E5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T data;

		[Token(Token = "0x17000157")]
		public T Data
		{
			[Token(Token = "0x60011C3")]
			get
			{
				return (T)null;
			}
		}

		[Token(Token = "0x60011C2")]
		public Pvr_Message(AndroidJavaObject msg)
		{
		}

		[Token(Token = "0x60011C4")]
		protected abstract T GetDataFromMessage(AndroidJavaObject msg);
	}
	[Token(Token = "0x2000265")]
	public class Pvr_Message
	{
		[Token(Token = "0x2000679")]
		public delegate void Callback(Pvr_Message message);

		[Token(Token = "0x200067A")]
		public enum MessageType : uint
		{
			[Token(Token = "0x40028AB")]
			Unknown = 0u,
			[Token(Token = "0x40028AC")]
			Achievements_AddCount = 65495601u,
			[Token(Token = "0x40028AD")]
			Achievements_AddFields = 346693929u,
			[Token(Token = "0x40028AE")]
			Achievements_GetAllDefinitions = 64177549u,
			[Token(Token = "0x40028AF")]
			Achievements_GetAllProgress = 1335877149u,
			[Token(Token = "0x40028B0")]
			Achievements_GetDefinitionsByName = 1653670332u,
			[Token(Token = "0x40028B1")]
			Achievements_GetNextAchievementDefinitionArrayPage = 712888917u,
			[Token(Token = "0x40028B2")]
			Achievements_GetNextAchievementProgressArrayPage = 792913703u,
			[Token(Token = "0x40028B3")]
			Achievements_GetProgressByName = 354837425u,
			[Token(Token = "0x40028B4")]
			Achievements_Unlock = 1497156573u,
			[Token(Token = "0x40028B5")]
			Achievements_WriteAchievementProgress = 121027549u,
			[Token(Token = "0x40028B6")]
			Achievements_VerifyAccessToken = 53284924u
		}

		[Token(Token = "0x200067B")]
		internal delegate Pvr_Message ExtraMessageTypesHandler(AndroidJavaObject messageHandle, MessageType message_type);

		[Token(Token = "0x4000E5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private MessageType type;

		[Token(Token = "0x4000E5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private long requestID;

		[Token(Token = "0x4000E5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Error error;

		[Token(Token = "0x4000E60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x650868", Offset = "0x650868")]
		private static ExtraMessageTypesHandler <HandleExtraMessageTypes>k__BackingField;

		[Token(Token = "0x17000158")]
		public MessageType Type
		{
			[Token(Token = "0x60011C6")]
			[Address(RVA = "0xF47424", Offset = "0xF47424", VA = "0xF47424")]
			get
			{
				return default(MessageType);
			}
		}

		[Token(Token = "0x17000159")]
		public bool IsError
		{
			[Token(Token = "0x60011C7")]
			[Address(RVA = "0xF4802C", Offset = "0xF4802C", VA = "0xF4802C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700015A")]
		public long RequestID
		{
			[Token(Token = "0x60011C8")]
			[Address(RVA = "0xF4741C", Offset = "0xF4741C", VA = "0xF4741C")]
			get
			{
				return default(long);
			}
		}

		[Token(Token = "0x1700015B")]
		internal static ExtraMessageTypesHandler HandleExtraMessageTypes
		{
			[Token(Token = "0x60011D1")]
			[Address(RVA = "0xF48258", Offset = "0xF48258", VA = "0xF48258")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66A90C", Offset = "0x66A90C")]
			private get
			{
				return null;
			}
			[Token(Token = "0x60011D0")]
			[Address(RVA = "0xF48204", Offset = "0xF48204", VA = "0xF48204")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66A8FC", Offset = "0x66A8FC")]
			set
			{
			}
		}

		[Token(Token = "0x60011C5")]
		[Address(RVA = "0xF47E3C", Offset = "0xF47E3C", VA = "0xF47E3C")]
		public Pvr_Message(AndroidJavaObject msg)
		{
		}

		[Token(Token = "0x60011C9")]
		[Address(RVA = "0xF4803C", Offset = "0xF4803C", VA = "0xF4803C", Slot = "4")]
		public virtual Error GetError()
		{
			return null;
		}

		[Token(Token = "0x60011CA")]
		[Address(RVA = "0xF48044", Offset = "0xF48044", VA = "0xF48044", Slot = "5")]
		public virtual Pvr_AchievementDefinitionList GetAchievementDefinitions()
		{
			return null;
		}

		[Token(Token = "0x60011CB")]
		[Address(RVA = "0xF4804C", Offset = "0xF4804C", VA = "0xF4804C", Slot = "6")]
		public virtual Pvr_AchievementProgressList GetAchievementProgressList()
		{
			return null;
		}

		[Token(Token = "0x60011CC")]
		[Address(RVA = "0xF48054", Offset = "0xF48054", VA = "0xF48054", Slot = "7")]
		public virtual Pvr_AchievementUpdate GetAchievementUpdate()
		{
			return null;
		}

		[Token(Token = "0x60011CD")]
		[Address(RVA = "0xF4805C", Offset = "0xF4805C", VA = "0xF4805C", Slot = "8")]
		public virtual string GetString()
		{
			return null;
		}

		[Token(Token = "0x60011CE")]
		[Address(RVA = "0xF48064", Offset = "0xF48064", VA = "0xF48064")]
		internal static Pvr_Message ParseMessageHandle(AndroidJavaObject messageHandle)
		{
			return null;
		}

		[Token(Token = "0x60011CF")]
		[Address(RVA = "0xF4706C", Offset = "0xF4706C", VA = "0xF4706C")]
		public static Pvr_Message PopMessage()
		{
			return null;
		}
	}
	[Token(Token = "0x2000266")]
	public class MessageWithAchievementDefinitions : Pvr_Message<Pvr_AchievementDefinitionList>
	{
		[Token(Token = "0x60011D2")]
		[Address(RVA = "0xF442A0", Offset = "0xF442A0", VA = "0xF442A0")]
		public MessageWithAchievementDefinitions(AndroidJavaObject msg)
		{
		}

		[Token(Token = "0x60011D3")]
		[Address(RVA = "0xF44300", Offset = "0xF44300", VA = "0xF44300", Slot = "5")]
		public override Pvr_AchievementDefinitionList GetAchievementDefinitions()
		{
			return null;
		}

		[Token(Token = "0x60011D4")]
		[Address(RVA = "0xF44350", Offset = "0xF44350", VA = "0xF44350", Slot = "9")]
		protected override Pvr_AchievementDefinitionList GetDataFromMessage(AndroidJavaObject msg)
		{
			return null;
		}
	}
	[Token(Token = "0x2000267")]
	public class MessageWithAchievementProgressList : Pvr_Message<Pvr_AchievementProgressList>
	{
		[Token(Token = "0x60011D5")]
		[Address(RVA = "0xF44534", Offset = "0xF44534", VA = "0xF44534")]
		public MessageWithAchievementProgressList(AndroidJavaObject msg)
		{
		}

		[Token(Token = "0x60011D6")]
		[Address(RVA = "0xF44594", Offset = "0xF44594", VA = "0xF44594", Slot = "6")]
		public override Pvr_AchievementProgressList GetAchievementProgressList()
		{
			return null;
		}

		[Token(Token = "0x60011D7")]
		[Address(RVA = "0xF445E4", Offset = "0xF445E4", VA = "0xF445E4", Slot = "9")]
		protected override Pvr_AchievementProgressList GetDataFromMessage(AndroidJavaObject msg)
		{
			return null;
		}
	}
	[Token(Token = "0x2000268")]
	public class MessageWithAchievementUpdate : Pvr_Message<Pvr_AchievementUpdate>
	{
		[Token(Token = "0x60011D8")]
		[Address(RVA = "0xF447C8", Offset = "0xF447C8", VA = "0xF447C8")]
		public MessageWithAchievementUpdate(AndroidJavaObject msg)
		{
		}

		[Token(Token = "0x60011D9")]
		[Address(RVA = "0xF44828", Offset = "0xF44828", VA = "0xF44828", Slot = "7")]
		public override Pvr_AchievementUpdate GetAchievementUpdate()
		{
			return null;
		}

		[Token(Token = "0x60011DA")]
		[Address(RVA = "0xF44878", Offset = "0xF44878", VA = "0xF44878", Slot = "9")]
		protected override Pvr_AchievementUpdate GetDataFromMessage(AndroidJavaObject msg)
		{
			return null;
		}
	}
	[Token(Token = "0x2000269")]
	public class MessageWithString : Pvr_Message<string>
	{
		[Token(Token = "0x60011DB")]
		[Address(RVA = "0xF4496C", Offset = "0xF4496C", VA = "0xF4496C")]
		public MessageWithString(AndroidJavaObject msg)
		{
		}

		[Token(Token = "0x60011DC")]
		[Address(RVA = "0xF449CC", Offset = "0xF449CC", VA = "0xF449CC", Slot = "8")]
		public override string GetString()
		{
			return null;
		}

		[Token(Token = "0x60011DD")]
		[Address(RVA = "0xF44A1C", Offset = "0xF44A1C", VA = "0xF44A1C", Slot = "9")]
		protected override string GetDataFromMessage(AndroidJavaObject msg)
		{
			return null;
		}
	}
	[Token(Token = "0x200026A")]
	public class Error
	{
		[Token(Token = "0x4000E61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly int Code;

		[Token(Token = "0x4000E62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public readonly int HttpCode;

		[Token(Token = "0x4000E63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string Message;

		[Token(Token = "0x60011DE")]
		[Address(RVA = "0xF44260", Offset = "0xF44260", VA = "0xF44260")]
		public Error(int code, string message, int httpCode)
		{
		}
	}
	[Token(Token = "0x200026B")]
	public sealed class Pvr_Request<T> : Request
	{
		[Token(Token = "0x4000E64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Pvr_Message<T>.Callback callback_;

		[Token(Token = "0x60011DF")]
		public Pvr_Request(long requestID)
		{
		}

		[Token(Token = "0x60011E0")]
		public Pvr_Request<T> OnComplete(Pvr_Message<T>.Callback callback)
		{
			return null;
		}

		[Token(Token = "0x60011E1")]
		public override void HandleMessage(Pvr_Message msg)
		{
		}
	}
	[Token(Token = "0x200026C")]
	public class Request
	{
		[Token(Token = "0x4000E65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Pvr_Message.Callback callback_;

		[Token(Token = "0x4000E66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x650878", Offset = "0x650878")]
		private long <RequestID>k__BackingField;

		[Token(Token = "0x1700015C")]
		public long RequestID
		{
			[Token(Token = "0x60011E3")]
			[Address(RVA = "0xF46FE8", Offset = "0xF46FE8", VA = "0xF46FE8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66A91C", Offset = "0x66A91C")]
			get
			{
				return default(long);
			}
			[Token(Token = "0x60011E4")]
			[Address(RVA = "0xF48B5C", Offset = "0xF48B5C", VA = "0xF48B5C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66A92C", Offset = "0x66A92C")]
			set
			{
			}
		}

		[Token(Token = "0x60011E2")]
		[Address(RVA = "0xF48B30", Offset = "0xF48B30", VA = "0xF48B30")]
		public Request(long requestID)
		{
		}

		[Token(Token = "0x60011E5")]
		[Address(RVA = "0xF48B64", Offset = "0xF48B64", VA = "0xF48B64")]
		public Request OnComplete(Pvr_Message.Callback callback)
		{
			return null;
		}

		[Token(Token = "0x60011E6")]
		[Address(RVA = "0xF48BE0", Offset = "0xF48BE0", VA = "0xF48BE0", Slot = "4")]
		public virtual void HandleMessage(Pvr_Message msg)
		{
		}

		[Token(Token = "0x60011E7")]
		[Address(RVA = "0xF47D4C", Offset = "0xF47D4C", VA = "0xF47D4C")]
		public static void RunCallbacks(uint limit = 0u)
		{
		}
	}
}
namespace VLB
{
	[Token(Token = "0x200026D")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x63E8C0", Offset = "0x63E8C0")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x63E8C0", Offset = "0x63E8C0")]
	public class BeamGeometry : MonoBehaviour
	{
		[Token(Token = "0x4000E67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private VolumetricLightBeam m_Master;

		[Token(Token = "0x4000E68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Matrix4x4 m_ColorGradientMatrix;

		[Token(Token = "0x4000E69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private MeshType m_CurrentMeshType;

		[Token(Token = "0x4000E6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Material m_CustomMaterial;

		[Token(Token = "0x4000E6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x650888", Offset = "0x650888")]
		private MeshRenderer <meshRenderer>k__BackingField;

		[Token(Token = "0x4000E6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x650898", Offset = "0x650898")]
		private MeshFilter <meshFilter>k__BackingField;

		[Token(Token = "0x4000E6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6508A8", Offset = "0x6508A8")]
		private Mesh <coneMesh>k__BackingField;

		[Token(Token = "0x4000E6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Plane m_ClippingPlaneWS;

		[Token(Token = "0x1700015D")]
		public MeshRenderer meshRenderer
		{
			[Token(Token = "0x60011E8")]
			[Address(RVA = "0x88C82C", Offset = "0x88C82C", VA = "0x88C82C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66A93C", Offset = "0x66A93C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60011E9")]
			[Address(RVA = "0x88C834", Offset = "0x88C834", VA = "0x88C834")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66A94C", Offset = "0x66A94C")]
			private set
			{
			}
		}

		[Token(Token = "0x1700015E")]
		public MeshFilter meshFilter
		{
			[Token(Token = "0x60011EA")]
			[Address(RVA = "0x88C83C", Offset = "0x88C83C", VA = "0x88C83C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66A95C", Offset = "0x66A95C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60011EB")]
			[Address(RVA = "0x88C844", Offset = "0x88C844", VA = "0x88C844")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66A96C", Offset = "0x66A96C")]
			private set
			{
			}
		}

		[Token(Token = "0x1700015F")]
		public Mesh coneMesh
		{
			[Token(Token = "0x60011EC")]
			[Address(RVA = "0x88C84C", Offset = "0x88C84C", VA = "0x88C84C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66A97C", Offset = "0x66A97C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60011ED")]
			[Address(RVA = "0x88C854", Offset = "0x88C854", VA = "0x88C854")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66A98C", Offset = "0x66A98C")]
			private set
			{
			}
		}

		[Token(Token = "0x17000160")]
		public bool visible
		{
			[Token(Token = "0x60011EE")]
			[Address(RVA = "0x88C85C", Offset = "0x88C85C", VA = "0x88C85C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60011EF")]
			[Address(RVA = "0x88C88C", Offset = "0x88C88C", VA = "0x88C88C")]
			set
			{
			}
		}

		[Token(Token = "0x17000161")]
		public int sortingLayerID
		{
			[Token(Token = "0x60011F0")]
			[Address(RVA = "0x88C8C4", Offset = "0x88C8C4", VA = "0x88C8C4")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60011F1")]
			[Address(RVA = "0x88C8F4", Offset = "0x88C8F4", VA = "0x88C8F4")]
			set
			{
			}
		}

		[Token(Token = "0x17000162")]
		public int sortingOrder
		{
			[Token(Token = "0x60011F2")]
			[Address(RVA = "0x88C92C", Offset = "0x88C92C", VA = "0x88C92C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60011F3")]
			[Address(RVA = "0x88C95C", Offset = "0x88C95C", VA = "0x88C95C")]
			set
			{
			}
		}

		[Token(Token = "0x17000163")]
		public static bool isCustomRenderPipelineSupported
		{
			[Token(Token = "0x60011F9")]
			[Address(RVA = "0x88CCAC", Offset = "0x88CCAC", VA = "0x88CCAC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000164")]
		private bool isNoiseEnabled
		{
			[Token(Token = "0x60011FD")]
			[Address(RVA = "0x88E4B8", Offset = "0x88E4B8", VA = "0x88E4B8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000165")]
		private bool isClippingPlaneEnabled
		{
			[Token(Token = "0x60011FE")]
			[Address(RVA = "0x88E560", Offset = "0x88E560", VA = "0x88E560")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000166")]
		private bool isDepthBlendEnabled
		{
			[Token(Token = "0x60011FF")]
			[Address(RVA = "0x88E5A0", Offset = "0x88E5A0", VA = "0x88E5A0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60011F4")]
		[Address(RVA = "0x88C994", Offset = "0x88C994", VA = "0x88C994")]
		private void Start()
		{
		}

		[Token(Token = "0x60011F5")]
		[Address(RVA = "0x88CA54", Offset = "0x88CA54", VA = "0x88CA54")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60011F6")]
		[Address(RVA = "0x88CAFC", Offset = "0x88CAFC", VA = "0x88CAFC")]
		private static bool IsUsingCustomRenderPipeline()
		{
			return default(bool);
		}

		[Token(Token = "0x60011F7")]
		[Address(RVA = "0x88CB8C", Offset = "0x88CB8C", VA = "0x88CB8C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60011F8")]
		[Address(RVA = "0x88CC1C", Offset = "0x88CC1C", VA = "0x88CC1C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60011FA")]
		[Address(RVA = "0x88CCB4", Offset = "0x88CCB4", VA = "0x88CCB4")]
		public void Initialize(VolumetricLightBeam master)
		{
		}

		[Token(Token = "0x60011FB")]
		[Address(RVA = "0x88D658", Offset = "0x88D658", VA = "0x88D658")]
		public void RegenerateMesh()
		{
		}

		[Token(Token = "0x60011FC")]
		[Address(RVA = "0x88E38C", Offset = "0x88E38C", VA = "0x88E38C")]
		private void ComputeLocalMatrix()
		{
		}

		[Token(Token = "0x6001200")]
		[Address(RVA = "0x88D3EC", Offset = "0x88D3EC", VA = "0x88D3EC")]
		private bool ApplyMaterial()
		{
			return default(bool);
		}

		[Token(Token = "0x6001201")]
		[Address(RVA = "0x88EC04", Offset = "0x88EC04", VA = "0x88EC04")]
		private void SetMaterialProp(string name, float value)
		{
		}

		[Token(Token = "0x6001202")]
		[Address(RVA = "0x88ED0C", Offset = "0x88ED0C", VA = "0x88ED0C")]
		private void SetMaterialProp(string name, Vector4 value)
		{
		}

		[Token(Token = "0x6001203")]
		[Address(RVA = "0x88EE44", Offset = "0x88EE44", VA = "0x88EE44")]
		private void SetMaterialProp(string name, Color value)
		{
		}

		[Token(Token = "0x6001204")]
		[Address(RVA = "0x88EF7C", Offset = "0x88EF7C", VA = "0x88EF7C")]
		private void SetMaterialProp(string name, Matrix4x4 value)
		{
		}

		[Token(Token = "0x6001205")]
		[Address(RVA = "0x88F0DC", Offset = "0x88F0DC", VA = "0x88F0DC")]
		private void SendMaterialClippingPlaneProp()
		{
		}

		[Token(Token = "0x6001206")]
		[Address(RVA = "0x88DC5C", Offset = "0x88DC5C", VA = "0x88DC5C")]
		public void UpdateMaterialAndBounds()
		{
		}

		[Token(Token = "0x6001207")]
		[Address(RVA = "0x88F1B0", Offset = "0x88F1B0", VA = "0x88F1B0")]
		public void SetClippingPlane(Plane planeWS)
		{
		}

		[Token(Token = "0x6001208")]
		[Address(RVA = "0x88F290", Offset = "0x88F290", VA = "0x88F290")]
		public void SetClippingPlaneOff()
		{
		}

		[Token(Token = "0x6001209")]
		[Address(RVA = "0x88F33C", Offset = "0x88F33C", VA = "0x88F33C")]
		private void OnBeginCameraRendering(Camera cam)
		{
		}

		[Token(Token = "0x600120A")]
		[Address(RVA = "0x88F76C", Offset = "0x88F76C", VA = "0x88F76C")]
		private void OnWillRenderObject()
		{
		}

		[Token(Token = "0x600120B")]
		[Address(RVA = "0x88F340", Offset = "0x88F340", VA = "0x88F340")]
		private void UpdateCameraRelatedProperties(Camera cam)
		{
		}

		[Token(Token = "0x600120C")]
		[Address(RVA = "0x88F80C", Offset = "0x88F80C", VA = "0x88F80C")]
		public BeamGeometry()
		{
		}
	}
	[Token(Token = "0x200026E")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x63E930", Offset = "0x63E930")]
	public class Config : ScriptableObject
	{
		[Token(Token = "0x4000E6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool geometryOverrideLayer;

		[Token(Token = "0x4000E70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int geometryLayerID;

		[Token(Token = "0x4000E71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string geometryTag;

		[Token(Token = "0x4000E72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int geometryRenderQueue;

		[Token(Token = "0x4000E73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public RenderPipeline renderPipeline;

		[Token(Token = "0x4000E74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x6508B8", Offset = "0x6508B8")]
		public bool forceSinglePass;

		[Token(Token = "0x4000E75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public RenderingMode renderingMode;

		[Token(Token = "0x4000E76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		[HighlightNull]
		private Shader beamShader1Pass;

		[Token(Token = "0x4000E77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x650928", Offset = "0x650928")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x650928", Offset = "0x650928")]
		[SerializeField]
		[HighlightNull]
		private Shader beamShader2Pass;

		[Token(Token = "0x4000E78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public int sharedMeshSides;

		[Token(Token = "0x4000E79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public int sharedMeshSegments;

		[Token(Token = "0x4000E7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6509A8", Offset = "0x6509A8")]
		public float globalNoiseScale;

		[Token(Token = "0x4000E7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public Vector3 globalNoiseVelocity;

		[Token(Token = "0x4000E7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[HighlightNull]
		public TextAsset noise3DData;

		[Token(Token = "0x4000E7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public int noise3DSize;

		[Token(Token = "0x4000E7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[HighlightNull]
		public ParticleSystem dustParticlesPrefab;

		[Token(Token = "0x4000E7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private int pluginVersion;

		[Token(Token = "0x4000E80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Config m_Instance;

		[Token(Token = "0x17000167")]
		public RenderingMode actualRenderingMode
		{
			[Token(Token = "0x600120D")]
			[Address(RVA = "0x88D22C", Offset = "0x88D22C", VA = "0x88D22C")]
			get
			{
				return default(RenderingMode);
			}
		}

		[Token(Token = "0x17000168")]
		public bool useSinglePassShader
		{
			[Token(Token = "0x600120E")]
			[Address(RVA = "0x88DA1C", Offset = "0x88DA1C", VA = "0x88DA1C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000169")]
		public Shader beamShader
		{
			[Token(Token = "0x600120F")]
			[Address(RVA = "0x88F814", Offset = "0x88F814", VA = "0x88F814")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700016A")]
		public Vector4 globalNoiseParam
		{
			[Token(Token = "0x6001210")]
			[Address(RVA = "0x88F830", Offset = "0x88F830", VA = "0x88F830")]
			get
			{
				return default(Vector4);
			}
		}

		[Token(Token = "0x1700016B")]
		public static Config Instance
		{
			[Token(Token = "0x6001217")]
			[Address(RVA = "0x88D100", Offset = "0x88D100", VA = "0x88D100")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001211")]
		[Address(RVA = "0x88F868", Offset = "0x88F868", VA = "0x88F868")]
		[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0x66A99C", Offset = "0x66A99C")]
		private static void OnStartup()
		{
		}

		[Token(Token = "0x6001212")]
		[Address(RVA = "0x88F8D8", Offset = "0x88F8D8", VA = "0x88F8D8")]
		public static void OnRenderPipelineChanged(RenderPipeline pipeline)
		{
		}

		[Token(Token = "0x6001213")]
		[Address(RVA = "0x88F950", Offset = "0x88F950", VA = "0x88F950")]
		public void Reset()
		{
		}

		[Token(Token = "0x6001214")]
		[Address(RVA = "0x88FB10", Offset = "0x88FB10", VA = "0x88FB10")]
		public ParticleSystem NewVolumetricDustParticles()
		{
			return null;
		}

		[Token(Token = "0x6001215")]
		[Address(RVA = "0x88FD08", Offset = "0x88FD08", VA = "0x88FD08")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001216")]
		[Address(RVA = "0x88FD38", Offset = "0x88FD38", VA = "0x88FD38")]
		private void HandleBackwardCompatibility(int serializedVersion, int newVersion)
		{
		}

		[Token(Token = "0x6001218")]
		[Address(RVA = "0x88FDE4", Offset = "0x88FDE4", VA = "0x88FDE4")]
		public Config()
		{
		}
	}
	[Token(Token = "0x200026F")]
	public static class Consts
	{
		[Token(Token = "0x4000E81")]
		private const string HelpUrlBase = "http://saladgamer.com/vlb-doc/";

		[Token(Token = "0x4000E82")]
		public const string HelpUrlBeam = "http://saladgamer.com/vlb-doc/comp-lightbeam/";

		[Token(Token = "0x4000E83")]
		public const string HelpUrlDustParticles = "http://saladgamer.com/vlb-doc/comp-dustparticles/";

		[Token(Token = "0x4000E84")]
		public const string HelpUrlDynamicOcclusion = "http://saladgamer.com/vlb-doc/comp-dynocclusion/";

		[Token(Token = "0x4000E85")]
		public const string HelpUrlTriggerZone = "http://saladgamer.com/vlb-doc/comp-triggerzone/";

		[Token(Token = "0x4000E86")]
		public const string HelpUrlConfig = "http://saladgamer.com/vlb-doc/config/";

		[Token(Token = "0x4000E87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly bool ProceduralObjectsVisibleInEditor;

		[Token(Token = "0x4000E88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public static readonly Color FlatColor;

		[Token(Token = "0x4000E89")]
		public const ColorMode ColorModeDefault = ColorMode.Flat;

		[Token(Token = "0x4000E8A")]
		public const float IntensityDefault = 1f;

		[Token(Token = "0x4000E8B")]
		public const float IntensityMin = 0f;

		[Token(Token = "0x4000E8C")]
		public const float IntensityMax = 8f;

		[Token(Token = "0x4000E8D")]
		public const float SpotAngleDefault = 35f;

		[Token(Token = "0x4000E8E")]
		public const float SpotAngleMin = 0.1f;

		[Token(Token = "0x4000E8F")]
		public const float SpotAngleMax = 179.9f;

		[Token(Token = "0x4000E90")]
		public const float ConeRadiusStart = 0.1f;

		[Token(Token = "0x4000E91")]
		public const MeshType GeomMeshType = MeshType.Shared;

		[Token(Token = "0x4000E92")]
		public const int GeomSidesDefault = 18;

		[Token(Token = "0x4000E93")]
		public const int GeomSidesMin = 3;

		[Token(Token = "0x4000E94")]
		public const int GeomSidesMax = 256;

		[Token(Token = "0x4000E95")]
		public const int GeomSegmentsDefault = 5;

		[Token(Token = "0x4000E96")]
		public const int GeomSegmentsMin = 0;

		[Token(Token = "0x4000E97")]
		public const int GeomSegmentsMax = 64;

		[Token(Token = "0x4000E98")]
		public const bool GeomCap = false;

		[Token(Token = "0x4000E99")]
		public const AttenuationEquation AttenuationEquationDefault = AttenuationEquation.Quadratic;

		[Token(Token = "0x4000E9A")]
		public const float AttenuationCustomBlending = 0.5f;

		[Token(Token = "0x4000E9B")]
		public const float FadeStart = 0f;

		[Token(Token = "0x4000E9C")]
		public const float FadeEnd = 3f;

		[Token(Token = "0x4000E9D")]
		public const float FadeMinThreshold = 0.01f;

		[Token(Token = "0x4000E9E")]
		public const float DepthBlendDistance = 2f;

		[Token(Token = "0x4000E9F")]
		public const float CameraClippingDistance = 0.5f;

		[Token(Token = "0x4000EA0")]
		public const float FresnelPowMaxValue = 10f;

		[Token(Token = "0x4000EA1")]
		public const float FresnelPow = 8f;

		[Token(Token = "0x4000EA2")]
		public const float GlareFrontal = 0.5f;

		[Token(Token = "0x4000EA3")]
		public const float GlareBehind = 0.5f;

		[Token(Token = "0x4000EA4")]
		public const float NoiseIntensityMin = 0f;

		[Token(Token = "0x4000EA5")]
		public const float NoiseIntensityMax = 1f;

		[Token(Token = "0x4000EA6")]
		public const float NoiseIntensityDefault = 0.5f;

		[Token(Token = "0x4000EA7")]
		public const float NoiseScaleMin = 0.01f;

		[Token(Token = "0x4000EA8")]
		public const float NoiseScaleMax = 2f;

		[Token(Token = "0x4000EA9")]
		public const float NoiseScaleDefault = 0.5f;

		[Token(Token = "0x4000EAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public static readonly Vector3 NoiseVelocityDefault;

		[Token(Token = "0x4000EAB")]
		public const BlendingMode BlendingModeDefault = BlendingMode.Additive;

		[Token(Token = "0x4000EAC")]
		public const OccluderDimensions DynOcclusionDimensionsDefault = OccluderDimensions.Occluders3D;

		[Token(Token = "0x4000EAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static readonly LayerMask DynOcclusionLayerMaskDefault;

		[Token(Token = "0x4000EAE")]
		public const float DynOcclusionMinOccluderAreaDefault = 0f;

		[Token(Token = "0x4000EAF")]
		public const int DynOcclusionWaitFrameCountDefault = 3;

		[Token(Token = "0x4000EB0")]
		public const float DynOcclusionMinSurfaceRatioDefault = 0.5f;

		[Token(Token = "0x4000EB1")]
		public const float DynOcclusionMinSurfaceRatioMin = 50f;

		[Token(Token = "0x4000EB2")]
		public const float DynOcclusionMinSurfaceRatioMax = 100f;

		[Token(Token = "0x4000EB3")]
		public const float DynOcclusionMaxSurfaceDotDefault = 0.25f;

		[Token(Token = "0x4000EB4")]
		public const float DynOcclusionMaxSurfaceAngleMin = 45f;

		[Token(Token = "0x4000EB5")]
		public const float DynOcclusionMaxSurfaceAngleMax = 90f;

		[Token(Token = "0x4000EB6")]
		public const PlaneAlignment DynOcclusionPlaneAlignmentDefault = PlaneAlignment.Surface;

		[Token(Token = "0x4000EB7")]
		public const float DynOcclusionPlaneOffsetDefault = 0.1f;

		[Token(Token = "0x4000EB8")]
		public const bool ConfigGeometryOverrideLayerDefault = true;

		[Token(Token = "0x4000EB9")]
		public const int ConfigGeometryLayerIDDefault = 1;

		[Token(Token = "0x4000EBA")]
		public const string ConfigGeometryTagDefault = "Untagged";

		[Token(Token = "0x4000EBB")]
		public const RenderQueue ConfigGeometryRenderQueueDefault = RenderQueue.Transparent;

		[Token(Token = "0x4000EBC")]
		public const RenderPipeline ConfigGeometryRenderPipelineDefault = RenderPipeline.BuiltIn;

		[Token(Token = "0x4000EBD")]
		public const RenderingMode ConfigGeometryRenderingModeDefault = RenderingMode.MultiPass;

		[Token(Token = "0x4000EBE")]
		public const int ConfigNoise3DSizeDefault = 64;

		[Token(Token = "0x4000EBF")]
		public const int ConfigSharedMeshSides = 24;

		[Token(Token = "0x4000EC0")]
		public const int ConfigSharedMeshSegments = 5;

		[Token(Token = "0x1700016C")]
		public static HideFlags ProceduralObjectsHideFlags
		{
			[Token(Token = "0x600121A")]
			[Address(RVA = "0x88D08C", Offset = "0x88D08C", VA = "0x88D08C")]
			get
			{
				return default(HideFlags);
			}
		}
	}
	[Token(Token = "0x2000270")]
	[ExecuteInEditMode]
	[DisallowMultipleComponent]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x63E968", Offset = "0x63E968")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x63E968", Offset = "0x63E968")]
	public class DynamicOcclusion : MonoBehaviour
	{
		[Token(Token = "0x200067C")]
		public class HitResult
		{
			[Token(Token = "0x40028B7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Vector3 point;

			[Token(Token = "0x40028B8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public Vector3 normal;

			[Token(Token = "0x40028B9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float distance;

			[Token(Token = "0x40028BA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private Collider2D collider2D;

			[Token(Token = "0x40028BB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private Collider collider3D;

			[Token(Token = "0x170002EF")]
			public bool hasCollider
			{
				[Token(Token = "0x6002D2D")]
				[Address(RVA = "0x891254", Offset = "0x891254", VA = "0x891254")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x6002D2A")]
			[Address(RVA = "0x890D08", Offset = "0x890D08", VA = "0x890D08")]
			public HitResult(RaycastHit hit3D)
			{
			}

			[Token(Token = "0x6002D2B")]
			[Address(RVA = "0x890E0C", Offset = "0x890E0C", VA = "0x890E0C")]
			public HitResult(RaycastHit2D hit2D)
			{
			}

			[Token(Token = "0x6002D2C")]
			[Address(RVA = "0x890D78", Offset = "0x890D78", VA = "0x890D78")]
			public HitResult()
			{
			}
		}

		[Token(Token = "0x200067D")]
		private enum Direction
		{
			[Token(Token = "0x40028BD")]
			Up,
			[Token(Token = "0x40028BE")]
			Right,
			[Token(Token = "0x40028BF")]
			Down,
			[Token(Token = "0x40028C0")]
			Left
		}

		[Token(Token = "0x4000EC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public OccluderDimensions dimensions;

		[Token(Token = "0x4000EC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public LayerMask layerMask;

		[Token(Token = "0x4000EC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float minOccluderArea;

		[Token(Token = "0x4000EC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int waitFrameCount;

		[Token(Token = "0x4000EC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float minSurfaceRatio;

		[Token(Token = "0x4000EC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float maxSurfaceDot;

		[Token(Token = "0x4000EC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public PlaneAlignment planeAlignment;

		[Token(Token = "0x4000EC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float planeOffset;

		[Token(Token = "0x4000EC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private VolumetricLightBeam m_Master;

		[Token(Token = "0x4000ECA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int m_FrameCountToWait;

		[Token(Token = "0x4000ECB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float m_RangeMultiplier;

		[Token(Token = "0x4000ECC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private uint m_PrevNonSubHitDirectionId;

		[Token(Token = "0x600121C")]
		[Address(RVA = "0x88FF80", Offset = "0x88FF80", VA = "0x88FF80")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x600121D")]
		[Address(RVA = "0x890018", Offset = "0x890018", VA = "0x890018")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600121E")]
		[Address(RVA = "0x890070", Offset = "0x890070", VA = "0x890070")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600121F")]
		[Address(RVA = "0x890078", Offset = "0x890078", VA = "0x890078")]
		private void Start()
		{
		}

		[Token(Token = "0x6001220")]
		[Address(RVA = "0x89015C", Offset = "0x89015C", VA = "0x89015C")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001221")]
		[Address(RVA = "0x8905FC", Offset = "0x8905FC", VA = "0x8905FC")]
		private Vector3 GetRandomVectorAround(Vector3 direction, float angleDiff)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001222")]
		[Address(RVA = "0x8906F8", Offset = "0x8906F8", VA = "0x8906F8")]
		private HitResult GetBestHit(Vector3 rayPos, Vector3 rayDir)
		{
			return null;
		}

		[Token(Token = "0x6001223")]
		[Address(RVA = "0x89070C", Offset = "0x89070C", VA = "0x89070C")]
		private HitResult GetBestHit3D(Vector3 rayPos, Vector3 rayDir)
		{
			return null;
		}

		[Token(Token = "0x6001224")]
		[Address(RVA = "0x8909F4", Offset = "0x8909F4", VA = "0x8909F4")]
		private HitResult GetBestHit2D(Vector3 rayPos, Vector3 rayDir)
		{
			return null;
		}

		[Token(Token = "0x6001225")]
		[Address(RVA = "0x890EF4", Offset = "0x890EF4", VA = "0x890EF4")]
		private Vector3 GetDirection(uint dirInt)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001226")]
		[Address(RVA = "0x89112C", Offset = "0x89112C", VA = "0x89112C")]
		private bool IsHitValid(HitResult hit)
		{
			return default(bool);
		}

		[Token(Token = "0x6001227")]
		[Address(RVA = "0x89019C", Offset = "0x89019C", VA = "0x89019C")]
		private void ProcessRaycasts()
		{
		}

		[Token(Token = "0x6001228")]
		[Address(RVA = "0x891308", Offset = "0x891308", VA = "0x891308")]
		private void SetHit(HitResult hit)
		{
		}

		[Token(Token = "0x6001229")]
		[Address(RVA = "0x890074", Offset = "0x890074", VA = "0x890074")]
		private void SetHitNull()
		{
		}

		[Token(Token = "0x600122A")]
		[Address(RVA = "0x89144C", Offset = "0x89144C", VA = "0x89144C")]
		private void SetClippingPlane(Plane planeWS)
		{
		}

		[Token(Token = "0x600122B")]
		[Address(RVA = "0x8915B4", Offset = "0x8915B4", VA = "0x8915B4")]
		private void SetClippingPlaneOff()
		{
		}

		[Token(Token = "0x600122C")]
		[Address(RVA = "0x8915E4", Offset = "0x8915E4", VA = "0x8915E4")]
		public DynamicOcclusion()
		{
		}
	}
	[Token(Token = "0x2000271")]
	public enum ColorMode
	{
		[Token(Token = "0x4000ECE")]
		Flat,
		[Token(Token = "0x4000ECF")]
		Gradient
	}
	[Token(Token = "0x2000272")]
	public enum AttenuationEquation
	{
		[Token(Token = "0x4000ED1")]
		Linear,
		[Token(Token = "0x4000ED2")]
		Quadratic,
		[Token(Token = "0x4000ED3")]
		Blend
	}
	[Token(Token = "0x2000273")]
	public enum BlendingMode
	{
		[Token(Token = "0x4000ED5")]
		Additive,
		[Token(Token = "0x4000ED6")]
		SoftAdditive,
		[Token(Token = "0x4000ED7")]
		TraditionalTransparency
	}
	[Token(Token = "0x2000274")]
	public enum MeshType
	{
		[Token(Token = "0x4000ED9")]
		Shared,
		[Token(Token = "0x4000EDA")]
		Custom
	}
	[Token(Token = "0x2000275")]
	public enum RenderPipeline
	{
		[Token(Token = "0x4000EDC")]
		BuiltIn,
		[Token(Token = "0x4000EDD")]
		SRP_4_0_0_or_higher
	}
	[Token(Token = "0x2000276")]
	public enum RenderingMode
	{
		[Token(Token = "0x4000EDF")]
		MultiPass,
		[Token(Token = "0x4000EE0")]
		SinglePass,
		[Token(Token = "0x4000EE1")]
		GPUInstancing
	}
	[Token(Token = "0x2000277")]
	public enum RenderQueue
	{
		[Token(Token = "0x4000EE3")]
		Custom = 0,
		[Token(Token = "0x4000EE4")]
		Background = 1000,
		[Token(Token = "0x4000EE5")]
		Geometry = 2000,
		[Token(Token = "0x4000EE6")]
		AlphaTest = 2450,
		[Token(Token = "0x4000EE7")]
		GeometryLast = 2500,
		[Token(Token = "0x4000EE8")]
		Transparent = 3000,
		[Token(Token = "0x4000EE9")]
		Overlay = 4000
	}
	[Token(Token = "0x2000278")]
	public enum OccluderDimensions
	{
		[Token(Token = "0x4000EEB")]
		Occluders3D,
		[Token(Token = "0x4000EEC")]
		Occluders2D
	}
	[Token(Token = "0x2000279")]
	public enum PlaneAlignment
	{
		[Token(Token = "0x4000EEE")]
		Surface,
		[Token(Token = "0x4000EEF")]
		Beam
	}
	[Token(Token = "0x200027A")]
	public static class GlobalMesh
	{
		[Token(Token = "0x4000EF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Mesh ms_Mesh;

		[Token(Token = "0x4000EF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static bool ms_DoubleSided;

		[Token(Token = "0x600122D")]
		[Address(RVA = "0x88DA2C", Offset = "0x88DA2C", VA = "0x88DA2C")]
		public static Mesh Get()
		{
			return null;
		}

		[Token(Token = "0x600122E")]
		[Address(RVA = "0x891684", Offset = "0x891684", VA = "0x891684")]
		public static void Destroy()
		{
		}
	}
	[Token(Token = "0x200027B")]
	public static class GpuInstancing
	{
		[Token(Token = "0x4000EF2")]
		public const bool isSupported = true;

		[Token(Token = "0x1700016D")]
		public static bool forceEnableDepthBlend
		{
			[Token(Token = "0x6001230")]
			[Address(RVA = "0x88E5E8", Offset = "0x88E5E8", VA = "0x88E5E8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001231")]
		[Address(RVA = "0x891788", Offset = "0x891788", VA = "0x891788")]
		public static void SetMaterialProperties(Material material, bool enableInstancing)
		{
		}

		[Token(Token = "0x6001232")]
		[Address(RVA = "0x89182C", Offset = "0x89182C", VA = "0x89182C")]
		public static bool CanBeBatched(VolumetricLightBeam beamA, VolumetricLightBeam beamB, ref string reasons)
		{
			return default(bool);
		}

		[Token(Token = "0x6001233")]
		[Address(RVA = "0x89198C", Offset = "0x89198C", VA = "0x89198C")]
		public static bool CanBeBatched(VolumetricLightBeam beam, ref string reason)
		{
			return default(bool);
		}

		[Token(Token = "0x6001234")]
		[Address(RVA = "0x891AB4", Offset = "0x891AB4", VA = "0x891AB4")]
		private static void AppendErrorMessage(ref string message, string toAppend)
		{
		}
	}
	[Token(Token = "0x200027C")]
	public sealed class HighlightNullAttribute : PropertyAttribute
	{
		[Token(Token = "0x6001235")]
		[Address(RVA = "0x891B60", Offset = "0x891B60", VA = "0x891B60")]
		public HighlightNullAttribute()
		{
		}
	}
	[Token(Token = "0x200027D")]
	public class MaterialKeywordSRP
	{
		[Token(Token = "0x4000EF3")]
		public const string kKeyword = "VLB_SRP_API";

		[Token(Token = "0x6001236")]
		[Address(RVA = "0x891B68", Offset = "0x891B68", VA = "0x891B68")]
		public MaterialKeywordSRP()
		{
		}
	}
	[Token(Token = "0x200027E")]
	public static class MaterialManager
	{
		[Token(Token = "0x200067E")]
		public enum BlendingMode
		{
			[Token(Token = "0x40028C2")]
			Additive,
			[Token(Token = "0x40028C3")]
			SoftAdditive,
			[Token(Token = "0x40028C4")]
			TraditionalTransparency,
			[Token(Token = "0x40028C5")]
			Count
		}

		[Token(Token = "0x200067F")]
		public enum Noise3D
		{
			[Token(Token = "0x40028C7")]
			Off,
			[Token(Token = "0x40028C8")]
			On,
			[Token(Token = "0x40028C9")]
			Count
		}

		[Token(Token = "0x2000680")]
		public enum DepthBlend
		{
			[Token(Token = "0x40028CB")]
			Off,
			[Token(Token = "0x40028CC")]
			On,
			[Token(Token = "0x40028CD")]
			Count
		}

		[Token(Token = "0x2000681")]
		public enum ColorGradient
		{
			[Token(Token = "0x40028CF")]
			Off,
			[Token(Token = "0x40028D0")]
			MatrixLow,
			[Token(Token = "0x40028D1")]
			MatrixHigh,
			[Token(Token = "0x40028D2")]
			Count
		}

		[Token(Token = "0x2000682")]
		public enum ClippingPlane
		{
			[Token(Token = "0x40028D4")]
			Off,
			[Token(Token = "0x40028D5")]
			On,
			[Token(Token = "0x40028D6")]
			Count
		}

		[Token(Token = "0x2000683")]
		public class StaticProperties
		{
			[Token(Token = "0x40028D7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public BlendingMode blendingMode;

			[Token(Token = "0x40028D8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public Noise3D noise3D;

			[Token(Token = "0x40028D9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public DepthBlend depthBlend;

			[Token(Token = "0x40028DA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public ColorGradient colorGradient;

			[Token(Token = "0x40028DB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ClippingPlane clippingPlane;

			[Token(Token = "0x170002F0")]
			public int materialID
			{
				[Token(Token = "0x6002D2E")]
				[Address(RVA = "0x891BF8", Offset = "0x891BF8", VA = "0x891BF8")]
				get
				{
					return default(int);
				}
			}

			[Token(Token = "0x6002D2F")]
			[Address(RVA = "0x88E668", Offset = "0x88E668", VA = "0x88E668")]
			public void ApplyToMaterial(Material mat)
			{
			}

			[Token(Token = "0x6002D30")]
			[Address(RVA = "0x88E660", Offset = "0x88E660", VA = "0x88E660")]
			public StaticProperties()
			{
			}
		}

		[Token(Token = "0x2000684")]
		private class MaterialsGroup
		{
			[Token(Token = "0x40028DC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Material[] materials;

			[Token(Token = "0x6002D31")]
			[Address(RVA = "0x891B70", Offset = "0x891B70", VA = "0x891B70")]
			public MaterialsGroup()
			{
			}
		}

		[Token(Token = "0x4000EF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static MaterialPropertyBlock materialPropertyBlock;

		[Token(Token = "0x4000EF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly BlendMode[] BlendingMode_SrcFactor;

		[Token(Token = "0x4000EF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static readonly BlendMode[] BlendingMode_DstFactor;

		[Token(Token = "0x4000EF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static readonly bool[] BlendingMode_AlphaAsBlack;

		[Token(Token = "0x4000EF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static int kStaticPropertiesCount;

		[Token(Token = "0x4000EF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static Hashtable ms_MaterialsGroup;

		[Token(Token = "0x6001237")]
		[Address(RVA = "0x88D234", Offset = "0x88D234", VA = "0x88D234")]
		public static Material NewMaterial(bool gpuInstanced)
		{
			return null;
		}

		[Token(Token = "0x6001238")]
		[Address(RVA = "0x88E8DC", Offset = "0x88E8DC", VA = "0x88E8DC")]
		public static Material GetInstancedMaterial(uint groupID, StaticProperties staticProps)
		{
			return null;
		}
	}
	[Token(Token = "0x200027F")]
	public static class MeshGenerator
	{
		[Token(Token = "0x4000EFA")]
		private const float kMinTruncatedRadius = 0.001f;

		[Token(Token = "0x600123A")]
		[Address(RVA = "0xCBE190", Offset = "0xCBE190", VA = "0xCBE190")]
		private static float GetAngleOffset(int numSides)
		{
			return default(float);
		}

		[Token(Token = "0x600123B")]
		[Address(RVA = "0xCBE1A8", Offset = "0xCBE1A8", VA = "0xCBE1A8")]
		public static Mesh GenerateConeZ_RadiusAndAngle(float lengthZ, float radiusStart, float coneAngle, int numSides, int numSegments, bool cap, bool doubleSided)
		{
			return null;
		}

		[Token(Token = "0x600123C")]
		[Address(RVA = "0xCBF014", Offset = "0xCBF014", VA = "0xCBF014")]
		public static Mesh GenerateConeZ_Angle(float lengthZ, float coneAngle, int numSides, int numSegments, bool cap, bool doubleSided)
		{
			return null;
		}

		[Token(Token = "0x600123D")]
		[Address(RVA = "0xCBE274", Offset = "0xCBE274", VA = "0xCBE274")]
		public static Mesh GenerateConeZ_Radius(float lengthZ, float radiusStart, float radiusEnd, int numSides, int numSegments, bool cap, bool doubleSided)
		{
			return null;
		}

		[Token(Token = "0x600123E")]
		[Address(RVA = "0xCBF028", Offset = "0xCBF028", VA = "0xCBF028")]
		public static int GetVertexCount(int numSides, int numSegments, bool geomCap, bool doubleSided)
		{
			return default(int);
		}

		[Token(Token = "0x600123F")]
		[Address(RVA = "0xCBF044", Offset = "0xCBF044", VA = "0xCBF044")]
		public static int GetIndicesCount(int numSides, int numSegments, bool geomCap, bool doubleSided)
		{
			return default(int);
		}

		[Token(Token = "0x6001240")]
		[Address(RVA = "0xCBF06C", Offset = "0xCBF06C", VA = "0xCBF06C")]
		public static int GetSharedMeshVertexCount()
		{
			return default(int);
		}

		[Token(Token = "0x6001241")]
		[Address(RVA = "0xCBF134", Offset = "0xCBF134", VA = "0xCBF134")]
		public static int GetSharedMeshIndicesCount()
		{
			return default(int);
		}
	}
	[Token(Token = "0x2000280")]
	public static class Noise3D
	{
		[Token(Token = "0x4000EFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool ms_IsSupportedChecked;

		[Token(Token = "0x4000EFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		private static bool ms_IsSupported;

		[Token(Token = "0x4000EFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Texture3D ms_NoiseTexture;

		[Token(Token = "0x4000EFE")]
		private const HideFlags kHideFlags = HideFlags.HideAndDontSave;

		[Token(Token = "0x4000EFF")]
		private const int kMinShaderLevel = 35;

		[Token(Token = "0x1700016E")]
		public static bool isSupported
		{
			[Token(Token = "0x6001242")]
			[Address(RVA = "0xCBF200", Offset = "0xCBF200", VA = "0xCBF200")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700016F")]
		public static bool isProperlyLoaded
		{
			[Token(Token = "0x6001243")]
			[Address(RVA = "0xCBF3F0", Offset = "0xCBF3F0", VA = "0xCBF3F0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000170")]
		public static string isNotSupportedString
		{
			[Token(Token = "0x6001244")]
			[Address(RVA = "0xCBF350", Offset = "0xCBF350", VA = "0xCBF350")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001245")]
		[Address(RVA = "0xCBF488", Offset = "0xCBF488", VA = "0xCBF488")]
		[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0x66A9AC", Offset = "0x66A9AC")]
		private static void OnStartUp()
		{
		}

		[Token(Token = "0x6001246")]
		[Address(RVA = "0xCBF4E4", Offset = "0xCBF4E4", VA = "0xCBF4E4")]
		public static void LoadIfNeeded()
		{
		}

		[Token(Token = "0x6001247")]
		[Address(RVA = "0xCBF734", Offset = "0xCBF734", VA = "0xCBF734")]
		private static Texture3D LoadTexture3D(TextAsset textData, int size)
		{
			return null;
		}
	}
	[Token(Token = "0x2000281")]
	[DisallowMultipleComponent]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x63EA10", Offset = "0x63EA10")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x63EA10", Offset = "0x63EA10")]
	public class TriggerZone : MonoBehaviour
	{
		[Token(Token = "0x4000F00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool setIsTrigger;

		[Token(Token = "0x4000F01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float rangeMultiplier;

		[Token(Token = "0x4000F02")]
		private const int kMeshColliderNumSides = 8;

		[Token(Token = "0x4000F03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Mesh m_Mesh;

		[Token(Token = "0x6001249")]
		[Address(RVA = "0xCBFA90", Offset = "0xCBFA90", VA = "0xCBFA90")]
		private void Update()
		{
		}

		[Token(Token = "0x600124A")]
		[Address(RVA = "0xCBFDD8", Offset = "0xCBFDD8", VA = "0xCBFDD8")]
		public TriggerZone()
		{
		}
	}
	[Token(Token = "0x2000282")]
	public static class Utils
	{
		[Token(Token = "0x2000685")]
		public enum FloatPackingPrecision
		{
			[Token(Token = "0x40028DE")]
			High = 64,
			[Token(Token = "0x40028DF")]
			Low = 8,
			[Token(Token = "0x40028E0")]
			Undef = 0
		}

		[Token(Token = "0x4000F04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static FloatPackingPrecision ms_FloatPackingPrecision;

		[Token(Token = "0x4000F05")]
		private const int kFloatPackingHighMinShaderLevel = 35;

		[Token(Token = "0x600124B")]
		[Address(RVA = "0xCBFDF0", Offset = "0xCBFDF0", VA = "0xCBFDF0")]
		public static string GetPath(Transform current)
		{
			return null;
		}

		[Token(Token = "0x600124C")]
		public static T NewWithComponent<T>(string name) where T : Component
		{
			return null;
		}

		[Token(Token = "0x600124D")]
		public static T GetOrAddComponent<T>(this GameObject self) where T : Component
		{
			return null;
		}

		[Token(Token = "0x600124E")]
		public static T GetOrAddComponent<T>(this MonoBehaviour self) where T : Component
		{
			return null;
		}

		[Token(Token = "0x600124F")]
		[Address(RVA = "0xCBFF38", Offset = "0xCBFF38", VA = "0xCBFF38")]
		public static bool HasFlag(this Enum mask, Enum flags)
		{
			return default(bool);
		}

		[Token(Token = "0x6001250")]
		[Address(RVA = "0xCBFFC8", Offset = "0xCBFFC8", VA = "0xCBFFC8")]
		public static Vector2 xy(this Vector3 aVector)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001251")]
		[Address(RVA = "0xCBFFF4", Offset = "0xCBFFF4", VA = "0xCBFFF4")]
		public static Vector2 xz(this Vector3 aVector)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001252")]
		[Address(RVA = "0xCC0024", Offset = "0xCC0024", VA = "0xCC0024")]
		public static Vector2 yz(this Vector3 aVector)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001253")]
		[Address(RVA = "0xCC0058", Offset = "0xCC0058", VA = "0xCC0058")]
		public static Vector2 yx(this Vector3 aVector)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001254")]
		[Address(RVA = "0xCC0090", Offset = "0xCC0090", VA = "0xCC0090")]
		public static Vector2 zx(this Vector3 aVector)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001255")]
		[Address(RVA = "0xCC00C4", Offset = "0xCC00C4", VA = "0xCC00C4")]
		public static Vector2 zy(this Vector3 aVector)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001256")]
		[Address(RVA = "0xCC00F4", Offset = "0xCC00F4", VA = "0xCC00F4")]
		public static float GetVolumeCubic(this Bounds self)
		{
			return default(float);
		}

		[Token(Token = "0x6001257")]
		[Address(RVA = "0xCC0148", Offset = "0xCC0148", VA = "0xCC0148")]
		public static float GetMaxArea2D(this Bounds self)
		{
			return default(float);
		}

		[Token(Token = "0x6001258")]
		[Address(RVA = "0xCC0234", Offset = "0xCC0234", VA = "0xCC0234")]
		public static Color Opaque(this Color self)
		{
			return default(Color);
		}

		[Token(Token = "0x6001259")]
		[Address(RVA = "0xCC0268", Offset = "0xCC0268", VA = "0xCC0268")]
		public static void GizmosDrawPlane(Vector3 normal, Vector3 position, Color color, float size = 1f)
		{
		}

		[Token(Token = "0x600125A")]
		[Address(RVA = "0xCC0670", Offset = "0xCC0670", VA = "0xCC0670")]
		public static Plane TranslateCustom(this Plane plane, Vector3 translation)
		{
			return default(Plane);
		}

		[Token(Token = "0x600125B")]
		[Address(RVA = "0xCC0790", Offset = "0xCC0790", VA = "0xCC0790")]
		public static bool IsValid(this Plane plane)
		{
			return default(bool);
		}

		[Token(Token = "0x600125C")]
		[Address(RVA = "0xCC07DC", Offset = "0xCC07DC", VA = "0xCC07DC")]
		public static void SetKeywordEnabled(this Material mat, string name, bool enabled)
		{
		}

		[Token(Token = "0x600125D")]
		[Address(RVA = "0xCC0840", Offset = "0xCC0840", VA = "0xCC0840")]
		public static void SetShaderKeywordEnabled(string name, bool enabled)
		{
		}

		[Token(Token = "0x600125E")]
		[Address(RVA = "0xCC0854", Offset = "0xCC0854", VA = "0xCC0854")]
		public static Matrix4x4 SampleInMatrix(this Gradient self, int floatPackingPrecision)
		{
			return default(Matrix4x4);
		}

		[Token(Token = "0x600125F")]
		[Address(RVA = "0xCC0AA0", Offset = "0xCC0AA0", VA = "0xCC0AA0")]
		public static Color[] SampleInArray(this Gradient self, int samplesCount)
		{
			return null;
		}

		[Token(Token = "0x6001260")]
		[Address(RVA = "0xCC0BE0", Offset = "0xCC0BE0", VA = "0xCC0BE0")]
		private static Vector4 Vector4_Floor(Vector4 vec)
		{
			return default(Vector4);
		}

		[Token(Token = "0x6001261")]
		[Address(RVA = "0xCC09A4", Offset = "0xCC09A4", VA = "0xCC09A4")]
		public static float PackToFloat(this Color color, int floatPackingPrecision)
		{
			return default(float);
		}

		[Token(Token = "0x6001262")]
		[Address(RVA = "0xCC0C8C", Offset = "0xCC0C8C", VA = "0xCC0C8C")]
		public static FloatPackingPrecision GetFloatPackingPrecision()
		{
			return default(FloatPackingPrecision);
		}

		[Token(Token = "0x6001263")]
		[Address(RVA = "0xCC0D5C", Offset = "0xCC0D5C", VA = "0xCC0D5C")]
		public static void MarkCurrentSceneDirty()
		{
		}

		[Token(Token = "0x6001264")]
		[Address(RVA = "0xCC0D60", Offset = "0xCC0D60", VA = "0xCC0D60")]
		public static void MarkObjectDirty(UnityEngine.Object obj)
		{
		}
	}
	[Token(Token = "0x2000283")]
	public static class Version
	{
		[Token(Token = "0x4000F06")]
		public const int Current = 1610;
	}
	[Token(Token = "0x2000284")]
	[ExecuteInEditMode]
	[DisallowMultipleComponent]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x63EAB8", Offset = "0x63EAB8")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x63EAB8", Offset = "0x63EAB8")]
	public class VolumetricDustParticles : MonoBehaviour
	{
		[Token(Token = "0x2000686")]
		public enum Direction
		{
			[Token(Token = "0x40028E2")]
			Beam,
			[Token(Token = "0x40028E3")]
			Random
		}

		[Token(Token = "0x4000F07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6509F4", Offset = "0x6509F4")]
		public float alpha;

		[Token(Token = "0x4000F08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x650A0C", Offset = "0x650A0C")]
		public float size;

		[Token(Token = "0x4000F09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Direction direction;

		[Token(Token = "0x4000F0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float speed;

		[Token(Token = "0x4000F0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float density;

		[Token(Token = "0x4000F0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x650A2C", Offset = "0x650A2C")]
		public float spawnMaxDistance;

		[Token(Token = "0x4000F0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool cullingEnabled;

		[Token(Token = "0x4000F0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float cullingMaxDistance;

		[Token(Token = "0x4000F0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x650A44", Offset = "0x650A44")]
		private bool <isCulled>k__BackingField;

		[Token(Token = "0x4000F10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static bool isFeatureSupported;

		[Token(Token = "0x4000F11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private ParticleSystem m_Particles;

		[Token(Token = "0x4000F12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private ParticleSystemRenderer m_Renderer;

		[Token(Token = "0x4000F13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		private static bool ms_NoMainCameraLogged;

		[Token(Token = "0x4000F14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Camera ms_MainCamera;

		[Token(Token = "0x4000F15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private VolumetricLightBeam m_Master;

		[Token(Token = "0x17000171")]
		public bool isCulled
		{
			[Token(Token = "0x6001266")]
			[Address(RVA = "0xCC0D68", Offset = "0xCC0D68", VA = "0xCC0D68")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66AADC", Offset = "0x66AADC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001267")]
			[Address(RVA = "0xCC0D70", Offset = "0xCC0D70", VA = "0xCC0D70")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66AAEC", Offset = "0x66AAEC")]
			private set
			{
			}
		}

		[Token(Token = "0x17000172")]
		public bool particlesAreInstantiated
		{
			[Token(Token = "0x6001268")]
			[Address(RVA = "0xCC0D7C", Offset = "0xCC0D7C", VA = "0xCC0D7C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000173")]
		public int particlesCurrentCount
		{
			[Token(Token = "0x6001269")]
			[Address(RVA = "0xCC0DE8", Offset = "0xCC0DE8", VA = "0xCC0DE8")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000174")]
		public int particlesMaxCount
		{
			[Token(Token = "0x600126A")]
			[Address(RVA = "0xCC0E84", Offset = "0xCC0E84", VA = "0xCC0E84")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000175")]
		public Camera mainCamera
		{
			[Token(Token = "0x600126B")]
			[Address(RVA = "0xCC0F38", Offset = "0xCC0F38", VA = "0xCC0F38")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600126C")]
		[Address(RVA = "0xCC11C8", Offset = "0xCC11C8", VA = "0xCC11C8")]
		private void Start()
		{
		}

		[Token(Token = "0x600126D")]
		[Address(RVA = "0xCC1230", Offset = "0xCC1230", VA = "0xCC1230")]
		private void InstantiateParticleSystem()
		{
		}

		[Token(Token = "0x600126E")]
		[Address(RVA = "0xCC1508", Offset = "0xCC1508", VA = "0xCC1508")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600126F")]
		[Address(RVA = "0xCC142C", Offset = "0xCC142C", VA = "0xCC142C")]
		private void SetActiveAndPlay()
		{
		}

		[Token(Token = "0x6001270")]
		[Address(RVA = "0xCC1BA0", Offset = "0xCC1BA0", VA = "0xCC1BA0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001271")]
		[Address(RVA = "0xCC1C54", Offset = "0xCC1C54", VA = "0xCC1C54")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001272")]
		[Address(RVA = "0xCC1D1C", Offset = "0xCC1D1C", VA = "0xCC1D1C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001273")]
		[Address(RVA = "0xCC150C", Offset = "0xCC150C", VA = "0xCC150C")]
		private void SetParticleProperties()
		{
		}

		[Token(Token = "0x6001274")]
		[Address(RVA = "0xCC1D50", Offset = "0xCC1D50", VA = "0xCC1D50")]
		private void UpdateCulling()
		{
		}

		[Token(Token = "0x6001275")]
		[Address(RVA = "0xCC21EC", Offset = "0xCC21EC", VA = "0xCC21EC")]
		public VolumetricDustParticles()
		{
		}
	}
	[Token(Token = "0x2000285")]
	[ExecuteInEditMode]
	[DisallowMultipleComponent]
	[SelectionBase]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x63EB60", Offset = "0x63EB60")]
	public class VolumetricLightBeam : MonoBehaviour
	{
		[Token(Token = "0x2000687")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x644450", Offset = "0x644450")]
		private sealed class <CoPlaytimeUpdate>d__113 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40028E4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40028E5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40028E6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VolumetricLightBeam <>4__this;

			[Token(Token = "0x170002F1")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002D35")]
				[Address(RVA = "0xCC3D14", Offset = "0xCC3D14", VA = "0xCC3D14", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002F2")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002D37")]
				[Address(RVA = "0xCC3D84", Offset = "0xCC3D84", VA = "0xCC3D84", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002D32")]
			[Address(RVA = "0xCC3748", Offset = "0xCC3748", VA = "0xCC3748")]
			[DebuggerHidden]
			public <CoPlaytimeUpdate>d__113(int <>1__state)
			{
			}

			[Token(Token = "0x6002D33")]
			[Address(RVA = "0xCC3C88", Offset = "0xCC3C88", VA = "0xCC3C88", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002D34")]
			[Address(RVA = "0xCC3C8C", Offset = "0xCC3C8C", VA = "0xCC3C8C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002D36")]
			[Address(RVA = "0xCC3D1C", Offset = "0xCC3D1C", VA = "0xCC3D1C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000F16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool showOnPS4BaseModel;

		[Token(Token = "0x4000F17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool colorFromLight;

		[Token(Token = "0x4000F18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public ColorMode colorMode;

		[Token(Token = "0x4000F19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "ColorUsageAttribute", RVA = "0x650A54", Offset = "0x650A54")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x650A54", Offset = "0x650A54")]
		public Color color;

		[Token(Token = "0x4000F1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Gradient colorGradient;

		[Token(Token = "0x4000F1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool intensityFromLight;

		[Token(Token = "0x4000F1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		public bool intensityModeAdvanced;

		[Token(Token = "0x4000F1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x650AA8", Offset = "0x650AA8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x650AA8", Offset = "0x650AA8")]
		public float intensityInside;

		[Token(Token = "0x4000F1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x650AFC", Offset = "0x650AFC")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x650AFC", Offset = "0x650AFC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x650AFC", Offset = "0x650AFC")]
		public float intensityOutside;

		[Token(Token = "0x4000F1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public BlendingMode blendingMode;

		[Token(Token = "0x4000F20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x650B74", Offset = "0x650B74")]
		public bool spotAngleFromLight;

		[Token(Token = "0x4000F21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x650BAC", Offset = "0x650BAC")]
		public float spotAngle;

		[Token(Token = "0x4000F22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x650BCC", Offset = "0x650BCC")]
		public float coneRadiusStart;

		[Token(Token = "0x4000F23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public MeshType geomMeshType;

		[Token(Token = "0x4000F24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x650C04", Offset = "0x650C04")]
		public int geomCustomSides;

		[Token(Token = "0x4000F25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public int geomCustomSegments;

		[Token(Token = "0x4000F26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public bool geomCap;

		[Token(Token = "0x4000F27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		public bool fadeEndFromLight;

		[Token(Token = "0x4000F28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public AttenuationEquation attenuationEquation;

		[Token(Token = "0x4000F29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x650C3C", Offset = "0x650C3C")]
		public float attenuationCustomBlending;

		[Token(Token = "0x4000F2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public float fadeStart;

		[Token(Token = "0x4000F2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public float fadeEnd;

		[Token(Token = "0x4000F2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public float depthBlendDistance;

		[Token(Token = "0x4000F2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public float cameraClippingDistance;

		[Token(Token = "0x4000F2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x650C54", Offset = "0x650C54")]
		public float glareFrontal;

		[Token(Token = "0x4000F2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x650C6C", Offset = "0x650C6C")]
		public float glareBehind;

		[Token(Token = "0x4000F30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x650C84", Offset = "0x650C84")]
		public float boostDistanceInside;

		[Token(Token = "0x4000F31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x650CBC", Offset = "0x650CBC")]
		public float fresnelPowInside;

		[Token(Token = "0x4000F32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x650CF4", Offset = "0x650CF4")]
		public float fresnelPow;

		[Token(Token = "0x4000F33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public bool noiseEnabled;

		[Token(Token = "0x4000F34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x650D2C", Offset = "0x650D2C")]
		public float noiseIntensity;

		[Token(Token = "0x4000F35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public bool noiseScaleUseGlobal;

		[Token(Token = "0x4000F36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x650D44", Offset = "0x650D44")]
		public float noiseScaleLocal;

		[Token(Token = "0x4000F37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public bool noiseVelocityUseGlobal;

		[Token(Token = "0x4000F38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		public Vector3 noiseVelocityLocal;

		[Token(Token = "0x4000F39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Plane m_PlaneWS;

		[Token(Token = "0x4000F3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private int pluginVersion;

		[Token(Token = "0x4000F3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x650D70", Offset = "0x650D70")]
		[SerializeField]
		private bool _TrackChangesDuringPlaytime;

		[Token(Token = "0x4000F3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private int _SortingLayerID;

		[Token(Token = "0x4000F3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		[SerializeField]
		private int _SortingOrder;

		[Token(Token = "0x4000F3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x650DDC", Offset = "0x650DDC")]
		private uint <_INTERNAL_InstancedMaterialGroupID>k__BackingField;

		[Token(Token = "0x4000F3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private BeamGeometry m_BeamGeom;

		[Token(Token = "0x4000F40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private Coroutine m_CoPlaytimeUpdate;

		[Token(Token = "0x4000F41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private Light _CachedLight;

		[Token(Token = "0x17000176")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x6736E4", Offset = "0x6736E4")]
		public float alphaInside
		{
			[Token(Token = "0x6001277")]
			[Address(RVA = "0xCC229C", Offset = "0xCC229C", VA = "0xCC229C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001278")]
			[Address(RVA = "0xCC22A4", Offset = "0xCC22A4", VA = "0xCC22A4")]
			set
			{
			}
		}

		[Token(Token = "0x17000177")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x67371C", Offset = "0x67371C")]
		public float alphaOutside
		{
			[Token(Token = "0x6001279")]
			[Address(RVA = "0xCC22AC", Offset = "0xCC22AC", VA = "0xCC22AC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600127A")]
			[Address(RVA = "0xCC22B4", Offset = "0xCC22B4", VA = "0xCC22B4")]
			set
			{
			}
		}

		[Token(Token = "0x17000178")]
		public float intensityGlobal
		{
			[Token(Token = "0x600127B")]
			[Address(RVA = "0xCC22BC", Offset = "0xCC22BC", VA = "0xCC22BC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600127C")]
			[Address(RVA = "0xCC22C4", Offset = "0xCC22C4", VA = "0xCC22C4")]
			set
			{
			}
		}

		[Token(Token = "0x17000179")]
		public float coneAngle
		{
			[Token(Token = "0x600127D")]
			[Address(RVA = "0xCC1F88", Offset = "0xCC1F88", VA = "0xCC1F88")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700017A")]
		public float coneRadiusEnd
		{
			[Token(Token = "0x600127E")]
			[Address(RVA = "0xCBFD4C", Offset = "0xCBFD4C", VA = "0xCBFD4C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700017B")]
		public float coneVolume
		{
			[Token(Token = "0x600127F")]
			[Address(RVA = "0xCC22CC", Offset = "0xCC22CC", VA = "0xCC22CC")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700017C")]
		public float coneApexOffsetZ
		{
			[Token(Token = "0x6001280")]
			[Address(RVA = "0xCC2320", Offset = "0xCC2320", VA = "0xCC2320")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700017D")]
		public int geomSides
		{
			[Token(Token = "0x6001281")]
			[Address(RVA = "0xCC2378", Offset = "0xCC2378", VA = "0xCC2378")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001282")]
			[Address(RVA = "0xCC2408", Offset = "0xCC2408", VA = "0xCC2408")]
			set
			{
			}
		}

		[Token(Token = "0x1700017E")]
		public int geomSegments
		{
			[Token(Token = "0x6001283")]
			[Address(RVA = "0xCC2488", Offset = "0xCC2488", VA = "0xCC2488")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001284")]
			[Address(RVA = "0xCC2518", Offset = "0xCC2518", VA = "0xCC2518")]
			set
			{
			}
		}

		[Token(Token = "0x1700017F")]
		public float attenuationLerpLinearQuad
		{
			[Token(Token = "0x6001285")]
			[Address(RVA = "0xCC2598", Offset = "0xCC2598", VA = "0xCC2598")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000180")]
		public int sortingLayerID
		{
			[Token(Token = "0x6001286")]
			[Address(RVA = "0xCC2028", Offset = "0xCC2028", VA = "0xCC2028")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001287")]
			[Address(RVA = "0xCC25C0", Offset = "0xCC25C0", VA = "0xCC25C0")]
			set
			{
			}
		}

		[Token(Token = "0x17000181")]
		public string sortingLayerName
		{
			[Token(Token = "0x6001288")]
			[Address(RVA = "0xCC2670", Offset = "0xCC2670", VA = "0xCC2670")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001289")]
			[Address(RVA = "0xCC267C", Offset = "0xCC267C", VA = "0xCC267C")]
			set
			{
			}
		}

		[Token(Token = "0x17000182")]
		public int sortingOrder
		{
			[Token(Token = "0x600128A")]
			[Address(RVA = "0xCC2030", Offset = "0xCC2030", VA = "0xCC2030")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600128B")]
			[Address(RVA = "0xCC26AC", Offset = "0xCC26AC", VA = "0xCC26AC")]
			set
			{
			}
		}

		[Token(Token = "0x17000183")]
		public bool trackChangesDuringPlaytime
		{
			[Token(Token = "0x600128C")]
			[Address(RVA = "0xCC275C", Offset = "0xCC275C", VA = "0xCC275C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600128D")]
			[Address(RVA = "0xCC2764", Offset = "0xCC2764", VA = "0xCC2764")]
			set
			{
			}
		}

		[Token(Token = "0x17000184")]
		public bool isCurrentlyTrackingChanges
		{
			[Token(Token = "0x600128E")]
			[Address(RVA = "0xCC27C4", Offset = "0xCC27C4", VA = "0xCC27C4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000185")]
		public bool hasGeometry
		{
			[Token(Token = "0x600128F")]
			[Address(RVA = "0xCC2038", Offset = "0xCC2038", VA = "0xCC2038")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000186")]
		public Bounds bounds
		{
			[Token(Token = "0x6001290")]
			[Address(RVA = "0xCC20A8", Offset = "0xCC20A8", VA = "0xCC20A8")]
			get
			{
				return default(Bounds);
			}
		}

		[Token(Token = "0x17000187")]
		public int blendingModeAsInt
		{
			[Token(Token = "0x6001294")]
			[Address(RVA = "0xCC2A70", Offset = "0xCC2A70", VA = "0xCC2A70")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000188")]
		public uint _INTERNAL_InstancedMaterialGroupID
		{
			[Token(Token = "0x6001295")]
			[Address(RVA = "0xCC2B70", Offset = "0xCC2B70", VA = "0xCC2B70")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66AAFC", Offset = "0x66AAFC")]
			get
			{
				return default(uint);
			}
			[Token(Token = "0x6001296")]
			[Address(RVA = "0xCC2B78", Offset = "0xCC2B78", VA = "0xCC2B78")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66AB0C", Offset = "0x66AB0C")]
			protected set
			{
			}
		}

		[Token(Token = "0x17000189")]
		public string meshStats
		{
			[Token(Token = "0x6001297")]
			[Address(RVA = "0xCC2B80", Offset = "0xCC2B80", VA = "0xCC2B80")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700018A")]
		public int meshVerticesCount
		{
			[Token(Token = "0x6001298")]
			[Address(RVA = "0xCC2D30", Offset = "0xCC2D30", VA = "0xCC2D30")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700018B")]
		public int meshTrianglesCount
		{
			[Token(Token = "0x6001299")]
			[Address(RVA = "0xCC2E3C", Offset = "0xCC2E3C", VA = "0xCC2E3C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700018C")]
		private Light lightSpotAttached
		{
			[Token(Token = "0x600129A")]
			[Address(RVA = "0xCC2F68", Offset = "0xCC2F68", VA = "0xCC2F68")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001291")]
		[Address(RVA = "0xCC27D4", Offset = "0xCC27D4", VA = "0xCC27D4")]
		public void SetClippingPlane(Plane planeWS)
		{
		}

		[Token(Token = "0x6001292")]
		[Address(RVA = "0xCC289C", Offset = "0xCC289C", VA = "0xCC289C")]
		public void SetClippingPlaneOff()
		{
		}

		[Token(Token = "0x6001293")]
		[Address(RVA = "0xCC2930", Offset = "0xCC2930", VA = "0xCC2930")]
		public bool IsColliderHiddenByDynamicOccluder(Collider collider)
		{
			return default(bool);
		}

		[Token(Token = "0x600129B")]
		[Address(RVA = "0xCC3068", Offset = "0xCC3068", VA = "0xCC3068")]
		public float GetInsideBeamFactor(Vector3 posWS)
		{
			return default(float);
		}

		[Token(Token = "0x600129C")]
		[Address(RVA = "0xCC30D0", Offset = "0xCC30D0", VA = "0xCC30D0")]
		public float GetInsideBeamFactorFromObjectSpacePos(Vector3 posOS)
		{
			return default(float);
		}

		[Token(Token = "0x600129D")]
		[Address(RVA = "0xCC326C", Offset = "0xCC326C", VA = "0xCC326C")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x66AB1C", Offset = "0x66AB1C")]
		public void Generate()
		{
		}

		[Token(Token = "0x600129E")]
		[Address(RVA = "0xCC3278", Offset = "0xCC3278", VA = "0xCC3278", Slot = "4")]
		public virtual void GenerateGeometry()
		{
		}

		[Token(Token = "0x600129F")]
		[Address(RVA = "0xCC34F4", Offset = "0xCC34F4", VA = "0xCC34F4", Slot = "5")]
		public virtual void UpdateAfterManualPropertyChange()
		{
		}

		[Token(Token = "0x60012A0")]
		[Address(RVA = "0xCC3594", Offset = "0xCC3594", VA = "0xCC3594")]
		private void DisableIfNeeded()
		{
		}

		[Token(Token = "0x60012A1")]
		[Address(RVA = "0xCC3598", Offset = "0xCC3598", VA = "0xCC3598")]
		private void Start()
		{
		}

		[Token(Token = "0x60012A2")]
		[Address(RVA = "0xCC35A4", Offset = "0xCC35A4", VA = "0xCC35A4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60012A3")]
		[Address(RVA = "0xCC363C", Offset = "0xCC363C", VA = "0xCC363C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60012A4")]
		[Address(RVA = "0xCC2770", Offset = "0xCC2770", VA = "0xCC2770")]
		private void StartPlaytimeUpdateIfNeeded()
		{
		}

		[Token(Token = "0x60012A5")]
		[Address(RVA = "0xCC36D4", Offset = "0xCC36D4", VA = "0xCC36D4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x66AB54", Offset = "0x66AB54")]
		private IEnumerator CoPlaytimeUpdate()
		{
			return null;
		}

		[Token(Token = "0x60012A6")]
		[Address(RVA = "0xCC3774", Offset = "0xCC3774", VA = "0xCC3774")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60012A7")]
		[Address(RVA = "0xCC3778", Offset = "0xCC3778", VA = "0xCC3778")]
		private void DestroyBeam()
		{
		}

		[Token(Token = "0x60012A8")]
		[Address(RVA = "0xCC3840", Offset = "0xCC3840", VA = "0xCC3840")]
		private void AssignPropertiesFromSpotLight(Light lightSpot)
		{
		}

		[Token(Token = "0x60012A9")]
		[Address(RVA = "0xCC3974", Offset = "0xCC3974", VA = "0xCC3974")]
		private void ClampProperties()
		{
		}

		[Token(Token = "0x60012AA")]
		[Address(RVA = "0xCC34C4", Offset = "0xCC34C4", VA = "0xCC34C4")]
		private void ValidateProperties()
		{
		}

		[Token(Token = "0x60012AB")]
		[Address(RVA = "0xCC33B4", Offset = "0xCC33B4", VA = "0xCC33B4")]
		private void HandleBackwardCompatibility(int serializedVersion, int newVersion)
		{
		}

		[Token(Token = "0x60012AC")]
		[Address(RVA = "0xCC3B60", Offset = "0xCC3B60", VA = "0xCC3B60")]
		public VolumetricLightBeam()
		{
		}
	}
}
namespace VLB_Samples
{
	[Token(Token = "0x2000286")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x63EBCC", Offset = "0x63EBCC")]
	public class CameraToggleBeamVisibility : MonoBehaviour
	{
		[Token(Token = "0x4000F42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private KeyCode m_KeyCode;

		[Token(Token = "0x60012AD")]
		[Address(RVA = "0xCC3D8C", Offset = "0xCC3D8C", VA = "0xCC3D8C")]
		private void Update()
		{
		}

		[Token(Token = "0x60012AE")]
		[Address(RVA = "0xCC3ECC", Offset = "0xCC3ECC", VA = "0xCC3ECC")]
		public CameraToggleBeamVisibility()
		{
		}
	}
	[Token(Token = "0x2000287")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x63EC30", Offset = "0x63EC30")]
	public class CheckIfInsideBeam : MonoBehaviour
	{
		[Token(Token = "0x4000F43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool isInsideBeam;

		[Token(Token = "0x4000F44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Material m_Material;

		[Token(Token = "0x4000F45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Collider m_Collider;

		[Token(Token = "0x60012AF")]
		[Address(RVA = "0xCC3EDC", Offset = "0xCC3EDC", VA = "0xCC3EDC")]
		private void Start()
		{
		}

		[Token(Token = "0x60012B0")]
		[Address(RVA = "0xCC3F9C", Offset = "0xCC3F9C", VA = "0xCC3F9C")]
		private void Update()
		{
		}

		[Token(Token = "0x60012B1")]
		[Address(RVA = "0xCC4094", Offset = "0xCC4094", VA = "0xCC4094")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x60012B2")]
		[Address(RVA = "0xCC409C", Offset = "0xCC409C", VA = "0xCC409C")]
		private void OnTriggerStay(Collider trigger)
		{
		}

		[Token(Token = "0x60012B3")]
		[Address(RVA = "0xCC4168", Offset = "0xCC4168", VA = "0xCC4168")]
		public CheckIfInsideBeam()
		{
		}
	}
	[Token(Token = "0x2000288")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x63ECD4", Offset = "0x63ECD4")]
	public class FeaturesNotSupportedMessage : MonoBehaviour
	{
		[Token(Token = "0x60012B4")]
		[Address(RVA = "0xCC4170", Offset = "0xCC4170", VA = "0xCC4170")]
		private void Start()
		{
		}

		[Token(Token = "0x60012B5")]
		[Address(RVA = "0xCC4248", Offset = "0xCC4248", VA = "0xCC4248")]
		public FeaturesNotSupportedMessage()
		{
		}
	}
	[Token(Token = "0x2000289")]
	public class FreeCameraController : MonoBehaviour
	{
		[Token(Token = "0x4000F46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float cameraSensitivity;

		[Token(Token = "0x4000F47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float speedNormal;

		[Token(Token = "0x4000F48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float speedFactorSlow;

		[Token(Token = "0x4000F49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float speedFactorFast;

		[Token(Token = "0x4000F4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float speedClimb;

		[Token(Token = "0x4000F4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float rotationH;

		[Token(Token = "0x4000F4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float rotationV;

		[Token(Token = "0x4000F4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private bool m_UseMouseView;

		[Token(Token = "0x1700018D")]
		private bool useMouseView
		{
			[Token(Token = "0x60012B6")]
			[Address(RVA = "0xCC4250", Offset = "0xCC4250", VA = "0xCC4250")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60012B7")]
			[Address(RVA = "0xCC4258", Offset = "0xCC4258", VA = "0xCC4258")]
			set
			{
			}
		}

		[Token(Token = "0x60012B8")]
		[Address(RVA = "0xCC4294", Offset = "0xCC4294", VA = "0xCC4294")]
		private void Start()
		{
		}

		[Token(Token = "0x60012B9")]
		[Address(RVA = "0xCC4334", Offset = "0xCC4334", VA = "0xCC4334")]
		private void Update()
		{
		}

		[Token(Token = "0x60012BA")]
		[Address(RVA = "0xCC4B00", Offset = "0xCC4B00", VA = "0xCC4B00")]
		public FreeCameraController()
		{
		}
	}
	[Token(Token = "0x200028A")]
	public class LightGenerator : MonoBehaviour
	{
		[Token(Token = "0x4000F4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x650DFC", Offset = "0x650DFC")]
		[SerializeField]
		private int CountX;

		[Token(Token = "0x4000F4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x650E40", Offset = "0x650E40")]
		[SerializeField]
		private int CountY;

		[Token(Token = "0x4000F50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float OffsetUnits;

		[Token(Token = "0x4000F51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private float PositionY;

		[Token(Token = "0x4000F52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private bool NoiseEnabled;

		[Token(Token = "0x4000F53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		[SerializeField]
		private bool AddLight;

		[Token(Token = "0x60012BB")]
		[Address(RVA = "0xCC4B24", Offset = "0xCC4B24", VA = "0xCC4B24")]
		public void Generate()
		{
		}

		[Token(Token = "0x60012BC")]
		[Address(RVA = "0xCC56C8", Offset = "0xCC56C8", VA = "0xCC56C8")]
		public LightGenerator()
		{
		}
	}
	[Token(Token = "0x200028B")]
	public class Rotater : MonoBehaviour
	{
		[Token(Token = "0x4000F54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x650EC4", Offset = "0x650EC4")]
		public Vector3 EulerSpeed;

		[Token(Token = "0x60012BD")]
		[Address(RVA = "0xCC56E8", Offset = "0xCC56E8", VA = "0xCC56E8")]
		private void Update()
		{
		}

		[Token(Token = "0x60012BE")]
		[Address(RVA = "0xCC5890", Offset = "0xCC5890", VA = "0xCC5890")]
		public Rotater()
		{
		}
	}
}
namespace Valve.VR
{
	[Token(Token = "0x200028C")]
	public struct IVRSystem
	{
		[Token(Token = "0x2000688")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x644460", Offset = "0x644460")]
		internal delegate void _GetRecommendedRenderTargetSize(ref uint pnWidth, ref uint pnHeight);

		[Token(Token = "0x2000689")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x644474", Offset = "0x644474")]
		internal delegate HmdMatrix44_t _GetProjectionMatrix(EVREye eEye, float fNearZ, float fFarZ);

		[Token(Token = "0x200068A")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x644488", Offset = "0x644488")]
		internal delegate void _GetProjectionRaw(EVREye eEye, ref float pfLeft, ref float pfRight, ref float pfTop, ref float pfBottom);

		[Token(Token = "0x200068B")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64449C", Offset = "0x64449C")]
		internal delegate bool _ComputeDistortion(EVREye eEye, float fU, float fV, ref DistortionCoordinates_t pDistortionCoordinates);

		[Token(Token = "0x200068C")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x6444B0", Offset = "0x6444B0")]
		internal delegate HmdMatrix34_t _GetEyeToHeadTransform(EVREye eEye);

		[Token(Token = "0x200068D")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x6444C4", Offset = "0x6444C4")]
		internal delegate bool _GetTimeSinceLastVsync(ref float pfSecondsSinceLastVsync, ref ulong pulFrameCounter);

		[Token(Token = "0x200068E")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x6444D8", Offset = "0x6444D8")]
		internal delegate int _GetD3D9AdapterIndex();

		[Token(Token = "0x200068F")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x6444EC", Offset = "0x6444EC")]
		internal delegate void _GetDXGIOutputInfo(ref int pnAdapterIndex);

		[Token(Token = "0x2000690")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x644500", Offset = "0x644500")]
		internal delegate void _GetOutputDevice(ref ulong pnDevice, ETextureType textureType, IntPtr pInstance);

		[Token(Token = "0x2000691")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x644514", Offset = "0x644514")]
		internal delegate bool _IsDisplayOnDesktop();

		[Token(Token = "0x2000692")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x644528", Offset = "0x644528")]
		internal delegate bool _SetDisplayVisibility(bool bIsVisibleOnDesktop);

		[Token(Token = "0x2000693")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64453C", Offset = "0x64453C")]
		internal delegate void _GetDeviceToAbsoluteTrackingPose(ETrackingUniverseOrigin eOrigin, float fPredictedSecondsToPhotonsFromNow, [In][Out] TrackedDevicePose_t[] pTrackedDevicePoseArray, uint unTrackedDevicePoseArrayCount);

		[Token(Token = "0x2000694")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x644550", Offset = "0x644550")]
		internal delegate void _ResetSeatedZeroPose();

		[Token(Token = "0x2000695")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x644564", Offset = "0x644564")]
		internal delegate HmdMatrix34_t _GetSeatedZeroPoseToStandingAbsoluteTrackingPose();

		[Token(Token = "0x2000696")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x644578", Offset = "0x644578")]
		internal delegate HmdMatrix34_t _GetRawZeroPoseToStandingAbsoluteTrackingPose();

		[Token(Token = "0x2000697")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64458C", Offset = "0x64458C")]
		internal delegate uint _GetSortedTrackedDeviceIndicesOfClass(ETrackedDeviceClass eTrackedDeviceClass, [In][Out] uint[] punTrackedDeviceIndexArray, uint unTrackedDeviceIndexArrayCount, uint unRelativeToTrackedDeviceIndex);

		[Token(Token = "0x2000698")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x6445A0", Offset = "0x6445A0")]
		internal delegate EDeviceActivityLevel _GetTrackedDeviceActivityLevel(uint unDeviceId);

		[Token(Token = "0x2000699")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x6445B4", Offset = "0x6445B4")]
		internal delegate void _ApplyTransform(ref TrackedDevicePose_t pOutputPose, ref TrackedDevicePose_t pTrackedDevicePose, ref HmdMatrix34_t pTransform);

		[Token(Token = "0x200069A")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x6445C8", Offset = "0x6445C8")]
		internal delegate uint _GetTrackedDeviceIndexForControllerRole(ETrackedControllerRole unDeviceType);

		[Token(Token = "0x200069B")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x6445DC", Offset = "0x6445DC")]
		internal delegate ETrackedControllerRole _GetControllerRoleForTrackedDeviceIndex(uint unDeviceIndex);

		[Token(Token = "0x200069C")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x6445F0", Offset = "0x6445F0")]
		internal delegate ETrackedDeviceClass _GetTrackedDeviceClass(uint unDeviceIndex);

		[Token(Token = "0x200069D")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x644604", Offset = "0x644604")]
		internal delegate bool _IsTrackedDeviceConnected(uint unDeviceIndex);

		[Token(Token = "0x200069E")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x644618", Offset = "0x644618")]
		internal delegate bool _GetBoolTrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, ref ETrackedPropertyError pError);

		[Token(Token = "0x200069F")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64462C", Offset = "0x64462C")]
		internal delegate float _GetFloatTrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, ref ETrackedPropertyError pError);

		[Token(Token = "0x20006A0")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x644640", Offset = "0x644640")]
		internal delegate int _GetInt32TrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, ref ETrackedPropertyError pError);

		[Token(Token = "0x20006A1")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x644654", Offset = "0x644654")]
		internal delegate ulong _GetUint64TrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, ref ETrackedPropertyError pError);

		[Token(Token = "0x20006A2")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x644668", Offset = "0x644668")]
		internal delegate HmdMatrix34_t _GetMatrix34TrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, ref ETrackedPropertyError pError);

		[Token(Token = "0x20006A3")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64467C", Offset = "0x64467C")]
		internal delegate uint _GetArrayTrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, uint propType, IntPtr pBuffer, uint unBufferSize, ref ETrackedPropertyError pError);

		[Token(Token = "0x20006A4")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x644690", Offset = "0x644690")]
		internal delegate uint _GetStringTrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, StringBuilder pchValue, uint unBufferSize, ref ETrackedPropertyError pError);

		[Token(Token = "0x20006A5")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x6446A4", Offset = "0x6446A4")]
		internal delegate IntPtr _GetPropErrorNameFromEnum(ETrackedPropertyError error);

		[Token(Token = "0x20006A6")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x6446B8", Offset = "0x6446B8")]
		internal delegate bool _PollNextEvent(ref VREvent_t pEvent, uint uncbVREvent);

		[Token(Token = "0x20006A7")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x6446CC", Offset = "0x6446CC")]
		internal delegate bool _PollNextEventWithPose(ETrackingUniverseOrigin eOrigin, ref VREvent_t pEvent, uint uncbVREvent, ref TrackedDevicePose_t pTrackedDevicePose);

		[Token(Token = "0x20006A8")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x6446E0", Offset = "0x6446E0")]
		internal delegate IntPtr _GetEventTypeNameFromEnum(EVREventType eType);

		[Token(Token = "0x20006A9")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x6446F4", Offset = "0x6446F4")]
		internal delegate HiddenAreaMesh_t _GetHiddenAreaMesh(EVREye eEye, EHiddenAreaMeshType type);

		[Token(Token = "0x20006AA")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x644708", Offset = "0x644708")]
		internal delegate bool _GetControllerState(uint unControllerDeviceIndex, ref VRControllerState_t pControllerState, uint unControllerStateSize);

		[Token(Token = "0x20006AB")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64471C", Offset = "0x64471C")]
		internal delegate bool _GetControllerStateWithPose(ETrackingUniverseOrigin eOrigin, uint unControllerDeviceIndex, ref VRControllerState_t pControllerState, uint unControllerStateSize, ref TrackedDevicePose_t pTrackedDevicePose);

		[Token(Token = "0x20006AC")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x644730", Offset = "0x644730")]
		internal delegate void _TriggerHapticPulse(uint unControllerDeviceIndex, uint unAxisId, char usDurationMicroSec);

		[Token(Token = "0x20006AD")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x644744", Offset = "0x644744")]
		internal delegate IntPtr _GetButtonIdNameFromEnum(EVRButtonId eButtonId);

		[Token(Token = "0x20006AE")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x644758", Offset = "0x644758")]
		internal delegate IntPtr _GetControllerAxisTypeNameFromEnum(EVRControllerAxisType eAxisType);

		[Token(Token = "0x20006AF")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64476C", Offset = "0x64476C")]
		internal delegate bool _IsInputAvailable();

		[Token(Token = "0x20006B0")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x644780", Offset = "0x644780")]
		internal delegate bool _IsSteamVRDrawingControllers();

		[Token(Token = "0x20006B1")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x644794", Offset = "0x644794")]
		internal delegate bool _ShouldApplicationPause();

		[Token(Token = "0x20006B2")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x6447A8", Offset = "0x6447A8")]
		internal delegate bool _ShouldApplicationReduceRenderingWork();

		[Token(Token = "0x20006B3")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x6447BC", Offset = "0x6447BC")]
		internal delegate uint _DriverDebugRequest(uint unDeviceIndex, string pchRequest, StringBuilder pchResponseBuffer, uint unResponseBufferSize);

		[Token(Token = "0x20006B4")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x6447D0", Offset = "0x6447D0")]
		internal delegate EVRFirmwareError _PerformFirmwareUpdate(uint unDeviceIndex);

		[Token(Token = "0x20006B5")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x6447E4", Offset = "0x6447E4")]
		internal delegate void _AcknowledgeQuit_Exiting();

		[Token(Token = "0x20006B6")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x6447F8", Offset = "0x6447F8")]
		internal delegate void _AcknowledgeQuit_UserPrompt();

		[Token(Token = "0x4000F55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _GetRecommendedRenderTargetSize GetRecommendedRenderTargetSize;

		[Token(Token = "0x4000F56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal _GetProjectionMatrix GetProjectionMatrix;

		[Token(Token = "0x4000F57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal _GetProjectionRaw GetProjectionRaw;

		[Token(Token = "0x4000F58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal _ComputeDistortion ComputeDistortion;

		[Token(Token = "0x4000F59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal _GetEyeToHeadTransform GetEyeToHeadTransform;

		[Token(Token = "0x4000F5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal _GetTimeSinceLastVsync GetTimeSinceLastVsync;

		[Token(Token = "0x4000F5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal _GetD3D9AdapterIndex GetD3D9AdapterIndex;

		[Token(Token = "0x4000F5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		internal _GetDXGIOutputInfo GetDXGIOutputInfo;

		[Token(Token = "0x4000F5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		internal _GetOutputDevice GetOutputDevice;

		[Token(Token = "0x4000F5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		internal _IsDisplayOnDesktop IsDisplayOnDesktop;

		[Token(Token = "0x4000F5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		internal _SetDisplayVisibility SetDisplayVisibility;

		[Token(Token = "0x4000F60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		internal _GetDeviceToAbsoluteTrackingPose GetDeviceToAbsoluteTrackingPose;

		[Token(Token = "0x4000F61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		internal _ResetSeatedZeroPose ResetSeatedZeroPose;

		[Token(Token = "0x4000F62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		internal _GetSeatedZeroPoseToStandingAbsoluteTrackingPose GetSeatedZeroPoseToStandingAbsoluteTrackingPose;

		[Token(Token = "0x4000F63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		internal _GetRawZeroPoseToStandingAbsoluteTrackingPose GetRawZeroPoseToStandingAbsoluteTrackingPose;

		[Token(Token = "0x4000F64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		internal _GetSortedTrackedDeviceIndicesOfClass GetSortedTrackedDeviceIndicesOfClass;

		[Token(Token = "0x4000F65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		internal _GetTrackedDeviceActivityLevel GetTrackedDeviceActivityLevel;

		[Token(Token = "0x4000F66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		internal _ApplyTransform ApplyTransform;

		[Token(Token = "0x4000F67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		internal _GetTrackedDeviceIndexForControllerRole GetTrackedDeviceIndexForControllerRole;

		[Token(Token = "0x4000F68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		internal _GetControllerRoleForTrackedDeviceIndex GetControllerRoleForTrackedDeviceIndex;

		[Token(Token = "0x4000F69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		internal _GetTrackedDeviceClass GetTrackedDeviceClass;

		[Token(Token = "0x4000F6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		internal _IsTrackedDeviceConnected IsTrackedDeviceConnected;

		[Token(Token = "0x4000F6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		internal _GetBoolTrackedDeviceProperty GetBoolTrackedDeviceProperty;

		[Token(Token = "0x4000F6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		internal _GetFloatTrackedDeviceProperty GetFloatTrackedDeviceProperty;

		[Token(Token = "0x4000F6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		internal _GetInt32TrackedDeviceProperty GetInt32TrackedDeviceProperty;

		[Token(Token = "0x4000F6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		internal _GetUint64TrackedDeviceProperty GetUint64TrackedDeviceProperty;

		[Token(Token = "0x4000F6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		internal _GetMatrix34TrackedDeviceProperty GetMatrix34TrackedDeviceProperty;

		[Token(Token = "0x4000F70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		internal _GetArrayTrackedDeviceProperty GetArrayTrackedDeviceProperty;

		[Token(Token = "0x4000F71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		internal _GetStringTrackedDeviceProperty GetStringTrackedDeviceProperty;

		[Token(Token = "0x4000F72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		internal _GetPropErrorNameFromEnum GetPropErrorNameFromEnum;

		[Token(Token = "0x4000F73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		internal _PollNextEvent PollNextEvent;

		[Token(Token = "0x4000F74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		internal _PollNextEventWithPose PollNextEventWithPose;

		[Token(Token = "0x4000F75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		internal _GetEventTypeNameFromEnum GetEventTypeNameFromEnum;

		[Token(Token = "0x4000F76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		internal _GetHiddenAreaMesh GetHiddenAreaMesh;

		[Token(Token = "0x4000F77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		internal _GetControllerState GetControllerState;

		[Token(Token = "0x4000F78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		internal _GetControllerStateWithPose GetControllerStateWithPose;

		[Token(Token = "0x4000F79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		internal _TriggerHapticPulse TriggerHapticPulse;

		[Token(Token = "0x4000F7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		internal _GetButtonIdNameFromEnum GetButtonIdNameFromEnum;

		[Token(Token = "0x4000F7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		internal _GetControllerAxisTypeNameFromEnum GetControllerAxisTypeNameFromEnum;

		[Token(Token = "0x4000F7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		internal _IsInputAvailable IsInputAvailable;

		[Token(Token = "0x4000F7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		internal _IsSteamVRDrawingControllers IsSteamVRDrawingControllers;

		[Token(Token = "0x4000F7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		internal _ShouldApplicationPause ShouldApplicationPause;

		[Token(Token = "0x4000F7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		internal _ShouldApplicationReduceRenderingWork ShouldApplicationReduceRenderingWork;

		[Token(Token = "0x4000F80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		internal _DriverDebugRequest DriverDebugRequest;

		[Token(Token = "0x4000F81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		internal _PerformFirmwareUpdate PerformFirmwareUpdate;

		[Token(Token = "0x4000F82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		internal _AcknowledgeQuit_Exiting AcknowledgeQuit_Exiting;

		[Token(Token = "0x4000F83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		internal _AcknowledgeQuit_UserPrompt AcknowledgeQuit_UserPrompt;
	}
	[Token(Token = "0x200028D")]
	public struct IVRExtendedDisplay
	{
		[Token(Token = "0x20006B7")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64480C", Offset = "0x64480C")]
		internal delegate void _GetWindowBounds(ref int pnX, ref int pnY, ref uint pnWidth, ref uint pnHeight);

		[Token(Token = "0x20006B8")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x644820", Offset = "0x644820")]
		internal delegate void _GetEyeOutputViewport(EVREye eEye, ref uint pnX, ref uint pnY, ref uint pnWidth, ref uint pnHeight);

		[Token(Token = "0x20006B9")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x644834", Offset = "0x644834")]
		internal delegate void _GetDXGIOutputInfo(ref int pnAdapterIndex, ref int pnAdapterOutputIndex);

		[Token(Token = "0x4000F84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _GetWindowBounds GetWindowBounds;

		[Token(Token = "0x4000F85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal _GetEyeOutputViewport GetEyeOutputViewport;

		[Token(Token = "0x4000F86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal _GetDXGIOutputInfo GetDXGIOutputInfo;
	}
	[Token(Token = "0x200028E")]
	public struct IVRTrackedCamera
	{
		[Token(Token = "0x20006BA")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x644848", Offset = "0x644848")]
		internal delegate IntPtr _GetCameraErrorNameFromEnum(EVRTrackedCameraError eCameraError);

		[Token(Token = "0x20006BB")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64485C", Offset = "0x64485C")]
		internal delegate EVRTrackedCameraError _HasCamera(uint nDeviceIndex, ref bool pHasCamera);

		[Token(Token = "0x20006BC")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x644870", Offset = "0x644870")]
		internal delegate EVRTrackedCameraError _GetCameraFrameSize(uint nDeviceIndex, EVRTrackedCameraFrameType eFrameType, ref uint pnWidth, ref uint pnHeight, ref uint pnFrameBufferSize);

		[Token(Token = "0x20006BD")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x644884", Offset = "0x644884")]
		internal delegate EVRTrackedCameraError _GetCameraIntrinsics(uint nDeviceIndex, EVRTrackedCameraFrameType eFrameType, ref HmdVector2_t pFocalLength, ref HmdVector2_t pCenter);

		[Token(Token = "0x20006BE")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x644898", Offset = "0x644898")]
		internal delegate EVRTrackedCameraError _GetCameraProjection(uint nDeviceIndex, EVRTrackedCameraFrameType eFrameType, float flZNear, float flZFar, ref HmdMatrix44_t pProjection);

		[Token(Token = "0x20006BF")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x6448AC", Offset = "0x6448AC")]
		internal delegate EVRTrackedCameraError _AcquireVideoStreamingService(uint nDeviceIndex, ref ulong pHandle);

		[Token(Token = "0x20006C0")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x6448C0", Offset = "0x6448C0")]
		internal delegate EVRTrackedCameraError _ReleaseVideoStreamingService(ulong hTrackedCamera);

		[Token(Token = "0x20006C1")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x6448D4", Offset = "0x6448D4")]
		internal delegate EVRTrackedCameraError _GetVideoStreamFrameBuffer(ulong hTrackedCamera, EVRTrackedCameraFrameType eFrameType, IntPtr pFrameBuffer, uint nFrameBufferSize, ref CameraVideoStreamFrameHeader_t pFrameHeader, uint nFrameHeaderSize);

		[Token(Token = "0x20006C2")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x6448E8", Offset = "0x6448E8")]
		internal delegate EVRTrackedCameraError _GetVideoStreamTextureSize(uint nDeviceIndex, EVRTrackedCameraFrameType eFrameType, ref VRTextureBounds_t pTextureBounds, ref uint pnWidth, ref uint pnHeight);

		[Token(Token = "0x20006C3")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x6448FC", Offset = "0x6448FC")]
		internal delegate EVRTrackedCameraError _GetVideoStreamTextureD3D11(ulong hTrackedCamera, EVRTrackedCameraFrameType eFrameType, IntPtr pD3D11DeviceOrResource, ref IntPtr ppD3D11ShaderResourceView, ref CameraVideoStreamFrameHeader_t pFrameHeader, uint nFrameHeaderSize);

		[Token(Token = "0x20006C4")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x644910", Offset = "0x644910")]
		internal delegate EVRTrackedCameraError _GetVideoStreamTextureGL(ulong hTrackedCamera, EVRTrackedCameraFrameType eFrameType, ref uint pglTextureId, ref CameraVideoStreamFrameHeader_t pFrameHeader, uint nFrameHeaderSize);

		[Token(Token = "0x20006C5")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x644924", Offset = "0x644924")]
		internal delegate EVRTrackedCameraError _ReleaseVideoStreamTextureGL(ulong hTrackedCamera, uint glTextureId);

		[Token(Token = "0x4000F87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _GetCameraErrorNameFromEnum GetCameraErrorNameFromEnum;

		[Token(Token = "0x4000F88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal _HasCamera HasCamera;

		[Token(Token = "0x4000F89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal _GetCameraFrameSize GetCameraFrameSize;

		[Token(Token = "0x4000F8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal _GetCameraIntrinsics GetCameraIntrinsics;

		[Token(Token = "0x4000F8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal _GetCameraProjection GetCameraProjection;

		[Token(Token = "0x4000F8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal _AcquireVideoStreamingService AcquireVideoStreamingService;

		[Token(Token = "0x4000F8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal _ReleaseVideoStreamingService ReleaseVideoStreamingService;

		[Token(Token = "0x4000F8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		internal _GetVideoStreamFrameBuffer GetVideoStreamFrameBuffer;

		[Token(Token = "0x4000F8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		internal _GetVideoStreamTextureSize GetVideoStreamTextureSize;

		[Token(Token = "0x4000F90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		internal _GetVideoStreamTextureD3D11 GetVideoStreamTextureD3D11;

		[Token(Token = "0x4000F91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		internal _GetVideoStreamTextureGL GetVideoStreamTextureGL;

		[Token(Token = "0x4000F92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		internal _ReleaseVideoStreamTextureGL ReleaseVideoStreamTextureGL;
	}
	[Token(Token = "0x200028F")]
	public struct IVRApplications
	{
		[Token(Token = "0x20006C6")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x644938", Offset = "0x644938")]
		internal delegate EVRApplicationError _AddApplicationManifest(string pchApplicationManifestFullPath, bool bTemporary);

		[Token(Token = "0x20006C7")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64494C", Offset = "0x64494C")]
		internal delegate EVRApplicationError _RemoveApplicationManifest(string pchApplicationManifestFullPath);

		[Token(Token = "0x20006C8")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x644960", Offset = "0x644960")]
		internal delegate bool _IsApplicationInstalled(string pchAppKey);

		[Token(Token = "0x20006C9")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x644974", Offset = "0x644974")]
		internal delegate uint _GetApplicationCount();

		[Token(Token = "0x20006CA")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x644988", Offset = "0x644988")]
		internal delegate EVRApplicationError _GetApplicationKeyByIndex(uint unApplicationIndex, StringBuilder pchAppKeyBuffer, uint unAppKeyBufferLen);

		[Token(Token = "0x20006CB")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64499C", Offset = "0x64499C")]
		internal delegate EVRApplicationError _GetApplicationKeyByProcessId(uint unProcessId, StringBuilder pchAppKeyBuffer, uint unAppKeyBufferLen);

		[Token(Token = "0x20006CC")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x6449B0", Offset = "0x6449B0")]
		internal delegate EVRApplicationError _LaunchApplication(string pchAppKey);

		[Token(Token = "0x20006CD")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x6449C4", Offset = "0x6449C4")]
		internal delegate EVRApplicationError _LaunchTemplateApplication(string pchTemplateAppKey, string pchNewAppKey, [In][Out] AppOverrideKeys_t[] pKeys, uint unKeys);

		[Token(Token = "0x20006CE")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x6449D8", Offset = "0x6449D8")]
		internal delegate EVRApplicationError _LaunchApplicationFromMimeType(string pchMimeType, string pchArgs);

		[Token(Token = "0x20006CF")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x6449EC", Offset = "0x6449EC")]
		internal delegate EVRApplicationError _LaunchDashboardOverlay(string pchAppKey);

		[Token(Token = "0x20006D0")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x644A00", Offset = "0x644A00")]
		internal delegate bool _CancelApplicationLaunch(string pchAppKey);

		[Token(Token = "0x20006D1")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x644A14", Offset = "0x644A14")]
		internal delegate EVRApplicationError _IdentifyApplication(uint unProcessId, string pchAppKey);

		[Token(Token = "0x20006D2")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x644A28", Offset = "0x644A28")]
		internal delegate uint _GetApplicationProcessId(string pchAppKey);

		[Token(Token = "0x20006D3")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x644A3C", Offset = "0x644A3C")]
		internal delegate IntPtr _GetApplicationsErrorNameFromEnum(EVRApplicationError error);

		[Token(Token = "0x20006D4")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x644A50", Offset = "0x644A50")]
		internal delegate uint _GetApplicationPropertyString(string pchAppKey, EVRApplicationProperty eProperty, StringBuilder pchPropertyValueBuffer, uint unPropertyValueBufferLen, ref EVRApplicationError peError);

		[Token(Token = "0x20006D5")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x644A64", Offset = "0x644A64")]
		internal delegate bool _GetApplicationPropertyBool(string pchAppKey, EVRApplicationProperty eProperty, ref EVRApplicationError peError);

		[Token(Token = "0x20006D6")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x644A78", Offset = "0x644A78")]
		internal delegate ulong _GetApplicationPropertyUint64(string pchAppKey, EVRApplicationProperty eProperty, ref EVRApplicationError peError);

		[Token(Token = "0x20006D7")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x644A8C", Offset = "0x644A8C")]
		internal delegate EVRApplicationError _SetApplicationAutoLaunch(string pchAppKey, bool bAutoLaunch);

		[Token(Token = "0x20006D8")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x644AA0", Offset = "0x644AA0")]
		internal delegate bool _GetApplicationAutoLaunch(string pchAppKey);

		[Token(Token = "0x20006D9")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x644AB4", Offset = "0x644AB4")]
		internal delegate EVRApplicationError _SetDefaultApplicationForMimeType(string pchAppKey, string pchMimeType);

		[Token(Token = "0x20006DA")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x644AC8", Offset = "0x644AC8")]
		internal delegate bool _GetDefaultApplicationForMimeType(string pchMimeType, StringBuilder pchAppKeyBuffer, uint unAppKeyBufferLen);

		[Token(Token = "0x20006DB")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x644ADC", Offset = "0x644ADC")]
		internal delegate bool _GetApplicationSupportedMimeTypes(string pchAppKey, StringBuilder pchMimeTypesBuffer, uint unMimeTypesBuffer);

		[Token(Token = "0x20006DC")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x644AF0", Offset = "0x644AF0")]
		internal delegate uint _GetApplicationsThatSupportMimeType(string pchMimeType, StringBuilder pchAppKeysThatSupportBuffer, uint unAppKeysThatSupportBuffer);

		[Token(Token = "0x20006DD")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x644B04", Offset = "0x644B04")]
		internal delegate uint _GetApplicationLaunchArguments(uint unHandle, StringBuilder pchArgs, uint unArgs);

		[Token(Token = "0x20006DE")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x644B18", Offset = "0x644B18")]
		internal delegate EVRApplicationError _GetStartingApplication(StringBuilder pchAppKeyBuffer, uint unAppKeyBufferLen);

		[Token(Token = "0x20006DF")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x644B2C", Offset = "0x644B2C")]
		internal delegate EVRApplicationTransitionState _GetTransitionState();

		[Token(Token = "0x20006E0")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x644B40", Offset = "0x644B40")]
		internal delegate EVRApplicationError _PerformApplicationPrelaunchCheck(string pchAppKey);

		[Token(Token = "0x20006E1")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x644B54", Offset = "0x644B54")]
		internal delegate IntPtr _GetApplicationsTransitionStateNameFromEnum(EVRApplicationTransitionState state);

		[Token(Token = "0x20006E2")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x644B68", Offset = "0x644B68")]
		internal delegate bool _IsQuitUserPromptRequested();

		[Token(Token = "0x20006E3")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x644B7C", Offset = "0x644B7C")]
		internal delegate EVRApplicationError _LaunchInternalProcess(string pchBinaryPath, string pchArguments, string pchWorkingDirectory);

		[Token(Token = "0x20006E4")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x644B90", Offset = "0x644B90")]
		internal delegate uint _GetCurrentSceneProcessId();

		[Token(Token = "0x4000F93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _AddApplicationManifest AddApplicationManifest;

		[Token(Token = "0x4000F94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal _RemoveApplicationManifest RemoveApplicationManifest;

		[Token(Token = "0x4000F95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal _IsApplicationInstalled IsApplicationInstalled;

		[Token(Token = "0x4000F96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal _GetApplicationCount GetApplicationCount;

		[Token(Token = "0x4000F97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal _GetApplicationKeyByIndex GetApplicationKeyByIndex;

		[Token(Token = "0x4000F98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal _GetApplicationKeyByProcessId GetApplicationKeyByProcessId;

		[Token(Token = "0x4000F99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal _LaunchApplication LaunchApplication;

		[Token(Token = "0x4000F9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		internal _LaunchTemplateApplication LaunchTemplateApplication;

		[Token(Token = "0x4000F9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		internal _LaunchApplicationFromMimeType LaunchApplicationFromMimeType;

		[Token(Token = "0x4000F9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		internal _LaunchDashboardOverlay LaunchDashboardOverlay;

		[Token(Token = "0x4000F9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		internal _CancelApplicationLaunch CancelApplicationLaunch;

		[Token(Token = "0x4000F9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		internal _IdentifyApplication IdentifyApplication;

		[Token(Token = "0x4000F9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		internal _GetApplicationProcessId GetApplicationProcessId;

		[Token(Token = "0x4000FA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		internal _GetApplicationsErrorNameFromEnum GetApplicationsErrorNameFromEnum;

		[Token(Token = "0x4000FA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		internal _GetApplicationPropertyString GetApplicationPropertyString;

		[Token(Token = "0x4000FA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		internal _GetApplicationPropertyBool GetApplicationPropertyBool;

		[Token(Token = "0x4000FA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		internal _GetApplicationPropertyUint64 GetApplicationPropertyUint64;

		[Token(Token = "0x4000FA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		internal _SetApplicationAutoLaunch SetApplicationAutoLaunch;

		[Token(Token = "0x4000FA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		internal _GetApplicationAutoLaunch GetApplicationAutoLaunch;

		[Token(Token = "0x4000FA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		internal _SetDefaultApplicationForMimeType SetDefaultApplicationForMimeType;

		[Token(Token = "0x4000FA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		internal _GetDefaultApplicationForMimeType GetDefaultApplicationForMimeType;

		[Token(Token = "0x4000FA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		internal _GetApplicationSupportedMimeTypes GetApplicationSupportedMimeTypes;

		[Token(Token = "0x4000FA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		internal _GetApplicationsThatSupportMimeType GetApplicationsThatSupportMimeType;

		[Token(Token = "0x4000FAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		internal _GetApplicationLaunchArguments GetApplicationLaunchArguments;

		[Token(Token = "0x4000FAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		internal _GetStartingApplication GetStartingApplication;

		[Token(Token = "0x4000FAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		internal _GetTransitionState GetTransitionState;

		[Token(Token = "0x4000FAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		internal _PerformApplicationPrelaunchCheck PerformApplicationPrelaunchCheck;

		[Token(Token = "0x4000FAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		internal _GetApplicationsTransitionStateNameFromEnum GetApplicationsTransitionStateNameFromEnum;

		[Token(Token = "0x4000FAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		internal _IsQuitUserPromptRequested IsQuitUserPromptRequested;

		[Token(Token = "0x4000FB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		internal _LaunchInternalProcess LaunchInternalProcess;

		[Token(Token = "0x4000FB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		internal _GetCurrentSceneProcessId GetCurrentSceneProcessId;
	}
	[Token(Token = "0x2000290")]
	public struct IVRChaperone
	{
		[Token(Token = "0x20006E5")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x644BA4", Offset = "0x644BA4")]
		internal delegate ChaperoneCalibrationState _GetCalibrationState();

		[Token(Token = "0x20006E6")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x644BB8", Offset = "0x644BB8")]
		internal delegate bool _GetPlayAreaSize(ref float pSizeX, ref float pSizeZ);

		[Token(Token = "0x20006E7")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x644BCC", Offset = "0x644BCC")]
		internal delegate bool _GetPlayAreaRect(ref HmdQuad_t rect);

		[Token(Token = "0x20006E8")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x644BE0", Offset = "0x644BE0")]
		internal delegate void _ReloadInfo();

		[Token(Token = "0x20006E9")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x644BF4", Offset = "0x644BF4")]
		internal delegate void _SetSceneColor(HmdColor_t color);

		[Token(Token = "0x20006EA")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x644C08", Offset = "0x644C08")]
		internal delegate void _GetBoundsColor(ref HmdColor_t pOutputColorArray, int nNumOutputColors, float flCollisionBoundsFadeDistance, ref HmdColor_t pOutputCameraColor);

		[Token(Token = "0x20006EB")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x644C1C", Offset = "0x644C1C")]
		internal delegate bool _AreBoundsVisible();

		[Token(Token = "0x20006EC")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x644C30", Offset = "0x644C30")]
		internal delegate void _ForceBoundsVisible(bool bForce);

		[Token(Token = "0x4000FB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _GetCalibrationState GetCalibrationState;

		[Token(Token = "0x4000FB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal _GetPlayAreaSize GetPlayAreaSize;

		[Token(Token = "0x4000FB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal _GetPlayAreaRect GetPlayAreaRect;

		[Token(Token = "0x4000FB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal _ReloadInfo ReloadInfo;

		[Token(Token = "0x4000FB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal _SetSceneColor SetSceneColor;

		[Token(Token = "0x4000FB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal _GetBoundsColor GetBoundsColor;

		[Token(Token = "0x4000FB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal _AreBoundsVisible AreBoundsVisible;

		[Token(Token = "0x4000FB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		internal _ForceBoundsVisible ForceBoundsVisible;
	}
	[Token(Token = "0x2000291")]
	public struct IVRChaperoneSetup
	{
		[Token(Token = "0x20006ED")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x644C44", Offset = "0x644C44")]
		internal delegate bool _CommitWorkingCopy(EChaperoneConfigFile configFile);

		[Token(Token = "0x20006EE")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x644C58", Offset = "0x644C58")]
		internal delegate void _RevertWorkingCopy();

		[Token(Token = "0x20006EF")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x644C6C", Offset = "0x644C6C")]
		internal delegate bool _GetWorkingPlayAreaSize(ref float pSizeX, ref float pSizeZ);

		[Token(Token = "0x20006F0")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x644C80", Offset = "0x644C80")]
		internal delegate bool _GetWorkingPlayAreaRect(ref HmdQuad_t rect);

		[Token(Token = "0x20006F1")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x644C94", Offset = "0x644C94")]
		internal delegate bool _GetWorkingCollisionBoundsInfo([In][Out] HmdQuad_t[] pQuadsBuffer, ref uint punQuadsCount);

		[Token(Token = "0x20006F2")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x644CA8", Offset = "0x644CA8")]
		internal delegate bool _GetLiveCollisionBoundsInfo([In][Out] HmdQuad_t[] pQuadsBuffer, ref uint punQuadsCount);

		[Token(Token = "0x20006F3")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x644CBC", Offset = "0x644CBC")]
		internal delegate bool _GetWorkingSeatedZeroPoseToRawTrackingPose(ref HmdMatrix34_t pmatSeatedZeroPoseToRawTrackingPose);

		[Token(Token = "0x20006F4")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x644CD0", Offset = "0x644CD0")]
		internal delegate bool _GetWorkingStandingZeroPoseToRawTrackingPose(ref HmdMatrix34_t pmatStandingZeroPoseToRawTrackingPose);

		[Token(Token = "0x20006F5")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x644CE4", Offset = "0x644CE4")]
		internal delegate void _SetWorkingPlayAreaSize(float sizeX, float sizeZ);

		[Token(Token = "0x20006F6")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x644CF8", Offset = "0x644CF8")]
		internal delegate void _SetWorkingCollisionBoundsInfo([In][Out] HmdQuad_t[] pQuadsBuffer, uint unQuadsCount);

		[Token(Token = "0x20006F7")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x644D0C", Offset = "0x644D0C")]
		internal delegate void _SetWorkingSeatedZeroPoseToRawTrackingPose(ref HmdMatrix34_t pMatSeatedZeroPoseToRawTrackingPose);

		[Token(Token = "0x20006F8")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x644D20", Offset = "0x644D20")]
		internal delegate void _SetWorkingStandingZeroPoseToRawTrackingPose(ref HmdMatrix34_t pMatStandingZeroPoseToRawTrackingPose);

		[Token(Token = "0x20006F9")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x644D34", Offset = "0x644D34")]
		internal delegate void _ReloadFromDisk(EChaperoneConfigFile configFile);

		[Token(Token = "0x20006FA")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x644D48", Offset = "0x644D48")]
		internal delegate bool _GetLiveSeatedZeroPoseToRawTrackingPose(ref HmdMatrix34_t pmatSeatedZeroPoseToRawTrackingPose);

		[Token(Token = "0x20006FB")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x644D5C", Offset = "0x644D5C")]
		internal delegate void _SetWorkingCollisionBoundsTagsInfo([In][Out] byte[] pTagsBuffer, uint unTagCount);

		[Token(Token = "0x20006FC")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x644D70", Offset = "0x644D70")]
		internal delegate bool _GetLiveCollisionBoundsTagsInfo([In][Out] byte[] pTagsBuffer, ref uint punTagCount);

		[Token(Token = "0x20006FD")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x644D84", Offset = "0x644D84")]
		internal delegate bool _SetWorkingPhysicalBoundsInfo([In][Out] HmdQuad_t[] pQuadsBuffer, uint unQuadsCount);

		[Token(Token = "0x20006FE")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x644D98", Offset = "0x644D98")]
		internal delegate bool _GetLivePhysicalBoundsInfo([In][Out] HmdQuad_t[] pQuadsBuffer, ref uint punQuadsCount);

		[Token(Token = "0x20006FF")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x644DAC", Offset = "0x644DAC")]
		internal delegate bool _ExportLiveToBuffer(StringBuilder pBuffer, ref uint pnBufferLength);

		[Token(Token = "0x2000700")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x644DC0", Offset = "0x644DC0")]
		internal delegate bool _ImportFromBufferToWorking(string pBuffer, uint nImportFlags);

		[Token(Token = "0x4000FBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _CommitWorkingCopy CommitWorkingCopy;

		[Token(Token = "0x4000FBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal _RevertWorkingCopy RevertWorkingCopy;

		[Token(Token = "0x4000FBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal _GetWorkingPlayAreaSize GetWorkingPlayAreaSize;

		[Token(Token = "0x4000FBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal _GetWorkingPlayAreaRect GetWorkingPlayAreaRect;

		[Token(Token = "0x4000FBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal _GetWorkingCollisionBoundsInfo GetWorkingCollisionBoundsInfo;

		[Token(Token = "0x4000FBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal _GetLiveCollisionBoundsInfo GetLiveCollisionBoundsInfo;

		[Token(Token = "0x4000FC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal _GetWorkingSeatedZeroPoseToRawTrackingPose GetWorkingSeatedZeroPoseToRawTrackingPose;

		[Token(Token = "0x4000FC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		internal _GetWorkingStandingZeroPoseToRawTrackingPose GetWorkingStandingZeroPoseToRawTrackingPose;

		[Token(Token = "0x4000FC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		internal _SetWorkingPlayAreaSize SetWorkingPlayAreaSize;

		[Token(Token = "0x4000FC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		internal _SetWorkingCollisionBoundsInfo SetWorkingCollisionBoundsInfo;

		[Token(Token = "0x4000FC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		internal _SetWorkingSeatedZeroPoseToRawTrackingPose SetWorkingSeatedZeroPoseToRawTrackingPose;

		[Token(Token = "0x4000FC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		internal _SetWorkingStandingZeroPoseToRawTrackingPose SetWorkingStandingZeroPoseToRawTrackingPose;

		[Token(Token = "0x4000FC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		internal _ReloadFromDisk ReloadFromDisk;

		[Token(Token = "0x4000FC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		internal _GetLiveSeatedZeroPoseToRawTrackingPose GetLiveSeatedZeroPoseToRawTrackingPose;

		[Token(Token = "0x4000FC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		internal _SetWorkingCollisionBoundsTagsInfo SetWorkingCollisionBoundsTagsInfo;

		[Token(Token = "0x4000FC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		internal _GetLiveCollisionBoundsTagsInfo GetLiveCollisionBoundsTagsInfo;

		[Token(Token = "0x4000FCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		internal _SetWorkingPhysicalBoundsInfo SetWorkingPhysicalBoundsInfo;

		[Token(Token = "0x4000FCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		internal _GetLivePhysicalBoundsInfo GetLivePhysicalBoundsInfo;

		[Token(Token = "0x4000FCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		internal _ExportLiveToBuffer ExportLiveToBuffer;

		[Token(Token = "0x4000FCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		internal _ImportFromBufferToWorking ImportFromBufferToWorking;
	}
	[Token(Token = "0x2000292")]
	public struct IVRCompositor
	{
		[Token(Token = "0x2000701")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x644DD4", Offset = "0x644DD4")]
		internal delegate void _SetTrackingSpace(ETrackingUniverseOrigin eOrigin);

		[Token(Token = "0x2000702")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x644DE8", Offset = "0x644DE8")]
		internal delegate ETrackingUniverseOrigin _GetTrackingSpace();

		[Token(Token = "0x2000703")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x644DFC", Offset = "0x644DFC")]
		internal delegate EVRCompositorError _WaitGetPoses([In][Out] TrackedDevicePose_t[] pRenderPoseArray, uint unRenderPoseArrayCount, [In][Out] TrackedDevicePose_t[] pGamePoseArray, uint unGamePoseArrayCount);

		[Token(Token = "0x2000704")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x644E10", Offset = "0x644E10")]
		internal delegate EVRCompositorError _GetLastPoses([In][Out] TrackedDevicePose_t[] pRenderPoseArray, uint unRenderPoseArrayCount, [In][Out] TrackedDevicePose_t[] pGamePoseArray, uint unGamePoseArrayCount);

		[Token(Token = "0x2000705")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x644E24", Offset = "0x644E24")]
		internal delegate EVRCompositorError _GetLastPoseForTrackedDeviceIndex(uint unDeviceIndex, ref TrackedDevicePose_t pOutputPose, ref TrackedDevicePose_t pOutputGamePose);

		[Token(Token = "0x2000706")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x644E38", Offset = "0x644E38")]
		internal delegate EVRCompositorError _Submit(EVREye eEye, ref Texture_t pTexture, ref VRTextureBounds_t pBounds, EVRSubmitFlags nSubmitFlags);

		[Token(Token = "0x2000707")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x644E4C", Offset = "0x644E4C")]
		internal delegate void _ClearLastSubmittedFrame();

		[Token(Token = "0x2000708")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x644E60", Offset = "0x644E60")]
		internal delegate void _PostPresentHandoff();

		[Token(Token = "0x2000709")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x644E74", Offset = "0x644E74")]
		internal delegate bool _GetFrameTiming(ref Compositor_FrameTiming pTiming, uint unFramesAgo);

		[Token(Token = "0x200070A")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x644E88", Offset = "0x644E88")]
		internal delegate uint _GetFrameTimings(ref Compositor_FrameTiming pTiming, uint nFrames);

		[Token(Token = "0x200070B")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x644E9C", Offset = "0x644E9C")]
		internal delegate float _GetFrameTimeRemaining();

		[Token(Token = "0x200070C")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x644EB0", Offset = "0x644EB0")]
		internal delegate void _GetCumulativeStats(ref Compositor_CumulativeStats pStats, uint nStatsSizeInBytes);

		[Token(Token = "0x200070D")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x644EC4", Offset = "0x644EC4")]
		internal delegate void _FadeToColor(float fSeconds, float fRed, float fGreen, float fBlue, float fAlpha, bool bBackground);

		[Token(Token = "0x200070E")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x644ED8", Offset = "0x644ED8")]
		internal delegate HmdColor_t _GetCurrentFadeColor(bool bBackground);

		[Token(Token = "0x200070F")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x644EEC", Offset = "0x644EEC")]
		internal delegate void _FadeGrid(float fSeconds, bool bFadeIn);

		[Token(Token = "0x2000710")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x644F00", Offset = "0x644F00")]
		internal delegate float _GetCurrentGridAlpha();

		[Token(Token = "0x2000711")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x644F14", Offset = "0x644F14")]
		internal delegate EVRCompositorError _SetSkyboxOverride([In][Out] Texture_t[] pTextures, uint unTextureCount);

		[Token(Token = "0x2000712")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x644F28", Offset = "0x644F28")]
		internal delegate void _ClearSkyboxOverride();

		[Token(Token = "0x2000713")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x644F3C", Offset = "0x644F3C")]
		internal delegate void _CompositorBringToFront();

		[Token(Token = "0x2000714")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x644F50", Offset = "0x644F50")]
		internal delegate void _CompositorGoToBack();

		[Token(Token = "0x2000715")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x644F64", Offset = "0x644F64")]
		internal delegate void _CompositorQuit();

		[Token(Token = "0x2000716")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x644F78", Offset = "0x644F78")]
		internal delegate bool _IsFullscreen();

		[Token(Token = "0x2000717")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x644F8C", Offset = "0x644F8C")]
		internal delegate uint _GetCurrentSceneFocusProcess();

		[Token(Token = "0x2000718")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x644FA0", Offset = "0x644FA0")]
		internal delegate uint _GetLastFrameRenderer();

		[Token(Token = "0x2000719")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x644FB4", Offset = "0x644FB4")]
		internal delegate bool _CanRenderScene();

		[Token(Token = "0x200071A")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x644FC8", Offset = "0x644FC8")]
		internal delegate void _ShowMirrorWindow();

		[Token(Token = "0x200071B")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x644FDC", Offset = "0x644FDC")]
		internal delegate void _HideMirrorWindow();

		[Token(Token = "0x200071C")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x644FF0", Offset = "0x644FF0")]
		internal delegate bool _IsMirrorWindowVisible();

		[Token(Token = "0x200071D")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x645004", Offset = "0x645004")]
		internal delegate void _CompositorDumpImages();

		[Token(Token = "0x200071E")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x645018", Offset = "0x645018")]
		internal delegate bool _ShouldAppRenderWithLowResources();

		[Token(Token = "0x200071F")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64502C", Offset = "0x64502C")]
		internal delegate void _ForceInterleavedReprojectionOn(bool bOverride);

		[Token(Token = "0x2000720")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x645040", Offset = "0x645040")]
		internal delegate void _ForceReconnectProcess();

		[Token(Token = "0x2000721")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x645054", Offset = "0x645054")]
		internal delegate void _SuspendRendering(bool bSuspend);

		[Token(Token = "0x2000722")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x645068", Offset = "0x645068")]
		internal delegate EVRCompositorError _GetMirrorTextureD3D11(EVREye eEye, IntPtr pD3D11DeviceOrResource, ref IntPtr ppD3D11ShaderResourceView);

		[Token(Token = "0x2000723")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64507C", Offset = "0x64507C")]
		internal delegate void _ReleaseMirrorTextureD3D11(IntPtr pD3D11ShaderResourceView);

		[Token(Token = "0x2000724")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x645090", Offset = "0x645090")]
		internal delegate EVRCompositorError _GetMirrorTextureGL(EVREye eEye, ref uint pglTextureId, IntPtr pglSharedTextureHandle);

		[Token(Token = "0x2000725")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x6450A4", Offset = "0x6450A4")]
		internal delegate bool _ReleaseSharedGLTexture(uint glTextureId, IntPtr glSharedTextureHandle);

		[Token(Token = "0x2000726")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x6450B8", Offset = "0x6450B8")]
		internal delegate void _LockGLSharedTextureForAccess(IntPtr glSharedTextureHandle);

		[Token(Token = "0x2000727")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x6450CC", Offset = "0x6450CC")]
		internal delegate void _UnlockGLSharedTextureForAccess(IntPtr glSharedTextureHandle);

		[Token(Token = "0x2000728")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x6450E0", Offset = "0x6450E0")]
		internal delegate uint _GetVulkanInstanceExtensionsRequired(StringBuilder pchValue, uint unBufferSize);

		[Token(Token = "0x2000729")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x6450F4", Offset = "0x6450F4")]
		internal delegate uint _GetVulkanDeviceExtensionsRequired(IntPtr pPhysicalDevice, StringBuilder pchValue, uint unBufferSize);

		[Token(Token = "0x200072A")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x645108", Offset = "0x645108")]
		internal delegate void _SetExplicitTimingMode(EVRCompositorTimingMode eTimingMode);

		[Token(Token = "0x200072B")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64511C", Offset = "0x64511C")]
		internal delegate EVRCompositorError _SubmitExplicitTimingData();

		[Token(Token = "0x4000FCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _SetTrackingSpace SetTrackingSpace;

		[Token(Token = "0x4000FCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal _GetTrackingSpace GetTrackingSpace;

		[Token(Token = "0x4000FD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal _WaitGetPoses WaitGetPoses;

		[Token(Token = "0x4000FD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal _GetLastPoses GetLastPoses;

		[Token(Token = "0x4000FD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal _GetLastPoseForTrackedDeviceIndex GetLastPoseForTrackedDeviceIndex;

		[Token(Token = "0x4000FD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal _Submit Submit;

		[Token(Token = "0x4000FD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal _ClearLastSubmittedFrame ClearLastSubmittedFrame;

		[Token(Token = "0x4000FD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		internal _PostPresentHandoff PostPresentHandoff;

		[Token(Token = "0x4000FD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		internal _GetFrameTiming GetFrameTiming;

		[Token(Token = "0x4000FD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		internal _GetFrameTimings GetFrameTimings;

		[Token(Token = "0x4000FD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		internal _GetFrameTimeRemaining GetFrameTimeRemaining;

		[Token(Token = "0x4000FD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		internal _GetCumulativeStats GetCumulativeStats;

		[Token(Token = "0x4000FDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		internal _FadeToColor FadeToColor;

		[Token(Token = "0x4000FDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		internal _GetCurrentFadeColor GetCurrentFadeColor;

		[Token(Token = "0x4000FDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		internal _FadeGrid FadeGrid;

		[Token(Token = "0x4000FDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		internal _GetCurrentGridAlpha GetCurrentGridAlpha;

		[Token(Token = "0x4000FDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		internal _SetSkyboxOverride SetSkyboxOverride;

		[Token(Token = "0x4000FDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		internal _ClearSkyboxOverride ClearSkyboxOverride;

		[Token(Token = "0x4000FE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		internal _CompositorBringToFront CompositorBringToFront;

		[Token(Token = "0x4000FE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		internal _CompositorGoToBack CompositorGoToBack;

		[Token(Token = "0x4000FE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		internal _CompositorQuit CompositorQuit;

		[Token(Token = "0x4000FE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		internal _IsFullscreen IsFullscreen;

		[Token(Token = "0x4000FE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		internal _GetCurrentSceneFocusProcess GetCurrentSceneFocusProcess;

		[Token(Token = "0x4000FE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		internal _GetLastFrameRenderer GetLastFrameRenderer;

		[Token(Token = "0x4000FE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		internal _CanRenderScene CanRenderScene;

		[Token(Token = "0x4000FE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		internal _ShowMirrorWindow ShowMirrorWindow;

		[Token(Token = "0x4000FE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		internal _HideMirrorWindow HideMirrorWindow;

		[Token(Token = "0x4000FE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		internal _IsMirrorWindowVisible IsMirrorWindowVisible;

		[Token(Token = "0x4000FEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		internal _CompositorDumpImages CompositorDumpImages;

		[Token(Token = "0x4000FEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		internal _ShouldAppRenderWithLowResources ShouldAppRenderWithLowResources;

		[Token(Token = "0x4000FEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		internal _ForceInterleavedReprojectionOn ForceInterleavedReprojectionOn;

		[Token(Token = "0x4000FED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		internal _ForceReconnectProcess ForceReconnectProcess;

		[Token(Token = "0x4000FEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		internal _SuspendRendering SuspendRendering;

		[Token(Token = "0x4000FEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		internal _GetMirrorTextureD3D11 GetMirrorTextureD3D11;

		[Token(Token = "0x4000FF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		internal _ReleaseMirrorTextureD3D11 ReleaseMirrorTextureD3D11;

		[Token(Token = "0x4000FF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		internal _GetMirrorTextureGL GetMirrorTextureGL;

		[Token(Token = "0x4000FF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		internal _ReleaseSharedGLTexture ReleaseSharedGLTexture;

		[Token(Token = "0x4000FF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		internal _LockGLSharedTextureForAccess LockGLSharedTextureForAccess;

		[Token(Token = "0x4000FF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		internal _UnlockGLSharedTextureForAccess UnlockGLSharedTextureForAccess;

		[Token(Token = "0x4000FF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		internal _GetVulkanInstanceExtensionsRequired GetVulkanInstanceExtensionsRequired;

		[Token(Token = "0x4000FF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		internal _GetVulkanDeviceExtensionsRequired GetVulkanDeviceExtensionsRequired;

		[Token(Token = "0x4000FF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		internal _SetExplicitTimingMode SetExplicitTimingMode;

		[Token(Token = "0x4000FF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		internal _SubmitExplicitTimingData SubmitExplicitTimingData;
	}
	[Token(Token = "0x2000293")]
	public struct IVROverlay
	{
		[Token(Token = "0x200072C")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x645130", Offset = "0x645130")]
		internal delegate EVROverlayError _FindOverlay(string pchOverlayKey, ref ulong pOverlayHandle);

		[Token(Token = "0x200072D")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x645144", Offset = "0x645144")]
		internal delegate EVROverlayError _CreateOverlay(string pchOverlayKey, string pchOverlayName, ref ulong pOverlayHandle);

		[Token(Token = "0x200072E")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x645158", Offset = "0x645158")]
		internal delegate EVROverlayError _DestroyOverlay(ulong ulOverlayHandle);

		[Token(Token = "0x200072F")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64516C", Offset = "0x64516C")]
		internal delegate EVROverlayError _SetHighQualityOverlay(ulong ulOverlayHandle);

		[Token(Token = "0x2000730")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x645180", Offset = "0x645180")]
		internal delegate ulong _GetHighQualityOverlay();

		[Token(Token = "0x2000731")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x645194", Offset = "0x645194")]
		internal delegate uint _GetOverlayKey(ulong ulOverlayHandle, StringBuilder pchValue, uint unBufferSize, ref EVROverlayError pError);

		[Token(Token = "0x2000732")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x6451A8", Offset = "0x6451A8")]
		internal delegate uint _GetOverlayName(ulong ulOverlayHandle, StringBuilder pchValue, uint unBufferSize, ref EVROverlayError pError);

		[Token(Token = "0x2000733")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x6451BC", Offset = "0x6451BC")]
		internal delegate EVROverlayError _SetOverlayName(ulong ulOverlayHandle, string pchName);

		[Token(Token = "0x2000734")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x6451D0", Offset = "0x6451D0")]
		internal delegate EVROverlayError _GetOverlayImageData(ulong ulOverlayHandle, IntPtr pvBuffer, uint unBufferSize, ref uint punWidth, ref uint punHeight);

		[Token(Token = "0x2000735")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x6451E4", Offset = "0x6451E4")]
		internal delegate IntPtr _GetOverlayErrorNameFromEnum(EVROverlayError error);

		[Token(Token = "0x2000736")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x6451F8", Offset = "0x6451F8")]
		internal delegate EVROverlayError _SetOverlayRenderingPid(ulong ulOverlayHandle, uint unPID);

		[Token(Token = "0x2000737")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64520C", Offset = "0x64520C")]
		internal delegate uint _GetOverlayRenderingPid(ulong ulOverlayHandle);

		[Token(Token = "0x2000738")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x645220", Offset = "0x645220")]
		internal delegate EVROverlayError _SetOverlayFlag(ulong ulOverlayHandle, VROverlayFlags eOverlayFlag, bool bEnabled);

		[Token(Token = "0x2000739")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x645234", Offset = "0x645234")]
		internal delegate EVROverlayError _GetOverlayFlag(ulong ulOverlayHandle, VROverlayFlags eOverlayFlag, ref bool pbEnabled);

		[Token(Token = "0x200073A")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x645248", Offset = "0x645248")]
		internal delegate EVROverlayError _SetOverlayColor(ulong ulOverlayHandle, float fRed, float fGreen, float fBlue);

		[Token(Token = "0x200073B")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64525C", Offset = "0x64525C")]
		internal delegate EVROverlayError _GetOverlayColor(ulong ulOverlayHandle, ref float pfRed, ref float pfGreen, ref float pfBlue);

		[Token(Token = "0x200073C")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x645270", Offset = "0x645270")]
		internal delegate EVROverlayError _SetOverlayAlpha(ulong ulOverlayHandle, float fAlpha);

		[Token(Token = "0x200073D")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x645284", Offset = "0x645284")]
		internal delegate EVROverlayError _GetOverlayAlpha(ulong ulOverlayHandle, ref float pfAlpha);

		[Token(Token = "0x200073E")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x645298", Offset = "0x645298")]
		internal delegate EVROverlayError _SetOverlayTexelAspect(ulong ulOverlayHandle, float fTexelAspect);

		[Token(Token = "0x200073F")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x6452AC", Offset = "0x6452AC")]
		internal delegate EVROverlayError _GetOverlayTexelAspect(ulong ulOverlayHandle, ref float pfTexelAspect);

		[Token(Token = "0x2000740")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x6452C0", Offset = "0x6452C0")]
		internal delegate EVROverlayError _SetOverlaySortOrder(ulong ulOverlayHandle, uint unSortOrder);

		[Token(Token = "0x2000741")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x6452D4", Offset = "0x6452D4")]
		internal delegate EVROverlayError _GetOverlaySortOrder(ulong ulOverlayHandle, ref uint punSortOrder);

		[Token(Token = "0x2000742")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x6452E8", Offset = "0x6452E8")]
		internal delegate EVROverlayError _SetOverlayWidthInMeters(ulong ulOverlayHandle, float fWidthInMeters);

		[Token(Token = "0x2000743")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x6452FC", Offset = "0x6452FC")]
		internal delegate EVROverlayError _GetOverlayWidthInMeters(ulong ulOverlayHandle, ref float pfWidthInMeters);

		[Token(Token = "0x2000744")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x645310", Offset = "0x645310")]
		internal delegate EVROverlayError _SetOverlayAutoCurveDistanceRangeInMeters(ulong ulOverlayHandle, float fMinDistanceInMeters, float fMaxDistanceInMeters);

		[Token(Token = "0x2000745")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x645324", Offset = "0x645324")]
		internal delegate EVROverlayError _GetOverlayAutoCurveDistanceRangeInMeters(ulong ulOverlayHandle, ref float pfMinDistanceInMeters, ref float pfMaxDistanceInMeters);

		[Token(Token = "0x2000746")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x645338", Offset = "0x645338")]
		internal delegate EVROverlayError _SetOverlayTextureColorSpace(ulong ulOverlayHandle, EColorSpace eTextureColorSpace);

		[Token(Token = "0x2000747")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64534C", Offset = "0x64534C")]
		internal delegate EVROverlayError _GetOverlayTextureColorSpace(ulong ulOverlayHandle, ref EColorSpace peTextureColorSpace);

		[Token(Token = "0x2000748")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x645360", Offset = "0x645360")]
		internal delegate EVROverlayError _SetOverlayTextureBounds(ulong ulOverlayHandle, ref VRTextureBounds_t pOverlayTextureBounds);

		[Token(Token = "0x2000749")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x645374", Offset = "0x645374")]
		internal delegate EVROverlayError _GetOverlayTextureBounds(ulong ulOverlayHandle, ref VRTextureBounds_t pOverlayTextureBounds);

		[Token(Token = "0x200074A")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x645388", Offset = "0x645388")]
		internal delegate uint _GetOverlayRenderModel(ulong ulOverlayHandle, StringBuilder pchValue, uint unBufferSize, ref HmdColor_t pColor, ref EVROverlayError pError);

		[Token(Token = "0x200074B")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64539C", Offset = "0x64539C")]
		internal delegate EVROverlayError _SetOverlayRenderModel(ulong ulOverlayHandle, string pchRenderModel, ref HmdColor_t pColor);

		[Token(Token = "0x200074C")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x6453B0", Offset = "0x6453B0")]
		internal delegate EVROverlayError _GetOverlayTransformType(ulong ulOverlayHandle, ref VROverlayTransformType peTransformType);

		[Token(Token = "0x200074D")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x6453C4", Offset = "0x6453C4")]
		internal delegate EVROverlayError _SetOverlayTransformAbsolute(ulong ulOverlayHandle, ETrackingUniverseOrigin eTrackingOrigin, ref HmdMatrix34_t pmatTrackingOriginToOverlayTransform);

		[Token(Token = "0x200074E")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x6453D8", Offset = "0x6453D8")]
		internal delegate EVROverlayError _GetOverlayTransformAbsolute(ulong ulOverlayHandle, ref ETrackingUniverseOrigin peTrackingOrigin, ref HmdMatrix34_t pmatTrackingOriginToOverlayTransform);

		[Token(Token = "0x200074F")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x6453EC", Offset = "0x6453EC")]
		internal delegate EVROverlayError _SetOverlayTransformTrackedDeviceRelative(ulong ulOverlayHandle, uint unTrackedDevice, ref HmdMatrix34_t pmatTrackedDeviceToOverlayTransform);

		[Token(Token = "0x2000750")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x645400", Offset = "0x645400")]
		internal delegate EVROverlayError _GetOverlayTransformTrackedDeviceRelative(ulong ulOverlayHandle, ref uint punTrackedDevice, ref HmdMatrix34_t pmatTrackedDeviceToOverlayTransform);

		[Token(Token = "0x2000751")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x645414", Offset = "0x645414")]
		internal delegate EVROverlayError _SetOverlayTransformTrackedDeviceComponent(ulong ulOverlayHandle, uint unDeviceIndex, string pchComponentName);

		[Token(Token = "0x2000752")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x645428", Offset = "0x645428")]
		internal delegate EVROverlayError _GetOverlayTransformTrackedDeviceComponent(ulong ulOverlayHandle, ref uint punDeviceIndex, StringBuilder pchComponentName, uint unComponentNameSize);

		[Token(Token = "0x2000753")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64543C", Offset = "0x64543C")]
		internal delegate EVROverlayError _GetOverlayTransformOverlayRelative(ulong ulOverlayHandle, ref ulong ulOverlayHandleParent, ref HmdMatrix34_t pmatParentOverlayToOverlayTransform);

		[Token(Token = "0x2000754")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x645450", Offset = "0x645450")]
		internal delegate EVROverlayError _SetOverlayTransformOverlayRelative(ulong ulOverlayHandle, ulong ulOverlayHandleParent, ref HmdMatrix34_t pmatParentOverlayToOverlayTransform);

		[Token(Token = "0x2000755")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x645464", Offset = "0x645464")]
		internal delegate EVROverlayError _ShowOverlay(ulong ulOverlayHandle);

		[Token(Token = "0x2000756")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x645478", Offset = "0x645478")]
		internal delegate EVROverlayError _HideOverlay(ulong ulOverlayHandle);

		[Token(Token = "0x2000757")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64548C", Offset = "0x64548C")]
		internal delegate bool _IsOverlayVisible(ulong ulOverlayHandle);

		[Token(Token = "0x2000758")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x6454A0", Offset = "0x6454A0")]
		internal delegate EVROverlayError _GetTransformForOverlayCoordinates(ulong ulOverlayHandle, ETrackingUniverseOrigin eTrackingOrigin, HmdVector2_t coordinatesInOverlay, ref HmdMatrix34_t pmatTransform);

		[Token(Token = "0x2000759")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x6454B4", Offset = "0x6454B4")]
		internal delegate bool _PollNextOverlayEvent(ulong ulOverlayHandle, ref VREvent_t pEvent, uint uncbVREvent);

		[Token(Token = "0x200075A")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x6454C8", Offset = "0x6454C8")]
		internal delegate EVROverlayError _GetOverlayInputMethod(ulong ulOverlayHandle, ref VROverlayInputMethod peInputMethod);

		[Token(Token = "0x200075B")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x6454DC", Offset = "0x6454DC")]
		internal delegate EVROverlayError _SetOverlayInputMethod(ulong ulOverlayHandle, VROverlayInputMethod eInputMethod);

		[Token(Token = "0x200075C")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x6454F0", Offset = "0x6454F0")]
		internal delegate EVROverlayError _GetOverlayMouseScale(ulong ulOverlayHandle, ref HmdVector2_t pvecMouseScale);

		[Token(Token = "0x200075D")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x645504", Offset = "0x645504")]
		internal delegate EVROverlayError _SetOverlayMouseScale(ulong ulOverlayHandle, ref HmdVector2_t pvecMouseScale);

		[Token(Token = "0x200075E")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x645518", Offset = "0x645518")]
		internal delegate bool _ComputeOverlayIntersection(ulong ulOverlayHandle, ref VROverlayIntersectionParams_t pParams, ref VROverlayIntersectionResults_t pResults);

		[Token(Token = "0x200075F")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64552C", Offset = "0x64552C")]
		internal delegate bool _IsHoverTargetOverlay(ulong ulOverlayHandle);

		[Token(Token = "0x2000760")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x645540", Offset = "0x645540")]
		internal delegate ulong _GetGamepadFocusOverlay();

		[Token(Token = "0x2000761")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x645554", Offset = "0x645554")]
		internal delegate EVROverlayError _SetGamepadFocusOverlay(ulong ulNewFocusOverlay);

		[Token(Token = "0x2000762")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x645568", Offset = "0x645568")]
		internal delegate EVROverlayError _SetOverlayNeighbor(EOverlayDirection eDirection, ulong ulFrom, ulong ulTo);

		[Token(Token = "0x2000763")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64557C", Offset = "0x64557C")]
		internal delegate EVROverlayError _MoveGamepadFocusToNeighbor(EOverlayDirection eDirection, ulong ulFrom);

		[Token(Token = "0x2000764")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x645590", Offset = "0x645590")]
		internal delegate EVROverlayError _SetOverlayDualAnalogTransform(ulong ulOverlay, EDualAnalogWhich eWhich, IntPtr vCenter, float fRadius);

		[Token(Token = "0x2000765")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x6455A4", Offset = "0x6455A4")]
		internal delegate EVROverlayError _GetOverlayDualAnalogTransform(ulong ulOverlay, EDualAnalogWhich eWhich, ref HmdVector2_t pvCenter, ref float pfRadius);

		[Token(Token = "0x2000766")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x6455B8", Offset = "0x6455B8")]
		internal delegate EVROverlayError _SetOverlayTexture(ulong ulOverlayHandle, ref Texture_t pTexture);

		[Token(Token = "0x2000767")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x6455CC", Offset = "0x6455CC")]
		internal delegate EVROverlayError _ClearOverlayTexture(ulong ulOverlayHandle);

		[Token(Token = "0x2000768")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x6455E0", Offset = "0x6455E0")]
		internal delegate EVROverlayError _SetOverlayRaw(ulong ulOverlayHandle, IntPtr pvBuffer, uint unWidth, uint unHeight, uint unDepth);

		[Token(Token = "0x2000769")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x6455F4", Offset = "0x6455F4")]
		internal delegate EVROverlayError _SetOverlayFromFile(ulong ulOverlayHandle, string pchFilePath);

		[Token(Token = "0x200076A")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x645608", Offset = "0x645608")]
		internal delegate EVROverlayError _GetOverlayTexture(ulong ulOverlayHandle, ref IntPtr pNativeTextureHandle, IntPtr pNativeTextureRef, ref uint pWidth, ref uint pHeight, ref uint pNativeFormat, ref ETextureType pAPIType, ref EColorSpace pColorSpace, ref VRTextureBounds_t pTextureBounds);

		[Token(Token = "0x200076B")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64561C", Offset = "0x64561C")]
		internal delegate EVROverlayError _ReleaseNativeOverlayHandle(ulong ulOverlayHandle, IntPtr pNativeTextureHandle);

		[Token(Token = "0x200076C")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x645630", Offset = "0x645630")]
		internal delegate EVROverlayError _GetOverlayTextureSize(ulong ulOverlayHandle, ref uint pWidth, ref uint pHeight);

		[Token(Token = "0x200076D")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x645644", Offset = "0x645644")]
		internal delegate EVROverlayError _CreateDashboardOverlay(string pchOverlayKey, string pchOverlayFriendlyName, ref ulong pMainHandle, ref ulong pThumbnailHandle);

		[Token(Token = "0x200076E")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x645658", Offset = "0x645658")]
		internal delegate bool _IsDashboardVisible();

		[Token(Token = "0x200076F")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64566C", Offset = "0x64566C")]
		internal delegate bool _IsActiveDashboardOverlay(ulong ulOverlayHandle);

		[Token(Token = "0x2000770")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x645680", Offset = "0x645680")]
		internal delegate EVROverlayError _SetDashboardOverlaySceneProcess(ulong ulOverlayHandle, uint unProcessId);

		[Token(Token = "0x2000771")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x645694", Offset = "0x645694")]
		internal delegate EVROverlayError _GetDashboardOverlaySceneProcess(ulong ulOverlayHandle, ref uint punProcessId);

		[Token(Token = "0x2000772")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x6456A8", Offset = "0x6456A8")]
		internal delegate void _ShowDashboard(string pchOverlayToShow);

		[Token(Token = "0x2000773")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x6456BC", Offset = "0x6456BC")]
		internal delegate uint _GetPrimaryDashboardDevice();

		[Token(Token = "0x2000774")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x6456D0", Offset = "0x6456D0")]
		internal delegate EVROverlayError _ShowKeyboard(int eInputMode, int eLineInputMode, string pchDescription, uint unCharMax, string pchExistingText, bool bUseMinimalMode, ulong uUserValue);

		[Token(Token = "0x2000775")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x6456E4", Offset = "0x6456E4")]
		internal delegate EVROverlayError _ShowKeyboardForOverlay(ulong ulOverlayHandle, int eInputMode, int eLineInputMode, string pchDescription, uint unCharMax, string pchExistingText, bool bUseMinimalMode, ulong uUserValue);

		[Token(Token = "0x2000776")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x6456F8", Offset = "0x6456F8")]
		internal delegate uint _GetKeyboardText(StringBuilder pchText, uint cchText);

		[Token(Token = "0x2000777")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64570C", Offset = "0x64570C")]
		internal delegate void _HideKeyboard();

		[Token(Token = "0x2000778")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x645720", Offset = "0x645720")]
		internal delegate void _SetKeyboardTransformAbsolute(ETrackingUniverseOrigin eTrackingOrigin, ref HmdMatrix34_t pmatTrackingOriginToKeyboardTransform);

		[Token(Token = "0x2000779")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x645734", Offset = "0x645734")]
		internal delegate void _SetKeyboardPositionForOverlay(ulong ulOverlayHandle, HmdRect2_t avoidRect);

		[Token(Token = "0x200077A")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x645748", Offset = "0x645748")]
		internal delegate EVROverlayError _SetOverlayIntersectionMask(ulong ulOverlayHandle, ref VROverlayIntersectionMaskPrimitive_t pMaskPrimitives, uint unNumMaskPrimitives, uint unPrimitiveSize);

		[Token(Token = "0x200077B")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64575C", Offset = "0x64575C")]
		internal delegate EVROverlayError _GetOverlayFlags(ulong ulOverlayHandle, ref uint pFlags);

		[Token(Token = "0x200077C")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x645770", Offset = "0x645770")]
		internal delegate VRMessageOverlayResponse _ShowMessageOverlay(string pchText, string pchCaption, string pchButton0Text, string pchButton1Text, string pchButton2Text, string pchButton3Text);

		[Token(Token = "0x200077D")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x645784", Offset = "0x645784")]
		internal delegate void _CloseMessageOverlay();

		[Token(Token = "0x4000FF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _FindOverlay FindOverlay;

		[Token(Token = "0x4000FFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal _CreateOverlay CreateOverlay;

		[Token(Token = "0x4000FFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal _DestroyOverlay DestroyOverlay;

		[Token(Token = "0x4000FFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal _SetHighQualityOverlay SetHighQualityOverlay;

		[Token(Token = "0x4000FFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal _GetHighQualityOverlay GetHighQualityOverlay;

		[Token(Token = "0x4000FFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal _GetOverlayKey GetOverlayKey;

		[Token(Token = "0x4000FFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal _GetOverlayName GetOverlayName;

		[Token(Token = "0x4001000")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		internal _SetOverlayName SetOverlayName;

		[Token(Token = "0x4001001")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		internal _GetOverlayImageData GetOverlayImageData;

		[Token(Token = "0x4001002")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		internal _GetOverlayErrorNameFromEnum GetOverlayErrorNameFromEnum;

		[Token(Token = "0x4001003")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		internal _SetOverlayRenderingPid SetOverlayRenderingPid;

		[Token(Token = "0x4001004")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		internal _GetOverlayRenderingPid GetOverlayRenderingPid;

		[Token(Token = "0x4001005")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		internal _SetOverlayFlag SetOverlayFlag;

		[Token(Token = "0x4001006")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		internal _GetOverlayFlag GetOverlayFlag;

		[Token(Token = "0x4001007")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		internal _SetOverlayColor SetOverlayColor;

		[Token(Token = "0x4001008")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		internal _GetOverlayColor GetOverlayColor;

		[Token(Token = "0x4001009")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		internal _SetOverlayAlpha SetOverlayAlpha;

		[Token(Token = "0x400100A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		internal _GetOverlayAlpha GetOverlayAlpha;

		[Token(Token = "0x400100B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		internal _SetOverlayTexelAspect SetOverlayTexelAspect;

		[Token(Token = "0x400100C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		internal _GetOverlayTexelAspect GetOverlayTexelAspect;

		[Token(Token = "0x400100D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		internal _SetOverlaySortOrder SetOverlaySortOrder;

		[Token(Token = "0x400100E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		internal _GetOverlaySortOrder GetOverlaySortOrder;

		[Token(Token = "0x400100F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		internal _SetOverlayWidthInMeters SetOverlayWidthInMeters;

		[Token(Token = "0x4001010")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		internal _GetOverlayWidthInMeters GetOverlayWidthInMeters;

		[Token(Token = "0x4001011")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		internal _SetOverlayAutoCurveDistanceRangeInMeters SetOverlayAutoCurveDistanceRangeInMeters;

		[Token(Token = "0x4001012")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		internal _GetOverlayAutoCurveDistanceRangeInMeters GetOverlayAutoCurveDistanceRangeInMeters;

		[Token(Token = "0x4001013")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		internal _SetOverlayTextureColorSpace SetOverlayTextureColorSpace;

		[Token(Token = "0x4001014")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		internal _GetOverlayTextureColorSpace GetOverlayTextureColorSpace;

		[Token(Token = "0x4001015")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		internal _SetOverlayTextureBounds SetOverlayTextureBounds;

		[Token(Token = "0x4001016")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		internal _GetOverlayTextureBounds GetOverlayTextureBounds;

		[Token(Token = "0x4001017")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		internal _GetOverlayRenderModel GetOverlayRenderModel;

		[Token(Token = "0x4001018")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		internal _SetOverlayRenderModel SetOverlayRenderModel;

		[Token(Token = "0x4001019")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		internal _GetOverlayTransformType GetOverlayTransformType;

		[Token(Token = "0x400101A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		internal _SetOverlayTransformAbsolute SetOverlayTransformAbsolute;

		[Token(Token = "0x400101B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		internal _GetOverlayTransformAbsolute GetOverlayTransformAbsolute;

		[Token(Token = "0x400101C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		internal _SetOverlayTransformTrackedDeviceRelative SetOverlayTransformTrackedDeviceRelative;

		[Token(Token = "0x400101D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		internal _GetOverlayTransformTrackedDeviceRelative GetOverlayTransformTrackedDeviceRelative;

		[Token(Token = "0x400101E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		internal _SetOverlayTransformTrackedDeviceComponent SetOverlayTransformTrackedDeviceComponent;

		[Token(Token = "0x400101F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		internal _GetOverlayTransformTrackedDeviceComponent GetOverlayTransformTrackedDeviceComponent;

		[Token(Token = "0x4001020")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		internal _GetOverlayTransformOverlayRelative GetOverlayTransformOverlayRelative;

		[Token(Token = "0x4001021")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		internal _SetOverlayTransformOverlayRelative SetOverlayTransformOverlayRelative;

		[Token(Token = "0x4001022")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		internal _ShowOverlay ShowOverlay;

		[Token(Token = "0x4001023")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		internal _HideOverlay HideOverlay;

		[Token(Token = "0x4001024")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		internal _IsOverlayVisible IsOverlayVisible;

		[Token(Token = "0x4001025")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		internal _GetTransformForOverlayCoordinates GetTransformForOverlayCoordinates;

		[Token(Token = "0x4001026")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		internal _PollNextOverlayEvent PollNextOverlayEvent;

		[Token(Token = "0x4001027")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		internal _GetOverlayInputMethod GetOverlayInputMethod;

		[Token(Token = "0x4001028")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		internal _SetOverlayInputMethod SetOverlayInputMethod;

		[Token(Token = "0x4001029")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		internal _GetOverlayMouseScale GetOverlayMouseScale;

		[Token(Token = "0x400102A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		internal _SetOverlayMouseScale SetOverlayMouseScale;

		[Token(Token = "0x400102B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		internal _ComputeOverlayIntersection ComputeOverlayIntersection;

		[Token(Token = "0x400102C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		internal _IsHoverTargetOverlay IsHoverTargetOverlay;

		[Token(Token = "0x400102D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		internal _GetGamepadFocusOverlay GetGamepadFocusOverlay;

		[Token(Token = "0x400102E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		internal _SetGamepadFocusOverlay SetGamepadFocusOverlay;

		[Token(Token = "0x400102F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		internal _SetOverlayNeighbor SetOverlayNeighbor;

		[Token(Token = "0x4001030")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		internal _MoveGamepadFocusToNeighbor MoveGamepadFocusToNeighbor;

		[Token(Token = "0x4001031")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		internal _SetOverlayDualAnalogTransform SetOverlayDualAnalogTransform;

		[Token(Token = "0x4001032")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		internal _GetOverlayDualAnalogTransform GetOverlayDualAnalogTransform;

		[Token(Token = "0x4001033")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		internal _SetOverlayTexture SetOverlayTexture;

		[Token(Token = "0x4001034")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		internal _ClearOverlayTexture ClearOverlayTexture;

		[Token(Token = "0x4001035")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		internal _SetOverlayRaw SetOverlayRaw;

		[Token(Token = "0x4001036")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		internal _SetOverlayFromFile SetOverlayFromFile;

		[Token(Token = "0x4001037")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		internal _GetOverlayTexture GetOverlayTexture;

		[Token(Token = "0x4001038")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		internal _ReleaseNativeOverlayHandle ReleaseNativeOverlayHandle;

		[Token(Token = "0x4001039")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		internal _GetOverlayTextureSize GetOverlayTextureSize;

		[Token(Token = "0x400103A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		internal _CreateDashboardOverlay CreateDashboardOverlay;

		[Token(Token = "0x400103B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		internal _IsDashboardVisible IsDashboardVisible;

		[Token(Token = "0x400103C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
		internal _IsActiveDashboardOverlay IsActiveDashboardOverlay;

		[Token(Token = "0x400103D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
		internal _SetDashboardOverlaySceneProcess SetDashboardOverlaySceneProcess;

		[Token(Token = "0x400103E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
		internal _GetDashboardOverlaySceneProcess GetDashboardOverlaySceneProcess;

		[Token(Token = "0x400103F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
		internal _ShowDashboard ShowDashboard;

		[Token(Token = "0x4001040")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
		internal _GetPrimaryDashboardDevice GetPrimaryDashboardDevice;

		[Token(Token = "0x4001041")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
		internal _ShowKeyboard ShowKeyboard;

		[Token(Token = "0x4001042")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
		internal _ShowKeyboardForOverlay ShowKeyboardForOverlay;

		[Token(Token = "0x4001043")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
		internal _GetKeyboardText GetKeyboardText;

		[Token(Token = "0x4001044")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
		internal _HideKeyboard HideKeyboard;

		[Token(Token = "0x4001045")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
		internal _SetKeyboardTransformAbsolute SetKeyboardTransformAbsolute;

		[Token(Token = "0x4001046")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
		internal _SetKeyboardPositionForOverlay SetKeyboardPositionForOverlay;

		[Token(Token = "0x4001047")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
		internal _SetOverlayIntersectionMask SetOverlayIntersectionMask;

		[Token(Token = "0x4001048")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
		internal _GetOverlayFlags GetOverlayFlags;

		[Token(Token = "0x4001049")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
		internal _ShowMessageOverlay ShowMessageOverlay;

		[Token(Token = "0x400104A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
		internal _CloseMessageOverlay CloseMessageOverlay;
	}
	[Token(Token = "0x2000294")]
	public struct IVRRenderModels
	{
		[Token(Token = "0x200077E")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x645798", Offset = "0x645798")]
		internal delegate EVRRenderModelError _LoadRenderModel_Async(string pchRenderModelName, ref IntPtr ppRenderModel);

		[Token(Token = "0x200077F")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x6457AC", Offset = "0x6457AC")]
		internal delegate void _FreeRenderModel(IntPtr pRenderModel);

		[Token(Token = "0x2000780")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x6457C0", Offset = "0x6457C0")]
		internal delegate EVRRenderModelError _LoadTexture_Async(int textureId, ref IntPtr ppTexture);

		[Token(Token = "0x2000781")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x6457D4", Offset = "0x6457D4")]
		internal delegate void _FreeTexture(IntPtr pTexture);

		[Token(Token = "0x2000782")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x6457E8", Offset = "0x6457E8")]
		internal delegate EVRRenderModelError _LoadTextureD3D11_Async(int textureId, IntPtr pD3D11Device, ref IntPtr ppD3D11Texture2D);

		[Token(Token = "0x2000783")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x6457FC", Offset = "0x6457FC")]
		internal delegate EVRRenderModelError _LoadIntoTextureD3D11_Async(int textureId, IntPtr pDstTexture);

		[Token(Token = "0x2000784")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x645810", Offset = "0x645810")]
		internal delegate void _FreeTextureD3D11(IntPtr pD3D11Texture2D);

		[Token(Token = "0x2000785")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x645824", Offset = "0x645824")]
		internal delegate uint _GetRenderModelName(uint unRenderModelIndex, StringBuilder pchRenderModelName, uint unRenderModelNameLen);

		[Token(Token = "0x2000786")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x645838", Offset = "0x645838")]
		internal delegate uint _GetRenderModelCount();

		[Token(Token = "0x2000787")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64584C", Offset = "0x64584C")]
		internal delegate uint _GetComponentCount(string pchRenderModelName);

		[Token(Token = "0x2000788")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x645860", Offset = "0x645860")]
		internal delegate uint _GetComponentName(string pchRenderModelName, uint unComponentIndex, StringBuilder pchComponentName, uint unComponentNameLen);

		[Token(Token = "0x2000789")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x645874", Offset = "0x645874")]
		internal delegate ulong _GetComponentButtonMask(string pchRenderModelName, string pchComponentName);

		[Token(Token = "0x200078A")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x645888", Offset = "0x645888")]
		internal delegate uint _GetComponentRenderModelName(string pchRenderModelName, string pchComponentName, StringBuilder pchComponentRenderModelName, uint unComponentRenderModelNameLen);

		[Token(Token = "0x200078B")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64589C", Offset = "0x64589C")]
		internal delegate bool _GetComponentState(string pchRenderModelName, string pchComponentName, ref VRControllerState_t pControllerState, ref RenderModel_ControllerMode_State_t pState, ref RenderModel_ComponentState_t pComponentState);

		[Token(Token = "0x200078C")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x6458B0", Offset = "0x6458B0")]
		internal delegate bool _RenderModelHasComponent(string pchRenderModelName, string pchComponentName);

		[Token(Token = "0x200078D")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x6458C4", Offset = "0x6458C4")]
		internal delegate uint _GetRenderModelThumbnailURL(string pchRenderModelName, StringBuilder pchThumbnailURL, uint unThumbnailURLLen, ref EVRRenderModelError peError);

		[Token(Token = "0x200078E")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x6458D8", Offset = "0x6458D8")]
		internal delegate uint _GetRenderModelOriginalPath(string pchRenderModelName, StringBuilder pchOriginalPath, uint unOriginalPathLen, ref EVRRenderModelError peError);

		[Token(Token = "0x200078F")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x6458EC", Offset = "0x6458EC")]
		internal delegate IntPtr _GetRenderModelErrorNameFromEnum(EVRRenderModelError error);

		[Token(Token = "0x400104B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _LoadRenderModel_Async LoadRenderModel_Async;

		[Token(Token = "0x400104C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal _FreeRenderModel FreeRenderModel;

		[Token(Token = "0x400104D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal _LoadTexture_Async LoadTexture_Async;

		[Token(Token = "0x400104E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal _FreeTexture FreeTexture;

		[Token(Token = "0x400104F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal _LoadTextureD3D11_Async LoadTextureD3D11_Async;

		[Token(Token = "0x4001050")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal _LoadIntoTextureD3D11_Async LoadIntoTextureD3D11_Async;

		[Token(Token = "0x4001051")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal _FreeTextureD3D11 FreeTextureD3D11;

		[Token(Token = "0x4001052")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		internal _GetRenderModelName GetRenderModelName;

		[Token(Token = "0x4001053")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		internal _GetRenderModelCount GetRenderModelCount;

		[Token(Token = "0x4001054")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		internal _GetComponentCount GetComponentCount;

		[Token(Token = "0x4001055")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		internal _GetComponentName GetComponentName;

		[Token(Token = "0x4001056")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		internal _GetComponentButtonMask GetComponentButtonMask;

		[Token(Token = "0x4001057")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		internal _GetComponentRenderModelName GetComponentRenderModelName;

		[Token(Token = "0x4001058")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		internal _GetComponentState GetComponentState;

		[Token(Token = "0x4001059")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		internal _RenderModelHasComponent RenderModelHasComponent;

		[Token(Token = "0x400105A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		internal _GetRenderModelThumbnailURL GetRenderModelThumbnailURL;

		[Token(Token = "0x400105B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		internal _GetRenderModelOriginalPath GetRenderModelOriginalPath;

		[Token(Token = "0x400105C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		internal _GetRenderModelErrorNameFromEnum GetRenderModelErrorNameFromEnum;
	}
	[Token(Token = "0x2000295")]
	public struct IVRNotifications
	{
		[Token(Token = "0x2000790")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x645900", Offset = "0x645900")]
		internal delegate EVRNotificationError _CreateNotification(ulong ulOverlayHandle, ulong ulUserValue, EVRNotificationType type, string pchText, EVRNotificationStyle style, ref NotificationBitmap_t pImage, ref uint pNotificationId);

		[Token(Token = "0x2000791")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x645914", Offset = "0x645914")]
		internal delegate EVRNotificationError _RemoveNotification(uint notificationId);

		[Token(Token = "0x400105D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _CreateNotification CreateNotification;

		[Token(Token = "0x400105E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal _RemoveNotification RemoveNotification;
	}
	[Token(Token = "0x2000296")]
	public struct IVRSettings
	{
		[Token(Token = "0x2000792")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x645928", Offset = "0x645928")]
		internal delegate IntPtr _GetSettingsErrorNameFromEnum(EVRSettingsError eError);

		[Token(Token = "0x2000793")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64593C", Offset = "0x64593C")]
		internal delegate bool _Sync(bool bForce, ref EVRSettingsError peError);

		[Token(Token = "0x2000794")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x645950", Offset = "0x645950")]
		internal delegate void _SetBool(string pchSection, string pchSettingsKey, bool bValue, ref EVRSettingsError peError);

		[Token(Token = "0x2000795")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x645964", Offset = "0x645964")]
		internal delegate void _SetInt32(string pchSection, string pchSettingsKey, int nValue, ref EVRSettingsError peError);

		[Token(Token = "0x2000796")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x645978", Offset = "0x645978")]
		internal delegate void _SetFloat(string pchSection, string pchSettingsKey, float flValue, ref EVRSettingsError peError);

		[Token(Token = "0x2000797")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x64598C", Offset = "0x64598C")]
		internal delegate void _SetString(string pchSection, string pchSettingsKey, string pchValue, ref EVRSettingsError peError);

		[Token(Token = "0x2000798")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x6459A0", Offset = "0x6459A0")]
		internal delegate bool _GetBool(string pchSection, string pchSettingsKey, ref EVRSettingsError peError);

		[Token(Token = "0x2000799")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x6459B4", Offset = "0x6459B4")]
		internal delegate int _GetInt32(string pchSection, string pchSettingsKey, ref EVRSettingsError peError);

		[Token(Token = "0x200079A")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x6459C8", Offset = "0x6459C8")]
		internal delegate float _GetFloat(string pchSection, string pchSettingsKey, ref EVRSettingsError peError);

		[Token(Token = "0x200079B")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x6459DC", Offset = "0x6459DC")]
		internal delegate void _GetString(string pchSection, string pchSettingsKey, StringBuilder pchValue, uint unValueLen, ref EVRSettingsError peError);

		[Token(Token = "0x200079C")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x6459F0", Offset = "0x6459F0")]
		internal delegate void _RemoveSection(string pchSection, ref EVRSettingsError peError);

		[Token(Token = "0x200079D")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x645A04", Offset = "0x645A04")]
		internal delegate void _RemoveKeyInSection(string pchSection, string pchSettingsKey, ref EVRSettingsError peError);

		[Token(Token = "0x400105F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _GetSettingsErrorNameFromEnum GetSettingsErrorNameFromEnum;

		[Token(Token = "0x4001060")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal _Sync Sync;

		[Token(Token = "0x4001061")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal _SetBool SetBool;

		[Token(Token = "0x4001062")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal _SetInt32 SetInt32;

		[Token(Token = "0x4001063")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal _SetFloat SetFloat;

		[Token(Token = "0x4001064")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal _SetString SetString;

		[Token(Token = "0x4001065")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal _GetBool GetBool;

		[Token(Token = "0x4001066")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		internal _GetInt32 GetInt32;

		[Token(Token = "0x4001067")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		internal _GetFloat GetFloat;

		[Token(Token = "0x4001068")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		internal _GetString GetString;

		[Token(Token = "0x4001069")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		internal _RemoveSection RemoveSection;

		[Token(Token = "0x400106A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		internal _RemoveKeyInSection RemoveKeyInSection;
	}
	[Token(Token = "0x2000297")]
	public struct IVRScreenshots
	{
		[Token(Token = "0x200079E")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x645A18", Offset = "0x645A18")]
		internal delegate EVRScreenshotError _RequestScreenshot(ref uint pOutScreenshotHandle, EVRScreenshotType type, string pchPreviewFilename, string pchVRFilename);

		[Token(Token = "0x200079F")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x645A2C", Offset = "0x645A2C")]
		internal delegate EVRScreenshotError _HookScreenshot([In][Out] EVRScreenshotType[] pSupportedTypes, int numTypes);

		[Token(Token = "0x20007A0")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x645A40", Offset = "0x645A40")]
		internal delegate EVRScreenshotType _GetScreenshotPropertyType(uint screenshotHandle, ref EVRScreenshotError pError);

		[Token(Token = "0x20007A1")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x645A54", Offset = "0x645A54")]
		internal delegate uint _GetScreenshotPropertyFilename(uint screenshotHandle, EVRScreenshotPropertyFilenames filenameType, StringBuilder pchFilename, uint cchFilename, ref EVRScreenshotError pError);

		[Token(Token = "0x20007A2")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x645A68", Offset = "0x645A68")]
		internal delegate EVRScreenshotError _UpdateScreenshotProgress(uint screenshotHandle, float flProgress);

		[Token(Token = "0x20007A3")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x645A7C", Offset = "0x645A7C")]
		internal delegate EVRScreenshotError _TakeStereoScreenshot(ref uint pOutScreenshotHandle, string pchPreviewFilename, string pchVRFilename);

		[Token(Token = "0x20007A4")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x645A90", Offset = "0x645A90")]
		internal delegate EVRScreenshotError _SubmitScreenshot(uint screenshotHandle, EVRScreenshotType type, string pchSourcePreviewFilename, string pchSourceVRFilename);

		[Token(Token = "0x400106B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _RequestScreenshot RequestScreenshot;

		[Token(Token = "0x400106C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal _HookScreenshot HookScreenshot;

		[Token(Token = "0x400106D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal _GetScreenshotPropertyType GetScreenshotPropertyType;

		[Token(Token = "0x400106E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal _GetScreenshotPropertyFilename GetScreenshotPropertyFilename;

		[Token(Token = "0x400106F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal _UpdateScreenshotProgress UpdateScreenshotProgress;

		[Token(Token = "0x4001070")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal _TakeStereoScreenshot TakeStereoScreenshot;

		[Token(Token = "0x4001071")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal _SubmitScreenshot SubmitScreenshot;
	}
	[Token(Token = "0x2000298")]
	public struct IVRResources
	{
		[Token(Token = "0x20007A5")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x645AA4", Offset = "0x645AA4")]
		internal delegate uint _LoadSharedResource(string pchResourceName, string pchBuffer, uint unBufferLen);

		[Token(Token = "0x20007A6")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x645AB8", Offset = "0x645AB8")]
		internal delegate uint _GetResourceFullPath(string pchResourceName, string pchResourceTypeDirectory, StringBuilder pchPathBuffer, uint unBufferLen);

		[Token(Token = "0x4001072")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _LoadSharedResource LoadSharedResource;

		[Token(Token = "0x4001073")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal _GetResourceFullPath GetResourceFullPath;
	}
	[Token(Token = "0x2000299")]
	public struct IVRDriverManager
	{
		[Token(Token = "0x20007A7")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x645ACC", Offset = "0x645ACC")]
		internal delegate uint _GetDriverCount();

		[Token(Token = "0x20007A8")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x645AE0", Offset = "0x645AE0")]
		internal delegate uint _GetDriverName(uint nDriver, StringBuilder pchValue, uint unBufferSize);

		[Token(Token = "0x4001074")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _GetDriverCount GetDriverCount;

		[Token(Token = "0x4001075")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal _GetDriverName GetDriverName;
	}
	[Token(Token = "0x200029A")]
	public class CVRSystem
	{
		[Token(Token = "0x20007A9")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x645AF4", Offset = "0x645AF4")]
		internal delegate bool _PollNextEventPacked(ref VREvent_t_Packed pEvent, uint uncbVREvent);

		[StructLayout(2)]
		[Token(Token = "0x20007AA")]
		private struct PollNextEventUnion
		{
			[Token(Token = "0x40028E7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public IVRSystem._PollNextEvent pPollNextEvent;

			[Token(Token = "0x40028E8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public _PollNextEventPacked pPollNextEventPacked;
		}

		[Token(Token = "0x20007AB")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x645B08", Offset = "0x645B08")]
		internal delegate bool _GetControllerStatePacked(uint unControllerDeviceIndex, ref VRControllerState_t_Packed pControllerState, uint unControllerStateSize);

		[StructLayout(2)]
		[Token(Token = "0x20007AC")]
		private struct GetControllerStateUnion
		{
			[Token(Token = "0x40028E9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public IVRSystem._GetControllerState pGetControllerState;

			[Token(Token = "0x40028EA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public _GetControllerStatePacked pGetControllerStatePacked;
		}

		[Token(Token = "0x20007AD")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x645B1C", Offset = "0x645B1C")]
		internal delegate bool _GetControllerStateWithPosePacked(ETrackingUniverseOrigin eOrigin, uint unControllerDeviceIndex, ref VRControllerState_t_Packed pControllerState, uint unControllerStateSize, ref TrackedDevicePose_t pTrackedDevicePose);

		[StructLayout(2)]
		[Token(Token = "0x20007AE")]
		private struct GetControllerStateWithPoseUnion
		{
			[Token(Token = "0x40028EB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public IVRSystem._GetControllerStateWithPose pGetControllerStateWithPose;

			[Token(Token = "0x40028EC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public _GetControllerStateWithPosePacked pGetControllerStateWithPosePacked;
		}

		[Token(Token = "0x4001076")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IVRSystem FnTable;

		[Token(Token = "0x60012BF")]
		[Address(RVA = "0x910998", Offset = "0x910998", VA = "0x910998")]
		internal CVRSystem(IntPtr pInterface)
		{
		}

		[Token(Token = "0x60012C0")]
		[Address(RVA = "0x910A80", Offset = "0x910A80", VA = "0x910A80")]
		public void GetRecommendedRenderTargetSize(ref uint pnWidth, ref uint pnHeight)
		{
		}

		[Token(Token = "0x60012C1")]
		[Address(RVA = "0x910AD0", Offset = "0x910AD0", VA = "0x910AD0")]
		public HmdMatrix44_t GetProjectionMatrix(EVREye eEye, float fNearZ, float fFarZ)
		{
			return default(HmdMatrix44_t);
		}

		[Token(Token = "0x60012C2")]
		[Address(RVA = "0x910B30", Offset = "0x910B30", VA = "0x910B30")]
		public void GetProjectionRaw(EVREye eEye, ref float pfLeft, ref float pfRight, ref float pfTop, ref float pfBottom)
		{
		}

		[Token(Token = "0x60012C3")]
		[Address(RVA = "0x910BA8", Offset = "0x910BA8", VA = "0x910BA8")]
		public bool ComputeDistortion(EVREye eEye, float fU, float fV, ref DistortionCoordinates_t pDistortionCoordinates)
		{
			return default(bool);
		}

		[Token(Token = "0x60012C4")]
		[Address(RVA = "0x910C08", Offset = "0x910C08", VA = "0x910C08")]
		public HmdMatrix34_t GetEyeToHeadTransform(EVREye eEye)
		{
			return default(HmdMatrix34_t);
		}

		[Token(Token = "0x60012C5")]
		[Address(RVA = "0x910C50", Offset = "0x910C50", VA = "0x910C50")]
		public bool GetTimeSinceLastVsync(ref float pfSecondsSinceLastVsync, ref ulong pulFrameCounter)
		{
			return default(bool);
		}

		[Token(Token = "0x60012C6")]
		[Address(RVA = "0x910CA0", Offset = "0x910CA0", VA = "0x910CA0")]
		public int GetD3D9AdapterIndex()
		{
			return default(int);
		}

		[Token(Token = "0x60012C7")]
		[Address(RVA = "0x910CD0", Offset = "0x910CD0", VA = "0x910CD0")]
		public void GetDXGIOutputInfo(ref int pnAdapterIndex)
		{
		}

		[Token(Token = "0x60012C8")]
		[Address(RVA = "0x910D0C", Offset = "0x910D0C", VA = "0x910D0C")]
		public void GetOutputDevice(ref ulong pnDevice, ETextureType textureType, IntPtr pInstance)
		{
		}

		[Token(Token = "0x60012C9")]
		[Address(RVA = "0x910D60", Offset = "0x910D60", VA = "0x910D60")]
		public bool IsDisplayOnDesktop()
		{
			return default(bool);
		}

		[Token(Token = "0x60012CA")]
		[Address(RVA = "0x910D90", Offset = "0x910D90", VA = "0x910D90")]
		public bool SetDisplayVisibility(bool bIsVisibleOnDesktop)
		{
			return default(bool);
		}

		[Token(Token = "0x60012CB")]
		[Address(RVA = "0x910DC8", Offset = "0x910DC8", VA = "0x910DC8")]
		public void GetDeviceToAbsoluteTrackingPose(ETrackingUniverseOrigin eOrigin, float fPredictedSecondsToPhotonsFromNow, TrackedDevicePose_t[] pTrackedDevicePoseArray)
		{
		}

		[Token(Token = "0x60012CC")]
		[Address(RVA = "0x910E38", Offset = "0x910E38", VA = "0x910E38")]
		public void ResetSeatedZeroPose()
		{
		}

		[Token(Token = "0x60012CD")]
		[Address(RVA = "0x910E68", Offset = "0x910E68", VA = "0x910E68")]
		public HmdMatrix34_t GetSeatedZeroPoseToStandingAbsoluteTrackingPose()
		{
			return default(HmdMatrix34_t);
		}

		[Token(Token = "0x60012CE")]
		[Address(RVA = "0x910EA0", Offset = "0x910EA0", VA = "0x910EA0")]
		public HmdMatrix34_t GetRawZeroPoseToStandingAbsoluteTrackingPose()
		{
			return default(HmdMatrix34_t);
		}

		[Token(Token = "0x60012CF")]
		[Address(RVA = "0x910ED8", Offset = "0x910ED8", VA = "0x910ED8")]
		public uint GetSortedTrackedDeviceIndicesOfClass(ETrackedDeviceClass eTrackedDeviceClass, uint[] punTrackedDeviceIndexArray, uint unRelativeToTrackedDeviceIndex)
		{
			return default(uint);
		}

		[Token(Token = "0x60012D0")]
		[Address(RVA = "0x910F40", Offset = "0x910F40", VA = "0x910F40")]
		public EDeviceActivityLevel GetTrackedDeviceActivityLevel(uint unDeviceId)
		{
			return default(EDeviceActivityLevel);
		}

		[Token(Token = "0x60012D1")]
		[Address(RVA = "0x910F78", Offset = "0x910F78", VA = "0x910F78")]
		public void ApplyTransform(ref TrackedDevicePose_t pOutputPose, ref TrackedDevicePose_t pTrackedDevicePose, ref HmdMatrix34_t pTransform)
		{
		}

		[Token(Token = "0x60012D2")]
		[Address(RVA = "0x910FC8", Offset = "0x910FC8", VA = "0x910FC8")]
		public uint GetTrackedDeviceIndexForControllerRole(ETrackedControllerRole unDeviceType)
		{
			return default(uint);
		}

		[Token(Token = "0x60012D3")]
		[Address(RVA = "0x911000", Offset = "0x911000", VA = "0x911000")]
		public ETrackedControllerRole GetControllerRoleForTrackedDeviceIndex(uint unDeviceIndex)
		{
			return default(ETrackedControllerRole);
		}

		[Token(Token = "0x60012D4")]
		[Address(RVA = "0x911038", Offset = "0x911038", VA = "0x911038")]
		public ETrackedDeviceClass GetTrackedDeviceClass(uint unDeviceIndex)
		{
			return default(ETrackedDeviceClass);
		}

		[Token(Token = "0x60012D5")]
		[Address(RVA = "0x911070", Offset = "0x911070", VA = "0x911070")]
		public bool IsTrackedDeviceConnected(uint unDeviceIndex)
		{
			return default(bool);
		}

		[Token(Token = "0x60012D6")]
		[Address(RVA = "0x9110A8", Offset = "0x9110A8", VA = "0x9110A8")]
		public bool GetBoolTrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, ref ETrackedPropertyError pError)
		{
			return default(bool);
		}

		[Token(Token = "0x60012D7")]
		[Address(RVA = "0x9110F8", Offset = "0x9110F8", VA = "0x9110F8")]
		public float GetFloatTrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, ref ETrackedPropertyError pError)
		{
			return default(float);
		}

		[Token(Token = "0x60012D8")]
		[Address(RVA = "0x911148", Offset = "0x911148", VA = "0x911148")]
		public int GetInt32TrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, ref ETrackedPropertyError pError)
		{
			return default(int);
		}

		[Token(Token = "0x60012D9")]
		[Address(RVA = "0x911198", Offset = "0x911198", VA = "0x911198")]
		public ulong GetUint64TrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, ref ETrackedPropertyError pError)
		{
			return default(ulong);
		}

		[Token(Token = "0x60012DA")]
		[Address(RVA = "0x9111E8", Offset = "0x9111E8", VA = "0x9111E8")]
		public HmdMatrix34_t GetMatrix34TrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, ref ETrackedPropertyError pError)
		{
			return default(HmdMatrix34_t);
		}

		[Token(Token = "0x60012DB")]
		[Address(RVA = "0x911248", Offset = "0x911248", VA = "0x911248")]
		public uint GetArrayTrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, uint propType, IntPtr pBuffer, uint unBufferSize, ref ETrackedPropertyError pError)
		{
			return default(uint);
		}

		[Token(Token = "0x60012DC")]
		[Address(RVA = "0x9112C0", Offset = "0x9112C0", VA = "0x9112C0")]
		public uint GetStringTrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, StringBuilder pchValue, uint unBufferSize, ref ETrackedPropertyError pError)
		{
			return default(uint);
		}

		[Token(Token = "0x60012DD")]
		[Address(RVA = "0x911328", Offset = "0x911328", VA = "0x911328")]
		public string GetPropErrorNameFromEnum(ETrackedPropertyError error)
		{
			return null;
		}

		[Token(Token = "0x60012DE")]
		[Address(RVA = "0x9113C4", Offset = "0x9113C4", VA = "0x9113C4")]
		public bool PollNextEvent(ref VREvent_t pEvent, uint uncbVREvent)
		{
			return default(bool);
		}

		[Token(Token = "0x60012DF")]
		[Address(RVA = "0x9119F0", Offset = "0x9119F0", VA = "0x9119F0")]
		public bool PollNextEventWithPose(ETrackingUniverseOrigin eOrigin, ref VREvent_t pEvent, uint uncbVREvent, ref TrackedDevicePose_t pTrackedDevicePose)
		{
			return default(bool);
		}

		[Token(Token = "0x60012E0")]
		[Address(RVA = "0x911A50", Offset = "0x911A50", VA = "0x911A50")]
		public string GetEventTypeNameFromEnum(EVREventType eType)
		{
			return null;
		}

		[Token(Token = "0x60012E1")]
		[Address(RVA = "0x911AEC", Offset = "0x911AEC", VA = "0x911AEC")]
		public HiddenAreaMesh_t GetHiddenAreaMesh(EVREye eEye, EHiddenAreaMeshType type)
		{
			return default(HiddenAreaMesh_t);
		}

		[Token(Token = "0x60012E2")]
		[Address(RVA = "0x911B34", Offset = "0x911B34", VA = "0x911B34")]
		public bool GetControllerState(uint unControllerDeviceIndex, ref VRControllerState_t pControllerState, uint unControllerStateSize)
		{
			return default(bool);
		}

		[Token(Token = "0x60012E3")]
		[Address(RVA = "0x9121C8", Offset = "0x9121C8", VA = "0x9121C8")]
		public bool GetControllerStateWithPose(ETrackingUniverseOrigin eOrigin, uint unControllerDeviceIndex, ref VRControllerState_t pControllerState, uint unControllerStateSize, ref TrackedDevicePose_t pTrackedDevicePose)
		{
			return default(bool);
		}

		[Token(Token = "0x60012E4")]
		[Address(RVA = "0x9128CC", Offset = "0x9128CC", VA = "0x9128CC")]
		public void TriggerHapticPulse(uint unControllerDeviceIndex, uint unAxisId, char usDurationMicroSec)
		{
		}

		[Token(Token = "0x60012E5")]
		[Address(RVA = "0x91291C", Offset = "0x91291C", VA = "0x91291C")]
		public string GetButtonIdNameFromEnum(EVRButtonId eButtonId)
		{
			return null;
		}

		[Token(Token = "0x60012E6")]
		[Address(RVA = "0x9129B8", Offset = "0x9129B8", VA = "0x9129B8")]
		public string GetControllerAxisTypeNameFromEnum(EVRControllerAxisType eAxisType)
		{
			return null;
		}

		[Token(Token = "0x60012E7")]
		[Address(RVA = "0x912A54", Offset = "0x912A54", VA = "0x912A54")]
		public bool IsInputAvailable()
		{
			return default(bool);
		}

		[Token(Token = "0x60012E8")]
		[Address(RVA = "0x912A84", Offset = "0x912A84", VA = "0x912A84")]
		public bool IsSteamVRDrawingControllers()
		{
			return default(bool);
		}

		[Token(Token = "0x60012E9")]
		[Address(RVA = "0x912AB4", Offset = "0x912AB4", VA = "0x912AB4")]
		public bool ShouldApplicationPause()
		{
			return default(bool);
		}

		[Token(Token = "0x60012EA")]
		[Address(RVA = "0x912AE4", Offset = "0x912AE4", VA = "0x912AE4")]
		public bool ShouldApplicationReduceRenderingWork()
		{
			return default(bool);
		}

		[Token(Token = "0x60012EB")]
		[Address(RVA = "0x912B14", Offset = "0x912B14", VA = "0x912B14")]
		public uint DriverDebugRequest(uint unDeviceIndex, string pchRequest, StringBuilder pchResponseBuffer, uint unResponseBufferSize)
		{
			return default(uint);
		}

		[Token(Token = "0x60012EC")]
		[Address(RVA = "0x912B74", Offset = "0x912B74", VA = "0x912B74")]
		public EVRFirmwareError PerformFirmwareUpdate(uint unDeviceIndex)
		{
			return default(EVRFirmwareError);
		}

		[Token(Token = "0x60012ED")]
		[Address(RVA = "0x912BAC", Offset = "0x912BAC", VA = "0x912BAC")]
		public void AcknowledgeQuit_Exiting()
		{
		}

		[Token(Token = "0x60012EE")]
		[Address(RVA = "0x912BDC", Offset = "0x912BDC", VA = "0x912BDC")]
		public void AcknowledgeQuit_UserPrompt()
		{
		}
	}
	[Token(Token = "0x200029B")]
	public class CVRExtendedDisplay
	{
		[Token(Token = "0x4001077")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IVRExtendedDisplay FnTable;

		[Token(Token = "0x60012EF")]
		[Address(RVA = "0x90C930", Offset = "0x90C930", VA = "0x90C930")]
		internal CVRExtendedDisplay(IntPtr pInterface)
		{
		}

		[Token(Token = "0x60012F0")]
		[Address(RVA = "0x90CA18", Offset = "0x90CA18", VA = "0x90CA18")]
		public void GetWindowBounds(ref int pnX, ref int pnY, ref uint pnWidth, ref uint pnHeight)
		{
		}

		[Token(Token = "0x60012F1")]
		[Address(RVA = "0x90CA88", Offset = "0x90CA88", VA = "0x90CA88")]
		public void GetEyeOutputViewport(EVREye eEye, ref uint pnX, ref uint pnY, ref uint pnWidth, ref uint pnHeight)
		{
		}

		[Token(Token = "0x60012F2")]
		[Address(RVA = "0x90CB00", Offset = "0x90CB00", VA = "0x90CB00")]
		public void GetDXGIOutputInfo(ref int pnAdapterIndex, ref int pnAdapterOutputIndex)
		{
		}
	}
	[Token(Token = "0x200029C")]
	public class CVRTrackedCamera
	{
		[Token(Token = "0x4001078")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IVRTrackedCamera FnTable;

		[Token(Token = "0x60012F3")]
		[Address(RVA = "0x912F8C", Offset = "0x912F8C", VA = "0x912F8C")]
		internal CVRTrackedCamera(IntPtr pInterface)
		{
		}

		[Token(Token = "0x60012F4")]
		[Address(RVA = "0x913074", Offset = "0x913074", VA = "0x913074")]
		public string GetCameraErrorNameFromEnum(EVRTrackedCameraError eCameraError)
		{
			return null;
		}

		[Token(Token = "0x60012F5")]
		[Address(RVA = "0x913110", Offset = "0x913110", VA = "0x913110")]
		public EVRTrackedCameraError HasCamera(uint nDeviceIndex, ref bool pHasCamera)
		{
			return default(EVRTrackedCameraError);
		}

		[Token(Token = "0x60012F6")]
		[Address(RVA = "0x91315C", Offset = "0x91315C", VA = "0x91315C")]
		public EVRTrackedCameraError GetCameraFrameSize(uint nDeviceIndex, EVRTrackedCameraFrameType eFrameType, ref uint pnWidth, ref uint pnHeight, ref uint pnFrameBufferSize)
		{
			return default(EVRTrackedCameraError);
		}

		[Token(Token = "0x60012F7")]
		[Address(RVA = "0x9131D0", Offset = "0x9131D0", VA = "0x9131D0")]
		public EVRTrackedCameraError GetCameraIntrinsics(uint nDeviceIndex, EVRTrackedCameraFrameType eFrameType, ref HmdVector2_t pFocalLength, ref HmdVector2_t pCenter)
		{
			return default(EVRTrackedCameraError);
		}

		[Token(Token = "0x60012F8")]
		[Address(RVA = "0x913230", Offset = "0x913230", VA = "0x913230")]
		public EVRTrackedCameraError GetCameraProjection(uint nDeviceIndex, EVRTrackedCameraFrameType eFrameType, float flZNear, float flZFar, ref HmdMatrix44_t pProjection)
		{
			return default(EVRTrackedCameraError);
		}

		[Token(Token = "0x60012F9")]
		[Address(RVA = "0x913298", Offset = "0x913298", VA = "0x913298")]
		public EVRTrackedCameraError AcquireVideoStreamingService(uint nDeviceIndex, ref ulong pHandle)
		{
			return default(EVRTrackedCameraError);
		}

		[Token(Token = "0x60012FA")]
		[Address(RVA = "0x9132E4", Offset = "0x9132E4", VA = "0x9132E4")]
		public EVRTrackedCameraError ReleaseVideoStreamingService(ulong hTrackedCamera)
		{
			return default(EVRTrackedCameraError);
		}

		[Token(Token = "0x60012FB")]
		[Address(RVA = "0x91331C", Offset = "0x91331C", VA = "0x91331C")]
		public EVRTrackedCameraError GetVideoStreamFrameBuffer(ulong hTrackedCamera, EVRTrackedCameraFrameType eFrameType, IntPtr pFrameBuffer, uint nFrameBufferSize, ref CameraVideoStreamFrameHeader_t pFrameHeader, uint nFrameHeaderSize)
		{
			return default(EVRTrackedCameraError);
		}

		[Token(Token = "0x60012FC")]
		[Address(RVA = "0x913394", Offset = "0x913394", VA = "0x913394")]
		public EVRTrackedCameraError GetVideoStreamTextureSize(uint nDeviceIndex, EVRTrackedCameraFrameType eFrameType, ref VRTextureBounds_t pTextureBounds, ref uint pnWidth, ref uint pnHeight)
		{
			return default(EVRTrackedCameraError);
		}

		[Token(Token = "0x60012FD")]
		[Address(RVA = "0x913404", Offset = "0x913404", VA = "0x913404")]
		public EVRTrackedCameraError GetVideoStreamTextureD3D11(ulong hTrackedCamera, EVRTrackedCameraFrameType eFrameType, IntPtr pD3D11DeviceOrResource, ref IntPtr ppD3D11ShaderResourceView, ref CameraVideoStreamFrameHeader_t pFrameHeader, uint nFrameHeaderSize)
		{
			return default(EVRTrackedCameraError);
		}

		[Token(Token = "0x60012FE")]
		[Address(RVA = "0x91347C", Offset = "0x91347C", VA = "0x91347C")]
		public EVRTrackedCameraError GetVideoStreamTextureGL(ulong hTrackedCamera, EVRTrackedCameraFrameType eFrameType, ref uint pglTextureId, ref CameraVideoStreamFrameHeader_t pFrameHeader, uint nFrameHeaderSize)
		{
			return default(EVRTrackedCameraError);
		}

		[Token(Token = "0x60012FF")]
		[Address(RVA = "0x9134E8", Offset = "0x9134E8", VA = "0x9134E8")]
		public EVRTrackedCameraError ReleaseVideoStreamTextureGL(ulong hTrackedCamera, uint glTextureId)
		{
			return default(EVRTrackedCameraError);
		}
	}
	[Token(Token = "0x200029D")]
	public class CVRApplications
	{
		[Token(Token = "0x4001079")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IVRApplications FnTable;

		[Token(Token = "0x6001300")]
		[Address(RVA = "0x8FDC68", Offset = "0x8FDC68", VA = "0x8FDC68")]
		internal CVRApplications(IntPtr pInterface)
		{
		}

		[Token(Token = "0x6001301")]
		[Address(RVA = "0x8FDD50", Offset = "0x8FDD50", VA = "0x8FDD50")]
		public EVRApplicationError AddApplicationManifest(string pchApplicationManifestFullPath, bool bTemporary)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x6001302")]
		[Address(RVA = "0x8FE524", Offset = "0x8FE524", VA = "0x8FE524")]
		public EVRApplicationError RemoveApplicationManifest(string pchApplicationManifestFullPath)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x6001303")]
		[Address(RVA = "0x8FECA8", Offset = "0x8FECA8", VA = "0x8FECA8")]
		public bool IsApplicationInstalled(string pchAppKey)
		{
			return default(bool);
		}

		[Token(Token = "0x6001304")]
		[Address(RVA = "0x8FF434", Offset = "0x8FF434", VA = "0x8FF434")]
		public uint GetApplicationCount()
		{
			return default(uint);
		}

		[Token(Token = "0x6001305")]
		[Address(RVA = "0x8FF87C", Offset = "0x8FF87C", VA = "0x8FF87C")]
		public EVRApplicationError GetApplicationKeyByIndex(uint unApplicationIndex, StringBuilder pchAppKeyBuffer, uint unAppKeyBufferLen)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x6001306")]
		[Address(RVA = "0x8FFD80", Offset = "0x8FFD80", VA = "0x8FFD80")]
		public EVRApplicationError GetApplicationKeyByProcessId(uint unProcessId, StringBuilder pchAppKeyBuffer, uint unAppKeyBufferLen)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x6001307")]
		[Address(RVA = "0x900284", Offset = "0x900284", VA = "0x900284")]
		public EVRApplicationError LaunchApplication(string pchAppKey)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x6001308")]
		[Address(RVA = "0x900A08", Offset = "0x900A08", VA = "0x900A08")]
		public EVRApplicationError LaunchTemplateApplication(string pchTemplateAppKey, string pchNewAppKey, AppOverrideKeys_t[] pKeys)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x6001309")]
		[Address(RVA = "0x901280", Offset = "0x901280", VA = "0x901280")]
		public EVRApplicationError LaunchApplicationFromMimeType(string pchMimeType, string pchArgs)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x600130A")]
		[Address(RVA = "0x901A54", Offset = "0x901A54", VA = "0x901A54")]
		public EVRApplicationError LaunchDashboardOverlay(string pchAppKey)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x600130B")]
		[Address(RVA = "0x9021D8", Offset = "0x9021D8", VA = "0x9021D8")]
		public bool CancelApplicationLaunch(string pchAppKey)
		{
			return default(bool);
		}

		[Token(Token = "0x600130C")]
		[Address(RVA = "0x902964", Offset = "0x902964", VA = "0x902964")]
		public EVRApplicationError IdentifyApplication(uint unProcessId, string pchAppKey)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x600130D")]
		[Address(RVA = "0x902E30", Offset = "0x902E30", VA = "0x902E30")]
		public uint GetApplicationProcessId(string pchAppKey)
		{
			return default(uint);
		}

		[Token(Token = "0x600130E")]
		[Address(RVA = "0x9035B4", Offset = "0x9035B4", VA = "0x9035B4")]
		public string GetApplicationsErrorNameFromEnum(EVRApplicationError error)
		{
			return null;
		}

		[Token(Token = "0x600130F")]
		[Address(RVA = "0x903A9C", Offset = "0x903A9C", VA = "0x903A9C")]
		public uint GetApplicationPropertyString(string pchAppKey, EVRApplicationProperty eProperty, StringBuilder pchPropertyValueBuffer, uint unPropertyValueBufferLen, ref EVRApplicationError peError)
		{
			return default(uint);
		}

		[Token(Token = "0x6001310")]
		[Address(RVA = "0x904350", Offset = "0x904350", VA = "0x904350")]
		public bool GetApplicationPropertyBool(string pchAppKey, EVRApplicationProperty eProperty, ref EVRApplicationError peError)
		{
			return default(bool);
		}

		[Token(Token = "0x6001311")]
		[Address(RVA = "0x904B7C", Offset = "0x904B7C", VA = "0x904B7C")]
		public ulong GetApplicationPropertyUint64(string pchAppKey, EVRApplicationProperty eProperty, ref EVRApplicationError peError)
		{
			return default(ulong);
		}

		[Token(Token = "0x6001312")]
		[Address(RVA = "0x9053A0", Offset = "0x9053A0", VA = "0x9053A0")]
		public EVRApplicationError SetApplicationAutoLaunch(string pchAppKey, bool bAutoLaunch)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x6001313")]
		[Address(RVA = "0x905B74", Offset = "0x905B74", VA = "0x905B74")]
		public bool GetApplicationAutoLaunch(string pchAppKey)
		{
			return default(bool);
		}

		[Token(Token = "0x6001314")]
		[Address(RVA = "0x906300", Offset = "0x906300", VA = "0x906300")]
		public EVRApplicationError SetDefaultApplicationForMimeType(string pchAppKey, string pchMimeType)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x6001315")]
		[Address(RVA = "0x906AD4", Offset = "0x906AD4", VA = "0x906AD4")]
		public bool GetDefaultApplicationForMimeType(string pchMimeType, StringBuilder pchAppKeyBuffer, uint unAppKeyBufferLen)
		{
			return default(bool);
		}

		[Token(Token = "0x6001316")]
		[Address(RVA = "0x907300", Offset = "0x907300", VA = "0x907300")]
		public bool GetApplicationSupportedMimeTypes(string pchAppKey, StringBuilder pchMimeTypesBuffer, uint unMimeTypesBuffer)
		{
			return default(bool);
		}

		[Token(Token = "0x6001317")]
		[Address(RVA = "0x907B2C", Offset = "0x907B2C", VA = "0x907B2C")]
		public uint GetApplicationsThatSupportMimeType(string pchMimeType, StringBuilder pchAppKeysThatSupportBuffer, uint unAppKeysThatSupportBuffer)
		{
			return default(uint);
		}

		[Token(Token = "0x6001318")]
		[Address(RVA = "0x908350", Offset = "0x908350", VA = "0x908350")]
		public uint GetApplicationLaunchArguments(uint unHandle, StringBuilder pchArgs, uint unArgs)
		{
			return default(uint);
		}

		[Token(Token = "0x6001319")]
		[Address(RVA = "0x908854", Offset = "0x908854", VA = "0x908854")]
		public EVRApplicationError GetStartingApplication(StringBuilder pchAppKeyBuffer, uint unAppKeyBufferLen)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x600131A")]
		[Address(RVA = "0x909028", Offset = "0x909028", VA = "0x909028")]
		public EVRApplicationTransitionState GetTransitionState()
		{
			return default(EVRApplicationTransitionState);
		}

		[Token(Token = "0x600131B")]
		[Address(RVA = "0x909470", Offset = "0x909470", VA = "0x909470")]
		public EVRApplicationError PerformApplicationPrelaunchCheck(string pchAppKey)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x600131C")]
		[Address(RVA = "0x909BF4", Offset = "0x909BF4", VA = "0x909BF4")]
		public string GetApplicationsTransitionStateNameFromEnum(EVRApplicationTransitionState state)
		{
			return null;
		}

		[Token(Token = "0x600131D")]
		[Address(RVA = "0x90A0DC", Offset = "0x90A0DC", VA = "0x90A0DC")]
		public bool IsQuitUserPromptRequested()
		{
			return default(bool);
		}

		[Token(Token = "0x600131E")]
		[Address(RVA = "0x90A52C", Offset = "0x90A52C", VA = "0x90A52C")]
		public EVRApplicationError LaunchInternalProcess(string pchBinaryPath, string pchArguments, string pchWorkingDirectory)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x600131F")]
		[Address(RVA = "0x90AD50", Offset = "0x90AD50", VA = "0x90AD50")]
		public uint GetCurrentSceneProcessId()
		{
			return default(uint);
		}
	}
	[Token(Token = "0x200029E")]
	public class CVRChaperone
	{
		[Token(Token = "0x400107A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IVRChaperone FnTable;

		[Token(Token = "0x6001320")]
		[Address(RVA = "0x90B198", Offset = "0x90B198", VA = "0x90B198")]
		internal CVRChaperone(IntPtr pInterface)
		{
		}

		[Token(Token = "0x6001321")]
		[Address(RVA = "0x90B280", Offset = "0x90B280", VA = "0x90B280")]
		public ChaperoneCalibrationState GetCalibrationState()
		{
			return default(ChaperoneCalibrationState);
		}

		[Token(Token = "0x6001322")]
		[Address(RVA = "0x90B2B0", Offset = "0x90B2B0", VA = "0x90B2B0")]
		public bool GetPlayAreaSize(ref float pSizeX, ref float pSizeZ)
		{
			return default(bool);
		}

		[Token(Token = "0x6001323")]
		[Address(RVA = "0x90B300", Offset = "0x90B300", VA = "0x90B300")]
		public bool GetPlayAreaRect(ref HmdQuad_t rect)
		{
			return default(bool);
		}

		[Token(Token = "0x6001324")]
		[Address(RVA = "0x90B338", Offset = "0x90B338", VA = "0x90B338")]
		public void ReloadInfo()
		{
		}

		[Token(Token = "0x6001325")]
		[Address(RVA = "0x90B368", Offset = "0x90B368", VA = "0x90B368")]
		public void SetSceneColor(HmdColor_t color)
		{
		}

		[Token(Token = "0x6001326")]
		[Address(RVA = "0x90B3C8", Offset = "0x90B3C8", VA = "0x90B3C8")]
		public void GetBoundsColor(ref HmdColor_t pOutputColorArray, int nNumOutputColors, float flCollisionBoundsFadeDistance, ref HmdColor_t pOutputCameraColor)
		{
		}

		[Token(Token = "0x6001327")]
		[Address(RVA = "0x90B428", Offset = "0x90B428", VA = "0x90B428")]
		public bool AreBoundsVisible()
		{
			return default(bool);
		}

		[Token(Token = "0x6001328")]
		[Address(RVA = "0x90B458", Offset = "0x90B458", VA = "0x90B458")]
		public void ForceBoundsVisible(bool bForce)
		{
		}
	}
	[Token(Token = "0x200029F")]
	public class CVRChaperoneSetup
	{
		[Token(Token = "0x400107B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IVRChaperoneSetup FnTable;

		[Token(Token = "0x6001329")]
		[Address(RVA = "0x90B490", Offset = "0x90B490", VA = "0x90B490")]
		internal CVRChaperoneSetup(IntPtr pInterface)
		{
		}

		[Token(Token = "0x600132A")]
		[Address(RVA = "0x90B578", Offset = "0x90B578", VA = "0x90B578")]
		public bool CommitWorkingCopy(EChaperoneConfigFile configFile)
		{
			return default(bool);
		}

		[Token(Token = "0x600132B")]
		[Address(RVA = "0x90B5B0", Offset = "0x90B5B0", VA = "0x90B5B0")]
		public void RevertWorkingCopy()
		{
		}

		[Token(Token = "0x600132C")]
		[Address(RVA = "0x90B5E0", Offset = "0x90B5E0", VA = "0x90B5E0")]
		public bool GetWorkingPlayAreaSize(ref float pSizeX, ref float pSizeZ)
		{
			return default(bool);
		}

		[Token(Token = "0x600132D")]
		[Address(RVA = "0x90B630", Offset = "0x90B630", VA = "0x90B630")]
		public bool GetWorkingPlayAreaRect(ref HmdQuad_t rect)
		{
			return default(bool);
		}

		[Token(Token = "0x600132E")]
		[Address(RVA = "0x90B668", Offset = "0x90B668", VA = "0x90B668")]
		public bool GetWorkingCollisionBoundsInfo(out HmdQuad_t[] pQuadsBuffer)
		{
			return default(bool);
		}

		[Token(Token = "0x600132F")]
		[Address(RVA = "0x90B720", Offset = "0x90B720", VA = "0x90B720")]
		public bool GetLiveCollisionBoundsInfo(out HmdQuad_t[] pQuadsBuffer)
		{
			return default(bool);
		}

		[Token(Token = "0x6001330")]
		[Address(RVA = "0x90B7D8", Offset = "0x90B7D8", VA = "0x90B7D8")]
		public bool GetWorkingSeatedZeroPoseToRawTrackingPose(ref HmdMatrix34_t pmatSeatedZeroPoseToRawTrackingPose)
		{
			return default(bool);
		}

		[Token(Token = "0x6001331")]
		[Address(RVA = "0x90B810", Offset = "0x90B810", VA = "0x90B810")]
		public bool GetWorkingStandingZeroPoseToRawTrackingPose(ref HmdMatrix34_t pmatStandingZeroPoseToRawTrackingPose)
		{
			return default(bool);
		}

		[Token(Token = "0x6001332")]
		[Address(RVA = "0x90B848", Offset = "0x90B848", VA = "0x90B848")]
		public void SetWorkingPlayAreaSize(float sizeX, float sizeZ)
		{
		}

		[Token(Token = "0x6001333")]
		[Address(RVA = "0x90B890", Offset = "0x90B890", VA = "0x90B890")]
		public void SetWorkingCollisionBoundsInfo(HmdQuad_t[] pQuadsBuffer)
		{
		}

		[Token(Token = "0x6001334")]
		[Address(RVA = "0x90B8E0", Offset = "0x90B8E0", VA = "0x90B8E0")]
		public void SetWorkingSeatedZeroPoseToRawTrackingPose(ref HmdMatrix34_t pMatSeatedZeroPoseToRawTrackingPose)
		{
		}

		[Token(Token = "0x6001335")]
		[Address(RVA = "0x90B918", Offset = "0x90B918", VA = "0x90B918")]
		public void SetWorkingStandingZeroPoseToRawTrackingPose(ref HmdMatrix34_t pMatStandingZeroPoseToRawTrackingPose)
		{
		}

		[Token(Token = "0x6001336")]
		[Address(RVA = "0x90B950", Offset = "0x90B950", VA = "0x90B950")]
		public void ReloadFromDisk(EChaperoneConfigFile configFile)
		{
		}

		[Token(Token = "0x6001337")]
		[Address(RVA = "0x90B988", Offset = "0x90B988", VA = "0x90B988")]
		public bool GetLiveSeatedZeroPoseToRawTrackingPose(ref HmdMatrix34_t pmatSeatedZeroPoseToRawTrackingPose)
		{
			return default(bool);
		}

		[Token(Token = "0x6001338")]
		[Address(RVA = "0x90B9C0", Offset = "0x90B9C0", VA = "0x90B9C0")]
		public void SetWorkingCollisionBoundsTagsInfo(byte[] pTagsBuffer)
		{
		}

		[Token(Token = "0x6001339")]
		[Address(RVA = "0x90BA10", Offset = "0x90BA10", VA = "0x90BA10")]
		public bool GetLiveCollisionBoundsTagsInfo(out byte[] pTagsBuffer)
		{
			return default(bool);
		}

		[Token(Token = "0x600133A")]
		[Address(RVA = "0x90BAC8", Offset = "0x90BAC8", VA = "0x90BAC8")]
		public bool SetWorkingPhysicalBoundsInfo(HmdQuad_t[] pQuadsBuffer)
		{
			return default(bool);
		}

		[Token(Token = "0x600133B")]
		[Address(RVA = "0x90BB18", Offset = "0x90BB18", VA = "0x90BB18")]
		public bool GetLivePhysicalBoundsInfo(out HmdQuad_t[] pQuadsBuffer)
		{
			return default(bool);
		}

		[Token(Token = "0x600133C")]
		[Address(RVA = "0x90BBD0", Offset = "0x90BBD0", VA = "0x90BBD0")]
		public bool ExportLiveToBuffer(StringBuilder pBuffer, ref uint pnBufferLength)
		{
			return default(bool);
		}

		[Token(Token = "0x600133D")]
		[Address(RVA = "0x90BC1C", Offset = "0x90BC1C", VA = "0x90BC1C")]
		public bool ImportFromBufferToWorking(string pBuffer, uint nImportFlags)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20002A0")]
	public class CVRCompositor
	{
		[Token(Token = "0x400107C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IVRCompositor FnTable;

		[Token(Token = "0x600133E")]
		[Address(RVA = "0x90BC64", Offset = "0x90BC64", VA = "0x90BC64")]
		internal CVRCompositor(IntPtr pInterface)
		{
		}

		[Token(Token = "0x600133F")]
		[Address(RVA = "0x90BD4C", Offset = "0x90BD4C", VA = "0x90BD4C")]
		public void SetTrackingSpace(ETrackingUniverseOrigin eOrigin)
		{
		}

		[Token(Token = "0x6001340")]
		[Address(RVA = "0x90BD84", Offset = "0x90BD84", VA = "0x90BD84")]
		public ETrackingUniverseOrigin GetTrackingSpace()
		{
			return default(ETrackingUniverseOrigin);
		}

		[Token(Token = "0x6001341")]
		[Address(RVA = "0x90BDB4", Offset = "0x90BDB4", VA = "0x90BDB4")]
		public EVRCompositorError WaitGetPoses(TrackedDevicePose_t[] pRenderPoseArray, TrackedDevicePose_t[] pGamePoseArray)
		{
			return default(EVRCompositorError);
		}

		[Token(Token = "0x6001342")]
		[Address(RVA = "0x90BE28", Offset = "0x90BE28", VA = "0x90BE28")]
		public EVRCompositorError GetLastPoses(TrackedDevicePose_t[] pRenderPoseArray, TrackedDevicePose_t[] pGamePoseArray)
		{
			return default(EVRCompositorError);
		}

		[Token(Token = "0x6001343")]
		[Address(RVA = "0x90BE9C", Offset = "0x90BE9C", VA = "0x90BE9C")]
		public EVRCompositorError GetLastPoseForTrackedDeviceIndex(uint unDeviceIndex, ref TrackedDevicePose_t pOutputPose, ref TrackedDevicePose_t pOutputGamePose)
		{
			return default(EVRCompositorError);
		}

		[Token(Token = "0x6001344")]
		[Address(RVA = "0x90BEEC", Offset = "0x90BEEC", VA = "0x90BEEC")]
		public EVRCompositorError Submit(EVREye eEye, ref Texture_t pTexture, ref VRTextureBounds_t pBounds, EVRSubmitFlags nSubmitFlags)
		{
			return default(EVRCompositorError);
		}

		[Token(Token = "0x6001345")]
		[Address(RVA = "0x90BF4C", Offset = "0x90BF4C", VA = "0x90BF4C")]
		public void ClearLastSubmittedFrame()
		{
		}

		[Token(Token = "0x6001346")]
		[Address(RVA = "0x90BF7C", Offset = "0x90BF7C", VA = "0x90BF7C")]
		public void PostPresentHandoff()
		{
		}

		[Token(Token = "0x6001347")]
		[Address(RVA = "0x90BFAC", Offset = "0x90BFAC", VA = "0x90BFAC")]
		public bool GetFrameTiming(ref Compositor_FrameTiming pTiming, uint unFramesAgo)
		{
			return default(bool);
		}

		[Token(Token = "0x6001348")]
		[Address(RVA = "0x90BFF4", Offset = "0x90BFF4", VA = "0x90BFF4")]
		public uint GetFrameTimings(ref Compositor_FrameTiming pTiming, uint nFrames)
		{
			return default(uint);
		}

		[Token(Token = "0x6001349")]
		[Address(RVA = "0x90C03C", Offset = "0x90C03C", VA = "0x90C03C")]
		public float GetFrameTimeRemaining()
		{
			return default(float);
		}

		[Token(Token = "0x600134A")]
		[Address(RVA = "0x90C06C", Offset = "0x90C06C", VA = "0x90C06C")]
		public void GetCumulativeStats(ref Compositor_CumulativeStats pStats, uint nStatsSizeInBytes)
		{
		}

		[Token(Token = "0x600134B")]
		[Address(RVA = "0x90C0B4", Offset = "0x90C0B4", VA = "0x90C0B4")]
		public void FadeToColor(float fSeconds, float fRed, float fGreen, float fBlue, float fAlpha, bool bBackground)
		{
		}

		[Token(Token = "0x600134C")]
		[Address(RVA = "0x90C12C", Offset = "0x90C12C", VA = "0x90C12C")]
		public HmdColor_t GetCurrentFadeColor(bool bBackground)
		{
			return default(HmdColor_t);
		}

		[Token(Token = "0x600134D")]
		[Address(RVA = "0x90C164", Offset = "0x90C164", VA = "0x90C164")]
		public void FadeGrid(float fSeconds, bool bFadeIn)
		{
		}

		[Token(Token = "0x600134E")]
		[Address(RVA = "0x90C1AC", Offset = "0x90C1AC", VA = "0x90C1AC")]
		public float GetCurrentGridAlpha()
		{
			return default(float);
		}

		[Token(Token = "0x600134F")]
		[Address(RVA = "0x90C1DC", Offset = "0x90C1DC", VA = "0x90C1DC")]
		public EVRCompositorError SetSkyboxOverride(Texture_t[] pTextures)
		{
			return default(EVRCompositorError);
		}

		[Token(Token = "0x6001350")]
		[Address(RVA = "0x90C22C", Offset = "0x90C22C", VA = "0x90C22C")]
		public void ClearSkyboxOverride()
		{
		}

		[Token(Token = "0x6001351")]
		[Address(RVA = "0x90C25C", Offset = "0x90C25C", VA = "0x90C25C")]
		public void CompositorBringToFront()
		{
		}

		[Token(Token = "0x6001352")]
		[Address(RVA = "0x90C28C", Offset = "0x90C28C", VA = "0x90C28C")]
		public void CompositorGoToBack()
		{
		}

		[Token(Token = "0x6001353")]
		[Address(RVA = "0x90C2BC", Offset = "0x90C2BC", VA = "0x90C2BC")]
		public void CompositorQuit()
		{
		}

		[Token(Token = "0x6001354")]
		[Address(RVA = "0x90C2EC", Offset = "0x90C2EC", VA = "0x90C2EC")]
		public bool IsFullscreen()
		{
			return default(bool);
		}

		[Token(Token = "0x6001355")]
		[Address(RVA = "0x90C31C", Offset = "0x90C31C", VA = "0x90C31C")]
		public uint GetCurrentSceneFocusProcess()
		{
			return default(uint);
		}

		[Token(Token = "0x6001356")]
		[Address(RVA = "0x90C34C", Offset = "0x90C34C", VA = "0x90C34C")]
		public uint GetLastFrameRenderer()
		{
			return default(uint);
		}

		[Token(Token = "0x6001357")]
		[Address(RVA = "0x90C37C", Offset = "0x90C37C", VA = "0x90C37C")]
		public bool CanRenderScene()
		{
			return default(bool);
		}

		[Token(Token = "0x6001358")]
		[Address(RVA = "0x90C3AC", Offset = "0x90C3AC", VA = "0x90C3AC")]
		public void ShowMirrorWindow()
		{
		}

		[Token(Token = "0x6001359")]
		[Address(RVA = "0x90C3DC", Offset = "0x90C3DC", VA = "0x90C3DC")]
		public void HideMirrorWindow()
		{
		}

		[Token(Token = "0x600135A")]
		[Address(RVA = "0x90C40C", Offset = "0x90C40C", VA = "0x90C40C")]
		public bool IsMirrorWindowVisible()
		{
			return default(bool);
		}

		[Token(Token = "0x600135B")]
		[Address(RVA = "0x90C43C", Offset = "0x90C43C", VA = "0x90C43C")]
		public void CompositorDumpImages()
		{
		}

		[Token(Token = "0x600135C")]
		[Address(RVA = "0x90C46C", Offset = "0x90C46C", VA = "0x90C46C")]
		public bool ShouldAppRenderWithLowResources()
		{
			return default(bool);
		}

		[Token(Token = "0x600135D")]
		[Address(RVA = "0x90C49C", Offset = "0x90C49C", VA = "0x90C49C")]
		public void ForceInterleavedReprojectionOn(bool bOverride)
		{
		}

		[Token(Token = "0x600135E")]
		[Address(RVA = "0x90C4D4", Offset = "0x90C4D4", VA = "0x90C4D4")]
		public void ForceReconnectProcess()
		{
		}

		[Token(Token = "0x600135F")]
		[Address(RVA = "0x90C504", Offset = "0x90C504", VA = "0x90C504")]
		public void SuspendRendering(bool bSuspend)
		{
		}

		[Token(Token = "0x6001360")]
		[Address(RVA = "0x90C53C", Offset = "0x90C53C", VA = "0x90C53C")]
		public EVRCompositorError GetMirrorTextureD3D11(EVREye eEye, IntPtr pD3D11DeviceOrResource, ref IntPtr ppD3D11ShaderResourceView)
		{
			return default(EVRCompositorError);
		}

		[Token(Token = "0x6001361")]
		[Address(RVA = "0x90C58C", Offset = "0x90C58C", VA = "0x90C58C")]
		public void ReleaseMirrorTextureD3D11(IntPtr pD3D11ShaderResourceView)
		{
		}

		[Token(Token = "0x6001362")]
		[Address(RVA = "0x90C5C4", Offset = "0x90C5C4", VA = "0x90C5C4")]
		public EVRCompositorError GetMirrorTextureGL(EVREye eEye, ref uint pglTextureId, IntPtr pglSharedTextureHandle)
		{
			return default(EVRCompositorError);
		}

		[Token(Token = "0x6001363")]
		[Address(RVA = "0x90C618", Offset = "0x90C618", VA = "0x90C618")]
		public bool ReleaseSharedGLTexture(uint glTextureId, IntPtr glSharedTextureHandle)
		{
			return default(bool);
		}

		[Token(Token = "0x6001364")]
		[Address(RVA = "0x90C660", Offset = "0x90C660", VA = "0x90C660")]
		public void LockGLSharedTextureForAccess(IntPtr glSharedTextureHandle)
		{
		}

		[Token(Token = "0x6001365")]
		[Address(RVA = "0x90C698", Offset = "0x90C698", VA = "0x90C698")]
		public void UnlockGLSharedTextureForAccess(IntPtr glSharedTextureHandle)
		{
		}

		[Token(Token = "0x6001366")]
		[Address(RVA = "0x90C6D0", Offset = "0x90C6D0", VA = "0x90C6D0")]
		public uint GetVulkanInstanceExtensionsRequired(StringBuilder pchValue, uint unBufferSize)
		{
			return default(uint);
		}

		[Token(Token = "0x6001367")]
		[Address(RVA = "0x90C718", Offset = "0x90C718", VA = "0x90C718")]
		public uint GetVulkanDeviceExtensionsRequired(IntPtr pPhysicalDevice, StringBuilder pchValue, uint unBufferSize)
		{
			return default(uint);
		}

		[Token(Token = "0x6001368")]
		[Address(RVA = "0x90C768", Offset = "0x90C768", VA = "0x90C768")]
		public void SetExplicitTimingMode(EVRCompositorTimingMode eTimingMode)
		{
		}

		[Token(Token = "0x6001369")]
		[Address(RVA = "0x90C7A0", Offset = "0x90C7A0", VA = "0x90C7A0")]
		public EVRCompositorError SubmitExplicitTimingData()
		{
			return default(EVRCompositorError);
		}
	}
	[Token(Token = "0x20002A1")]
	public class CVROverlay
	{
		[Token(Token = "0x20007AF")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x645B30", Offset = "0x645B30")]
		internal delegate bool _PollNextOverlayEventPacked(ulong ulOverlayHandle, ref VREvent_t_Packed pEvent, uint uncbVREvent);

		[StructLayout(2)]
		[Token(Token = "0x20007B0")]
		private struct PollNextOverlayEventUnion
		{
			[Token(Token = "0x40028ED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public IVROverlay._PollNextOverlayEvent pPollNextOverlayEvent;

			[Token(Token = "0x40028EE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public _PollNextOverlayEventPacked pPollNextOverlayEventPacked;
		}

		[Token(Token = "0x400107D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IVROverlay FnTable;

		[Token(Token = "0x600136A")]
		[Address(RVA = "0x90CCEC", Offset = "0x90CCEC", VA = "0x90CCEC")]
		internal CVROverlay(IntPtr pInterface)
		{
		}

		[Token(Token = "0x600136B")]
		[Address(RVA = "0x90CDD4", Offset = "0x90CDD4", VA = "0x90CDD4")]
		public EVROverlayError FindOverlay(string pchOverlayKey, ref ulong pOverlayHandle)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x600136C")]
		[Address(RVA = "0x90CE20", Offset = "0x90CE20", VA = "0x90CE20")]
		public EVROverlayError CreateOverlay(string pchOverlayKey, string pchOverlayName, ref ulong pOverlayHandle)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x600136D")]
		[Address(RVA = "0x90CE74", Offset = "0x90CE74", VA = "0x90CE74")]
		public EVROverlayError DestroyOverlay(ulong ulOverlayHandle)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x600136E")]
		[Address(RVA = "0x90CEAC", Offset = "0x90CEAC", VA = "0x90CEAC")]
		public EVROverlayError SetHighQualityOverlay(ulong ulOverlayHandle)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x600136F")]
		[Address(RVA = "0x90CEE4", Offset = "0x90CEE4", VA = "0x90CEE4")]
		public ulong GetHighQualityOverlay()
		{
			return default(ulong);
		}

		[Token(Token = "0x6001370")]
		[Address(RVA = "0x90CF14", Offset = "0x90CF14", VA = "0x90CF14")]
		public uint GetOverlayKey(ulong ulOverlayHandle, StringBuilder pchValue, uint unBufferSize, ref EVROverlayError pError)
		{
			return default(uint);
		}

		[Token(Token = "0x6001371")]
		[Address(RVA = "0x90CF74", Offset = "0x90CF74", VA = "0x90CF74")]
		public uint GetOverlayName(ulong ulOverlayHandle, StringBuilder pchValue, uint unBufferSize, ref EVROverlayError pError)
		{
			return default(uint);
		}

		[Token(Token = "0x6001372")]
		[Address(RVA = "0x90CFD4", Offset = "0x90CFD4", VA = "0x90CFD4")]
		public EVROverlayError SetOverlayName(ulong ulOverlayHandle, string pchName)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001373")]
		[Address(RVA = "0x90D01C", Offset = "0x90D01C", VA = "0x90D01C")]
		public EVROverlayError GetOverlayImageData(ulong ulOverlayHandle, IntPtr pvBuffer, uint unBufferSize, ref uint punWidth, ref uint punHeight)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001374")]
		[Address(RVA = "0x90D08C", Offset = "0x90D08C", VA = "0x90D08C")]
		public string GetOverlayErrorNameFromEnum(EVROverlayError error)
		{
			return null;
		}

		[Token(Token = "0x6001375")]
		[Address(RVA = "0x90D128", Offset = "0x90D128", VA = "0x90D128")]
		public EVROverlayError SetOverlayRenderingPid(ulong ulOverlayHandle, uint unPID)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001376")]
		[Address(RVA = "0x90D170", Offset = "0x90D170", VA = "0x90D170")]
		public uint GetOverlayRenderingPid(ulong ulOverlayHandle)
		{
			return default(uint);
		}

		[Token(Token = "0x6001377")]
		[Address(RVA = "0x90D1A8", Offset = "0x90D1A8", VA = "0x90D1A8")]
		public EVROverlayError SetOverlayFlag(ulong ulOverlayHandle, VROverlayFlags eOverlayFlag, bool bEnabled)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001378")]
		[Address(RVA = "0x90D1F8", Offset = "0x90D1F8", VA = "0x90D1F8")]
		public EVROverlayError GetOverlayFlag(ulong ulOverlayHandle, VROverlayFlags eOverlayFlag, ref bool pbEnabled)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001379")]
		[Address(RVA = "0x90D24C", Offset = "0x90D24C", VA = "0x90D24C")]
		public EVROverlayError SetOverlayColor(ulong ulOverlayHandle, float fRed, float fGreen, float fBlue)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x600137A")]
		[Address(RVA = "0x90D2AC", Offset = "0x90D2AC", VA = "0x90D2AC")]
		public EVROverlayError GetOverlayColor(ulong ulOverlayHandle, ref float pfRed, ref float pfGreen, ref float pfBlue)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x600137B")]
		[Address(RVA = "0x90D318", Offset = "0x90D318", VA = "0x90D318")]
		public EVROverlayError SetOverlayAlpha(ulong ulOverlayHandle, float fAlpha)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x600137C")]
		[Address(RVA = "0x90D360", Offset = "0x90D360", VA = "0x90D360")]
		public EVROverlayError GetOverlayAlpha(ulong ulOverlayHandle, ref float pfAlpha)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x600137D")]
		[Address(RVA = "0x90D3AC", Offset = "0x90D3AC", VA = "0x90D3AC")]
		public EVROverlayError SetOverlayTexelAspect(ulong ulOverlayHandle, float fTexelAspect)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x600137E")]
		[Address(RVA = "0x90D3F4", Offset = "0x90D3F4", VA = "0x90D3F4")]
		public EVROverlayError GetOverlayTexelAspect(ulong ulOverlayHandle, ref float pfTexelAspect)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x600137F")]
		[Address(RVA = "0x90D440", Offset = "0x90D440", VA = "0x90D440")]
		public EVROverlayError SetOverlaySortOrder(ulong ulOverlayHandle, uint unSortOrder)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001380")]
		[Address(RVA = "0x90D488", Offset = "0x90D488", VA = "0x90D488")]
		public EVROverlayError GetOverlaySortOrder(ulong ulOverlayHandle, ref uint punSortOrder)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001381")]
		[Address(RVA = "0x90D4D4", Offset = "0x90D4D4", VA = "0x90D4D4")]
		public EVROverlayError SetOverlayWidthInMeters(ulong ulOverlayHandle, float fWidthInMeters)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001382")]
		[Address(RVA = "0x90D51C", Offset = "0x90D51C", VA = "0x90D51C")]
		public EVROverlayError GetOverlayWidthInMeters(ulong ulOverlayHandle, ref float pfWidthInMeters)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001383")]
		[Address(RVA = "0x90D568", Offset = "0x90D568", VA = "0x90D568")]
		public EVROverlayError SetOverlayAutoCurveDistanceRangeInMeters(ulong ulOverlayHandle, float fMinDistanceInMeters, float fMaxDistanceInMeters)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001384")]
		[Address(RVA = "0x90D5B8", Offset = "0x90D5B8", VA = "0x90D5B8")]
		public EVROverlayError GetOverlayAutoCurveDistanceRangeInMeters(ulong ulOverlayHandle, ref float pfMinDistanceInMeters, ref float pfMaxDistanceInMeters)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001385")]
		[Address(RVA = "0x90D610", Offset = "0x90D610", VA = "0x90D610")]
		public EVROverlayError SetOverlayTextureColorSpace(ulong ulOverlayHandle, EColorSpace eTextureColorSpace)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001386")]
		[Address(RVA = "0x90D658", Offset = "0x90D658", VA = "0x90D658")]
		public EVROverlayError GetOverlayTextureColorSpace(ulong ulOverlayHandle, ref EColorSpace peTextureColorSpace)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001387")]
		[Address(RVA = "0x90D6A0", Offset = "0x90D6A0", VA = "0x90D6A0")]
		public EVROverlayError SetOverlayTextureBounds(ulong ulOverlayHandle, ref VRTextureBounds_t pOverlayTextureBounds)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001388")]
		[Address(RVA = "0x90D6E8", Offset = "0x90D6E8", VA = "0x90D6E8")]
		public EVROverlayError GetOverlayTextureBounds(ulong ulOverlayHandle, ref VRTextureBounds_t pOverlayTextureBounds)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001389")]
		[Address(RVA = "0x90D730", Offset = "0x90D730", VA = "0x90D730")]
		public uint GetOverlayRenderModel(ulong ulOverlayHandle, StringBuilder pchValue, uint unBufferSize, ref HmdColor_t pColor, ref EVROverlayError pError)
		{
			return default(uint);
		}

		[Token(Token = "0x600138A")]
		[Address(RVA = "0x90D798", Offset = "0x90D798", VA = "0x90D798")]
		public EVROverlayError SetOverlayRenderModel(ulong ulOverlayHandle, string pchRenderModel, ref HmdColor_t pColor)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x600138B")]
		[Address(RVA = "0x90D7E8", Offset = "0x90D7E8", VA = "0x90D7E8")]
		public EVROverlayError GetOverlayTransformType(ulong ulOverlayHandle, ref VROverlayTransformType peTransformType)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x600138C")]
		[Address(RVA = "0x90D830", Offset = "0x90D830", VA = "0x90D830")]
		public EVROverlayError SetOverlayTransformAbsolute(ulong ulOverlayHandle, ETrackingUniverseOrigin eTrackingOrigin, ref HmdMatrix34_t pmatTrackingOriginToOverlayTransform)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x600138D")]
		[Address(RVA = "0x90D880", Offset = "0x90D880", VA = "0x90D880")]
		public EVROverlayError GetOverlayTransformAbsolute(ulong ulOverlayHandle, ref ETrackingUniverseOrigin peTrackingOrigin, ref HmdMatrix34_t pmatTrackingOriginToOverlayTransform)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x600138E")]
		[Address(RVA = "0x90D8D0", Offset = "0x90D8D0", VA = "0x90D8D0")]
		public EVROverlayError SetOverlayTransformTrackedDeviceRelative(ulong ulOverlayHandle, uint unTrackedDevice, ref HmdMatrix34_t pmatTrackedDeviceToOverlayTransform)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x600138F")]
		[Address(RVA = "0x90D920", Offset = "0x90D920", VA = "0x90D920")]
		public EVROverlayError GetOverlayTransformTrackedDeviceRelative(ulong ulOverlayHandle, ref uint punTrackedDevice, ref HmdMatrix34_t pmatTrackedDeviceToOverlayTransform)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001390")]
		[Address(RVA = "0x90D974", Offset = "0x90D974", VA = "0x90D974")]
		public EVROverlayError SetOverlayTransformTrackedDeviceComponent(ulong ulOverlayHandle, uint unDeviceIndex, string pchComponentName)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001391")]
		[Address(RVA = "0x90D9C4", Offset = "0x90D9C4", VA = "0x90D9C4")]
		public EVROverlayError GetOverlayTransformTrackedDeviceComponent(ulong ulOverlayHandle, ref uint punDeviceIndex, StringBuilder pchComponentName, uint unComponentNameSize)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001392")]
		[Address(RVA = "0x90DA28", Offset = "0x90DA28", VA = "0x90DA28")]
		public EVROverlayError GetOverlayTransformOverlayRelative(ulong ulOverlayHandle, ref ulong ulOverlayHandleParent, ref HmdMatrix34_t pmatParentOverlayToOverlayTransform)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001393")]
		[Address(RVA = "0x90DA7C", Offset = "0x90DA7C", VA = "0x90DA7C")]
		public EVROverlayError SetOverlayTransformOverlayRelative(ulong ulOverlayHandle, ulong ulOverlayHandleParent, ref HmdMatrix34_t pmatParentOverlayToOverlayTransform)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001394")]
		[Address(RVA = "0x90DACC", Offset = "0x90DACC", VA = "0x90DACC")]
		public EVROverlayError ShowOverlay(ulong ulOverlayHandle)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001395")]
		[Address(RVA = "0x90DB04", Offset = "0x90DB04", VA = "0x90DB04")]
		public EVROverlayError HideOverlay(ulong ulOverlayHandle)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001396")]
		[Address(RVA = "0x90DB3C", Offset = "0x90DB3C", VA = "0x90DB3C")]
		public bool IsOverlayVisible(ulong ulOverlayHandle)
		{
			return default(bool);
		}

		[Token(Token = "0x6001397")]
		[Address(RVA = "0x90DB74", Offset = "0x90DB74", VA = "0x90DB74")]
		public EVROverlayError GetTransformForOverlayCoordinates(ulong ulOverlayHandle, ETrackingUniverseOrigin eTrackingOrigin, HmdVector2_t coordinatesInOverlay, ref HmdMatrix34_t pmatTransform)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001398")]
		[Address(RVA = "0x90DBDC", Offset = "0x90DBDC", VA = "0x90DBDC")]
		public bool PollNextOverlayEvent(ulong ulOverlayHandle, ref VREvent_t pEvent, uint uncbVREvent)
		{
			return default(bool);
		}

		[Token(Token = "0x6001399")]
		[Address(RVA = "0x90E24C", Offset = "0x90E24C", VA = "0x90E24C")]
		public EVROverlayError GetOverlayInputMethod(ulong ulOverlayHandle, ref VROverlayInputMethod peInputMethod)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x600139A")]
		[Address(RVA = "0x90E294", Offset = "0x90E294", VA = "0x90E294")]
		public EVROverlayError SetOverlayInputMethod(ulong ulOverlayHandle, VROverlayInputMethod eInputMethod)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x600139B")]
		[Address(RVA = "0x90E2DC", Offset = "0x90E2DC", VA = "0x90E2DC")]
		public EVROverlayError GetOverlayMouseScale(ulong ulOverlayHandle, ref HmdVector2_t pvecMouseScale)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x600139C")]
		[Address(RVA = "0x90E324", Offset = "0x90E324", VA = "0x90E324")]
		public EVROverlayError SetOverlayMouseScale(ulong ulOverlayHandle, ref HmdVector2_t pvecMouseScale)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x600139D")]
		[Address(RVA = "0x90E36C", Offset = "0x90E36C", VA = "0x90E36C")]
		public bool ComputeOverlayIntersection(ulong ulOverlayHandle, ref VROverlayIntersectionParams_t pParams, ref VROverlayIntersectionResults_t pResults)
		{
			return default(bool);
		}

		[Token(Token = "0x600139E")]
		[Address(RVA = "0x90E3BC", Offset = "0x90E3BC", VA = "0x90E3BC")]
		public bool IsHoverTargetOverlay(ulong ulOverlayHandle)
		{
			return default(bool);
		}

		[Token(Token = "0x600139F")]
		[Address(RVA = "0x90E3F4", Offset = "0x90E3F4", VA = "0x90E3F4")]
		public ulong GetGamepadFocusOverlay()
		{
			return default(ulong);
		}

		[Token(Token = "0x60013A0")]
		[Address(RVA = "0x90E424", Offset = "0x90E424", VA = "0x90E424")]
		public EVROverlayError SetGamepadFocusOverlay(ulong ulNewFocusOverlay)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x60013A1")]
		[Address(RVA = "0x90E45C", Offset = "0x90E45C", VA = "0x90E45C")]
		public EVROverlayError SetOverlayNeighbor(EOverlayDirection eDirection, ulong ulFrom, ulong ulTo)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x60013A2")]
		[Address(RVA = "0x90E4AC", Offset = "0x90E4AC", VA = "0x90E4AC")]
		public EVROverlayError MoveGamepadFocusToNeighbor(EOverlayDirection eDirection, ulong ulFrom)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x60013A3")]
		[Address(RVA = "0x90E4F4", Offset = "0x90E4F4", VA = "0x90E4F4")]
		public EVROverlayError SetOverlayDualAnalogTransform(ulong ulOverlay, EDualAnalogWhich eWhich, IntPtr vCenter, float fRadius)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x60013A4")]
		[Address(RVA = "0x90E554", Offset = "0x90E554", VA = "0x90E554")]
		public EVROverlayError GetOverlayDualAnalogTransform(ulong ulOverlay, EDualAnalogWhich eWhich, ref HmdVector2_t pvCenter, ref float pfRadius)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x60013A5")]
		[Address(RVA = "0x90E5B8", Offset = "0x90E5B8", VA = "0x90E5B8")]
		public EVROverlayError SetOverlayTexture(ulong ulOverlayHandle, ref Texture_t pTexture)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x60013A6")]
		[Address(RVA = "0x90E600", Offset = "0x90E600", VA = "0x90E600")]
		public EVROverlayError ClearOverlayTexture(ulong ulOverlayHandle)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x60013A7")]
		[Address(RVA = "0x90E638", Offset = "0x90E638", VA = "0x90E638")]
		public EVROverlayError SetOverlayRaw(ulong ulOverlayHandle, IntPtr pvBuffer, uint unWidth, uint unHeight, uint unDepth)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x60013A8")]
		[Address(RVA = "0x90E6A0", Offset = "0x90E6A0", VA = "0x90E6A0")]
		public EVROverlayError SetOverlayFromFile(ulong ulOverlayHandle, string pchFilePath)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x60013A9")]
		[Address(RVA = "0x90E6E8", Offset = "0x90E6E8", VA = "0x90E6E8")]
		public EVROverlayError GetOverlayTexture(ulong ulOverlayHandle, ref IntPtr pNativeTextureHandle, IntPtr pNativeTextureRef, ref uint pWidth, ref uint pHeight, ref uint pNativeFormat, ref ETextureType pAPIType, ref EColorSpace pColorSpace, ref VRTextureBounds_t pTextureBounds)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x60013AA")]
		[Address(RVA = "0x90E784", Offset = "0x90E784", VA = "0x90E784")]
		public EVROverlayError ReleaseNativeOverlayHandle(ulong ulOverlayHandle, IntPtr pNativeTextureHandle)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x60013AB")]
		[Address(RVA = "0x90E7CC", Offset = "0x90E7CC", VA = "0x90E7CC")]
		public EVROverlayError GetOverlayTextureSize(ulong ulOverlayHandle, ref uint pWidth, ref uint pHeight)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x60013AC")]
		[Address(RVA = "0x90E824", Offset = "0x90E824", VA = "0x90E824")]
		public EVROverlayError CreateDashboardOverlay(string pchOverlayKey, string pchOverlayFriendlyName, ref ulong pMainHandle, ref ulong pThumbnailHandle)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x60013AD")]
		[Address(RVA = "0x90E88C", Offset = "0x90E88C", VA = "0x90E88C")]
		public bool IsDashboardVisible()
		{
			return default(bool);
		}

		[Token(Token = "0x60013AE")]
		[Address(RVA = "0x90E8BC", Offset = "0x90E8BC", VA = "0x90E8BC")]
		public bool IsActiveDashboardOverlay(ulong ulOverlayHandle)
		{
			return default(bool);
		}

		[Token(Token = "0x60013AF")]
		[Address(RVA = "0x90E8F4", Offset = "0x90E8F4", VA = "0x90E8F4")]
		public EVROverlayError SetDashboardOverlaySceneProcess(ulong ulOverlayHandle, uint unProcessId)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x60013B0")]
		[Address(RVA = "0x90E93C", Offset = "0x90E93C", VA = "0x90E93C")]
		public EVROverlayError GetDashboardOverlaySceneProcess(ulong ulOverlayHandle, ref uint punProcessId)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x60013B1")]
		[Address(RVA = "0x90E988", Offset = "0x90E988", VA = "0x90E988")]
		public void ShowDashboard(string pchOverlayToShow)
		{
		}

		[Token(Token = "0x60013B2")]
		[Address(RVA = "0x90E9C0", Offset = "0x90E9C0", VA = "0x90E9C0")]
		public uint GetPrimaryDashboardDevice()
		{
			return default(uint);
		}

		[Token(Token = "0x60013B3")]
		[Address(RVA = "0x90E9F0", Offset = "0x90E9F0", VA = "0x90E9F0")]
		public EVROverlayError ShowKeyboard(int eInputMode, int eLineInputMode, string pchDescription, uint unCharMax, string pchExistingText, bool bUseMinimalMode, ulong uUserValue)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x60013B4")]
		[Address(RVA = "0x90EA70", Offset = "0x90EA70", VA = "0x90EA70")]
		public EVROverlayError ShowKeyboardForOverlay(ulong ulOverlayHandle, int eInputMode, int eLineInputMode, string pchDescription, uint unCharMax, string pchExistingText, bool bUseMinimalMode, ulong uUserValue)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x60013B5")]
		[Address(RVA = "0x90EAFC", Offset = "0x90EAFC", VA = "0x90EAFC")]
		public uint GetKeyboardText(StringBuilder pchText, uint cchText)
		{
			return default(uint);
		}

		[Token(Token = "0x60013B6")]
		[Address(RVA = "0x90EB44", Offset = "0x90EB44", VA = "0x90EB44")]
		public void HideKeyboard()
		{
		}

		[Token(Token = "0x60013B7")]
		[Address(RVA = "0x90EB74", Offset = "0x90EB74", VA = "0x90EB74")]
		public void SetKeyboardTransformAbsolute(ETrackingUniverseOrigin eTrackingOrigin, ref HmdMatrix34_t pmatTrackingOriginToKeyboardTransform)
		{
		}

		[Token(Token = "0x60013B8")]
		[Address(RVA = "0x90EBBC", Offset = "0x90EBBC", VA = "0x90EBBC")]
		public void SetKeyboardPositionForOverlay(ulong ulOverlayHandle, HmdRect2_t avoidRect)
		{
		}

		[Token(Token = "0x60013B9")]
		[Address(RVA = "0x90EC24", Offset = "0x90EC24", VA = "0x90EC24")]
		public EVROverlayError SetOverlayIntersectionMask(ulong ulOverlayHandle, ref VROverlayIntersectionMaskPrimitive_t pMaskPrimitives, uint unNumMaskPrimitives, uint unPrimitiveSize)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x60013BA")]
		[Address(RVA = "0x90EC84", Offset = "0x90EC84", VA = "0x90EC84")]
		public EVROverlayError GetOverlayFlags(ulong ulOverlayHandle, ref uint pFlags)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x60013BB")]
		[Address(RVA = "0x90ECD0", Offset = "0x90ECD0", VA = "0x90ECD0")]
		public VRMessageOverlayResponse ShowMessageOverlay(string pchText, string pchCaption, string pchButton0Text, string pchButton1Text, string pchButton2Text, string pchButton3Text)
		{
			return default(VRMessageOverlayResponse);
		}

		[Token(Token = "0x60013BC")]
		[Address(RVA = "0x90ED48", Offset = "0x90ED48", VA = "0x90ED48")]
		public void CloseMessageOverlay()
		{
		}
	}
	[Token(Token = "0x20002A2")]
	public class CVRRenderModels
	{
		[Token(Token = "0x20007B1")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x645B44", Offset = "0x645B44")]
		internal delegate bool _GetComponentStatePacked(string pchRenderModelName, string pchComponentName, ref VRControllerState_t_Packed pControllerState, ref RenderModel_ControllerMode_State_t pState, ref RenderModel_ComponentState_t pComponentState);

		[StructLayout(2)]
		[Token(Token = "0x20007B2")]
		private struct GetComponentStateUnion
		{
			[Token(Token = "0x40028EF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public IVRRenderModels._GetComponentState pGetComponentState;

			[Token(Token = "0x40028F0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public _GetComponentStatePacked pGetComponentStatePacked;
		}

		[Token(Token = "0x400107E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IVRRenderModels FnTable;

		[Token(Token = "0x60013BD")]
		[Address(RVA = "0x90EE9C", Offset = "0x90EE9C", VA = "0x90EE9C")]
		internal CVRRenderModels(IntPtr pInterface)
		{
		}

		[Token(Token = "0x60013BE")]
		[Address(RVA = "0x90EF84", Offset = "0x90EF84", VA = "0x90EF84")]
		public EVRRenderModelError LoadRenderModel_Async(string pchRenderModelName, ref IntPtr ppRenderModel)
		{
			return default(EVRRenderModelError);
		}

		[Token(Token = "0x60013BF")]
		[Address(RVA = "0x90EFCC", Offset = "0x90EFCC", VA = "0x90EFCC")]
		public void FreeRenderModel(IntPtr pRenderModel)
		{
		}

		[Token(Token = "0x60013C0")]
		[Address(RVA = "0x90F004", Offset = "0x90F004", VA = "0x90F004")]
		public EVRRenderModelError LoadTexture_Async(int textureId, ref IntPtr ppTexture)
		{
			return default(EVRRenderModelError);
		}

		[Token(Token = "0x60013C1")]
		[Address(RVA = "0x90F04C", Offset = "0x90F04C", VA = "0x90F04C")]
		public void FreeTexture(IntPtr pTexture)
		{
		}

		[Token(Token = "0x60013C2")]
		[Address(RVA = "0x90F084", Offset = "0x90F084", VA = "0x90F084")]
		public EVRRenderModelError LoadTextureD3D11_Async(int textureId, IntPtr pD3D11Device, ref IntPtr ppD3D11Texture2D)
		{
			return default(EVRRenderModelError);
		}

		[Token(Token = "0x60013C3")]
		[Address(RVA = "0x90F0D4", Offset = "0x90F0D4", VA = "0x90F0D4")]
		public EVRRenderModelError LoadIntoTextureD3D11_Async(int textureId, IntPtr pDstTexture)
		{
			return default(EVRRenderModelError);
		}

		[Token(Token = "0x60013C4")]
		[Address(RVA = "0x90F11C", Offset = "0x90F11C", VA = "0x90F11C")]
		public void FreeTextureD3D11(IntPtr pD3D11Texture2D)
		{
		}

		[Token(Token = "0x60013C5")]
		[Address(RVA = "0x90F154", Offset = "0x90F154", VA = "0x90F154")]
		public uint GetRenderModelName(uint unRenderModelIndex, StringBuilder pchRenderModelName, uint unRenderModelNameLen)
		{
			return default(uint);
		}

		[Token(Token = "0x60013C6")]
		[Address(RVA = "0x90F1A4", Offset = "0x90F1A4", VA = "0x90F1A4")]
		public uint GetRenderModelCount()
		{
			return default(uint);
		}

		[Token(Token = "0x60013C7")]
		[Address(RVA = "0x90F1D4", Offset = "0x90F1D4", VA = "0x90F1D4")]
		public uint GetComponentCount(string pchRenderModelName)
		{
			return default(uint);
		}

		[Token(Token = "0x60013C8")]
		[Address(RVA = "0x90F20C", Offset = "0x90F20C", VA = "0x90F20C")]
		public uint GetComponentName(string pchRenderModelName, uint unComponentIndex, StringBuilder pchComponentName, uint unComponentNameLen)
		{
			return default(uint);
		}

		[Token(Token = "0x60013C9")]
		[Address(RVA = "0x90F26C", Offset = "0x90F26C", VA = "0x90F26C")]
		public ulong GetComponentButtonMask(string pchRenderModelName, string pchComponentName)
		{
			return default(ulong);
		}

		[Token(Token = "0x60013CA")]
		[Address(RVA = "0x90F2B4", Offset = "0x90F2B4", VA = "0x90F2B4")]
		public uint GetComponentRenderModelName(string pchRenderModelName, string pchComponentName, StringBuilder pchComponentRenderModelName, uint unComponentRenderModelNameLen)
		{
			return default(uint);
		}

		[Token(Token = "0x60013CB")]
		[Address(RVA = "0x90F314", Offset = "0x90F314", VA = "0x90F314")]
		public bool GetComponentState(string pchRenderModelName, string pchComponentName, ref VRControllerState_t pControllerState, ref RenderModel_ControllerMode_State_t pState, ref RenderModel_ComponentState_t pComponentState)
		{
			return default(bool);
		}

		[Token(Token = "0x60013CC")]
		[Address(RVA = "0x90FC90", Offset = "0x90FC90", VA = "0x90FC90")]
		public bool RenderModelHasComponent(string pchRenderModelName, string pchComponentName)
		{
			return default(bool);
		}

		[Token(Token = "0x60013CD")]
		[Address(RVA = "0x90FCD8", Offset = "0x90FCD8", VA = "0x90FCD8")]
		public uint GetRenderModelThumbnailURL(string pchRenderModelName, StringBuilder pchThumbnailURL, uint unThumbnailURLLen, ref EVRRenderModelError peError)
		{
			return default(uint);
		}

		[Token(Token = "0x60013CE")]
		[Address(RVA = "0x90FD38", Offset = "0x90FD38", VA = "0x90FD38")]
		public uint GetRenderModelOriginalPath(string pchRenderModelName, StringBuilder pchOriginalPath, uint unOriginalPathLen, ref EVRRenderModelError peError)
		{
			return default(uint);
		}

		[Token(Token = "0x60013CF")]
		[Address(RVA = "0x90FD98", Offset = "0x90FD98", VA = "0x90FD98")]
		public string GetRenderModelErrorNameFromEnum(EVRRenderModelError error)
		{
			return null;
		}
	}
	[Token(Token = "0x20002A3")]
	public class CVRNotifications
	{
		[Token(Token = "0x400107F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IVRNotifications FnTable;

		[Token(Token = "0x60013D0")]
		[Address(RVA = "0x90CB50", Offset = "0x90CB50", VA = "0x90CB50")]
		internal CVRNotifications(IntPtr pInterface)
		{
		}

		[Token(Token = "0x60013D1")]
		[Address(RVA = "0x90CC30", Offset = "0x90CC30", VA = "0x90CC30")]
		public EVRNotificationError CreateNotification(ulong ulOverlayHandle, ulong ulUserValue, EVRNotificationType type, string pchText, EVRNotificationStyle style, ref NotificationBitmap_t pImage, ref uint pNotificationId)
		{
			return default(EVRNotificationError);
		}

		[Token(Token = "0x60013D2")]
		[Address(RVA = "0x90CCB4", Offset = "0x90CCB4", VA = "0x90CCB4")]
		public EVRNotificationError RemoveNotification(uint notificationId)
		{
			return default(EVRNotificationError);
		}
	}
	[Token(Token = "0x20002A4")]
	public class CVRSettings
	{
		[Token(Token = "0x4001080")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IVRSettings FnTable;

		[Token(Token = "0x60013D3")]
		[Address(RVA = "0x91045C", Offset = "0x91045C", VA = "0x91045C")]
		internal CVRSettings(IntPtr pInterface)
		{
		}

		[Token(Token = "0x60013D4")]
		[Address(RVA = "0x910544", Offset = "0x910544", VA = "0x910544")]
		public string GetSettingsErrorNameFromEnum(EVRSettingsError eError)
		{
			return null;
		}

		[Token(Token = "0x60013D5")]
		[Address(RVA = "0x9105E0", Offset = "0x9105E0", VA = "0x9105E0")]
		public bool Sync(bool bForce, ref EVRSettingsError peError)
		{
			return default(bool);
		}

		[Token(Token = "0x60013D6")]
		[Address(RVA = "0x910628", Offset = "0x910628", VA = "0x910628")]
		public void SetBool(string pchSection, string pchSettingsKey, bool bValue, ref EVRSettingsError peError)
		{
		}

		[Token(Token = "0x60013D7")]
		[Address(RVA = "0x910688", Offset = "0x910688", VA = "0x910688")]
		public void SetInt32(string pchSection, string pchSettingsKey, int nValue, ref EVRSettingsError peError)
		{
		}

		[Token(Token = "0x60013D8")]
		[Address(RVA = "0x9106E8", Offset = "0x9106E8", VA = "0x9106E8")]
		public void SetFloat(string pchSection, string pchSettingsKey, float flValue, ref EVRSettingsError peError)
		{
		}

		[Token(Token = "0x60013D9")]
		[Address(RVA = "0x910748", Offset = "0x910748", VA = "0x910748")]
		public void SetString(string pchSection, string pchSettingsKey, string pchValue, ref EVRSettingsError peError)
		{
		}

		[Token(Token = "0x60013DA")]
		[Address(RVA = "0x9107A8", Offset = "0x9107A8", VA = "0x9107A8")]
		public bool GetBool(string pchSection, string pchSettingsKey, ref EVRSettingsError peError)
		{
			return default(bool);
		}

		[Token(Token = "0x60013DB")]
		[Address(RVA = "0x9107F8", Offset = "0x9107F8", VA = "0x9107F8")]
		public int GetInt32(string pchSection, string pchSettingsKey, ref EVRSettingsError peError)
		{
			return default(int);
		}

		[Token(Token = "0x60013DC")]
		[Address(RVA = "0x910848", Offset = "0x910848", VA = "0x910848")]
		public float GetFloat(string pchSection, string pchSettingsKey, ref EVRSettingsError peError)
		{
			return default(float);
		}

		[Token(Token = "0x60013DD")]
		[Address(RVA = "0x910898", Offset = "0x910898", VA = "0x910898")]
		public void GetString(string pchSection, string pchSettingsKey, StringBuilder pchValue, uint unValueLen, ref EVRSettingsError peError)
		{
		}

		[Token(Token = "0x60013DE")]
		[Address(RVA = "0x910900", Offset = "0x910900", VA = "0x910900")]
		public void RemoveSection(string pchSection, ref EVRSettingsError peError)
		{
		}

		[Token(Token = "0x60013DF")]
		[Address(RVA = "0x910948", Offset = "0x910948", VA = "0x910948")]
		public void RemoveKeyInSection(string pchSection, string pchSettingsKey, ref EVRSettingsError peError)
		{
		}
	}
	[Token(Token = "0x20002A5")]
	public class CVRScreenshots
	{
		[Token(Token = "0x4001081")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IVRScreenshots FnTable;

		[Token(Token = "0x60013E0")]
		[Address(RVA = "0x91010C", Offset = "0x91010C", VA = "0x91010C")]
		internal CVRScreenshots(IntPtr pInterface)
		{
		}

		[Token(Token = "0x60013E1")]
		[Address(RVA = "0x9101FC", Offset = "0x9101FC", VA = "0x9101FC")]
		public EVRScreenshotError RequestScreenshot(ref uint pOutScreenshotHandle, EVRScreenshotType type, string pchPreviewFilename, string pchVRFilename)
		{
			return default(EVRScreenshotError);
		}

		[Token(Token = "0x60013E2")]
		[Address(RVA = "0x910260", Offset = "0x910260", VA = "0x910260")]
		public EVRScreenshotError HookScreenshot(EVRScreenshotType[] pSupportedTypes)
		{
			return default(EVRScreenshotError);
		}

		[Token(Token = "0x60013E3")]
		[Address(RVA = "0x9102B0", Offset = "0x9102B0", VA = "0x9102B0")]
		public EVRScreenshotType GetScreenshotPropertyType(uint screenshotHandle, ref EVRScreenshotError pError)
		{
			return default(EVRScreenshotType);
		}

		[Token(Token = "0x60013E4")]
		[Address(RVA = "0x9102F8", Offset = "0x9102F8", VA = "0x9102F8")]
		public uint GetScreenshotPropertyFilename(uint screenshotHandle, EVRScreenshotPropertyFilenames filenameType, StringBuilder pchFilename, uint cchFilename, ref EVRScreenshotError pError)
		{
			return default(uint);
		}

		[Token(Token = "0x60013E5")]
		[Address(RVA = "0x910360", Offset = "0x910360", VA = "0x910360")]
		public EVRScreenshotError UpdateScreenshotProgress(uint screenshotHandle, float flProgress)
		{
			return default(EVRScreenshotError);
		}

		[Token(Token = "0x60013E6")]
		[Address(RVA = "0x9103A8", Offset = "0x9103A8", VA = "0x9103A8")]
		public EVRScreenshotError TakeStereoScreenshot(ref uint pOutScreenshotHandle, string pchPreviewFilename, string pchVRFilename)
		{
			return default(EVRScreenshotError);
		}

		[Token(Token = "0x60013E7")]
		[Address(RVA = "0x9103FC", Offset = "0x9103FC", VA = "0x9103FC")]
		public EVRScreenshotError SubmitScreenshot(uint screenshotHandle, EVRScreenshotType type, string pchSourcePreviewFilename, string pchSourceVRFilename)
		{
			return default(EVRScreenshotError);
		}
	}
	[Token(Token = "0x20002A6")]
	public class CVRResources
	{
		[Token(Token = "0x4001082")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IVRResources FnTable;

		[Token(Token = "0x60013E8")]
		[Address(RVA = "0x90FF7C", Offset = "0x90FF7C", VA = "0x90FF7C")]
		internal CVRResources(IntPtr pInterface)
		{
		}

		[Token(Token = "0x60013E9")]
		[Address(RVA = "0x91005C", Offset = "0x91005C", VA = "0x91005C")]
		public uint LoadSharedResource(string pchResourceName, string pchBuffer, uint unBufferLen)
		{
			return default(uint);
		}

		[Token(Token = "0x60013EA")]
		[Address(RVA = "0x9100AC", Offset = "0x9100AC", VA = "0x9100AC")]
		public uint GetResourceFullPath(string pchResourceName, string pchResourceTypeDirectory, StringBuilder pchPathBuffer, uint unBufferLen)
		{
			return default(uint);
		}
	}
	[Token(Token = "0x20002A7")]
	public class CVRDriverManager
	{
		[Token(Token = "0x4001083")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IVRDriverManager FnTable;

		[Token(Token = "0x60013EB")]
		[Address(RVA = "0x90C7D0", Offset = "0x90C7D0", VA = "0x90C7D0")]
		internal CVRDriverManager(IntPtr pInterface)
		{
		}

		[Token(Token = "0x60013EC")]
		[Address(RVA = "0x90C8B0", Offset = "0x90C8B0", VA = "0x90C8B0")]
		public uint GetDriverCount()
		{
			return default(uint);
		}

		[Token(Token = "0x60013ED")]
		[Address(RVA = "0x90C8E0", Offset = "0x90C8E0", VA = "0x90C8E0")]
		public uint GetDriverName(uint nDriver, StringBuilder pchValue, uint unBufferSize)
		{
			return default(uint);
		}
	}
	[Token(Token = "0x20002A8")]
	public class OpenVRInterop
	{
		[PreserveSig]
		[Token(Token = "0x60013EE")]
		[Address(RVA = "0x80B754", Offset = "0x80B754", VA = "0x80B754")]
		internal static extern uint InitInternal(ref EVRInitError peError, EVRApplicationType eApplicationType);

		[PreserveSig]
		[Token(Token = "0x60013EF")]
		[Address(RVA = "0x80B808", Offset = "0x80B808", VA = "0x80B808")]
		internal static extern void ShutdownInternal();

		[PreserveSig]
		[Token(Token = "0x60013F0")]
		[Address(RVA = "0x80B89C", Offset = "0x80B89C", VA = "0x80B89C")]
		internal static extern bool IsHmdPresent();

		[PreserveSig]
		[Token(Token = "0x60013F1")]
		[Address(RVA = "0x80B938", Offset = "0x80B938", VA = "0x80B938")]
		internal static extern bool IsRuntimeInstalled();

		[PreserveSig]
		[Token(Token = "0x60013F2")]
		[Address(RVA = "0x80BA48", Offset = "0x80BA48", VA = "0x80BA48")]
		internal static extern IntPtr GetStringForHmdError(EVRInitError error);

		[PreserveSig]
		[Token(Token = "0x60013F3")]
		[Address(RVA = "0x80BAEC", Offset = "0x80BAEC", VA = "0x80BAEC")]
		internal static extern IntPtr GetGenericInterface([In] string pchInterfaceVersion, ref EVRInitError peError);

		[PreserveSig]
		[Token(Token = "0x60013F4")]
		[Address(RVA = "0x80BBB8", Offset = "0x80BBB8", VA = "0x80BBB8")]
		internal static extern bool IsInterfaceVersionValid([In] string pchInterfaceVersion);

		[PreserveSig]
		[Token(Token = "0x60013F5")]
		[Address(RVA = "0x80BC78", Offset = "0x80BC78", VA = "0x80BC78")]
		internal static extern uint GetInitToken();

		[Token(Token = "0x60013F6")]
		[Address(RVA = "0x80CE58", Offset = "0x80CE58", VA = "0x80CE58")]
		public OpenVRInterop()
		{
		}
	}
	[Token(Token = "0x20002A9")]
	public enum EVREye
	{
		[Token(Token = "0x4001085")]
		Eye_Left,
		[Token(Token = "0x4001086")]
		Eye_Right
	}
	[Token(Token = "0x20002AA")]
	public enum ETextureType
	{
		[Token(Token = "0x4001088")]
		DirectX,
		[Token(Token = "0x4001089")]
		OpenGL,
		[Token(Token = "0x400108A")]
		Vulkan,
		[Token(Token = "0x400108B")]
		IOSurface,
		[Token(Token = "0x400108C")]
		DirectX12
	}
	[Token(Token = "0x20002AB")]
	public enum EColorSpace
	{
		[Token(Token = "0x400108E")]
		Auto,
		[Token(Token = "0x400108F")]
		Gamma,
		[Token(Token = "0x4001090")]
		Linear
	}
	[Token(Token = "0x20002AC")]
	public enum ETrackingResult
	{
		[Token(Token = "0x4001092")]
		Uninitialized = 1,
		[Token(Token = "0x4001093")]
		Calibrating_InProgress = 100,
		[Token(Token = "0x4001094")]
		Calibrating_OutOfRange = 101,
		[Token(Token = "0x4001095")]
		Running_OK = 200,
		[Token(Token = "0x4001096")]
		Running_OutOfRange = 201
	}
	[Token(Token = "0x20002AD")]
	public enum ETrackedDeviceClass
	{
		[Token(Token = "0x4001098")]
		Invalid,
		[Token(Token = "0x4001099")]
		HMD,
		[Token(Token = "0x400109A")]
		Controller,
		[Token(Token = "0x400109B")]
		GenericTracker,
		[Token(Token = "0x400109C")]
		TrackingReference,
		[Token(Token = "0x400109D")]
		DisplayRedirect
	}
	[Token(Token = "0x20002AE")]
	public enum ETrackedControllerRole
	{
		[Token(Token = "0x400109F")]
		Invalid,
		[Token(Token = "0x40010A0")]
		LeftHand,
		[Token(Token = "0x40010A1")]
		RightHand
	}
	[Token(Token = "0x20002AF")]
	public enum ETrackingUniverseOrigin
	{
		[Token(Token = "0x40010A3")]
		TrackingUniverseSeated,
		[Token(Token = "0x40010A4")]
		TrackingUniverseStanding,
		[Token(Token = "0x40010A5")]
		TrackingUniverseRawAndUncalibrated
	}
	[Token(Token = "0x20002B0")]
	public enum ETrackedDeviceProperty
	{
		[Token(Token = "0x40010A7")]
		Prop_Invalid = 0,
		[Token(Token = "0x40010A8")]
		Prop_TrackingSystemName_String = 1000,
		[Token(Token = "0x40010A9")]
		Prop_ModelNumber_String = 1001,
		[Token(Token = "0x40010AA")]
		Prop_SerialNumber_String = 1002,
		[Token(Token = "0x40010AB")]
		Prop_RenderModelName_String = 1003,
		[Token(Token = "0x40010AC")]
		Prop_WillDriftInYaw_Bool = 1004,
		[Token(Token = "0x40010AD")]
		Prop_ManufacturerName_String = 1005,
		[Token(Token = "0x40010AE")]
		Prop_TrackingFirmwareVersion_String = 1006,
		[Token(Token = "0x40010AF")]
		Prop_HardwareRevision_String = 1007,
		[Token(Token = "0x40010B0")]
		Prop_AllWirelessDongleDescriptions_String = 1008,
		[Token(Token = "0x40010B1")]
		Prop_ConnectedWirelessDongle_String = 1009,
		[Token(Token = "0x40010B2")]
		Prop_DeviceIsWireless_Bool = 1010,
		[Token(Token = "0x40010B3")]
		Prop_DeviceIsCharging_Bool = 1011,
		[Token(Token = "0x40010B4")]
		Prop_DeviceBatteryPercentage_Float = 1012,
		[Token(Token = "0x40010B5")]
		Prop_StatusDisplayTransform_Matrix34 = 1013,
		[Token(Token = "0x40010B6")]
		Prop_Firmware_UpdateAvailable_Bool = 1014,
		[Token(Token = "0x40010B7")]
		Prop_Firmware_ManualUpdate_Bool = 1015,
		[Token(Token = "0x40010B8")]
		Prop_Firmware_ManualUpdateURL_String = 1016,
		[Token(Token = "0x40010B9")]
		Prop_HardwareRevision_Uint64 = 1017,
		[Token(Token = "0x40010BA")]
		Prop_FirmwareVersion_Uint64 = 1018,
		[Token(Token = "0x40010BB")]
		Prop_FPGAVersion_Uint64 = 1019,
		[Token(Token = "0x40010BC")]
		Prop_VRCVersion_Uint64 = 1020,
		[Token(Token = "0x40010BD")]
		Prop_RadioVersion_Uint64 = 1021,
		[Token(Token = "0x40010BE")]
		Prop_DongleVersion_Uint64 = 1022,
		[Token(Token = "0x40010BF")]
		Prop_BlockServerShutdown_Bool = 1023,
		[Token(Token = "0x40010C0")]
		Prop_CanUnifyCoordinateSystemWithHmd_Bool = 1024,
		[Token(Token = "0x40010C1")]
		Prop_ContainsProximitySensor_Bool = 1025,
		[Token(Token = "0x40010C2")]
		Prop_DeviceProvidesBatteryStatus_Bool = 1026,
		[Token(Token = "0x40010C3")]
		Prop_DeviceCanPowerOff_Bool = 1027,
		[Token(Token = "0x40010C4")]
		Prop_Firmware_ProgrammingTarget_String = 1028,
		[Token(Token = "0x40010C5")]
		Prop_DeviceClass_Int32 = 1029,
		[Token(Token = "0x40010C6")]
		Prop_HasCamera_Bool = 1030,
		[Token(Token = "0x40010C7")]
		Prop_DriverVersion_String = 1031,
		[Token(Token = "0x40010C8")]
		Prop_Firmware_ForceUpdateRequired_Bool = 1032,
		[Token(Token = "0x40010C9")]
		Prop_ViveSystemButtonFixRequired_Bool = 1033,
		[Token(Token = "0x40010CA")]
		Prop_ParentDriver_Uint64 = 1034,
		[Token(Token = "0x40010CB")]
		Prop_ResourceRoot_String = 1035,
		[Token(Token = "0x40010CC")]
		Prop_RegisteredDeviceType_String = 1036,
		[Token(Token = "0x40010CD")]
		Prop_InputProfilePath_String = 1037,
		[Token(Token = "0x40010CE")]
		Prop_ReportsTimeSinceVSync_Bool = 2000,
		[Token(Token = "0x40010CF")]
		Prop_SecondsFromVsyncToPhotons_Float = 2001,
		[Token(Token = "0x40010D0")]
		Prop_DisplayFrequency_Float = 2002,
		[Token(Token = "0x40010D1")]
		Prop_UserIpdMeters_Float = 2003,
		[Token(Token = "0x40010D2")]
		Prop_CurrentUniverseId_Uint64 = 2004,
		[Token(Token = "0x40010D3")]
		Prop_PreviousUniverseId_Uint64 = 2005,
		[Token(Token = "0x40010D4")]
		Prop_DisplayFirmwareVersion_Uint64 = 2006,
		[Token(Token = "0x40010D5")]
		Prop_IsOnDesktop_Bool = 2007,
		[Token(Token = "0x40010D6")]
		Prop_DisplayMCType_Int32 = 2008,
		[Token(Token = "0x40010D7")]
		Prop_DisplayMCOffset_Float = 2009,
		[Token(Token = "0x40010D8")]
		Prop_DisplayMCScale_Float = 2010,
		[Token(Token = "0x40010D9")]
		Prop_EdidVendorID_Int32 = 2011,
		[Token(Token = "0x40010DA")]
		Prop_DisplayMCImageLeft_String = 2012,
		[Token(Token = "0x40010DB")]
		Prop_DisplayMCImageRight_String = 2013,
		[Token(Token = "0x40010DC")]
		Prop_DisplayGCBlackClamp_Float = 2014,
		[Token(Token = "0x40010DD")]
		Prop_EdidProductID_Int32 = 2015,
		[Token(Token = "0x40010DE")]
		Prop_CameraToHeadTransform_Matrix34 = 2016,
		[Token(Token = "0x40010DF")]
		Prop_DisplayGCType_Int32 = 2017,
		[Token(Token = "0x40010E0")]
		Prop_DisplayGCOffset_Float = 2018,
		[Token(Token = "0x40010E1")]
		Prop_DisplayGCScale_Float = 2019,
		[Token(Token = "0x40010E2")]
		Prop_DisplayGCPrescale_Float = 2020,
		[Token(Token = "0x40010E3")]
		Prop_DisplayGCImage_String = 2021,
		[Token(Token = "0x40010E4")]
		Prop_LensCenterLeftU_Float = 2022,
		[Token(Token = "0x40010E5")]
		Prop_LensCenterLeftV_Float = 2023,
		[Token(Token = "0x40010E6")]
		Prop_LensCenterRightU_Float = 2024,
		[Token(Token = "0x40010E7")]
		Prop_LensCenterRightV_Float = 2025,
		[Token(Token = "0x40010E8")]
		Prop_UserHeadToEyeDepthMeters_Float = 2026,
		[Token(Token = "0x40010E9")]
		Prop_CameraFirmwareVersion_Uint64 = 2027,
		[Token(Token = "0x40010EA")]
		Prop_CameraFirmwareDescription_String = 2028,
		[Token(Token = "0x40010EB")]
		Prop_DisplayFPGAVersion_Uint64 = 2029,
		[Token(Token = "0x40010EC")]
		Prop_DisplayBootloaderVersion_Uint64 = 2030,
		[Token(Token = "0x40010ED")]
		Prop_DisplayHardwareVersion_Uint64 = 2031,
		[Token(Token = "0x40010EE")]
		Prop_AudioFirmwareVersion_Uint64 = 2032,
		[Token(Token = "0x40010EF")]
		Prop_CameraCompatibilityMode_Int32 = 2033,
		[Token(Token = "0x40010F0")]
		Prop_ScreenshotHorizontalFieldOfViewDegrees_Float = 2034,
		[Token(Token = "0x40010F1")]
		Prop_ScreenshotVerticalFieldOfViewDegrees_Float = 2035,
		[Token(Token = "0x40010F2")]
		Prop_DisplaySuppressed_Bool = 2036,
		[Token(Token = "0x40010F3")]
		Prop_DisplayAllowNightMode_Bool = 2037,
		[Token(Token = "0x40010F4")]
		Prop_DisplayMCImageWidth_Int32 = 2038,
		[Token(Token = "0x40010F5")]
		Prop_DisplayMCImageHeight_Int32 = 2039,
		[Token(Token = "0x40010F6")]
		Prop_DisplayMCImageNumChannels_Int32 = 2040,
		[Token(Token = "0x40010F7")]
		Prop_DisplayMCImageData_Binary = 2041,
		[Token(Token = "0x40010F8")]
		Prop_SecondsFromPhotonsToVblank_Float = 2042,
		[Token(Token = "0x40010F9")]
		Prop_DriverDirectModeSendsVsyncEvents_Bool = 2043,
		[Token(Token = "0x40010FA")]
		Prop_DisplayDebugMode_Bool = 2044,
		[Token(Token = "0x40010FB")]
		Prop_GraphicsAdapterLuid_Uint64 = 2045,
		[Token(Token = "0x40010FC")]
		Prop_DriverProvidedChaperonePath_String = 2048,
		[Token(Token = "0x40010FD")]
		Prop_ExpectedTrackingReferenceCount_Int32 = 2049,
		[Token(Token = "0x40010FE")]
		Prop_ExpectedControllerCount_Int32 = 2050,
		[Token(Token = "0x40010FF")]
		Prop_NamedIconPathControllerLeftDeviceOff_String = 2051,
		[Token(Token = "0x4001100")]
		Prop_NamedIconPathControllerRightDeviceOff_String = 2052,
		[Token(Token = "0x4001101")]
		Prop_NamedIconPathTrackingReferenceDeviceOff_String = 2053,
		[Token(Token = "0x4001102")]
		Prop_DoNotApplyPrediction_Bool = 2054,
		[Token(Token = "0x4001103")]
		Prop_CameraToHeadTransforms_Matrix34_Array = 2055,
		[Token(Token = "0x4001104")]
		Prop_DriverIsDrawingControllers_Bool = 2057,
		[Token(Token = "0x4001105")]
		Prop_DriverRequestsApplicationPause_Bool = 2058,
		[Token(Token = "0x4001106")]
		Prop_DriverRequestsReducedRendering_Bool = 2059,
		[Token(Token = "0x4001107")]
		Prop_AttachedDeviceId_String = 3000,
		[Token(Token = "0x4001108")]
		Prop_SupportedButtons_Uint64 = 3001,
		[Token(Token = "0x4001109")]
		Prop_Axis0Type_Int32 = 3002,
		[Token(Token = "0x400110A")]
		Prop_Axis1Type_Int32 = 3003,
		[Token(Token = "0x400110B")]
		Prop_Axis2Type_Int32 = 3004,
		[Token(Token = "0x400110C")]
		Prop_Axis3Type_Int32 = 3005,
		[Token(Token = "0x400110D")]
		Prop_Axis4Type_Int32 = 3006,
		[Token(Token = "0x400110E")]
		Prop_ControllerRoleHint_Int32 = 3007,
		[Token(Token = "0x400110F")]
		Prop_FieldOfViewLeftDegrees_Float = 4000,
		[Token(Token = "0x4001110")]
		Prop_FieldOfViewRightDegrees_Float = 4001,
		[Token(Token = "0x4001111")]
		Prop_FieldOfViewTopDegrees_Float = 4002,
		[Token(Token = "0x4001112")]
		Prop_FieldOfViewBottomDegrees_Float = 4003,
		[Token(Token = "0x4001113")]
		Prop_TrackingRangeMinimumMeters_Float = 4004,
		[Token(Token = "0x4001114")]
		Prop_TrackingRangeMaximumMeters_Float = 4005,
		[Token(Token = "0x4001115")]
		Prop_ModeLabel_String = 4006,
		[Token(Token = "0x4001116")]
		Prop_IconPathName_String = 5000,
		[Token(Token = "0x4001117")]
		Prop_NamedIconPathDeviceOff_String = 5001,
		[Token(Token = "0x4001118")]
		Prop_NamedIconPathDeviceSearching_String = 5002,
		[Token(Token = "0x4001119")]
		Prop_NamedIconPathDeviceSearchingAlert_String = 5003,
		[Token(Token = "0x400111A")]
		Prop_NamedIconPathDeviceReady_String = 5004,
		[Token(Token = "0x400111B")]
		Prop_NamedIconPathDeviceReadyAlert_String = 5005,
		[Token(Token = "0x400111C")]
		Prop_NamedIconPathDeviceNotReady_String = 5006,
		[Token(Token = "0x400111D")]
		Prop_NamedIconPathDeviceStandby_String = 5007,
		[Token(Token = "0x400111E")]
		Prop_NamedIconPathDeviceAlertLow_String = 5008,
		[Token(Token = "0x400111F")]
		Prop_DisplayHiddenArea_Binary_Start = 5100,
		[Token(Token = "0x4001120")]
		Prop_DisplayHiddenArea_Binary_End = 5150,
		[Token(Token = "0x4001121")]
		Prop_ParentContainer = 5151,
		[Token(Token = "0x4001122")]
		Prop_UserConfigPath_String = 6000,
		[Token(Token = "0x4001123")]
		Prop_InstallPath_String = 6001,
		[Token(Token = "0x4001124")]
		Prop_HasDisplayComponent_Bool = 6002,
		[Token(Token = "0x4001125")]
		Prop_HasControllerComponent_Bool = 6003,
		[Token(Token = "0x4001126")]
		Prop_HasCameraComponent_Bool = 6004,
		[Token(Token = "0x4001127")]
		Prop_HasDriverDirectModeComponent_Bool = 6005,
		[Token(Token = "0x4001128")]
		Prop_HasVirtualDisplayComponent_Bool = 6006,
		[Token(Token = "0x4001129")]
		Prop_ControllerType_String = 7000,
		[Token(Token = "0x400112A")]
		Prop_LegacyInputProfile_String = 7001,
		[Token(Token = "0x400112B")]
		Prop_VendorSpecific_Reserved_Start = 10000,
		[Token(Token = "0x400112C")]
		Prop_VendorSpecific_Reserved_End = 10999,
		[Token(Token = "0x400112D")]
		Prop_TrackedDeviceProperty_Max = 1000000
	}
	[Token(Token = "0x20002B1")]
	public enum ETrackedPropertyError
	{
		[Token(Token = "0x400112F")]
		TrackedProp_Success,
		[Token(Token = "0x4001130")]
		TrackedProp_WrongDataType,
		[Token(Token = "0x4001131")]
		TrackedProp_WrongDeviceClass,
		[Token(Token = "0x4001132")]
		TrackedProp_BufferTooSmall,
		[Token(Token = "0x4001133")]
		TrackedProp_UnknownProperty,
		[Token(Token = "0x4001134")]
		TrackedProp_InvalidDevice,
		[Token(Token = "0x4001135")]
		TrackedProp_CouldNotContactServer,
		[Token(Token = "0x4001136")]
		TrackedProp_ValueNotProvidedByDevice,
		[Token(Token = "0x4001137")]
		TrackedProp_StringExceedsMaximumLength,
		[Token(Token = "0x4001138")]
		TrackedProp_NotYetAvailable,
		[Token(Token = "0x4001139")]
		TrackedProp_PermissionDenied,
		[Token(Token = "0x400113A")]
		TrackedProp_InvalidOperation,
		[Token(Token = "0x400113B")]
		TrackedProp_CannotWriteToWildcards
	}
	[Token(Token = "0x20002B2")]
	public enum EVRSubmitFlags
	{
		[Token(Token = "0x400113D")]
		Submit_Default = 0,
		[Token(Token = "0x400113E")]
		Submit_LensDistortionAlreadyApplied = 1,
		[Token(Token = "0x400113F")]
		Submit_GlRenderBuffer = 2,
		[Token(Token = "0x4001140")]
		Submit_Reserved = 4,
		[Token(Token = "0x4001141")]
		Submit_TextureWithPose = 8,
		[Token(Token = "0x4001142")]
		Submit_TextureWithDepth = 0x10
	}
	[Token(Token = "0x20002B3")]
	public enum EVRState
	{
		[Token(Token = "0x4001144")]
		Undefined = -1,
		[Token(Token = "0x4001145")]
		Off,
		[Token(Token = "0x4001146")]
		Searching,
		[Token(Token = "0x4001147")]
		Searching_Alert,
		[Token(Token = "0x4001148")]
		Ready,
		[Token(Token = "0x4001149")]
		Ready_Alert,
		[Token(Token = "0x400114A")]
		NotReady,
		[Token(Token = "0x400114B")]
		Standby,
		[Token(Token = "0x400114C")]
		Ready_Alert_Low
	}
	[Token(Token = "0x20002B4")]
	public enum EVREventType
	{
		[Token(Token = "0x400114E")]
		VREvent_None = 0,
		[Token(Token = "0x400114F")]
		VREvent_TrackedDeviceActivated = 100,
		[Token(Token = "0x4001150")]
		VREvent_TrackedDeviceDeactivated = 101,
		[Token(Token = "0x4001151")]
		VREvent_TrackedDeviceUpdated = 102,
		[Token(Token = "0x4001152")]
		VREvent_TrackedDeviceUserInteractionStarted = 103,
		[Token(Token = "0x4001153")]
		VREvent_TrackedDeviceUserInteractionEnded = 104,
		[Token(Token = "0x4001154")]
		VREvent_IpdChanged = 105,
		[Token(Token = "0x4001155")]
		VREvent_EnterStandbyMode = 106,
		[Token(Token = "0x4001156")]
		VREvent_LeaveStandbyMode = 107,
		[Token(Token = "0x4001157")]
		VREvent_TrackedDeviceRoleChanged = 108,
		[Token(Token = "0x4001158")]
		VREvent_WatchdogWakeUpRequested = 109,
		[Token(Token = "0x4001159")]
		VREvent_LensDistortionChanged = 110,
		[Token(Token = "0x400115A")]
		VREvent_PropertyChanged = 111,
		[Token(Token = "0x400115B")]
		VREvent_WirelessDisconnect = 112,
		[Token(Token = "0x400115C")]
		VREvent_WirelessReconnect = 113,
		[Token(Token = "0x400115D")]
		VREvent_ButtonPress = 200,
		[Token(Token = "0x400115E")]
		VREvent_ButtonUnpress = 201,
		[Token(Token = "0x400115F")]
		VREvent_ButtonTouch = 202,
		[Token(Token = "0x4001160")]
		VREvent_ButtonUntouch = 203,
		[Token(Token = "0x4001161")]
		VREvent_DualAnalog_Press = 250,
		[Token(Token = "0x4001162")]
		VREvent_DualAnalog_Unpress = 251,
		[Token(Token = "0x4001163")]
		VREvent_DualAnalog_Touch = 252,
		[Token(Token = "0x4001164")]
		VREvent_DualAnalog_Untouch = 253,
		[Token(Token = "0x4001165")]
		VREvent_DualAnalog_Move = 254,
		[Token(Token = "0x4001166")]
		VREvent_DualAnalog_ModeSwitch1 = 255,
		[Token(Token = "0x4001167")]
		VREvent_DualAnalog_ModeSwitch2 = 256,
		[Token(Token = "0x4001168")]
		VREvent_DualAnalog_Cancel = 257,
		[Token(Token = "0x4001169")]
		VREvent_MouseMove = 300,
		[Token(Token = "0x400116A")]
		VREvent_MouseButtonDown = 301,
		[Token(Token = "0x400116B")]
		VREvent_MouseButtonUp = 302,
		[Token(Token = "0x400116C")]
		VREvent_FocusEnter = 303,
		[Token(Token = "0x400116D")]
		VREvent_FocusLeave = 304,
		[Token(Token = "0x400116E")]
		VREvent_Scroll = 305,
		[Token(Token = "0x400116F")]
		VREvent_TouchPadMove = 306,
		[Token(Token = "0x4001170")]
		VREvent_OverlayFocusChanged = 307,
		[Token(Token = "0x4001171")]
		VREvent_InputFocusCaptured = 400,
		[Token(Token = "0x4001172")]
		VREvent_InputFocusReleased = 401,
		[Token(Token = "0x4001173")]
		VREvent_SceneFocusLost = 402,
		[Token(Token = "0x4001174")]
		VREvent_SceneFocusGained = 403,
		[Token(Token = "0x4001175")]
		VREvent_SceneApplicationChanged = 404,
		[Token(Token = "0x4001176")]
		VREvent_SceneFocusChanged = 405,
		[Token(Token = "0x4001177")]
		VREvent_InputFocusChanged = 406,
		[Token(Token = "0x4001178")]
		VREvent_SceneApplicationSecondaryRenderingStarted = 407,
		[Token(Token = "0x4001179")]
		VREvent_HideRenderModels = 410,
		[Token(Token = "0x400117A")]
		VREvent_ShowRenderModels = 411,
		[Token(Token = "0x400117B")]
		VREvent_ConsoleOpened = 420,
		[Token(Token = "0x400117C")]
		VREvent_ConsoleClosed = 421,
		[Token(Token = "0x400117D")]
		VREvent_OverlayShown = 500,
		[Token(Token = "0x400117E")]
		VREvent_OverlayHidden = 501,
		[Token(Token = "0x400117F")]
		VREvent_DashboardActivated = 502,
		[Token(Token = "0x4001180")]
		VREvent_DashboardDeactivated = 503,
		[Token(Token = "0x4001181")]
		VREvent_DashboardThumbSelected = 504,
		[Token(Token = "0x4001182")]
		VREvent_DashboardRequested = 505,
		[Token(Token = "0x4001183")]
		VREvent_ResetDashboard = 506,
		[Token(Token = "0x4001184")]
		VREvent_RenderToast = 507,
		[Token(Token = "0x4001185")]
		VREvent_ImageLoaded = 508,
		[Token(Token = "0x4001186")]
		VREvent_ShowKeyboard = 509,
		[Token(Token = "0x4001187")]
		VREvent_HideKeyboard = 510,
		[Token(Token = "0x4001188")]
		VREvent_OverlayGamepadFocusGained = 511,
		[Token(Token = "0x4001189")]
		VREvent_OverlayGamepadFocusLost = 512,
		[Token(Token = "0x400118A")]
		VREvent_OverlaySharedTextureChanged = 513,
		[Token(Token = "0x400118B")]
		VREvent_DashboardGuideButtonDown = 514,
		[Token(Token = "0x400118C")]
		VREvent_DashboardGuideButtonUp = 515,
		[Token(Token = "0x400118D")]
		VREvent_ScreenshotTriggered = 516,
		[Token(Token = "0x400118E")]
		VREvent_ImageFailed = 517,
		[Token(Token = "0x400118F")]
		VREvent_DashboardOverlayCreated = 518,
		[Token(Token = "0x4001190")]
		VREvent_RequestScreenshot = 520,
		[Token(Token = "0x4001191")]
		VREvent_ScreenshotTaken = 521,
		[Token(Token = "0x4001192")]
		VREvent_ScreenshotFailed = 522,
		[Token(Token = "0x4001193")]
		VREvent_SubmitScreenshotToDashboard = 523,
		[Token(Token = "0x4001194")]
		VREvent_ScreenshotProgressToDashboard = 524,
		[Token(Token = "0x4001195")]
		VREvent_PrimaryDashboardDeviceChanged = 525,
		[Token(Token = "0x4001196")]
		VREvent_Notification_Shown = 600,
		[Token(Token = "0x4001197")]
		VREvent_Notification_Hidden = 601,
		[Token(Token = "0x4001198")]
		VREvent_Notification_BeginInteraction = 602,
		[Token(Token = "0x4001199")]
		VREvent_Notification_Destroyed = 603,
		[Token(Token = "0x400119A")]
		VREvent_Quit = 700,
		[Token(Token = "0x400119B")]
		VREvent_ProcessQuit = 701,
		[Token(Token = "0x400119C")]
		VREvent_QuitAborted_UserPrompt = 702,
		[Token(Token = "0x400119D")]
		VREvent_QuitAcknowledged = 703,
		[Token(Token = "0x400119E")]
		VREvent_DriverRequestedQuit = 704,
		[Token(Token = "0x400119F")]
		VREvent_ChaperoneDataHasChanged = 800,
		[Token(Token = "0x40011A0")]
		VREvent_ChaperoneUniverseHasChanged = 801,
		[Token(Token = "0x40011A1")]
		VREvent_ChaperoneTempDataHasChanged = 802,
		[Token(Token = "0x40011A2")]
		VREvent_ChaperoneSettingsHaveChanged = 803,
		[Token(Token = "0x40011A3")]
		VREvent_SeatedZeroPoseReset = 804,
		[Token(Token = "0x40011A4")]
		VREvent_AudioSettingsHaveChanged = 820,
		[Token(Token = "0x40011A5")]
		VREvent_BackgroundSettingHasChanged = 850,
		[Token(Token = "0x40011A6")]
		VREvent_CameraSettingsHaveChanged = 851,
		[Token(Token = "0x40011A7")]
		VREvent_ReprojectionSettingHasChanged = 852,
		[Token(Token = "0x40011A8")]
		VREvent_ModelSkinSettingsHaveChanged = 853,
		[Token(Token = "0x40011A9")]
		VREvent_EnvironmentSettingsHaveChanged = 854,
		[Token(Token = "0x40011AA")]
		VREvent_PowerSettingsHaveChanged = 855,
		[Token(Token = "0x40011AB")]
		VREvent_EnableHomeAppSettingsHaveChanged = 856,
		[Token(Token = "0x40011AC")]
		VREvent_SteamVRSectionSettingChanged = 857,
		[Token(Token = "0x40011AD")]
		VREvent_LighthouseSectionSettingChanged = 858,
		[Token(Token = "0x40011AE")]
		VREvent_NullSectionSettingChanged = 859,
		[Token(Token = "0x40011AF")]
		VREvent_UserInterfaceSectionSettingChanged = 860,
		[Token(Token = "0x40011B0")]
		VREvent_NotificationsSectionSettingChanged = 861,
		[Token(Token = "0x40011B1")]
		VREvent_KeyboardSectionSettingChanged = 862,
		[Token(Token = "0x40011B2")]
		VREvent_PerfSectionSettingChanged = 863,
		[Token(Token = "0x40011B3")]
		VREvent_DashboardSectionSettingChanged = 864,
		[Token(Token = "0x40011B4")]
		VREvent_WebInterfaceSectionSettingChanged = 865,
		[Token(Token = "0x40011B5")]
		VREvent_StatusUpdate = 900,
		[Token(Token = "0x40011B6")]
		VREvent_WebInterface_InstallDriverCompleted = 950,
		[Token(Token = "0x40011B7")]
		VREvent_MCImageUpdated = 1000,
		[Token(Token = "0x40011B8")]
		VREvent_FirmwareUpdateStarted = 1100,
		[Token(Token = "0x40011B9")]
		VREvent_FirmwareUpdateFinished = 1101,
		[Token(Token = "0x40011BA")]
		VREvent_KeyboardClosed = 1200,
		[Token(Token = "0x40011BB")]
		VREvent_KeyboardCharInput = 1201,
		[Token(Token = "0x40011BC")]
		VREvent_KeyboardDone = 1202,
		[Token(Token = "0x40011BD")]
		VREvent_ApplicationTransitionStarted = 1300,
		[Token(Token = "0x40011BE")]
		VREvent_ApplicationTransitionAborted = 1301,
		[Token(Token = "0x40011BF")]
		VREvent_ApplicationTransitionNewAppStarted = 1302,
		[Token(Token = "0x40011C0")]
		VREvent_ApplicationListUpdated = 1303,
		[Token(Token = "0x40011C1")]
		VREvent_ApplicationMimeTypeLoad = 1304,
		[Token(Token = "0x40011C2")]
		VREvent_ApplicationTransitionNewAppLaunchComplete = 1305,
		[Token(Token = "0x40011C3")]
		VREvent_ProcessConnected = 1306,
		[Token(Token = "0x40011C4")]
		VREvent_ProcessDisconnected = 1307,
		[Token(Token = "0x40011C5")]
		VREvent_Compositor_MirrorWindowShown = 1400,
		[Token(Token = "0x40011C6")]
		VREvent_Compositor_MirrorWindowHidden = 1401,
		[Token(Token = "0x40011C7")]
		VREvent_Compositor_ChaperoneBoundsShown = 1410,
		[Token(Token = "0x40011C8")]
		VREvent_Compositor_ChaperoneBoundsHidden = 1411,
		[Token(Token = "0x40011C9")]
		VREvent_TrackedCamera_StartVideoStream = 1500,
		[Token(Token = "0x40011CA")]
		VREvent_TrackedCamera_StopVideoStream = 1501,
		[Token(Token = "0x40011CB")]
		VREvent_TrackedCamera_PauseVideoStream = 1502,
		[Token(Token = "0x40011CC")]
		VREvent_TrackedCamera_ResumeVideoStream = 1503,
		[Token(Token = "0x40011CD")]
		VREvent_TrackedCamera_EditingSurface = 1550,
		[Token(Token = "0x40011CE")]
		VREvent_PerformanceTest_EnableCapture = 1600,
		[Token(Token = "0x40011CF")]
		VREvent_PerformanceTest_DisableCapture = 1601,
		[Token(Token = "0x40011D0")]
		VREvent_PerformanceTest_FidelityLevel = 1602,
		[Token(Token = "0x40011D1")]
		VREvent_MessageOverlay_Closed = 1650,
		[Token(Token = "0x40011D2")]
		VREvent_MessageOverlayCloseRequested = 1651,
		[Token(Token = "0x40011D3")]
		VREvent_Input_HapticVibration = 1700,
		[Token(Token = "0x40011D4")]
		VREvent_VendorSpecific_Reserved_Start = 10000,
		[Token(Token = "0x40011D5")]
		VREvent_VendorSpecific_Reserved_End = 19999
	}
	[Token(Token = "0x20002B5")]
	public enum EDeviceActivityLevel
	{
		[Token(Token = "0x40011D7")]
		k_EDeviceActivityLevel_Unknown = -1,
		[Token(Token = "0x40011D8")]
		k_EDeviceActivityLevel_Idle,
		[Token(Token = "0x40011D9")]
		k_EDeviceActivityLevel_UserInteraction,
		[Token(Token = "0x40011DA")]
		k_EDeviceActivityLevel_UserInteraction_Timeout,
		[Token(Token = "0x40011DB")]
		k_EDeviceActivityLevel_Standby
	}
	[Token(Token = "0x20002B6")]
	public enum EVRButtonId
	{
		[Token(Token = "0x40011DD")]
		k_EButton_System = 0,
		[Token(Token = "0x40011DE")]
		k_EButton_ApplicationMenu = 1,
		[Token(Token = "0x40011DF")]
		k_EButton_Grip = 2,
		[Token(Token = "0x40011E0")]
		k_EButton_DPad_Left = 3,
		[Token(Token = "0x40011E1")]
		k_EButton_DPad_Up = 4,
		[Token(Token = "0x40011E2")]
		k_EButton_DPad_Right = 5,
		[Token(Token = "0x40011E3")]
		k_EButton_DPad_Down = 6,
		[Token(Token = "0x40011E4")]
		k_EButton_A = 7,
		[Token(Token = "0x40011E5")]
		k_EButton_ProximitySensor = 31,
		[Token(Token = "0x40011E6")]
		k_EButton_Axis0 = 32,
		[Token(Token = "0x40011E7")]
		k_EButton_Axis1 = 33,
		[Token(Token = "0x40011E8")]
		k_EButton_Axis2 = 34,
		[Token(Token = "0x40011E9")]
		k_EButton_Axis3 = 35,
		[Token(Token = "0x40011EA")]
		k_EButton_Axis4 = 36,
		[Token(Token = "0x40011EB")]
		k_EButton_SteamVR_Touchpad = 32,
		[Token(Token = "0x40011EC")]
		k_EButton_SteamVR_Trigger = 33,
		[Token(Token = "0x40011ED")]
		k_EButton_Dashboard_Back = 2,
		[Token(Token = "0x40011EE")]
		k_EButton_Max = 64
	}
	[Token(Token = "0x20002B7")]
	public enum EVRMouseButton
	{
		[Token(Token = "0x40011F0")]
		Left = 1,
		[Token(Token = "0x40011F1")]
		Right = 2,
		[Token(Token = "0x40011F2")]
		Middle = 4
	}
	[Token(Token = "0x20002B8")]
	public enum EDualAnalogWhich
	{
		[Token(Token = "0x40011F4")]
		k_EDualAnalog_Left,
		[Token(Token = "0x40011F5")]
		k_EDualAnalog_Right
	}
	[Token(Token = "0x20002B9")]
	public enum EVRInputError
	{
		[Token(Token = "0x40011F7")]
		None,
		[Token(Token = "0x40011F8")]
		NameNotFound,
		[Token(Token = "0x40011F9")]
		WrongType,
		[Token(Token = "0x40011FA")]
		InvalidHandle,
		[Token(Token = "0x40011FB")]
		InvalidParam,
		[Token(Token = "0x40011FC")]
		NoSteam,
		[Token(Token = "0x40011FD")]
		MaxCapacityReached,
		[Token(Token = "0x40011FE")]
		IPCError,
		[Token(Token = "0x40011FF")]
		NoActiveActionSet,
		[Token(Token = "0x4001200")]
		InvalidDevice
	}
	[Token(Token = "0x20002BA")]
	public enum EHiddenAreaMeshType
	{
		[Token(Token = "0x4001202")]
		k_eHiddenAreaMesh_Standard,
		[Token(Token = "0x4001203")]
		k_eHiddenAreaMesh_Inverse,
		[Token(Token = "0x4001204")]
		k_eHiddenAreaMesh_LineLoop,
		[Token(Token = "0x4001205")]
		k_eHiddenAreaMesh_Max
	}
	[Token(Token = "0x20002BB")]
	public enum EVRControllerAxisType
	{
		[Token(Token = "0x4001207")]
		k_eControllerAxis_None,
		[Token(Token = "0x4001208")]
		k_eControllerAxis_TrackPad,
		[Token(Token = "0x4001209")]
		k_eControllerAxis_Joystick,
		[Token(Token = "0x400120A")]
		k_eControllerAxis_Trigger
	}
	[Token(Token = "0x20002BC")]
	public enum EVRControllerEventOutputType
	{
		[Token(Token = "0x400120C")]
		ControllerEventOutput_OSEvents,
		[Token(Token = "0x400120D")]
		ControllerEventOutput_VREvents
	}
	[Token(Token = "0x20002BD")]
	public enum ECollisionBoundsStyle
	{
		[Token(Token = "0x400120F")]
		COLLISION_BOUNDS_STYLE_BEGINNER,
		[Token(Token = "0x4001210")]
		COLLISION_BOUNDS_STYLE_INTERMEDIATE,
		[Token(Token = "0x4001211")]
		COLLISION_BOUNDS_STYLE_SQUARES,
		[Token(Token = "0x4001212")]
		COLLISION_BOUNDS_STYLE_ADVANCED,
		[Token(Token = "0x4001213")]
		COLLISION_BOUNDS_STYLE_NONE,
		[Token(Token = "0x4001214")]
		COLLISION_BOUNDS_STYLE_COUNT
	}
	[Token(Token = "0x20002BE")]
	public enum EVROverlayError
	{
		[Token(Token = "0x4001216")]
		None = 0,
		[Token(Token = "0x4001217")]
		UnknownOverlay = 10,
		[Token(Token = "0x4001218")]
		InvalidHandle = 11,
		[Token(Token = "0x4001219")]
		PermissionDenied = 12,
		[Token(Token = "0x400121A")]
		OverlayLimitExceeded = 13,
		[Token(Token = "0x400121B")]
		WrongVisibilityType = 14,
		[Token(Token = "0x400121C")]
		KeyTooLong = 15,
		[Token(Token = "0x400121D")]
		NameTooLong = 16,
		[Token(Token = "0x400121E")]
		KeyInUse = 17,
		[Token(Token = "0x400121F")]
		WrongTransformType = 18,
		[Token(Token = "0x4001220")]
		InvalidTrackedDevice = 19,
		[Token(Token = "0x4001221")]
		InvalidParameter = 20,
		[Token(Token = "0x4001222")]
		ThumbnailCantBeDestroyed = 21,
		[Token(Token = "0x4001223")]
		ArrayTooSmall = 22,
		[Token(Token = "0x4001224")]
		RequestFailed = 23,
		[Token(Token = "0x4001225")]
		InvalidTexture = 24,
		[Token(Token = "0x4001226")]
		UnableToLoadFile = 25,
		[Token(Token = "0x4001227")]
		KeyboardAlreadyInUse = 26,
		[Token(Token = "0x4001228")]
		NoNeighbor = 27,
		[Token(Token = "0x4001229")]
		TooManyMaskPrimitives = 29,
		[Token(Token = "0x400122A")]
		BadMaskPrimitive = 30,
		[Token(Token = "0x400122B")]
		TextureAlreadyLocked = 31,
		[Token(Token = "0x400122C")]
		TextureLockCapacityReached = 32,
		[Token(Token = "0x400122D")]
		TextureNotLocked = 33
	}
	[Token(Token = "0x20002BF")]
	public enum EVRApplicationType
	{
		[Token(Token = "0x400122F")]
		VRApplication_Other,
		[Token(Token = "0x4001230")]
		VRApplication_Scene,
		[Token(Token = "0x4001231")]
		VRApplication_Overlay,
		[Token(Token = "0x4001232")]
		VRApplication_Background,
		[Token(Token = "0x4001233")]
		VRApplication_Utility,
		[Token(Token = "0x4001234")]
		VRApplication_VRMonitor,
		[Token(Token = "0x4001235")]
		VRApplication_SteamWatchdog,
		[Token(Token = "0x4001236")]
		VRApplication_Bootstrapper,
		[Token(Token = "0x4001237")]
		VRApplication_Max
	}
	[Token(Token = "0x20002C0")]
	public enum EVRFirmwareError
	{
		[Token(Token = "0x4001239")]
		None,
		[Token(Token = "0x400123A")]
		Success,
		[Token(Token = "0x400123B")]
		Fail
	}
	[Token(Token = "0x20002C1")]
	public enum EVRNotificationError
	{
		[Token(Token = "0x400123D")]
		OK = 0,
		[Token(Token = "0x400123E")]
		InvalidNotificationId = 100,
		[Token(Token = "0x400123F")]
		NotificationQueueFull = 101,
		[Token(Token = "0x4001240")]
		InvalidOverlayHandle = 102,
		[Token(Token = "0x4001241")]
		SystemWithUserValueAlreadyExists = 103
	}
	[Token(Token = "0x20002C2")]
	public enum EVRInitError
	{
		[Token(Token = "0x4001243")]
		None = 0,
		[Token(Token = "0x4001244")]
		Unknown = 1,
		[Token(Token = "0x4001245")]
		Init_InstallationNotFound = 100,
		[Token(Token = "0x4001246")]
		Init_InstallationCorrupt = 101,
		[Token(Token = "0x4001247")]
		Init_VRClientDLLNotFound = 102,
		[Token(Token = "0x4001248")]
		Init_FileNotFound = 103,
		[Token(Token = "0x4001249")]
		Init_FactoryNotFound = 104,
		[Token(Token = "0x400124A")]
		Init_InterfaceNotFound = 105,
		[Token(Token = "0x400124B")]
		Init_InvalidInterface = 106,
		[Token(Token = "0x400124C")]
		Init_UserConfigDirectoryInvalid = 107,
		[Token(Token = "0x400124D")]
		Init_HmdNotFound = 108,
		[Token(Token = "0x400124E")]
		Init_NotInitialized = 109,
		[Token(Token = "0x400124F")]
		Init_PathRegistryNotFound = 110,
		[Token(Token = "0x4001250")]
		Init_NoConfigPath = 111,
		[Token(Token = "0x4001251")]
		Init_NoLogPath = 112,
		[Token(Token = "0x4001252")]
		Init_PathRegistryNotWritable = 113,
		[Token(Token = "0x4001253")]
		Init_AppInfoInitFailed = 114,
		[Token(Token = "0x4001254")]
		Init_Retry = 115,
		[Token(Token = "0x4001255")]
		Init_InitCanceledByUser = 116,
		[Token(Token = "0x4001256")]
		Init_AnotherAppLaunching = 117,
		[Token(Token = "0x4001257")]
		Init_SettingsInitFailed = 118,
		[Token(Token = "0x4001258")]
		Init_ShuttingDown = 119,
		[Token(Token = "0x4001259")]
		Init_TooManyObjects = 120,
		[Token(Token = "0x400125A")]
		Init_NoServerForBackgroundApp = 121,
		[Token(Token = "0x400125B")]
		Init_NotSupportedWithCompositor = 122,
		[Token(Token = "0x400125C")]
		Init_NotAvailableToUtilityApps = 123,
		[Token(Token = "0x400125D")]
		Init_Internal = 124,
		[Token(Token = "0x400125E")]
		Init_HmdDriverIdIsNone = 125,
		[Token(Token = "0x400125F")]
		Init_HmdNotFoundPresenceFailed = 126,
		[Token(Token = "0x4001260")]
		Init_VRMonitorNotFound = 127,
		[Token(Token = "0x4001261")]
		Init_VRMonitorStartupFailed = 128,
		[Token(Token = "0x4001262")]
		Init_LowPowerWatchdogNotSupported = 129,
		[Token(Token = "0x4001263")]
		Init_InvalidApplicationType = 130,
		[Token(Token = "0x4001264")]
		Init_NotAvailableToWatchdogApps = 131,
		[Token(Token = "0x4001265")]
		Init_WatchdogDisabledInSettings = 132,
		[Token(Token = "0x4001266")]
		Init_VRDashboardNotFound = 133,
		[Token(Token = "0x4001267")]
		Init_VRDashboardStartupFailed = 134,
		[Token(Token = "0x4001268")]
		Init_VRHomeNotFound = 135,
		[Token(Token = "0x4001269")]
		Init_VRHomeStartupFailed = 136,
		[Token(Token = "0x400126A")]
		Init_RebootingBusy = 137,
		[Token(Token = "0x400126B")]
		Init_FirmwareUpdateBusy = 138,
		[Token(Token = "0x400126C")]
		Init_FirmwareRecoveryBusy = 139,
		[Token(Token = "0x400126D")]
		Init_USBServiceBusy = 140,
		[Token(Token = "0x400126E")]
		Driver_Failed = 200,
		[Token(Token = "0x400126F")]
		Driver_Unknown = 201,
		[Token(Token = "0x4001270")]
		Driver_HmdUnknown = 202,
		[Token(Token = "0x4001271")]
		Driver_NotLoaded = 203,
		[Token(Token = "0x4001272")]
		Driver_RuntimeOutOfDate = 204,
		[Token(Token = "0x4001273")]
		Driver_HmdInUse = 205,
		[Token(Token = "0x4001274")]
		Driver_NotCalibrated = 206,
		[Token(Token = "0x4001275")]
		Driver_CalibrationInvalid = 207,
		[Token(Token = "0x4001276")]
		Driver_HmdDisplayNotFound = 208,
		[Token(Token = "0x4001277")]
		Driver_TrackedDeviceInterfaceUnknown = 209,
		[Token(Token = "0x4001278")]
		Driver_HmdDriverIdOutOfBounds = 211,
		[Token(Token = "0x4001279")]
		Driver_HmdDisplayMirrored = 212,
		[Token(Token = "0x400127A")]
		IPC_ServerInitFailed = 300,
		[Token(Token = "0x400127B")]
		IPC_ConnectFailed = 301,
		[Token(Token = "0x400127C")]
		IPC_SharedStateInitFailed = 302,
		[Token(Token = "0x400127D")]
		IPC_CompositorInitFailed = 303,
		[Token(Token = "0x400127E")]
		IPC_MutexInitFailed = 304,
		[Token(Token = "0x400127F")]
		IPC_Failed = 305,
		[Token(Token = "0x4001280")]
		IPC_CompositorConnectFailed = 306,
		[Token(Token = "0x4001281")]
		IPC_CompositorInvalidConnectResponse = 307,
		[Token(Token = "0x4001282")]
		IPC_ConnectFailedAfterMultipleAttempts = 308,
		[Token(Token = "0x4001283")]
		Compositor_Failed = 400,
		[Token(Token = "0x4001284")]
		Compositor_D3D11HardwareRequired = 401,
		[Token(Token = "0x4001285")]
		Compositor_FirmwareRequiresUpdate = 402,
		[Token(Token = "0x4001286")]
		Compositor_OverlayInitFailed = 403,
		[Token(Token = "0x4001287")]
		Compositor_ScreenshotsInitFailed = 404,
		[Token(Token = "0x4001288")]
		Compositor_UnableToCreateDevice = 405,
		[Token(Token = "0x4001289")]
		VendorSpecific_UnableToConnectToOculusRuntime = 1000,
		[Token(Token = "0x400128A")]
		VendorSpecific_WindowsNotInDevMode = 1001,
		[Token(Token = "0x400128B")]
		VendorSpecific_HmdFound_CantOpenDevice = 1101,
		[Token(Token = "0x400128C")]
		VendorSpecific_HmdFound_UnableToRequestConfigStart = 1102,
		[Token(Token = "0x400128D")]
		VendorSpecific_HmdFound_NoStoredConfig = 1103,
		[Token(Token = "0x400128E")]
		VendorSpecific_HmdFound_ConfigTooBig = 1104,
		[Token(Token = "0x400128F")]
		VendorSpecific_HmdFound_ConfigTooSmall = 1105,
		[Token(Token = "0x4001290")]
		VendorSpecific_HmdFound_UnableToInitZLib = 1106,
		[Token(Token = "0x4001291")]
		VendorSpecific_HmdFound_CantReadFirmwareVersion = 1107,
		[Token(Token = "0x4001292")]
		VendorSpecific_HmdFound_UnableToSendUserDataStart = 1108,
		[Token(Token = "0x4001293")]
		VendorSpecific_HmdFound_UnableToGetUserDataStart = 1109,
		[Token(Token = "0x4001294")]
		VendorSpecific_HmdFound_UnableToGetUserDataNext = 1110,
		[Token(Token = "0x4001295")]
		VendorSpecific_HmdFound_UserDataAddressRange = 1111,
		[Token(Token = "0x4001296")]
		VendorSpecific_HmdFound_UserDataError = 1112,
		[Token(Token = "0x4001297")]
		VendorSpecific_HmdFound_ConfigFailedSanityCheck = 1113,
		[Token(Token = "0x4001298")]
		Steam_SteamInstallationNotFound = 2000
	}
	[Token(Token = "0x20002C3")]
	public enum EVRScreenshotType
	{
		[Token(Token = "0x400129A")]
		None,
		[Token(Token = "0x400129B")]
		Mono,
		[Token(Token = "0x400129C")]
		Stereo,
		[Token(Token = "0x400129D")]
		Cubemap,
		[Token(Token = "0x400129E")]
		MonoPanorama,
		[Token(Token = "0x400129F")]
		StereoPanorama
	}
	[Token(Token = "0x20002C4")]
	public enum EVRScreenshotPropertyFilenames
	{
		[Token(Token = "0x40012A1")]
		Preview,
		[Token(Token = "0x40012A2")]
		VR
	}
	[Token(Token = "0x20002C5")]
	public enum EVRTrackedCameraError
	{
		[Token(Token = "0x40012A4")]
		None = 0,
		[Token(Token = "0x40012A5")]
		OperationFailed = 100,
		[Token(Token = "0x40012A6")]
		InvalidHandle = 101,
		[Token(Token = "0x40012A7")]
		InvalidFrameHeaderVersion = 102,
		[Token(Token = "0x40012A8")]
		OutOfHandles = 103,
		[Token(Token = "0x40012A9")]
		IPCFailure = 104,
		[Token(Token = "0x40012AA")]
		NotSupportedForThisDevice = 105,
		[Token(Token = "0x40012AB")]
		SharedMemoryFailure = 106,
		[Token(Token = "0x40012AC")]
		FrameBufferingFailure = 107,
		[Token(Token = "0x40012AD")]
		StreamSetupFailure = 108,
		[Token(Token = "0x40012AE")]
		InvalidGLTextureId = 109,
		[Token(Token = "0x40012AF")]
		InvalidSharedTextureHandle = 110,
		[Token(Token = "0x40012B0")]
		FailedToGetGLTextureId = 111,
		[Token(Token = "0x40012B1")]
		SharedTextureFailure = 112,
		[Token(Token = "0x40012B2")]
		NoFrameAvailable = 113,
		[Token(Token = "0x40012B3")]
		InvalidArgument = 114,
		[Token(Token = "0x40012B4")]
		InvalidFrameBufferSize = 115
	}
	[Token(Token = "0x20002C6")]
	public enum EVRTrackedCameraFrameType
	{
		[Token(Token = "0x40012B6")]
		Distorted,
		[Token(Token = "0x40012B7")]
		Undistorted,
		[Token(Token = "0x40012B8")]
		MaximumUndistorted,
		[Token(Token = "0x40012B9")]
		MAX_CAMERA_FRAME_TYPES
	}
	[Token(Token = "0x20002C7")]
	public enum EVRApplicationError
	{
		[Token(Token = "0x40012BB")]
		None = 0,
		[Token(Token = "0x40012BC")]
		AppKeyAlreadyExists = 100,
		[Token(Token = "0x40012BD")]
		NoManifest = 101,
		[Token(Token = "0x40012BE")]
		NoApplication = 102,
		[Token(Token = "0x40012BF")]
		InvalidIndex = 103,
		[Token(Token = "0x40012C0")]
		UnknownApplication = 104,
		[Token(Token = "0x40012C1")]
		IPCFailed = 105,
		[Token(Token = "0x40012C2")]
		ApplicationAlreadyRunning = 106,
		[Token(Token = "0x40012C3")]
		InvalidManifest = 107,
		[Token(Token = "0x40012C4")]
		InvalidApplication = 108,
		[Token(Token = "0x40012C5")]
		LaunchFailed = 109,
		[Token(Token = "0x40012C6")]
		ApplicationAlreadyStarting = 110,
		[Token(Token = "0x40012C7")]
		LaunchInProgress = 111,
		[Token(Token = "0x40012C8")]
		OldApplicationQuitting = 112,
		[Token(Token = "0x40012C9")]
		TransitionAborted = 113,
		[Token(Token = "0x40012CA")]
		IsTemplate = 114,
		[Token(Token = "0x40012CB")]
		SteamVRIsExiting = 115,
		[Token(Token = "0x40012CC")]
		BufferTooSmall = 200,
		[Token(Token = "0x40012CD")]
		PropertyNotSet = 201,
		[Token(Token = "0x40012CE")]
		UnknownProperty = 202,
		[Token(Token = "0x40012CF")]
		InvalidParameter = 203
	}
	[Token(Token = "0x20002C8")]
	public enum EVRApplicationProperty
	{
		[Token(Token = "0x40012D1")]
		Name_String = 0,
		[Token(Token = "0x40012D2")]
		LaunchType_String = 11,
		[Token(Token = "0x40012D3")]
		WorkingDirectory_String = 12,
		[Token(Token = "0x40012D4")]
		BinaryPath_String = 13,
		[Token(Token = "0x40012D5")]
		Arguments_String = 14,
		[Token(Token = "0x40012D6")]
		URL_String = 15,
		[Token(Token = "0x40012D7")]
		Description_String = 50,
		[Token(Token = "0x40012D8")]
		NewsURL_String = 51,
		[Token(Token = "0x40012D9")]
		ImagePath_String = 52,
		[Token(Token = "0x40012DA")]
		Source_String = 53,
		[Token(Token = "0x40012DB")]
		ActionManifestURL_String = 54,
		[Token(Token = "0x40012DC")]
		IsDashboardOverlay_Bool = 60,
		[Token(Token = "0x40012DD")]
		IsTemplate_Bool = 61,
		[Token(Token = "0x40012DE")]
		IsInstanced_Bool = 62,
		[Token(Token = "0x40012DF")]
		IsInternal_Bool = 63,
		[Token(Token = "0x40012E0")]
		WantsCompositorPauseInStandby_Bool = 64,
		[Token(Token = "0x40012E1")]
		LastLaunchTime_Uint64 = 70
	}
	[Token(Token = "0x20002C9")]
	public enum EVRApplicationTransitionState
	{
		[Token(Token = "0x40012E3")]
		VRApplicationTransition_None = 0,
		[Token(Token = "0x40012E4")]
		VRApplicationTransition_OldAppQuitSent = 10,
		[Token(Token = "0x40012E5")]
		VRApplicationTransition_WaitingForExternalLaunch = 11,
		[Token(Token = "0x40012E6")]
		VRApplicationTransition_NewAppLaunched = 20
	}
	[Token(Token = "0x20002CA")]
	public enum ChaperoneCalibrationState
	{
		[Token(Token = "0x40012E8")]
		OK = 1,
		[Token(Token = "0x40012E9")]
		Warning = 100,
		[Token(Token = "0x40012EA")]
		Warning_BaseStationMayHaveMoved = 101,
		[Token(Token = "0x40012EB")]
		Warning_BaseStationRemoved = 102,
		[Token(Token = "0x40012EC")]
		Warning_SeatedBoundsInvalid = 103,
		[Token(Token = "0x40012ED")]
		Error = 200,
		[Token(Token = "0x40012EE")]
		Error_BaseStationUninitialized = 201,
		[Token(Token = "0x40012EF")]
		Error_BaseStationConflict = 202,
		[Token(Token = "0x40012F0")]
		Error_PlayAreaInvalid = 203,
		[Token(Token = "0x40012F1")]
		Error_CollisionBoundsInvalid = 204
	}
	[Token(Token = "0x20002CB")]
	public enum EChaperoneConfigFile
	{
		[Token(Token = "0x40012F3")]
		Live = 1,
		[Token(Token = "0x40012F4")]
		Temp
	}
	[Token(Token = "0x20002CC")]
	public enum EChaperoneImportFlags
	{
		[Token(Token = "0x40012F6")]
		EChaperoneImport_BoundsOnly = 1
	}
	[Token(Token = "0x20002CD")]
	public enum EVRCompositorError
	{
		[Token(Token = "0x40012F8")]
		None = 0,
		[Token(Token = "0x40012F9")]
		RequestFailed = 1,
		[Token(Token = "0x40012FA")]
		IncompatibleVersion = 100,
		[Token(Token = "0x40012FB")]
		DoNotHaveFocus = 101,
		[Token(Token = "0x40012FC")]
		InvalidTexture = 102,
		[Token(Token = "0x40012FD")]
		IsNotSceneApplication = 103,
		[Token(Token = "0x40012FE")]
		TextureIsOnWrongDevice = 104,
		[Token(Token = "0x40012FF")]
		TextureUsesUnsupportedFormat = 105,
		[Token(Token = "0x4001300")]
		SharedTexturesNotSupported = 106,
		[Token(Token = "0x4001301")]
		IndexOutOfRange = 107,
		[Token(Token = "0x4001302")]
		AlreadySubmitted = 108,
		[Token(Token = "0x4001303")]
		InvalidBounds = 109
	}
	[Token(Token = "0x20002CE")]
	public enum EVRCompositorTimingMode
	{
		[Token(Token = "0x4001305")]
		Implicit,
		[Token(Token = "0x4001306")]
		Explicit_RuntimePerformsPostPresentHandoff,
		[Token(Token = "0x4001307")]
		Explicit_ApplicationPerformsPostPresentHandoff
	}
	[Token(Token = "0x20002CF")]
	public enum VROverlayInputMethod
	{
		[Token(Token = "0x4001309")]
		None,
		[Token(Token = "0x400130A")]
		Mouse,
		[Token(Token = "0x400130B")]
		DualAnalog
	}
	[Token(Token = "0x20002D0")]
	public enum VROverlayTransformType
	{
		[Token(Token = "0x400130D")]
		VROverlayTransform_Absolute,
		[Token(Token = "0x400130E")]
		VROverlayTransform_TrackedDeviceRelative,
		[Token(Token = "0x400130F")]
		VROverlayTransform_SystemOverlay,
		[Token(Token = "0x4001310")]
		VROverlayTransform_TrackedComponent
	}
	[Token(Token = "0x20002D1")]
	public enum VROverlayFlags
	{
		[Token(Token = "0x4001312")]
		None,
		[Token(Token = "0x4001313")]
		Curved,
		[Token(Token = "0x4001314")]
		RGSS4X,
		[Token(Token = "0x4001315")]
		NoDashboardTab,
		[Token(Token = "0x4001316")]
		AcceptsGamepadEvents,
		[Token(Token = "0x4001317")]
		ShowGamepadFocus,
		[Token(Token = "0x4001318")]
		SendVRScrollEvents,
		[Token(Token = "0x4001319")]
		SendVRTouchpadEvents,
		[Token(Token = "0x400131A")]
		ShowTouchPadScrollWheel,
		[Token(Token = "0x400131B")]
		TransferOwnershipToInternalProcess,
		[Token(Token = "0x400131C")]
		SideBySide_Parallel,
		[Token(Token = "0x400131D")]
		SideBySide_Crossed,
		[Token(Token = "0x400131E")]
		Panorama,
		[Token(Token = "0x400131F")]
		StereoPanorama,
		[Token(Token = "0x4001320")]
		SortWithNonSceneOverlays,
		[Token(Token = "0x4001321")]
		VisibleInDashboard
	}
	[Token(Token = "0x20002D2")]
	public enum VRMessageOverlayResponse
	{
		[Token(Token = "0x4001323")]
		ButtonPress_0,
		[Token(Token = "0x4001324")]
		ButtonPress_1,
		[Token(Token = "0x4001325")]
		ButtonPress_2,
		[Token(Token = "0x4001326")]
		ButtonPress_3,
		[Token(Token = "0x4001327")]
		CouldntFindSystemOverlay,
		[Token(Token = "0x4001328")]
		CouldntFindOrCreateClientOverlay,
		[Token(Token = "0x4001329")]
		ApplicationQuit
	}
	[Token(Token = "0x20002D3")]
	public enum EGamepadTextInputMode
	{
		[Token(Token = "0x400132B")]
		k_EGamepadTextInputModeNormal,
		[Token(Token = "0x400132C")]
		k_EGamepadTextInputModePassword,
		[Token(Token = "0x400132D")]
		k_EGamepadTextInputModeSubmit
	}
	[Token(Token = "0x20002D4")]
	public enum EGamepadTextInputLineMode
	{
		[Token(Token = "0x400132F")]
		k_EGamepadTextInputLineModeSingleLine,
		[Token(Token = "0x4001330")]
		k_EGamepadTextInputLineModeMultipleLines
	}
	[Token(Token = "0x20002D5")]
	public enum EOverlayDirection
	{
		[Token(Token = "0x4001332")]
		Up,
		[Token(Token = "0x4001333")]
		Down,
		[Token(Token = "0x4001334")]
		Left,
		[Token(Token = "0x4001335")]
		Right,
		[Token(Token = "0x4001336")]
		Count
	}
	[Token(Token = "0x20002D6")]
	public enum EVROverlayIntersectionMaskPrimitiveType
	{
		[Token(Token = "0x4001338")]
		OverlayIntersectionPrimitiveType_Rectangle,
		[Token(Token = "0x4001339")]
		OverlayIntersectionPrimitiveType_Circle
	}
	[Token(Token = "0x20002D7")]
	public enum EVRRenderModelError
	{
		[Token(Token = "0x400133B")]
		None = 0,
		[Token(Token = "0x400133C")]
		Loading = 100,
		[Token(Token = "0x400133D")]
		NotSupported = 200,
		[Token(Token = "0x400133E")]
		InvalidArg = 300,
		[Token(Token = "0x400133F")]
		InvalidModel = 301,
		[Token(Token = "0x4001340")]
		NoShapes = 302,
		[Token(Token = "0x4001341")]
		MultipleShapes = 303,
		[Token(Token = "0x4001342")]
		TooManyVertices = 304,
		[Token(Token = "0x4001343")]
		MultipleTextures = 305,
		[Token(Token = "0x4001344")]
		BufferTooSmall = 306,
		[Token(Token = "0x4001345")]
		NotEnoughNormals = 307,
		[Token(Token = "0x4001346")]
		NotEnoughTexCoords = 308,
		[Token(Token = "0x4001347")]
		InvalidTexture = 400
	}
	[Token(Token = "0x20002D8")]
	public enum EVRComponentProperty
	{
		[Token(Token = "0x4001349")]
		IsStatic = 1,
		[Token(Token = "0x400134A")]
		IsVisible = 2,
		[Token(Token = "0x400134B")]
		IsTouched = 4,
		[Token(Token = "0x400134C")]
		IsPressed = 8,
		[Token(Token = "0x400134D")]
		IsScrolled = 0x10
	}
	[Token(Token = "0x20002D9")]
	public enum EVRNotificationType
	{
		[Token(Token = "0x400134F")]
		Transient,
		[Token(Token = "0x4001350")]
		Persistent,
		[Token(Token = "0x4001351")]
		Transient_SystemWithUserValue
	}
	[Token(Token = "0x20002DA")]
	public enum EVRNotificationStyle
	{
		[Token(Token = "0x4001353")]
		None = 0,
		[Token(Token = "0x4001354")]
		Application = 100,
		[Token(Token = "0x4001355")]
		Contact_Disabled = 200,
		[Token(Token = "0x4001356")]
		Contact_Enabled = 201,
		[Token(Token = "0x4001357")]
		Contact_Active = 202
	}
	[Token(Token = "0x20002DB")]
	public enum EVRSettingsError
	{
		[Token(Token = "0x4001359")]
		None,
		[Token(Token = "0x400135A")]
		IPCFailed,
		[Token(Token = "0x400135B")]
		WriteFailed,
		[Token(Token = "0x400135C")]
		ReadFailed,
		[Token(Token = "0x400135D")]
		JsonParseFailed,
		[Token(Token = "0x400135E")]
		UnsetSettingHasNoDefault
	}
	[Token(Token = "0x20002DC")]
	public enum EVRScreenshotError
	{
		[Token(Token = "0x4001360")]
		None = 0,
		[Token(Token = "0x4001361")]
		RequestFailed = 1,
		[Token(Token = "0x4001362")]
		IncompatibleVersion = 100,
		[Token(Token = "0x4001363")]
		NotFound = 101,
		[Token(Token = "0x4001364")]
		BufferTooSmall = 102,
		[Token(Token = "0x4001365")]
		ScreenshotAlreadyInProgress = 108
	}
	[StructLayout(2)]
	[Token(Token = "0x20002DD")]
	public struct VREvent_Data_t
	{
		[Token(Token = "0x4001366")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_Reserved_t reserved;

		[Token(Token = "0x4001367")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_Controller_t controller;

		[Token(Token = "0x4001368")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_Mouse_t mouse;

		[Token(Token = "0x4001369")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_Scroll_t scroll;

		[Token(Token = "0x400136A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_Process_t process;

		[Token(Token = "0x400136B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_Notification_t notification;

		[Token(Token = "0x400136C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_Overlay_t overlay;

		[Token(Token = "0x400136D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_Status_t status;

		[Token(Token = "0x400136E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_Ipd_t ipd;

		[Token(Token = "0x400136F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_Chaperone_t chaperone;

		[Token(Token = "0x4001370")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_PerformanceTest_t performanceTest;

		[Token(Token = "0x4001371")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_TouchPadMove_t touchPadMove;

		[Token(Token = "0x4001372")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_SeatedZeroPoseReset_t seatedZeroPoseReset;

		[Token(Token = "0x4001373")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_Screenshot_t screenshot;

		[Token(Token = "0x4001374")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_ScreenshotProgress_t screenshotProgress;

		[Token(Token = "0x4001375")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_ApplicationLaunch_t applicationLaunch;

		[Token(Token = "0x4001376")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_EditingCameraSurface_t cameraSurface;

		[Token(Token = "0x4001377")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_MessageOverlay_t messageOverlay;

		[Token(Token = "0x4001378")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_Property_t property;

		[Token(Token = "0x4001379")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_DualAnalog_t dualAnalog;

		[Token(Token = "0x400137A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_HapticVibration_t hapticVibration;

		[Token(Token = "0x400137B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_Keyboard_t keyboard;
	}
	[StructLayout(2)]
	[Token(Token = "0x20002DE")]
	public struct VROverlayIntersectionMaskPrimitive_Data_t
	{
		[Token(Token = "0x400137C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IntersectionMaskRectangle_t m_Rectangle;

		[Token(Token = "0x400137D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IntersectionMaskCircle_t m_Circle;
	}
	[Token(Token = "0x20002DF")]
	public struct HmdMatrix34_t
	{
		[Token(Token = "0x400137E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float m0;

		[Token(Token = "0x400137F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float m1;

		[Token(Token = "0x4001380")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float m2;

		[Token(Token = "0x4001381")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float m3;

		[Token(Token = "0x4001382")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float m4;

		[Token(Token = "0x4001383")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float m5;

		[Token(Token = "0x4001384")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float m6;

		[Token(Token = "0x4001385")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float m7;

		[Token(Token = "0x4001386")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float m8;

		[Token(Token = "0x4001387")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float m9;

		[Token(Token = "0x4001388")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float m10;

		[Token(Token = "0x4001389")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float m11;
	}
	[Token(Token = "0x20002E0")]
	public struct HmdMatrix44_t
	{
		[Token(Token = "0x400138A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float m0;

		[Token(Token = "0x400138B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float m1;

		[Token(Token = "0x400138C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float m2;

		[Token(Token = "0x400138D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float m3;

		[Token(Token = "0x400138E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float m4;

		[Token(Token = "0x400138F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float m5;

		[Token(Token = "0x4001390")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float m6;

		[Token(Token = "0x4001391")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float m7;

		[Token(Token = "0x4001392")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float m8;

		[Token(Token = "0x4001393")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float m9;

		[Token(Token = "0x4001394")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float m10;

		[Token(Token = "0x4001395")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float m11;

		[Token(Token = "0x4001396")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float m12;

		[Token(Token = "0x4001397")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float m13;

		[Token(Token = "0x4001398")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float m14;

		[Token(Token = "0x4001399")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float m15;
	}
	[Token(Token = "0x20002E1")]
	public struct HmdVector3_t
	{
		[Token(Token = "0x400139A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float v0;

		[Token(Token = "0x400139B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float v1;

		[Token(Token = "0x400139C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float v2;
	}
	[Token(Token = "0x20002E2")]
	public struct HmdVector4_t
	{
		[Token(Token = "0x400139D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float v0;

		[Token(Token = "0x400139E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float v1;

		[Token(Token = "0x400139F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float v2;

		[Token(Token = "0x40013A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float v3;
	}
	[Token(Token = "0x20002E3")]
	public struct HmdVector3d_t
	{
		[Token(Token = "0x40013A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public double v0;

		[Token(Token = "0x40013A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public double v1;

		[Token(Token = "0x40013A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public double v2;
	}
	[Token(Token = "0x20002E4")]
	public struct HmdVector2_t
	{
		[Token(Token = "0x40013A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float v0;

		[Token(Token = "0x40013A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float v1;
	}
	[Token(Token = "0x20002E5")]
	public struct HmdQuaternion_t
	{
		[Token(Token = "0x40013A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public double w;

		[Token(Token = "0x40013A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public double x;

		[Token(Token = "0x40013A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public double y;

		[Token(Token = "0x40013A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public double z;
	}
	[Token(Token = "0x20002E6")]
	public struct HmdColor_t
	{
		[Token(Token = "0x40013AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float r;

		[Token(Token = "0x40013AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float g;

		[Token(Token = "0x40013AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float b;

		[Token(Token = "0x40013AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float a;
	}
	[Token(Token = "0x20002E7")]
	public struct HmdQuad_t
	{
		[Token(Token = "0x40013AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public HmdVector3_t vCorners0;

		[Token(Token = "0x40013AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public HmdVector3_t vCorners1;

		[Token(Token = "0x40013B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public HmdVector3_t vCorners2;

		[Token(Token = "0x40013B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public HmdVector3_t vCorners3;
	}
	[Token(Token = "0x20002E8")]
	public struct HmdRect2_t
	{
		[Token(Token = "0x40013B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public HmdVector2_t vTopLeft;

		[Token(Token = "0x40013B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public HmdVector2_t vBottomRight;
	}
	[Token(Token = "0x20002E9")]
	public struct DistortionCoordinates_t
	{
		[Token(Token = "0x40013B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float rfRed0;

		[Token(Token = "0x40013B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float rfRed1;

		[Token(Token = "0x40013B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float rfGreen0;

		[Token(Token = "0x40013B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float rfGreen1;

		[Token(Token = "0x40013B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float rfBlue0;

		[Token(Token = "0x40013B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float rfBlue1;
	}
	[Token(Token = "0x20002EA")]
	public struct Texture_t
	{
		[Token(Token = "0x40013BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IntPtr handle;

		[Token(Token = "0x40013BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ETextureType eType;

		[Token(Token = "0x40013BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public EColorSpace eColorSpace;
	}
	[Token(Token = "0x20002EB")]
	public struct TrackedDevicePose_t
	{
		[Token(Token = "0x40013BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public HmdMatrix34_t mDeviceToAbsoluteTracking;

		[Token(Token = "0x40013BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public HmdVector3_t vVelocity;

		[Token(Token = "0x40013BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public HmdVector3_t vAngularVelocity;

		[Token(Token = "0x40013C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public ETrackingResult eTrackingResult;

		[Token(Token = "0x40013C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public bool bPoseIsValid;

		[Token(Token = "0x40013C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
		public bool bDeviceIsConnected;
	}
	[Token(Token = "0x20002EC")]
	public struct VRTextureBounds_t
	{
		[Token(Token = "0x40013C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float uMin;

		[Token(Token = "0x40013C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float vMin;

		[Token(Token = "0x40013C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float uMax;

		[Token(Token = "0x40013C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float vMax;
	}
	[Token(Token = "0x20002ED")]
	public struct VRTextureWithPose_t
	{
		[Token(Token = "0x40013C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public HmdMatrix34_t mDeviceToAbsoluteTracking;
	}
	[Token(Token = "0x20002EE")]
	public struct VRTextureDepthInfo_t
	{
		[Token(Token = "0x40013C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IntPtr handle;

		[Token(Token = "0x40013C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public HmdMatrix44_t mProjection;

		[Token(Token = "0x40013CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public HmdVector2_t vRange;
	}
	[Token(Token = "0x20002EF")]
	public struct VRTextureWithDepth_t
	{
		[Token(Token = "0x40013CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VRTextureDepthInfo_t depth;
	}
	[Token(Token = "0x20002F0")]
	public struct VRTextureWithPoseAndDepth_t
	{
		[Token(Token = "0x40013CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VRTextureDepthInfo_t depth;
	}
	[Token(Token = "0x20002F1")]
	public struct VRVulkanTextureData_t
	{
		[Token(Token = "0x40013CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ulong m_nImage;

		[Token(Token = "0x40013CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public IntPtr m_pDevice;

		[Token(Token = "0x40013CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public IntPtr m_pPhysicalDevice;

		[Token(Token = "0x40013D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public IntPtr m_pInstance;

		[Token(Token = "0x40013D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public IntPtr m_pQueue;

		[Token(Token = "0x40013D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public uint m_nQueueFamilyIndex;

		[Token(Token = "0x40013D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public uint m_nWidth;

		[Token(Token = "0x40013D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public uint m_nHeight;

		[Token(Token = "0x40013D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public uint m_nFormat;

		[Token(Token = "0x40013D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public uint m_nSampleCount;
	}
	[Token(Token = "0x20002F2")]
	public struct D3D12TextureData_t
	{
		[Token(Token = "0x40013D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IntPtr m_pResource;

		[Token(Token = "0x40013D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public IntPtr m_pCommandQueue;

		[Token(Token = "0x40013D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public uint m_nNodeMask;
	}
	[Token(Token = "0x20002F3")]
	public struct VREvent_Controller_t
	{
		[Token(Token = "0x40013DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint button;
	}
	[Token(Token = "0x20002F4")]
	public struct VREvent_Mouse_t
	{
		[Token(Token = "0x40013DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float x;

		[Token(Token = "0x40013DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float y;

		[Token(Token = "0x40013DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public uint button;
	}
	[Token(Token = "0x20002F5")]
	public struct VREvent_Scroll_t
	{
		[Token(Token = "0x40013DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float xdelta;

		[Token(Token = "0x40013DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float ydelta;

		[Token(Token = "0x40013E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public uint repeatCount;
	}
	[Token(Token = "0x20002F6")]
	public struct VREvent_TouchPadMove_t
	{
		[Token(Token = "0x40013E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool bFingerDown;

		[Token(Token = "0x40013E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float flSecondsFingerDown;

		[Token(Token = "0x40013E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float fValueXFirst;

		[Token(Token = "0x40013E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float fValueYFirst;

		[Token(Token = "0x40013E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float fValueXRaw;

		[Token(Token = "0x40013E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float fValueYRaw;
	}
	[Token(Token = "0x20002F7")]
	public struct VREvent_Notification_t
	{
		[Token(Token = "0x40013E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ulong ulUserValue;

		[Token(Token = "0x40013E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public uint notificationId;
	}
	[Token(Token = "0x20002F8")]
	public struct VREvent_Process_t
	{
		[Token(Token = "0x40013E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint pid;

		[Token(Token = "0x40013EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public uint oldPid;

		[Token(Token = "0x40013EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public bool bForced;
	}
	[Token(Token = "0x20002F9")]
	public struct VREvent_Overlay_t
	{
		[Token(Token = "0x40013EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ulong overlayHandle;
	}
	[Token(Token = "0x20002FA")]
	public struct VREvent_Status_t
	{
		[Token(Token = "0x40013ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint statusState;
	}
	[Token(Token = "0x20002FB")]
	public struct VREvent_Keyboard_t
	{
		[Token(Token = "0x40013EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public byte cNewInput0;

		[Token(Token = "0x40013EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		public byte cNewInput1;

		[Token(Token = "0x40013F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
		public byte cNewInput2;

		[Token(Token = "0x40013F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3")]
		public byte cNewInput3;

		[Token(Token = "0x40013F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public byte cNewInput4;

		[Token(Token = "0x40013F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5")]
		public byte cNewInput5;

		[Token(Token = "0x40013F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6")]
		public byte cNewInput6;

		[Token(Token = "0x40013F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7")]
		public byte cNewInput7;

		[Token(Token = "0x40013F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ulong uUserValue;
	}
	[Token(Token = "0x20002FC")]
	public struct VREvent_Ipd_t
	{
		[Token(Token = "0x40013F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float ipdMeters;
	}
	[Token(Token = "0x20002FD")]
	public struct VREvent_Chaperone_t
	{
		[Token(Token = "0x40013F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ulong m_nPreviousUniverse;

		[Token(Token = "0x40013F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ulong m_nCurrentUniverse;
	}
	[Token(Token = "0x20002FE")]
	public struct VREvent_Reserved_t
	{
		[Token(Token = "0x40013FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ulong reserved0;

		[Token(Token = "0x40013FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ulong reserved1;
	}
	[Token(Token = "0x20002FF")]
	public struct VREvent_PerformanceTest_t
	{
		[Token(Token = "0x40013FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint m_nFidelityLevel;
	}
	[Token(Token = "0x2000300")]
	public struct VREvent_SeatedZeroPoseReset_t
	{
		[Token(Token = "0x40013FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool bResetBySystemMenu;
	}
	[Token(Token = "0x2000301")]
	public struct VREvent_Screenshot_t
	{
		[Token(Token = "0x40013FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint handle;

		[Token(Token = "0x40013FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public uint type;
	}
	[Token(Token = "0x2000302")]
	public struct VREvent_ScreenshotProgress_t
	{
		[Token(Token = "0x4001400")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float progress;
	}
	[Token(Token = "0x2000303")]
	public struct VREvent_ApplicationLaunch_t
	{
		[Token(Token = "0x4001401")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint pid;

		[Token(Token = "0x4001402")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public uint unArgsHandle;
	}
	[Token(Token = "0x2000304")]
	public struct VREvent_EditingCameraSurface_t
	{
		[Token(Token = "0x4001403")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ulong overlayHandle;

		[Token(Token = "0x4001404")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public uint nVisualMode;
	}
	[Token(Token = "0x2000305")]
	public struct VREvent_MessageOverlay_t
	{
		[Token(Token = "0x4001405")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint unVRMessageOverlayResponse;
	}
	[Token(Token = "0x2000306")]
	public struct VREvent_Property_t
	{
		[Token(Token = "0x4001406")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ulong container;

		[Token(Token = "0x4001407")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ETrackedDeviceProperty prop;
	}
	[Token(Token = "0x2000307")]
	public struct VREvent_DualAnalog_t
	{
		[Token(Token = "0x4001408")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float x;

		[Token(Token = "0x4001409")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float y;

		[Token(Token = "0x400140A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float transformedX;

		[Token(Token = "0x400140B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float transformedY;

		[Token(Token = "0x400140C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public EDualAnalogWhich which;
	}
	[Token(Token = "0x2000308")]
	public struct VREvent_HapticVibration_t
	{
		[Token(Token = "0x400140D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ulong containerHandle;

		[Token(Token = "0x400140E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ulong componentHandle;

		[Token(Token = "0x400140F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float fDurationSeconds;

		[Token(Token = "0x4001410")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float fFrequency;

		[Token(Token = "0x4001411")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float fAmplitude;
	}
	[Token(Token = "0x2000309")]
	public struct VREvent_t
	{
		[Token(Token = "0x4001412")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint eventType;

		[Token(Token = "0x4001413")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public uint trackedDeviceIndex;

		[Token(Token = "0x4001414")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float eventAgeSeconds;

		[Token(Token = "0x4001415")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public VREvent_Data_t data;
	}
	[Token(Token = "0x200030A")]
	public struct VREvent_t_Packed
	{
		[Token(Token = "0x4001416")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint eventType;

		[Token(Token = "0x4001417")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public uint trackedDeviceIndex;

		[Token(Token = "0x4001418")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float eventAgeSeconds;

		[Token(Token = "0x4001419")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public VREvent_Data_t data;

		[Token(Token = "0x60013F7")]
		[Address(RVA = "0x6DE170", Offset = "0x6DE170", VA = "0x6DE170")]
		public VREvent_t_Packed(VREvent_t unpacked)
		{
		}

		[Token(Token = "0x60013F8")]
		[Address(RVA = "0x6DE1C4", Offset = "0x6DE1C4", VA = "0x6DE1C4")]
		public void Unpack(ref VREvent_t unpacked)
		{
		}
	}
	[Token(Token = "0x200030B")]
	public struct HiddenAreaMesh_t
	{
		[Token(Token = "0x400141A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IntPtr pVertexData;

		[Token(Token = "0x400141B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public uint unTriangleCount;
	}
	[Token(Token = "0x200030C")]
	public struct VRControllerAxis_t
	{
		[Token(Token = "0x400141C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float x;

		[Token(Token = "0x400141D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float y;
	}
	[Token(Token = "0x200030D")]
	public struct VRControllerState_t
	{
		[Token(Token = "0x400141E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint unPacketNum;

		[Token(Token = "0x400141F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ulong ulButtonPressed;

		[Token(Token = "0x4001420")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ulong ulButtonTouched;

		[Token(Token = "0x4001421")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public VRControllerAxis_t rAxis0;

		[Token(Token = "0x4001422")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public VRControllerAxis_t rAxis1;

		[Token(Token = "0x4001423")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public VRControllerAxis_t rAxis2;

		[Token(Token = "0x4001424")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public VRControllerAxis_t rAxis3;

		[Token(Token = "0x4001425")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public VRControllerAxis_t rAxis4;
	}
	[Token(Token = "0x200030E")]
	public struct VRControllerState_t_Packed
	{
		[Token(Token = "0x4001426")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint unPacketNum;

		[Token(Token = "0x4001427")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public ulong ulButtonPressed;

		[Token(Token = "0x4001428")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public ulong ulButtonTouched;

		[Token(Token = "0x4001429")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public VRControllerAxis_t rAxis0;

		[Token(Token = "0x400142A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public VRControllerAxis_t rAxis1;

		[Token(Token = "0x400142B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public VRControllerAxis_t rAxis2;

		[Token(Token = "0x400142C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public VRControllerAxis_t rAxis3;

		[Token(Token = "0x400142D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public VRControllerAxis_t rAxis4;

		[Token(Token = "0x60013F9")]
		[Address(RVA = "0x6DE128", Offset = "0x6DE128", VA = "0x6DE128")]
		public VRControllerState_t_Packed(VRControllerState_t unpacked)
		{
		}

		[Token(Token = "0x60013FA")]
		[Address(RVA = "0x6DE168", Offset = "0x6DE168", VA = "0x6DE168")]
		public void Unpack(ref VRControllerState_t unpacked)
		{
		}
	}
	[Token(Token = "0x200030F")]
	public struct Compositor_OverlaySettings
	{
		[Token(Token = "0x400142E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint size;

		[Token(Token = "0x400142F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public bool curved;

		[Token(Token = "0x4001430")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5")]
		public bool antialias;

		[Token(Token = "0x4001431")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float scale;

		[Token(Token = "0x4001432")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float distance;

		[Token(Token = "0x4001433")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float alpha;

		[Token(Token = "0x4001434")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float uOffset;

		[Token(Token = "0x4001435")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float vOffset;

		[Token(Token = "0x4001436")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float uScale;

		[Token(Token = "0x4001437")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float vScale;

		[Token(Token = "0x4001438")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float gridDivs;

		[Token(Token = "0x4001439")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float gridWidth;

		[Token(Token = "0x400143A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float gridScale;

		[Token(Token = "0x400143B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public HmdMatrix44_t transform;
	}
	[Token(Token = "0x2000310")]
	public struct CameraVideoStreamFrameHeader_t
	{
		[Token(Token = "0x400143C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public EVRTrackedCameraFrameType eFrameType;

		[Token(Token = "0x400143D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public uint nWidth;

		[Token(Token = "0x400143E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public uint nHeight;

		[Token(Token = "0x400143F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public uint nBytesPerPixel;

		[Token(Token = "0x4001440")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public uint nFrameSequence;

		[Token(Token = "0x4001441")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public TrackedDevicePose_t standingTrackedDevicePose;
	}
	[Token(Token = "0x2000311")]
	public struct DriverDirectMode_FrameTiming
	{
		[Token(Token = "0x4001442")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint m_nSize;

		[Token(Token = "0x4001443")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public uint m_nNumFramePresents;

		[Token(Token = "0x4001444")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public uint m_nNumMisPresented;

		[Token(Token = "0x4001445")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public uint m_nNumDroppedFrames;

		[Token(Token = "0x4001446")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public uint m_nReprojectionFlags;
	}
	[Token(Token = "0x2000312")]
	public struct AppOverrideKeys_t
	{
		[Token(Token = "0x4001447")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IntPtr pchKey;

		[Token(Token = "0x4001448")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public IntPtr pchValue;
	}
	[Token(Token = "0x2000313")]
	public struct Compositor_FrameTiming
	{
		[Token(Token = "0x4001449")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint m_nSize;

		[Token(Token = "0x400144A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public uint m_nFrameIndex;

		[Token(Token = "0x400144B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public uint m_nNumFramePresents;

		[Token(Token = "0x400144C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public uint m_nNumMisPresented;

		[Token(Token = "0x400144D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public uint m_nNumDroppedFrames;

		[Token(Token = "0x400144E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public uint m_nReprojectionFlags;

		[Token(Token = "0x400144F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public double m_flSystemTimeInSeconds;

		[Token(Token = "0x4001450")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float m_flPreSubmitGpuMs;

		[Token(Token = "0x4001451")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float m_flPostSubmitGpuMs;

		[Token(Token = "0x4001452")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float m_flTotalRenderGpuMs;

		[Token(Token = "0x4001453")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float m_flCompositorRenderGpuMs;

		[Token(Token = "0x4001454")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float m_flCompositorRenderCpuMs;

		[Token(Token = "0x4001455")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float m_flCompositorIdleCpuMs;

		[Token(Token = "0x4001456")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float m_flClientFrameIntervalMs;

		[Token(Token = "0x4001457")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float m_flPresentCallCpuMs;

		[Token(Token = "0x4001458")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float m_flWaitForPresentCpuMs;

		[Token(Token = "0x4001459")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float m_flSubmitFrameMs;

		[Token(Token = "0x400145A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float m_flWaitGetPosesCalledMs;

		[Token(Token = "0x400145B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float m_flNewPosesReadyMs;

		[Token(Token = "0x400145C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float m_flNewFrameReadyMs;

		[Token(Token = "0x400145D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float m_flCompositorUpdateStartMs;

		[Token(Token = "0x400145E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float m_flCompositorUpdateEndMs;

		[Token(Token = "0x400145F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float m_flCompositorRenderStartMs;

		[Token(Token = "0x4001460")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public TrackedDevicePose_t m_HmdPose;
	}
	[Token(Token = "0x2000314")]
	public struct Compositor_CumulativeStats
	{
		[Token(Token = "0x4001461")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint m_nPid;

		[Token(Token = "0x4001462")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public uint m_nNumFramePresents;

		[Token(Token = "0x4001463")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public uint m_nNumDroppedFrames;

		[Token(Token = "0x4001464")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public uint m_nNumReprojectedFrames;

		[Token(Token = "0x4001465")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public uint m_nNumFramePresentsOnStartup;

		[Token(Token = "0x4001466")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public uint m_nNumDroppedFramesOnStartup;

		[Token(Token = "0x4001467")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public uint m_nNumReprojectedFramesOnStartup;

		[Token(Token = "0x4001468")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public uint m_nNumLoading;

		[Token(Token = "0x4001469")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public uint m_nNumFramePresentsLoading;

		[Token(Token = "0x400146A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public uint m_nNumDroppedFramesLoading;

		[Token(Token = "0x400146B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public uint m_nNumReprojectedFramesLoading;

		[Token(Token = "0x400146C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public uint m_nNumTimedOut;

		[Token(Token = "0x400146D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public uint m_nNumFramePresentsTimedOut;

		[Token(Token = "0x400146E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public uint m_nNumDroppedFramesTimedOut;

		[Token(Token = "0x400146F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public uint m_nNumReprojectedFramesTimedOut;
	}
	[Token(Token = "0x2000315")]
	public struct VROverlayIntersectionParams_t
	{
		[Token(Token = "0x4001470")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public HmdVector3_t vSource;

		[Token(Token = "0x4001471")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public HmdVector3_t vDirection;

		[Token(Token = "0x4001472")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ETrackingUniverseOrigin eOrigin;
	}
	[Token(Token = "0x2000316")]
	public struct VROverlayIntersectionResults_t
	{
		[Token(Token = "0x4001473")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public HmdVector3_t vPoint;

		[Token(Token = "0x4001474")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public HmdVector3_t vNormal;

		[Token(Token = "0x4001475")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public HmdVector2_t vUVs;

		[Token(Token = "0x4001476")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float fDistance;
	}
	[Token(Token = "0x2000317")]
	public struct IntersectionMaskRectangle_t
	{
		[Token(Token = "0x4001477")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float m_flTopLeftX;

		[Token(Token = "0x4001478")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float m_flTopLeftY;

		[Token(Token = "0x4001479")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float m_flWidth;

		[Token(Token = "0x400147A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float m_flHeight;
	}
	[Token(Token = "0x2000318")]
	public struct IntersectionMaskCircle_t
	{
		[Token(Token = "0x400147B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float m_flCenterX;

		[Token(Token = "0x400147C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float m_flCenterY;

		[Token(Token = "0x400147D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float m_flRadius;
	}
	[Token(Token = "0x2000319")]
	public struct VROverlayIntersectionMaskPrimitive_t
	{
		[Token(Token = "0x400147E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public EVROverlayIntersectionMaskPrimitiveType m_nPrimitiveType;

		[Token(Token = "0x400147F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public VROverlayIntersectionMaskPrimitive_Data_t m_Primitive;
	}
	[Token(Token = "0x200031A")]
	public struct RenderModel_ComponentState_t
	{
		[Token(Token = "0x4001480")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public HmdMatrix34_t mTrackingToComponentRenderModel;

		[Token(Token = "0x4001481")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public HmdMatrix34_t mTrackingToComponentLocal;

		[Token(Token = "0x4001482")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public uint uProperties;
	}
	[Token(Token = "0x200031B")]
	public struct RenderModel_Vertex_t
	{
		[Token(Token = "0x4001483")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public HmdVector3_t vPosition;

		[Token(Token = "0x4001484")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public HmdVector3_t vNormal;

		[Token(Token = "0x4001485")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float rfTextureCoord0;

		[Token(Token = "0x4001486")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float rfTextureCoord1;
	}
	[Token(Token = "0x200031C")]
	public struct RenderModel_TextureMap_t
	{
		[Token(Token = "0x4001487")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public char unWidth;

		[Token(Token = "0x4001488")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
		public char unHeight;

		[Token(Token = "0x4001489")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public IntPtr rubTextureMapData;
	}
	[Token(Token = "0x200031D")]
	public struct RenderModel_TextureMap_t_Packed
	{
		[Token(Token = "0x400148A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public char unWidth;

		[Token(Token = "0x400148B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
		public char unHeight;

		[Token(Token = "0x400148C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public IntPtr rubTextureMapData;

		[Token(Token = "0x60013FB")]
		[Address(RVA = "0x6DE0A8", Offset = "0x6DE0A8", VA = "0x6DE0A8")]
		public RenderModel_TextureMap_t_Packed(RenderModel_TextureMap_t unpacked)
		{
		}

		[Token(Token = "0x60013FC")]
		[Address(RVA = "0x6DE0BC", Offset = "0x6DE0BC", VA = "0x6DE0BC")]
		public void Unpack(ref RenderModel_TextureMap_t unpacked)
		{
		}
	}
	[Token(Token = "0x200031E")]
	public struct RenderModel_t
	{
		[Token(Token = "0x400148D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IntPtr rVertexData;

		[Token(Token = "0x400148E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public uint unVertexCount;

		[Token(Token = "0x400148F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public IntPtr rIndexData;

		[Token(Token = "0x4001490")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public uint unTriangleCount;

		[Token(Token = "0x4001491")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int diffuseTextureId;
	}
	[Token(Token = "0x200031F")]
	public struct RenderModel_t_Packed
	{
		[Token(Token = "0x4001492")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IntPtr rVertexData;

		[Token(Token = "0x4001493")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public uint unVertexCount;

		[Token(Token = "0x4001494")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public IntPtr rIndexData;

		[Token(Token = "0x4001495")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public uint unTriangleCount;

		[Token(Token = "0x4001496")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int diffuseTextureId;

		[Token(Token = "0x60013FD")]
		[Address(RVA = "0x6DE0D8", Offset = "0x6DE0D8", VA = "0x6DE0D8")]
		public RenderModel_t_Packed(RenderModel_t unpacked)
		{
		}

		[Token(Token = "0x60013FE")]
		[Address(RVA = "0x6DE0FC", Offset = "0x6DE0FC", VA = "0x6DE0FC")]
		public void Unpack(ref RenderModel_t unpacked)
		{
		}
	}
	[Token(Token = "0x2000320")]
	public struct RenderModel_ControllerMode_State_t
	{
		[Token(Token = "0x4001497")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool bScrollWheelVisible;
	}
	[Token(Token = "0x2000321")]
	public struct NotificationBitmap_t
	{
		[Token(Token = "0x4001498")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IntPtr m_pImageData;

		[Token(Token = "0x4001499")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int m_nWidth;

		[Token(Token = "0x400149A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public int m_nHeight;

		[Token(Token = "0x400149B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int m_nBytesPerPixel;
	}
	[Token(Token = "0x2000322")]
	public struct COpenVRContext
	{
		[Token(Token = "0x400149C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IntPtr m_pVRSystem;

		[Token(Token = "0x400149D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public IntPtr m_pVRChaperone;

		[Token(Token = "0x400149E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public IntPtr m_pVRChaperoneSetup;

		[Token(Token = "0x400149F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public IntPtr m_pVRCompositor;

		[Token(Token = "0x40014A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public IntPtr m_pVROverlay;

		[Token(Token = "0x40014A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public IntPtr m_pVRResources;

		[Token(Token = "0x40014A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public IntPtr m_pVRRenderModels;

		[Token(Token = "0x40014A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public IntPtr m_pVRExtendedDisplay;

		[Token(Token = "0x40014A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public IntPtr m_pVRSettings;

		[Token(Token = "0x40014A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public IntPtr m_pVRApplications;

		[Token(Token = "0x40014A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public IntPtr m_pVRTrackedCamera;

		[Token(Token = "0x40014A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public IntPtr m_pVRScreenshots;

		[Token(Token = "0x40014A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public IntPtr m_pVRDriverManager;
	}
	[Token(Token = "0x2000323")]
	public class OpenVR
	{
		[Token(Token = "0x20007B3")]
		private class COpenVRContext
		{
			[Token(Token = "0x40028F1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private CVRSystem m_pVRSystem;

			[Token(Token = "0x40028F2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private CVRChaperone m_pVRChaperone;

			[Token(Token = "0x40028F3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private CVRChaperoneSetup m_pVRChaperoneSetup;

			[Token(Token = "0x40028F4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private CVRCompositor m_pVRCompositor;

			[Token(Token = "0x40028F5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private CVROverlay m_pVROverlay;

			[Token(Token = "0x40028F6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private CVRRenderModels m_pVRRenderModels;

			[Token(Token = "0x40028F7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private CVRExtendedDisplay m_pVRExtendedDisplay;

			[Token(Token = "0x40028F8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private CVRSettings m_pVRSettings;

			[Token(Token = "0x40028F9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private CVRApplications m_pVRApplications;

			[Token(Token = "0x40028FA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private CVRScreenshots m_pVRScreenshots;

			[Token(Token = "0x40028FB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private CVRTrackedCamera m_pVRTrackedCamera;

			[Token(Token = "0x60031D0")]
			[Address(RVA = "0x80BEB8", Offset = "0x80BEB8", VA = "0x80BEB8")]
			public COpenVRContext()
			{
			}

			[Token(Token = "0x60031D1")]
			[Address(RVA = "0x80CD18", Offset = "0x80CD18", VA = "0x80CD18")]
			public void Clear()
			{
			}

			[Token(Token = "0x60031D2")]
			[Address(RVA = "0x80CDA0", Offset = "0x80CDA0", VA = "0x80CDA0")]
			private void CheckClear()
			{
			}

			[Token(Token = "0x60031D3")]
			[Address(RVA = "0x80BF58", Offset = "0x80BF58", VA = "0x80BF58")]
			public CVRSystem VRSystem()
			{
				return null;
			}

			[Token(Token = "0x60031D4")]
			[Address(RVA = "0x80C088", Offset = "0x80C088", VA = "0x80C088")]
			public CVRChaperone VRChaperone()
			{
				return null;
			}

			[Token(Token = "0x60031D5")]
			[Address(RVA = "0x80C1B8", Offset = "0x80C1B8", VA = "0x80C1B8")]
			public CVRChaperoneSetup VRChaperoneSetup()
			{
				return null;
			}

			[Token(Token = "0x60031D6")]
			[Address(RVA = "0x80C2E8", Offset = "0x80C2E8", VA = "0x80C2E8")]
			public CVRCompositor VRCompositor()
			{
				return null;
			}

			[Token(Token = "0x60031D7")]
			[Address(RVA = "0x80C418", Offset = "0x80C418", VA = "0x80C418")]
			public CVROverlay VROverlay()
			{
				return null;
			}

			[Token(Token = "0x60031D8")]
			[Address(RVA = "0x80C548", Offset = "0x80C548", VA = "0x80C548")]
			public CVRRenderModels VRRenderModels()
			{
				return null;
			}

			[Token(Token = "0x60031D9")]
			[Address(RVA = "0x80C678", Offset = "0x80C678", VA = "0x80C678")]
			public CVRExtendedDisplay VRExtendedDisplay()
			{
				return null;
			}

			[Token(Token = "0x60031DA")]
			[Address(RVA = "0x80C7A8", Offset = "0x80C7A8", VA = "0x80C7A8")]
			public CVRSettings VRSettings()
			{
				return null;
			}

			[Token(Token = "0x60031DB")]
			[Address(RVA = "0x80C8D8", Offset = "0x80C8D8", VA = "0x80C8D8")]
			public CVRApplications VRApplications()
			{
				return null;
			}

			[Token(Token = "0x60031DC")]
			[Address(RVA = "0x80CA08", Offset = "0x80CA08", VA = "0x80CA08")]
			public CVRScreenshots VRScreenshots()
			{
				return null;
			}

			[Token(Token = "0x60031DD")]
			[Address(RVA = "0x80CB38", Offset = "0x80CB38", VA = "0x80CB38")]
			public CVRTrackedCamera VRTrackedCamera()
			{
				return null;
			}
		}

		[Token(Token = "0x40014A9")]
		public const uint k_nDriverNone = uint.MaxValue;

		[Token(Token = "0x40014AA")]
		public const uint k_unMaxDriverDebugResponseSize = 32768u;

		[Token(Token = "0x40014AB")]
		public const uint k_unTrackedDeviceIndex_Hmd = 0u;

		[Token(Token = "0x40014AC")]
		public const uint k_unMaxTrackedDeviceCount = 64u;

		[Token(Token = "0x40014AD")]
		public const uint k_unTrackedDeviceIndexOther = 4294967294u;

		[Token(Token = "0x40014AE")]
		public const uint k_unTrackedDeviceIndexInvalid = uint.MaxValue;

		[Token(Token = "0x40014AF")]
		public const ulong k_ulInvalidPropertyContainer = 0uL;

		[Token(Token = "0x40014B0")]
		public const uint k_unInvalidPropertyTag = 0u;

		[Token(Token = "0x40014B1")]
		public const uint k_unFloatPropertyTag = 1u;

		[Token(Token = "0x40014B2")]
		public const uint k_unInt32PropertyTag = 2u;

		[Token(Token = "0x40014B3")]
		public const uint k_unUint64PropertyTag = 3u;

		[Token(Token = "0x40014B4")]
		public const uint k_unBoolPropertyTag = 4u;

		[Token(Token = "0x40014B5")]
		public const uint k_unStringPropertyTag = 5u;

		[Token(Token = "0x40014B6")]
		public const uint k_unHmdMatrix34PropertyTag = 20u;

		[Token(Token = "0x40014B7")]
		public const uint k_unHmdMatrix44PropertyTag = 21u;

		[Token(Token = "0x40014B8")]
		public const uint k_unHmdVector3PropertyTag = 22u;

		[Token(Token = "0x40014B9")]
		public const uint k_unHmdVector4PropertyTag = 23u;

		[Token(Token = "0x40014BA")]
		public const uint k_unHiddenAreaPropertyTag = 30u;

		[Token(Token = "0x40014BB")]
		public const uint k_unPathHandleInfoTag = 31u;

		[Token(Token = "0x40014BC")]
		public const uint k_unActionPropertyTag = 32u;

		[Token(Token = "0x40014BD")]
		public const uint k_unInputValuePropertyTag = 33u;

		[Token(Token = "0x40014BE")]
		public const uint k_unWildcardPropertyTag = 34u;

		[Token(Token = "0x40014BF")]
		public const uint k_unHapticVibrationPropertyTag = 35u;

		[Token(Token = "0x40014C0")]
		public const uint k_unOpenVRInternalReserved_Start = 1000u;

		[Token(Token = "0x40014C1")]
		public const uint k_unOpenVRInternalReserved_End = 10000u;

		[Token(Token = "0x40014C2")]
		public const uint k_unMaxPropertyStringSize = 32768u;

		[Token(Token = "0x40014C3")]
		public const uint k_unControllerStateAxisCount = 5u;

		[Token(Token = "0x40014C4")]
		public const ulong k_ulOverlayHandleInvalid = 0uL;

		[Token(Token = "0x40014C5")]
		public const uint k_unScreenshotHandleInvalid = 0u;

		[Token(Token = "0x40014C6")]
		public const string IVRSystem_Version = "IVRSystem_019";

		[Token(Token = "0x40014C7")]
		public const string IVRExtendedDisplay_Version = "IVRExtendedDisplay_001";

		[Token(Token = "0x40014C8")]
		public const string IVRTrackedCamera_Version = "IVRTrackedCamera_003";

		[Token(Token = "0x40014C9")]
		public const uint k_unMaxApplicationKeyLength = 128u;

		[Token(Token = "0x40014CA")]
		public const string k_pch_MimeType_HomeApp = "vr/home";

		[Token(Token = "0x40014CB")]
		public const string k_pch_MimeType_GameTheater = "vr/game_theater";

		[Token(Token = "0x40014CC")]
		public const string IVRApplications_Version = "IVRApplications_006";

		[Token(Token = "0x40014CD")]
		public const string IVRChaperone_Version = "IVRChaperone_003";

		[Token(Token = "0x40014CE")]
		public const string IVRChaperoneSetup_Version = "IVRChaperoneSetup_005";

		[Token(Token = "0x40014CF")]
		public const string IVRCompositor_Version = "IVRCompositor_022";

		[Token(Token = "0x40014D0")]
		public const uint k_unVROverlayMaxKeyLength = 128u;

		[Token(Token = "0x40014D1")]
		public const uint k_unVROverlayMaxNameLength = 128u;

		[Token(Token = "0x40014D2")]
		public const uint k_unMaxOverlayCount = 64u;

		[Token(Token = "0x40014D3")]
		public const uint k_unMaxOverlayIntersectionMaskPrimitivesCount = 32u;

		[Token(Token = "0x40014D4")]
		public const string IVROverlay_Version = "IVROverlay_018";

		[Token(Token = "0x40014D5")]
		public const string k_pch_Controller_Component_GDC2015 = "gdc2015";

		[Token(Token = "0x40014D6")]
		public const string k_pch_Controller_Component_Base = "base";

		[Token(Token = "0x40014D7")]
		public const string k_pch_Controller_Component_Tip = "tip";

		[Token(Token = "0x40014D8")]
		public const string k_pch_Controller_Component_HandGrip = "handgrip";

		[Token(Token = "0x40014D9")]
		public const string k_pch_Controller_Component_Status = "status";

		[Token(Token = "0x40014DA")]
		public const string IVRRenderModels_Version = "IVRRenderModels_005";

		[Token(Token = "0x40014DB")]
		public const uint k_unNotificationTextMaxSize = 256u;

		[Token(Token = "0x40014DC")]
		public const string IVRNotifications_Version = "IVRNotifications_002";

		[Token(Token = "0x40014DD")]
		public const uint k_unMaxSettingsKeyLength = 128u;

		[Token(Token = "0x40014DE")]
		public const string IVRSettings_Version = "IVRSettings_002";

		[Token(Token = "0x40014DF")]
		public const string k_pch_SteamVR_Section = "steamvr";

		[Token(Token = "0x40014E0")]
		public const string k_pch_SteamVR_RequireHmd_String = "requireHmd";

		[Token(Token = "0x40014E1")]
		public const string k_pch_SteamVR_ForcedDriverKey_String = "forcedDriver";

		[Token(Token = "0x40014E2")]
		public const string k_pch_SteamVR_ForcedHmdKey_String = "forcedHmd";

		[Token(Token = "0x40014E3")]
		public const string k_pch_SteamVR_DisplayDebug_Bool = "displayDebug";

		[Token(Token = "0x40014E4")]
		public const string k_pch_SteamVR_DebugProcessPipe_String = "debugProcessPipe";

		[Token(Token = "0x40014E5")]
		public const string k_pch_SteamVR_DisplayDebugX_Int32 = "displayDebugX";

		[Token(Token = "0x40014E6")]
		public const string k_pch_SteamVR_DisplayDebugY_Int32 = "displayDebugY";

		[Token(Token = "0x40014E7")]
		public const string k_pch_SteamVR_SendSystemButtonToAllApps_Bool = "sendSystemButtonToAllApps";

		[Token(Token = "0x40014E8")]
		public const string k_pch_SteamVR_LogLevel_Int32 = "loglevel";

		[Token(Token = "0x40014E9")]
		public const string k_pch_SteamVR_IPD_Float = "ipd";

		[Token(Token = "0x40014EA")]
		public const string k_pch_SteamVR_Background_String = "background";

		[Token(Token = "0x40014EB")]
		public const string k_pch_SteamVR_BackgroundUseDomeProjection_Bool = "backgroundUseDomeProjection";

		[Token(Token = "0x40014EC")]
		public const string k_pch_SteamVR_BackgroundCameraHeight_Float = "backgroundCameraHeight";

		[Token(Token = "0x40014ED")]
		public const string k_pch_SteamVR_BackgroundDomeRadius_Float = "backgroundDomeRadius";

		[Token(Token = "0x40014EE")]
		public const string k_pch_SteamVR_GridColor_String = "gridColor";

		[Token(Token = "0x40014EF")]
		public const string k_pch_SteamVR_PlayAreaColor_String = "playAreaColor";

		[Token(Token = "0x40014F0")]
		public const string k_pch_SteamVR_ShowStage_Bool = "showStage";

		[Token(Token = "0x40014F1")]
		public const string k_pch_SteamVR_ActivateMultipleDrivers_Bool = "activateMultipleDrivers";

		[Token(Token = "0x40014F2")]
		public const string k_pch_SteamVR_DirectMode_Bool = "directMode";

		[Token(Token = "0x40014F3")]
		public const string k_pch_SteamVR_DirectModeEdidVid_Int32 = "directModeEdidVid";

		[Token(Token = "0x40014F4")]
		public const string k_pch_SteamVR_DirectModeEdidPid_Int32 = "directModeEdidPid";

		[Token(Token = "0x40014F5")]
		public const string k_pch_SteamVR_UsingSpeakers_Bool = "usingSpeakers";

		[Token(Token = "0x40014F6")]
		public const string k_pch_SteamVR_SpeakersForwardYawOffsetDegrees_Float = "speakersForwardYawOffsetDegrees";

		[Token(Token = "0x40014F7")]
		public const string k_pch_SteamVR_BaseStationPowerManagement_Bool = "basestationPowerManagement";

		[Token(Token = "0x40014F8")]
		public const string k_pch_SteamVR_NeverKillProcesses_Bool = "neverKillProcesses";

		[Token(Token = "0x40014F9")]
		public const string k_pch_SteamVR_SupersampleScale_Float = "supersampleScale";

		[Token(Token = "0x40014FA")]
		public const string k_pch_SteamVR_AllowAsyncReprojection_Bool = "allowAsyncReprojection";

		[Token(Token = "0x40014FB")]
		public const string k_pch_SteamVR_AllowReprojection_Bool = "allowInterleavedReprojection";

		[Token(Token = "0x40014FC")]
		public const string k_pch_SteamVR_ForceReprojection_Bool = "forceReprojection";

		[Token(Token = "0x40014FD")]
		public const string k_pch_SteamVR_ForceFadeOnBadTracking_Bool = "forceFadeOnBadTracking";

		[Token(Token = "0x40014FE")]
		public const string k_pch_SteamVR_DefaultMirrorView_Int32 = "defaultMirrorView";

		[Token(Token = "0x40014FF")]
		public const string k_pch_SteamVR_ShowMirrorView_Bool = "showMirrorView";

		[Token(Token = "0x4001500")]
		public const string k_pch_SteamVR_MirrorViewGeometry_String = "mirrorViewGeometry";

		[Token(Token = "0x4001501")]
		public const string k_pch_SteamVR_StartMonitorFromAppLaunch = "startMonitorFromAppLaunch";

		[Token(Token = "0x4001502")]
		public const string k_pch_SteamVR_StartCompositorFromAppLaunch_Bool = "startCompositorFromAppLaunch";

		[Token(Token = "0x4001503")]
		public const string k_pch_SteamVR_StartDashboardFromAppLaunch_Bool = "startDashboardFromAppLaunch";

		[Token(Token = "0x4001504")]
		public const string k_pch_SteamVR_StartOverlayAppsFromDashboard_Bool = "startOverlayAppsFromDashboard";

		[Token(Token = "0x4001505")]
		public const string k_pch_SteamVR_EnableHomeApp = "enableHomeApp";

		[Token(Token = "0x4001506")]
		public const string k_pch_SteamVR_CycleBackgroundImageTimeSec_Int32 = "CycleBackgroundImageTimeSec";

		[Token(Token = "0x4001507")]
		public const string k_pch_SteamVR_RetailDemo_Bool = "retailDemo";

		[Token(Token = "0x4001508")]
		public const string k_pch_SteamVR_IpdOffset_Float = "ipdOffset";

		[Token(Token = "0x4001509")]
		public const string k_pch_SteamVR_AllowSupersampleFiltering_Bool = "allowSupersampleFiltering";

		[Token(Token = "0x400150A")]
		public const string k_pch_SteamVR_EnableLinuxVulkanAsync_Bool = "enableLinuxVulkanAsync";

		[Token(Token = "0x400150B")]
		public const string k_pch_SteamVR_AllowDisplayLockedMode_Bool = "allowDisplayLockedMode";

		[Token(Token = "0x400150C")]
		public const string k_pch_SteamVR_HaveStartedTutorialForNativeChaperoneDriver_Bool = "haveStartedTutorialForNativeChaperoneDriver";

		[Token(Token = "0x400150D")]
		public const string k_pch_SteamVR_ForceWindows32bitVRMonitor = "forceWindows32BitVRMonitor";

		[Token(Token = "0x400150E")]
		public const string k_pch_Lighthouse_Section = "driver_lighthouse";

		[Token(Token = "0x400150F")]
		public const string k_pch_Lighthouse_DisableIMU_Bool = "disableimu";

		[Token(Token = "0x4001510")]
		public const string k_pch_Lighthouse_DisableIMUExceptHMD_Bool = "disableimuexcepthmd";

		[Token(Token = "0x4001511")]
		public const string k_pch_Lighthouse_UseDisambiguation_String = "usedisambiguation";

		[Token(Token = "0x4001512")]
		public const string k_pch_Lighthouse_DisambiguationDebug_Int32 = "disambiguationdebug";

		[Token(Token = "0x4001513")]
		public const string k_pch_Lighthouse_PrimaryBasestation_Int32 = "primarybasestation";

		[Token(Token = "0x4001514")]
		public const string k_pch_Lighthouse_DBHistory_Bool = "dbhistory";

		[Token(Token = "0x4001515")]
		public const string k_pch_Lighthouse_EnableBluetooth_Bool = "enableBluetooth";

		[Token(Token = "0x4001516")]
		public const string k_pch_Null_Section = "driver_null";

		[Token(Token = "0x4001517")]
		public const string k_pch_Null_SerialNumber_String = "serialNumber";

		[Token(Token = "0x4001518")]
		public const string k_pch_Null_ModelNumber_String = "modelNumber";

		[Token(Token = "0x4001519")]
		public const string k_pch_Null_WindowX_Int32 = "windowX";

		[Token(Token = "0x400151A")]
		public const string k_pch_Null_WindowY_Int32 = "windowY";

		[Token(Token = "0x400151B")]
		public const string k_pch_Null_WindowWidth_Int32 = "windowWidth";

		[Token(Token = "0x400151C")]
		public const string k_pch_Null_WindowHeight_Int32 = "windowHeight";

		[Token(Token = "0x400151D")]
		public const string k_pch_Null_RenderWidth_Int32 = "renderWidth";

		[Token(Token = "0x400151E")]
		public const string k_pch_Null_RenderHeight_Int32 = "renderHeight";

		[Token(Token = "0x400151F")]
		public const string k_pch_Null_SecondsFromVsyncToPhotons_Float = "secondsFromVsyncToPhotons";

		[Token(Token = "0x4001520")]
		public const string k_pch_Null_DisplayFrequency_Float = "displayFrequency";

		[Token(Token = "0x4001521")]
		public const string k_pch_UserInterface_Section = "userinterface";

		[Token(Token = "0x4001522")]
		public const string k_pch_UserInterface_StatusAlwaysOnTop_Bool = "StatusAlwaysOnTop";

		[Token(Token = "0x4001523")]
		public const string k_pch_UserInterface_MinimizeToTray_Bool = "MinimizeToTray";

		[Token(Token = "0x4001524")]
		public const string k_pch_UserInterface_Screenshots_Bool = "screenshots";

		[Token(Token = "0x4001525")]
		public const string k_pch_UserInterface_ScreenshotType_Int = "screenshotType";

		[Token(Token = "0x4001526")]
		public const string k_pch_Notifications_Section = "notifications";

		[Token(Token = "0x4001527")]
		public const string k_pch_Notifications_DoNotDisturb_Bool = "DoNotDisturb";

		[Token(Token = "0x4001528")]
		public const string k_pch_Keyboard_Section = "keyboard";

		[Token(Token = "0x4001529")]
		public const string k_pch_Keyboard_TutorialCompletions = "TutorialCompletions";

		[Token(Token = "0x400152A")]
		public const string k_pch_Keyboard_ScaleX = "ScaleX";

		[Token(Token = "0x400152B")]
		public const string k_pch_Keyboard_ScaleY = "ScaleY";

		[Token(Token = "0x400152C")]
		public const string k_pch_Keyboard_OffsetLeftX = "OffsetLeftX";

		[Token(Token = "0x400152D")]
		public const string k_pch_Keyboard_OffsetRightX = "OffsetRightX";

		[Token(Token = "0x400152E")]
		public const string k_pch_Keyboard_OffsetY = "OffsetY";

		[Token(Token = "0x400152F")]
		public const string k_pch_Keyboard_Smoothing = "Smoothing";

		[Token(Token = "0x4001530")]
		public const string k_pch_Perf_Section = "perfcheck";

		[Token(Token = "0x4001531")]
		public const string k_pch_Perf_HeuristicActive_Bool = "heuristicActive";

		[Token(Token = "0x4001532")]
		public const string k_pch_Perf_NotifyInHMD_Bool = "warnInHMD";

		[Token(Token = "0x4001533")]
		public const string k_pch_Perf_NotifyOnlyOnce_Bool = "warnOnlyOnce";

		[Token(Token = "0x4001534")]
		public const string k_pch_Perf_AllowTimingStore_Bool = "allowTimingStore";

		[Token(Token = "0x4001535")]
		public const string k_pch_Perf_SaveTimingsOnExit_Bool = "saveTimingsOnExit";

		[Token(Token = "0x4001536")]
		public const string k_pch_Perf_TestData_Float = "perfTestData";

		[Token(Token = "0x4001537")]
		public const string k_pch_Perf_LinuxGPUProfiling_Bool = "linuxGPUProfiling";

		[Token(Token = "0x4001538")]
		public const string k_pch_CollisionBounds_Section = "collisionBounds";

		[Token(Token = "0x4001539")]
		public const string k_pch_CollisionBounds_Style_Int32 = "CollisionBoundsStyle";

		[Token(Token = "0x400153A")]
		public const string k_pch_CollisionBounds_GroundPerimeterOn_Bool = "CollisionBoundsGroundPerimeterOn";

		[Token(Token = "0x400153B")]
		public const string k_pch_CollisionBounds_CenterMarkerOn_Bool = "CollisionBoundsCenterMarkerOn";

		[Token(Token = "0x400153C")]
		public const string k_pch_CollisionBounds_PlaySpaceOn_Bool = "CollisionBoundsPlaySpaceOn";

		[Token(Token = "0x400153D")]
		public const string k_pch_CollisionBounds_FadeDistance_Float = "CollisionBoundsFadeDistance";

		[Token(Token = "0x400153E")]
		public const string k_pch_CollisionBounds_ColorGammaR_Int32 = "CollisionBoundsColorGammaR";

		[Token(Token = "0x400153F")]
		public const string k_pch_CollisionBounds_ColorGammaG_Int32 = "CollisionBoundsColorGammaG";

		[Token(Token = "0x4001540")]
		public const string k_pch_CollisionBounds_ColorGammaB_Int32 = "CollisionBoundsColorGammaB";

		[Token(Token = "0x4001541")]
		public const string k_pch_CollisionBounds_ColorGammaA_Int32 = "CollisionBoundsColorGammaA";

		[Token(Token = "0x4001542")]
		public const string k_pch_Camera_Section = "camera";

		[Token(Token = "0x4001543")]
		public const string k_pch_Camera_EnableCamera_Bool = "enableCamera";

		[Token(Token = "0x4001544")]
		public const string k_pch_Camera_EnableCameraInDashboard_Bool = "enableCameraInDashboard";

		[Token(Token = "0x4001545")]
		public const string k_pch_Camera_EnableCameraForCollisionBounds_Bool = "enableCameraForCollisionBounds";

		[Token(Token = "0x4001546")]
		public const string k_pch_Camera_EnableCameraForRoomView_Bool = "enableCameraForRoomView";

		[Token(Token = "0x4001547")]
		public const string k_pch_Camera_BoundsColorGammaR_Int32 = "cameraBoundsColorGammaR";

		[Token(Token = "0x4001548")]
		public const string k_pch_Camera_BoundsColorGammaG_Int32 = "cameraBoundsColorGammaG";

		[Token(Token = "0x4001549")]
		public const string k_pch_Camera_BoundsColorGammaB_Int32 = "cameraBoundsColorGammaB";

		[Token(Token = "0x400154A")]
		public const string k_pch_Camera_BoundsColorGammaA_Int32 = "cameraBoundsColorGammaA";

		[Token(Token = "0x400154B")]
		public const string k_pch_Camera_BoundsStrength_Int32 = "cameraBoundsStrength";

		[Token(Token = "0x400154C")]
		public const string k_pch_audio_Section = "audio";

		[Token(Token = "0x400154D")]
		public const string k_pch_audio_OnPlaybackDevice_String = "onPlaybackDevice";

		[Token(Token = "0x400154E")]
		public const string k_pch_audio_OnRecordDevice_String = "onRecordDevice";

		[Token(Token = "0x400154F")]
		public const string k_pch_audio_OnPlaybackMirrorDevice_String = "onPlaybackMirrorDevice";

		[Token(Token = "0x4001550")]
		public const string k_pch_audio_OffPlaybackDevice_String = "offPlaybackDevice";

		[Token(Token = "0x4001551")]
		public const string k_pch_audio_OffRecordDevice_String = "offRecordDevice";

		[Token(Token = "0x4001552")]
		public const string k_pch_audio_VIVEHDMIGain = "viveHDMIGain";

		[Token(Token = "0x4001553")]
		public const string k_pch_Power_Section = "power";

		[Token(Token = "0x4001554")]
		public const string k_pch_Power_PowerOffOnExit_Bool = "powerOffOnExit";

		[Token(Token = "0x4001555")]
		public const string k_pch_Power_TurnOffScreensTimeout_Float = "turnOffScreensTimeout";

		[Token(Token = "0x4001556")]
		public const string k_pch_Power_TurnOffControllersTimeout_Float = "turnOffControllersTimeout";

		[Token(Token = "0x4001557")]
		public const string k_pch_Power_ReturnToWatchdogTimeout_Float = "returnToWatchdogTimeout";

		[Token(Token = "0x4001558")]
		public const string k_pch_Power_AutoLaunchSteamVROnButtonPress = "autoLaunchSteamVROnButtonPress";

		[Token(Token = "0x4001559")]
		public const string k_pch_Power_PauseCompositorOnStandby_Bool = "pauseCompositorOnStandby";

		[Token(Token = "0x400155A")]
		public const string k_pch_Dashboard_Section = "dashboard";

		[Token(Token = "0x400155B")]
		public const string k_pch_Dashboard_EnableDashboard_Bool = "enableDashboard";

		[Token(Token = "0x400155C")]
		public const string k_pch_Dashboard_ArcadeMode_Bool = "arcadeMode";

		[Token(Token = "0x400155D")]
		public const string k_pch_modelskin_Section = "modelskins";

		[Token(Token = "0x400155E")]
		public const string k_pch_Driver_Enable_Bool = "enable";

		[Token(Token = "0x400155F")]
		public const string IVRScreenshots_Version = "IVRScreenshots_001";

		[Token(Token = "0x4001560")]
		public const string IVRResources_Version = "IVRResources_001";

		[Token(Token = "0x4001561")]
		public const string IVRDriverManager_Version = "IVRDriverManager_001";

		[Token(Token = "0x4001562")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x650EFC", Offset = "0x650EFC")]
		private static uint <VRToken>k__BackingField;

		[Token(Token = "0x4001563")]
		private const string FnTable_Prefix = "FnTable:";

		[Token(Token = "0x4001564")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static COpenVRContext _OpenVRInternal_ModuleContext;

		[Token(Token = "0x1700018E")]
		private static uint VRToken
		{
			[Token(Token = "0x6001407")]
			[Address(RVA = "0x80BD08", Offset = "0x80BD08", VA = "0x80BD08")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66ABB8", Offset = "0x66ABB8")]
			get
			{
				return default(uint);
			}
			[Token(Token = "0x6001408")]
			[Address(RVA = "0x80BD70", Offset = "0x80BD70", VA = "0x80BD70")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66ABC8", Offset = "0x66ABC8")]
			set
			{
			}
		}

		[Token(Token = "0x1700018F")]
		private static COpenVRContext OpenVRInternal_ModuleContext
		{
			[Token(Token = "0x6001409")]
			[Address(RVA = "0x80BDDC", Offset = "0x80BDDC", VA = "0x80BDDC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000190")]
		public static CVRSystem System
		{
			[Token(Token = "0x600140A")]
			[Address(RVA = "0x80BEE8", Offset = "0x80BEE8", VA = "0x80BEE8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000191")]
		public static CVRChaperone Chaperone
		{
			[Token(Token = "0x600140B")]
			[Address(RVA = "0x80C018", Offset = "0x80C018", VA = "0x80C018")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000192")]
		public static CVRChaperoneSetup ChaperoneSetup
		{
			[Token(Token = "0x600140C")]
			[Address(RVA = "0x80C148", Offset = "0x80C148", VA = "0x80C148")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000193")]
		public static CVRCompositor Compositor
		{
			[Token(Token = "0x600140D")]
			[Address(RVA = "0x80C278", Offset = "0x80C278", VA = "0x80C278")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000194")]
		public static CVROverlay Overlay
		{
			[Token(Token = "0x600140E")]
			[Address(RVA = "0x80C3A8", Offset = "0x80C3A8", VA = "0x80C3A8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000195")]
		public static CVRRenderModels RenderModels
		{
			[Token(Token = "0x600140F")]
			[Address(RVA = "0x80C4D8", Offset = "0x80C4D8", VA = "0x80C4D8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000196")]
		public static CVRExtendedDisplay ExtendedDisplay
		{
			[Token(Token = "0x6001410")]
			[Address(RVA = "0x80C608", Offset = "0x80C608", VA = "0x80C608")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000197")]
		public static CVRSettings Settings
		{
			[Token(Token = "0x6001411")]
			[Address(RVA = "0x80C738", Offset = "0x80C738", VA = "0x80C738")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000198")]
		public static CVRApplications Applications
		{
			[Token(Token = "0x6001412")]
			[Address(RVA = "0x80C868", Offset = "0x80C868", VA = "0x80C868")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000199")]
		public static CVRScreenshots Screenshots
		{
			[Token(Token = "0x6001413")]
			[Address(RVA = "0x80C998", Offset = "0x80C998", VA = "0x80C998")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700019A")]
		public static CVRTrackedCamera TrackedCamera
		{
			[Token(Token = "0x6001414")]
			[Address(RVA = "0x80CAC8", Offset = "0x80CAC8", VA = "0x80CAC8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60013FF")]
		[Address(RVA = "0x80B750", Offset = "0x80B750", VA = "0x80B750")]
		public static uint InitInternal(ref EVRInitError peError, EVRApplicationType eApplicationType)
		{
			return default(uint);
		}

		[Token(Token = "0x6001400")]
		[Address(RVA = "0x80B804", Offset = "0x80B804", VA = "0x80B804")]
		public static void ShutdownInternal()
		{
		}

		[Token(Token = "0x6001401")]
		[Address(RVA = "0x80B898", Offset = "0x80B898", VA = "0x80B898")]
		public static bool IsHmdPresent()
		{
			return default(bool);
		}

		[Token(Token = "0x6001402")]
		[Address(RVA = "0x80B934", Offset = "0x80B934", VA = "0x80B934")]
		public static bool IsRuntimeInstalled()
		{
			return default(bool);
		}

		[Token(Token = "0x6001403")]
		[Address(RVA = "0x80B9D0", Offset = "0x80B9D0", VA = "0x80B9D0")]
		public static string GetStringForHmdError(EVRInitError error)
		{
			return null;
		}

		[Token(Token = "0x6001404")]
		[Address(RVA = "0x80BAE8", Offset = "0x80BAE8", VA = "0x80BAE8")]
		public static IntPtr GetGenericInterface(string pchInterfaceVersion, ref EVRInitError peError)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6001405")]
		[Address(RVA = "0x80BBB4", Offset = "0x80BBB4", VA = "0x80BBB4")]
		public static bool IsInterfaceVersionValid(string pchInterfaceVersion)
		{
			return default(bool);
		}

		[Token(Token = "0x6001406")]
		[Address(RVA = "0x80BC74", Offset = "0x80BC74", VA = "0x80BC74")]
		public static uint GetInitToken()
		{
			return default(uint);
		}

		[Token(Token = "0x6001415")]
		[Address(RVA = "0x80CBF8", Offset = "0x80CBF8", VA = "0x80CBF8")]
		public static CVRSystem Init(ref EVRInitError peError, EVRApplicationType eApplicationType = EVRApplicationType.VRApplication_Scene)
		{
			return null;
		}

		[Token(Token = "0x6001416")]
		[Address(RVA = "0x80CD38", Offset = "0x80CD38", VA = "0x80CD38")]
		public static void Shutdown()
		{
		}

		[Token(Token = "0x6001417")]
		[Address(RVA = "0x80CD94", Offset = "0x80CD94", VA = "0x80CD94")]
		public OpenVR()
		{
		}
	}
}
namespace Valve.VR.InteractionSystem
{
	[Token(Token = "0x2000324")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x63ED38", Offset = "0x63ED38")]
	public class BodyCollider : MonoBehaviour
	{
		[Token(Token = "0x4001565")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform head;

		[Token(Token = "0x4001566")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private CapsuleCollider capsuleCollider;

		[Token(Token = "0x6001419")]
		[Address(RVA = "0x1064950", Offset = "0x1064950", VA = "0x1064950")]
		private void Awake()
		{
		}

		[Token(Token = "0x600141A")]
		[Address(RVA = "0x10649A8", Offset = "0x10649A8", VA = "0x10649A8")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x600141B")]
		[Address(RVA = "0x1064B90", Offset = "0x1064B90", VA = "0x1064B90")]
		public BodyCollider()
		{
		}
	}
	[Token(Token = "0x2000325")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x63ED9C", Offset = "0x63ED9C")]
	public class CircularDrive : MonoBehaviour
	{
		[Token(Token = "0x20007B4")]
		public enum Axis_t
		{
			[Token(Token = "0x40028FD")]
			XAxis,
			[Token(Token = "0x40028FE")]
			YAxis,
			[Token(Token = "0x40028FF")]
			ZAxis
		}

		[Token(Token = "0x20007B5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x645B58", Offset = "0x645B58")]
		private sealed class <HapticPulses>d__43 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002900")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002901")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002902")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SteamVR_Controller.Device controller;

			[Token(Token = "0x4002903")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float flMagnitude;

			[Token(Token = "0x4002904")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public int nCount;

			[Token(Token = "0x4002905")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int <nRangeMax>5__2;

			[Token(Token = "0x4002906")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private ushort <i>5__3;

			[Token(Token = "0x170002F3")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60031E1")]
				[Address(RVA = "0x9D5300", Offset = "0x9D5300", VA = "0x9D5300", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002F4")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60031E3")]
				[Address(RVA = "0x9D5370", Offset = "0x9D5370", VA = "0x9D5370", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60031DE")]
			[Address(RVA = "0x9D3600", Offset = "0x9D3600", VA = "0x9D3600")]
			[DebuggerHidden]
			public <HapticPulses>d__43(int <>1__state)
			{
			}

			[Token(Token = "0x60031DF")]
			[Address(RVA = "0x9D518C", Offset = "0x9D518C", VA = "0x9D518C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60031E0")]
			[Address(RVA = "0x9D5190", Offset = "0x9D5190", VA = "0x9D5190", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60031E2")]
			[Address(RVA = "0x9D5308", Offset = "0x9D5308", VA = "0x9D5308", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001567")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x650F0C", Offset = "0x650F0C")]
		public Axis_t axisOfRotation;

		[Token(Token = "0x4001568")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x650F44", Offset = "0x650F44")]
		public Collider childCollider;

		[Token(Token = "0x4001569")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x650F7C", Offset = "0x650F7C")]
		public LinearMapping linearMapping;

		[Token(Token = "0x400156A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x650FB4", Offset = "0x650FB4")]
		public bool hoverLock;

		[Token(Token = "0x400156B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x650FEC", Offset = "0x650FEC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x650FEC", Offset = "0x650FEC")]
		public bool limited;

		[Token(Token = "0x400156C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Vector2 frozenDistanceMinMaxThreshold;

		[Token(Token = "0x400156D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public UnityEvent onFrozenDistanceThreshold;

		[Token(Token = "0x400156E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x65104C", Offset = "0x65104C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65104C", Offset = "0x65104C")]
		public float minAngle;

		[Token(Token = "0x400156F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6510AC", Offset = "0x6510AC")]
		public bool freezeOnMin;

		[Token(Token = "0x4001570")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6510E4", Offset = "0x6510E4")]
		public UnityEvent onMinAngle;

		[Token(Token = "0x4001571")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x65111C", Offset = "0x65111C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65111C", Offset = "0x65111C")]
		public float maxAngle;

		[Token(Token = "0x4001572")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65117C", Offset = "0x65117C")]
		public bool freezeOnMax;

		[Token(Token = "0x4001573")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6511B4", Offset = "0x6511B4")]
		public UnityEvent onMaxAngle;

		[Token(Token = "0x4001574")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6511EC", Offset = "0x6511EC")]
		public bool forceStart;

		[Token(Token = "0x4001575")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x651224", Offset = "0x651224")]
		public float startAngle;

		[Token(Token = "0x4001576")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65125C", Offset = "0x65125C")]
		public bool rotateGameObject;

		[Token(Token = "0x4001577")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x651294", Offset = "0x651294")]
		public bool debugPath;

		[Token(Token = "0x4001578")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6512CC", Offset = "0x6512CC")]
		public int dbgPathLimit;

		[Token(Token = "0x4001579")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x651304", Offset = "0x651304")]
		public TextMesh debugText;

		[Token(Token = "0x400157A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65133C", Offset = "0x65133C")]
		public float outAngle;

		[Token(Token = "0x400157B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private Quaternion start;

		[Token(Token = "0x400157C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private Vector3 worldPlaneNormal;

		[Token(Token = "0x400157D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Vector3 localPlaneNormal;

		[Token(Token = "0x400157E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private Vector3 lastHandProjected;

		[Token(Token = "0x400157F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private Color red;

		[Token(Token = "0x4001580")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private Color green;

		[Token(Token = "0x4001581")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private GameObject[] dbgHandObjects;

		[Token(Token = "0x4001582")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private GameObject[] dbgProjObjects;

		[Token(Token = "0x4001583")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private GameObject dbgObjectsParent;

		[Token(Token = "0x4001584")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private int dbgObjectCount;

		[Token(Token = "0x4001585")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		private int dbgObjectIndex;

		[Token(Token = "0x4001586")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private bool driving;

		[Token(Token = "0x4001587")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		private float minMaxAngularThreshold;

		[Token(Token = "0x4001588")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private bool frozen;

		[Token(Token = "0x4001589")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		private float frozenAngle;

		[Token(Token = "0x400158A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private Vector3 frozenHandWorldPos;

		[Token(Token = "0x400158B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		private Vector2 frozenSqDistanceMinMaxThreshold;

		[Token(Token = "0x400158C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private Hand handHoverLocked;

		[Token(Token = "0x600141C")]
		[Address(RVA = "0x9D2DB8", Offset = "0x9D2DB8", VA = "0x9D2DB8")]
		private void Freeze(Hand hand)
		{
		}

		[Token(Token = "0x600141D")]
		[Address(RVA = "0x9D2E30", Offset = "0x9D2E30", VA = "0x9D2E30")]
		private void UnFreeze()
		{
		}

		[Token(Token = "0x600141E")]
		[Address(RVA = "0x9D2E50", Offset = "0x9D2E50", VA = "0x9D2E50")]
		private void Start()
		{
		}

		[Token(Token = "0x600141F")]
		[Address(RVA = "0x9D32E4", Offset = "0x9D32E4", VA = "0x9D32E4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001420")]
		[Address(RVA = "0x9D3548", Offset = "0x9D3548", VA = "0x9D3548")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x66ABD8", Offset = "0x66ABD8")]
		private IEnumerator HapticPulses(SteamVR_Controller.Device controller, float flMagnitude, int nCount)
		{
			return null;
		}

		[Token(Token = "0x6001421")]
		[Address(RVA = "0x9D362C", Offset = "0x9D362C", VA = "0x9D362C")]
		private void OnHandHoverBegin(Hand hand)
		{
		}

		[Token(Token = "0x6001422")]
		[Address(RVA = "0x9D3768", Offset = "0x9D3768", VA = "0x9D3768")]
		private void OnHandHoverEnd(Hand hand)
		{
		}

		[Token(Token = "0x6001423")]
		[Address(RVA = "0x9D38F4", Offset = "0x9D38F4", VA = "0x9D38F4")]
		private void HandHoverUpdate(Hand hand)
		{
		}

		[Token(Token = "0x6001424")]
		[Address(RVA = "0x9D3BB0", Offset = "0x9D3BB0", VA = "0x9D3BB0")]
		private Vector3 ComputeToTransformProjected(Transform xForm)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001425")]
		[Address(RVA = "0x9D439C", Offset = "0x9D439C", VA = "0x9D439C")]
		private void DrawDebugPath(Transform xForm, Vector3 toTransformProjected)
		{
		}

		[Token(Token = "0x6001426")]
		[Address(RVA = "0x9D4CC4", Offset = "0x9D4CC4", VA = "0x9D4CC4")]
		private void UpdateLinearMapping()
		{
		}

		[Token(Token = "0x6001427")]
		[Address(RVA = "0x9D4EA4", Offset = "0x9D4EA4", VA = "0x9D4EA4")]
		private void UpdateGameObject()
		{
		}

		[Token(Token = "0x6001428")]
		[Address(RVA = "0x9D4D98", Offset = "0x9D4D98", VA = "0x9D4D98")]
		private void UpdateDebugText()
		{
		}

		[Token(Token = "0x6001429")]
		[Address(RVA = "0x9D32B8", Offset = "0x9D32B8", VA = "0x9D32B8")]
		private void UpdateAll()
		{
		}

		[Token(Token = "0x600142A")]
		[Address(RVA = "0x9D3EF4", Offset = "0x9D3EF4", VA = "0x9D3EF4")]
		private void ComputeAngle(Hand hand)
		{
		}

		[Token(Token = "0x600142B")]
		[Address(RVA = "0x9D4FE4", Offset = "0x9D4FE4", VA = "0x9D4FE4")]
		public CircularDrive()
		{
		}
	}
	[Token(Token = "0x2000326")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x63EE00", Offset = "0x63EE00")]
	public class ComplexThrowable : MonoBehaviour
	{
		[Token(Token = "0x20007B6")]
		public enum AttachMode
		{
			[Token(Token = "0x4002908")]
			FixedJoint,
			[Token(Token = "0x4002909")]
			Force
		}

		[Token(Token = "0x400158D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float attachForce;

		[Token(Token = "0x400158E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float attachForceDamper;

		[Token(Token = "0x400158F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AttachMode attachMode;

		[Token(Token = "0x4001590")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[EnumFlags]
		public Hand.AttachmentFlags attachmentFlags;

		[Token(Token = "0x4001591")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<Hand> holdingHands;

		[Token(Token = "0x4001592")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<Rigidbody> holdingBodies;

		[Token(Token = "0x4001593")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private List<Vector3> holdingPoints;

		[Token(Token = "0x4001594")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<Rigidbody> rigidBodies;

		[Token(Token = "0x600142C")]
		[Address(RVA = "0x9D5378", Offset = "0x9D5378", VA = "0x9D5378")]
		private void Awake()
		{
		}

		[Token(Token = "0x600142D")]
		[Address(RVA = "0x9D53CC", Offset = "0x9D53CC", VA = "0x9D53CC")]
		private void Update()
		{
		}

		[Token(Token = "0x600142E")]
		[Address(RVA = "0x9D56A8", Offset = "0x9D56A8", VA = "0x9D56A8")]
		private void OnHandHoverBegin(Hand hand)
		{
		}

		[Token(Token = "0x600142F")]
		[Address(RVA = "0x9D5754", Offset = "0x9D5754", VA = "0x9D5754")]
		private void OnHandHoverEnd(Hand hand)
		{
		}

		[Token(Token = "0x6001430")]
		[Address(RVA = "0x9D5800", Offset = "0x9D5800", VA = "0x9D5800")]
		private void HandHoverUpdate(Hand hand)
		{
		}

		[Token(Token = "0x6001431")]
		[Address(RVA = "0x9D584C", Offset = "0x9D584C", VA = "0x9D584C")]
		private void PhysicsAttach(Hand hand)
		{
		}

		[Token(Token = "0x6001432")]
		[Address(RVA = "0x9D54C0", Offset = "0x9D54C0", VA = "0x9D54C0")]
		private bool PhysicsDetach(Hand hand)
		{
			return default(bool);
		}

		[Token(Token = "0x6001433")]
		[Address(RVA = "0x9D6638", Offset = "0x9D6638", VA = "0x9D6638")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6001434")]
		[Address(RVA = "0x9D6998", Offset = "0x9D6998", VA = "0x9D6998")]
		public ComplexThrowable()
		{
		}
	}
	[Token(Token = "0x2000327")]
	public class ControllerHoverHighlight : MonoBehaviour
	{
		[Token(Token = "0x4001595")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Material highLightMaterial;

		[Token(Token = "0x4001596")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool fireHapticsOnHightlight;

		[Token(Token = "0x4001597")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Hand hand;

		[Token(Token = "0x4001598")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private MeshRenderer bodyMeshRenderer;

		[Token(Token = "0x4001599")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private MeshRenderer trackingHatMeshRenderer;

		[Token(Token = "0x400159A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private SteamVR_RenderModel renderModel;

		[Token(Token = "0x400159B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool renderModelLoaded;

		[Token(Token = "0x400159C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private SteamVR_Events.Action renderModelLoadedAction;

		[Token(Token = "0x6001435")]
		[Address(RVA = "0x9DC7E4", Offset = "0x9DC7E4", VA = "0x9DC7E4")]
		private void Start()
		{
		}

		[Token(Token = "0x6001436")]
		[Address(RVA = "0x9DC83C", Offset = "0x9DC83C", VA = "0x9DC83C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001437")]
		[Address(RVA = "0x9DC8E0", Offset = "0x9DC8E0", VA = "0x9DC8E0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001438")]
		[Address(RVA = "0x9DC914", Offset = "0x9DC914", VA = "0x9DC914")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001439")]
		[Address(RVA = "0x9DC948", Offset = "0x9DC948", VA = "0x9DC948")]
		private void OnHandInitialized(int deviceIndex)
		{
		}

		[Token(Token = "0x600143A")]
		[Address(RVA = "0x9DC9F4", Offset = "0x9DC9F4", VA = "0x9DC9F4")]
		private void OnRenderModelLoaded(SteamVR_RenderModel renderModel, bool success)
		{
		}

		[Token(Token = "0x600143B")]
		[Address(RVA = "0x9DD0C8", Offset = "0x9DD0C8", VA = "0x9DD0C8")]
		private void OnParentHandHoverBegin(Interactable other)
		{
		}

		[Token(Token = "0x600143C")]
		[Address(RVA = "0x9DD30C", Offset = "0x9DD30C", VA = "0x9DD30C")]
		private void OnParentHandHoverEnd(Interactable other)
		{
		}

		[Token(Token = "0x600143D")]
		[Address(RVA = "0x9DD450", Offset = "0x9DD450", VA = "0x9DD450")]
		private void OnParentHandInputFocusAcquired()
		{
		}

		[Token(Token = "0x600143E")]
		[Address(RVA = "0x9DD5A0", Offset = "0x9DD5A0", VA = "0x9DD5A0")]
		private void OnParentHandInputFocusLost()
		{
		}

		[Token(Token = "0x600143F")]
		[Address(RVA = "0x9DD1CC", Offset = "0x9DD1CC", VA = "0x9DD1CC")]
		public void ShowHighlight()
		{
		}

		[Token(Token = "0x6001440")]
		[Address(RVA = "0x9DD310", Offset = "0x9DD310", VA = "0x9DD310")]
		public void HideHighlight()
		{
		}

		[Token(Token = "0x6001441")]
		[Address(RVA = "0x9DD5A4", Offset = "0x9DD5A4", VA = "0x9DD5A4")]
		public ControllerHoverHighlight()
		{
		}
	}
	[Token(Token = "0x2000328")]
	public static class CustomEvents
	{
		[Serializable]
		[Token(Token = "0x20007B7")]
		public class UnityEventSingleFloat : UnityEvent<float>
		{
			[Token(Token = "0x60031E4")]
			[Address(RVA = "0x9DD604", Offset = "0x9DD604", VA = "0x9DD604")]
			public UnityEventSingleFloat()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20007B8")]
		public class UnityEventHand : UnityEvent<Hand>
		{
			[Token(Token = "0x60031E5")]
			[Address(RVA = "0x9DD5B4", Offset = "0x9DD5B4", VA = "0x9DD5B4")]
			public UnityEventHand()
			{
			}
		}
	}
	[Token(Token = "0x2000329")]
	public class DebugUI : MonoBehaviour
	{
		[Token(Token = "0x400159D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Player player;

		[Token(Token = "0x400159E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static DebugUI _instance;

		[Token(Token = "0x1700019B")]
		public static DebugUI instance
		{
			[Token(Token = "0x6001442")]
			[Address(RVA = "0x9DD654", Offset = "0x9DD654", VA = "0x9DD654")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001443")]
		[Address(RVA = "0x9DD720", Offset = "0x9DD720", VA = "0x9DD720")]
		private void Start()
		{
		}

		[Token(Token = "0x6001444")]
		[Address(RVA = "0x9DD744", Offset = "0x9DD744", VA = "0x9DD744")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x6001445")]
		[Address(RVA = "0x9DD8E4", Offset = "0x9DD8E4", VA = "0x9DD8E4")]
		public DebugUI()
		{
		}
	}
	[Token(Token = "0x200032A")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x63EE64", Offset = "0x63EE64")]
	public class DestroyOnDetachedFromHand : MonoBehaviour
	{
		[Token(Token = "0x6001446")]
		[Address(RVA = "0x9DD8EC", Offset = "0x9DD8EC", VA = "0x9DD8EC")]
		private void OnDetachedFromHand(Hand hand)
		{
		}

		[Token(Token = "0x6001447")]
		[Address(RVA = "0x9DD968", Offset = "0x9DD968", VA = "0x9DD968")]
		public DestroyOnDetachedFromHand()
		{
		}
	}
	[Token(Token = "0x200032B")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x63EEC8", Offset = "0x63EEC8")]
	public class DestroyOnParticleSystemDeath : MonoBehaviour
	{
		[Token(Token = "0x400159F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private ParticleSystem particles;

		[Token(Token = "0x6001448")]
		[Address(RVA = "0x9DD970", Offset = "0x9DD970", VA = "0x9DD970")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001449")]
		[Address(RVA = "0x9DD9E8", Offset = "0x9DD9E8", VA = "0x9DD9E8")]
		private void CheckParticleSystem()
		{
		}

		[Token(Token = "0x600144A")]
		[Address(RVA = "0x9DDA90", Offset = "0x9DDA90", VA = "0x9DDA90")]
		public DestroyOnParticleSystemDeath()
		{
		}
	}
	[Token(Token = "0x200032C")]
	public class DestroyOnTriggerEnter : MonoBehaviour
	{
		[Token(Token = "0x40015A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string tagFilter;

		[Token(Token = "0x40015A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool useTag;

		[Token(Token = "0x600144B")]
		[Address(RVA = "0x9DDA98", Offset = "0x9DDA98", VA = "0x9DDA98")]
		private void Start()
		{
		}

		[Token(Token = "0x600144C")]
		[Address(RVA = "0x9DDACC", Offset = "0x9DDACC", VA = "0x9DDACC")]
		private void OnTriggerEnter(Collider collider)
		{
		}

		[Token(Token = "0x600144D")]
		[Address(RVA = "0x9DDC00", Offset = "0x9DDC00", VA = "0x9DDC00")]
		public DestroyOnTriggerEnter()
		{
		}
	}
	[Token(Token = "0x200032D")]
	public class DistanceHaptics : MonoBehaviour
	{
		[Token(Token = "0x20007B9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x645B68", Offset = "0x645B68")]
		private sealed class <Start>d__4 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400290A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400290B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400290C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public DistanceHaptics <>4__this;

			[Token(Token = "0x170002F5")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60031E9")]
				[Address(RVA = "0x9DDF34", Offset = "0x9DDF34", VA = "0x9DDF34", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002F6")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60031EB")]
				[Address(RVA = "0x9DDFA4", Offset = "0x9DDFA4", VA = "0x9DDFA4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60031E6")]
			[Address(RVA = "0x9DDC7C", Offset = "0x9DDC7C", VA = "0x9DDC7C")]
			[DebuggerHidden]
			public <Start>d__4(int <>1__state)
			{
			}

			[Token(Token = "0x60031E7")]
			[Address(RVA = "0x9DDD18", Offset = "0x9DDD18", VA = "0x9DDD18", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60031E8")]
			[Address(RVA = "0x9DDD1C", Offset = "0x9DDD1C", VA = "0x9DDD1C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60031EA")]
			[Address(RVA = "0x9DDF3C", Offset = "0x9DDF3C", VA = "0x9DDF3C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40015A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform firstTransform;

		[Token(Token = "0x40015A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform secondTransform;

		[Token(Token = "0x40015A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AnimationCurve distanceIntensityCurve;

		[Token(Token = "0x40015A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AnimationCurve pulseIntervalCurve;

		[Token(Token = "0x600144E")]
		[Address(RVA = "0x9DDC08", Offset = "0x9DDC08", VA = "0x9DDC08")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x66AC3C", Offset = "0x66AC3C")]
		private IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x600144F")]
		[Address(RVA = "0x9DDCA8", Offset = "0x9DDCA8", VA = "0x9DDCA8")]
		public DistanceHaptics()
		{
		}
	}
	[Token(Token = "0x200032E")]
	public class DontDestroyOnLoad : MonoBehaviour
	{
		[Token(Token = "0x6001450")]
		[Address(RVA = "0x9DDFAC", Offset = "0x9DDFAC", VA = "0x9DDFAC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001451")]
		[Address(RVA = "0x9DE014", Offset = "0x9DE014", VA = "0x9DE014")]
		public DontDestroyOnLoad()
		{
		}
	}
	[Token(Token = "0x200032F")]
	public class EnumFlags : PropertyAttribute
	{
		[Token(Token = "0x6001452")]
		[Address(RVA = "0x9DE01C", Offset = "0x9DE01C", VA = "0x9DE01C")]
		public EnumFlags()
		{
		}
	}
	[Token(Token = "0x2000330")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x63EF2C", Offset = "0x63EF2C")]
	public class FallbackCameraController : MonoBehaviour
	{
		[Token(Token = "0x40015A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float speed;

		[Token(Token = "0x40015A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float shiftSpeed;

		[Token(Token = "0x40015A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool showInstructions;

		[Token(Token = "0x40015A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private Vector3 startEulerAngles;

		[Token(Token = "0x40015AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 startMousePosition;

		[Token(Token = "0x40015AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float realTime;

		[Token(Token = "0x6001453")]
		[Address(RVA = "0x9DE114", Offset = "0x9DE114", VA = "0x9DE114")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001454")]
		[Address(RVA = "0x9DE13C", Offset = "0x9DE13C", VA = "0x9DE13C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001455")]
		[Address(RVA = "0x9DE504", Offset = "0x9DE504", VA = "0x9DE504")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x6001456")]
		[Address(RVA = "0x9DE5B8", Offset = "0x9DE5B8", VA = "0x9DE5B8")]
		public FallbackCameraController()
		{
		}
	}
	[Token(Token = "0x2000331")]
	public class Hand : MonoBehaviour
	{
		[Token(Token = "0x20007BA")]
		public enum HandType
		{
			[Token(Token = "0x400290E")]
			Left,
			[Token(Token = "0x400290F")]
			Right,
			[Token(Token = "0x4002910")]
			Any
		}

		[Token(Token = "0x20007BB")]
		[Flags]
		public enum AttachmentFlags
		{
			[Token(Token = "0x4002912")]
			SnapOnAttach = 1,
			[Token(Token = "0x4002913")]
			DetachOthers = 2,
			[Token(Token = "0x4002914")]
			DetachFromOtherHand = 4,
			[Token(Token = "0x4002915")]
			ParentToHand = 8
		}

		[Token(Token = "0x20007BC")]
		public struct AttachedObject
		{
			[Token(Token = "0x4002916")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public GameObject attachedObject;

			[Token(Token = "0x4002917")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public GameObject originalParent;

			[Token(Token = "0x4002918")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool isParentedToHand;
		}

		[Token(Token = "0x20007BD")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x645B88", Offset = "0x645B88")]
		private sealed class <>c__DisplayClass42_0
		{
			[Token(Token = "0x4002919")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GameObject objectToDetach;

			[Token(Token = "0x60031EC")]
			[Address(RVA = "0x9DFA70", Offset = "0x9DFA70", VA = "0x9DFA70")]
			public <>c__DisplayClass42_0()
			{
			}

			[Token(Token = "0x60031ED")]
			[Address(RVA = "0x9E170C", Offset = "0x9E170C", VA = "0x9E170C")]
			internal bool <DetachObject>b__0(AttachedObject l)
			{
				return default(bool);
			}
		}

		[Serializable]
		[Token(Token = "0x20007BE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x645B98", Offset = "0x645B98")]
		private sealed class <>c
		{
			[Token(Token = "0x400291A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x400291B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Predicate<AttachedObject> <>9__45_0;

			[Token(Token = "0x60031EF")]
			[Address(RVA = "0x9E1694", Offset = "0x9E1694", VA = "0x9E1694")]
			public <>c()
			{
			}

			[Token(Token = "0x60031F0")]
			[Address(RVA = "0x9E169C", Offset = "0x9E169C", VA = "0x9E169C")]
			internal bool <CleanUpAttachedObjectStack>b__45_0(AttachedObject l)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20007BF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x645BA8", Offset = "0x645BA8")]
		private sealed class <Start>d__47 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400291C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400291D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400291E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Hand <>4__this;

			[Token(Token = "0x170002F7")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60031F4")]
				[Address(RVA = "0x9E1BE0", Offset = "0x9E1BE0", VA = "0x9E1BE0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002F8")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60031F6")]
				[Address(RVA = "0x9E1C50", Offset = "0x9E1C50", VA = "0x9E1C50", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60031F1")]
			[Address(RVA = "0x9DFE70", Offset = "0x9DFE70", VA = "0x9DFE70")]
			[DebuggerHidden]
			public <Start>d__47(int <>1__state)
			{
			}

			[Token(Token = "0x60031F2")]
			[Address(RVA = "0x9E182C", Offset = "0x9E182C", VA = "0x9E182C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60031F3")]
			[Address(RVA = "0x9E1830", Offset = "0x9E1830", VA = "0x9E1830", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60031F5")]
			[Address(RVA = "0x9E1BE8", Offset = "0x9E1BE8", VA = "0x9E1BE8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20007C0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x645BB8", Offset = "0x645BB8")]
		private sealed class <>c__DisplayClass48_0
		{
			[Token(Token = "0x400291F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Interactable contacting;

			[Token(Token = "0x60031F7")]
			[Address(RVA = "0x9DFE9C", Offset = "0x9DFE9C", VA = "0x9DFE9C")]
			public <>c__DisplayClass48_0()
			{
			}

			[Token(Token = "0x60031F8")]
			[Address(RVA = "0x9E178C", Offset = "0x9E178C", VA = "0x9E178C")]
			internal bool <UpdateHovering>b__0(AttachedObject l)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x40015AC")]
		public const AttachmentFlags defaultAttachmentFlags = AttachmentFlags.SnapOnAttach | AttachmentFlags.DetachOthers | AttachmentFlags.DetachFromOtherHand | AttachmentFlags.ParentToHand;

		[Token(Token = "0x40015AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Hand otherHand;

		[Token(Token = "0x40015AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HandType startingHandType;

		[Token(Token = "0x40015AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform hoverSphereTransform;

		[Token(Token = "0x40015B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float hoverSphereRadius;

		[Token(Token = "0x40015B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public LayerMask hoverLayerMask;

		[Token(Token = "0x40015B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float hoverUpdateInterval;

		[Token(Token = "0x40015B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Camera noSteamVRFallbackCamera;

		[Token(Token = "0x40015B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float noSteamVRFallbackMaxDistanceNoItem;

		[Token(Token = "0x40015B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float noSteamVRFallbackMaxDistanceWithItem;

		[Token(Token = "0x40015B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float noSteamVRFallbackInteractorDistance;

		[Token(Token = "0x40015B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public SteamVR_Controller.Device controller;

		[Token(Token = "0x40015B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public GameObject controllerPrefab;

		[Token(Token = "0x40015B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject controllerObject;

		[Token(Token = "0x40015BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public bool showDebugText;

		[Token(Token = "0x40015BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		public bool spewDebugText;

		[Token(Token = "0x40015BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private List<AttachedObject> attachedObjects;

		[Token(Token = "0x40015BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x651384", Offset = "0x651384")]
		private bool <hoverLocked>k__BackingField;

		[Token(Token = "0x40015BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Interactable _hoveringInteractable;

		[Token(Token = "0x40015BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private TextMesh debugText;

		[Token(Token = "0x40015C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private int prevOverlappingColliders;

		[Token(Token = "0x40015C1")]
		private const int ColliderArraySize = 16;

		[Token(Token = "0x40015C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Collider[] overlappingColliders;

		[Token(Token = "0x40015C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Player playerInstance;

		[Token(Token = "0x40015C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private GameObject applicationLostFocusObject;

		[Token(Token = "0x40015C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private SteamVR_Events.Action inputFocusAction;

		[Token(Token = "0x1700019C")]
		public ReadOnlyCollection<AttachedObject> AttachedObjects
		{
			[Token(Token = "0x6001457")]
			[Address(RVA = "0x9DEB34", Offset = "0x9DEB34", VA = "0x9DEB34")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700019D")]
		public bool hoverLocked
		{
			[Token(Token = "0x6001458")]
			[Address(RVA = "0x9DEB94", Offset = "0x9DEB94", VA = "0x9DEB94")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66ACA0", Offset = "0x66ACA0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001459")]
			[Address(RVA = "0x9DEB9C", Offset = "0x9DEB9C", VA = "0x9DEB9C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66ACB0", Offset = "0x66ACB0")]
			private set
			{
			}
		}

		[Token(Token = "0x1700019E")]
		public Interactable hoveringInteractable
		{
			[Token(Token = "0x600145A")]
			[Address(RVA = "0x9D4394", Offset = "0x9D4394", VA = "0x9D4394")]
			get
			{
				return null;
			}
			[Token(Token = "0x600145B")]
			[Address(RVA = "0x9DEBA8", Offset = "0x9DEBA8", VA = "0x9DEBA8")]
			set
			{
			}
		}

		[Token(Token = "0x1700019F")]
		public GameObject currentAttachedObject
		{
			[Token(Token = "0x600145C")]
			[Address(RVA = "0x9DEEEC", Offset = "0x9DEEEC", VA = "0x9DEEEC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600145D")]
		[Address(RVA = "0x9DF0D8", Offset = "0x9DF0D8", VA = "0x9DF0D8")]
		public Transform GetAttachmentTransform(string attachmentPoint = "")
		{
			return null;
		}

		[Token(Token = "0x600145E")]
		[Address(RVA = "0x9DF1B0", Offset = "0x9DF1B0", VA = "0x9DF1B0")]
		public HandType GuessCurrentHandType()
		{
			return default(HandType);
		}

		[Token(Token = "0x600145F")]
		[Address(RVA = "0x9D5DA8", Offset = "0x9D5DA8", VA = "0x9D5DA8")]
		public void AttachObject(GameObject objectToAttach, AttachmentFlags flags = AttachmentFlags.SnapOnAttach | AttachmentFlags.DetachOthers | AttachmentFlags.DetachFromOtherHand | AttachmentFlags.ParentToHand, string attachmentPoint = "")
		{
		}

		[Token(Token = "0x6001460")]
		[Address(RVA = "0x9D6244", Offset = "0x9D6244", VA = "0x9D6244")]
		public void DetachObject(GameObject objectToDetach, bool restoreOriginalParent = true)
		{
		}

		[Token(Token = "0x6001461")]
		[Address(RVA = "0x9DFA78", Offset = "0x9DFA78", VA = "0x9DFA78")]
		public Vector3 GetTrackedObjectVelocity()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001462")]
		[Address(RVA = "0x9DFB78", Offset = "0x9DFB78", VA = "0x9DFB78")]
		public Vector3 GetTrackedObjectAngularVelocity()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001463")]
		[Address(RVA = "0x9DEFD4", Offset = "0x9DEFD4", VA = "0x9DEFD4")]
		private void CleanUpAttachedObjectStack()
		{
		}

		[Token(Token = "0x6001464")]
		[Address(RVA = "0x9DFC78", Offset = "0x9DFC78", VA = "0x9DFC78")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001465")]
		[Address(RVA = "0x9DFDFC", Offset = "0x9DFDFC", VA = "0x9DFDFC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x66ACC0", Offset = "0x66ACC0")]
		private IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x6001466")]
		[Address(RVA = "0x9DF2F8", Offset = "0x9DF2F8", VA = "0x9DF2F8")]
		private void UpdateHovering()
		{
		}

		[Token(Token = "0x6001467")]
		[Address(RVA = "0x9DFEA4", Offset = "0x9DFEA4", VA = "0x9DFEA4")]
		private void UpdateNoSteamVRFallback()
		{
		}

		[Token(Token = "0x6001468")]
		[Address(RVA = "0x9E02D8", Offset = "0x9E02D8", VA = "0x9E02D8")]
		private void UpdateDebugText()
		{
		}

		[Token(Token = "0x6001469")]
		[Address(RVA = "0x9E0A10", Offset = "0x9E0A10", VA = "0x9E0A10")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600146A")]
		[Address(RVA = "0x9E0B30", Offset = "0x9E0B30", VA = "0x9E0B30")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600146B")]
		[Address(RVA = "0x9E0B74", Offset = "0x9E0B74", VA = "0x9E0B74")]
		private void Update()
		{
		}

		[Token(Token = "0x600146C")]
		[Address(RVA = "0x9E0C98", Offset = "0x9E0C98", VA = "0x9E0C98")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x600146D")]
		[Address(RVA = "0x9E0D5C", Offset = "0x9E0D5C", VA = "0x9E0D5C")]
		private void OnInputFocus(bool hasFocus)
		{
		}

		[Token(Token = "0x600146E")]
		[Address(RVA = "0x9E101C", Offset = "0x9E101C", VA = "0x9E101C")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x600146F")]
		[Address(RVA = "0x9E1020", Offset = "0x9E1020", VA = "0x9E1020")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x6001470")]
		[Address(RVA = "0x9DEE20", Offset = "0x9DEE20", VA = "0x9DEE20")]
		private void HandDebugLog(string msg)
		{
		}

		[Token(Token = "0x6001471")]
		[Address(RVA = "0x9E0E4C", Offset = "0x9E0E4C", VA = "0x9E0E4C")]
		private void UpdateHandPoses()
		{
		}

		[Token(Token = "0x6001472")]
		[Address(RVA = "0x9D3E74", Offset = "0x9D3E74", VA = "0x9D3E74")]
		public void HoverLock(Interactable interactable)
		{
		}

		[Token(Token = "0x6001473")]
		[Address(RVA = "0x9D349C", Offset = "0x9D349C", VA = "0x9D349C")]
		public void HoverUnlock(Interactable interactable)
		{
		}

		[Token(Token = "0x6001474")]
		[Address(RVA = "0x9D3B10", Offset = "0x9D3B10", VA = "0x9D3B10")]
		public bool GetStandardInteractionButtonDown()
		{
			return default(bool);
		}

		[Token(Token = "0x6001475")]
		[Address(RVA = "0x9D42F4", Offset = "0x9D42F4", VA = "0x9D42F4")]
		public bool GetStandardInteractionButtonUp()
		{
			return default(bool);
		}

		[Token(Token = "0x6001476")]
		[Address(RVA = "0x9D3854", Offset = "0x9D3854", VA = "0x9D3854")]
		public bool GetStandardInteractionButton()
		{
			return default(bool);
		}

		[Token(Token = "0x6001477")]
		[Address(RVA = "0x9E1110", Offset = "0x9E1110", VA = "0x9E1110")]
		private void InitController(int index)
		{
		}

		[Token(Token = "0x6001478")]
		[Address(RVA = "0x9E1588", Offset = "0x9E1588", VA = "0x9E1588")]
		public Hand()
		{
		}
	}
	[Token(Token = "0x2000332")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x63EF90", Offset = "0x63EF90")]
	public class HapticRack : MonoBehaviour
	{
		[Token(Token = "0x40015C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x651394", Offset = "0x651394")]
		public LinearMapping linearMapping;

		[Token(Token = "0x40015C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6513CC", Offset = "0x6513CC")]
		public int teethCount;

		[Token(Token = "0x40015C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x651404", Offset = "0x651404")]
		public int minimumPulseDuration;

		[Token(Token = "0x40015C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65143C", Offset = "0x65143C")]
		public int maximumPulseDuration;

		[Token(Token = "0x40015CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x651474", Offset = "0x651474")]
		public UnityEvent onPulse;

		[Token(Token = "0x40015CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Hand hand;

		[Token(Token = "0x40015CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int previousToothIndex;

		[Token(Token = "0x6001479")]
		[Address(RVA = "0x9E1C58", Offset = "0x9E1C58", VA = "0x9E1C58")]
		private void Awake()
		{
		}

		[Token(Token = "0x600147A")]
		[Address(RVA = "0x9E1CE8", Offset = "0x9E1CE8", VA = "0x9E1CE8")]
		private void OnHandHoverBegin(Hand hand)
		{
		}

		[Token(Token = "0x600147B")]
		[Address(RVA = "0x9E1CF0", Offset = "0x9E1CF0", VA = "0x9E1CF0")]
		private void OnHandHoverEnd(Hand hand)
		{
		}

		[Token(Token = "0x600147C")]
		[Address(RVA = "0x9E1CF8", Offset = "0x9E1CF8", VA = "0x9E1CF8")]
		private void Update()
		{
		}

		[Token(Token = "0x600147D")]
		[Address(RVA = "0x9E1DAC", Offset = "0x9E1DAC", VA = "0x9E1DAC")]
		private void Pulse()
		{
		}

		[Token(Token = "0x600147E")]
		[Address(RVA = "0x9E1ECC", Offset = "0x9E1ECC", VA = "0x9E1ECC")]
		public HapticRack()
		{
		}
	}
	[Token(Token = "0x2000333")]
	public class HideOnHandFocusLost : MonoBehaviour
	{
		[Token(Token = "0x600147F")]
		[Address(RVA = "0x9E1EF0", Offset = "0x9E1EF0", VA = "0x9E1EF0")]
		private void OnHandFocusLost(Hand hand)
		{
		}

		[Token(Token = "0x6001480")]
		[Address(RVA = "0x9E1F28", Offset = "0x9E1F28", VA = "0x9E1F28")]
		public HideOnHandFocusLost()
		{
		}
	}
	[Token(Token = "0x2000334")]
	public class IgnoreHovering : MonoBehaviour
	{
		[Token(Token = "0x40015CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6514AC", Offset = "0x6514AC")]
		public Hand onlyIgnoreHand;

		[Token(Token = "0x6001481")]
		[Address(RVA = "0x9E1F30", Offset = "0x9E1F30", VA = "0x9E1F30")]
		public IgnoreHovering()
		{
		}
	}
	[Token(Token = "0x2000335")]
	public class InputModule : BaseInputModule
	{
		[Token(Token = "0x40015CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private GameObject submitObject;

		[Token(Token = "0x40015CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static InputModule _instance;

		[Token(Token = "0x170001A0")]
		public static InputModule instance
		{
			[Token(Token = "0x6001482")]
			[Address(RVA = "0x9E1F40", Offset = "0x9E1F40", VA = "0x9E1F40")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001483")]
		[Address(RVA = "0x9E200C", Offset = "0x9E200C", VA = "0x9E200C", Slot = "21")]
		public override bool ShouldActivateModule()
		{
			return default(bool);
		}

		[Token(Token = "0x6001484")]
		[Address(RVA = "0x9E209C", Offset = "0x9E209C", VA = "0x9E209C")]
		public void HoverBegin(GameObject gameObject)
		{
		}

		[Token(Token = "0x6001485")]
		[Address(RVA = "0x9E215C", Offset = "0x9E215C", VA = "0x9E215C")]
		public void HoverEnd(GameObject gameObject)
		{
		}

		[Token(Token = "0x6001486")]
		[Address(RVA = "0x9E2238", Offset = "0x9E2238", VA = "0x9E2238")]
		public void Submit(GameObject gameObject)
		{
		}

		[Token(Token = "0x6001487")]
		[Address(RVA = "0x9E2240", Offset = "0x9E2240", VA = "0x9E2240", Slot = "17")]
		public override void Process()
		{
		}

		[Token(Token = "0x6001488")]
		[Address(RVA = "0x9E233C", Offset = "0x9E233C", VA = "0x9E233C")]
		public InputModule()
		{
		}
	}
	[Token(Token = "0x2000336")]
	public class Interactable : MonoBehaviour
	{
		[Token(Token = "0x20007C1")]
		public delegate void OnAttachedToHandDelegate(Hand hand);

		[Token(Token = "0x20007C2")]
		public delegate void OnDetachedFromHandDelegate(Hand hand);

		[Token(Token = "0x14000071")]
		[HideInInspector]
		public event OnAttachedToHandDelegate onAttachedToHand
		{
			[Token(Token = "0x6001489")]
			[Address(RVA = "0x9E2344", Offset = "0x9E2344", VA = "0x9E2344")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66AD24", Offset = "0x66AD24")]
			add
			{
			}
			[Token(Token = "0x600148A")]
			[Address(RVA = "0x9E2430", Offset = "0x9E2430", VA = "0x9E2430")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66AD34", Offset = "0x66AD34")]
			remove
			{
			}
		}

		[Token(Token = "0x14000072")]
		[HideInInspector]
		public event OnDetachedFromHandDelegate onDetachedFromHand
		{
			[Token(Token = "0x600148B")]
			[Address(RVA = "0x9E251C", Offset = "0x9E251C", VA = "0x9E251C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66AD44", Offset = "0x66AD44")]
			add
			{
			}
			[Token(Token = "0x600148C")]
			[Address(RVA = "0x9E2608", Offset = "0x9E2608", VA = "0x9E2608")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66AD54", Offset = "0x66AD54")]
			remove
			{
			}
		}

		[Token(Token = "0x600148D")]
		[Address(RVA = "0x9E26F4", Offset = "0x9E26F4", VA = "0x9E26F4")]
		private void OnAttachedToHand(Hand hand)
		{
		}

		[Token(Token = "0x600148E")]
		[Address(RVA = "0x9E2E38", Offset = "0x9E2E38", VA = "0x9E2E38")]
		private void OnDetachedFromHand(Hand hand)
		{
		}

		[Token(Token = "0x600148F")]
		[Address(RVA = "0x9E357C", Offset = "0x9E357C", VA = "0x9E357C")]
		public Interactable()
		{
		}
	}
	[Token(Token = "0x2000337")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x63EFF4", Offset = "0x63EFF4")]
	public class InteractableButtonEvents : MonoBehaviour
	{
		[Token(Token = "0x40015D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UnityEvent onTriggerDown;

		[Token(Token = "0x40015D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UnityEvent onTriggerUp;

		[Token(Token = "0x40015D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UnityEvent onGripDown;

		[Token(Token = "0x40015D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public UnityEvent onGripUp;

		[Token(Token = "0x40015D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public UnityEvent onTouchpadDown;

		[Token(Token = "0x40015D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public UnityEvent onTouchpadUp;

		[Token(Token = "0x40015D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public UnityEvent onTouchpadTouch;

		[Token(Token = "0x40015D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public UnityEvent onTouchpadRelease;

		[Token(Token = "0x6001490")]
		[Address(RVA = "0x9E3604", Offset = "0x9E3604", VA = "0x9E3604")]
		private void Update()
		{
		}

		[Token(Token = "0x6001491")]
		[Address(RVA = "0x9E3A44", Offset = "0x9E3A44", VA = "0x9E3A44")]
		public InteractableButtonEvents()
		{
		}
	}
	[Token(Token = "0x2000338")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x63F058", Offset = "0x63F058")]
	public class InteractableHoverEvents : MonoBehaviour
	{
		[Token(Token = "0x40015DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UnityEvent onHandHoverBegin;

		[Token(Token = "0x40015DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UnityEvent onHandHoverEnd;

		[Token(Token = "0x40015DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UnityEvent onAttachedToHand;

		[Token(Token = "0x40015DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public UnityEvent onDetachedFromHand;

		[Token(Token = "0x6001492")]
		[Address(RVA = "0x9E40CC", Offset = "0x9E40CC", VA = "0x9E40CC")]
		private void OnHandHoverBegin()
		{
		}

		[Token(Token = "0x6001493")]
		[Address(RVA = "0x9E40FC", Offset = "0x9E40FC", VA = "0x9E40FC")]
		private void OnHandHoverEnd()
		{
		}

		[Token(Token = "0x6001494")]
		[Address(RVA = "0x9E412C", Offset = "0x9E412C", VA = "0x9E412C")]
		private void OnAttachedToHand(Hand hand)
		{
		}

		[Token(Token = "0x6001495")]
		[Address(RVA = "0x9E415C", Offset = "0x9E415C", VA = "0x9E415C")]
		private void OnDetachedFromHand(Hand hand)
		{
		}

		[Token(Token = "0x6001496")]
		[Address(RVA = "0x9E418C", Offset = "0x9E418C", VA = "0x9E418C")]
		public InteractableHoverEvents()
		{
		}
	}
	[Token(Token = "0x2000339")]
	public class ItemPackage : MonoBehaviour
	{
		[Token(Token = "0x20007C3")]
		public enum ItemPackageType
		{
			[Token(Token = "0x4002921")]
			Unrestricted,
			[Token(Token = "0x4002922")]
			OneHanded,
			[Token(Token = "0x4002923")]
			TwoHanded
		}

		[Token(Token = "0x40015DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public new string name;

		[Token(Token = "0x40015DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ItemPackageType packageType;

		[Token(Token = "0x40015E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject itemPrefab;

		[Token(Token = "0x40015E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject otherHandItemPrefab;

		[Token(Token = "0x40015E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject previewPrefab;

		[Token(Token = "0x40015E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GameObject fadedPreviewPrefab;

		[Token(Token = "0x6001497")]
		[Address(RVA = "0x9E4194", Offset = "0x9E4194", VA = "0x9E4194")]
		public ItemPackage()
		{
		}
	}
	[Token(Token = "0x200033A")]
	public class ItemPackageReference : MonoBehaviour
	{
		[Token(Token = "0x40015E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ItemPackage itemPackage;

		[Token(Token = "0x6001498")]
		[Address(RVA = "0x9E419C", Offset = "0x9E419C", VA = "0x9E419C")]
		public ItemPackageReference()
		{
		}
	}
	[Token(Token = "0x200033B")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x63F0BC", Offset = "0x63F0BC")]
	public class ItemPackageSpawner : MonoBehaviour
	{
		[Token(Token = "0x40015E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ItemPackage _itemPackage;

		[Token(Token = "0x40015E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool useItemPackagePreview;

		[Token(Token = "0x40015E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		private bool useFadedPreview;

		[Token(Token = "0x40015E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GameObject previewObject;

		[Token(Token = "0x40015E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool requireTriggerPressToTake;

		[Token(Token = "0x40015EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		public bool requireTriggerPressToReturn;

		[Token(Token = "0x40015EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
		public bool showTriggerHint;

		[Token(Token = "0x40015EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[EnumFlags]
		public Hand.AttachmentFlags attachmentFlags;

		[Token(Token = "0x40015ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string attachmentPoint;

		[Token(Token = "0x40015EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool takeBackItem;

		[Token(Token = "0x40015EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		public bool acceptDifferentItems;

		[Token(Token = "0x40015F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private GameObject spawnedItem;

		[Token(Token = "0x40015F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool itemIsSpawned;

		[Token(Token = "0x40015F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public UnityEvent pickupEvent;

		[Token(Token = "0x40015F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public UnityEvent dropEvent;

		[Token(Token = "0x40015F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public bool justPickedUpItem;

		[Token(Token = "0x170001A1")]
		public ItemPackage itemPackage
		{
			[Token(Token = "0x6001499")]
			[Address(RVA = "0x9E41A4", Offset = "0x9E41A4", VA = "0x9E41A4")]
			get
			{
				return null;
			}
			[Token(Token = "0x600149A")]
			[Address(RVA = "0x9E41AC", Offset = "0x9E41AC", VA = "0x9E41AC")]
			set
			{
			}
		}

		[Token(Token = "0x600149B")]
		[Address(RVA = "0x9E41B0", Offset = "0x9E41B0", VA = "0x9E41B0")]
		private void CreatePreviewObject()
		{
		}

		[Token(Token = "0x600149C")]
		[Address(RVA = "0x9E47F0", Offset = "0x9E47F0", VA = "0x9E47F0")]
		private void Start()
		{
		}

		[Token(Token = "0x600149D")]
		[Address(RVA = "0x9E47F4", Offset = "0x9E47F4", VA = "0x9E47F4")]
		private void VerifyItemPackage()
		{
		}

		[Token(Token = "0x600149E")]
		[Address(RVA = "0x9E48D0", Offset = "0x9E48D0", VA = "0x9E48D0")]
		private void ItemPackageNotValid()
		{
		}

		[Token(Token = "0x600149F")]
		[Address(RVA = "0x9E4488", Offset = "0x9E4488", VA = "0x9E4488")]
		private void ClearPreview()
		{
		}

		[Token(Token = "0x60014A0")]
		[Address(RVA = "0x9E49CC", Offset = "0x9E49CC", VA = "0x9E49CC")]
		private void Update()
		{
		}

		[Token(Token = "0x60014A1")]
		[Address(RVA = "0x9E4A80", Offset = "0x9E4A80", VA = "0x9E4A80")]
		private void OnHandHoverBegin(Hand hand)
		{
		}

		[Token(Token = "0x60014A2")]
		[Address(RVA = "0x9E4C9C", Offset = "0x9E4C9C", VA = "0x9E4C9C")]
		private void TakeBackItem(Hand hand)
		{
		}

		[Token(Token = "0x60014A3")]
		[Address(RVA = "0x9E4B7C", Offset = "0x9E4B7C", VA = "0x9E4B7C")]
		private ItemPackage GetAttachedItemPackage(Hand hand)
		{
			return null;
		}

		[Token(Token = "0x60014A4")]
		[Address(RVA = "0x9E5278", Offset = "0x9E5278", VA = "0x9E5278")]
		private void HandHoverUpdate(Hand hand)
		{
		}

		[Token(Token = "0x60014A5")]
		[Address(RVA = "0x9E5394", Offset = "0x9E5394", VA = "0x9E5394")]
		private void OnHandHoverEnd(Hand hand)
		{
		}

		[Token(Token = "0x60014A6")]
		[Address(RVA = "0x9E5074", Offset = "0x9E5074", VA = "0x9E5074")]
		private void RemoveMatchingItemsFromHandStack(ItemPackage package, Hand hand)
		{
		}

		[Token(Token = "0x60014A7")]
		[Address(RVA = "0x9E53DC", Offset = "0x9E53DC", VA = "0x9E53DC")]
		private void RemoveMatchingItemTypesFromHand(ItemPackage.ItemPackageType packageType, Hand hand)
		{
		}

		[Token(Token = "0x60014A8")]
		[Address(RVA = "0x9E4D18", Offset = "0x9E4D18", VA = "0x9E4D18")]
		private void SpawnAndAttachObject(Hand hand)
		{
		}

		[Token(Token = "0x60014A9")]
		[Address(RVA = "0x9E55A0", Offset = "0x9E55A0", VA = "0x9E55A0")]
		public ItemPackageSpawner()
		{
		}
	}
	[Token(Token = "0x200033C")]
	public class LinearAnimation : MonoBehaviour
	{
		[Token(Token = "0x40015F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LinearMapping linearMapping;

		[Token(Token = "0x40015F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Animation animation;

		[Token(Token = "0x40015F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private AnimationState animState;

		[Token(Token = "0x40015F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float animLength;

		[Token(Token = "0x40015F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float lastValue;

		[Token(Token = "0x60014AA")]
		[Address(RVA = "0x9E55B8", Offset = "0x9E55B8", VA = "0x9E55B8")]
		private void Awake()
		{
		}

		[Token(Token = "0x60014AB")]
		[Address(RVA = "0x9E576C", Offset = "0x9E576C", VA = "0x9E576C")]
		private void Update()
		{
		}

		[Token(Token = "0x60014AC")]
		[Address(RVA = "0x9E57D8", Offset = "0x9E57D8", VA = "0x9E57D8")]
		public LinearAnimation()
		{
		}
	}
	[Token(Token = "0x200033D")]
	public class LinearAnimator : MonoBehaviour
	{
		[Token(Token = "0x40015FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LinearMapping linearMapping;

		[Token(Token = "0x40015FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Animator animator;

		[Token(Token = "0x40015FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float currentLinearMapping;

		[Token(Token = "0x40015FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int framesUnchanged;

		[Token(Token = "0x60014AD")]
		[Address(RVA = "0x9E57E0", Offset = "0x9E57E0", VA = "0x9E57E0")]
		private void Awake()
		{
		}

		[Token(Token = "0x60014AE")]
		[Address(RVA = "0x9E58EC", Offset = "0x9E58EC", VA = "0x9E58EC")]
		private void Update()
		{
		}

		[Token(Token = "0x60014AF")]
		[Address(RVA = "0x9E59DC", Offset = "0x9E59DC", VA = "0x9E59DC")]
		public LinearAnimator()
		{
		}
	}
	[Token(Token = "0x200033E")]
	public class LinearAudioPitch : MonoBehaviour
	{
		[Token(Token = "0x40015FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LinearMapping linearMapping;

		[Token(Token = "0x40015FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AnimationCurve pitchCurve;

		[Token(Token = "0x4001600")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float minPitch;

		[Token(Token = "0x4001601")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float maxPitch;

		[Token(Token = "0x4001602")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool applyContinuously;

		[Token(Token = "0x4001603")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private AudioSource audioSource;

		[Token(Token = "0x60014B0")]
		[Address(RVA = "0x9E59EC", Offset = "0x9E59EC", VA = "0x9E59EC")]
		private void Awake()
		{
		}

		[Token(Token = "0x60014B1")]
		[Address(RVA = "0x9E5ACC", Offset = "0x9E5ACC", VA = "0x9E5ACC")]
		private void Update()
		{
		}

		[Token(Token = "0x60014B2")]
		[Address(RVA = "0x9E5ADC", Offset = "0x9E5ADC", VA = "0x9E5ADC")]
		private void Apply()
		{
		}

		[Token(Token = "0x60014B3")]
		[Address(RVA = "0x9E5BC0", Offset = "0x9E5BC0", VA = "0x9E5BC0")]
		public LinearAudioPitch()
		{
		}
	}
	[Token(Token = "0x200033F")]
	public class LinearBlendshape : MonoBehaviour
	{
		[Token(Token = "0x4001604")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LinearMapping linearMapping;

		[Token(Token = "0x4001605")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SkinnedMeshRenderer skinnedMesh;

		[Token(Token = "0x4001606")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float lastValue;

		[Token(Token = "0x60014B4")]
		[Address(RVA = "0x9E5BD0", Offset = "0x9E5BD0", VA = "0x9E5BD0")]
		private void Awake()
		{
		}

		[Token(Token = "0x60014B5")]
		[Address(RVA = "0x9E5CB0", Offset = "0x9E5CB0", VA = "0x9E5CB0")]
		private void Update()
		{
		}

		[Token(Token = "0x60014B6")]
		[Address(RVA = "0x9E5D40", Offset = "0x9E5D40", VA = "0x9E5D40")]
		public LinearBlendshape()
		{
		}
	}
	[Token(Token = "0x2000340")]
	public class LinearDisplacement : MonoBehaviour
	{
		[Token(Token = "0x4001607")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 displacement;

		[Token(Token = "0x4001608")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public LinearMapping linearMapping;

		[Token(Token = "0x4001609")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 initialPosition;

		[Token(Token = "0x60014B7")]
		[Address(RVA = "0x9E5D48", Offset = "0x9E5D48", VA = "0x9E5D48")]
		private void Start()
		{
		}

		[Token(Token = "0x60014B8")]
		[Address(RVA = "0x9E5E04", Offset = "0x9E5E04", VA = "0x9E5E04")]
		private void Update()
		{
		}

		[Token(Token = "0x60014B9")]
		[Address(RVA = "0x9E5F78", Offset = "0x9E5F78", VA = "0x9E5F78")]
		public LinearDisplacement()
		{
		}
	}
	[Token(Token = "0x2000341")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x63F120", Offset = "0x63F120")]
	public class LinearDrive : MonoBehaviour
	{
		[Token(Token = "0x400160A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform startPosition;

		[Token(Token = "0x400160B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform endPosition;

		[Token(Token = "0x400160C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public LinearMapping linearMapping;

		[Token(Token = "0x400160D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool repositionGameObject;

		[Token(Token = "0x400160E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		public bool maintainMomemntum;

		[Token(Token = "0x400160F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float momemtumDampenRate;

		[Token(Token = "0x4001610")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float initialMappingOffset;

		[Token(Token = "0x4001611")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int numMappingChangeSamples;

		[Token(Token = "0x4001612")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float[] mappingChangeSamples;

		[Token(Token = "0x4001613")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float prevMapping;

		[Token(Token = "0x4001614")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float mappingChangeRate;

		[Token(Token = "0x4001615")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int sampleCount;

		[Token(Token = "0x60014BA")]
		[Address(RVA = "0x9E5F80", Offset = "0x9E5F80", VA = "0x9E5F80")]
		private void Awake()
		{
		}

		[Token(Token = "0x60014BB")]
		[Address(RVA = "0x9E5FD8", Offset = "0x9E5FD8", VA = "0x9E5FD8")]
		private void Start()
		{
		}

		[Token(Token = "0x60014BC")]
		[Address(RVA = "0x9E63A4", Offset = "0x9E63A4", VA = "0x9E63A4")]
		private void HandHoverUpdate(Hand hand)
		{
		}

		[Token(Token = "0x60014BD")]
		[Address(RVA = "0x9E66BC", Offset = "0x9E66BC", VA = "0x9E66BC")]
		private void CalculateMappingChangeRate()
		{
		}

		[Token(Token = "0x60014BE")]
		[Address(RVA = "0x9E6128", Offset = "0x9E6128", VA = "0x9E6128")]
		private void UpdateLinearMapping(Transform tr)
		{
		}

		[Token(Token = "0x60014BF")]
		[Address(RVA = "0x9E6520", Offset = "0x9E6520", VA = "0x9E6520")]
		private float CalculateLinearMapping(Transform tr)
		{
			return default(float);
		}

		[Token(Token = "0x60014C0")]
		[Address(RVA = "0x9E67CC", Offset = "0x9E67CC", VA = "0x9E67CC")]
		private void Update()
		{
		}

		[Token(Token = "0x60014C1")]
		[Address(RVA = "0x9E69E4", Offset = "0x9E69E4", VA = "0x9E69E4")]
		public LinearDrive()
		{
		}
	}
	[Token(Token = "0x2000342")]
	public class LinearMapping : MonoBehaviour
	{
		[Token(Token = "0x4001616")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float value;

		[Token(Token = "0x60014C2")]
		[Address(RVA = "0x9E6A04", Offset = "0x9E6A04", VA = "0x9E6A04")]
		public LinearMapping()
		{
		}
	}
	[Token(Token = "0x2000343")]
	public class Player : MonoBehaviour
	{
		[Token(Token = "0x4001617")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x651514", Offset = "0x651514")]
		public Transform trackingOriginTransform;

		[Token(Token = "0x4001618")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65154C", Offset = "0x65154C")]
		public Transform[] hmdTransforms;

		[Token(Token = "0x4001619")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x651584", Offset = "0x651584")]
		public Hand[] hands;

		[Token(Token = "0x400161A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6515BC", Offset = "0x6515BC")]
		public Collider headCollider;

		[Token(Token = "0x400161B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6515F4", Offset = "0x6515F4")]
		public GameObject rigSteamVR;

		[Token(Token = "0x400161C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65162C", Offset = "0x65162C")]
		public GameObject rig2DFallback;

		[Token(Token = "0x400161D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x651664", Offset = "0x651664")]
		public Transform audioListener;

		[Token(Token = "0x400161E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public bool allowToggleTo2D;

		[Token(Token = "0x400161F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Player _instance;

		[Token(Token = "0x170001A2")]
		public static Player instance
		{
			[Token(Token = "0x60014C3")]
			[Address(RVA = "0x9D6B78", Offset = "0x9D6B78", VA = "0x9D6B78")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001A3")]
		public int handCount
		{
			[Token(Token = "0x60014C4")]
			[Address(RVA = "0x9E3978", Offset = "0x9E3978", VA = "0x9E3978")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001A4")]
		public Hand leftHand
		{
			[Token(Token = "0x60014C6")]
			[Address(RVA = "0x9E897C", Offset = "0x9E897C", VA = "0x9E897C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001A5")]
		public Hand rightHand
		{
			[Token(Token = "0x60014C7")]
			[Address(RVA = "0x9E8ABC", Offset = "0x9E8ABC", VA = "0x9E8ABC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001A6")]
		public SteamVR_Controller.Device leftController
		{
			[Token(Token = "0x60014C8")]
			[Address(RVA = "0x9E8C00", Offset = "0x9E8C00", VA = "0x9E8C00")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001A7")]
		public SteamVR_Controller.Device rightController
		{
			[Token(Token = "0x60014C9")]
			[Address(RVA = "0x9E8C98", Offset = "0x9E8C98", VA = "0x9E8C98")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001A8")]
		public Transform hmdTransform
		{
			[Token(Token = "0x60014CA")]
			[Address(RVA = "0x9DACC8", Offset = "0x9DACC8", VA = "0x9DACC8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001A9")]
		public float eyeHeight
		{
			[Token(Token = "0x60014CB")]
			[Address(RVA = "0x9E8D30", Offset = "0x9E8D30", VA = "0x9E8D30")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170001AA")]
		public Vector3 feetPositionGuess
		{
			[Token(Token = "0x60014CC")]
			[Address(RVA = "0x9E8EE8", Offset = "0x9E8EE8", VA = "0x9E8EE8")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170001AB")]
		public Vector3 bodyDirectionGuess
		{
			[Token(Token = "0x60014CD")]
			[Address(RVA = "0x9E90D0", Offset = "0x9E90D0", VA = "0x9E90D0")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x60014C5")]
		[Address(RVA = "0x9E3870", Offset = "0x9E3870", VA = "0x9E3870")]
		public Hand GetHand(int i)
		{
			return null;
		}

		[Token(Token = "0x60014CE")]
		[Address(RVA = "0x9E92D4", Offset = "0x9E92D4", VA = "0x9E92D4")]
		private void Awake()
		{
		}

		[Token(Token = "0x60014CF")]
		[Address(RVA = "0x9E935C", Offset = "0x9E935C", VA = "0x9E935C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60014D0")]
		[Address(RVA = "0x9E963C", Offset = "0x9E963C", VA = "0x9E963C")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x60014D1")]
		[Address(RVA = "0x9DD770", Offset = "0x9DD770", VA = "0x9DD770")]
		public void Draw2DDebug()
		{
		}

		[Token(Token = "0x60014D2")]
		[Address(RVA = "0x9E93EC", Offset = "0x9E93EC", VA = "0x9E93EC")]
		private void ActivateRig(GameObject rig)
		{
		}

		[Token(Token = "0x60014D3")]
		[Address(RVA = "0x9E9C5C", Offset = "0x9E9C5C", VA = "0x9E9C5C")]
		public void PlayerShotSelf()
		{
		}

		[Token(Token = "0x60014D4")]
		[Address(RVA = "0x9E9C60", Offset = "0x9E9C60", VA = "0x9E9C60")]
		public Player()
		{
		}
	}
	[Token(Token = "0x2000344")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x63F184", Offset = "0x63F184")]
	public class PlaySound : MonoBehaviour
	{
		[Token(Token = "0x4001620")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65169C", Offset = "0x65169C")]
		public AudioClip[] waveFile;

		[Token(Token = "0x4001621")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6516D4", Offset = "0x6516D4")]
		public bool stopOnPlay;

		[Token(Token = "0x4001622")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65170C", Offset = "0x65170C")]
		public bool disableOnEnd;

		[Token(Token = "0x4001623")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x651744", Offset = "0x651744")]
		public bool looping;

		[Token(Token = "0x4001624")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x23")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65177C", Offset = "0x65177C")]
		public bool stopOnEnd;

		[Token(Token = "0x4001625")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6517B4", Offset = "0x6517B4")]
		public bool playOnAwakeWithDelay;

		[Token(Token = "0x4001626")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6517EC", Offset = "0x6517EC")]
		public bool useRandomVolume;

		[Token(Token = "0x4001627")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x651824", Offset = "0x651824")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x651824", Offset = "0x651824")]
		public float volMin;

		[Token(Token = "0x4001628")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x651878", Offset = "0x651878")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x651878", Offset = "0x651878")]
		public float volMax;

		[Token(Token = "0x4001629")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6518CC", Offset = "0x6518CC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6518CC", Offset = "0x6518CC")]
		public bool useRandomPitch;

		[Token(Token = "0x400162A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65192C", Offset = "0x65192C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x65192C", Offset = "0x65192C")]
		public float pitchMin;

		[Token(Token = "0x400162B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x651980", Offset = "0x651980")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x651980", Offset = "0x651980")]
		public float pitchMax;

		[Token(Token = "0x400162C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6519D4", Offset = "0x6519D4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6519D4", Offset = "0x6519D4")]
		public bool useRetriggerTime;

		[Token(Token = "0x400162D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x651A34", Offset = "0x651A34")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x651A34", Offset = "0x651A34")]
		public float timeInitial;

		[Token(Token = "0x400162E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x651A8C", Offset = "0x651A8C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x651A8C", Offset = "0x651A8C")]
		public float timeMin;

		[Token(Token = "0x400162F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x651AE4", Offset = "0x651AE4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x651AE4", Offset = "0x651AE4")]
		public float timeMax;

		[Token(Token = "0x4001630")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x651B3C", Offset = "0x651B3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x651B3C", Offset = "0x651B3C")]
		public bool useRandomSilence;

		[Token(Token = "0x4001631")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x651B9C", Offset = "0x651B9C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x651B9C", Offset = "0x651B9C")]
		public float percentToNotPlay;

		[Token(Token = "0x4001632")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x651BF0", Offset = "0x651BF0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x651BF0", Offset = "0x651BF0")]
		public float delayOffsetTime;

		[Token(Token = "0x4001633")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private AudioSource audioSource;

		[Token(Token = "0x4001634")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private AudioClip clip;

		[Token(Token = "0x60014D5")]
		[Address(RVA = "0x9E8388", Offset = "0x9E8388", VA = "0x9E8388")]
		private void Awake()
		{
		}

		[Token(Token = "0x60014D6")]
		[Address(RVA = "0x9E84E0", Offset = "0x9E84E0", VA = "0x9E84E0")]
		public void Play()
		{
		}

		[Token(Token = "0x60014D7")]
		[Address(RVA = "0x9E84F0", Offset = "0x9E84F0", VA = "0x9E84F0")]
		public void PlayWithDelay(float delayTime)
		{
		}

		[Token(Token = "0x60014D8")]
		[Address(RVA = "0x9E8664", Offset = "0x9E8664", VA = "0x9E8664")]
		public AudioClip PlayOneShotSound()
		{
			return null;
		}

		[Token(Token = "0x60014D9")]
		[Address(RVA = "0x9E8568", Offset = "0x9E8568", VA = "0x9E8568")]
		public AudioClip PlayLooping()
		{
			return null;
		}

		[Token(Token = "0x60014DA")]
		[Address(RVA = "0x9E88F4", Offset = "0x9E88F4", VA = "0x9E88F4")]
		public void Disable()
		{
		}

		[Token(Token = "0x60014DB")]
		[Address(RVA = "0x9E892C", Offset = "0x9E892C", VA = "0x9E892C")]
		public void Stop()
		{
		}

		[Token(Token = "0x60014DC")]
		[Address(RVA = "0x9E8760", Offset = "0x9E8760", VA = "0x9E8760")]
		private void SetAudioSource()
		{
		}

		[Token(Token = "0x60014DD")]
		[Address(RVA = "0x9E895C", Offset = "0x9E895C", VA = "0x9E895C")]
		public PlaySound()
		{
		}
	}
	[Token(Token = "0x2000345")]
	public class SeeThru : MonoBehaviour
	{
		[Token(Token = "0x4001635")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Material seeThruMaterial;

		[Token(Token = "0x4001636")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private GameObject seeThru;

		[Token(Token = "0x4001637")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Interactable interactable;

		[Token(Token = "0x4001638")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Renderer sourceRenderer;

		[Token(Token = "0x4001639")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Renderer destRenderer;

		[Token(Token = "0x60014DE")]
		[Address(RVA = "0x9E9C70", Offset = "0x9E9C70", VA = "0x9E9C70")]
		private void Awake()
		{
		}

		[Token(Token = "0x60014DF")]
		[Address(RVA = "0x9EA4B8", Offset = "0x9EA4B8", VA = "0x9EA4B8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60014E0")]
		[Address(RVA = "0x9EA58C", Offset = "0x9EA58C", VA = "0x9EA58C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60014E1")]
		[Address(RVA = "0x9EA660", Offset = "0x9EA660", VA = "0x9EA660")]
		private void AttachedToHand(Hand hand)
		{
		}

		[Token(Token = "0x60014E2")]
		[Address(RVA = "0x9EA694", Offset = "0x9EA694", VA = "0x9EA694")]
		private void DetachedFromHand(Hand hand)
		{
		}

		[Token(Token = "0x60014E3")]
		[Address(RVA = "0x9EA6C8", Offset = "0x9EA6C8", VA = "0x9EA6C8")]
		private void Update()
		{
		}

		[Token(Token = "0x60014E4")]
		[Address(RVA = "0x9EAA30", Offset = "0x9EAA30", VA = "0x9EAA30")]
		public SeeThru()
		{
		}
	}
	[Token(Token = "0x2000346")]
	public class SleepOnAwake : MonoBehaviour
	{
		[Token(Token = "0x60014E5")]
		[Address(RVA = "0x9EAA38", Offset = "0x9EAA38", VA = "0x9EAA38")]
		private void Awake()
		{
		}

		[Token(Token = "0x60014E6")]
		[Address(RVA = "0x9EAAE4", Offset = "0x9EAAE4", VA = "0x9EAAE4")]
		public SleepOnAwake()
		{
		}
	}
	[Token(Token = "0x2000347")]
	public class SoundDeparent : MonoBehaviour
	{
		[Token(Token = "0x400163A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool destroyAfterPlayOnce;

		[Token(Token = "0x400163B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private AudioSource thisAudioSource;

		[Token(Token = "0x60014E7")]
		[Address(RVA = "0x9EAB4C", Offset = "0x9EAB4C", VA = "0x9EAB4C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60014E8")]
		[Address(RVA = "0x9EABA4", Offset = "0x9EABA4", VA = "0x9EABA4")]
		private void Start()
		{
		}

		[Token(Token = "0x60014E9")]
		[Address(RVA = "0x9EACB8", Offset = "0x9EACB8", VA = "0x9EACB8")]
		public SoundDeparent()
		{
		}
	}
	[Token(Token = "0x2000348")]
	public class SoundPlayOneshot : MonoBehaviour
	{
		[Token(Token = "0x400163C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AudioClip[] waveFiles;

		[Token(Token = "0x400163D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private AudioSource thisAudioSource;

		[Token(Token = "0x400163E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float volMin;

		[Token(Token = "0x400163F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float volMax;

		[Token(Token = "0x4001640")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float pitchMin;

		[Token(Token = "0x4001641")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float pitchMax;

		[Token(Token = "0x4001642")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool playOnAwake;

		[Token(Token = "0x60014EA")]
		[Address(RVA = "0x9EACC8", Offset = "0x9EACC8", VA = "0x9EACC8")]
		private void Awake()
		{
		}

		[Token(Token = "0x60014EB")]
		[Address(RVA = "0x9E791C", Offset = "0x9E791C", VA = "0x9E791C")]
		public void Play()
		{
		}

		[Token(Token = "0x60014EC")]
		[Address(RVA = "0x9EAD38", Offset = "0x9EAD38", VA = "0x9EAD38")]
		public void Pause()
		{
		}

		[Token(Token = "0x60014ED")]
		[Address(RVA = "0x9EADD4", Offset = "0x9EADD4", VA = "0x9EADD4")]
		public void UnPause()
		{
		}

		[Token(Token = "0x60014EE")]
		[Address(RVA = "0x9EAE70", Offset = "0x9EAE70", VA = "0x9EAE70")]
		public SoundPlayOneshot()
		{
		}
	}
	[Token(Token = "0x2000349")]
	public class SpawnAndAttachAfterControllerIsTracking : MonoBehaviour
	{
		[Token(Token = "0x4001643")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Hand hand;

		[Token(Token = "0x4001644")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject itemPrefab;

		[Token(Token = "0x60014EF")]
		[Address(RVA = "0x9EAE78", Offset = "0x9EAE78", VA = "0x9EAE78")]
		private void Start()
		{
		}

		[Token(Token = "0x60014F0")]
		[Address(RVA = "0x9EAED0", Offset = "0x9EAED0", VA = "0x9EAED0")]
		private void Update()
		{
		}

		[Token(Token = "0x60014F1")]
		[Address(RVA = "0x9EB0FC", Offset = "0x9EB0FC", VA = "0x9EB0FC")]
		public SpawnAndAttachAfterControllerIsTracking()
		{
		}
	}
	[Token(Token = "0x200034A")]
	public class SpawnAndAttachToHand : MonoBehaviour
	{
		[Token(Token = "0x4001645")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Hand hand;

		[Token(Token = "0x4001646")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject prefab;

		[Token(Token = "0x60014F2")]
		[Address(RVA = "0x9EB104", Offset = "0x9EB104", VA = "0x9EB104")]
		public void SpawnAndAttach(Hand passedInhand)
		{
		}

		[Token(Token = "0x60014F3")]
		[Address(RVA = "0x9EB21C", Offset = "0x9EB21C", VA = "0x9EB21C")]
		public SpawnAndAttachToHand()
		{
		}
	}
	[Token(Token = "0x200034B")]
	public class SpawnRenderModel : MonoBehaviour
	{
		[Token(Token = "0x4001647")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Material[] materials;

		[Token(Token = "0x4001648")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private SteamVR_RenderModel[] renderModels;

		[Token(Token = "0x4001649")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Hand hand;

		[Token(Token = "0x400164A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<MeshRenderer> renderers;

		[Token(Token = "0x400164B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static List<SpawnRenderModel> spawnRenderModels;

		[Token(Token = "0x400164C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static int lastFrameUpdated;

		[Token(Token = "0x400164D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private static int spawnRenderModelUpdateIndex;

		[Token(Token = "0x400164E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private SteamVR_Events.Action renderModelLoadedAction;

		[Token(Token = "0x60014F4")]
		[Address(RVA = "0x9EB224", Offset = "0x9EB224", VA = "0x9EB224")]
		private void Awake()
		{
		}

		[Token(Token = "0x60014F5")]
		[Address(RVA = "0x9EB2F0", Offset = "0x9EB2F0", VA = "0x9EB2F0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60014F6")]
		[Address(RVA = "0x9EB790", Offset = "0x9EB790", VA = "0x9EB790")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60014F7")]
		[Address(RVA = "0x9EB990", Offset = "0x9EB990", VA = "0x9EB990")]
		private void OnAttachedToHand(Hand hand)
		{
		}

		[Token(Token = "0x60014F8")]
		[Address(RVA = "0x9EB998", Offset = "0x9EB998", VA = "0x9EB998")]
		private void OnDetachedFromHand(Hand hand)
		{
		}

		[Token(Token = "0x60014F9")]
		[Address(RVA = "0x9EB9A0", Offset = "0x9EB9A0", VA = "0x9EB9A0")]
		private void Update()
		{
		}

		[Token(Token = "0x60014FA")]
		[Address(RVA = "0x9EB3A4", Offset = "0x9EB3A4", VA = "0x9EB3A4")]
		private void ShowController()
		{
		}

		[Token(Token = "0x60014FB")]
		[Address(RVA = "0x9EB844", Offset = "0x9EB844", VA = "0x9EB844")]
		private void HideController()
		{
		}

		[Token(Token = "0x60014FC")]
		[Address(RVA = "0x9EBC24", Offset = "0x9EBC24", VA = "0x9EBC24")]
		private void OnRenderModelLoaded(SteamVR_RenderModel renderModel, bool success)
		{
		}

		[Token(Token = "0x60014FD")]
		[Address(RVA = "0x9EC048", Offset = "0x9EC048", VA = "0x9EC048")]
		public SpawnRenderModel()
		{
		}
	}
	[Token(Token = "0x200034C")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x63F1E8", Offset = "0x63F1E8")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x63F1E8", Offset = "0x63F1E8")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x63F1E8", Offset = "0x63F1E8")]
	public class Throwable : MonoBehaviour
	{
		[Token(Token = "0x20007C4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x645BC8", Offset = "0x645BC8")]
		private sealed class <LateDetach>d__24 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002924")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002925")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002926")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Hand hand;

			[Token(Token = "0x4002927")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Throwable <>4__this;

			[Token(Token = "0x170002F9")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6003204")]
				[Address(RVA = "0x8085F8", Offset = "0x8085F8", VA = "0x8085F8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002FA")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003206")]
				[Address(RVA = "0x808668", Offset = "0x808668", VA = "0x808668", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003201")]
			[Address(RVA = "0x8083BC", Offset = "0x8083BC", VA = "0x8083BC")]
			[DebuggerHidden]
			public <LateDetach>d__24(int <>1__state)
			{
			}

			[Token(Token = "0x6003202")]
			[Address(RVA = "0x8084F8", Offset = "0x8084F8", VA = "0x8084F8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003203")]
			[Address(RVA = "0x8084FC", Offset = "0x8084FC", VA = "0x8084FC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003205")]
			[Address(RVA = "0x808600", Offset = "0x808600", VA = "0x808600", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400164F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[EnumFlags]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x651C50", Offset = "0x651C50")]
		public Hand.AttachmentFlags attachmentFlags;

		[Token(Token = "0x4001650")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x651C9C", Offset = "0x651C9C")]
		public string attachmentPoint;

		[Token(Token = "0x4001651")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x651CD4", Offset = "0x651CD4")]
		public float catchSpeedThreshold;

		[Token(Token = "0x4001652")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x651D0C", Offset = "0x651D0C")]
		public bool restoreOriginalParent;

		[Token(Token = "0x4001653")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
		public bool attachEaseIn;

		[Token(Token = "0x4001654")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AnimationCurve snapAttachEaseInCurve;

		[Token(Token = "0x4001655")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float snapAttachEaseInTime;

		[Token(Token = "0x4001656")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string[] attachEaseInAttachmentNames;

		[Token(Token = "0x4001657")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private VelocityEstimator velocityEstimator;

		[Token(Token = "0x4001658")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool attached;

		[Token(Token = "0x4001659")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float attachTime;

		[Token(Token = "0x400165A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Vector3 attachPosition;

		[Token(Token = "0x400165B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private Quaternion attachRotation;

		[Token(Token = "0x400165C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Transform attachEaseInTransform;

		[Token(Token = "0x400165D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public UnityEvent onPickUp;

		[Token(Token = "0x400165E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public UnityEvent onDetachFromHand;

		[Token(Token = "0x400165F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public bool snapAttachEaseInCompleted;

		[Token(Token = "0x60014FF")]
		[Address(RVA = "0x806EB0", Offset = "0x806EB0", VA = "0x806EB0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001500")]
		[Address(RVA = "0x806F4C", Offset = "0x806F4C", VA = "0x806F4C")]
		private void OnHandHoverBegin(Hand hand)
		{
		}

		[Token(Token = "0x6001501")]
		[Address(RVA = "0x807054", Offset = "0x807054", VA = "0x807054")]
		private void OnHandHoverEnd(Hand hand)
		{
		}

		[Token(Token = "0x6001502")]
		[Address(RVA = "0x8070E0", Offset = "0x8070E0", VA = "0x8070E0")]
		private void HandHoverUpdate(Hand hand)
		{
		}

		[Token(Token = "0x6001503")]
		[Address(RVA = "0x8071E0", Offset = "0x8071E0", VA = "0x8071E0")]
		private void OnAttachedToHand(Hand hand)
		{
		}

		[Token(Token = "0x6001504")]
		[Address(RVA = "0x807520", Offset = "0x807520", VA = "0x807520")]
		private void OnDetachedFromHand(Hand hand)
		{
		}

		[Token(Token = "0x6001505")]
		[Address(RVA = "0x807F5C", Offset = "0x807F5C", VA = "0x807F5C")]
		private void HandAttachedUpdate(Hand hand)
		{
		}

		[Token(Token = "0x6001506")]
		[Address(RVA = "0x808250", Offset = "0x808250", VA = "0x808250")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x66AD64", Offset = "0x66AD64")]
		private IEnumerator LateDetach(Hand hand)
		{
			return null;
		}

		[Token(Token = "0x6001507")]
		[Address(RVA = "0x8083E8", Offset = "0x8083E8", VA = "0x8083E8")]
		private void OnHandFocusAcquired(Hand hand)
		{
		}

		[Token(Token = "0x6001508")]
		[Address(RVA = "0x80843C", Offset = "0x80843C", VA = "0x80843C")]
		private void OnHandFocusLost(Hand hand)
		{
		}

		[Token(Token = "0x6001509")]
		[Address(RVA = "0x8084A4", Offset = "0x8084A4", VA = "0x8084A4")]
		public Throwable()
		{
		}
	}
	[Token(Token = "0x200034D")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x63F29C", Offset = "0x63F29C")]
	public class UIElement : MonoBehaviour
	{
		[Token(Token = "0x4001660")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public CustomEvents.UnityEventHand onHandClick;

		[Token(Token = "0x4001661")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Hand currentHand;

		[Token(Token = "0x600150A")]
		[Address(RVA = "0x808670", Offset = "0x808670", VA = "0x808670")]
		private void Awake()
		{
		}

		[Token(Token = "0x600150B")]
		[Address(RVA = "0x808778", Offset = "0x808778", VA = "0x808778")]
		private void OnHandHoverBegin(Hand hand)
		{
		}

		[Token(Token = "0x600150C")]
		[Address(RVA = "0x80884C", Offset = "0x80884C", VA = "0x80884C")]
		private void OnHandHoverEnd(Hand hand)
		{
		}

		[Token(Token = "0x600150D")]
		[Address(RVA = "0x808924", Offset = "0x808924", VA = "0x808924")]
		private void HandHoverUpdate(Hand hand)
		{
		}

		[Token(Token = "0x600150E")]
		[Address(RVA = "0x808A20", Offset = "0x808A20", VA = "0x808A20")]
		private void OnButtonClick()
		{
		}

		[Token(Token = "0x600150F")]
		[Address(RVA = "0x808A88", Offset = "0x808A88", VA = "0x808A88")]
		public UIElement()
		{
		}
	}
	[Token(Token = "0x200034E")]
	public class Unparent : MonoBehaviour
	{
		[Token(Token = "0x4001662")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Transform oldParent;

		[Token(Token = "0x6001510")]
		[Address(RVA = "0x808A90", Offset = "0x808A90", VA = "0x808A90")]
		private void Start()
		{
		}

		[Token(Token = "0x6001511")]
		[Address(RVA = "0x808BCC", Offset = "0x808BCC", VA = "0x808BCC")]
		private void Update()
		{
		}

		[Token(Token = "0x6001512")]
		[Address(RVA = "0x808C90", Offset = "0x808C90", VA = "0x808C90")]
		public Transform GetOldParent()
		{
			return null;
		}

		[Token(Token = "0x6001513")]
		[Address(RVA = "0x808C98", Offset = "0x808C98", VA = "0x808C98")]
		public Unparent()
		{
		}
	}
	[Token(Token = "0x200034F")]
	public static class Util
	{
		[Token(Token = "0x20007C5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x645BD8", Offset = "0x645BD8")]
		private sealed class <WrapCoroutine>d__43 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002928")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002929")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400292A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public IEnumerator coroutine;

			[Token(Token = "0x400292B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Action onCoroutineFinished;

			[Token(Token = "0x170002FB")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600320A")]
				[Address(RVA = "0x80ADFC", Offset = "0x80ADFC", VA = "0x80ADFC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002FC")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600320C")]
				[Address(RVA = "0x80AE6C", Offset = "0x80AE6C", VA = "0x80AE6C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003207")]
			[Address(RVA = "0x80A3F8", Offset = "0x80A3F8", VA = "0x80A3F8")]
			[DebuggerHidden]
			public <WrapCoroutine>d__43(int <>1__state)
			{
			}

			[Token(Token = "0x6003208")]
			[Address(RVA = "0x80AC7C", Offset = "0x80AC7C", VA = "0x80AC7C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003209")]
			[Address(RVA = "0x80AC80", Offset = "0x80AC80", VA = "0x80AC80", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600320B")]
			[Address(RVA = "0x80AE04", Offset = "0x80AE04", VA = "0x80AE04", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20007C6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x645BE8", Offset = "0x645BE8")]
		private sealed class <>c__47<T>
		{
			[Token(Token = "0x400292C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c__47<T> <>9;

			[Token(Token = "0x400292D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static Func<T, T> <>9__47_0;

			[Token(Token = "0x600320E")]
			public <>c__47()
			{
			}

			[Token(Token = "0x600320F")]
			internal T <Median>b__47_0(T x)
			{
				return (T)null;
			}
		}

		[Token(Token = "0x4001663")]
		public const float FeetToMeters = 0.3048f;

		[Token(Token = "0x4001664")]
		public const float FeetToCentimeters = 30.48f;

		[Token(Token = "0x4001665")]
		public const float InchesToMeters = 0.0254f;

		[Token(Token = "0x4001666")]
		public const float InchesToCentimeters = 2.54f;

		[Token(Token = "0x4001667")]
		public const float MetersToFeet = 3.28084f;

		[Token(Token = "0x4001668")]
		public const float MetersToInches = 39.3701f;

		[Token(Token = "0x4001669")]
		public const float CentimetersToFeet = 0.0328084f;

		[Token(Token = "0x400166A")]
		public const float CentimetersToInches = 0.393701f;

		[Token(Token = "0x400166B")]
		public const float KilometersToMiles = 0.621371f;

		[Token(Token = "0x400166C")]
		public const float MilesToKilometers = 1.60934f;

		[Token(Token = "0x6001514")]
		[Address(RVA = "0x808CA0", Offset = "0x808CA0", VA = "0x808CA0")]
		public static float RemapNumber(float num, float low1, float high1, float low2, float high2)
		{
			return default(float);
		}

		[Token(Token = "0x6001515")]
		[Address(RVA = "0x8082E8", Offset = "0x8082E8", VA = "0x8082E8")]
		public static float RemapNumberClamped(float num, float low1, float high1, float low2, float high2)
		{
			return default(float);
		}

		[Token(Token = "0x6001516")]
		[Address(RVA = "0x808CBC", Offset = "0x808CBC", VA = "0x808CBC")]
		public static float Approach(float target, float value, float speed)
		{
			return default(float);
		}

		[Token(Token = "0x6001517")]
		[Address(RVA = "0x808CE4", Offset = "0x808CE4", VA = "0x808CE4")]
		public static Vector3 BezierInterpolate3(Vector3 p0, Vector3 c0, Vector3 p1, float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001518")]
		[Address(RVA = "0x808DFC", Offset = "0x808DFC", VA = "0x808DFC")]
		public static Vector3 BezierInterpolate4(Vector3 p0, Vector3 c0, Vector3 c1, Vector3 p1, float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001519")]
		[Address(RVA = "0x808FD4", Offset = "0x808FD4", VA = "0x808FD4")]
		public static Vector3 Vector3FromString(string szString)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600151A")]
		[Address(RVA = "0x809184", Offset = "0x809184", VA = "0x809184")]
		public static Vector2 Vector2FromString(string szString)
		{
			return default(Vector2);
		}

		[Token(Token = "0x600151B")]
		[Address(RVA = "0x809324", Offset = "0x809324", VA = "0x809324")]
		public static float Normalize(float value, float min, float max)
		{
			return default(float);
		}

		[Token(Token = "0x600151C")]
		[Address(RVA = "0x809334", Offset = "0x809334", VA = "0x809334")]
		public static Vector3 Vector2AsVector3(Vector2 v)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600151D")]
		[Address(RVA = "0x809370", Offset = "0x809370", VA = "0x809370")]
		public static Vector2 Vector3AsVector2(Vector3 v)
		{
			return default(Vector2);
		}

		[Token(Token = "0x600151E")]
		[Address(RVA = "0x8093A0", Offset = "0x8093A0", VA = "0x8093A0")]
		public static float AngleOf(Vector2 v)
		{
			return default(float);
		}

		[Token(Token = "0x600151F")]
		[Address(RVA = "0x809458", Offset = "0x809458", VA = "0x809458")]
		public static float YawOf(Vector3 v)
		{
			return default(float);
		}

		[Token(Token = "0x6001520")]
		public static void Swap<T>(ref T lhs, ref T rhs)
		{
		}

		[Token(Token = "0x6001521")]
		public static void Shuffle<T>(T[] array)
		{
		}

		[Token(Token = "0x6001522")]
		public static void Shuffle<T>(List<T> list)
		{
		}

		[Token(Token = "0x6001523")]
		[Address(RVA = "0x809520", Offset = "0x809520", VA = "0x809520")]
		public static int RandomWithLookback(int min, int max, List<int> history, int historyCount)
		{
			return default(int);
		}

		[Token(Token = "0x6001524")]
		[Address(RVA = "0x8096CC", Offset = "0x8096CC", VA = "0x8096CC")]
		public static Transform FindChild(Transform parent, string name)
		{
			return null;
		}

		[Token(Token = "0x6001525")]
		public static bool IsNullOrEmpty<T>(T[] array)
		{
			return default(bool);
		}

		[Token(Token = "0x6001526")]
		public static bool IsValidIndex<T>(T[] array, int i)
		{
			return default(bool);
		}

		[Token(Token = "0x6001527")]
		public static bool IsValidIndex<T>(List<T> list, int i)
		{
			return default(bool);
		}

		[Token(Token = "0x6001528")]
		public static int FindOrAdd<T>(List<T> list, T item)
		{
			return default(int);
		}

		[Token(Token = "0x6001529")]
		public static List<T> FindAndRemove<T>(List<T> list, Predicate<T> match)
		{
			return null;
		}

		[Token(Token = "0x600152A")]
		public static T FindOrAddComponent<T>(GameObject gameObject) where T : Component
		{
			return null;
		}

		[Token(Token = "0x600152B")]
		public static void FastRemove<T>(List<T> list, int index)
		{
		}

		[Token(Token = "0x600152C")]
		public static void ReplaceGameObject<T, U>(T replace, U replaceWith) where T : MonoBehaviour where U : MonoBehaviour
		{
		}

		[Token(Token = "0x600152D")]
		[Address(RVA = "0x809A40", Offset = "0x809A40", VA = "0x809A40")]
		public static void SwitchLayerRecursively(Transform transform, int fromLayer, int toLayer)
		{
		}

		[Token(Token = "0x600152E")]
		[Address(RVA = "0x805290", Offset = "0x805290", VA = "0x805290")]
		public static void DrawCross(Vector3 origin, Color crossColor, float size)
		{
		}

		[Token(Token = "0x600152F")]
		[Address(RVA = "0x809B38", Offset = "0x809B38", VA = "0x809B38")]
		public static void ResetTransform(Transform t, bool resetScale = true)
		{
		}

		[Token(Token = "0x6001530")]
		[Address(RVA = "0x809C98", Offset = "0x809C98", VA = "0x809C98")]
		public static Vector3 ClosestPointOnLine(Vector3 vA, Vector3 vB, Vector3 vPoint)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001531")]
		[Address(RVA = "0x809E84", Offset = "0x809E84", VA = "0x809E84")]
		public static void AfterTimer(GameObject go, float _time, Action callback, bool trigger_if_destroyed_early = false)
		{
		}

		[Token(Token = "0x6001532")]
		[Address(RVA = "0x809F20", Offset = "0x809F20", VA = "0x809F20")]
		public static void SendPhysicsMessage(Collider collider, string message, SendMessageOptions sendMessageOptions)
		{
		}

		[Token(Token = "0x6001533")]
		[Address(RVA = "0x80A06C", Offset = "0x80A06C", VA = "0x80A06C")]
		public static void SendPhysicsMessage(Collider collider, string message, object arg, SendMessageOptions sendMessageOptions)
		{
		}

		[Token(Token = "0x6001534")]
		[Address(RVA = "0x80A1CC", Offset = "0x80A1CC", VA = "0x80A1CC")]
		public static void IgnoreCollisions(GameObject goA, GameObject goB)
		{
		}

		[Token(Token = "0x6001535")]
		[Address(RVA = "0x80A360", Offset = "0x80A360", VA = "0x80A360")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x66ADC8", Offset = "0x66ADC8")]
		public static IEnumerator WrapCoroutine(IEnumerator coroutine, Action onCoroutineFinished)
		{
			return null;
		}

		[Token(Token = "0x6001536")]
		[Address(RVA = "0x80A424", Offset = "0x80A424", VA = "0x80A424")]
		public static Color ColorWithAlpha(this Color color, float alpha)
		{
			return default(Color);
		}

		[Token(Token = "0x6001537")]
		[Address(RVA = "0x80A42C", Offset = "0x80A42C", VA = "0x80A42C")]
		public static void Quit()
		{
		}

		[Token(Token = "0x6001538")]
		[Address(RVA = "0x80A4A4", Offset = "0x80A4A4", VA = "0x80A4A4")]
		public static decimal FloatToDecimal(float value, int decimalPlaces = 2)
		{
			return default(decimal);
		}

		[Token(Token = "0x6001539")]
		public static T Median<T>(this IEnumerable<T> source)
		{
			return (T)null;
		}

		[Token(Token = "0x600153A")]
		public static void ForEach<T>(this IEnumerable<T> source, Action<T> action)
		{
		}

		[Token(Token = "0x600153B")]
		[Address(RVA = "0x80A55C", Offset = "0x80A55C", VA = "0x80A55C")]
		public static string FixupNewlines(string text)
		{
			return null;
		}

		[Token(Token = "0x600153C")]
		[Address(RVA = "0x80A62C", Offset = "0x80A62C", VA = "0x80A62C")]
		public static float PathLength(NavMeshPath path)
		{
			return default(float);
		}

		[Token(Token = "0x600153D")]
		[Address(RVA = "0x80A800", Offset = "0x80A800", VA = "0x80A800")]
		public static bool HasCommandLineArgument(string argumentName)
		{
			return default(bool);
		}

		[Token(Token = "0x600153E")]
		[Address(RVA = "0x80A8A0", Offset = "0x80A8A0", VA = "0x80A8A0")]
		public static int GetCommandLineArgValue(string argumentName, int nDefaultValue)
		{
			return default(int);
		}

		[Token(Token = "0x600153F")]
		[Address(RVA = "0x80A998", Offset = "0x80A998", VA = "0x80A998")]
		public static float GetCommandLineArgValue(string argumentName, float flDefaultValue)
		{
			return default(float);
		}

		[Token(Token = "0x6001540")]
		[Address(RVA = "0x80AACC", Offset = "0x80AACC", VA = "0x80AACC")]
		public static void SetActive(GameObject gameObject, bool active)
		{
		}

		[Token(Token = "0x6001541")]
		[Address(RVA = "0x80AB74", Offset = "0x80AB74", VA = "0x80AB74")]
		public static string CombinePaths(params string[] paths)
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x2000350")]
	public class AfterTimer_Component : MonoBehaviour
	{
		[Token(Token = "0x20007C7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x645BF8", Offset = "0x645BF8")]
		private sealed class <Wait>d__5 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400292E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400292F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002930")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public AfterTimer_Component <>4__this;

			[Token(Token = "0x170002FD")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6003213")]
				[Address(RVA = "0x105F6E0", Offset = "0x105F6E0", VA = "0x105F6E0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002FE")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003215")]
				[Address(RVA = "0x105F750", Offset = "0x105F750", VA = "0x105F750", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003210")]
			[Address(RVA = "0x105F520", Offset = "0x105F520", VA = "0x105F520")]
			[DebuggerHidden]
			public <Wait>d__5(int <>1__state)
			{
			}

			[Token(Token = "0x6003211")]
			[Address(RVA = "0x105F5C0", Offset = "0x105F5C0", VA = "0x105F5C0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003212")]
			[Address(RVA = "0x105F5C4", Offset = "0x105F5C4", VA = "0x105F5C4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003214")]
			[Address(RVA = "0x105F6E8", Offset = "0x105F6E8", VA = "0x105F6E8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400166D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Action callback;

		[Token(Token = "0x400166E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float triggerTime;

		[Token(Token = "0x400166F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private bool timerActive;

		[Token(Token = "0x4001670")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
		private bool triggerOnEarlyDestroy;

		[Token(Token = "0x6001542")]
		[Address(RVA = "0x105F468", Offset = "0x105F468", VA = "0x105F468")]
		public void Init(float _time, Action _callback, bool earlydestroy)
		{
		}

		[Token(Token = "0x6001543")]
		[Address(RVA = "0x105F4AC", Offset = "0x105F4AC", VA = "0x105F4AC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x66AE5C", Offset = "0x66AE5C")]
		private IEnumerator Wait()
		{
			return null;
		}

		[Token(Token = "0x6001544")]
		[Address(RVA = "0x105F54C", Offset = "0x105F54C", VA = "0x105F54C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001545")]
		[Address(RVA = "0x105F5B8", Offset = "0x105F5B8", VA = "0x105F5B8")]
		public AfterTimer_Component()
		{
		}
	}
	[Token(Token = "0x2000351")]
	public class VelocityEstimator : MonoBehaviour
	{
		[Token(Token = "0x20007C8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x645C08", Offset = "0x645C08")]
		private sealed class <EstimateVelocityCoroutine>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002931")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002932")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002933")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VelocityEstimator <>4__this;

			[Token(Token = "0x4002934")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Vector3 <previousPosition>5__2;

			[Token(Token = "0x4002935")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private Quaternion <previousRotation>5__3;

			[Token(Token = "0x170002FF")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6003219")]
				[Address(RVA = "0x80B6D8", Offset = "0x80B6D8", VA = "0x80B6D8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000300")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600321B")]
				[Address(RVA = "0x80B748", Offset = "0x80B748", VA = "0x80B748", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003216")]
			[Address(RVA = "0x80B1AC", Offset = "0x80B1AC", VA = "0x80B1AC")]
			[DebuggerHidden]
			public <EstimateVelocityCoroutine>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x6003217")]
			[Address(RVA = "0x80B1EC", Offset = "0x80B1EC", VA = "0x80B1EC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003218")]
			[Address(RVA = "0x80B1F0", Offset = "0x80B1F0", VA = "0x80B1F0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600321A")]
			[Address(RVA = "0x80B6E0", Offset = "0x80B6E0", VA = "0x80B6E0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001671")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x651D44", Offset = "0x651D44")]
		public int velocityAverageFrames;

		[Token(Token = "0x4001672")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x651D7C", Offset = "0x651D7C")]
		public int angularVelocityAverageFrames;

		[Token(Token = "0x4001673")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool estimateOnAwake;

		[Token(Token = "0x4001674")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Coroutine routine;

		[Token(Token = "0x4001675")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int sampleCount;

		[Token(Token = "0x4001676")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3[] velocitySamples;

		[Token(Token = "0x4001677")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Vector3[] angularVelocitySamples;

		[Token(Token = "0x6001546")]
		[Address(RVA = "0x8074D0", Offset = "0x8074D0", VA = "0x8074D0")]
		public void BeginEstimatingVelocity()
		{
		}

		[Token(Token = "0x6001547")]
		[Address(RVA = "0x807B68", Offset = "0x807B68", VA = "0x807B68")]
		public void FinishEstimatingVelocity()
		{
		}

		[Token(Token = "0x6001548")]
		[Address(RVA = "0x807B9C", Offset = "0x807B9C", VA = "0x807B9C")]
		public Vector3 GetVelocityEstimate()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001549")]
		[Address(RVA = "0x807D7C", Offset = "0x807D7C", VA = "0x807D7C")]
		public Vector3 GetAngularVelocityEstimate()
		{
			return default(Vector3);
		}

		[Token(Token = "0x600154A")]
		[Address(RVA = "0x80AEE8", Offset = "0x80AEE8", VA = "0x80AEE8")]
		public Vector3 GetAccelerationEstimate()
		{
			return default(Vector3);
		}

		[Token(Token = "0x600154B")]
		[Address(RVA = "0x80B12C", Offset = "0x80B12C", VA = "0x80B12C")]
		private void Awake()
		{
		}

		[Token(Token = "0x600154C")]
		[Address(RVA = "0x80AE74", Offset = "0x80AE74", VA = "0x80AE74")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x66AEC0", Offset = "0x66AEC0")]
		private IEnumerator EstimateVelocityCoroutine()
		{
			return null;
		}

		[Token(Token = "0x600154D")]
		[Address(RVA = "0x80B1D8", Offset = "0x80B1D8", VA = "0x80B1D8")]
		public VelocityEstimator()
		{
		}
	}
	[Token(Token = "0x2000352")]
	public class ControllerButtonHints : MonoBehaviour
	{
		[Token(Token = "0x20007C9")]
		private enum OffsetType
		{
			[Token(Token = "0x4002937")]
			Up,
			[Token(Token = "0x4002938")]
			Right,
			[Token(Token = "0x4002939")]
			Forward,
			[Token(Token = "0x400293A")]
			Back
		}

		[Token(Token = "0x20007CA")]
		private class ButtonHintInfo
		{
			[Token(Token = "0x400293B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string componentName;

			[Token(Token = "0x400293C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public List<MeshRenderer> renderers;

			[Token(Token = "0x400293D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Transform localTransform;

			[Token(Token = "0x400293E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public GameObject textHintObject;

			[Token(Token = "0x400293F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Transform textStartAnchor;

			[Token(Token = "0x4002940")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Transform textEndAnchor;

			[Token(Token = "0x4002941")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public Vector3 textEndOffsetDir;

			[Token(Token = "0x4002942")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public Transform canvasOffset;

			[Token(Token = "0x4002943")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public Text text;

			[Token(Token = "0x4002944")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public TextMesh textMesh;

			[Token(Token = "0x4002945")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public Canvas textCanvas;

			[Token(Token = "0x4002946")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			public LineRenderer line;

			[Token(Token = "0x4002947")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			public float distanceFromCenter;

			[Token(Token = "0x4002948")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
			public bool textHintActive;

			[Token(Token = "0x600321C")]
			[Address(RVA = "0x9D99B4", Offset = "0x9D99B4", VA = "0x9D99B4")]
			public ButtonHintInfo()
			{
			}
		}

		[Token(Token = "0x20007CB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x645C18", Offset = "0x645C18")]
		private sealed class <TestButtonHints>d__36 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002949")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400294A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400294B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ControllerButtonHints <>4__this;

			[Token(Token = "0x17000301")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6003220")]
				[Address(RVA = "0x9DBB6C", Offset = "0x9DBB6C", VA = "0x9DBB6C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000302")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003222")]
				[Address(RVA = "0x9DBBDC", Offset = "0x9DBBDC", VA = "0x9DBBDC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600321D")]
			[Address(RVA = "0x9DA3C4", Offset = "0x9DA3C4", VA = "0x9DA3C4")]
			[DebuggerHidden]
			public <TestButtonHints>d__36(int <>1__state)
			{
			}

			[Token(Token = "0x600321E")]
			[Address(RVA = "0x9DB86C", Offset = "0x9DB86C", VA = "0x9DB86C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600321F")]
			[Address(RVA = "0x9DB870", Offset = "0x9DB870", VA = "0x9DB870", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003221")]
			[Address(RVA = "0x9DBB74", Offset = "0x9DBB74", VA = "0x9DBB74", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20007CC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x645C28", Offset = "0x645C28")]
		private sealed class <TestTextHints>d__37 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400294C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400294D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400294E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ControllerButtonHints <>4__this;

			[Token(Token = "0x17000303")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6003226")]
				[Address(RVA = "0x9DBE60", Offset = "0x9DBE60", VA = "0x9DBE60", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000304")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003228")]
				[Address(RVA = "0x9DBED0", Offset = "0x9DBED0", VA = "0x9DBED0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003223")]
			[Address(RVA = "0x9DA464", Offset = "0x9DA464", VA = "0x9DA464")]
			[DebuggerHidden]
			public <TestTextHints>d__37(int <>1__state)
			{
			}

			[Token(Token = "0x6003224")]
			[Address(RVA = "0x9DBBE4", Offset = "0x9DBBE4", VA = "0x9DBBE4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003225")]
			[Address(RVA = "0x9DBBE8", Offset = "0x9DBBE8", VA = "0x9DBBE8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003227")]
			[Address(RVA = "0x9DBE68", Offset = "0x9DBE68", VA = "0x9DBE68", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001678")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Material controllerMaterial;

		[Token(Token = "0x4001679")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Color flashColor;

		[Token(Token = "0x400167A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject textHintPrefab;

		[Token(Token = "0x400167B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x651DB4", Offset = "0x651DB4")]
		public bool debugHints;

		[Token(Token = "0x400167C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private SteamVR_RenderModel renderModel;

		[Token(Token = "0x400167D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Player player;

		[Token(Token = "0x400167E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private List<MeshRenderer> renderers;

		[Token(Token = "0x400167F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private List<MeshRenderer> flashingRenderers;

		[Token(Token = "0x4001680")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float startTime;

		[Token(Token = "0x4001681")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float tickCount;

		[Token(Token = "0x4001682")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Dictionary<EVRButtonId, ButtonHintInfo> buttonHintInfos;

		[Token(Token = "0x4001683")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Transform textHintParent;

		[Token(Token = "0x4001684")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private List<KeyValuePair<string, ulong>> componentButtonMasks;

		[Token(Token = "0x4001685")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int colorID;

		[Token(Token = "0x4001686")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x651DEC", Offset = "0x651DEC")]
		private bool <initialized>k__BackingField;

		[Token(Token = "0x4001687")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Vector3 centerPosition;

		[Token(Token = "0x4001688")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private SteamVR_Events.Action renderModelLoadedAction;

		[Token(Token = "0x170001AC")]
		public bool initialized
		{
			[Token(Token = "0x600154E")]
			[Address(RVA = "0x9D6A84", Offset = "0x9D6A84", VA = "0x9D6A84")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66AF24", Offset = "0x66AF24")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600154F")]
			[Address(RVA = "0x9D6A8C", Offset = "0x9D6A8C", VA = "0x9D6A8C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66AF34", Offset = "0x66AF34")]
			private set
			{
			}
		}

		[Token(Token = "0x6001550")]
		[Address(RVA = "0x9D6A98", Offset = "0x9D6A98", VA = "0x9D6A98")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001551")]
		[Address(RVA = "0x9D6B54", Offset = "0x9D6B54", VA = "0x9D6B54")]
		private void Start()
		{
		}

		[Token(Token = "0x6001552")]
		[Address(RVA = "0x9D6C44", Offset = "0x9D6C44", VA = "0x9D6C44")]
		private void HintDebugLog(string msg)
		{
		}

		[Token(Token = "0x6001553")]
		[Address(RVA = "0x9D6CF0", Offset = "0x9D6CF0", VA = "0x9D6CF0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001554")]
		[Address(RVA = "0x9D6D24", Offset = "0x9D6D24", VA = "0x9D6D24")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001555")]
		[Address(RVA = "0x9D6DE8", Offset = "0x9D6DE8", VA = "0x9D6DE8")]
		private void OnParentHandInputFocusLost()
		{
		}

		[Token(Token = "0x6001556")]
		[Address(RVA = "0x9D7000", Offset = "0x9D7000", VA = "0x9D7000")]
		private void OnHandInitialized(int deviceIndex)
		{
		}

		[Token(Token = "0x6001557")]
		[Address(RVA = "0x9D72BC", Offset = "0x9D72BC", VA = "0x9D72BC")]
		private void OnRenderModelLoaded(SteamVR_RenderModel renderModel, bool succeess)
		{
		}

		[Token(Token = "0x6001558")]
		[Address(RVA = "0x9D7CE0", Offset = "0x9D7CE0", VA = "0x9D7CE0")]
		private void CreateAndAddButtonInfo(EVRButtonId buttonID)
		{
		}

		[Token(Token = "0x6001559")]
		[Address(RVA = "0x9D9204", Offset = "0x9D9204", VA = "0x9D9204")]
		private void ComputeTextEndTransforms()
		{
		}

		[Token(Token = "0x600155A")]
		[Address(RVA = "0x9D99BC", Offset = "0x9D99BC", VA = "0x9D99BC")]
		private void ShowButtonHint(params EVRButtonId[] buttons)
		{
		}

		[Token(Token = "0x600155B")]
		[Address(RVA = "0x9D6E0C", Offset = "0x9D6E0C", VA = "0x9D6E0C")]
		private void HideAllButtonHints()
		{
		}

		[Token(Token = "0x600155C")]
		[Address(RVA = "0x9D9E60", Offset = "0x9D9E60", VA = "0x9D9E60")]
		private void HideButtonHint(params EVRButtonId[] buttons)
		{
		}

		[Token(Token = "0x600155D")]
		[Address(RVA = "0x9DA198", Offset = "0x9DA198", VA = "0x9DA198")]
		private bool IsButtonHintActive(EVRButtonId button)
		{
			return default(bool);
		}

		[Token(Token = "0x600155E")]
		[Address(RVA = "0x9DA350", Offset = "0x9DA350", VA = "0x9DA350")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x66AF44", Offset = "0x66AF44")]
		private IEnumerator TestButtonHints()
		{
			return null;
		}

		[Token(Token = "0x600155F")]
		[Address(RVA = "0x9DA3F0", Offset = "0x9DA3F0", VA = "0x9DA3F0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x66AFA8", Offset = "0x66AFA8")]
		private IEnumerator TestTextHints()
		{
			return null;
		}

		[Token(Token = "0x6001560")]
		[Address(RVA = "0x9DA490", Offset = "0x9DA490", VA = "0x9DA490")]
		private void Update()
		{
		}

		[Token(Token = "0x6001561")]
		[Address(RVA = "0x9DA890", Offset = "0x9DA890", VA = "0x9DA890")]
		private void UpdateTextHint(ButtonHintInfo hintInfo)
		{
		}

		[Token(Token = "0x6001562")]
		[Address(RVA = "0x9D6D64", Offset = "0x9D6D64", VA = "0x9D6D64")]
		private void Clear()
		{
		}

		[Token(Token = "0x6001563")]
		[Address(RVA = "0x9DADBC", Offset = "0x9DADBC", VA = "0x9DADBC")]
		private void ShowText(EVRButtonId button, string text, bool highlightButton = true)
		{
		}

		[Token(Token = "0x6001564")]
		[Address(RVA = "0x9DAFFC", Offset = "0x9DAFFC", VA = "0x9DAFFC")]
		private void HideText(EVRButtonId button)
		{
		}

		[Token(Token = "0x6001565")]
		[Address(RVA = "0x9D6E60", Offset = "0x9D6E60", VA = "0x9D6E60")]
		private void HideAllText()
		{
		}

		[Token(Token = "0x6001566")]
		[Address(RVA = "0x9DB120", Offset = "0x9DB120", VA = "0x9DB120")]
		private string GetActiveHintText(EVRButtonId button)
		{
			return null;
		}

		[Token(Token = "0x6001567")]
		[Address(RVA = "0x9DB218", Offset = "0x9DB218", VA = "0x9DB218")]
		private static ControllerButtonHints GetControllerButtonHints(Hand hand)
		{
			return null;
		}

		[Token(Token = "0x6001568")]
		[Address(RVA = "0x9D36B4", Offset = "0x9D36B4", VA = "0x9D36B4")]
		public static void ShowButtonHint(Hand hand, params EVRButtonId[] buttons)
		{
		}

		[Token(Token = "0x6001569")]
		[Address(RVA = "0x9D33E8", Offset = "0x9D33E8", VA = "0x9D33E8")]
		public static void HideButtonHint(Hand hand, params EVRButtonId[] buttons)
		{
		}

		[Token(Token = "0x600156A")]
		[Address(RVA = "0x9DB2FC", Offset = "0x9DB2FC", VA = "0x9DB2FC")]
		public static void HideAllButtonHints(Hand hand)
		{
		}

		[Token(Token = "0x600156B")]
		[Address(RVA = "0x9DB39C", Offset = "0x9DB39C", VA = "0x9DB39C")]
		public static bool IsButtonHintActive(Hand hand, EVRButtonId button)
		{
			return default(bool);
		}

		[Token(Token = "0x600156C")]
		[Address(RVA = "0x9DB454", Offset = "0x9DB454", VA = "0x9DB454")]
		public static void ShowTextHint(Hand hand, EVRButtonId button, string text, bool highlightButton = true)
		{
		}

		[Token(Token = "0x600156D")]
		[Address(RVA = "0x9DB524", Offset = "0x9DB524", VA = "0x9DB524")]
		public static void HideTextHint(Hand hand, EVRButtonId button)
		{
		}

		[Token(Token = "0x600156E")]
		[Address(RVA = "0x9DB5D8", Offset = "0x9DB5D8", VA = "0x9DB5D8")]
		public static void HideAllTextHints(Hand hand)
		{
		}

		[Token(Token = "0x600156F")]
		[Address(RVA = "0x9DB678", Offset = "0x9DB678", VA = "0x9DB678")]
		public static string GetActiveHintText(Hand hand, EVRButtonId button)
		{
			return null;
		}

		[Token(Token = "0x6001570")]
		[Address(RVA = "0x9DB740", Offset = "0x9DB740", VA = "0x9DB740")]
		public ControllerButtonHints()
		{
		}
	}
	[Token(Token = "0x2000353")]
	public class ArcheryTarget : MonoBehaviour
	{
		[Token(Token = "0x20007CD")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x645C38", Offset = "0x645C38")]
		private sealed class <FallDown>d__11 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400294F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002950")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002951")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ArcheryTarget <>4__this;

			[Token(Token = "0x4002952")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Quaternion <startingRot>5__2;

			[Token(Token = "0x4002953")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <startTime>5__3;

			[Token(Token = "0x4002954")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <rotLerp>5__4;

			[Token(Token = "0x17000305")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600322C")]
				[Address(RVA = "0x105FB2C", Offset = "0x105FB2C", VA = "0x105FB2C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000306")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600322E")]
				[Address(RVA = "0x105FB9C", Offset = "0x105FB9C", VA = "0x105FB9C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003229")]
			[Address(RVA = "0x105F848", Offset = "0x105F848", VA = "0x105F848")]
			[DebuggerHidden]
			public <FallDown>d__11(int <>1__state)
			{
			}

			[Token(Token = "0x600322A")]
			[Address(RVA = "0x105F88C", Offset = "0x105F88C", VA = "0x105F88C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600322B")]
			[Address(RVA = "0x105F890", Offset = "0x105F890", VA = "0x105F890", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600322D")]
			[Address(RVA = "0x105FB34", Offset = "0x105FB34", VA = "0x105FB34", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001689")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UnityEvent onTakeDamage;

		[Token(Token = "0x400168A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool onceOnly;

		[Token(Token = "0x400168B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform targetCenter;

		[Token(Token = "0x400168C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform baseTransform;

		[Token(Token = "0x400168D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Transform fallenDownTransform;

		[Token(Token = "0x400168E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float fallTime;

		[Token(Token = "0x400168F")]
		private const float targetRadius = 0.25f;

		[Token(Token = "0x4001690")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private bool targetEnabled;

		[Token(Token = "0x6001571")]
		[Address(RVA = "0x105F768", Offset = "0x105F768", VA = "0x105F768")]
		private void ApplyDamage()
		{
		}

		[Token(Token = "0x6001572")]
		[Address(RVA = "0x105F7D0", Offset = "0x105F7D0", VA = "0x105F7D0")]
		private void FireExposure()
		{
		}

		[Token(Token = "0x6001573")]
		[Address(RVA = "0x105F76C", Offset = "0x105F76C", VA = "0x105F76C")]
		private void OnDamageTaken()
		{
		}

		[Token(Token = "0x6001574")]
		[Address(RVA = "0x105F7D4", Offset = "0x105F7D4", VA = "0x105F7D4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x66B00C", Offset = "0x66B00C")]
		private IEnumerator FallDown()
		{
			return null;
		}

		[Token(Token = "0x6001575")]
		[Address(RVA = "0x105F874", Offset = "0x105F874", VA = "0x105F874")]
		public ArcheryTarget()
		{
		}
	}
	[Token(Token = "0x2000354")]
	public class Arrow : MonoBehaviour
	{
		[Token(Token = "0x4001691")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ParticleSystem glintParticle;

		[Token(Token = "0x4001692")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Rigidbody arrowHeadRB;

		[Token(Token = "0x4001693")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Rigidbody shaftRB;

		[Token(Token = "0x4001694")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public PhysicMaterial targetPhysMaterial;

		[Token(Token = "0x4001695")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3 prevPosition;

		[Token(Token = "0x4001696")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Quaternion prevRotation;

		[Token(Token = "0x4001697")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Vector3 prevVelocity;

		[Token(Token = "0x4001698")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Vector3 prevHeadPosition;

		[Token(Token = "0x4001699")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public SoundPlayOneshot fireReleaseSound;

		[Token(Token = "0x400169A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public SoundPlayOneshot airReleaseSound;

		[Token(Token = "0x400169B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public SoundPlayOneshot hitTargetSound;

		[Token(Token = "0x400169C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public PlaySound hitGroundSound;

		[Token(Token = "0x400169D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private bool inFlight;

		[Token(Token = "0x400169E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x91")]
		private bool released;

		[Token(Token = "0x400169F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x92")]
		private bool hasSpreadFire;

		[Token(Token = "0x40016A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private int travelledFrames;

		[Token(Token = "0x40016A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private GameObject scaleParentObject;

		[Token(Token = "0x6001576")]
		[Address(RVA = "0x105FBA4", Offset = "0x105FBA4", VA = "0x105FBA4")]
		private void Start()
		{
		}

		[Token(Token = "0x6001577")]
		[Address(RVA = "0x105FC2C", Offset = "0x105FC2C", VA = "0x105FC2C")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6001578")]
		[Address(RVA = "0x105FD50", Offset = "0x105FD50", VA = "0x105FD50")]
		public void ArrowReleased(float inputVelocity)
		{
		}

		[Token(Token = "0x6001579")]
		[Address(RVA = "0x106020C", Offset = "0x106020C", VA = "0x106020C")]
		private void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x600157A")]
		[Address(RVA = "0x1060AE4", Offset = "0x1060AE4", VA = "0x1060AE4")]
		private void StickInTarget(Collision collision, bool bSkipRayCast)
		{
		}

		[Token(Token = "0x600157B")]
		[Address(RVA = "0x106137C", Offset = "0x106137C", VA = "0x106137C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600157C")]
		[Address(RVA = "0x1061430", Offset = "0x1061430", VA = "0x1061430")]
		public Arrow()
		{
		}
	}
	[Token(Token = "0x2000355")]
	public class ArrowHand : MonoBehaviour
	{
		[Token(Token = "0x20007CE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x645C48", Offset = "0x645C48")]
		private sealed class <ArrowReleaseHaptics>d__24 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002955")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002956")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002957")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ArrowHand <>4__this;

			[Token(Token = "0x17000307")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6003232")]
				[Address(RVA = "0x1062988", Offset = "0x1062988", VA = "0x1062988", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000308")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003234")]
				[Address(RVA = "0x10629F8", Offset = "0x10629F8", VA = "0x10629F8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600322F")]
			[Address(RVA = "0x1062628", Offset = "0x1062628", VA = "0x1062628")]
			[DebuggerHidden]
			public <ArrowReleaseHaptics>d__24(int <>1__state)
			{
			}

			[Token(Token = "0x6003230")]
			[Address(RVA = "0x10626E8", Offset = "0x10626E8", VA = "0x10626E8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003231")]
			[Address(RVA = "0x10626EC", Offset = "0x10626EC", VA = "0x10626EC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003233")]
			[Address(RVA = "0x1062990", Offset = "0x1062990", VA = "0x1062990", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40016A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Hand hand;

		[Token(Token = "0x40016A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Longbow bow;

		[Token(Token = "0x40016A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GameObject currentArrow;

		[Token(Token = "0x40016A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject arrowPrefab;

		[Token(Token = "0x40016A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Transform arrowNockTransform;

		[Token(Token = "0x40016A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float nockDistance;

		[Token(Token = "0x40016A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float lerpCompleteDistance;

		[Token(Token = "0x40016A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float rotationLerpThreshold;

		[Token(Token = "0x40016AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float positionLerpThreshold;

		[Token(Token = "0x40016AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool allowArrowSpawn;

		[Token(Token = "0x40016AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		private bool nocked;

		[Token(Token = "0x40016AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x52")]
		private bool inNockRange;

		[Token(Token = "0x40016AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x53")]
		private bool arrowLerpComplete;

		[Token(Token = "0x40016AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public SoundPlayOneshot arrowSpawnSound;

		[Token(Token = "0x40016B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private AllowTeleportWhileAttachedToHand allowTeleport;

		[Token(Token = "0x40016B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public int maxArrowCount;

		[Token(Token = "0x40016B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private List<GameObject> arrowList;

		[Token(Token = "0x600157D")]
		[Address(RVA = "0x1061438", Offset = "0x1061438", VA = "0x1061438")]
		private void Awake()
		{
		}

		[Token(Token = "0x600157E")]
		[Address(RVA = "0x10614E0", Offset = "0x10614E0", VA = "0x10614E0")]
		private void OnAttachedToHand(Hand attachedHand)
		{
		}

		[Token(Token = "0x600157F")]
		[Address(RVA = "0x1061560", Offset = "0x1061560", VA = "0x1061560")]
		private GameObject InstantiateArrow()
		{
			return null;
		}

		[Token(Token = "0x6001580")]
		[Address(RVA = "0x1061814", Offset = "0x1061814", VA = "0x1061814")]
		private void HandAttachedUpdate(Hand hand)
		{
		}

		[Token(Token = "0x6001581")]
		[Address(RVA = "0x106252C", Offset = "0x106252C", VA = "0x106252C")]
		private void OnDetachedFromHand(Hand hand)
		{
		}

		[Token(Token = "0x6001582")]
		[Address(RVA = "0x1062134", Offset = "0x1062134", VA = "0x1062134")]
		private void FireArrow()
		{
		}

		[Token(Token = "0x6001583")]
		[Address(RVA = "0x106261C", Offset = "0x106261C", VA = "0x106261C")]
		private void EnableArrowSpawn()
		{
		}

		[Token(Token = "0x6001584")]
		[Address(RVA = "0x10625A8", Offset = "0x10625A8", VA = "0x10625A8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x66B070", Offset = "0x66B070")]
		private IEnumerator ArrowReleaseHaptics()
		{
			return null;
		}

		[Token(Token = "0x6001585")]
		[Address(RVA = "0x1062654", Offset = "0x1062654", VA = "0x1062654")]
		private void OnHandFocusLost(Hand hand)
		{
		}

		[Token(Token = "0x6001586")]
		[Address(RVA = "0x106268C", Offset = "0x106268C", VA = "0x106268C")]
		private void OnHandFocusAcquired(Hand hand)
		{
		}

		[Token(Token = "0x6001587")]
		[Address(RVA = "0x10614E8", Offset = "0x10614E8", VA = "0x10614E8")]
		private void FindBow()
		{
		}

		[Token(Token = "0x6001588")]
		[Address(RVA = "0x10626C4", Offset = "0x10626C4", VA = "0x10626C4")]
		public ArrowHand()
		{
		}
	}
	[Token(Token = "0x2000356")]
	public class ArrowheadRotation : MonoBehaviour
	{
		[Token(Token = "0x6001589")]
		[Address(RVA = "0x1062A00", Offset = "0x1062A00", VA = "0x1062A00")]
		private void Start()
		{
		}

		[Token(Token = "0x600158A")]
		[Address(RVA = "0x1062A9C", Offset = "0x1062A9C", VA = "0x1062A9C")]
		public ArrowheadRotation()
		{
		}
	}
	[Token(Token = "0x2000357")]
	public class Balloon : MonoBehaviour
	{
		[Token(Token = "0x20007CF")]
		public enum BalloonColor
		{
			[Token(Token = "0x4002959")]
			Red,
			[Token(Token = "0x400295A")]
			OrangeRed,
			[Token(Token = "0x400295B")]
			Orange,
			[Token(Token = "0x400295C")]
			YellowOrange,
			[Token(Token = "0x400295D")]
			Yellow,
			[Token(Token = "0x400295E")]
			GreenYellow,
			[Token(Token = "0x400295F")]
			Green,
			[Token(Token = "0x4002960")]
			BlueGreen,
			[Token(Token = "0x4002961")]
			Blue,
			[Token(Token = "0x4002962")]
			VioletBlue,
			[Token(Token = "0x4002963")]
			Violet,
			[Token(Token = "0x4002964")]
			RedViolet,
			[Token(Token = "0x4002965")]
			LightGray,
			[Token(Token = "0x4002966")]
			DarkGray,
			[Token(Token = "0x4002967")]
			Random
		}

		[Token(Token = "0x40016B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Hand hand;

		[Token(Token = "0x40016B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject popPrefab;

		[Token(Token = "0x40016B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float maxVelocity;

		[Token(Token = "0x40016B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float lifetime;

		[Token(Token = "0x40016B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool burstOnLifetimeEnd;

		[Token(Token = "0x40016B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject lifetimeEndParticlePrefab;

		[Token(Token = "0x40016B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public SoundPlayOneshot lifetimeEndSound;

		[Token(Token = "0x40016BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float destructTime;

		[Token(Token = "0x40016BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float releaseTime;

		[Token(Token = "0x40016BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public SoundPlayOneshot collisionSound;

		[Token(Token = "0x40016BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float lastSoundTime;

		[Token(Token = "0x40016BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private float soundDelay;

		[Token(Token = "0x40016BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Rigidbody balloonRigidbody;

		[Token(Token = "0x40016C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool bParticlesSpawned;

		[Token(Token = "0x40016C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static float s_flLastDeathSound;

		[Token(Token = "0x600158B")]
		[Address(RVA = "0x1062AA4", Offset = "0x1062AA4", VA = "0x1062AA4")]
		private void Start()
		{
		}

		[Token(Token = "0x600158C")]
		[Address(RVA = "0x1062B40", Offset = "0x1062B40", VA = "0x1062B40")]
		private void Update()
		{
		}

		[Token(Token = "0x600158D")]
		[Address(RVA = "0x1062BFC", Offset = "0x1062BFC", VA = "0x1062BFC")]
		private void SpawnParticles(GameObject particlePrefab, SoundPlayOneshot sound)
		{
		}

		[Token(Token = "0x600158E")]
		[Address(RVA = "0x1062ED4", Offset = "0x1062ED4", VA = "0x1062ED4")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x600158F")]
		[Address(RVA = "0x1063004", Offset = "0x1063004", VA = "0x1063004")]
		private void ApplyDamage()
		{
		}

		[Token(Token = "0x6001590")]
		[Address(RVA = "0x1063090", Offset = "0x1063090", VA = "0x1063090")]
		private void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x6001591")]
		[Address(RVA = "0x1063460", Offset = "0x1063460", VA = "0x1063460")]
		public void SetColor(BalloonColor color)
		{
		}

		[Token(Token = "0x6001592")]
		[Address(RVA = "0x106352C", Offset = "0x106352C", VA = "0x106352C")]
		private Color BalloonColorToRGB(BalloonColor balloonColorVar)
		{
			return default(Color);
		}

		[Token(Token = "0x6001593")]
		[Address(RVA = "0x1063764", Offset = "0x1063764", VA = "0x1063764")]
		public Balloon()
		{
		}
	}
	[Token(Token = "0x2000358")]
	public class BalloonColliders : MonoBehaviour
	{
		[Token(Token = "0x40016C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject[] colliders;

		[Token(Token = "0x40016C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Vector3[] colliderLocalPositions;

		[Token(Token = "0x40016C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Quaternion[] colliderLocalRotations;

		[Token(Token = "0x40016C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Rigidbody rb;

		[Token(Token = "0x6001595")]
		[Address(RVA = "0x1063794", Offset = "0x1063794", VA = "0x1063794")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001596")]
		[Address(RVA = "0x1063AC8", Offset = "0x1063AC8", VA = "0x1063AC8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001597")]
		[Address(RVA = "0x1063F18", Offset = "0x1063F18", VA = "0x1063F18")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001598")]
		[Address(RVA = "0x10640CC", Offset = "0x10640CC", VA = "0x10640CC")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001599")]
		[Address(RVA = "0x10641A8", Offset = "0x10641A8", VA = "0x10641A8")]
		public BalloonColliders()
		{
		}
	}
	[Token(Token = "0x2000359")]
	public class BalloonHapticBump : MonoBehaviour
	{
		[Token(Token = "0x40016C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject physParent;

		[Token(Token = "0x600159A")]
		[Address(RVA = "0x10641B0", Offset = "0x10641B0", VA = "0x10641B0")]
		private void OnCollisionEnter(Collision other)
		{
		}

		[Token(Token = "0x600159B")]
		[Address(RVA = "0x1064304", Offset = "0x1064304", VA = "0x1064304")]
		public BalloonHapticBump()
		{
		}
	}
	[Token(Token = "0x200035A")]
	public class BalloonSpawner : MonoBehaviour
	{
		[Token(Token = "0x40016C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float minSpawnTime;

		[Token(Token = "0x40016C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float maxSpawnTime;

		[Token(Token = "0x40016C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float nextSpawnTime;

		[Token(Token = "0x40016CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject balloonPrefab;

		[Token(Token = "0x40016CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool autoSpawn;

		[Token(Token = "0x40016CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		public bool spawnAtStartup;

		[Token(Token = "0x40016CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
		public bool playSounds;

		[Token(Token = "0x40016CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public SoundPlayOneshot inflateSound;

		[Token(Token = "0x40016CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public SoundPlayOneshot stretchSound;

		[Token(Token = "0x40016D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool sendSpawnMessageToParent;

		[Token(Token = "0x40016D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float scale;

		[Token(Token = "0x40016D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Transform spawnDirectionTransform;

		[Token(Token = "0x40016D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float spawnForce;

		[Token(Token = "0x40016D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public bool attachBalloon;

		[Token(Token = "0x40016D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Balloon.BalloonColor color;

		[Token(Token = "0x600159C")]
		[Address(RVA = "0x106430C", Offset = "0x106430C", VA = "0x106430C")]
		private void Start()
		{
		}

		[Token(Token = "0x600159D")]
		[Address(RVA = "0x1064850", Offset = "0x1064850", VA = "0x1064850")]
		private void Update()
		{
		}

		[Token(Token = "0x600159E")]
		[Address(RVA = "0x10643C8", Offset = "0x10643C8", VA = "0x10643C8")]
		public GameObject SpawnBalloon(Balloon.BalloonColor color = Balloon.BalloonColor.Red)
		{
			return null;
		}

		[Token(Token = "0x600159F")]
		[Address(RVA = "0x1064918", Offset = "0x1064918", VA = "0x1064918")]
		public void SpawnBalloonFromEvent(int color)
		{
		}

		[Token(Token = "0x60015A0")]
		[Address(RVA = "0x106491C", Offset = "0x106491C", VA = "0x106491C")]
		public BalloonSpawner()
		{
		}
	}
	[Token(Token = "0x200035B")]
	public class ExplosionWobble : MonoBehaviour
	{
		[Token(Token = "0x60015A1")]
		[Address(RVA = "0x9DE024", Offset = "0x9DE024", VA = "0x9DE024")]
		public void ExplosionEvent(Vector3 explosionPos)
		{
		}

		[Token(Token = "0x60015A2")]
		[Address(RVA = "0x9DE10C", Offset = "0x9DE10C", VA = "0x9DE10C")]
		public ExplosionWobble()
		{
		}
	}
	[Token(Token = "0x200035C")]
	public class FireSource : MonoBehaviour
	{
		[Token(Token = "0x40016D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject fireParticlePrefab;

		[Token(Token = "0x40016D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool startActive;

		[Token(Token = "0x40016D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GameObject fireObject;

		[Token(Token = "0x40016D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public ParticleSystem customParticles;

		[Token(Token = "0x40016DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool isBurning;

		[Token(Token = "0x40016DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float burnTime;

		[Token(Token = "0x40016DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float ignitionDelay;

		[Token(Token = "0x40016DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float ignitionTime;

		[Token(Token = "0x40016DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Hand hand;

		[Token(Token = "0x40016DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public AudioSource ignitionSound;

		[Token(Token = "0x40016E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public bool canSpreadFromThisSource;

		[Token(Token = "0x60015A3")]
		[Address(RVA = "0x9DE5D4", Offset = "0x9DE5D4", VA = "0x9DE5D4")]
		private void Start()
		{
		}

		[Token(Token = "0x60015A4")]
		[Address(RVA = "0x9DE864", Offset = "0x9DE864", VA = "0x9DE864")]
		private void Update()
		{
		}

		[Token(Token = "0x60015A5")]
		[Address(RVA = "0x9DE974", Offset = "0x9DE974", VA = "0x9DE974")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x60015A6")]
		[Address(RVA = "0x9DEA04", Offset = "0x9DEA04", VA = "0x9DEA04")]
		private void FireExposure()
		{
		}

		[Token(Token = "0x60015A7")]
		[Address(RVA = "0x9DE5E4", Offset = "0x9DE5E4", VA = "0x9DE5E4")]
		private void StartBurning()
		{
		}

		[Token(Token = "0x60015A8")]
		[Address(RVA = "0x9DEB24", Offset = "0x9DEB24", VA = "0x9DEB24")]
		public FireSource()
		{
		}
	}
	[Token(Token = "0x200035D")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x63F310", Offset = "0x63F310")]
	public class Longbow : MonoBehaviour
	{
		[Token(Token = "0x20007D0")]
		public enum Handedness
		{
			[Token(Token = "0x4002969")]
			Left,
			[Token(Token = "0x400296A")]
			Right
		}

		[Token(Token = "0x20007D1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x645C58", Offset = "0x645C58")]
		private sealed class <ResetDrawAnim>d__55 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400296B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400296C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400296D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Longbow <>4__this;

			[Token(Token = "0x400296E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <startTime>5__2;

			[Token(Token = "0x400296F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <startLerp>5__3;

			[Token(Token = "0x17000309")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6003238")]
				[Address(RVA = "0x9E8310", Offset = "0x9E8310", VA = "0x9E8310", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700030A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600323A")]
				[Address(RVA = "0x9E8380", Offset = "0x9E8380", VA = "0x9E8380", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003235")]
			[Address(RVA = "0x9E7B34", Offset = "0x9E7B34", VA = "0x9E7B34")]
			[DebuggerHidden]
			public <ResetDrawAnim>d__55(int <>1__state)
			{
			}

			[Token(Token = "0x6003236")]
			[Address(RVA = "0x9E81F4", Offset = "0x9E81F4", VA = "0x9E81F4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003237")]
			[Address(RVA = "0x9E81F8", Offset = "0x9E81F8", VA = "0x9E81F8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003239")]
			[Address(RVA = "0x9E8318", Offset = "0x9E8318", VA = "0x9E8318", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40016E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Handedness currentHandGuess;

		[Token(Token = "0x40016E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float timeOfPossibleHandSwitch;

		[Token(Token = "0x40016E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float timeBeforeConfirmingHandSwitch;

		[Token(Token = "0x40016E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private bool possibleHandSwitch;

		[Token(Token = "0x40016E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform pivotTransform;

		[Token(Token = "0x40016E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform handleTransform;

		[Token(Token = "0x40016E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Hand hand;

		[Token(Token = "0x40016E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private ArrowHand arrowHand;

		[Token(Token = "0x40016E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Transform nockTransform;

		[Token(Token = "0x40016EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Transform nockRestTransform;

		[Token(Token = "0x40016EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public bool autoSpawnArrowHand;

		[Token(Token = "0x40016EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public ItemPackage arrowHandItemPackage;

		[Token(Token = "0x40016ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public GameObject arrowHandPrefab;

		[Token(Token = "0x40016EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public bool nocked;

		[Token(Token = "0x40016EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		public bool pulled;

		[Token(Token = "0x40016F0")]
		private const float minPull = 0.05f;

		[Token(Token = "0x40016F1")]
		private const float maxPull = 0.5f;

		[Token(Token = "0x40016F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private float nockDistanceTravelled;

		[Token(Token = "0x40016F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float hapticDistanceThreshold;

		[Token(Token = "0x40016F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private float lastTickDistance;

		[Token(Token = "0x40016F5")]
		private const float bowPullPulseStrengthLow = 100f;

		[Token(Token = "0x40016F6")]
		private const float bowPullPulseStrengthHigh = 500f;

		[Token(Token = "0x40016F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Vector3 bowLeftVector;

		[Token(Token = "0x40016F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public float arrowMinVelocity;

		[Token(Token = "0x40016F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public float arrowMaxVelocity;

		[Token(Token = "0x40016FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private float arrowVelocity;

		[Token(Token = "0x40016FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private float minStrainTickTime;

		[Token(Token = "0x40016FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private float maxStrainTickTime;

		[Token(Token = "0x40016FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private float nextStrainTick;

		[Token(Token = "0x40016FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private bool lerpBackToZeroRotation;

		[Token(Token = "0x40016FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private float lerpStartTime;

		[Token(Token = "0x4001700")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private float lerpDuration;

		[Token(Token = "0x4001701")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Quaternion lerpStartRotation;

		[Token(Token = "0x4001702")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private float nockLerpStartTime;

		[Token(Token = "0x4001703")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private Quaternion nockLerpStartRotation;

		[Token(Token = "0x4001704")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		public float drawOffset;

		[Token(Token = "0x4001705")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public LinearMapping bowDrawLinearMapping;

		[Token(Token = "0x4001706")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private bool deferNewPoses;

		[Token(Token = "0x4001707")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		private Vector3 lateUpdatePos;

		[Token(Token = "0x4001708")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private Quaternion lateUpdateRot;

		[Token(Token = "0x4001709")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public SoundBowClick drawSound;

		[Token(Token = "0x400170A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private float drawTension;

		[Token(Token = "0x400170B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public SoundPlayOneshot arrowSlideSound;

		[Token(Token = "0x400170C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		public SoundPlayOneshot releaseSound;

		[Token(Token = "0x400170D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		public SoundPlayOneshot nockSound;

		[Token(Token = "0x400170E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private SteamVR_Events.Action newPosesAppliedAction;

		[Token(Token = "0x60015A9")]
		[Address(RVA = "0x9E6A0C", Offset = "0x9E6A0C", VA = "0x9E6A0C")]
		private void OnAttachedToHand(Hand attachedHand)
		{
		}

		[Token(Token = "0x60015AA")]
		[Address(RVA = "0x9E6A14", Offset = "0x9E6A14", VA = "0x9E6A14")]
		private void Awake()
		{
		}

		[Token(Token = "0x60015AB")]
		[Address(RVA = "0x9E6AB0", Offset = "0x9E6AB0", VA = "0x9E6AB0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60015AC")]
		[Address(RVA = "0x9E6AE4", Offset = "0x9E6AE4", VA = "0x9E6AE4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60015AD")]
		[Address(RVA = "0x9E6B18", Offset = "0x9E6B18", VA = "0x9E6B18")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60015AE")]
		[Address(RVA = "0x9E6B94", Offset = "0x9E6B94", VA = "0x9E6B94")]
		private void OnNewPosesApplied()
		{
		}

		[Token(Token = "0x60015AF")]
		[Address(RVA = "0x9E6C40", Offset = "0x9E6C40", VA = "0x9E6C40")]
		private void HandAttachedUpdate(Hand hand)
		{
		}

		[Token(Token = "0x60015B0")]
		[Address(RVA = "0x9E77EC", Offset = "0x9E77EC", VA = "0x9E77EC")]
		public void ArrowReleased()
		{
		}

		[Token(Token = "0x60015B1")]
		[Address(RVA = "0x9E7AC0", Offset = "0x9E7AC0", VA = "0x9E7AC0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x66B0D4", Offset = "0x66B0D4")]
		private IEnumerator ResetDrawAnim()
		{
			return null;
		}

		[Token(Token = "0x60015B2")]
		[Address(RVA = "0x9E7B60", Offset = "0x9E7B60", VA = "0x9E7B60")]
		public float GetArrowVelocity()
		{
			return default(float);
		}

		[Token(Token = "0x60015B3")]
		[Address(RVA = "0x9E7B68", Offset = "0x9E7B68", VA = "0x9E7B68")]
		public void StartRotationLerp()
		{
		}

		[Token(Token = "0x60015B4")]
		[Address(RVA = "0x9E7BC8", Offset = "0x9E7BC8", VA = "0x9E7BC8")]
		public void StartNock(ArrowHand currentArrowHand)
		{
		}

		[Token(Token = "0x60015B5")]
		[Address(RVA = "0x9E7660", Offset = "0x9E7660", VA = "0x9E7660")]
		private void EvaluateHandedness()
		{
		}

		[Token(Token = "0x60015B6")]
		[Address(RVA = "0x9E7CA0", Offset = "0x9E7CA0", VA = "0x9E7CA0")]
		private void DoHandednessCheck()
		{
		}

		[Token(Token = "0x60015B7")]
		[Address(RVA = "0x9E7D24", Offset = "0x9E7D24", VA = "0x9E7D24")]
		public void ArrowInPosition()
		{
		}

		[Token(Token = "0x60015B8")]
		[Address(RVA = "0x9E7DC4", Offset = "0x9E7DC4", VA = "0x9E7DC4")]
		public void ReleaseNock()
		{
		}

		[Token(Token = "0x60015B9")]
		[Address(RVA = "0x9E7E58", Offset = "0x9E7E58", VA = "0x9E7E58")]
		private void ShutDown()
		{
		}

		[Token(Token = "0x60015BA")]
		[Address(RVA = "0x9E809C", Offset = "0x9E809C", VA = "0x9E809C")]
		private void OnHandFocusLost(Hand hand)
		{
		}

		[Token(Token = "0x60015BB")]
		[Address(RVA = "0x9E80D4", Offset = "0x9E80D4", VA = "0x9E80D4")]
		private void OnHandFocusAcquired(Hand hand)
		{
		}

		[Token(Token = "0x60015BC")]
		[Address(RVA = "0x9E8124", Offset = "0x9E8124", VA = "0x9E8124")]
		private void OnDetachedFromHand(Hand hand)
		{
		}

		[Token(Token = "0x60015BD")]
		[Address(RVA = "0x9E81A0", Offset = "0x9E81A0", VA = "0x9E81A0")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60015BE")]
		[Address(RVA = "0x9E81A4", Offset = "0x9E81A4", VA = "0x9E81A4")]
		public Longbow()
		{
		}
	}
	[Token(Token = "0x200035E")]
	public class SoundBowClick : MonoBehaviour
	{
		[Token(Token = "0x400170F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AudioClip bowClick;

		[Token(Token = "0x4001710")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AnimationCurve pitchTensionCurve;

		[Token(Token = "0x4001711")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float minPitch;

		[Token(Token = "0x4001712")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float maxPitch;

		[Token(Token = "0x4001713")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private AudioSource thisAudioSource;

		[Token(Token = "0x60015BF")]
		[Address(RVA = "0x9EAAEC", Offset = "0x9EAAEC", VA = "0x9EAAEC")]
		private void Awake()
		{
		}

		[Token(Token = "0x60015C0")]
		[Address(RVA = "0x9E774C", Offset = "0x9E774C", VA = "0x9E774C")]
		public void PlayBowTensionClicks(float normalizedTension)
		{
		}

		[Token(Token = "0x60015C1")]
		[Address(RVA = "0x9EAB44", Offset = "0x9EAB44", VA = "0x9EAB44")]
		public SoundBowClick()
		{
		}
	}
	[Token(Token = "0x200035F")]
	public class ControllerHintsExample : MonoBehaviour
	{
		[Token(Token = "0x20007D2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x645C68", Offset = "0x645C68")]
		private sealed class <TestButtonHints>d__5 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002970")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002971")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002972")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Hand hand;

			[Token(Token = "0x1700030B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600323E")]
				[Address(RVA = "0x9DC4A8", Offset = "0x9DC4A8", VA = "0x9DC4A8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700030C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003240")]
				[Address(RVA = "0x9DC518", Offset = "0x9DC518", VA = "0x9DC518", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600323B")]
			[Address(RVA = "0x9DC128", Offset = "0x9DC128", VA = "0x9DC128")]
			[DebuggerHidden]
			public <TestButtonHints>d__5(int <>1__state)
			{
			}

			[Token(Token = "0x600323C")]
			[Address(RVA = "0x9DC188", Offset = "0x9DC188", VA = "0x9DC188", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600323D")]
			[Address(RVA = "0x9DC18C", Offset = "0x9DC18C", VA = "0x9DC18C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600323F")]
			[Address(RVA = "0x9DC4B0", Offset = "0x9DC4B0", VA = "0x9DC4B0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20007D3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x645C78", Offset = "0x645C78")]
		private sealed class <TestTextHints>d__6 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002973")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002974")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002975")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Hand hand;

			[Token(Token = "0x1700030D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6003244")]
				[Address(RVA = "0x9DC76C", Offset = "0x9DC76C", VA = "0x9DC76C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700030E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003246")]
				[Address(RVA = "0x9DC7DC", Offset = "0x9DC7DC", VA = "0x9DC7DC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003241")]
			[Address(RVA = "0x9DC154", Offset = "0x9DC154", VA = "0x9DC154")]
			[DebuggerHidden]
			public <TestTextHints>d__6(int <>1__state)
			{
			}

			[Token(Token = "0x6003242")]
			[Address(RVA = "0x9DC520", Offset = "0x9DC520", VA = "0x9DC520", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003243")]
			[Address(RVA = "0x9DC524", Offset = "0x9DC524", VA = "0x9DC524", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003245")]
			[Address(RVA = "0x9DC774", Offset = "0x9DC774", VA = "0x9DC774", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001714")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Coroutine buttonHintCoroutine;

		[Token(Token = "0x4001715")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Coroutine textHintCoroutine;

		[Token(Token = "0x60015C2")]
		[Address(RVA = "0x9DBED8", Offset = "0x9DBED8", VA = "0x9DBED8")]
		public void ShowButtonHints(Hand hand)
		{
		}

		[Token(Token = "0x60015C3")]
		[Address(RVA = "0x9DBFA0", Offset = "0x9DBFA0", VA = "0x9DBFA0")]
		public void ShowTextHints(Hand hand)
		{
		}

		[Token(Token = "0x60015C4")]
		[Address(RVA = "0x9DC068", Offset = "0x9DC068", VA = "0x9DC068")]
		public void DisableHints()
		{
		}

		[Token(Token = "0x60015C5")]
		[Address(RVA = "0x9DBF2C", Offset = "0x9DBF2C", VA = "0x9DBF2C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x66B138", Offset = "0x66B138")]
		private IEnumerator TestButtonHints(Hand hand)
		{
			return null;
		}

		[Token(Token = "0x60015C6")]
		[Address(RVA = "0x9DBFF4", Offset = "0x9DBFF4", VA = "0x9DBFF4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x66B19C", Offset = "0x66B19C")]
		private IEnumerator TestTextHints(Hand hand)
		{
			return null;
		}

		[Token(Token = "0x60015C7")]
		[Address(RVA = "0x9DC180", Offset = "0x9DC180", VA = "0x9DC180")]
		public ControllerHintsExample()
		{
		}
	}
	[Token(Token = "0x2000360")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x63F374", Offset = "0x63F374")]
	public class InteractableExample : MonoBehaviour
	{
		[Token(Token = "0x4001716")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private TextMesh textMesh;

		[Token(Token = "0x4001717")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Vector3 oldPosition;

		[Token(Token = "0x4001718")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Quaternion oldRotation;

		[Token(Token = "0x4001719")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float attachTime;

		[Token(Token = "0x400171A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Hand.AttachmentFlags attachmentFlags;

		[Token(Token = "0x60015C8")]
		[Address(RVA = "0x9E3A4C", Offset = "0x9E3A4C", VA = "0x9E3A4C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60015C9")]
		[Address(RVA = "0x9E3AC4", Offset = "0x9E3AC4", VA = "0x9E3AC4")]
		private void OnHandHoverBegin(Hand hand)
		{
		}

		[Token(Token = "0x60015CA")]
		[Address(RVA = "0x9E3B64", Offset = "0x9E3B64", VA = "0x9E3B64")]
		private void OnHandHoverEnd(Hand hand)
		{
		}

		[Token(Token = "0x60015CB")]
		[Address(RVA = "0x9E3BC8", Offset = "0x9E3BC8", VA = "0x9E3BC8")]
		private void HandHoverUpdate(Hand hand)
		{
		}

		[Token(Token = "0x60015CC")]
		[Address(RVA = "0x9E3E7C", Offset = "0x9E3E7C", VA = "0x9E3E7C")]
		private void OnAttachedToHand(Hand hand)
		{
		}

		[Token(Token = "0x60015CD")]
		[Address(RVA = "0x9E3F2C", Offset = "0x9E3F2C", VA = "0x9E3F2C")]
		private void OnDetachedFromHand(Hand hand)
		{
		}

		[Token(Token = "0x60015CE")]
		[Address(RVA = "0x9E3FCC", Offset = "0x9E3FCC", VA = "0x9E3FCC")]
		private void HandAttachedUpdate(Hand hand)
		{
		}

		[Token(Token = "0x60015CF")]
		[Address(RVA = "0x9E40B4", Offset = "0x9E40B4", VA = "0x9E40B4")]
		private void OnHandFocusAcquired(Hand hand)
		{
		}

		[Token(Token = "0x60015D0")]
		[Address(RVA = "0x9E40B8", Offset = "0x9E40B8", VA = "0x9E40B8")]
		private void OnHandFocusLost(Hand hand)
		{
		}

		[Token(Token = "0x60015D1")]
		[Address(RVA = "0x9E40BC", Offset = "0x9E40BC", VA = "0x9E40BC")]
		public InteractableExample()
		{
		}
	}
	[Token(Token = "0x2000361")]
	public class AllowTeleportWhileAttachedToHand : MonoBehaviour
	{
		[Token(Token = "0x400171B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool teleportAllowed;

		[Token(Token = "0x400171C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool overrideHoverLock;

		[Token(Token = "0x60015D2")]
		[Address(RVA = "0x105F758", Offset = "0x105F758", VA = "0x105F758")]
		public AllowTeleportWhileAttachedToHand()
		{
		}
	}
	[Token(Token = "0x2000362")]
	public class ChaperoneInfo : MonoBehaviour
	{
		[Token(Token = "0x20007D4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x645C88", Offset = "0x645C88")]
		private sealed class <Start>d__21 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002976")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002977")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002978")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ChaperoneInfo <>4__this;

			[Token(Token = "0x4002979")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private CVRChaperone <chaperone>5__2;

			[Token(Token = "0x1700030F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600324A")]
				[Address(RVA = "0x9D2D40", Offset = "0x9D2D40", VA = "0x9D2D40", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000310")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600324C")]
				[Address(RVA = "0x9D2DB0", Offset = "0x9D2DB0", VA = "0x9D2DB0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003247")]
			[Address(RVA = "0x9D28D8", Offset = "0x9D28D8", VA = "0x9D28D8")]
			[DebuggerHidden]
			public <Start>d__21(int <>1__state)
			{
			}

			[Token(Token = "0x6003248")]
			[Address(RVA = "0x9D2978", Offset = "0x9D2978", VA = "0x9D2978", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003249")]
			[Address(RVA = "0x9D297C", Offset = "0x9D297C", VA = "0x9D297C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600324B")]
			[Address(RVA = "0x9D2D48", Offset = "0x9D2D48", VA = "0x9D2D48", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400171D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x651DFC", Offset = "0x651DFC")]
		private bool <initialized>k__BackingField;

		[Token(Token = "0x400171E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x651E0C", Offset = "0x651E0C")]
		private float <playAreaSizeX>k__BackingField;

		[Token(Token = "0x400171F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x651E1C", Offset = "0x651E1C")]
		private float <playAreaSizeZ>k__BackingField;

		[Token(Token = "0x4001720")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x651E2C", Offset = "0x651E2C")]
		private bool <roomscale>k__BackingField;

		[Token(Token = "0x4001721")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static SteamVR_Events.Event Initialized;

		[Token(Token = "0x4001722")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static ChaperoneInfo _instance;

		[Token(Token = "0x170001AD")]
		public bool initialized
		{
			[Token(Token = "0x60015D3")]
			[Address(RVA = "0x9D2580", Offset = "0x9D2580", VA = "0x9D2580")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66B200", Offset = "0x66B200")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60015D4")]
			[Address(RVA = "0x9D2588", Offset = "0x9D2588", VA = "0x9D2588")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66B210", Offset = "0x66B210")]
			private set
			{
			}
		}

		[Token(Token = "0x170001AE")]
		public float playAreaSizeX
		{
			[Token(Token = "0x60015D5")]
			[Address(RVA = "0x9D2594", Offset = "0x9D2594", VA = "0x9D2594")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66B220", Offset = "0x66B220")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60015D6")]
			[Address(RVA = "0x9D259C", Offset = "0x9D259C", VA = "0x9D259C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66B230", Offset = "0x66B230")]
			private set
			{
			}
		}

		[Token(Token = "0x170001AF")]
		public float playAreaSizeZ
		{
			[Token(Token = "0x60015D7")]
			[Address(RVA = "0x9D25A4", Offset = "0x9D25A4", VA = "0x9D25A4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66B240", Offset = "0x66B240")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60015D8")]
			[Address(RVA = "0x9D25AC", Offset = "0x9D25AC", VA = "0x9D25AC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66B250", Offset = "0x66B250")]
			private set
			{
			}
		}

		[Token(Token = "0x170001B0")]
		public bool roomscale
		{
			[Token(Token = "0x60015D9")]
			[Address(RVA = "0x9D25B4", Offset = "0x9D25B4", VA = "0x9D25B4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66B260", Offset = "0x66B260")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60015DA")]
			[Address(RVA = "0x9D25BC", Offset = "0x9D25BC", VA = "0x9D25BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66B270", Offset = "0x66B270")]
			private set
			{
			}
		}

		[Token(Token = "0x170001B1")]
		public static ChaperoneInfo instance
		{
			[Token(Token = "0x60015DC")]
			[Address(RVA = "0x9D2664", Offset = "0x9D2664", VA = "0x9D2664")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60015DB")]
		[Address(RVA = "0x9D25C8", Offset = "0x9D25C8", VA = "0x9D25C8")]
		public static SteamVR_Events.Action InitializedAction(UnityAction action)
		{
			return null;
		}

		[Token(Token = "0x60015DD")]
		[Address(RVA = "0x9D2864", Offset = "0x9D2864", VA = "0x9D2864")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x66B280", Offset = "0x66B280")]
		private IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x60015DE")]
		[Address(RVA = "0x9D2904", Offset = "0x9D2904", VA = "0x9D2904")]
		public ChaperoneInfo()
		{
		}
	}
	[Token(Token = "0x2000363")]
	public class IgnoreTeleportTrace : MonoBehaviour
	{
		[Token(Token = "0x60015E0")]
		[Address(RVA = "0x9E1F38", Offset = "0x9E1F38", VA = "0x9E1F38")]
		public IgnoreTeleportTrace()
		{
		}
	}
	[Token(Token = "0x2000364")]
	public class Teleport : MonoBehaviour
	{
		[Token(Token = "0x20007D5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x645C98", Offset = "0x645C98")]
		private sealed class <TeleportHintCoroutine>d__105 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400297A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400297B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400297C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Teleport <>4__this;

			[Token(Token = "0x400297D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <prevBreakTime>5__2;

			[Token(Token = "0x400297E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <prevHapticPulseTime>5__3;

			[Token(Token = "0x400297F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private bool <pulsed>5__4;

			[Token(Token = "0x17000311")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6003250")]
				[Address(RVA = "0x804234", Offset = "0x804234", VA = "0x804234", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000312")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003252")]
				[Address(RVA = "0x8042A4", Offset = "0x8042A4", VA = "0x8042A4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600324D")]
			[Address(RVA = "0x803F68", Offset = "0x803F68", VA = "0x803F68")]
			[DebuggerHidden]
			public <TeleportHintCoroutine>d__105(int <>1__state)
			{
			}

			[Token(Token = "0x600324E")]
			[Address(RVA = "0x803F94", Offset = "0x803F94", VA = "0x803F94", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600324F")]
			[Address(RVA = "0x803F98", Offset = "0x803F98", VA = "0x803F98", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003251")]
			[Address(RVA = "0x80423C", Offset = "0x80423C", VA = "0x80423C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001723")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LayerMask traceLayerMask;

		[Token(Token = "0x4001724")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public LayerMask floorFixupTraceLayerMask;

		[Token(Token = "0x4001725")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float floorFixupMaximumTraceDistance;

		[Token(Token = "0x4001726")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Material areaVisibleMaterial;

		[Token(Token = "0x4001727")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Material areaLockedMaterial;

		[Token(Token = "0x4001728")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Material areaHighlightedMaterial;

		[Token(Token = "0x4001729")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Material pointVisibleMaterial;

		[Token(Token = "0x400172A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Material pointLockedMaterial;

		[Token(Token = "0x400172B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Material pointHighlightedMaterial;

		[Token(Token = "0x400172C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Transform destinationReticleTransform;

		[Token(Token = "0x400172D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Transform invalidReticleTransform;

		[Token(Token = "0x400172E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public GameObject playAreaPreviewCorner;

		[Token(Token = "0x400172F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public GameObject playAreaPreviewSide;

		[Token(Token = "0x4001730")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Color pointerValidColor;

		[Token(Token = "0x4001731")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Color pointerInvalidColor;

		[Token(Token = "0x4001732")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public Color pointerLockedColor;

		[Token(Token = "0x4001733")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public bool showPlayAreaMarker;

		[Token(Token = "0x4001734")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		public float teleportFadeTime;

		[Token(Token = "0x4001735")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public float meshFadeTime;

		[Token(Token = "0x4001736")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		public float arcDistance;

		[Token(Token = "0x4001737")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x651E3C", Offset = "0x651E3C")]
		public Transform onActivateObjectTransform;

		[Token(Token = "0x4001738")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public Transform onDeactivateObjectTransform;

		[Token(Token = "0x4001739")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public float activateObjectTime;

		[Token(Token = "0x400173A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		public float deactivateObjectTime;

		[Token(Token = "0x400173B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x651E74", Offset = "0x651E74")]
		public AudioSource pointerAudioSource;

		[Token(Token = "0x400173C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public AudioSource loopingAudioSource;

		[Token(Token = "0x400173D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public AudioSource headAudioSource;

		[Token(Token = "0x400173E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public AudioSource reticleAudioSource;

		[Token(Token = "0x400173F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x651EAC", Offset = "0x651EAC")]
		public AudioClip teleportSound;

		[Token(Token = "0x4001740")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public AudioClip pointerStartSound;

		[Token(Token = "0x4001741")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public AudioClip pointerLoopSound;

		[Token(Token = "0x4001742")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public AudioClip pointerStopSound;

		[Token(Token = "0x4001743")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public AudioClip goodHighlightSound;

		[Token(Token = "0x4001744")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		public AudioClip badHighlightSound;

		[Token(Token = "0x4001745")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x651EE4", Offset = "0x651EE4")]
		public bool debugFloor;

		[Token(Token = "0x4001746")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x121")]
		public bool showOffsetReticle;

		[Token(Token = "0x4001747")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		public Transform offsetReticleTransform;

		[Token(Token = "0x4001748")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		public MeshRenderer floorDebugSphere;

		[Token(Token = "0x4001749")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		public LineRenderer floorDebugLine;

		[Token(Token = "0x400174A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private LineRenderer pointerLineRenderer;

		[Token(Token = "0x400174B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private GameObject teleportPointerObject;

		[Token(Token = "0x400174C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private Transform pointerStartTransform;

		[Token(Token = "0x400174D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		private Hand pointerHand;

		[Token(Token = "0x400174E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		private Player player;

		[Token(Token = "0x400174F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		private TeleportArc teleportArc;

		[Token(Token = "0x4001750")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		private bool visible;

		[Token(Token = "0x4001751")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		private TeleportMarkerBase[] teleportMarkers;

		[Token(Token = "0x4001752")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		private TeleportMarkerBase pointedAtTeleportMarker;

		[Token(Token = "0x4001753")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		private TeleportMarkerBase teleportingToMarker;

		[Token(Token = "0x4001754")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		private Vector3 pointedAtPosition;

		[Token(Token = "0x4001755")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19C")]
		private Vector3 prevPointedAtPosition;

		[Token(Token = "0x4001756")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		private bool teleporting;

		[Token(Token = "0x4001757")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1AC")]
		private float currentFadeTime;

		[Token(Token = "0x4001758")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		private float meshAlphaPercent;

		[Token(Token = "0x4001759")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B4")]
		private float pointerShowStartTime;

		[Token(Token = "0x400175A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		private float pointerHideStartTime;

		[Token(Token = "0x400175B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1BC")]
		private bool meshFading;

		[Token(Token = "0x400175C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		private float fullTintAlpha;

		[Token(Token = "0x400175D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C4")]
		private float invalidReticleMinScale;

		[Token(Token = "0x400175E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		private float invalidReticleMaxScale;

		[Token(Token = "0x400175F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1CC")]
		private float invalidReticleMinScaleDistance;

		[Token(Token = "0x4001760")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		private float invalidReticleMaxScaleDistance;

		[Token(Token = "0x4001761")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D4")]
		private Vector3 invalidReticleScale;

		[Token(Token = "0x4001762")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		private Quaternion invalidReticleTargetRotation;

		[Token(Token = "0x4001763")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		private Transform playAreaPreviewTransform;

		[Token(Token = "0x4001764")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		private Transform[] playAreaPreviewCorners;

		[Token(Token = "0x4001765")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		private Transform[] playAreaPreviewSides;

		[Token(Token = "0x4001766")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		private float loopingAudioMaxVolume;

		[Token(Token = "0x4001767")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		private Coroutine hintCoroutine;

		[Token(Token = "0x4001768")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
		private bool originalHoverLockState;

		[Token(Token = "0x4001769")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
		private Interactable originalHoveringInteractable;

		[Token(Token = "0x400176A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
		private AllowTeleportWhileAttachedToHand allowTeleportWhileAttached;

		[Token(Token = "0x400176B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
		private Vector3 startingFeetOffset;

		[Token(Token = "0x400176C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x23C")]
		private bool movedFeetFarEnough;

		[Token(Token = "0x400176D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
		private SteamVR_Events.Action chaperoneInfoInitializedAction;

		[Token(Token = "0x400176E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static SteamVR_Events.Event<float> ChangeScene;

		[Token(Token = "0x400176F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static SteamVR_Events.Event<TeleportMarkerBase> Player;

		[Token(Token = "0x4001770")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static SteamVR_Events.Event<TeleportMarkerBase> PlayerPre;

		[Token(Token = "0x4001771")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static Teleport _instance;

		[Token(Token = "0x170001B2")]
		public static Teleport instance
		{
			[Token(Token = "0x60015E4")]
			[Address(RVA = "0x9EC318", Offset = "0x9EC318", VA = "0x9EC318")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60015E1")]
		[Address(RVA = "0x9EC12C", Offset = "0x9EC12C", VA = "0x9EC12C")]
		public static SteamVR_Events.Action<float> ChangeSceneAction(UnityAction<float> action)
		{
			return null;
		}

		[Token(Token = "0x60015E2")]
		[Address(RVA = "0x9EC1D0", Offset = "0x9EC1D0", VA = "0x9EC1D0")]
		public static SteamVR_Events.Action<TeleportMarkerBase> PlayerAction(UnityAction<TeleportMarkerBase> action)
		{
			return null;
		}

		[Token(Token = "0x60015E3")]
		[Address(RVA = "0x9EC274", Offset = "0x9EC274", VA = "0x9EC274")]
		public static SteamVR_Events.Action<TeleportMarkerBase> PlayerPreAction(UnityAction<TeleportMarkerBase> action)
		{
			return null;
		}

		[Token(Token = "0x60015E5")]
		[Address(RVA = "0x9EC440", Offset = "0x9EC440", VA = "0x9EC440")]
		private void Awake()
		{
		}

		[Token(Token = "0x60015E6")]
		[Address(RVA = "0x9EC650", Offset = "0x9EC650", VA = "0x9EC650")]
		private void Start()
		{
		}

		[Token(Token = "0x60015E7")]
		[Address(RVA = "0x9ECCC0", Offset = "0x9ECCC0", VA = "0x9ECCC0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60015E8")]
		[Address(RVA = "0x9EDFF0", Offset = "0x9EDFF0", VA = "0x9EDFF0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60015E9")]
		[Address(RVA = "0x9ECB78", Offset = "0x9ECB78", VA = "0x9ECB78")]
		private void CheckForSpawnPoint()
		{
		}

		[Token(Token = "0x60015EA")]
		[Address(RVA = "0x9EE578", Offset = "0x9EE578", VA = "0x9EE578")]
		public void HideTeleportPointer()
		{
		}

		[Token(Token = "0x60015EB")]
		[Address(RVA = "0x9EE600", Offset = "0x9EE600", VA = "0x9EE600")]
		private void Update()
		{
		}

		[Token(Token = "0x60015EC")]
		[Address(RVA = "0x9EF348", Offset = "0x9EF348", VA = "0x9EF348")]
		private void UpdatePointer()
		{
		}

		[Token(Token = "0x60015ED")]
		[Address(RVA = "0x9F062C", Offset = "0x9F062C", VA = "0x9F062C")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x60015EE")]
		[Address(RVA = "0x9ECD00", Offset = "0x9ECD00", VA = "0x9ECD00")]
		private void OnChaperoneInfoInitialized()
		{
		}

		[Token(Token = "0x60015EF")]
		[Address(RVA = "0x9EC778", Offset = "0x9EC778", VA = "0x9EC778")]
		private void HidePointer()
		{
		}

		[Token(Token = "0x60015F0")]
		[Address(RVA = "0x9EEBAC", Offset = "0x9EEBAC", VA = "0x9EEBAC")]
		private void ShowPointer(Hand newPointerHand, Hand oldPointerHand)
		{
		}

		[Token(Token = "0x60015F1")]
		[Address(RVA = "0x9F0214", Offset = "0x9F0214", VA = "0x9F0214")]
		private void UpdateTeleportColors()
		{
		}

		[Token(Token = "0x60015F2")]
		[Address(RVA = "0x9F0CA0", Offset = "0x9F0CA0", VA = "0x9F0CA0")]
		private void PlayAudioClip(AudioSource source, AudioClip clip)
		{
		}

		[Token(Token = "0x60015F3")]
		[Address(RVA = "0x9F0DD8", Offset = "0x9F0DD8", VA = "0x9F0DD8")]
		private void PlayPointerHaptic(bool validLocation)
		{
		}

		[Token(Token = "0x60015F4")]
		[Address(RVA = "0x9EEA1C", Offset = "0x9EEA1C", VA = "0x9EEA1C")]
		private void TryTeleportPlayer()
		{
		}

		[Token(Token = "0x60015F5")]
		[Address(RVA = "0x9F0E68", Offset = "0x9F0E68", VA = "0x9F0E68")]
		private void InitiateTeleportFade()
		{
		}

		[Token(Token = "0x60015F6")]
		[Address(RVA = "0x9EE030", Offset = "0x9EE030", VA = "0x9EE030")]
		private void TeleportPlayer()
		{
		}

		[Token(Token = "0x60015F7")]
		[Address(RVA = "0x9F0340", Offset = "0x9F0340", VA = "0x9F0340")]
		private void HighlightSelected(TeleportMarkerBase hitTeleportMarker)
		{
		}

		[Token(Token = "0x60015F8")]
		[Address(RVA = "0x9F1208", Offset = "0x9F1208", VA = "0x9F1208")]
		public void ShowTeleportHint()
		{
		}

		[Token(Token = "0x60015F9")]
		[Address(RVA = "0x9F112C", Offset = "0x9F112C", VA = "0x9F112C")]
		public void CancelTeleportHint()
		{
		}

		[Token(Token = "0x60015FA")]
		[Address(RVA = "0x9F1244", Offset = "0x9F1244", VA = "0x9F1244")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x66B2E4", Offset = "0x66B2E4")]
		private IEnumerator TeleportHintCoroutine()
		{
			return null;
		}

		[Token(Token = "0x60015FB")]
		[Address(RVA = "0x9F12B8", Offset = "0x9F12B8", VA = "0x9F12B8")]
		public bool IsEligibleForTeleport(Hand hand)
		{
			return default(bool);
		}

		[Token(Token = "0x60015FC")]
		[Address(RVA = "0x9F0C10", Offset = "0x9F0C10", VA = "0x9F0C10")]
		private bool ShouldOverrideHoverLock()
		{
			return default(bool);
		}

		[Token(Token = "0x60015FD")]
		[Address(RVA = "0x9EE94C", Offset = "0x9EE94C", VA = "0x9EE94C")]
		private bool WasTeleportButtonReleased(Hand hand)
		{
			return default(bool);
		}

		[Token(Token = "0x60015FE")]
		[Address(RVA = "0x9EF278", Offset = "0x9EF278", VA = "0x9EF278")]
		private bool IsTeleportButtonDown(Hand hand)
		{
			return default(bool);
		}

		[Token(Token = "0x60015FF")]
		[Address(RVA = "0x9EEADC", Offset = "0x9EEADC", VA = "0x9EEADC")]
		private bool WasTeleportButtonPressed(Hand hand)
		{
			return default(bool);
		}

		[Token(Token = "0x6001600")]
		[Address(RVA = "0x9F0D00", Offset = "0x9F0D00", VA = "0x9F0D00")]
		private Transform GetPointerStartTransform(Hand hand)
		{
			return null;
		}

		[Token(Token = "0x6001601")]
		[Address(RVA = "0x9F1494", Offset = "0x9F1494", VA = "0x9F1494")]
		public Teleport()
		{
		}
	}
	[Token(Token = "0x2000365")]
	public class TeleportArc : MonoBehaviour
	{
		[Token(Token = "0x4001772")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int segmentCount;

		[Token(Token = "0x4001773")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float thickness;

		[Token(Token = "0x4001774")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x651F1C", Offset = "0x651F1C")]
		public float arcDuration;

		[Token(Token = "0x4001775")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x651F54", Offset = "0x651F54")]
		public float segmentBreak;

		[Token(Token = "0x4001776")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x651F8C", Offset = "0x651F8C")]
		public float arcSpeed;

		[Token(Token = "0x4001777")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Material material;

		[Token(Token = "0x4001778")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		public int traceLayerMask;

		[Token(Token = "0x4001779")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private LineRenderer[] lineRenderers;

		[Token(Token = "0x400177A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float arcTimeOffset;

		[Token(Token = "0x400177B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float prevThickness;

		[Token(Token = "0x400177C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int prevSegmentCount;

		[Token(Token = "0x400177D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private bool showArc;

		[Token(Token = "0x400177E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Vector3 startPos;

		[Token(Token = "0x400177F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private Vector3 projectileVelocity;

		[Token(Token = "0x4001780")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool useGravity;

		[Token(Token = "0x4001781")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Transform arcObjectsTransfrom;

		[Token(Token = "0x4001782")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private bool arcInvalid;

		[Token(Token = "0x6001603")]
		[Address(RVA = "0x8042AC", Offset = "0x8042AC", VA = "0x8042AC")]
		private void Start()
		{
		}

		[Token(Token = "0x6001604")]
		[Address(RVA = "0x8042D4", Offset = "0x8042D4", VA = "0x8042D4")]
		private void Update()
		{
		}

		[Token(Token = "0x6001605")]
		[Address(RVA = "0x804320", Offset = "0x804320", VA = "0x804320")]
		private void CreateLineRendererObjects()
		{
		}

		[Token(Token = "0x6001606")]
		[Address(RVA = "0x804860", Offset = "0x804860", VA = "0x804860")]
		public void SetArcData(Vector3 position, Vector3 velocity, bool gravity, bool pointerAtBadAngle)
		{
		}

		[Token(Token = "0x6001607")]
		[Address(RVA = "0x8048B4", Offset = "0x8048B4", VA = "0x8048B4")]
		public void Show()
		{
		}

		[Token(Token = "0x6001608")]
		[Address(RVA = "0x8048CC", Offset = "0x8048CC", VA = "0x8048CC")]
		public void Hide()
		{
		}

		[Token(Token = "0x6001609")]
		[Address(RVA = "0x8049A4", Offset = "0x8049A4", VA = "0x8049A4")]
		public bool DrawArc(out RaycastHit hitInfo)
		{
			return default(bool);
		}

		[Token(Token = "0x600160A")]
		[Address(RVA = "0x804FF8", Offset = "0x804FF8", VA = "0x804FF8")]
		private void DrawArcSegment(int index, float startTime, float endTime)
		{
		}

		[Token(Token = "0x600160B")]
		[Address(RVA = "0x805170", Offset = "0x805170", VA = "0x805170")]
		public void SetColor(Color color)
		{
		}

		[Token(Token = "0x600160C")]
		[Address(RVA = "0x804C40", Offset = "0x804C40", VA = "0x804C40")]
		private float FindProjectileCollision(out RaycastHit hitInfo)
		{
			return default(float);
		}

		[Token(Token = "0x600160D")]
		[Address(RVA = "0x804EA0", Offset = "0x804EA0", VA = "0x804EA0")]
		public Vector3 GetArcPositionAtTime(float time)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600160E")]
		[Address(RVA = "0x804904", Offset = "0x804904", VA = "0x804904")]
		private void HideLineSegments(int startSegment, int endSegment)
		{
		}

		[Token(Token = "0x600160F")]
		[Address(RVA = "0x805584", Offset = "0x805584", VA = "0x805584")]
		public TeleportArc()
		{
		}
	}
	[Token(Token = "0x2000366")]
	public class TeleportArea : TeleportMarkerBase
	{
		[Token(Token = "0x4001783")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x651FD4", Offset = "0x651FD4")]
		private Bounds <meshBounds>k__BackingField;

		[Token(Token = "0x4001784")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private MeshRenderer areaMesh;

		[Token(Token = "0x4001785")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int tintColorId;

		[Token(Token = "0x4001786")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Color visibleTintColor;

		[Token(Token = "0x4001787")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Color highlightedTintColor;

		[Token(Token = "0x4001788")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private Color lockedTintColor;

		[Token(Token = "0x4001789")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private bool highlighted;

		[Token(Token = "0x170001B3")]
		public Bounds meshBounds
		{
			[Token(Token = "0x6001610")]
			[Address(RVA = "0x8055AC", Offset = "0x8055AC", VA = "0x8055AC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66B348", Offset = "0x66B348")]
			get
			{
				return default(Bounds);
			}
			[Token(Token = "0x6001611")]
			[Address(RVA = "0x8055C0", Offset = "0x8055C0", VA = "0x8055C0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66B358", Offset = "0x66B358")]
			private set
			{
			}
		}

		[Token(Token = "0x6001612")]
		[Address(RVA = "0x8055D4", Offset = "0x8055D4", VA = "0x8055D4")]
		public void Awake()
		{
		}

		[Token(Token = "0x6001613")]
		[Address(RVA = "0x80576C", Offset = "0x80576C", VA = "0x80576C")]
		public void Start()
		{
		}

		[Token(Token = "0x6001614")]
		[Address(RVA = "0x805894", Offset = "0x805894", VA = "0x805894", Slot = "9")]
		public override bool ShouldActivate(Vector3 playerPosition)
		{
			return default(bool);
		}

		[Token(Token = "0x6001615")]
		[Address(RVA = "0x80589C", Offset = "0x80589C", VA = "0x80589C", Slot = "10")]
		public override bool ShouldMovePlayer()
		{
			return default(bool);
		}

		[Token(Token = "0x6001616")]
		[Address(RVA = "0x8058A4", Offset = "0x8058A4", VA = "0x8058A4", Slot = "7")]
		public override void Highlight(bool highlight)
		{
		}

		[Token(Token = "0x6001617")]
		[Address(RVA = "0x805998", Offset = "0x805998", VA = "0x805998", Slot = "8")]
		public override void SetAlpha(float tintAlpha, float alphaPercent)
		{
		}

		[Token(Token = "0x6001618")]
		[Address(RVA = "0x805AD0", Offset = "0x805AD0", VA = "0x805AD0", Slot = "6")]
		public override void UpdateVisuals()
		{
		}

		[Token(Token = "0x6001619")]
		[Address(RVA = "0x805B9C", Offset = "0x805B9C", VA = "0x805B9C")]
		public void UpdateVisualsInEditor()
		{
		}

		[Token(Token = "0x600161A")]
		[Address(RVA = "0x805648", Offset = "0x805648", VA = "0x805648")]
		private bool CalculateBounds()
		{
			return default(bool);
		}

		[Token(Token = "0x600161B")]
		[Address(RVA = "0x805A74", Offset = "0x805A74", VA = "0x805A74")]
		private Color GetTintColor()
		{
			return default(Color);
		}

		[Token(Token = "0x600161C")]
		[Address(RVA = "0x805C80", Offset = "0x805C80", VA = "0x805C80")]
		public TeleportArea()
		{
		}
	}
	[Token(Token = "0x2000367")]
	public abstract class TeleportMarkerBase : MonoBehaviour
	{
		[Token(Token = "0x400178A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool locked;

		[Token(Token = "0x400178B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool markerActive;

		[Token(Token = "0x170001B4")]
		public virtual bool showReticle
		{
			[Token(Token = "0x600161D")]
			[Address(RVA = "0x805CEC", Offset = "0x805CEC", VA = "0x805CEC", Slot = "4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600161E")]
		[Address(RVA = "0x805CF4", Offset = "0x805CF4", VA = "0x805CF4")]
		public void SetLocked(bool locked)
		{
		}

		[Token(Token = "0x600161F")]
		[Address(RVA = "0x805D08", Offset = "0x805D08", VA = "0x805D08", Slot = "5")]
		public virtual void TeleportPlayer(Vector3 pointedAtPosition)
		{
		}

		[Token(Token = "0x6001620")]
		public abstract void UpdateVisuals();

		[Token(Token = "0x6001621")]
		public abstract void Highlight(bool highlight);

		[Token(Token = "0x6001622")]
		public abstract void SetAlpha(float tintAlpha, float alphaPercent);

		[Token(Token = "0x6001623")]
		public abstract bool ShouldActivate(Vector3 playerPosition);

		[Token(Token = "0x6001624")]
		public abstract bool ShouldMovePlayer();

		[Token(Token = "0x6001625")]
		[Address(RVA = "0x805CDC", Offset = "0x805CDC", VA = "0x805CDC")]
		protected TeleportMarkerBase()
		{
		}
	}
	[Token(Token = "0x2000368")]
	public class TeleportPoint : TeleportMarkerBase
	{
		[Token(Token = "0x20007D6")]
		public enum TeleportPointType
		{
			[Token(Token = "0x4002981")]
			MoveToLocation,
			[Token(Token = "0x4002982")]
			SwitchToNewScene
		}

		[Token(Token = "0x400178C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public TeleportPointType teleportType;

		[Token(Token = "0x400178D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string title;

		[Token(Token = "0x400178E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string switchToScene;

		[Token(Token = "0x400178F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Color titleVisibleColor;

		[Token(Token = "0x4001790")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Color titleHighlightedColor;

		[Token(Token = "0x4001791")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Color titleLockedColor;

		[Token(Token = "0x4001792")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public bool playerSpawnPoint;

		[Token(Token = "0x4001793")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		private bool gotReleventComponents;

		[Token(Token = "0x4001794")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private MeshRenderer markerMesh;

		[Token(Token = "0x4001795")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private MeshRenderer switchSceneIcon;

		[Token(Token = "0x4001796")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private MeshRenderer moveLocationIcon;

		[Token(Token = "0x4001797")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private MeshRenderer lockedIcon;

		[Token(Token = "0x4001798")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private MeshRenderer pointIcon;

		[Token(Token = "0x4001799")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Transform lookAtJointTransform;

		[Token(Token = "0x400179A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Animation animation;

		[Token(Token = "0x400179B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Text titleText;

		[Token(Token = "0x400179C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Player player;

		[Token(Token = "0x400179D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Vector3 lookAtPosition;

		[Token(Token = "0x400179E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private int tintColorID;

		[Token(Token = "0x400179F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private Color tintColor;

		[Token(Token = "0x40017A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private Color titleColor;

		[Token(Token = "0x40017A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private float fullTitleAlpha;

		[Token(Token = "0x40017A2")]
		private const string switchSceneAnimation = "switch_scenes_idle";

		[Token(Token = "0x40017A3")]
		private const string moveLocationAnimation = "move_location_idle";

		[Token(Token = "0x40017A4")]
		private const string lockedAnimation = "locked_idle";

		[Token(Token = "0x170001B5")]
		public override bool showReticle
		{
			[Token(Token = "0x6001626")]
			[Address(RVA = "0x805D0C", Offset = "0x805D0C", VA = "0x805D0C", Slot = "4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001627")]
		[Address(RVA = "0x805D14", Offset = "0x805D14", VA = "0x805D14")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001628")]
		[Address(RVA = "0x806050", Offset = "0x806050", VA = "0x806050")]
		private void Start()
		{
		}

		[Token(Token = "0x6001629")]
		[Address(RVA = "0x806078", Offset = "0x806078", VA = "0x806078")]
		private void Update()
		{
		}

		[Token(Token = "0x600162A")]
		[Address(RVA = "0x806180", Offset = "0x806180", VA = "0x806180", Slot = "9")]
		public override bool ShouldActivate(Vector3 playerPosition)
		{
			return default(bool);
		}

		[Token(Token = "0x600162B")]
		[Address(RVA = "0x806260", Offset = "0x806260", VA = "0x806260", Slot = "10")]
		public override bool ShouldMovePlayer()
		{
			return default(bool);
		}

		[Token(Token = "0x600162C")]
		[Address(RVA = "0x806268", Offset = "0x806268", VA = "0x806268", Slot = "7")]
		public override void Highlight(bool highlight)
		{
		}

		[Token(Token = "0x600162D")]
		[Address(RVA = "0x8064D0", Offset = "0x8064D0", VA = "0x8064D0", Slot = "6")]
		public override void UpdateVisuals()
		{
		}

		[Token(Token = "0x600162E")]
		[Address(RVA = "0x8066BC", Offset = "0x8066BC", VA = "0x8066BC", Slot = "8")]
		public override void SetAlpha(float tintAlpha, float alphaPercent)
		{
		}

		[Token(Token = "0x600162F")]
		[Address(RVA = "0x8063CC", Offset = "0x8063CC", VA = "0x8063CC")]
		public void SetMeshMaterials(Material material, Color textColor)
		{
		}

		[Token(Token = "0x6001630")]
		[Address(RVA = "0x8068D8", Offset = "0x8068D8", VA = "0x8068D8")]
		public void TeleportToScene()
		{
		}

		[Token(Token = "0x6001631")]
		[Address(RVA = "0x805E40", Offset = "0x805E40", VA = "0x805E40")]
		public void GetRelevantComponents()
		{
		}

		[Token(Token = "0x6001632")]
		[Address(RVA = "0x8069C0", Offset = "0x8069C0", VA = "0x8069C0")]
		public void ReleaseRelevantComponents()
		{
		}

		[Token(Token = "0x6001633")]
		[Address(RVA = "0x8069D8", Offset = "0x8069D8", VA = "0x8069D8")]
		public void UpdateVisualsInEditor()
		{
		}

		[Token(Token = "0x6001634")]
		[Address(RVA = "0x806E10", Offset = "0x806E10", VA = "0x806E10")]
		public TeleportPoint()
		{
		}
	}
}
namespace ShaderControl
{
	[Token(Token = "0x2000369")]
	[ExecuteInEditMode]
	public class Effect : MonoBehaviour
	{
		[Token(Token = "0x40017A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Material mat;

		[Token(Token = "0x40017A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private string[] keywords;

		[Token(Token = "0x6001635")]
		[Address(RVA = "0x860E08", Offset = "0x860E08", VA = "0x860E08")]
		private void Start()
		{
		}

		[Token(Token = "0x6001636")]
		[Address(RVA = "0x860E68", Offset = "0x860E68", VA = "0x860E68")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6001637")]
		[Address(RVA = "0x860F14", Offset = "0x860F14", VA = "0x860F14")]
		public Effect()
		{
		}
	}
}
namespace Kvant
{
	[Token(Token = "0x200036A")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x63F3E8", Offset = "0x63F3E8")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x63F3E8", Offset = "0x63F3E8")]
	public class WigController : MonoBehaviour
	{
		[Token(Token = "0x40017A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform _target;

		[Token(Token = "0x40017A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private WigTemplate _template;

		[Token(Token = "0x40017A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float _maxTimeStep;

		[Token(Token = "0x40017AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private float _randomSeed;

		[Token(Token = "0x40017AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x652024", Offset = "0x652024")]
		private float _length;

		[Token(Token = "0x40017AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x652068", Offset = "0x652068")]
		private float _lengthRandomness;

		[Token(Token = "0x40017AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private float _spring;

		[Token(Token = "0x40017AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private float _damping;

		[Token(Token = "0x40017AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Vector3 _gravity;

		[Token(Token = "0x40017B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		private float _noiseAmplitude;

		[Token(Token = "0x40017B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private float _noiseFrequency;

		[Token(Token = "0x40017B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[SerializeField]
		private float _noiseSpeed;

		[Token(Token = "0x40017B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		[HideInInspector]
		private Shader _kernels;

		[Token(Token = "0x40017B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Material _material;

		[Token(Token = "0x40017B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private RenderTexture _positionBuffer1;

		[Token(Token = "0x40017B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private RenderTexture _positionBuffer2;

		[Token(Token = "0x40017B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private RenderTexture _velocityBuffer1;

		[Token(Token = "0x40017B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private RenderTexture _velocityBuffer2;

		[Token(Token = "0x40017B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private RenderTexture _basisBuffer1;

		[Token(Token = "0x40017BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private RenderTexture _basisBuffer2;

		[Token(Token = "0x40017BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private MaterialPropertyBlock _propertyBlock;

		[Token(Token = "0x40017BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Vector3 _targetPosition;

		[Token(Token = "0x40017BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private Quaternion _targetRotation;

		[Token(Token = "0x40017BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private bool _reconfigured;

		[Token(Token = "0x40017BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBD")]
		private bool _needsReset;

		[Token(Token = "0x170001B6")]
		public Transform target
		{
			[Token(Token = "0x6001638")]
			[Address(RVA = "0x8547E4", Offset = "0x8547E4", VA = "0x8547E4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001639")]
			[Address(RVA = "0x8547EC", Offset = "0x8547EC", VA = "0x8547EC")]
			set
			{
			}
		}

		[Token(Token = "0x170001B7")]
		public WigTemplate template
		{
			[Token(Token = "0x600163A")]
			[Address(RVA = "0x8547F4", Offset = "0x8547F4", VA = "0x8547F4")]
			get
			{
				return null;
			}
			[Token(Token = "0x600163B")]
			[Address(RVA = "0x8547FC", Offset = "0x8547FC", VA = "0x8547FC")]
			set
			{
			}
		}

		[Token(Token = "0x170001B8")]
		public float maxTimeStep
		{
			[Token(Token = "0x600163C")]
			[Address(RVA = "0x85488C", Offset = "0x85488C", VA = "0x85488C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600163D")]
			[Address(RVA = "0x854894", Offset = "0x854894", VA = "0x854894")]
			set
			{
			}
		}

		[Token(Token = "0x170001B9")]
		public float randomSeed
		{
			[Token(Token = "0x600163E")]
			[Address(RVA = "0x85489C", Offset = "0x85489C", VA = "0x85489C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600163F")]
			[Address(RVA = "0x8548A4", Offset = "0x8548A4", VA = "0x8548A4")]
			set
			{
			}
		}

		[Token(Token = "0x170001BA")]
		public float length
		{
			[Token(Token = "0x6001640")]
			[Address(RVA = "0x8548C0", Offset = "0x8548C0", VA = "0x8548C0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001641")]
			[Address(RVA = "0x8548C8", Offset = "0x8548C8", VA = "0x8548C8")]
			set
			{
			}
		}

		[Token(Token = "0x170001BB")]
		public float lengthRandomness
		{
			[Token(Token = "0x6001642")]
			[Address(RVA = "0x8548D0", Offset = "0x8548D0", VA = "0x8548D0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001643")]
			[Address(RVA = "0x8548D8", Offset = "0x8548D8", VA = "0x8548D8")]
			set
			{
			}
		}

		[Token(Token = "0x170001BC")]
		public float spring
		{
			[Token(Token = "0x6001644")]
			[Address(RVA = "0x8548E0", Offset = "0x8548E0", VA = "0x8548E0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001645")]
			[Address(RVA = "0x8548E8", Offset = "0x8548E8", VA = "0x8548E8")]
			set
			{
			}
		}

		[Token(Token = "0x170001BD")]
		public float damping
		{
			[Token(Token = "0x6001646")]
			[Address(RVA = "0x8548F0", Offset = "0x8548F0", VA = "0x8548F0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001647")]
			[Address(RVA = "0x8548F8", Offset = "0x8548F8", VA = "0x8548F8")]
			set
			{
			}
		}

		[Token(Token = "0x170001BE")]
		public Vector3 gravity
		{
			[Token(Token = "0x6001648")]
			[Address(RVA = "0x854900", Offset = "0x854900", VA = "0x854900")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001649")]
			[Address(RVA = "0x85490C", Offset = "0x85490C", VA = "0x85490C")]
			set
			{
			}
		}

		[Token(Token = "0x170001BF")]
		public float noiseAmplitude
		{
			[Token(Token = "0x600164A")]
			[Address(RVA = "0x854918", Offset = "0x854918", VA = "0x854918")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600164B")]
			[Address(RVA = "0x854920", Offset = "0x854920", VA = "0x854920")]
			set
			{
			}
		}

		[Token(Token = "0x170001C0")]
		public float noiseFrequency
		{
			[Token(Token = "0x600164C")]
			[Address(RVA = "0x854928", Offset = "0x854928", VA = "0x854928")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600164D")]
			[Address(RVA = "0x854930", Offset = "0x854930", VA = "0x854930")]
			set
			{
			}
		}

		[Token(Token = "0x170001C1")]
		public float noiseSpeed
		{
			[Token(Token = "0x600164E")]
			[Address(RVA = "0x854938", Offset = "0x854938", VA = "0x854938")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600164F")]
			[Address(RVA = "0x854940", Offset = "0x854940", VA = "0x854940")]
			set
			{
			}
		}

		[Token(Token = "0x6001650")]
		[Address(RVA = "0x854948", Offset = "0x854948", VA = "0x854948")]
		public void ResetSimulation()
		{
		}

		[Token(Token = "0x6001651")]
		[Address(RVA = "0x854954", Offset = "0x854954", VA = "0x854954")]
		private RenderTexture CreateSimulationBuffer()
		{
			return null;
		}

		[Token(Token = "0x6001652")]
		[Address(RVA = "0x854AC4", Offset = "0x854AC4", VA = "0x854AC4")]
		private void ReleaseObject(UnityEngine.Object o)
		{
		}

		[Token(Token = "0x6001653")]
		[Address(RVA = "0x854B9C", Offset = "0x854B9C", VA = "0x854B9C")]
		private void SetUpTemporaryObjects()
		{
		}

		[Token(Token = "0x6001654")]
		[Address(RVA = "0x854E60", Offset = "0x854E60", VA = "0x854E60")]
		private void ReleaseTemporaryObjects()
		{
		}

		[Token(Token = "0x6001655")]
		[Address(RVA = "0x854ED0", Offset = "0x854ED0", VA = "0x854ED0")]
		private void ResetSimulationState()
		{
		}

		[Token(Token = "0x6001656")]
		[Address(RVA = "0x85502C", Offset = "0x85502C", VA = "0x85502C")]
		private void UpdateSimulationParameters(Vector3 pos, Quaternion rot, float dt)
		{
		}

		[Token(Token = "0x6001657")]
		[Address(RVA = "0x855374", Offset = "0x855374", VA = "0x855374")]
		private void InvokeSimulationKernels(Vector3 pos, Quaternion rot, float dt)
		{
		}

		[Token(Token = "0x6001658")]
		[Address(RVA = "0x85558C", Offset = "0x85558C", VA = "0x85558C")]
		private int Simulate(float deltaTime)
		{
			return default(int);
		}

		[Token(Token = "0x6001659")]
		[Address(RVA = "0x8557E0", Offset = "0x8557E0", VA = "0x8557E0")]
		private void UpdateMeshFilter()
		{
		}

		[Token(Token = "0x600165A")]
		[Address(RVA = "0x85596C", Offset = "0x85596C", VA = "0x85596C")]
		private void UpdateMeshRenderer(float motionScale)
		{
		}

		[Token(Token = "0x600165B")]
		[Address(RVA = "0x855B38", Offset = "0x855B38", VA = "0x855B38")]
		private void Reset()
		{
		}

		[Token(Token = "0x600165C")]
		[Address(RVA = "0x855B44", Offset = "0x855B44", VA = "0x855B44")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600165D")]
		[Address(RVA = "0x855B48", Offset = "0x855B48", VA = "0x855B48")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x600165E")]
		[Address(RVA = "0x855CA8", Offset = "0x855CA8", VA = "0x855CA8")]
		public WigController()
		{
		}
	}
	[Token(Token = "0x200036B")]
	public class WigTemplate : ScriptableObject
	{
		[Token(Token = "0x40017C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private int _segmentCount;

		[Token(Token = "0x40017C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Texture2D _foundation;

		[Token(Token = "0x40017C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Mesh _mesh;

		[Token(Token = "0x170001C2")]
		public int segmentCount
		{
			[Token(Token = "0x600165F")]
			[Address(RVA = "0x854ABC", Offset = "0x854ABC", VA = "0x854ABC")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001C3")]
		public int filamentCount
		{
			[Token(Token = "0x6001660")]
			[Address(RVA = "0x854A88", Offset = "0x854A88", VA = "0x854A88")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001C4")]
		public Texture2D foundation
		{
			[Token(Token = "0x6001661")]
			[Address(RVA = "0x854E58", Offset = "0x854E58", VA = "0x854E58")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001C5")]
		public Mesh mesh
		{
			[Token(Token = "0x6001662")]
			[Address(RVA = "0x855964", Offset = "0x855964", VA = "0x855964")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001663")]
		[Address(RVA = "0x855D40", Offset = "0x855D40", VA = "0x855D40")]
		public void RebuildMesh()
		{
		}

		[Token(Token = "0x6001664")]
		[Address(RVA = "0x8566E0", Offset = "0x8566E0", VA = "0x8566E0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001665")]
		[Address(RVA = "0x8567A4", Offset = "0x8567A4", VA = "0x8567A4")]
		public WigTemplate()
		{
		}
	}
}
namespace VRTK
{
	[Token(Token = "0x200036C")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x63F480", Offset = "0x63F480")]
	public class MazeMultiRotateObjectControlAction : VRTK_BaseObjectControlAction
	{
		[Token(Token = "0x40017C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x652170", Offset = "0x652170")]
		public float angleMultiplier;

		[Token(Token = "0x40017C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6521A8", Offset = "0x6521A8")]
		public float rotationMultiplier;

		[Token(Token = "0x40017C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6521E0", Offset = "0x6521E0")]
		public float snapDelay;

		[Token(Token = "0x40017C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x652218", Offset = "0x652218")]
		public float snapDelayDebounce;

		[Token(Token = "0x40017C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x652250", Offset = "0x652250")]
		public float blinkTransitionSpeed;

		[Token(Token = "0x40017C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x652288", Offset = "0x652288")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x652288", Offset = "0x652288")]
		public float axisThreshold;

		[Token(Token = "0x40017C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private bool _isSnapRotate;

		[Token(Token = "0x40017CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private float[] _anglePerSnapLevels;

		[Token(Token = "0x40017CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private float[] _turnSpeeds;

		[Token(Token = "0x40017CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		protected float snapDelayTimer;

		[Token(Token = "0x40017CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private int _lastSaveVersion;

		[Token(Token = "0x40017CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private int _snapTurnSetting;

		[Token(Token = "0x40017CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		private int _smoothTurnSetting;

		[Token(Token = "0x40017D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private bool _stickActive;

		[Token(Token = "0x6001666")]
		[Address(RVA = "0xDD6140", Offset = "0xDD6140", VA = "0xDD6140", Slot = "4")]
		protected override void Process(GameObject controlledGameObject, Transform directionDevice, Vector3 axisDirection, float axis, float deadzone, bool currentlyFalling, bool modifierActive)
		{
		}

		[Token(Token = "0x6001667")]
		[Address(RVA = "0xDD6488", Offset = "0xDD6488", VA = "0xDD6488", Slot = "18")]
		protected virtual bool ValidThreshold(float axis)
		{
			return default(bool);
		}

		[Token(Token = "0x6001668")]
		[Address(RVA = "0xDD64C0", Offset = "0xDD64C0", VA = "0xDD64C0", Slot = "19")]
		protected virtual float SmoothRotate(float axis, bool modifierActive)
		{
			return default(float);
		}

		[Token(Token = "0x6001669")]
		[Address(RVA = "0xDD6564", Offset = "0xDD6564", VA = "0xDD6564", Slot = "20")]
		protected virtual float SnapRotate(float axis, bool modifierActive)
		{
			return default(float);
		}

		[Token(Token = "0x600166A")]
		[Address(RVA = "0xDD62B8", Offset = "0xDD62B8", VA = "0xDD62B8")]
		private void UpdateSavedValues()
		{
		}

		[Token(Token = "0x600166B")]
		[Address(RVA = "0xDD6628", Offset = "0xDD6628", VA = "0xDD6628")]
		public MazeMultiRotateObjectControlAction()
		{
		}
	}
	[Token(Token = "0x200036D")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x63F4B8", Offset = "0x63F4B8")]
	public class MazeSnapRotateObjectControlAction : VRTK_BaseObjectControlAction
	{
		[Token(Token = "0x40017D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6522DC", Offset = "0x6522DC")]
		public float anglePerSnap;

		[Token(Token = "0x40017D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x652314", Offset = "0x652314")]
		public float angleMultiplier;

		[Token(Token = "0x40017D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65234C", Offset = "0x65234C")]
		public float snapDelay;

		[Token(Token = "0x40017D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x652384", Offset = "0x652384")]
		public float blinkTransitionSpeed;

		[Token(Token = "0x40017D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6523BC", Offset = "0x6523BC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6523BC", Offset = "0x6523BC")]
		public float axisThreshold;

		[Token(Token = "0x40017D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private float[] _anglePerSnapLevels;

		[Token(Token = "0x40017D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		protected float snapDelayTimer;

		[Token(Token = "0x600166C")]
		[Address(RVA = "0xDD6700", Offset = "0xDD6700", VA = "0xDD6700", Slot = "4")]
		protected override void Process(GameObject controlledGameObject, Transform directionDevice, Vector3 axisDirection, float axis, float deadzone, bool currentlyFalling, bool modifierActive)
		{
		}

		[Token(Token = "0x600166D")]
		[Address(RVA = "0xDD6808", Offset = "0xDD6808", VA = "0xDD6808", Slot = "18")]
		protected virtual bool ValidThreshold(float axis)
		{
			return default(bool);
		}

		[Token(Token = "0x600166E")]
		[Address(RVA = "0xDD6840", Offset = "0xDD6840", VA = "0xDD6840", Slot = "19")]
		protected virtual float Rotate(float axis, bool modifierActive)
		{
			return default(float);
		}

		[Token(Token = "0x600166F")]
		[Address(RVA = "0xDD6944", Offset = "0xDD6944", VA = "0xDD6944")]
		public MazeSnapRotateObjectControlAction()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200036E")]
	public sealed class AxisOverrides
	{
		[Token(Token = "0x20007D7")]
		public enum ApplyOverrideType
		{
			[Token(Token = "0x4002984")]
			Never,
			[Token(Token = "0x4002985")]
			Always,
			[Token(Token = "0x4002986")]
			DigitalState,
			[Token(Token = "0x4002987")]
			AxisState,
			[Token(Token = "0x4002988")]
			SenseAxisState,
			[Token(Token = "0x4002989")]
			AxisAndSenseAxisState
		}

		[Token(Token = "0x40017D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x652410", Offset = "0x652410")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x652410", Offset = "0x652410")]
		public bool ignoreAllOverrides;

		[Token(Token = "0x40017D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x652470", Offset = "0x652470")]
		public float stateValue;

		[Token(Token = "0x40017DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6524A8", Offset = "0x6524A8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6524A8", Offset = "0x6524A8")]
		public ApplyOverrideType applyThumbOverride;

		[Token(Token = "0x40017DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x652508", Offset = "0x652508")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x652508", Offset = "0x652508")]
		public float thumbOverride;

		[Token(Token = "0x40017DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x65255C", Offset = "0x65255C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65255C", Offset = "0x65255C")]
		public ApplyOverrideType applyIndexOverride;

		[Token(Token = "0x40017DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6525BC", Offset = "0x6525BC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6525BC", Offset = "0x6525BC")]
		public float indexOverride;

		[Token(Token = "0x40017DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x652610", Offset = "0x652610")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x652610", Offset = "0x652610")]
		public ApplyOverrideType applyMiddleOverride;

		[Token(Token = "0x40017DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x652670", Offset = "0x652670")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x652670", Offset = "0x652670")]
		public float middleOverride;

		[Token(Token = "0x40017E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6526C4", Offset = "0x6526C4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6526C4", Offset = "0x6526C4")]
		public ApplyOverrideType applyRingOverride;

		[Token(Token = "0x40017E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x652724", Offset = "0x652724")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x652724", Offset = "0x652724")]
		public float ringOverride;

		[Token(Token = "0x40017E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x652778", Offset = "0x652778")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x652778", Offset = "0x652778")]
		public ApplyOverrideType applyPinkyOverride;

		[Token(Token = "0x40017E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6527D8", Offset = "0x6527D8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6527D8", Offset = "0x6527D8")]
		public float pinkyOverride;

		[Token(Token = "0x6001670")]
		[Address(RVA = "0xCC5908", Offset = "0xCC5908", VA = "0xCC5908")]
		public AxisOverrides()
		{
		}
	}
	[Token(Token = "0x200036F")]
	public class VRTK_AvatarHandController : MonoBehaviour
	{
		[Token(Token = "0x20007D8")]
		protected enum OverrideState
		{
			[Token(Token = "0x400298B")]
			NoOverride,
			[Token(Token = "0x400298C")]
			IsOverriding,
			[Token(Token = "0x400298D")]
			WasOverring,
			[Token(Token = "0x400298E")]
			KeepOverring
		}

		[Token(Token = "0x20007D9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x645CA8", Offset = "0x645CA8")]
		private sealed class <ChangePosition>d__103 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400298F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002990")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002991")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float startAxis;

			[Token(Token = "0x4002992")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public float targetAxis;

			[Token(Token = "0x4002993")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float time;

			[Token(Token = "0x4002994")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public VRTK_AvatarHandController <>4__this;

			[Token(Token = "0x4002995")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public int arrayIndex;

			[Token(Token = "0x4002996")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <elapsedTime>5__2;

			[Token(Token = "0x17000313")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6003256")]
				[Address(RVA = "0x7DF790", Offset = "0x7DF790", VA = "0x7DF790", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000314")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003258")]
				[Address(RVA = "0x7DF800", Offset = "0x7DF800", VA = "0x7DF800", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003253")]
			[Address(RVA = "0x7DF37C", Offset = "0x7DF37C", VA = "0x7DF37C")]
			[DebuggerHidden]
			public <ChangePosition>d__103(int <>1__state)
			{
			}

			[Token(Token = "0x6003254")]
			[Address(RVA = "0x7DF5F8", Offset = "0x7DF5F8", VA = "0x7DF5F8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003255")]
			[Address(RVA = "0x7DF5FC", Offset = "0x7DF5FC", VA = "0x7DF5FC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003257")]
			[Address(RVA = "0x7DF798", Offset = "0x7DF798", VA = "0x7DF798", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40017E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x65282C", Offset = "0x65282C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65282C", Offset = "0x65282C")]
		public SDK_BaseController.ControllerType controllerType;

		[Token(Token = "0x40017E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65288C", Offset = "0x65288C")]
		public bool setFingersForControllerType;

		[Token(Token = "0x40017E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6528C4", Offset = "0x6528C4")]
		public bool mirrorModel;

		[Token(Token = "0x40017E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6528FC", Offset = "0x6528FC")]
		public float animationSnapSpeed;

		[Token(Token = "0x40017E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x652934", Offset = "0x652934")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x652934", Offset = "0x652934")]
		public VRTK_ControllerEvents.ButtonAlias thumbButton;

		[Token(Token = "0x40017E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x652994", Offset = "0x652994")]
		public VRTK_ControllerEvents.ButtonAlias indexButton;

		[Token(Token = "0x40017EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6529CC", Offset = "0x6529CC")]
		public VRTK_ControllerEvents.ButtonAlias middleButton;

		[Token(Token = "0x40017EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x652A04", Offset = "0x652A04")]
		public VRTK_ControllerEvents.ButtonAlias ringButton;

		[Token(Token = "0x40017EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x652A3C", Offset = "0x652A3C")]
		public VRTK_ControllerEvents.ButtonAlias pinkyButton;

		[Token(Token = "0x40017ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x652A74", Offset = "0x652A74")]
		public VRTK_ControllerEvents.ButtonAlias threeFingerButton;

		[Token(Token = "0x40017EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x652AAC", Offset = "0x652AAC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x652AAC", Offset = "0x652AAC")]
		public SDK_BaseController.ButtonTypes thumbAxisButton;

		[Token(Token = "0x40017EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x652B0C", Offset = "0x652B0C")]
		public SDK_BaseController.ButtonTypes indexAxisButton;

		[Token(Token = "0x40017F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x652B44", Offset = "0x652B44")]
		public SDK_BaseController.ButtonTypes middleAxisButton;

		[Token(Token = "0x40017F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x652B7C", Offset = "0x652B7C")]
		public SDK_BaseController.ButtonTypes ringAxisButton;

		[Token(Token = "0x40017F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x652BB4", Offset = "0x652BB4")]
		public SDK_BaseController.ButtonTypes pinkyAxisButton;

		[Token(Token = "0x40017F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x652BEC", Offset = "0x652BEC")]
		public SDK_BaseController.ButtonTypes threeFingerAxisButton;

		[Token(Token = "0x40017F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x652C24", Offset = "0x652C24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x652C24", Offset = "0x652C24")]
		public VRTK_ControllerEvents.AxisType thumbState;

		[Token(Token = "0x40017F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public VRTK_ControllerEvents.AxisType indexState;

		[Token(Token = "0x40017F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public VRTK_ControllerEvents.AxisType middleState;

		[Token(Token = "0x40017F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public VRTK_ControllerEvents.AxisType ringState;

		[Token(Token = "0x40017F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public VRTK_ControllerEvents.AxisType pinkyState;

		[Token(Token = "0x40017F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public VRTK_ControllerEvents.AxisType threeFingerState;

		[Token(Token = "0x40017FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x652C84", Offset = "0x652C84")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x652C84", Offset = "0x652C84")]
		public AxisOverrides nearTouchOverrides;

		[Token(Token = "0x40017FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x652CE4", Offset = "0x652CE4")]
		public AxisOverrides touchOverrides;

		[Token(Token = "0x40017FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x652D1C", Offset = "0x652D1C")]
		public AxisOverrides grabOverrides;

		[Token(Token = "0x40017FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x652D54", Offset = "0x652D54")]
		public AxisOverrides useOverrides;

		[Token(Token = "0x40017FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x652D8C", Offset = "0x652D8C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x652D8C", Offset = "0x652D8C")]
		public Transform handModel;

		[Token(Token = "0x40017FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x652DEC", Offset = "0x652DEC")]
		public VRTK_ControllerEvents controllerEvents;

		[Token(Token = "0x4001800")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x652E24", Offset = "0x652E24")]
		public VRTK_InteractNearTouch interactNearTouch;

		[Token(Token = "0x4001801")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x652E5C", Offset = "0x652E5C")]
		public VRTK_InteractTouch interactTouch;

		[Token(Token = "0x4001802")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x652E94", Offset = "0x652E94")]
		public VRTK_InteractGrab interactGrab;

		[Token(Token = "0x4001803")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x652ECC", Offset = "0x652ECC")]
		public VRTK_InteractUse interactUse;

		[Token(Token = "0x4001804")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		protected Animator animator;

		[Token(Token = "0x4001805")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		protected bool[] fingerStates;

		[Token(Token = "0x4001806")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		protected bool[] fingerChangeStates;

		[Token(Token = "0x4001807")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		protected float[] fingerAxis;

		[Token(Token = "0x4001808")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		protected float[] fingerRawAxis;

		[Token(Token = "0x4001809")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		protected float[] fingerUntouchedAxis;

		[Token(Token = "0x400180A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		protected float[] fingerSaveAxis;

		[Token(Token = "0x400180B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		protected float[] fingerForceAxis;

		[Token(Token = "0x400180C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		protected OverrideState[] overrideAxisValues;

		[Token(Token = "0x400180D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		protected VRTK_ControllerEvents.AxisType[] axisTypes;

		[Token(Token = "0x400180E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		protected Coroutine[] fingerAnimationRoutine;

		[Token(Token = "0x400180F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		protected VRTK_ControllerEvents.ButtonAlias savedThumbButtonState;

		[Token(Token = "0x4001810")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		protected VRTK_ControllerEvents.ButtonAlias savedIndexButtonState;

		[Token(Token = "0x4001811")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		protected VRTK_ControllerEvents.ButtonAlias savedMiddleButtonState;

		[Token(Token = "0x4001812")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		protected VRTK_ControllerEvents.ButtonAlias savedRingButtonState;

		[Token(Token = "0x4001813")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		protected VRTK_ControllerEvents.ButtonAlias savedPinkyButtonState;

		[Token(Token = "0x4001814")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
		protected VRTK_ControllerEvents.ButtonAlias savedThreeFingerButtonState;

		[Token(Token = "0x4001815")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		protected SDK_BaseController.ButtonTypes savedThumbAxisButtonState;

		[Token(Token = "0x4001816")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
		protected SDK_BaseController.ButtonTypes savedIndexAxisButtonState;

		[Token(Token = "0x4001817")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		protected SDK_BaseController.ButtonTypes savedMiddleAxisButtonState;

		[Token(Token = "0x4001818")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
		protected SDK_BaseController.ButtonTypes savedRingAxisButtonState;

		[Token(Token = "0x4001819")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		protected SDK_BaseController.ButtonTypes savedPinkyAxisButtonState;

		[Token(Token = "0x400181A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
		protected SDK_BaseController.ButtonTypes savedThreeFingerAxisButtonState;

		[Token(Token = "0x400181B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		protected VRTK_ControllerReference controllerReference;

		[Token(Token = "0x6001671")]
		[Address(RVA = "0x7DB6B0", Offset = "0x7DB6B0", VA = "0x7DB6B0", Slot = "4")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6001672")]
		[Address(RVA = "0x7DB8FC", Offset = "0x7DB8FC", VA = "0x7DB8FC", Slot = "5")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x6001673")]
		[Address(RVA = "0x7DB9C8", Offset = "0x7DB9C8", VA = "0x7DB9C8", Slot = "6")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x6001674")]
		[Address(RVA = "0x7DBAF0", Offset = "0x7DBAF0", VA = "0x7DBAF0", Slot = "7")]
		protected virtual void SubscribeButtonEvent(VRTK_ControllerEvents.ButtonAlias buttonType, ref VRTK_ControllerEvents.ButtonAlias saveType, ControllerInteractionEventHandler eventHandler)
		{
		}

		[Token(Token = "0x6001675")]
		[Address(RVA = "0x7DBB90", Offset = "0x7DBB90", VA = "0x7DBB90", Slot = "8")]
		protected virtual void UnsubscribeButtonEvent(VRTK_ControllerEvents.ButtonAlias buttonType, ControllerInteractionEventHandler eventHandler)
		{
		}

		[Token(Token = "0x6001676")]
		[Address(RVA = "0x7DBC2C", Offset = "0x7DBC2C", VA = "0x7DBC2C", Slot = "9")]
		protected virtual void SubscribeButtonAxisEvent(SDK_BaseController.ButtonTypes buttonType, ref SDK_BaseController.ButtonTypes saveType, VRTK_ControllerEvents.AxisType axisType, ControllerInteractionEventHandler eventHandler)
		{
		}

		[Token(Token = "0x6001677")]
		[Address(RVA = "0x7DBC88", Offset = "0x7DBC88", VA = "0x7DBC88", Slot = "10")]
		protected virtual void UnsubscribeButtonAxisEvent(SDK_BaseController.ButtonTypes buttonType, VRTK_ControllerEvents.AxisType axisType, ControllerInteractionEventHandler eventHandler)
		{
		}

		[Token(Token = "0x6001678")]
		[Address(RVA = "0x7DBCE0", Offset = "0x7DBCE0", VA = "0x7DBCE0", Slot = "11")]
		protected virtual void SubscribeEvents()
		{
		}

		[Token(Token = "0x6001679")]
		[Address(RVA = "0x7DC3CC", Offset = "0x7DC3CC", VA = "0x7DC3CC", Slot = "12")]
		protected virtual void UnsubscribeEvents()
		{
		}

		[Token(Token = "0x600167A")]
		[Address(RVA = "0x7DCA4C", Offset = "0x7DCA4C", VA = "0x7DCA4C", Slot = "13")]
		protected virtual void SetFingerEvent(int fingerIndex, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x600167B")]
		[Address(RVA = "0x7DCB3C", Offset = "0x7DCB3C", VA = "0x7DCB3C", Slot = "14")]
		protected virtual void SetFingerAxisEvent(int fingerIndex, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x600167C")]
		[Address(RVA = "0x7DCC1C", Offset = "0x7DCC1C", VA = "0x7DCC1C", Slot = "15")]
		protected virtual void DoThumbEvent(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x600167D")]
		[Address(RVA = "0x7DCC74", Offset = "0x7DCC74", VA = "0x7DCC74", Slot = "16")]
		protected virtual void DoIndexEvent(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x600167E")]
		[Address(RVA = "0x7DCCCC", Offset = "0x7DCCCC", VA = "0x7DCCCC", Slot = "17")]
		protected virtual void DoMiddleEvent(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x600167F")]
		[Address(RVA = "0x7DCD24", Offset = "0x7DCD24", VA = "0x7DCD24", Slot = "18")]
		protected virtual void DoRingEvent(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001680")]
		[Address(RVA = "0x7DCD7C", Offset = "0x7DCD7C", VA = "0x7DCD7C", Slot = "19")]
		protected virtual void DoPinkyEvent(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001681")]
		[Address(RVA = "0x7DCDD4", Offset = "0x7DCDD4", VA = "0x7DCDD4", Slot = "20")]
		protected virtual void DoThreeFingerEvent(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001682")]
		[Address(RVA = "0x7DCEC4", Offset = "0x7DCEC4", VA = "0x7DCEC4", Slot = "21")]
		protected virtual void DoThumbAxisEvent(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001683")]
		[Address(RVA = "0x7DCF1C", Offset = "0x7DCF1C", VA = "0x7DCF1C", Slot = "22")]
		protected virtual void DoIndexAxisEvent(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001684")]
		[Address(RVA = "0x7DCF74", Offset = "0x7DCF74", VA = "0x7DCF74", Slot = "23")]
		protected virtual void DoMiddleAxisEvent(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001685")]
		[Address(RVA = "0x7DCFCC", Offset = "0x7DCFCC", VA = "0x7DCFCC", Slot = "24")]
		protected virtual void DoRingAxisEvent(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001686")]
		[Address(RVA = "0x7DD024", Offset = "0x7DD024", VA = "0x7DD024", Slot = "25")]
		protected virtual void DoPinkyAxisEvent(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001687")]
		[Address(RVA = "0x7DD07C", Offset = "0x7DD07C", VA = "0x7DD07C", Slot = "26")]
		protected virtual void DoThreeFingerAxisEvent(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001688")]
		[Address(RVA = "0x7DD16C", Offset = "0x7DD16C", VA = "0x7DD16C", Slot = "27")]
		protected virtual bool IsButtonPressed(int arrayIndex)
		{
			return default(bool);
		}

		[Token(Token = "0x6001689")]
		[Address(RVA = "0x7DD2CC", Offset = "0x7DD2CC", VA = "0x7DD2CC", Slot = "28")]
		protected virtual void SaveFingerAxis(int arrayIndex, float updateAxis)
		{
		}

		[Token(Token = "0x600168A")]
		[Address(RVA = "0x7DD3D0", Offset = "0x7DD3D0", VA = "0x7DD3D0", Slot = "29")]
		protected virtual void HandleOverrideOn(bool ignoreAllOverrides, float[] givenFingerAxis, bool[] overridePermissions, float[] overrideValues)
		{
		}

		[Token(Token = "0x600168B")]
		[Address(RVA = "0x7DD64C", Offset = "0x7DD64C", VA = "0x7DD64C", Slot = "30")]
		protected virtual void HandleOverrideOff(bool ignoreAllOverrides, bool[] overridePermissions, bool keepOverriding)
		{
		}

		[Token(Token = "0x600168C")]
		[Address(RVA = "0x7DD83C", Offset = "0x7DD83C", VA = "0x7DD83C", Slot = "31")]
		protected virtual float CorrectOverrideValue(float givenOverride)
		{
			return default(float);
		}

		[Token(Token = "0x600168D")]
		[Address(RVA = "0x7DD850", Offset = "0x7DD850", VA = "0x7DD850", Slot = "32")]
		protected virtual bool ApplyFingerOverrides(AxisOverrides.ApplyOverrideType overrideType, int arrayIndex)
		{
			return default(bool);
		}

		[Token(Token = "0x600168E")]
		[Address(RVA = "0x7DD9E0", Offset = "0x7DD9E0", VA = "0x7DD9E0", Slot = "33")]
		protected virtual bool[] GetOverridePermissions(AxisOverrides overrideType)
		{
			return null;
		}

		[Token(Token = "0x600168F")]
		[Address(RVA = "0x7DDBA0", Offset = "0x7DDBA0", VA = "0x7DDBA0", Slot = "34")]
		protected virtual float[] GetOverrideValues(AxisOverrides overrideType)
		{
			return null;
		}

		[Token(Token = "0x6001690")]
		[Address(RVA = "0x7DDD50", Offset = "0x7DDD50", VA = "0x7DDD50", Slot = "35")]
		protected virtual void SetAnimatorStateOn(string state, AxisOverrides overrides)
		{
		}

		[Token(Token = "0x6001691")]
		[Address(RVA = "0x7DDDC4", Offset = "0x7DDDC4", VA = "0x7DDDC4", Slot = "36")]
		protected virtual void SetAnimatorStateOff(string state)
		{
		}

		[Token(Token = "0x6001692")]
		[Address(RVA = "0x7DDE00", Offset = "0x7DDE00", VA = "0x7DDE00", Slot = "37")]
		protected virtual void DoControllerNearTouch(object sender, ObjectInteractEventArgs e)
		{
		}

		[Token(Token = "0x6001693")]
		[Address(RVA = "0x7DDF78", Offset = "0x7DDF78", VA = "0x7DDF78", Slot = "38")]
		protected virtual void DoControllerNearUntouch(object sender, ObjectInteractEventArgs e)
		{
		}

		[Token(Token = "0x6001694")]
		[Address(RVA = "0x7DE1EC", Offset = "0x7DE1EC", VA = "0x7DE1EC", Slot = "39")]
		protected virtual void DoControllerTouch(object sender, ObjectInteractEventArgs e)
		{
		}

		[Token(Token = "0x6001695")]
		[Address(RVA = "0x7DE2C8", Offset = "0x7DE2C8", VA = "0x7DE2C8", Slot = "40")]
		protected virtual void DoControllerUntouch(object sender, ObjectInteractEventArgs e)
		{
		}

		[Token(Token = "0x6001696")]
		[Address(RVA = "0x7DE4A8", Offset = "0x7DE4A8", VA = "0x7DE4A8", Slot = "41")]
		protected virtual void DoControllerGrab(object sender, ObjectInteractEventArgs e)
		{
		}

		[Token(Token = "0x6001697")]
		[Address(RVA = "0x7DE658", Offset = "0x7DE658", VA = "0x7DE658", Slot = "42")]
		protected virtual void DoControllerUngrab(object sender, ObjectInteractEventArgs e)
		{
		}

		[Token(Token = "0x6001698")]
		[Address(RVA = "0x7DE700", Offset = "0x7DE700", VA = "0x7DE700", Slot = "43")]
		protected virtual void DoControllerUse(object sender, ObjectInteractEventArgs e)
		{
		}

		[Token(Token = "0x6001699")]
		[Address(RVA = "0x7DE888", Offset = "0x7DE888", VA = "0x7DE888", Slot = "44")]
		protected virtual void DoControllerUnuse(object sender, ObjectInteractEventArgs e)
		{
		}

		[Token(Token = "0x600169A")]
		[Address(RVA = "0x7DE934", Offset = "0x7DE934", VA = "0x7DE934", Slot = "45")]
		protected virtual void DetectController()
		{
		}

		[Token(Token = "0x600169B")]
		[Address(RVA = "0x7DEA80", Offset = "0x7DEA80", VA = "0x7DEA80", Slot = "46")]
		protected virtual void MirrorHand()
		{
		}

		[Token(Token = "0x600169C")]
		[Address(RVA = "0x7DEC20", Offset = "0x7DEC20", VA = "0x7DEC20", Slot = "47")]
		protected virtual void SetOverrideValue(int stateIndex, ref OverrideState[] overrideState, OverrideState stateValue)
		{
		}

		[Token(Token = "0x600169D")]
		[Address(RVA = "0x7DEC80", Offset = "0x7DEC80", VA = "0x7DEC80", Slot = "48")]
		protected virtual void ProcessFinger(VRTK_ControllerEvents.AxisType state, int arrayIndex)
		{
		}

		[Token(Token = "0x600169E")]
		[Address(RVA = "0x7DF1E0", Offset = "0x7DF1E0", VA = "0x7DF1E0", Slot = "49")]
		protected virtual void LerpChangePosition(int arrayIndex, float startPosition, float targetPosition, float speed)
		{
		}

		[Token(Token = "0x600169F")]
		[Address(RVA = "0x7DF294", Offset = "0x7DF294", VA = "0x7DF294", Slot = "50")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x66B368", Offset = "0x66B368")]
		protected virtual IEnumerator ChangePosition(int arrayIndex, float startAxis, float targetAxis, float time)
		{
			return null;
		}

		[Token(Token = "0x60016A0")]
		[Address(RVA = "0x7DF3A8", Offset = "0x7DF3A8", VA = "0x7DF3A8", Slot = "51")]
		protected virtual void SetFingerPosition(int arrayIndex, float axis)
		{
		}

		[Token(Token = "0x60016A1")]
		[Address(RVA = "0x7DF4A8", Offset = "0x7DF4A8", VA = "0x7DF4A8")]
		public VRTK_AvatarHandController()
		{
		}
	}
	[Token(Token = "0x2000370")]
	public class VRTK_ConsoleViewer : MonoBehaviour
	{
		[Token(Token = "0x400181C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x652F04", Offset = "0x652F04")]
		public int fontSize;

		[Token(Token = "0x400181D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x652F3C", Offset = "0x652F3C")]
		public Color infoMessage;

		[Token(Token = "0x400181E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x652F74", Offset = "0x652F74")]
		public Color assertMessage;

		[Token(Token = "0x400181F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x652FAC", Offset = "0x652FAC")]
		public Color warningMessage;

		[Token(Token = "0x4001820")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x652FE4", Offset = "0x652FE4")]
		public Color errorMessage;

		[Token(Token = "0x4001821")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65301C", Offset = "0x65301C")]
		public Color exceptionMessage;

		[Token(Token = "0x4001822")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		protected Dictionary<LogType, Color> logTypeColors;

		[Token(Token = "0x4001823")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		protected ScrollRect scrollWindow;

		[Token(Token = "0x4001824")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		protected RectTransform consoleRect;

		[Token(Token = "0x4001825")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		protected Text consoleOutput;

		[Token(Token = "0x4001826")]
		protected const string NEWLINE = "\n";

		[Token(Token = "0x4001827")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		protected int lineBuffer;

		[Token(Token = "0x4001828")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		protected int currentBuffer;

		[Token(Token = "0x4001829")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		protected string lastMessage;

		[Token(Token = "0x400182A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		protected bool collapseLog;

		[Token(Token = "0x60016A2")]
		[Address(RVA = "0xB06D54", Offset = "0xB06D54", VA = "0xB06D54", Slot = "4")]
		public virtual void SetCollapse(bool state)
		{
		}

		[Token(Token = "0x60016A3")]
		[Address(RVA = "0xB06D60", Offset = "0xB06D60", VA = "0xB06D60", Slot = "5")]
		public virtual void ClearLog()
		{
		}

		[Token(Token = "0x60016A4")]
		[Address(RVA = "0xB06DE4", Offset = "0xB06DE4", VA = "0xB06DE4", Slot = "6")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x60016A5")]
		[Address(RVA = "0xB07098", Offset = "0xB07098", VA = "0xB07098", Slot = "7")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x60016A6")]
		[Address(RVA = "0xB07118", Offset = "0xB07118", VA = "0xB07118", Slot = "8")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x60016A7")]
		[Address(RVA = "0xB071F4", Offset = "0xB071F4", VA = "0xB071F4", Slot = "9")]
		protected virtual string GetMessage(string message, LogType type)
		{
			return null;
		}

		[Token(Token = "0x60016A8")]
		[Address(RVA = "0xB0742C", Offset = "0xB0742C", VA = "0xB0742C", Slot = "10")]
		protected virtual void HandleLog(string message, string stackTrace, LogType type)
		{
		}

		[Token(Token = "0x60016A9")]
		[Address(RVA = "0xB076D0", Offset = "0xB076D0", VA = "0xB076D0")]
		public VRTK_ConsoleViewer()
		{
		}
	}
	[Token(Token = "0x2000371")]
	public struct ControllerRigidbodyActivatorEventArgs
	{
		[Token(Token = "0x400182B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VRTK_InteractTouch touchingObject;
	}
	[Token(Token = "0x2000372")]
	public delegate void ControllerRigidbodyActivatorEventHandler(object sender, ControllerRigidbodyActivatorEventArgs e);
	[Token(Token = "0x2000373")]
	public class VRTK_ControllerRigidbodyActivator : MonoBehaviour
	{
		[Token(Token = "0x400182C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x653054", Offset = "0x653054")]
		public bool isEnabled;

		[Token(Token = "0x400182D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65308C", Offset = "0x65308C")]
		public bool activateInteractTouch;

		[Token(Token = "0x400182E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6530C4", Offset = "0x6530C4")]
		public bool activateTrackedCollider;

		[Token(Token = "0x14000073")]
		public event ControllerRigidbodyActivatorEventHandler ControllerRigidbodyOn
		{
			[Token(Token = "0x60016AE")]
			[Address(RVA = "0xA1F060", Offset = "0xA1F060", VA = "0xA1F060")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66B3CC", Offset = "0x66B3CC")]
			add
			{
			}
			[Token(Token = "0x60016AF")]
			[Address(RVA = "0xA1F14C", Offset = "0xA1F14C", VA = "0xA1F14C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66B3DC", Offset = "0x66B3DC")]
			remove
			{
			}
		}

		[Token(Token = "0x14000074")]
		public event ControllerRigidbodyActivatorEventHandler ControllerRigidbodyOff
		{
			[Token(Token = "0x60016B0")]
			[Address(RVA = "0xA1F238", Offset = "0xA1F238", VA = "0xA1F238")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66B3EC", Offset = "0x66B3EC")]
			add
			{
			}
			[Token(Token = "0x60016B1")]
			[Address(RVA = "0xA1F324", Offset = "0xA1F324", VA = "0xA1F324")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66B3FC", Offset = "0x66B3FC")]
			remove
			{
			}
		}

		[Token(Token = "0x60016B2")]
		[Address(RVA = "0xA1F410", Offset = "0xA1F410", VA = "0xA1F410", Slot = "4")]
		public virtual void OnControllerRigidbodyOn(ControllerRigidbodyActivatorEventArgs e)
		{
		}

		[Token(Token = "0x60016B3")]
		[Address(RVA = "0xA1F434", Offset = "0xA1F434", VA = "0xA1F434", Slot = "5")]
		public virtual void OnControllerRigidbodyOff(ControllerRigidbodyActivatorEventArgs e)
		{
		}

		[Token(Token = "0x60016B4")]
		[Address(RVA = "0xA1F458", Offset = "0xA1F458", VA = "0xA1F458", Slot = "6")]
		protected virtual void OnTriggerEnter(Collider collider)
		{
		}

		[Token(Token = "0x60016B5")]
		[Address(RVA = "0xA1F468", Offset = "0xA1F468", VA = "0xA1F468", Slot = "7")]
		protected virtual void OnTriggerExit(Collider collider)
		{
		}

		[Token(Token = "0x60016B6")]
		[Address(RVA = "0xA1F478", Offset = "0xA1F478", VA = "0xA1F478", Slot = "8")]
		protected virtual void ToggleRigidbody(Collider collider, bool state)
		{
		}

		[Token(Token = "0x60016B7")]
		[Address(RVA = "0xA1F63C", Offset = "0xA1F63C", VA = "0xA1F63C", Slot = "9")]
		protected virtual void EmitEvent(bool state, VRTK_InteractTouch touch)
		{
		}

		[Token(Token = "0x60016B8")]
		[Address(RVA = "0xA1F65C", Offset = "0xA1F65C", VA = "0xA1F65C")]
		public VRTK_ControllerRigidbodyActivator()
		{
		}
	}
	[Token(Token = "0x2000374")]
	public struct ControllerTooltipsEventArgs
	{
		[Token(Token = "0x4001831")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VRTK_ControllerTooltips.TooltipButtons element;
	}
	[Token(Token = "0x2000375")]
	public delegate void ControllerTooltipsEventHandler(object sender, ControllerTooltipsEventArgs e);
	[Token(Token = "0x2000376")]
	public class VRTK_ControllerTooltips : MonoBehaviour
	{
		[Token(Token = "0x20007DA")]
		public enum TooltipButtons
		{
			[Token(Token = "0x4002998")]
			None,
			[Token(Token = "0x4002999")]
			TriggerTooltip,
			[Token(Token = "0x400299A")]
			GripTooltip,
			[Token(Token = "0x400299B")]
			TouchpadTooltip,
			[Token(Token = "0x400299C")]
			TouchpadTwoTooltip,
			[Token(Token = "0x400299D")]
			ButtonOneTooltip,
			[Token(Token = "0x400299E")]
			ButtonTwoTooltip,
			[Token(Token = "0x400299F")]
			StartMenuTooltip
		}

		[Token(Token = "0x4001832")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x65311C", Offset = "0x65311C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65311C", Offset = "0x65311C")]
		public string triggerText;

		[Token(Token = "0x4001833")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65317C", Offset = "0x65317C")]
		public string gripText;

		[Token(Token = "0x4001834")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6531B4", Offset = "0x6531B4")]
		public string touchpadText;

		[Token(Token = "0x4001835")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6531EC", Offset = "0x6531EC")]
		public string touchpadTwoText;

		[Token(Token = "0x4001836")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x653224", Offset = "0x653224")]
		public string buttonOneText;

		[Token(Token = "0x4001837")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65325C", Offset = "0x65325C")]
		public string buttonTwoText;

		[Token(Token = "0x4001838")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x653294", Offset = "0x653294")]
		public string startMenuText;

		[Token(Token = "0x4001839")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6532CC", Offset = "0x6532CC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6532CC", Offset = "0x6532CC")]
		public Color tipBackgroundColor;

		[Token(Token = "0x400183A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65332C", Offset = "0x65332C")]
		public Color tipTextColor;

		[Token(Token = "0x400183B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x653364", Offset = "0x653364")]
		public Color tipLineColor;

		[Token(Token = "0x400183C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x65339C", Offset = "0x65339C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65339C", Offset = "0x65339C")]
		public Transform trigger;

		[Token(Token = "0x400183D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6533FC", Offset = "0x6533FC")]
		public Transform grip;

		[Token(Token = "0x400183E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x653434", Offset = "0x653434")]
		public Transform touchpad;

		[Token(Token = "0x400183F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65346C", Offset = "0x65346C")]
		public Transform touchpadTwo;

		[Token(Token = "0x4001840")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6534A4", Offset = "0x6534A4")]
		public Transform buttonOne;

		[Token(Token = "0x4001841")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6534DC", Offset = "0x6534DC")]
		public Transform buttonTwo;

		[Token(Token = "0x4001842")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x653514", Offset = "0x653514")]
		public Transform startMenu;

		[Token(Token = "0x4001843")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x65354C", Offset = "0x65354C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65354C", Offset = "0x65354C")]
		public VRTK_ControllerEvents controllerEvents;

		[Token(Token = "0x4001844")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6535AC", Offset = "0x6535AC")]
		public VRTK_HeadsetControllerAware headsetControllerAware;

		[Token(Token = "0x4001845")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6535E4", Offset = "0x6535E4")]
		public bool hideWhenNotInView;

		[Token(Token = "0x4001846")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x65361C", Offset = "0x65361C")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x65361C", Offset = "0x65361C")]
		[ObsoleteInspector]
		public int retryInitMaxTries;

		[Token(Token = "0x4001847")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x65368C", Offset = "0x65368C")]
		[ObsoleteInspector]
		public float retryInitCounter;

		[Token(Token = "0x400184A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		protected TooltipButtons[] availableButtons;

		[Token(Token = "0x400184B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		protected VRTK_ObjectTooltip[] buttonTooltips;

		[Token(Token = "0x400184C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		protected bool[] tooltipStates;

		[Token(Token = "0x400184D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		protected bool overallState;

		[Token(Token = "0x400184E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		protected VRTK_TrackedController trackedController;

		[Token(Token = "0x14000075")]
		public event ControllerTooltipsEventHandler ControllerTooltipOn
		{
			[Token(Token = "0x60016BD")]
			[Address(RVA = "0xA1F66C", Offset = "0xA1F66C", VA = "0xA1F66C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66B40C", Offset = "0x66B40C")]
			add
			{
			}
			[Token(Token = "0x60016BE")]
			[Address(RVA = "0xA1F758", Offset = "0xA1F758", VA = "0xA1F758")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66B41C", Offset = "0x66B41C")]
			remove
			{
			}
		}

		[Token(Token = "0x14000076")]
		public event ControllerTooltipsEventHandler ControllerTooltipOff
		{
			[Token(Token = "0x60016BF")]
			[Address(RVA = "0xA1F844", Offset = "0xA1F844", VA = "0xA1F844")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66B42C", Offset = "0x66B42C")]
			add
			{
			}
			[Token(Token = "0x60016C0")]
			[Address(RVA = "0xA1F930", Offset = "0xA1F930", VA = "0xA1F930")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66B43C", Offset = "0x66B43C")]
			remove
			{
			}
		}

		[Token(Token = "0x60016C1")]
		[Address(RVA = "0xA1FA1C", Offset = "0xA1FA1C", VA = "0xA1FA1C", Slot = "4")]
		public virtual void OnControllerTooltipOn(ControllerTooltipsEventArgs e)
		{
		}

		[Token(Token = "0x60016C2")]
		[Address(RVA = "0xA1FA3C", Offset = "0xA1FA3C", VA = "0xA1FA3C", Slot = "5")]
		public virtual void OnControllerTooltipOff(ControllerTooltipsEventArgs e)
		{
		}

		[Token(Token = "0x60016C3")]
		[Address(RVA = "0xA1FA5C", Offset = "0xA1FA5C", VA = "0xA1FA5C", Slot = "6")]
		public virtual void ResetTooltip()
		{
		}

		[Token(Token = "0x60016C4")]
		[Address(RVA = "0xA1FA6C", Offset = "0xA1FA6C", VA = "0xA1FA6C", Slot = "7")]
		public virtual void UpdateText(TooltipButtons element, string newText)
		{
		}

		[Token(Token = "0x60016C5")]
		[Address(RVA = "0xA1FAD0", Offset = "0xA1FAD0", VA = "0xA1FAD0", Slot = "8")]
		public virtual void ToggleTips(bool state, TooltipButtons element = TooltipButtons.None)
		{
		}

		[Token(Token = "0x60016C6")]
		[Address(RVA = "0xA1FCF0", Offset = "0xA1FCF0", VA = "0xA1FCF0", Slot = "9")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x60016C7")]
		[Address(RVA = "0xA1FD6C", Offset = "0xA1FD6C", VA = "0xA1FD6C", Slot = "10")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x60016C8")]
		[Address(RVA = "0xA1FE38", Offset = "0xA1FE38", VA = "0xA1FE38", Slot = "11")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x60016C9")]
		[Address(RVA = "0xA2010C", Offset = "0xA2010C", VA = "0xA2010C", Slot = "12")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x60016CA")]
		[Address(RVA = "0xA20174", Offset = "0xA20174", VA = "0xA20174", Slot = "13")]
		protected virtual void EmitEvent(bool state, TooltipButtons element)
		{
		}

		[Token(Token = "0x60016CB")]
		[Address(RVA = "0xA20194", Offset = "0xA20194", VA = "0xA20194", Slot = "14")]
		protected virtual void InitButtonsArray()
		{
		}

		[Token(Token = "0x60016CC")]
		[Address(RVA = "0xA203F4", Offset = "0xA203F4", VA = "0xA203F4", Slot = "15")]
		protected virtual void InitListeners()
		{
		}

		[Token(Token = "0x60016CD")]
		[Address(RVA = "0xA2075C", Offset = "0xA2075C", VA = "0xA2075C", Slot = "16")]
		protected virtual void DoControllerEnabled(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60016CE")]
		[Address(RVA = "0xA20894", Offset = "0xA20894", VA = "0xA20894", Slot = "17")]
		protected virtual void DoControllerVisible(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60016CF")]
		[Address(RVA = "0xA2096C", Offset = "0xA2096C", VA = "0xA2096C", Slot = "18")]
		protected virtual void DoControllerInvisible(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60016D0")]
		[Address(RVA = "0xA20A74", Offset = "0xA20A74", VA = "0xA20A74", Slot = "19")]
		protected virtual void DoControllerModelAvailable(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60016D1")]
		[Address(RVA = "0xA20A80", Offset = "0xA20A80", VA = "0xA20A80", Slot = "20")]
		protected virtual void TrackedControllerDoControllerModelAvailable(object sender, VRTKTrackedControllerEventArgs e)
		{
		}

		[Token(Token = "0x60016D2")]
		[Address(RVA = "0xA20A8C", Offset = "0xA20A8C", VA = "0xA20A8C", Slot = "21")]
		protected virtual void DoGlanceEnterController(object sender, HeadsetControllerAwareEventArgs e)
		{
		}

		[Token(Token = "0x60016D3")]
		[Address(RVA = "0xA20B94", Offset = "0xA20B94", VA = "0xA20B94", Slot = "22")]
		protected virtual void DoGlanceExitController(object sender, HeadsetControllerAwareEventArgs e)
		{
		}

		[Token(Token = "0x60016D4")]
		[Address(RVA = "0xA20C9C", Offset = "0xA20C9C", VA = "0xA20C9C", Slot = "23")]
		protected virtual void InitialiseTips()
		{
		}

		[Token(Token = "0x60016D5")]
		[Address(RVA = "0xA211A0", Offset = "0xA211A0", VA = "0xA211A0", Slot = "24")]
		protected virtual Transform GetTransform(Transform setTransform, SDK_BaseController.ControllerElements findElement)
		{
			return null;
		}

		[Token(Token = "0x60016D6")]
		[Address(RVA = "0xA213D8", Offset = "0xA213D8", VA = "0xA213D8")]
		public VRTK_ControllerTooltips()
		{
		}
	}
	[Token(Token = "0x2000377")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x63F4F0", Offset = "0x63F4F0")]
	public class VRTK_DesktopCamera : MonoBehaviour
	{
		[Token(Token = "0x400184F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6536F8", Offset = "0x6536F8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6536F8", Offset = "0x6536F8")]
		public Camera desktopCamera;

		[Token(Token = "0x4001850")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x653758", Offset = "0x653758")]
		public VRTK_ObjectFollow followScript;

		[Token(Token = "0x4001851")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x653790", Offset = "0x653790")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x653790", Offset = "0x653790")]
		public RawImage headsetImage;

		[Token(Token = "0x4001852")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6537F0", Offset = "0x6537F0")]
		public RenderTexture headsetRenderTexture;

		[Token(Token = "0x4001853")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected Camera headsetCameraCopy;

		[Token(Token = "0x4001854")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected VRTK_TransformFollow headsetCameraTransformFollow;

		[Token(Token = "0x60016D7")]
		[Address(RVA = "0xA26DA8", Offset = "0xA26DA8", VA = "0xA26DA8", Slot = "4")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x60016D8")]
		[Address(RVA = "0xA272E4", Offset = "0xA272E4", VA = "0xA272E4", Slot = "5")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x60016D9")]
		[Address(RVA = "0xA27428", Offset = "0xA27428", VA = "0xA27428", Slot = "6")]
		protected virtual void LoadedSetupChanged(VRTK_SDKManager sender, VRTK_SDKManager.LoadedSetupChangeEventArgs e)
		{
		}

		[Token(Token = "0x60016DA")]
		[Address(RVA = "0xA27434", Offset = "0xA27434", VA = "0xA27434", Slot = "7")]
		protected virtual void ConfigureForCurrentSDKSetup()
		{
		}

		[Token(Token = "0x60016DB")]
		[Address(RVA = "0xA2815C", Offset = "0xA2815C", VA = "0xA2815C")]
		public VRTK_DesktopCamera()
		{
		}

		[Token(Token = "0x60016DC")]
		[Address(RVA = "0xA28164", Offset = "0xA28164", VA = "0xA28164")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66B44C", Offset = "0x66B44C")]
		private bool <ConfigureForCurrentSDKSetup>b__9_0(Component component)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000378")]
	public delegate void DestinationPointEventHandler(object sender);
	[Token(Token = "0x2000379")]
	public class VRTK_DestinationPoint : VRTK_DestinationMarker
	{
		[Token(Token = "0x20007DB")]
		public enum RotationTypes
		{
			[Token(Token = "0x40029A1")]
			NoRotation,
			[Token(Token = "0x40029A2")]
			RotateWithNoHeadsetOffset,
			[Token(Token = "0x40029A3")]
			RotateWithHeadsetOffset
		}

		[Token(Token = "0x20007DC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x645CB8", Offset = "0x645CB8")]
		private sealed class <ManageDestinationMarkersAtEndOfFrame>d__51 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40029A4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40029A5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40029A6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VRTK_DestinationPoint <>4__this;

			[Token(Token = "0x17000315")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600325C")]
				[Address(RVA = "0xA2B89C", Offset = "0xA2B89C", VA = "0xA2B89C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000316")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600325E")]
				[Address(RVA = "0xA2B90C", Offset = "0xA2B90C", VA = "0xA2B90C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003259")]
			[Address(RVA = "0xA29EF4", Offset = "0xA29EF4", VA = "0xA29EF4")]
			[DebuggerHidden]
			public <ManageDestinationMarkersAtEndOfFrame>d__51(int <>1__state)
			{
			}

			[Token(Token = "0x600325A")]
			[Address(RVA = "0xA2B580", Offset = "0xA2B580", VA = "0xA2B580", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600325B")]
			[Address(RVA = "0xA2B584", Offset = "0xA2B584", VA = "0xA2B584", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600325D")]
			[Address(RVA = "0xA2B8A4", Offset = "0xA2B8A4", VA = "0xA2B8A4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001855")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x653828", Offset = "0x653828")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x653828", Offset = "0x653828")]
		public GameObject defaultCursorObject;

		[Token(Token = "0x4001856")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x653888", Offset = "0x653888")]
		public GameObject hoverCursorObject;

		[Token(Token = "0x4001857")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6538C0", Offset = "0x6538C0")]
		public GameObject lockedCursorObject;

		[Token(Token = "0x4001858")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6538F8", Offset = "0x6538F8")]
		public Transform destinationLocation;

		[Token(Token = "0x4001859")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x653930", Offset = "0x653930")]
		public bool snapToPoint;

		[Token(Token = "0x400185A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x89")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x653968", Offset = "0x653968")]
		public bool hidePointerCursorOnHover;

		[Token(Token = "0x400185B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8A")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6539A0", Offset = "0x6539A0")]
		public bool hideDirectionIndicatorOnHover;

		[Token(Token = "0x400185C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6539D8", Offset = "0x6539D8")]
		public RotationTypes snapToRotation;

		[Token(Token = "0x400185D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x653A10", Offset = "0x653A10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x653A10", Offset = "0x653A10")]
		public VRTK_BasicTeleport teleporter;

		[Token(Token = "0x400185E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static VRTK_DestinationPoint currentDestinationPoint;

		[Token(Token = "0x4001864")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		protected Collider pointCollider;

		[Token(Token = "0x4001865")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		protected bool createdCollider;

		[Token(Token = "0x4001866")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		protected Rigidbody pointRigidbody;

		[Token(Token = "0x4001867")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		protected bool createdRigidbody;

		[Token(Token = "0x4001868")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		protected Coroutine initaliseListeners;

		[Token(Token = "0x4001869")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		protected bool isActive;

		[Token(Token = "0x400186A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		protected VRTK_BasePointerRenderer.VisibilityStates storedCursorState;

		[Token(Token = "0x400186B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		protected bool storedDirectionIndicatorState;

		[Token(Token = "0x400186C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF1")]
		protected bool currentTeleportState;

		[Token(Token = "0x400186D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF2")]
		protected bool customTeleporter;

		[Token(Token = "0x400186E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		protected Transform playArea;

		[Token(Token = "0x400186F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		protected Transform headset;

		[Token(Token = "0x14000077")]
		public event DestinationPointEventHandler DestinationPointEnabled
		{
			[Token(Token = "0x60016E1")]
			[Address(RVA = "0xA28E74", Offset = "0xA28E74", VA = "0xA28E74")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66B45C", Offset = "0x66B45C")]
			add
			{
			}
			[Token(Token = "0x60016E2")]
			[Address(RVA = "0xA28F60", Offset = "0xA28F60", VA = "0xA28F60")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66B46C", Offset = "0x66B46C")]
			remove
			{
			}
		}

		[Token(Token = "0x14000078")]
		public event DestinationPointEventHandler DestinationPointDisabled
		{
			[Token(Token = "0x60016E3")]
			[Address(RVA = "0xA2904C", Offset = "0xA2904C", VA = "0xA2904C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66B47C", Offset = "0x66B47C")]
			add
			{
			}
			[Token(Token = "0x60016E4")]
			[Address(RVA = "0xA29138", Offset = "0xA29138", VA = "0xA29138")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66B48C", Offset = "0x66B48C")]
			remove
			{
			}
		}

		[Token(Token = "0x14000079")]
		public event DestinationPointEventHandler DestinationPointLocked
		{
			[Token(Token = "0x60016E5")]
			[Address(RVA = "0xA29224", Offset = "0xA29224", VA = "0xA29224")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66B49C", Offset = "0x66B49C")]
			add
			{
			}
			[Token(Token = "0x60016E6")]
			[Address(RVA = "0xA29310", Offset = "0xA29310", VA = "0xA29310")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66B4AC", Offset = "0x66B4AC")]
			remove
			{
			}
		}

		[Token(Token = "0x1400007A")]
		public event DestinationPointEventHandler DestinationPointUnlocked
		{
			[Token(Token = "0x60016E7")]
			[Address(RVA = "0xA293FC", Offset = "0xA293FC", VA = "0xA293FC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66B4BC", Offset = "0x66B4BC")]
			add
			{
			}
			[Token(Token = "0x60016E8")]
			[Address(RVA = "0xA294E8", Offset = "0xA294E8", VA = "0xA294E8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66B4CC", Offset = "0x66B4CC")]
			remove
			{
			}
		}

		[Token(Token = "0x1400007B")]
		public event DestinationPointEventHandler DestinationPointReset
		{
			[Token(Token = "0x60016E9")]
			[Address(RVA = "0xA295D4", Offset = "0xA295D4", VA = "0xA295D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66B4DC", Offset = "0x66B4DC")]
			add
			{
			}
			[Token(Token = "0x60016EA")]
			[Address(RVA = "0xA296C0", Offset = "0xA296C0", VA = "0xA296C0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66B4EC", Offset = "0x66B4EC")]
			remove
			{
			}
		}

		[Token(Token = "0x60016EB")]
		[Address(RVA = "0xA297AC", Offset = "0xA297AC", VA = "0xA297AC", Slot = "15")]
		public virtual void OnDestinationPointEnabled()
		{
		}

		[Token(Token = "0x60016EC")]
		[Address(RVA = "0xA297C8", Offset = "0xA297C8", VA = "0xA297C8", Slot = "16")]
		public virtual void OnDestinationPointDisabled()
		{
		}

		[Token(Token = "0x60016ED")]
		[Address(RVA = "0xA297E4", Offset = "0xA297E4", VA = "0xA297E4", Slot = "17")]
		public virtual void OnDestinationPointLocked()
		{
		}

		[Token(Token = "0x60016EE")]
		[Address(RVA = "0xA29800", Offset = "0xA29800", VA = "0xA29800", Slot = "18")]
		public virtual void OnDestinationPointUnlocked()
		{
		}

		[Token(Token = "0x60016EF")]
		[Address(RVA = "0xA2981C", Offset = "0xA2981C", VA = "0xA2981C", Slot = "19")]
		public virtual void OnDestinationPointReset()
		{
		}

		[Token(Token = "0x60016F0")]
		[Address(RVA = "0xA29838", Offset = "0xA29838", VA = "0xA29838", Slot = "20")]
		public virtual void ResetDestinationPoint()
		{
		}

		[Token(Token = "0x60016F1")]
		[Address(RVA = "0xA29848", Offset = "0xA29848", VA = "0xA29848", Slot = "21")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x60016F2")]
		[Address(RVA = "0xA298B0", Offset = "0xA298B0", VA = "0xA298B0", Slot = "12")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x60016F3")]
		[Address(RVA = "0xA29AC0", Offset = "0xA29AC0", VA = "0xA29AC0", Slot = "13")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x60016F4")]
		[Address(RVA = "0xA29BB8", Offset = "0xA29BB8", VA = "0xA29BB8", Slot = "22")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x60016F5")]
		[Address(RVA = "0xA29C20", Offset = "0xA29C20", VA = "0xA29C20", Slot = "23")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x60016F6")]
		[Address(RVA = "0xA29C78", Offset = "0xA29C78", VA = "0xA29C78", Slot = "24")]
		protected virtual void CreateColliderIfRequired()
		{
		}

		[Token(Token = "0x60016F7")]
		[Address(RVA = "0xA29D6C", Offset = "0xA29D6C", VA = "0xA29D6C", Slot = "25")]
		protected virtual void SetupRigidbody()
		{
		}

		[Token(Token = "0x60016F8")]
		[Address(RVA = "0xA29E80", Offset = "0xA29E80", VA = "0xA29E80", Slot = "26")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x66B4FC", Offset = "0x66B4FC")]
		protected virtual IEnumerator ManageDestinationMarkersAtEndOfFrame()
		{
			return null;
		}

		[Token(Token = "0x60016F9")]
		[Address(RVA = "0xA29F20", Offset = "0xA29F20", VA = "0xA29F20", Slot = "27")]
		protected virtual void ManageDestinationMarkers(bool state)
		{
		}

		[Token(Token = "0x60016FA")]
		[Address(RVA = "0xA2A194", Offset = "0xA2A194", VA = "0xA2A194", Slot = "28")]
		protected virtual void ManageDestinationMarkerListeners(GameObject markerMaker, bool register)
		{
		}

		[Token(Token = "0x60016FB")]
		[Address(RVA = "0xA2A408", Offset = "0xA2A408", VA = "0xA2A408", Slot = "29")]
		protected virtual void DoDestinationMarkerEnter(object sender, DestinationMarkerEventArgs e)
		{
		}

		[Token(Token = "0x60016FC")]
		[Address(RVA = "0xA2A71C", Offset = "0xA2A71C", VA = "0xA2A71C", Slot = "30")]
		protected virtual void DoDestinationMarkerExit(object sender, DestinationMarkerEventArgs e)
		{
		}

		[Token(Token = "0x60016FD")]
		[Address(RVA = "0xA2A9B4", Offset = "0xA2A9B4", VA = "0xA2A9B4", Slot = "31")]
		protected virtual void DoDestinationMarkerSet(object sender, DestinationMarkerEventArgs e)
		{
		}

		[Token(Token = "0x60016FE")]
		[Address(RVA = "0xA2AC80", Offset = "0xA2AC80", VA = "0xA2AC80", Slot = "32")]
		protected virtual void ToggleCursor(object sender, bool state)
		{
		}

		[Token(Token = "0x60016FF")]
		[Address(RVA = "0xA2AE80", Offset = "0xA2AE80", VA = "0xA2AE80", Slot = "33")]
		protected virtual void TogglePointerCursor(VRTK_BasePointerRenderer pointerRenderer, bool state)
		{
		}

		[Token(Token = "0x6001700")]
		[Address(RVA = "0xA2AEF8", Offset = "0xA2AEF8", VA = "0xA2AEF8", Slot = "34")]
		protected virtual void ToggleDirectionIndicator(VRTK_BasePointerRenderer pointerRenderer, bool state)
		{
		}

		[Token(Token = "0x6001701")]
		[Address(RVA = "0xA2AFDC", Offset = "0xA2AFDC", VA = "0xA2AFDC", Slot = "35")]
		public virtual void EnablePoint()
		{
		}

		[Token(Token = "0x6001702")]
		[Address(RVA = "0xA2B058", Offset = "0xA2B058", VA = "0xA2B058", Slot = "36")]
		protected virtual void SetColliderState(bool state)
		{
		}

		[Token(Token = "0x6001703")]
		[Address(RVA = "0xA2B108", Offset = "0xA2B108", VA = "0xA2B108", Slot = "37")]
		protected virtual void DisablePoint()
		{
		}

		[Token(Token = "0x6001704")]
		[Address(RVA = "0xA2B19C", Offset = "0xA2B19C", VA = "0xA2B19C", Slot = "38")]
		public virtual void ResetPoint()
		{
		}

		[Token(Token = "0x6001705")]
		[Address(RVA = "0xA2B324", Offset = "0xA2B324", VA = "0xA2B324", Slot = "39")]
		protected virtual void ToggleObject(GameObject givenObject, bool state)
		{
		}

		[Token(Token = "0x6001706")]
		[Address(RVA = "0xA2B3CC", Offset = "0xA2B3CC", VA = "0xA2B3CC", Slot = "40")]
		protected virtual Quaternion? GetRotation()
		{
			return null;
		}

		[Token(Token = "0x6001707")]
		[Address(RVA = "0xA2B564", Offset = "0xA2B564", VA = "0xA2B564")]
		public VRTK_DestinationPoint()
		{
		}
	}
	[Token(Token = "0x200037A")]
	public class VRTK_FramesPerSecondViewer : MonoBehaviour
	{
		[Token(Token = "0x4001870")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x653AC0", Offset = "0x653AC0")]
		public bool displayFPS;

		[Token(Token = "0x4001871")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x653AF8", Offset = "0x653AF8")]
		public int targetFPS;

		[Token(Token = "0x4001872")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x653B30", Offset = "0x653B30")]
		public int fontSize;

		[Token(Token = "0x4001873")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x653B68", Offset = "0x653B68")]
		public Vector3 position;

		[Token(Token = "0x4001874")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x653BA0", Offset = "0x653BA0")]
		public Color goodColor;

		[Token(Token = "0x4001875")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x653BD8", Offset = "0x653BD8")]
		public Color warnColor;

		[Token(Token = "0x4001876")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x653C10", Offset = "0x653C10")]
		public Color badColor;

		[Token(Token = "0x4001877")]
		protected const float updateInterval = 0.5f;

		[Token(Token = "0x4001878")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		protected int framesCount;

		[Token(Token = "0x4001879")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		protected float framesTime;

		[Token(Token = "0x400187A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		protected Canvas canvas;

		[Token(Token = "0x400187B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		protected Text text;

		[Token(Token = "0x6001708")]
		[Address(RVA = "0xA33D10", Offset = "0xA33D10", VA = "0xA33D10", Slot = "4")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6001709")]
		[Address(RVA = "0xA33DC0", Offset = "0xA33DC0", VA = "0xA33DC0", Slot = "5")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x600170A")]
		[Address(RVA = "0xA33E94", Offset = "0xA33E94", VA = "0xA33E94", Slot = "6")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x600170B")]
		[Address(RVA = "0xA3409C", Offset = "0xA3409C", VA = "0xA3409C", Slot = "7")]
		protected virtual void LoadedSetupChanged(VRTK_SDKManager sender, VRTK_SDKManager.LoadedSetupChangeEventArgs e)
		{
		}

		[Token(Token = "0x600170C")]
		[Address(RVA = "0xA3417C", Offset = "0xA3417C", VA = "0xA3417C", Slot = "8")]
		protected virtual void InitCanvas()
		{
		}

		[Token(Token = "0x600170D")]
		[Address(RVA = "0xA3431C", Offset = "0xA3431C", VA = "0xA3431C", Slot = "9")]
		protected virtual void SetCanvasCamera()
		{
		}

		[Token(Token = "0x600170E")]
		[Address(RVA = "0xA34408", Offset = "0xA34408", VA = "0xA34408")]
		public VRTK_FramesPerSecondViewer()
		{
		}
	}
	[Token(Token = "0x200037B")]
	public struct ObjectTooltipEventArgs
	{
		[Token(Token = "0x400187C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string newText;
	}
	[Token(Token = "0x200037C")]
	public delegate void ObjectTooltipEventHandler(object sender, ObjectTooltipEventArgs e);
	[Token(Token = "0x200037D")]
	public class VRTK_ObjectTooltip : MonoBehaviour
	{
		[Token(Token = "0x400187D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x653C48", Offset = "0x653C48")]
		public string displayText;

		[Token(Token = "0x400187E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x653C80", Offset = "0x653C80")]
		public int fontSize;

		[Token(Token = "0x400187F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x653CB8", Offset = "0x653CB8")]
		public Vector2 containerSize;

		[Token(Token = "0x4001880")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x653CF0", Offset = "0x653CF0")]
		public Transform drawLineFrom;

		[Token(Token = "0x4001881")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x653D28", Offset = "0x653D28")]
		public Transform drawLineTo;

		[Token(Token = "0x4001882")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x653D60", Offset = "0x653D60")]
		public float lineWidth;

		[Token(Token = "0x4001883")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x653D98", Offset = "0x653D98")]
		public Color fontColor;

		[Token(Token = "0x4001884")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x653DD0", Offset = "0x653DD0")]
		public Color containerColor;

		[Token(Token = "0x4001885")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x653E08", Offset = "0x653E08")]
		public Color lineColor;

		[Token(Token = "0x4001886")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x653E40", Offset = "0x653E40")]
		public bool alwaysFaceHeadset;

		[Token(Token = "0x4001889")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		protected LineRenderer line;

		[Token(Token = "0x400188A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		protected Transform headset;

		[Token(Token = "0x1400007C")]
		public event ObjectTooltipEventHandler ObjectTooltipReset
		{
			[Token(Token = "0x6001713")]
			[Address(RVA = "0xA8640C", Offset = "0xA8640C", VA = "0xA8640C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66B560", Offset = "0x66B560")]
			add
			{
			}
			[Token(Token = "0x6001714")]
			[Address(RVA = "0xA864F8", Offset = "0xA864F8", VA = "0xA864F8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66B570", Offset = "0x66B570")]
			remove
			{
			}
		}

		[Token(Token = "0x1400007D")]
		public event ObjectTooltipEventHandler ObjectTooltipTextUpdated
		{
			[Token(Token = "0x6001715")]
			[Address(RVA = "0xA865E4", Offset = "0xA865E4", VA = "0xA865E4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66B580", Offset = "0x66B580")]
			add
			{
			}
			[Token(Token = "0x6001716")]
			[Address(RVA = "0xA866D0", Offset = "0xA866D0", VA = "0xA866D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66B590", Offset = "0x66B590")]
			remove
			{
			}
		}

		[Token(Token = "0x6001717")]
		[Address(RVA = "0xA867BC", Offset = "0xA867BC", VA = "0xA867BC", Slot = "4")]
		public virtual void OnObjectTooltipReset(ObjectTooltipEventArgs e)
		{
		}

		[Token(Token = "0x6001718")]
		[Address(RVA = "0xA867E0", Offset = "0xA867E0", VA = "0xA867E0", Slot = "5")]
		public virtual void OnObjectTooltipTextUpdated(ObjectTooltipEventArgs e)
		{
		}

		[Token(Token = "0x6001719")]
		[Address(RVA = "0xA86804", Offset = "0xA86804", VA = "0xA86804", Slot = "6")]
		public virtual void ResetTooltip()
		{
		}

		[Token(Token = "0x600171A")]
		[Address(RVA = "0xA86994", Offset = "0xA86994", VA = "0xA86994", Slot = "7")]
		public virtual void UpdateText(string newText)
		{
		}

		[Token(Token = "0x600171B")]
		[Address(RVA = "0xA869E0", Offset = "0xA869E0", VA = "0xA869E0", Slot = "8")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x600171C")]
		[Address(RVA = "0xA86A48", Offset = "0xA86A48", VA = "0xA86A48", Slot = "9")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x600171D")]
		[Address(RVA = "0xA86AC4", Offset = "0xA86AC4", VA = "0xA86AC4", Slot = "10")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x600171E")]
		[Address(RVA = "0xA86B2C", Offset = "0xA86B2C", VA = "0xA86B2C", Slot = "11")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x600171F")]
		[Address(RVA = "0xA86B94", Offset = "0xA86B94", VA = "0xA86B94", Slot = "12")]
		protected virtual ObjectTooltipEventArgs SetEventPayload(string newText = "")
		{
			return default(ObjectTooltipEventArgs);
		}

		[Token(Token = "0x6001720")]
		[Address(RVA = "0xA86B9C", Offset = "0xA86B9C", VA = "0xA86B9C", Slot = "13")]
		protected virtual void SetContainer()
		{
		}

		[Token(Token = "0x6001721")]
		[Address(RVA = "0xA86D28", Offset = "0xA86D28", VA = "0xA86D28", Slot = "14")]
		protected virtual void SetText(string name)
		{
		}

		[Token(Token = "0x6001722")]
		[Address(RVA = "0xA86EDC", Offset = "0xA86EDC", VA = "0xA86EDC", Slot = "15")]
		protected virtual void SetLine()
		{
		}

		[Token(Token = "0x6001723")]
		[Address(RVA = "0xA87148", Offset = "0xA87148", VA = "0xA87148", Slot = "16")]
		protected virtual void DrawLine()
		{
		}

		[Token(Token = "0x6001724")]
		[Address(RVA = "0xA87294", Offset = "0xA87294", VA = "0xA87294")]
		public VRTK_ObjectTooltip()
		{
		}
	}
	[Token(Token = "0x200037E")]
	public class VRTK_PanelMenuController : MonoBehaviour
	{
		[Token(Token = "0x20007DD")]
		public enum TouchpadPressPosition
		{
			[Token(Token = "0x40029A8")]
			None,
			[Token(Token = "0x40029A9")]
			Top,
			[Token(Token = "0x40029AA")]
			Bottom,
			[Token(Token = "0x40029AB")]
			Left,
			[Token(Token = "0x40029AC")]
			Right
		}

		[Token(Token = "0x20007DE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x645CC8", Offset = "0x645CC8")]
		private sealed class <TweenMenuScale>d__39 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40029AD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40029AE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40029AF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool show;

			[Token(Token = "0x40029B0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public VRTK_PanelMenuController <>4__this;

			[Token(Token = "0x40029B1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <targetScale>5__2;

			[Token(Token = "0x40029B2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private Vector3 <direction>5__3;

			[Token(Token = "0x40029B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private int <i>5__4;

			[Token(Token = "0x17000317")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6003262")]
				[Address(RVA = "0xA8A33C", Offset = "0xA8A33C", VA = "0xA8A33C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000318")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003264")]
				[Address(RVA = "0xA8A3AC", Offset = "0xA8A3AC", VA = "0xA8A3AC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600325F")]
			[Address(RVA = "0xA8924C", Offset = "0xA8924C", VA = "0xA8924C")]
			[DebuggerHidden]
			public <TweenMenuScale>d__39(int <>1__state)
			{
			}

			[Token(Token = "0x6003260")]
			[Address(RVA = "0xA89EA4", Offset = "0xA89EA4", VA = "0xA89EA4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003261")]
			[Address(RVA = "0xA89EA8", Offset = "0xA89EA8", VA = "0xA89EA8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003263")]
			[Address(RVA = "0xA8A344", Offset = "0xA8A344", VA = "0xA8A344", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400188B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x653E98", Offset = "0x653E98")]
		public GameObject rotateTowards;

		[Token(Token = "0x400188C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x653ED0", Offset = "0x653ED0")]
		public float zoomScaleMultiplier;

		[Token(Token = "0x400188D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x653F08", Offset = "0x653F08")]
		public VRTK_PanelMenuItemController topPanelMenuItemController;

		[Token(Token = "0x400188E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x653F40", Offset = "0x653F40")]
		public VRTK_PanelMenuItemController bottomPanelMenuItemController;

		[Token(Token = "0x400188F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x653F78", Offset = "0x653F78")]
		public VRTK_PanelMenuItemController leftPanelMenuItemController;

		[Token(Token = "0x4001890")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x653FB0", Offset = "0x653FB0")]
		public VRTK_PanelMenuItemController rightPanelMenuItemController;

		[Token(Token = "0x4001891")]
		protected const float CanvasScaleSize = 0.001f;

		[Token(Token = "0x4001892")]
		protected const float AngleTolerance = 30f;

		[Token(Token = "0x4001893")]
		protected const float SwipeMinDist = 0.2f;

		[Token(Token = "0x4001894")]
		protected const float SwipeMinVelocity = 4f;

		[Token(Token = "0x4001895")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected VRTK_ControllerEvents controllerEvents;

		[Token(Token = "0x4001896")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected VRTK_PanelMenuItemController currentPanelMenuItemController;

		[Token(Token = "0x4001897")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		protected GameObject interactableObject;

		[Token(Token = "0x4001898")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		protected GameObject canvasObject;

		[Token(Token = "0x4001899")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		protected readonly Vector2 xAxis;

		[Token(Token = "0x400189A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		protected readonly Vector2 yAxis;

		[Token(Token = "0x400189B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		protected Vector2 touchStartPosition;

		[Token(Token = "0x400189C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		protected Vector2 touchEndPosition;

		[Token(Token = "0x400189D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		protected float touchStartTime;

		[Token(Token = "0x400189E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		protected float currentAngle;

		[Token(Token = "0x400189F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		protected bool isTrackingSwipe;

		[Token(Token = "0x40018A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x91")]
		protected bool isPendingSwipeCheck;

		[Token(Token = "0x40018A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x92")]
		protected bool isGrabbed;

		[Token(Token = "0x40018A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x93")]
		protected bool isShown;

		[Token(Token = "0x40018A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		protected Coroutine tweenMenuScaleRoutine;

		[Token(Token = "0x6001725")]
		[Address(RVA = "0xA87E90", Offset = "0xA87E90", VA = "0xA87E90", Slot = "4")]
		public virtual void ToggleMenu()
		{
		}

		[Token(Token = "0x6001726")]
		[Address(RVA = "0xA87EB0", Offset = "0xA87EB0", VA = "0xA87EB0", Slot = "5")]
		public virtual void ShowMenu()
		{
		}

		[Token(Token = "0x6001727")]
		[Address(RVA = "0xA87ED8", Offset = "0xA87ED8", VA = "0xA87ED8", Slot = "6")]
		public virtual void HideMenu(bool force)
		{
		}

		[Token(Token = "0x6001728")]
		[Address(RVA = "0xA87F00", Offset = "0xA87F00", VA = "0xA87F00", Slot = "7")]
		public virtual void HideMenuImmediate()
		{
		}

		[Token(Token = "0x6001729")]
		[Address(RVA = "0xA88070", Offset = "0xA88070", VA = "0xA88070", Slot = "8")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x600172A")]
		[Address(RVA = "0xA880E8", Offset = "0xA880E8", VA = "0xA880E8", Slot = "9")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x600172B")]
		[Address(RVA = "0xA885EC", Offset = "0xA885EC", VA = "0xA885EC", Slot = "10")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x600172C")]
		[Address(RVA = "0xA88654", Offset = "0xA88654", VA = "0xA88654", Slot = "11")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x600172D")]
		[Address(RVA = "0xA88AA8", Offset = "0xA88AA8", VA = "0xA88AA8", Slot = "12")]
		protected virtual void Initialize()
		{
		}

		[Token(Token = "0x600172E")]
		[Address(RVA = "0xA88C98", Offset = "0xA88C98", VA = "0xA88C98", Slot = "13")]
		protected virtual void BindControllerEvents()
		{
		}

		[Token(Token = "0x600172F")]
		[Address(RVA = "0xA88E34", Offset = "0xA88E34", VA = "0xA88E34", Slot = "14")]
		protected virtual void UnbindControllerEvents()
		{
		}

		[Token(Token = "0x6001730")]
		[Address(RVA = "0xA88FD0", Offset = "0xA88FD0", VA = "0xA88FD0", Slot = "15")]
		protected virtual void HandlePanelMenuItemControllerVisibility(VRTK_PanelMenuItemController targetPanelItemController)
		{
		}

		[Token(Token = "0x6001731")]
		[Address(RVA = "0xA8913C", Offset = "0xA8913C", VA = "0xA8913C", Slot = "16")]
		protected virtual void InitTweenMenuScale(bool show)
		{
		}

		[Token(Token = "0x6001732")]
		[Address(RVA = "0xA891B0", Offset = "0xA891B0", VA = "0xA891B0", Slot = "17")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x66B5A0", Offset = "0x66B5A0")]
		protected virtual IEnumerator TweenMenuScale(bool show)
		{
			return null;
		}

		[Token(Token = "0x6001733")]
		[Address(RVA = "0xA89278", Offset = "0xA89278", VA = "0xA89278", Slot = "18")]
		protected virtual void DoInteractableObjectIsGrabbed(object sender, InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x6001734")]
		[Address(RVA = "0xA89338", Offset = "0xA89338", VA = "0xA89338", Slot = "19")]
		protected virtual void DoInteractableObjectIsUngrabbed(object sender, InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x6001735")]
		[Address(RVA = "0xA893E4", Offset = "0xA893E4", VA = "0xA893E4", Slot = "20")]
		protected virtual void DoTouchpadPress(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001736")]
		[Address(RVA = "0xA89584", Offset = "0xA89584", VA = "0xA89584", Slot = "21")]
		protected virtual void DoTouchpadTouched(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001737")]
		[Address(RVA = "0xA895D0", Offset = "0xA895D0", VA = "0xA895D0", Slot = "22")]
		protected virtual void DoTouchpadUntouched(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001738")]
		[Address(RVA = "0xA895DC", Offset = "0xA895DC", VA = "0xA895DC", Slot = "23")]
		protected virtual void DoTouchpadAxisChanged(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001739")]
		[Address(RVA = "0xA8967C", Offset = "0xA8967C", VA = "0xA8967C", Slot = "24")]
		protected virtual void DoTriggerPressed(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x600173A")]
		[Address(RVA = "0xA89698", Offset = "0xA89698", VA = "0xA89698", Slot = "25")]
		protected virtual void ChangeAngle(float angle, [Optional] object sender)
		{
		}

		[Token(Token = "0x600173B")]
		[Address(RVA = "0xA896A0", Offset = "0xA896A0", VA = "0xA896A0", Slot = "26")]
		protected virtual void CalculateSwipeAction()
		{
		}

		[Token(Token = "0x600173C")]
		[Address(RVA = "0xA89928", Offset = "0xA89928", VA = "0xA89928", Slot = "27")]
		protected virtual TouchpadPressPosition CalculateTouchpadPressPosition()
		{
			return default(TouchpadPressPosition);
		}

		[Token(Token = "0x600173D")]
		[Address(RVA = "0xA899FC", Offset = "0xA899FC", VA = "0xA899FC", Slot = "28")]
		protected virtual void OnSwipeLeft()
		{
		}

		[Token(Token = "0x600173E")]
		[Address(RVA = "0xA89AA4", Offset = "0xA89AA4", VA = "0xA89AA4", Slot = "29")]
		protected virtual void OnSwipeRight()
		{
		}

		[Token(Token = "0x600173F")]
		[Address(RVA = "0xA89B50", Offset = "0xA89B50", VA = "0xA89B50", Slot = "30")]
		protected virtual void OnSwipeTop()
		{
		}

		[Token(Token = "0x6001740")]
		[Address(RVA = "0xA89BFC", Offset = "0xA89BFC", VA = "0xA89BFC", Slot = "31")]
		protected virtual void OnSwipeBottom()
		{
		}

		[Token(Token = "0x6001741")]
		[Address(RVA = "0xA89CA8", Offset = "0xA89CA8", VA = "0xA89CA8", Slot = "32")]
		protected virtual void OnTriggerPressed()
		{
		}

		[Token(Token = "0x6001742")]
		[Address(RVA = "0xA89D54", Offset = "0xA89D54", VA = "0xA89D54", Slot = "33")]
		protected virtual float CalculateAngle(ControllerInteractionEventArgs e)
		{
			return default(float);
		}

		[Token(Token = "0x6001743")]
		[Address(RVA = "0xA89D5C", Offset = "0xA89D5C", VA = "0xA89D5C", Slot = "34")]
		protected virtual float NormAngle(float currentDegree, float maxAngle = 360f)
		{
			return default(float);
		}

		[Token(Token = "0x6001744")]
		[Address(RVA = "0xA89D6C", Offset = "0xA89D6C", VA = "0xA89D6C", Slot = "35")]
		protected virtual bool CheckAnglePosition(float currentDegree, float tolerance, float targetDegree)
		{
			return default(bool);
		}

		[Token(Token = "0x6001745")]
		[Address(RVA = "0xA89E20", Offset = "0xA89E20", VA = "0xA89E20")]
		public VRTK_PanelMenuController()
		{
		}
	}
	[Token(Token = "0x200037F")]
	public struct PanelMenuItemControllerEventArgs
	{
		[Token(Token = "0x40018A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public GameObject interactableObject;
	}
	[Token(Token = "0x2000380")]
	public delegate void PanelMenuItemControllerEventHandler(object sender, PanelMenuItemControllerEventArgs e);
	[Token(Token = "0x2000381")]
	public class VRTK_PanelMenuItemController : MonoBehaviour
	{
		[Token(Token = "0x1400007E")]
		public event PanelMenuItemControllerEventHandler PanelMenuItemShowing
		{
			[Token(Token = "0x600174A")]
			[Address(RVA = "0xA8A3B4", Offset = "0xA8A3B4", VA = "0xA8A3B4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66B604", Offset = "0x66B604")]
			add
			{
			}
			[Token(Token = "0x600174B")]
			[Address(RVA = "0xA8A4A0", Offset = "0xA8A4A0", VA = "0xA8A4A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66B614", Offset = "0x66B614")]
			remove
			{
			}
		}

		[Token(Token = "0x1400007F")]
		public event PanelMenuItemControllerEventHandler PanelMenuItemHiding
		{
			[Token(Token = "0x600174C")]
			[Address(RVA = "0xA8A58C", Offset = "0xA8A58C", VA = "0xA8A58C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66B624", Offset = "0x66B624")]
			add
			{
			}
			[Token(Token = "0x600174D")]
			[Address(RVA = "0xA8A678", Offset = "0xA8A678", VA = "0xA8A678")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66B634", Offset = "0x66B634")]
			remove
			{
			}
		}

		[Token(Token = "0x14000080")]
		public event PanelMenuItemControllerEventHandler PanelMenuItemSwipeLeft
		{
			[Token(Token = "0x600174E")]
			[Address(RVA = "0xA8A764", Offset = "0xA8A764", VA = "0xA8A764")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66B644", Offset = "0x66B644")]
			add
			{
			}
			[Token(Token = "0x600174F")]
			[Address(RVA = "0xA8A850", Offset = "0xA8A850", VA = "0xA8A850")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66B654", Offset = "0x66B654")]
			remove
			{
			}
		}

		[Token(Token = "0x14000081")]
		public event PanelMenuItemControllerEventHandler PanelMenuItemSwipeRight
		{
			[Token(Token = "0x6001750")]
			[Address(RVA = "0xA8A93C", Offset = "0xA8A93C", VA = "0xA8A93C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66B664", Offset = "0x66B664")]
			add
			{
			}
			[Token(Token = "0x6001751")]
			[Address(RVA = "0xA8AA28", Offset = "0xA8AA28", VA = "0xA8AA28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66B674", Offset = "0x66B674")]
			remove
			{
			}
		}

		[Token(Token = "0x14000082")]
		public event PanelMenuItemControllerEventHandler PanelMenuItemSwipeTop
		{
			[Token(Token = "0x6001752")]
			[Address(RVA = "0xA8AB14", Offset = "0xA8AB14", VA = "0xA8AB14")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66B684", Offset = "0x66B684")]
			add
			{
			}
			[Token(Token = "0x6001753")]
			[Address(RVA = "0xA8AC00", Offset = "0xA8AC00", VA = "0xA8AC00")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66B694", Offset = "0x66B694")]
			remove
			{
			}
		}

		[Token(Token = "0x14000083")]
		public event PanelMenuItemControllerEventHandler PanelMenuItemSwipeBottom
		{
			[Token(Token = "0x6001754")]
			[Address(RVA = "0xA8ACEC", Offset = "0xA8ACEC", VA = "0xA8ACEC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66B6A4", Offset = "0x66B6A4")]
			add
			{
			}
			[Token(Token = "0x6001755")]
			[Address(RVA = "0xA8ADD8", Offset = "0xA8ADD8", VA = "0xA8ADD8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66B6B4", Offset = "0x66B6B4")]
			remove
			{
			}
		}

		[Token(Token = "0x14000084")]
		public event PanelMenuItemControllerEventHandler PanelMenuItemTriggerPressed
		{
			[Token(Token = "0x6001756")]
			[Address(RVA = "0xA8AEC4", Offset = "0xA8AEC4", VA = "0xA8AEC4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66B6C4", Offset = "0x66B6C4")]
			add
			{
			}
			[Token(Token = "0x6001757")]
			[Address(RVA = "0xA8AFB0", Offset = "0xA8AFB0", VA = "0xA8AFB0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66B6D4", Offset = "0x66B6D4")]
			remove
			{
			}
		}

		[Token(Token = "0x6001758")]
		[Address(RVA = "0xA8B09C", Offset = "0xA8B09C", VA = "0xA8B09C", Slot = "4")]
		public virtual void OnPanelMenuItemShowing(PanelMenuItemControllerEventArgs e)
		{
		}

		[Token(Token = "0x6001759")]
		[Address(RVA = "0xA8B0C0", Offset = "0xA8B0C0", VA = "0xA8B0C0", Slot = "5")]
		public virtual void OnPanelMenuItemHiding(PanelMenuItemControllerEventArgs e)
		{
		}

		[Token(Token = "0x600175A")]
		[Address(RVA = "0xA8B0E4", Offset = "0xA8B0E4", VA = "0xA8B0E4", Slot = "6")]
		public virtual void OnPanelMenuItemSwipeLeft(PanelMenuItemControllerEventArgs e)
		{
		}

		[Token(Token = "0x600175B")]
		[Address(RVA = "0xA8B108", Offset = "0xA8B108", VA = "0xA8B108", Slot = "7")]
		public virtual void OnPanelMenuItemSwipeRight(PanelMenuItemControllerEventArgs e)
		{
		}

		[Token(Token = "0x600175C")]
		[Address(RVA = "0xA8B12C", Offset = "0xA8B12C", VA = "0xA8B12C", Slot = "8")]
		public virtual void OnPanelMenuItemSwipeTop(PanelMenuItemControllerEventArgs e)
		{
		}

		[Token(Token = "0x600175D")]
		[Address(RVA = "0xA8B150", Offset = "0xA8B150", VA = "0xA8B150", Slot = "9")]
		public virtual void OnPanelMenuItemSwipeBottom(PanelMenuItemControllerEventArgs e)
		{
		}

		[Token(Token = "0x600175E")]
		[Address(RVA = "0xA8B174", Offset = "0xA8B174", VA = "0xA8B174", Slot = "10")]
		public virtual PanelMenuItemControllerEventArgs SetPanelMenuItemEvent(GameObject interactableObject)
		{
			return default(PanelMenuItemControllerEventArgs);
		}

		[Token(Token = "0x600175F")]
		[Address(RVA = "0xA8B17C", Offset = "0xA8B17C", VA = "0xA8B17C", Slot = "11")]
		public virtual void Show(GameObject interactableObject)
		{
		}

		[Token(Token = "0x6001760")]
		[Address(RVA = "0xA8B1EC", Offset = "0xA8B1EC", VA = "0xA8B1EC", Slot = "12")]
		public virtual void Hide(GameObject interactableObject)
		{
		}

		[Token(Token = "0x6001761")]
		[Address(RVA = "0xA8B25C", Offset = "0xA8B25C", VA = "0xA8B25C", Slot = "13")]
		public virtual void SwipeLeft(GameObject interactableObject)
		{
		}

		[Token(Token = "0x6001762")]
		[Address(RVA = "0xA8B294", Offset = "0xA8B294", VA = "0xA8B294", Slot = "14")]
		public virtual void SwipeRight(GameObject interactableObject)
		{
		}

		[Token(Token = "0x6001763")]
		[Address(RVA = "0xA8B2CC", Offset = "0xA8B2CC", VA = "0xA8B2CC", Slot = "15")]
		public virtual void SwipeTop(GameObject interactableObject)
		{
		}

		[Token(Token = "0x6001764")]
		[Address(RVA = "0xA8B304", Offset = "0xA8B304", VA = "0xA8B304", Slot = "16")]
		public virtual void SwipeBottom(GameObject interactableObject)
		{
		}

		[Token(Token = "0x6001765")]
		[Address(RVA = "0xA8B33C", Offset = "0xA8B33C", VA = "0xA8B33C", Slot = "17")]
		public virtual void TriggerPressed(GameObject interactableObject)
		{
		}

		[Token(Token = "0x6001766")]
		[Address(RVA = "0xA8B378", Offset = "0xA8B378", VA = "0xA8B378", Slot = "18")]
		protected virtual void OnPanelMenuItemTriggerPressed(PanelMenuItemControllerEventArgs e)
		{
		}

		[Token(Token = "0x6001767")]
		[Address(RVA = "0xA8B39C", Offset = "0xA8B39C", VA = "0xA8B39C")]
		public VRTK_PanelMenuItemController()
		{
		}
	}
	[Token(Token = "0x2000382")]
	public delegate void PointerDirectionIndicatorEventHandler(object sender);
	[Token(Token = "0x2000383")]
	public class VRTK_PointerDirectionIndicator : MonoBehaviour
	{
		[Token(Token = "0x20007DF")]
		public enum VisibilityState
		{
			[Token(Token = "0x40029B5")]
			OnWhenPointerActive,
			[Token(Token = "0x40029B6")]
			AlwaysOnWithPointerCursor
		}

		[Token(Token = "0x40018AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x654058", Offset = "0x654058")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x654058", Offset = "0x654058")]
		public Vector2 touchpadDeadzone;

		[Token(Token = "0x40018AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6540B8", Offset = "0x6540B8")]
		public VRTK_ControllerEvents.Vector2AxisAlias coordinateAxis;

		[Token(Token = "0x40018AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6540F0", Offset = "0x6540F0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6540F0", Offset = "0x6540F0")]
		public bool includeHeadsetOffset;

		[Token(Token = "0x40018AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x654150", Offset = "0x654150")]
		public bool displayOnInvalidLocation;

		[Token(Token = "0x40018B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x26")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x654188", Offset = "0x654188")]
		public bool usePointerColor;

		[Token(Token = "0x40018B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6541C0", Offset = "0x6541C0")]
		public VisibilityState indicatorVisibility;

		[Token(Token = "0x40018B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[HideInInspector]
		public bool isActive;

		[Token(Token = "0x40018B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected VRTK_ControllerEvents controllerEvents;

		[Token(Token = "0x40018B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected Transform playArea;

		[Token(Token = "0x40018B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected Transform headset;

		[Token(Token = "0x40018B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected GameObject validLocation;

		[Token(Token = "0x40018B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		protected GameObject invalidLocation;

		[Token(Token = "0x14000085")]
		public event PointerDirectionIndicatorEventHandler PointerDirectionIndicatorPositionSet
		{
			[Token(Token = "0x600176C")]
			[Address(RVA = "0x937A20", Offset = "0x937A20", VA = "0x937A20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66B6E4", Offset = "0x66B6E4")]
			add
			{
			}
			[Token(Token = "0x600176D")]
			[Address(RVA = "0x937B0C", Offset = "0x937B0C", VA = "0x937B0C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66B6F4", Offset = "0x66B6F4")]
			remove
			{
			}
		}

		[Token(Token = "0x600176E")]
		[Address(RVA = "0x937BF8", Offset = "0x937BF8", VA = "0x937BF8", Slot = "4")]
		public virtual void OnPointerDirectionIndicatorPositionSet()
		{
		}

		[Token(Token = "0x600176F")]
		[Address(RVA = "0x937C14", Offset = "0x937C14", VA = "0x937C14", Slot = "5")]
		public virtual void Initialize(VRTK_ControllerEvents events)
		{
		}

		[Token(Token = "0x6001770")]
		[Address(RVA = "0x937C9C", Offset = "0x937C9C", VA = "0x937C9C", Slot = "6")]
		public virtual void SetPosition(bool active, Vector3 position)
		{
		}

		[Token(Token = "0x6001771")]
		[Address(RVA = "0x937D4C", Offset = "0x937D4C", VA = "0x937D4C", Slot = "7")]
		public virtual Quaternion GetRotation()
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6001772")]
		[Address(RVA = "0x937E3C", Offset = "0x937E3C", VA = "0x937E3C", Slot = "8")]
		public virtual void SetMaterialColor(Color color, bool validity)
		{
		}

		[Token(Token = "0x6001773")]
		[Address(RVA = "0x938008", Offset = "0x938008", VA = "0x938008", Slot = "9")]
		public virtual VRTK_ControllerEvents GetControllerEvents()
		{
			return null;
		}

		[Token(Token = "0x6001774")]
		[Address(RVA = "0x938010", Offset = "0x938010", VA = "0x938010", Slot = "10")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6001775")]
		[Address(RVA = "0x93810C", Offset = "0x93810C", VA = "0x93810C", Slot = "11")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x6001776")]
		[Address(RVA = "0x9382C8", Offset = "0x9382C8", VA = "0x9382C8", Slot = "12")]
		protected virtual bool InsideDeadzone(Vector2 currentAxis)
		{
			return default(bool);
		}

		[Token(Token = "0x6001777")]
		[Address(RVA = "0x9383C4", Offset = "0x9383C4", VA = "0x9383C4")]
		public VRTK_PointerDirectionIndicator()
		{
		}
	}
	[Token(Token = "0x2000384")]
	public class RadialButtonIcon : MonoBehaviour
	{
		[Token(Token = "0x6001778")]
		[Address(RVA = "0xDDB988", Offset = "0xDDB988", VA = "0xDDB988")]
		public RadialButtonIcon()
		{
		}
	}
	[Token(Token = "0x2000385")]
	[ExecuteInEditMode]
	public class UICircle : Graphic
	{
		[Token(Token = "0x40018B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x654218", Offset = "0x654218")]
		public int fillPercent;

		[Token(Token = "0x40018BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public bool fill;

		[Token(Token = "0x40018BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public int thickness;

		[Token(Token = "0x40018BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x654234", Offset = "0x654234")]
		public int segments;

		[Token(Token = "0x40018BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		protected Texture setTexture;

		[Token(Token = "0x170001C6")]
		public override Texture mainTexture
		{
			[Token(Token = "0x6001779")]
			[Address(RVA = "0xAD6DAC", Offset = "0xAD6DAC", VA = "0xAD6DAC", Slot = "35")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001C7")]
		public Texture texture
		{
			[Token(Token = "0x600177A")]
			[Address(RVA = "0xAD6E58", Offset = "0xAD6E58", VA = "0xAD6E58")]
			get
			{
				return null;
			}
			[Token(Token = "0x600177B")]
			[Address(RVA = "0xAD6E60", Offset = "0xAD6E60", VA = "0xAD6E60")]
			set
			{
			}
		}

		[Token(Token = "0x600177C")]
		[Address(RVA = "0xAD6F1C", Offset = "0xAD6F1C", VA = "0xAD6F1C", Slot = "50")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x600177D")]
		[Address(RVA = "0xAD6FF8", Offset = "0xAD6FF8", VA = "0xAD6FF8", Slot = "51")]
		protected virtual UIVertex[] SetVbo(Vector2[] vertices, Vector2[] uvs)
		{
			return null;
		}

		[Token(Token = "0x600177E")]
		[Address(RVA = "0xAD7278", Offset = "0xAD7278", VA = "0xAD7278", Slot = "44")]
		protected override void OnPopulateMesh(VertexHelper vh)
		{
		}

		[Token(Token = "0x600177F")]
		[Address(RVA = "0xAD77CC", Offset = "0xAD77CC", VA = "0xAD77CC")]
		public UICircle()
		{
		}
	}
	[Token(Token = "0x2000386")]
	public class VRTK_IndependentRadialMenuController : VRTK_RadialMenuController
	{
		[Token(Token = "0x20007E0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x645CD8", Offset = "0x645CD8")]
		private sealed class <DelayedSetColliderEnabled>d__33 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40029B7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40029B8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40029B9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float delay;

			[Token(Token = "0x40029BA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public VRTK_IndependentRadialMenuController <>4__this;

			[Token(Token = "0x40029BB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public bool enabled;

			[Token(Token = "0x40029BC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public InteractableObjectEventArgs e;

			[Token(Token = "0x17000319")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6003268")]
				[Address(RVA = "0xD03578", Offset = "0xD03578", VA = "0xD03578", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700031A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600326A")]
				[Address(RVA = "0xD035E8", Offset = "0xD035E8", VA = "0xD035E8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003265")]
			[Address(RVA = "0xD033A4", Offset = "0xD033A4", VA = "0xD033A4")]
			[DebuggerHidden]
			public <DelayedSetColliderEnabled>d__33(int <>1__state)
			{
			}

			[Token(Token = "0x6003266")]
			[Address(RVA = "0xD03494", Offset = "0xD03494", VA = "0xD03494", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003267")]
			[Address(RVA = "0xD03498", Offset = "0xD03498", VA = "0xD03498", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003269")]
			[Address(RVA = "0xD03580", Offset = "0xD03580", VA = "0xD03580", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40018BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x654260", Offset = "0x654260")]
		public VRTK_InteractableObject eventsManager;

		[Token(Token = "0x40018BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x654298", Offset = "0x654298")]
		public bool addMenuCollider;

		[Token(Token = "0x40018C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6542D0", Offset = "0x6542D0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6542D0", Offset = "0x6542D0")]
		public float colliderRadiusMultiplier;

		[Token(Token = "0x40018C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x654324", Offset = "0x654324")]
		public bool hideAfterExecution;

		[Token(Token = "0x40018C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65435C", Offset = "0x65435C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x65435C", Offset = "0x65435C")]
		public float offsetMultiplier;

		[Token(Token = "0x40018C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6543B0", Offset = "0x6543B0")]
		public GameObject rotateTowards;

		[Token(Token = "0x40018C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		protected List<GameObject> interactingObjects;

		[Token(Token = "0x40018C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		protected HashSet<GameObject> collidingObjects;

		[Token(Token = "0x40018C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		protected SphereCollider menuCollider;

		[Token(Token = "0x40018C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		protected Coroutine delayedSetColliderEnabledRoutine;

		[Token(Token = "0x40018C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		protected Vector3 desiredColliderCenter;

		[Token(Token = "0x40018C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		protected Quaternion initialRotation;

		[Token(Token = "0x40018CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		protected bool isClicked;

		[Token(Token = "0x40018CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x95")]
		protected bool waitingToDisableCollider;

		[Token(Token = "0x40018CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		protected int counter;

		[Token(Token = "0x6001780")]
		[Address(RVA = "0xD01088", Offset = "0xD01088", VA = "0xD01088", Slot = "20")]
		public virtual void UpdateEventsManager()
		{
		}

		[Token(Token = "0x6001781")]
		[Address(RVA = "0xD013B4", Offset = "0xD013B4", VA = "0xD013B4", Slot = "5")]
		protected override void Initialize()
		{
		}

		[Token(Token = "0x6001782")]
		[Address(RVA = "0xD01B7C", Offset = "0xD01B7C", VA = "0xD01B7C", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6001783")]
		[Address(RVA = "0xD01BFC", Offset = "0xD01BFC", VA = "0xD01BFC", Slot = "21")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x6001784")]
		[Address(RVA = "0xD01C08", Offset = "0xD01C08", VA = "0xD01C08", Slot = "6")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6001785")]
		[Address(RVA = "0xD01DF0", Offset = "0xD01DF0", VA = "0xD01DF0", Slot = "7")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x6001786")]
		[Address(RVA = "0xD01FCC", Offset = "0xD01FCC", VA = "0xD01FCC", Slot = "22")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x6001787")]
		[Address(RVA = "0xD02034", Offset = "0xD02034", VA = "0xD02034", Slot = "23")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x6001788")]
		[Address(RVA = "0xD024E8", Offset = "0xD024E8", VA = "0xD024E8", Slot = "24")]
		protected virtual void FixedUpdate()
		{
		}

		[Token(Token = "0x6001789")]
		[Address(RVA = "0xD02548", Offset = "0xD02548", VA = "0xD02548", Slot = "13")]
		protected override void AttemptHapticPulse(float strength)
		{
		}

		[Token(Token = "0x600178A")]
		[Address(RVA = "0xD02634", Offset = "0xD02634", VA = "0xD02634", Slot = "25")]
		protected virtual void ObjectClicked(object sender, InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x600178B")]
		[Address(RVA = "0xD026B4", Offset = "0xD026B4", VA = "0xD026B4", Slot = "26")]
		protected virtual void ObjectUnClicked(object sender, InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x600178C")]
		[Address(RVA = "0xD027AC", Offset = "0xD027AC", VA = "0xD027AC", Slot = "27")]
		protected virtual void ObjectTouched(object sender, InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x600178D")]
		[Address(RVA = "0xD028E8", Offset = "0xD028E8", VA = "0xD028E8", Slot = "28")]
		protected virtual void ObjectUntouched(object sender, InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x600178E")]
		[Address(RVA = "0xD02B0C", Offset = "0xD02B0C", VA = "0xD02B0C", Slot = "29")]
		protected virtual TouchAngleDeflection CalculateAngle(GameObject interactingObject)
		{
			return default(TouchAngleDeflection);
		}

		[Token(Token = "0x600178F")]
		[Address(RVA = "0xD02DE0", Offset = "0xD02DE0", VA = "0xD02DE0", Slot = "30")]
		protected virtual float AngleSigned(Vector3 v1, Vector3 v2, Vector3 n)
		{
			return default(float);
		}

		[Token(Token = "0x6001790")]
		[Address(RVA = "0xD02F34", Offset = "0xD02F34", VA = "0xD02F34", Slot = "31")]
		protected virtual void ImmediatelyHideMenu(InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x6001791")]
		[Address(RVA = "0xD02F98", Offset = "0xD02F98", VA = "0xD02F98", Slot = "32")]
		protected virtual void SetColliderState(bool state, InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x6001792")]
		[Address(RVA = "0xD032CC", Offset = "0xD032CC", VA = "0xD032CC", Slot = "33")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x66B704", Offset = "0x66B704")]
		protected virtual IEnumerator DelayedSetColliderEnabled(bool enabled, float delay, InteractableObjectEventArgs e)
		{
			return null;
		}

		[Token(Token = "0x6001793")]
		[Address(RVA = "0xD033D0", Offset = "0xD033D0", VA = "0xD033D0")]
		public VRTK_IndependentRadialMenuController()
		{
		}
	}
	[Token(Token = "0x2000387")]
	public struct TouchAngleDeflection
	{
		[Token(Token = "0x40018CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float angle;

		[Token(Token = "0x40018CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float deflection;

		[Token(Token = "0x6001794")]
		[Address(RVA = "0x6E5A8C", Offset = "0x6E5A8C", VA = "0x6E5A8C")]
		public TouchAngleDeflection(float angle, float deflection)
		{
		}
	}
	[Token(Token = "0x2000388")]
	public delegate void HapticPulseEventHandler(float strength);
	[Token(Token = "0x2000389")]
	[ExecuteInEditMode]
	public class VRTK_RadialMenu : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20007E1")]
		public class RadialMenuButton
		{
			[Token(Token = "0x40029BD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Sprite ButtonIcon;

			[Token(Token = "0x40029BE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public UnityEvent OnClick;

			[Token(Token = "0x40029BF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public UnityEvent OnHold;

			[Token(Token = "0x40029C0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public UnityEvent OnHoverEnter;

			[Token(Token = "0x40029C1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public UnityEvent OnHoverExit;

			[Token(Token = "0x600326B")]
			[Address(RVA = "0x93BCDC", Offset = "0x93BCDC", VA = "0x93BCDC")]
			public RadialMenuButton()
			{
			}
		}

		[Token(Token = "0x20007E2")]
		public enum ButtonEvent
		{
			[Token(Token = "0x40029C3")]
			hoverOn,
			[Token(Token = "0x40029C4")]
			hoverOff,
			[Token(Token = "0x40029C5")]
			click,
			[Token(Token = "0x40029C6")]
			unclick
		}

		[Token(Token = "0x20007E3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x645CE8", Offset = "0x645CE8")]
		private sealed class <TweenMenuScale>d__40 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40029C7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40029C8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40029C9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool show;

			[Token(Token = "0x40029CA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public VRTK_RadialMenu <>4__this;

			[Token(Token = "0x40029CB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <targetScale>5__2;

			[Token(Token = "0x40029CC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private Vector3 <Dir>5__3;

			[Token(Token = "0x40029CD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private int <i>5__4;

			[Token(Token = "0x1700031B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600326F")]
				[Address(RVA = "0x93BC64", Offset = "0x93BC64", VA = "0x93BC64", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700031C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003271")]
				[Address(RVA = "0x93BCD4", Offset = "0x93BCD4", VA = "0x93BCD4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600326C")]
			[Address(RVA = "0x93B6C8", Offset = "0x93B6C8", VA = "0x93B6C8")]
			[DebuggerHidden]
			public <TweenMenuScale>d__40(int <>1__state)
			{
			}

			[Token(Token = "0x600326D")]
			[Address(RVA = "0x93B8F4", Offset = "0x93B8F4", VA = "0x93B8F4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600326E")]
			[Address(RVA = "0x93B8F8", Offset = "0x93B8F8", VA = "0x93B8F8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003270")]
			[Address(RVA = "0x93BC6C", Offset = "0x93BC6C", VA = "0x93BC6C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40018CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6543E8", Offset = "0x6543E8")]
		public List<RadialMenuButton> buttons;

		[Token(Token = "0x40018D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x654420", Offset = "0x654420")]
		public GameObject buttonPrefab;

		[Token(Token = "0x40018D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x654458", Offset = "0x654458")]
		public bool generateOnAwake;

		[Token(Token = "0x40018D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x654490", Offset = "0x654490")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x654490", Offset = "0x654490")]
		public float buttonThickness;

		[Token(Token = "0x40018D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6544E4", Offset = "0x6544E4")]
		public Color buttonColor;

		[Token(Token = "0x40018D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65451C", Offset = "0x65451C")]
		public float offsetDistance;

		[Token(Token = "0x40018D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x654554", Offset = "0x654554")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x654554", Offset = "0x654554")]
		public float offsetRotation;

		[Token(Token = "0x40018D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6545AC", Offset = "0x6545AC")]
		public bool rotateIcons;

		[Token(Token = "0x40018D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6545E4", Offset = "0x6545E4")]
		public float iconMargin;

		[Token(Token = "0x40018D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65461C", Offset = "0x65461C")]
		public bool isShown;

		[Token(Token = "0x40018D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x654654", Offset = "0x654654")]
		public bool hideOnRelease;

		[Token(Token = "0x40018DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x52")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65468C", Offset = "0x65468C")]
		public bool executeOnUnclick;

		[Token(Token = "0x40018DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6546C4", Offset = "0x6546C4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6546C4", Offset = "0x6546C4")]
		public float baseHapticStrength;

		[Token(Token = "0x40018DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x654718", Offset = "0x654718")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x654718", Offset = "0x654718")]
		public float deadZone;

		[Token(Token = "0x40018DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65477C", Offset = "0x65477C")]
		public List<GameObject> menuButtons;

		[Token(Token = "0x40018DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		protected int currentHover;

		[Token(Token = "0x40018E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		protected int currentPress;

		[Token(Token = "0x40018E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		protected Coroutine tweenMenuScaleRoutine;

		[Token(Token = "0x14000086")]
		public event HapticPulseEventHandler FireHapticPulse
		{
			[Token(Token = "0x6001799")]
			[Address(RVA = "0x939D6C", Offset = "0x939D6C", VA = "0x939D6C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66B768", Offset = "0x66B768")]
			add
			{
			}
			[Token(Token = "0x600179A")]
			[Address(RVA = "0x939E58", Offset = "0x939E58", VA = "0x939E58")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66B778", Offset = "0x66B778")]
			remove
			{
			}
		}

		[Token(Token = "0x600179B")]
		[Address(RVA = "0x939F44", Offset = "0x939F44", VA = "0x939F44", Slot = "4")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x66B788", Offset = "0x66B788")]
		public virtual void HoverButton(float angle)
		{
		}

		[Token(Token = "0x600179C")]
		[Address(RVA = "0x939F88", Offset = "0x939F88", VA = "0x939F88", Slot = "5")]
		public virtual void HoverButton(TouchAngleDeflection givenTouchAngleDeflection)
		{
		}

		[Token(Token = "0x600179D")]
		[Address(RVA = "0x939F9C", Offset = "0x939F9C", VA = "0x939F9C", Slot = "6")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x66B7C0", Offset = "0x66B7C0")]
		public virtual void ClickButton(float angle)
		{
		}

		[Token(Token = "0x600179E")]
		[Address(RVA = "0x939FE0", Offset = "0x939FE0", VA = "0x939FE0", Slot = "7")]
		public virtual void ClickButton(TouchAngleDeflection givenTouchAngleDeflection)
		{
		}

		[Token(Token = "0x600179F")]
		[Address(RVA = "0x939FF4", Offset = "0x939FF4", VA = "0x939FF4", Slot = "8")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x66B7F8", Offset = "0x66B7F8")]
		public virtual void UnClickButton(float angle)
		{
		}

		[Token(Token = "0x60017A0")]
		[Address(RVA = "0x93A038", Offset = "0x93A038", VA = "0x93A038", Slot = "9")]
		public virtual void UnClickButton(TouchAngleDeflection givenTouchAngleDeflection)
		{
		}

		[Token(Token = "0x60017A1")]
		[Address(RVA = "0x93A04C", Offset = "0x93A04C", VA = "0x93A04C", Slot = "10")]
		public virtual void ToggleMenu()
		{
		}

		[Token(Token = "0x60017A2")]
		[Address(RVA = "0x93A070", Offset = "0x93A070", VA = "0x93A070", Slot = "11")]
		public virtual void StopTouching()
		{
		}

		[Token(Token = "0x60017A3")]
		[Address(RVA = "0x93A1E8", Offset = "0x93A1E8", VA = "0x93A1E8", Slot = "12")]
		public virtual void ShowMenu()
		{
		}

		[Token(Token = "0x60017A4")]
		[Address(RVA = "0x93A210", Offset = "0x93A210", VA = "0x93A210", Slot = "13")]
		public virtual RadialMenuButton GetButton(int id)
		{
			return null;
		}

		[Token(Token = "0x60017A5")]
		[Address(RVA = "0x93A2B8", Offset = "0x93A2B8", VA = "0x93A2B8", Slot = "14")]
		public virtual void HideMenu(bool force)
		{
		}

		[Token(Token = "0x60017A6")]
		[Address(RVA = "0x93A2E8", Offset = "0x93A2E8", VA = "0x93A2E8")]
		public void RegenerateButtons()
		{
		}

		[Token(Token = "0x60017A7")]
		[Address(RVA = "0x93AD98", Offset = "0x93AD98", VA = "0x93AD98")]
		public void AddButton(RadialMenuButton newButton)
		{
		}

		[Token(Token = "0x60017A8")]
		[Address(RVA = "0x93AE04", Offset = "0x93AE04", VA = "0x93AE04", Slot = "15")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x60017A9")]
		[Address(RVA = "0x93AEF4", Offset = "0x93AEF4", VA = "0x93AEF4", Slot = "16")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x60017AA")]
		[Address(RVA = "0x93AF98", Offset = "0x93AF98", VA = "0x93AF98", Slot = "17")]
		protected virtual void InteractButton(TouchAngleDeflection givenTouchAngleDeflection, ButtonEvent evt)
		{
		}

		[Token(Token = "0x60017AB")]
		[Address(RVA = "0x93B5C8", Offset = "0x93B5C8", VA = "0x93B5C8", Slot = "18")]
		protected virtual void InitTweenMenuScale(bool isShown)
		{
		}

		[Token(Token = "0x60017AC")]
		[Address(RVA = "0x93B62C", Offset = "0x93B62C", VA = "0x93B62C", Slot = "19")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x66B830", Offset = "0x66B830")]
		protected virtual IEnumerator TweenMenuScale(bool show)
		{
			return null;
		}

		[Token(Token = "0x60017AD")]
		[Address(RVA = "0x93B6F4", Offset = "0x93B6F4", VA = "0x93B6F4", Slot = "20")]
		protected virtual void AttempHapticPulse(float strength)
		{
		}

		[Token(Token = "0x60017AE")]
		[Address(RVA = "0x93B710", Offset = "0x93B710", VA = "0x93B710", Slot = "21")]
		protected virtual void RemoveAllButtons()
		{
		}

		[Token(Token = "0x60017AF")]
		[Address(RVA = "0x93B830", Offset = "0x93B830", VA = "0x93B830")]
		public VRTK_RadialMenu()
		{
		}
	}
	[Token(Token = "0x200038A")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x63F548", Offset = "0x63F548")]
	public class VRTK_RadialMenuController : MonoBehaviour
	{
		[Token(Token = "0x40018E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6547B4", Offset = "0x6547B4")]
		public VRTK_ControllerEvents events;

		[Token(Token = "0x40018E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected VRTK_RadialMenu menu;

		[Token(Token = "0x40018E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected TouchAngleDeflection currentTad;

		[Token(Token = "0x40018E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected bool touchpadTouched;

		[Token(Token = "0x60017B0")]
		[Address(RVA = "0x93BD94", Offset = "0x93BD94", VA = "0x93BD94", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x60017B1")]
		[Address(RVA = "0x93BDF8", Offset = "0x93BDF8", VA = "0x93BDF8", Slot = "5")]
		protected virtual void Initialize()
		{
		}

		[Token(Token = "0x60017B2")]
		[Address(RVA = "0x93BE88", Offset = "0x93BE88", VA = "0x93BE88", Slot = "6")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x60017B3")]
		[Address(RVA = "0x93C244", Offset = "0x93C244", VA = "0x93C244", Slot = "7")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x60017B4")]
		[Address(RVA = "0x93C424", Offset = "0x93C424", VA = "0x93C424", Slot = "8")]
		protected virtual void DoClickButton([Optional] object sender)
		{
		}

		[Token(Token = "0x60017B5")]
		[Address(RVA = "0x93C46C", Offset = "0x93C46C", VA = "0x93C46C", Slot = "9")]
		protected virtual void DoUnClickButton([Optional] object sender)
		{
		}

		[Token(Token = "0x60017B6")]
		[Address(RVA = "0x93C4B4", Offset = "0x93C4B4", VA = "0x93C4B4", Slot = "10")]
		protected virtual void DoShowMenu(TouchAngleDeflection initialTad, [Optional] object sender)
		{
		}

		[Token(Token = "0x60017B7")]
		[Address(RVA = "0x93C518", Offset = "0x93C518", VA = "0x93C518", Slot = "11")]
		protected virtual void DoHideMenu(bool force, [Optional] object sender)
		{
		}

		[Token(Token = "0x60017B8")]
		[Address(RVA = "0x93C584", Offset = "0x93C584", VA = "0x93C584", Slot = "12")]
		protected virtual void DoChangeAngle(TouchAngleDeflection givenTouchAngleDeflection, [Optional] object sender)
		{
		}

		[Token(Token = "0x60017B9")]
		[Address(RVA = "0x93C5D4", Offset = "0x93C5D4", VA = "0x93C5D4", Slot = "13")]
		protected virtual void AttemptHapticPulse(float strength)
		{
		}

		[Token(Token = "0x60017BA")]
		[Address(RVA = "0x93C6BC", Offset = "0x93C6BC", VA = "0x93C6BC", Slot = "14")]
		protected virtual void DoTouchpadClicked(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60017BB")]
		[Address(RVA = "0x93C6CC", Offset = "0x93C6CC", VA = "0x93C6CC", Slot = "15")]
		protected virtual void DoTouchpadUnclicked(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60017BC")]
		[Address(RVA = "0x93C6DC", Offset = "0x93C6DC", VA = "0x93C6DC", Slot = "16")]
		protected virtual void DoTouchpadTouched(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60017BD")]
		[Address(RVA = "0x93C758", Offset = "0x93C758", VA = "0x93C758", Slot = "17")]
		protected virtual void DoTouchpadUntouched(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60017BE")]
		[Address(RVA = "0x93C770", Offset = "0x93C770", VA = "0x93C770", Slot = "18")]
		protected virtual void DoTouchpadAxisChanged(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60017BF")]
		[Address(RVA = "0x93C7F0", Offset = "0x93C7F0", VA = "0x93C7F0", Slot = "19")]
		protected virtual TouchAngleDeflection CalculateAngle(ControllerInteractionEventArgs e)
		{
			return default(TouchAngleDeflection);
		}

		[Token(Token = "0x60017C0")]
		[Address(RVA = "0x93C82C", Offset = "0x93C82C", VA = "0x93C82C")]
		public VRTK_RadialMenuController()
		{
		}
	}
	[Token(Token = "0x200038B")]
	public class VRTK_SDKSetupSwitcher : MonoBehaviour
	{
		[Token(Token = "0x20007E4")]
		protected enum ViewingState
		{
			[Token(Token = "0x40029CF")]
			Status,
			[Token(Token = "0x40029D0")]
			Selection
		}

		[Serializable]
		[Token(Token = "0x20007E5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x645CF8", Offset = "0x645CF8")]
		private sealed class <>c
		{
			[Token(Token = "0x40029D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40029D2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<VRTK_SDKSetup, bool> <>9__18_0;

			[Token(Token = "0x40029D3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static UnityAction <>9__20_0;

			[Token(Token = "0x6003273")]
			[Address(RVA = "0x94D330", Offset = "0x94D330", VA = "0x94D330")]
			public <>c()
			{
			}

			[Token(Token = "0x6003274")]
			[Address(RVA = "0x94D338", Offset = "0x94D338", VA = "0x94D338")]
			internal bool <Show>b__18_0(VRTK_SDKSetup setup)
			{
				return default(bool);
			}

			[Token(Token = "0x6003275")]
			[Address(RVA = "0x94D3E8", Offset = "0x94D3E8", VA = "0x94D3E8")]
			internal void <AddSelectionButtons>b__20_0()
			{
			}
		}

		[Token(Token = "0x20007E6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x645D08", Offset = "0x645D08")]
		private sealed class <>c__DisplayClass20_0
		{
			[Token(Token = "0x40029D4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public VRTK_SDKSetup[] setups;

			[Token(Token = "0x6003276")]
			[Address(RVA = "0x94D180", Offset = "0x94D180", VA = "0x94D180")]
			public <>c__DisplayClass20_0()
			{
			}
		}

		[Token(Token = "0x20007E7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x645D18", Offset = "0x645D18")]
		private sealed class <>c__DisplayClass20_1
		{
			[Token(Token = "0x40029D5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int indexCopy;

			[Token(Token = "0x40029D6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public <>c__DisplayClass20_0 CS$<>8__locals1;

			[Token(Token = "0x6003277")]
			[Address(RVA = "0x94D188", Offset = "0x94D188", VA = "0x94D188")]
			public <>c__DisplayClass20_1()
			{
			}

			[Token(Token = "0x6003278")]
			[Address(RVA = "0x94D448", Offset = "0x94D448", VA = "0x94D448")]
			internal void <AddSelectionButtons>b__1()
			{
			}
		}

		[Token(Token = "0x40018E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6547EC", Offset = "0x6547EC")]
		[SerializeField]
		protected Camera fallbackCamera;

		[Token(Token = "0x40018E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		protected EventSystem eventSystem;

		[Token(Token = "0x40018E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x654848", Offset = "0x654848")]
		[SerializeField]
		protected Text currentText;

		[Token(Token = "0x40018E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		protected RectTransform statusPanel;

		[Token(Token = "0x40018EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		protected RectTransform selectionPanel;

		[Token(Token = "0x40018EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		protected Button switchButton;

		[Token(Token = "0x40018EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		protected Button cancelButton;

		[Token(Token = "0x40018ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		protected Button chooseButton;

		[Token(Token = "0x40018EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		protected bool playareaSync;

		[Token(Token = "0x40018EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		protected readonly List<GameObject> chooseButtonGameObjects;

		[Token(Token = "0x40018F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		protected Transform currentPlayarea;

		[Token(Token = "0x60017C1")]
		[Address(RVA = "0x94BE3C", Offset = "0x94BE3C", VA = "0x94BE3C", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x60017C2")]
		[Address(RVA = "0x94BEFC", Offset = "0x94BEFC", VA = "0x94BEFC", Slot = "5")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x60017C3")]
		[Address(RVA = "0x94C078", Offset = "0x94C078", VA = "0x94C078", Slot = "6")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x60017C4")]
		[Address(RVA = "0x94C1F4", Offset = "0x94C1F4", VA = "0x94C1F4", Slot = "7")]
		protected virtual void OnLoadedSetupChanged(VRTK_SDKManager sender, VRTK_SDKManager.LoadedSetupChangeEventArgs e)
		{
		}

		[Token(Token = "0x60017C5")]
		[Address(RVA = "0x94C43C", Offset = "0x94C43C", VA = "0x94C43C", Slot = "8")]
		protected virtual void OnSwitchButtonClick()
		{
		}

		[Token(Token = "0x60017C6")]
		[Address(RVA = "0x94C44C", Offset = "0x94C44C", VA = "0x94C44C", Slot = "9")]
		protected virtual void OnCancelButtonClick()
		{
		}

		[Token(Token = "0x60017C7")]
		[Address(RVA = "0x94C45C", Offset = "0x94C45C", VA = "0x94C45C", Slot = "10")]
		protected virtual void Show(ViewingState viewingState)
		{
		}

		[Token(Token = "0x60017C8")]
		[Address(RVA = "0x94C8E4", Offset = "0x94C8E4", VA = "0x94C8E4", Slot = "11")]
		protected virtual void UpdateCurrentText()
		{
		}

		[Token(Token = "0x60017C9")]
		[Address(RVA = "0x94C9D8", Offset = "0x94C9D8", VA = "0x94C9D8", Slot = "12")]
		protected virtual void AddSelectionButtons()
		{
		}

		[Token(Token = "0x60017CA")]
		[Address(RVA = "0x94D190", Offset = "0x94D190", VA = "0x94D190", Slot = "13")]
		protected virtual void RemoveCreatedChooseButtons()
		{
		}

		[Token(Token = "0x60017CB")]
		[Address(RVA = "0x94D254", Offset = "0x94D254", VA = "0x94D254")]
		public VRTK_SDKSetupSwitcher()
		{
		}
	}
	[Token(Token = "0x200038C")]
	public struct SnapDropZoneEventArgs
	{
		[Token(Token = "0x40018F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public GameObject snappedObject;
	}
	[Token(Token = "0x200038D")]
	public delegate void SnapDropZoneEventHandler(object sender, SnapDropZoneEventArgs e);
	[Token(Token = "0x200038E")]
	public class VRTK_SnapDropZone : MonoBehaviour
	{
		[Token(Token = "0x20007E8")]
		public enum SnapTypes
		{
			[Token(Token = "0x40029D8")]
			UseKinematic,
			[Token(Token = "0x40029D9")]
			UseJoint,
			[Token(Token = "0x40029DA")]
			UseParenting
		}

		[Token(Token = "0x20007E9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x645D28", Offset = "0x645D28")]
		private sealed class <CheckCanSnapObjectAtEndOfFrame>d__100 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40029DB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40029DC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40029DD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VRTK_SnapDropZone <>4__this;

			[Token(Token = "0x40029DE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public VRTK_InteractableObject interactableObjectCheck;

			[Token(Token = "0x1700031D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600327C")]
				[Address(RVA = "0x9A0D08", Offset = "0x9A0D08", VA = "0x9A0D08", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700031E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600327E")]
				[Address(RVA = "0x9A0D78", Offset = "0x9A0D78", VA = "0x9A0D78", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003279")]
			[Address(RVA = "0x99E51C", Offset = "0x99E51C", VA = "0x99E51C")]
			[DebuggerHidden]
			public <CheckCanSnapObjectAtEndOfFrame>d__100(int <>1__state)
			{
			}

			[Token(Token = "0x600327A")]
			[Address(RVA = "0x9A0C44", Offset = "0x9A0C44", VA = "0x9A0C44", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600327B")]
			[Address(RVA = "0x9A0C48", Offset = "0x9A0C48", VA = "0x9A0C48", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600327D")]
			[Address(RVA = "0x9A0D10", Offset = "0x9A0D10", VA = "0x9A0D10", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20007EA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x645D38", Offset = "0x645D38")]
		private sealed class <UpdateTransformDimensions>d__101 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40029DF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40029E0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40029E1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VRTK_InteractableObject ioCheck;

			[Token(Token = "0x40029E2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public VRTK_SnapDropZone <>4__this;

			[Token(Token = "0x40029E3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float duration;

			[Token(Token = "0x40029E4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public GameObject endSettings;

			[Token(Token = "0x40029E5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public Vector3 endScale;

			[Token(Token = "0x40029E6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			private float <elapsedTime>5__2;

			[Token(Token = "0x40029E7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private Transform <ioTransform>5__3;

			[Token(Token = "0x40029E8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private Vector3 <startPosition>5__4;

			[Token(Token = "0x40029E9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
			private Quaternion <startRotation>5__5;

			[Token(Token = "0x40029EA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
			private Vector3 <startScale>5__6;

			[Token(Token = "0x40029EB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			private bool <storedKinematicState>5__7;

			[Token(Token = "0x1700031F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6003282")]
				[Address(RVA = "0x9A15E4", Offset = "0x9A15E4", VA = "0x9A15E4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000320")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003284")]
				[Address(RVA = "0x9A1654", Offset = "0x9A1654", VA = "0x9A1654", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600327F")]
			[Address(RVA = "0x99E63C", Offset = "0x99E63C", VA = "0x99E63C")]
			[DebuggerHidden]
			public <UpdateTransformDimensions>d__101(int <>1__state)
			{
			}

			[Token(Token = "0x6003280")]
			[Address(RVA = "0x9A0EDC", Offset = "0x9A0EDC", VA = "0x9A0EDC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003281")]
			[Address(RVA = "0x9A0EE0", Offset = "0x9A0EE0", VA = "0x9A0EE0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003283")]
			[Address(RVA = "0x9A15EC", Offset = "0x9A15EC", VA = "0x9A15EC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20007EB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x645D48", Offset = "0x645D48")]
		private sealed class <AttemptForceSnapAtEndOfFrame>d__110 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40029EC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40029ED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40029EE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VRTK_InteractableObject objectToSnap;

			[Token(Token = "0x40029EF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public VRTK_SnapDropZone <>4__this;

			[Token(Token = "0x17000321")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6003288")]
				[Address(RVA = "0x9A0BCC", Offset = "0x9A0BCC", VA = "0x9A0BCC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000322")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600328A")]
				[Address(RVA = "0x9A0C3C", Offset = "0x9A0C3C", VA = "0x9A0C3C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003285")]
			[Address(RVA = "0x99F164", Offset = "0x99F164", VA = "0x99F164")]
			[DebuggerHidden]
			public <AttemptForceSnapAtEndOfFrame>d__110(int <>1__state)
			{
			}

			[Token(Token = "0x6003286")]
			[Address(RVA = "0x9A0AE4", Offset = "0x9A0AE4", VA = "0x9A0AE4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003287")]
			[Address(RVA = "0x9A0AE8", Offset = "0x9A0AE8", VA = "0x9A0AE8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003289")]
			[Address(RVA = "0x9A0BD4", Offset = "0x9A0BD4", VA = "0x9A0BD4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20007EC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x645D58", Offset = "0x645D58")]
		private sealed class <OverridePreviousStateAtEndOfFrame>d__126 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40029F0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40029F1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40029F2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VRTK_InteractableObject io;

			[Token(Token = "0x40029F3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Transform parent;

			[Token(Token = "0x40029F4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public bool kinematic;

			[Token(Token = "0x40029F5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
			public bool grabbable;

			[Token(Token = "0x17000323")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600328E")]
				[Address(RVA = "0x9A0E64", Offset = "0x9A0E64", VA = "0x9A0E64", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000324")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003290")]
				[Address(RVA = "0x9A0ED4", Offset = "0x9A0ED4", VA = "0x9A0ED4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600328B")]
			[Address(RVA = "0x9A09F8", Offset = "0x9A09F8", VA = "0x9A09F8")]
			[DebuggerHidden]
			public <OverridePreviousStateAtEndOfFrame>d__126(int <>1__state)
			{
			}

			[Token(Token = "0x600328C")]
			[Address(RVA = "0x9A0D80", Offset = "0x9A0D80", VA = "0x9A0D80", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600328D")]
			[Address(RVA = "0x9A0D84", Offset = "0x9A0D84", VA = "0x9A0D84", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600328F")]
			[Address(RVA = "0x9A0E6C", Offset = "0x9A0E6C", VA = "0x9A0E6C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40018F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6548F4", Offset = "0x6548F4")]
		public GameObject highlightObjectPrefab;

		[Token(Token = "0x40018F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65492C", Offset = "0x65492C")]
		public SnapTypes snapType;

		[Token(Token = "0x40018F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x654964", Offset = "0x654964")]
		public float snapDuration;

		[Token(Token = "0x40018F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65499C", Offset = "0x65499C")]
		public bool applyScalingOnSnap;

		[Token(Token = "0x40018F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6549D4", Offset = "0x6549D4")]
		public bool cloneNewOnUnsnap;

		[Token(Token = "0x40018F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x654A0C", Offset = "0x654A0C")]
		public Color highlightColor;

		[Token(Token = "0x40018F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x654A44", Offset = "0x654A44")]
		public Color validHighlightColor;

		[Token(Token = "0x40018F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x654A7C", Offset = "0x654A7C")]
		public bool highlightAlwaysActive;

		[Token(Token = "0x40018FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x654AB4", Offset = "0x654AB4")]
		public VRTK_PolicyList validObjectListPolicy;

		[Token(Token = "0x40018FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x654AEC", Offset = "0x654AEC")]
		public bool displayDropZoneInEditor;

		[Token(Token = "0x40018FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x654B24", Offset = "0x654B24")]
		public VRTK_InteractableObject defaultSnappedInteractableObject;

		[Token(Token = "0x40018FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x654B5C", Offset = "0x654B5C")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x654B5C", Offset = "0x654B5C")]
		[ObsoleteInspector]
		public GameObject defaultSnappedObject;

		[Token(Token = "0x4001903")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		protected GameObject previousPrefab;

		[Token(Token = "0x4001904")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		protected GameObject highlightContainer;

		[Token(Token = "0x4001905")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		protected GameObject highlightObject;

		[Token(Token = "0x4001906")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		protected GameObject highlightEditorObject;

		[Token(Token = "0x4001907")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		protected List<VRTK_InteractableObject> currentValidSnapInteractableObjects;

		[Token(Token = "0x4001908")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		protected VRTK_InteractableObject currentSnappedObject;

		[Token(Token = "0x4001909")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		protected GameObject objectToClone;

		[Token(Token = "0x400190A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		protected bool[] clonedObjectColliderStates;

		[Token(Token = "0x400190B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		protected bool willSnap;

		[Token(Token = "0x400190C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD9")]
		protected bool isSnapped;

		[Token(Token = "0x400190D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDA")]
		protected bool wasSnapped;

		[Token(Token = "0x400190E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDB")]
		protected bool isHighlighted;

		[Token(Token = "0x400190F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		protected VRTK_BaseHighlighter objectHighlighter;

		[Token(Token = "0x4001910")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		protected Coroutine transitionInPlaceRoutine;

		[Token(Token = "0x4001911")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		protected Coroutine attemptTransitionAtEndOfFrameRoutine;

		[Token(Token = "0x4001912")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		protected Coroutine checkCanSnapRoutine;

		[Token(Token = "0x4001913")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		protected bool originalJointCollisionState;

		[Token(Token = "0x4001914")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		protected Coroutine overridePreviousStateAtEndOfFrameRoutine;

		[Token(Token = "0x4001915")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public bool acceptObjects;

		[Token(Token = "0x4001916")]
		protected const string HIGHLIGHT_CONTAINER_NAME = "HighlightContainer";

		[Token(Token = "0x4001917")]
		protected const string HIGHLIGHT_OBJECT_NAME = "HighlightObject";

		[Token(Token = "0x4001918")]
		protected const string HIGHLIGHT_EDITOR_OBJECT_NAME = "EditorHighlightObject";

		[Token(Token = "0x4001919")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool _highlightInstantiate;

		[Token(Token = "0x170001C8")]
		public static bool isInstantiatingHighlight
		{
			[Token(Token = "0x6001818")]
			[Address(RVA = "0x99F264", Offset = "0x99F264", VA = "0x99F264")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x14000087")]
		public event SnapDropZoneEventHandler ObjectEnteredSnapDropZone
		{
			[Token(Token = "0x60017D0")]
			[Address(RVA = "0x99A728", Offset = "0x99A728", VA = "0x99A728")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66B894", Offset = "0x66B894")]
			add
			{
			}
			[Token(Token = "0x60017D1")]
			[Address(RVA = "0x99A814", Offset = "0x99A814", VA = "0x99A814")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66B8A4", Offset = "0x66B8A4")]
			remove
			{
			}
		}

		[Token(Token = "0x14000088")]
		public event SnapDropZoneEventHandler ObjectExitedSnapDropZone
		{
			[Token(Token = "0x60017D2")]
			[Address(RVA = "0x99A900", Offset = "0x99A900", VA = "0x99A900")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66B8B4", Offset = "0x66B8B4")]
			add
			{
			}
			[Token(Token = "0x60017D3")]
			[Address(RVA = "0x99A9EC", Offset = "0x99A9EC", VA = "0x99A9EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66B8C4", Offset = "0x66B8C4")]
			remove
			{
			}
		}

		[Token(Token = "0x14000089")]
		public event SnapDropZoneEventHandler ObjectSnappingToDropZone
		{
			[Token(Token = "0x60017D4")]
			[Address(RVA = "0x99AAD8", Offset = "0x99AAD8", VA = "0x99AAD8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66B8D4", Offset = "0x66B8D4")]
			add
			{
			}
			[Token(Token = "0x60017D5")]
			[Address(RVA = "0x99ABC4", Offset = "0x99ABC4", VA = "0x99ABC4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66B8E4", Offset = "0x66B8E4")]
			remove
			{
			}
		}

		[Token(Token = "0x1400008A")]
		public event SnapDropZoneEventHandler ObjectSnappedToDropZone
		{
			[Token(Token = "0x60017D6")]
			[Address(RVA = "0x99ACB0", Offset = "0x99ACB0", VA = "0x99ACB0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66B8F4", Offset = "0x66B8F4")]
			add
			{
			}
			[Token(Token = "0x60017D7")]
			[Address(RVA = "0x99AD9C", Offset = "0x99AD9C", VA = "0x99AD9C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66B904", Offset = "0x66B904")]
			remove
			{
			}
		}

		[Token(Token = "0x1400008B")]
		public event SnapDropZoneEventHandler ObjectUnsnappedFromDropZone
		{
			[Token(Token = "0x60017D8")]
			[Address(RVA = "0x99AE88", Offset = "0x99AE88", VA = "0x99AE88")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66B914", Offset = "0x66B914")]
			add
			{
			}
			[Token(Token = "0x60017D9")]
			[Address(RVA = "0x99AF74", Offset = "0x99AF74", VA = "0x99AF74")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66B924", Offset = "0x66B924")]
			remove
			{
			}
		}

		[Token(Token = "0x60017DA")]
		[Address(RVA = "0x99B060", Offset = "0x99B060", VA = "0x99B060", Slot = "4")]
		public virtual void OnObjectEnteredSnapDropZone(SnapDropZoneEventArgs e)
		{
		}

		[Token(Token = "0x60017DB")]
		[Address(RVA = "0x99B084", Offset = "0x99B084", VA = "0x99B084", Slot = "5")]
		public virtual void OnObjectExitedSnapDropZone(SnapDropZoneEventArgs e)
		{
		}

		[Token(Token = "0x60017DC")]
		[Address(RVA = "0x99B0A8", Offset = "0x99B0A8", VA = "0x99B0A8", Slot = "6")]
		public virtual void OnObjectSnappedToDropZone(SnapDropZoneEventArgs e)
		{
		}

		[Token(Token = "0x60017DD")]
		[Address(RVA = "0x99B0CC", Offset = "0x99B0CC", VA = "0x99B0CC", Slot = "7")]
		public virtual void OnObjectSnappingToDropZone(SnapDropZoneEventArgs e)
		{
		}

		[Token(Token = "0x60017DE")]
		[Address(RVA = "0x99B0F0", Offset = "0x99B0F0", VA = "0x99B0F0", Slot = "8")]
		public virtual void OnObjectUnsnappedFromDropZone(SnapDropZoneEventArgs e)
		{
		}

		[Token(Token = "0x60017DF")]
		[Address(RVA = "0x99B144", Offset = "0x99B144", VA = "0x99B144", Slot = "9")]
		public virtual SnapDropZoneEventArgs SetSnapDropZoneEvent(GameObject interactableObject)
		{
			return default(SnapDropZoneEventArgs);
		}

		[Token(Token = "0x60017E0")]
		[Address(RVA = "0x99B14C", Offset = "0x99B14C", VA = "0x99B14C", Slot = "10")]
		public virtual void InitaliseHighlightObject(bool removeOldObject = false)
		{
		}

		[Token(Token = "0x60017E1")]
		[Address(RVA = "0x99B22C", Offset = "0x99B22C", VA = "0x99B22C", Slot = "11")]
		public virtual void ForceSnap(GameObject objectToSnap)
		{
		}

		[Token(Token = "0x60017E2")]
		[Address(RVA = "0x99B2A8", Offset = "0x99B2A8", VA = "0x99B2A8", Slot = "12")]
		protected virtual void ForceSnap(VRTK_InteractableObject interactableObjectToSnap)
		{
		}

		[Token(Token = "0x60017E3")]
		[Address(RVA = "0x99B3EC", Offset = "0x99B3EC", VA = "0x99B3EC", Slot = "13")]
		public virtual void ForceUnsnap()
		{
		}

		[Token(Token = "0x60017E4")]
		[Address(RVA = "0x99B468", Offset = "0x99B468", VA = "0x99B468", Slot = "14")]
		public virtual bool ValidSnappableObjectIsHovering()
		{
			return default(bool);
		}

		[Token(Token = "0x60017E5")]
		[Address(RVA = "0x99B548", Offset = "0x99B548", VA = "0x99B548", Slot = "15")]
		public virtual bool IsObjectHovering(GameObject checkObject)
		{
			return default(bool);
		}

		[Token(Token = "0x60017E6")]
		[Address(RVA = "0x99B628", Offset = "0x99B628", VA = "0x99B628", Slot = "16")]
		public virtual bool IsInteractableObjectHovering(VRTK_InteractableObject checkObject)
		{
			return default(bool);
		}

		[Token(Token = "0x60017E7")]
		[Address(RVA = "0x99B6E0", Offset = "0x99B6E0", VA = "0x99B6E0", Slot = "17")]
		public virtual List<GameObject> GetHoveringObjects()
		{
			return null;
		}

		[Token(Token = "0x60017E8")]
		[Address(RVA = "0x99B7F4", Offset = "0x99B7F4", VA = "0x99B7F4", Slot = "18")]
		public virtual List<VRTK_InteractableObject> GetHoveringInteractableObjects()
		{
			return null;
		}

		[Token(Token = "0x60017E9")]
		[Address(RVA = "0x99B7FC", Offset = "0x99B7FC", VA = "0x99B7FC", Slot = "19")]
		public virtual GameObject GetCurrentSnappedObject()
		{
			return null;
		}

		[Token(Token = "0x60017EA")]
		[Address(RVA = "0x99B89C", Offset = "0x99B89C", VA = "0x99B89C", Slot = "20")]
		public virtual VRTK_InteractableObject GetCurrentSnappedInteractableObject()
		{
			return null;
		}

		[Token(Token = "0x60017EB")]
		[Address(RVA = "0x99B8A4", Offset = "0x99B8A4", VA = "0x99B8A4", Slot = "21")]
		public virtual GameObject Clone(Vector3 position)
		{
			return null;
		}

		[Token(Token = "0x60017EC")]
		[Address(RVA = "0x99BCE8", Offset = "0x99BCE8", VA = "0x99BCE8", Slot = "22")]
		public virtual GameObject Clone()
		{
			return null;
		}

		[Token(Token = "0x60017ED")]
		[Address(RVA = "0x99BD60", Offset = "0x99BD60", VA = "0x99BD60", Slot = "23")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x60017EE")]
		[Address(RVA = "0x99BE04", Offset = "0x99BE04", VA = "0x99BE04", Slot = "24")]
		protected virtual void OnApplicationQuit()
		{
		}

		[Token(Token = "0x60017EF")]
		[Address(RVA = "0x99BEC8", Offset = "0x99BEC8", VA = "0x99BEC8", Slot = "25")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x60017F0")]
		[Address(RVA = "0x99C09C", Offset = "0x99C09C", VA = "0x99C09C", Slot = "26")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x60017F1")]
		[Address(RVA = "0x99C140", Offset = "0x99C140", VA = "0x99C140", Slot = "27")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x60017F2")]
		[Address(RVA = "0x99C1C0", Offset = "0x99C1C0", VA = "0x99C1C0", Slot = "28")]
		protected virtual void OnTriggerEnter(Collider collider)
		{
		}

		[Token(Token = "0x60017F3")]
		[Address(RVA = "0x99C240", Offset = "0x99C240", VA = "0x99C240", Slot = "29")]
		protected virtual void OnTriggerExit(Collider collider)
		{
		}

		[Token(Token = "0x60017F4")]
		[Address(RVA = "0x99C2C0", Offset = "0x99C2C0", VA = "0x99C2C0", Slot = "30")]
		protected virtual void CheckCanSnap(VRTK_InteractableObject interactableObjectCheck)
		{
		}

		[Token(Token = "0x60017F5")]
		[Address(RVA = "0x99C434", Offset = "0x99C434", VA = "0x99C434", Slot = "31")]
		protected virtual void CheckCanUnsnap(VRTK_InteractableObject interactableObjectCheck)
		{
		}

		[Token(Token = "0x60017F6")]
		[Address(RVA = "0x99C634", Offset = "0x99C634", VA = "0x99C634", Slot = "32")]
		protected virtual bool ValidUnsnap(VRTK_InteractableObject interactableObjectCheck)
		{
			return default(bool);
		}

		[Token(Token = "0x60017F7")]
		[Address(RVA = "0x99C708", Offset = "0x99C708", VA = "0x99C708", Slot = "33")]
		protected virtual void SnapObjectToZone(VRTK_InteractableObject objectToSnap)
		{
		}

		[Token(Token = "0x60017F8")]
		[Address(RVA = "0x99C774", Offset = "0x99C774", VA = "0x99C774", Slot = "34")]
		protected virtual void UnregisterAllUngrabEvents()
		{
		}

		[Token(Token = "0x60017F9")]
		[Address(RVA = "0x99C8DC", Offset = "0x99C8DC", VA = "0x99C8DC", Slot = "35")]
		protected virtual bool ValidSnapObject(VRTK_InteractableObject interactableObjectCheck, bool grabState, bool checkGrabState = true)
		{
			return default(bool);
		}

		[Token(Token = "0x60017FA")]
		[Address(RVA = "0x99C9D0", Offset = "0x99C9D0", VA = "0x99C9D0", Slot = "36")]
		protected virtual string ObjectPath(string name)
		{
			return null;
		}

		[Token(Token = "0x60017FB")]
		[Address(RVA = "0x99CA24", Offset = "0x99CA24", VA = "0x99CA24", Slot = "37")]
		protected virtual void CheckSnappedItemExists()
		{
		}

		[Token(Token = "0x60017FC")]
		[Address(RVA = "0x99CB78", Offset = "0x99CB78", VA = "0x99CB78", Slot = "38")]
		protected virtual void CheckPrefabUpdate()
		{
		}

		[Token(Token = "0x60017FD")]
		[Address(RVA = "0x99CC4C", Offset = "0x99CC4C", VA = "0x99CC4C", Slot = "39")]
		protected virtual void SetObjectHighlight()
		{
		}

		[Token(Token = "0x60017FE")]
		[Address(RVA = "0x99CCF4", Offset = "0x99CCF4", VA = "0x99CCF4", Slot = "40")]
		protected virtual void ToggleHighlightColor()
		{
		}

		[Token(Token = "0x60017FF")]
		[Address(RVA = "0x99CE94", Offset = "0x99CE94", VA = "0x99CE94", Slot = "41")]
		protected virtual void CreateHighlightersInEditor()
		{
		}

		[Token(Token = "0x6001800")]
		[Address(RVA = "0x99CED0", Offset = "0x99CED0", VA = "0x99CED0", Slot = "42")]
		protected virtual void CheckCurrentValidSnapObjectStillValid()
		{
		}

		[Token(Token = "0x6001801")]
		[Address(RVA = "0x99D0D0", Offset = "0x99D0D0", VA = "0x99D0D0", Slot = "43")]
		protected virtual void ForceSetObjects()
		{
		}

		[Token(Token = "0x6001802")]
		[Address(RVA = "0x99D37C", Offset = "0x99D37C", VA = "0x99D37C", Slot = "44")]
		protected virtual void GenerateContainer()
		{
		}

		[Token(Token = "0x6001803")]
		[Address(RVA = "0x99D650", Offset = "0x99D650", VA = "0x99D650", Slot = "45")]
		protected virtual void DisableHighlightShadows()
		{
		}

		[Token(Token = "0x6001804")]
		[Address(RVA = "0x99D79C", Offset = "0x99D79C", VA = "0x99D79C", Slot = "46")]
		protected virtual void SetContainer()
		{
		}

		[Token(Token = "0x6001805")]
		[Address(RVA = "0x99D864", Offset = "0x99D864", VA = "0x99D864", Slot = "47")]
		protected virtual void GenerateObjects()
		{
		}

		[Token(Token = "0x6001806")]
		[Address(RVA = "0x99D948", Offset = "0x99D948", VA = "0x99D948", Slot = "48")]
		protected virtual void SnapObject(VRTK_InteractableObject interactableObjectCheck)
		{
		}

		[Token(Token = "0x6001807")]
		[Address(RVA = "0x99DBC4", Offset = "0x99DBC4", VA = "0x99DBC4", Slot = "49")]
		protected virtual void CreatePermanentClone()
		{
		}

		[Token(Token = "0x6001808")]
		[Address(RVA = "0x99DF48", Offset = "0x99DF48", VA = "0x99DF48", Slot = "50")]
		protected virtual void ResetPermanentCloneColliders(GameObject objectToReset)
		{
		}

		[Token(Token = "0x6001809")]
		[Address(RVA = "0x99E0C4", Offset = "0x99E0C4", VA = "0x99E0C4", Slot = "51")]
		protected virtual void ResnapPermanentClone()
		{
		}

		[Token(Token = "0x600180A")]
		[Address(RVA = "0x99E19C", Offset = "0x99E19C", VA = "0x99E19C", Slot = "52")]
		protected virtual void UnsnapObject()
		{
		}

		[Token(Token = "0x600180B")]
		[Address(RVA = "0x99E324", Offset = "0x99E324", VA = "0x99E324", Slot = "53")]
		protected virtual Vector3 GetNewLocalScale(VRTK_InteractableObject checkObject)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600180C")]
		[Address(RVA = "0x99E484", Offset = "0x99E484", VA = "0x99E484", Slot = "54")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x66B934", Offset = "0x66B934")]
		protected virtual IEnumerator CheckCanSnapObjectAtEndOfFrame(VRTK_InteractableObject interactableObjectCheck)
		{
			return null;
		}

		[Token(Token = "0x600180D")]
		[Address(RVA = "0x99E548", Offset = "0x99E548", VA = "0x99E548", Slot = "55")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x66B998", Offset = "0x66B998")]
		protected virtual IEnumerator UpdateTransformDimensions(VRTK_InteractableObject ioCheck, GameObject endSettings, Vector3 endScale, float duration)
		{
			return null;
		}

		[Token(Token = "0x600180E")]
		[Address(RVA = "0x99E668", Offset = "0x99E668", VA = "0x99E668", Slot = "56")]
		protected virtual void SetDropSnapType(VRTK_InteractableObject ioCheck)
		{
		}

		[Token(Token = "0x600180F")]
		[Address(RVA = "0x99E7E0", Offset = "0x99E7E0", VA = "0x99E7E0", Slot = "57")]
		protected virtual void SetSnapDropZoneJoint(Rigidbody snapTo)
		{
		}

		[Token(Token = "0x6001810")]
		[Address(RVA = "0x99EC00", Offset = "0x99EC00", VA = "0x99EC00", Slot = "58")]
		protected virtual void ResetSnapDropZoneJoint()
		{
		}

		[Token(Token = "0x6001811")]
		[Address(RVA = "0x99ECBC", Offset = "0x99ECBC", VA = "0x99ECBC", Slot = "59")]
		protected virtual void AddCurrentValidSnapObject(VRTK_InteractableObject givenObject)
		{
		}

		[Token(Token = "0x6001812")]
		[Address(RVA = "0x99EDE8", Offset = "0x99EDE8", VA = "0x99EDE8", Slot = "60")]
		protected virtual void RemoveCurrentValidSnapObject(VRTK_InteractableObject givenObject)
		{
		}

		[Token(Token = "0x6001813")]
		[Address(RVA = "0x99EF20", Offset = "0x99EF20", VA = "0x99EF20", Slot = "61")]
		protected virtual void InteractableObjectGrabbed(object sender, InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x6001814")]
		[Address(RVA = "0x99EFE8", Offset = "0x99EFE8", VA = "0x99EFE8", Slot = "62")]
		protected virtual void InteractableObjectUngrabbed(object sender, InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x6001815")]
		[Address(RVA = "0x99F0B4", Offset = "0x99F0B4", VA = "0x99F0B4", Slot = "63")]
		protected virtual void AttemptForceSnap(VRTK_InteractableObject objectToSnap)
		{
		}

		[Token(Token = "0x6001816")]
		[Address(RVA = "0x99F0CC", Offset = "0x99F0CC", VA = "0x99F0CC", Slot = "64")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x66B9FC", Offset = "0x66B9FC")]
		protected virtual IEnumerator AttemptForceSnapAtEndOfFrame(VRTK_InteractableObject objectToSnap)
		{
			return null;
		}

		[Token(Token = "0x6001817")]
		[Address(RVA = "0x99F190", Offset = "0x99F190", VA = "0x99F190", Slot = "65")]
		protected virtual void ToggleHighlight(VRTK_InteractableObject checkObject, bool state)
		{
		}

		[Token(Token = "0x6001819")]
		[Address(RVA = "0x99F2CC", Offset = "0x99F2CC", VA = "0x99F2CC", Slot = "66")]
		protected virtual void CopyObject(GameObject objectBlueprint, ref GameObject clonedObject, string givenName)
		{
		}

		[Token(Token = "0x600181A")]
		[Address(RVA = "0x99F63C", Offset = "0x99F63C", VA = "0x99F63C", Slot = "67")]
		protected virtual void GenerateHighlightObject()
		{
		}

		[Token(Token = "0x600181B")]
		[Address(RVA = "0x99F91C", Offset = "0x99F91C", VA = "0x99F91C", Slot = "68")]
		protected virtual void SetHighlightObjectActive(bool state)
		{
		}

		[Token(Token = "0x600181C")]
		[Address(RVA = "0x99F9C8", Offset = "0x99F9C8", VA = "0x99F9C8", Slot = "69")]
		protected virtual void DeleteHighlightObject()
		{
		}

		[Token(Token = "0x600181D")]
		[Address(RVA = "0x99FA58", Offset = "0x99FA58", VA = "0x99FA58", Slot = "70")]
		protected virtual void GenerateEditorHighlightObject()
		{
		}

		[Token(Token = "0x600181E")]
		[Address(RVA = "0x99FCDC", Offset = "0x99FCDC", VA = "0x99FCDC", Slot = "71")]
		protected virtual void CleanHighlightObject(GameObject objectToClean)
		{
		}

		[Token(Token = "0x600181F")]
		[Address(RVA = "0x9A0168", Offset = "0x9A0168", VA = "0x9A0168", Slot = "72")]
		protected virtual void InitialiseHighlighter()
		{
		}

		[Token(Token = "0x6001820")]
		[Address(RVA = "0x9A0474", Offset = "0x9A0474", VA = "0x9A0474", Slot = "73")]
		protected virtual void ChooseDestroyType(Transform deleteTransform)
		{
		}

		[Token(Token = "0x6001821")]
		[Address(RVA = "0x9A0530", Offset = "0x9A0530", VA = "0x9A0530", Slot = "74")]
		protected virtual void ChooseDestroyType(GameObject deleteObject)
		{
		}

		[Token(Token = "0x6001822")]
		[Address(RVA = "0x9A05D0", Offset = "0x9A05D0", VA = "0x9A05D0", Slot = "75")]
		protected virtual void ChooseDestroyType(Component deleteComponent)
		{
		}

		[Token(Token = "0x6001823")]
		[Address(RVA = "0x9A079C", Offset = "0x9A079C", VA = "0x9A079C", Slot = "76")]
		protected virtual void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x6001824")]
		[Address(RVA = "0x9A0920", Offset = "0x9A0920", VA = "0x9A0920", Slot = "77")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x66BA60", Offset = "0x66BA60")]
		protected virtual IEnumerator OverridePreviousStateAtEndOfFrame(VRTK_InteractableObject io, Transform parent, bool kinematic, bool grabbable)
		{
			return null;
		}

		[Token(Token = "0x6001825")]
		[Address(RVA = "0x9A0A24", Offset = "0x9A0A24", VA = "0x9A0A24")]
		public VRTK_SnapDropZone()
		{
		}
	}
	[Token(Token = "0x200038F")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x63F5AC", Offset = "0x63F5AC")]
	public class VRTK_ContentHandler : MonoBehaviour
	{
		[Token(Token = "0x400191A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x654C1C", Offset = "0x654C1C")]
		public VRTK_Control control;

		[Token(Token = "0x400191B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x654C54", Offset = "0x654C54")]
		public Transform inside;

		[Token(Token = "0x400191C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x654C8C", Offset = "0x654C8C")]
		public Transform outside;

		[Token(Token = "0x6001827")]
		[Address(RVA = "0xB07754", Offset = "0xB07754", VA = "0xB07754", Slot = "4")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x6001828")]
		[Address(RVA = "0xB07940", Offset = "0xB07940", VA = "0xB07940", Slot = "5")]
		protected virtual void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x6001829")]
		[Address(RVA = "0xB07B04", Offset = "0xB07B04", VA = "0xB07B04")]
		public VRTK_ContentHandler()
		{
		}
	}
	[Token(Token = "0x2000390")]
	public delegate void Button3DEventHandler(object sender, Control3DEventArgs e);
	[Token(Token = "0x2000391")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x63F5E4", Offset = "0x63F5E4")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x63F5E4", Offset = "0x63F5E4")]
	public class VRTK_Button : VRTK_Control
	{
		[Token(Token = "0x20007ED")]
		public enum ButtonDirection
		{
			[Token(Token = "0x40029F7")]
			autodetect,
			[Token(Token = "0x40029F8")]
			x,
			[Token(Token = "0x40029F9")]
			y,
			[Token(Token = "0x40029FA")]
			z,
			[Token(Token = "0x40029FB")]
			negX,
			[Token(Token = "0x40029FC")]
			negY,
			[Token(Token = "0x40029FD")]
			negZ
		}

		[Token(Token = "0x400191D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x654CC4", Offset = "0x654CC4")]
		public GameObject connectedTo;

		[Token(Token = "0x400191E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x654CFC", Offset = "0x654CFC")]
		public ButtonDirection direction;

		[Token(Token = "0x400191F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x654D34", Offset = "0x654D34")]
		public float activationDistance;

		[Token(Token = "0x4001920")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x654D6C", Offset = "0x654D6C")]
		public float buttonStrength;

		[Token(Token = "0x4001923")]
		protected const float MAX_AUTODETECT_ACTIVATION_LENGTH = 4f;

		[Token(Token = "0x4001924")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		protected ButtonDirection finalDirection;

		[Token(Token = "0x4001925")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		protected Vector3 restingPosition;

		[Token(Token = "0x4001926")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		protected Vector3 activationDir;

		[Token(Token = "0x4001927")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		protected Rigidbody buttonRigidbody;

		[Token(Token = "0x4001928")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		protected ConfigurableJoint buttonJoint;

		[Token(Token = "0x4001929")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		protected ConstantForce buttonForce;

		[Token(Token = "0x400192A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		protected int forceCount;

		[Token(Token = "0x1400008C")]
		public event Button3DEventHandler Pushed
		{
			[Token(Token = "0x600182E")]
			[Address(RVA = "0xB016B8", Offset = "0xB016B8", VA = "0xB016B8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66BAC4", Offset = "0x66BAC4")]
			add
			{
			}
			[Token(Token = "0x600182F")]
			[Address(RVA = "0xB017A4", Offset = "0xB017A4", VA = "0xB017A4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66BAD4", Offset = "0x66BAD4")]
			remove
			{
			}
		}

		[Token(Token = "0x1400008D")]
		public event Button3DEventHandler Released
		{
			[Token(Token = "0x6001830")]
			[Address(RVA = "0xB01890", Offset = "0xB01890", VA = "0xB01890")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66BAE4", Offset = "0x66BAE4")]
			add
			{
			}
			[Token(Token = "0x6001831")]
			[Address(RVA = "0xB0197C", Offset = "0xB0197C", VA = "0xB0197C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66BAF4", Offset = "0x66BAF4")]
			remove
			{
			}
		}

		[Token(Token = "0x6001832")]
		[Address(RVA = "0xB01A68", Offset = "0xB01A68", VA = "0xB01A68", Slot = "19")]
		public virtual void OnPushed(Control3DEventArgs e)
		{
		}

		[Token(Token = "0x6001833")]
		[Address(RVA = "0xB01A84", Offset = "0xB01A84", VA = "0xB01A84", Slot = "20")]
		public virtual void OnReleased(Control3DEventArgs e)
		{
		}

		[Token(Token = "0x6001834")]
		[Address(RVA = "0xB01AA0", Offset = "0xB01AA0", VA = "0xB01AA0", Slot = "16")]
		protected override void OnDrawGizmos()
		{
		}

		[Token(Token = "0x6001835")]
		[Address(RVA = "0xB01DC4", Offset = "0xB01DC4", VA = "0xB01DC4", Slot = "21")]
		protected virtual void SetupCollider()
		{
		}

		[Token(Token = "0x6001836")]
		[Address(RVA = "0xB01E88", Offset = "0xB01E88", VA = "0xB01E88", Slot = "22")]
		protected virtual void SetupRigidbody()
		{
		}

		[Token(Token = "0x6001837")]
		[Address(RVA = "0xB01F90", Offset = "0xB01F90", VA = "0xB01F90", Slot = "23")]
		protected virtual void SetupConstantForce()
		{
		}

		[Token(Token = "0x6001838")]
		[Address(RVA = "0xB02050", Offset = "0xB02050", VA = "0xB02050", Slot = "24")]
		protected virtual void SetupConnectedTo()
		{
		}

		[Token(Token = "0x6001839")]
		[Address(RVA = "0xB02178", Offset = "0xB02178", VA = "0xB02178", Slot = "4")]
		protected override void InitRequiredComponents()
		{
		}

		[Token(Token = "0x600183A")]
		[Address(RVA = "0xB02208", Offset = "0xB02208", VA = "0xB02208", Slot = "25")]
		protected virtual void DetectJointSetup()
		{
		}

		[Token(Token = "0x600183B")]
		[Address(RVA = "0xB025D0", Offset = "0xB025D0", VA = "0xB025D0", Slot = "26")]
		protected virtual void DetectJointLimitsSetup()
		{
		}

		[Token(Token = "0x600183C")]
		[Address(RVA = "0xB02718", Offset = "0xB02718", VA = "0xB02718", Slot = "27")]
		protected virtual void DetectJointDirectionSetup()
		{
		}

		[Token(Token = "0x600183D")]
		[Address(RVA = "0xB02B0C", Offset = "0xB02B0C", VA = "0xB02B0C", Slot = "5")]
		protected override bool DetectSetup()
		{
			return default(bool);
		}

		[Token(Token = "0x600183E")]
		[Address(RVA = "0xB02CB8", Offset = "0xB02CB8", VA = "0xB02CB8", Slot = "6")]
		protected override ControlValueRange RegisterValueRange()
		{
			return default(ControlValueRange);
		}

		[Token(Token = "0x600183F")]
		[Address(RVA = "0xB02CC4", Offset = "0xB02CC4", VA = "0xB02CC4", Slot = "12")]
		protected override void HandleUpdate()
		{
		}

		[Token(Token = "0x6001840")]
		[Address(RVA = "0xB02D78", Offset = "0xB02D78", VA = "0xB02D78", Slot = "28")]
		protected virtual void FixedUpdate()
		{
		}

		[Token(Token = "0x6001841")]
		[Address(RVA = "0xB02E44", Offset = "0xB02E44", VA = "0xB02E44", Slot = "29")]
		protected virtual void OnCollisionExit(Collision collision)
		{
		}

		[Token(Token = "0x6001842")]
		[Address(RVA = "0xB02E54", Offset = "0xB02E54", VA = "0xB02E54", Slot = "30")]
		protected virtual void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x6001843")]
		[Address(RVA = "0xB02E64", Offset = "0xB02E64", VA = "0xB02E64", Slot = "31")]
		protected virtual ButtonDirection DetectDirection()
		{
			return default(ButtonDirection);
		}

		[Token(Token = "0x6001844")]
		[Address(RVA = "0xB03B18", Offset = "0xB03B18", VA = "0xB03B18", Slot = "32")]
		protected virtual Vector3 CalculateActivationDir()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001845")]
		[Address(RVA = "0xB041DC", Offset = "0xB041DC", VA = "0xB041DC", Slot = "33")]
		protected virtual bool ReachedActivationDistance()
		{
			return default(bool);
		}

		[Token(Token = "0x6001846")]
		[Address(RVA = "0xB042B8", Offset = "0xB042B8", VA = "0xB042B8", Slot = "34")]
		protected virtual Vector3 GetForceVector()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001847")]
		[Address(RVA = "0xB0435C", Offset = "0xB0435C", VA = "0xB0435C")]
		public VRTK_Button()
		{
		}
	}
	[Token(Token = "0x2000392")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x63F644", Offset = "0x63F644")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x63F644", Offset = "0x63F644")]
	public class VRTK_Chest : VRTK_Control
	{
		[Token(Token = "0x400192B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x654DC4", Offset = "0x654DC4")]
		public Direction direction;

		[Token(Token = "0x400192C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x654DFC", Offset = "0x654DFC")]
		public GameObject lid;

		[Token(Token = "0x400192D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x654E34", Offset = "0x654E34")]
		public GameObject body;

		[Token(Token = "0x400192E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x654E6C", Offset = "0x654E6C")]
		public GameObject handle;

		[Token(Token = "0x400192F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x654EA4", Offset = "0x654EA4")]
		public GameObject content;

		[Token(Token = "0x4001930")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x654EDC", Offset = "0x654EDC")]
		public bool hideContent;

		[Token(Token = "0x4001931")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x654F14", Offset = "0x654F14")]
		public float maxAngle;

		[Token(Token = "0x4001932")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		protected float minAngle;

		[Token(Token = "0x4001933")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		protected float stepSize;

		[Token(Token = "0x4001934")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		protected Rigidbody bodyRigidbody;

		[Token(Token = "0x4001935")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		protected Rigidbody handleRigidbody;

		[Token(Token = "0x4001936")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		protected FixedJoint handleJoint;

		[Token(Token = "0x4001937")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		protected Rigidbody lidRigidbody;

		[Token(Token = "0x4001938")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		protected HingeJoint lidJoint;

		[Token(Token = "0x4001939")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		protected bool lidJointCreated;

		[Token(Token = "0x400193A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		protected Direction finalDirection;

		[Token(Token = "0x400193B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		protected float subDirection;

		[Token(Token = "0x6001848")]
		[Address(RVA = "0xB04CC4", Offset = "0xB04CC4", VA = "0xB04CC4", Slot = "16")]
		protected override void OnDrawGizmos()
		{
		}

		[Token(Token = "0x6001849")]
		[Address(RVA = "0xB05074", Offset = "0xB05074", VA = "0xB05074", Slot = "4")]
		protected override void InitRequiredComponents()
		{
		}

		[Token(Token = "0x600184A")]
		[Address(RVA = "0xB050DC", Offset = "0xB050DC", VA = "0xB050DC", Slot = "5")]
		protected override bool DetectSetup()
		{
			return default(bool);
		}

		[Token(Token = "0x600184B")]
		[Address(RVA = "0xB05698", Offset = "0xB05698", VA = "0xB05698", Slot = "6")]
		protected override ControlValueRange RegisterValueRange()
		{
			return default(ControlValueRange);
		}

		[Token(Token = "0x600184C")]
		[Address(RVA = "0xB05754", Offset = "0xB05754", VA = "0xB05754", Slot = "12")]
		protected override void HandleUpdate()
		{
		}

		[Token(Token = "0x600184D")]
		[Address(RVA = "0xB05784", Offset = "0xB05784", VA = "0xB05784", Slot = "19")]
		protected virtual Direction DetectDirection()
		{
			return default(Direction);
		}

		[Token(Token = "0x600184E")]
		[Address(RVA = "0xB05C2C", Offset = "0xB05C2C", VA = "0xB05C2C", Slot = "20")]
		protected virtual void InitBody()
		{
		}

		[Token(Token = "0x600184F")]
		[Address(RVA = "0xB05D18", Offset = "0xB05D18", VA = "0xB05D18", Slot = "21")]
		protected virtual void InitLid()
		{
		}

		[Token(Token = "0x6001850")]
		[Address(RVA = "0xB05EEC", Offset = "0xB05EEC", VA = "0xB05EEC", Slot = "22")]
		protected virtual void InitHandle()
		{
		}

		[Token(Token = "0x6001851")]
		[Address(RVA = "0xB060F8", Offset = "0xB060F8", VA = "0xB060F8", Slot = "23")]
		protected virtual void CreateInteractableObject(GameObject targetGameObject)
		{
		}

		[Token(Token = "0x6001852")]
		[Address(RVA = "0xB06254", Offset = "0xB06254", VA = "0xB06254", Slot = "24")]
		protected virtual float CalculateValue()
		{
			return default(float);
		}

		[Token(Token = "0x6001853")]
		[Address(RVA = "0xB06424", Offset = "0xB06424", VA = "0xB06424")]
		public VRTK_Chest()
		{
		}
	}
	[Token(Token = "0x2000393")]
	public struct Control3DEventArgs
	{
		[Token(Token = "0x400193C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float value;

		[Token(Token = "0x400193D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float normalizedValue;
	}
	[Token(Token = "0x2000394")]
	public delegate void Control3DEventHandler(object sender, Control3DEventArgs e);
	[Token(Token = "0x2000395")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x63F6A4", Offset = "0x63F6A4")]
	public abstract class VRTK_Control : MonoBehaviour
	{
		[Token(Token = "0x20007EE")]
		public struct ControlValueRange
		{
			[Token(Token = "0x40029FE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float controlMin;

			[Token(Token = "0x40029FF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public float controlMax;
		}

		[Token(Token = "0x20007EF")]
		public enum Direction
		{
			[Token(Token = "0x4002A01")]
			autodetect,
			[Token(Token = "0x4002A02")]
			x,
			[Token(Token = "0x4002A03")]
			y,
			[Token(Token = "0x4002A04")]
			z
		}

		[Token(Token = "0x400193E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x654F4C", Offset = "0x654F4C")]
		public bool interactWithoutGrab;

		[Token(Token = "0x4001940")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected Bounds bounds;

		[Token(Token = "0x4001941")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected bool setupSuccessful;

		[Token(Token = "0x4001942")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected VRTK_ControllerRigidbodyActivator autoTriggerVolume;

		[Token(Token = "0x4001943")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected float value;

		[Token(Token = "0x4001944")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected static Color COLOR_OK;

		[Token(Token = "0x4001945")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected static Color COLOR_ERROR;

		[Token(Token = "0x4001946")]
		protected const float MIN_OPENING_DISTANCE = 20f;

		[Token(Token = "0x4001947")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		protected ControlValueRange valueRange;

		[Token(Token = "0x4001948")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		protected GameObject controlContent;

		[Token(Token = "0x4001949")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		protected bool hideControlContent;

		[Token(Token = "0x1400008E")]
		public event Control3DEventHandler ValueChanged
		{
			[Token(Token = "0x6001858")]
			[Address(RVA = "0xB07B0C", Offset = "0xB07B0C", VA = "0xB07B0C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66BB04", Offset = "0x66BB04")]
			add
			{
			}
			[Token(Token = "0x6001859")]
			[Address(RVA = "0xB07BF8", Offset = "0xB07BF8", VA = "0xB07BF8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66BB14", Offset = "0x66BB14")]
			remove
			{
			}
		}

		[Token(Token = "0x600185A")]
		protected abstract void InitRequiredComponents();

		[Token(Token = "0x600185B")]
		protected abstract bool DetectSetup();

		[Token(Token = "0x600185C")]
		protected abstract ControlValueRange RegisterValueRange();

		[Token(Token = "0x600185D")]
		[Address(RVA = "0xB07CE4", Offset = "0xB07CE4", VA = "0xB07CE4", Slot = "7")]
		public virtual void OnValueChanged(Control3DEventArgs e)
		{
		}

		[Token(Token = "0x600185E")]
		[Address(RVA = "0xB07D00", Offset = "0xB07D00", VA = "0xB07D00", Slot = "8")]
		public virtual float GetValue()
		{
			return default(float);
		}

		[Token(Token = "0x600185F")]
		[Address(RVA = "0xB07D08", Offset = "0xB07D08", VA = "0xB07D08", Slot = "9")]
		public virtual float GetNormalizedValue()
		{
			return default(float);
		}

		[Token(Token = "0x6001860")]
		[Address(RVA = "0xB07E10", Offset = "0xB07E10", VA = "0xB07E10", Slot = "10")]
		public virtual void SetContent(GameObject content, bool hideContent)
		{
		}

		[Token(Token = "0x6001861")]
		[Address(RVA = "0xB07E20", Offset = "0xB07E20", VA = "0xB07E20", Slot = "11")]
		public virtual GameObject GetContent()
		{
			return null;
		}

		[Token(Token = "0x6001862")]
		protected abstract void HandleUpdate();

		[Token(Token = "0x6001863")]
		[Address(RVA = "0xB07E28", Offset = "0xB07E28", VA = "0xB07E28", Slot = "13")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6001864")]
		[Address(RVA = "0xB07ED0", Offset = "0xB07ED0", VA = "0xB07ED0", Slot = "14")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x6001865")]
		[Address(RVA = "0xB07F84", Offset = "0xB07F84", VA = "0xB07F84", Slot = "15")]
		protected virtual Control3DEventArgs SetControlEvent()
		{
			return default(Control3DEventArgs);
		}

		[Token(Token = "0x6001866")]
		[Address(RVA = "0xB01BE0", Offset = "0xB01BE0", VA = "0xB01BE0", Slot = "16")]
		protected virtual void OnDrawGizmos()
		{
		}

		[Token(Token = "0x6001867")]
		[Address(RVA = "0xB07FD0", Offset = "0xB07FD0", VA = "0xB07FD0", Slot = "17")]
		protected virtual void CreateTriggerVolume()
		{
		}

		[Token(Token = "0x6001868")]
		[Address(RVA = "0xB0824C", Offset = "0xB0824C", VA = "0xB0824C")]
		protected Vector3 GetThirdDirection(Vector3 axis1, Vector3 axis2)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001869")]
		[Address(RVA = "0xB08398", Offset = "0xB08398", VA = "0xB08398", Slot = "18")]
		protected virtual void HandleInteractables()
		{
		}

		[Token(Token = "0x600186A")]
		[Address(RVA = "0xB043D8", Offset = "0xB043D8", VA = "0xB043D8")]
		protected VRTK_Control()
		{
		}
	}
	[Token(Token = "0x2000396")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x63F6F0", Offset = "0x63F6F0")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x63F6F0", Offset = "0x63F6F0")]
	public class VRTK_Door : VRTK_Control
	{
		[Token(Token = "0x400194A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x654F94", Offset = "0x654F94")]
		public Direction direction;

		[Token(Token = "0x400194B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x654FCC", Offset = "0x654FCC")]
		public GameObject door;

		[Token(Token = "0x400194C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x655004", Offset = "0x655004")]
		public GameObject handles;

		[Token(Token = "0x400194D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65503C", Offset = "0x65503C")]
		public GameObject frame;

		[Token(Token = "0x400194E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x655074", Offset = "0x655074")]
		public GameObject content;

		[Token(Token = "0x400194F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6550AC", Offset = "0x6550AC")]
		public bool hideContent;

		[Token(Token = "0x4001950")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6550E4", Offset = "0x6550E4")]
		public float maxAngle;

		[Token(Token = "0x4001951")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65511C", Offset = "0x65511C")]
		public bool openInward;

		[Token(Token = "0x4001952")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x99")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x655154", Offset = "0x655154")]
		public bool openOutward;

		[Token(Token = "0x4001953")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65518C", Offset = "0x65518C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x65518C", Offset = "0x65518C")]
		public float minSnapClose;

		[Token(Token = "0x4001954")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6551E0", Offset = "0x6551E0")]
		public float releasedFriction;

		[Token(Token = "0x4001955")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x655218", Offset = "0x655218")]
		public float grabbedFriction;

		[Token(Token = "0x4001956")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x655250", Offset = "0x655250")]
		public bool handleInteractableOnly;

		[Token(Token = "0x4001957")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		protected float stepSize;

		[Token(Token = "0x4001958")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		protected Rigidbody doorRigidbody;

		[Token(Token = "0x4001959")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		protected HingeJoint doorHinge;

		[Token(Token = "0x400195A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		protected ConstantForce doorSnapForce;

		[Token(Token = "0x400195B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		protected Rigidbody frameRigidbody;

		[Token(Token = "0x400195C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		protected Direction finalDirection;

		[Token(Token = "0x400195D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		protected float subDirection;

		[Token(Token = "0x400195E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		protected Vector3 secondaryDirection;

		[Token(Token = "0x400195F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		protected bool doorHingeCreated;

		[Token(Token = "0x4001960")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE5")]
		protected bool doorSnapForceCreated;

		[Token(Token = "0x600186C")]
		[Address(RVA = "0xA2CAAC", Offset = "0xA2CAAC", VA = "0xA2CAAC", Slot = "16")]
		protected override void OnDrawGizmos()
		{
		}

		[Token(Token = "0x600186D")]
		[Address(RVA = "0xA2D45C", Offset = "0xA2D45C", VA = "0xA2D45C", Slot = "4")]
		protected override void InitRequiredComponents()
		{
		}

		[Token(Token = "0x600186E")]
		[Address(RVA = "0xA2D4C4", Offset = "0xA2D4C4", VA = "0xA2D4C4", Slot = "5")]
		protected override bool DetectSetup()
		{
			return default(bool);
		}

		[Token(Token = "0x600186F")]
		[Address(RVA = "0xA2E114", Offset = "0xA2E114", VA = "0xA2E114", Slot = "6")]
		protected override ControlValueRange RegisterValueRange()
		{
			return default(ControlValueRange);
		}

		[Token(Token = "0x6001870")]
		[Address(RVA = "0xA2E1D0", Offset = "0xA2E1D0", VA = "0xA2E1D0", Slot = "12")]
		protected override void HandleUpdate()
		{
		}

		[Token(Token = "0x6001871")]
		[Address(RVA = "0xA2E2B8", Offset = "0xA2E2B8", VA = "0xA2E2B8", Slot = "19")]
		protected virtual float GetDirectionFromJoint()
		{
			return default(float);
		}

		[Token(Token = "0x6001872")]
		[Address(RVA = "0xA2E330", Offset = "0xA2E330", VA = "0xA2E330", Slot = "20")]
		protected virtual Vector3 Direction2Axis(Direction givenDirection)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001873")]
		[Address(RVA = "0xA2E40C", Offset = "0xA2E40C", VA = "0xA2E40C", Slot = "21")]
		protected virtual Direction DetectDirection()
		{
			return default(Direction);
		}

		[Token(Token = "0x6001874")]
		[Address(RVA = "0xA2E7C8", Offset = "0xA2E7C8", VA = "0xA2E7C8", Slot = "22")]
		protected virtual void InitFrame()
		{
		}

		[Token(Token = "0x6001875")]
		[Address(RVA = "0xA2E920", Offset = "0xA2E920", VA = "0xA2E920", Slot = "23")]
		protected virtual void InitDoor()
		{
		}

		[Token(Token = "0x6001876")]
		[Address(RVA = "0xA2EBF4", Offset = "0xA2EBF4", VA = "0xA2EBF4", Slot = "24")]
		protected virtual void InitHandle()
		{
		}

		[Token(Token = "0x6001877")]
		[Address(RVA = "0xA2EE68", Offset = "0xA2EE68", VA = "0xA2EE68", Slot = "25")]
		protected virtual void CreateInteractableObject(GameObject target)
		{
		}

		[Token(Token = "0x6001878")]
		[Address(RVA = "0xA2F02C", Offset = "0xA2F02C", VA = "0xA2F02C", Slot = "26")]
		protected virtual void InteractableObjectGrabbed(object sender, InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x6001879")]
		[Address(RVA = "0xA2F06C", Offset = "0xA2F06C", VA = "0xA2F06C", Slot = "27")]
		protected virtual void InteractableObjectUngrabbed(object sender, InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x600187A")]
		[Address(RVA = "0xA2F0AC", Offset = "0xA2F0AC", VA = "0xA2F0AC", Slot = "28")]
		protected virtual float CalculateValue()
		{
			return default(float);
		}

		[Token(Token = "0x600187B")]
		[Address(RVA = "0xA2F1C0", Offset = "0xA2F1C0", VA = "0xA2F1C0", Slot = "29")]
		protected virtual GameObject GetDoor()
		{
			return null;
		}

		[Token(Token = "0x600187C")]
		[Address(RVA = "0xA2F24C", Offset = "0xA2F24C", VA = "0xA2F24C")]
		public VRTK_Door()
		{
		}
	}
	[Token(Token = "0x2000397")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x63F750", Offset = "0x63F750")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x63F750", Offset = "0x63F750")]
	public class VRTK_Drawer : VRTK_Control
	{
		[Token(Token = "0x4001961")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x655288", Offset = "0x655288")]
		public GameObject connectedTo;

		[Token(Token = "0x4001962")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6552C0", Offset = "0x6552C0")]
		public Direction direction;

		[Token(Token = "0x4001963")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6552F8", Offset = "0x6552F8")]
		public GameObject body;

		[Token(Token = "0x4001964")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x655330", Offset = "0x655330")]
		public GameObject handle;

		[Token(Token = "0x4001965")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x655368", Offset = "0x655368")]
		public GameObject content;

		[Token(Token = "0x4001966")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6553A0", Offset = "0x6553A0")]
		public bool hideContent;

		[Token(Token = "0x4001967")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6553D8", Offset = "0x6553D8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6553D8", Offset = "0x6553D8")]
		public float minSnapClose;

		[Token(Token = "0x4001968")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65542C", Offset = "0x65542C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x65542C", Offset = "0x65542C")]
		public float maxExtend;

		[Token(Token = "0x4001969")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		protected Rigidbody drawerRigidbody;

		[Token(Token = "0x400196A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		protected Rigidbody handleRigidbody;

		[Token(Token = "0x400196B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		protected FixedJoint handleFixedJoint;

		[Token(Token = "0x400196C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		protected ConfigurableJoint drawerJoint;

		[Token(Token = "0x400196D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		protected VRTK_InteractableObject drawerInteractableObject;

		[Token(Token = "0x400196E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		protected ConstantForce drawerSnapForce;

		[Token(Token = "0x400196F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		protected Direction finalDirection;

		[Token(Token = "0x4001970")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		protected float subDirection;

		[Token(Token = "0x4001971")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		protected float pullDistance;

		[Token(Token = "0x4001972")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		protected Vector3 initialPosition;

		[Token(Token = "0x4001973")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		protected bool drawerJointCreated;

		[Token(Token = "0x4001974")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF1")]
		protected bool drawerSnapForceCreated;

		[Token(Token = "0x600187D")]
		[Address(RVA = "0xA313B8", Offset = "0xA313B8", VA = "0xA313B8", Slot = "16")]
		protected override void OnDrawGizmos()
		{
		}

		[Token(Token = "0x600187E")]
		[Address(RVA = "0xA316A0", Offset = "0xA316A0", VA = "0xA316A0", Slot = "4")]
		protected override void InitRequiredComponents()
		{
		}

		[Token(Token = "0x600187F")]
		[Address(RVA = "0xA31720", Offset = "0xA31720", VA = "0xA31720", Slot = "5")]
		protected override bool DetectSetup()
		{
			return default(bool);
		}

		[Token(Token = "0x6001880")]
		[Address(RVA = "0xA31F3C", Offset = "0xA31F3C", VA = "0xA31F3C", Slot = "6")]
		protected override ControlValueRange RegisterValueRange()
		{
			return default(ControlValueRange);
		}

		[Token(Token = "0x6001881")]
		[Address(RVA = "0xA31F4C", Offset = "0xA31F4C", VA = "0xA31F4C", Slot = "12")]
		protected override void HandleUpdate()
		{
		}

		[Token(Token = "0x6001882")]
		[Address(RVA = "0xA32058", Offset = "0xA32058", VA = "0xA32058", Slot = "19")]
		protected virtual void InitBody()
		{
		}

		[Token(Token = "0x6001883")]
		[Address(RVA = "0xA324C8", Offset = "0xA324C8", VA = "0xA324C8", Slot = "20")]
		protected virtual void InitHandle()
		{
		}

		[Token(Token = "0x6001884")]
		[Address(RVA = "0xA326D0", Offset = "0xA326D0", VA = "0xA326D0", Slot = "21")]
		protected virtual Direction DetectDirection()
		{
			return default(Direction);
		}

		[Token(Token = "0x6001885")]
		[Address(RVA = "0xA32E84", Offset = "0xA32E84", VA = "0xA32E84", Slot = "22")]
		protected virtual float CalculateValue()
		{
			return default(float);
		}

		[Token(Token = "0x6001886")]
		[Address(RVA = "0xA33024", Offset = "0xA33024", VA = "0xA33024", Slot = "23")]
		protected virtual GameObject GetBody()
		{
			return null;
		}

		[Token(Token = "0x6001887")]
		[Address(RVA = "0xA330B0", Offset = "0xA330B0", VA = "0xA330B0", Slot = "24")]
		protected virtual GameObject GetHandle()
		{
			return null;
		}

		[Token(Token = "0x6001888")]
		[Address(RVA = "0xA3313C", Offset = "0xA3313C", VA = "0xA3313C")]
		public VRTK_Drawer()
		{
		}
	}
	[Token(Token = "0x2000398")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x63F7B0", Offset = "0x63F7B0")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x63F7B0", Offset = "0x63F7B0")]
	public class VRTK_Knob : VRTK_Control
	{
		[Token(Token = "0x20007F0")]
		public enum KnobDirection
		{
			[Token(Token = "0x4002A06")]
			x,
			[Token(Token = "0x4002A07")]
			y,
			[Token(Token = "0x4002A08")]
			z
		}

		[Token(Token = "0x4001975")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x655480", Offset = "0x655480")]
		public GameObject connectedTo;

		[Token(Token = "0x4001976")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6554B8", Offset = "0x6554B8")]
		public KnobDirection direction;

		[Token(Token = "0x4001977")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6554F0", Offset = "0x6554F0")]
		public float min;

		[Token(Token = "0x4001978")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x655528", Offset = "0x655528")]
		public float max;

		[Token(Token = "0x4001979")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x655560", Offset = "0x655560")]
		public float stepSize;

		[Token(Token = "0x400197A")]
		protected const float MAX_AUTODETECT_KNOB_WIDTH = 3f;

		[Token(Token = "0x400197B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		protected KnobDirection finalDirection;

		[Token(Token = "0x400197C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		protected KnobDirection subDirection;

		[Token(Token = "0x400197D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		protected bool subDirectionFound;

		[Token(Token = "0x400197E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		protected Quaternion initialRotation;

		[Token(Token = "0x400197F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		protected Vector3 initialLocalRotation;

		[Token(Token = "0x4001980")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		protected ConfigurableJoint knobJoint;

		[Token(Token = "0x4001981")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		protected bool knobJointCreated;

		[Token(Token = "0x6001889")]
		[Address(RVA = "0xA7C50C", Offset = "0xA7C50C", VA = "0xA7C50C", Slot = "4")]
		protected override void InitRequiredComponents()
		{
		}

		[Token(Token = "0x600188A")]
		[Address(RVA = "0xA7C5B0", Offset = "0xA7C5B0", VA = "0xA7C5B0", Slot = "5")]
		protected override bool DetectSetup()
		{
			return default(bool);
		}

		[Token(Token = "0x600188B")]
		[Address(RVA = "0xA7C7F4", Offset = "0xA7C7F4", VA = "0xA7C7F4", Slot = "6")]
		protected override ControlValueRange RegisterValueRange()
		{
			return default(ControlValueRange);
		}

		[Token(Token = "0x600188C")]
		[Address(RVA = "0xA7C7FC", Offset = "0xA7C7FC", VA = "0xA7C7FC", Slot = "12")]
		protected override void HandleUpdate()
		{
		}

		[Token(Token = "0x600188D")]
		[Address(RVA = "0xA7C82C", Offset = "0xA7C82C", VA = "0xA7C82C", Slot = "19")]
		protected virtual void InitKnob()
		{
		}

		[Token(Token = "0x600188E")]
		[Address(RVA = "0xA7CBF0", Offset = "0xA7CBF0", VA = "0xA7CBF0", Slot = "20")]
		protected virtual KnobDirection DetectDirection()
		{
			return default(KnobDirection);
		}

		[Token(Token = "0x600188F")]
		[Address(RVA = "0xA7D668", Offset = "0xA7D668", VA = "0xA7D668", Slot = "21")]
		protected virtual float CalculateValue()
		{
			return default(float);
		}

		[Token(Token = "0x6001890")]
		[Address(RVA = "0xA7DCB0", Offset = "0xA7DCB0", VA = "0xA7DCB0")]
		public VRTK_Knob()
		{
		}
	}
	[Token(Token = "0x2000399")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x63F810", Offset = "0x63F810")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x63F810", Offset = "0x63F810")]
	public class VRTK_Lever : VRTK_Control
	{
		[Token(Token = "0x20007F1")]
		public enum LeverDirection
		{
			[Token(Token = "0x4002A0A")]
			x,
			[Token(Token = "0x4002A0B")]
			y,
			[Token(Token = "0x4002A0C")]
			z
		}

		[Token(Token = "0x4001982")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x655598", Offset = "0x655598")]
		public GameObject connectedTo;

		[Token(Token = "0x4001983")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6555D0", Offset = "0x6555D0")]
		public LeverDirection direction;

		[Token(Token = "0x4001984")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x655608", Offset = "0x655608")]
		public float minAngle;

		[Token(Token = "0x4001985")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x655640", Offset = "0x655640")]
		public float maxAngle;

		[Token(Token = "0x4001986")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x655678", Offset = "0x655678")]
		public float stepSize;

		[Token(Token = "0x4001987")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6556B0", Offset = "0x6556B0")]
		public float releasedFriction;

		[Token(Token = "0x4001988")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6556E8", Offset = "0x6556E8")]
		public float grabbedFriction;

		[Token(Token = "0x4001989")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		protected HingeJoint leverHingeJoint;

		[Token(Token = "0x400198A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		protected bool leverHingeJointCreated;

		[Token(Token = "0x400198B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		protected Rigidbody leverRigidbody;

		[Token(Token = "0x6001891")]
		[Address(RVA = "0xA7DD24", Offset = "0xA7DD24", VA = "0xA7DD24", Slot = "4")]
		protected override void InitRequiredComponents()
		{
		}

		[Token(Token = "0x6001892")]
		[Address(RVA = "0xA7DE00", Offset = "0xA7DE00", VA = "0xA7DE00", Slot = "5")]
		protected override bool DetectSetup()
		{
			return default(bool);
		}

		[Token(Token = "0x6001893")]
		[Address(RVA = "0xA7E37C", Offset = "0xA7E37C", VA = "0xA7E37C", Slot = "6")]
		protected override ControlValueRange RegisterValueRange()
		{
			return default(ControlValueRange);
		}

		[Token(Token = "0x6001894")]
		[Address(RVA = "0xA7E384", Offset = "0xA7E384", VA = "0xA7E384", Slot = "12")]
		protected override void HandleUpdate()
		{
		}

		[Token(Token = "0x6001895")]
		[Address(RVA = "0xA7E3C4", Offset = "0xA7E3C4", VA = "0xA7E3C4", Slot = "19")]
		protected virtual void InitRigidbody()
		{
		}

		[Token(Token = "0x6001896")]
		[Address(RVA = "0xA7E508", Offset = "0xA7E508", VA = "0xA7E508", Slot = "20")]
		protected virtual void InitInteractableObject()
		{
		}

		[Token(Token = "0x6001897")]
		[Address(RVA = "0xA7E6DC", Offset = "0xA7E6DC", VA = "0xA7E6DC", Slot = "21")]
		protected virtual void InteractableObjectGrabbed(object sender, InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x6001898")]
		[Address(RVA = "0xA7E71C", Offset = "0xA7E71C", VA = "0xA7E71C", Slot = "22")]
		protected virtual void InteractableObjectUngrabbed(object sender, InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x6001899")]
		[Address(RVA = "0xA7E75C", Offset = "0xA7E75C", VA = "0xA7E75C", Slot = "23")]
		protected virtual void InitHingeJoint()
		{
		}

		[Token(Token = "0x600189A")]
		[Address(RVA = "0xA7E900", Offset = "0xA7E900", VA = "0xA7E900", Slot = "24")]
		protected virtual float CalculateValue()
		{
			return default(float);
		}

		[Token(Token = "0x600189B")]
		[Address(RVA = "0xA7EA14", Offset = "0xA7EA14", VA = "0xA7EA14", Slot = "25")]
		protected virtual void SnapToValue(float value)
		{
		}

		[Token(Token = "0x600189C")]
		[Address(RVA = "0xA7EC10", Offset = "0xA7EC10", VA = "0xA7EC10")]
		public VRTK_Lever()
		{
		}
	}
	[Token(Token = "0x200039A")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x63F870", Offset = "0x63F870")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x63F870", Offset = "0x63F870")]
	public class VRTK_Slider : VRTK_Control
	{
		[Token(Token = "0x400198C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x655720", Offset = "0x655720")]
		public GameObject connectedTo;

		[Token(Token = "0x400198D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x655758", Offset = "0x655758")]
		public Direction direction;

		[Token(Token = "0x400198E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x655790", Offset = "0x655790")]
		public Collider minimumLimit;

		[Token(Token = "0x400198F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6557C8", Offset = "0x6557C8")]
		public Collider maximumLimit;

		[Token(Token = "0x4001990")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x655800", Offset = "0x655800")]
		public float minimumValue;

		[Token(Token = "0x4001991")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x655838", Offset = "0x655838")]
		public float maximumValue;

		[Token(Token = "0x4001992")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x655870", Offset = "0x655870")]
		public float stepSize;

		[Token(Token = "0x4001993")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6558A8", Offset = "0x6558A8")]
		public bool snapToStep;

		[Token(Token = "0x4001994")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6558E0", Offset = "0x6558E0")]
		public float releasedFriction;

		[Token(Token = "0x4001995")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		protected Direction finalDirection;

		[Token(Token = "0x4001996")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		protected Rigidbody sliderRigidbody;

		[Token(Token = "0x4001997")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		protected ConfigurableJoint sliderJoint;

		[Token(Token = "0x4001998")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		protected bool sliderJointCreated;

		[Token(Token = "0x4001999")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		protected Vector3 minimumLimitDiff;

		[Token(Token = "0x400199A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		protected Vector3 maximumLimitDiff;

		[Token(Token = "0x400199B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		protected Vector3 snapPosition;

		[Token(Token = "0x600189D")]
		[Address(RVA = "0x99750C", Offset = "0x99750C", VA = "0x99750C", Slot = "16")]
		protected override void OnDrawGizmos()
		{
		}

		[Token(Token = "0x600189E")]
		[Address(RVA = "0x997670", Offset = "0x997670", VA = "0x997670", Slot = "4")]
		protected override void InitRequiredComponents()
		{
		}

		[Token(Token = "0x600189F")]
		[Address(RVA = "0x9976D0", Offset = "0x9976D0", VA = "0x9976D0", Slot = "5")]
		protected override bool DetectSetup()
		{
			return default(bool);
		}

		[Token(Token = "0x60018A0")]
		[Address(RVA = "0x998728", Offset = "0x998728", VA = "0x998728", Slot = "6")]
		protected override ControlValueRange RegisterValueRange()
		{
			return default(ControlValueRange);
		}

		[Token(Token = "0x60018A1")]
		[Address(RVA = "0x998730", Offset = "0x998730", VA = "0x998730", Slot = "12")]
		protected override void HandleUpdate()
		{
		}

		[Token(Token = "0x60018A2")]
		[Address(RVA = "0x998780", Offset = "0x998780", VA = "0x998780", Slot = "19")]
		protected virtual Vector3 CalculateDiff(Vector3 initialPosition, Vector3 givenDirection, float scaleValue, float diffMultiplier, bool addition)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60018A3")]
		[Address(RVA = "0x9989AC", Offset = "0x9989AC", VA = "0x9989AC", Slot = "20")]
		protected virtual void InitRigidbody()
		{
		}

		[Token(Token = "0x60018A4")]
		[Address(RVA = "0x998C10", Offset = "0x998C10", VA = "0x998C10", Slot = "21")]
		protected virtual void InitInteractableObject()
		{
		}

		[Token(Token = "0x60018A5")]
		[Address(RVA = "0x998D68", Offset = "0x998D68", VA = "0x998D68", Slot = "22")]
		protected virtual void InitJoint()
		{
		}

		[Token(Token = "0x60018A6")]
		[Address(RVA = "0x998F48", Offset = "0x998F48", VA = "0x998F48", Slot = "23")]
		protected virtual void CalculateValue()
		{
		}

		[Token(Token = "0x60018A7")]
		[Address(RVA = "0x99922C", Offset = "0x99922C", VA = "0x99922C", Slot = "24")]
		protected virtual void ToggleSpring(bool state)
		{
		}

		[Token(Token = "0x60018A8")]
		[Address(RVA = "0x99934C", Offset = "0x99934C", VA = "0x99934C", Slot = "25")]
		protected virtual void SnapToValue()
		{
		}

		[Token(Token = "0x60018A9")]
		[Address(RVA = "0x999460", Offset = "0x999460", VA = "0x999460")]
		public VRTK_Slider()
		{
		}
	}
	[Token(Token = "0x200039B")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x63F8D0", Offset = "0x63F8D0")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x63F8D0", Offset = "0x63F8D0")]
	public class VRTK_SpringLever : VRTK_Lever
	{
		[Token(Token = "0x400199C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x655918", Offset = "0x655918")]
		public float springStrength;

		[Token(Token = "0x400199D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x655950", Offset = "0x655950")]
		public float springDamper;

		[Token(Token = "0x400199E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x655988", Offset = "0x655988")]
		public bool snapToNearestLimit;

		[Token(Token = "0x400199F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB1")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6559C0", Offset = "0x6559C0")]
		public bool alwaysActive;

		[Token(Token = "0x40019A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB2")]
		protected bool wasTowardZero;

		[Token(Token = "0x40019A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB3")]
		protected bool isGrabbed;

		[Token(Token = "0x60018AA")]
		[Address(RVA = "0x9A1800", Offset = "0x9A1800", VA = "0x9A1800", Slot = "4")]
		protected override void InitRequiredComponents()
		{
		}

		[Token(Token = "0x60018AB")]
		[Address(RVA = "0x9A18F4", Offset = "0x9A18F4", VA = "0x9A18F4", Slot = "12")]
		protected override void HandleUpdate()
		{
		}

		[Token(Token = "0x60018AC")]
		[Address(RVA = "0x9A1928", Offset = "0x9A1928", VA = "0x9A1928", Slot = "21")]
		protected override void InteractableObjectGrabbed(object sender, InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x60018AD")]
		[Address(RVA = "0x9A1954", Offset = "0x9A1954", VA = "0x9A1954", Slot = "22")]
		protected override void InteractableObjectUngrabbed(object sender, InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x60018AE")]
		[Address(RVA = "0x9A197C", Offset = "0x9A197C", VA = "0x9A197C", Slot = "26")]
		protected virtual float GetSpringTarget(bool towardZero)
		{
			return default(float);
		}

		[Token(Token = "0x60018AF")]
		[Address(RVA = "0x9A1994", Offset = "0x9A1994", VA = "0x9A1994", Slot = "27")]
		protected virtual void ApplySpringForce()
		{
		}

		[Token(Token = "0x60018B0")]
		[Address(RVA = "0x9A1AEC", Offset = "0x9A1AEC", VA = "0x9A1AEC")]
		public VRTK_SpringLever()
		{
		}
	}
	[Token(Token = "0x200039C")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x63F930", Offset = "0x63F930")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x63F930", Offset = "0x63F930")]
	public class VRTK_Wheel : VRTK_Control
	{
		[Token(Token = "0x20007F2")]
		public enum GrabTypes
		{
			[Token(Token = "0x4002A0E")]
			TrackObject,
			[Token(Token = "0x4002A0F")]
			RotatorTrack
		}

		[Token(Token = "0x40019A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6559F8", Offset = "0x6559F8")]
		public GameObject connectedTo;

		[Token(Token = "0x40019A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x655A30", Offset = "0x655A30")]
		public GrabTypes grabType;

		[Token(Token = "0x40019A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x655A68", Offset = "0x655A68")]
		public float detatchDistance;

		[Token(Token = "0x40019A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x655AA0", Offset = "0x655AA0")]
		public float minimumValue;

		[Token(Token = "0x40019A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x655AD8", Offset = "0x655AD8")]
		public float maximumValue;

		[Token(Token = "0x40019A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x655B10", Offset = "0x655B10")]
		public float stepSize;

		[Token(Token = "0x40019A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x655B48", Offset = "0x655B48")]
		public bool snapToStep;

		[Token(Token = "0x40019A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x655B80", Offset = "0x655B80")]
		public float grabbedFriction;

		[Token(Token = "0x40019AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x655BB8", Offset = "0x655BB8")]
		public float releasedFriction;

		[Token(Token = "0x40019AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x655BF0", Offset = "0x655BF0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x655BF0", Offset = "0x655BF0")]
		public float maxAngle;

		[Token(Token = "0x40019AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x655C48", Offset = "0x655C48")]
		public bool lockAtLimits;

		[Token(Token = "0x40019AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		protected float angularVelocityLimit;

		[Token(Token = "0x40019AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		protected float springStrengthValue;

		[Token(Token = "0x40019AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		protected float springDamperValue;

		[Token(Token = "0x40019B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		protected Quaternion initialLocalRotation;

		[Token(Token = "0x40019B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		protected Rigidbody wheelRigidbody;

		[Token(Token = "0x40019B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		protected HingeJoint wheelHinge;

		[Token(Token = "0x40019B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		protected bool wheelHingeCreated;

		[Token(Token = "0x40019B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD1")]
		protected bool initialValueCalculated;

		[Token(Token = "0x40019B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		protected float springAngle;

		[Token(Token = "0x60018B1")]
		[Address(RVA = "0x8FC380", Offset = "0x8FC380", VA = "0x8FC380", Slot = "4")]
		protected override void InitRequiredComponents()
		{
		}

		[Token(Token = "0x60018B2")]
		[Address(RVA = "0x8FC3D4", Offset = "0x8FC3D4", VA = "0x8FC3D4", Slot = "5")]
		protected override bool DetectSetup()
		{
			return default(bool);
		}

		[Token(Token = "0x60018B3")]
		[Address(RVA = "0x8FC544", Offset = "0x8FC544", VA = "0x8FC544", Slot = "6")]
		protected override ControlValueRange RegisterValueRange()
		{
			return default(ControlValueRange);
		}

		[Token(Token = "0x60018B4")]
		[Address(RVA = "0x8FC54C", Offset = "0x8FC54C", VA = "0x8FC54C", Slot = "12")]
		protected override void HandleUpdate()
		{
		}

		[Token(Token = "0x60018B5")]
		[Address(RVA = "0x8FC5DC", Offset = "0x8FC5DC", VA = "0x8FC5DC", Slot = "19")]
		protected virtual void InitWheel()
		{
		}

		[Token(Token = "0x60018B6")]
		[Address(RVA = "0x8FC62C", Offset = "0x8FC62C", VA = "0x8FC62C", Slot = "20")]
		protected virtual void SetupRigidbody()
		{
		}

		[Token(Token = "0x60018B7")]
		[Address(RVA = "0x8FC85C", Offset = "0x8FC85C", VA = "0x8FC85C", Slot = "21")]
		protected virtual void SetupHinge()
		{
		}

		[Token(Token = "0x60018B8")]
		[Address(RVA = "0x8FC934", Offset = "0x8FC934", VA = "0x8FC934", Slot = "22")]
		protected virtual void SetupHingeRestrictions()
		{
		}

		[Token(Token = "0x60018B9")]
		[Address(RVA = "0x8FCCA0", Offset = "0x8FCCA0", VA = "0x8FCCA0", Slot = "23")]
		protected virtual void ConfigureHingeSpring()
		{
		}

		[Token(Token = "0x60018BA")]
		[Address(RVA = "0x8FCD50", Offset = "0x8FCD50", VA = "0x8FCD50", Slot = "24")]
		protected virtual void SetupInteractableObject()
		{
		}

		[Token(Token = "0x60018BB")]
		[Address(RVA = "0x8FCF90", Offset = "0x8FCF90", VA = "0x8FCF90", Slot = "25")]
		protected virtual void WheelInteractableObjectGrabbed(object sender, InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x60018BC")]
		[Address(RVA = "0x8FCFF4", Offset = "0x8FCFF4", VA = "0x8FCFF4", Slot = "26")]
		protected virtual void WheelInteractableObjectUngrabbed(object sender, InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x60018BD")]
		[Address(RVA = "0x8FD084", Offset = "0x8FD084", VA = "0x8FD084", Slot = "27")]
		protected virtual void CalculateValue()
		{
		}

		[Token(Token = "0x60018BE")]
		[Address(RVA = "0x8FD2A0", Offset = "0x8FD2A0", VA = "0x8FD2A0")]
		public VRTK_Wheel()
		{
		}
	}
	[Token(Token = "0x200039D")]
	public class VRTK_IgnoreInteractTouchColliders : VRTK_SDKControllerReady
	{
		[Token(Token = "0x20007F3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x645D68", Offset = "0x645D68")]
		private sealed class <DisableAllCollidersAtEndOfFrame>d__7 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002A10")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002A11")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002A12")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VRTK_IgnoreInteractTouchColliders <>4__this;

			[Token(Token = "0x17000325")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6003294")]
				[Address(RVA = "0xD00ED0", Offset = "0xD00ED0", VA = "0xD00ED0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000326")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003296")]
				[Address(RVA = "0xD00F40", Offset = "0xD00F40", VA = "0xD00F40", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003291")]
			[Address(RVA = "0xD005F4", Offset = "0xD005F4", VA = "0xD005F4")]
			[DebuggerHidden]
			public <DisableAllCollidersAtEndOfFrame>d__7(int <>1__state)
			{
			}

			[Token(Token = "0x6003292")]
			[Address(RVA = "0xD00E14", Offset = "0xD00E14", VA = "0xD00E14", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003293")]
			[Address(RVA = "0xD00E18", Offset = "0xD00E18", VA = "0xD00E18", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003295")]
			[Address(RVA = "0xD00ED8", Offset = "0xD00ED8", VA = "0xD00ED8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20007F4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x645D78", Offset = "0x645D78")]
		private sealed class <DisableControllerColliderAtEndOfFrame>d__8 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002A13")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002A14")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002A15")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VRTK_IgnoreInteractTouchColliders <>4__this;

			[Token(Token = "0x4002A16")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public VRTK_InteractTouch touchToIgnore;

			[Token(Token = "0x17000327")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600329A")]
				[Address(RVA = "0xD01010", Offset = "0xD01010", VA = "0xD01010", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000328")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600329C")]
				[Address(RVA = "0xD01080", Offset = "0xD01080", VA = "0xD01080", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003297")]
			[Address(RVA = "0xD006B8", Offset = "0xD006B8", VA = "0xD006B8")]
			[DebuggerHidden]
			public <DisableControllerColliderAtEndOfFrame>d__8(int <>1__state)
			{
			}

			[Token(Token = "0x6003298")]
			[Address(RVA = "0xD00F48", Offset = "0xD00F48", VA = "0xD00F48", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003299")]
			[Address(RVA = "0xD00F4C", Offset = "0xD00F4C", VA = "0xD00F4C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600329B")]
			[Address(RVA = "0xD01018", Offset = "0xD01018", VA = "0xD01018", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40019B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x655C80", Offset = "0x655C80")]
		public List<VRTK_InteractTouch> interactTouchToIgnore;

		[Token(Token = "0x40019B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x655CB8", Offset = "0x655CB8")]
		public List<GameObject> skipIgnore;

		[Token(Token = "0x40019B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected Collider[] localColliders;

		[Token(Token = "0x40019B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected Coroutine disableAllCollidersRoutine;

		[Token(Token = "0x40019BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected Coroutine disableControllerCollidersRoutine;

		[Token(Token = "0x60018BF")]
		[Address(RVA = "0xD0044C", Offset = "0xD0044C", VA = "0xD0044C", Slot = "4")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x60018C0")]
		[Address(RVA = "0xD004DC", Offset = "0xD004DC", VA = "0xD004DC", Slot = "5")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x60018C1")]
		[Address(RVA = "0xD00580", Offset = "0xD00580", VA = "0xD00580", Slot = "15")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x66BB24", Offset = "0x66BB24")]
		protected virtual IEnumerator DisableAllCollidersAtEndOfFrame()
		{
			return null;
		}

		[Token(Token = "0x60018C2")]
		[Address(RVA = "0xD00620", Offset = "0xD00620", VA = "0xD00620", Slot = "16")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x66BB88", Offset = "0x66BB88")]
		protected virtual IEnumerator DisableControllerColliderAtEndOfFrame(VRTK_InteractTouch touchToIgnore)
		{
			return null;
		}

		[Token(Token = "0x60018C3")]
		[Address(RVA = "0xD006E4", Offset = "0xD006E4", VA = "0xD006E4", Slot = "14")]
		protected override void ControllerReady(VRTK_ControllerReference controllerReference)
		{
		}

		[Token(Token = "0x60018C4")]
		[Address(RVA = "0xD007F4", Offset = "0xD007F4", VA = "0xD007F4", Slot = "17")]
		protected virtual void ManageAllCollisions(bool ignore)
		{
		}

		[Token(Token = "0x60018C5")]
		[Address(RVA = "0xD008C8", Offset = "0xD008C8", VA = "0xD008C8", Slot = "18")]
		protected virtual bool ShouldExclude(Transform checkObject)
		{
			return default(bool);
		}

		[Token(Token = "0x60018C6")]
		[Address(RVA = "0xD009F8", Offset = "0xD009F8", VA = "0xD009F8", Slot = "19")]
		protected virtual void ManageTouchCollision(VRTK_InteractTouch touchToIgnore, bool ignore)
		{
		}

		[Token(Token = "0x60018C7")]
		[Address(RVA = "0xD00D64", Offset = "0xD00D64", VA = "0xD00D64")]
		public VRTK_IgnoreInteractTouchColliders()
		{
		}
	}
	[Token(Token = "0x200039E")]
	public abstract class VRTK_InteractableListener : MonoBehaviour
	{
		[Token(Token = "0x20007F5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x645D88", Offset = "0x645D88")]
		private sealed class <SetupListenersAtEndOfFrame>d__5 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002A17")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002A18")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002A19")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VRTK_InteractableListener <>4__this;

			[Token(Token = "0x17000329")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60032A0")]
				[Address(RVA = "0xA75530", Offset = "0xA75530", VA = "0xA75530", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700032A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60032A2")]
				[Address(RVA = "0xA755A0", Offset = "0xA755A0", VA = "0xA755A0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600329D")]
			[Address(RVA = "0xA75444", Offset = "0xA75444", VA = "0xA75444")]
			[DebuggerHidden]
			public <SetupListenersAtEndOfFrame>d__5(int <>1__state)
			{
			}

			[Token(Token = "0x600329E")]
			[Address(RVA = "0xA75478", Offset = "0xA75478", VA = "0xA75478", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600329F")]
			[Address(RVA = "0xA7547C", Offset = "0xA7547C", VA = "0xA7547C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60032A1")]
			[Address(RVA = "0xA75538", Offset = "0xA75538", VA = "0xA75538", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40019BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected Coroutine setupInteractableListenersRoutine;

		[Token(Token = "0x60018C8")]
		protected abstract bool SetupListeners(bool throwError);

		[Token(Token = "0x60018C9")]
		protected abstract void TearDownListeners();

		[Token(Token = "0x60018CA")]
		[Address(RVA = "0xA7533C", Offset = "0xA7533C", VA = "0xA7533C", Slot = "6")]
		protected virtual void EnableListeners()
		{
		}

		[Token(Token = "0x60018CB")]
		[Address(RVA = "0xA75390", Offset = "0xA75390", VA = "0xA75390", Slot = "7")]
		protected virtual void DisableListeners()
		{
		}

		[Token(Token = "0x60018CC")]
		[Address(RVA = "0xA753D0", Offset = "0xA753D0", VA = "0xA753D0", Slot = "8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x66BBEC", Offset = "0x66BBEC")]
		protected virtual IEnumerator SetupListenersAtEndOfFrame()
		{
			return null;
		}

		[Token(Token = "0x60018CD")]
		[Address(RVA = "0xA75470", Offset = "0xA75470", VA = "0xA75470")]
		protected VRTK_InteractableListener()
		{
		}
	}
	[Token(Token = "0x200039F")]
	public struct InteractableObjectEventArgs
	{
		[Token(Token = "0x40019BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public GameObject interactingObject;
	}
	[Token(Token = "0x20003A0")]
	public delegate void InteractableObjectEventHandler(object sender, InteractableObjectEventArgs e);
	[Token(Token = "0x20003A1")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x63F990", Offset = "0x63F990")]
	public class VRTK_InteractableObject : MonoBehaviour
	{
		[Token(Token = "0x20007F6")]
		public enum InteractionType
		{
			[Token(Token = "0x4002A1B")]
			None,
			[Token(Token = "0x4002A1C")]
			NearTouch,
			[Token(Token = "0x4002A1D")]
			NearUntouch,
			[Token(Token = "0x4002A1E")]
			Touch,
			[Token(Token = "0x4002A1F")]
			Untouch,
			[Token(Token = "0x4002A20")]
			Grab,
			[Token(Token = "0x4002A21")]
			Ungrab,
			[Token(Token = "0x4002A22")]
			Use,
			[Token(Token = "0x4002A23")]
			Unuse
		}

		[Token(Token = "0x20007F7")]
		public enum AllowedController
		{
			[Token(Token = "0x4002A25")]
			Both,
			[Token(Token = "0x4002A26")]
			LeftOnly,
			[Token(Token = "0x4002A27")]
			RightOnly
		}

		[Token(Token = "0x20007F8")]
		public enum ValidDropTypes
		{
			[Token(Token = "0x4002A29")]
			NoDrop,
			[Token(Token = "0x4002A2A")]
			DropAnywhere,
			[Token(Token = "0x4002A2B")]
			DropValidSnapDropZone
		}

		[Token(Token = "0x20007F9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x645D98", Offset = "0x645D98")]
		private sealed class <RegisterTeleportersAtEndOfFrame>d__178 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002A2C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002A2D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002A2E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VRTK_InteractableObject <>4__this;

			[Token(Token = "0x1700032B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60032A6")]
				[Address(RVA = "0xA7C494", Offset = "0xA7C494", VA = "0xA7C494", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700032C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60032A8")]
				[Address(RVA = "0xA7C504", Offset = "0xA7C504", VA = "0xA7C504", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60032A3")]
			[Address(RVA = "0xA7B584", Offset = "0xA7B584", VA = "0xA7B584")]
			[DebuggerHidden]
			public <RegisterTeleportersAtEndOfFrame>d__178(int <>1__state)
			{
			}

			[Token(Token = "0x60032A4")]
			[Address(RVA = "0xA7C2A4", Offset = "0xA7C2A4", VA = "0xA7C2A4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60032A5")]
			[Address(RVA = "0xA7C2A8", Offset = "0xA7C2A8", VA = "0xA7C2A8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60032A7")]
			[Address(RVA = "0xA7C49C", Offset = "0xA7C49C", VA = "0xA7C49C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20007FA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x645DA8", Offset = "0x645DA8")]
		private sealed class <ForceStopInteractingAtEndOfFrame>d__180 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002A2F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002A30")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002A31")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VRTK_InteractableObject <>4__this;

			[Token(Token = "0x1700032D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60032AC")]
				[Address(RVA = "0xA7C22C", Offset = "0xA7C22C", VA = "0xA7C22C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700032E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60032AE")]
				[Address(RVA = "0xA7C29C", Offset = "0xA7C29C", VA = "0xA7C29C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60032A9")]
			[Address(RVA = "0xA7B728", Offset = "0xA7B728", VA = "0xA7B728")]
			[DebuggerHidden]
			public <ForceStopInteractingAtEndOfFrame>d__180(int <>1__state)
			{
			}

			[Token(Token = "0x60032AA")]
			[Address(RVA = "0xA7C174", Offset = "0xA7C174", VA = "0xA7C174", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60032AB")]
			[Address(RVA = "0xA7C178", Offset = "0xA7C178", VA = "0xA7C178", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60032AD")]
			[Address(RVA = "0xA7C234", Offset = "0xA7C234", VA = "0xA7C234", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40019BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x655CF0", Offset = "0x655CF0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x655CF0", Offset = "0x655CF0")]
		public bool disableWhenIdle;

		[Token(Token = "0x40019BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x655D50", Offset = "0x655D50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x655D50", Offset = "0x655D50")]
		public AllowedController allowedNearTouchControllers;

		[Token(Token = "0x40019BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x655DB0", Offset = "0x655DB0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x655DB0", Offset = "0x655DB0")]
		public AllowedController allowedTouchControllers;

		[Token(Token = "0x40019C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x655E10", Offset = "0x655E10")]
		public Collider[] ignoredColliders;

		[Token(Token = "0x40019C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x655E48", Offset = "0x655E48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x655E48", Offset = "0x655E48")]
		public bool isGrabbable;

		[Token(Token = "0x40019C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x655EA8", Offset = "0x655EA8")]
		public bool holdButtonToGrab;

		[Token(Token = "0x40019C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x655EE0", Offset = "0x655EE0")]
		public bool stayGrabbedOnTeleport;

		[Token(Token = "0x40019C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x655F18", Offset = "0x655F18")]
		public ValidDropTypes validDrop;

		[Token(Token = "0x40019C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x655F50", Offset = "0x655F50")]
		public VRTK_ControllerEvents.ButtonAlias grabOverrideButton;

		[Token(Token = "0x40019C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x655F88", Offset = "0x655F88")]
		public AllowedController allowedGrabControllers;

		[Token(Token = "0x40019C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x655FC0", Offset = "0x655FC0")]
		public VRTK_BaseGrabAttach grabAttachMechanicScript;

		[Token(Token = "0x40019C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x655FF8", Offset = "0x655FF8")]
		public VRTK_BaseGrabAction secondaryGrabActionScript;

		[Token(Token = "0x40019C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x656030", Offset = "0x656030")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x656030", Offset = "0x656030")]
		public bool isUsable;

		[Token(Token = "0x40019CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x656090", Offset = "0x656090")]
		public bool holdButtonToUse;

		[Token(Token = "0x40019CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x52")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6560C8", Offset = "0x6560C8")]
		public bool useOnlyIfGrabbed;

		[Token(Token = "0x40019CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x53")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x656100", Offset = "0x656100")]
		public bool pointerActivatesUseAction;

		[Token(Token = "0x40019CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x656138", Offset = "0x656138")]
		public VRTK_ControllerEvents.ButtonAlias useOverrideButton;

		[Token(Token = "0x40019CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x656170", Offset = "0x656170")]
		public AllowedController allowedUseControllers;

		[Token(Token = "0x40019CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6561A8", Offset = "0x6561A8")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x6561A8", Offset = "0x6561A8")]
		[ObsoleteInspector]
		public VRTK_BaseHighlighter objectHighlighter;

		[Token(Token = "0x40019D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x656218", Offset = "0x656218")]
		[ObsoleteInspector]
		public Color touchHighlightColor;

		[Token(Token = "0x40019D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		protected Rigidbody interactableRigidbody;

		[Token(Token = "0x40019D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		protected HashSet<GameObject> currentIgnoredColliders;

		[Token(Token = "0x40019D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		protected HashSet<GameObject> hoveredSnapObjects;

		[Token(Token = "0x40019D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		protected HashSet<GameObject> nearTouchingObjects;

		[Token(Token = "0x40019D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		protected HashSet<GameObject> touchingObjects;

		[Token(Token = "0x40019D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		protected List<GameObject> grabbingObjects;

		[Token(Token = "0x40019D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		protected VRTK_InteractUse usingObject;

		[Token(Token = "0x40019D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		protected Transform trackPoint;

		[Token(Token = "0x40019D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		protected bool customTrackPoint;

		[Token(Token = "0x40019DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		protected Transform primaryControllerAttachPoint;

		[Token(Token = "0x40019DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		protected Transform secondaryControllerAttachPoint;

		[Token(Token = "0x40019DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		protected Transform previousParent;

		[Token(Token = "0x40019DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		protected bool previousKinematicState;

		[Token(Token = "0x40019DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD9")]
		protected bool previousIsGrabbable;

		[Token(Token = "0x40019DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDA")]
		protected bool forcedDropped;

		[Token(Token = "0x40019E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDB")]
		protected bool forceDisabled;

		[Token(Token = "0x40019E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		protected bool hoveredOverSnapDropZone;

		[Token(Token = "0x40019E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		protected VRTK_SnapDropZone hoveringSnapDropZone;

		[Token(Token = "0x40019E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		protected bool snappedInSnapDropZone;

		[Token(Token = "0x40019E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		protected VRTK_SnapDropZone storedSnapDropZone;

		[Token(Token = "0x40019E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		protected Vector3 previousLocalScale;

		[Token(Token = "0x40019E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		protected bool startDisabled;

		[Token(Token = "0x40019E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x105")]
		public bool dropOnFullZone;

		[Token(Token = "0x40019F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		[HideInInspector]
		public int usingState;

		[Token(Token = "0x170001C9")]
		public bool isKinematic
		{
			[Token(Token = "0x60018EE")]
			[Address(RVA = "0xA76FE8", Offset = "0xA76FE8", VA = "0xA76FE8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60018EF")]
			[Address(RVA = "0xA77088", Offset = "0xA77088", VA = "0xA77088")]
			set
			{
			}
		}

		[Token(Token = "0x1400008F")]
		public event InteractableObjectEventHandler InteractableObjectEnabled
		{
			[Token(Token = "0x60018D2")]
			[Address(RVA = "0xA755A8", Offset = "0xA755A8", VA = "0xA755A8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66BC50", Offset = "0x66BC50")]
			add
			{
			}
			[Token(Token = "0x60018D3")]
			[Address(RVA = "0xA75698", Offset = "0xA75698", VA = "0xA75698")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66BC60", Offset = "0x66BC60")]
			remove
			{
			}
		}

		[Token(Token = "0x14000090")]
		public event InteractableObjectEventHandler InteractableObjectDisabled
		{
			[Token(Token = "0x60018D4")]
			[Address(RVA = "0xA75788", Offset = "0xA75788", VA = "0xA75788")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66BC70", Offset = "0x66BC70")]
			add
			{
			}
			[Token(Token = "0x60018D5")]
			[Address(RVA = "0xA75878", Offset = "0xA75878", VA = "0xA75878")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66BC80", Offset = "0x66BC80")]
			remove
			{
			}
		}

		[Token(Token = "0x14000091")]
		public event InteractableObjectEventHandler InteractableObjectNearTouched
		{
			[Token(Token = "0x60018D6")]
			[Address(RVA = "0xA75968", Offset = "0xA75968", VA = "0xA75968")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66BC90", Offset = "0x66BC90")]
			add
			{
			}
			[Token(Token = "0x60018D7")]
			[Address(RVA = "0xA75A58", Offset = "0xA75A58", VA = "0xA75A58")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66BCA0", Offset = "0x66BCA0")]
			remove
			{
			}
		}

		[Token(Token = "0x14000092")]
		public event InteractableObjectEventHandler InteractableObjectNearUntouched
		{
			[Token(Token = "0x60018D8")]
			[Address(RVA = "0xA75B48", Offset = "0xA75B48", VA = "0xA75B48")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66BCB0", Offset = "0x66BCB0")]
			add
			{
			}
			[Token(Token = "0x60018D9")]
			[Address(RVA = "0xA75C38", Offset = "0xA75C38", VA = "0xA75C38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66BCC0", Offset = "0x66BCC0")]
			remove
			{
			}
		}

		[Token(Token = "0x14000093")]
		public event InteractableObjectEventHandler InteractableObjectTouched
		{
			[Token(Token = "0x60018DA")]
			[Address(RVA = "0xA75D28", Offset = "0xA75D28", VA = "0xA75D28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66BCD0", Offset = "0x66BCD0")]
			add
			{
			}
			[Token(Token = "0x60018DB")]
			[Address(RVA = "0xA75E18", Offset = "0xA75E18", VA = "0xA75E18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66BCE0", Offset = "0x66BCE0")]
			remove
			{
			}
		}

		[Token(Token = "0x14000094")]
		public event InteractableObjectEventHandler InteractableObjectUntouched
		{
			[Token(Token = "0x60018DC")]
			[Address(RVA = "0xA75F08", Offset = "0xA75F08", VA = "0xA75F08")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66BCF0", Offset = "0x66BCF0")]
			add
			{
			}
			[Token(Token = "0x60018DD")]
			[Address(RVA = "0xA75FF8", Offset = "0xA75FF8", VA = "0xA75FF8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66BD00", Offset = "0x66BD00")]
			remove
			{
			}
		}

		[Token(Token = "0x14000095")]
		public event InteractableObjectEventHandler InteractableObjectGrabbed
		{
			[Token(Token = "0x60018DE")]
			[Address(RVA = "0xA760E8", Offset = "0xA760E8", VA = "0xA760E8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66BD10", Offset = "0x66BD10")]
			add
			{
			}
			[Token(Token = "0x60018DF")]
			[Address(RVA = "0xA761D8", Offset = "0xA761D8", VA = "0xA761D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66BD20", Offset = "0x66BD20")]
			remove
			{
			}
		}

		[Token(Token = "0x14000096")]
		public event InteractableObjectEventHandler InteractableObjectUngrabbed
		{
			[Token(Token = "0x60018E0")]
			[Address(RVA = "0xA762C8", Offset = "0xA762C8", VA = "0xA762C8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66BD30", Offset = "0x66BD30")]
			add
			{
			}
			[Token(Token = "0x60018E1")]
			[Address(RVA = "0xA763B8", Offset = "0xA763B8", VA = "0xA763B8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66BD40", Offset = "0x66BD40")]
			remove
			{
			}
		}

		[Token(Token = "0x14000097")]
		public event InteractableObjectEventHandler InteractableObjectUsed
		{
			[Token(Token = "0x60018E2")]
			[Address(RVA = "0xA764A8", Offset = "0xA764A8", VA = "0xA764A8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66BD50", Offset = "0x66BD50")]
			add
			{
			}
			[Token(Token = "0x60018E3")]
			[Address(RVA = "0xA76598", Offset = "0xA76598", VA = "0xA76598")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66BD60", Offset = "0x66BD60")]
			remove
			{
			}
		}

		[Token(Token = "0x14000098")]
		public event InteractableObjectEventHandler InteractableObjectUnused
		{
			[Token(Token = "0x60018E4")]
			[Address(RVA = "0xA76688", Offset = "0xA76688", VA = "0xA76688")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66BD70", Offset = "0x66BD70")]
			add
			{
			}
			[Token(Token = "0x60018E5")]
			[Address(RVA = "0xA76778", Offset = "0xA76778", VA = "0xA76778")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66BD80", Offset = "0x66BD80")]
			remove
			{
			}
		}

		[Token(Token = "0x14000099")]
		public event InteractableObjectEventHandler InteractableObjectEnteredSnapDropZone
		{
			[Token(Token = "0x60018E6")]
			[Address(RVA = "0xA76868", Offset = "0xA76868", VA = "0xA76868")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66BD90", Offset = "0x66BD90")]
			add
			{
			}
			[Token(Token = "0x60018E7")]
			[Address(RVA = "0xA76958", Offset = "0xA76958", VA = "0xA76958")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66BDA0", Offset = "0x66BDA0")]
			remove
			{
			}
		}

		[Token(Token = "0x1400009A")]
		public event InteractableObjectEventHandler InteractableObjectExitedSnapDropZone
		{
			[Token(Token = "0x60018E8")]
			[Address(RVA = "0xA76A48", Offset = "0xA76A48", VA = "0xA76A48")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66BDB0", Offset = "0x66BDB0")]
			add
			{
			}
			[Token(Token = "0x60018E9")]
			[Address(RVA = "0xA76B38", Offset = "0xA76B38", VA = "0xA76B38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66BDC0", Offset = "0x66BDC0")]
			remove
			{
			}
		}

		[Token(Token = "0x1400009B")]
		public event InteractableObjectEventHandler InteractableObjectSnappedToDropZone
		{
			[Token(Token = "0x60018EA")]
			[Address(RVA = "0xA76C28", Offset = "0xA76C28", VA = "0xA76C28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66BDD0", Offset = "0x66BDD0")]
			add
			{
			}
			[Token(Token = "0x60018EB")]
			[Address(RVA = "0xA76D18", Offset = "0xA76D18", VA = "0xA76D18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66BDE0", Offset = "0x66BDE0")]
			remove
			{
			}
		}

		[Token(Token = "0x1400009C")]
		public event InteractableObjectEventHandler InteractableObjectUnsnappedFromDropZone
		{
			[Token(Token = "0x60018EC")]
			[Address(RVA = "0xA76E08", Offset = "0xA76E08", VA = "0xA76E08")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66BDF0", Offset = "0x66BDF0")]
			add
			{
			}
			[Token(Token = "0x60018ED")]
			[Address(RVA = "0xA76EF8", Offset = "0xA76EF8", VA = "0xA76EF8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66BE00", Offset = "0x66BE00")]
			remove
			{
			}
		}

		[Token(Token = "0x60018F0")]
		[Address(RVA = "0xA77138", Offset = "0xA77138", VA = "0xA77138", Slot = "4")]
		public virtual void OnInteractableObjectEnabled(InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x60018F1")]
		[Address(RVA = "0xA7715C", Offset = "0xA7715C", VA = "0xA7715C", Slot = "5")]
		public virtual void OnInteractableObjectDisabled(InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x60018F2")]
		[Address(RVA = "0xA77180", Offset = "0xA77180", VA = "0xA77180", Slot = "6")]
		public virtual void OnInteractableObjectNearTouched(InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x60018F3")]
		[Address(RVA = "0xA771A4", Offset = "0xA771A4", VA = "0xA771A4", Slot = "7")]
		public virtual void OnInteractableObjectNearUntouched(InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x60018F4")]
		[Address(RVA = "0xA771C8", Offset = "0xA771C8", VA = "0xA771C8", Slot = "8")]
		public virtual void OnInteractableObjectTouched(InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x60018F5")]
		[Address(RVA = "0xA771EC", Offset = "0xA771EC", VA = "0xA771EC", Slot = "9")]
		public virtual void OnInteractableObjectUntouched(InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x60018F6")]
		[Address(RVA = "0xA77210", Offset = "0xA77210", VA = "0xA77210", Slot = "10")]
		public virtual void OnInteractableObjectGrabbed(InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x60018F7")]
		[Address(RVA = "0xA77234", Offset = "0xA77234", VA = "0xA77234", Slot = "11")]
		public virtual void OnInteractableObjectUngrabbed(InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x60018F8")]
		[Address(RVA = "0xA77258", Offset = "0xA77258", VA = "0xA77258", Slot = "12")]
		public virtual void OnInteractableObjectUsed(InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x60018F9")]
		[Address(RVA = "0xA7727C", Offset = "0xA7727C", VA = "0xA7727C", Slot = "13")]
		public virtual void OnInteractableObjectUnused(InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x60018FA")]
		[Address(RVA = "0xA772A0", Offset = "0xA772A0", VA = "0xA772A0", Slot = "14")]
		public virtual void OnInteractableObjectEnteredSnapDropZone(InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x60018FB")]
		[Address(RVA = "0xA772C4", Offset = "0xA772C4", VA = "0xA772C4", Slot = "15")]
		public virtual void OnInteractableObjectExitedSnapDropZone(InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x60018FC")]
		[Address(RVA = "0xA772E8", Offset = "0xA772E8", VA = "0xA772E8", Slot = "16")]
		public virtual void OnInteractableObjectSnappedToDropZone(InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x60018FD")]
		[Address(RVA = "0xA7730C", Offset = "0xA7730C", VA = "0xA7730C", Slot = "17")]
		public virtual void OnInteractableObjectUnsnappedFromDropZone(InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x60018FE")]
		[Address(RVA = "0xA77330", Offset = "0xA77330", VA = "0xA77330")]
		public InteractableObjectEventArgs SetInteractableObjectEvent(GameObject interactingObject)
		{
			return default(InteractableObjectEventArgs);
		}

		[Token(Token = "0x60018FF")]
		[Address(RVA = "0xA77338", Offset = "0xA77338", VA = "0xA77338", Slot = "18")]
		public virtual bool IsNearTouched()
		{
			return default(bool);
		}

		[Token(Token = "0x6001900")]
		[Address(RVA = "0xA773C4", Offset = "0xA773C4", VA = "0xA773C4", Slot = "19")]
		public virtual bool IsTouched()
		{
			return default(bool);
		}

		[Token(Token = "0x6001901")]
		[Address(RVA = "0xA77430", Offset = "0xA77430", VA = "0xA77430", Slot = "20")]
		public virtual bool IsGrabbed([Optional] GameObject grabbedBy)
		{
			return default(bool);
		}

		[Token(Token = "0x6001902")]
		[Address(RVA = "0xA77534", Offset = "0xA77534", VA = "0xA77534", Slot = "21")]
		public virtual bool IsUsing([Optional] GameObject usedBy)
		{
			return default(bool);
		}

		[Token(Token = "0x6001903")]
		[Address(RVA = "0xA77664", Offset = "0xA77664", VA = "0xA77664", Slot = "22")]
		public virtual void StartNearTouching([Optional] VRTK_InteractNearTouch currentNearTouchingObject)
		{
		}

		[Token(Token = "0x6001904")]
		[Address(RVA = "0xA77794", Offset = "0xA77794", VA = "0xA77794", Slot = "23")]
		public virtual void StopNearTouching([Optional] VRTK_InteractNearTouch previousNearTouchingObject)
		{
		}

		[Token(Token = "0x6001905")]
		[Address(RVA = "0xA778AC", Offset = "0xA778AC", VA = "0xA778AC", Slot = "24")]
		public virtual void StartTouching([Optional] VRTK_InteractTouch currentTouchingObject)
		{
		}

		[Token(Token = "0x6001906")]
		[Address(RVA = "0xA77B98", Offset = "0xA77B98", VA = "0xA77B98", Slot = "25")]
		public virtual void StopTouching([Optional] VRTK_InteractTouch previousTouchingObject)
		{
		}

		[Token(Token = "0x6001907")]
		[Address(RVA = "0xA77CC8", Offset = "0xA77CC8", VA = "0xA77CC8", Slot = "26")]
		public virtual void Grabbed([Optional] VRTK_InteractGrab currentGrabbingObject)
		{
		}

		[Token(Token = "0x6001908")]
		[Address(RVA = "0xA77DEC", Offset = "0xA77DEC", VA = "0xA77DEC", Slot = "27")]
		public virtual void Ungrabbed([Optional] VRTK_InteractGrab previousGrabbingObject)
		{
		}

		[Token(Token = "0x6001909")]
		[Address(RVA = "0xA77F60", Offset = "0xA77F60", VA = "0xA77F60", Slot = "28")]
		public virtual void StartUsing([Optional] VRTK_InteractUse currentUsingObject)
		{
		}

		[Token(Token = "0x600190A")]
		[Address(RVA = "0xA7807C", Offset = "0xA7807C", VA = "0xA7807C", Slot = "29")]
		public virtual void StopUsing([Optional] VRTK_InteractUse previousUsingObject, bool resetUsingObjectState = true)
		{
		}

		[Token(Token = "0x600190B")]
		[Address(RVA = "0xA78150", Offset = "0xA78150", VA = "0xA78150", Slot = "30")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x66BE10", Offset = "0x66BE10")]
		public virtual void ToggleHighlight(bool toggle, [Optional] Color? highlightColor)
		{
		}

		[Token(Token = "0x600190C")]
		[Address(RVA = "0xA78254", Offset = "0xA78254", VA = "0xA78254", Slot = "31")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x66BE48", Offset = "0x66BE48")]
		public virtual void Highlight(Color highlightColor)
		{
		}

		[Token(Token = "0x600190D")]
		[Address(RVA = "0xA78340", Offset = "0xA78340", VA = "0xA78340", Slot = "32")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x66BE80", Offset = "0x66BE80")]
		public virtual void Unhighlight()
		{
		}

		[Token(Token = "0x600190E")]
		[Address(RVA = "0xA783F4", Offset = "0xA783F4", VA = "0xA783F4", Slot = "33")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x66BEB8", Offset = "0x66BEB8")]
		public virtual void ResetHighlighter()
		{
		}

		[Token(Token = "0x600190F")]
		[Address(RVA = "0xA784A8", Offset = "0xA784A8", VA = "0xA784A8", Slot = "34")]
		public virtual void PauseCollisions(float delay)
		{
		}

		[Token(Token = "0x6001910")]
		[Address(RVA = "0xA785AC", Offset = "0xA785AC", VA = "0xA785AC", Slot = "35")]
		public virtual void ZeroVelocity()
		{
		}

		[Token(Token = "0x6001911")]
		[Address(RVA = "0xA786DC", Offset = "0xA786DC", VA = "0xA786DC", Slot = "36")]
		public virtual void SaveCurrentState()
		{
		}

		[Token(Token = "0x6001912")]
		[Address(RVA = "0xA787E4", Offset = "0xA787E4", VA = "0xA787E4", Slot = "37")]
		public virtual void GetPreviousState(out Transform previousParent, out bool previousKinematic, out bool previousGrabbable)
		{
		}

		[Token(Token = "0x6001913")]
		[Address(RVA = "0xA78800", Offset = "0xA78800", VA = "0xA78800", Slot = "38")]
		public virtual void OverridePreviousState(Transform previousParent, bool previousKinematic, bool previousGrabbable)
		{
		}

		[Token(Token = "0x6001914")]
		[Address(RVA = "0xA78818", Offset = "0xA78818", VA = "0xA78818", Slot = "39")]
		public virtual List<GameObject> GetNearTouchingObjects()
		{
			return null;
		}

		[Token(Token = "0x6001915")]
		[Address(RVA = "0xA78888", Offset = "0xA78888", VA = "0xA78888", Slot = "40")]
		public virtual List<GameObject> GetTouchingObjects()
		{
			return null;
		}

		[Token(Token = "0x6001916")]
		[Address(RVA = "0xA788F8", Offset = "0xA788F8", VA = "0xA788F8", Slot = "41")]
		public virtual GameObject GetGrabbingObject()
		{
			return null;
		}

		[Token(Token = "0x6001917")]
		[Address(RVA = "0xA78984", Offset = "0xA78984", VA = "0xA78984", Slot = "42")]
		public virtual GameObject GetSecondaryGrabbingObject()
		{
			return null;
		}

		[Token(Token = "0x6001918")]
		[Address(RVA = "0xA78A20", Offset = "0xA78A20", VA = "0xA78A20", Slot = "43")]
		public virtual GameObject GetUsingObject()
		{
			return null;
		}

		[Token(Token = "0x6001919")]
		[Address(RVA = "0xA78A50", Offset = "0xA78A50", VA = "0xA78A50", Slot = "44")]
		public virtual VRTK_InteractUse GetUsingScript()
		{
			return null;
		}

		[Token(Token = "0x600191A")]
		[Address(RVA = "0xA78A58", Offset = "0xA78A58", VA = "0xA78A58", Slot = "45")]
		public virtual bool IsValidInteractableController(GameObject actualController, AllowedController controllerCheck)
		{
			return default(bool);
		}

		[Token(Token = "0x600191B")]
		[Address(RVA = "0xA78B7C", Offset = "0xA78B7C", VA = "0xA78B7C", Slot = "46")]
		public virtual void ForceStopInteracting(bool useCoroutine = true)
		{
		}

		[Token(Token = "0x600191C")]
		[Address(RVA = "0xA78C3C", Offset = "0xA78C3C", VA = "0xA78C3C", Slot = "47")]
		public virtual void ForceStopSecondaryGrabInteraction()
		{
		}

		[Token(Token = "0x600191D")]
		[Address(RVA = "0xA78D14", Offset = "0xA78D14", VA = "0xA78D14", Slot = "48")]
		public virtual void RegisterTeleporters()
		{
		}

		[Token(Token = "0x600191E")]
		[Address(RVA = "0xA78D4C", Offset = "0xA78D4C", VA = "0xA78D4C", Slot = "49")]
		public virtual void UnregisterTeleporters()
		{
		}

		[Token(Token = "0x600191F")]
		[Address(RVA = "0xA78EE4", Offset = "0xA78EE4", VA = "0xA78EE4", Slot = "50")]
		public virtual void StoreLocalScale()
		{
		}

		[Token(Token = "0x6001920")]
		[Address(RVA = "0xA78F28", Offset = "0xA78F28", VA = "0xA78F28", Slot = "51")]
		public virtual void ToggleSnapDropZone(VRTK_SnapDropZone snapDropZone, bool state)
		{
		}

		[Token(Token = "0x6001921")]
		[Address(RVA = "0xA79044", Offset = "0xA79044", VA = "0xA79044", Slot = "52")]
		public virtual bool IsInSnapDropZone()
		{
			return default(bool);
		}

		[Token(Token = "0x6001922")]
		[Address(RVA = "0xA7904C", Offset = "0xA7904C", VA = "0xA7904C", Slot = "53")]
		public virtual void SetSnapDropZoneHover(VRTK_SnapDropZone snapDropZone, bool state)
		{
		}

		[Token(Token = "0x6001923")]
		[Address(RVA = "0xA791A0", Offset = "0xA791A0", VA = "0xA791A0", Slot = "54")]
		public virtual VRTK_SnapDropZone GetStoredSnapDropZone()
		{
			return null;
		}

		[Token(Token = "0x6001924")]
		[Address(RVA = "0xA791A8", Offset = "0xA791A8", VA = "0xA791A8", Slot = "55")]
		public virtual bool IsHoveredOverSnapDropZone()
		{
			return default(bool);
		}

		[Token(Token = "0x6001925")]
		[Address(RVA = "0xA791B0", Offset = "0xA791B0", VA = "0xA791B0", Slot = "56")]
		public virtual bool IsDroppable(bool includeZones = true)
		{
			return default(bool);
		}

		[Token(Token = "0x6001926")]
		[Address(RVA = "0xA792E0", Offset = "0xA792E0", VA = "0xA792E0", Slot = "57")]
		public virtual bool IsSwappable()
		{
			return default(bool);
		}

		[Token(Token = "0x6001927")]
		[Address(RVA = "0xA79384", Offset = "0xA79384", VA = "0xA79384", Slot = "58")]
		public virtual bool PerformSecondaryAction()
		{
			return default(bool);
		}

		[Token(Token = "0x6001928")]
		[Address(RVA = "0xA794C4", Offset = "0xA794C4", VA = "0xA794C4", Slot = "59")]
		public virtual void ResetIgnoredColliders()
		{
		}

		[Token(Token = "0x6001929")]
		[Address(RVA = "0xA79784", Offset = "0xA79784", VA = "0xA79784", Slot = "60")]
		public virtual void RemoveIgnoreCollider(GameObject currentIgnoredCollider)
		{
		}

		[Token(Token = "0x600192A")]
		[Address(RVA = "0xA79960", Offset = "0xA79960", VA = "0xA79960", Slot = "61")]
		public virtual void SubscribeToInteractionEvent(InteractionType givenType, InteractableObjectEventHandler methodCallback)
		{
		}

		[Token(Token = "0x600192B")]
		[Address(RVA = "0xA7997C", Offset = "0xA7997C", VA = "0xA7997C", Slot = "62")]
		public virtual void UnsubscribeFromInteractionEvent(InteractionType givenType, InteractableObjectEventHandler methodCallback)
		{
		}

		[Token(Token = "0x600192C")]
		[Address(RVA = "0xA79998", Offset = "0xA79998", VA = "0xA79998", Slot = "63")]
		public virtual Transform GetPrimaryAttachPoint()
		{
			return null;
		}

		[Token(Token = "0x600192D")]
		[Address(RVA = "0xA799A0", Offset = "0xA799A0", VA = "0xA799A0", Slot = "64")]
		public virtual Transform GetSecondaryAttachPoint()
		{
			return null;
		}

		[Token(Token = "0x600192E")]
		[Address(RVA = "0xA799A8", Offset = "0xA799A8", VA = "0xA799A8", Slot = "65")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x600192F")]
		[Address(RVA = "0xA79C3C", Offset = "0xA79C3C", VA = "0xA79C3C", Slot = "66")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6001930")]
		[Address(RVA = "0xA79D0C", Offset = "0xA79D0C", VA = "0xA79D0C", Slot = "67")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x6001931")]
		[Address(RVA = "0xA79D70", Offset = "0xA79D70", VA = "0xA79D70", Slot = "68")]
		protected virtual void FixedUpdate()
		{
		}

		[Token(Token = "0x6001932")]
		[Address(RVA = "0xA79EA0", Offset = "0xA79EA0", VA = "0xA79EA0", Slot = "69")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x6001933")]
		[Address(RVA = "0xA79FF4", Offset = "0xA79FF4", VA = "0xA79FF4", Slot = "70")]
		protected virtual bool IsIdle()
		{
			return default(bool);
		}

		[Token(Token = "0x6001934")]
		[Address(RVA = "0xA7A080", Offset = "0xA7A080", VA = "0xA7A080", Slot = "71")]
		protected virtual void LateUpdate()
		{
		}

		[Token(Token = "0x6001935")]
		[Address(RVA = "0xA7A0DC", Offset = "0xA7A0DC", VA = "0xA7A0DC", Slot = "72")]
		protected virtual void LoadPreviousState()
		{
		}

		[Token(Token = "0x6001936")]
		[Address(RVA = "0xA779E8", Offset = "0xA779E8", VA = "0xA779E8")]
		public void IgnoreColliders(GameObject touchingObject)
		{
		}

		[Token(Token = "0x6001937")]
		[Address(RVA = "0xA7A1FC", Offset = "0xA7A1FC", VA = "0xA7A1FC", Slot = "73")]
		protected virtual void ToggleEnableState(bool state)
		{
		}

		[Token(Token = "0x6001938")]
		[Address(RVA = "0xA7A214", Offset = "0xA7A214", VA = "0xA7A214", Slot = "74")]
		public virtual void AttemptSetGrabMechanic()
		{
		}

		[Token(Token = "0x6001939")]
		[Address(RVA = "0xA7A318", Offset = "0xA7A318", VA = "0xA7A318", Slot = "75")]
		protected virtual void AttemptSetSecondaryGrabAction()
		{
		}

		[Token(Token = "0x600193A")]
		[Address(RVA = "0xA7A3B0", Offset = "0xA7A3B0", VA = "0xA7A3B0", Slot = "76")]
		protected virtual void ForceReleaseGrab()
		{
		}

		[Token(Token = "0x600193B")]
		[Address(RVA = "0xA7A4C8", Offset = "0xA7A4C8", VA = "0xA7A4C8", Slot = "77")]
		protected virtual void PrimaryControllerGrab(GameObject currentGrabbingObject)
		{
		}

		[Token(Token = "0x600193C")]
		[Address(RVA = "0xA7A618", Offset = "0xA7A618", VA = "0xA7A618", Slot = "78")]
		protected virtual void SecondaryControllerGrab(GameObject currentGrabbingObject)
		{
		}

		[Token(Token = "0x600193D")]
		[Address(RVA = "0xA7A7E4", Offset = "0xA7A7E4", VA = "0xA7A7E4", Slot = "79")]
		protected virtual void PrimaryControllerUngrab(GameObject previousGrabbingObject, GameObject previousSecondaryGrabbingObject)
		{
		}

		[Token(Token = "0x600193E")]
		[Address(RVA = "0xA7A96C", Offset = "0xA7A96C", VA = "0xA7A96C", Slot = "80")]
		protected virtual void SecondaryControllerUngrab(GameObject previousGrabbingObject)
		{
		}

		[Token(Token = "0x600193F")]
		[Address(RVA = "0xA7AA78", Offset = "0xA7AA78", VA = "0xA7AA78", Slot = "81")]
		protected virtual void UnpauseCollisions()
		{
		}

		[Token(Token = "0x6001940")]
		[Address(RVA = "0xA7AB3C", Offset = "0xA7AB3C", VA = "0xA7AB3C", Slot = "82")]
		protected virtual void SetTrackPoint(GameObject currentGrabbingObject)
		{
		}

		[Token(Token = "0x6001941")]
		[Address(RVA = "0xA7AC8C", Offset = "0xA7AC8C", VA = "0xA7AC8C", Slot = "83")]
		protected virtual Transform CreateAttachPoint(string namePrefix, string nameSuffix, Transform origin)
		{
			return null;
		}

		[Token(Token = "0x6001942")]
		[Address(RVA = "0xA7AFC8", Offset = "0xA7AFC8", VA = "0xA7AFC8", Slot = "84")]
		protected virtual void AddTrackPoint(GameObject currentGrabbingObject)
		{
		}

		[Token(Token = "0x6001943")]
		[Address(RVA = "0xA7B160", Offset = "0xA7B160", VA = "0xA7B160", Slot = "85")]
		protected virtual void RemoveTrackPoint()
		{
		}

		[Token(Token = "0x6001944")]
		[Address(RVA = "0xA7B2C4", Offset = "0xA7B2C4", VA = "0xA7B2C4", Slot = "86")]
		protected virtual void OnTeleporting(object sender, DestinationMarkerEventArgs e)
		{
		}

		[Token(Token = "0x6001945")]
		[Address(RVA = "0xA7B318", Offset = "0xA7B318", VA = "0xA7B318", Slot = "87")]
		protected virtual void OnTeleported(object sender, DestinationMarkerEventArgs e)
		{
		}

		[Token(Token = "0x6001946")]
		[Address(RVA = "0xA7B510", Offset = "0xA7B510", VA = "0xA7B510", Slot = "88")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x66BEF0", Offset = "0x66BEF0")]
		protected virtual IEnumerator RegisterTeleportersAtEndOfFrame()
		{
			return null;
		}

		[Token(Token = "0x6001947")]
		[Address(RVA = "0xA7B5B0", Offset = "0xA7B5B0", VA = "0xA7B5B0", Slot = "89")]
		protected virtual void ResetUseState(GameObject checkObject)
		{
		}

		[Token(Token = "0x6001948")]
		[Address(RVA = "0xA7B6B4", Offset = "0xA7B6B4", VA = "0xA7B6B4", Slot = "90")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x66BF54", Offset = "0x66BF54")]
		protected virtual IEnumerator ForceStopInteractingAtEndOfFrame()
		{
			return null;
		}

		[Token(Token = "0x6001949")]
		[Address(RVA = "0xA7B754", Offset = "0xA7B754", VA = "0xA7B754", Slot = "91")]
		protected virtual void ForceStopAllInteractions()
		{
		}

		[Token(Token = "0x600194A")]
		[Address(RVA = "0xA7B7BC", Offset = "0xA7B7BC", VA = "0xA7B7BC", Slot = "92")]
		protected virtual void StopTouchingInteractions()
		{
		}

		[Token(Token = "0x600194B")]
		[Address(RVA = "0xA7B96C", Offset = "0xA7B96C", VA = "0xA7B96C", Slot = "93")]
		protected virtual void StopGrabbingInteractions()
		{
		}

		[Token(Token = "0x600194C")]
		[Address(RVA = "0xA7BAF8", Offset = "0xA7BAF8", VA = "0xA7BAF8", Slot = "94")]
		protected virtual void StopUsingInteractions()
		{
		}

		[Token(Token = "0x600194D")]
		[Address(RVA = "0xA7BC58", Offset = "0xA7BC58", VA = "0xA7BC58", Slot = "95")]
		protected virtual void ResetDropSnapType()
		{
		}

		[Token(Token = "0x600194E")]
		[Address(RVA = "0xA7BE38", Offset = "0xA7BE38", VA = "0xA7BE38", Slot = "96")]
		protected virtual void ResetUsingObject()
		{
		}

		[Token(Token = "0x600194F")]
		[Address(RVA = "0xA7BED8", Offset = "0xA7BED8", VA = "0xA7BED8", Slot = "97")]
		protected virtual void ManageInteractionEvent(InteractionType givenType, bool state, InteractableObjectEventHandler methodCallback)
		{
		}

		[Token(Token = "0x6001950")]
		[Address(RVA = "0xA7BF88", Offset = "0xA7BF88", VA = "0xA7BF88", Slot = "98")]
		protected virtual void ManageNearTouchSubscriptions(bool register, InteractableObjectEventHandler methodCallback)
		{
		}

		[Token(Token = "0x6001951")]
		[Address(RVA = "0xA7BF9C", Offset = "0xA7BF9C", VA = "0xA7BF9C", Slot = "99")]
		protected virtual void ManageTouchSubscriptions(bool register, InteractableObjectEventHandler methodCallback)
		{
		}

		[Token(Token = "0x6001952")]
		[Address(RVA = "0xA7BFB0", Offset = "0xA7BFB0", VA = "0xA7BFB0", Slot = "100")]
		protected virtual void ManageGrabSubscriptions(bool register, InteractableObjectEventHandler methodCallback)
		{
		}

		[Token(Token = "0x6001953")]
		[Address(RVA = "0xA7BFC4", Offset = "0xA7BFC4", VA = "0xA7BFC4", Slot = "101")]
		protected virtual void ManageUseSubscriptions(bool register, InteractableObjectEventHandler methodCallback)
		{
		}

		[Token(Token = "0x6001954")]
		[Address(RVA = "0xA7BFD8", Offset = "0xA7BFD8", VA = "0xA7BFD8", Slot = "102")]
		protected virtual void ManageNearUntouchSubscriptions(bool register, InteractableObjectEventHandler methodCallback)
		{
		}

		[Token(Token = "0x6001955")]
		[Address(RVA = "0xA7BFEC", Offset = "0xA7BFEC", VA = "0xA7BFEC", Slot = "103")]
		protected virtual void ManageUntouchSubscriptions(bool register, InteractableObjectEventHandler methodCallback)
		{
		}

		[Token(Token = "0x6001956")]
		[Address(RVA = "0xA7C000", Offset = "0xA7C000", VA = "0xA7C000", Slot = "104")]
		protected virtual void ManageUngrabSubscriptions(bool register, InteractableObjectEventHandler methodCallback)
		{
		}

		[Token(Token = "0x6001957")]
		[Address(RVA = "0xA7C014", Offset = "0xA7C014", VA = "0xA7C014", Slot = "105")]
		protected virtual void ManageUnuseSubscriptions(bool register, InteractableObjectEventHandler methodCallback)
		{
		}

		[Token(Token = "0x6001958")]
		[Address(RVA = "0xA7C028", Offset = "0xA7C028", VA = "0xA7C028")]
		public VRTK_InteractableObject()
		{
		}
	}
	[Token(Token = "0x20003A2")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x63F9C8", Offset = "0x63F9C8")]
	public struct InteractControllerAppearanceEventArgs
	{
		[Token(Token = "0x40019F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public GameObject interactingObject;

		[Token(Token = "0x40019F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public GameObject ignoredObject;
	}
	[Token(Token = "0x20003A3")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x63FA00", Offset = "0x63FA00")]
	public delegate void InteractControllerAppearanceEventHandler(object sender, InteractControllerAppearanceEventArgs e);
	[Token(Token = "0x20003A4")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x63FA38", Offset = "0x63FA38")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x63FA38", Offset = "0x63FA38")]
	public class VRTK_InteractControllerAppearance : MonoBehaviour
	{
		[Token(Token = "0x20007FB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x645DB8", Offset = "0x645DB8")]
		private sealed class <HideController>d__48 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002A32")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002A33")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002A34")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float delayTime;

			[Token(Token = "0x4002A35")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public GameObject interactingObject;

			[Token(Token = "0x4002A36")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public GameObject ignoredObject;

			[Token(Token = "0x4002A37")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public VRTK_InteractControllerAppearance <>4__this;

			[Token(Token = "0x1700032F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60032B2")]
				[Address(RVA = "0xD04F70", Offset = "0xD04F70", VA = "0xD04F70", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000330")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60032B4")]
				[Address(RVA = "0xD04FE0", Offset = "0xD04FE0", VA = "0xD04FE0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60032AF")]
			[Address(RVA = "0xD04E14", Offset = "0xD04E14", VA = "0xD04E14")]
			[DebuggerHidden]
			public <HideController>d__48(int <>1__state)
			{
			}

			[Token(Token = "0x60032B0")]
			[Address(RVA = "0xD04E5C", Offset = "0xD04E5C", VA = "0xD04E5C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60032B1")]
			[Address(RVA = "0xD04E60", Offset = "0xD04E60", VA = "0xD04E60", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60032B3")]
			[Address(RVA = "0xD04F78", Offset = "0xD04F78", VA = "0xD04F78", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40019F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x656354", Offset = "0x656354")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x656354", Offset = "0x656354")]
		public bool hideControllerOnTouch;

		[Token(Token = "0x40019FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6563B4", Offset = "0x6563B4")]
		public float hideDelayOnTouch;

		[Token(Token = "0x40019FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6563EC", Offset = "0x6563EC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6563EC", Offset = "0x6563EC")]
		public bool hideControllerOnGrab;

		[Token(Token = "0x40019FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65644C", Offset = "0x65644C")]
		public float hideDelayOnGrab;

		[Token(Token = "0x40019FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x656484", Offset = "0x656484")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x656484", Offset = "0x656484")]
		public bool hideControllerOnUse;

		[Token(Token = "0x40019FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6564E4", Offset = "0x6564E4")]
		public float hideDelayOnUse;

		[Token(Token = "0x4001A07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		protected bool touchControllerShow;

		[Token(Token = "0x4001A08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		protected bool grabControllerShow;

		[Token(Token = "0x4001A09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		protected Coroutine hideControllerRoutine;

		[Token(Token = "0x1400009D")]
		public event InteractControllerAppearanceEventHandler ControllerHidden
		{
			[Token(Token = "0x600195D")]
			[Address(RVA = "0xD035F0", Offset = "0xD035F0", VA = "0xD035F0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66BFB8", Offset = "0x66BFB8")]
			add
			{
			}
			[Token(Token = "0x600195E")]
			[Address(RVA = "0xD036DC", Offset = "0xD036DC", VA = "0xD036DC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66BFC8", Offset = "0x66BFC8")]
			remove
			{
			}
		}

		[Token(Token = "0x1400009E")]
		public event InteractControllerAppearanceEventHandler ControllerVisible
		{
			[Token(Token = "0x600195F")]
			[Address(RVA = "0xD037C8", Offset = "0xD037C8", VA = "0xD037C8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66BFD8", Offset = "0x66BFD8")]
			add
			{
			}
			[Token(Token = "0x6001960")]
			[Address(RVA = "0xD038B4", Offset = "0xD038B4", VA = "0xD038B4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66BFE8", Offset = "0x66BFE8")]
			remove
			{
			}
		}

		[Token(Token = "0x1400009F")]
		public event InteractControllerAppearanceEventHandler HiddenOnTouch
		{
			[Token(Token = "0x6001961")]
			[Address(RVA = "0xD039A0", Offset = "0xD039A0", VA = "0xD039A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66BFF8", Offset = "0x66BFF8")]
			add
			{
			}
			[Token(Token = "0x6001962")]
			[Address(RVA = "0xD03A8C", Offset = "0xD03A8C", VA = "0xD03A8C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C008", Offset = "0x66C008")]
			remove
			{
			}
		}

		[Token(Token = "0x140000A0")]
		public event InteractControllerAppearanceEventHandler VisibleOnTouch
		{
			[Token(Token = "0x6001963")]
			[Address(RVA = "0xD03B78", Offset = "0xD03B78", VA = "0xD03B78")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C018", Offset = "0x66C018")]
			add
			{
			}
			[Token(Token = "0x6001964")]
			[Address(RVA = "0xD03C64", Offset = "0xD03C64", VA = "0xD03C64")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C028", Offset = "0x66C028")]
			remove
			{
			}
		}

		[Token(Token = "0x140000A1")]
		public event InteractControllerAppearanceEventHandler HiddenOnGrab
		{
			[Token(Token = "0x6001965")]
			[Address(RVA = "0xD03D50", Offset = "0xD03D50", VA = "0xD03D50")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C038", Offset = "0x66C038")]
			add
			{
			}
			[Token(Token = "0x6001966")]
			[Address(RVA = "0xD03E3C", Offset = "0xD03E3C", VA = "0xD03E3C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C048", Offset = "0x66C048")]
			remove
			{
			}
		}

		[Token(Token = "0x140000A2")]
		public event InteractControllerAppearanceEventHandler VisibleOnGrab
		{
			[Token(Token = "0x6001967")]
			[Address(RVA = "0xD03F28", Offset = "0xD03F28", VA = "0xD03F28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C058", Offset = "0x66C058")]
			add
			{
			}
			[Token(Token = "0x6001968")]
			[Address(RVA = "0xD04014", Offset = "0xD04014", VA = "0xD04014")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C068", Offset = "0x66C068")]
			remove
			{
			}
		}

		[Token(Token = "0x140000A3")]
		public event InteractControllerAppearanceEventHandler HiddenOnUse
		{
			[Token(Token = "0x6001969")]
			[Address(RVA = "0xD04100", Offset = "0xD04100", VA = "0xD04100")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C078", Offset = "0x66C078")]
			add
			{
			}
			[Token(Token = "0x600196A")]
			[Address(RVA = "0xD041EC", Offset = "0xD041EC", VA = "0xD041EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C088", Offset = "0x66C088")]
			remove
			{
			}
		}

		[Token(Token = "0x140000A4")]
		public event InteractControllerAppearanceEventHandler VisibleOnUse
		{
			[Token(Token = "0x600196B")]
			[Address(RVA = "0xD042D8", Offset = "0xD042D8", VA = "0xD042D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C098", Offset = "0x66C098")]
			add
			{
			}
			[Token(Token = "0x600196C")]
			[Address(RVA = "0xD043C4", Offset = "0xD043C4", VA = "0xD043C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C0A8", Offset = "0x66C0A8")]
			remove
			{
			}
		}

		[Token(Token = "0x600196D")]
		[Address(RVA = "0xD044B0", Offset = "0xD044B0", VA = "0xD044B0", Slot = "4")]
		public virtual void OnControllerHidden(InteractControllerAppearanceEventArgs e)
		{
		}

		[Token(Token = "0x600196E")]
		[Address(RVA = "0xD044DC", Offset = "0xD044DC", VA = "0xD044DC", Slot = "5")]
		public virtual void OnControllerVisible(InteractControllerAppearanceEventArgs e)
		{
		}

		[Token(Token = "0x600196F")]
		[Address(RVA = "0xD04508", Offset = "0xD04508", VA = "0xD04508", Slot = "6")]
		public virtual void OnHiddenOnTouch(InteractControllerAppearanceEventArgs e)
		{
		}

		[Token(Token = "0x6001970")]
		[Address(RVA = "0xD04534", Offset = "0xD04534", VA = "0xD04534", Slot = "7")]
		public virtual void OnVisibleOnTouch(InteractControllerAppearanceEventArgs e)
		{
		}

		[Token(Token = "0x6001971")]
		[Address(RVA = "0xD04560", Offset = "0xD04560", VA = "0xD04560", Slot = "8")]
		public virtual void OnHiddenOnGrab(InteractControllerAppearanceEventArgs e)
		{
		}

		[Token(Token = "0x6001972")]
		[Address(RVA = "0xD0458C", Offset = "0xD0458C", VA = "0xD0458C", Slot = "9")]
		public virtual void OnVisibleOnGrab(InteractControllerAppearanceEventArgs e)
		{
		}

		[Token(Token = "0x6001973")]
		[Address(RVA = "0xD045B8", Offset = "0xD045B8", VA = "0xD045B8", Slot = "10")]
		public virtual void OnHiddenOnUse(InteractControllerAppearanceEventArgs e)
		{
		}

		[Token(Token = "0x6001974")]
		[Address(RVA = "0xD045E4", Offset = "0xD045E4", VA = "0xD045E4", Slot = "11")]
		public virtual void OnVisibleOnUse(InteractControllerAppearanceEventArgs e)
		{
		}

		[Token(Token = "0x6001975")]
		[Address(RVA = "0xD04610", Offset = "0xD04610", VA = "0xD04610", Slot = "12")]
		public virtual void ToggleControllerOnTouch(bool showController, GameObject touchingObject, GameObject ignoredObject)
		{
		}

		[Token(Token = "0x6001976")]
		[Address(RVA = "0xD046C4", Offset = "0xD046C4", VA = "0xD046C4", Slot = "13")]
		public virtual void ToggleControllerOnGrab(bool showController, GameObject grabbingObject, GameObject ignoredObject)
		{
		}

		[Token(Token = "0x6001977")]
		[Address(RVA = "0xD0485C", Offset = "0xD0485C", VA = "0xD0485C", Slot = "14")]
		public virtual void ToggleControllerOnUse(bool showController, GameObject usingObject, GameObject ignoredObject)
		{
		}

		[Token(Token = "0x6001978")]
		[Address(RVA = "0xD04A48", Offset = "0xD04A48", VA = "0xD04A48", Slot = "15")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6001979")]
		[Address(RVA = "0xD04C30", Offset = "0xD04C30", VA = "0xD04C30", Slot = "16")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x600197A")]
		[Address(RVA = "0xD04C44", Offset = "0xD04C44", VA = "0xD04C44", Slot = "17")]
		protected virtual void ToggleController(bool showController, GameObject interactingObject, GameObject ignoredObject, float delayTime)
		{
		}

		[Token(Token = "0x600197B")]
		[Address(RVA = "0xD04CBC", Offset = "0xD04CBC", VA = "0xD04CBC", Slot = "18")]
		protected virtual void ShowController(GameObject interactingObject, GameObject ignoredObject)
		{
		}

		[Token(Token = "0x600197C")]
		[Address(RVA = "0xD04D48", Offset = "0xD04D48", VA = "0xD04D48", Slot = "19")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x66C0B8", Offset = "0x66C0B8")]
		protected virtual IEnumerator HideController(GameObject interactingObject, GameObject ignoredObject, float delayTime)
		{
			return null;
		}

		[Token(Token = "0x600197D")]
		[Address(RVA = "0xD04E40", Offset = "0xD04E40", VA = "0xD04E40", Slot = "20")]
		protected virtual InteractControllerAppearanceEventArgs SetEventPayload(GameObject interactingObject, GameObject ignroedObject)
		{
			return default(InteractControllerAppearanceEventArgs);
		}

		[Token(Token = "0x600197E")]
		[Address(RVA = "0xD04E4C", Offset = "0xD04E4C", VA = "0xD04E4C")]
		public VRTK_InteractControllerAppearance()
		{
		}
	}
	[Token(Token = "0x20003A5")]
	public struct InteractHapticsEventArgs
	{
		[Token(Token = "0x4001A0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VRTK_ControllerReference controllerReference;
	}
	[Token(Token = "0x20003A6")]
	public delegate void InteractHapticsEventHandler(object sender, InteractHapticsEventArgs e);
	[Token(Token = "0x20003A7")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x63FA98", Offset = "0x63FA98")]
	public class VRTK_InteractHaptics : VRTK_InteractableListener
	{
		[Token(Token = "0x4001A0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x65659C", Offset = "0x65659C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65659C", Offset = "0x65659C")]
		[ObsoleteField]
		public AudioClip clipOnNearTouch;

		[Token(Token = "0x4001A0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65660C", Offset = "0x65660C")]
		public SoundEffect nearTouchSoundEffectName;

		[Token(Token = "0x4001A0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x656644", Offset = "0x656644")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x656644", Offset = "0x656644")]
		public float strengthOnNearTouch;

		[Token(Token = "0x4001A0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x656698", Offset = "0x656698")]
		public float durationOnNearTouch;

		[Token(Token = "0x4001A0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6566D0", Offset = "0x6566D0")]
		public float intervalOnNearTouch;

		[Token(Token = "0x4001A10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x656708", Offset = "0x656708")]
		public bool cancelOnNearUntouch;

		[Token(Token = "0x4001A11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x656740", Offset = "0x656740")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x656740", Offset = "0x656740")]
		[ObsoleteField]
		public AudioClip clipOnTouch;

		[Token(Token = "0x4001A12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6567B0", Offset = "0x6567B0")]
		public SoundEffect touchSoundEffectName;

		[Token(Token = "0x4001A13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6567E8", Offset = "0x6567E8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6567E8", Offset = "0x6567E8")]
		public float strengthOnTouch;

		[Token(Token = "0x4001A14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65683C", Offset = "0x65683C")]
		public float durationOnTouch;

		[Token(Token = "0x4001A15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x656874", Offset = "0x656874")]
		public float intervalOnTouch;

		[Token(Token = "0x4001A16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6568AC", Offset = "0x6568AC")]
		public bool cancelOnUntouch;

		[Token(Token = "0x4001A17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6568E4", Offset = "0x6568E4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6568E4", Offset = "0x6568E4")]
		[ObsoleteField]
		public AudioClip clipOnGrab;

		[Token(Token = "0x4001A18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x656954", Offset = "0x656954")]
		public SoundEffect grabSoundEffectName;

		[Token(Token = "0x4001A19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65698C", Offset = "0x65698C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x65698C", Offset = "0x65698C")]
		public float strengthOnGrab;

		[Token(Token = "0x4001A1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6569E0", Offset = "0x6569E0")]
		public float durationOnGrab;

		[Token(Token = "0x4001A1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x656A18", Offset = "0x656A18")]
		public float intervalOnGrab;

		[Token(Token = "0x4001A1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x656A50", Offset = "0x656A50")]
		public bool cancelOnUngrab;

		[Token(Token = "0x4001A1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x656A88", Offset = "0x656A88")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x656A88", Offset = "0x656A88")]
		public AudioClip clipOnUse;

		[Token(Token = "0x4001A1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x656AE8", Offset = "0x656AE8")]
		[ObsoleteField]
		public SoundEffect useSoundEffectName;

		[Token(Token = "0x4001A1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x656B34", Offset = "0x656B34")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x656B34", Offset = "0x656B34")]
		public float strengthOnUse;

		[Token(Token = "0x4001A20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x656B88", Offset = "0x656B88")]
		public float durationOnUse;

		[Token(Token = "0x4001A21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x656BC0", Offset = "0x656BC0")]
		public float intervalOnUse;

		[Token(Token = "0x4001A22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x656BF8", Offset = "0x656BF8")]
		public bool cancelOnUnuse;

		[Token(Token = "0x4001A23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x656C30", Offset = "0x656C30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x656C30", Offset = "0x656C30")]
		[ObsoleteField]
		public AudioClip clipOnUngrab;

		[Token(Token = "0x4001A24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x656CA0", Offset = "0x656CA0")]
		public SoundEffect ungrabSoundEffectName;

		[Token(Token = "0x4001A25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x656CD8", Offset = "0x656CD8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x656CD8", Offset = "0x656CD8")]
		public float strengthOnUngrab;

		[Token(Token = "0x4001A26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x656D2C", Offset = "0x656D2C")]
		public float durationOnUngrab;

		[Token(Token = "0x4001A27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x656D64", Offset = "0x656D64")]
		public float intervalOnUngrab;

		[Token(Token = "0x4001A28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x656D9C", Offset = "0x656D9C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x656D9C", Offset = "0x656D9C")]
		public VRTK_InteractableObject objectToAffect;

		[Token(Token = "0x4001A2D")]
		protected const float minInterval = 0.05f;

		[Token(Token = "0x140000A5")]
		public event InteractHapticsEventHandler InteractHapticsNearTouched
		{
			[Token(Token = "0x6001983")]
			[Address(RVA = "0xD09014", Offset = "0xD09014", VA = "0xD09014")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C11C", Offset = "0x66C11C")]
			add
			{
			}
			[Token(Token = "0x6001984")]
			[Address(RVA = "0xD09100", Offset = "0xD09100", VA = "0xD09100")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C12C", Offset = "0x66C12C")]
			remove
			{
			}
		}

		[Token(Token = "0x140000A6")]
		public event InteractHapticsEventHandler InteractHapticsTouched
		{
			[Token(Token = "0x6001985")]
			[Address(RVA = "0xD091EC", Offset = "0xD091EC", VA = "0xD091EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C13C", Offset = "0x66C13C")]
			add
			{
			}
			[Token(Token = "0x6001986")]
			[Address(RVA = "0xD092D8", Offset = "0xD092D8", VA = "0xD092D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C14C", Offset = "0x66C14C")]
			remove
			{
			}
		}

		[Token(Token = "0x140000A7")]
		public event InteractHapticsEventHandler InteractHapticsGrabbed
		{
			[Token(Token = "0x6001987")]
			[Address(RVA = "0xD093C4", Offset = "0xD093C4", VA = "0xD093C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C15C", Offset = "0x66C15C")]
			add
			{
			}
			[Token(Token = "0x6001988")]
			[Address(RVA = "0xD094B4", Offset = "0xD094B4", VA = "0xD094B4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C16C", Offset = "0x66C16C")]
			remove
			{
			}
		}

		[Token(Token = "0x140000A8")]
		public event InteractHapticsEventHandler InteractHapticsUsed
		{
			[Token(Token = "0x6001989")]
			[Address(RVA = "0xD095A4", Offset = "0xD095A4", VA = "0xD095A4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C17C", Offset = "0x66C17C")]
			add
			{
			}
			[Token(Token = "0x600198A")]
			[Address(RVA = "0xD09694", Offset = "0xD09694", VA = "0xD09694")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C18C", Offset = "0x66C18C")]
			remove
			{
			}
		}

		[Token(Token = "0x600198B")]
		[Address(RVA = "0xD09784", Offset = "0xD09784", VA = "0xD09784", Slot = "9")]
		public virtual void OnInteractHapticsNearTouched(InteractHapticsEventArgs e)
		{
		}

		[Token(Token = "0x600198C")]
		[Address(RVA = "0xD097A8", Offset = "0xD097A8", VA = "0xD097A8", Slot = "10")]
		public virtual void OnInteractHapticsTouched(InteractHapticsEventArgs e)
		{
		}

		[Token(Token = "0x600198D")]
		[Address(RVA = "0xD097CC", Offset = "0xD097CC", VA = "0xD097CC", Slot = "11")]
		public virtual void OnInteractHapticsGrabbed(InteractHapticsEventArgs e)
		{
		}

		[Token(Token = "0x600198E")]
		[Address(RVA = "0xD097F0", Offset = "0xD097F0", VA = "0xD097F0", Slot = "12")]
		public virtual void OnInteractHapticsUsed(InteractHapticsEventArgs e)
		{
		}

		[Token(Token = "0x600198F")]
		[Address(RVA = "0xD09814", Offset = "0xD09814", VA = "0xD09814", Slot = "13")]
		public virtual void CancelHaptics(VRTK_ControllerReference controllerReference)
		{
		}

		[Token(Token = "0x6001990")]
		[Address(RVA = "0xD09820", Offset = "0xD09820", VA = "0xD09820", Slot = "14")]
		public virtual void HapticsOnNearTouch(VRTK_ControllerReference controllerReference)
		{
		}

		[Token(Token = "0x6001991")]
		[Address(RVA = "0xD09944", Offset = "0xD09944", VA = "0xD09944", Slot = "15")]
		public virtual void HapticsOnTouch(VRTK_ControllerReference controllerReference)
		{
		}

		[Token(Token = "0x6001992")]
		[Address(RVA = "0xD09A68", Offset = "0xD09A68", VA = "0xD09A68", Slot = "16")]
		public virtual void HapticsOnGrab(VRTK_ControllerReference controllerReference)
		{
		}

		[Token(Token = "0x6001993")]
		[Address(RVA = "0xD09BE0", Offset = "0xD09BE0", VA = "0xD09BE0", Slot = "17")]
		public virtual void HapticsOnUse(VRTK_ControllerReference controllerReference)
		{
		}

		[Token(Token = "0x6001994")]
		[Address(RVA = "0xD09D04", Offset = "0xD09D04", VA = "0xD09D04", Slot = "18")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6001995")]
		[Address(RVA = "0xD09D10", Offset = "0xD09D10", VA = "0xD09D10", Slot = "19")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x6001996")]
		[Address(RVA = "0xD09D1C", Offset = "0xD09D1C", VA = "0xD09D1C", Slot = "4")]
		protected override bool SetupListeners(bool throwError)
		{
			return default(bool);
		}

		[Token(Token = "0x6001997")]
		[Address(RVA = "0xD0A1BC", Offset = "0xD0A1BC", VA = "0xD0A1BC", Slot = "5")]
		protected override void TearDownListeners()
		{
		}

		[Token(Token = "0x6001998")]
		[Address(RVA = "0xD0A4B0", Offset = "0xD0A4B0", VA = "0xD0A4B0", Slot = "20")]
		protected virtual void TriggerHapticPulse(VRTK_ControllerReference controllerReference, float strength, float duration, float interval)
		{
		}

		[Token(Token = "0x6001999")]
		[Address(RVA = "0xD0A4C8", Offset = "0xD0A4C8", VA = "0xD0A4C8", Slot = "21")]
		protected virtual InteractHapticsEventArgs SetEventPayload(VRTK_ControllerReference givenControllerReference)
		{
			return default(InteractHapticsEventArgs);
		}

		[Token(Token = "0x600199A")]
		[Address(RVA = "0xD0A4D0", Offset = "0xD0A4D0", VA = "0xD0A4D0", Slot = "22")]
		protected virtual void NearTouchHaptics(object sender, InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x600199B")]
		[Address(RVA = "0xD0A57C", Offset = "0xD0A57C", VA = "0xD0A57C", Slot = "23")]
		protected virtual void TouchHaptics(object sender, InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x600199C")]
		[Address(RVA = "0xD0A628", Offset = "0xD0A628", VA = "0xD0A628", Slot = "24")]
		protected virtual void GrabHaptics(object sender, InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x600199D")]
		[Address(RVA = "0xD0A6D4", Offset = "0xD0A6D4", VA = "0xD0A6D4", Slot = "25")]
		protected virtual void UseHaptics(object sender, InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x600199E")]
		[Address(RVA = "0xD0A780", Offset = "0xD0A780", VA = "0xD0A780", Slot = "26")]
		protected virtual void CancelOn(GameObject givenObject)
		{
		}

		[Token(Token = "0x600199F")]
		[Address(RVA = "0xD0A828", Offset = "0xD0A828", VA = "0xD0A828", Slot = "27")]
		protected virtual void CancelNearTouchHaptics(object sender, InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x60019A0")]
		[Address(RVA = "0xD0A84C", Offset = "0xD0A84C", VA = "0xD0A84C", Slot = "28")]
		protected virtual void CancelTouchHaptics(object sender, InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x60019A1")]
		[Address(RVA = "0xD0A870", Offset = "0xD0A870", VA = "0xD0A870", Slot = "29")]
		protected virtual void CancelGrabHaptics(object sender, InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x60019A2")]
		[Address(RVA = "0xD0A894", Offset = "0xD0A894", VA = "0xD0A894", Slot = "30")]
		protected virtual void CancelUseHaptics(object sender, InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x60019A3")]
		[Address(RVA = "0xD0A8B8", Offset = "0xD0A8B8", VA = "0xD0A8B8", Slot = "31")]
		protected virtual void UngrabHaptics(object sender, InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x60019A4")]
		[Address(RVA = "0xD0AA10", Offset = "0xD0AA10", VA = "0xD0AA10")]
		public VRTK_InteractHaptics()
		{
		}
	}
	[Token(Token = "0x20003A8")]
	public struct InteractObjectAppearanceEventArgs
	{
		[Token(Token = "0x4001A2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public GameObject affectingObject;

		[Token(Token = "0x4001A2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public GameObject objectToIgnore;

		[Token(Token = "0x4001A30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public VRTK_InteractableObject monitoringObject;

		[Token(Token = "0x4001A31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public VRTK_InteractableObject.InteractionType interactionType;
	}
	[Token(Token = "0x20003A9")]
	public delegate void InteractObjectAppearanceEventHandler(object sender, InteractObjectAppearanceEventArgs e);
	[Token(Token = "0x20003AA")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x63FAD0", Offset = "0x63FAD0")]
	public class VRTK_InteractObjectAppearance : VRTK_InteractableListener
	{
		[Token(Token = "0x20007FC")]
		public enum ValidInteractingObject
		{
			[Token(Token = "0x4002A39")]
			Anything,
			[Token(Token = "0x4002A3A")]
			EitherController,
			[Token(Token = "0x4002A3B")]
			NeitherController,
			[Token(Token = "0x4002A3C")]
			LeftControllerOnly,
			[Token(Token = "0x4002A3D")]
			RightControllerOnly
		}

		[Token(Token = "0x20007FD")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x645DC8", Offset = "0x645DC8")]
		private sealed class <ToggleStateAfterTime>d__56 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002A3E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002A3F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002A40")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float delayTime;

			[Token(Token = "0x4002A41")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public VRTK_InteractObjectAppearance <>4__this;

			[Token(Token = "0x4002A42")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public GameObject objectToToggle;

			[Token(Token = "0x4002A43")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public bool gameObjectShow;

			[Token(Token = "0x4002A44")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
			public bool rendererShow;

			[Token(Token = "0x4002A45")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public VRTK_InteractableObject.InteractionType interactionType;

			[Token(Token = "0x17000331")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60032B8")]
				[Address(RVA = "0xD0F4F0", Offset = "0xD0F4F0", VA = "0xD0F4F0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000332")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60032BA")]
				[Address(RVA = "0xD0F560", Offset = "0xD0F560", VA = "0xD0F560", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60032B5")]
			[Address(RVA = "0xD0E084", Offset = "0xD0E084", VA = "0xD0E084")]
			[DebuggerHidden]
			public <ToggleStateAfterTime>d__56(int <>1__state)
			{
			}

			[Token(Token = "0x60032B6")]
			[Address(RVA = "0xD0F3F4", Offset = "0xD0F3F4", VA = "0xD0F3F4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60032B7")]
			[Address(RVA = "0xD0F3F8", Offset = "0xD0F3F8", VA = "0xD0F3F8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60032B9")]
			[Address(RVA = "0xD0F4F8", Offset = "0xD0F4F8", VA = "0xD0F4F8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001A32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x656E3C", Offset = "0x656E3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x656E3C", Offset = "0x656E3C")]
		public GameObject objectToAffect;

		[Token(Token = "0x4001A33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x656E9C", Offset = "0x656E9C")]
		protected VRTK_InteractableObject objectToMonitor;

		[Token(Token = "0x4001A34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x656EE8", Offset = "0x656EE8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x656EE8", Offset = "0x656EE8")]
		public bool gameObjectActiveByDefault;

		[Token(Token = "0x4001A35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x656F48", Offset = "0x656F48")]
		public bool rendererVisibleByDefault;

		[Token(Token = "0x4001A36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x656F80", Offset = "0x656F80")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x656F80", Offset = "0x656F80")]
		public bool gameObjectActiveOnNearTouch;

		[Token(Token = "0x4001A37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x33")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x656FE0", Offset = "0x656FE0")]
		public bool rendererVisibleOnNearTouch;

		[Token(Token = "0x4001A38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x657018", Offset = "0x657018")]
		public float nearTouchAppearanceDelay;

		[Token(Token = "0x4001A39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x657050", Offset = "0x657050")]
		public float nearUntouchAppearanceDelay;

		[Token(Token = "0x4001A3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x657088", Offset = "0x657088")]
		public ValidInteractingObject validNearTouchInteractingObject;

		[Token(Token = "0x4001A3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6570C0", Offset = "0x6570C0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6570C0", Offset = "0x6570C0")]
		public bool gameObjectActiveOnTouch;

		[Token(Token = "0x4001A3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x657120", Offset = "0x657120")]
		public bool rendererVisibleOnTouch;

		[Token(Token = "0x4001A3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x657158", Offset = "0x657158")]
		public float touchAppearanceDelay;

		[Token(Token = "0x4001A3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x657190", Offset = "0x657190")]
		public float untouchAppearanceDelay;

		[Token(Token = "0x4001A3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6571C8", Offset = "0x6571C8")]
		public ValidInteractingObject validTouchInteractingObject;

		[Token(Token = "0x4001A40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x657200", Offset = "0x657200")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x657200", Offset = "0x657200")]
		public bool gameObjectActiveOnGrab;

		[Token(Token = "0x4001A41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x657260", Offset = "0x657260")]
		public bool rendererVisibleOnGrab;

		[Token(Token = "0x4001A42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x657298", Offset = "0x657298")]
		public float grabAppearanceDelay;

		[Token(Token = "0x4001A43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6572D0", Offset = "0x6572D0")]
		public float ungrabAppearanceDelay;

		[Token(Token = "0x4001A44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x657308", Offset = "0x657308")]
		public ValidInteractingObject validGrabInteractingObject;

		[Token(Token = "0x4001A45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x657340", Offset = "0x657340")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x657340", Offset = "0x657340")]
		public bool gameObjectActiveOnUse;

		[Token(Token = "0x4001A46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6573A0", Offset = "0x6573A0")]
		public bool rendererVisibleOnUse;

		[Token(Token = "0x4001A47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6573D8", Offset = "0x6573D8")]
		public float useAppearanceDelay;

		[Token(Token = "0x4001A48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x657410", Offset = "0x657410")]
		public float unuseAppearanceDelay;

		[Token(Token = "0x4001A49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x657448", Offset = "0x657448")]
		public ValidInteractingObject validUseInteractingObject;

		[Token(Token = "0x4001A4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		protected Dictionary<GameObject, bool> currentRenderStates;

		[Token(Token = "0x4001A4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		protected Dictionary<GameObject, bool> currentGameObjectStates;

		[Token(Token = "0x4001A50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		protected Dictionary<GameObject, Coroutine> affectingRoutines;

		[Token(Token = "0x4001A51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		protected HashSet<GameObject> nearTouchingObjects;

		[Token(Token = "0x4001A52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		protected HashSet<GameObject> touchingObjects;

		[Token(Token = "0x140000A9")]
		public event InteractObjectAppearanceEventHandler GameObjectEnabled
		{
			[Token(Token = "0x60019A9")]
			[Address(RVA = "0xD0C664", Offset = "0xD0C664", VA = "0xD0C664")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C19C", Offset = "0x66C19C")]
			add
			{
			}
			[Token(Token = "0x60019AA")]
			[Address(RVA = "0xD0C750", Offset = "0xD0C750", VA = "0xD0C750")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C1AC", Offset = "0x66C1AC")]
			remove
			{
			}
		}

		[Token(Token = "0x140000AA")]
		public event InteractObjectAppearanceEventHandler GameObjectDisabled
		{
			[Token(Token = "0x60019AB")]
			[Address(RVA = "0xD0C83C", Offset = "0xD0C83C", VA = "0xD0C83C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C1BC", Offset = "0x66C1BC")]
			add
			{
			}
			[Token(Token = "0x60019AC")]
			[Address(RVA = "0xD0C928", Offset = "0xD0C928", VA = "0xD0C928")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C1CC", Offset = "0x66C1CC")]
			remove
			{
			}
		}

		[Token(Token = "0x140000AB")]
		public event InteractObjectAppearanceEventHandler RenderersEnabled
		{
			[Token(Token = "0x60019AD")]
			[Address(RVA = "0xD0CA14", Offset = "0xD0CA14", VA = "0xD0CA14")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C1DC", Offset = "0x66C1DC")]
			add
			{
			}
			[Token(Token = "0x60019AE")]
			[Address(RVA = "0xD0CB00", Offset = "0xD0CB00", VA = "0xD0CB00")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C1EC", Offset = "0x66C1EC")]
			remove
			{
			}
		}

		[Token(Token = "0x140000AC")]
		public event InteractObjectAppearanceEventHandler RenderersDisabled
		{
			[Token(Token = "0x60019AF")]
			[Address(RVA = "0xD0CBEC", Offset = "0xD0CBEC", VA = "0xD0CBEC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C1FC", Offset = "0x66C1FC")]
			add
			{
			}
			[Token(Token = "0x60019B0")]
			[Address(RVA = "0xD0CCD8", Offset = "0xD0CCD8", VA = "0xD0CCD8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C20C", Offset = "0x66C20C")]
			remove
			{
			}
		}

		[Token(Token = "0x60019B1")]
		[Address(RVA = "0xD0CDC4", Offset = "0xD0CDC4", VA = "0xD0CDC4", Slot = "9")]
		public virtual void OnGameObjectEnabled(InteractObjectAppearanceEventArgs e)
		{
		}

		[Token(Token = "0x60019B2")]
		[Address(RVA = "0xD0CE08", Offset = "0xD0CE08", VA = "0xD0CE08", Slot = "10")]
		public virtual void OnGameObjectDisabled(InteractObjectAppearanceEventArgs e)
		{
		}

		[Token(Token = "0x60019B3")]
		[Address(RVA = "0xD0CE4C", Offset = "0xD0CE4C", VA = "0xD0CE4C", Slot = "11")]
		public virtual void OnRenderersEnabled(InteractObjectAppearanceEventArgs e)
		{
		}

		[Token(Token = "0x60019B4")]
		[Address(RVA = "0xD0CE90", Offset = "0xD0CE90", VA = "0xD0CE90", Slot = "12")]
		public virtual void OnRenderersDisabled(InteractObjectAppearanceEventArgs e)
		{
		}

		[Token(Token = "0x60019B5")]
		[Address(RVA = "0xD0CED4", Offset = "0xD0CED4", VA = "0xD0CED4", Slot = "13")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x60019B6")]
		[Address(RVA = "0xD0D038", Offset = "0xD0D038", VA = "0xD0D038", Slot = "14")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x60019B7")]
		[Address(RVA = "0xD0D074", Offset = "0xD0D074", VA = "0xD0D074", Slot = "4")]
		protected override bool SetupListeners(bool throwError)
		{
			return default(bool);
		}

		[Token(Token = "0x60019B8")]
		[Address(RVA = "0xD0D5A8", Offset = "0xD0D5A8", VA = "0xD0D5A8", Slot = "5")]
		protected override void TearDownListeners()
		{
		}

		[Token(Token = "0x60019B9")]
		[Address(RVA = "0xD0D858", Offset = "0xD0D858", VA = "0xD0D858", Slot = "15")]
		protected virtual InteractObjectAppearanceEventArgs SetPayload(GameObject affectingObject, VRTK_InteractableObject.InteractionType interactionType)
		{
			return default(InteractObjectAppearanceEventArgs);
		}

		[Token(Token = "0x60019BA")]
		[Address(RVA = "0xD0D8A4", Offset = "0xD0D8A4", VA = "0xD0D8A4", Slot = "16")]
		protected virtual void RestoreDefaults()
		{
		}

		[Token(Token = "0x60019BB")]
		[Address(RVA = "0xD0DB50", Offset = "0xD0DB50", VA = "0xD0DB50", Slot = "17")]
		protected virtual GameObject ObjectToIgnore()
		{
			return null;
		}

		[Token(Token = "0x60019BC")]
		[Address(RVA = "0xD0DBF0", Offset = "0xD0DBF0", VA = "0xD0DBF0", Slot = "18")]
		protected virtual void EmitRenderEvent(GameObject objectToToggle, bool rendererShow, VRTK_InteractableObject.InteractionType interactionType)
		{
		}

		[Token(Token = "0x60019BD")]
		[Address(RVA = "0xD0DCA0", Offset = "0xD0DCA0", VA = "0xD0DCA0", Slot = "19")]
		protected virtual void EmitGameObjectEvent(GameObject objectToToggle, bool gameObjectShow, VRTK_InteractableObject.InteractionType interactionType)
		{
		}

		[Token(Token = "0x60019BE")]
		[Address(RVA = "0xD0DD50", Offset = "0xD0DD50", VA = "0xD0DD50", Slot = "20")]
		protected virtual void ToggleState(GameObject objectToToggle, bool gameObjectShow, bool rendererShow, VRTK_InteractableObject.InteractionType interactionType)
		{
		}

		[Token(Token = "0x60019BF")]
		[Address(RVA = "0xD0DF74", Offset = "0xD0DF74", VA = "0xD0DF74", Slot = "21")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x66C21C", Offset = "0x66C21C")]
		protected virtual IEnumerator ToggleStateAfterTime(GameObject objectToToggle, bool gameObjectShow, bool rendererShow, float delayTime, VRTK_InteractableObject.InteractionType interactionType)
		{
			return null;
		}

		[Token(Token = "0x60019C0")]
		[Address(RVA = "0xD0E0B0", Offset = "0xD0E0B0", VA = "0xD0E0B0", Slot = "22")]
		protected virtual void CancelRoutines([Optional] GameObject currentAffectingObject)
		{
		}

		[Token(Token = "0x60019C1")]
		[Address(RVA = "0xD0E2D4", Offset = "0xD0E2D4", VA = "0xD0E2D4", Slot = "23")]
		protected virtual GameObject GetActualController(GameObject givenObject)
		{
			return null;
		}

		[Token(Token = "0x60019C2")]
		[Address(RVA = "0xD0E374", Offset = "0xD0E374", VA = "0xD0E374", Slot = "24")]
		protected virtual void InteractableObjectDisabled(object sender, InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x60019C3")]
		[Address(RVA = "0xD0E440", Offset = "0xD0E440", VA = "0xD0E440", Slot = "25")]
		protected virtual bool IsValidInteractingObject(GameObject givenObject, ValidInteractingObject givenInteractingObjectValidType)
		{
			return default(bool);
		}

		[Token(Token = "0x60019C4")]
		[Address(RVA = "0xD0E604", Offset = "0xD0E604", VA = "0xD0E604", Slot = "26")]
		protected virtual void InteractableObjectNearTouched(object sender, InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x60019C5")]
		[Address(RVA = "0xD0E774", Offset = "0xD0E774", VA = "0xD0E774", Slot = "27")]
		protected virtual void InteractableObjectNearUntouched(object sender, InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x60019C6")]
		[Address(RVA = "0xD0E8E4", Offset = "0xD0E8E4", VA = "0xD0E8E4", Slot = "28")]
		protected virtual void InteractableObjectTouched(object sender, InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x60019C7")]
		[Address(RVA = "0xD0EA54", Offset = "0xD0EA54", VA = "0xD0EA54", Slot = "29")]
		protected virtual void InteractableObjectUntouched(object sender, InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x60019C8")]
		[Address(RVA = "0xD0EC0C", Offset = "0xD0EC0C", VA = "0xD0EC0C", Slot = "30")]
		protected virtual void InteractableObjectGrabbed(object sender, InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x60019C9")]
		[Address(RVA = "0xD0ED54", Offset = "0xD0ED54", VA = "0xD0ED54", Slot = "31")]
		protected virtual void InteractableObjectUngrabbed(object sender, InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x60019CA")]
		[Address(RVA = "0xD0EF78", Offset = "0xD0EF78", VA = "0xD0EF78", Slot = "32")]
		protected virtual void InteractableObjectUsed(object sender, InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x60019CB")]
		[Address(RVA = "0xD0F0C0", Offset = "0xD0F0C0", VA = "0xD0F0C0", Slot = "33")]
		protected virtual void InteractableObjectUnused(object sender, InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x60019CC")]
		[Address(RVA = "0xD0F2E4", Offset = "0xD0F2E4", VA = "0xD0F2E4")]
		public VRTK_InteractObjectAppearance()
		{
		}
	}
	[Token(Token = "0x20003AB")]
	public struct InteractObjectHighlighterEventArgs
	{
		[Token(Token = "0x4001A53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VRTK_InteractableObject.InteractionType interactionType;

		[Token(Token = "0x4001A54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public Color highlightColor;

		[Token(Token = "0x4001A55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject affectingObject;

		[Token(Token = "0x4001A56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public VRTK_InteractableObject objectToMonitor;

		[Token(Token = "0x4001A57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject affectedObject;
	}
	[Token(Token = "0x20003AC")]
	public delegate void InteractObjectHighlighterEventHandler(object sender, InteractObjectHighlighterEventArgs e);
	[Token(Token = "0x20003AD")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x63FB08", Offset = "0x63FB08")]
	public class VRTK_InteractObjectHighlighter : VRTK_InteractableListener
	{
		[Token(Token = "0x4001A58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6574C0", Offset = "0x6574C0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6574C0", Offset = "0x6574C0")]
		public Color nearTouchHighlight;

		[Token(Token = "0x4001A59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x657520", Offset = "0x657520")]
		public Color touchHighlight;

		[Token(Token = "0x4001A5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x657558", Offset = "0x657558")]
		public Color grabHighlight;

		[Token(Token = "0x4001A5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x657590", Offset = "0x657590")]
		public Color useHighlight;

		[Token(Token = "0x4001A5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6575C8", Offset = "0x6575C8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6575C8", Offset = "0x6575C8")]
		public VRTK_InteractableObject objectToMonitor;

		[Token(Token = "0x4001A5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x657628", Offset = "0x657628")]
		public GameObject objectToHighlight;

		[Token(Token = "0x4001A5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x657660", Offset = "0x657660")]
		public VRTK_BaseHighlighter objectHighlighter;

		[Token(Token = "0x4001A5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x657698", Offset = "0x657698")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x657698", Offset = "0x657698")]
		[ObsoleteInspector]
		public VRTK_InteractableObject objectToAffect;

		[Token(Token = "0x4001A60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		protected Color currentColour;

		[Token(Token = "0x4001A61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		protected VRTK_BaseHighlighter baseHighlighter;

		[Token(Token = "0x4001A62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		protected bool createBaseHighlighter;

		[Token(Token = "0x4001A63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		protected GameObject currentAffectingObject;

		[Token(Token = "0x140000AD")]
		public event InteractObjectHighlighterEventHandler InteractObjectHighlighterHighlighted
		{
			[Token(Token = "0x60019D1")]
			[Address(RVA = "0xD0F568", Offset = "0xD0F568", VA = "0xD0F568")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C280", Offset = "0x66C280")]
			add
			{
			}
			[Token(Token = "0x60019D2")]
			[Address(RVA = "0xD0F654", Offset = "0xD0F654", VA = "0xD0F654")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C290", Offset = "0x66C290")]
			remove
			{
			}
		}

		[Token(Token = "0x140000AE")]
		public event InteractObjectHighlighterEventHandler InteractObjectHighlighterUnhighlighted
		{
			[Token(Token = "0x60019D3")]
			[Address(RVA = "0xD0F740", Offset = "0xD0F740", VA = "0xD0F740")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C2A0", Offset = "0x66C2A0")]
			add
			{
			}
			[Token(Token = "0x60019D4")]
			[Address(RVA = "0xD0F82C", Offset = "0xD0F82C", VA = "0xD0F82C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C2B0", Offset = "0x66C2B0")]
			remove
			{
			}
		}

		[Token(Token = "0x60019D5")]
		[Address(RVA = "0xD0F918", Offset = "0xD0F918", VA = "0xD0F918", Slot = "9")]
		public virtual void OnInteractObjectHighlighterHighlighted(InteractObjectHighlighterEventArgs e)
		{
		}

		[Token(Token = "0x60019D6")]
		[Address(RVA = "0xD0F964", Offset = "0xD0F964", VA = "0xD0F964", Slot = "10")]
		public virtual void OnInteractObjectHighlighterUnhighlighted(InteractObjectHighlighterEventArgs e)
		{
		}

		[Token(Token = "0x60019D7")]
		[Address(RVA = "0xD0F9B0", Offset = "0xD0F9B0", VA = "0xD0F9B0", Slot = "11")]
		public virtual void ResetHighlighter()
		{
		}

		[Token(Token = "0x60019D8")]
		[Address(RVA = "0xD0FA50", Offset = "0xD0FA50", VA = "0xD0FA50", Slot = "12")]
		public virtual void Highlight(Color highlightColor)
		{
		}

		[Token(Token = "0x60019D9")]
		[Address(RVA = "0xD0FC74", Offset = "0xD0FC74", VA = "0xD0FC74", Slot = "13")]
		public virtual void Unhighlight()
		{
		}

		[Token(Token = "0x60019DA")]
		[Address(RVA = "0xD0FD38", Offset = "0xD0FD38", VA = "0xD0FD38", Slot = "14")]
		public virtual Color GetCurrentHighlightColor()
		{
			return default(Color);
		}

		[Token(Token = "0x60019DB")]
		[Address(RVA = "0xD0FD44", Offset = "0xD0FD44", VA = "0xD0FD44", Slot = "15")]
		public virtual GameObject GetAffectingObject()
		{
			return null;
		}

		[Token(Token = "0x60019DC")]
		[Address(RVA = "0xD0FD4C", Offset = "0xD0FD4C", VA = "0xD0FD4C", Slot = "16")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x60019DD")]
		[Address(RVA = "0xD0FF14", Offset = "0xD0FF14", VA = "0xD0FF14", Slot = "17")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x60019DE")]
		[Address(RVA = "0xD0FF98", Offset = "0xD0FF98", VA = "0xD0FF98", Slot = "4")]
		protected override bool SetupListeners(bool throwError)
		{
			return default(bool);
		}

		[Token(Token = "0x60019DF")]
		[Address(RVA = "0xD102DC", Offset = "0xD102DC", VA = "0xD102DC", Slot = "5")]
		protected override void TearDownListeners()
		{
		}

		[Token(Token = "0x60019E0")]
		[Address(RVA = "0xD105D0", Offset = "0xD105D0", VA = "0xD105D0", Slot = "18")]
		protected virtual InteractObjectHighlighterEventArgs SetEventArgs(VRTK_InteractableObject.InteractionType interactionType, GameObject affectingObject)
		{
			return default(InteractObjectHighlighterEventArgs);
		}

		[Token(Token = "0x60019E1")]
		[Address(RVA = "0xD105FC", Offset = "0xD105FC", VA = "0xD105FC", Slot = "19")]
		protected virtual void NearTouchHighlightObject(object sender, InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x60019E2")]
		[Address(RVA = "0xD10690", Offset = "0xD10690", VA = "0xD10690", Slot = "20")]
		protected virtual void NearTouchUnHighlightObject(object sender, InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x60019E3")]
		[Address(RVA = "0xD107E0", Offset = "0xD107E0", VA = "0xD107E0", Slot = "21")]
		protected virtual void TouchHighlightObject(object sender, InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x60019E4")]
		[Address(RVA = "0xD10874", Offset = "0xD10874", VA = "0xD10874", Slot = "22")]
		protected virtual void TouchUnHighlightObject(object sender, InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x60019E5")]
		[Address(RVA = "0xD10A2C", Offset = "0xD10A2C", VA = "0xD10A2C", Slot = "23")]
		protected virtual void GrabHighlightObject(object sender, InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x60019E6")]
		[Address(RVA = "0xD10B88", Offset = "0xD10B88", VA = "0xD10B88", Slot = "24")]
		protected virtual void GrabUnHighlightObject(object sender, InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x60019E7")]
		[Address(RVA = "0xD10D90", Offset = "0xD10D90", VA = "0xD10D90", Slot = "25")]
		protected virtual void UseHighlightObject(object sender, InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x60019E8")]
		[Address(RVA = "0xD10E24", Offset = "0xD10E24", VA = "0xD10E24", Slot = "26")]
		protected virtual void UseUnHighlightObject(object sender, InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x60019E9")]
		[Address(RVA = "0xD110A0", Offset = "0xD110A0", VA = "0xD110A0", Slot = "27")]
		protected virtual void InitialiseHighlighter(Color highlightColor)
		{
		}

		[Token(Token = "0x60019EA")]
		[Address(RVA = "0xD11288", Offset = "0xD11288", VA = "0xD11288", Slot = "28")]
		protected virtual VRTK_BaseHighlighter GetValidHighlighter()
		{
			return null;
		}

		[Token(Token = "0x60019EB")]
		[Address(RVA = "0xD11318", Offset = "0xD11318", VA = "0xD11318")]
		public VRTK_InteractObjectHighlighter()
		{
		}
	}
	[Token(Token = "0x20003AE")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x63FB40", Offset = "0x63FB40")]
	public class VRTK_ObjectTouchAutoInteract : VRTK_InteractableListener
	{
		[Token(Token = "0x20007FE")]
		public enum AutoInteractions
		{
			[Token(Token = "0x4002A47")]
			Never,
			[Token(Token = "0x4002A48")]
			NoButtonHeld,
			[Token(Token = "0x4002A49")]
			ButtonHeld
		}

		[Token(Token = "0x4001A66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x657728", Offset = "0x657728")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x657728", Offset = "0x657728")]
		public AutoInteractions grabOnTouchWhen;

		[Token(Token = "0x4001A67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x657788", Offset = "0x657788")]
		public float regrabDelay;

		[Token(Token = "0x4001A68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6577C0", Offset = "0x6577C0")]
		public bool continuousGrabCheck;

		[Token(Token = "0x4001A69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6577F8", Offset = "0x6577F8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6577F8", Offset = "0x6577F8")]
		public AutoInteractions useOnTouchWhen;

		[Token(Token = "0x4001A6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x657858", Offset = "0x657858")]
		public float reuseDelay;

		[Token(Token = "0x4001A6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x657890", Offset = "0x657890")]
		public bool continuousUseCheck;

		[Token(Token = "0x4001A6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6578C8", Offset = "0x6578C8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6578C8", Offset = "0x6578C8")]
		public VRTK_InteractableObject interactableObject;

		[Token(Token = "0x4001A6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected float regrabTimer;

		[Token(Token = "0x4001A6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		protected float reuseTimer;

		[Token(Token = "0x4001A6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected List<GameObject> touchers;

		[Token(Token = "0x60019EC")]
		[Address(RVA = "0xA87328", Offset = "0xA87328", VA = "0xA87328", Slot = "9")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x60019ED")]
		[Address(RVA = "0xA8739C", Offset = "0xA8739C", VA = "0xA8739C", Slot = "10")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x60019EE")]
		[Address(RVA = "0xA873A8", Offset = "0xA873A8", VA = "0xA873A8", Slot = "11")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x60019EF")]
		[Address(RVA = "0xA87500", Offset = "0xA87500", VA = "0xA87500", Slot = "4")]
		protected override bool SetupListeners(bool throwError)
		{
			return default(bool);
		}

		[Token(Token = "0x60019F0")]
		[Address(RVA = "0xA87828", Offset = "0xA87828", VA = "0xA87828", Slot = "5")]
		protected override void TearDownListeners()
		{
		}

		[Token(Token = "0x60019F1")]
		[Address(RVA = "0xA879AC", Offset = "0xA879AC", VA = "0xA879AC", Slot = "12")]
		protected virtual void InteractableObjectTouched(object sender, InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x60019F2")]
		[Address(RVA = "0xA87A10", Offset = "0xA87A10", VA = "0xA87A10", Slot = "13")]
		protected virtual void InteractableObjectUntouched(object sender, InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x60019F3")]
		[Address(RVA = "0xA87A28", Offset = "0xA87A28", VA = "0xA87A28", Slot = "14")]
		protected virtual void InteractableObjectUngrabbed(object sender, InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x60019F4")]
		[Address(RVA = "0xA87A60", Offset = "0xA87A60", VA = "0xA87A60", Slot = "15")]
		protected virtual void InteractableObjectUnused(object sender, InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x60019F5")]
		[Address(RVA = "0xA87A98", Offset = "0xA87A98", VA = "0xA87A98", Slot = "16")]
		protected virtual void ManageTouchers(GameObject interactingObject, bool add)
		{
		}

		[Token(Token = "0x60019F6")]
		[Address(RVA = "0xA87B38", Offset = "0xA87B38", VA = "0xA87B38", Slot = "17")]
		protected virtual void CheckGrab(GameObject interactingObject)
		{
		}

		[Token(Token = "0x60019F7")]
		[Address(RVA = "0xA87C64", Offset = "0xA87C64", VA = "0xA87C64", Slot = "18")]
		protected virtual void CheckUse(GameObject interactingObject)
		{
		}

		[Token(Token = "0x60019F8")]
		[Address(RVA = "0xA87E10", Offset = "0xA87E10", VA = "0xA87E10")]
		public VRTK_ObjectTouchAutoInteract()
		{
		}
	}
	[Token(Token = "0x20003AF")]
	public struct ControllerInteractionEventArgs
	{
		[Token(Token = "0x4001A70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VRTK_ControllerReference controllerReference;

		[Token(Token = "0x4001A71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float buttonPressure;

		[Token(Token = "0x4001A72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Vector2 touchpadAxis;

		[Token(Token = "0x4001A73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float touchpadAngle;

		[Token(Token = "0x4001A74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector2 touchpadTwoAxis;

		[Token(Token = "0x4001A75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float touchpadTwoAngle;
	}
	[Token(Token = "0x20003B0")]
	public delegate void ControllerInteractionEventHandler(object sender, ControllerInteractionEventArgs e);
	[Token(Token = "0x20003B1")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x63FB78", Offset = "0x63FB78")]
	public class VRTK_ControllerEvents : MonoBehaviour
	{
		[Token(Token = "0x20007FF")]
		public enum ButtonAlias
		{
			[Token(Token = "0x4002A4B")]
			Undefined,
			[Token(Token = "0x4002A4C")]
			TriggerHairline,
			[Token(Token = "0x4002A4D")]
			TriggerTouch,
			[Token(Token = "0x4002A4E")]
			TriggerPress,
			[Token(Token = "0x4002A4F")]
			TriggerClick,
			[Token(Token = "0x4002A50")]
			GripHairline,
			[Token(Token = "0x4002A51")]
			GripTouch,
			[Token(Token = "0x4002A52")]
			GripPress,
			[Token(Token = "0x4002A53")]
			GripClick,
			[Token(Token = "0x4002A54")]
			TouchpadTouch,
			[Token(Token = "0x4002A55")]
			TouchpadPress,
			[Token(Token = "0x4002A56")]
			TouchpadTwoTouch,
			[Token(Token = "0x4002A57")]
			TouchpadTwoPress,
			[Token(Token = "0x4002A58")]
			ButtonOneTouch,
			[Token(Token = "0x4002A59")]
			ButtonOnePress,
			[Token(Token = "0x4002A5A")]
			ButtonTwoTouch,
			[Token(Token = "0x4002A5B")]
			ButtonTwoPress,
			[Token(Token = "0x4002A5C")]
			StartMenuPress,
			[Token(Token = "0x4002A5D")]
			TouchpadSense,
			[Token(Token = "0x4002A5E")]
			TriggerSense,
			[Token(Token = "0x4002A5F")]
			MiddleFingerSense,
			[Token(Token = "0x4002A60")]
			RingFingerSense,
			[Token(Token = "0x4002A61")]
			PinkyFingerSense,
			[Token(Token = "0x4002A62")]
			GripSense,
			[Token(Token = "0x4002A63")]
			GripSensePress
		}

		[Token(Token = "0x2000800")]
		public enum Vector2AxisAlias
		{
			[Token(Token = "0x4002A65")]
			Undefined,
			[Token(Token = "0x4002A66")]
			Touchpad,
			[Token(Token = "0x4002A67")]
			TouchpadTwo
		}

		[Token(Token = "0x2000801")]
		public enum AxisType
		{
			[Token(Token = "0x4002A69")]
			Digital,
			[Token(Token = "0x4002A6A")]
			Axis,
			[Token(Token = "0x4002A6B")]
			SenseAxis
		}

		[Token(Token = "0x4001A76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x657928", Offset = "0x657928")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x657928", Offset = "0x657928")]
		public int axisFidelity;

		[Token(Token = "0x4001A77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x657988", Offset = "0x657988")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x657988", Offset = "0x657988")]
		public float senseAxisForceZeroThreshold;

		[Token(Token = "0x4001A78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6579DC", Offset = "0x6579DC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6579DC", Offset = "0x6579DC")]
		public float senseAxisPressThreshold;

		[Token(Token = "0x4001A79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x657A30", Offset = "0x657A30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x657A30", Offset = "0x657A30")]
		public float triggerClickThreshold;

		[Token(Token = "0x4001A7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x657A90", Offset = "0x657A90")]
		public float triggerForceZeroThreshold;

		[Token(Token = "0x4001A7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x657AC8", Offset = "0x657AC8")]
		public bool triggerAxisZeroOnUntouch;

		[Token(Token = "0x4001A7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x657B00", Offset = "0x657B00")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x657B00", Offset = "0x657B00")]
		public float gripClickThreshold;

		[Token(Token = "0x4001A7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x657B60", Offset = "0x657B60")]
		public float gripForceZeroThreshold;

		[Token(Token = "0x4001A7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x657B98", Offset = "0x657B98")]
		public bool gripAxisZeroOnUntouch;

		[Token(Token = "0x4001A7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		[HideInInspector]
		public bool triggerPressed;

		[Token(Token = "0x4001A80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
		[HideInInspector]
		public bool triggerTouched;

		[Token(Token = "0x4001A81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3B")]
		[HideInInspector]
		public bool triggerHairlinePressed;

		[Token(Token = "0x4001A82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[HideInInspector]
		public bool triggerClicked;

		[Token(Token = "0x4001A83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
		[HideInInspector]
		public bool triggerAxisChanged;

		[Token(Token = "0x4001A84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3E")]
		[HideInInspector]
		public bool triggerSenseAxisChanged;

		[Token(Token = "0x4001A85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3F")]
		[HideInInspector]
		public bool gripPressed;

		[Token(Token = "0x4001A86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		public bool gripTouched;

		[Token(Token = "0x4001A87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		[HideInInspector]
		public bool gripHairlinePressed;

		[Token(Token = "0x4001A88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x42")]
		[HideInInspector]
		public bool gripClicked;

		[Token(Token = "0x4001A89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x43")]
		[HideInInspector]
		public bool gripAxisChanged;

		[Token(Token = "0x4001A8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[HideInInspector]
		public bool touchpadPressed;

		[Token(Token = "0x4001A8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
		[HideInInspector]
		public bool touchpadTouched;

		[Token(Token = "0x4001A8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x46")]
		[HideInInspector]
		public bool touchpadAxisChanged;

		[Token(Token = "0x4001A8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x47")]
		[HideInInspector]
		public bool touchpadSenseAxisChanged;

		[Token(Token = "0x4001A8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[HideInInspector]
		public bool touchpadTwoTouched;

		[Token(Token = "0x4001A8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		[HideInInspector]
		public bool touchpadTwoPressed;

		[Token(Token = "0x4001A90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
		[HideInInspector]
		public bool touchpadTwoAxisChanged;

		[Token(Token = "0x4001A91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4B")]
		[HideInInspector]
		public bool buttonOnePressed;

		[Token(Token = "0x4001A92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[HideInInspector]
		public bool buttonOneTouched;

		[Token(Token = "0x4001A93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
		[HideInInspector]
		public bool buttonTwoPressed;

		[Token(Token = "0x4001A94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4E")]
		[HideInInspector]
		public bool buttonTwoTouched;

		[Token(Token = "0x4001A95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4F")]
		[HideInInspector]
		public bool startMenuPressed;

		[Token(Token = "0x4001A96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[HideInInspector]
		public bool middleFingerSenseAxisChanged;

		[Token(Token = "0x4001A97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		[HideInInspector]
		public bool ringFingerSenseAxisChanged;

		[Token(Token = "0x4001A98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x52")]
		[HideInInspector]
		public bool pinkyFingerSenseAxisChanged;

		[Token(Token = "0x4001A99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x53")]
		[HideInInspector]
		public bool gripSenseAxisChanged;

		[Token(Token = "0x4001A9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[HideInInspector]
		public bool gripSensePressed;

		[Token(Token = "0x4001A9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
		[HideInInspector]
		public bool controllerVisible;

		[Token(Token = "0x4001AD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		protected Vector2 touchpadAxis;

		[Token(Token = "0x4001AD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		protected Vector2 touchpadTwoAxis;

		[Token(Token = "0x4001AD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		protected Vector2 triggerAxis;

		[Token(Token = "0x4001AD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		protected Vector2 gripAxis;

		[Token(Token = "0x4001AD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
		protected float touchpadSenseAxis;

		[Token(Token = "0x4001AD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21C")]
		protected float triggerSenseAxis;

		[Token(Token = "0x4001AD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
		protected float middleFingerSenseAxis;

		[Token(Token = "0x4001AD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x224")]
		protected float ringFingerSenseAxis;

		[Token(Token = "0x4001AD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
		protected float pinkyFingerSenseAxis;

		[Token(Token = "0x4001AD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22C")]
		protected float gripSenseAxis;

		[Token(Token = "0x4001ADA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
		protected float hairTriggerDelta;

		[Token(Token = "0x4001ADB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x234")]
		protected float hairGripDelta;

		[Token(Token = "0x4001ADC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
		protected VRTK_TrackedController trackedController;

		[Token(Token = "0x140000AF")]
		public event ControllerInteractionEventHandler TriggerPressed
		{
			[Token(Token = "0x60019FD")]
			[Address(RVA = "0xB0859C", Offset = "0xB0859C", VA = "0xB0859C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C2C0", Offset = "0x66C2C0")]
			add
			{
			}
			[Token(Token = "0x60019FE")]
			[Address(RVA = "0xB08688", Offset = "0xB08688", VA = "0xB08688")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C2D0", Offset = "0x66C2D0")]
			remove
			{
			}
		}

		[Token(Token = "0x140000B0")]
		public event ControllerInteractionEventHandler TriggerReleased
		{
			[Token(Token = "0x60019FF")]
			[Address(RVA = "0xB08774", Offset = "0xB08774", VA = "0xB08774")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C2E0", Offset = "0x66C2E0")]
			add
			{
			}
			[Token(Token = "0x6001A00")]
			[Address(RVA = "0xB08860", Offset = "0xB08860", VA = "0xB08860")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C2F0", Offset = "0x66C2F0")]
			remove
			{
			}
		}

		[Token(Token = "0x140000B1")]
		public event ControllerInteractionEventHandler TriggerTouchStart
		{
			[Token(Token = "0x6001A01")]
			[Address(RVA = "0xB0894C", Offset = "0xB0894C", VA = "0xB0894C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C300", Offset = "0x66C300")]
			add
			{
			}
			[Token(Token = "0x6001A02")]
			[Address(RVA = "0xB08A38", Offset = "0xB08A38", VA = "0xB08A38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C310", Offset = "0x66C310")]
			remove
			{
			}
		}

		[Token(Token = "0x140000B2")]
		public event ControllerInteractionEventHandler TriggerTouchEnd
		{
			[Token(Token = "0x6001A03")]
			[Address(RVA = "0xB08B24", Offset = "0xB08B24", VA = "0xB08B24")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C320", Offset = "0x66C320")]
			add
			{
			}
			[Token(Token = "0x6001A04")]
			[Address(RVA = "0xB08C10", Offset = "0xB08C10", VA = "0xB08C10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C330", Offset = "0x66C330")]
			remove
			{
			}
		}

		[Token(Token = "0x140000B3")]
		public event ControllerInteractionEventHandler TriggerHairlineStart
		{
			[Token(Token = "0x6001A05")]
			[Address(RVA = "0xB08CFC", Offset = "0xB08CFC", VA = "0xB08CFC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C340", Offset = "0x66C340")]
			add
			{
			}
			[Token(Token = "0x6001A06")]
			[Address(RVA = "0xB08DE8", Offset = "0xB08DE8", VA = "0xB08DE8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C350", Offset = "0x66C350")]
			remove
			{
			}
		}

		[Token(Token = "0x140000B4")]
		public event ControllerInteractionEventHandler TriggerHairlineEnd
		{
			[Token(Token = "0x6001A07")]
			[Address(RVA = "0xB08ED4", Offset = "0xB08ED4", VA = "0xB08ED4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C360", Offset = "0x66C360")]
			add
			{
			}
			[Token(Token = "0x6001A08")]
			[Address(RVA = "0xB08FC0", Offset = "0xB08FC0", VA = "0xB08FC0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C370", Offset = "0x66C370")]
			remove
			{
			}
		}

		[Token(Token = "0x140000B5")]
		public event ControllerInteractionEventHandler TriggerClicked
		{
			[Token(Token = "0x6001A09")]
			[Address(RVA = "0xB090AC", Offset = "0xB090AC", VA = "0xB090AC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C380", Offset = "0x66C380")]
			add
			{
			}
			[Token(Token = "0x6001A0A")]
			[Address(RVA = "0xB09198", Offset = "0xB09198", VA = "0xB09198")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C390", Offset = "0x66C390")]
			remove
			{
			}
		}

		[Token(Token = "0x140000B6")]
		public event ControllerInteractionEventHandler TriggerUnclicked
		{
			[Token(Token = "0x6001A0B")]
			[Address(RVA = "0xB09284", Offset = "0xB09284", VA = "0xB09284")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C3A0", Offset = "0x66C3A0")]
			add
			{
			}
			[Token(Token = "0x6001A0C")]
			[Address(RVA = "0xB09370", Offset = "0xB09370", VA = "0xB09370")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C3B0", Offset = "0x66C3B0")]
			remove
			{
			}
		}

		[Token(Token = "0x140000B7")]
		public event ControllerInteractionEventHandler TriggerAxisChanged
		{
			[Token(Token = "0x6001A0D")]
			[Address(RVA = "0xB0945C", Offset = "0xB0945C", VA = "0xB0945C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C3C0", Offset = "0x66C3C0")]
			add
			{
			}
			[Token(Token = "0x6001A0E")]
			[Address(RVA = "0xB09548", Offset = "0xB09548", VA = "0xB09548")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C3D0", Offset = "0x66C3D0")]
			remove
			{
			}
		}

		[Token(Token = "0x140000B8")]
		public event ControllerInteractionEventHandler TriggerSenseAxisChanged
		{
			[Token(Token = "0x6001A0F")]
			[Address(RVA = "0xB09634", Offset = "0xB09634", VA = "0xB09634")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C3E0", Offset = "0x66C3E0")]
			add
			{
			}
			[Token(Token = "0x6001A10")]
			[Address(RVA = "0xB09720", Offset = "0xB09720", VA = "0xB09720")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C3F0", Offset = "0x66C3F0")]
			remove
			{
			}
		}

		[Token(Token = "0x140000B9")]
		public event ControllerInteractionEventHandler GripPressed
		{
			[Token(Token = "0x6001A11")]
			[Address(RVA = "0xB0980C", Offset = "0xB0980C", VA = "0xB0980C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C400", Offset = "0x66C400")]
			add
			{
			}
			[Token(Token = "0x6001A12")]
			[Address(RVA = "0xB098F8", Offset = "0xB098F8", VA = "0xB098F8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C410", Offset = "0x66C410")]
			remove
			{
			}
		}

		[Token(Token = "0x140000BA")]
		public event ControllerInteractionEventHandler GripReleased
		{
			[Token(Token = "0x6001A13")]
			[Address(RVA = "0xB099E4", Offset = "0xB099E4", VA = "0xB099E4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C420", Offset = "0x66C420")]
			add
			{
			}
			[Token(Token = "0x6001A14")]
			[Address(RVA = "0xB09AD0", Offset = "0xB09AD0", VA = "0xB09AD0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C430", Offset = "0x66C430")]
			remove
			{
			}
		}

		[Token(Token = "0x140000BB")]
		public event ControllerInteractionEventHandler GripTouchStart
		{
			[Token(Token = "0x6001A15")]
			[Address(RVA = "0xB09BBC", Offset = "0xB09BBC", VA = "0xB09BBC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C440", Offset = "0x66C440")]
			add
			{
			}
			[Token(Token = "0x6001A16")]
			[Address(RVA = "0xB09CA8", Offset = "0xB09CA8", VA = "0xB09CA8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C450", Offset = "0x66C450")]
			remove
			{
			}
		}

		[Token(Token = "0x140000BC")]
		public event ControllerInteractionEventHandler GripTouchEnd
		{
			[Token(Token = "0x6001A17")]
			[Address(RVA = "0xB09D94", Offset = "0xB09D94", VA = "0xB09D94")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C460", Offset = "0x66C460")]
			add
			{
			}
			[Token(Token = "0x6001A18")]
			[Address(RVA = "0xB09E80", Offset = "0xB09E80", VA = "0xB09E80")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C470", Offset = "0x66C470")]
			remove
			{
			}
		}

		[Token(Token = "0x140000BD")]
		public event ControllerInteractionEventHandler GripHairlineStart
		{
			[Token(Token = "0x6001A19")]
			[Address(RVA = "0xB09F6C", Offset = "0xB09F6C", VA = "0xB09F6C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C480", Offset = "0x66C480")]
			add
			{
			}
			[Token(Token = "0x6001A1A")]
			[Address(RVA = "0xB0A058", Offset = "0xB0A058", VA = "0xB0A058")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C490", Offset = "0x66C490")]
			remove
			{
			}
		}

		[Token(Token = "0x140000BE")]
		public event ControllerInteractionEventHandler GripHairlineEnd
		{
			[Token(Token = "0x6001A1B")]
			[Address(RVA = "0xB0A144", Offset = "0xB0A144", VA = "0xB0A144")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C4A0", Offset = "0x66C4A0")]
			add
			{
			}
			[Token(Token = "0x6001A1C")]
			[Address(RVA = "0xB0A230", Offset = "0xB0A230", VA = "0xB0A230")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C4B0", Offset = "0x66C4B0")]
			remove
			{
			}
		}

		[Token(Token = "0x140000BF")]
		public event ControllerInteractionEventHandler GripClicked
		{
			[Token(Token = "0x6001A1D")]
			[Address(RVA = "0xB0A31C", Offset = "0xB0A31C", VA = "0xB0A31C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C4C0", Offset = "0x66C4C0")]
			add
			{
			}
			[Token(Token = "0x6001A1E")]
			[Address(RVA = "0xB0A408", Offset = "0xB0A408", VA = "0xB0A408")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C4D0", Offset = "0x66C4D0")]
			remove
			{
			}
		}

		[Token(Token = "0x140000C0")]
		public event ControllerInteractionEventHandler GripUnclicked
		{
			[Token(Token = "0x6001A1F")]
			[Address(RVA = "0xB0A4F4", Offset = "0xB0A4F4", VA = "0xB0A4F4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C4E0", Offset = "0x66C4E0")]
			add
			{
			}
			[Token(Token = "0x6001A20")]
			[Address(RVA = "0xB0A5E0", Offset = "0xB0A5E0", VA = "0xB0A5E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C4F0", Offset = "0x66C4F0")]
			remove
			{
			}
		}

		[Token(Token = "0x140000C1")]
		public event ControllerInteractionEventHandler GripAxisChanged
		{
			[Token(Token = "0x6001A21")]
			[Address(RVA = "0xB0A6CC", Offset = "0xB0A6CC", VA = "0xB0A6CC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C500", Offset = "0x66C500")]
			add
			{
			}
			[Token(Token = "0x6001A22")]
			[Address(RVA = "0xB0A7B8", Offset = "0xB0A7B8", VA = "0xB0A7B8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C510", Offset = "0x66C510")]
			remove
			{
			}
		}

		[Token(Token = "0x140000C2")]
		public event ControllerInteractionEventHandler TouchpadPressed
		{
			[Token(Token = "0x6001A23")]
			[Address(RVA = "0xB0A8A4", Offset = "0xB0A8A4", VA = "0xB0A8A4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C520", Offset = "0x66C520")]
			add
			{
			}
			[Token(Token = "0x6001A24")]
			[Address(RVA = "0xB0A990", Offset = "0xB0A990", VA = "0xB0A990")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C530", Offset = "0x66C530")]
			remove
			{
			}
		}

		[Token(Token = "0x140000C3")]
		public event ControllerInteractionEventHandler TouchpadReleased
		{
			[Token(Token = "0x6001A25")]
			[Address(RVA = "0xB0AA7C", Offset = "0xB0AA7C", VA = "0xB0AA7C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C540", Offset = "0x66C540")]
			add
			{
			}
			[Token(Token = "0x6001A26")]
			[Address(RVA = "0xB0AB68", Offset = "0xB0AB68", VA = "0xB0AB68")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C550", Offset = "0x66C550")]
			remove
			{
			}
		}

		[Token(Token = "0x140000C4")]
		public event ControllerInteractionEventHandler TouchpadTouchStart
		{
			[Token(Token = "0x6001A27")]
			[Address(RVA = "0xB0AC54", Offset = "0xB0AC54", VA = "0xB0AC54")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C560", Offset = "0x66C560")]
			add
			{
			}
			[Token(Token = "0x6001A28")]
			[Address(RVA = "0xB0AD44", Offset = "0xB0AD44", VA = "0xB0AD44")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C570", Offset = "0x66C570")]
			remove
			{
			}
		}

		[Token(Token = "0x140000C5")]
		public event ControllerInteractionEventHandler TouchpadTouchEnd
		{
			[Token(Token = "0x6001A29")]
			[Address(RVA = "0xB0AE34", Offset = "0xB0AE34", VA = "0xB0AE34")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C580", Offset = "0x66C580")]
			add
			{
			}
			[Token(Token = "0x6001A2A")]
			[Address(RVA = "0xB0AF24", Offset = "0xB0AF24", VA = "0xB0AF24")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C590", Offset = "0x66C590")]
			remove
			{
			}
		}

		[Token(Token = "0x140000C6")]
		public event ControllerInteractionEventHandler TouchpadAxisChanged
		{
			[Token(Token = "0x6001A2B")]
			[Address(RVA = "0xB0B014", Offset = "0xB0B014", VA = "0xB0B014")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C5A0", Offset = "0x66C5A0")]
			add
			{
			}
			[Token(Token = "0x6001A2C")]
			[Address(RVA = "0xB0B104", Offset = "0xB0B104", VA = "0xB0B104")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C5B0", Offset = "0x66C5B0")]
			remove
			{
			}
		}

		[Token(Token = "0x140000C7")]
		public event ControllerInteractionEventHandler TouchpadSenseAxisChanged
		{
			[Token(Token = "0x6001A2D")]
			[Address(RVA = "0xB0B1F4", Offset = "0xB0B1F4", VA = "0xB0B1F4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C5C0", Offset = "0x66C5C0")]
			add
			{
			}
			[Token(Token = "0x6001A2E")]
			[Address(RVA = "0xB0B2E4", Offset = "0xB0B2E4", VA = "0xB0B2E4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C5D0", Offset = "0x66C5D0")]
			remove
			{
			}
		}

		[Token(Token = "0x140000C8")]
		public event ControllerInteractionEventHandler TouchpadTwoPressed
		{
			[Token(Token = "0x6001A2F")]
			[Address(RVA = "0xB0B3D4", Offset = "0xB0B3D4", VA = "0xB0B3D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C5E0", Offset = "0x66C5E0")]
			add
			{
			}
			[Token(Token = "0x6001A30")]
			[Address(RVA = "0xB0B4C4", Offset = "0xB0B4C4", VA = "0xB0B4C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C5F0", Offset = "0x66C5F0")]
			remove
			{
			}
		}

		[Token(Token = "0x140000C9")]
		public event ControllerInteractionEventHandler TouchpadTwoReleased
		{
			[Token(Token = "0x6001A31")]
			[Address(RVA = "0xB0B5B4", Offset = "0xB0B5B4", VA = "0xB0B5B4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C600", Offset = "0x66C600")]
			add
			{
			}
			[Token(Token = "0x6001A32")]
			[Address(RVA = "0xB0B6A4", Offset = "0xB0B6A4", VA = "0xB0B6A4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C610", Offset = "0x66C610")]
			remove
			{
			}
		}

		[Token(Token = "0x140000CA")]
		public event ControllerInteractionEventHandler TouchpadTwoTouchStart
		{
			[Token(Token = "0x6001A33")]
			[Address(RVA = "0xB0B794", Offset = "0xB0B794", VA = "0xB0B794")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C620", Offset = "0x66C620")]
			add
			{
			}
			[Token(Token = "0x6001A34")]
			[Address(RVA = "0xB0B884", Offset = "0xB0B884", VA = "0xB0B884")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C630", Offset = "0x66C630")]
			remove
			{
			}
		}

		[Token(Token = "0x140000CB")]
		public event ControllerInteractionEventHandler TouchpadTwoTouchEnd
		{
			[Token(Token = "0x6001A35")]
			[Address(RVA = "0xB0B974", Offset = "0xB0B974", VA = "0xB0B974")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C640", Offset = "0x66C640")]
			add
			{
			}
			[Token(Token = "0x6001A36")]
			[Address(RVA = "0xB0BA64", Offset = "0xB0BA64", VA = "0xB0BA64")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C650", Offset = "0x66C650")]
			remove
			{
			}
		}

		[Token(Token = "0x140000CC")]
		public event ControllerInteractionEventHandler TouchpadTwoAxisChanged
		{
			[Token(Token = "0x6001A37")]
			[Address(RVA = "0xB0BB54", Offset = "0xB0BB54", VA = "0xB0BB54")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C660", Offset = "0x66C660")]
			add
			{
			}
			[Token(Token = "0x6001A38")]
			[Address(RVA = "0xB0BC44", Offset = "0xB0BC44", VA = "0xB0BC44")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C670", Offset = "0x66C670")]
			remove
			{
			}
		}

		[Token(Token = "0x140000CD")]
		public event ControllerInteractionEventHandler ButtonOneTouchStart
		{
			[Token(Token = "0x6001A39")]
			[Address(RVA = "0xB0BD34", Offset = "0xB0BD34", VA = "0xB0BD34")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C680", Offset = "0x66C680")]
			add
			{
			}
			[Token(Token = "0x6001A3A")]
			[Address(RVA = "0xB0BE24", Offset = "0xB0BE24", VA = "0xB0BE24")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C690", Offset = "0x66C690")]
			remove
			{
			}
		}

		[Token(Token = "0x140000CE")]
		public event ControllerInteractionEventHandler ButtonOneTouchEnd
		{
			[Token(Token = "0x6001A3B")]
			[Address(RVA = "0xB0BF14", Offset = "0xB0BF14", VA = "0xB0BF14")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C6A0", Offset = "0x66C6A0")]
			add
			{
			}
			[Token(Token = "0x6001A3C")]
			[Address(RVA = "0xB0C004", Offset = "0xB0C004", VA = "0xB0C004")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C6B0", Offset = "0x66C6B0")]
			remove
			{
			}
		}

		[Token(Token = "0x140000CF")]
		public event ControllerInteractionEventHandler ButtonOnePressed
		{
			[Token(Token = "0x6001A3D")]
			[Address(RVA = "0xB0C0F4", Offset = "0xB0C0F4", VA = "0xB0C0F4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C6C0", Offset = "0x66C6C0")]
			add
			{
			}
			[Token(Token = "0x6001A3E")]
			[Address(RVA = "0xB0C1E4", Offset = "0xB0C1E4", VA = "0xB0C1E4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C6D0", Offset = "0x66C6D0")]
			remove
			{
			}
		}

		[Token(Token = "0x140000D0")]
		public event ControllerInteractionEventHandler ButtonOneReleased
		{
			[Token(Token = "0x6001A3F")]
			[Address(RVA = "0xB0C2D4", Offset = "0xB0C2D4", VA = "0xB0C2D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C6E0", Offset = "0x66C6E0")]
			add
			{
			}
			[Token(Token = "0x6001A40")]
			[Address(RVA = "0xB0C3C4", Offset = "0xB0C3C4", VA = "0xB0C3C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C6F0", Offset = "0x66C6F0")]
			remove
			{
			}
		}

		[Token(Token = "0x140000D1")]
		public event ControllerInteractionEventHandler ButtonTwoTouchStart
		{
			[Token(Token = "0x6001A41")]
			[Address(RVA = "0xB0C4B4", Offset = "0xB0C4B4", VA = "0xB0C4B4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C700", Offset = "0x66C700")]
			add
			{
			}
			[Token(Token = "0x6001A42")]
			[Address(RVA = "0xB0C5A4", Offset = "0xB0C5A4", VA = "0xB0C5A4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C710", Offset = "0x66C710")]
			remove
			{
			}
		}

		[Token(Token = "0x140000D2")]
		public event ControllerInteractionEventHandler ButtonTwoTouchEnd
		{
			[Token(Token = "0x6001A43")]
			[Address(RVA = "0xB0C694", Offset = "0xB0C694", VA = "0xB0C694")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C720", Offset = "0x66C720")]
			add
			{
			}
			[Token(Token = "0x6001A44")]
			[Address(RVA = "0xB0C784", Offset = "0xB0C784", VA = "0xB0C784")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C730", Offset = "0x66C730")]
			remove
			{
			}
		}

		[Token(Token = "0x140000D3")]
		public event ControllerInteractionEventHandler ButtonTwoPressed
		{
			[Token(Token = "0x6001A45")]
			[Address(RVA = "0xB0C874", Offset = "0xB0C874", VA = "0xB0C874")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C740", Offset = "0x66C740")]
			add
			{
			}
			[Token(Token = "0x6001A46")]
			[Address(RVA = "0xB0C964", Offset = "0xB0C964", VA = "0xB0C964")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C750", Offset = "0x66C750")]
			remove
			{
			}
		}

		[Token(Token = "0x140000D4")]
		public event ControllerInteractionEventHandler ButtonTwoReleased
		{
			[Token(Token = "0x6001A47")]
			[Address(RVA = "0xB0CA54", Offset = "0xB0CA54", VA = "0xB0CA54")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C760", Offset = "0x66C760")]
			add
			{
			}
			[Token(Token = "0x6001A48")]
			[Address(RVA = "0xB0CB44", Offset = "0xB0CB44", VA = "0xB0CB44")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C770", Offset = "0x66C770")]
			remove
			{
			}
		}

		[Token(Token = "0x140000D5")]
		public event ControllerInteractionEventHandler StartMenuPressed
		{
			[Token(Token = "0x6001A49")]
			[Address(RVA = "0xB0CC34", Offset = "0xB0CC34", VA = "0xB0CC34")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C780", Offset = "0x66C780")]
			add
			{
			}
			[Token(Token = "0x6001A4A")]
			[Address(RVA = "0xB0CD24", Offset = "0xB0CD24", VA = "0xB0CD24")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C790", Offset = "0x66C790")]
			remove
			{
			}
		}

		[Token(Token = "0x140000D6")]
		public event ControllerInteractionEventHandler StartMenuReleased
		{
			[Token(Token = "0x6001A4B")]
			[Address(RVA = "0xB0CE14", Offset = "0xB0CE14", VA = "0xB0CE14")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C7A0", Offset = "0x66C7A0")]
			add
			{
			}
			[Token(Token = "0x6001A4C")]
			[Address(RVA = "0xB0CF04", Offset = "0xB0CF04", VA = "0xB0CF04")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C7B0", Offset = "0x66C7B0")]
			remove
			{
			}
		}

		[Token(Token = "0x140000D7")]
		public event ControllerInteractionEventHandler MiddleFingerSenseAxisChanged
		{
			[Token(Token = "0x6001A4D")]
			[Address(RVA = "0xB0CFF4", Offset = "0xB0CFF4", VA = "0xB0CFF4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C7C0", Offset = "0x66C7C0")]
			add
			{
			}
			[Token(Token = "0x6001A4E")]
			[Address(RVA = "0xB0D0E4", Offset = "0xB0D0E4", VA = "0xB0D0E4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C7D0", Offset = "0x66C7D0")]
			remove
			{
			}
		}

		[Token(Token = "0x140000D8")]
		public event ControllerInteractionEventHandler RingFingerSenseAxisChanged
		{
			[Token(Token = "0x6001A4F")]
			[Address(RVA = "0xB0D1D4", Offset = "0xB0D1D4", VA = "0xB0D1D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C7E0", Offset = "0x66C7E0")]
			add
			{
			}
			[Token(Token = "0x6001A50")]
			[Address(RVA = "0xB0D2C4", Offset = "0xB0D2C4", VA = "0xB0D2C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C7F0", Offset = "0x66C7F0")]
			remove
			{
			}
		}

		[Token(Token = "0x140000D9")]
		public event ControllerInteractionEventHandler PinkyFingerSenseAxisChanged
		{
			[Token(Token = "0x6001A51")]
			[Address(RVA = "0xB0D3B4", Offset = "0xB0D3B4", VA = "0xB0D3B4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C800", Offset = "0x66C800")]
			add
			{
			}
			[Token(Token = "0x6001A52")]
			[Address(RVA = "0xB0D4A4", Offset = "0xB0D4A4", VA = "0xB0D4A4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C810", Offset = "0x66C810")]
			remove
			{
			}
		}

		[Token(Token = "0x140000DA")]
		public event ControllerInteractionEventHandler GripSenseAxisChanged
		{
			[Token(Token = "0x6001A53")]
			[Address(RVA = "0xB0D594", Offset = "0xB0D594", VA = "0xB0D594")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C820", Offset = "0x66C820")]
			add
			{
			}
			[Token(Token = "0x6001A54")]
			[Address(RVA = "0xB0D684", Offset = "0xB0D684", VA = "0xB0D684")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C830", Offset = "0x66C830")]
			remove
			{
			}
		}

		[Token(Token = "0x140000DB")]
		public event ControllerInteractionEventHandler GripSensePressed
		{
			[Token(Token = "0x6001A55")]
			[Address(RVA = "0xB0D774", Offset = "0xB0D774", VA = "0xB0D774")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C840", Offset = "0x66C840")]
			add
			{
			}
			[Token(Token = "0x6001A56")]
			[Address(RVA = "0xB0D864", Offset = "0xB0D864", VA = "0xB0D864")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C850", Offset = "0x66C850")]
			remove
			{
			}
		}

		[Token(Token = "0x140000DC")]
		public event ControllerInteractionEventHandler GripSenseReleased
		{
			[Token(Token = "0x6001A57")]
			[Address(RVA = "0xB0D954", Offset = "0xB0D954", VA = "0xB0D954")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C860", Offset = "0x66C860")]
			add
			{
			}
			[Token(Token = "0x6001A58")]
			[Address(RVA = "0xB0DA44", Offset = "0xB0DA44", VA = "0xB0DA44")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C870", Offset = "0x66C870")]
			remove
			{
			}
		}

		[Token(Token = "0x140000DD")]
		public event ControllerInteractionEventHandler ControllerEnabled
		{
			[Token(Token = "0x6001A59")]
			[Address(RVA = "0xB0DB34", Offset = "0xB0DB34", VA = "0xB0DB34")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C880", Offset = "0x66C880")]
			add
			{
			}
			[Token(Token = "0x6001A5A")]
			[Address(RVA = "0xB0DC24", Offset = "0xB0DC24", VA = "0xB0DC24")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C890", Offset = "0x66C890")]
			remove
			{
			}
		}

		[Token(Token = "0x140000DE")]
		public event ControllerInteractionEventHandler ControllerDisabled
		{
			[Token(Token = "0x6001A5B")]
			[Address(RVA = "0xB0DD14", Offset = "0xB0DD14", VA = "0xB0DD14")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C8A0", Offset = "0x66C8A0")]
			add
			{
			}
			[Token(Token = "0x6001A5C")]
			[Address(RVA = "0xB0DE04", Offset = "0xB0DE04", VA = "0xB0DE04")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C8B0", Offset = "0x66C8B0")]
			remove
			{
			}
		}

		[Token(Token = "0x140000DF")]
		public event ControllerInteractionEventHandler ControllerIndexChanged
		{
			[Token(Token = "0x6001A5D")]
			[Address(RVA = "0xB0DEF4", Offset = "0xB0DEF4", VA = "0xB0DEF4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C8C0", Offset = "0x66C8C0")]
			add
			{
			}
			[Token(Token = "0x6001A5E")]
			[Address(RVA = "0xB0DFE4", Offset = "0xB0DFE4", VA = "0xB0DFE4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C8D0", Offset = "0x66C8D0")]
			remove
			{
			}
		}

		[Token(Token = "0x140000E0")]
		public event ControllerInteractionEventHandler ControllerModelAvailable
		{
			[Token(Token = "0x6001A5F")]
			[Address(RVA = "0xB0E0D4", Offset = "0xB0E0D4", VA = "0xB0E0D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C8E0", Offset = "0x66C8E0")]
			add
			{
			}
			[Token(Token = "0x6001A60")]
			[Address(RVA = "0xB0E1C4", Offset = "0xB0E1C4", VA = "0xB0E1C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C8F0", Offset = "0x66C8F0")]
			remove
			{
			}
		}

		[Token(Token = "0x140000E1")]
		public event ControllerInteractionEventHandler ControllerVisible
		{
			[Token(Token = "0x6001A61")]
			[Address(RVA = "0xB0E2B4", Offset = "0xB0E2B4", VA = "0xB0E2B4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C900", Offset = "0x66C900")]
			add
			{
			}
			[Token(Token = "0x6001A62")]
			[Address(RVA = "0xB0E3A4", Offset = "0xB0E3A4", VA = "0xB0E3A4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C910", Offset = "0x66C910")]
			remove
			{
			}
		}

		[Token(Token = "0x140000E2")]
		public event ControllerInteractionEventHandler ControllerHidden
		{
			[Token(Token = "0x6001A63")]
			[Address(RVA = "0xB0E494", Offset = "0xB0E494", VA = "0xB0E494")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C920", Offset = "0x66C920")]
			add
			{
			}
			[Token(Token = "0x6001A64")]
			[Address(RVA = "0xB0E584", Offset = "0xB0E584", VA = "0xB0E584")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C930", Offset = "0x66C930")]
			remove
			{
			}
		}

		[Token(Token = "0x6001A65")]
		[Address(RVA = "0xB0E674", Offset = "0xB0E674", VA = "0xB0E674", Slot = "4")]
		public virtual void OnTriggerPressed(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001A66")]
		[Address(RVA = "0xB0E6C0", Offset = "0xB0E6C0", VA = "0xB0E6C0", Slot = "5")]
		public virtual void OnTriggerReleased(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001A67")]
		[Address(RVA = "0xB0E70C", Offset = "0xB0E70C", VA = "0xB0E70C", Slot = "6")]
		public virtual void OnTriggerTouchStart(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001A68")]
		[Address(RVA = "0xB0E758", Offset = "0xB0E758", VA = "0xB0E758", Slot = "7")]
		public virtual void OnTriggerTouchEnd(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001A69")]
		[Address(RVA = "0xB0E7A4", Offset = "0xB0E7A4", VA = "0xB0E7A4", Slot = "8")]
		public virtual void OnTriggerHairlineStart(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001A6A")]
		[Address(RVA = "0xB0E7F0", Offset = "0xB0E7F0", VA = "0xB0E7F0", Slot = "9")]
		public virtual void OnTriggerHairlineEnd(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001A6B")]
		[Address(RVA = "0xB0E83C", Offset = "0xB0E83C", VA = "0xB0E83C", Slot = "10")]
		public virtual void OnTriggerClicked(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001A6C")]
		[Address(RVA = "0xB0E888", Offset = "0xB0E888", VA = "0xB0E888", Slot = "11")]
		public virtual void OnTriggerUnclicked(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001A6D")]
		[Address(RVA = "0xB0E8D4", Offset = "0xB0E8D4", VA = "0xB0E8D4", Slot = "12")]
		public virtual void OnTriggerAxisChanged(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001A6E")]
		[Address(RVA = "0xB0E920", Offset = "0xB0E920", VA = "0xB0E920", Slot = "13")]
		public virtual void OnTriggerSenseAxisChanged(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001A6F")]
		[Address(RVA = "0xB0E96C", Offset = "0xB0E96C", VA = "0xB0E96C", Slot = "14")]
		public virtual void OnGripPressed(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001A70")]
		[Address(RVA = "0xB0E9B8", Offset = "0xB0E9B8", VA = "0xB0E9B8", Slot = "15")]
		public virtual void OnGripReleased(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001A71")]
		[Address(RVA = "0xB0EA04", Offset = "0xB0EA04", VA = "0xB0EA04", Slot = "16")]
		public virtual void OnGripTouchStart(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001A72")]
		[Address(RVA = "0xB0EA50", Offset = "0xB0EA50", VA = "0xB0EA50", Slot = "17")]
		public virtual void OnGripTouchEnd(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001A73")]
		[Address(RVA = "0xB0EA9C", Offset = "0xB0EA9C", VA = "0xB0EA9C", Slot = "18")]
		public virtual void OnGripHairlineStart(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001A74")]
		[Address(RVA = "0xB0EAE8", Offset = "0xB0EAE8", VA = "0xB0EAE8", Slot = "19")]
		public virtual void OnGripHairlineEnd(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001A75")]
		[Address(RVA = "0xB0EB34", Offset = "0xB0EB34", VA = "0xB0EB34", Slot = "20")]
		public virtual void OnGripClicked(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001A76")]
		[Address(RVA = "0xB0EB80", Offset = "0xB0EB80", VA = "0xB0EB80", Slot = "21")]
		public virtual void OnGripUnclicked(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001A77")]
		[Address(RVA = "0xB0EBCC", Offset = "0xB0EBCC", VA = "0xB0EBCC", Slot = "22")]
		public virtual void OnGripAxisChanged(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001A78")]
		[Address(RVA = "0xB0EC18", Offset = "0xB0EC18", VA = "0xB0EC18", Slot = "23")]
		public virtual void OnTouchpadPressed(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001A79")]
		[Address(RVA = "0xB0EC64", Offset = "0xB0EC64", VA = "0xB0EC64", Slot = "24")]
		public virtual void OnTouchpadReleased(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001A7A")]
		[Address(RVA = "0xB0ECB0", Offset = "0xB0ECB0", VA = "0xB0ECB0", Slot = "25")]
		public virtual void OnTouchpadTouchStart(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001A7B")]
		[Address(RVA = "0xB0ECFC", Offset = "0xB0ECFC", VA = "0xB0ECFC", Slot = "26")]
		public virtual void OnTouchpadTouchEnd(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001A7C")]
		[Address(RVA = "0xB0ED48", Offset = "0xB0ED48", VA = "0xB0ED48", Slot = "27")]
		public virtual void OnTouchpadAxisChanged(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001A7D")]
		[Address(RVA = "0xB0ED94", Offset = "0xB0ED94", VA = "0xB0ED94", Slot = "28")]
		public virtual void OnTouchpadSenseAxisChanged(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001A7E")]
		[Address(RVA = "0xB0EDE0", Offset = "0xB0EDE0", VA = "0xB0EDE0", Slot = "29")]
		public virtual void OnTouchpadTwoPressed(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001A7F")]
		[Address(RVA = "0xB0EE2C", Offset = "0xB0EE2C", VA = "0xB0EE2C", Slot = "30")]
		public virtual void OnTouchpadTwoReleased(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001A80")]
		[Address(RVA = "0xB0EE78", Offset = "0xB0EE78", VA = "0xB0EE78", Slot = "31")]
		public virtual void OnTouchpadTwoTouchStart(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001A81")]
		[Address(RVA = "0xB0EEC4", Offset = "0xB0EEC4", VA = "0xB0EEC4", Slot = "32")]
		public virtual void OnTouchpadTwoTouchEnd(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001A82")]
		[Address(RVA = "0xB0EF10", Offset = "0xB0EF10", VA = "0xB0EF10", Slot = "33")]
		public virtual void OnTouchpadTwoAxisChanged(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001A83")]
		[Address(RVA = "0xB0EF5C", Offset = "0xB0EF5C", VA = "0xB0EF5C", Slot = "34")]
		public virtual void OnButtonOneTouchStart(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001A84")]
		[Address(RVA = "0xB0EFA8", Offset = "0xB0EFA8", VA = "0xB0EFA8", Slot = "35")]
		public virtual void OnButtonOneTouchEnd(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001A85")]
		[Address(RVA = "0xB0EFF4", Offset = "0xB0EFF4", VA = "0xB0EFF4", Slot = "36")]
		public virtual void OnButtonOnePressed(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001A86")]
		[Address(RVA = "0xB0F040", Offset = "0xB0F040", VA = "0xB0F040", Slot = "37")]
		public virtual void OnButtonOneReleased(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001A87")]
		[Address(RVA = "0xB0F08C", Offset = "0xB0F08C", VA = "0xB0F08C", Slot = "38")]
		public virtual void OnButtonTwoTouchStart(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001A88")]
		[Address(RVA = "0xB0F0D8", Offset = "0xB0F0D8", VA = "0xB0F0D8", Slot = "39")]
		public virtual void OnButtonTwoTouchEnd(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001A89")]
		[Address(RVA = "0xB0F124", Offset = "0xB0F124", VA = "0xB0F124", Slot = "40")]
		public virtual void OnButtonTwoPressed(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001A8A")]
		[Address(RVA = "0xB0F170", Offset = "0xB0F170", VA = "0xB0F170", Slot = "41")]
		public virtual void OnButtonTwoReleased(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001A8B")]
		[Address(RVA = "0xB0F1BC", Offset = "0xB0F1BC", VA = "0xB0F1BC", Slot = "42")]
		public virtual void OnStartMenuPressed(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001A8C")]
		[Address(RVA = "0xB0F208", Offset = "0xB0F208", VA = "0xB0F208", Slot = "43")]
		public virtual void OnStartMenuReleased(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001A8D")]
		[Address(RVA = "0xB0F254", Offset = "0xB0F254", VA = "0xB0F254", Slot = "44")]
		public virtual void OnMiddleFingerSenseAxisChanged(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001A8E")]
		[Address(RVA = "0xB0F2A0", Offset = "0xB0F2A0", VA = "0xB0F2A0", Slot = "45")]
		public virtual void OnRingFingerSenseAxisChanged(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001A8F")]
		[Address(RVA = "0xB0F2EC", Offset = "0xB0F2EC", VA = "0xB0F2EC", Slot = "46")]
		public virtual void OnPinkyFingerSenseAxisChanged(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001A90")]
		[Address(RVA = "0xB0F338", Offset = "0xB0F338", VA = "0xB0F338", Slot = "47")]
		public virtual void OnGripSenseAxisChanged(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001A91")]
		[Address(RVA = "0xB0F384", Offset = "0xB0F384", VA = "0xB0F384", Slot = "48")]
		public virtual void OnGripSensePressed(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001A92")]
		[Address(RVA = "0xB0F3D0", Offset = "0xB0F3D0", VA = "0xB0F3D0", Slot = "49")]
		public virtual void OnGripSenseReleased(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001A93")]
		[Address(RVA = "0xB0F41C", Offset = "0xB0F41C", VA = "0xB0F41C", Slot = "50")]
		public virtual void OnControllerEnabled(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001A94")]
		[Address(RVA = "0xB0F468", Offset = "0xB0F468", VA = "0xB0F468", Slot = "51")]
		public virtual void OnControllerDisabled(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001A95")]
		[Address(RVA = "0xB0F4B4", Offset = "0xB0F4B4", VA = "0xB0F4B4", Slot = "52")]
		public virtual void OnControllerIndexChanged(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001A96")]
		[Address(RVA = "0xB0F500", Offset = "0xB0F500", VA = "0xB0F500", Slot = "53")]
		public virtual void OnControllerModelAvailable(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001A97")]
		[Address(RVA = "0xB0F54C", Offset = "0xB0F54C", VA = "0xB0F54C", Slot = "54")]
		public virtual void OnControllerVisible(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001A98")]
		[Address(RVA = "0xB0F5A0", Offset = "0xB0F5A0", VA = "0xB0F5A0", Slot = "55")]
		public virtual void OnControllerHidden(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001A99")]
		[Address(RVA = "0xB0F5F0", Offset = "0xB0F5F0", VA = "0xB0F5F0", Slot = "56")]
		public virtual ControllerInteractionEventArgs SetControllerEvent()
		{
			return default(ControllerInteractionEventArgs);
		}

		[Token(Token = "0x6001A9A")]
		[Address(RVA = "0xB0F628", Offset = "0xB0F628", VA = "0xB0F628", Slot = "57")]
		public virtual ControllerInteractionEventArgs SetControllerEvent(ref bool buttonBool, bool value = false, float buttonPressure = 0f)
		{
			return default(ControllerInteractionEventArgs);
		}

		[Token(Token = "0x6001A9B")]
		[Address(RVA = "0xB0F780", Offset = "0xB0F780", VA = "0xB0F780", Slot = "58")]
		public virtual SDK_BaseController.ControllerType GetControllerType()
		{
			return default(SDK_BaseController.ControllerType);
		}

		[Token(Token = "0x6001A9C")]
		[Address(RVA = "0xB0F824", Offset = "0xB0F824", VA = "0xB0F824", Slot = "59")]
		public virtual Vector2 GetAxis(Vector2AxisAlias vector2AxisType)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001A9D")]
		[Address(RVA = "0xB0F8D4", Offset = "0xB0F8D4", VA = "0xB0F8D4", Slot = "60")]
		public virtual Vector2 GetTouchpadAxis()
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001A9E")]
		[Address(RVA = "0xB0F8E0", Offset = "0xB0F8E0", VA = "0xB0F8E0", Slot = "61")]
		public virtual Vector2 GetTouchpadTwoAxis()
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001A9F")]
		[Address(RVA = "0xB0F8EC", Offset = "0xB0F8EC", VA = "0xB0F8EC", Slot = "62")]
		public virtual float GetAxisAngle(Vector2AxisAlias vector2AxisType)
		{
			return default(float);
		}

		[Token(Token = "0x6001AA0")]
		[Address(RVA = "0xB0F920", Offset = "0xB0F920", VA = "0xB0F920", Slot = "63")]
		public virtual float GetTouchpadAxisAngle()
		{
			return default(float);
		}

		[Token(Token = "0x6001AA1")]
		[Address(RVA = "0xB0F938", Offset = "0xB0F938", VA = "0xB0F938", Slot = "64")]
		public virtual float GetTouchpadTwoAxisAngle()
		{
			return default(float);
		}

		[Token(Token = "0x6001AA2")]
		[Address(RVA = "0xB0F950", Offset = "0xB0F950", VA = "0xB0F950", Slot = "65")]
		public virtual float GetTriggerAxis()
		{
			return default(float);
		}

		[Token(Token = "0x6001AA3")]
		[Address(RVA = "0xB0F958", Offset = "0xB0F958", VA = "0xB0F958", Slot = "66")]
		public virtual float GetGripAxis()
		{
			return default(float);
		}

		[Token(Token = "0x6001AA4")]
		[Address(RVA = "0xB0F960", Offset = "0xB0F960", VA = "0xB0F960", Slot = "67")]
		public virtual float GetHairTriggerDelta()
		{
			return default(float);
		}

		[Token(Token = "0x6001AA5")]
		[Address(RVA = "0xB0F968", Offset = "0xB0F968", VA = "0xB0F968", Slot = "68")]
		public virtual float GetHairGripDelta()
		{
			return default(float);
		}

		[Token(Token = "0x6001AA6")]
		[Address(RVA = "0xB0F970", Offset = "0xB0F970", VA = "0xB0F970", Slot = "69")]
		public virtual float GetTouchpadSenseAxis()
		{
			return default(float);
		}

		[Token(Token = "0x6001AA7")]
		[Address(RVA = "0xB0F978", Offset = "0xB0F978", VA = "0xB0F978", Slot = "70")]
		public virtual float GetTriggerSenseAxis()
		{
			return default(float);
		}

		[Token(Token = "0x6001AA8")]
		[Address(RVA = "0xB0F980", Offset = "0xB0F980", VA = "0xB0F980", Slot = "71")]
		public virtual float GetMiddleFingerSenseAxis()
		{
			return default(float);
		}

		[Token(Token = "0x6001AA9")]
		[Address(RVA = "0xB0F988", Offset = "0xB0F988", VA = "0xB0F988", Slot = "72")]
		public virtual float GetRingFingerSenseAxis()
		{
			return default(float);
		}

		[Token(Token = "0x6001AAA")]
		[Address(RVA = "0xB0F990", Offset = "0xB0F990", VA = "0xB0F990", Slot = "73")]
		public virtual float GetPinkyFingerSenseAxis()
		{
			return default(float);
		}

		[Token(Token = "0x6001AAB")]
		[Address(RVA = "0xB0F998", Offset = "0xB0F998", VA = "0xB0F998", Slot = "74")]
		public virtual float GetGripSenseAxis()
		{
			return default(float);
		}

		[Token(Token = "0x6001AAC")]
		[Address(RVA = "0xB0F9A0", Offset = "0xB0F9A0", VA = "0xB0F9A0", Slot = "75")]
		public virtual bool AnyButtonPressed()
		{
			return default(bool);
		}

		[Token(Token = "0x6001AAD")]
		[Address(RVA = "0xB0F9F0", Offset = "0xB0F9F0", VA = "0xB0F9F0", Slot = "76")]
		public virtual bool GetAxisState(Vector2AxisAlias axis, SDK_BaseController.ButtonPressTypes pressType)
		{
			return default(bool);
		}

		[Token(Token = "0x6001AAE")]
		[Address(RVA = "0xB0FA50", Offset = "0xB0FA50", VA = "0xB0FA50", Slot = "77")]
		public virtual bool IsButtonPressed(ButtonAlias button)
		{
			return default(bool);
		}

		[Token(Token = "0x6001AAF")]
		[Address(RVA = "0xB0FB4C", Offset = "0xB0FB4C", VA = "0xB0FB4C", Slot = "78")]
		public virtual void SubscribeToButtonAliasEvent(ButtonAlias givenButton, bool startEvent, ControllerInteractionEventHandler callbackMethod)
		{
		}

		[Token(Token = "0x6001AB0")]
		[Address(RVA = "0xB0FB78", Offset = "0xB0FB78", VA = "0xB0FB78", Slot = "79")]
		public virtual void UnsubscribeToButtonAliasEvent(ButtonAlias givenButton, bool startEvent, ControllerInteractionEventHandler callbackMethod)
		{
		}

		[Token(Token = "0x6001AB1")]
		[Address(RVA = "0xB0FBA0", Offset = "0xB0FBA0", VA = "0xB0FBA0", Slot = "80")]
		public virtual void SubscribeToAxisAliasEvent(SDK_BaseController.ButtonTypes buttonType, AxisType axisType, ControllerInteractionEventHandler callbackMethod)
		{
		}

		[Token(Token = "0x6001AB2")]
		[Address(RVA = "0xB0FBCC", Offset = "0xB0FBCC", VA = "0xB0FBCC", Slot = "81")]
		public virtual void UnsubscribeToAxisAliasEvent(SDK_BaseController.ButtonTypes buttonType, AxisType axisType, ControllerInteractionEventHandler callbackMethod)
		{
		}

		[Token(Token = "0x6001AB3")]
		[Address(RVA = "0xB0FBF8", Offset = "0xB0FBF8", VA = "0xB0FBF8", Slot = "82")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6001AB4")]
		[Address(RVA = "0xB0FC60", Offset = "0xB0FC60", VA = "0xB0FC60", Slot = "83")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6001AB5")]
		[Address(RVA = "0xB0FE8C", Offset = "0xB0FE8C", VA = "0xB0FE8C", Slot = "84")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x6001AB6")]
		[Address(RVA = "0xB0FEE4", Offset = "0xB0FEE4", VA = "0xB0FEE4", Slot = "85")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x6001AB7")]
		[Address(RVA = "0xB0FF4C", Offset = "0xB0FF4C", VA = "0xB0FF4C", Slot = "86")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x6001AB8")]
		[Address(RVA = "0xB100A4", Offset = "0xB100A4", VA = "0xB100A4", Slot = "87")]
		protected virtual float ProcessSenseAxis(float axisValue)
		{
			return default(float);
		}

		[Token(Token = "0x6001AB9")]
		[Address(RVA = "0xB100B8", Offset = "0xB100B8", VA = "0xB100B8", Slot = "88")]
		protected virtual void CheckTriggerEvents(VRTK_ControllerReference controllerReference)
		{
		}

		[Token(Token = "0x6001ABA")]
		[Address(RVA = "0xB10740", Offset = "0xB10740", VA = "0xB10740", Slot = "89")]
		protected virtual void CheckGripEvents(VRTK_ControllerReference controllerReference)
		{
		}

		[Token(Token = "0x6001ABB")]
		[Address(RVA = "0xB10CF4", Offset = "0xB10CF4", VA = "0xB10CF4", Slot = "90")]
		protected virtual void CheckTouchpadEvents(VRTK_ControllerReference controllerReference)
		{
		}

		[Token(Token = "0x6001ABC")]
		[Address(RVA = "0xB11144", Offset = "0xB11144", VA = "0xB11144", Slot = "91")]
		protected virtual void CheckTouchpadTwoEvents(VRTK_ControllerReference controllerReference)
		{
		}

		[Token(Token = "0x6001ABD")]
		[Address(RVA = "0xB11534", Offset = "0xB11534", VA = "0xB11534", Slot = "92")]
		protected virtual void CheckButtonOneEvents(VRTK_ControllerReference controllerReference)
		{
		}

		[Token(Token = "0x6001ABE")]
		[Address(RVA = "0xB117C4", Offset = "0xB117C4", VA = "0xB117C4", Slot = "93")]
		protected virtual void CheckButtonTwoEvents(VRTK_ControllerReference controllerReference)
		{
		}

		[Token(Token = "0x6001ABF")]
		[Address(RVA = "0xB11A54", Offset = "0xB11A54", VA = "0xB11A54", Slot = "94")]
		protected virtual void CheckStartMenuEvents(VRTK_ControllerReference controllerReference)
		{
		}

		[Token(Token = "0x6001AC0")]
		[Address(RVA = "0xB11BC8", Offset = "0xB11BC8", VA = "0xB11BC8", Slot = "95")]
		protected virtual void CheckExtraFingerEvents(VRTK_ControllerReference controllerReference)
		{
		}

		[Token(Token = "0x6001AC1")]
		[Address(RVA = "0xB120B8", Offset = "0xB120B8", VA = "0xB120B8", Slot = "96")]
		protected virtual void ButtonAliasEventSubscription(bool subscribe, ButtonAlias givenButton, bool startEvent, ControllerInteractionEventHandler callbackMethod)
		{
		}

		[Token(Token = "0x6001AC2")]
		[Address(RVA = "0xB123F4", Offset = "0xB123F4", VA = "0xB123F4", Slot = "97")]
		protected virtual void AxisAliasEventSubscription(bool subscribe, SDK_BaseController.ButtonTypes buttonType, AxisType axisType, ControllerInteractionEventHandler callbackMethod)
		{
		}

		[Token(Token = "0x6001AC3")]
		[Address(RVA = "0xB12528", Offset = "0xB12528", VA = "0xB12528", Slot = "98")]
		protected virtual void TrackedControllerEnabled(object sender, VRTKTrackedControllerEventArgs e)
		{
		}

		[Token(Token = "0x6001AC4")]
		[Address(RVA = "0xB1259C", Offset = "0xB1259C", VA = "0xB1259C", Slot = "99")]
		protected virtual void TrackedControllerDisabled(object sender, VRTKTrackedControllerEventArgs e)
		{
		}

		[Token(Token = "0x6001AC5")]
		[Address(RVA = "0xB12624", Offset = "0xB12624", VA = "0xB12624", Slot = "100")]
		protected virtual void TrackedControllerIndexChanged(object sender, VRTKTrackedControllerEventArgs e)
		{
		}

		[Token(Token = "0x6001AC6")]
		[Address(RVA = "0xB12698", Offset = "0xB12698", VA = "0xB12698", Slot = "101")]
		protected virtual void TrackedControllerModelAvailable(object sender, VRTKTrackedControllerEventArgs e)
		{
		}

		[Token(Token = "0x6001AC7")]
		[Address(RVA = "0xB1270C", Offset = "0xB1270C", VA = "0xB1270C", Slot = "102")]
		protected virtual float CalculateVector2AxisAngle(Vector2 axis)
		{
			return default(float);
		}

		[Token(Token = "0x6001AC8")]
		[Address(RVA = "0xB127B0", Offset = "0xB127B0", VA = "0xB127B0", Slot = "103")]
		protected virtual void DisableEvents()
		{
		}

		[Token(Token = "0x6001AC9")]
		[Address(RVA = "0xB13374", Offset = "0xB13374", VA = "0xB13374")]
		public VRTK_ControllerEvents()
		{
		}
	}
	[Token(Token = "0x20003B2")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x63FBB0", Offset = "0x63FBB0")]
	public class VRTK_ControllerHighlighter : MonoBehaviour
	{
		[Token(Token = "0x4001ADD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6580E0", Offset = "0x6580E0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6580E0", Offset = "0x6580E0")]
		public float transitionDuration;

		[Token(Token = "0x4001ADE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x658140", Offset = "0x658140")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x658140", Offset = "0x658140")]
		public Color highlightController;

		[Token(Token = "0x4001ADF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6581A0", Offset = "0x6581A0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6581A0", Offset = "0x6581A0")]
		public Color highlightBody;

		[Token(Token = "0x4001AE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x658200", Offset = "0x658200")]
		public Color highlightTrigger;

		[Token(Token = "0x4001AE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x658238", Offset = "0x658238")]
		public Color highlightGrip;

		[Token(Token = "0x4001AE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x658270", Offset = "0x658270")]
		public Color highlightTouchpad;

		[Token(Token = "0x4001AE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6582A8", Offset = "0x6582A8")]
		public Color highlightTouchpadTwo;

		[Token(Token = "0x4001AE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6582E0", Offset = "0x6582E0")]
		public Color highlightButtonOne;

		[Token(Token = "0x4001AE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x658318", Offset = "0x658318")]
		public Color highlightButtonTwo;

		[Token(Token = "0x4001AE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x658350", Offset = "0x658350")]
		public Color highlightSystemMenu;

		[Token(Token = "0x4001AE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x658388", Offset = "0x658388")]
		public Color highlightStartMenu;

		[Token(Token = "0x4001AE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6583C0", Offset = "0x6583C0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6583C0", Offset = "0x6583C0")]
		public VRTK_ControllerModelElementPaths modelElementPaths;

		[Token(Token = "0x4001AE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x658420", Offset = "0x658420")]
		public VRTK_ControllerElementHighlighters elementHighlighterOverrides;

		[Token(Token = "0x4001AEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x658458", Offset = "0x658458")]
		public GameObject controllerAlias;

		[Token(Token = "0x4001AEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x658490", Offset = "0x658490")]
		public GameObject modelContainer;

		[Token(Token = "0x4001AEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6584C8", Offset = "0x6584C8")]
		public VRTK_BaseHighlighter controllerHighlighter;

		[Token(Token = "0x4001AED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		protected bool controllerHighlighted;

		[Token(Token = "0x4001AEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		protected Dictionary<string, Transform> cachedElements;

		[Token(Token = "0x4001AEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		protected Dictionary<string, object> highlighterOptions;

		[Token(Token = "0x4001AF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		protected VRTK_BaseHighlighter baseHighlighter;

		[Token(Token = "0x4001AF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		protected bool autoHighlighter;

		[Token(Token = "0x4001AF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x109")]
		protected bool trackedControllerReady;

		[Token(Token = "0x4001AF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		protected Color lastHighlightController;

		[Token(Token = "0x4001AF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		protected Color lastHighlightBody;

		[Token(Token = "0x4001AF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
		protected Color lastHighlightTrigger;

		[Token(Token = "0x4001AF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
		protected Color lastHighlightGrip;

		[Token(Token = "0x4001AF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
		protected Color lastHighlightTouchpad;

		[Token(Token = "0x4001AF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
		protected Color lastHighlightTouchpadTwo;

		[Token(Token = "0x4001AF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
		protected Color lastHighlightButtonOne;

		[Token(Token = "0x4001AFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
		protected Color lastHighlightButtonTwo;

		[Token(Token = "0x4001AFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
		protected Color lastHighlightSystemMenu;

		[Token(Token = "0x4001AFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19C")]
		protected Color lastHighlightStartMenu;

		[Token(Token = "0x4001AFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		protected SDK_BaseController.ControllerElements[] bodyElements;

		[Token(Token = "0x4001AFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		protected SDK_BaseController.ControllerElements[] triggerElements;

		[Token(Token = "0x4001AFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		protected SDK_BaseController.ControllerElements[] gripElements;

		[Token(Token = "0x4001B00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		protected SDK_BaseController.ControllerElements[] touchpadElements;

		[Token(Token = "0x4001B01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		protected SDK_BaseController.ControllerElements[] touchpadTwoElements;

		[Token(Token = "0x4001B02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		protected SDK_BaseController.ControllerElements[] buttonOneElements;

		[Token(Token = "0x4001B03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		protected SDK_BaseController.ControllerElements[] buttonTwoElements;

		[Token(Token = "0x4001B04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		protected SDK_BaseController.ControllerElements[] systemMenuElements;

		[Token(Token = "0x4001B05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		protected SDK_BaseController.ControllerElements[] startMenuElements;

		[Token(Token = "0x4001B06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		protected GameObject scriptControllerAlias;

		[Token(Token = "0x4001B07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		protected GameObject actualController;

		[Token(Token = "0x4001B08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		protected GameObject actualModelContainer;

		[Token(Token = "0x4001B09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		protected VRTK_TrackedController trackedController;

		[Token(Token = "0x6001ACA")]
		[Address(RVA = "0xA1B01C", Offset = "0xA1B01C", VA = "0xA1B01C", Slot = "4")]
		public virtual void ConfigureControllerPaths()
		{
		}

		[Token(Token = "0x6001ACB")]
		[Address(RVA = "0xA1B308", Offset = "0xA1B308", VA = "0xA1B308", Slot = "5")]
		public virtual void PopulateHighlighters()
		{
		}

		[Token(Token = "0x6001ACC")]
		[Address(RVA = "0xA1BAB4", Offset = "0xA1BAB4", VA = "0xA1BAB4", Slot = "6")]
		public virtual void HighlightController(Color color, float fadeDuration = 0f)
		{
		}

		[Token(Token = "0x6001ACD")]
		[Address(RVA = "0xA1BC94", Offset = "0xA1BC94", VA = "0xA1BC94", Slot = "7")]
		public virtual void UnhighlightController()
		{
		}

		[Token(Token = "0x6001ACE")]
		[Address(RVA = "0xA1BDA0", Offset = "0xA1BDA0", VA = "0xA1BDA0", Slot = "8")]
		public virtual void HighlightElement(SDK_BaseController.ControllerElements elementType, Color color, float fadeDuration = 0f)
		{
		}

		[Token(Token = "0x6001ACF")]
		[Address(RVA = "0xA1BF20", Offset = "0xA1BF20", VA = "0xA1BF20", Slot = "9")]
		public virtual void UnhighlightElement(SDK_BaseController.ControllerElements elementType)
		{
		}

		[Token(Token = "0x6001AD0")]
		[Address(RVA = "0xA1C0E0", Offset = "0xA1C0E0", VA = "0xA1C0E0", Slot = "10")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6001AD1")]
		[Address(RVA = "0xA1C148", Offset = "0xA1C148", VA = "0xA1C148", Slot = "11")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6001AD2")]
		[Address(RVA = "0xA1C614", Offset = "0xA1C614", VA = "0xA1C614", Slot = "12")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x6001AD3")]
		[Address(RVA = "0xA1C740", Offset = "0xA1C740", VA = "0xA1C740", Slot = "13")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x6001AD4")]
		[Address(RVA = "0xA1C7A8", Offset = "0xA1C7A8", VA = "0xA1C7A8", Slot = "14")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x6001AD5")]
		[Address(RVA = "0xA1C914", Offset = "0xA1C914", VA = "0xA1C914", Slot = "15")]
		protected virtual void DoControllerModelAvailable(object sender, VRTKTrackedControllerEventArgs e)
		{
		}

		[Token(Token = "0x6001AD6")]
		[Address(RVA = "0xA1C92C", Offset = "0xA1C92C", VA = "0xA1C92C", Slot = "16")]
		protected virtual void ControllerAvailable()
		{
		}

		[Token(Token = "0x6001AD7")]
		[Address(RVA = "0xA1CACC", Offset = "0xA1CACC", VA = "0xA1CACC", Slot = "17")]
		protected virtual void ResetLastHighlights()
		{
		}

		[Token(Token = "0x6001AD8")]
		[Address(RVA = "0xA1CBD8", Offset = "0xA1CBD8", VA = "0xA1CBD8", Slot = "18")]
		protected virtual void SetColourParameter(SDK_BaseController.ControllerElements element, Color color)
		{
		}

		[Token(Token = "0x6001AD9")]
		[Address(RVA = "0xA1CDBC", Offset = "0xA1CDBC", VA = "0xA1CDBC", Slot = "19")]
		protected virtual Color GetColourParameter(SDK_BaseController.ControllerElements element)
		{
			return default(Color);
		}

		[Token(Token = "0x6001ADA")]
		[Address(RVA = "0xA1CE50", Offset = "0xA1CE50", VA = "0xA1CE50", Slot = "20")]
		protected virtual void ToggleControllerState()
		{
		}

		[Token(Token = "0x6001ADB")]
		[Address(RVA = "0xA1CF28", Offset = "0xA1CF28", VA = "0xA1CF28", Slot = "21")]
		protected virtual void ToggleHighlightState(Color currentColor, ref Color lastColorState, SDK_BaseController.ControllerElements[] elements)
		{
		}

		[Token(Token = "0x6001ADC")]
		[Address(RVA = "0xA1D08C", Offset = "0xA1D08C", VA = "0xA1D08C", Slot = "22")]
		protected virtual void AddHighlighterToElement(Transform element, VRTK_BaseHighlighter parentHighlighter, VRTK_BaseHighlighter overrideHighlighter)
		{
		}

		[Token(Token = "0x6001ADD")]
		[Address(RVA = "0xA1D354", Offset = "0xA1D354", VA = "0xA1D354", Slot = "23")]
		protected virtual string GetElementPath(string currentPath, SDK_BaseController.ControllerElements elementType)
		{
			return null;
		}

		[Token(Token = "0x6001ADE")]
		[Address(RVA = "0xA1D46C", Offset = "0xA1D46C", VA = "0xA1D46C", Slot = "24")]
		protected virtual string GetPathForControllerElement(SDK_BaseController.ControllerElements controllerElement)
		{
			return null;
		}

		[Token(Token = "0x6001ADF")]
		[Address(RVA = "0xA1D5D4", Offset = "0xA1D5D4", VA = "0xA1D5D4", Slot = "25")]
		protected virtual Transform GetElementTransform(string path)
		{
			return null;
		}

		[Token(Token = "0x6001AE0")]
		[Address(RVA = "0xA1D814", Offset = "0xA1D814", VA = "0xA1D814", Slot = "26")]
		protected virtual void ToggleHighlightAlias(bool state, string transformPath, Color? highlight, float duration = 0f)
		{
		}

		[Token(Token = "0x6001AE1")]
		[Address(RVA = "0xA1D98C", Offset = "0xA1D98C", VA = "0xA1D98C", Slot = "27")]
		protected virtual VRTK_BaseHighlighter GetValidHighlighter()
		{
			return null;
		}

		[Token(Token = "0x6001AE2")]
		[Address(RVA = "0xA1DA1C", Offset = "0xA1DA1C", VA = "0xA1DA1C")]
		public VRTK_ControllerHighlighter()
		{
		}
	}
	[Token(Token = "0x20003B3")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x63FBE8", Offset = "0x63FBE8")]
	public class VRTK_ControllerTrackedCollider : VRTK_SDKControllerReady
	{
		[Token(Token = "0x4001B0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x658500", Offset = "0x658500")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x658500", Offset = "0x658500")]
		public VRTK_InteractTouch interactTouch;

		[Token(Token = "0x4001B0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x658560", Offset = "0x658560")]
		public float maxResnapDistance;

		[Token(Token = "0x4001B0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x658598", Offset = "0x658598")]
		public VRTK_ControllerEvents.ButtonAlias activationButton;

		[Token(Token = "0x4001B0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6585D0", Offset = "0x6585D0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6585D0", Offset = "0x6585D0")]
		public VRTK_ControllerEvents controllerEvents;

		[Token(Token = "0x4001B0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected VRTK_TrackedController trackedController;

		[Token(Token = "0x4001B0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected VRTK_ControllerReference controllerReference;

		[Token(Token = "0x4001B10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected Rigidbody trackedRigidbody;

		[Token(Token = "0x4001B11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected bool createRigidbody;

		[Token(Token = "0x4001B12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		protected Collider[] trackedColliders;

		[Token(Token = "0x4001B13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		protected GameObject customColliderContainer;

		[Token(Token = "0x4001B14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		protected bool createColliders;

		[Token(Token = "0x4001B15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		protected VRTK_RigidbodyFollow rigidbodyFollow;

		[Token(Token = "0x4001B16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		protected bool createRigidbodyFollow;

		[Token(Token = "0x4001B17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		protected VRTK_ControllerEvents.ButtonAlias subscribedActivationButton;

		[Token(Token = "0x6001AE3")]
		[Address(RVA = "0xA214B4", Offset = "0xA214B4", VA = "0xA214B4", Slot = "15")]
		public virtual void ToggleColliders(bool state)
		{
		}

		[Token(Token = "0x6001AE4")]
		[Address(RVA = "0xA21570", Offset = "0xA21570", VA = "0xA21570", Slot = "16")]
		public virtual Collider[] TrackedColliders()
		{
			return null;
		}

		[Token(Token = "0x6001AE5")]
		[Address(RVA = "0xA21578", Offset = "0xA21578", VA = "0xA21578", Slot = "4")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6001AE6")]
		[Address(RVA = "0xA217A0", Offset = "0xA217A0", VA = "0xA217A0", Slot = "5")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x6001AE7")]
		[Address(RVA = "0xA2186C", Offset = "0xA2186C", VA = "0xA2186C", Slot = "14")]
		protected override void ControllerReady(VRTK_ControllerReference passedControllerReference)
		{
		}

		[Token(Token = "0x6001AE8")]
		[Address(RVA = "0xA21A84", Offset = "0xA21A84", VA = "0xA21A84", Slot = "17")]
		protected virtual void Cleanup(bool immediate)
		{
		}

		[Token(Token = "0x6001AE9")]
		[Address(RVA = "0xA21B60", Offset = "0xA21B60", VA = "0xA21B60", Slot = "18")]
		protected virtual void DestroyObject(UnityEngine.Object toDestroy, bool immediate)
		{
		}

		[Token(Token = "0x6001AEA")]
		[Address(RVA = "0xA21C00", Offset = "0xA21C00", VA = "0xA21C00", Slot = "19")]
		protected virtual void ManageActivationListeners(bool state)
		{
		}

		[Token(Token = "0x6001AEB")]
		[Address(RVA = "0xA21E14", Offset = "0xA21E14", VA = "0xA21E14", Slot = "20")]
		protected virtual void DoActivationPress(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001AEC")]
		[Address(RVA = "0xA21E28", Offset = "0xA21E28", VA = "0xA21E28", Slot = "21")]
		protected virtual void DoActivationRelease(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001AED")]
		[Address(RVA = "0xA21E3C", Offset = "0xA21E3C", VA = "0xA21E3C", Slot = "22")]
		protected virtual void SetupRigidbody()
		{
		}

		[Token(Token = "0x6001AEE")]
		[Address(RVA = "0xA21F6C", Offset = "0xA21F6C", VA = "0xA21F6C", Slot = "23")]
		protected virtual void SetupColliders()
		{
		}

		[Token(Token = "0x6001AEF")]
		[Address(RVA = "0xA22684", Offset = "0xA22684", VA = "0xA22684", Slot = "24")]
		protected virtual void SetupFollower()
		{
		}

		[Token(Token = "0x6001AF0")]
		[Address(RVA = "0xA227C4", Offset = "0xA227C4", VA = "0xA227C4")]
		public VRTK_ControllerTrackedCollider()
		{
		}
	}
	[Token(Token = "0x20003B4")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x63FC20", Offset = "0x63FC20")]
	public class VRTK_InteractGrab : MonoBehaviour
	{
		[Token(Token = "0x4001B18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x658630", Offset = "0x658630")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x658630", Offset = "0x658630")]
		public VRTK_ControllerEvents.ButtonAlias grabButton;

		[Token(Token = "0x4001B19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x658690", Offset = "0x658690")]
		public float grabPrecognition;

		[Token(Token = "0x4001B1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6586C8", Offset = "0x6586C8")]
		public float throwMultiplier;

		[Token(Token = "0x4001B1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x658700", Offset = "0x658700")]
		public bool createRigidBodyWhenNotTouching;

		[Token(Token = "0x4001B1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x658738", Offset = "0x658738")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x658738", Offset = "0x658738")]
		public Rigidbody controllerAttachPoint;

		[Token(Token = "0x4001B1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x658798", Offset = "0x658798")]
		public VRTK_ControllerEvents controllerEvents;

		[Token(Token = "0x4001B1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6587D0", Offset = "0x6587D0")]
		public VRTK_InteractTouch interactTouch;

		[Token(Token = "0x4001B25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		protected VRTK_ControllerEvents.ButtonAlias subscribedGrabButton;

		[Token(Token = "0x4001B26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		protected VRTK_ControllerEvents.ButtonAlias savedGrabButton;

		[Token(Token = "0x4001B27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		protected bool grabPressed;

		[Token(Token = "0x4001B28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		protected GameObject grabbedObject;

		[Token(Token = "0x4001B29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		protected bool influencingGrabbedObject;

		[Token(Token = "0x4001B2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		protected int grabEnabledState;

		[Token(Token = "0x4001B2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		protected float grabPrecognitionTimer;

		[Token(Token = "0x4001B2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		protected GameObject undroppableGrabbedObject;

		[Token(Token = "0x4001B2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		protected Vector3 undroppableGrabbedObjectScale;

		[Token(Token = "0x4001B2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public Rigidbody originalControllerAttachPoint;

		[Token(Token = "0x170001CA")]
		protected VRTK_ControllerReference controllerReference
		{
			[Token(Token = "0x6001AFD")]
			[Address(RVA = "0xD05AF8", Offset = "0xD05AF8", VA = "0xD05AF8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x140000E3")]
		public event ControllerInteractionEventHandler GrabButtonPressed
		{
			[Token(Token = "0x6001AF1")]
			[Address(RVA = "0xD04FE8", Offset = "0xD04FE8", VA = "0xD04FE8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C940", Offset = "0x66C940")]
			add
			{
			}
			[Token(Token = "0x6001AF2")]
			[Address(RVA = "0xD050D4", Offset = "0xD050D4", VA = "0xD050D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C950", Offset = "0x66C950")]
			remove
			{
			}
		}

		[Token(Token = "0x140000E4")]
		public event ControllerInteractionEventHandler GrabButtonReleased
		{
			[Token(Token = "0x6001AF3")]
			[Address(RVA = "0xD051C0", Offset = "0xD051C0", VA = "0xD051C0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C960", Offset = "0x66C960")]
			add
			{
			}
			[Token(Token = "0x6001AF4")]
			[Address(RVA = "0xD052AC", Offset = "0xD052AC", VA = "0xD052AC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C970", Offset = "0x66C970")]
			remove
			{
			}
		}

		[Token(Token = "0x140000E5")]
		public event ObjectInteractEventHandler ControllerStartGrabInteractableObject
		{
			[Token(Token = "0x6001AF5")]
			[Address(RVA = "0xD05398", Offset = "0xD05398", VA = "0xD05398")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C980", Offset = "0x66C980")]
			add
			{
			}
			[Token(Token = "0x6001AF6")]
			[Address(RVA = "0xD05484", Offset = "0xD05484", VA = "0xD05484")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C990", Offset = "0x66C990")]
			remove
			{
			}
		}

		[Token(Token = "0x140000E6")]
		public event ObjectInteractEventHandler ControllerGrabInteractableObject
		{
			[Token(Token = "0x6001AF7")]
			[Address(RVA = "0xD05570", Offset = "0xD05570", VA = "0xD05570")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C9A0", Offset = "0x66C9A0")]
			add
			{
			}
			[Token(Token = "0x6001AF8")]
			[Address(RVA = "0xD0565C", Offset = "0xD0565C", VA = "0xD0565C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C9B0", Offset = "0x66C9B0")]
			remove
			{
			}
		}

		[Token(Token = "0x140000E7")]
		public event ObjectInteractEventHandler ControllerStartUngrabInteractableObject
		{
			[Token(Token = "0x6001AF9")]
			[Address(RVA = "0xD05748", Offset = "0xD05748", VA = "0xD05748")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C9C0", Offset = "0x66C9C0")]
			add
			{
			}
			[Token(Token = "0x6001AFA")]
			[Address(RVA = "0xD05834", Offset = "0xD05834", VA = "0xD05834")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C9D0", Offset = "0x66C9D0")]
			remove
			{
			}
		}

		[Token(Token = "0x140000E8")]
		public event ObjectInteractEventHandler ControllerUngrabInteractableObject
		{
			[Token(Token = "0x6001AFB")]
			[Address(RVA = "0xD05920", Offset = "0xD05920", VA = "0xD05920")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C9E0", Offset = "0x66C9E0")]
			add
			{
			}
			[Token(Token = "0x6001AFC")]
			[Address(RVA = "0xD05A0C", Offset = "0xD05A0C", VA = "0xD05A0C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C9F0", Offset = "0x66C9F0")]
			remove
			{
			}
		}

		[Token(Token = "0x6001AFE")]
		[Address(RVA = "0xD05BBC", Offset = "0xD05BBC", VA = "0xD05BBC", Slot = "4")]
		public virtual void OnControllerStartGrabInteractableObject(ObjectInteractEventArgs e)
		{
		}

		[Token(Token = "0x6001AFF")]
		[Address(RVA = "0xD05BE8", Offset = "0xD05BE8", VA = "0xD05BE8", Slot = "5")]
		public virtual void OnControllerGrabInteractableObject(ObjectInteractEventArgs e)
		{
		}

		[Token(Token = "0x6001B00")]
		[Address(RVA = "0xD05C14", Offset = "0xD05C14", VA = "0xD05C14", Slot = "6")]
		public virtual void OnControllerStartUngrabInteractableObject(ObjectInteractEventArgs e)
		{
		}

		[Token(Token = "0x6001B01")]
		[Address(RVA = "0xD05C40", Offset = "0xD05C40", VA = "0xD05C40", Slot = "7")]
		public virtual void OnControllerUngrabInteractableObject(ObjectInteractEventArgs e)
		{
		}

		[Token(Token = "0x6001B02")]
		[Address(RVA = "0xD05C6C", Offset = "0xD05C6C", VA = "0xD05C6C", Slot = "8")]
		public virtual void OnGrabButtonPressed(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001B03")]
		[Address(RVA = "0xD05CB8", Offset = "0xD05CB8", VA = "0xD05CB8", Slot = "9")]
		public virtual void OnGrabButtonReleased(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001B04")]
		[Address(RVA = "0xD05D04", Offset = "0xD05D04", VA = "0xD05D04", Slot = "10")]
		public virtual bool IsGrabButtonPressed()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B05")]
		[Address(RVA = "0xD05D0C", Offset = "0xD05D0C", VA = "0xD05D0C", Slot = "11")]
		public virtual void ForceRelease(bool applyGrabbingObjectVelocity = false)
		{
		}

		[Token(Token = "0x6001B06")]
		[Address(RVA = "0xD05D20", Offset = "0xD05D20", VA = "0xD05D20", Slot = "12")]
		public virtual void AttemptGrab()
		{
		}

		[Token(Token = "0x6001B07")]
		[Address(RVA = "0xD05D30", Offset = "0xD05D30", VA = "0xD05D30", Slot = "13")]
		public virtual GameObject GetGrabbedObject()
		{
			return null;
		}

		[Token(Token = "0x6001B08")]
		[Address(RVA = "0xD05D38", Offset = "0xD05D38", VA = "0xD05D38", Slot = "14")]
		public virtual void ForceControllerAttachPoint(Rigidbody forcedAttachPoint)
		{
		}

		[Token(Token = "0x6001B09")]
		[Address(RVA = "0xD05D44", Offset = "0xD05D44", VA = "0xD05D44", Slot = "15")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6001B0A")]
		[Address(RVA = "0xD06038", Offset = "0xD06038", VA = "0xD06038", Slot = "16")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6001B0B")]
		[Address(RVA = "0xD06194", Offset = "0xD06194", VA = "0xD06194", Slot = "17")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x6001B0C")]
		[Address(RVA = "0xD06300", Offset = "0xD06300", VA = "0xD06300", Slot = "18")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x6001B0D")]
		[Address(RVA = "0xD06368", Offset = "0xD06368", VA = "0xD06368", Slot = "19")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x6001B0E")]
		[Address(RVA = "0xD063D0", Offset = "0xD063D0", VA = "0xD063D0", Slot = "20")]
		protected virtual void DoControllerModelUpdate(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001B0F")]
		[Address(RVA = "0xD063E0", Offset = "0xD063E0", VA = "0xD063E0", Slot = "21")]
		protected virtual void ManageInteractTouchListener(bool state)
		{
		}

		[Token(Token = "0x6001B10")]
		[Address(RVA = "0xD06964", Offset = "0xD06964", VA = "0xD06964", Slot = "22")]
		protected virtual void ControllerTouchInteractableObject(object sender, ObjectInteractEventArgs e)
		{
		}

		[Token(Token = "0x6001B11")]
		[Address(RVA = "0xD06A80", Offset = "0xD06A80", VA = "0xD06A80", Slot = "23")]
		protected virtual void ControllerUntouchInteractableObject(object sender, ObjectInteractEventArgs e)
		{
		}

		[Token(Token = "0x6001B12")]
		[Address(RVA = "0xD06BB0", Offset = "0xD06BB0", VA = "0xD06BB0", Slot = "24")]
		protected virtual void ManageGrabListener(bool state)
		{
		}

		[Token(Token = "0x6001B13")]
		[Address(RVA = "0xD06E08", Offset = "0xD06E08", VA = "0xD06E08", Slot = "25")]
		protected virtual void RegrabUndroppableObject()
		{
		}

		[Token(Token = "0x6001B14")]
		[Address(RVA = "0xD07010", Offset = "0xD07010", VA = "0xD07010", Slot = "26")]
		protected virtual void SetUndroppableObject()
		{
		}

		[Token(Token = "0x6001B15")]
		[Address(RVA = "0xD07200", Offset = "0xD07200", VA = "0xD07200", Slot = "27")]
		protected virtual void SetControllerAttachPoint()
		{
		}

		[Token(Token = "0x6001B16")]
		[Address(RVA = "0xD077B8", Offset = "0xD077B8", VA = "0xD077B8", Slot = "28")]
		protected virtual bool IsObjectGrabbable(GameObject obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B17")]
		[Address(RVA = "0xD07904", Offset = "0xD07904", VA = "0xD07904", Slot = "29")]
		protected virtual bool IsObjectHoldOnGrab(GameObject obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B18")]
		[Address(RVA = "0xD079EC", Offset = "0xD079EC", VA = "0xD079EC", Slot = "30")]
		protected virtual void ChooseGrabSequence(VRTK_InteractableObject grabbedObjectScript)
		{
		}

		[Token(Token = "0x6001B19")]
		[Address(RVA = "0xD07A70", Offset = "0xD07A70", VA = "0xD07A70", Slot = "31")]
		protected virtual void ToggleControllerVisibility(bool visible)
		{
		}

		[Token(Token = "0x6001B1A")]
		[Address(RVA = "0xD07BE0", Offset = "0xD07BE0", VA = "0xD07BE0", Slot = "32")]
		protected virtual void InitGrabbedObject([Optional] GameObject obj)
		{
		}

		[Token(Token = "0x6001B1B")]
		[Address(RVA = "0xD07D54", Offset = "0xD07D54", VA = "0xD07D54", Slot = "33")]
		protected virtual void InitPrimaryGrab(VRTK_InteractableObject currentGrabbedObject)
		{
		}

		[Token(Token = "0x6001B1C")]
		[Address(RVA = "0xD07EE8", Offset = "0xD07EE8", VA = "0xD07EE8", Slot = "34")]
		protected virtual void InitSecondaryGrab(VRTK_InteractableObject currentGrabbedObject)
		{
		}

		[Token(Token = "0x6001B1D")]
		[Address(RVA = "0xD07F30", Offset = "0xD07F30", VA = "0xD07F30", Slot = "35")]
		protected virtual void CheckInfluencingObjectOnRelease()
		{
		}

		[Token(Token = "0x6001B1E")]
		[Address(RVA = "0xD07FF0", Offset = "0xD07FF0", VA = "0xD07FF0", Slot = "36")]
		protected virtual void InitUngrabbedObject(bool applyGrabbingObjectVelocity)
		{
		}

		[Token(Token = "0x6001B1F")]
		[Address(RVA = "0xD08228", Offset = "0xD08228", VA = "0xD08228")]
		public void ClearUndroppable()
		{
		}

		[Token(Token = "0x6001B20")]
		[Address(RVA = "0xD0829C", Offset = "0xD0829C", VA = "0xD0829C", Slot = "37")]
		public virtual GameObject GetGrabbableObject()
		{
			return null;
		}

		[Token(Token = "0x6001B21")]
		[Address(RVA = "0xD083A0", Offset = "0xD083A0", VA = "0xD083A0", Slot = "38")]
		protected virtual void IncrementGrabState()
		{
		}

		[Token(Token = "0x6001B22")]
		[Address(RVA = "0xD08460", Offset = "0xD08460", VA = "0xD08460", Slot = "39")]
		protected virtual GameObject GetUndroppableObject(bool includeZones = true)
		{
			return null;
		}

		[Token(Token = "0x6001B23")]
		[Address(RVA = "0xD08580", Offset = "0xD08580", VA = "0xD08580", Slot = "40")]
		protected virtual void AttemptGrabObject()
		{
		}

		[Token(Token = "0x6001B24")]
		[Address(RVA = "0xD08644", Offset = "0xD08644", VA = "0xD08644", Slot = "41")]
		public virtual void PerformGrabAttempt(GameObject objectToGrab)
		{
		}

		[Token(Token = "0x6001B25")]
		[Address(RVA = "0xD086AC", Offset = "0xD086AC", VA = "0xD086AC", Slot = "42")]
		protected virtual bool ScriptValidGrab(VRTK_InteractableObject objectToGrabScript)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B26")]
		[Address(RVA = "0xD087E0", Offset = "0xD087E0", VA = "0xD087E0", Slot = "43")]
		protected virtual bool IsValidGrabAttempt(GameObject objectToGrab)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B27")]
		[Address(RVA = "0xD089AC", Offset = "0xD089AC", VA = "0xD089AC", Slot = "44")]
		protected virtual bool CanRelease()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B28")]
		[Address(RVA = "0xD08AB8", Offset = "0xD08AB8", VA = "0xD08AB8", Slot = "45")]
		protected virtual void AttemptReleaseObject()
		{
		}

		[Token(Token = "0x6001B29")]
		[Address(RVA = "0xD08B30", Offset = "0xD08B30", VA = "0xD08B30", Slot = "46")]
		protected virtual void DoGrabObject(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001B2A")]
		[Address(RVA = "0xD08BE4", Offset = "0xD08BE4", VA = "0xD08BE4", Slot = "47")]
		protected virtual void DoReleaseObject(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001B2B")]
		[Address(RVA = "0xD08C94", Offset = "0xD08C94", VA = "0xD08C94", Slot = "48")]
		protected virtual void CheckControllerAttachPointSet()
		{
		}

		[Token(Token = "0x6001B2C")]
		[Address(RVA = "0xD08D28", Offset = "0xD08D28", VA = "0xD08D28", Slot = "49")]
		protected virtual void CreateNonTouchingRigidbody()
		{
		}

		[Token(Token = "0x6001B2D")]
		[Address(RVA = "0xD08E7C", Offset = "0xD08E7C", VA = "0xD08E7C", Slot = "50")]
		protected virtual void CheckPrecognitionGrab()
		{
		}

		[Token(Token = "0x6001B2E")]
		[Address(RVA = "0xD08F8C", Offset = "0xD08F8C", VA = "0xD08F8C")]
		public VRTK_InteractGrab()
		{
		}
	}
	[Token(Token = "0x20003B5")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x63FC58", Offset = "0x63FC58")]
	public class VRTK_InteractNearTouch : MonoBehaviour
	{
		[Token(Token = "0x4001B2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x658868", Offset = "0x658868")]
		public float colliderRadius;

		[Token(Token = "0x4001B30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6588A0", Offset = "0x6588A0")]
		public GameObject customColliderContainer;

		[Token(Token = "0x4001B31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6588D8", Offset = "0x6588D8")]
		public VRTK_InteractTouch interactTouch;

		[Token(Token = "0x4001B32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected GameObject neartouchColliderContainer;

		[Token(Token = "0x4001B33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected List<GameObject> nearTouchedObjects;

		[Token(Token = "0x4001B34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected VRTK_InteractNearTouchCollider interactNearTouchColliderScript;

		[Token(Token = "0x140000E9")]
		public event ObjectInteractEventHandler ControllerNearTouchInteractableObject
		{
			[Token(Token = "0x6001B2F")]
			[Address(RVA = "0xD0AA48", Offset = "0xD0AA48", VA = "0xD0AA48")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66CA00", Offset = "0x66CA00")]
			add
			{
			}
			[Token(Token = "0x6001B30")]
			[Address(RVA = "0xD0AB34", Offset = "0xD0AB34", VA = "0xD0AB34")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66CA10", Offset = "0x66CA10")]
			remove
			{
			}
		}

		[Token(Token = "0x140000EA")]
		public event ObjectInteractEventHandler ControllerNearUntouchInteractableObject
		{
			[Token(Token = "0x6001B31")]
			[Address(RVA = "0xD0AC20", Offset = "0xD0AC20", VA = "0xD0AC20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66CA20", Offset = "0x66CA20")]
			add
			{
			}
			[Token(Token = "0x6001B32")]
			[Address(RVA = "0xD0AD0C", Offset = "0xD0AD0C", VA = "0xD0AD0C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66CA30", Offset = "0x66CA30")]
			remove
			{
			}
		}

		[Token(Token = "0x6001B33")]
		[Address(RVA = "0xD0ADF8", Offset = "0xD0ADF8", VA = "0xD0ADF8", Slot = "4")]
		public virtual void OnControllerNearTouchInteractableObject(ObjectInteractEventArgs e)
		{
		}

		[Token(Token = "0x6001B34")]
		[Address(RVA = "0xD0AE8C", Offset = "0xD0AE8C", VA = "0xD0AE8C", Slot = "5")]
		public virtual void OnControllerNearUntouchInteractableObject(ObjectInteractEventArgs e)
		{
		}

		[Token(Token = "0x6001B35")]
		[Address(RVA = "0xD0AF2C", Offset = "0xD0AF2C", VA = "0xD0AF2C", Slot = "6")]
		public virtual List<GameObject> GetNearTouchedObjects()
		{
			return null;
		}

		[Token(Token = "0x6001B36")]
		[Address(RVA = "0xD0AF34", Offset = "0xD0AF34", VA = "0xD0AF34", Slot = "7")]
		public virtual void ForceNearTouch(GameObject obj)
		{
		}

		[Token(Token = "0x6001B37")]
		[Address(RVA = "0xD0B038", Offset = "0xD0B038", VA = "0xD0B038", Slot = "8")]
		public virtual void ForceStopNearTouching([Optional] GameObject obj)
		{
		}

		[Token(Token = "0x6001B38")]
		[Address(RVA = "0xD0B21C", Offset = "0xD0B21C", VA = "0xD0B21C", Slot = "9")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6001B39")]
		[Address(RVA = "0xD0B498", Offset = "0xD0B498", VA = "0xD0B498", Slot = "10")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x6001B3A")]
		[Address(RVA = "0xD0B69C", Offset = "0xD0B69C", VA = "0xD0B69C", Slot = "11")]
		protected virtual void ControllerStartTouchInteractableObject(object sender, ObjectInteractEventArgs e)
		{
		}

		[Token(Token = "0x6001B3B")]
		[Address(RVA = "0xD0B6AC", Offset = "0xD0B6AC", VA = "0xD0B6AC", Slot = "12")]
		protected virtual void ControllerUntouchInteractableObject(object sender, ObjectInteractEventArgs e)
		{
		}

		[Token(Token = "0x6001B3C")]
		[Address(RVA = "0xD0B760", Offset = "0xD0B760", VA = "0xD0B760", Slot = "13")]
		protected virtual void CreateNearTouchCollider()
		{
		}

		[Token(Token = "0x6001B3D")]
		[Address(RVA = "0xD0BF3C", Offset = "0xD0BF3C", VA = "0xD0BF3C")]
		public VRTK_InteractNearTouch()
		{
		}
	}
	[Token(Token = "0x20003B6")]
	public class VRTK_InteractNearTouchCollider : MonoBehaviour
	{
		[Token(Token = "0x4001B37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected VRTK_InteractNearTouch interactNearTouch;

		[Token(Token = "0x4001B38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected List<GameObject> nearTouchedObjects;

		[Token(Token = "0x6001B3E")]
		[Address(RVA = "0xD0BFB8", Offset = "0xD0BFB8", VA = "0xD0BFB8", Slot = "4")]
		public virtual void SetInteractNearTouch(VRTK_InteractNearTouch givenInteractNearTouch)
		{
		}

		[Token(Token = "0x6001B3F")]
		[Address(RVA = "0xD0BFC0", Offset = "0xD0BFC0", VA = "0xD0BFC0", Slot = "5")]
		public virtual List<GameObject> GetNearTouchedObjects()
		{
			return null;
		}

		[Token(Token = "0x6001B40")]
		[Address(RVA = "0xD0BFC8", Offset = "0xD0BFC8", VA = "0xD0BFC8", Slot = "6")]
		public virtual void StartNearTouch(Collider collider)
		{
		}

		[Token(Token = "0x6001B41")]
		[Address(RVA = "0xD0C194", Offset = "0xD0C194", VA = "0xD0C194", Slot = "7")]
		public virtual void EndNearTouch(Collider collider)
		{
		}

		[Token(Token = "0x6001B42")]
		[Address(RVA = "0xD0C360", Offset = "0xD0C360", VA = "0xD0C360", Slot = "8")]
		protected virtual void OnTriggerEnter(Collider collider)
		{
		}

		[Token(Token = "0x6001B43")]
		[Address(RVA = "0xD0C3F4", Offset = "0xD0C3F4", VA = "0xD0C3F4", Slot = "9")]
		protected virtual void OnTriggerExit(Collider collider)
		{
		}

		[Token(Token = "0x6001B44")]
		[Address(RVA = "0xD0C494", Offset = "0xD0C494", VA = "0xD0C494", Slot = "10")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6001B45")]
		[Address(RVA = "0xD0C4F4", Offset = "0xD0C4F4", VA = "0xD0C4F4", Slot = "11")]
		protected virtual bool validObject(VRTK_InteractableObject checkObject)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B46")]
		[Address(RVA = "0xD0C5F4", Offset = "0xD0C5F4", VA = "0xD0C5F4")]
		public VRTK_InteractNearTouchCollider()
		{
		}
	}
	[Token(Token = "0x20003B7")]
	public struct ObjectInteractEventArgs
	{
		[Token(Token = "0x4001B39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VRTK_ControllerReference controllerReference;

		[Token(Token = "0x4001B3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public GameObject target;
	}
	[Token(Token = "0x20003B8")]
	public delegate void ObjectInteractEventHandler(object sender, ObjectInteractEventArgs e);
	[Token(Token = "0x20003B9")]
	public struct colliderSdzPair
	{
		[Token(Token = "0x4001B3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Collider collider;

		[Token(Token = "0x4001B3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public bool isSDZ;
	}
	[Token(Token = "0x20003BA")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x63FC90", Offset = "0x63FC90")]
	public class VRTK_InteractTouch : MonoBehaviour
	{
		[Token(Token = "0x4001B3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x658930", Offset = "0x658930")]
		public GameObject customColliderContainer;

		[Token(Token = "0x4001B44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected GameObject touchedObject;

		[Token(Token = "0x4001B45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		protected List<Collider> touchedObjectColliders;

		[Token(Token = "0x4001B46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		protected List<Collider> touchedObjectActiveColliders;

		[Token(Token = "0x4001B47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		protected GameObject controllerCollisionDetector;

		[Token(Token = "0x4001B48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		protected bool destroyColliderOnDisable;

		[Token(Token = "0x4001B49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		protected bool triggerIsColliding;

		[Token(Token = "0x4001B4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x72")]
		protected bool triggerWasColliding;

		[Token(Token = "0x4001B4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x73")]
		protected bool rigidBodyForcedActive;

		[Token(Token = "0x4001B4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		protected Rigidbody touchRigidBody;

		[Token(Token = "0x4001B4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		protected VRTK_TrackedController trackedController;

		[Token(Token = "0x4001B4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		protected VRTK_InteractGrab vrtk_grab;

		[Token(Token = "0x4001B4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		protected bool _allowTouchWhenGrabbing;

		[Token(Token = "0x4001B50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected static string _SDZ;

		[Token(Token = "0x4001B51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static colliderSdzPair[] _sdzPairs;

		[Token(Token = "0x4001B52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static int _sdzCount;

		[Token(Token = "0x4001B53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private static bool enable_sdz_optimisation;

		[Token(Token = "0x170001CB")]
		protected VRTK_ControllerReference controllerReference
		{
			[Token(Token = "0x6001B57")]
			[Address(RVA = "0xD11914", Offset = "0xD11914", VA = "0xD11914")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001CC")]
		public bool allowTouchWhenGrabbing
		{
			[Token(Token = "0x6001B58")]
			[Address(RVA = "0xD11990", Offset = "0xD11990", VA = "0xD11990")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001B59")]
			[Address(RVA = "0xD11998", Offset = "0xD11998", VA = "0xD11998")]
			set
			{
			}
		}

		[Token(Token = "0x140000EB")]
		public event ObjectInteractEventHandler ControllerStartTouchInteractableObject
		{
			[Token(Token = "0x6001B4B")]
			[Address(RVA = "0xD0B3AC", Offset = "0xD0B3AC", VA = "0xD0B3AC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66CA40", Offset = "0x66CA40")]
			add
			{
			}
			[Token(Token = "0x6001B4C")]
			[Address(RVA = "0xD0B5B0", Offset = "0xD0B5B0", VA = "0xD0B5B0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66CA50", Offset = "0x66CA50")]
			remove
			{
			}
		}

		[Token(Token = "0x140000EC")]
		public event ObjectInteractEventHandler ControllerTouchInteractableObject
		{
			[Token(Token = "0x6001B4D")]
			[Address(RVA = "0xD0678C", Offset = "0xD0678C", VA = "0xD0678C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66CA60", Offset = "0x66CA60")]
			add
			{
			}
			[Token(Token = "0x6001B4E")]
			[Address(RVA = "0xD065B4", Offset = "0xD065B4", VA = "0xD065B4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66CA70", Offset = "0x66CA70")]
			remove
			{
			}
		}

		[Token(Token = "0x140000ED")]
		public event ObjectInteractEventHandler ControllerStartUntouchInteractableObject
		{
			[Token(Token = "0x6001B4F")]
			[Address(RVA = "0xD1138C", Offset = "0xD1138C", VA = "0xD1138C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66CA80", Offset = "0x66CA80")]
			add
			{
			}
			[Token(Token = "0x6001B50")]
			[Address(RVA = "0xD11478", Offset = "0xD11478", VA = "0xD11478")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66CA90", Offset = "0x66CA90")]
			remove
			{
			}
		}

		[Token(Token = "0x140000EE")]
		public event ObjectInteractEventHandler ControllerUntouchInteractableObject
		{
			[Token(Token = "0x6001B51")]
			[Address(RVA = "0xD06878", Offset = "0xD06878", VA = "0xD06878")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66CAA0", Offset = "0x66CAA0")]
			add
			{
			}
			[Token(Token = "0x6001B52")]
			[Address(RVA = "0xD066A0", Offset = "0xD066A0", VA = "0xD066A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66CAB0", Offset = "0x66CAB0")]
			remove
			{
			}
		}

		[Token(Token = "0x140000EF")]
		public event ObjectInteractEventHandler ControllerRigidbodyActivated
		{
			[Token(Token = "0x6001B53")]
			[Address(RVA = "0xD11564", Offset = "0xD11564", VA = "0xD11564")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66CAC0", Offset = "0x66CAC0")]
			add
			{
			}
			[Token(Token = "0x6001B54")]
			[Address(RVA = "0xD11650", Offset = "0xD11650", VA = "0xD11650")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66CAD0", Offset = "0x66CAD0")]
			remove
			{
			}
		}

		[Token(Token = "0x140000F0")]
		public event ObjectInteractEventHandler ControllerRigidbodyDeactivated
		{
			[Token(Token = "0x6001B55")]
			[Address(RVA = "0xD1173C", Offset = "0xD1173C", VA = "0xD1173C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66CAE0", Offset = "0x66CAE0")]
			add
			{
			}
			[Token(Token = "0x6001B56")]
			[Address(RVA = "0xD11828", Offset = "0xD11828", VA = "0xD11828")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66CAF0", Offset = "0x66CAF0")]
			remove
			{
			}
		}

		[Token(Token = "0x6001B5A")]
		[Address(RVA = "0xD119A4", Offset = "0xD119A4", VA = "0xD119A4", Slot = "4")]
		public virtual void OnControllerStartTouchInteractableObject(ObjectInteractEventArgs e)
		{
		}

		[Token(Token = "0x6001B5B")]
		[Address(RVA = "0xD119D0", Offset = "0xD119D0", VA = "0xD119D0", Slot = "5")]
		public virtual void OnControllerTouchInteractableObject(ObjectInteractEventArgs e)
		{
		}

		[Token(Token = "0x6001B5C")]
		[Address(RVA = "0xD119FC", Offset = "0xD119FC", VA = "0xD119FC", Slot = "6")]
		public virtual void OnControllerStartUntouchInteractableObject(ObjectInteractEventArgs e)
		{
		}

		[Token(Token = "0x6001B5D")]
		[Address(RVA = "0xD11A28", Offset = "0xD11A28", VA = "0xD11A28", Slot = "7")]
		public virtual void OnControllerUntouchInteractableObject(ObjectInteractEventArgs e)
		{
		}

		[Token(Token = "0x6001B5E")]
		[Address(RVA = "0xD11A54", Offset = "0xD11A54", VA = "0xD11A54", Slot = "8")]
		public virtual void OnControllerRigidbodyActivated(ObjectInteractEventArgs e)
		{
		}

		[Token(Token = "0x6001B5F")]
		[Address(RVA = "0xD11A80", Offset = "0xD11A80", VA = "0xD11A80", Slot = "9")]
		public virtual void OnControllerRigidbodyDeactivated(ObjectInteractEventArgs e)
		{
		}

		[Token(Token = "0x6001B60")]
		[Address(RVA = "0xD11AAC", Offset = "0xD11AAC", VA = "0xD11AAC", Slot = "10")]
		public virtual ObjectInteractEventArgs SetControllerInteractEvent(GameObject target)
		{
			return default(ObjectInteractEventArgs);
		}

		[Token(Token = "0x6001B61")]
		[Address(RVA = "0xD11AD0", Offset = "0xD11AD0", VA = "0xD11AD0", Slot = "11")]
		public virtual void ForceTouch(GameObject obj)
		{
		}

		[Token(Token = "0x6001B62")]
		[Address(RVA = "0xD11BC8", Offset = "0xD11BC8", VA = "0xD11BC8", Slot = "12")]
		public virtual GameObject GetTouchedObject()
		{
			return null;
		}

		[Token(Token = "0x6001B63")]
		[Address(RVA = "0xD11BD0", Offset = "0xD11BD0", VA = "0xD11BD0", Slot = "13")]
		public virtual bool IsObjectInteractable(GameObject obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B64")]
		[Address(RVA = "0xD11CDC", Offset = "0xD11CDC", VA = "0xD11CDC", Slot = "14")]
		public virtual void ToggleControllerRigidBody(bool state, bool forceToggle = false)
		{
		}

		[Token(Token = "0x6001B65")]
		[Address(RVA = "0xD11E80", Offset = "0xD11E80", VA = "0xD11E80", Slot = "15")]
		public virtual bool IsRigidBodyActive()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B66")]
		[Address(RVA = "0xD11EBC", Offset = "0xD11EBC", VA = "0xD11EBC", Slot = "16")]
		public virtual bool IsRigidBodyForcedActive()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B67")]
		[Address(RVA = "0xD11F00", Offset = "0xD11F00", VA = "0xD11F00", Slot = "17")]
		public virtual void ForceStopTouching()
		{
		}

		[Token(Token = "0x6001B68")]
		[Address(RVA = "0xD11F98", Offset = "0xD11F98", VA = "0xD11F98", Slot = "18")]
		public virtual Collider[] ControllerColliders()
		{
			return null;
		}

		[Token(Token = "0x6001B69")]
		[Address(RVA = "0xD1204C", Offset = "0xD1204C", VA = "0xD1204C", Slot = "19")]
		public virtual SDK_BaseController.ControllerType GetControllerType()
		{
			return default(SDK_BaseController.ControllerType);
		}

		[Token(Token = "0x6001B6A")]
		[Address(RVA = "0xD120F0", Offset = "0xD120F0", VA = "0xD120F0", Slot = "20")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6001B6B")]
		[Address(RVA = "0xD122BC", Offset = "0xD122BC", VA = "0xD122BC", Slot = "21")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6001B6C")]
		[Address(RVA = "0xD1244C", Offset = "0xD1244C", VA = "0xD1244C", Slot = "22")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x6001B6D")]
		[Address(RVA = "0xD12548", Offset = "0xD12548", VA = "0xD12548", Slot = "23")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x6001B6E")]
		[Address(RVA = "0xD125B0", Offset = "0xD125B0", VA = "0xD125B0", Slot = "24")]
		protected virtual void OnTriggerEnter(Collider collider)
		{
		}

		[Token(Token = "0x6001B6F")]
		[Address(RVA = "0xD12864", Offset = "0xD12864", VA = "0xD12864", Slot = "25")]
		protected virtual void OnTriggerExit(Collider collider)
		{
		}

		[Token(Token = "0x6001B70")]
		[Address(RVA = "0xD128D4", Offset = "0xD128D4", VA = "0xD128D4", Slot = "26")]
		protected virtual void OnTriggerStay(Collider collider)
		{
		}

		[Token(Token = "0x6001B71")]
		[Address(RVA = "0xD12D34", Offset = "0xD12D34", VA = "0xD12D34", Slot = "27")]
		protected virtual void FixedUpdate()
		{
		}

		[Token(Token = "0x6001B72")]
		[Address(RVA = "0xD12D90", Offset = "0xD12D90", VA = "0xD12D90", Slot = "28")]
		protected virtual void LateUpdate()
		{
		}

		[Token(Token = "0x6001B73")]
		[Address(RVA = "0xD12E14", Offset = "0xD12E14", VA = "0xD12E14", Slot = "29")]
		protected virtual void DoControllerModelAvailable(object sender, VRTKTrackedControllerEventArgs e)
		{
		}

		[Token(Token = "0x6001B74")]
		[Address(RVA = "0xD12E24", Offset = "0xD12E24", VA = "0xD12E24", Slot = "30")]
		protected virtual GameObject GetColliderInteractableObject(Collider collider)
		{
			return null;
		}

		[Token(Token = "0x6001B75")]
		[Address(RVA = "0xD12EE4", Offset = "0xD12EE4", VA = "0xD12EE4", Slot = "31")]
		protected virtual void AddActiveCollider(Collider collider)
		{
		}

		[Token(Token = "0x6001B76")]
		[Address(RVA = "0xD12FBC", Offset = "0xD12FBC", VA = "0xD12FBC", Slot = "32")]
		protected virtual void StoreTouchedObjectColliders(Collider collider)
		{
		}

		[Token(Token = "0x6001B77")]
		[Address(RVA = "0xD130F4", Offset = "0xD130F4", VA = "0xD130F4", Slot = "33")]
		protected virtual void ToggleControllerVisibility(bool visible)
		{
		}

		[Token(Token = "0x6001B78")]
		[Address(RVA = "0xD1326C", Offset = "0xD1326C", VA = "0xD1326C", Slot = "34")]
		protected virtual void CheckStopTouching()
		{
		}

		[Token(Token = "0x6001B79")]
		[Address(RVA = "0xD133CC", Offset = "0xD133CC", VA = "0xD133CC", Slot = "35")]
		protected virtual GameObject TriggerStart(Collider collider)
		{
			return null;
		}

		[Token(Token = "0x6001B7A")]
		[Address(RVA = "0xD12174", Offset = "0xD12174", VA = "0xD12174")]
		private void FlushColliderSDZList()
		{
		}

		[Token(Token = "0x6001B7B")]
		[Address(RVA = "0xD1343C", Offset = "0xD1343C", VA = "0xD1343C", Slot = "36")]
		protected virtual bool IsSnapDropZone(Collider collider)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B7C")]
		[Address(RVA = "0xD13804", Offset = "0xD13804", VA = "0xD13804", Slot = "37")]
		protected virtual bool IsSnapDropZone_slow(Collider collider)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B7D")]
		[Address(RVA = "0xD138F0", Offset = "0xD138F0", VA = "0xD138F0", Slot = "38")]
		protected virtual void StopTouching(GameObject untouched)
		{
		}

		[Token(Token = "0x6001B7E")]
		[Address(RVA = "0xD13A90", Offset = "0xD13A90", VA = "0xD13A90", Slot = "39")]
		protected virtual void CleanupEndTouch()
		{
		}

		[Token(Token = "0x6001B7F")]
		[Address(RVA = "0xD13B18", Offset = "0xD13B18", VA = "0xD13B18", Slot = "40")]
		protected virtual void DestroyTouchCollider()
		{
		}

		[Token(Token = "0x6001B80")]
		[Address(RVA = "0xD13B98", Offset = "0xD13B98", VA = "0xD13B98", Slot = "41")]
		protected virtual bool CustomRigidBodyIsChild()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B81")]
		[Address(RVA = "0xD13CEC", Offset = "0xD13CEC", VA = "0xD13CEC", Slot = "42")]
		protected virtual void CreateTouchCollider()
		{
		}

		[Token(Token = "0x6001B82")]
		[Address(RVA = "0xD14420", Offset = "0xD14420", VA = "0xD14420", Slot = "43")]
		protected virtual void CreateTouchRigidBody()
		{
		}

		[Token(Token = "0x6001B83")]
		[Address(RVA = "0xD14580", Offset = "0xD14580", VA = "0xD14580", Slot = "44")]
		protected virtual void EmitControllerRigidbodyEvent(bool state)
		{
		}

		[Token(Token = "0x6001B84")]
		[Address(RVA = "0xD145D8", Offset = "0xD145D8", VA = "0xD145D8")]
		public VRTK_InteractTouch()
		{
		}
	}
	[Token(Token = "0x20003BB")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x63FCC8", Offset = "0x63FCC8")]
	public class VRTK_InteractUse : MonoBehaviour
	{
		[Token(Token = "0x4001B54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6589C8", Offset = "0x6589C8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6589C8", Offset = "0x6589C8")]
		public VRTK_ControllerEvents.ButtonAlias useButton;

		[Token(Token = "0x4001B55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private VRTK_ControllerEvents.ButtonAlias _alternateUseButton;

		[Token(Token = "0x4001B56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int _useFlag;

		[Token(Token = "0x4001B57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x658A28", Offset = "0x658A28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x658A28", Offset = "0x658A28")]
		public VRTK_ControllerEvents controllerEvents;

		[Token(Token = "0x4001B58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x658A88", Offset = "0x658A88")]
		public VRTK_InteractTouch interactTouch;

		[Token(Token = "0x4001B59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x658AC0", Offset = "0x658AC0")]
		public VRTK_InteractGrab interactGrab;

		[Token(Token = "0x4001B60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		protected VRTK_ControllerEvents.ButtonAlias subscribedUseButton;

		[Token(Token = "0x4001B61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		protected VRTK_ControllerEvents.ButtonAlias savedUseButton;

		[Token(Token = "0x4001B62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		protected bool usePressed;

		[Token(Token = "0x4001B63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		protected GameObject usingObject;

		[Token(Token = "0x170001CD")]
		protected VRTK_ControllerReference controllerReference
		{
			[Token(Token = "0x6001B92")]
			[Address(RVA = "0xD15208", Offset = "0xD15208", VA = "0xD15208")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x140000F1")]
		public event ControllerInteractionEventHandler UseButtonPressed
		{
			[Token(Token = "0x6001B86")]
			[Address(RVA = "0xD146F8", Offset = "0xD146F8", VA = "0xD146F8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66CB00", Offset = "0x66CB00")]
			add
			{
			}
			[Token(Token = "0x6001B87")]
			[Address(RVA = "0xD147E4", Offset = "0xD147E4", VA = "0xD147E4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66CB10", Offset = "0x66CB10")]
			remove
			{
			}
		}

		[Token(Token = "0x140000F2")]
		public event ControllerInteractionEventHandler UseButtonReleased
		{
			[Token(Token = "0x6001B88")]
			[Address(RVA = "0xD148D0", Offset = "0xD148D0", VA = "0xD148D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66CB20", Offset = "0x66CB20")]
			add
			{
			}
			[Token(Token = "0x6001B89")]
			[Address(RVA = "0xD149BC", Offset = "0xD149BC", VA = "0xD149BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66CB30", Offset = "0x66CB30")]
			remove
			{
			}
		}

		[Token(Token = "0x140000F3")]
		public event ObjectInteractEventHandler ControllerStartUseInteractableObject
		{
			[Token(Token = "0x6001B8A")]
			[Address(RVA = "0xD14AA8", Offset = "0xD14AA8", VA = "0xD14AA8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66CB40", Offset = "0x66CB40")]
			add
			{
			}
			[Token(Token = "0x6001B8B")]
			[Address(RVA = "0xD14B94", Offset = "0xD14B94", VA = "0xD14B94")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66CB50", Offset = "0x66CB50")]
			remove
			{
			}
		}

		[Token(Token = "0x140000F4")]
		public event ObjectInteractEventHandler ControllerUseInteractableObject
		{
			[Token(Token = "0x6001B8C")]
			[Address(RVA = "0xD14C80", Offset = "0xD14C80", VA = "0xD14C80")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66CB60", Offset = "0x66CB60")]
			add
			{
			}
			[Token(Token = "0x6001B8D")]
			[Address(RVA = "0xD14D6C", Offset = "0xD14D6C", VA = "0xD14D6C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66CB70", Offset = "0x66CB70")]
			remove
			{
			}
		}

		[Token(Token = "0x140000F5")]
		public event ObjectInteractEventHandler ControllerStartUnuseInteractableObject
		{
			[Token(Token = "0x6001B8E")]
			[Address(RVA = "0xD14E58", Offset = "0xD14E58", VA = "0xD14E58")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66CB80", Offset = "0x66CB80")]
			add
			{
			}
			[Token(Token = "0x6001B8F")]
			[Address(RVA = "0xD14F44", Offset = "0xD14F44", VA = "0xD14F44")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66CB90", Offset = "0x66CB90")]
			remove
			{
			}
		}

		[Token(Token = "0x140000F6")]
		public event ObjectInteractEventHandler ControllerUnuseInteractableObject
		{
			[Token(Token = "0x6001B90")]
			[Address(RVA = "0xD15030", Offset = "0xD15030", VA = "0xD15030")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66CBA0", Offset = "0x66CBA0")]
			add
			{
			}
			[Token(Token = "0x6001B91")]
			[Address(RVA = "0xD1511C", Offset = "0xD1511C", VA = "0xD1511C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66CBB0", Offset = "0x66CBB0")]
			remove
			{
			}
		}

		[Token(Token = "0x6001B93")]
		[Address(RVA = "0xD152CC", Offset = "0xD152CC", VA = "0xD152CC", Slot = "4")]
		public virtual void OnControllerStartUseInteractableObject(ObjectInteractEventArgs e)
		{
		}

		[Token(Token = "0x6001B94")]
		[Address(RVA = "0xD152F8", Offset = "0xD152F8", VA = "0xD152F8", Slot = "5")]
		public virtual void OnControllerUseInteractableObject(ObjectInteractEventArgs e)
		{
		}

		[Token(Token = "0x6001B95")]
		[Address(RVA = "0xD15324", Offset = "0xD15324", VA = "0xD15324", Slot = "6")]
		public virtual void OnControllerStartUnuseInteractableObject(ObjectInteractEventArgs e)
		{
		}

		[Token(Token = "0x6001B96")]
		[Address(RVA = "0xD15350", Offset = "0xD15350", VA = "0xD15350", Slot = "7")]
		public virtual void OnControllerUnuseInteractableObject(ObjectInteractEventArgs e)
		{
		}

		[Token(Token = "0x6001B97")]
		[Address(RVA = "0xD1537C", Offset = "0xD1537C", VA = "0xD1537C", Slot = "8")]
		public virtual void OnUseButtonPressed(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001B98")]
		[Address(RVA = "0xD153C8", Offset = "0xD153C8", VA = "0xD153C8", Slot = "9")]
		public virtual void OnUseButtonReleased(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001B99")]
		[Address(RVA = "0xD15414", Offset = "0xD15414", VA = "0xD15414", Slot = "10")]
		public virtual bool IsUseButtonPressed()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B9A")]
		[Address(RVA = "0xD1541C", Offset = "0xD1541C", VA = "0xD1541C", Slot = "11")]
		public virtual GameObject GetUsingObject()
		{
			return null;
		}

		[Token(Token = "0x6001B9B")]
		[Address(RVA = "0xD15424", Offset = "0xD15424", VA = "0xD15424", Slot = "12")]
		public virtual void ForceStopUsing()
		{
		}

		[Token(Token = "0x6001B9C")]
		[Address(RVA = "0xD154B8", Offset = "0xD154B8", VA = "0xD154B8", Slot = "13")]
		public virtual void ForceResetUsing()
		{
		}

		[Token(Token = "0x6001B9D")]
		[Address(RVA = "0xD15550", Offset = "0xD15550", VA = "0xD15550", Slot = "14")]
		public virtual void AttemptUse()
		{
		}

		[Token(Token = "0x6001B9E")]
		[Address(RVA = "0xD15560", Offset = "0xD15560", VA = "0xD15560")]
		public void AddAlternateUseButton(VRTK_ControllerEvents.ButtonAlias alternateUseButton)
		{
		}

		[Token(Token = "0x6001B9F")]
		[Address(RVA = "0xD15720", Offset = "0xD15720", VA = "0xD15720")]
		public void RemoveAlternateGrabButton()
		{
		}

		[Token(Token = "0x6001BA0")]
		[Address(RVA = "0xD15828", Offset = "0xD15828", VA = "0xD15828", Slot = "15")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6001BA1")]
		[Address(RVA = "0xD15B6C", Offset = "0xD15B6C", VA = "0xD15B6C", Slot = "16")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x6001BA2")]
		[Address(RVA = "0xD15BC0", Offset = "0xD15BC0", VA = "0xD15BC0", Slot = "17")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x6001BA3")]
		[Address(RVA = "0xD15BD4", Offset = "0xD15BD4", VA = "0xD15BD4", Slot = "18")]
		protected virtual void ManageInteractTouchListener(bool state)
		{
		}

		[Token(Token = "0x6001BA4")]
		[Address(RVA = "0xD15DA8", Offset = "0xD15DA8", VA = "0xD15DA8", Slot = "19")]
		protected virtual void ControllerTouchInteractableObject(object sender, ObjectInteractEventArgs e)
		{
		}

		[Token(Token = "0x6001BA5")]
		[Address(RVA = "0xD15EC4", Offset = "0xD15EC4", VA = "0xD15EC4", Slot = "20")]
		protected virtual void ControllerUntouchInteractableObject(object sender, ObjectInteractEventArgs e)
		{
		}

		[Token(Token = "0x6001BA6")]
		[Address(RVA = "0xD15FF4", Offset = "0xD15FF4", VA = "0xD15FF4", Slot = "21")]
		protected virtual void ManageUseListener(bool state)
		{
		}

		[Token(Token = "0x6001BA7")]
		[Address(RVA = "0xD1624C", Offset = "0xD1624C", VA = "0xD1624C", Slot = "22")]
		protected virtual bool IsObjectUsable(GameObject obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6001BA8")]
		[Address(RVA = "0xD163CC", Offset = "0xD163CC", VA = "0xD163CC", Slot = "23")]
		protected virtual bool IsObjectHoldOnUse(GameObject obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6001BA9")]
		[Address(RVA = "0xD164B4", Offset = "0xD164B4", VA = "0xD164B4", Slot = "24")]
		protected virtual int GetObjectUsingState(GameObject obj)
		{
			return default(int);
		}

		[Token(Token = "0x6001BAA")]
		[Address(RVA = "0xD16594", Offset = "0xD16594", VA = "0xD16594", Slot = "25")]
		protected virtual void SetObjectUsingState(GameObject obj, int value)
		{
		}

		[Token(Token = "0x6001BAB")]
		[Address(RVA = "0xD16678", Offset = "0xD16678", VA = "0xD16678", Slot = "26")]
		protected virtual void ToggleControllerVisibility(bool visible)
		{
		}

		[Token(Token = "0x6001BAC")]
		[Address(RVA = "0xD167B0", Offset = "0xD167B0", VA = "0xD167B0", Slot = "27")]
		protected virtual void UseInteractedObject(GameObject touchedObject)
		{
		}

		[Token(Token = "0x6001BAD")]
		[Address(RVA = "0xD16A5C", Offset = "0xD16A5C", VA = "0xD16A5C", Slot = "28")]
		protected virtual void UnuseInteractedObject(bool completeStop)
		{
		}

		[Token(Token = "0x6001BAE")]
		[Address(RVA = "0xD16C48", Offset = "0xD16C48", VA = "0xD16C48", Slot = "29")]
		protected virtual GameObject GetFromGrab()
		{
			return null;
		}

		[Token(Token = "0x6001BAF")]
		[Address(RVA = "0xD16CEC", Offset = "0xD16CEC", VA = "0xD16CEC", Slot = "30")]
		protected virtual void StopUsing()
		{
		}

		[Token(Token = "0x6001BB0")]
		[Address(RVA = "0xD16D34", Offset = "0xD16D34", VA = "0xD16D34", Slot = "31")]
		protected virtual void AttemptUseObject()
		{
		}

		[Token(Token = "0x6001BB1")]
		[Address(RVA = "0xD16FD0", Offset = "0xD16FD0", VA = "0xD16FD0", Slot = "32")]
		protected virtual void DoStartUseObject(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001BB2")]
		[Address(RVA = "0xD17098", Offset = "0xD17098", VA = "0xD17098", Slot = "33")]
		protected virtual void DoStopUseObject(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001BB3")]
		[Address(RVA = "0xD171A0", Offset = "0xD171A0", VA = "0xD171A0")]
		public VRTK_InteractUse()
		{
		}
	}
	[Token(Token = "0x20003BC")]
	public delegate void ObjectAutoGrabEventHandler(object sender);
	[Token(Token = "0x20003BD")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x63FD00", Offset = "0x63FD00")]
	public class VRTK_ObjectAutoGrab : MonoBehaviour
	{
		[Token(Token = "0x2000802")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x645DD8", Offset = "0x645DD8")]
		private sealed class <AutoGrab>d__18 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002A6C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002A6D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002A6E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VRTK_ObjectAutoGrab <>4__this;

			[Token(Token = "0x17000333")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60032BE")]
				[Address(RVA = "0xA84BB4", Offset = "0xA84BB4", VA = "0xA84BB4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000334")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60032C0")]
				[Address(RVA = "0xA84C24", Offset = "0xA84C24", VA = "0xA84C24", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60032BB")]
			[Address(RVA = "0xA84010", Offset = "0xA84010", VA = "0xA84010")]
			[DebuggerHidden]
			public <AutoGrab>d__18(int <>1__state)
			{
			}

			[Token(Token = "0x60032BC")]
			[Address(RVA = "0xA842C0", Offset = "0xA842C0", VA = "0xA842C0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60032BD")]
			[Address(RVA = "0xA842C4", Offset = "0xA842C4", VA = "0xA842C4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60032BF")]
			[Address(RVA = "0xA84BBC", Offset = "0xA84BBC", VA = "0xA84BBC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001B64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x658B58", Offset = "0x658B58")]
		public VRTK_InteractableObject objectToGrab;

		[Token(Token = "0x4001B65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x658B90", Offset = "0x658B90")]
		public bool objectIsPrefab;

		[Token(Token = "0x4001B66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x658BC8", Offset = "0x658BC8")]
		public bool cloneGrabbedObject;

		[Token(Token = "0x4001B67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x658C00", Offset = "0x658C00")]
		public bool alwaysCloneOnEnable;

		[Token(Token = "0x4001B68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x23")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x658C38", Offset = "0x658C38")]
		public bool attemptSecondaryGrab;

		[Token(Token = "0x4001B69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x658C70", Offset = "0x658C70")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x658C70", Offset = "0x658C70")]
		public VRTK_InteractTouch interactTouch;

		[Token(Token = "0x4001B6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x658CD0", Offset = "0x658CD0")]
		public VRTK_InteractGrab interactGrab;

		[Token(Token = "0x4001B6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x658D08", Offset = "0x658D08")]
		public VRTK_InteractTouch secondaryInteractTouch;

		[Token(Token = "0x4001B6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x658D40", Offset = "0x658D40")]
		public VRTK_InteractGrab secondaryInteractGrab;

		[Token(Token = "0x4001B6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected VRTK_InteractableObject previousClonedObject;

		[Token(Token = "0x4001B6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		protected Coroutine autoGrabRoutine;

		[Token(Token = "0x140000F7")]
		public event ObjectAutoGrabEventHandler ObjectAutoGrabCompleted
		{
			[Token(Token = "0x6001BB8")]
			[Address(RVA = "0xA83D3C", Offset = "0xA83D3C", VA = "0xA83D3C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66CBC0", Offset = "0x66CBC0")]
			add
			{
			}
			[Token(Token = "0x6001BB9")]
			[Address(RVA = "0xA83E28", Offset = "0xA83E28", VA = "0xA83E28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66CBD0", Offset = "0x66CBD0")]
			remove
			{
			}
		}

		[Token(Token = "0x6001BBA")]
		[Address(RVA = "0xA83F14", Offset = "0xA83F14", VA = "0xA83F14", Slot = "4")]
		public virtual void OnObjectAutoGrabCompleted()
		{
		}

		[Token(Token = "0x6001BBB")]
		[Address(RVA = "0xA83F30", Offset = "0xA83F30", VA = "0xA83F30", Slot = "5")]
		public virtual void ClearPreviousClone()
		{
		}

		[Token(Token = "0x6001BBC")]
		[Address(RVA = "0xA83F38", Offset = "0xA83F38", VA = "0xA83F38", Slot = "6")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6001BBD")]
		[Address(RVA = "0xA83F88", Offset = "0xA83F88", VA = "0xA83F88", Slot = "7")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x6001BBE")]
		[Address(RVA = "0xA83F9C", Offset = "0xA83F9C", VA = "0xA83F9C", Slot = "8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x66CBE0", Offset = "0x66CBE0")]
		protected virtual IEnumerator AutoGrab()
		{
			return null;
		}

		[Token(Token = "0x6001BBF")]
		[Address(RVA = "0xA8403C", Offset = "0xA8403C", VA = "0xA8403C", Slot = "9")]
		protected virtual void AttemptSecondaryGrab(VRTK_InteractableObject grabbableObject)
		{
		}

		[Token(Token = "0x6001BC0")]
		[Address(RVA = "0xA842B8", Offset = "0xA842B8", VA = "0xA842B8")]
		public VRTK_ObjectAutoGrab()
		{
		}
	}
	[Token(Token = "0x20003BE")]
	public class VRTK_ControllerHaptics : MonoBehaviour
	{
		[Token(Token = "0x2000803")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x645DE8", Offset = "0x645DE8")]
		private sealed class <SimpleHapticPulseRoutine>d__12 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002A6F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002A70")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002A71")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float pulseInterval;

			[Token(Token = "0x4002A72")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public VRTK_ControllerReference controllerReference;

			[Token(Token = "0x4002A73")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float hapticPulseStrength;

			[Token(Token = "0x4002A74")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public float duration;

			[Token(Token = "0x17000335")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60032C4")]
				[Address(RVA = "0xA1AFA4", Offset = "0xA1AFA4", VA = "0xA1AFA4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000336")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60032C6")]
				[Address(RVA = "0xA1B014", Offset = "0xA1B014", VA = "0xA1B014", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60032C1")]
			[Address(RVA = "0xA1A9FC", Offset = "0xA1A9FC", VA = "0xA1A9FC")]
			[DebuggerHidden]
			public <SimpleHapticPulseRoutine>d__12(int <>1__state)
			{
			}

			[Token(Token = "0x60032C2")]
			[Address(RVA = "0xA1AE9C", Offset = "0xA1AE9C", VA = "0xA1AE9C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60032C3")]
			[Address(RVA = "0xA1AEA0", Offset = "0xA1AEA0", VA = "0xA1AEA0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60032C5")]
			[Address(RVA = "0xA1AFAC", Offset = "0xA1AFAC", VA = "0xA1AFAC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000804")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x645DF8", Offset = "0x645DF8")]
		private sealed class <AudioClipHapticsRoutine>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002A75")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002A76")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002A77")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public AudioClip clip;

			[Token(Token = "0x4002A78")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public VRTK_ControllerReference controllerReference;

			[Token(Token = "0x4002A79")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private SDK_ControllerHapticModifiers <hapticModifiers>5__2;

			[Token(Token = "0x4002A7A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <hapticScalar>5__3;

			[Token(Token = "0x4002A7B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private float[] <audioData>5__4;

			[Token(Token = "0x4002A7C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private int <sampleOffset>5__5;

			[Token(Token = "0x4002A7D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			private float <startTime>5__6;

			[Token(Token = "0x4002A7E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private float <length>5__7;

			[Token(Token = "0x4002A7F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			private float <endTime>5__8;

			[Token(Token = "0x4002A80")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private float <sampleRate>5__9;

			[Token(Token = "0x17000337")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60032CA")]
				[Address(RVA = "0xA1AE24", Offset = "0xA1AE24", VA = "0xA1AE24", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000338")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60032CC")]
				[Address(RVA = "0xA1AE94", Offset = "0xA1AE94", VA = "0xA1AE94", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60032C7")]
			[Address(RVA = "0xA1AAC0", Offset = "0xA1AAC0", VA = "0xA1AAC0")]
			[DebuggerHidden]
			public <AudioClipHapticsRoutine>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x60032C8")]
			[Address(RVA = "0xA1AB5C", Offset = "0xA1AB5C", VA = "0xA1AB5C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60032C9")]
			[Address(RVA = "0xA1AB60", Offset = "0xA1AB60", VA = "0xA1AB60", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60032CB")]
			[Address(RVA = "0xA1AE2C", Offset = "0xA1AE2C", VA = "0xA1AE2C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001B70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected static VRTK_ControllerHaptics instance;

		[Token(Token = "0x4001B71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected Dictionary<VRTK_ControllerReference, Coroutine> hapticLoopCoroutines;

		[Token(Token = "0x6001BC1")]
		[Address(RVA = "0xA1A06C", Offset = "0xA1A06C", VA = "0xA1A06C")]
		public static void TriggerHapticPulse(VRTK_ControllerReference controllerReference, float strength)
		{
		}

		[Token(Token = "0x6001BC2")]
		[Address(RVA = "0xA1A260", Offset = "0xA1A260", VA = "0xA1A260")]
		public static void TriggerHapticPulse(VRTK_ControllerReference controllerReference, float strength, float duration, float pulseInterval)
		{
		}

		[Token(Token = "0x6001BC3")]
		[Address(RVA = "0xA1A35C", Offset = "0xA1A35C", VA = "0xA1A35C")]
		public static void TriggerHapticPulse(VRTK_ControllerReference controllerReference, AudioClip clip)
		{
		}

		[Token(Token = "0x6001BC4")]
		[Address(RVA = "0xA1A430", Offset = "0xA1A430", VA = "0xA1A430")]
		public static void CancelHapticPulse(VRTK_ControllerReference controllerReference)
		{
		}

		[Token(Token = "0x6001BC5")]
		[Address(RVA = "0xA1A4FC", Offset = "0xA1A4FC", VA = "0xA1A4FC", Slot = "4")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x6001BC6")]
		[Address(RVA = "0xA1A14C", Offset = "0xA1A14C", VA = "0xA1A14C")]
		protected static void SetupInstance()
		{
		}

		[Token(Token = "0x6001BC7")]
		[Address(RVA = "0xA1A568", Offset = "0xA1A568", VA = "0xA1A568", Slot = "5")]
		protected virtual void InternalTriggerHapticPulse(VRTK_ControllerReference controllerReference, float strength)
		{
		}

		[Token(Token = "0x6001BC8")]
		[Address(RVA = "0xA1A638", Offset = "0xA1A638", VA = "0xA1A638", Slot = "6")]
		protected virtual void InternalTriggerHapticPulse(VRTK_ControllerReference controllerReference, float strength, float duration, float pulseInterval)
		{
		}

		[Token(Token = "0x6001BC9")]
		[Address(RVA = "0xA1A78C", Offset = "0xA1A78C", VA = "0xA1A78C", Slot = "7")]
		protected virtual void InternalTriggerHapticPulse(VRTK_ControllerReference controllerReference, AudioClip clip)
		{
		}

		[Token(Token = "0x6001BCA")]
		[Address(RVA = "0xA1A87C", Offset = "0xA1A87C", VA = "0xA1A87C", Slot = "8")]
		protected virtual void InternalCancelHapticPulse(VRTK_ControllerReference controllerReference)
		{
		}

		[Token(Token = "0x6001BCB")]
		[Address(RVA = "0xA1A934", Offset = "0xA1A934", VA = "0xA1A934", Slot = "9")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x66CC44", Offset = "0x66CC44")]
		protected virtual IEnumerator SimpleHapticPulseRoutine(VRTK_ControllerReference controllerReference, float duration, float hapticPulseStrength, float pulseInterval)
		{
			return null;
		}

		[Token(Token = "0x6001BCC")]
		[Address(RVA = "0xA1AA28", Offset = "0xA1AA28", VA = "0xA1AA28", Slot = "10")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x66CCA8", Offset = "0x66CCA8")]
		protected virtual IEnumerator AudioClipHapticsRoutine(VRTK_ControllerReference controllerReference, AudioClip clip)
		{
			return null;
		}

		[Token(Token = "0x6001BCD")]
		[Address(RVA = "0xA1AAEC", Offset = "0xA1AAEC", VA = "0xA1AAEC")]
		public VRTK_ControllerHaptics()
		{
		}
	}
	[Token(Token = "0x20003BF")]
	public class VRTK_ObjectAppearance : MonoBehaviour
	{
		[Token(Token = "0x2000805")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x645E08", Offset = "0x645E08")]
		private sealed class <TransitionRendererOpacity>d__19 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002A81")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002A82")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002A83")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float initialAlpha;

			[Token(Token = "0x4002A84")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public float targetAlpha;

			[Token(Token = "0x4002A85")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float transitionDuration;

			[Token(Token = "0x4002A86")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public VRTK_ObjectAppearance <>4__this;

			[Token(Token = "0x4002A87")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public GameObject model;

			[Token(Token = "0x4002A88")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private float <elapsedTime>5__2;

			[Token(Token = "0x17000339")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60032D0")]
				[Address(RVA = "0xA83CC4", Offset = "0xA83CC4", VA = "0xA83CC4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700033A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60032D2")]
				[Address(RVA = "0xA83D34", Offset = "0xA83D34", VA = "0xA83D34", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60032CD")]
			[Address(RVA = "0xA83A44", Offset = "0xA83A44", VA = "0xA83A44")]
			[DebuggerHidden]
			public <TransitionRendererOpacity>d__19(int <>1__state)
			{
			}

			[Token(Token = "0x60032CE")]
			[Address(RVA = "0xA83B70", Offset = "0xA83B70", VA = "0xA83B70", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60032CF")]
			[Address(RVA = "0xA83B74", Offset = "0xA83B74", VA = "0xA83B74", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60032D1")]
			[Address(RVA = "0xA83CCC", Offset = "0xA83CCC", VA = "0xA83CCC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001B72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected static VRTK_ObjectAppearance instance;

		[Token(Token = "0x4001B73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected Dictionary<GameObject, Coroutine> setOpacityCoroutines;

		[Token(Token = "0x6001BCE")]
		[Address(RVA = "0xA81FBC", Offset = "0xA81FBC", VA = "0xA81FBC")]
		public static void SetOpacity(GameObject model, float alpha, float transitionDuration = 0f)
		{
		}

		[Token(Token = "0x6001BCF")]
		[Address(RVA = "0xA821B8", Offset = "0xA821B8", VA = "0xA821B8")]
		public static void SetRendererVisible(GameObject model, [Optional] GameObject ignoredModel)
		{
		}

		[Token(Token = "0x6001BD0")]
		[Address(RVA = "0xA8228C", Offset = "0xA8228C", VA = "0xA8228C")]
		public static void SetRendererHidden(GameObject model, [Optional] GameObject ignoredModel)
		{
		}

		[Token(Token = "0x6001BD1")]
		[Address(RVA = "0xA82360", Offset = "0xA82360", VA = "0xA82360")]
		public static void ToggleRenderer(bool state, GameObject model, [Optional] GameObject ignoredModel)
		{
		}

		[Token(Token = "0x6001BD2")]
		[Address(RVA = "0xA8237C", Offset = "0xA8237C", VA = "0xA8237C")]
		public static bool IsRendererVisible(GameObject model, [Optional] GameObject ignoredModel)
		{
			return default(bool);
		}

		[Token(Token = "0x6001BD3")]
		[Address(RVA = "0xA82574", Offset = "0xA82574", VA = "0xA82574")]
		public static void HighlightObject(GameObject model, Color? highlightColor, float fadeDuration = 0f)
		{
		}

		[Token(Token = "0x6001BD4")]
		[Address(RVA = "0xA82678", Offset = "0xA82678", VA = "0xA82678")]
		public static void UnhighlightObject(GameObject model)
		{
		}

		[Token(Token = "0x6001BD5")]
		[Address(RVA = "0xA82744", Offset = "0xA82744", VA = "0xA82744", Slot = "4")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x6001BD6")]
		[Address(RVA = "0xA820A4", Offset = "0xA820A4", VA = "0xA820A4")]
		protected static void SetupInstance()
		{
		}

		[Token(Token = "0x6001BD7")]
		[Address(RVA = "0xA82894", Offset = "0xA82894", VA = "0xA82894", Slot = "5")]
		protected virtual void InternalSetOpacity(GameObject model, float alpha, float transitionDuration = 0f)
		{
		}

		[Token(Token = "0x6001BD8")]
		[Address(RVA = "0xA829F4", Offset = "0xA829F4", VA = "0xA829F4", Slot = "6")]
		protected virtual void InternalSetRendererVisible(GameObject model, [Optional] GameObject ignoredModel)
		{
		}

		[Token(Token = "0x6001BD9")]
		[Address(RVA = "0xA82C00", Offset = "0xA82C00", VA = "0xA82C00", Slot = "7")]
		protected virtual void InternalSetRendererHidden(GameObject model, [Optional] GameObject ignoredModel)
		{
		}

		[Token(Token = "0x6001BDA")]
		[Address(RVA = "0xA82E0C", Offset = "0xA82E0C", VA = "0xA82E0C", Slot = "8")]
		protected virtual void InternalHighlightObject(GameObject model, Color? highlightColor, float fadeDuration = 0f)
		{
		}

		[Token(Token = "0x6001BDB")]
		[Address(RVA = "0xA82F94", Offset = "0xA82F94", VA = "0xA82F94", Slot = "9")]
		protected virtual void InternalUnhighlightObject(GameObject model)
		{
		}

		[Token(Token = "0x6001BDC")]
		[Address(RVA = "0xA830A8", Offset = "0xA830A8", VA = "0xA830A8", Slot = "10")]
		protected virtual void EmitControllerEvents(GameObject model, bool state)
		{
		}

		[Token(Token = "0x6001BDD")]
		[Address(RVA = "0xA83320", Offset = "0xA83320", VA = "0xA83320", Slot = "11")]
		protected virtual void ChangeRendererOpacity(GameObject model, float alpha)
		{
		}

		[Token(Token = "0x6001BDE")]
		[Address(RVA = "0xA83884", Offset = "0xA83884", VA = "0xA83884", Slot = "12")]
		protected virtual float GetInitialAlpha(GameObject model)
		{
			return default(float);
		}

		[Token(Token = "0x6001BDF")]
		[Address(RVA = "0xA83960", Offset = "0xA83960", VA = "0xA83960", Slot = "13")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x66CD0C", Offset = "0x66CD0C")]
		protected virtual IEnumerator TransitionRendererOpacity(GameObject model, float initialAlpha, float targetAlpha, float transitionDuration)
		{
			return null;
		}

		[Token(Token = "0x6001BE0")]
		[Address(RVA = "0xA83A70", Offset = "0xA83A70", VA = "0xA83A70", Slot = "14")]
		protected virtual void CancelSetOpacityCoroutine(GameObject model)
		{
		}

		[Token(Token = "0x6001BE1")]
		[Address(RVA = "0xA83B00", Offset = "0xA83B00", VA = "0xA83B00")]
		public VRTK_ObjectAppearance()
		{
		}
	}
	[Token(Token = "0x20003C0")]
	public class MinMaxRangeAttribute : PropertyAttribute
	{
		[Token(Token = "0x4001B74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public readonly float max;

		[Token(Token = "0x4001B75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly float min;

		[Token(Token = "0x6001BE2")]
		[Address(RVA = "0xDD69C8", Offset = "0xDD69C8", VA = "0xDD69C8")]
		public MinMaxRangeAttribute(float min, float max)
		{
		}
	}
	[Token(Token = "0x20003C1")]
	public class ObsoleteInspectorAttribute : PropertyAttribute
	{
		[Token(Token = "0x6001BE3")]
		[Address(RVA = "0xDD8E14", Offset = "0xDD8E14", VA = "0xDD8E14")]
		public ObsoleteInspectorAttribute()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003C2")]
	public class Limits2D
	{
		[Token(Token = "0x4001B76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float minimum;

		[Token(Token = "0x4001B77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float maximum;

		[Token(Token = "0x170001CE")]
		public static Limits2D zero
		{
			[Token(Token = "0x6001BE4")]
			[Address(RVA = "0xDC8B94", Offset = "0xDC8B94", VA = "0xDC8B94")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001BE5")]
		[Address(RVA = "0xDC7834", Offset = "0xDC7834", VA = "0xDC7834")]
		public Limits2D(float min, float max)
		{
		}

		[Token(Token = "0x6001BE6")]
		[Address(RVA = "0xDD60D8", Offset = "0xDD60D8", VA = "0xDD60D8")]
		public Limits2D(Vector2 limits)
		{
		}

		[Token(Token = "0x6001BE7")]
		[Address(RVA = "0xDCB43C", Offset = "0xDCB43C", VA = "0xDCB43C")]
		public bool WithinLimits(float value)
		{
			return default(bool);
		}

		[Token(Token = "0x6001BE8")]
		[Address(RVA = "0xDD6110", Offset = "0xDD6110", VA = "0xDD6110")]
		public Vector2 AsVector2()
		{
			return default(Vector2);
		}
	}
	[Serializable]
	[Token(Token = "0x20003C3")]
	public class Vector3State
	{
		[Token(Token = "0x4001B78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool xState;

		[Token(Token = "0x4001B79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public bool yState;

		[Token(Token = "0x4001B7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
		public bool zState;

		[Token(Token = "0x170001CF")]
		public static Vector3State False
		{
			[Token(Token = "0x6001BE9")]
			[Address(RVA = "0x8FD340", Offset = "0x8FD340", VA = "0x8FD340")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001D0")]
		public static Vector3State True
		{
			[Token(Token = "0x6001BEA")]
			[Address(RVA = "0x8FD3F4", Offset = "0x8FD3F4", VA = "0x8FD3F4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001BEB")]
		[Address(RVA = "0x8FD3A4", Offset = "0x8FD3A4", VA = "0x8FD3A4")]
		public Vector3State(bool x, bool y, bool z)
		{
		}
	}
	[Token(Token = "0x20003C4")]
	public struct CollisionTrackerEventArgs
	{
		[Token(Token = "0x4001B7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool isTrigger;

		[Token(Token = "0x4001B7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Collision collision;

		[Token(Token = "0x4001B7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Collider collider;
	}
	[Token(Token = "0x20003C5")]
	public delegate void CollisionTrackerEventHandler(object sender, CollisionTrackerEventArgs e);
	[Token(Token = "0x20003C6")]
	public class VRTK_CollisionTracker : MonoBehaviour
	{
		[Token(Token = "0x140000F8")]
		public event CollisionTrackerEventHandler CollisionEnter
		{
			[Token(Token = "0x6001BF0")]
			[Address(RVA = "0xAFC10C", Offset = "0xAFC10C", VA = "0xAFC10C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66CD70", Offset = "0x66CD70")]
			add
			{
			}
			[Token(Token = "0x6001BF1")]
			[Address(RVA = "0xAFC4BC", Offset = "0xAFC4BC", VA = "0xAFC4BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66CD80", Offset = "0x66CD80")]
			remove
			{
			}
		}

		[Token(Token = "0x140000F9")]
		public event CollisionTrackerEventHandler CollisionStay
		{
			[Token(Token = "0x6001BF2")]
			[Address(RVA = "0xB064AC", Offset = "0xB064AC", VA = "0xB064AC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66CD90", Offset = "0x66CD90")]
			add
			{
			}
			[Token(Token = "0x6001BF3")]
			[Address(RVA = "0xB06598", Offset = "0xB06598", VA = "0xB06598")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66CDA0", Offset = "0x66CDA0")]
			remove
			{
			}
		}

		[Token(Token = "0x140000FA")]
		public event CollisionTrackerEventHandler CollisionExit
		{
			[Token(Token = "0x6001BF4")]
			[Address(RVA = "0xAFC1F8", Offset = "0xAFC1F8", VA = "0xAFC1F8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66CDB0", Offset = "0x66CDB0")]
			add
			{
			}
			[Token(Token = "0x6001BF5")]
			[Address(RVA = "0xAFC5A8", Offset = "0xAFC5A8", VA = "0xAFC5A8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66CDC0", Offset = "0x66CDC0")]
			remove
			{
			}
		}

		[Token(Token = "0x140000FB")]
		public event CollisionTrackerEventHandler TriggerEnter
		{
			[Token(Token = "0x6001BF6")]
			[Address(RVA = "0xAFC2E4", Offset = "0xAFC2E4", VA = "0xAFC2E4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66CDD0", Offset = "0x66CDD0")]
			add
			{
			}
			[Token(Token = "0x6001BF7")]
			[Address(RVA = "0xAFC694", Offset = "0xAFC694", VA = "0xAFC694")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66CDE0", Offset = "0x66CDE0")]
			remove
			{
			}
		}

		[Token(Token = "0x140000FC")]
		public event CollisionTrackerEventHandler TriggerStay
		{
			[Token(Token = "0x6001BF8")]
			[Address(RVA = "0xB06684", Offset = "0xB06684", VA = "0xB06684")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66CDF0", Offset = "0x66CDF0")]
			add
			{
			}
			[Token(Token = "0x6001BF9")]
			[Address(RVA = "0xB06770", Offset = "0xB06770", VA = "0xB06770")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66CE00", Offset = "0x66CE00")]
			remove
			{
			}
		}

		[Token(Token = "0x140000FD")]
		public event CollisionTrackerEventHandler TriggerExit
		{
			[Token(Token = "0x6001BFA")]
			[Address(RVA = "0xAFC3D0", Offset = "0xAFC3D0", VA = "0xAFC3D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66CE10", Offset = "0x66CE10")]
			add
			{
			}
			[Token(Token = "0x6001BFB")]
			[Address(RVA = "0xAFC780", Offset = "0xAFC780", VA = "0xAFC780")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66CE20", Offset = "0x66CE20")]
			remove
			{
			}
		}

		[Token(Token = "0x6001BFC")]
		[Address(RVA = "0xB0685C", Offset = "0xB0685C", VA = "0xB0685C")]
		protected void OnCollisionEnterEvent(CollisionTrackerEventArgs e)
		{
		}

		[Token(Token = "0x6001BFD")]
		[Address(RVA = "0xB068A0", Offset = "0xB068A0", VA = "0xB068A0")]
		protected void OnCollisionStayEvent(CollisionTrackerEventArgs e)
		{
		}

		[Token(Token = "0x6001BFE")]
		[Address(RVA = "0xB068E4", Offset = "0xB068E4", VA = "0xB068E4")]
		protected void OnCollisionExitEvent(CollisionTrackerEventArgs e)
		{
		}

		[Token(Token = "0x6001BFF")]
		[Address(RVA = "0xB06928", Offset = "0xB06928", VA = "0xB06928")]
		protected void OnTriggerEnterEvent(CollisionTrackerEventArgs e)
		{
		}

		[Token(Token = "0x6001C00")]
		[Address(RVA = "0xB0696C", Offset = "0xB0696C", VA = "0xB0696C")]
		protected void OnTriggerStayEvent(CollisionTrackerEventArgs e)
		{
		}

		[Token(Token = "0x6001C01")]
		[Address(RVA = "0xB069B0", Offset = "0xB069B0", VA = "0xB069B0")]
		protected void OnTriggerExitEvent(CollisionTrackerEventArgs e)
		{
		}

		[Token(Token = "0x6001C02")]
		[Address(RVA = "0xB069F4", Offset = "0xB069F4", VA = "0xB069F4", Slot = "4")]
		protected virtual void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x6001C03")]
		[Address(RVA = "0xB06A8C", Offset = "0xB06A8C", VA = "0xB06A8C", Slot = "5")]
		protected virtual void OnCollisionStay(Collision collision)
		{
		}

		[Token(Token = "0x6001C04")]
		[Address(RVA = "0xB06B24", Offset = "0xB06B24", VA = "0xB06B24", Slot = "6")]
		protected virtual void OnCollisionExit(Collision collision)
		{
		}

		[Token(Token = "0x6001C05")]
		[Address(RVA = "0xB06BBC", Offset = "0xB06BBC", VA = "0xB06BBC", Slot = "7")]
		protected virtual void OnTriggerEnter(Collider collider)
		{
		}

		[Token(Token = "0x6001C06")]
		[Address(RVA = "0xB06C38", Offset = "0xB06C38", VA = "0xB06C38", Slot = "8")]
		protected virtual void OnTriggerStay(Collider collider)
		{
		}

		[Token(Token = "0x6001C07")]
		[Address(RVA = "0xB06CB4", Offset = "0xB06CB4", VA = "0xB06CB4", Slot = "9")]
		protected virtual void OnTriggerExit(Collider collider)
		{
		}

		[Token(Token = "0x6001C08")]
		[Address(RVA = "0xB06D30", Offset = "0xB06D30", VA = "0xB06D30", Slot = "10")]
		protected virtual CollisionTrackerEventArgs SetCollisionTrackerEvent(bool isTrigger, Collision givenCollision, Collider givenCollider)
		{
			return default(CollisionTrackerEventArgs);
		}

		[Token(Token = "0x6001C09")]
		[Address(RVA = "0xB06D4C", Offset = "0xB06D4C", VA = "0xB06D4C")]
		public VRTK_CollisionTracker()
		{
		}
	}
	[Token(Token = "0x20003C7")]
	public class VRTK_ControllerReference : IEquatable<VRTK_ControllerReference>
	{
		[Token(Token = "0x4001B84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Dictionary<uint, VRTK_ControllerReference> controllerReferences;

		[Token(Token = "0x4001B85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected uint storedControllerIndex;

		[Token(Token = "0x170001D1")]
		public uint index
		{
			[Token(Token = "0x6001C12")]
			[Address(RVA = "0xA1E4F4", Offset = "0xA1E4F4", VA = "0xA1E4F4")]
			get
			{
				return default(uint);
			}
		}

		[Token(Token = "0x170001D2")]
		public GameObject scriptAlias
		{
			[Token(Token = "0x6001C13")]
			[Address(RVA = "0xA1E70C", Offset = "0xA1E70C", VA = "0xA1E70C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001D3")]
		public GameObject actual
		{
			[Token(Token = "0x6001C14")]
			[Address(RVA = "0xA1E77C", Offset = "0xA1E77C", VA = "0xA1E77C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001D4")]
		public GameObject model
		{
			[Token(Token = "0x6001C15")]
			[Address(RVA = "0xA1E7EC", Offset = "0xA1E7EC", VA = "0xA1E7EC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001D5")]
		public SDK_BaseController.ControllerHand hand
		{
			[Token(Token = "0x6001C16")]
			[Address(RVA = "0xA1E86C", Offset = "0xA1E86C", VA = "0xA1E86C")]
			get
			{
				return default(SDK_BaseController.ControllerHand);
			}
		}

		[Token(Token = "0x6001C0A")]
		[Address(RVA = "0xA1DE48", Offset = "0xA1DE48", VA = "0xA1DE48")]
		public static VRTK_ControllerReference GetControllerReference(uint controllerIndex)
		{
			return null;
		}

		[Token(Token = "0x6001C0B")]
		[Address(RVA = "0xA1DFF4", Offset = "0xA1DFF4", VA = "0xA1DFF4")]
		public static VRTK_ControllerReference GetControllerReference(GameObject controllerObject)
		{
			return null;
		}

		[Token(Token = "0x6001C0C")]
		[Address(RVA = "0xA1E2F0", Offset = "0xA1E2F0", VA = "0xA1E2F0")]
		public static VRTK_ControllerReference GetControllerReference(SDK_BaseController.ControllerHand controllerHand)
		{
			return null;
		}

		[Token(Token = "0x6001C0D")]
		[Address(RVA = "0xA1E45C", Offset = "0xA1E45C", VA = "0xA1E45C")]
		public static bool IsValid(VRTK_ControllerReference controllerReference)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C0E")]
		[Address(RVA = "0xA1E480", Offset = "0xA1E480", VA = "0xA1E480")]
		public static uint GetRealIndex(VRTK_ControllerReference controllerReference)
		{
			return default(uint);
		}

		[Token(Token = "0x6001C0F")]
		[Address(RVA = "0xA1DF08", Offset = "0xA1DF08", VA = "0xA1DF08")]
		public VRTK_ControllerReference(uint controllerIndex)
		{
		}

		[Token(Token = "0x6001C10")]
		[Address(RVA = "0xA1E3E0", Offset = "0xA1E3E0", VA = "0xA1E3E0")]
		public VRTK_ControllerReference(GameObject controllerObject)
		{
		}

		[Token(Token = "0x6001C11")]
		[Address(RVA = "0xA1E640", Offset = "0xA1E640", VA = "0xA1E640")]
		public VRTK_ControllerReference(SDK_BaseController.ControllerHand controllerHand)
		{
		}

		[Token(Token = "0x6001C17")]
		[Address(RVA = "0xA1E470", Offset = "0xA1E470", VA = "0xA1E470")]
		public bool IsValid()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C18")]
		[Address(RVA = "0xA1E8E8", Offset = "0xA1E8E8", VA = "0xA1E8E8", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6001C19")]
		[Address(RVA = "0xA1ED88", Offset = "0xA1ED88", VA = "0xA1ED88", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x6001C1A")]
		[Address(RVA = "0xA1ED90", Offset = "0xA1ED90", VA = "0xA1ED90", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C1B")]
		[Address(RVA = "0xA1EE3C", Offset = "0xA1EE3C", VA = "0xA1EE3C", Slot = "4")]
		public bool Equals(VRTK_ControllerReference other)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C1C")]
		[Address(RVA = "0xA1EE5C", Offset = "0xA1EE5C", VA = "0xA1EE5C", Slot = "5")]
		protected virtual GameObject GetValidObjectFromIndex()
		{
			return null;
		}

		[Token(Token = "0x6001C1D")]
		[Address(RVA = "0xA1EF50", Offset = "0xA1EF50", VA = "0xA1EF50", Slot = "6")]
		protected virtual void AddToCache()
		{
		}

		[Token(Token = "0x6001C1E")]
		[Address(RVA = "0xA1E13C", Offset = "0xA1E13C", VA = "0xA1E13C")]
		private static GameObject GetValidObjectFromHand(SDK_BaseController.ControllerHand controllerHand)
		{
			return null;
		}

		[Token(Token = "0x6001C1F")]
		[Address(RVA = "0xA1E4FC", Offset = "0xA1E4FC", VA = "0xA1E4FC")]
		private static SDK_BaseController.ControllerHand GetControllerHand(GameObject controllerObject)
		{
			return default(SDK_BaseController.ControllerHand);
		}
	}
	[Token(Token = "0x20003C8")]
	public static class Bezier
	{
		[Token(Token = "0x6001C21")]
		[Address(RVA = "0xCC5934", Offset = "0xCC5934", VA = "0xCC5934")]
		public static Vector3 GetPoint(Vector3 p0, Vector3 p1, Vector3 p2, float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001C22")]
		[Address(RVA = "0xCC5AC0", Offset = "0xCC5AC0", VA = "0xCC5AC0")]
		public static Vector3 GetFirstDerivative(Vector3 p0, Vector3 p1, Vector3 p2, float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001C23")]
		[Address(RVA = "0xCC5C1C", Offset = "0xCC5C1C", VA = "0xCC5C1C")]
		public static Vector3 GetPoint(Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3, float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001C24")]
		[Address(RVA = "0xCC5E14", Offset = "0xCC5E14", VA = "0xCC5E14")]
		public static Vector3 GetFirstDerivative(Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3, float t)
		{
			return default(Vector3);
		}
	}
	[Token(Token = "0x20003C9")]
	public class VRTK_CurveGenerator : MonoBehaviour
	{
		[Token(Token = "0x2000806")]
		public enum BezierControlPointMode
		{
			[Token(Token = "0x4002A8A")]
			Free,
			[Token(Token = "0x4002A8B")]
			Aligned,
			[Token(Token = "0x4002A8C")]
			Mirrored
		}

		[Token(Token = "0x4001B86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected Vector3[] points;

		[Token(Token = "0x4001B87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected GameObject[] items;

		[Token(Token = "0x4001B88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected BezierControlPointMode[] modes;

		[Token(Token = "0x4001B89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected bool loop;

		[Token(Token = "0x4001B8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		protected int frequency;

		[Token(Token = "0x4001B8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected bool customTracer;

		[Token(Token = "0x4001B8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		protected bool rescalePointerTracer;

		[Token(Token = "0x4001B8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected GameObject tracerLineRenderer;

		[Token(Token = "0x4001B8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected LineRenderer customLineRenderer;

		[Token(Token = "0x4001B8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected bool lineRendererAndItem;

		[Token(Token = "0x170001D6")]
		protected virtual bool Loop
		{
			[Token(Token = "0x6001C2C")]
			[Address(RVA = "0xA2350C", Offset = "0xA2350C", VA = "0xA2350C", Slot = "11")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001C2D")]
			[Address(RVA = "0xA23514", Offset = "0xA23514", VA = "0xA23514", Slot = "12")]
			set
			{
			}
		}

		[Token(Token = "0x170001D7")]
		protected virtual int ControlPointCount
		{
			[Token(Token = "0x6001C2E")]
			[Address(RVA = "0xA23610", Offset = "0xA23610", VA = "0xA23610", Slot = "13")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001D8")]
		protected virtual int CurveCount
		{
			[Token(Token = "0x6001C32")]
			[Address(RVA = "0xA24064", Offset = "0xA24064", VA = "0xA24064", Slot = "17")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6001C25")]
		[Address(RVA = "0xA2282C", Offset = "0xA2282C", VA = "0xA2282C", Slot = "4")]
		public virtual void Create(int setFrequency, float radius, GameObject tracer, bool rescaleTracer = false)
		{
		}

		[Token(Token = "0x6001C26")]
		[Address(RVA = "0xA22F8C", Offset = "0xA22F8C", VA = "0xA22F8C", Slot = "5")]
		public virtual void SetPoints(Vector3[] controlPoints, Material material, Color color)
		{
		}

		[Token(Token = "0x6001C27")]
		[Address(RVA = "0xA22FFC", Offset = "0xA22FFC", VA = "0xA22FFC", Slot = "6")]
		public virtual Vector3[] GetPoints(Vector3[] controlPoints)
		{
			return null;
		}

		[Token(Token = "0x6001C28")]
		[Address(RVA = "0xA23154", Offset = "0xA23154", VA = "0xA23154", Slot = "7")]
		public virtual void TogglePoints(bool state)
		{
		}

		[Token(Token = "0x6001C29")]
		[Address(RVA = "0xA2322C", Offset = "0xA2322C", VA = "0xA2322C", Slot = "8")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x6001C2A")]
		[Address(RVA = "0xA232CC", Offset = "0xA232CC", VA = "0xA232CC", Slot = "9")]
		protected virtual void PointsInit(Vector3[] controlPoints)
		{
		}

		[Token(Token = "0x6001C2B")]
		[Address(RVA = "0xA23334", Offset = "0xA23334", VA = "0xA23334", Slot = "10")]
		protected virtual GameObject CreateSphere()
		{
			return null;
		}

		[Token(Token = "0x6001C2F")]
		[Address(RVA = "0xA2363C", Offset = "0xA2363C", VA = "0xA2363C", Slot = "14")]
		protected virtual Vector3 GetControlPoint(int index)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001C30")]
		[Address(RVA = "0xA23698", Offset = "0xA23698", VA = "0xA23698", Slot = "15")]
		protected virtual void SetControlPoint(int index, Vector3 point)
		{
		}

		[Token(Token = "0x6001C31")]
		[Address(RVA = "0xA23C98", Offset = "0xA23C98", VA = "0xA23C98", Slot = "16")]
		protected virtual void EnforceMode(int index)
		{
		}

		[Token(Token = "0x6001C33")]
		[Address(RVA = "0xA240AC", Offset = "0xA240AC", VA = "0xA240AC", Slot = "18")]
		protected virtual Vector3 GetPoint(float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001C34")]
		[Address(RVA = "0xA24334", Offset = "0xA24334", VA = "0xA24334", Slot = "19")]
		protected virtual void SetObjects(Material material, Color color)
		{
		}

		[Token(Token = "0x6001C35")]
		[Address(RVA = "0xA243E4", Offset = "0xA243E4", VA = "0xA243E4", Slot = "20")]
		protected virtual void SetPointData(Material material, Color color, float stepSize)
		{
		}

		[Token(Token = "0x6001C36")]
		[Address(RVA = "0xA245D0", Offset = "0xA245D0", VA = "0xA245D0", Slot = "21")]
		protected virtual void SetItemPosition(int currentIndex, Vector3 setPosition, Material material, Color color, float stepSize)
		{
		}

		[Token(Token = "0x6001C37")]
		[Address(RVA = "0xA24A2C", Offset = "0xA24A2C", VA = "0xA24A2C", Slot = "22")]
		protected virtual void SetItemMaterial(GameObject item, Material material, Color color)
		{
		}

		[Token(Token = "0x6001C38")]
		[Address(RVA = "0xA24BD0", Offset = "0xA24BD0", VA = "0xA24BD0", Slot = "23")]
		protected virtual void SetMaterial(Material material, Color color)
		{
		}

		[Token(Token = "0x6001C39")]
		[Address(RVA = "0xA24D84", Offset = "0xA24D84", VA = "0xA24D84")]
		public VRTK_CurveGenerator()
		{
		}
	}
	[Token(Token = "0x20003CA")]
	public static class VRTK_Defines
	{
		[Token(Token = "0x4001B90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly Version CurrentVersion;

		[Token(Token = "0x4001B91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static readonly Version[] PreviousVersions;

		[Token(Token = "0x4001B92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x658DE8", Offset = "0x658DE8")]
		private static string <CurrentExactVersionScriptingDefineSymbol>k__BackingField;

		[Token(Token = "0x4001B93")]
		public const string VersionScriptingDefineSymbolPrefix = "VRTK_VERSION_";

		[Token(Token = "0x4001B94")]
		public const string VersionScriptingDefineSymbolSuffix = "_OR_NEWER";

		[Token(Token = "0x170001D9")]
		public static string CurrentExactVersionScriptingDefineSymbol
		{
			[Token(Token = "0x6001C3A")]
			[Address(RVA = "0xA2699C", Offset = "0xA2699C", VA = "0xA2699C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66CE30", Offset = "0x66CE30")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001C3B")]
			[Address(RVA = "0xA26A04", Offset = "0xA26A04", VA = "0xA26A04")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66CE40", Offset = "0x66CE40")]
			private set
			{
			}
		}

		[Token(Token = "0x6001C3C")]
		[Address(RVA = "0xA26A70", Offset = "0xA26A70", VA = "0xA26A70")]
		static VRTK_Defines()
		{
		}

		[Token(Token = "0x6001C3D")]
		[Address(RVA = "0xA26C6C", Offset = "0xA26C6C", VA = "0xA26C6C")]
		private static string ExactVersionSymbol(Version version)
		{
			return null;
		}

		[Token(Token = "0x6001C3E")]
		[Address(RVA = "0xA26D1C", Offset = "0xA26D1C", VA = "0xA26D1C")]
		private static string AtLeastVersionSymbol(Version version)
		{
			return null;
		}
	}
	[Token(Token = "0x20003CB")]
	public class VRTK_EventSystem : EventSystem
	{
		[Token(Token = "0x2000807")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x645E18", Offset = "0x645E18")]
		private sealed class <SetEventSystemOfBaseInputModulesAfterFrameDelay>d__10 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002A8D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002A8E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002A8F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public EventSystem eventSystem;

			[Token(Token = "0x1700033B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60032D6")]
				[Address(RVA = "0xA33C98", Offset = "0xA33C98", VA = "0xA33C98", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700033C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60032D8")]
				[Address(RVA = "0xA33D08", Offset = "0xA33D08", VA = "0xA33D08", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60032D3")]
			[Address(RVA = "0xA33950", Offset = "0xA33950", VA = "0xA33950")]
			[DebuggerHidden]
			public <SetEventSystemOfBaseInputModulesAfterFrameDelay>d__10(int <>1__state)
			{
			}

			[Token(Token = "0x60032D4")]
			[Address(RVA = "0xA33BFC", Offset = "0xA33BFC", VA = "0xA33BFC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60032D5")]
			[Address(RVA = "0xA33C00", Offset = "0xA33C00", VA = "0xA33C00", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60032D7")]
			[Address(RVA = "0xA33CA0", Offset = "0xA33CA0", VA = "0xA33CA0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001B95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected EventSystem previousEventSystem;

		[Token(Token = "0x4001B96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		protected VRTK_VRInputModule vrInputModule;

		[Token(Token = "0x4001B97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly FieldInfo[] EVENT_SYSTEM_FIELD_INFOS;

		[Token(Token = "0x4001B98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly PropertyInfo[] EVENT_SYSTEM_PROPERTY_INFOS;

		[Token(Token = "0x4001B99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static readonly FieldInfo BASE_INPUT_MODULE_EVENT_SYSTEM_FIELD_INFO;

		[Token(Token = "0x6001C3F")]
		[Address(RVA = "0xA331BC", Offset = "0xA331BC", VA = "0xA331BC", Slot = "5")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6001C40")]
		[Address(RVA = "0xA33578", Offset = "0xA33578", VA = "0xA33578", Slot = "7")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x6001C41")]
		[Address(RVA = "0xA33794", Offset = "0xA33794", VA = "0xA33794", Slot = "18")]
		protected override void Update()
		{
		}

		[Token(Token = "0x6001C42")]
		[Address(RVA = "0xA3394C", Offset = "0xA3394C", VA = "0xA3394C", Slot = "17")]
		protected override void OnApplicationFocus(bool hasFocus)
		{
		}

		[Token(Token = "0x6001C43")]
		[Address(RVA = "0xA33320", Offset = "0xA33320", VA = "0xA33320")]
		private static void CopyValuesFrom(EventSystem fromEventSystem, EventSystem toEventSystem)
		{
		}

		[Token(Token = "0x6001C44")]
		[Address(RVA = "0xA33504", Offset = "0xA33504", VA = "0xA33504")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x66CE50", Offset = "0x66CE50")]
		private static IEnumerator SetEventSystemOfBaseInputModulesAfterFrameDelay(EventSystem eventSystem)
		{
			return null;
		}

		[Token(Token = "0x6001C45")]
		[Address(RVA = "0xA33668", Offset = "0xA33668", VA = "0xA33668")]
		private static void SetEventSystemOfBaseInputModules(EventSystem eventSystem)
		{
		}

		[Token(Token = "0x6001C46")]
		[Address(RVA = "0xA3397C", Offset = "0xA3397C", VA = "0xA3397C")]
		public VRTK_EventSystem()
		{
		}
	}
	[Token(Token = "0x20003CC")]
	public class VRTK_Logger : MonoBehaviour
	{
		[Token(Token = "0x2000808")]
		public enum LogLevels
		{
			[Token(Token = "0x4002A91")]
			Trace,
			[Token(Token = "0x4002A92")]
			Debug,
			[Token(Token = "0x4002A93")]
			Info,
			[Token(Token = "0x4002A94")]
			Warn,
			[Token(Token = "0x4002A95")]
			Error,
			[Token(Token = "0x4002A96")]
			Fatal,
			[Token(Token = "0x4002A97")]
			None
		}

		[Token(Token = "0x2000809")]
		public enum CommonMessageKeys
		{
			[Token(Token = "0x4002A99")]
			NOT_DEFINED,
			[Token(Token = "0x4002A9A")]
			REQUIRED_COMPONENT_MISSING_FROM_SCENE,
			[Token(Token = "0x4002A9B")]
			REQUIRED_COMPONENT_MISSING_FROM_GAMEOBJECT,
			[Token(Token = "0x4002A9C")]
			REQUIRED_COMPONENT_MISSING_FROM_PARAMETER,
			[Token(Token = "0x4002A9D")]
			REQUIRED_COMPONENT_MISSING_NOT_INJECTED,
			[Token(Token = "0x4002A9E")]
			COULD_NOT_FIND_OBJECT_FOR_ACTION,
			[Token(Token = "0x4002A9F")]
			SDK_OBJECT_NOT_FOUND,
			[Token(Token = "0x4002AA0")]
			SDK_NOT_FOUND,
			[Token(Token = "0x4002AA1")]
			SDK_MANAGER_ERRORS,
			[Token(Token = "0x4002AA2")]
			SCRIPTING_DEFINE_SYMBOLS_ADDED,
			[Token(Token = "0x4002AA3")]
			SCRIPTING_DEFINE_SYMBOLS_REMOVED,
			[Token(Token = "0x4002AA4")]
			SCRIPTING_DEFINE_SYMBOLS_NOT_FOUND
		}

		[Serializable]
		[Token(Token = "0x200080A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x645E28", Offset = "0x645E28")]
		private sealed class <>c
		{
			[Token(Token = "0x4002AA5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002AA6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Match, int> <>9__7_0;

			[Token(Token = "0x60032DA")]
			[Address(RVA = "0xA7FC90", Offset = "0xA7FC90", VA = "0xA7FC90")]
			public <>c()
			{
			}

			[Token(Token = "0x60032DB")]
			[Address(RVA = "0xA7FC98", Offset = "0xA7FC98", VA = "0xA7FC98")]
			internal int <CreateIfNotExists>b__7_0(Match m)
			{
				return default(int);
			}
		}

		[Token(Token = "0x4001B9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static VRTK_Logger instance;

		[Token(Token = "0x4001B9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Dictionary<CommonMessageKeys, string> commonMessages;

		[Token(Token = "0x4001B9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Dictionary<CommonMessageKeys, int> commonMessageParts;

		[Token(Token = "0x4001B9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LogLevels minLevel;

		[Token(Token = "0x4001B9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool throwExceptions;

		[Token(Token = "0x6001C48")]
		[Address(RVA = "0xA7EC8C", Offset = "0xA7EC8C", VA = "0xA7EC8C")]
		public static void CreateIfNotExists()
		{
		}

		[Token(Token = "0x6001C49")]
		[Address(RVA = "0xA7F1CC", Offset = "0xA7F1CC", VA = "0xA7F1CC")]
		public static string GetCommonMessage(CommonMessageKeys messageKey, params object[] parameters)
		{
			return null;
		}

		[Token(Token = "0x6001C4A")]
		[Address(RVA = "0xA7F314", Offset = "0xA7F314", VA = "0xA7F314")]
		public static void Trace(string message)
		{
		}

		[Token(Token = "0x6001C4B")]
		[Address(RVA = "0xA7F590", Offset = "0xA7F590", VA = "0xA7F590")]
		public static void Debug(string message)
		{
		}

		[Token(Token = "0x6001C4C")]
		[Address(RVA = "0xA7F5FC", Offset = "0xA7F5FC", VA = "0xA7F5FC")]
		public static void Info(string message)
		{
		}

		[Token(Token = "0x6001C4D")]
		[Address(RVA = "0xA7F668", Offset = "0xA7F668", VA = "0xA7F668")]
		public static void Warn(string message)
		{
		}

		[Token(Token = "0x6001C4E")]
		[Address(RVA = "0xA7F6D4", Offset = "0xA7F6D4", VA = "0xA7F6D4")]
		public static void Error(string message, bool forcePause = false)
		{
		}

		[Token(Token = "0x6001C4F")]
		[Address(RVA = "0xA7F74C", Offset = "0xA7F74C", VA = "0xA7F74C")]
		public static void Fatal(string message, bool forcePause = false)
		{
		}

		[Token(Token = "0x6001C50")]
		[Address(RVA = "0xA7F7C4", Offset = "0xA7F7C4", VA = "0xA7F7C4")]
		public static void Fatal(Exception exception, bool forcePause = false)
		{
		}

		[Token(Token = "0x6001C51")]
		[Address(RVA = "0xA7F380", Offset = "0xA7F380", VA = "0xA7F380")]
		public static void Log(LogLevels level, string message, bool forcePause = false)
		{
		}

		[Token(Token = "0x6001C52")]
		[Address(RVA = "0xA7F860", Offset = "0xA7F860", VA = "0xA7F860", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6001C53")]
		[Address(RVA = "0xA7F908", Offset = "0xA7F908", VA = "0xA7F908")]
		public VRTK_Logger()
		{
		}
	}
	[Token(Token = "0x20003CD")]
	public static class VRTK_ObjectCache
	{
		[Token(Token = "0x4001B9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static List<VRTK_BasicTeleport> registeredTeleporters;

		[Token(Token = "0x4001BA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static List<VRTK_DestinationMarker> registeredDestinationMarkers;

		[Token(Token = "0x4001BA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Dictionary<VRTK_InteractTouch, VRTK_ControllerTrackedCollider> registeredTrackedColliderToInteractTouches;
	}
	[Token(Token = "0x20003CE")]
	public sealed class VRTK_PlayerObject : MonoBehaviour
	{
		[Token(Token = "0x200080B")]
		public enum ObjectTypes
		{
			[Token(Token = "0x4002AA8")]
			Null,
			[Token(Token = "0x4002AA9")]
			CameraRig,
			[Token(Token = "0x4002AAA")]
			Headset,
			[Token(Token = "0x4002AAB")]
			Controller,
			[Token(Token = "0x4002AAC")]
			Pointer,
			[Token(Token = "0x4002AAD")]
			Highlighter,
			[Token(Token = "0x4002AAE")]
			Collider
		}

		[Token(Token = "0x4001BA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ObjectTypes objectType;

		[Token(Token = "0x4001BA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static List<VRTK_PlayerObject> s_tempList;

		[Token(Token = "0x6001C56")]
		[Address(RVA = "0x933638", Offset = "0x933638", VA = "0x933638")]
		public static void SetPlayerObject(GameObject obj, ObjectTypes objType)
		{
		}

		[Token(Token = "0x6001C57")]
		[Address(RVA = "0x933714", Offset = "0x933714", VA = "0x933714")]
		public static bool IsPlayerObject(GameObject obj, ObjectTypes ofType = ObjectTypes.Null)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C58")]
		[Address(RVA = "0x9338A8", Offset = "0x9338A8", VA = "0x9338A8")]
		public VRTK_PlayerObject()
		{
		}
	}
	[Token(Token = "0x20003CF")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x63FD38", Offset = "0x63FD38")]
	public class VRTK_RoomExtender_PlayAreaGizmo : MonoBehaviour
	{
		[Token(Token = "0x4001BA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Color color;

		[Token(Token = "0x4001BA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float wireframeHeight;

		[Token(Token = "0x4001BA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool drawWireframeWhenSelectedOnly;

		[Token(Token = "0x4001BA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected Transform playArea;

		[Token(Token = "0x4001BA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected VRTK_RoomExtender roomExtender;

		[Token(Token = "0x6001C5A")]
		[Address(RVA = "0x93DF14", Offset = "0x93DF14", VA = "0x93DF14", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6001C5B")]
		[Address(RVA = "0x93DF78", Offset = "0x93DF78", VA = "0x93DF78", Slot = "5")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6001C5C")]
		[Address(RVA = "0x93E1B8", Offset = "0x93E1B8", VA = "0x93E1B8", Slot = "6")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x6001C5D")]
		[Address(RVA = "0x93E21C", Offset = "0x93E21C", VA = "0x93E21C", Slot = "7")]
		protected virtual void OnDrawGizmos()
		{
		}

		[Token(Token = "0x6001C5E")]
		[Address(RVA = "0x93E234", Offset = "0x93E234", VA = "0x93E234", Slot = "8")]
		protected virtual void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x6001C5F")]
		[Address(RVA = "0x93E24C", Offset = "0x93E24C", VA = "0x93E24C", Slot = "9")]
		protected virtual void DrawWireframe()
		{
		}

		[Token(Token = "0x6001C60")]
		[Address(RVA = "0x93EB40", Offset = "0x93EB40", VA = "0x93EB40")]
		public VRTK_RoomExtender_PlayAreaGizmo()
		{
		}
	}
	[Token(Token = "0x20003D0")]
	public class VRTK_ScreenFade : MonoBehaviour
	{
		[Token(Token = "0x4001BA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static VRTK_ScreenFade instance;

		[Token(Token = "0x4001BAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected Material fadeMaterial;

		[Token(Token = "0x4001BAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Color currentColor;

		[Token(Token = "0x4001BAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Color targetColor;

		[Token(Token = "0x4001BAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected Color deltaColor;

		[Token(Token = "0x4001BAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected Color startColor;

		[Token(Token = "0x4001BAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		protected float fadeTimer;

		[Token(Token = "0x4001BB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		protected float fadeLength;

		[Token(Token = "0x6001C61")]
		[Address(RVA = "0x993FE4", Offset = "0x993FE4", VA = "0x993FE4")]
		public static void Start(Color newColor, float duration)
		{
		}

		[Token(Token = "0x6001C62")]
		[Address(RVA = "0x9940E0", Offset = "0x9940E0", VA = "0x9940E0", Slot = "4")]
		public virtual void StartFade(Color newColor, float duration)
		{
		}

		[Token(Token = "0x6001C63")]
		[Address(RVA = "0x994168", Offset = "0x994168", VA = "0x994168", Slot = "5")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6001C64")]
		[Address(RVA = "0x994204", Offset = "0x994204", VA = "0x994204")]
		private void Update()
		{
		}

		[Token(Token = "0x6001C65")]
		[Address(RVA = "0x994304", Offset = "0x994304", VA = "0x994304", Slot = "6")]
		protected virtual void OnPostRender()
		{
		}

		[Token(Token = "0x6001C66")]
		[Address(RVA = "0x9944C4", Offset = "0x9944C4", VA = "0x9944C4")]
		public VRTK_ScreenFade()
		{
		}
	}
	[Token(Token = "0x20003D1")]
	public class VRTK_ScreenFadePicoEye : MonoBehaviour
	{
		[Token(Token = "0x4001BB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static VRTK_ScreenFadePicoEye instance;

		[Token(Token = "0x4001BB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected Material fadeMaterial;

		[Token(Token = "0x6001C67")]
		[Address(RVA = "0x9945D4", Offset = "0x9945D4", VA = "0x9945D4", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6001C68")]
		[Address(RVA = "0x994670", Offset = "0x994670", VA = "0x994670", Slot = "5")]
		protected virtual void OnPostRender()
		{
		}

		[Token(Token = "0x6001C69")]
		[Address(RVA = "0x994944", Offset = "0x994944", VA = "0x994944")]
		public VRTK_ScreenFadePicoEye()
		{
		}
	}
	[Token(Token = "0x20003D2")]
	public abstract class VRTK_SDKControllerReady : MonoBehaviour
	{
		[Token(Token = "0x4001BB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected SDK_BaseController previousControllerSDK;

		[Token(Token = "0x6001C6A")]
		[Address(RVA = "0x93EC90", Offset = "0x93EC90", VA = "0x93EC90", Slot = "4")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6001C6B")]
		[Address(RVA = "0x93EDF0", Offset = "0x93EDF0", VA = "0x93EDF0", Slot = "5")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x6001C6C")]
		[Address(RVA = "0x93EF60", Offset = "0x93EF60", VA = "0x93EF60", Slot = "6")]
		protected virtual void LoadedSetupChanged(VRTK_SDKManager sender, VRTK_SDKManager.LoadedSetupChangeEventArgs e)
		{
		}

		[Token(Token = "0x6001C6D")]
		[Address(RVA = "0x93F1F4", Offset = "0x93F1F4", VA = "0x93F1F4", Slot = "7")]
		protected virtual void CheckControllersReady()
		{
		}

		[Token(Token = "0x6001C6E")]
		[Address(RVA = "0x93F32C", Offset = "0x93F32C", VA = "0x93F32C", Slot = "8")]
		protected virtual void UnregisterPreviousLeftController()
		{
		}

		[Token(Token = "0x6001C6F")]
		[Address(RVA = "0x93F43C", Offset = "0x93F43C", VA = "0x93F43C", Slot = "9")]
		protected virtual void UnregisterPreviousRightController()
		{
		}

		[Token(Token = "0x6001C70")]
		[Address(RVA = "0x93F54C", Offset = "0x93F54C", VA = "0x93F54C", Slot = "10")]
		protected virtual void RegisterLeftControllerReady()
		{
		}

		[Token(Token = "0x6001C71")]
		[Address(RVA = "0x93F758", Offset = "0x93F758", VA = "0x93F758", Slot = "11")]
		protected virtual void RegisterRightControllerReady()
		{
		}

		[Token(Token = "0x6001C72")]
		[Address(RVA = "0x93F964", Offset = "0x93F964", VA = "0x93F964", Slot = "12")]
		protected virtual void RightControllerReady(object sender, VRTKSDKBaseControllerEventArgs e)
		{
		}

		[Token(Token = "0x6001C73")]
		[Address(RVA = "0x93F97C", Offset = "0x93F97C", VA = "0x93F97C", Slot = "13")]
		protected virtual void LeftControllerReady(object sender, VRTKSDKBaseControllerEventArgs e)
		{
		}

		[Token(Token = "0x6001C74")]
		[Address(RVA = "0x93F994", Offset = "0x93F994", VA = "0x93F994", Slot = "14")]
		protected virtual void ControllerReady(VRTK_ControllerReference controllerReference)
		{
		}

		[Token(Token = "0x6001C75")]
		[Address(RVA = "0x93F998", Offset = "0x93F998", VA = "0x93F998")]
		protected VRTK_SDKControllerReady()
		{
		}
	}
	[Token(Token = "0x20003D3")]
	public struct VRTKTrackedControllerEventArgs
	{
		[Token(Token = "0x4001BB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint currentIndex;

		[Token(Token = "0x4001BB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public uint previousIndex;
	}
	[Token(Token = "0x20003D4")]
	public delegate void VRTKTrackedControllerEventHandler(object sender, VRTKTrackedControllerEventArgs e);
	[Token(Token = "0x20003D5")]
	public class VRTK_TrackedController : MonoBehaviour
	{
		[Token(Token = "0x200080C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x645E38", Offset = "0x645E38")]
		private sealed class <EmitControllerEnabledAtEndOfFrame>d__39 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002AAF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002AB0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002AB1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VRTK_TrackedController <>4__this;

			[Token(Token = "0x1700033D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60032DF")]
				[Address(RVA = "0x9A7778", Offset = "0x9A7778", VA = "0x9A7778", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700033E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60032E1")]
				[Address(RVA = "0x9A77E8", Offset = "0x9A77E8", VA = "0x9A77E8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60032DC")]
			[Address(RVA = "0x9A743C", Offset = "0x9A743C", VA = "0x9A743C")]
			[DebuggerHidden]
			public <EmitControllerEnabledAtEndOfFrame>d__39(int <>1__state)
			{
			}

			[Token(Token = "0x60032DD")]
			[Address(RVA = "0x9A769C", Offset = "0x9A769C", VA = "0x9A769C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60032DE")]
			[Address(RVA = "0x9A76A0", Offset = "0x9A76A0", VA = "0x9A76A0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60032E0")]
			[Address(RVA = "0x9A7780", Offset = "0x9A7780", VA = "0x9A7780", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200080D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x645E48", Offset = "0x645E48")]
		private sealed class <EmitControllerModelReadyAtEndOfFrame>d__42 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002AB2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002AB3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002AB4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VRTK_TrackedController <>4__this;

			[Token(Token = "0x1700033F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60032E5")]
				[Address(RVA = "0x9A78CC", Offset = "0x9A78CC", VA = "0x9A78CC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000340")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60032E7")]
				[Address(RVA = "0x9A793C", Offset = "0x9A793C", VA = "0x9A793C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60032E2")]
			[Address(RVA = "0x9A7614", Offset = "0x9A7614", VA = "0x9A7614")]
			[DebuggerHidden]
			public <EmitControllerModelReadyAtEndOfFrame>d__42(int <>1__state)
			{
			}

			[Token(Token = "0x60032E3")]
			[Address(RVA = "0x9A77F0", Offset = "0x9A77F0", VA = "0x9A77F0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60032E4")]
			[Address(RVA = "0x9A77F4", Offset = "0x9A77F4", VA = "0x9A77F4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60032E6")]
			[Address(RVA = "0x9A78D4", Offset = "0x9A78D4", VA = "0x9A78D4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001BB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public uint index;

		[Token(Token = "0x4001BBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected GameObject aliasController;

		[Token(Token = "0x4001BBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected SDK_BaseController.ControllerType controllerType;

		[Token(Token = "0x4001BBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		protected bool controllerModelWaitSubscribed;

		[Token(Token = "0x4001BBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected Coroutine emitControllerEnabledRoutine;

		[Token(Token = "0x4001BBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		protected Coroutine emitControllerModelAvailableRoutine;

		[Token(Token = "0x170001DA")]
		protected VRTK_ControllerReference controllerReference
		{
			[Token(Token = "0x6001C82")]
			[Address(RVA = "0x9A684C", Offset = "0x9A684C", VA = "0x9A684C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x140000FE")]
		public event VRTKTrackedControllerEventHandler ControllerEnabled
		{
			[Token(Token = "0x6001C7A")]
			[Address(RVA = "0x9A60EC", Offset = "0x9A60EC", VA = "0x9A60EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66CEB4", Offset = "0x66CEB4")]
			add
			{
			}
			[Token(Token = "0x6001C7B")]
			[Address(RVA = "0x9A61D8", Offset = "0x9A61D8", VA = "0x9A61D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66CEC4", Offset = "0x66CEC4")]
			remove
			{
			}
		}

		[Token(Token = "0x140000FF")]
		public event VRTKTrackedControllerEventHandler ControllerDisabled
		{
			[Token(Token = "0x6001C7C")]
			[Address(RVA = "0x9A62C4", Offset = "0x9A62C4", VA = "0x9A62C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66CED4", Offset = "0x66CED4")]
			add
			{
			}
			[Token(Token = "0x6001C7D")]
			[Address(RVA = "0x9A63B0", Offset = "0x9A63B0", VA = "0x9A63B0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66CEE4", Offset = "0x66CEE4")]
			remove
			{
			}
		}

		[Token(Token = "0x14000100")]
		public event VRTKTrackedControllerEventHandler ControllerIndexChanged
		{
			[Token(Token = "0x6001C7E")]
			[Address(RVA = "0x9A649C", Offset = "0x9A649C", VA = "0x9A649C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66CEF4", Offset = "0x66CEF4")]
			add
			{
			}
			[Token(Token = "0x6001C7F")]
			[Address(RVA = "0x9A6588", Offset = "0x9A6588", VA = "0x9A6588")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66CF04", Offset = "0x66CF04")]
			remove
			{
			}
		}

		[Token(Token = "0x14000101")]
		public event VRTKTrackedControllerEventHandler ControllerModelAvailable
		{
			[Token(Token = "0x6001C80")]
			[Address(RVA = "0x9A6674", Offset = "0x9A6674", VA = "0x9A6674")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66CF14", Offset = "0x66CF14")]
			add
			{
			}
			[Token(Token = "0x6001C81")]
			[Address(RVA = "0x9A6760", Offset = "0x9A6760", VA = "0x9A6760")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66CF24", Offset = "0x66CF24")]
			remove
			{
			}
		}

		[Token(Token = "0x6001C83")]
		[Address(RVA = "0x9A68B8", Offset = "0x9A68B8", VA = "0x9A68B8", Slot = "4")]
		public virtual void OnControllerEnabled(VRTKTrackedControllerEventArgs e)
		{
		}

		[Token(Token = "0x6001C84")]
		[Address(RVA = "0x9A68DC", Offset = "0x9A68DC", VA = "0x9A68DC", Slot = "5")]
		public virtual void OnControllerDisabled(VRTKTrackedControllerEventArgs e)
		{
		}

		[Token(Token = "0x6001C85")]
		[Address(RVA = "0x9A6900", Offset = "0x9A6900", VA = "0x9A6900", Slot = "6")]
		public virtual void OnControllerIndexChanged(VRTKTrackedControllerEventArgs e)
		{
		}

		[Token(Token = "0x6001C86")]
		[Address(RVA = "0x9A6924", Offset = "0x9A6924", VA = "0x9A6924", Slot = "7")]
		public virtual void OnControllerModelAvailable(VRTKTrackedControllerEventArgs e)
		{
		}

		[Token(Token = "0x6001C87")]
		[Address(RVA = "0x9A6948", Offset = "0x9A6948", VA = "0x9A6948", Slot = "8")]
		public virtual SDK_BaseController.ControllerType GetControllerType()
		{
			return default(SDK_BaseController.ControllerType);
		}

		[Token(Token = "0x6001C88")]
		[Address(RVA = "0x9A6950", Offset = "0x9A6950", VA = "0x9A6950", Slot = "9")]
		protected virtual VRTKTrackedControllerEventArgs SetEventPayload(uint previousIndex = uint.MaxValue)
		{
			return default(VRTKTrackedControllerEventArgs);
		}

		[Token(Token = "0x6001C89")]
		[Address(RVA = "0x9A695C", Offset = "0x9A695C", VA = "0x9A695C", Slot = "10")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6001C8A")]
		[Address(RVA = "0x9A69C4", Offset = "0x9A69C4", VA = "0x9A69C4", Slot = "11")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6001C8B")]
		[Address(RVA = "0x9A6B10", Offset = "0x9A6B10", VA = "0x9A6B10", Slot = "12")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x6001C8C")]
		[Address(RVA = "0x9A6B80", Offset = "0x9A6B80", VA = "0x9A6B80", Slot = "13")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x6001C8D")]
		[Address(RVA = "0x9A6BE8", Offset = "0x9A6BE8", VA = "0x9A6BE8", Slot = "14")]
		protected virtual void FixedUpdate()
		{
		}

		[Token(Token = "0x6001C8E")]
		[Address(RVA = "0x9A6C8C", Offset = "0x9A6C8C", VA = "0x9A6C8C", Slot = "15")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x6001C8F")]
		[Address(RVA = "0x9A6E8C", Offset = "0x9A6E8C", VA = "0x9A6E8C", Slot = "16")]
		protected virtual void ManageLeftControllerListener(bool register, VRTKSDKBaseControllerEventHandler callbackMethod)
		{
		}

		[Token(Token = "0x6001C90")]
		[Address(RVA = "0x9A6F5C", Offset = "0x9A6F5C", VA = "0x9A6F5C", Slot = "17")]
		protected virtual void ManageRightControllerListener(bool register, VRTKSDKBaseControllerEventHandler callbackMethod)
		{
		}

		[Token(Token = "0x6001C91")]
		[Address(RVA = "0x9A702C", Offset = "0x9A702C", VA = "0x9A702C", Slot = "18")]
		protected virtual void RegisterHandControllerListener(bool register, SDK_BaseController.ControllerHand givenHand)
		{
		}

		[Token(Token = "0x6001C92")]
		[Address(RVA = "0x9A7130", Offset = "0x9A7130", VA = "0x9A7130", Slot = "19")]
		protected virtual void ManageControllerModelListener(bool register, SDK_BaseController.ControllerHand givenHand)
		{
		}

		[Token(Token = "0x6001C93")]
		[Address(RVA = "0x9A7214", Offset = "0x9A7214", VA = "0x9A7214", Slot = "20")]
		protected virtual void ManageControllerModelListeners(bool register)
		{
		}

		[Token(Token = "0x6001C94")]
		[Address(RVA = "0x9A72B8", Offset = "0x9A72B8", VA = "0x9A72B8", Slot = "21")]
		protected virtual void SetControllerType()
		{
		}

		[Token(Token = "0x6001C95")]
		[Address(RVA = "0x9A7360", Offset = "0x9A7360", VA = "0x9A7360", Slot = "22")]
		protected virtual void StartEmitControllerEnabledAtEndOfFrame()
		{
		}

		[Token(Token = "0x6001C96")]
		[Address(RVA = "0x9A73C8", Offset = "0x9A73C8", VA = "0x9A73C8", Slot = "23")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x66CF34", Offset = "0x66CF34")]
		protected virtual IEnumerator EmitControllerEnabledAtEndOfFrame()
		{
			return null;
		}

		[Token(Token = "0x6001C97")]
		[Address(RVA = "0x9A7468", Offset = "0x9A7468", VA = "0x9A7468", Slot = "24")]
		protected virtual void ControllerModelReady(object sender, VRTKSDKBaseControllerEventArgs e)
		{
		}

		[Token(Token = "0x6001C98")]
		[Address(RVA = "0x9A74C8", Offset = "0x9A74C8", VA = "0x9A74C8", Slot = "25")]
		protected virtual void StartEmitControllerModelReadyAtEndOfFrame()
		{
		}

		[Token(Token = "0x6001C99")]
		[Address(RVA = "0x9A75A0", Offset = "0x9A75A0", VA = "0x9A75A0", Slot = "26")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x66CF98", Offset = "0x66CF98")]
		protected virtual IEnumerator EmitControllerModelReadyAtEndOfFrame()
		{
			return null;
		}

		[Token(Token = "0x6001C9A")]
		[Address(RVA = "0x9A7640", Offset = "0x9A7640", VA = "0x9A7640", Slot = "27")]
		protected virtual void CancelCoroutines()
		{
		}

		[Token(Token = "0x6001C9B")]
		[Address(RVA = "0x9A768C", Offset = "0x9A768C", VA = "0x9A768C")]
		public VRTK_TrackedController()
		{
		}
	}
	[Token(Token = "0x20003D6")]
	public class VRTK_TrackedHeadset : MonoBehaviour
	{
		[Token(Token = "0x6001C9C")]
		[Address(RVA = "0x9A7944", Offset = "0x9A7944", VA = "0x9A7944", Slot = "4")]
		protected virtual void FixedUpdate()
		{
		}

		[Token(Token = "0x6001C9D")]
		[Address(RVA = "0x9A79A8", Offset = "0x9A79A8", VA = "0x9A79A8", Slot = "5")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x6001C9E")]
		[Address(RVA = "0x9A7A0C", Offset = "0x9A7A0C", VA = "0x9A7A0C")]
		public VRTK_TrackedHeadset()
		{
		}
	}
	[Token(Token = "0x20003D7")]
	public class VRTK_TunnelEffect : MonoBehaviour
	{
		[Token(Token = "0x4001BC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected Material material;

		[Token(Token = "0x6001C9F")]
		[Address(RVA = "0x9A8648", Offset = "0x9A8648", VA = "0x9A8648", Slot = "4")]
		public virtual void SetMaterial(Material material)
		{
		}

		[Token(Token = "0x6001CA0")]
		[Address(RVA = "0x9A8650", Offset = "0x9A8650", VA = "0x9A8650", Slot = "5")]
		protected virtual void OnRenderImage(RenderTexture src, RenderTexture dest)
		{
		}

		[Token(Token = "0x6001CA1")]
		[Address(RVA = "0x9A86D4", Offset = "0x9A86D4", VA = "0x9A86D4")]
		public VRTK_TunnelEffect()
		{
		}
	}
	[Token(Token = "0x20003D8")]
	public class VRTK_UIGraphicRaycaster : GraphicRaycaster
	{
		[Serializable]
		[Token(Token = "0x200080E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x645E58", Offset = "0x645E58")]
		private sealed class <>c
		{
			[Token(Token = "0x4002AB5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002AB6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Comparison<RaycastResult> <>9__7_0;

			[Token(Token = "0x60032E9")]
			[Address(RVA = "0x9ADFD0", Offset = "0x9ADFD0", VA = "0x9ADFD0")]
			public <>c()
			{
			}

			[Token(Token = "0x60032EA")]
			[Address(RVA = "0x9ADFD8", Offset = "0x9ADFD8", VA = "0x9ADFD8")]
			internal int <Raycast>b__7_0(RaycastResult g1, RaycastResult g2)
			{
				return default(int);
			}
		}

		[Token(Token = "0x4001BC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected Canvas currentCanvas;

		[Token(Token = "0x4001BC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected Vector2 lastKnownPosition;

		[Token(Token = "0x4001BC3")]
		protected const float UI_CONTROL_OFFSET = 1E-05f;

		[NonSerialized]
		[Token(Token = "0x4001BC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static List<RaycastResult> s_RaycastResults;

		[Token(Token = "0x170001DB")]
		protected virtual Canvas canvas
		{
			[Token(Token = "0x6001CA6")]
			[Address(RVA = "0x9ADDE0", Offset = "0x9ADDE0", VA = "0x9ADDE0", Slot = "25")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001CA2")]
		[Address(RVA = "0x9ACBDC", Offset = "0x9ACBDC", VA = "0x9ACBDC", Slot = "17")]
		public override void Raycast(PointerEventData eventData, List<RaycastResult> resultAppendList)
		{
		}

		[Token(Token = "0x6001CA3")]
		[Address(RVA = "0x9ACF8C", Offset = "0x9ACF8C", VA = "0x9ACF8C", Slot = "22")]
		protected virtual void SetNearestRaycast(ref PointerEventData eventData, ref List<RaycastResult> resultAppendList, ref List<RaycastResult> raycastResults)
		{
		}

		[Token(Token = "0x6001CA4")]
		[Address(RVA = "0x9AD2C0", Offset = "0x9AD2C0", VA = "0x9AD2C0", Slot = "23")]
		protected virtual float GetHitDistance(Ray ray, float hitDistance)
		{
			return default(float);
		}

		[Token(Token = "0x6001CA5")]
		[Address(RVA = "0x9AD6F8", Offset = "0x9AD6F8", VA = "0x9AD6F8", Slot = "24")]
		protected virtual void Raycast(Canvas canvas, Camera eventCamera, PointerEventData eventData, Ray ray, ref List<RaycastResult> results)
		{
		}

		[Token(Token = "0x6001CA7")]
		[Address(RVA = "0x9ADE90", Offset = "0x9ADE90", VA = "0x9ADE90")]
		public VRTK_UIGraphicRaycaster()
		{
		}
	}
	[Token(Token = "0x20003D9")]
	public class VRTK_VRInputModule : PointerInputModule
	{
		[Token(Token = "0x4001BC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public List<VRTK_UIPointer> pointers;

		[Token(Token = "0x6001CA9")]
		[Address(RVA = "0x8F8198", Offset = "0x8F8198", VA = "0x8F8198", Slot = "30")]
		public virtual void Initialise()
		{
		}

		[Token(Token = "0x6001CAA")]
		[Address(RVA = "0x8F81F8", Offset = "0x8F81F8", VA = "0x8F81F8", Slot = "25")]
		public override bool IsModuleSupported()
		{
			return default(bool);
		}

		[Token(Token = "0x6001CAB")]
		[Address(RVA = "0x8F8200", Offset = "0x8F8200", VA = "0x8F8200", Slot = "17")]
		public override void Process()
		{
		}

		[Token(Token = "0x6001CAC")]
		[Address(RVA = "0x8F83DC", Offset = "0x8F83DC", VA = "0x8F83DC", Slot = "31")]
		protected virtual List<RaycastResult> CheckRaycasts(VRTK_UIPointer pointer)
		{
			return null;
		}

		[Token(Token = "0x6001CAD")]
		[Address(RVA = "0x8F8610", Offset = "0x8F8610", VA = "0x8F8610", Slot = "32")]
		protected virtual bool CheckTransformTree(Transform target, Transform source)
		{
			return default(bool);
		}

		[Token(Token = "0x6001CAE")]
		[Address(RVA = "0x8F8724", Offset = "0x8F8724", VA = "0x8F8724", Slot = "33")]
		protected virtual bool NoValidCollision(VRTK_UIPointer pointer, List<RaycastResult> results)
		{
			return default(bool);
		}

		[Token(Token = "0x6001CAF")]
		[Address(RVA = "0x8F887C", Offset = "0x8F887C", VA = "0x8F887C", Slot = "34")]
		protected virtual bool IsHovering(VRTK_UIPointer pointer)
		{
			return default(bool);
		}

		[Token(Token = "0x6001CB0")]
		[Address(RVA = "0x8F8A68", Offset = "0x8F8A68", VA = "0x8F8A68", Slot = "35")]
		protected virtual bool ValidElement(GameObject obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6001CB1")]
		[Address(RVA = "0x8F8B28", Offset = "0x8F8B28", VA = "0x8F8B28", Slot = "36")]
		protected virtual void CheckPointerHoverClick(VRTK_UIPointer pointer, List<RaycastResult> results)
		{
		}

		[Token(Token = "0x6001CB2")]
		[Address(RVA = "0x8F8BC8", Offset = "0x8F8BC8", VA = "0x8F8BC8", Slot = "37")]
		protected virtual void Hover(VRTK_UIPointer pointer, List<RaycastResult> results)
		{
		}

		[Token(Token = "0x6001CB3")]
		[Address(RVA = "0x8F98B4", Offset = "0x8F98B4", VA = "0x8F98B4", Slot = "38")]
		protected virtual void Click(VRTK_UIPointer pointer, List<RaycastResult> results)
		{
		}

		[Token(Token = "0x6001CB4")]
		[Address(RVA = "0x8F9950", Offset = "0x8F9950", VA = "0x8F9950", Slot = "39")]
		protected virtual void ClickOnUp(VRTK_UIPointer pointer, List<RaycastResult> results)
		{
		}

		[Token(Token = "0x6001CB5")]
		[Address(RVA = "0x8F9C1C", Offset = "0x8F9C1C", VA = "0x8F9C1C", Slot = "40")]
		protected virtual void ClickOnDown(VRTK_UIPointer pointer, List<RaycastResult> results, bool forceClick = false)
		{
		}

		[Token(Token = "0x6001CB6")]
		[Address(RVA = "0x8F9EF4", Offset = "0x8F9EF4", VA = "0x8F9EF4", Slot = "41")]
		protected virtual bool IsEligibleClick(VRTK_UIPointer pointer, List<RaycastResult> results)
		{
			return default(bool);
		}

		[Token(Token = "0x6001CB7")]
		[Address(RVA = "0x8FA1A0", Offset = "0x8FA1A0", VA = "0x8FA1A0", Slot = "42")]
		protected virtual bool AttemptClick(VRTK_UIPointer pointer)
		{
			return default(bool);
		}

		[Token(Token = "0x6001CB8")]
		[Address(RVA = "0x8FA4C8", Offset = "0x8FA4C8", VA = "0x8FA4C8", Slot = "43")]
		protected virtual void Drag(VRTK_UIPointer pointer, List<RaycastResult> results)
		{
		}

		[Token(Token = "0x6001CB9")]
		[Address(RVA = "0x8FAB5C", Offset = "0x8FAB5C", VA = "0x8FAB5C", Slot = "44")]
		protected virtual void Scroll(VRTK_UIPointer pointer, List<RaycastResult> results)
		{
		}

		[Token(Token = "0x6001CBA")]
		[Address(RVA = "0x8FAEAC", Offset = "0x8FAEAC", VA = "0x8FAEAC")]
		public VRTK_VRInputModule()
		{
		}
	}
	[Token(Token = "0x20003DA")]
	public abstract class VRTK_BaseObjectControlAction : MonoBehaviour
	{
		[Token(Token = "0x200080F")]
		public enum AxisListeners
		{
			[Token(Token = "0x4002AB8")]
			XAxisChanged,
			[Token(Token = "0x4002AB9")]
			YAxisChanged
		}

		[Token(Token = "0x4001BC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x658E38", Offset = "0x658E38")]
		public VRTK_ObjectControl objectControlScript;

		[Token(Token = "0x4001BC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x658E70", Offset = "0x658E70")]
		public AxisListeners listenOnAxisChange;

		[Token(Token = "0x4001BC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected Collider centerCollider;

		[Token(Token = "0x4001BC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected Vector3 colliderCenter;

		[Token(Token = "0x4001BCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		protected float colliderRadius;

		[Token(Token = "0x4001BCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected float colliderHeight;

		[Token(Token = "0x4001BCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected Transform controlledTransform;

		[Token(Token = "0x4001BCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected Transform playArea;

		[Token(Token = "0x4001BCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		protected VRTK_BodyPhysics internalBodyPhysics;

		[Token(Token = "0x4001BCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		protected Vector3 playerHeadPositionBeforeRotation;

		[Token(Token = "0x4001BD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		protected Transform headsetTransform;

		[Token(Token = "0x4001BD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		protected bool validPlayerObject;

		[Token(Token = "0x6001CBB")]
		protected abstract void Process(GameObject controlledGameObject, Transform directionDevice, Vector3 axisDirection, float axis, float deadzone, bool currentlyFalling, bool modifierActive);

		[Token(Token = "0x6001CBC")]
		[Address(RVA = "0x7DF808", Offset = "0x7DF808", VA = "0x7DF808", Slot = "5")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6001CBD")]
		[Address(RVA = "0x7DF870", Offset = "0x7DF870", VA = "0x7DF870", Slot = "6")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6001CBE")]
		[Address(RVA = "0x7DFA0C", Offset = "0x7DFA0C", VA = "0x7DFA0C", Slot = "7")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x6001CBF")]
		[Address(RVA = "0x7DFB40", Offset = "0x7DFB40", VA = "0x7DFB40", Slot = "8")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x6001CC0")]
		[Address(RVA = "0x7DFBA8", Offset = "0x7DFBA8", VA = "0x7DFBA8", Slot = "9")]
		protected virtual void AxisChanged(object sender, ObjectControlEventArgs e)
		{
		}

		[Token(Token = "0x6001CC1")]
		[Address(RVA = "0x7DFBE0", Offset = "0x7DFBE0", VA = "0x7DFBE0", Slot = "10")]
		protected virtual void RotateAroundPlayer(GameObject controlledGameObject, float angle)
		{
		}

		[Token(Token = "0x6001CC2")]
		[Address(RVA = "0x7DFE24", Offset = "0x7DFE24", VA = "0x7DFE24", Slot = "11")]
		protected virtual void Blink(float blinkSpeed)
		{
		}

		[Token(Token = "0x6001CC3")]
		[Address(RVA = "0x7DFEDC", Offset = "0x7DFEDC", VA = "0x7DFEDC", Slot = "12")]
		protected virtual void ReleaseBlink(float blinkSpeed)
		{
		}

		[Token(Token = "0x6001CC4")]
		[Address(RVA = "0x7DFF24", Offset = "0x7DFF24", VA = "0x7DFF24", Slot = "13")]
		protected virtual Vector3 GetObjectCenter(Transform checkObject)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001CC5")]
		[Address(RVA = "0x7E04A0", Offset = "0x7E04A0", VA = "0x7E04A0", Slot = "14")]
		protected virtual int GetAxisDirection(float axis)
		{
			return default(int);
		}

		[Token(Token = "0x6001CC6")]
		[Address(RVA = "0x7E04B8", Offset = "0x7E04B8", VA = "0x7E04B8", Slot = "15")]
		protected virtual bool CanMove(VRTK_BodyPhysics givenBodyPhysics, Vector3 currentPosition, Vector3 proposedPosition)
		{
			return default(bool);
		}

		[Token(Token = "0x6001CC7")]
		[Address(RVA = "0x7E0638", Offset = "0x7E0638", VA = "0x7E0638", Slot = "16")]
		protected virtual void CheckForPlayerBeforeRotation(GameObject controlledGameObject)
		{
		}

		[Token(Token = "0x6001CC8")]
		[Address(RVA = "0x7E07B8", Offset = "0x7E07B8", VA = "0x7E07B8", Slot = "17")]
		protected virtual void CheckForPlayerAfterRotation(GameObject controlledGameObject)
		{
		}

		[Token(Token = "0x6001CC9")]
		[Address(RVA = "0x7E092C", Offset = "0x7E092C", VA = "0x7E092C")]
		protected VRTK_BaseObjectControlAction()
		{
		}
	}
	[Token(Token = "0x20003DB")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x63FD84", Offset = "0x63FD84")]
	public class VRTK_RotateObjectControlAction : VRTK_BaseObjectControlAction
	{
		[Token(Token = "0x4001BD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x658EA8", Offset = "0x658EA8")]
		public float maximumRotationSpeed;

		[Token(Token = "0x4001BD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x658EE0", Offset = "0x658EE0")]
		public float rotationMultiplier;

		[Token(Token = "0x6001CCA")]
		[Address(RVA = "0x93EB7C", Offset = "0x93EB7C", VA = "0x93EB7C", Slot = "4")]
		protected override void Process(GameObject controlledGameObject, Transform directionDevice, Vector3 axisDirection, float axis, float deadzone, bool currentlyFalling, bool modifierActive)
		{
		}

		[Token(Token = "0x6001CCB")]
		[Address(RVA = "0x93EC10", Offset = "0x93EC10", VA = "0x93EC10", Slot = "18")]
		protected virtual float Rotate(float axis, bool modifierActive)
		{
			return default(float);
		}

		[Token(Token = "0x6001CCC")]
		[Address(RVA = "0x93EC6C", Offset = "0x93EC6C", VA = "0x93EC6C")]
		public VRTK_RotateObjectControlAction()
		{
		}
	}
	[Token(Token = "0x20003DC")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x63FDBC", Offset = "0x63FDBC")]
	public class VRTK_SlideObjectControlAction : VRTK_BaseObjectControlAction
	{
		[Token(Token = "0x4001BD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x658F18", Offset = "0x658F18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x658F18", Offset = "0x658F18")]
		public float maximumSpeed;

		[Token(Token = "0x4001BD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x658F78", Offset = "0x658F78")]
		public float deceleration;

		[Token(Token = "0x4001BD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x658FB0", Offset = "0x658FB0")]
		public float fallingDeceleration;

		[Token(Token = "0x4001BD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x658FE8", Offset = "0x658FE8")]
		public float speedMultiplier;

		[Token(Token = "0x4001BD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x659020", Offset = "0x659020")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x659020", Offset = "0x659020")]
		public VRTK_BodyPhysics bodyPhysics;

		[Token(Token = "0x4001BD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		protected float currentSpeed;

		[Token(Token = "0x6001CCD")]
		[Address(RVA = "0x997064", Offset = "0x997064", VA = "0x997064", Slot = "4")]
		protected override void Process(GameObject controlledGameObject, Transform directionDevice, Vector3 axisDirection, float axis, float deadzone, bool currentlyFalling, bool modifierActive)
		{
		}

		[Token(Token = "0x6001CCE")]
		[Address(RVA = "0x9970F4", Offset = "0x9970F4", VA = "0x9970F4", Slot = "6")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6001CCF")]
		[Address(RVA = "0x997104", Offset = "0x997104", VA = "0x997104", Slot = "18")]
		protected virtual float CalculateSpeed(float inputValue, bool currentlyFalling, bool modifierActive)
		{
			return default(float);
		}

		[Token(Token = "0x6001CD0")]
		[Address(RVA = "0x99713C", Offset = "0x99713C", VA = "0x99713C", Slot = "19")]
		protected virtual float Decelerate(float speed, bool currentlyFalling)
		{
			return default(float);
		}

		[Token(Token = "0x6001CD1")]
		[Address(RVA = "0x997254", Offset = "0x997254", VA = "0x997254", Slot = "20")]
		protected virtual void Move(GameObject controlledGameObject, Transform directionDevice, Vector3 axisDirection)
		{
		}

		[Token(Token = "0x6001CD2")]
		[Address(RVA = "0x9974F8", Offset = "0x9974F8", VA = "0x9974F8")]
		public VRTK_SlideObjectControlAction()
		{
		}
	}
	[Token(Token = "0x20003DD")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x63FDF4", Offset = "0x63FDF4")]
	public class VRTK_SnapRotateObjectControlAction : VRTK_BaseObjectControlAction
	{
		[Token(Token = "0x4001BDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x659080", Offset = "0x659080")]
		public float anglePerSnap;

		[Token(Token = "0x4001BDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6590B8", Offset = "0x6590B8")]
		public float angleMultiplier;

		[Token(Token = "0x4001BDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6590F0", Offset = "0x6590F0")]
		public float snapDelay;

		[Token(Token = "0x4001BDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x659128", Offset = "0x659128")]
		public float blinkTransitionSpeed;

		[Token(Token = "0x4001BDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x659160", Offset = "0x659160")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x659160", Offset = "0x659160")]
		public float axisThreshold;

		[Token(Token = "0x4001BDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		protected float snapDelayTimer;

		[Token(Token = "0x6001CD3")]
		[Address(RVA = "0x9A165C", Offset = "0x9A165C", VA = "0x9A165C", Slot = "4")]
		protected override void Process(GameObject controlledGameObject, Transform directionDevice, Vector3 axisDirection, float axis, float deadzone, bool currentlyFalling, bool modifierActive)
		{
		}

		[Token(Token = "0x6001CD4")]
		[Address(RVA = "0x9A173C", Offset = "0x9A173C", VA = "0x9A173C", Slot = "18")]
		protected virtual bool ValidThreshold(float axis)
		{
			return default(bool);
		}

		[Token(Token = "0x6001CD5")]
		[Address(RVA = "0x9A1774", Offset = "0x9A1774", VA = "0x9A1774", Slot = "19")]
		protected virtual float Rotate(float axis, bool modifierActive)
		{
			return default(float);
		}

		[Token(Token = "0x6001CD6")]
		[Address(RVA = "0x9A17EC", Offset = "0x9A17EC", VA = "0x9A17EC")]
		public VRTK_SnapRotateObjectControlAction()
		{
		}
	}
	[Token(Token = "0x20003DE")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x63FE2C", Offset = "0x63FE2C")]
	public class VRTK_WarpObjectControlAction : VRTK_BaseObjectControlAction
	{
		[Token(Token = "0x4001BE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6591B4", Offset = "0x6591B4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6591B4", Offset = "0x6591B4")]
		public float warpDistance;

		[Token(Token = "0x4001BE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x659214", Offset = "0x659214")]
		public float warpMultiplier;

		[Token(Token = "0x4001BE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65924C", Offset = "0x65924C")]
		public float warpDelay;

		[Token(Token = "0x4001BE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x659284", Offset = "0x659284")]
		public float floorHeightTolerance;

		[Token(Token = "0x4001BE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6592BC", Offset = "0x6592BC")]
		public float blinkTransitionSpeed;

		[Token(Token = "0x4001BE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6592F4", Offset = "0x6592F4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6592F4", Offset = "0x6592F4")]
		public VRTK_BodyPhysics bodyPhysics;

		[Token(Token = "0x4001BE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		protected float warpDelayTimer;

		[Token(Token = "0x4001BE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		protected Transform headset;

		[Token(Token = "0x6001CD7")]
		[Address(RVA = "0x8FBC7C", Offset = "0x8FBC7C", VA = "0x8FBC7C", Slot = "4")]
		protected override void Process(GameObject controlledGameObject, Transform directionDevice, Vector3 axisDirection, float axis, float deadzone, bool currentlyFalling, bool modifierActive)
		{
		}

		[Token(Token = "0x6001CD8")]
		[Address(RVA = "0x8FBD38", Offset = "0x8FBD38", VA = "0x8FBD38", Slot = "6")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6001CD9")]
		[Address(RVA = "0x8FBDB8", Offset = "0x8FBDB8", VA = "0x8FBDB8", Slot = "18")]
		protected virtual void Warp(GameObject controlledGameObject, Transform directionDevice, Vector3 axisDirection, float axis, bool modifierActive)
		{
		}

		[Token(Token = "0x6001CDA")]
		[Address(RVA = "0x8FC360", Offset = "0x8FC360", VA = "0x8FC360")]
		public VRTK_WarpObjectControlAction()
		{
		}
	}
	[Token(Token = "0x20003DF")]
	public delegate void TeleportEventHandler(object sender, DestinationMarkerEventArgs e);
	[Token(Token = "0x20003E0")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x63FE64", Offset = "0x63FE64")]
	public class VRTK_BasicTeleport : MonoBehaviour
	{
		[Token(Token = "0x2000810")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x645E68", Offset = "0x645E68")]
		private sealed class <InitListenersAtEndOfFrame>d__53 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002ABA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002ABB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002ABC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VRTK_BasicTeleport <>4__this;

			[Token(Token = "0x17000341")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60032EE")]
				[Address(RVA = "0xAF6664", Offset = "0xAF6664", VA = "0xAF6664", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000342")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60032F0")]
				[Address(RVA = "0xAF66D4", Offset = "0xAF66D4", VA = "0xAF66D4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60032EB")]
			[Address(RVA = "0xAF6254", Offset = "0xAF6254", VA = "0xAF6254")]
			[DebuggerHidden]
			public <InitListenersAtEndOfFrame>d__53(int <>1__state)
			{
			}

			[Token(Token = "0x60032EC")]
			[Address(RVA = "0xAF658C", Offset = "0xAF658C", VA = "0xAF658C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60032ED")]
			[Address(RVA = "0xAF6590", Offset = "0xAF6590", VA = "0xAF6590", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60032EF")]
			[Address(RVA = "0xAF666C", Offset = "0xAF666C", VA = "0xAF666C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001BE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x659354", Offset = "0x659354")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x659354", Offset = "0x659354")]
		public Color blinkToColor;

		[Token(Token = "0x4001BE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6593B4", Offset = "0x6593B4")]
		public float blinkTransitionSpeed;

		[Token(Token = "0x4001BEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6593EC", Offset = "0x6593EC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6593EC", Offset = "0x6593EC")]
		public float distanceBlinkDelay;

		[Token(Token = "0x4001BEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x659444", Offset = "0x659444")]
		public bool headsetPositionCompensation;

		[Token(Token = "0x4001BEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65947C", Offset = "0x65947C")]
		public VRTK_PolicyList targetListPolicy;

		[Token(Token = "0x4001BED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6594B4", Offset = "0x6594B4")]
		public VRTK_NavMeshData navMeshData;

		[Token(Token = "0x4001BEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6594EC", Offset = "0x6594EC")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x6594EC", Offset = "0x6594EC")]
		[ObsoleteInspector]
		public float navMeshLimitDistance;

		[Token(Token = "0x4001BF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		protected Transform headset;

		[Token(Token = "0x4001BF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		protected Transform playArea;

		[Token(Token = "0x4001BF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		protected bool adjustYForTerrain;

		[Token(Token = "0x4001BF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		protected bool enableTeleport;

		[Token(Token = "0x4001BF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		protected float blinkPause;

		[Token(Token = "0x4001BF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		protected float fadeInTime;

		[Token(Token = "0x4001BF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		protected float maxBlinkTransitionSpeed;

		[Token(Token = "0x4001BF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		protected float maxBlinkDistance;

		[Token(Token = "0x4001BF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		protected Coroutine initaliseListeners;

		[Token(Token = "0x4001BFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		protected bool useGivenForcedPosition;

		[Token(Token = "0x4001BFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		protected Vector3 givenForcedPosition;

		[Token(Token = "0x4001BFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		protected Quaternion? givenForcedRotation;

		[Token(Token = "0x14000102")]
		public event TeleportEventHandler Teleporting
		{
			[Token(Token = "0x6001CDF")]
			[Address(RVA = "0xAF4148", Offset = "0xAF4148", VA = "0xAF4148")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66CFFC", Offset = "0x66CFFC")]
			add
			{
			}
			[Token(Token = "0x6001CE0")]
			[Address(RVA = "0xAF4234", Offset = "0xAF4234", VA = "0xAF4234")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66D00C", Offset = "0x66D00C")]
			remove
			{
			}
		}

		[Token(Token = "0x14000103")]
		public event TeleportEventHandler Teleported
		{
			[Token(Token = "0x6001CE1")]
			[Address(RVA = "0xAF4320", Offset = "0xAF4320", VA = "0xAF4320")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66D01C", Offset = "0x66D01C")]
			add
			{
			}
			[Token(Token = "0x6001CE2")]
			[Address(RVA = "0xAF440C", Offset = "0xAF440C", VA = "0xAF440C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66D02C", Offset = "0x66D02C")]
			remove
			{
			}
		}

		[Token(Token = "0x6001CE3")]
		[Address(RVA = "0xAF44F8", Offset = "0xAF44F8", VA = "0xAF44F8", Slot = "4")]
		public virtual void InitDestinationSetListener(GameObject markerMaker, bool register)
		{
		}

		[Token(Token = "0x6001CE4")]
		[Address(RVA = "0xAF46D4", Offset = "0xAF46D4", VA = "0xAF46D4", Slot = "5")]
		public virtual void ToggleTeleportEnabled(bool state)
		{
		}

		[Token(Token = "0x6001CE5")]
		[Address(RVA = "0xAF46E0", Offset = "0xAF46E0", VA = "0xAF46E0", Slot = "6")]
		public virtual bool ValidLocation(Transform target, Vector3 destinationPosition)
		{
			return default(bool);
		}

		[Token(Token = "0x6001CE6")]
		[Address(RVA = "0xAF48E8", Offset = "0xAF48E8", VA = "0xAF48E8", Slot = "7")]
		public virtual void Teleport(DestinationMarkerEventArgs teleportArgs)
		{
		}

		[Token(Token = "0x6001CE7")]
		[Address(RVA = "0xAF494C", Offset = "0xAF494C", VA = "0xAF494C", Slot = "8")]
		public virtual void Teleport(Transform target, Vector3 destinationPosition, [Optional] Quaternion? destinationRotation, bool forceDestinationPosition = false)
		{
		}

		[Token(Token = "0x6001CE8")]
		[Address(RVA = "0xAF49EC", Offset = "0xAF49EC", VA = "0xAF49EC", Slot = "9")]
		public virtual void ForceTeleport(Vector3 destinationPosition, [Optional] Quaternion? destinationRotation)
		{
		}

		[Token(Token = "0x6001CE9")]
		[Address(RVA = "0xAF4C6C", Offset = "0xAF4C6C", VA = "0xAF4C6C", Slot = "10")]
		public virtual void SetActualTeleportDestination(Vector3 actualPosition, Quaternion? actualRotation)
		{
		}

		[Token(Token = "0x6001CEA")]
		[Address(RVA = "0xAF4C90", Offset = "0xAF4C90", VA = "0xAF4C90", Slot = "11")]
		public virtual void ResetActualTeleportDestination()
		{
		}

		[Token(Token = "0x6001CEB")]
		[Address(RVA = "0xAF4C98", Offset = "0xAF4C98", VA = "0xAF4C98", Slot = "12")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6001CEC")]
		[Address(RVA = "0xAF4D00", Offset = "0xAF4D00", VA = "0xAF4D00", Slot = "13")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6001CED")]
		[Address(RVA = "0xAF4E38", Offset = "0xAF4E38", VA = "0xAF4E38", Slot = "14")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x6001CEE")]
		[Address(RVA = "0xAF4EF0", Offset = "0xAF4EF0", VA = "0xAF4EF0", Slot = "15")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x6001CEF")]
		[Address(RVA = "0xAF4F58", Offset = "0xAF4F58", VA = "0xAF4F58", Slot = "16")]
		protected virtual void Blink(float transitionSpeed)
		{
		}

		[Token(Token = "0x6001CF0")]
		[Address(RVA = "0xAF502C", Offset = "0xAF502C", VA = "0xAF502C", Slot = "17")]
		protected virtual DestinationMarkerEventArgs BuildTeleportArgs(Transform target, Vector3 destinationPosition, [Optional] Quaternion? destinationRotation, bool forceDestinationPosition = false)
		{
			return default(DestinationMarkerEventArgs);
		}

		[Token(Token = "0x6001CF1")]
		[Address(RVA = "0xAF51E4", Offset = "0xAF51E4", VA = "0xAF51E4", Slot = "18")]
		protected virtual bool ValidRigObjects()
		{
			return default(bool);
		}

		[Token(Token = "0x6001CF2")]
		[Address(RVA = "0xAF54C0", Offset = "0xAF54C0", VA = "0xAF54C0", Slot = "19")]
		protected virtual void DoTeleport(object sender, DestinationMarkerEventArgs e)
		{
		}

		[Token(Token = "0x6001CF3")]
		[Address(RVA = "0xAF57C8", Offset = "0xAF57C8", VA = "0xAF57C8", Slot = "20")]
		protected virtual void StartTeleport(object sender, DestinationMarkerEventArgs e)
		{
		}

		[Token(Token = "0x6001CF4")]
		[Address(RVA = "0xAF5840", Offset = "0xAF5840", VA = "0xAF5840", Slot = "21")]
		protected virtual void ProcessOrientation(object sender, DestinationMarkerEventArgs e, Vector3 targetPosition, Quaternion targetRotation)
		{
		}

		[Token(Token = "0x6001CF5")]
		[Address(RVA = "0xAF5844", Offset = "0xAF5844", VA = "0xAF5844", Slot = "22")]
		protected virtual void EndTeleport(object sender, DestinationMarkerEventArgs e)
		{
		}

		[Token(Token = "0x6001CF6")]
		[Address(RVA = "0xAF58BC", Offset = "0xAF58BC", VA = "0xAF58BC", Slot = "23")]
		protected virtual Vector3 SetNewPosition(Vector3 position, Transform target, bool forceDestinationPosition)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001CF7")]
		[Address(RVA = "0xAF59F0", Offset = "0xAF59F0", VA = "0xAF59F0", Slot = "24")]
		protected virtual Quaternion SetNewRotation(Quaternion? rotation)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6001CF8")]
		[Address(RVA = "0xAF5B20", Offset = "0xAF5B20", VA = "0xAF5B20", Slot = "25")]
		protected virtual Vector3 GetNewPosition(Vector3 tipPosition, Transform target, bool returnOriginalPosition)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001CF9")]
		[Address(RVA = "0xAF5C24", Offset = "0xAF5C24", VA = "0xAF5C24", Slot = "26")]
		protected virtual Vector3 GetCompensatedPosition(Vector3 givenPosition, Vector3 defaultPosition)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001CFA")]
		[Address(RVA = "0xAF5D58", Offset = "0xAF5D58", VA = "0xAF5D58", Slot = "27")]
		protected virtual Vector3 CheckTerrainCollision(Vector3 position, Transform target, bool useHeadsetForPosition)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001CFB")]
		[Address(RVA = "0xAF5F20", Offset = "0xAF5F20", VA = "0xAF5F20", Slot = "28")]
		protected virtual void OnTeleporting(object sender, DestinationMarkerEventArgs e)
		{
		}

		[Token(Token = "0x6001CFC")]
		[Address(RVA = "0xAF5F74", Offset = "0xAF5F74", VA = "0xAF5F74", Slot = "29")]
		protected virtual void OnTeleported(object sender, DestinationMarkerEventArgs e)
		{
		}

		[Token(Token = "0x6001CFD")]
		[Address(RVA = "0xAF5FC8", Offset = "0xAF5FC8", VA = "0xAF5FC8", Slot = "30")]
		protected virtual void CalculateBlinkDelay(float blinkSpeed, Vector3 newPosition)
		{
		}

		[Token(Token = "0x6001CFE")]
		[Address(RVA = "0xAF6128", Offset = "0xAF6128", VA = "0xAF6128", Slot = "31")]
		protected virtual void ReleaseBlink()
		{
		}

		[Token(Token = "0x6001CFF")]
		[Address(RVA = "0xAF61E0", Offset = "0xAF61E0", VA = "0xAF61E0", Slot = "32")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x66D03C", Offset = "0x66D03C")]
		protected virtual IEnumerator InitListenersAtEndOfFrame()
		{
			return null;
		}

		[Token(Token = "0x6001D00")]
		[Address(RVA = "0xAF6280", Offset = "0xAF6280", VA = "0xAF6280", Slot = "33")]
		protected virtual void InitDestinationMarkerListeners(bool state)
		{
		}

		[Token(Token = "0x6001D01")]
		[Address(RVA = "0xAF64E0", Offset = "0xAF64E0", VA = "0xAF64E0")]
		public VRTK_BasicTeleport()
		{
		}
	}
	[Token(Token = "0x20003E1")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x63FE9C", Offset = "0x63FE9C")]
	public class VRTK_ButtonControl : VRTK_ObjectControl
	{
		[Token(Token = "0x4001BFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x65957C", Offset = "0x65957C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65957C", Offset = "0x65957C")]
		public VRTK_ControllerEvents.ButtonAlias forwardButton;

		[Token(Token = "0x4001BFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6595DC", Offset = "0x6595DC")]
		public VRTK_ControllerEvents.ButtonAlias backwardButton;

		[Token(Token = "0x4001BFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x659614", Offset = "0x659614")]
		public VRTK_ControllerEvents.ButtonAlias leftButton;

		[Token(Token = "0x4001C00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65964C", Offset = "0x65964C")]
		public VRTK_ControllerEvents.ButtonAlias rightButton;

		[Token(Token = "0x4001C01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		protected bool forwardPressed;

		[Token(Token = "0x4001C02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA1")]
		protected bool backwardPressed;

		[Token(Token = "0x4001C03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA2")]
		protected bool leftPressed;

		[Token(Token = "0x4001C04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA3")]
		protected bool rightPressed;

		[Token(Token = "0x4001C05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		protected VRTK_ControllerEvents.ButtonAlias subscribedForwardButton;

		[Token(Token = "0x4001C06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		protected VRTK_ControllerEvents.ButtonAlias subscribedBackwardButton;

		[Token(Token = "0x4001C07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		protected VRTK_ControllerEvents.ButtonAlias subscribedLeftButton;

		[Token(Token = "0x4001C08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		protected VRTK_ControllerEvents.ButtonAlias subscribedRightButton;

		[Token(Token = "0x4001C09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		protected Vector2 axisDeadzone;

		[Token(Token = "0x6001D02")]
		[Address(RVA = "0xB043E8", Offset = "0xB043E8", VA = "0xB043E8", Slot = "11")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6001D03")]
		[Address(RVA = "0xB04410", Offset = "0xB04410", VA = "0xB04410", Slot = "12")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x6001D04")]
		[Address(RVA = "0xB04438", Offset = "0xB04438", VA = "0xB04438", Slot = "14")]
		protected override void Update()
		{
		}

		[Token(Token = "0x6001D05")]
		[Address(RVA = "0xB044B8", Offset = "0xB044B8", VA = "0xB044B8", Slot = "6")]
		protected override void ControlFixedUpdate()
		{
		}

		[Token(Token = "0x6001D06")]
		[Address(RVA = "0xB0464C", Offset = "0xB0464C", VA = "0xB0464C", Slot = "7")]
		protected override VRTK_ObjectControl GetOtherControl()
		{
			return null;
		}

		[Token(Token = "0x6001D07")]
		[Address(RVA = "0xB04778", Offset = "0xB04778", VA = "0xB04778", Slot = "9")]
		protected override void SetListeners(bool state)
		{
		}

		[Token(Token = "0x6001D08")]
		[Address(RVA = "0xB04A20", Offset = "0xB04A20", VA = "0xB04A20", Slot = "8")]
		protected override bool IsInAction()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D09")]
		[Address(RVA = "0xB04A50", Offset = "0xB04A50", VA = "0xB04A50", Slot = "22")]
		protected virtual void SetDirectionListener(bool state, VRTK_ControllerEvents.ButtonAlias directionButton, ref VRTK_ControllerEvents.ButtonAlias subscribedDirectionButton, ControllerInteractionEventHandler pressCallback, ControllerInteractionEventHandler releaseCallback)
		{
		}

		[Token(Token = "0x6001D0A")]
		[Address(RVA = "0xB04BF8", Offset = "0xB04BF8", VA = "0xB04BF8", Slot = "23")]
		protected virtual void ForwardButtonPressed(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001D0B")]
		[Address(RVA = "0xB04C04", Offset = "0xB04C04", VA = "0xB04C04", Slot = "24")]
		protected virtual void ForwardButtonReleased(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001D0C")]
		[Address(RVA = "0xB04C0C", Offset = "0xB04C0C", VA = "0xB04C0C", Slot = "25")]
		protected virtual void BackwardButtonPressed(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001D0D")]
		[Address(RVA = "0xB04C18", Offset = "0xB04C18", VA = "0xB04C18", Slot = "26")]
		protected virtual void BackwardButtonReleased(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001D0E")]
		[Address(RVA = "0xB04C20", Offset = "0xB04C20", VA = "0xB04C20", Slot = "27")]
		protected virtual void LeftButtonPressed(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001D0F")]
		[Address(RVA = "0xB04C2C", Offset = "0xB04C2C", VA = "0xB04C2C", Slot = "28")]
		protected virtual void LeftButtonReleased(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001D10")]
		[Address(RVA = "0xB04C34", Offset = "0xB04C34", VA = "0xB04C34", Slot = "29")]
		protected virtual void RightButtonPressed(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001D11")]
		[Address(RVA = "0xB04C40", Offset = "0xB04C40", VA = "0xB04C40", Slot = "30")]
		protected virtual void RightButtonReleased(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001D12")]
		[Address(RVA = "0xB04C48", Offset = "0xB04C48", VA = "0xB04C48")]
		public VRTK_ButtonControl()
		{
		}
	}
	[Token(Token = "0x20003E2")]
	public struct DashTeleportEventArgs
	{
		[Token(Token = "0x4001C0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public RaycastHit[] hits;
	}
	[Token(Token = "0x20003E3")]
	public delegate void DashTeleportEventHandler(object sender, DashTeleportEventArgs e);
	[Token(Token = "0x20003E4")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x63FED4", Offset = "0x63FED4")]
	public class VRTK_DashTeleport : VRTK_HeightAdjustTeleport
	{
		[Token(Token = "0x2000811")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x645E78", Offset = "0x645E78")]
		private sealed class <lerpToPosition>d__24 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002ABD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002ABE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002ABF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VRTK_DashTeleport <>4__this;

			[Token(Token = "0x4002AC0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Vector3 targetPosition;

			[Token(Token = "0x4002AC1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public DestinationMarkerEventArgs e;

			[Token(Token = "0x4002AC2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
			public Vector3 startPosition;

			[Token(Token = "0x4002AC3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
			public Quaternion startRotation;

			[Token(Token = "0x4002AC4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
			public Quaternion targetRotation;

			[Token(Token = "0x4002AC5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
			public object sender;

			[Token(Token = "0x4002AC6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
			private bool <gameObjectInTheWay>5__2;

			[Token(Token = "0x4002AC7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
			private RaycastHit[] <allHits>5__3;

			[Token(Token = "0x4002AC8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
			private float <elapsedTime>5__4;

			[Token(Token = "0x4002AC9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
			private float <currentLerpedTime>5__5;

			[Token(Token = "0x4002ACA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
			private WaitForEndOfFrame <delayInstruction>5__6;

			[Token(Token = "0x17000343")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60032F4")]
				[Address(RVA = "0xA26924", Offset = "0xA26924", VA = "0xA26924", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000344")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60032F6")]
				[Address(RVA = "0xA26994", Offset = "0xA26994", VA = "0xA26994", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60032F1")]
			[Address(RVA = "0xA260CC", Offset = "0xA260CC", VA = "0xA260CC")]
			[DebuggerHidden]
			public <lerpToPosition>d__24(int <>1__state)
			{
			}

			[Token(Token = "0x60032F2")]
			[Address(RVA = "0xA26178", Offset = "0xA26178", VA = "0xA26178", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60032F3")]
			[Address(RVA = "0xA2617C", Offset = "0xA2617C", VA = "0xA2617C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60032F5")]
			[Address(RVA = "0xA2692C", Offset = "0xA2692C", VA = "0xA2692C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001C0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x659684", Offset = "0x659684")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x659684", Offset = "0x659684")]
		public float normalLerpTime;

		[Token(Token = "0x4001C0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6596E4", Offset = "0x6596E4")]
		public float minSpeedMps;

		[Token(Token = "0x4001C0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65971C", Offset = "0x65971C")]
		public float capsuleTopOffset;

		[Token(Token = "0x4001C0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x659754", Offset = "0x659754")]
		public float capsuleBottomOffset;

		[Token(Token = "0x4001C0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65978C", Offset = "0x65978C")]
		public float capsuleRadius;

		[Token(Token = "0x4001C12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		protected float minDistanceForNormalLerp;

		[Token(Token = "0x4001C13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		protected float lerpTime;

		[Token(Token = "0x4001C14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		protected Coroutine attemptLerpRoutine;

		[Token(Token = "0x14000104")]
		public event DashTeleportEventHandler WillDashThruObjects
		{
			[Token(Token = "0x6001D17")]
			[Address(RVA = "0xA25594", Offset = "0xA25594", VA = "0xA25594")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66D0A0", Offset = "0x66D0A0")]
			add
			{
			}
			[Token(Token = "0x6001D18")]
			[Address(RVA = "0xA25680", Offset = "0xA25680", VA = "0xA25680")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66D0B0", Offset = "0x66D0B0")]
			remove
			{
			}
		}

		[Token(Token = "0x14000105")]
		public event DashTeleportEventHandler DashedThruObjects
		{
			[Token(Token = "0x6001D19")]
			[Address(RVA = "0xA2576C", Offset = "0xA2576C", VA = "0xA2576C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66D0C0", Offset = "0x66D0C0")]
			add
			{
			}
			[Token(Token = "0x6001D1A")]
			[Address(RVA = "0xA25858", Offset = "0xA25858", VA = "0xA25858")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66D0D0", Offset = "0x66D0D0")]
			remove
			{
			}
		}

		[Token(Token = "0x6001D1B")]
		[Address(RVA = "0xA25944", Offset = "0xA25944", VA = "0xA25944", Slot = "37")]
		public virtual void OnWillDashThruObjects(DashTeleportEventArgs e)
		{
		}

		[Token(Token = "0x6001D1C")]
		[Address(RVA = "0xA25968", Offset = "0xA25968", VA = "0xA25968", Slot = "38")]
		public virtual void OnDashedThruObjects(DashTeleportEventArgs e)
		{
		}

		[Token(Token = "0x6001D1D")]
		[Address(RVA = "0xA2598C", Offset = "0xA2598C", VA = "0xA2598C", Slot = "13")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6001D1E")]
		[Address(RVA = "0xA259BC", Offset = "0xA259BC", VA = "0xA259BC", Slot = "14")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x6001D1F")]
		[Address(RVA = "0xA259F8", Offset = "0xA259F8", VA = "0xA259F8", Slot = "23")]
		protected override Vector3 SetNewPosition(Vector3 position, Transform target, bool forceDestinationPosition)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001D20")]
		[Address(RVA = "0xA25A0C", Offset = "0xA25A0C", VA = "0xA25A0C", Slot = "24")]
		protected override Quaternion SetNewRotation(Quaternion? rotation)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6001D21")]
		[Address(RVA = "0xA25AF4", Offset = "0xA25AF4", VA = "0xA25AF4", Slot = "20")]
		protected override void StartTeleport(object sender, DestinationMarkerEventArgs e)
		{
		}

		[Token(Token = "0x6001D22")]
		[Address(RVA = "0xA25B44", Offset = "0xA25B44", VA = "0xA25B44", Slot = "21")]
		protected override void ProcessOrientation(object sender, DestinationMarkerEventArgs e, Vector3 targetPosition, Quaternion targetRotation)
		{
		}

		[Token(Token = "0x6001D23")]
		[Address(RVA = "0xA25CCC", Offset = "0xA25CCC", VA = "0xA25CCC", Slot = "39")]
		protected virtual Vector3 CalculateOffsetPosition(Vector3 targetPosition, Quaternion targetRotation)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001D24")]
		[Address(RVA = "0xA25F1C", Offset = "0xA25F1C", VA = "0xA25F1C", Slot = "22")]
		protected override void EndTeleport(object sender, DestinationMarkerEventArgs e)
		{
		}

		[Token(Token = "0x6001D25")]
		[Address(RVA = "0xA25F20", Offset = "0xA25F20", VA = "0xA25F20", Slot = "40")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x66D0E0", Offset = "0x66D0E0")]
		protected virtual IEnumerator lerpToPosition(object sender, DestinationMarkerEventArgs e, Vector3 startPosition, Vector3 targetPosition, Quaternion startRotation, Quaternion targetRotation)
		{
			return null;
		}

		[Token(Token = "0x6001D26")]
		[Address(RVA = "0xA260F8", Offset = "0xA260F8", VA = "0xA260F8", Slot = "41")]
		protected virtual DashTeleportEventArgs SetDashTeleportEvent(RaycastHit[] hits)
		{
			return default(DashTeleportEventArgs);
		}

		[Token(Token = "0x6001D27")]
		[Address(RVA = "0xA26100", Offset = "0xA26100", VA = "0xA26100")]
		public VRTK_DashTeleport()
		{
		}

		[Token(Token = "0x6001D28")]
		[Address(RVA = "0xA26128", Offset = "0xA26128", VA = "0xA26128")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66D144", Offset = "0x66D144")]
		[DebuggerHidden]
		private void <>n__0(object sender, DestinationMarkerEventArgs e)
		{
		}
	}
	[Token(Token = "0x20003E5")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x63FF0C", Offset = "0x63FF0C")]
	public class VRTK_DragWorld : MonoBehaviour
	{
		[Token(Token = "0x2000812")]
		public enum ActivationRequirement
		{
			[Token(Token = "0x4002ACC")]
			LeftControllerOnly,
			[Token(Token = "0x4002ACD")]
			RightControllerOnly,
			[Token(Token = "0x4002ACE")]
			LeftController,
			[Token(Token = "0x4002ACF")]
			RightController,
			[Token(Token = "0x4002AD0")]
			EitherController,
			[Token(Token = "0x4002AD1")]
			BothControllers
		}

		[Token(Token = "0x2000813")]
		public enum TrackingController
		{
			[Token(Token = "0x4002AD3")]
			LeftController,
			[Token(Token = "0x4002AD4")]
			RightController,
			[Token(Token = "0x4002AD5")]
			EitherController,
			[Token(Token = "0x4002AD6")]
			BothControllers
		}

		[Token(Token = "0x4001C15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6597E4", Offset = "0x6597E4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6597E4", Offset = "0x6597E4")]
		public VRTK_ControllerEvents.ButtonAlias movementActivationButton;

		[Token(Token = "0x4001C16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x659844", Offset = "0x659844")]
		public ActivationRequirement movementActivationRequirement;

		[Token(Token = "0x4001C17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65987C", Offset = "0x65987C")]
		public TrackingController movementTrackingController;

		[Token(Token = "0x4001C18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6598B4", Offset = "0x6598B4")]
		public float movementMultiplier;

		[Token(Token = "0x4001C19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6598EC", Offset = "0x6598EC")]
		public Vector3State movementPositionLock;

		[Token(Token = "0x4001C1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x659924", Offset = "0x659924")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x659924", Offset = "0x659924")]
		public VRTK_ControllerEvents.ButtonAlias rotationActivationButton;

		[Token(Token = "0x4001C1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x659984", Offset = "0x659984")]
		public ActivationRequirement rotationActivationRequirement;

		[Token(Token = "0x4001C1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6599BC", Offset = "0x6599BC")]
		public TrackingController rotationTrackingController;

		[Token(Token = "0x4001C1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6599F4", Offset = "0x6599F4")]
		public float rotationMultiplier;

		[Token(Token = "0x4001C1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x659A2C", Offset = "0x659A2C")]
		public float rotationActivationThreshold;

		[Token(Token = "0x4001C1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x659A64", Offset = "0x659A64")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x659A64", Offset = "0x659A64")]
		public VRTK_ControllerEvents.ButtonAlias scaleActivationButton;

		[Token(Token = "0x4001C20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x659AC4", Offset = "0x659AC4")]
		public ActivationRequirement scaleActivationRequirement;

		[Token(Token = "0x4001C21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x659AFC", Offset = "0x659AFC")]
		public TrackingController scaleTrackingController;

		[Token(Token = "0x4001C22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x659B34", Offset = "0x659B34")]
		public float scaleMultiplier;

		[Token(Token = "0x4001C23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x659B6C", Offset = "0x659B6C")]
		public float scaleActivationThreshold;

		[Token(Token = "0x4001C24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x659BA4", Offset = "0x659BA4")]
		public Vector3 minimumScale;

		[Token(Token = "0x4001C25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x659BDC", Offset = "0x659BDC")]
		public Vector3 maximumScale;

		[Token(Token = "0x4001C26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x659C14", Offset = "0x659C14")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x659C14", Offset = "0x659C14")]
		public Transform controllingTransform;

		[Token(Token = "0x4001C27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x659C74", Offset = "0x659C74")]
		public bool useOffsetTransform;

		[Token(Token = "0x4001C28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x659CAC", Offset = "0x659CAC")]
		public Transform offsetTransform;

		[Token(Token = "0x4001C29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		protected VRTK_ControllerReference leftControllerReference;

		[Token(Token = "0x4001C2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		protected VRTK_ControllerReference rightControllerReference;

		[Token(Token = "0x4001C2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		protected VRTK_ControllerEvents leftControllerEvents;

		[Token(Token = "0x4001C2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		protected VRTK_ControllerEvents rightControllerEvents;

		[Token(Token = "0x4001C2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		protected Transform playArea;

		[Token(Token = "0x4001C2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		protected Transform headset;

		[Token(Token = "0x4001C2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		protected VRTK_ControllerEvents.ButtonAlias subscribedMovementActivationButton;

		[Token(Token = "0x4001C30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		protected Vector3 previousLeftControllerPosition;

		[Token(Token = "0x4001C31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		protected Vector3 previousRightControllerPosition;

		[Token(Token = "0x4001C32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		protected bool movementLeftControllerActivated;

		[Token(Token = "0x4001C33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD5")]
		protected bool movementRightControllerActivated;

		[Token(Token = "0x4001C34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD6")]
		protected bool movementActivated;

		[Token(Token = "0x4001C35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		protected VRTK_ControllerEvents.ButtonAlias subscribedRotationActivationButton;

		[Token(Token = "0x4001C36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		protected Vector2 previousRotationAngle;

		[Token(Token = "0x4001C37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		protected bool rotationLeftControllerActivated;

		[Token(Token = "0x4001C38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE5")]
		protected bool rotationRightControllerActivated;

		[Token(Token = "0x4001C39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE6")]
		protected bool rotationActivated;

		[Token(Token = "0x4001C3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		protected VRTK_ControllerEvents.ButtonAlias subscribedScaleActivationButton;

		[Token(Token = "0x4001C3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		protected float previousControllerDistance;

		[Token(Token = "0x4001C3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		protected bool scaleLeftControllerActivated;

		[Token(Token = "0x4001C3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF1")]
		protected bool scaleRightControllerActivated;

		[Token(Token = "0x4001C3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF2")]
		protected bool scaleActivated;

		[Token(Token = "0x6001D29")]
		[Address(RVA = "0xA2F2E8", Offset = "0xA2F2E8", VA = "0xA2F2E8", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6001D2A")]
		[Address(RVA = "0xA2F350", Offset = "0xA2F350", VA = "0xA2F350", Slot = "5")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6001D2B")]
		[Address(RVA = "0xA2F4EC", Offset = "0xA2F4EC", VA = "0xA2F4EC", Slot = "6")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x6001D2C")]
		[Address(RVA = "0xA2F4FC", Offset = "0xA2F4FC", VA = "0xA2F4FC", Slot = "7")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x6001D2D")]
		[Address(RVA = "0xA2F564", Offset = "0xA2F564", VA = "0xA2F564", Slot = "8")]
		protected virtual void FixedUpdate()
		{
		}

		[Token(Token = "0x6001D2E")]
		[Address(RVA = "0xA2F5C8", Offset = "0xA2F5C8", VA = "0xA2F5C8", Slot = "9")]
		protected virtual VRTK_ControllerEvents GetControllerEvents(GameObject controllerObject)
		{
			return null;
		}

		[Token(Token = "0x6001D2F")]
		[Address(RVA = "0xA2F664", Offset = "0xA2F664", VA = "0xA2F664", Slot = "10")]
		protected virtual void ManageActivationListeners(bool state)
		{
		}

		[Token(Token = "0x6001D30")]
		[Address(RVA = "0xA2F870", Offset = "0xA2F870", VA = "0xA2F870", Slot = "11")]
		protected virtual void ManageActivationListener(bool state, ref VRTK_ControllerEvents.ButtonAlias activationButton, ref VRTK_ControllerEvents.ButtonAlias subscribedActivationButton, ControllerInteractionEventHandler buttonPressedCallback, ControllerInteractionEventHandler buttonReleasedCallback)
		{
		}

		[Token(Token = "0x6001D31")]
		[Address(RVA = "0xA2FCC4", Offset = "0xA2FCC4", VA = "0xA2FCC4", Slot = "12")]
		protected virtual void ControllerModelAvailable(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001D32")]
		[Address(RVA = "0xA2FCD0", Offset = "0xA2FCD0", VA = "0xA2FCD0", Slot = "13")]
		protected virtual void SetControllerReferences()
		{
		}

		[Token(Token = "0x6001D33")]
		[Address(RVA = "0xA2FD40", Offset = "0xA2FD40", VA = "0xA2FD40", Slot = "14")]
		protected virtual void ManageActivationState(SDK_BaseController.ControllerHand hand, ActivationRequirement activationRequirement, bool pressedState, ref bool leftActivationState, ref bool rightActivationState, ref bool activated)
		{
		}

		[Token(Token = "0x6001D34")]
		[Address(RVA = "0xA2FDCC", Offset = "0xA2FDCC", VA = "0xA2FDCC", Slot = "15")]
		protected virtual void MovementActivationButtonPressed(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001D35")]
		[Address(RVA = "0xA2FE3C", Offset = "0xA2FE3C", VA = "0xA2FE3C", Slot = "16")]
		protected virtual void MovementActivationButtonReleased(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001D36")]
		[Address(RVA = "0xA2FE98", Offset = "0xA2FE98", VA = "0xA2FE98", Slot = "17")]
		protected virtual void RotationActivationButtonPressed(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001D37")]
		[Address(RVA = "0xA2FF10", Offset = "0xA2FF10", VA = "0xA2FF10", Slot = "18")]
		protected virtual void RotationActivationButtonReleased(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001D38")]
		[Address(RVA = "0xA2FF6C", Offset = "0xA2FF6C", VA = "0xA2FF6C", Slot = "19")]
		protected virtual void ScaleActivationButtonPressed(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001D39")]
		[Address(RVA = "0xA2FFE4", Offset = "0xA2FFE4", VA = "0xA2FFE4", Slot = "20")]
		protected virtual void ScaleActivationButtonReleased(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001D3A")]
		[Address(RVA = "0xA30040", Offset = "0xA30040", VA = "0xA30040", Slot = "21")]
		protected virtual Vector3 GetLeftControllerPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001D3B")]
		[Address(RVA = "0xA3012C", Offset = "0xA3012C", VA = "0xA3012C", Slot = "22")]
		protected virtual Vector3 GetRightControllerPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001D3C")]
		[Address(RVA = "0xA30218", Offset = "0xA30218", VA = "0xA30218", Slot = "23")]
		protected virtual void SetControllerPositions()
		{
		}

		[Token(Token = "0x6001D3D")]
		[Address(RVA = "0xA30268", Offset = "0xA30268", VA = "0xA30268", Slot = "24")]
		protected virtual Vector2 GetControllerRotation()
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001D3E")]
		[Address(RVA = "0xA303BC", Offset = "0xA303BC", VA = "0xA303BC", Slot = "25")]
		protected virtual float GetControllerDistance()
		{
			return default(float);
		}

		[Token(Token = "0x6001D3F")]
		[Address(RVA = "0xA3060C", Offset = "0xA3060C", VA = "0xA3060C", Slot = "26")]
		protected virtual bool TrackingControllerEnabled(TrackingController trackingController, TrackingController hand, bool handActivated)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D40")]
		[Address(RVA = "0xA30630", Offset = "0xA30630", VA = "0xA30630", Slot = "27")]
		protected virtual void Move()
		{
		}

		[Token(Token = "0x6001D41")]
		[Address(RVA = "0xA30AA4", Offset = "0xA30AA4", VA = "0xA30AA4", Slot = "28")]
		protected virtual void Rotate()
		{
		}

		[Token(Token = "0x6001D42")]
		[Address(RVA = "0xA30D88", Offset = "0xA30D88", VA = "0xA30D88", Slot = "29")]
		protected virtual void RotateByAngle(float angle)
		{
		}

		[Token(Token = "0x6001D43")]
		[Address(RVA = "0xA30F64", Offset = "0xA30F64", VA = "0xA30F64", Slot = "30")]
		protected virtual void Scale()
		{
		}

		[Token(Token = "0x6001D44")]
		[Address(RVA = "0xA3122C", Offset = "0xA3122C", VA = "0xA3122C")]
		public VRTK_DragWorld()
		{
		}
	}
	[Token(Token = "0x20003E6")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x63FF44", Offset = "0x63FF44")]
	public class VRTK_HeightAdjustTeleport : VRTK_BasicTeleport
	{
		[Token(Token = "0x4001C3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x659CE4", Offset = "0x659CE4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x659CE4", Offset = "0x659CE4")]
		public bool snapToNearestFloor;

		[Token(Token = "0x4001C40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB5")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x659D44", Offset = "0x659D44")]
		public bool applyPlayareaParentOffset;

		[Token(Token = "0x4001C41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x659D7C", Offset = "0x659D7C")]
		public VRTK_CustomRaycast customRaycast;

		[Token(Token = "0x6001D45")]
		[Address(RVA = "0xCFF790", Offset = "0xCFF790", VA = "0xCFF790", Slot = "13")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6001D46")]
		[Address(RVA = "0xCFF7CC", Offset = "0xCFF7CC", VA = "0xCFF7CC", Slot = "14")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x6001D47")]
		[Address(RVA = "0xCFF7D4", Offset = "0xCFF7D4", VA = "0xCFF7D4", Slot = "25")]
		protected override Vector3 GetNewPosition(Vector3 tipPosition, Transform target, bool returnOriginalPosition)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001D48")]
		[Address(RVA = "0xCFF86C", Offset = "0xCFF86C", VA = "0xCFF86C", Slot = "34")]
		protected virtual void AdjustForParentOffset()
		{
		}

		[Token(Token = "0x6001D49")]
		[Address(RVA = "0xCFFB48", Offset = "0xCFFB48", VA = "0xCFFB48", Slot = "35")]
		protected virtual float GetParentOffset()
		{
			return default(float);
		}

		[Token(Token = "0x6001D4A")]
		[Address(RVA = "0xCFFC48", Offset = "0xCFFC48", VA = "0xCFFC48", Slot = "36")]
		protected virtual float GetTeleportY(Transform target, Vector3 tipPosition)
		{
			return default(float);
		}

		[Token(Token = "0x6001D4B")]
		[Address(RVA = "0xCFFE9C", Offset = "0xCFFE9C", VA = "0xCFFE9C")]
		public VRTK_HeightAdjustTeleport()
		{
		}
	}
	[Token(Token = "0x20003E7")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x63FF7C", Offset = "0x63FF7C")]
	public class VRTK_MoveInPlace : MonoBehaviour
	{
		[Token(Token = "0x2000814")]
		public enum ControlOptions
		{
			[Token(Token = "0x4002AD8")]
			HeadsetAndControllers,
			[Token(Token = "0x4002AD9")]
			ControllersOnly,
			[Token(Token = "0x4002ADA")]
			HeadsetOnly
		}

		[Token(Token = "0x2000815")]
		public enum DirectionalMethod
		{
			[Token(Token = "0x4002ADC")]
			Gaze,
			[Token(Token = "0x4002ADD")]
			ControllerRotation,
			[Token(Token = "0x4002ADE")]
			DumbDecoupling,
			[Token(Token = "0x4002ADF")]
			SmartDecoupling,
			[Token(Token = "0x4002AE0")]
			EngageControllerRotationOnly,
			[Token(Token = "0x4002AE1")]
			LeftControllerRotationOnly,
			[Token(Token = "0x4002AE2")]
			RightControllerRotationOnly
		}

		[Token(Token = "0x4001C42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x659DB4", Offset = "0x659DB4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x659DB4", Offset = "0x659DB4")]
		public bool leftController;

		[Token(Token = "0x4001C43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x659E14", Offset = "0x659E14")]
		public bool rightController;

		[Token(Token = "0x4001C44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x659E4C", Offset = "0x659E4C")]
		public VRTK_ControllerEvents.ButtonAlias engageButton;

		[Token(Token = "0x4001C45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x659E84", Offset = "0x659E84")]
		public ControlOptions controlOptions;

		[Token(Token = "0x4001C46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x659EBC", Offset = "0x659EBC")]
		public DirectionalMethod directionMethod;

		[Token(Token = "0x4001C47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x659EF4", Offset = "0x659EF4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x659EF4", Offset = "0x659EF4")]
		public float speedScale;

		[Token(Token = "0x4001C48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x659F54", Offset = "0x659F54")]
		public float maxSpeed;

		[Token(Token = "0x4001C49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x659F8C", Offset = "0x659F8C")]
		public float deceleration;

		[Token(Token = "0x4001C4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x659FC4", Offset = "0x659FC4")]
		public float fallingDeceleration;

		[Token(Token = "0x4001C4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x659FFC", Offset = "0x659FFC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x659FFC", Offset = "0x659FFC")]
		public float smartDecoupleThreshold;

		[Token(Token = "0x4001C4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65A05C", Offset = "0x65A05C")]
		public float sensitivity;

		[Token(Token = "0x4001C4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x65A094", Offset = "0x65A094")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65A094", Offset = "0x65A094")]
		public VRTK_BodyPhysics bodyPhysics;

		[Token(Token = "0x4001C4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected Transform playArea;

		[Token(Token = "0x4001C4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected GameObject controllerLeftHand;

		[Token(Token = "0x4001C50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		protected GameObject controllerRightHand;

		[Token(Token = "0x4001C51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		protected VRTK_ControllerReference engagedController;

		[Token(Token = "0x4001C52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		protected Transform headset;

		[Token(Token = "0x4001C53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		protected bool leftSubscribed;

		[Token(Token = "0x4001C54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		protected bool rightSubscribed;

		[Token(Token = "0x4001C55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x72")]
		protected bool previousLeftControllerState;

		[Token(Token = "0x4001C56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x73")]
		protected bool previousRightControllerState;

		[Token(Token = "0x4001C57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		protected VRTK_ControllerEvents.ButtonAlias previousEngageButton;

		[Token(Token = "0x4001C58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		protected bool currentlyFalling;

		[Token(Token = "0x4001C59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		protected int averagePeriod;

		[Token(Token = "0x4001C5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		protected List<Transform> trackedObjects;

		[Token(Token = "0x4001C5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		protected Dictionary<Transform, List<float>> movementList;

		[Token(Token = "0x4001C5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		protected Dictionary<Transform, float> previousYPositions;

		[Token(Token = "0x4001C5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		protected Vector3 initialGaze;

		[Token(Token = "0x4001C5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		protected float currentSpeed;

		[Token(Token = "0x4001C5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		protected Vector3 currentDirection;

		[Token(Token = "0x4001C60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		protected Vector3 previousDirection;

		[Token(Token = "0x4001C61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		protected bool movementEngaged;

		[Token(Token = "0x6001D4C")]
		[Address(RVA = "0xA7FD08", Offset = "0xA7FD08", VA = "0xA7FD08", Slot = "4")]
		public virtual void SetControlOptions(ControlOptions givenControlOptions)
		{
		}

		[Token(Token = "0x6001D4D")]
		[Address(RVA = "0xA7FF28", Offset = "0xA7FF28", VA = "0xA7FF28", Slot = "5")]
		public virtual Vector3 GetMovementDirection()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001D4E")]
		[Address(RVA = "0xA7FF34", Offset = "0xA7FF34", VA = "0xA7FF34", Slot = "6")]
		public virtual float GetSpeed()
		{
			return default(float);
		}

		[Token(Token = "0x6001D4F")]
		[Address(RVA = "0xA7FF3C", Offset = "0xA7FF3C", VA = "0xA7FF3C", Slot = "7")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6001D50")]
		[Address(RVA = "0xA7FFA4", Offset = "0xA7FFA4", VA = "0xA7FFA4", Slot = "8")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6001D51")]
		[Address(RVA = "0xA802FC", Offset = "0xA802FC", VA = "0xA802FC", Slot = "9")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x6001D52")]
		[Address(RVA = "0xA80368", Offset = "0xA80368", VA = "0xA80368", Slot = "10")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x6001D53")]
		[Address(RVA = "0xA803D0", Offset = "0xA803D0", VA = "0xA803D0", Slot = "11")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x6001D54")]
		[Address(RVA = "0xA80438", Offset = "0xA80438", VA = "0xA80438", Slot = "12")]
		protected virtual void FixedUpdate()
		{
		}

		[Token(Token = "0x6001D55")]
		[Address(RVA = "0xA80634", Offset = "0xA80634", VA = "0xA80634", Slot = "13")]
		protected virtual bool MovementActivated()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D56")]
		[Address(RVA = "0xA80654", Offset = "0xA80654", VA = "0xA80654", Slot = "14")]
		protected virtual void CheckControllerState(GameObject controller, bool controllerState, ref bool subscribedState, ref bool previousState)
		{
		}

		[Token(Token = "0x6001D57")]
		[Address(RVA = "0xA806AC", Offset = "0xA806AC", VA = "0xA806AC", Slot = "15")]
		protected virtual float CalculateListAverage()
		{
			return default(float);
		}

		[Token(Token = "0x6001D58")]
		[Address(RVA = "0xA80934", Offset = "0xA80934", VA = "0xA80934", Slot = "16")]
		protected virtual Vector3 HeadsetPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001D59")]
		[Address(RVA = "0xA80A50", Offset = "0xA80A50", VA = "0xA80A50", Slot = "17")]
		protected virtual Vector3 SetDirection()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001D5A")]
		[Address(RVA = "0xA80CFC", Offset = "0xA80CFC", VA = "0xA80CFC", Slot = "18")]
		protected virtual Vector3 CalculateCouplingDirection()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001D5B")]
		[Address(RVA = "0xA80F80", Offset = "0xA80F80", VA = "0xA80F80", Slot = "19")]
		protected virtual Vector3 CalculateControllerRotationDirection(Vector3 calculatedControllerDirection)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001D5C")]
		[Address(RVA = "0xA81050", Offset = "0xA81050", VA = "0xA81050", Slot = "20")]
		protected virtual void SetDeltaTransformData()
		{
		}

		[Token(Token = "0x6001D5D")]
		[Address(RVA = "0xA8115C", Offset = "0xA8115C", VA = "0xA8115C", Slot = "21")]
		protected virtual void MovePlayArea(Vector3 moveDirection, float moveSpeed)
		{
		}

		[Token(Token = "0x6001D5E")]
		[Address(RVA = "0xA8135C", Offset = "0xA8135C", VA = "0xA8135C", Slot = "22")]
		protected virtual bool CanMove(VRTK_BodyPhysics givenBodyPhysics, Vector3 currentPosition, Vector3 proposedPosition)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D5F")]
		[Address(RVA = "0xA814DC", Offset = "0xA814DC", VA = "0xA814DC", Slot = "23")]
		protected virtual void HandleFalling()
		{
		}

		[Token(Token = "0x6001D60")]
		[Address(RVA = "0xA815F4", Offset = "0xA815F4", VA = "0xA815F4", Slot = "24")]
		protected virtual void EngageButtonPressed(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001D61")]
		[Address(RVA = "0xA81608", Offset = "0xA81608", VA = "0xA81608", Slot = "25")]
		protected virtual void EngageButtonReleased(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001D62")]
		[Address(RVA = "0xA81770", Offset = "0xA81770", VA = "0xA81770", Slot = "26")]
		protected virtual Quaternion DetermineAverageControllerRotation()
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6001D63")]
		[Address(RVA = "0xA81A28", Offset = "0xA81A28", VA = "0xA81A28", Slot = "27")]
		protected virtual Quaternion AverageRotation(Quaternion rot1, Quaternion rot2)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6001D64")]
		[Address(RVA = "0xA81AFC", Offset = "0xA81AFC", VA = "0xA81AFC", Slot = "28")]
		protected virtual void SetControllerListeners(GameObject controller, bool controllerState, ref bool subscribedState, bool forceDisabled = false)
		{
		}

		[Token(Token = "0x6001D65")]
		[Address(RVA = "0xA81BC4", Offset = "0xA81BC4", VA = "0xA81BC4", Slot = "29")]
		protected virtual void ToggleControllerListeners(GameObject controller, bool toggle, ref bool subscribed)
		{
		}

		[Token(Token = "0x6001D66")]
		[Address(RVA = "0xA81EBC", Offset = "0xA81EBC", VA = "0xA81EBC")]
		public VRTK_MoveInPlace()
		{
		}
	}
	[Token(Token = "0x20003E8")]
	public struct ObjectControlEventArgs
	{
		[Token(Token = "0x4001C62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public GameObject controlledGameObject;

		[Token(Token = "0x4001C63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Transform directionDevice;

		[Token(Token = "0x4001C64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 axisDirection;

		[Token(Token = "0x4001C65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float axis;

		[Token(Token = "0x4001C66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float deadzone;

		[Token(Token = "0x4001C67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool currentlyFalling;

		[Token(Token = "0x4001C68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
		public bool modifierActive;
	}
	[Token(Token = "0x20003E9")]
	public delegate void ObjectControlEventHandler(object sender, ObjectControlEventArgs e);
	[Token(Token = "0x20003EA")]
	public abstract class VRTK_ObjectControl : MonoBehaviour
	{
		[Token(Token = "0x2000816")]
		public enum DirectionDevices
		{
			[Token(Token = "0x4002AE4")]
			Headset,
			[Token(Token = "0x4002AE5")]
			LeftController,
			[Token(Token = "0x4002AE6")]
			RightController,
			[Token(Token = "0x4002AE7")]
			ControlledObject
		}

		[Token(Token = "0x4001C69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x65A0F4", Offset = "0x65A0F4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65A0F4", Offset = "0x65A0F4")]
		public DirectionDevices deviceForDirection;

		[Token(Token = "0x4001C6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65A154", Offset = "0x65A154")]
		public bool disableOtherControlsOnActive;

		[Token(Token = "0x4001C6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65A18C", Offset = "0x65A18C")]
		public bool affectOnFalling;

		[Token(Token = "0x4001C6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65A1C4", Offset = "0x65A1C4")]
		public GameObject controlOverrideObject;

		[Token(Token = "0x4001C6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x65A1FC", Offset = "0x65A1FC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65A1FC", Offset = "0x65A1FC")]
		public VRTK_ControllerEvents controller;

		[Token(Token = "0x4001C6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65A25C", Offset = "0x65A25C")]
		public VRTK_BodyPhysics bodyPhysics;

		[Token(Token = "0x4001C71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected VRTK_ControllerEvents controllerEvents;

		[Token(Token = "0x4001C72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected VRTK_ObjectControl otherObjectControl;

		[Token(Token = "0x4001C73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		protected GameObject controlledGameObject;

		[Token(Token = "0x4001C74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		protected GameObject setControlOverrideObject;

		[Token(Token = "0x4001C75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		protected Transform directionDevice;

		[Token(Token = "0x4001C76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		protected DirectionDevices previousDeviceForDirection;

		[Token(Token = "0x4001C77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		protected Vector2 currentAxis;

		[Token(Token = "0x4001C78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		protected Vector2 storedAxis;

		[Token(Token = "0x4001C79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		protected bool currentlyFalling;

		[Token(Token = "0x4001C7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x85")]
		protected bool modifierActive;

		[Token(Token = "0x4001C7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		protected float controlledGameObjectPreviousY;

		[Token(Token = "0x4001C7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		protected float controlledGameObjectPreviousYOffset;

		[Token(Token = "0x14000106")]
		public event ObjectControlEventHandler XAxisChanged
		{
			[Token(Token = "0x6001D6B")]
			[Address(RVA = "0xA84D00", Offset = "0xA84D00", VA = "0xA84D00")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66D17C", Offset = "0x66D17C")]
			add
			{
			}
			[Token(Token = "0x6001D6C")]
			[Address(RVA = "0xA84DEC", Offset = "0xA84DEC", VA = "0xA84DEC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66D18C", Offset = "0x66D18C")]
			remove
			{
			}
		}

		[Token(Token = "0x14000107")]
		public event ObjectControlEventHandler YAxisChanged
		{
			[Token(Token = "0x6001D6D")]
			[Address(RVA = "0xA84ED8", Offset = "0xA84ED8", VA = "0xA84ED8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66D19C", Offset = "0x66D19C")]
			add
			{
			}
			[Token(Token = "0x6001D6E")]
			[Address(RVA = "0xA84FC4", Offset = "0xA84FC4", VA = "0xA84FC4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66D1AC", Offset = "0x66D1AC")]
			remove
			{
			}
		}

		[Token(Token = "0x6001D6F")]
		[Address(RVA = "0xA850B0", Offset = "0xA850B0", VA = "0xA850B0", Slot = "4")]
		public virtual void OnXAxisChanged(ObjectControlEventArgs e)
		{
		}

		[Token(Token = "0x6001D70")]
		[Address(RVA = "0xA850FC", Offset = "0xA850FC", VA = "0xA850FC", Slot = "5")]
		public virtual void OnYAxisChanged(ObjectControlEventArgs e)
		{
		}

		[Token(Token = "0x6001D71")]
		protected abstract void ControlFixedUpdate();

		[Token(Token = "0x6001D72")]
		protected abstract VRTK_ObjectControl GetOtherControl();

		[Token(Token = "0x6001D73")]
		protected abstract bool IsInAction();

		[Token(Token = "0x6001D74")]
		protected abstract void SetListeners(bool state);

		[Token(Token = "0x6001D75")]
		[Address(RVA = "0xA85148", Offset = "0xA85148", VA = "0xA85148", Slot = "10")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6001D76")]
		[Address(RVA = "0xA851B0", Offset = "0xA851B0", VA = "0xA851B0", Slot = "11")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6001D77")]
		[Address(RVA = "0xA85564", Offset = "0xA85564", VA = "0xA85564", Slot = "12")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x6001D78")]
		[Address(RVA = "0xA85574", Offset = "0xA85574", VA = "0xA85574", Slot = "13")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x6001D79")]
		[Address(RVA = "0xA855DC", Offset = "0xA855DC", VA = "0xA855DC", Slot = "14")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x6001D7A")]
		[Address(RVA = "0xA85680", Offset = "0xA85680", VA = "0xA85680", Slot = "15")]
		protected virtual void FixedUpdate()
		{
		}

		[Token(Token = "0x6001D7B")]
		[Address(RVA = "0xA856CC", Offset = "0xA856CC", VA = "0xA856CC", Slot = "16")]
		protected virtual ObjectControlEventArgs SetEventArguements(Vector3 axisDirection, float axis, float axisDeadzone)
		{
			return default(ObjectControlEventArgs);
		}

		[Token(Token = "0x6001D7C")]
		[Address(RVA = "0xA856F4", Offset = "0xA856F4", VA = "0xA856F4", Slot = "17")]
		protected virtual void SetControlledObject()
		{
		}

		[Token(Token = "0x6001D7D")]
		[Address(RVA = "0xA85860", Offset = "0xA85860", VA = "0xA85860", Slot = "18")]
		protected virtual void CheckFalling()
		{
		}

		[Token(Token = "0x6001D7E")]
		[Address(RVA = "0xA85A98", Offset = "0xA85A98", VA = "0xA85A98", Slot = "19")]
		protected virtual bool ObjectHeightChange()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D7F")]
		[Address(RVA = "0xA85B44", Offset = "0xA85B44", VA = "0xA85B44", Slot = "20")]
		protected virtual Transform GetDirectionDevice()
		{
			return null;
		}

		[Token(Token = "0x6001D80")]
		[Address(RVA = "0xA85C64", Offset = "0xA85C64", VA = "0xA85C64", Slot = "21")]
		protected virtual void CheckDirectionDevice()
		{
		}

		[Token(Token = "0x6001D81")]
		[Address(RVA = "0xA85CB0", Offset = "0xA85CB0", VA = "0xA85CB0")]
		protected VRTK_ObjectControl()
		{
		}
	}
	[Token(Token = "0x20003EB")]
	public struct PlayerClimbEventArgs
	{
		[Token(Token = "0x4001C7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VRTK_ControllerReference controllerReference;

		[Token(Token = "0x4001C7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public GameObject target;
	}
	[Token(Token = "0x20003EC")]
	public delegate void PlayerClimbEventHandler(object sender, PlayerClimbEventArgs e);
	[Token(Token = "0x20003ED")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x63FFB4", Offset = "0x63FFB4")]
	public class VRTK_PlayerClimb : MonoBehaviour
	{
		[Token(Token = "0x4001C7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x65A2B4", Offset = "0x65A2B4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65A2B4", Offset = "0x65A2B4")]
		public bool usePlayerScale;

		[Token(Token = "0x4001C80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x65A314", Offset = "0x65A314")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65A314", Offset = "0x65A314")]
		public VRTK_BodyPhysics bodyPhysics;

		[Token(Token = "0x4001C81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65A374", Offset = "0x65A374")]
		public VRTK_BasicTeleport teleporter;

		[Token(Token = "0x4001C82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65A3AC", Offset = "0x65A3AC")]
		public VRTK_HeadsetCollision headsetCollision;

		[Token(Token = "0x4001C83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65A3E4", Offset = "0x65A3E4")]
		public VRTK_PositionRewind positionRewind;

		[Token(Token = "0x4001C86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected Transform playArea;

		[Token(Token = "0x4001C87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		protected Vector3 startControllerScaledLocalPosition;

		[Token(Token = "0x4001C88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		protected Vector3 startGrabPointLocalPosition;

		[Token(Token = "0x4001C89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		protected Vector3 startPlayAreaWorldOffset;

		[Token(Token = "0x4001C8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		protected GameObject grabbingController;

		[Token(Token = "0x4001C8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		protected GameObject climbingObject;

		[Token(Token = "0x4001C8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		protected Quaternion climbingObjectLastRotation;

		[Token(Token = "0x4001C8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		protected bool isClimbing;

		[Token(Token = "0x4001C8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA1")]
		protected bool useGrabbedObjectRotation;

		[Token(Token = "0x14000108")]
		public event PlayerClimbEventHandler PlayerClimbStarted
		{
			[Token(Token = "0x6001D86")]
			[Address(RVA = "0xA8EDF4", Offset = "0xA8EDF4", VA = "0xA8EDF4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66D1BC", Offset = "0x66D1BC")]
			add
			{
			}
			[Token(Token = "0x6001D87")]
			[Address(RVA = "0xA8EEE0", Offset = "0xA8EEE0", VA = "0xA8EEE0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66D1CC", Offset = "0x66D1CC")]
			remove
			{
			}
		}

		[Token(Token = "0x14000109")]
		public event PlayerClimbEventHandler PlayerClimbEnded
		{
			[Token(Token = "0x6001D88")]
			[Address(RVA = "0xA8EFCC", Offset = "0xA8EFCC", VA = "0xA8EFCC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66D1DC", Offset = "0x66D1DC")]
			add
			{
			}
			[Token(Token = "0x6001D89")]
			[Address(RVA = "0xA8F0B8", Offset = "0xA8F0B8", VA = "0xA8F0B8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66D1EC", Offset = "0x66D1EC")]
			remove
			{
			}
		}

		[Token(Token = "0x6001D8A")]
		[Address(RVA = "0xA8F1A4", Offset = "0xA8F1A4", VA = "0xA8F1A4", Slot = "4")]
		public virtual bool IsClimbing()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D8B")]
		[Address(RVA = "0xA8F1AC", Offset = "0xA8F1AC", VA = "0xA8F1AC", Slot = "5")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6001D8C")]
		[Address(RVA = "0xA8F4DC", Offset = "0xA8F4DC", VA = "0xA8F4DC", Slot = "6")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6001D8D")]
		[Address(RVA = "0xA8F558", Offset = "0xA8F558", VA = "0xA8F558", Slot = "7")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x6001D8E")]
		[Address(RVA = "0xA8F5A0", Offset = "0xA8F5A0", VA = "0xA8F5A0", Slot = "8")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x6001D8F")]
		[Address(RVA = "0xA8F608", Offset = "0xA8F608", VA = "0xA8F608", Slot = "9")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x6001D90")]
		[Address(RVA = "0xA8FA28", Offset = "0xA8FA28", VA = "0xA8FA28", Slot = "10")]
		protected virtual void OnPlayerClimbStarted(PlayerClimbEventArgs e)
		{
		}

		[Token(Token = "0x6001D91")]
		[Address(RVA = "0xA8FA54", Offset = "0xA8FA54", VA = "0xA8FA54", Slot = "11")]
		protected virtual void OnPlayerClimbEnded(PlayerClimbEventArgs e)
		{
		}

		[Token(Token = "0x6001D92")]
		[Address(RVA = "0xA8FA80", Offset = "0xA8FA80", VA = "0xA8FA80", Slot = "12")]
		protected virtual PlayerClimbEventArgs SetPlayerClimbEvent(VRTK_ControllerReference controllerReference, GameObject target)
		{
			return default(PlayerClimbEventArgs);
		}

		[Token(Token = "0x6001D93")]
		[Address(RVA = "0xA8FA8C", Offset = "0xA8FA8C", VA = "0xA8FA8C", Slot = "13")]
		protected virtual void InitListeners(bool state)
		{
		}

		[Token(Token = "0x6001D94")]
		[Address(RVA = "0xA8FB60", Offset = "0xA8FB60", VA = "0xA8FB60", Slot = "14")]
		protected virtual void InitTeleportListener(bool state)
		{
		}

		[Token(Token = "0x6001D95")]
		[Address(RVA = "0xA8FC5C", Offset = "0xA8FC5C", VA = "0xA8FC5C", Slot = "15")]
		protected virtual void OnTeleport(object sender, DestinationMarkerEventArgs e)
		{
		}

		[Token(Token = "0x6001D96")]
		[Address(RVA = "0xA8FCD4", Offset = "0xA8FCD4", VA = "0xA8FCD4", Slot = "16")]
		protected virtual Vector3 GetScaledLocalPosition(Transform objTransform)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001D97")]
		[Address(RVA = "0xA8FE90", Offset = "0xA8FE90", VA = "0xA8FE90", Slot = "17")]
		protected virtual void OnGrabObject(object sender, ObjectInteractEventArgs e)
		{
		}

		[Token(Token = "0x6001D98")]
		[Address(RVA = "0xA90068", Offset = "0xA90068", VA = "0xA90068", Slot = "18")]
		protected virtual void OnUngrabObject(object sender, ObjectInteractEventArgs e)
		{
		}

		[Token(Token = "0x6001D99")]
		[Address(RVA = "0xA90298", Offset = "0xA90298", VA = "0xA90298", Slot = "19")]
		protected virtual void Grab(GameObject currentGrabbingController, VRTK_ControllerReference controllerReference, GameObject target)
		{
		}

		[Token(Token = "0x6001D9A")]
		[Address(RVA = "0xA9062C", Offset = "0xA9062C", VA = "0xA9062C", Slot = "20")]
		protected virtual void Ungrab(bool carryMomentum, VRTK_ControllerReference controllerReference, GameObject target)
		{
		}

		[Token(Token = "0x6001D9B")]
		[Address(RVA = "0xA90968", Offset = "0xA90968", VA = "0xA90968", Slot = "21")]
		protected virtual bool IsActiveClimbingController(GameObject controller)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D9C")]
		[Address(RVA = "0xA909E4", Offset = "0xA909E4", VA = "0xA909E4", Slot = "22")]
		protected virtual bool IsClimbableObject(GameObject obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D9D")]
		[Address(RVA = "0xA90AE4", Offset = "0xA90AE4", VA = "0xA90AE4", Slot = "23")]
		protected virtual void InitControllerListeners(GameObject controller, bool state)
		{
		}

		[Token(Token = "0x6001D9E")]
		[Address(RVA = "0xA90CC8", Offset = "0xA90CC8", VA = "0xA90CC8", Slot = "24")]
		protected virtual bool IsBodyColliding()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D9F")]
		[Address(RVA = "0xA90DAC", Offset = "0xA90DAC", VA = "0xA90DAC", Slot = "25")]
		protected virtual bool IsHeadsetColliding()
		{
			return default(bool);
		}

		[Token(Token = "0x6001DA0")]
		[Address(RVA = "0xA90E50", Offset = "0xA90E50", VA = "0xA90E50")]
		public VRTK_PlayerClimb()
		{
		}
	}
	[Token(Token = "0x20003EE")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x63FFEC", Offset = "0x63FFEC")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x63FFEC", Offset = "0x63FFEC")]
	public class VRTK_RoomExtender : MonoBehaviour
	{
		[Token(Token = "0x2000817")]
		public enum MovementFunction
		{
			[Token(Token = "0x4002AE9")]
			Nonlinear,
			[Token(Token = "0x4002AEA")]
			LinearDirect
		}

		[Token(Token = "0x4001C8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65A43C", Offset = "0x65A43C")]
		public MovementFunction movementFunction;

		[Token(Token = "0x4001C90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65A474", Offset = "0x65A474")]
		public bool additionalMovementEnabled;

		[Token(Token = "0x4001C91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65A4AC", Offset = "0x65A4AC")]
		public bool additionalMovementEnabledOnButtonPress;

		[Token(Token = "0x4001C92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65A4E4", Offset = "0x65A4E4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x65A4E4", Offset = "0x65A4E4")]
		public float additionalMovementMultiplier;

		[Token(Token = "0x4001C93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65A538", Offset = "0x65A538")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x65A538", Offset = "0x65A538")]
		public float headZoneRadius;

		[Token(Token = "0x4001C94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65A58C", Offset = "0x65A58C")]
		public Transform debugTransform;

		[Token(Token = "0x4001C95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public Vector3 relativeMovementOfCameraRig;

		[Token(Token = "0x4001C96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected Transform movementTransform;

		[Token(Token = "0x4001C97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected Transform playArea;

		[Token(Token = "0x4001C98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected Vector3 headCirclePosition;

		[Token(Token = "0x4001C99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		protected Vector3 lastPosition;

		[Token(Token = "0x4001C9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		protected Vector3 lastMovement;

		[Token(Token = "0x6001DA1")]
		[Address(RVA = "0x93D568", Offset = "0x93D568", VA = "0x93D568", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6001DA2")]
		[Address(RVA = "0x93D5CC", Offset = "0x93D5CC", VA = "0x93D5CC", Slot = "5")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6001DA3")]
		[Address(RVA = "0x93D864", Offset = "0x93D864", VA = "0x93D864", Slot = "6")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x6001DA4")]
		[Address(RVA = "0x93D8C8", Offset = "0x93D8C8", VA = "0x93D8C8", Slot = "7")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x6001DA5")]
		[Address(RVA = "0x93D8F4", Offset = "0x93D8F4", VA = "0x93D8F4", Slot = "8")]
		protected virtual void Move(Vector3 movement)
		{
		}

		[Token(Token = "0x6001DA6")]
		[Address(RVA = "0x93DB50", Offset = "0x93DB50", VA = "0x93DB50", Slot = "9")]
		protected virtual void MoveHeadCircle()
		{
		}

		[Token(Token = "0x6001DA7")]
		[Address(RVA = "0x93DCA4", Offset = "0x93DCA4", VA = "0x93DCA4", Slot = "10")]
		protected virtual void MoveHeadCircleNonLinearDrift()
		{
		}

		[Token(Token = "0x6001DA8")]
		[Address(RVA = "0x93DDF8", Offset = "0x93DDF8", VA = "0x93DDF8", Slot = "11")]
		protected virtual void UpdateLastMovement()
		{
		}

		[Token(Token = "0x6001DA9")]
		[Address(RVA = "0x93DEF0", Offset = "0x93DEF0", VA = "0x93DEF0")]
		public VRTK_RoomExtender()
		{
		}
	}
	[Token(Token = "0x20003EF")]
	public delegate void SlingshotJumpEventHandler(object sender);
	[Token(Token = "0x20003F0")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x64004C", Offset = "0x64004C")]
	public class VRTK_SlingshotJump : MonoBehaviour
	{
		[Token(Token = "0x4001C9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x65A5D4", Offset = "0x65A5D4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65A5D4", Offset = "0x65A5D4")]
		public float releaseWindowTime;

		[Token(Token = "0x4001C9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65A634", Offset = "0x65A634")]
		public float velocityMultiplier;

		[Token(Token = "0x4001C9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65A66C", Offset = "0x65A66C")]
		public float velocityMax;

		[Token(Token = "0x4001C9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65A6A4", Offset = "0x65A6A4")]
		[SerializeField]
		protected VRTK_ControllerEvents.ButtonAlias activationButton;

		[Token(Token = "0x4001C9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65A6F0", Offset = "0x65A6F0")]
		[SerializeField]
		protected VRTK_ControllerEvents.ButtonAlias cancelButton;

		[Token(Token = "0x4001CA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65A73C", Offset = "0x65A73C")]
		[SerializeField]
		protected VRTK_BodyPhysics bodyPhysics;

		[Token(Token = "0x4001CA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65A788", Offset = "0x65A788")]
		[SerializeField]
		protected VRTK_PlayerClimb playerClimb;

		[Token(Token = "0x4001CA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65A7D4", Offset = "0x65A7D4")]
		[SerializeField]
		protected VRTK_BasicTeleport teleporter;

		[Token(Token = "0x4001CA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected Transform playArea;

		[Token(Token = "0x4001CA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		protected Vector3 leftStartAimPosition;

		[Token(Token = "0x4001CA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		protected Vector3 leftReleasePosition;

		[Token(Token = "0x4001CA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		protected bool leftIsAiming;

		[Token(Token = "0x4001CA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		protected Vector3 rightStartAimPosition;

		[Token(Token = "0x4001CA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		protected Vector3 rightReleasePosition;

		[Token(Token = "0x4001CAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		protected bool rightIsAiming;

		[Token(Token = "0x4001CAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		protected VRTK_ControllerEvents leftControllerEvents;

		[Token(Token = "0x4001CAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		protected VRTK_ControllerEvents rightControllerEvents;

		[Token(Token = "0x4001CAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		protected VRTK_InteractGrab leftControllerGrab;

		[Token(Token = "0x4001CAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		protected VRTK_InteractGrab rightControllerGrab;

		[Token(Token = "0x4001CAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		protected bool leftButtonReleased;

		[Token(Token = "0x4001CB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB1")]
		protected bool rightButtonReleased;

		[Token(Token = "0x4001CB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		protected float countDownEndTime;

		[Token(Token = "0x1400010A")]
		public event SlingshotJumpEventHandler SlingshotJumped
		{
			[Token(Token = "0x6001DAE")]
			[Address(RVA = "0x9994E0", Offset = "0x9994E0", VA = "0x9994E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66D1FC", Offset = "0x66D1FC")]
			add
			{
			}
			[Token(Token = "0x6001DAF")]
			[Address(RVA = "0x9995CC", Offset = "0x9995CC", VA = "0x9995CC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66D20C", Offset = "0x66D20C")]
			remove
			{
			}
		}

		[Token(Token = "0x6001DB0")]
		[Address(RVA = "0x9996B8", Offset = "0x9996B8", VA = "0x9996B8", Slot = "4")]
		public virtual VRTK_ControllerEvents.ButtonAlias GetActivationButton()
		{
			return default(VRTK_ControllerEvents.ButtonAlias);
		}

		[Token(Token = "0x6001DB1")]
		[Address(RVA = "0x9996C0", Offset = "0x9996C0", VA = "0x9996C0", Slot = "5")]
		public virtual void SetActivationButton(VRTK_ControllerEvents.ButtonAlias button)
		{
		}

		[Token(Token = "0x6001DB2")]
		[Address(RVA = "0x9998AC", Offset = "0x9998AC", VA = "0x9998AC", Slot = "6")]
		public virtual VRTK_ControllerEvents.ButtonAlias GetCancelButton()
		{
			return default(VRTK_ControllerEvents.ButtonAlias);
		}

		[Token(Token = "0x6001DB3")]
		[Address(RVA = "0x9998B4", Offset = "0x9998B4", VA = "0x9998B4", Slot = "7")]
		public virtual void SetCancelButton(VRTK_ControllerEvents.ButtonAlias button)
		{
		}

		[Token(Token = "0x6001DB4")]
		[Address(RVA = "0x9998E8", Offset = "0x9998E8", VA = "0x9998E8", Slot = "8")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6001DB5")]
		[Address(RVA = "0x999A28", Offset = "0x999A28", VA = "0x999A28", Slot = "9")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6001DB6")]
		[Address(RVA = "0x999ADC", Offset = "0x999ADC", VA = "0x999ADC", Slot = "10")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x6001DB7")]
		[Address(RVA = "0x999B24", Offset = "0x999B24", VA = "0x999B24", Slot = "11")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x6001DB8")]
		[Address(RVA = "0x999B8C", Offset = "0x999B8C", VA = "0x999B8C", Slot = "12")]
		protected virtual void LeftButtonPressed(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001DB9")]
		[Address(RVA = "0x999D08", Offset = "0x999D08", VA = "0x999D08", Slot = "13")]
		protected virtual void RightButtonPressed(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001DBA")]
		[Address(RVA = "0x999DE0", Offset = "0x999DE0", VA = "0x999DE0", Slot = "14")]
		protected virtual void LeftButtonReleased(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001DBB")]
		[Address(RVA = "0x999EEC", Offset = "0x999EEC", VA = "0x999EEC", Slot = "15")]
		protected virtual void RightButtonReleased(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001DBC")]
		[Address(RVA = "0x999FF8", Offset = "0x999FF8", VA = "0x999FF8", Slot = "16")]
		protected virtual void CancelButtonPressed(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001DBD")]
		[Address(RVA = "0x99A008", Offset = "0x99A008", VA = "0x99A008", Slot = "17")]
		protected virtual void CheckForReset()
		{
		}

		[Token(Token = "0x6001DBE")]
		[Address(RVA = "0x99A054", Offset = "0x99A054", VA = "0x99A054", Slot = "18")]
		protected virtual void CheckForJump()
		{
		}

		[Token(Token = "0x6001DBF")]
		[Address(RVA = "0x99A2C8", Offset = "0x99A2C8", VA = "0x99A2C8")]
		protected void OnSlingshotJumped()
		{
		}

		[Token(Token = "0x6001DC0")]
		[Address(RVA = "0x999AAC", Offset = "0x999AAC", VA = "0x999AAC")]
		protected void InitListeners(bool state)
		{
		}

		[Token(Token = "0x6001DC1")]
		[Address(RVA = "0x99A2E4", Offset = "0x99A2E4", VA = "0x99A2E4")]
		protected void InitTeleportListener(bool state)
		{
		}

		[Token(Token = "0x6001DC2")]
		[Address(RVA = "0x9996F4", Offset = "0x9996F4", VA = "0x9996F4")]
		protected void InitControllerListeners(bool state)
		{
		}

		[Token(Token = "0x6001DC3")]
		[Address(RVA = "0x99A448", Offset = "0x99A448", VA = "0x99A448")]
		protected void InitControllerListener(bool state, GameObject controller, ref VRTK_ControllerEvents events, ref VRTK_InteractGrab grab, ControllerInteractionEventHandler triggerPressed, ControllerInteractionEventHandler triggerReleased)
		{
		}

		[Token(Token = "0x6001DC4")]
		[Address(RVA = "0x99A6FC", Offset = "0x99A6FC", VA = "0x99A6FC")]
		protected void OnTeleport(object sender, DestinationMarkerEventArgs e)
		{
		}

		[Token(Token = "0x6001DC5")]
		[Address(RVA = "0x999B14", Offset = "0x999B14", VA = "0x999B14")]
		protected void UnAim()
		{
		}

		[Token(Token = "0x6001DC6")]
		[Address(RVA = "0x999C64", Offset = "0x999C64", VA = "0x999C64")]
		protected bool IsClimbing()
		{
			return default(bool);
		}

		[Token(Token = "0x6001DC7")]
		[Address(RVA = "0x99A70C", Offset = "0x99A70C", VA = "0x99A70C")]
		public VRTK_SlingshotJump()
		{
		}
	}
	[Token(Token = "0x20003F1")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x640084", Offset = "0x640084")]
	public class VRTK_StepMultiplier : MonoBehaviour
	{
		[Token(Token = "0x2000818")]
		public enum MovementFunction
		{
			[Token(Token = "0x4002AEC")]
			Nonlinear,
			[Token(Token = "0x4002AED")]
			LinearDirect
		}

		[Token(Token = "0x4001CB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x65A830", Offset = "0x65A830")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65A830", Offset = "0x65A830")]
		public VRTK_ControllerEvents.ButtonAlias activationButton;

		[Token(Token = "0x4001CB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65A890", Offset = "0x65A890")]
		public MovementFunction movementFunction;

		[Token(Token = "0x4001CB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65A8C8", Offset = "0x65A8C8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x65A8C8", Offset = "0x65A8C8")]
		public float additionalMovementMultiplier;

		[Token(Token = "0x4001CB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65A91C", Offset = "0x65A91C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x65A91C", Offset = "0x65A91C")]
		public float headZoneRadius;

		[Token(Token = "0x4001CB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x65A970", Offset = "0x65A970")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65A970", Offset = "0x65A970")]
		public VRTK_ControllerEvents controllerEvents;

		[Token(Token = "0x4001CB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected Vector3 relativeMovementOfCameraRig;

		[Token(Token = "0x4001CB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected Transform movementTransform;

		[Token(Token = "0x4001CB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected Transform playArea;

		[Token(Token = "0x4001CBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected Vector3 headCirclePosition;

		[Token(Token = "0x4001CBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		protected Vector3 lastPosition;

		[Token(Token = "0x4001CBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		protected Vector3 lastMovement;

		[Token(Token = "0x4001CBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		protected bool activationEnabled;

		[Token(Token = "0x4001CBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		protected VRTK_ControllerEvents.ButtonAlias subscribedActivationButton;

		[Token(Token = "0x4001CBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		protected bool buttonSubscribed;

		[Token(Token = "0x6001DC8")]
		[Address(RVA = "0x9A1B08", Offset = "0x9A1B08", VA = "0x9A1B08", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6001DC9")]
		[Address(RVA = "0x9A1B70", Offset = "0x9A1B70", VA = "0x9A1B70", Slot = "5")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6001DCA")]
		[Address(RVA = "0x9A1C5C", Offset = "0x9A1C5C", VA = "0x9A1C5C", Slot = "6")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x6001DCB")]
		[Address(RVA = "0x9A1CC4", Offset = "0x9A1CC4", VA = "0x9A1CC4", Slot = "7")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x6001DCC")]
		[Address(RVA = "0x9A1D20", Offset = "0x9A1D20", VA = "0x9A1D20", Slot = "8")]
		protected virtual void ManageButtonSubscription()
		{
		}

		[Token(Token = "0x6001DCD")]
		[Address(RVA = "0x9A1FC4", Offset = "0x9A1FC4", VA = "0x9A1FC4", Slot = "9")]
		protected virtual void ActivationButtonPressed(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001DCE")]
		[Address(RVA = "0x9A1FD0", Offset = "0x9A1FD0", VA = "0x9A1FD0", Slot = "10")]
		protected virtual void ActivationButtonReleased(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001DCF")]
		[Address(RVA = "0x9A1FD8", Offset = "0x9A1FD8", VA = "0x9A1FD8", Slot = "11")]
		protected virtual void Move(Vector3 movement)
		{
		}

		[Token(Token = "0x6001DD0")]
		[Address(RVA = "0x9A21DC", Offset = "0x9A21DC", VA = "0x9A21DC", Slot = "12")]
		protected virtual void MoveHeadCircle()
		{
		}

		[Token(Token = "0x6001DD1")]
		[Address(RVA = "0x9A236C", Offset = "0x9A236C", VA = "0x9A236C", Slot = "13")]
		protected virtual void MoveHeadCircleNonLinearDrift()
		{
		}

		[Token(Token = "0x6001DD2")]
		[Address(RVA = "0x9A24F8", Offset = "0x9A24F8", VA = "0x9A24F8", Slot = "14")]
		protected virtual void UpdateLastMovement()
		{
		}

		[Token(Token = "0x6001DD3")]
		[Address(RVA = "0x9A2628", Offset = "0x9A2628", VA = "0x9A2628")]
		public VRTK_StepMultiplier()
		{
		}
	}
	[Token(Token = "0x20003F2")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x6400BC", Offset = "0x6400BC")]
	public class VRTK_TeleportDisableOnControllerObscured : MonoBehaviour
	{
		[Token(Token = "0x2000819")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x645E88", Offset = "0x645E88")]
		private sealed class <EnableAtEndOfFrame>d__6 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002AEE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002AEF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002AF0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VRTK_TeleportDisableOnControllerObscured <>4__this;

			[Token(Token = "0x17000345")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60032FA")]
				[Address(RVA = "0x9A4DE8", Offset = "0x9A4DE8", VA = "0x9A4DE8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000346")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60032FC")]
				[Address(RVA = "0x9A4E58", Offset = "0x9A4E58", VA = "0x9A4E58", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60032F7")]
			[Address(RVA = "0x9A4914", Offset = "0x9A4914", VA = "0x9A4914")]
			[DebuggerHidden]
			public <EnableAtEndOfFrame>d__6(int <>1__state)
			{
			}

			[Token(Token = "0x60032F8")]
			[Address(RVA = "0x9A4AD0", Offset = "0x9A4AD0", VA = "0x9A4AD0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60032F9")]
			[Address(RVA = "0x9A4AD4", Offset = "0x9A4AD4", VA = "0x9A4AD4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60032FB")]
			[Address(RVA = "0x9A4DF0", Offset = "0x9A4DF0", VA = "0x9A4DF0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001CC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x65A9D0", Offset = "0x65A9D0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65A9D0", Offset = "0x65A9D0")]
		public VRTK_BasicTeleport teleporter;

		[Token(Token = "0x4001CC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65AA30", Offset = "0x65AA30")]
		public VRTK_HeadsetControllerAware headsetControllerAware;

		[Token(Token = "0x4001CC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		public VRTK_BasePointerRenderer _pointerToHide;

		[Token(Token = "0x4001CC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected Coroutine enableAtEndOfFrameRoutine;

		[Token(Token = "0x6001DD4")]
		[Address(RVA = "0x9A4670", Offset = "0x9A4670", VA = "0x9A4670", Slot = "4")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6001DD5")]
		[Address(RVA = "0x9A4748", Offset = "0x9A4748", VA = "0x9A4748", Slot = "5")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x6001DD6")]
		[Address(RVA = "0x9A48A0", Offset = "0x9A48A0", VA = "0x9A48A0", Slot = "6")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x66D21C", Offset = "0x66D21C")]
		protected virtual IEnumerator EnableAtEndOfFrame()
		{
			return null;
		}

		[Token(Token = "0x6001DD7")]
		[Address(RVA = "0x9A4940", Offset = "0x9A4940", VA = "0x9A4940", Slot = "7")]
		protected virtual void DisableTeleport(object sender, HeadsetControllerAwareEventArgs e)
		{
		}

		[Token(Token = "0x6001DD8")]
		[Address(RVA = "0x9A4A04", Offset = "0x9A4A04", VA = "0x9A4A04", Slot = "8")]
		protected virtual void EnableTeleport(object sender, HeadsetControllerAwareEventArgs e)
		{
		}

		[Token(Token = "0x6001DD9")]
		[Address(RVA = "0x9A4AC8", Offset = "0x9A4AC8", VA = "0x9A4AC8")]
		public VRTK_TeleportDisableOnControllerObscured()
		{
		}
	}
	[Token(Token = "0x20003F3")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x6400F4", Offset = "0x6400F4")]
	public class VRTK_TeleportDisableOnHeadsetCollision : MonoBehaviour
	{
		[Token(Token = "0x200081A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x645E98", Offset = "0x645E98")]
		private sealed class <EnableAtEndOfFrame>d__5 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002AF1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002AF2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002AF3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VRTK_TeleportDisableOnHeadsetCollision <>4__this;

			[Token(Token = "0x17000347")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6003300")]
				[Address(RVA = "0x9A54C0", Offset = "0x9A54C0", VA = "0x9A54C0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000348")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003302")]
				[Address(RVA = "0x9A5530", Offset = "0x9A5530", VA = "0x9A5530", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60032FD")]
			[Address(RVA = "0x9A5104", Offset = "0x9A5104", VA = "0x9A5104")]
			[DebuggerHidden]
			public <EnableAtEndOfFrame>d__5(int <>1__state)
			{
			}

			[Token(Token = "0x60032FE")]
			[Address(RVA = "0x9A51A8", Offset = "0x9A51A8", VA = "0x9A51A8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60032FF")]
			[Address(RVA = "0x9A51AC", Offset = "0x9A51AC", VA = "0x9A51AC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003301")]
			[Address(RVA = "0x9A54C8", Offset = "0x9A54C8", VA = "0x9A54C8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001CC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x65AA78", Offset = "0x65AA78")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65AA78", Offset = "0x65AA78")]
		public VRTK_BasicTeleport teleporter;

		[Token(Token = "0x4001CC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65AAD8", Offset = "0x65AAD8")]
		public VRTK_HeadsetCollision headsetCollision;

		[Token(Token = "0x4001CC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected Coroutine enableAtEndOfFrameRoutine;

		[Token(Token = "0x6001DDA")]
		[Address(RVA = "0x9A4E60", Offset = "0x9A4E60", VA = "0x9A4E60", Slot = "4")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6001DDB")]
		[Address(RVA = "0x9A4F38", Offset = "0x9A4F38", VA = "0x9A4F38", Slot = "5")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x6001DDC")]
		[Address(RVA = "0x9A5090", Offset = "0x9A5090", VA = "0x9A5090", Slot = "6")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x66D280", Offset = "0x66D280")]
		protected virtual IEnumerator EnableAtEndOfFrame()
		{
			return null;
		}

		[Token(Token = "0x6001DDD")]
		[Address(RVA = "0x9A5130", Offset = "0x9A5130", VA = "0x9A5130", Slot = "7")]
		protected virtual void DisableTeleport(object sender, HeadsetCollisionEventArgs e)
		{
		}

		[Token(Token = "0x6001DDE")]
		[Address(RVA = "0x9A5168", Offset = "0x9A5168", VA = "0x9A5168", Slot = "8")]
		protected virtual void EnableTeleport(object sender, HeadsetCollisionEventArgs e)
		{
		}

		[Token(Token = "0x6001DDF")]
		[Address(RVA = "0x9A51A0", Offset = "0x9A51A0", VA = "0x9A51A0")]
		public VRTK_TeleportDisableOnHeadsetCollision()
		{
		}
	}
	[Token(Token = "0x20003F4")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x64012C", Offset = "0x64012C")]
	public class VRTK_TouchpadControl : VRTK_ObjectControl
	{
		[Token(Token = "0x4001CC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x65AB10", Offset = "0x65AB10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65AB10", Offset = "0x65AB10")]
		public VRTK_ControllerEvents.Vector2AxisAlias coordinateAxis;

		[Token(Token = "0x4001CC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65AB70", Offset = "0x65AB70")]
		public VRTK_ControllerEvents.ButtonAlias primaryActivationButton;

		[Token(Token = "0x4001CC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65ABA8", Offset = "0x65ABA8")]
		public VRTK_ControllerEvents.ButtonAlias actionModifierButton;

		[Token(Token = "0x4001CCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65ABE0", Offset = "0x65ABE0")]
		public Vector2 axisDeadzone;

		[Token(Token = "0x4001CCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		protected bool touchpadFirstChange;

		[Token(Token = "0x4001CCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA5")]
		protected bool otherTouchpadControlEnabledState;

		[Token(Token = "0x4001CCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA6")]
		protected bool otherTouchpadControlEnabledStateSet;

		[Token(Token = "0x4001CCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		protected VRTK_ControllerEvents.ButtonAlias coordniateButtonAlias;

		[Token(Token = "0x6001DE0")]
		[Address(RVA = "0x9A5538", Offset = "0x9A5538", VA = "0x9A5538", Slot = "11")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6001DE1")]
		[Address(RVA = "0x9A558C", Offset = "0x9A558C", VA = "0x9A558C", Slot = "6")]
		protected override void ControlFixedUpdate()
		{
		}

		[Token(Token = "0x6001DE2")]
		[Address(RVA = "0x9A58B0", Offset = "0x9A58B0", VA = "0x9A58B0", Slot = "7")]
		protected override VRTK_ObjectControl GetOtherControl()
		{
			return null;
		}

		[Token(Token = "0x6001DE3")]
		[Address(RVA = "0x9A59E0", Offset = "0x9A59E0", VA = "0x9A59E0", Slot = "9")]
		protected override void SetListeners(bool state)
		{
		}

		[Token(Token = "0x6001DE4")]
		[Address(RVA = "0x9A5CD8", Offset = "0x9A5CD8", VA = "0x9A5CD8", Slot = "8")]
		protected override bool IsInAction()
		{
			return default(bool);
		}

		[Token(Token = "0x6001DE5")]
		[Address(RVA = "0x9A5D28", Offset = "0x9A5D28", VA = "0x9A5D28", Slot = "22")]
		protected virtual bool OutsideDeadzone(float axisValue, float deadzoneThreshold)
		{
			return default(bool);
		}

		[Token(Token = "0x6001DE6")]
		[Address(RVA = "0x9A5D44", Offset = "0x9A5D44", VA = "0x9A5D44", Slot = "23")]
		protected virtual bool ValidPrimaryButton()
		{
			return default(bool);
		}

		[Token(Token = "0x6001DE7")]
		[Address(RVA = "0x9A5E00", Offset = "0x9A5E00", VA = "0x9A5E00", Slot = "24")]
		protected virtual void ModifierButtonActive()
		{
		}

		[Token(Token = "0x6001DE8")]
		[Address(RVA = "0x9A5EC0", Offset = "0x9A5EC0", VA = "0x9A5EC0", Slot = "25")]
		protected virtual bool TouchpadTouched()
		{
			return default(bool);
		}

		[Token(Token = "0x6001DE9")]
		[Address(RVA = "0x9A5F70", Offset = "0x9A5F70", VA = "0x9A5F70", Slot = "26")]
		protected virtual void TouchpadAxisChanged(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001DEA")]
		[Address(RVA = "0x9A5FA0", Offset = "0x9A5FA0", VA = "0x9A5FA0", Slot = "27")]
		protected virtual void TouchpadTouchEnd(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001DEB")]
		[Address(RVA = "0x9A608C", Offset = "0x9A608C", VA = "0x9A608C")]
		public VRTK_TouchpadControl()
		{
		}
	}
	[Token(Token = "0x20003F5")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x640164", Offset = "0x640164")]
	public class VRTK_TunnelOverlay : MonoBehaviour
	{
		[Token(Token = "0x4001CCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x65AC18", Offset = "0x65AC18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65AC18", Offset = "0x65AC18")]
		public float minimumRotation;

		[Token(Token = "0x4001CD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65AC78", Offset = "0x65AC78")]
		public float maximumRotation;

		[Token(Token = "0x4001CD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65ACB0", Offset = "0x65ACB0")]
		public float minimumSpeed;

		[Token(Token = "0x4001CD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65ACE8", Offset = "0x65ACE8")]
		public float maximumSpeed;

		[Token(Token = "0x4001CD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x65AD20", Offset = "0x65AD20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65AD20", Offset = "0x65AD20")]
		public Color effectColor;

		[Token(Token = "0x4001CD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65AD80", Offset = "0x65AD80")]
		public Texture effectSkybox;

		[Token(Token = "0x4001CD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65ADB8", Offset = "0x65ADB8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x65ADB8", Offset = "0x65ADB8")]
		public float initialEffectSize;

		[Token(Token = "0x4001CD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65AE0C", Offset = "0x65AE0C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x65AE0C", Offset = "0x65AE0C")]
		public float maximumEffectSize;

		[Token(Token = "0x4001CD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65AE60", Offset = "0x65AE60")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x65AE60", Offset = "0x65AE60")]
		public float featherSize;

		[Token(Token = "0x4001CD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65AEB4", Offset = "0x65AEB4")]
		public float smoothingTime;

		[Token(Token = "0x4001CD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected Transform headset;

		[Token(Token = "0x4001CDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		protected Camera headsetCamera;

		[Token(Token = "0x4001CDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		protected Transform playarea;

		[Token(Token = "0x4001CDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		protected VRTK_TunnelEffect cameraEffect;

		[Token(Token = "0x4001CDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		protected float angularVelocity;

		[Token(Token = "0x4001CDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		protected float angularVelocitySlew;

		[Token(Token = "0x4001CDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		protected Vector3 lastForward;

		[Token(Token = "0x4001CE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		protected Vector3 lastPosition;

		[Token(Token = "0x4001CE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		protected Material matCameraEffect;

		[Token(Token = "0x4001CE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		protected int shaderPropertyColor;

		[Token(Token = "0x4001CE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		protected int shaderPropertyAV;

		[Token(Token = "0x4001CE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		protected int shaderPropertyFeather;

		[Token(Token = "0x4001CE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		protected int shaderPropertySkyboxTexture;

		[Token(Token = "0x4001CE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		protected Color originalColor;

		[Token(Token = "0x4001CE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		protected float originalAngularVelocity;

		[Token(Token = "0x4001CE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		protected float originalFeatherSize;

		[Token(Token = "0x4001CE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		protected Texture originalSkyboxTexture;

		[Token(Token = "0x4001CEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		protected float maximumEffectCoverage;

		[Token(Token = "0x4001CEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		protected bool createEffectSkybox;

		[Token(Token = "0x4001CEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static float[] s_blinkSpeeds;

		[Token(Token = "0x4001CED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private int _blinkersSetting;

		[Token(Token = "0x4001CEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private int _lastSaveVersion;

		[Token(Token = "0x4001CEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Matrix4x4[] _eyeToWorld;

		[Token(Token = "0x4001CF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static Matrix4x4[] _eyeProjection;

		[Token(Token = "0x4001CF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private int _suppressed;

		[Token(Token = "0x6001DEC")]
		[Address(RVA = "0x9A86DC", Offset = "0x9A86DC", VA = "0x9A86DC")]
		public void Suppress()
		{
		}

		[Token(Token = "0x6001DED")]
		[Address(RVA = "0x9A86E8", Offset = "0x9A86E8", VA = "0x9A86E8", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6001DEE")]
		[Address(RVA = "0x9A87D0", Offset = "0x9A87D0", VA = "0x9A87D0", Slot = "5")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6001DEF")]
		[Address(RVA = "0x9A8B5C", Offset = "0x9A8B5C", VA = "0x9A8B5C", Slot = "6")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x6001DF0")]
		[Address(RVA = "0x9A8CB8", Offset = "0x9A8CB8", VA = "0x9A8CB8", Slot = "7")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x6001DF1")]
		[Address(RVA = "0x9A8D20", Offset = "0x9A8D20", VA = "0x9A8D20", Slot = "8")]
		protected virtual void FixedUpdate()
		{
		}

		[Token(Token = "0x6001DF2")]
		[Address(RVA = "0x9A97C8", Offset = "0x9A97C8", VA = "0x9A97C8", Slot = "9")]
		protected virtual void SetShaderFeather(Color givenTunnelColor, float givenAngularVelocity, float givenFeatherSize)
		{
		}

		[Token(Token = "0x6001DF3")]
		[Address(RVA = "0x9A989C", Offset = "0x9A989C", VA = "0x9A989C", Slot = "10")]
		protected virtual void CheckSkyboxTexture()
		{
		}

		[Token(Token = "0x6001DF4")]
		[Address(RVA = "0x9A9694", Offset = "0x9A9694", VA = "0x9A9694")]
		private void UpdateSavedValues()
		{
		}

		[Token(Token = "0x6001DF5")]
		[Address(RVA = "0x9A9BA4", Offset = "0x9A9BA4", VA = "0x9A9BA4")]
		public VRTK_TunnelOverlay()
		{
		}
	}
	[Token(Token = "0x20003F6")]
	public abstract class VRTK_BasePointerRenderer : MonoBehaviour
	{
		[Token(Token = "0x200081B")]
		public enum VisibilityStates
		{
			[Token(Token = "0x4002AF5")]
			OnWhenActive,
			[Token(Token = "0x4002AF6")]
			AlwaysOn,
			[Token(Token = "0x4002AF7")]
			AlwaysOff
		}

		[Serializable]
		[Token(Token = "0x200081C")]
		public sealed class PointerOriginSmoothingSettings
		{
			[Token(Token = "0x4002AF8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x664E18", Offset = "0x664E18")]
			public bool smoothsPosition;

			[Token(Token = "0x4002AF9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x664E50", Offset = "0x664E50")]
			public float maxAllowedPerFrameDistanceDifference;

			[Token(Token = "0x4002AFA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x664E88", Offset = "0x664E88")]
			public bool smoothsRotation;

			[Token(Token = "0x4002AFB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x664EC0", Offset = "0x664EC0")]
			public float maxAllowedPerFrameAngleDifference;

			[Token(Token = "0x6003303")]
			[Address(RVA = "0xAF412C", Offset = "0xAF412C", VA = "0xAF412C")]
			public PointerOriginSmoothingSettings()
			{
			}
		}

		[Token(Token = "0x4001CF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x65AEEC", Offset = "0x65AEEC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65AEEC", Offset = "0x65AEEC")]
		public VRTK_PlayAreaCursor playareaCursor;

		[Token(Token = "0x4001CF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65AF4C", Offset = "0x65AF4C")]
		public VRTK_PointerDirectionIndicator directionIndicator;

		[Token(Token = "0x4001CF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x65AF84", Offset = "0x65AF84")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65AF84", Offset = "0x65AF84")]
		public VRTK_CustomRaycast customRaycast;

		[Token(Token = "0x4001CF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65AFE4", Offset = "0x65AFE4")]
		public PointerOriginSmoothingSettings pointerOriginSmoothingSettings;

		[Token(Token = "0x4001CF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x65B01C", Offset = "0x65B01C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65B01C", Offset = "0x65B01C")]
		public Color validCollisionColor;

		[Token(Token = "0x4001CF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65B07C", Offset = "0x65B07C")]
		public Color invalidCollisionColor;

		[Token(Token = "0x4001CF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65B0B4", Offset = "0x65B0B4")]
		public VisibilityStates tracerVisibility;

		[Token(Token = "0x4001CF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65B0EC", Offset = "0x65B0EC")]
		public VisibilityStates cursorVisibility;

		[Token(Token = "0x4001CFA")]
		protected const float BEAM_ADJUST_OFFSET = 0.0001f;

		[Token(Token = "0x4001CFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		protected VRTK_Pointer controllingPointer;

		[Token(Token = "0x4001CFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		protected RaycastHit destinationHit;

		[Token(Token = "0x4001CFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		protected Material defaultMaterial;

		[Token(Token = "0x4001CFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		protected Color previousColor;

		[Token(Token = "0x4001CFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		protected Color currentColor;

		[Token(Token = "0x4001D00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		protected VRTK_PolicyList invalidListPolicy;

		[Token(Token = "0x4001D01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		protected VRTK_NavMeshData navMeshData;

		[Token(Token = "0x4001D02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		protected bool headsetPositionCompensation;

		[Token(Token = "0x4001D03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		protected GameObject objectInteractor;

		[Token(Token = "0x4001D04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		protected GameObject objectInteractorAttachPoint;

		[Token(Token = "0x4001D05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		protected GameObject pointerOriginTransformFollowGameObject;

		[Token(Token = "0x4001D06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		protected VRTK_TransformFollow pointerOriginTransformFollow;

		[Token(Token = "0x4001D07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		protected VRTK_InteractGrab controllerGrabScript;

		[Token(Token = "0x4001D08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		protected Rigidbody savedAttachPoint;

		[Token(Token = "0x4001D09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		protected bool attachedToInteractorAttachPoint;

		[Token(Token = "0x4001D0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		protected float savedBeamLength;

		[Token(Token = "0x4001D0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		protected HashSet<GameObject> makeRendererVisible;

		[Token(Token = "0x4001D0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		protected bool tracerVisible;

		[Token(Token = "0x4001D0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x119")]
		protected bool cursorVisible;

		[Token(Token = "0x4001D0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		protected LayerMask defaultIgnoreLayer;

		[Token(Token = "0x4001D0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		protected SDK_BaseController.ControllerHand cachedAttachedHand;

		[Token(Token = "0x4001D10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		protected Transform cachedPointerAttachPoint;

		[Token(Token = "0x4001D11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		protected bool _wallClip;

		[Token(Token = "0x6001DF7")]
		[Address(RVA = "0x7E09A4", Offset = "0x7E09A4", VA = "0x7E09A4")]
		public void SetWallClip(bool clip)
		{
		}

		[Token(Token = "0x6001DF8")]
		[Address(RVA = "0x7E09B0", Offset = "0x7E09B0", VA = "0x7E09B0")]
		public bool IsWallClipping()
		{
			return default(bool);
		}

		[Token(Token = "0x6001DF9")]
		[Address(RVA = "0x7E09B8", Offset = "0x7E09B8", VA = "0x7E09B8")]
		public bool IsPlayerMoving()
		{
			return default(bool);
		}

		[Token(Token = "0x6001DFA")]
		public abstract GameObject[] GetPointerObjects();

		[Token(Token = "0x6001DFB")]
		[Address(RVA = "0x7E0A4C", Offset = "0x7E0A4C", VA = "0x7E0A4C", Slot = "5")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x66D2E4", Offset = "0x66D2E4")]
		public virtual void InitalizePointer(VRTK_Pointer givenPointer, VRTK_PolicyList givenInvalidListPolicy, float givenNavMeshCheckDistance, bool givenHeadsetPositionCompensation)
		{
		}

		[Token(Token = "0x6001DFC")]
		[Address(RVA = "0x7E0B0C", Offset = "0x7E0B0C", VA = "0x7E0B0C", Slot = "6")]
		public virtual void InitalizePointer(VRTK_Pointer givenPointer, VRTK_PolicyList givenInvalidListPolicy, VRTK_NavMeshData givenNavMeshData, bool givenHeadsetPositionCompensation)
		{
		}

		[Token(Token = "0x6001DFD")]
		[Address(RVA = "0x7E0C94", Offset = "0x7E0C94", VA = "0x7E0C94", Slot = "7")]
		public virtual void ResetPointerObjects()
		{
		}

		[Token(Token = "0x6001DFE")]
		[Address(RVA = "0x7E0CF8", Offset = "0x7E0CF8", VA = "0x7E0CF8", Slot = "8")]
		public virtual void Toggle(bool pointerState, bool actualState)
		{
		}

		[Token(Token = "0x6001DFF")]
		[Address(RVA = "0x7E0E40", Offset = "0x7E0E40", VA = "0x7E0E40", Slot = "9")]
		public virtual void ToggleInteraction(bool state)
		{
		}

		[Token(Token = "0x6001E00")]
		[Address(RVA = "0x7E0E54", Offset = "0x7E0E54", VA = "0x7E0E54", Slot = "10")]
		public virtual void UpdateRenderer()
		{
		}

		[Token(Token = "0x6001E01")]
		[Address(RVA = "0x7E0F8C", Offset = "0x7E0F8C", VA = "0x7E0F8C", Slot = "11")]
		public virtual RaycastHit GetDestinationHit()
		{
			return default(RaycastHit);
		}

		[Token(Token = "0x6001E02")]
		[Address(RVA = "0x7E0FA8", Offset = "0x7E0FA8", VA = "0x7E0FA8", Slot = "12")]
		public virtual bool ValidPlayArea()
		{
			return default(bool);
		}

		[Token(Token = "0x6001E03")]
		[Address(RVA = "0x7E1074", Offset = "0x7E1074", VA = "0x7E1074", Slot = "13")]
		public virtual bool IsVisible()
		{
			return default(bool);
		}

		[Token(Token = "0x6001E04")]
		[Address(RVA = "0x7E10C4", Offset = "0x7E10C4", VA = "0x7E10C4", Slot = "14")]
		public virtual bool IsTracerVisible()
		{
			return default(bool);
		}

		[Token(Token = "0x6001E05")]
		[Address(RVA = "0x7E10E8", Offset = "0x7E10E8", VA = "0x7E10E8", Slot = "15")]
		public virtual bool IsCursorVisible()
		{
			return default(bool);
		}

		[Token(Token = "0x6001E06")]
		[Address(RVA = "0x7E110C", Offset = "0x7E110C", VA = "0x7E110C", Slot = "16")]
		public virtual bool IsValidCollision()
		{
			return default(bool);
		}

		[Token(Token = "0x6001E07")]
		[Address(RVA = "0x7E1124", Offset = "0x7E1124", VA = "0x7E1124", Slot = "17")]
		public virtual GameObject GetObjectInteractor()
		{
			return null;
		}

		[Token(Token = "0x6001E08")]
		protected abstract void CreatePointerObjects();

		[Token(Token = "0x6001E09")]
		protected abstract void DestroyPointerObjects();

		[Token(Token = "0x6001E0A")]
		protected abstract void ToggleRenderer(bool pointerState, bool actualState);

		[Token(Token = "0x6001E0B")]
		[Address(RVA = "0x7E112C", Offset = "0x7E112C", VA = "0x7E112C", Slot = "21")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6001E0C")]
		[Address(RVA = "0x7E1194", Offset = "0x7E1194", VA = "0x7E1194", Slot = "22")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6001E0D")]
		[Address(RVA = "0x7E127C", Offset = "0x7E127C", VA = "0x7E127C", Slot = "23")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x6001E0E")]
		[Address(RVA = "0x7E134C", Offset = "0x7E134C", VA = "0x7E134C", Slot = "24")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x6001E0F")]
		[Address(RVA = "0x7E13B4", Offset = "0x7E13B4", VA = "0x7E13B4", Slot = "25")]
		protected virtual void OnValidate()
		{
		}

		[Token(Token = "0x6001E10")]
		[Address(RVA = "0x7E1498", Offset = "0x7E1498", VA = "0x7E1498", Slot = "26")]
		protected virtual void FixedUpdate()
		{
		}

		[Token(Token = "0x6001E11")]
		[Address(RVA = "0x7E15E4", Offset = "0x7E15E4", VA = "0x7E15E4")]
		private void Update()
		{
		}

		[Token(Token = "0x6001E12")]
		[Address(RVA = "0x7E162C", Offset = "0x7E162C", VA = "0x7E162C", Slot = "27")]
		protected virtual void ToggleObjectInteraction(bool state)
		{
		}

		[Token(Token = "0x6001E13")]
		[Address(RVA = "0x7E18D0", Offset = "0x7E18D0", VA = "0x7E18D0", Slot = "28")]
		protected virtual void UpdateObjectInteractor()
		{
		}

		[Token(Token = "0x6001E14")]
		[Address(RVA = "0x7E1954", Offset = "0x7E1954", VA = "0x7E1954", Slot = "29")]
		protected virtual VRTK_ControllerReference GetControllerReference([Optional] GameObject reference)
		{
			return null;
		}

		[Token(Token = "0x6001E15")]
		[Address(RVA = "0x7E1A9C", Offset = "0x7E1A9C", VA = "0x7E1A9C", Slot = "30")]
		protected virtual Transform GetPointerOriginTransform()
		{
			return null;
		}

		[Token(Token = "0x6001E16")]
		[Address(RVA = "0x7E1DA0", Offset = "0x7E1DA0", VA = "0x7E1DA0", Slot = "31")]
		protected virtual void UpdatePointerOriginTransformFollow()
		{
		}

		[Token(Token = "0x6001E17")]
		[Address(RVA = "0x7E203C", Offset = "0x7E203C", VA = "0x7E203C")]
		protected Transform GetOrigin(bool smoothed = true)
		{
			return null;
		}

		[Token(Token = "0x6001E18")]
		[Address(RVA = "0x7E21B8", Offset = "0x7E21B8", VA = "0x7E21B8", Slot = "32")]
		protected virtual void PointerEnter(RaycastHit givenHit)
		{
		}

		[Token(Token = "0x6001E19")]
		[Address(RVA = "0x7E2228", Offset = "0x7E2228", VA = "0x7E2228", Slot = "33")]
		protected virtual void PointerExit(RaycastHit givenHit)
		{
		}

		[Token(Token = "0x6001E1A")]
		[Address(RVA = "0x7E2298", Offset = "0x7E2298", VA = "0x7E2298", Slot = "34")]
		protected virtual bool ValidDestination()
		{
			return default(bool);
		}

		[Token(Token = "0x6001E1B")]
		[Address(RVA = "0x7E2A98", Offset = "0x7E2A98", VA = "0x7E2A98", Slot = "35")]
		protected virtual void ToggleElement(GameObject givenObject, bool pointerState, bool actualState, VisibilityStates givenVisibility, ref bool currentVisible)
		{
		}

		[Token(Token = "0x6001E1C")]
		[Address(RVA = "0x7E2C08", Offset = "0x7E2C08", VA = "0x7E2C08", Slot = "36")]
		protected virtual void AddVisibleRenderer(GameObject givenObject)
		{
		}

		[Token(Token = "0x6001E1D")]
		[Address(RVA = "0x7E2C78", Offset = "0x7E2C78", VA = "0x7E2C78", Slot = "37")]
		protected virtual void MakeRenderersVisible()
		{
		}

		[Token(Token = "0x6001E1E")]
		[Address(RVA = "0x7E2DEC", Offset = "0x7E2DEC", VA = "0x7E2DEC", Slot = "38")]
		protected virtual void ToggleRendererVisibility(GameObject givenObject, bool state)
		{
		}

		[Token(Token = "0x6001E1F")]
		[Address(RVA = "0x7E2EF8", Offset = "0x7E2EF8", VA = "0x7E2EF8", Slot = "39")]
		protected virtual void SetupMaterialRenderer(GameObject givenObject)
		{
		}

		[Token(Token = "0x6001E20")]
		[Address(RVA = "0x7E301C", Offset = "0x7E301C", VA = "0x7E301C", Slot = "40")]
		protected virtual void ChangeColor(Color givenColor)
		{
		}

		[Token(Token = "0x6001E21")]
		[Address(RVA = "0x7E3228", Offset = "0x7E3228", VA = "0x7E3228", Slot = "41")]
		protected virtual void EmitStateEvent()
		{
		}

		[Token(Token = "0x6001E22")]
		[Address(RVA = "0x7E32F4", Offset = "0x7E32F4", VA = "0x7E32F4", Slot = "42")]
		protected virtual void ChangeMaterial(Color givenColor)
		{
		}

		[Token(Token = "0x6001E23")]
		[Address(RVA = "0x7E3470", Offset = "0x7E3470", VA = "0x7E3470", Slot = "43")]
		protected virtual void ChangeMaterialColor(GameObject givenObject, Color givenColor)
		{
		}

		[Token(Token = "0x6001E24")]
		[Address(RVA = "0x7E3768", Offset = "0x7E3768", VA = "0x7E3768", Slot = "44")]
		protected virtual void CreateObjectInteractor()
		{
		}

		[Token(Token = "0x6001E25")]
		[Address(RVA = "0x7E3FBC", Offset = "0x7E3FBC", VA = "0x7E3FBC", Slot = "45")]
		protected virtual void ScaleObjectInteractor(Vector3 scaleAmount)
		{
		}

		[Token(Token = "0x6001E26")]
		[Address(RVA = "0x7E4090", Offset = "0x7E4090", VA = "0x7E4090", Slot = "46")]
		protected virtual void CreatePointerOriginTransformFollow()
		{
		}

		[Token(Token = "0x6001E27")]
		[Address(RVA = "0x7E4274", Offset = "0x7E4274", VA = "0x7E4274", Slot = "47")]
		protected virtual void DestroyPointerOriginTransformFollow()
		{
		}

		[Token(Token = "0x6001E28")]
		[Address(RVA = "0x7E4320", Offset = "0x7E4320", VA = "0x7E4320", Slot = "48")]
		protected virtual float OverrideBeamLength(float currentLength)
		{
			return default(float);
		}

		[Token(Token = "0x6001E29")]
		[Address(RVA = "0x7E44FC", Offset = "0x7E44FC", VA = "0x7E44FC", Slot = "49")]
		protected virtual void UpdateDependencies(Vector3 location)
		{
		}

		[Token(Token = "0x6001E2A")]
		[Address(RVA = "0x7E45CC", Offset = "0x7E45CC", VA = "0x7E45CC", Slot = "50")]
		protected virtual void SetupDirectionIndicator()
		{
		}

		[Token(Token = "0x6001E2B")]
		[Address(RVA = "0x7E4700", Offset = "0x7E4700", VA = "0x7E4700", Slot = "51")]
		protected virtual void UpdateDirectionIndicator()
		{
		}

		[Token(Token = "0x6001E2C")]
		[Address(RVA = "0x7E4838", Offset = "0x7E4838", VA = "0x7E4838", Slot = "52")]
		protected virtual bool ShowDirectionIndicator()
		{
			return default(bool);
		}

		[Token(Token = "0x6001E2D")]
		[Address(RVA = "0x7E48C4", Offset = "0x7E48C4", VA = "0x7E48C4")]
		protected VRTK_BasePointerRenderer()
		{
		}
	}
	[Token(Token = "0x20003F7")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x64019C", Offset = "0x64019C")]
	public class VRTK_BezierPointerRenderer : VRTK_BasePointerRenderer
	{
		[Token(Token = "0x4001D12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x65B124", Offset = "0x65B124")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65B124", Offset = "0x65B124")]
		public Vector2 maximumLength;

		[Token(Token = "0x4001D13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65B184", Offset = "0x65B184")]
		public int tracerDensity;

		[Token(Token = "0x4001D14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65B1BC", Offset = "0x65B1BC")]
		public float cursorRadius;

		[Token(Token = "0x4001D15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x65B1F4", Offset = "0x65B1F4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65B1F4", Offset = "0x65B1F4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x65B1F4", Offset = "0x65B1F4")]
		public float heightLimitAngle;

		[Token(Token = "0x4001D16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65B270", Offset = "0x65B270")]
		public float curveOffset;

		[Token(Token = "0x4001D17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65B2A8", Offset = "0x65B2A8")]
		public bool rescaleTracer;

		[Token(Token = "0x4001D18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14D")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65B2E0", Offset = "0x65B2E0")]
		public bool cursorMatchTargetRotation;

		[Token(Token = "0x4001D19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65B318", Offset = "0x65B318")]
		public int collisionCheckFrequency;

		[Token(Token = "0x4001D1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x65B350", Offset = "0x65B350")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65B350", Offset = "0x65B350")]
		public GameObject customTracer;

		[Token(Token = "0x4001D1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65B3B0", Offset = "0x65B3B0")]
		public GameObject customCursor;

		[Token(Token = "0x4001D1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65B3E8", Offset = "0x65B3E8")]
		public GameObject validLocationObject;

		[Token(Token = "0x4001D1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65B420", Offset = "0x65B420")]
		public GameObject invalidLocationObject;

		[Token(Token = "0x4001D1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		protected VRTK_CurveGenerator actualTracer;

		[Token(Token = "0x4001D1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		protected GameObject actualContainer;

		[Token(Token = "0x4001D20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		protected GameObject actualCursor;

		[Token(Token = "0x4001D21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		protected GameObject actualValidLocationObject;

		[Token(Token = "0x4001D22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		protected GameObject actualInvalidLocationObject;

		[Token(Token = "0x4001D23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		protected Vector3 fixedForwardBeamForward;

		[Token(Token = "0x6001E2E")]
		[Address(RVA = "0xAF66DC", Offset = "0xAF66DC", VA = "0xAF66DC", Slot = "10")]
		public override void UpdateRenderer()
		{
		}

		[Token(Token = "0x6001E2F")]
		[Address(RVA = "0xAF681C", Offset = "0xAF681C", VA = "0xAF681C", Slot = "4")]
		public override GameObject[] GetPointerObjects()
		{
			return null;
		}

		[Token(Token = "0x6001E30")]
		[Address(RVA = "0xAF6924", Offset = "0xAF6924", VA = "0xAF6924", Slot = "20")]
		protected override void ToggleRenderer(bool pointerState, bool actualState)
		{
		}

		[Token(Token = "0x6001E31")]
		[Address(RVA = "0xAF6A74", Offset = "0xAF6A74", VA = "0xAF6A74", Slot = "18")]
		protected override void CreatePointerObjects()
		{
		}

		[Token(Token = "0x6001E32")]
		[Address(RVA = "0xAF6D08", Offset = "0xAF6D08", VA = "0xAF6D08", Slot = "19")]
		protected override void DestroyPointerObjects()
		{
		}

		[Token(Token = "0x6001E33")]
		[Address(RVA = "0xAF6E6C", Offset = "0xAF6E6C", VA = "0xAF6E6C", Slot = "28")]
		protected override void UpdateObjectInteractor()
		{
		}

		[Token(Token = "0x6001E34")]
		[Address(RVA = "0xAF70A4", Offset = "0xAF70A4", VA = "0xAF70A4", Slot = "42")]
		protected override void ChangeMaterial(Color givenColor)
		{
		}

		[Token(Token = "0x6001E35")]
		[Address(RVA = "0xAF710C", Offset = "0xAF710C", VA = "0xAF710C", Slot = "53")]
		protected virtual void CreateTracer()
		{
		}

		[Token(Token = "0x6001E36")]
		[Address(RVA = "0xAF7210", Offset = "0xAF7210", VA = "0xAF7210", Slot = "54")]
		protected virtual GameObject CreateCursorObject()
		{
			return null;
		}

		[Token(Token = "0x6001E37")]
		[Address(RVA = "0xAF73D8", Offset = "0xAF73D8", VA = "0xAF73D8", Slot = "55")]
		protected virtual void CreateCursorLocations()
		{
		}

		[Token(Token = "0x6001E38")]
		[Address(RVA = "0xAF79B0", Offset = "0xAF79B0", VA = "0xAF79B0", Slot = "56")]
		protected virtual void CreateCursor()
		{
		}

		[Token(Token = "0x6001E39")]
		[Address(RVA = "0xAF7C38", Offset = "0xAF7C38", VA = "0xAF7C38", Slot = "57")]
		protected virtual Vector3 ProjectForwardBeam()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001E3A")]
		[Address(RVA = "0xAF7FB4", Offset = "0xAF7FB4", VA = "0xAF7FB4", Slot = "58")]
		protected virtual Vector3 ProjectDownBeam(Vector3 jointPosition)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001E3B")]
		[Address(RVA = "0xAF82E0", Offset = "0xAF82E0", VA = "0xAF82E0", Slot = "59")]
		protected virtual void AdjustForEarlyCollisions(Vector3 jointPosition, Vector3 downPosition)
		{
		}

		[Token(Token = "0x6001E3C")]
		[Address(RVA = "0xAF88EC", Offset = "0xAF88EC", VA = "0xAF88EC", Slot = "60")]
		protected virtual void DisplayCurvedBeam(Vector3 jointPosition, Vector3 downPosition)
		{
		}

		[Token(Token = "0x6001E3D")]
		[Address(RVA = "0xAF8C8C", Offset = "0xAF8C8C", VA = "0xAF8C8C", Slot = "61")]
		protected virtual void TogglePointerCursor(bool pointerState, bool actualState)
		{
		}

		[Token(Token = "0x6001E3E")]
		[Address(RVA = "0xAF8CB8", Offset = "0xAF8CB8", VA = "0xAF8CB8", Slot = "62")]
		protected virtual void TogglePointerTracer(bool pointerState, bool actualState)
		{
		}

		[Token(Token = "0x6001E3F")]
		[Address(RVA = "0xAF8D98", Offset = "0xAF8D98", VA = "0xAF8D98", Slot = "63")]
		protected virtual void SetPointerCursor()
		{
		}

		[Token(Token = "0x6001E40")]
		[Address(RVA = "0xAF9244", Offset = "0xAF9244", VA = "0xAF9244")]
		public VRTK_BezierPointerRenderer()
		{
		}
	}
	[Token(Token = "0x20003F8")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x6401D4", Offset = "0x6401D4")]
	public class VRTK_StraightPointerRenderer : VRTK_BasePointerRenderer
	{
		[Token(Token = "0x4001D24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x65B458", Offset = "0x65B458")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65B458", Offset = "0x65B458")]
		public float maximumLength;

		[Token(Token = "0x4001D25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65B4B8", Offset = "0x65B4B8")]
		public float scaleFactor;

		[Token(Token = "0x4001D26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65B4F0", Offset = "0x65B4F0")]
		public float cursorScaleMultiplier;

		[Token(Token = "0x4001D27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65B528", Offset = "0x65B528")]
		public bool cursorMatchTargetRotation;

		[Token(Token = "0x4001D28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x141")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65B560", Offset = "0x65B560")]
		public bool cursorDistanceRescale;

		[Token(Token = "0x4001D29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65B598", Offset = "0x65B598")]
		public Vector3 maximumCursorScale;

		[Token(Token = "0x4001D2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x65B5D0", Offset = "0x65B5D0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65B5D0", Offset = "0x65B5D0")]
		public GameObject customTracer;

		[Token(Token = "0x4001D2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65B630", Offset = "0x65B630")]
		public GameObject customCursor;

		[Token(Token = "0x4001D2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		protected GameObject actualContainer;

		[Token(Token = "0x4001D2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		protected GameObject actualTracer;

		[Token(Token = "0x4001D2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		protected GameObject actualCursor;

		[Token(Token = "0x4001D2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		protected Vector3 cursorOriginalScale;

		[Token(Token = "0x6001E41")]
		[Address(RVA = "0x9A2644", Offset = "0x9A2644", VA = "0x9A2644", Slot = "10")]
		public override void UpdateRenderer()
		{
		}

		[Token(Token = "0x6001E42")]
		[Address(RVA = "0x9A273C", Offset = "0x9A273C", VA = "0x9A273C", Slot = "4")]
		public override GameObject[] GetPointerObjects()
		{
			return null;
		}

		[Token(Token = "0x6001E43")]
		[Address(RVA = "0x9A2890", Offset = "0x9A2890", VA = "0x9A2890", Slot = "20")]
		protected override void ToggleRenderer(bool pointerState, bool actualState)
		{
		}

		[Token(Token = "0x6001E44")]
		[Address(RVA = "0x9A2908", Offset = "0x9A2908", VA = "0x9A2908", Slot = "18")]
		protected override void CreatePointerObjects()
		{
		}

		[Token(Token = "0x6001E45")]
		[Address(RVA = "0x9A2D44", Offset = "0x9A2D44", VA = "0x9A2D44", Slot = "19")]
		protected override void DestroyPointerObjects()
		{
		}

		[Token(Token = "0x6001E46")]
		[Address(RVA = "0x9A2DF8", Offset = "0x9A2DF8", VA = "0x9A2DF8", Slot = "42")]
		protected override void ChangeMaterial(Color givenColor)
		{
		}

		[Token(Token = "0x6001E47")]
		[Address(RVA = "0x9A2E88", Offset = "0x9A2E88", VA = "0x9A2E88", Slot = "28")]
		protected override void UpdateObjectInteractor()
		{
		}

		[Token(Token = "0x6001E48")]
		[Address(RVA = "0x9A30C0", Offset = "0x9A30C0", VA = "0x9A30C0", Slot = "53")]
		protected virtual void CreateTracer()
		{
		}

		[Token(Token = "0x6001E49")]
		[Address(RVA = "0x9A357C", Offset = "0x9A357C", VA = "0x9A357C", Slot = "54")]
		protected virtual void CreateCursor()
		{
		}

		[Token(Token = "0x6001E4A")]
		[Address(RVA = "0x9A3AE4", Offset = "0x9A3AE4", VA = "0x9A3AE4", Slot = "55")]
		protected virtual void CheckRayMiss(bool rayHit, RaycastHit pointerCollidedWith)
		{
		}

		[Token(Token = "0x6001E4B")]
		[Address(RVA = "0x9A3C98", Offset = "0x9A3C98", VA = "0x9A3C98", Slot = "56")]
		protected virtual void CheckRayHit(bool rayHit, RaycastHit pointerCollidedWith)
		{
		}

		[Token(Token = "0x6001E4C")]
		[Address(RVA = "0x9A3D3C", Offset = "0x9A3D3C", VA = "0x9A3D3C", Slot = "57")]
		protected virtual float CastRayForward()
		{
			return default(float);
		}

		[Token(Token = "0x6001E4D")]
		[Address(RVA = "0x9A3F0C", Offset = "0x9A3F0C", VA = "0x9A3F0C", Slot = "58")]
		protected virtual void SetPointerAppearance(float tracerLength)
		{
		}

		[Token(Token = "0x6001E4E")]
		[Address(RVA = "0x9A4594", Offset = "0x9A4594", VA = "0x9A4594")]
		public VRTK_StraightPointerRenderer()
		{
		}
	}
	[Token(Token = "0x20003F9")]
	public struct DestinationMarkerEventArgs
	{
		[Token(Token = "0x4001D30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float distance;

		[Token(Token = "0x4001D31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Transform target;

		[Token(Token = "0x4001D32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public RaycastHit raycastHit;

		[Token(Token = "0x4001D33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public Vector3 destinationPosition;

		[Token(Token = "0x4001D34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Quaternion? destinationRotation;

		[Token(Token = "0x4001D35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public bool forceDestinationPosition;

		[Token(Token = "0x4001D36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5D")]
		public bool enableTeleport;

		[Token(Token = "0x4001D37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public VRTK_ControllerReference controllerReference;
	}
	[Token(Token = "0x20003FA")]
	public delegate void DestinationMarkerEventHandler(object sender, DestinationMarkerEventArgs e);
	[Token(Token = "0x20003FB")]
	public abstract class VRTK_DestinationMarker : MonoBehaviour
	{
		[Token(Token = "0x4001D38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x65B668", Offset = "0x65B668")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65B668", Offset = "0x65B668")]
		public bool enableTeleport;

		[Token(Token = "0x4001D39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65B6D8", Offset = "0x65B6D8")]
		public VRTK_PolicyList targetListPolicy;

		[Token(Token = "0x4001D3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x65B750", Offset = "0x65B750")]
		protected float navMeshCheckDistance;

		[Token(Token = "0x4001D3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected VRTK_NavMeshData navmeshData;

		[Token(Token = "0x4001D40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		protected bool headsetPositionCompensation;

		[Token(Token = "0x4001D41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
		protected bool forceHoverOnRepeatedEnter;

		[Token(Token = "0x4001D42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		protected Collider existingCollider;

		[Token(Token = "0x1400010B")]
		public event DestinationMarkerEventHandler DestinationMarkerEnter
		{
			[Token(Token = "0x6001E53")]
			[Address(RVA = "0xA28230", Offset = "0xA28230", VA = "0xA28230")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66D31C", Offset = "0x66D31C")]
			add
			{
			}
			[Token(Token = "0x6001E54")]
			[Address(RVA = "0xA2831C", Offset = "0xA2831C", VA = "0xA2831C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66D32C", Offset = "0x66D32C")]
			remove
			{
			}
		}

		[Token(Token = "0x1400010C")]
		public event DestinationMarkerEventHandler DestinationMarkerExit
		{
			[Token(Token = "0x6001E55")]
			[Address(RVA = "0xA28408", Offset = "0xA28408", VA = "0xA28408")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66D33C", Offset = "0x66D33C")]
			add
			{
			}
			[Token(Token = "0x6001E56")]
			[Address(RVA = "0xA284F4", Offset = "0xA284F4", VA = "0xA284F4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66D34C", Offset = "0x66D34C")]
			remove
			{
			}
		}

		[Token(Token = "0x1400010D")]
		public event DestinationMarkerEventHandler DestinationMarkerHover
		{
			[Token(Token = "0x6001E57")]
			[Address(RVA = "0xA285E0", Offset = "0xA285E0", VA = "0xA285E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66D35C", Offset = "0x66D35C")]
			add
			{
			}
			[Token(Token = "0x6001E58")]
			[Address(RVA = "0xA286CC", Offset = "0xA286CC", VA = "0xA286CC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66D36C", Offset = "0x66D36C")]
			remove
			{
			}
		}

		[Token(Token = "0x1400010E")]
		public event DestinationMarkerEventHandler DestinationMarkerSet
		{
			[Token(Token = "0x6001E59")]
			[Address(RVA = "0xA287B8", Offset = "0xA287B8", VA = "0xA287B8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66D37C", Offset = "0x66D37C")]
			add
			{
			}
			[Token(Token = "0x6001E5A")]
			[Address(RVA = "0xA288A4", Offset = "0xA288A4", VA = "0xA288A4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66D38C", Offset = "0x66D38C")]
			remove
			{
			}
		}

		[Token(Token = "0x6001E5B")]
		[Address(RVA = "0xA28990", Offset = "0xA28990", VA = "0xA28990", Slot = "4")]
		public virtual void OnDestinationMarkerEnter(DestinationMarkerEventArgs e)
		{
		}

		[Token(Token = "0x6001E5C")]
		[Address(RVA = "0xA28B2C", Offset = "0xA28B2C", VA = "0xA28B2C", Slot = "5")]
		public virtual void OnDestinationMarkerExit(DestinationMarkerEventArgs e)
		{
		}

		[Token(Token = "0x6001E5D")]
		[Address(RVA = "0xA28B7C", Offset = "0xA28B7C", VA = "0xA28B7C", Slot = "6")]
		public virtual void OnDestinationMarkerHover(DestinationMarkerEventArgs e)
		{
		}

		[Token(Token = "0x6001E5E")]
		[Address(RVA = "0xA28BC8", Offset = "0xA28BC8", VA = "0xA28BC8", Slot = "7")]
		public virtual void OnDestinationMarkerSet(DestinationMarkerEventArgs e)
		{
		}

		[Token(Token = "0x6001E5F")]
		[Address(RVA = "0xA28C14", Offset = "0xA28C14", VA = "0xA28C14", Slot = "8")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x66D39C", Offset = "0x66D39C")]
		public virtual void SetNavMeshCheckDistance(float distance)
		{
		}

		[Token(Token = "0x6001E60")]
		[Address(RVA = "0xA28CAC", Offset = "0xA28CAC", VA = "0xA28CAC", Slot = "9")]
		public virtual void SetNavMeshData(VRTK_NavMeshData givenData)
		{
		}

		[Token(Token = "0x6001E61")]
		[Address(RVA = "0xA28CB4", Offset = "0xA28CB4", VA = "0xA28CB4", Slot = "10")]
		public virtual void SetHeadsetPositionCompensation(bool state)
		{
		}

		[Token(Token = "0x6001E62")]
		[Address(RVA = "0xA28CC0", Offset = "0xA28CC0", VA = "0xA28CC0", Slot = "11")]
		public virtual void SetForceHoverOnRepeatedEnter(bool state)
		{
		}

		[Token(Token = "0x6001E63")]
		[Address(RVA = "0xA28CCC", Offset = "0xA28CCC", VA = "0xA28CCC", Slot = "12")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6001E64")]
		[Address(RVA = "0xA28D58", Offset = "0xA28D58", VA = "0xA28D58", Slot = "13")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x6001E65")]
		[Address(RVA = "0xA28DE4", Offset = "0xA28DE4", VA = "0xA28DE4", Slot = "14")]
		protected virtual DestinationMarkerEventArgs SetDestinationMarkerEvent(float distance, Transform target, RaycastHit raycastHit, Vector3 position, VRTK_ControllerReference controllerReference, bool forceDestinationPosition = false, [Optional] Quaternion? rotation)
		{
			return default(DestinationMarkerEventArgs);
		}

		[Token(Token = "0x6001E66")]
		[Address(RVA = "0xA28E60", Offset = "0xA28E60", VA = "0xA28E60")]
		protected VRTK_DestinationMarker()
		{
		}
	}
	[Token(Token = "0x20003FC")]
	public struct PlayAreaCursorEventArgs
	{
		[Token(Token = "0x4001D43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Collider collider;
	}
	[Token(Token = "0x20003FD")]
	public delegate void PlayAreaCursorEventHandler(object sender, PlayAreaCursorEventArgs e);
	[Token(Token = "0x20003FE")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x64020C", Offset = "0x64020C")]
	public class VRTK_PlayAreaCursor : MonoBehaviour
	{
		[Token(Token = "0x4001D44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x65B788", Offset = "0x65B788")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65B788", Offset = "0x65B788")]
		public bool usePointerColor;

		[Token(Token = "0x4001D45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65B7E8", Offset = "0x65B7E8")]
		public Vector2 playAreaCursorDimensions;

		[Token(Token = "0x4001D46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65B820", Offset = "0x65B820")]
		public bool handlePlayAreaCursorCollisions;

		[Token(Token = "0x4001D47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65B858", Offset = "0x65B858")]
		public bool headsetOutOfBoundsIsCollision;

		[Token(Token = "0x4001D48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x26")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65B890", Offset = "0x65B890")]
		public bool displayOnInvalidLocation;

		[Token(Token = "0x4001D49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65B8C8", Offset = "0x65B8C8")]
		public VRTK_PolicyList targetListPolicy;

		[Token(Token = "0x4001D4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x65B900", Offset = "0x65B900")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65B900", Offset = "0x65B900")]
		public VRTK_PointerDirectionIndicator directionIndicator;

		[Token(Token = "0x4001D4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65B960", Offset = "0x65B960")]
		public GameObject validLocationObject;

		[Token(Token = "0x4001D4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65B998", Offset = "0x65B998")]
		public GameObject invalidLocationObject;

		[Token(Token = "0x4001D4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		protected bool headsetPositionCompensation;

		[Token(Token = "0x4001D50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
		protected bool playAreaCursorCollided;

		[Token(Token = "0x4001D51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5A")]
		protected bool headsetOutOfBounds;

		[Token(Token = "0x4001D52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		protected Transform playArea;

		[Token(Token = "0x4001D53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		protected GameObject playAreaCursor;

		[Token(Token = "0x4001D54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		protected GameObject[] playAreaCursorBoundaries;

		[Token(Token = "0x4001D55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		protected BoxCollider playAreaCursorCollider;

		[Token(Token = "0x4001D56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		protected Transform headset;

		[Token(Token = "0x4001D57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		protected Renderer[] boundaryRenderers;

		[Token(Token = "0x4001D58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		protected GameObject playAreaCursorValidChild;

		[Token(Token = "0x4001D59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		protected GameObject playAreaCursorInvalidChild;

		[Token(Token = "0x4001D5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		protected int btmRightInner;

		[Token(Token = "0x4001D5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		protected int btmLeftInner;

		[Token(Token = "0x4001D5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		protected int topLeftInner;

		[Token(Token = "0x4001D5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		protected int topRightInner;

		[Token(Token = "0x4001D5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		protected int btmRightOuter;

		[Token(Token = "0x4001D5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		protected int btmLeftOuter;

		[Token(Token = "0x4001D60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		protected int topLeftOuter;

		[Token(Token = "0x4001D61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		protected int topRightOuter;

		[Token(Token = "0x1400010F")]
		public event PlayAreaCursorEventHandler PlayAreaCursorStartCollision
		{
			[Token(Token = "0x6001E6B")]
			[Address(RVA = "0xA8B750", Offset = "0xA8B750", VA = "0xA8B750")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66D3D4", Offset = "0x66D3D4")]
			add
			{
			}
			[Token(Token = "0x6001E6C")]
			[Address(RVA = "0xA8B83C", Offset = "0xA8B83C", VA = "0xA8B83C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66D3E4", Offset = "0x66D3E4")]
			remove
			{
			}
		}

		[Token(Token = "0x14000110")]
		public event PlayAreaCursorEventHandler PlayAreaCursorEndCollision
		{
			[Token(Token = "0x6001E6D")]
			[Address(RVA = "0xA8B928", Offset = "0xA8B928", VA = "0xA8B928")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66D3F4", Offset = "0x66D3F4")]
			add
			{
			}
			[Token(Token = "0x6001E6E")]
			[Address(RVA = "0xA8BA14", Offset = "0xA8BA14", VA = "0xA8BA14")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66D404", Offset = "0x66D404")]
			remove
			{
			}
		}

		[Token(Token = "0x6001E6F")]
		[Address(RVA = "0xA8BB00", Offset = "0xA8BB00", VA = "0xA8BB00", Slot = "4")]
		public virtual void OnPlayAreaCursorStartCollision(PlayAreaCursorEventArgs e)
		{
		}

		[Token(Token = "0x6001E70")]
		[Address(RVA = "0xA8BB24", Offset = "0xA8BB24", VA = "0xA8BB24", Slot = "5")]
		public virtual void OnPlayAreaCursorEndCollision(PlayAreaCursorEventArgs e)
		{
		}

		[Token(Token = "0x6001E71")]
		[Address(RVA = "0xA8BB48", Offset = "0xA8BB48", VA = "0xA8BB48", Slot = "6")]
		public virtual bool HasCollided()
		{
			return default(bool);
		}

		[Token(Token = "0x6001E72")]
		[Address(RVA = "0xA8BB68", Offset = "0xA8BB68", VA = "0xA8BB68", Slot = "7")]
		public virtual void SetHeadsetPositionCompensation(bool state)
		{
		}

		[Token(Token = "0x6001E73")]
		[Address(RVA = "0xA8BB74", Offset = "0xA8BB74", VA = "0xA8BB74", Slot = "8")]
		public virtual void SetPlayAreaCursorCollision(bool state, [Optional] Collider collider)
		{
		}

		[Token(Token = "0x6001E74")]
		[Address(RVA = "0xA8BBE8", Offset = "0xA8BBE8", VA = "0xA8BBE8", Slot = "9")]
		public virtual void SetMaterialColor(Color color, bool validity)
		{
		}

		[Token(Token = "0x6001E75")]
		[Address(RVA = "0xA8BDA8", Offset = "0xA8BDA8", VA = "0xA8BDA8", Slot = "10")]
		public virtual void SetPlayAreaCursorTransform(Vector3 location)
		{
		}

		[Token(Token = "0x6001E76")]
		[Address(RVA = "0xA8C28C", Offset = "0xA8C28C", VA = "0xA8C28C", Slot = "11")]
		public virtual void ToggleState(bool state)
		{
		}

		[Token(Token = "0x6001E77")]
		[Address(RVA = "0xA8C354", Offset = "0xA8C354", VA = "0xA8C354", Slot = "12")]
		public virtual bool IsActive()
		{
			return default(bool);
		}

		[Token(Token = "0x6001E78")]
		[Address(RVA = "0xA8C3F4", Offset = "0xA8C3F4", VA = "0xA8C3F4", Slot = "13")]
		public virtual GameObject GetPlayAreaContainer()
		{
			return null;
		}

		[Token(Token = "0x6001E79")]
		[Address(RVA = "0xA8C3FC", Offset = "0xA8C3FC", VA = "0xA8C3FC", Slot = "14")]
		public virtual void ToggleVisibility(bool state)
		{
		}

		[Token(Token = "0x6001E7A")]
		[Address(RVA = "0xA8C5A8", Offset = "0xA8C5A8", VA = "0xA8C5A8", Slot = "15")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6001E7B")]
		[Address(RVA = "0xA8C610", Offset = "0xA8C610", VA = "0xA8C610", Slot = "16")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6001E7C")]
		[Address(RVA = "0xA8C6F4", Offset = "0xA8C6F4", VA = "0xA8C6F4", Slot = "17")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x6001E7D")]
		[Address(RVA = "0xA8C7A8", Offset = "0xA8C7A8", VA = "0xA8C7A8", Slot = "18")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x6001E7E")]
		[Address(RVA = "0xA8C810", Offset = "0xA8C810", VA = "0xA8C810", Slot = "19")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x6001E7F")]
		[Address(RVA = "0xA8C868", Offset = "0xA8C868", VA = "0xA8C868", Slot = "20")]
		protected virtual PlayAreaCursorEventArgs SetEventPayload(Collider collider)
		{
			return default(PlayAreaCursorEventArgs);
		}

		[Token(Token = "0x6001E80")]
		[Address(RVA = "0xA8C870", Offset = "0xA8C870", VA = "0xA8C870", Slot = "21")]
		protected virtual void EmitEvent(Collider collider)
		{
		}

		[Token(Token = "0x6001E81")]
		[Address(RVA = "0xA8C938", Offset = "0xA8C938", VA = "0xA8C938", Slot = "22")]
		protected virtual void InitPlayAreaCursor()
		{
		}

		[Token(Token = "0x6001E82")]
		[Address(RVA = "0xA8CF84", Offset = "0xA8CF84", VA = "0xA8CF84", Slot = "23")]
		protected virtual void SetCursorColor(GameObject cursorObject, Color color)
		{
		}

		[Token(Token = "0x6001E83")]
		[Address(RVA = "0xA8D160", Offset = "0xA8D160", VA = "0xA8D160", Slot = "24")]
		protected virtual void ToggleValidPlayAreaState(bool state)
		{
		}

		[Token(Token = "0x6001E84")]
		[Address(RVA = "0xA8D274", Offset = "0xA8D274", VA = "0xA8D274", Slot = "25")]
		protected virtual string GeneratePlayAreaCursorName()
		{
			return null;
		}

		[Token(Token = "0x6001E85")]
		[Address(RVA = "0xA8D3AC", Offset = "0xA8D3AC", VA = "0xA8D3AC", Slot = "26")]
		protected virtual void GeneratePlayAreaCursorFromPrefab(Vector3[] cursorDrawVertices)
		{
		}

		[Token(Token = "0x6001E86")]
		[Address(RVA = "0xA8DA28", Offset = "0xA8DA28", VA = "0xA8DA28", Slot = "27")]
		protected virtual void GeneratePlayAreaCursor(Vector3[] cursorDrawVertices)
		{
		}

		[Token(Token = "0x6001E87")]
		[Address(RVA = "0xA8E5E8", Offset = "0xA8E5E8", VA = "0xA8E5E8", Slot = "28")]
		protected virtual void DrawPlayAreaCursorBoundary(int index, float left, float right, float top, float bottom, float thickness, Vector3 localPosition)
		{
		}

		[Token(Token = "0x6001E88")]
		[Address(RVA = "0xA8EA58", Offset = "0xA8EA58", VA = "0xA8EA58", Slot = "29")]
		protected virtual void CreateCursorCollider(GameObject cursor)
		{
		}

		[Token(Token = "0x6001E89")]
		[Address(RVA = "0xA8EB78", Offset = "0xA8EB78", VA = "0xA8EB78", Slot = "30")]
		protected virtual void UpdateCollider()
		{
		}

		[Token(Token = "0x6001E8A")]
		[Address(RVA = "0xA8ED3C", Offset = "0xA8ED3C", VA = "0xA8ED3C")]
		public VRTK_PlayAreaCursor()
		{
		}
	}
	[Token(Token = "0x20003FF")]
	public class VRTK_PlayAreaCollider : MonoBehaviour
	{
		[Token(Token = "0x4001D62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected VRTK_PlayAreaCursor parent;

		[Token(Token = "0x4001D63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected VRTK_PolicyList targetListPolicy;

		[Token(Token = "0x6001E8B")]
		[Address(RVA = "0xA8B3A4", Offset = "0xA8B3A4", VA = "0xA8B3A4", Slot = "4")]
		public virtual void SetParent(VRTK_PlayAreaCursor setParent)
		{
		}

		[Token(Token = "0x6001E8C")]
		[Address(RVA = "0xA8B3AC", Offset = "0xA8B3AC", VA = "0xA8B3AC", Slot = "5")]
		public virtual void SetIgnoreTarget([Optional] VRTK_PolicyList list)
		{
		}

		[Token(Token = "0x6001E8D")]
		[Address(RVA = "0xA8B3B4", Offset = "0xA8B3B4", VA = "0xA8B3B4", Slot = "6")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x6001E8E")]
		[Address(RVA = "0xA8B45C", Offset = "0xA8B45C", VA = "0xA8B45C", Slot = "7")]
		protected virtual void OnTriggerStay(Collider collider)
		{
		}

		[Token(Token = "0x6001E8F")]
		[Address(RVA = "0xA8B584", Offset = "0xA8B584", VA = "0xA8B584", Slot = "8")]
		protected virtual void OnTriggerExit(Collider collider)
		{
		}

		[Token(Token = "0x6001E90")]
		[Address(RVA = "0xA8B654", Offset = "0xA8B654", VA = "0xA8B654", Slot = "9")]
		protected virtual bool ValidTarget(Collider collider)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E91")]
		[Address(RVA = "0xA8B748", Offset = "0xA8B748", VA = "0xA8B748")]
		public VRTK_PlayAreaCollider()
		{
		}
	}
	[Token(Token = "0x2000400")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x640244", Offset = "0x640244")]
	public class VRTK_Pointer : VRTK_DestinationMarker
	{
		[Token(Token = "0x4001D64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x65B9F0", Offset = "0x65B9F0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65B9F0", Offset = "0x65B9F0")]
		public VRTK_BasePointerRenderer pointerRenderer;

		[Token(Token = "0x4001D65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65BA50", Offset = "0x65BA50")]
		public VRTK_ControllerEvents.ButtonAlias activationButton;

		[Token(Token = "0x4001D66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65BA88", Offset = "0x65BA88")]
		public bool holdButtonToActivate;

		[Token(Token = "0x4001D67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x75")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65BAC0", Offset = "0x65BAC0")]
		public bool activateOnEnable;

		[Token(Token = "0x4001D68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65BAF8", Offset = "0x65BAF8")]
		public float activationDelay;

		[Token(Token = "0x4001D69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x65BB30", Offset = "0x65BB30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65BB30", Offset = "0x65BB30")]
		public VRTK_ControllerEvents.ButtonAlias selectionButton;

		[Token(Token = "0x4001D6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65BB90", Offset = "0x65BB90")]
		public bool selectOnPress;

		[Token(Token = "0x4001D6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65BBC8", Offset = "0x65BBC8")]
		public float selectionDelay;

		[Token(Token = "0x4001D6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65BC00", Offset = "0x65BC00")]
		public float selectAfterHoverDuration;

		[Token(Token = "0x4001D6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x65BC38", Offset = "0x65BC38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65BC38", Offset = "0x65BC38")]
		public bool interactWithObjects;

		[Token(Token = "0x4001D6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8D")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65BC98", Offset = "0x65BC98")]
		public bool grabToPointerTip;

		[Token(Token = "0x4001D6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x65BCD0", Offset = "0x65BCD0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65BCD0", Offset = "0x65BCD0")]
		public GameObject attachedTo;

		[Token(Token = "0x4001D70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65BD30", Offset = "0x65BD30")]
		public VRTK_ControllerEvents controllerEvents;

		[Token(Token = "0x4001D71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65BD68", Offset = "0x65BD68")]
		public VRTK_InteractUse interactUse;

		[Token(Token = "0x4001D72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65BDA0", Offset = "0x65BDA0")]
		public Transform customOrigin;

		[Token(Token = "0x4001D73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x65BDD8", Offset = "0x65BDD8")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x65BDD8", Offset = "0x65BDD8")]
		[ObsoleteInspector]
		public VRTK_ControllerEvents controller;

		[Token(Token = "0x4001D7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		protected VRTK_ControllerEvents.ButtonAlias subscribedActivationButton;

		[Token(Token = "0x4001D7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		protected VRTK_ControllerEvents.ButtonAlias subscribedSelectionButton;

		[Token(Token = "0x4001D7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		protected bool currentSelectOnPress;

		[Token(Token = "0x4001D7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		protected float activateDelayTimer;

		[Token(Token = "0x4001D7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		protected float selectDelayTimer;

		[Token(Token = "0x4001D7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		protected float hoverDurationTimer;

		[Token(Token = "0x4001D80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		protected int currentActivationState;

		[Token(Token = "0x4001D81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		protected bool willDeactivate;

		[Token(Token = "0x4001D82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x105")]
		protected bool wasActivated;

		[Token(Token = "0x4001D83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		protected VRTK_ControllerReference controllerReference;

		[Token(Token = "0x4001D84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		protected VRTK_InteractableObject pointerInteractableObject;

		[Token(Token = "0x4001D85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		protected Collider currentCollider;

		[Token(Token = "0x4001D86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		protected bool canClickOnHover;

		[Token(Token = "0x4001D87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x121")]
		protected bool activationButtonPressed;

		[Token(Token = "0x4001D88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x122")]
		protected bool selectionButtonPressed;

		[Token(Token = "0x4001D89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x123")]
		protected bool attemptControllerSetup;

		[Token(Token = "0x4001D8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		protected VRTK_StraightPointerRenderer autogenPointerRenderer;

		[Token(Token = "0x14000111")]
		public event ControllerInteractionEventHandler ActivationButtonPressed
		{
			[Token(Token = "0x6001E92")]
			[Address(RVA = "0x933924", Offset = "0x933924", VA = "0x933924")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66D414", Offset = "0x66D414")]
			add
			{
			}
			[Token(Token = "0x6001E93")]
			[Address(RVA = "0x933A10", Offset = "0x933A10", VA = "0x933A10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66D424", Offset = "0x66D424")]
			remove
			{
			}
		}

		[Token(Token = "0x14000112")]
		public event ControllerInteractionEventHandler ActivationButtonReleased
		{
			[Token(Token = "0x6001E94")]
			[Address(RVA = "0x933AFC", Offset = "0x933AFC", VA = "0x933AFC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66D434", Offset = "0x66D434")]
			add
			{
			}
			[Token(Token = "0x6001E95")]
			[Address(RVA = "0x933BE8", Offset = "0x933BE8", VA = "0x933BE8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66D444", Offset = "0x66D444")]
			remove
			{
			}
		}

		[Token(Token = "0x14000113")]
		public event ControllerInteractionEventHandler SelectionButtonPressed
		{
			[Token(Token = "0x6001E96")]
			[Address(RVA = "0x933CD4", Offset = "0x933CD4", VA = "0x933CD4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66D454", Offset = "0x66D454")]
			add
			{
			}
			[Token(Token = "0x6001E97")]
			[Address(RVA = "0x933DC0", Offset = "0x933DC0", VA = "0x933DC0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66D464", Offset = "0x66D464")]
			remove
			{
			}
		}

		[Token(Token = "0x14000114")]
		public event ControllerInteractionEventHandler SelectionButtonReleased
		{
			[Token(Token = "0x6001E98")]
			[Address(RVA = "0x933EAC", Offset = "0x933EAC", VA = "0x933EAC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66D474", Offset = "0x66D474")]
			add
			{
			}
			[Token(Token = "0x6001E99")]
			[Address(RVA = "0x933F98", Offset = "0x933F98", VA = "0x933F98")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66D484", Offset = "0x66D484")]
			remove
			{
			}
		}

		[Token(Token = "0x14000115")]
		public event DestinationMarkerEventHandler PointerStateValid
		{
			[Token(Token = "0x6001E9A")]
			[Address(RVA = "0x934084", Offset = "0x934084", VA = "0x934084")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66D494", Offset = "0x66D494")]
			add
			{
			}
			[Token(Token = "0x6001E9B")]
			[Address(RVA = "0x934170", Offset = "0x934170", VA = "0x934170")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66D4A4", Offset = "0x66D4A4")]
			remove
			{
			}
		}

		[Token(Token = "0x14000116")]
		public event DestinationMarkerEventHandler PointerStateInvalid
		{
			[Token(Token = "0x6001E9C")]
			[Address(RVA = "0x93425C", Offset = "0x93425C", VA = "0x93425C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66D4B4", Offset = "0x66D4B4")]
			add
			{
			}
			[Token(Token = "0x6001E9D")]
			[Address(RVA = "0x934348", Offset = "0x934348", VA = "0x934348")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66D4C4", Offset = "0x66D4C4")]
			remove
			{
			}
		}

		[Token(Token = "0x6001E9E")]
		[Address(RVA = "0x934434", Offset = "0x934434", VA = "0x934434", Slot = "15")]
		public virtual void OnActivationButtonPressed(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001E9F")]
		[Address(RVA = "0x934480", Offset = "0x934480", VA = "0x934480", Slot = "16")]
		public virtual void OnActivationButtonReleased(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001EA0")]
		[Address(RVA = "0x9344CC", Offset = "0x9344CC", VA = "0x9344CC", Slot = "17")]
		public virtual void OnSelectionButtonPressed(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001EA1")]
		[Address(RVA = "0x934518", Offset = "0x934518", VA = "0x934518", Slot = "18")]
		public virtual void OnSelectionButtonReleased(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001EA2")]
		[Address(RVA = "0x934564", Offset = "0x934564", VA = "0x934564", Slot = "19")]
		public virtual void OnPointerStateValid()
		{
		}

		[Token(Token = "0x6001EA3")]
		[Address(RVA = "0x9345CC", Offset = "0x9345CC", VA = "0x9345CC", Slot = "20")]
		public virtual void OnPointerStateInvalid()
		{
		}

		[Token(Token = "0x6001EA4")]
		[Address(RVA = "0x934634", Offset = "0x934634", VA = "0x934634", Slot = "21")]
		public virtual bool IsActivationButtonPressed()
		{
			return default(bool);
		}

		[Token(Token = "0x6001EA5")]
		[Address(RVA = "0x93463C", Offset = "0x93463C", VA = "0x93463C", Slot = "22")]
		public virtual bool IsSelectionButtonPressed()
		{
			return default(bool);
		}

		[Token(Token = "0x6001EA6")]
		[Address(RVA = "0x934644", Offset = "0x934644", VA = "0x934644", Slot = "23")]
		public virtual void PointerEnter(RaycastHit givenHit)
		{
		}

		[Token(Token = "0x6001EA7")]
		[Address(RVA = "0x9349B0", Offset = "0x9349B0", VA = "0x9349B0", Slot = "24")]
		public virtual void PointerExit(RaycastHit givenHit)
		{
		}

		[Token(Token = "0x6001EA8")]
		[Address(RVA = "0x934BFC", Offset = "0x934BFC", VA = "0x934BFC", Slot = "25")]
		public virtual bool CanActivate()
		{
			return default(bool);
		}

		[Token(Token = "0x6001EA9")]
		[Address(RVA = "0x934C2C", Offset = "0x934C2C", VA = "0x934C2C", Slot = "26")]
		public virtual bool CanSelect()
		{
			return default(bool);
		}

		[Token(Token = "0x6001EAA")]
		[Address(RVA = "0x934C5C", Offset = "0x934C5C", VA = "0x934C5C", Slot = "27")]
		public virtual bool IsPointerActive()
		{
			return default(bool);
		}

		[Token(Token = "0x6001EAB")]
		[Address(RVA = "0x934C6C", Offset = "0x934C6C", VA = "0x934C6C", Slot = "28")]
		public virtual void ResetActivationTimer(bool forceZero = false)
		{
		}

		[Token(Token = "0x6001EAC")]
		[Address(RVA = "0x934CBC", Offset = "0x934CBC", VA = "0x934CBC", Slot = "29")]
		public virtual void ResetSelectionTimer(bool forceZero = false)
		{
		}

		[Token(Token = "0x6001EAD")]
		[Address(RVA = "0x934D0C", Offset = "0x934D0C", VA = "0x934D0C", Slot = "30")]
		public virtual void Toggle(bool state)
		{
		}

		[Token(Token = "0x6001EAE")]
		[Address(RVA = "0x934E38", Offset = "0x934E38", VA = "0x934E38", Slot = "31")]
		public virtual bool IsStateValid()
		{
			return default(bool);
		}

		[Token(Token = "0x6001EAF")]
		[Address(RVA = "0x934E98", Offset = "0x934E98", VA = "0x934E98", Slot = "32")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6001EB0")]
		[Address(RVA = "0x934FEC", Offset = "0x934FEC", VA = "0x934FEC", Slot = "12")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6001EB1")]
		[Address(RVA = "0x935198", Offset = "0x935198", VA = "0x935198", Slot = "13")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x6001EB2")]
		[Address(RVA = "0x9352F0", Offset = "0x9352F0", VA = "0x9352F0", Slot = "33")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x6001EB3")]
		[Address(RVA = "0x935434", Offset = "0x935434", VA = "0x935434", Slot = "34")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x6001EB4")]
		[Address(RVA = "0x935484", Offset = "0x935484", VA = "0x935484", Slot = "35")]
		protected virtual void SetDefaultValues()
		{
		}

		[Token(Token = "0x6001EB5")]
		[Address(RVA = "0x9354C8", Offset = "0x9354C8", VA = "0x9354C8", Slot = "36")]
		protected virtual void AttemptControllerSetup()
		{
		}

		[Token(Token = "0x6001EB6")]
		[Address(RVA = "0x935558", Offset = "0x935558", VA = "0x935558", Slot = "37")]
		protected virtual void HandleEnabledPointer()
		{
		}

		[Token(Token = "0x6001EB7")]
		[Address(RVA = "0x935698", Offset = "0x935698", VA = "0x935698", Slot = "38")]
		protected virtual Quaternion? GetCursorRotation()
		{
			return null;
		}

		[Token(Token = "0x6001EB8")]
		[Address(RVA = "0x9357EC", Offset = "0x9357EC", VA = "0x9357EC", Slot = "39")]
		protected virtual bool EnabledPointerRenderer()
		{
			return default(bool);
		}

		[Token(Token = "0x6001EB9")]
		[Address(RVA = "0x93588C", Offset = "0x93588C", VA = "0x93588C", Slot = "40")]
		protected virtual bool NoPointerRenderer()
		{
			return default(bool);
		}

		[Token(Token = "0x6001EBA")]
		[Address(RVA = "0x935930", Offset = "0x935930", VA = "0x935930", Slot = "41")]
		protected virtual bool CanActivateOnToggleButton(bool state)
		{
			return default(bool);
		}

		[Token(Token = "0x6001EBB")]
		[Address(RVA = "0x935980", Offset = "0x935980", VA = "0x935980", Slot = "42")]
		protected virtual bool ControllerRequired()
		{
			return default(bool);
		}

		[Token(Token = "0x6001EBC")]
		[Address(RVA = "0x9359A0", Offset = "0x9359A0", VA = "0x9359A0", Slot = "43")]
		protected virtual bool FindController()
		{
			return default(bool);
		}

		[Token(Token = "0x6001EBD")]
		[Address(RVA = "0x935CD0", Offset = "0x935CD0", VA = "0x935CD0", Slot = "44")]
		protected virtual void GetInteractUse()
		{
		}

		[Token(Token = "0x6001EBE")]
		[Address(RVA = "0x935E00", Offset = "0x935E00", VA = "0x935E00", Slot = "45")]
		protected virtual void SetupController()
		{
		}

		[Token(Token = "0x6001EBF")]
		[Address(RVA = "0x935EBC", Offset = "0x935EBC", VA = "0x935EBC", Slot = "46")]
		protected virtual void SetupRenderer()
		{
		}

		[Token(Token = "0x6001EC0")]
		[Address(RVA = "0x935FC4", Offset = "0x935FC4", VA = "0x935FC4", Slot = "47")]
		protected virtual VRTK_BasePointerRenderer GeneratePointerRenderer()
		{
			return null;
		}

		[Token(Token = "0x6001EC1")]
		[Address(RVA = "0x936118", Offset = "0x936118", VA = "0x936118", Slot = "48")]
		protected virtual bool ButtonMappingIsUndefined(VRTK_ControllerEvents.ButtonAlias givenButton, VRTK_ControllerEvents.ButtonAlias givenSubscribedButton)
		{
			return default(bool);
		}

		[Token(Token = "0x6001EC2")]
		[Address(RVA = "0x936130", Offset = "0x936130", VA = "0x936130", Slot = "49")]
		protected virtual void CheckButtonMappingConflict()
		{
		}

		[Token(Token = "0x6001EC3")]
		[Address(RVA = "0x936220", Offset = "0x936220", VA = "0x936220", Slot = "50")]
		protected virtual void CheckButtonSubscriptions()
		{
		}

		[Token(Token = "0x6001EC4")]
		[Address(RVA = "0x936338", Offset = "0x936338", VA = "0x936338", Slot = "51")]
		protected virtual void SubscribeActivationButton()
		{
		}

		[Token(Token = "0x6001EC5")]
		[Address(RVA = "0x936494", Offset = "0x936494", VA = "0x936494", Slot = "52")]
		protected virtual void UnsubscribeActivationButton()
		{
		}

		[Token(Token = "0x6001EC6")]
		[Address(RVA = "0x9365D4", Offset = "0x9365D4", VA = "0x9365D4", Slot = "53")]
		protected virtual void PointerActivated()
		{
		}

		[Token(Token = "0x6001EC7")]
		[Address(RVA = "0x936624", Offset = "0x936624", VA = "0x936624", Slot = "54")]
		protected virtual void PointerDeactivated()
		{
		}

		[Token(Token = "0x6001EC8")]
		[Address(RVA = "0x93668C", Offset = "0x93668C", VA = "0x93668C", Slot = "55")]
		protected virtual void DoActivationButtonPressed(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001EC9")]
		[Address(RVA = "0x936748", Offset = "0x936748", VA = "0x936748", Slot = "56")]
		protected virtual void DoActivationButtonReleased(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001ECA")]
		[Address(RVA = "0x936800", Offset = "0x936800", VA = "0x936800", Slot = "57")]
		protected virtual void SubscribeSelectionButton()
		{
		}

		[Token(Token = "0x6001ECB")]
		[Address(RVA = "0x9369C0", Offset = "0x9369C0", VA = "0x9369C0", Slot = "58")]
		protected virtual void UnsubscribeSelectionButton()
		{
		}

		[Token(Token = "0x6001ECC")]
		[Address(RVA = "0x936B60", Offset = "0x936B60", VA = "0x936B60", Slot = "59")]
		protected virtual void DoSelectionButtonPressed(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001ECD")]
		[Address(RVA = "0x936C00", Offset = "0x936C00", VA = "0x936C00", Slot = "60")]
		protected virtual void DoSelectionButtonReleased(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001ECE")]
		[Address(RVA = "0x936CA0", Offset = "0x936CA0", VA = "0x936CA0", Slot = "61")]
		protected virtual void SelectionButtonAction(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001ECF")]
		[Address(RVA = "0x936CB8", Offset = "0x936CB8", VA = "0x936CB8", Slot = "62")]
		public virtual void ExecuteSelectionButtonAction()
		{
		}

		[Token(Token = "0x6001ED0")]
		[Address(RVA = "0x93703C", Offset = "0x93703C", VA = "0x93703C", Slot = "63")]
		protected virtual bool CanResetActivationState(bool givenState)
		{
			return default(bool);
		}

		[Token(Token = "0x6001ED1")]
		[Address(RVA = "0x93706C", Offset = "0x93706C", VA = "0x93706C", Slot = "64")]
		protected virtual void ManageActivationState(bool state)
		{
		}

		[Token(Token = "0x6001ED2")]
		[Address(RVA = "0x9370C4", Offset = "0x9370C4", VA = "0x9370C4", Slot = "65")]
		protected virtual bool PointerActivatesUseAction(VRTK_InteractableObject givenInteractableObject)
		{
			return default(bool);
		}

		[Token(Token = "0x6001ED3")]
		[Address(RVA = "0x9371C0", Offset = "0x9371C0", VA = "0x9371C0", Slot = "66")]
		protected virtual void StartUseAction(Transform target)
		{
		}

		[Token(Token = "0x6001ED4")]
		[Address(RVA = "0x93739C", Offset = "0x93739C", VA = "0x93739C", Slot = "67")]
		protected virtual void StopUseAction()
		{
		}

		[Token(Token = "0x6001ED5")]
		[Address(RVA = "0x9374C0", Offset = "0x9374C0", VA = "0x9374C0", Slot = "68")]
		protected virtual void AttemptUseOnSet(Transform target)
		{
		}

		[Token(Token = "0x6001ED6")]
		[Address(RVA = "0x9376A4", Offset = "0x9376A4", VA = "0x9376A4", Slot = "69")]
		protected virtual void SetHoverSelectionTimer(Collider collider)
		{
		}

		[Token(Token = "0x6001ED7")]
		[Address(RVA = "0x937754", Offset = "0x937754", VA = "0x937754", Slot = "70")]
		protected virtual void ResetHoverSelectionTimer(Collider collider)
		{
		}

		[Token(Token = "0x6001ED8")]
		[Address(RVA = "0x9377E8", Offset = "0x9377E8", VA = "0x9377E8", Slot = "71")]
		protected virtual void CheckHoverSelect()
		{
		}

		[Token(Token = "0x6001ED9")]
		[Address(RVA = "0x93785C", Offset = "0x93785C", VA = "0x93785C", Slot = "72")]
		protected virtual DestinationMarkerEventArgs GetStateEventPayload()
		{
			return default(DestinationMarkerEventArgs);
		}

		[Token(Token = "0x6001EDA")]
		[Address(RVA = "0x937A04", Offset = "0x937A04", VA = "0x937A04")]
		public VRTK_Pointer()
		{
		}
	}
	[Token(Token = "0x2000401")]
	public struct BodyPhysicsEventArgs
	{
		[Token(Token = "0x4001D8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public GameObject target;

		[Token(Token = "0x4001D8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Collider collider;
	}
	[Token(Token = "0x2000402")]
	public delegate void BodyPhysicsEventHandler(object sender, BodyPhysicsEventArgs e);
	[Token(Token = "0x2000403")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x64027C", Offset = "0x64027C")]
	public class VRTK_BodyPhysics : VRTK_DestinationMarker
	{
		[Token(Token = "0x200081D")]
		public enum FallingRestrictors
		{
			[Token(Token = "0x4002AFD")]
			NoRestriction,
			[Token(Token = "0x4002AFE")]
			LeftController,
			[Token(Token = "0x4002AFF")]
			RightController,
			[Token(Token = "0x4002B00")]
			EitherController,
			[Token(Token = "0x4002B01")]
			BothControllers,
			[Token(Token = "0x4002B02")]
			AlwaysRestrict
		}

		[Token(Token = "0x200081E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x645EA8", Offset = "0x645EA8")]
		private sealed class <RestoreCollisions>d__180 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002B03")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002B04")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002B05")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GameObject obj;

			[Token(Token = "0x4002B06")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public VRTK_BodyPhysics <>4__this;

			[Token(Token = "0x17000349")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6003307")]
				[Address(RVA = "0xB01640", Offset = "0xB01640", VA = "0xB01640", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700034A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003309")]
				[Address(RVA = "0xB016B0", Offset = "0xB016B0", VA = "0xB016B0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003304")]
			[Address(RVA = "0xAFFC68", Offset = "0xAFFC68", VA = "0xAFFC68")]
			[DebuggerHidden]
			public <RestoreCollisions>d__180(int <>1__state)
			{
			}

			[Token(Token = "0x6003305")]
			[Address(RVA = "0xB0149C", Offset = "0xB0149C", VA = "0xB0149C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003306")]
			[Address(RVA = "0xB014A0", Offset = "0xB014A0", VA = "0xB014A0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003308")]
			[Address(RVA = "0xB01648", Offset = "0xB01648", VA = "0xB01648", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001D8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x65BEA8", Offset = "0x65BEA8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65BEA8", Offset = "0x65BEA8")]
		public bool enableBodyCollisions;

		[Token(Token = "0x4001D8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65BF08", Offset = "0x65BF08")]
		public bool ignoreGrabbedCollisions;

		[Token(Token = "0x4001D8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65BF40", Offset = "0x65BF40")]
		public GameObject[] ignoreCollisionsWith;

		[Token(Token = "0x4001D90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65BF78", Offset = "0x65BF78")]
		public float headsetYOffset;

		[Token(Token = "0x4001D91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65BFB0", Offset = "0x65BFB0")]
		public float movementThreshold;

		[Token(Token = "0x4001D92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65BFE8", Offset = "0x65BFE8")]
		public float playAreaMovementThreshold;

		[Token(Token = "0x4001D93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65C020", Offset = "0x65C020")]
		public int standingHistorySamples;

		[Token(Token = "0x4001D94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65C058", Offset = "0x65C058")]
		public float leanYThreshold;

		[Token(Token = "0x4001D95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x65C090", Offset = "0x65C090")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65C090", Offset = "0x65C090")]
		public float stepUpYOffset;

		[Token(Token = "0x4001D96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65C0F0", Offset = "0x65C0F0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x65C0F0", Offset = "0x65C0F0")]
		public float stepThicknessMultiplier;

		[Token(Token = "0x4001D97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65C14C", Offset = "0x65C14C")]
		public float stepDropThreshold;

		[Token(Token = "0x4001D98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x65C184", Offset = "0x65C184")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65C184", Offset = "0x65C184")]
		public VRTK_CustomRaycast customRaycast;

		[Token(Token = "0x4001D99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65C1E4", Offset = "0x65C1E4")]
		public FallingRestrictors fallRestriction;

		[Token(Token = "0x4001D9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65C21C", Offset = "0x65C21C")]
		public float gravityFallYThreshold;

		[Token(Token = "0x4001D9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65C254", Offset = "0x65C254")]
		public float blinkYThreshold;

		[Token(Token = "0x4001D9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65C28C", Offset = "0x65C28C")]
		public float floorHeightTolerance;

		[Token(Token = "0x4001D9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x65C2C4", Offset = "0x65C2C4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65C2C4", Offset = "0x65C2C4")]
		public int fallCheckPrecision;

		[Token(Token = "0x4001D9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x65C318", Offset = "0x65C318")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65C318", Offset = "0x65C318")]
		public VRTK_BasicTeleport teleporter;

		[Token(Token = "0x4001D9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65C378", Offset = "0x65C378")]
		public Rigidbody customPlayAreaRigidbody;

		[Token(Token = "0x4001DA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65C3B0", Offset = "0x65C3B0")]
		public GameObject customBodyColliderContainer;

		[Token(Token = "0x4001DA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65C3E8", Offset = "0x65C3E8")]
		public GameObject customFootColliderContainer;

		[Token(Token = "0x4001DAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		protected Transform playArea;

		[Token(Token = "0x4001DAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		protected Transform headset;

		[Token(Token = "0x4001DAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		protected Rigidbody bodyRigidbody;

		[Token(Token = "0x4001DAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		protected GameObject bodyColliderContainer;

		[Token(Token = "0x4001DB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		protected GameObject footColliderContainer;

		[Token(Token = "0x4001DB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		protected CapsuleCollider bodyCollider;

		[Token(Token = "0x4001DB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		protected CapsuleCollider footCollider;

		[Token(Token = "0x4001DB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		protected VRTK_CollisionTracker collisionTracker;

		[Token(Token = "0x4001DB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		protected bool currentBodyCollisionsSetting;

		[Token(Token = "0x4001DB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		protected GameObject currentCollidingObject;

		[Token(Token = "0x4001DB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		protected GameObject currentValidFloorObject;

		[Token(Token = "0x4001DB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		protected float lastFrameFloorY;

		[Token(Token = "0x4001DB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
		protected float hitFloorYDelta;

		[Token(Token = "0x4001DB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		protected bool initialFloorDrop;

		[Token(Token = "0x4001DBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x189")]
		protected bool resetPhysicsAfterTeleport;

		[Token(Token = "0x4001DBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18A")]
		protected bool storedCurrentPhysics;

		[Token(Token = "0x4001DBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18B")]
		protected bool retogglePhysicsOnCanFall;

		[Token(Token = "0x4001DBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
		protected bool storedRetogglePhysics;

		[Token(Token = "0x4001DBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		protected Vector3 lastPlayAreaPosition;

		[Token(Token = "0x4001DBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19C")]
		protected Vector2 currentStandingPosition;

		[Token(Token = "0x4001DC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		protected List<Vector2> standingPositionHistory;

		[Token(Token = "0x4001DC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		protected float playAreaHeightAdjustment;

		[Token(Token = "0x4001DC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B4")]
		protected float bodyMass;

		[Token(Token = "0x4001DC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		protected float bodyRadius;

		[Token(Token = "0x4001DC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1BC")]
		protected float leanForwardLengthAddition;

		[Token(Token = "0x4001DC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		protected float playAreaPositionThreshold;

		[Token(Token = "0x4001DC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C4")]
		protected float gravityPush;

		[Token(Token = "0x4001DC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		protected int decimalPrecision;

		[Token(Token = "0x4001DC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1CC")]
		protected bool isFalling;

		[Token(Token = "0x4001DC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1CD")]
		protected bool isMoving;

		[Token(Token = "0x4001DCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1CE")]
		protected bool isLeaning;

		[Token(Token = "0x4001DCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1CF")]
		protected bool isMovingSliding;

		[Token(Token = "0x4001DCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		protected bool onGround;

		[Token(Token = "0x4001DCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D1")]
		protected bool preventSnapToFloor;

		[Token(Token = "0x4001DCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D2")]
		protected bool generateRigidbody;

		[Token(Token = "0x4001DCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D4")]
		protected Vector3 playAreaVelocity;

		[Token(Token = "0x4001DD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		protected string footColliderContainerNameCheck;

		[Token(Token = "0x4001DD1")]
		protected const string BODY_COLLIDER_CONTAINER_NAME = "BodyColliderContainer";

		[Token(Token = "0x4001DD2")]
		protected const string FOOT_COLLIDER_CONTAINER_NAME = "FootColliderContainer";

		[Token(Token = "0x4001DD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		protected bool enableBodyCollisionsStartingValue;

		[Token(Token = "0x4001DD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1EC")]
		protected float fallMinTime;

		[Token(Token = "0x4001DD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		protected HashSet<GameObject> ignoreCollisionsOnGameObjects;

		[Token(Token = "0x4001DD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		protected Transform cachedGrabbedObjectTransform;

		[Token(Token = "0x4001DD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		protected VRTK_InteractableObject cachedGrabbedObject;

		[Token(Token = "0x4001DD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		protected LayerMask defaultIgnoreLayer;

		[Token(Token = "0x4001DD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		protected Coroutine restoreCollisionsRoutine;

		[Token(Token = "0x4001DDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
		protected bool drawDebugGizmo;

		[Token(Token = "0x14000117")]
		public event BodyPhysicsEventHandler StartFalling
		{
			[Token(Token = "0x6001EDF")]
			[Address(RVA = "0xAF92B0", Offset = "0xAF92B0", VA = "0xAF92B0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66D4D4", Offset = "0x66D4D4")]
			add
			{
			}
			[Token(Token = "0x6001EE0")]
			[Address(RVA = "0xAF939C", Offset = "0xAF939C", VA = "0xAF939C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66D4E4", Offset = "0x66D4E4")]
			remove
			{
			}
		}

		[Token(Token = "0x14000118")]
		public event BodyPhysicsEventHandler StopFalling
		{
			[Token(Token = "0x6001EE1")]
			[Address(RVA = "0xAF9488", Offset = "0xAF9488", VA = "0xAF9488")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66D4F4", Offset = "0x66D4F4")]
			add
			{
			}
			[Token(Token = "0x6001EE2")]
			[Address(RVA = "0xAF9574", Offset = "0xAF9574", VA = "0xAF9574")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66D504", Offset = "0x66D504")]
			remove
			{
			}
		}

		[Token(Token = "0x14000119")]
		public event BodyPhysicsEventHandler StartMoving
		{
			[Token(Token = "0x6001EE3")]
			[Address(RVA = "0xAF9660", Offset = "0xAF9660", VA = "0xAF9660")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66D514", Offset = "0x66D514")]
			add
			{
			}
			[Token(Token = "0x6001EE4")]
			[Address(RVA = "0xAF974C", Offset = "0xAF974C", VA = "0xAF974C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66D524", Offset = "0x66D524")]
			remove
			{
			}
		}

		[Token(Token = "0x1400011A")]
		public event BodyPhysicsEventHandler StopMoving
		{
			[Token(Token = "0x6001EE5")]
			[Address(RVA = "0xAF9838", Offset = "0xAF9838", VA = "0xAF9838")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66D534", Offset = "0x66D534")]
			add
			{
			}
			[Token(Token = "0x6001EE6")]
			[Address(RVA = "0xAF9924", Offset = "0xAF9924", VA = "0xAF9924")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66D544", Offset = "0x66D544")]
			remove
			{
			}
		}

		[Token(Token = "0x1400011B")]
		public event BodyPhysicsEventHandler StartColliding
		{
			[Token(Token = "0x6001EE7")]
			[Address(RVA = "0xAF9A10", Offset = "0xAF9A10", VA = "0xAF9A10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66D554", Offset = "0x66D554")]
			add
			{
			}
			[Token(Token = "0x6001EE8")]
			[Address(RVA = "0xAF9AFC", Offset = "0xAF9AFC", VA = "0xAF9AFC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66D564", Offset = "0x66D564")]
			remove
			{
			}
		}

		[Token(Token = "0x1400011C")]
		public event BodyPhysicsEventHandler StopColliding
		{
			[Token(Token = "0x6001EE9")]
			[Address(RVA = "0xAF9BE8", Offset = "0xAF9BE8", VA = "0xAF9BE8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66D574", Offset = "0x66D574")]
			add
			{
			}
			[Token(Token = "0x6001EEA")]
			[Address(RVA = "0xAF9CD8", Offset = "0xAF9CD8", VA = "0xAF9CD8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66D584", Offset = "0x66D584")]
			remove
			{
			}
		}

		[Token(Token = "0x1400011D")]
		public event BodyPhysicsEventHandler StartLeaning
		{
			[Token(Token = "0x6001EEB")]
			[Address(RVA = "0xAF9DC8", Offset = "0xAF9DC8", VA = "0xAF9DC8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66D594", Offset = "0x66D594")]
			add
			{
			}
			[Token(Token = "0x6001EEC")]
			[Address(RVA = "0xAF9EB8", Offset = "0xAF9EB8", VA = "0xAF9EB8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66D5A4", Offset = "0x66D5A4")]
			remove
			{
			}
		}

		[Token(Token = "0x1400011E")]
		public event BodyPhysicsEventHandler StopLeaning
		{
			[Token(Token = "0x6001EED")]
			[Address(RVA = "0xAF9FA8", Offset = "0xAF9FA8", VA = "0xAF9FA8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66D5B4", Offset = "0x66D5B4")]
			add
			{
			}
			[Token(Token = "0x6001EEE")]
			[Address(RVA = "0xAFA098", Offset = "0xAFA098", VA = "0xAFA098")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66D5C4", Offset = "0x66D5C4")]
			remove
			{
			}
		}

		[Token(Token = "0x1400011F")]
		public event BodyPhysicsEventHandler StartTouchingGround
		{
			[Token(Token = "0x6001EEF")]
			[Address(RVA = "0xAFA188", Offset = "0xAFA188", VA = "0xAFA188")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66D5D4", Offset = "0x66D5D4")]
			add
			{
			}
			[Token(Token = "0x6001EF0")]
			[Address(RVA = "0xAFA278", Offset = "0xAFA278", VA = "0xAFA278")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66D5E4", Offset = "0x66D5E4")]
			remove
			{
			}
		}

		[Token(Token = "0x14000120")]
		public event BodyPhysicsEventHandler StopTouchingGround
		{
			[Token(Token = "0x6001EF1")]
			[Address(RVA = "0xAFA368", Offset = "0xAFA368", VA = "0xAFA368")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66D5F4", Offset = "0x66D5F4")]
			add
			{
			}
			[Token(Token = "0x6001EF2")]
			[Address(RVA = "0xAFA458", Offset = "0xAFA458", VA = "0xAFA458")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66D604", Offset = "0x66D604")]
			remove
			{
			}
		}

		[Token(Token = "0x6001EF3")]
		[Address(RVA = "0xAFA548", Offset = "0xAFA548", VA = "0xAFA548", Slot = "15")]
		public virtual bool ArePhysicsEnabled()
		{
			return default(bool);
		}

		[Token(Token = "0x6001EF4")]
		[Address(RVA = "0xAFA5EC", Offset = "0xAFA5EC", VA = "0xAFA5EC", Slot = "16")]
		public virtual void NotifySliding(bool sliding)
		{
		}

		[Token(Token = "0x6001EF5")]
		[Address(RVA = "0xAFA5F8", Offset = "0xAFA5F8", VA = "0xAFA5F8", Slot = "17")]
		public virtual void ApplyBodyVelocity(Vector3 velocity, bool forcePhysicsOn = false, bool applyMomentum = false)
		{
		}

		[Token(Token = "0x6001EF6")]
		[Address(RVA = "0xAFA77C", Offset = "0xAFA77C", VA = "0xAFA77C", Slot = "18")]
		public virtual void ToggleOnGround(bool state)
		{
		}

		[Token(Token = "0x6001EF7")]
		[Address(RVA = "0xAFA810", Offset = "0xAFA810", VA = "0xAFA810", Slot = "19")]
		public virtual void TogglePreventSnapToFloor(bool state)
		{
		}

		[Token(Token = "0x6001EF8")]
		[Address(RVA = "0xAFA81C", Offset = "0xAFA81C", VA = "0xAFA81C", Slot = "20")]
		public virtual void ForceSnapToFloor()
		{
		}

		[Token(Token = "0x6001EF9")]
		[Address(RVA = "0xAFA870", Offset = "0xAFA870", VA = "0xAFA870", Slot = "21")]
		public virtual bool IsFalling()
		{
			return default(bool);
		}

		[Token(Token = "0x6001EFA")]
		[Address(RVA = "0xAFA878", Offset = "0xAFA878", VA = "0xAFA878", Slot = "22")]
		public virtual bool IsMoving()
		{
			return default(bool);
		}

		[Token(Token = "0x6001EFB")]
		[Address(RVA = "0xAFA880", Offset = "0xAFA880", VA = "0xAFA880", Slot = "23")]
		public virtual bool IsLeaning()
		{
			return default(bool);
		}

		[Token(Token = "0x6001EFC")]
		[Address(RVA = "0xAFA888", Offset = "0xAFA888", VA = "0xAFA888", Slot = "24")]
		public virtual bool OnGround()
		{
			return default(bool);
		}

		[Token(Token = "0x6001EFD")]
		[Address(RVA = "0xAFA890", Offset = "0xAFA890", VA = "0xAFA890", Slot = "25")]
		public virtual Vector3 GetVelocity()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001EFE")]
		[Address(RVA = "0xAFA950", Offset = "0xAFA950", VA = "0xAFA950", Slot = "26")]
		public virtual Vector3 GetAngularVelocity()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001EFF")]
		[Address(RVA = "0xAFAA10", Offset = "0xAFAA10", VA = "0xAFAA10", Slot = "27")]
		public virtual void ResetVelocities()
		{
		}

		[Token(Token = "0x6001F00")]
		[Address(RVA = "0xAFAAF4", Offset = "0xAFAAF4", VA = "0xAFAAF4", Slot = "28")]
		public virtual void ResetFalling()
		{
		}

		[Token(Token = "0x6001F01")]
		[Address(RVA = "0xAFAB04", Offset = "0xAFAB04", VA = "0xAFAB04", Slot = "29")]
		public virtual GameObject GetBodyColliderContainer()
		{
			return null;
		}

		[Token(Token = "0x6001F02")]
		[Address(RVA = "0xAFAB0C", Offset = "0xAFAB0C", VA = "0xAFAB0C", Slot = "30")]
		public virtual GameObject GetFootColliderContainer()
		{
			return null;
		}

		[Token(Token = "0x6001F03")]
		[Address(RVA = "0xAFAB14", Offset = "0xAFAB14", VA = "0xAFAB14", Slot = "31")]
		public virtual GameObject GetCurrentCollidingObject()
		{
			return null;
		}

		[Token(Token = "0x6001F04")]
		[Address(RVA = "0xAFAB1C", Offset = "0xAFAB1C", VA = "0xAFAB1C", Slot = "32")]
		public virtual void ResetIgnoredCollisions()
		{
		}

		[Token(Token = "0x6001F05")]
		[Address(RVA = "0xAFAD60", Offset = "0xAFAD60", VA = "0xAFAD60", Slot = "33")]
		public virtual bool SweepCollision(Vector3 direction, float maxDistance)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F06")]
		[Address(RVA = "0xAFB19C", Offset = "0xAFB19C", VA = "0xAFB19C", Slot = "34")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6001F07")]
		[Address(RVA = "0xAFB204", Offset = "0xAFB204", VA = "0xAFB204", Slot = "12")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6001F08")]
		[Address(RVA = "0xAFB37C", Offset = "0xAFB37C", VA = "0xAFB37C", Slot = "13")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x6001F09")]
		[Address(RVA = "0xAFB3F0", Offset = "0xAFB3F0", VA = "0xAFB3F0", Slot = "35")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x6001F0A")]
		[Address(RVA = "0xAFB458", Offset = "0xAFB458", VA = "0xAFB458", Slot = "36")]
		protected virtual void FixedUpdate()
		{
		}

		[Token(Token = "0x6001F0B")]
		[Address(RVA = "0xAFB574", Offset = "0xAFB574", VA = "0xAFB574", Slot = "37")]
		protected virtual void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x6001F0C")]
		[Address(RVA = "0xAFB680", Offset = "0xAFB680", VA = "0xAFB680", Slot = "38")]
		protected virtual void OnTriggerEnter(Collider collider)
		{
		}

		[Token(Token = "0x6001F0D")]
		[Address(RVA = "0xAFB73C", Offset = "0xAFB73C", VA = "0xAFB73C", Slot = "39")]
		protected virtual void OnCollisionExit(Collision collision)
		{
		}

		[Token(Token = "0x6001F0E")]
		[Address(RVA = "0xAFB7F8", Offset = "0xAFB7F8", VA = "0xAFB7F8", Slot = "40")]
		protected virtual void OnTriggerExit(Collider collider)
		{
		}

		[Token(Token = "0x6001F0F")]
		[Address(RVA = "0xAFB890", Offset = "0xAFB890", VA = "0xAFB890", Slot = "41")]
		protected virtual void OnDrawGizmos()
		{
		}

		[Token(Token = "0x6001F10")]
		[Address(RVA = "0xAFBA38", Offset = "0xAFBA38", VA = "0xAFBA38", Slot = "42")]
		protected virtual bool CheckValidCollision(GameObject checkObject)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F11")]
		[Address(RVA = "0xAFBB44", Offset = "0xAFBB44", VA = "0xAFBB44", Slot = "43")]
		protected virtual bool CheckExistingCollision(GameObject checkObject)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F12")]
		[Address(RVA = "0xAFBC04", Offset = "0xAFBC04", VA = "0xAFBC04", Slot = "44")]
		protected virtual void SetupPlayArea()
		{
		}

		[Token(Token = "0x6001F13")]
		[Address(RVA = "0xAFBD94", Offset = "0xAFBD94", VA = "0xAFBD94", Slot = "45")]
		protected virtual void SetupHeadset()
		{
		}

		[Token(Token = "0x6001F14")]
		[Address(RVA = "0xAFBEA0", Offset = "0xAFBEA0", VA = "0xAFBEA0", Slot = "46")]
		protected virtual void ManageCollisionListeners(bool state)
		{
		}

		[Token(Token = "0x6001F15")]
		[Address(RVA = "0xAFC86C", Offset = "0xAFC86C", VA = "0xAFC86C", Slot = "47")]
		protected virtual void CollisionTracker_TriggerExit(object sender, CollisionTrackerEventArgs e)
		{
		}

		[Token(Token = "0x6001F16")]
		[Address(RVA = "0xAFC880", Offset = "0xAFC880", VA = "0xAFC880", Slot = "48")]
		protected virtual void CollisionTracker_TriggerEnter(object sender, CollisionTrackerEventArgs e)
		{
		}

		[Token(Token = "0x6001F17")]
		[Address(RVA = "0xAFC894", Offset = "0xAFC894", VA = "0xAFC894", Slot = "49")]
		protected virtual void CollisionTracker_CollisionExit(object sender, CollisionTrackerEventArgs e)
		{
		}

		[Token(Token = "0x6001F18")]
		[Address(RVA = "0xAFC8A8", Offset = "0xAFC8A8", VA = "0xAFC8A8", Slot = "50")]
		protected virtual void CollisionTracker_CollisionEnter(object sender, CollisionTrackerEventArgs e)
		{
		}

		[Token(Token = "0x6001F19")]
		[Address(RVA = "0xAFC8BC", Offset = "0xAFC8BC", VA = "0xAFC8BC", Slot = "51")]
		protected virtual void OnStartFalling(BodyPhysicsEventArgs e)
		{
		}

		[Token(Token = "0x6001F1A")]
		[Address(RVA = "0xAFC8E8", Offset = "0xAFC8E8", VA = "0xAFC8E8", Slot = "52")]
		protected virtual void OnStopFalling(BodyPhysicsEventArgs e)
		{
		}

		[Token(Token = "0x6001F1B")]
		[Address(RVA = "0xAFC914", Offset = "0xAFC914", VA = "0xAFC914", Slot = "53")]
		protected virtual void OnStartMoving(BodyPhysicsEventArgs e)
		{
		}

		[Token(Token = "0x6001F1C")]
		[Address(RVA = "0xAFC940", Offset = "0xAFC940", VA = "0xAFC940", Slot = "54")]
		protected virtual void OnStopMoving(BodyPhysicsEventArgs e)
		{
		}

		[Token(Token = "0x6001F1D")]
		[Address(RVA = "0xAFC96C", Offset = "0xAFC96C", VA = "0xAFC96C", Slot = "55")]
		protected virtual void OnStartColliding(BodyPhysicsEventArgs e)
		{
		}

		[Token(Token = "0x6001F1E")]
		[Address(RVA = "0xAFC998", Offset = "0xAFC998", VA = "0xAFC998", Slot = "56")]
		protected virtual void OnStopColliding(BodyPhysicsEventArgs e)
		{
		}

		[Token(Token = "0x6001F1F")]
		[Address(RVA = "0xAFC9C4", Offset = "0xAFC9C4", VA = "0xAFC9C4", Slot = "57")]
		protected virtual void OnStartLeaning(BodyPhysicsEventArgs e)
		{
		}

		[Token(Token = "0x6001F20")]
		[Address(RVA = "0xAFC9F0", Offset = "0xAFC9F0", VA = "0xAFC9F0", Slot = "58")]
		protected virtual void OnStopLeaning(BodyPhysicsEventArgs e)
		{
		}

		[Token(Token = "0x6001F21")]
		[Address(RVA = "0xAFCA1C", Offset = "0xAFCA1C", VA = "0xAFCA1C", Slot = "59")]
		protected virtual void OnStartTouchingGround(BodyPhysicsEventArgs e)
		{
		}

		[Token(Token = "0x6001F22")]
		[Address(RVA = "0xAFCA48", Offset = "0xAFCA48", VA = "0xAFCA48", Slot = "60")]
		protected virtual void OnStopTouchingGround(BodyPhysicsEventArgs e)
		{
		}

		[Token(Token = "0x6001F23")]
		[Address(RVA = "0xAFCA74", Offset = "0xAFCA74", VA = "0xAFCA74", Slot = "61")]
		protected virtual BodyPhysicsEventArgs SetBodyPhysicsEvent(GameObject target, Collider collider)
		{
			return default(BodyPhysicsEventArgs);
		}

		[Token(Token = "0x6001F24")]
		[Address(RVA = "0xAFCA80", Offset = "0xAFCA80", VA = "0xAFCA80", Slot = "62")]
		protected virtual void CalculateVelocity()
		{
		}

		[Token(Token = "0x6001F25")]
		[Address(RVA = "0xAFCBE8", Offset = "0xAFCBE8", VA = "0xAFCBE8", Slot = "63")]
		protected virtual void TogglePhysics(bool state)
		{
		}

		[Token(Token = "0x6001F26")]
		[Address(RVA = "0xAFCC90", Offset = "0xAFCC90", VA = "0xAFCC90", Slot = "64")]
		protected virtual void ManageFalling()
		{
		}

		[Token(Token = "0x6001F27")]
		[Address(RVA = "0xAFCCE4", Offset = "0xAFCCE4", VA = "0xAFCCE4", Slot = "65")]
		protected virtual void CheckBodyCollisionsSetting()
		{
		}

		[Token(Token = "0x6001F28")]
		[Address(RVA = "0xAFCD20", Offset = "0xAFCD20", VA = "0xAFCD20", Slot = "66")]
		protected virtual void CheckFalling()
		{
		}

		[Token(Token = "0x6001F29")]
		[Address(RVA = "0xAFCDD0", Offset = "0xAFCDD0", VA = "0xAFCDD0", Slot = "67")]
		protected virtual void SetCurrentStandingPosition()
		{
		}

		[Token(Token = "0x6001F2A")]
		[Address(RVA = "0xAFCFA8", Offset = "0xAFCFA8", VA = "0xAFCFA8", Slot = "68")]
		protected virtual void SetIsMoving(Vector2 currentHeadsetPosition)
		{
		}

		[Token(Token = "0x6001F2B")]
		[Address(RVA = "0xAFD180", Offset = "0xAFD180", VA = "0xAFD180", Slot = "69")]
		protected virtual void CheckLean()
		{
		}

		[Token(Token = "0x6001F2C")]
		[Address(RVA = "0xAFD6C4", Offset = "0xAFD6C4", VA = "0xAFD6C4", Slot = "70")]
		protected virtual void CalculateLean(Vector3 startPosition, float forwardLength, float originalRayDistance)
		{
		}

		[Token(Token = "0x6001F2D")]
		[Address(RVA = "0xAFDA28", Offset = "0xAFDA28", VA = "0xAFDA28", Slot = "71")]
		protected virtual void UpdateStandingPosition(Vector2 currentHeadsetPosition)
		{
		}

		[Token(Token = "0x6001F2E")]
		[Address(RVA = "0xAFDC50", Offset = "0xAFDC50", VA = "0xAFDC50", Slot = "72")]
		protected virtual void CheckHeadsetMovement()
		{
		}

		[Token(Token = "0x6001F2F")]
		[Address(RVA = "0xAFDE28", Offset = "0xAFDE28", VA = "0xAFDE28", Slot = "73")]
		protected virtual void MovementChanged(bool movementState)
		{
		}

		[Token(Token = "0x6001F30")]
		[Address(RVA = "0xAFDE90", Offset = "0xAFDE90", VA = "0xAFDE90", Slot = "74")]
		protected virtual void EnableDropToFloor()
		{
		}

		[Token(Token = "0x6001F31")]
		[Address(RVA = "0xAFDFCC", Offset = "0xAFDFCC", VA = "0xAFDFCC", Slot = "75")]
		protected virtual void DisableDropToFloor()
		{
		}

		[Token(Token = "0x6001F32")]
		[Address(RVA = "0xAFE09C", Offset = "0xAFE09C", VA = "0xAFE09C", Slot = "76")]
		protected virtual void Teleported(object sender, DestinationMarkerEventArgs e)
		{
		}

		[Token(Token = "0x6001F33")]
		[Address(RVA = "0xAFE0F4", Offset = "0xAFE0F4", VA = "0xAFE0F4", Slot = "77")]
		protected virtual void EnableBodyPhysics()
		{
		}

		[Token(Token = "0x6001F34")]
		[Address(RVA = "0xAFE1BC", Offset = "0xAFE1BC", VA = "0xAFE1BC", Slot = "78")]
		protected virtual void DisableBodyPhysics()
		{
		}

		[Token(Token = "0x6001F35")]
		[Address(RVA = "0xAFE27C", Offset = "0xAFE27C", VA = "0xAFE27C", Slot = "79")]
		protected virtual void SetupIgnoredCollisions()
		{
		}

		[Token(Token = "0x6001F36")]
		[Address(RVA = "0xAFE450", Offset = "0xAFE450", VA = "0xAFE450", Slot = "80")]
		protected virtual void ManagePhysicsCollider(Collider collider, bool state)
		{
		}

		[Token(Token = "0x6001F37")]
		[Address(RVA = "0xAFE548", Offset = "0xAFE548", VA = "0xAFE548", Slot = "81")]
		protected virtual void CheckStepUpCollision(Collision collision)
		{
		}

		[Token(Token = "0x6001F38")]
		[Address(RVA = "0xAFE54C", Offset = "0xAFE54C", VA = "0xAFE54C", Slot = "82")]
		protected virtual GameObject CreateColliderContainer(string name, Transform parent)
		{
			return null;
		}

		[Token(Token = "0x6001F39")]
		[Address(RVA = "0xAFE834", Offset = "0xAFE834", VA = "0xAFE834", Slot = "83")]
		protected virtual GameObject InstantiateColliderContainer(GameObject objectToClone, string name, Transform parent)
		{
			return null;
		}

		[Token(Token = "0x6001F3A")]
		[Address(RVA = "0xAFE994", Offset = "0xAFE994", VA = "0xAFE994", Slot = "84")]
		protected virtual void GenerateRigidbody()
		{
		}

		[Token(Token = "0x6001F3B")]
		[Address(RVA = "0xAFEC9C", Offset = "0xAFEC9C", VA = "0xAFEC9C", Slot = "85")]
		protected virtual bool HasExistingRigidbody()
		{
			return default(bool);
		}

		[Token(Token = "0x6001F3C")]
		[Address(RVA = "0xAFED98", Offset = "0xAFED98", VA = "0xAFED98", Slot = "86")]
		protected virtual CapsuleCollider GenerateCapsuleCollider(GameObject parent, float setRadius)
		{
			return null;
		}

		[Token(Token = "0x6001F3D")]
		[Address(RVA = "0xAFEE80", Offset = "0xAFEE80", VA = "0xAFEE80", Slot = "87")]
		protected virtual void GenerateBodyCollider()
		{
		}

		[Token(Token = "0x6001F3E")]
		[Address(RVA = "0xAFF080", Offset = "0xAFF080", VA = "0xAFF080", Slot = "88")]
		protected virtual void GenerateFootCollider()
		{
		}

		[Token(Token = "0x6001F3F")]
		[Address(RVA = "0xAFF228", Offset = "0xAFF228", VA = "0xAFF228", Slot = "89")]
		protected virtual void CreateCollider()
		{
		}

		[Token(Token = "0x6001F40")]
		[Address(RVA = "0xAFF4D8", Offset = "0xAFF4D8", VA = "0xAFF4D8", Slot = "90")]
		protected virtual void DestroyCollider()
		{
		}

		[Token(Token = "0x6001F41")]
		[Address(RVA = "0xAFF5F0", Offset = "0xAFF5F0", VA = "0xAFF5F0", Slot = "91")]
		protected virtual void UpdateCollider()
		{
		}

		[Token(Token = "0x6001F42")]
		[Address(RVA = "0xAFF9AC", Offset = "0xAFF9AC", VA = "0xAFF9AC", Slot = "92")]
		protected virtual float CalculateStepUpYOffset()
		{
			return default(float);
		}

		[Token(Token = "0x6001F43")]
		[Address(RVA = "0xAFF9B8", Offset = "0xAFF9B8", VA = "0xAFF9B8", Slot = "93")]
		protected virtual void InitControllerListeners(GameObject mappedController, bool state)
		{
		}

		[Token(Token = "0x6001F44")]
		[Address(RVA = "0xAFFBD0", Offset = "0xAFFBD0", VA = "0xAFFBD0", Slot = "94")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x66D614", Offset = "0x66D614")]
		protected virtual IEnumerator RestoreCollisions(GameObject obj)
		{
			return null;
		}

		[Token(Token = "0x6001F45")]
		[Address(RVA = "0xAFFC94", Offset = "0xAFFC94", VA = "0xAFFC94", Slot = "95")]
		protected virtual void IgnoreCollisions(Collider[] colliders, bool state)
		{
		}

		[Token(Token = "0x6001F46")]
		[Address(RVA = "0xAFFE64", Offset = "0xAFFE64", VA = "0xAFFE64", Slot = "96")]
		protected virtual void OnGrabObject(object sender, ObjectInteractEventArgs e)
		{
		}

		[Token(Token = "0x6001F47")]
		[Address(RVA = "0xAFFF40", Offset = "0xAFFF40", VA = "0xAFFF40", Slot = "97")]
		protected virtual void OnUngrabObject(object sender, ObjectInteractEventArgs e)
		{
		}

		[Token(Token = "0x6001F48")]
		[Address(RVA = "0xAFFFF0", Offset = "0xAFFFF0", VA = "0xAFFFF0", Slot = "98")]
		protected virtual bool FloorIsGrabbedObject(RaycastHit collidedObj)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F49")]
		[Address(RVA = "0xB0014C", Offset = "0xB0014C", VA = "0xB0014C", Slot = "99")]
		protected virtual bool FloorHeightChanged(float currentY)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F4A")]
		[Address(RVA = "0xB001D0", Offset = "0xB001D0", VA = "0xB001D0", Slot = "100")]
		protected virtual void InvalidateFloorHeight()
		{
		}

		[Token(Token = "0x6001F4B")]
		[Address(RVA = "0xB001DC", Offset = "0xB001DC", VA = "0xB001DC", Slot = "101")]
		protected virtual bool ValidDrop(bool rayHit, RaycastHit rayCollidedWith, float floorY)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F4C")]
		[Address(RVA = "0xB00348", Offset = "0xB00348", VA = "0xB00348", Slot = "102")]
		protected virtual float ControllerHeightCheck(GameObject controllerObj)
		{
			return default(float);
		}

		[Token(Token = "0x6001F4D")]
		[Address(RVA = "0xB00504", Offset = "0xB00504", VA = "0xB00504", Slot = "103")]
		protected virtual bool ControllersStillOverPreviousFloor()
		{
			return default(bool);
		}

		[Token(Token = "0x6001F4E")]
		[Address(RVA = "0xB006F8", Offset = "0xB006F8", VA = "0xB006F8", Slot = "104")]
		protected virtual void SnapToNearestFloor()
		{
		}

		[Token(Token = "0x6001F4F")]
		[Address(RVA = "0xB00A60", Offset = "0xB00A60", VA = "0xB00A60", Slot = "105")]
		protected virtual bool PreventFall(float hitFloorY)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F50")]
		[Address(RVA = "0xB00AD0", Offset = "0xB00AD0", VA = "0xB00AD0", Slot = "106")]
		protected virtual void HandleFall(float hitFloorY, RaycastHit rayCollidedWith)
		{
		}

		[Token(Token = "0x6001F51")]
		[Address(RVA = "0xB00C98", Offset = "0xB00C98", VA = "0xB00C98", Slot = "107")]
		protected virtual void StartFall(GameObject targetFloor)
		{
		}

		[Token(Token = "0x6001F52")]
		[Address(RVA = "0xB00DE0", Offset = "0xB00DE0", VA = "0xB00DE0", Slot = "108")]
		protected virtual void StopFall()
		{
		}

		[Token(Token = "0x6001F53")]
		[Address(RVA = "0xB00EB4", Offset = "0xB00EB4", VA = "0xB00EB4", Slot = "109")]
		protected virtual void GravityFall(RaycastHit rayCollidedWith)
		{
		}

		[Token(Token = "0x6001F54")]
		[Address(RVA = "0xB00F94", Offset = "0xB00F94", VA = "0xB00F94", Slot = "110")]
		protected virtual void TeleportFall(float floorY, RaycastHit rayCollidedWith)
		{
		}

		[Token(Token = "0x6001F55")]
		[Address(RVA = "0xB01204", Offset = "0xB01204", VA = "0xB01204", Slot = "111")]
		protected virtual void ApplyBodyMomentum(bool applyMomentum = false)
		{
		}

		[Token(Token = "0x6001F56")]
		[Address(RVA = "0xB01328", Offset = "0xB01328", VA = "0xB01328")]
		public VRTK_BodyPhysics()
		{
		}
	}
	[Token(Token = "0x2000404")]
	public struct HeadsetCollisionEventArgs
	{
		[Token(Token = "0x4001DDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Collider collider;

		[Token(Token = "0x4001DDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Transform currentTransform;
	}
	[Token(Token = "0x2000405")]
	public delegate void HeadsetCollisionEventHandler(object sender, HeadsetCollisionEventArgs e);
	[Token(Token = "0x2000406")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x6402B4", Offset = "0x6402B4")]
	public class VRTK_HeadsetCollision : MonoBehaviour
	{
		[Token(Token = "0x4001DDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65C4C0", Offset = "0x65C4C0")]
		public bool ignoreTriggerColliders;

		[Token(Token = "0x4001DDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65C4F8", Offset = "0x65C4F8")]
		public float colliderRadius;

		[Token(Token = "0x4001DDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65C530", Offset = "0x65C530")]
		public VRTK_PolicyList targetListPolicy;

		[Token(Token = "0x4001DE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		public bool headsetColliding;

		[Token(Token = "0x4001DE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		public Collider collidingWith;

		[Token(Token = "0x4001DE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected Transform headset;

		[Token(Token = "0x4001DE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected VRTK_HeadsetCollider headsetColliderScript;

		[Token(Token = "0x4001DE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		protected GameObject headsetColliderContainer;

		[Token(Token = "0x4001DE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		protected bool generateCollider;

		[Token(Token = "0x4001DE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		protected bool generateRigidbody;

		[Token(Token = "0x14000121")]
		public event HeadsetCollisionEventHandler HeadsetCollisionDetect
		{
			[Token(Token = "0x6001F5B")]
			[Address(RVA = "0xA34B1C", Offset = "0xA34B1C", VA = "0xA34B1C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66D678", Offset = "0x66D678")]
			add
			{
			}
			[Token(Token = "0x6001F5C")]
			[Address(RVA = "0xA34C08", Offset = "0xA34C08", VA = "0xA34C08")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66D688", Offset = "0x66D688")]
			remove
			{
			}
		}

		[Token(Token = "0x14000122")]
		public event HeadsetCollisionEventHandler HeadsetCollisionEnded
		{
			[Token(Token = "0x6001F5D")]
			[Address(RVA = "0xA34CF4", Offset = "0xA34CF4", VA = "0xA34CF4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66D698", Offset = "0x66D698")]
			add
			{
			}
			[Token(Token = "0x6001F5E")]
			[Address(RVA = "0xA34DE0", Offset = "0xA34DE0", VA = "0xA34DE0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66D6A8", Offset = "0x66D6A8")]
			remove
			{
			}
		}

		[Token(Token = "0x6001F5F")]
		[Address(RVA = "0xA34ECC", Offset = "0xA34ECC", VA = "0xA34ECC", Slot = "4")]
		public virtual void OnHeadsetCollisionDetect(HeadsetCollisionEventArgs e)
		{
		}

		[Token(Token = "0x6001F60")]
		[Address(RVA = "0xA34EF8", Offset = "0xA34EF8", VA = "0xA34EF8", Slot = "5")]
		public virtual void OnHeadsetCollisionEnded(HeadsetCollisionEventArgs e)
		{
		}

		[Token(Token = "0x6001F61")]
		[Address(RVA = "0xA34F24", Offset = "0xA34F24", VA = "0xA34F24", Slot = "6")]
		public virtual bool IsColliding()
		{
			return default(bool);
		}

		[Token(Token = "0x6001F62")]
		[Address(RVA = "0xA34F2C", Offset = "0xA34F2C", VA = "0xA34F2C", Slot = "7")]
		public virtual GameObject GetHeadsetColliderContainer()
		{
			return null;
		}

		[Token(Token = "0x6001F63")]
		[Address(RVA = "0xA34F34", Offset = "0xA34F34", VA = "0xA34F34", Slot = "8")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6001F64")]
		[Address(RVA = "0xA34F9C", Offset = "0xA34F9C", VA = "0xA34F9C", Slot = "9")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6001F65")]
		[Address(RVA = "0xA350B0", Offset = "0xA350B0", VA = "0xA350B0", Slot = "10")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x6001F66")]
		[Address(RVA = "0xA351A8", Offset = "0xA351A8", VA = "0xA351A8", Slot = "11")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x6001F67")]
		[Address(RVA = "0xA35210", Offset = "0xA35210", VA = "0xA35210", Slot = "12")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x6001F68")]
		[Address(RVA = "0xA3544C", Offset = "0xA3544C", VA = "0xA3544C", Slot = "13")]
		protected virtual void CreateHeadsetColliderContainer()
		{
		}

		[Token(Token = "0x6001F69")]
		[Address(RVA = "0xA35718", Offset = "0xA35718", VA = "0xA35718", Slot = "14")]
		protected virtual void SetupHeadset()
		{
		}

		[Token(Token = "0x6001F6A")]
		[Address(RVA = "0xA35A68", Offset = "0xA35A68", VA = "0xA35A68", Slot = "15")]
		protected virtual void TearDownHeadset()
		{
		}

		[Token(Token = "0x6001F6B")]
		[Address(RVA = "0xA35C64", Offset = "0xA35C64", VA = "0xA35C64")]
		public VRTK_HeadsetCollision()
		{
		}
	}
	[Token(Token = "0x2000407")]
	public class VRTK_HeadsetCollider : MonoBehaviour
	{
		[Token(Token = "0x4001DE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected VRTK_HeadsetCollision parent;

		[Token(Token = "0x4001DEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected VRTK_PolicyList targetListPolicy;

		[Token(Token = "0x6001F6C")]
		[Address(RVA = "0xA344C4", Offset = "0xA344C4", VA = "0xA344C4", Slot = "4")]
		public virtual void SetParent(GameObject setParent)
		{
		}

		[Token(Token = "0x6001F6D")]
		[Address(RVA = "0xA34534", Offset = "0xA34534", VA = "0xA34534", Slot = "5")]
		public virtual void SetIgnoreTarget([Optional] VRTK_PolicyList list)
		{
		}

		[Token(Token = "0x6001F6E")]
		[Address(RVA = "0xA3453C", Offset = "0xA3453C", VA = "0xA3453C", Slot = "6")]
		public virtual void EndCollision(Collider collider)
		{
		}

		[Token(Token = "0x6001F6F")]
		[Address(RVA = "0xA34698", Offset = "0xA34698", VA = "0xA34698", Slot = "7")]
		protected virtual void OnTriggerStay(Collider collider)
		{
		}

		[Token(Token = "0x6001F70")]
		[Address(RVA = "0xA3486C", Offset = "0xA3486C", VA = "0xA3486C", Slot = "8")]
		protected virtual void OnTriggerExit(Collider collider)
		{
		}

		[Token(Token = "0x6001F71")]
		[Address(RVA = "0xA34940", Offset = "0xA34940", VA = "0xA34940", Slot = "9")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x6001F72")]
		[Address(RVA = "0xA34A54", Offset = "0xA34A54", VA = "0xA34A54", Slot = "10")]
		protected virtual HeadsetCollisionEventArgs SetHeadsetCollisionEvent(Collider collider, Transform currentTransform)
		{
			return default(HeadsetCollisionEventArgs);
		}

		[Token(Token = "0x6001F73")]
		[Address(RVA = "0xA34A60", Offset = "0xA34A60", VA = "0xA34A60", Slot = "11")]
		protected virtual bool ValidTarget(Transform target)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F74")]
		[Address(RVA = "0xA34B14", Offset = "0xA34B14", VA = "0xA34B14")]
		public VRTK_HeadsetCollider()
		{
		}
	}
	[Token(Token = "0x2000408")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x6402EC", Offset = "0x6402EC")]
	public class VRTK_HeadsetCollisionFade : MonoBehaviour
	{
		[Token(Token = "0x4001DEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x65C5A8", Offset = "0x65C5A8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65C5A8", Offset = "0x65C5A8")]
		public float timeTillFade;

		[Token(Token = "0x4001DEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65C608", Offset = "0x65C608")]
		public float blinkTransitionSpeed;

		[Token(Token = "0x4001DED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65C640", Offset = "0x65C640")]
		public Color fadeColor;

		[Token(Token = "0x4001DEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65C678", Offset = "0x65C678")]
		public VRTK_PolicyList targetListPolicy;

		[Token(Token = "0x4001DEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x65C6B0", Offset = "0x65C6B0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65C6B0", Offset = "0x65C6B0")]
		public VRTK_HeadsetCollision headsetCollision;

		[Token(Token = "0x4001DF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65C710", Offset = "0x65C710")]
		public VRTK_HeadsetFade headsetFade;

		[Token(Token = "0x6001F75")]
		[Address(RVA = "0xCFCCE0", Offset = "0xCFCCE0", VA = "0xCFCCE0", Slot = "4")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6001F76")]
		[Address(RVA = "0xCFD0B8", Offset = "0xCFD0B8", VA = "0xCFD0B8", Slot = "5")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x6001F77")]
		[Address(RVA = "0xCFD1CC", Offset = "0xCFD1CC", VA = "0xCFD1CC", Slot = "6")]
		protected virtual void OnHeadsetCollisionDetect(object sender, HeadsetCollisionEventArgs e)
		{
		}

		[Token(Token = "0x6001F78")]
		[Address(RVA = "0xCFD258", Offset = "0xCFD258", VA = "0xCFD258", Slot = "7")]
		protected virtual void OnHeadsetCollisionEnded(object sender, HeadsetCollisionEventArgs e)
		{
		}

		[Token(Token = "0x6001F79")]
		[Address(RVA = "0xCFD318", Offset = "0xCFD318", VA = "0xCFD318", Slot = "8")]
		protected virtual void StartFade()
		{
		}

		[Token(Token = "0x6001F7A")]
		[Address(RVA = "0xCFD3A0", Offset = "0xCFD3A0", VA = "0xCFD3A0", Slot = "9")]
		protected virtual bool ValidTarget(Collider target)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F7B")]
		[Address(RVA = "0xCFD454", Offset = "0xCFD454", VA = "0xCFD454")]
		public VRTK_HeadsetCollisionFade()
		{
		}
	}
	[Token(Token = "0x2000409")]
	public struct HeadsetControllerAwareEventArgs
	{
		[Token(Token = "0x4001DF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public RaycastHit raycastHit;

		[Token(Token = "0x4001DF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public VRTK_ControllerReference controllerReference;
	}
	[Token(Token = "0x200040A")]
	public delegate void HeadsetControllerAwareEventHandler(object sender, HeadsetControllerAwareEventArgs e);
	[Token(Token = "0x200040B")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x640324", Offset = "0x640324")]
	public class VRTK_HeadsetControllerAware : MonoBehaviour
	{
		[Token(Token = "0x4001DF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65C748", Offset = "0x65C748")]
		public bool trackLeftController;

		[Token(Token = "0x4001DF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65C780", Offset = "0x65C780")]
		public bool trackRightController;

		[Token(Token = "0x4001DF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65C7B8", Offset = "0x65C7B8")]
		public float controllerGlanceRadius;

		[Token(Token = "0x4001DF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65C7F0", Offset = "0x65C7F0")]
		public Transform customRightControllerOrigin;

		[Token(Token = "0x4001DF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65C828", Offset = "0x65C828")]
		public Transform customLeftControllerOrigin;

		[Token(Token = "0x4001DF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65C860", Offset = "0x65C860")]
		public VRTK_CustomRaycast customRaycast;

		[Token(Token = "0x4001DFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		protected GameObject leftController;

		[Token(Token = "0x4001DFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		protected GameObject rightController;

		[Token(Token = "0x4001DFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		protected Transform headset;

		[Token(Token = "0x4001E00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		protected VRTK_BodyPhysics physics;

		[Token(Token = "0x4001E01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		protected bool leftControllerObscured;

		[Token(Token = "0x4001E02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
		protected bool rightControllerObscured;

		[Token(Token = "0x4001E03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7A")]
		protected bool leftControllerLastState;

		[Token(Token = "0x4001E04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7B")]
		protected bool rightControllerLastState;

		[Token(Token = "0x4001E05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		protected bool leftControllerGlance;

		[Token(Token = "0x4001E06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7D")]
		protected bool rightControllerGlance;

		[Token(Token = "0x4001E07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7E")]
		protected bool leftControllerGlanceLastState;

		[Token(Token = "0x4001E08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7F")]
		protected bool rightControllerGlanceLastState;

		[Token(Token = "0x14000123")]
		public event HeadsetControllerAwareEventHandler ControllerObscured
		{
			[Token(Token = "0x6001F80")]
			[Address(RVA = "0xCFD494", Offset = "0xCFD494", VA = "0xCFD494")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66D6B8", Offset = "0x66D6B8")]
			add
			{
			}
			[Token(Token = "0x6001F81")]
			[Address(RVA = "0xCFD580", Offset = "0xCFD580", VA = "0xCFD580")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66D6C8", Offset = "0x66D6C8")]
			remove
			{
			}
		}

		[Token(Token = "0x14000124")]
		public event HeadsetControllerAwareEventHandler ControllerUnobscured
		{
			[Token(Token = "0x6001F82")]
			[Address(RVA = "0xCFD66C", Offset = "0xCFD66C", VA = "0xCFD66C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66D6D8", Offset = "0x66D6D8")]
			add
			{
			}
			[Token(Token = "0x6001F83")]
			[Address(RVA = "0xCFD758", Offset = "0xCFD758", VA = "0xCFD758")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66D6E8", Offset = "0x66D6E8")]
			remove
			{
			}
		}

		[Token(Token = "0x14000125")]
		public event HeadsetControllerAwareEventHandler ControllerGlanceEnter
		{
			[Token(Token = "0x6001F84")]
			[Address(RVA = "0xCFD844", Offset = "0xCFD844", VA = "0xCFD844")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66D6F8", Offset = "0x66D6F8")]
			add
			{
			}
			[Token(Token = "0x6001F85")]
			[Address(RVA = "0xCFD930", Offset = "0xCFD930", VA = "0xCFD930")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66D708", Offset = "0x66D708")]
			remove
			{
			}
		}

		[Token(Token = "0x14000126")]
		public event HeadsetControllerAwareEventHandler ControllerGlanceExit
		{
			[Token(Token = "0x6001F86")]
			[Address(RVA = "0xCFDA1C", Offset = "0xCFDA1C", VA = "0xCFDA1C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66D718", Offset = "0x66D718")]
			add
			{
			}
			[Token(Token = "0x6001F87")]
			[Address(RVA = "0xCFDB08", Offset = "0xCFDB08", VA = "0xCFDB08")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66D728", Offset = "0x66D728")]
			remove
			{
			}
		}

		[Token(Token = "0x6001F88")]
		[Address(RVA = "0xCFDBF4", Offset = "0xCFDBF4", VA = "0xCFDBF4", Slot = "4")]
		public virtual void OnControllerObscured(HeadsetControllerAwareEventArgs e)
		{
		}

		[Token(Token = "0x6001F89")]
		[Address(RVA = "0xCFDC48", Offset = "0xCFDC48", VA = "0xCFDC48", Slot = "5")]
		public virtual void OnControllerUnobscured(HeadsetControllerAwareEventArgs e)
		{
		}

		[Token(Token = "0x6001F8A")]
		[Address(RVA = "0xCFDC9C", Offset = "0xCFDC9C", VA = "0xCFDC9C", Slot = "6")]
		public virtual void OnControllerGlanceEnter(HeadsetControllerAwareEventArgs e)
		{
		}

		[Token(Token = "0x6001F8B")]
		[Address(RVA = "0xCFDCF0", Offset = "0xCFDCF0", VA = "0xCFDCF0", Slot = "7")]
		public virtual void OnControllerGlanceExit(HeadsetControllerAwareEventArgs e)
		{
		}

		[Token(Token = "0x6001F8C")]
		[Address(RVA = "0xCFDD44", Offset = "0xCFDD44", VA = "0xCFDD44", Slot = "8")]
		public virtual bool LeftControllerObscured()
		{
			return default(bool);
		}

		[Token(Token = "0x6001F8D")]
		[Address(RVA = "0xCFDD4C", Offset = "0xCFDD4C", VA = "0xCFDD4C", Slot = "9")]
		public virtual bool RightControllerObscured()
		{
			return default(bool);
		}

		[Token(Token = "0x6001F8E")]
		[Address(RVA = "0xCFDD54", Offset = "0xCFDD54", VA = "0xCFDD54", Slot = "10")]
		public virtual bool LeftControllerGlanced()
		{
			return default(bool);
		}

		[Token(Token = "0x6001F8F")]
		[Address(RVA = "0xCFDD5C", Offset = "0xCFDD5C", VA = "0xCFDD5C", Slot = "11")]
		public virtual bool RightControllerGlanced()
		{
			return default(bool);
		}

		[Token(Token = "0x6001F90")]
		[Address(RVA = "0xCFDD64", Offset = "0xCFDD64", VA = "0xCFDD64", Slot = "12")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6001F91")]
		[Address(RVA = "0xCFDDCC", Offset = "0xCFDDCC", VA = "0xCFDDCC", Slot = "13")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6001F92")]
		[Address(RVA = "0xCFDE8C", Offset = "0xCFDE8C", VA = "0xCFDE8C", Slot = "14")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x6001F93")]
		[Address(RVA = "0xCFDE94", Offset = "0xCFDE94", VA = "0xCFDE94", Slot = "15")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x6001F94")]
		[Address(RVA = "0xCFDEFC", Offset = "0xCFDEFC", VA = "0xCFDEFC", Slot = "16")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x6001F95")]
		[Address(RVA = "0xCFE128", Offset = "0xCFE128", VA = "0xCFE128", Slot = "17")]
		protected virtual HeadsetControllerAwareEventArgs SetHeadsetControllerAwareEvent(RaycastHit raycastHit, VRTK_ControllerReference controllerReference)
		{
			return default(HeadsetControllerAwareEventArgs);
		}

		[Token(Token = "0x6001F96")]
		[Address(RVA = "0xCFE160", Offset = "0xCFE160", VA = "0xCFE160", Slot = "18")]
		protected virtual void RayCastToController(GameObject controller, Transform customDestination, ref bool obscured, ref bool lastState)
		{
		}

		[Token(Token = "0x6001F97")]
		[Address(RVA = "0xCFE514", Offset = "0xCFE514", VA = "0xCFE514", Slot = "19")]
		protected virtual void ObscuredStateChanged(GameObject controller, bool obscured, RaycastHit hitInfo)
		{
		}

		[Token(Token = "0x6001F98")]
		[Address(RVA = "0xCFE6C8", Offset = "0xCFE6C8", VA = "0xCFE6C8", Slot = "20")]
		protected virtual void CheckHeadsetView(GameObject controller, Transform customDestination, ref bool controllerGlance, ref bool controllerGlanceLastState)
		{
		}

		[Token(Token = "0x6001F99")]
		[Address(RVA = "0xCFE994", Offset = "0xCFE994", VA = "0xCFE994", Slot = "21")]
		protected virtual void GlanceStateChanged(GameObject controller, bool glance)
		{
		}

		[Token(Token = "0x6001F9A")]
		[Address(RVA = "0xCFEB1C", Offset = "0xCFEB1C", VA = "0xCFEB1C")]
		public VRTK_HeadsetControllerAware()
		{
		}
	}
	[Token(Token = "0x200040C")]
	public struct HeadsetFadeEventArgs
	{
		[Token(Token = "0x4001E09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float timeTillComplete;

		[Token(Token = "0x4001E0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Transform currentTransform;
	}
	[Token(Token = "0x200040D")]
	public delegate void HeadsetFadeEventHandler(object sender, HeadsetFadeEventArgs e);
	[Token(Token = "0x200040E")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x64035C", Offset = "0x64035C")]
	public class VRTK_HeadsetFade : MonoBehaviour
	{
		[Token(Token = "0x4001E0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected Transform headset;

		[Token(Token = "0x4001E10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected bool isTransitioning;

		[Token(Token = "0x4001E11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		protected bool isFaded;

		[Token(Token = "0x14000127")]
		public event HeadsetFadeEventHandler HeadsetFadeStart
		{
			[Token(Token = "0x6001F9F")]
			[Address(RVA = "0xCFEB38", Offset = "0xCFEB38", VA = "0xCFEB38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66D738", Offset = "0x66D738")]
			add
			{
			}
			[Token(Token = "0x6001FA0")]
			[Address(RVA = "0xCFEC24", Offset = "0xCFEC24", VA = "0xCFEC24")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66D748", Offset = "0x66D748")]
			remove
			{
			}
		}

		[Token(Token = "0x14000128")]
		public event HeadsetFadeEventHandler HeadsetFadeComplete
		{
			[Token(Token = "0x6001FA1")]
			[Address(RVA = "0xCFED10", Offset = "0xCFED10", VA = "0xCFED10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66D758", Offset = "0x66D758")]
			add
			{
			}
			[Token(Token = "0x6001FA2")]
			[Address(RVA = "0xCFEDFC", Offset = "0xCFEDFC", VA = "0xCFEDFC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66D768", Offset = "0x66D768")]
			remove
			{
			}
		}

		[Token(Token = "0x14000129")]
		public event HeadsetFadeEventHandler HeadsetUnfadeStart
		{
			[Token(Token = "0x6001FA3")]
			[Address(RVA = "0xCFEEE8", Offset = "0xCFEEE8", VA = "0xCFEEE8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66D778", Offset = "0x66D778")]
			add
			{
			}
			[Token(Token = "0x6001FA4")]
			[Address(RVA = "0xCFEFD4", Offset = "0xCFEFD4", VA = "0xCFEFD4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66D788", Offset = "0x66D788")]
			remove
			{
			}
		}

		[Token(Token = "0x1400012A")]
		public event HeadsetFadeEventHandler HeadsetUnfadeComplete
		{
			[Token(Token = "0x6001FA5")]
			[Address(RVA = "0xCFF0C0", Offset = "0xCFF0C0", VA = "0xCFF0C0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66D798", Offset = "0x66D798")]
			add
			{
			}
			[Token(Token = "0x6001FA6")]
			[Address(RVA = "0xCFF1AC", Offset = "0xCFF1AC", VA = "0xCFF1AC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66D7A8", Offset = "0x66D7A8")]
			remove
			{
			}
		}

		[Token(Token = "0x6001FA7")]
		[Address(RVA = "0xCFF298", Offset = "0xCFF298", VA = "0xCFF298", Slot = "4")]
		public virtual void OnHeadsetFadeStart(HeadsetFadeEventArgs e)
		{
		}

		[Token(Token = "0x6001FA8")]
		[Address(RVA = "0xCFF2C4", Offset = "0xCFF2C4", VA = "0xCFF2C4", Slot = "5")]
		public virtual void OnHeadsetFadeComplete(HeadsetFadeEventArgs e)
		{
		}

		[Token(Token = "0x6001FA9")]
		[Address(RVA = "0xCFF2F0", Offset = "0xCFF2F0", VA = "0xCFF2F0", Slot = "6")]
		public virtual void OnHeadsetUnfadeStart(HeadsetFadeEventArgs e)
		{
		}

		[Token(Token = "0x6001FAA")]
		[Address(RVA = "0xCFF31C", Offset = "0xCFF31C", VA = "0xCFF31C", Slot = "7")]
		public virtual void OnHeadsetUnfadeComplete(HeadsetFadeEventArgs e)
		{
		}

		[Token(Token = "0x6001FAB")]
		[Address(RVA = "0xCFF348", Offset = "0xCFF348", VA = "0xCFF348", Slot = "8")]
		public virtual bool IsFaded()
		{
			return default(bool);
		}

		[Token(Token = "0x6001FAC")]
		[Address(RVA = "0xCFF350", Offset = "0xCFF350", VA = "0xCFF350", Slot = "9")]
		public virtual bool IsTransitioning()
		{
			return default(bool);
		}

		[Token(Token = "0x6001FAD")]
		[Address(RVA = "0xCFF358", Offset = "0xCFF358", VA = "0xCFF358", Slot = "10")]
		public virtual void Fade(Color color, float duration)
		{
		}

		[Token(Token = "0x6001FAE")]
		[Address(RVA = "0xCFF48C", Offset = "0xCFF48C", VA = "0xCFF48C", Slot = "11")]
		public virtual void Unfade(float duration)
		{
		}

		[Token(Token = "0x6001FAF")]
		[Address(RVA = "0xCFF590", Offset = "0xCFF590", VA = "0xCFF590", Slot = "12")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6001FB0")]
		[Address(RVA = "0xCFF5F8", Offset = "0xCFF5F8", VA = "0xCFF5F8", Slot = "13")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6001FB1")]
		[Address(RVA = "0xCFF66C", Offset = "0xCFF66C", VA = "0xCFF66C", Slot = "14")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x6001FB2")]
		[Address(RVA = "0xCFF6D4", Offset = "0xCFF6D4", VA = "0xCFF6D4", Slot = "15")]
		protected virtual HeadsetFadeEventArgs SetHeadsetFadeEvent(Transform currentTransform, float duration)
		{
			return default(HeadsetFadeEventArgs);
		}

		[Token(Token = "0x6001FB3")]
		[Address(RVA = "0xCFF6DC", Offset = "0xCFF6DC", VA = "0xCFF6DC", Slot = "16")]
		protected virtual void FadeComplete()
		{
		}

		[Token(Token = "0x6001FB4")]
		[Address(RVA = "0xCFF734", Offset = "0xCFF734", VA = "0xCFF734", Slot = "17")]
		protected virtual void UnfadeComplete()
		{
		}

		[Token(Token = "0x6001FB5")]
		[Address(RVA = "0xCFF788", Offset = "0xCFF788", VA = "0xCFF788")]
		public VRTK_HeadsetFade()
		{
		}
	}
	[Token(Token = "0x200040F")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x640394", Offset = "0x640394")]
	public class VRTK_HipTracking : MonoBehaviour
	{
		[Token(Token = "0x4001E12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65C918", Offset = "0x65C918")]
		public float HeadOffset;

		[Token(Token = "0x4001E13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x65C950", Offset = "0x65C950")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65C950", Offset = "0x65C950")]
		public Transform headOverride;

		[Token(Token = "0x4001E14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65C9B0", Offset = "0x65C9B0")]
		public Transform ReferenceUp;

		[Token(Token = "0x4001E15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected Transform playerHead;

		[Token(Token = "0x6001FB6")]
		[Address(RVA = "0xCFFEAC", Offset = "0xCFFEAC", VA = "0xCFFEAC", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6001FB7")]
		[Address(RVA = "0xCFFF14", Offset = "0xCFFF14", VA = "0xCFFF14", Slot = "5")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6001FB8")]
		[Address(RVA = "0xCFFFC0", Offset = "0xCFFFC0", VA = "0xCFFFC0", Slot = "6")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x6001FB9")]
		[Address(RVA = "0xD00028", Offset = "0xD00028", VA = "0xD00028", Slot = "7")]
		protected virtual void LateUpdate()
		{
		}

		[Token(Token = "0x6001FBA")]
		[Address(RVA = "0xD00438", Offset = "0xD00438", VA = "0xD00438")]
		public VRTK_HipTracking()
		{
		}
	}
	[Token(Token = "0x2000410")]
	public struct PositionRewindEventArgs
	{
		[Token(Token = "0x4001E16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 collidedPosition;

		[Token(Token = "0x4001E17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Vector3 resetPosition;
	}
	[Token(Token = "0x2000411")]
	public delegate void PositionRewindEventHandler(object sender, PositionRewindEventArgs e);
	[Token(Token = "0x2000412")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x6403CC", Offset = "0x6403CC")]
	public class VRTK_PositionRewind : MonoBehaviour
	{
		[Token(Token = "0x200081F")]
		public enum CollisionDetectors
		{
			[Token(Token = "0x4002B08")]
			HeadsetOnly,
			[Token(Token = "0x4002B09")]
			BodyOnly,
			[Token(Token = "0x4002B0A")]
			HeadsetAndBody
		}

		[Token(Token = "0x4001E18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x65C9E8", Offset = "0x65C9E8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65C9E8", Offset = "0x65C9E8")]
		public CollisionDetectors collisionDetector;

		[Token(Token = "0x4001E19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65CA48", Offset = "0x65CA48")]
		public bool ignoreTriggerColliders;

		[Token(Token = "0x4001E1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65CA80", Offset = "0x65CA80")]
		public float rewindDelay;

		[Token(Token = "0x4001E1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65CAB8", Offset = "0x65CAB8")]
		public float pushbackDistance;

		[Token(Token = "0x4001E1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65CAF0", Offset = "0x65CAF0")]
		public float crouchThreshold;

		[Token(Token = "0x4001E1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65CB28", Offset = "0x65CB28")]
		public float crouchRewindThreshold;

		[Token(Token = "0x4001E1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65CB60", Offset = "0x65CB60")]
		public VRTK_PolicyList targetListPolicy;

		[Token(Token = "0x4001E1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x65CB98", Offset = "0x65CB98")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65CB98", Offset = "0x65CB98")]
		public VRTK_BodyPhysics bodyPhysics;

		[Token(Token = "0x4001E20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65CBF8", Offset = "0x65CBF8")]
		public VRTK_HeadsetCollision headsetCollision;

		[Token(Token = "0x4001E21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public MazeBodyPhysics mazeBodyPhysics;

		[Token(Token = "0x4001E23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		protected Transform headset;

		[Token(Token = "0x4001E24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		protected Transform playArea;

		[Token(Token = "0x4001E25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		protected Vector3 lastGoodStandingPosition;

		[Token(Token = "0x4001E26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		protected Vector3 lastGoodHeadsetPosition;

		[Token(Token = "0x4001E27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		protected float highestHeadsetY;

		[Token(Token = "0x4001E28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		protected float lastPlayAreaY;

		[Token(Token = "0x4001E29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		protected bool lastGoodPositionSet;

		[Token(Token = "0x4001E2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x89")]
		protected bool hasCollided;

		[Token(Token = "0x4001E2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8A")]
		protected bool isColliding;

		[Token(Token = "0x4001E2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8B")]
		protected bool isRewinding;

		[Token(Token = "0x4001E2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		protected float collideTimer;

		[Token(Token = "0x1400012B")]
		public event PositionRewindEventHandler PositionRewindToSafe
		{
			[Token(Token = "0x6001FBF")]
			[Address(RVA = "0x938A18", Offset = "0x938A18", VA = "0x938A18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66D7B8", Offset = "0x66D7B8")]
			add
			{
			}
			[Token(Token = "0x6001FC0")]
			[Address(RVA = "0x938B04", Offset = "0x938B04", VA = "0x938B04")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66D7C8", Offset = "0x66D7C8")]
			remove
			{
			}
		}

		[Token(Token = "0x6001FC1")]
		[Address(RVA = "0x938BF0", Offset = "0x938BF0", VA = "0x938BF0", Slot = "4")]
		public virtual void OnPositionRewindToSafe(PositionRewindEventArgs e)
		{
		}

		[Token(Token = "0x6001FC2")]
		[Address(RVA = "0x938C34", Offset = "0x938C34", VA = "0x938C34", Slot = "5")]
		public virtual void SetLastGoodPosition()
		{
		}

		[Token(Token = "0x6001FC3")]
		[Address(RVA = "0x938D34", Offset = "0x938D34", VA = "0x938D34", Slot = "6")]
		public virtual void RewindPosition()
		{
		}

		[Token(Token = "0x6001FC4")]
		[Address(RVA = "0x9390DC", Offset = "0x9390DC", VA = "0x9390DC", Slot = "7")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6001FC5")]
		[Address(RVA = "0x939140", Offset = "0x939140", VA = "0x939140", Slot = "8")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6001FC6")]
		[Address(RVA = "0x939294", Offset = "0x939294", VA = "0x939294", Slot = "9")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x6001FC7")]
		[Address(RVA = "0x9392A8", Offset = "0x9392A8", VA = "0x9392A8", Slot = "10")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x6001FC8")]
		[Address(RVA = "0x93930C", Offset = "0x93930C", VA = "0x93930C", Slot = "11")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x6001FC9")]
		[Address(RVA = "0x93937C", Offset = "0x93937C", VA = "0x93937C", Slot = "12")]
		protected virtual PositionRewindEventArgs SetEventPayload(Vector3 previousPosition)
		{
			return default(PositionRewindEventArgs);
		}

		[Token(Token = "0x6001FCA")]
		[Address(RVA = "0x9393DC", Offset = "0x9393DC", VA = "0x9393DC", Slot = "13")]
		protected virtual bool CrouchThresholdReached()
		{
			return default(bool);
		}

		[Token(Token = "0x6001FCB")]
		[Address(RVA = "0x939468", Offset = "0x939468", VA = "0x939468", Slot = "14")]
		protected virtual void SetHighestHeadsetY()
		{
		}

		[Token(Token = "0x6001FCC")]
		[Address(RVA = "0x9394E8", Offset = "0x9394E8", VA = "0x9394E8", Slot = "15")]
		protected virtual void UpdateLastGoodPosition()
		{
		}

		[Token(Token = "0x6001FCD")]
		[Address(RVA = "0x939530", Offset = "0x939530", VA = "0x939530", Slot = "16")]
		protected virtual void FixedUpdate()
		{
		}

		[Token(Token = "0x6001FCE")]
		[Address(RVA = "0x9395E0", Offset = "0x9395E0", VA = "0x9395E0", Slot = "17")]
		protected virtual void StartCollision(GameObject target, Collider collider)
		{
		}

		[Token(Token = "0x6001FCF")]
		[Address(RVA = "0x93966C", Offset = "0x93966C", VA = "0x93966C", Slot = "18")]
		protected virtual void EndCollision(Collider collider)
		{
		}

		[Token(Token = "0x6001FD0")]
		[Address(RVA = "0x939718", Offset = "0x939718", VA = "0x939718", Slot = "19")]
		protected virtual bool BodyCollisionsEnabled()
		{
			return default(bool);
		}

		[Token(Token = "0x6001FD1")]
		[Address(RVA = "0x9397B4", Offset = "0x9397B4", VA = "0x9397B4", Slot = "20")]
		protected virtual bool CanRewind()
		{
			return default(bool);
		}

		[Token(Token = "0x6001FD2")]
		[Address(RVA = "0x939884", Offset = "0x939884", VA = "0x939884", Slot = "21")]
		protected virtual void DoPositionRewind()
		{
		}

		[Token(Token = "0x6001FD3")]
		[Address(RVA = "0x9398D4", Offset = "0x9398D4", VA = "0x9398D4", Slot = "22")]
		protected virtual bool HeadsetListen()
		{
			return default(bool);
		}

		[Token(Token = "0x6001FD4")]
		[Address(RVA = "0x9398E8", Offset = "0x9398E8", VA = "0x9398E8", Slot = "23")]
		protected virtual bool BodyListen()
		{
			return default(bool);
		}

		[Token(Token = "0x6001FD5")]
		[Address(RVA = "0x9398FC", Offset = "0x9398FC", VA = "0x9398FC", Slot = "24")]
		protected virtual void ManageListeners(bool state)
		{
		}

		[Token(Token = "0x6001FD6")]
		[Address(RVA = "0x939CC0", Offset = "0x939CC0", VA = "0x939CC0")]
		private void StartColliding(object sender, BodyPhysicsEventArgs e)
		{
		}

		[Token(Token = "0x6001FD7")]
		[Address(RVA = "0x939CDC", Offset = "0x939CDC", VA = "0x939CDC")]
		private void StopColliding(object sender, BodyPhysicsEventArgs e)
		{
		}

		[Token(Token = "0x6001FD8")]
		[Address(RVA = "0x939CF0", Offset = "0x939CF0", VA = "0x939CF0", Slot = "25")]
		protected virtual void HeadsetCollisionDetect(object sender, HeadsetCollisionEventArgs e)
		{
		}

		[Token(Token = "0x6001FD9")]
		[Address(RVA = "0x939D40", Offset = "0x939D40", VA = "0x939D40", Slot = "26")]
		protected virtual void HeadsetCollisionEnded(object sender, HeadsetCollisionEventArgs e)
		{
		}

		[Token(Token = "0x6001FDA")]
		[Address(RVA = "0x939D58", Offset = "0x939D58", VA = "0x939D58")]
		public VRTK_PositionRewind()
		{
		}
	}
	[Token(Token = "0x2000413")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x640404", Offset = "0x640404")]
	public class VRTK_UICanvas : MonoBehaviour
	{
		[Token(Token = "0x2000820")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x645EB8", Offset = "0x645EB8")]
		private sealed class <CreateDraggablePanel>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002B0B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002B0C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002B0D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Canvas canvas;

			[Token(Token = "0x4002B0E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Vector2 canvasSize;

			[Token(Token = "0x1700034B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600330D")]
				[Address(RVA = "0x9AB5D8", Offset = "0x9AB5D8", VA = "0x9AB5D8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700034C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600330F")]
				[Address(RVA = "0x9AB648", Offset = "0x9AB648", VA = "0x9AB648", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600330A")]
			[Address(RVA = "0x9AA7AC", Offset = "0x9AA7AC", VA = "0x9AA7AC")]
			[DebuggerHidden]
			public <CreateDraggablePanel>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x600330B")]
			[Address(RVA = "0x9AB0D0", Offset = "0x9AB0D0", VA = "0x9AB0D0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600330C")]
			[Address(RVA = "0x9AB0D4", Offset = "0x9AB0D4", VA = "0x9AB0D4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600330E")]
			[Address(RVA = "0x9AB5E0", Offset = "0x9AB5E0", VA = "0x9AB5E0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001E2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65CC40", Offset = "0x65CC40")]
		public bool clickOnPointerCollision;

		[Token(Token = "0x4001E2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65CC78", Offset = "0x65CC78")]
		public float autoActivateWithinDistance;

		[Token(Token = "0x4001E30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected BoxCollider canvasBoxCollider;

		[Token(Token = "0x4001E31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected Rigidbody canvasRigidBody;

		[Token(Token = "0x4001E32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected Coroutine draggablePanelCreation;

		[Token(Token = "0x4001E33")]
		protected const string CANVAS_DRAGGABLE_PANEL = "VRTK_UICANVAS_DRAGGABLE_PANEL";

		[Token(Token = "0x4001E34")]
		protected const string ACTIVATOR_FRONT_TRIGGER_GAMEOBJECT = "VRTK_UICANVAS_ACTIVATOR_FRONT_TRIGGER";

		[Token(Token = "0x6001FDB")]
		[Address(RVA = "0x9A9C98", Offset = "0x9A9C98", VA = "0x9A9C98", Slot = "4")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6001FDC")]
		[Address(RVA = "0x9A9CA4", Offset = "0x9A9CA4", VA = "0x9A9CA4", Slot = "5")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x6001FDD")]
		[Address(RVA = "0x9A9CB0", Offset = "0x9A9CB0", VA = "0x9A9CB0", Slot = "6")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x6001FDE")]
		[Address(RVA = "0x9A9CBC", Offset = "0x9A9CBC", VA = "0x9A9CBC", Slot = "7")]
		protected virtual void OnTriggerEnter(Collider collider)
		{
		}

		[Token(Token = "0x6001FDF")]
		[Address(RVA = "0x9A9DF8", Offset = "0x9A9DF8", VA = "0x9A9DF8", Slot = "8")]
		protected virtual void OnTriggerExit(Collider collider)
		{
		}

		[Token(Token = "0x6001FE0")]
		[Address(RVA = "0x9A9EA4", Offset = "0x9A9EA4", VA = "0x9A9EA4", Slot = "9")]
		protected virtual void SetupCanvas()
		{
		}

		[Token(Token = "0x6001FE1")]
		[Address(RVA = "0x9AA710", Offset = "0x9AA710", VA = "0x9AA710", Slot = "10")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x66D7D8", Offset = "0x66D7D8")]
		protected virtual IEnumerator CreateDraggablePanel(Canvas canvas, Vector2 canvasSize)
		{
			return null;
		}

		[Token(Token = "0x6001FE2")]
		[Address(RVA = "0x9AA7D8", Offset = "0x9AA7D8", VA = "0x9AA7D8", Slot = "11")]
		protected virtual void CreateActivator(Canvas canvas, Vector2 canvasSize)
		{
		}

		[Token(Token = "0x6001FE3")]
		[Address(RVA = "0x9AACBC", Offset = "0x9AACBC", VA = "0x9AACBC", Slot = "12")]
		protected virtual void RemoveCanvas()
		{
		}

		[Token(Token = "0x6001FE4")]
		[Address(RVA = "0x9AB0C8", Offset = "0x9AB0C8", VA = "0x9AB0C8")]
		public VRTK_UICanvas()
		{
		}
	}
	[Token(Token = "0x2000414")]
	public class VRTK_UIPointerAutoActivator : MonoBehaviour
	{
		[Token(Token = "0x6001FE5")]
		[Address(RVA = "0x8F7F4C", Offset = "0x8F7F4C", VA = "0x8F7F4C", Slot = "4")]
		protected virtual void OnTriggerEnter(Collider collider)
		{
		}

		[Token(Token = "0x6001FE6")]
		[Address(RVA = "0x8F8094", Offset = "0x8F8094", VA = "0x8F8094", Slot = "5")]
		protected virtual void OnTriggerExit(Collider collider)
		{
		}

		[Token(Token = "0x6001FE7")]
		[Address(RVA = "0x8F8190", Offset = "0x8F8190", VA = "0x8F8190")]
		public VRTK_UIPointerAutoActivator()
		{
		}
	}
	[Token(Token = "0x2000415")]
	public struct UIDraggableItemEventArgs
	{
		[Token(Token = "0x4001E35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public GameObject target;
	}
	[Token(Token = "0x2000416")]
	public delegate void UIDraggableItemEventHandler(object sender, UIDraggableItemEventArgs e);
	[Token(Token = "0x2000417")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x64043C", Offset = "0x64043C")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x64043C", Offset = "0x64043C")]
	public class VRTK_UIDraggableItem : MonoBehaviour, IBeginDragHandler, IEventSystemHandler, IDragHandler, IEndDragHandler
	{
		[Token(Token = "0x4001E36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65CCB0", Offset = "0x65CCB0")]
		public bool restrictToDropZone;

		[Token(Token = "0x4001E37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65CCE8", Offset = "0x65CCE8")]
		public bool restrictToOriginalCanvas;

		[Token(Token = "0x4001E38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65CD20", Offset = "0x65CD20")]
		public float forwardOffset;

		[Token(Token = "0x4001E39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public GameObject validDropZone;

		[Token(Token = "0x4001E3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected RectTransform dragTransform;

		[Token(Token = "0x4001E3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected Vector3 startPosition;

		[Token(Token = "0x4001E3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		protected Quaternion startRotation;

		[Token(Token = "0x4001E3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		protected GameObject startDropZone;

		[Token(Token = "0x4001E40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		protected Transform startParent;

		[Token(Token = "0x4001E41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		protected Canvas startCanvas;

		[Token(Token = "0x4001E42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		protected CanvasGroup canvasGroup;

		[Token(Token = "0x1400012C")]
		public event UIDraggableItemEventHandler DraggableItemDropped
		{
			[Token(Token = "0x6001FEC")]
			[Address(RVA = "0x9AB650", Offset = "0x9AB650", VA = "0x9AB650")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66D83C", Offset = "0x66D83C")]
			add
			{
			}
			[Token(Token = "0x6001FED")]
			[Address(RVA = "0x9AB73C", Offset = "0x9AB73C", VA = "0x9AB73C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66D84C", Offset = "0x66D84C")]
			remove
			{
			}
		}

		[Token(Token = "0x1400012D")]
		public event UIDraggableItemEventHandler DraggableItemReset
		{
			[Token(Token = "0x6001FEE")]
			[Address(RVA = "0x9AB828", Offset = "0x9AB828", VA = "0x9AB828")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66D85C", Offset = "0x66D85C")]
			add
			{
			}
			[Token(Token = "0x6001FEF")]
			[Address(RVA = "0x9AB914", Offset = "0x9AB914", VA = "0x9AB914")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66D86C", Offset = "0x66D86C")]
			remove
			{
			}
		}

		[Token(Token = "0x6001FF0")]
		[Address(RVA = "0x9ABA00", Offset = "0x9ABA00", VA = "0x9ABA00", Slot = "7")]
		public virtual void OnDraggableItemDropped(UIDraggableItemEventArgs e)
		{
		}

		[Token(Token = "0x6001FF1")]
		[Address(RVA = "0x9ABA24", Offset = "0x9ABA24", VA = "0x9ABA24", Slot = "8")]
		public virtual void OnDraggableItemReset(UIDraggableItemEventArgs e)
		{
		}

		[Token(Token = "0x6001FF2")]
		[Address(RVA = "0x9ABA48", Offset = "0x9ABA48", VA = "0x9ABA48", Slot = "9")]
		public virtual void OnBeginDrag(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001FF3")]
		[Address(RVA = "0x9ABCB8", Offset = "0x9ABCB8", VA = "0x9ABCB8", Slot = "10")]
		public virtual void OnDrag(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001FF4")]
		[Address(RVA = "0x9ABCC8", Offset = "0x9ABCC8", VA = "0x9ABCC8", Slot = "11")]
		public virtual void OnEndDrag(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001FF5")]
		[Address(RVA = "0x9AC1CC", Offset = "0x9AC1CC", VA = "0x9AC1CC", Slot = "12")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6001FF6")]
		[Address(RVA = "0x9AC43C", Offset = "0x9AC43C", VA = "0x9AC43C", Slot = "13")]
		protected virtual VRTK_UIPointer GetPointer(PointerEventData eventData)
		{
			return null;
		}

		[Token(Token = "0x6001FF7")]
		[Address(RVA = "0x9AC530", Offset = "0x9AC530", VA = "0x9AC530", Slot = "14")]
		protected virtual void SetDragPosition(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001FF8")]
		[Address(RVA = "0x9AC8E0", Offset = "0x9AC8E0", VA = "0x9AC8E0", Slot = "15")]
		protected virtual void ResetElement()
		{
		}

		[Token(Token = "0x6001FF9")]
		[Address(RVA = "0x9AC9F4", Offset = "0x9AC9F4", VA = "0x9AC9F4", Slot = "16")]
		protected virtual UIDraggableItemEventArgs SetEventPayload(GameObject target)
		{
			return default(UIDraggableItemEventArgs);
		}

		[Token(Token = "0x6001FFA")]
		[Address(RVA = "0x9AC9FC", Offset = "0x9AC9FC", VA = "0x9AC9FC")]
		public VRTK_UIDraggableItem()
		{
		}
	}
	[Token(Token = "0x2000418")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x6404C4", Offset = "0x6404C4")]
	public class VRTK_UIDropZone : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler
	{
		[Token(Token = "0x4001E43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected VRTK_UIDraggableItem droppableItem;

		[Token(Token = "0x6001FFB")]
		[Address(RVA = "0x9ACA10", Offset = "0x9ACA10", VA = "0x9ACA10", Slot = "6")]
		public virtual void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001FFC")]
		[Address(RVA = "0x9ACB44", Offset = "0x9ACB44", VA = "0x9ACB44", Slot = "7")]
		public virtual void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001FFD")]
		[Address(RVA = "0x9ACBD4", Offset = "0x9ACBD4", VA = "0x9ACBD4")]
		public VRTK_UIDropZone()
		{
		}
	}
	[Token(Token = "0x2000419")]
	public struct UIPointerEventArgs
	{
		[Token(Token = "0x4001E44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VRTK_ControllerReference controllerReference;

		[Token(Token = "0x4001E45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public bool isActive;

		[Token(Token = "0x4001E46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject currentTarget;

		[Token(Token = "0x4001E47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject previousTarget;

		[Token(Token = "0x4001E48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RaycastResult raycastResult;
	}
	[Token(Token = "0x200041A")]
	public delegate void UIPointerEventHandler(object sender, UIPointerEventArgs e);
	[Token(Token = "0x200041B")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x6404FC", Offset = "0x6404FC")]
	public class VRTK_UIPointer : MonoBehaviour
	{
		[Token(Token = "0x2000821")]
		public enum ActivationMethods
		{
			[Token(Token = "0x4002B10")]
			HoldButton,
			[Token(Token = "0x4002B11")]
			ToggleButton,
			[Token(Token = "0x4002B12")]
			AlwaysOn
		}

		[Token(Token = "0x2000822")]
		public enum ClickMethods
		{
			[Token(Token = "0x4002B14")]
			ClickOnButtonUp,
			[Token(Token = "0x4002B15")]
			ClickOnButtonDown
		}

		[Token(Token = "0x4001E49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool restrictToUI;

		[Token(Token = "0x4001E4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public VRTK_UIGraphicRaycaster _rayCaster;

		[Token(Token = "0x4001E4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x65CD98", Offset = "0x65CD98")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65CD98", Offset = "0x65CD98")]
		public VRTK_ControllerEvents.ButtonAlias activationButton;

		[Token(Token = "0x4001E4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65CDF8", Offset = "0x65CDF8")]
		public ActivationMethods activationMode;

		[Token(Token = "0x4001E4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x65CE30", Offset = "0x65CE30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65CE30", Offset = "0x65CE30")]
		public VRTK_ControllerEvents.ButtonAlias selectionButton;

		[Token(Token = "0x4001E4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65CE90", Offset = "0x65CE90")]
		public ClickMethods clickMethod;

		[Token(Token = "0x4001E4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65CEC8", Offset = "0x65CEC8")]
		public bool attemptClickOnDeactivate;

		[Token(Token = "0x4001E50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65CF00", Offset = "0x65CF00")]
		public float clickAfterHoverDuration;

		[Token(Token = "0x4001E51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x65CF38", Offset = "0x65CF38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65CF38", Offset = "0x65CF38")]
		public float maximumLength;

		[Token(Token = "0x4001E52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65CF98", Offset = "0x65CF98")]
		public GameObject attachedTo;

		[Token(Token = "0x4001E53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65CFD0", Offset = "0x65CFD0")]
		public VRTK_ControllerEvents controllerEvents;

		[Token(Token = "0x4001E54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65D008", Offset = "0x65D008")]
		public Transform customOrigin;

		[Token(Token = "0x4001E55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x65D040", Offset = "0x65D040")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x65D040", Offset = "0x65D040")]
		[ObsoleteInspector]
		public VRTK_ControllerEvents controller;

		[Token(Token = "0x4001E56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x65D0B0", Offset = "0x65D0B0")]
		[ObsoleteInspector]
		public Transform pointerOriginTransform;

		[Token(Token = "0x4001E57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[HideInInspector]
		public PointerEventData pointerEventData;

		[Token(Token = "0x4001E58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[HideInInspector]
		public GameObject hoveringElement;

		[Token(Token = "0x4001E59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[HideInInspector]
		public GameObject controllerRenderModel;

		[Token(Token = "0x4001E5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[HideInInspector]
		public float hoverDurationTimer;

		[Token(Token = "0x4001E5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[HideInInspector]
		public bool canClickOnHover;

		[Token(Token = "0x4001E5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[HideInInspector]
		public GameObject autoActivatingCanvas;

		[Token(Token = "0x4001E5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[HideInInspector]
		public bool collisionClick;

		[Token(Token = "0x4001E67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected static Dictionary<int, float> pointerLengths;

		[Token(Token = "0x4001E68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		protected bool pointerClicked;

		[Token(Token = "0x4001E69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE9")]
		protected bool beamEnabledState;

		[Token(Token = "0x4001E6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEA")]
		protected bool lastPointerPressState;

		[Token(Token = "0x4001E6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEB")]
		protected bool lastPointerClickState;

		[Token(Token = "0x4001E6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		protected GameObject currentTarget;

		[Token(Token = "0x4001E6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		protected SDK_BaseController.ControllerHand cachedAttachedHand;

		[Token(Token = "0x4001E6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		protected Transform cachedPointerAttachPoint;

		[Token(Token = "0x4001E6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		protected EventSystem cachedEventSystem;

		[Token(Token = "0x4001E70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		protected VRTK_VRInputModule cachedVRInputModule;

		[Token(Token = "0x1400012E")]
		public event ControllerInteractionEventHandler ActivationButtonPressed
		{
			[Token(Token = "0x6002002")]
			[Address(RVA = "0x9ADFE8", Offset = "0x9ADFE8", VA = "0x9ADFE8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66D87C", Offset = "0x66D87C")]
			add
			{
			}
			[Token(Token = "0x6002003")]
			[Address(RVA = "0x9AE0D4", Offset = "0x9AE0D4", VA = "0x9AE0D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66D88C", Offset = "0x66D88C")]
			remove
			{
			}
		}

		[Token(Token = "0x1400012F")]
		public event ControllerInteractionEventHandler ActivationButtonReleased
		{
			[Token(Token = "0x6002004")]
			[Address(RVA = "0x9AE1C0", Offset = "0x9AE1C0", VA = "0x9AE1C0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66D89C", Offset = "0x66D89C")]
			add
			{
			}
			[Token(Token = "0x6002005")]
			[Address(RVA = "0x9AE2AC", Offset = "0x9AE2AC", VA = "0x9AE2AC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66D8AC", Offset = "0x66D8AC")]
			remove
			{
			}
		}

		[Token(Token = "0x14000130")]
		public event ControllerInteractionEventHandler SelectionButtonPressed
		{
			[Token(Token = "0x6002006")]
			[Address(RVA = "0x9AE398", Offset = "0x9AE398", VA = "0x9AE398")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66D8BC", Offset = "0x66D8BC")]
			add
			{
			}
			[Token(Token = "0x6002007")]
			[Address(RVA = "0x9AE484", Offset = "0x9AE484", VA = "0x9AE484")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66D8CC", Offset = "0x66D8CC")]
			remove
			{
			}
		}

		[Token(Token = "0x14000131")]
		public event ControllerInteractionEventHandler SelectionButtonReleased
		{
			[Token(Token = "0x6002008")]
			[Address(RVA = "0x9AE570", Offset = "0x9AE570", VA = "0x9AE570")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66D8DC", Offset = "0x66D8DC")]
			add
			{
			}
			[Token(Token = "0x6002009")]
			[Address(RVA = "0x9AE65C", Offset = "0x9AE65C", VA = "0x9AE65C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66D8EC", Offset = "0x66D8EC")]
			remove
			{
			}
		}

		[Token(Token = "0x14000132")]
		public event UIPointerEventHandler UIPointerElementEnter
		{
			[Token(Token = "0x600200A")]
			[Address(RVA = "0x9AE748", Offset = "0x9AE748", VA = "0x9AE748")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66D8FC", Offset = "0x66D8FC")]
			add
			{
			}
			[Token(Token = "0x600200B")]
			[Address(RVA = "0x9AE834", Offset = "0x9AE834", VA = "0x9AE834")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66D90C", Offset = "0x66D90C")]
			remove
			{
			}
		}

		[Token(Token = "0x14000133")]
		public event UIPointerEventHandler UIPointerElementExit
		{
			[Token(Token = "0x600200C")]
			[Address(RVA = "0x9AE920", Offset = "0x9AE920", VA = "0x9AE920")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66D91C", Offset = "0x66D91C")]
			add
			{
			}
			[Token(Token = "0x600200D")]
			[Address(RVA = "0x9AEA0C", Offset = "0x9AEA0C", VA = "0x9AEA0C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66D92C", Offset = "0x66D92C")]
			remove
			{
			}
		}

		[Token(Token = "0x14000134")]
		public event UIPointerEventHandler UIPointerElementClick
		{
			[Token(Token = "0x600200E")]
			[Address(RVA = "0x9AEAF8", Offset = "0x9AEAF8", VA = "0x9AEAF8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66D93C", Offset = "0x66D93C")]
			add
			{
			}
			[Token(Token = "0x600200F")]
			[Address(RVA = "0x9AEBE4", Offset = "0x9AEBE4", VA = "0x9AEBE4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66D94C", Offset = "0x66D94C")]
			remove
			{
			}
		}

		[Token(Token = "0x14000135")]
		public event UIPointerEventHandler UIPointerElementDragStart
		{
			[Token(Token = "0x6002010")]
			[Address(RVA = "0x9AECD0", Offset = "0x9AECD0", VA = "0x9AECD0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66D95C", Offset = "0x66D95C")]
			add
			{
			}
			[Token(Token = "0x6002011")]
			[Address(RVA = "0x9AEDBC", Offset = "0x9AEDBC", VA = "0x9AEDBC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66D96C", Offset = "0x66D96C")]
			remove
			{
			}
		}

		[Token(Token = "0x14000136")]
		public event UIPointerEventHandler UIPointerElementDragEnd
		{
			[Token(Token = "0x6002012")]
			[Address(RVA = "0x9AEEA8", Offset = "0x9AEEA8", VA = "0x9AEEA8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66D97C", Offset = "0x66D97C")]
			add
			{
			}
			[Token(Token = "0x6002013")]
			[Address(RVA = "0x9AEF94", Offset = "0x9AEF94", VA = "0x9AEF94")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66D98C", Offset = "0x66D98C")]
			remove
			{
			}
		}

		[Token(Token = "0x6002014")]
		[Address(RVA = "0x9ADD58", Offset = "0x9ADD58", VA = "0x9ADD58")]
		public static float GetPointerLength(int pointerId)
		{
			return default(float);
		}

		[Token(Token = "0x6002015")]
		[Address(RVA = "0x9AF080", Offset = "0x9AF080", VA = "0x9AF080", Slot = "4")]
		public virtual void OnUIPointerElementEnter(UIPointerEventArgs e)
		{
		}

		[Token(Token = "0x6002016")]
		[Address(RVA = "0x9AF194", Offset = "0x9AF194", VA = "0x9AF194", Slot = "5")]
		public virtual void OnUIPointerElementExit(UIPointerEventArgs e)
		{
		}

		[Token(Token = "0x6002017")]
		[Address(RVA = "0x9AF2CC", Offset = "0x9AF2CC", VA = "0x9AF2CC", Slot = "6")]
		public virtual void OnUIPointerElementClick(UIPointerEventArgs e)
		{
		}

		[Token(Token = "0x6002018")]
		[Address(RVA = "0x9AF39C", Offset = "0x9AF39C", VA = "0x9AF39C", Slot = "7")]
		public virtual void OnUIPointerElementDragStart(UIPointerEventArgs e)
		{
		}

		[Token(Token = "0x6002019")]
		[Address(RVA = "0x9AF3E8", Offset = "0x9AF3E8", VA = "0x9AF3E8", Slot = "8")]
		public virtual void OnUIPointerElementDragEnd(UIPointerEventArgs e)
		{
		}

		[Token(Token = "0x600201A")]
		[Address(RVA = "0x9AF434", Offset = "0x9AF434", VA = "0x9AF434", Slot = "9")]
		public virtual void OnActivationButtonPressed(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x600201B")]
		[Address(RVA = "0x9AF480", Offset = "0x9AF480", VA = "0x9AF480", Slot = "10")]
		public virtual void OnActivationButtonReleased(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x600201C")]
		[Address(RVA = "0x9AF4CC", Offset = "0x9AF4CC", VA = "0x9AF4CC", Slot = "11")]
		public virtual void OnSelectionButtonPressed(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x600201D")]
		[Address(RVA = "0x9AF518", Offset = "0x9AF518", VA = "0x9AF518", Slot = "12")]
		public virtual void OnSelectionButtonReleased(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x600201E")]
		[Address(RVA = "0x9AF564", Offset = "0x9AF564", VA = "0x9AF564", Slot = "13")]
		public virtual UIPointerEventArgs SetUIPointerEvent(RaycastResult currentRaycastResult, GameObject currentTarget, [Optional] GameObject lastTarget)
		{
			return default(UIPointerEventArgs);
		}

		[Token(Token = "0x600201F")]
		[Address(RVA = "0x9AF5F8", Offset = "0x9AF5F8", VA = "0x9AF5F8", Slot = "14")]
		public virtual VRTK_VRInputModule SetEventSystem(EventSystem eventSystem)
		{
			return null;
		}

		[Token(Token = "0x6002020")]
		[Address(RVA = "0x9AF804", Offset = "0x9AF804", VA = "0x9AF804", Slot = "15")]
		public virtual void RemoveEventSystem()
		{
		}

		[Token(Token = "0x6002021")]
		[Address(RVA = "0x9AF9AC", Offset = "0x9AF9AC", VA = "0x9AF9AC", Slot = "16")]
		public virtual bool PointerActive()
		{
			return default(bool);
		}

		[Token(Token = "0x6002022")]
		[Address(RVA = "0x9AFB1C", Offset = "0x9AFB1C", VA = "0x9AFB1C", Slot = "17")]
		public virtual bool IsActivationButtonPressed()
		{
			return default(bool);
		}

		[Token(Token = "0x6002023")]
		[Address(RVA = "0x9AFBCC", Offset = "0x9AFBCC", VA = "0x9AFBCC", Slot = "18")]
		public virtual bool IsSelectionButtonPressed()
		{
			return default(bool);
		}

		[Token(Token = "0x6002024")]
		[Address(RVA = "0x9AFC7C", Offset = "0x9AFC7C", VA = "0x9AFC7C", Slot = "19")]
		public virtual bool ValidClick(bool checkLastClick, bool lastClickState = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6002025")]
		[Address(RVA = "0x9AFD04", Offset = "0x9AFD04", VA = "0x9AFD04", Slot = "20")]
		public virtual Vector3 GetOriginPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002026")]
		[Address(RVA = "0x9AFDB4", Offset = "0x9AFDB4", VA = "0x9AFDB4", Slot = "21")]
		public virtual Vector3 GetOriginForward()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002027")]
		[Address(RVA = "0x9AFE64", Offset = "0x9AFE64", VA = "0x9AFE64", Slot = "22")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6002028")]
		[Address(RVA = "0x9AFECC", Offset = "0x9AFECC", VA = "0x9AFECC", Slot = "23")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6002029")]
		[Address(RVA = "0x9B0254", Offset = "0x9B0254", VA = "0x9B0254", Slot = "24")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x600202A")]
		[Address(RVA = "0x9B04E4", Offset = "0x9B04E4", VA = "0x9B04E4", Slot = "25")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x600202B")]
		[Address(RVA = "0x9B054C", Offset = "0x9B054C", VA = "0x9B054C", Slot = "26")]
		protected virtual void LateUpdate()
		{
		}

		[Token(Token = "0x600202C")]
		[Address(RVA = "0x9B07D0", Offset = "0x9B07D0", VA = "0x9B07D0", Slot = "27")]
		protected virtual void DoActivationButtonPressed(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x600202D")]
		[Address(RVA = "0x9B0858", Offset = "0x9B0858", VA = "0x9B0858", Slot = "28")]
		protected virtual void DoActivationButtonReleased(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x600202E")]
		[Address(RVA = "0x9B08E0", Offset = "0x9B08E0", VA = "0x9B08E0", Slot = "29")]
		protected virtual void DoSelectionButtonPressed(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x600202F")]
		[Address(RVA = "0x9B0968", Offset = "0x9B0968", VA = "0x9B0968", Slot = "30")]
		protected virtual void DoSelectionButtonReleased(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6002030")]
		[Address(RVA = "0x9B09F0", Offset = "0x9B09F0", VA = "0x9B09F0", Slot = "31")]
		protected virtual VRTK_ControllerReference GetControllerReference([Optional] GameObject reference)
		{
			return null;
		}

		[Token(Token = "0x6002031")]
		[Address(RVA = "0x9B0AE8", Offset = "0x9B0AE8", VA = "0x9B0AE8", Slot = "32")]
		protected virtual Transform GetPointerOriginTransform()
		{
			return null;
		}

		[Token(Token = "0x6002032")]
		[Address(RVA = "0x9B0D08", Offset = "0x9B0D08", VA = "0x9B0D08", Slot = "33")]
		protected virtual void ResetHoverTimer()
		{
		}

		[Token(Token = "0x6002033")]
		[Address(RVA = "0x9B0D14", Offset = "0x9B0D14", VA = "0x9B0D14", Slot = "34")]
		protected virtual void ConfigureEventSystem()
		{
		}

		[Token(Token = "0x6002034")]
		[Address(RVA = "0x9B0F1C", Offset = "0x9B0F1C", VA = "0x9B0F1C")]
		public VRTK_UIPointer()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200041C")]
	public class VRTK_ControllerElementHighlighters
	{
		[Token(Token = "0x4001E71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65D1FC", Offset = "0x65D1FC")]
		public VRTK_BaseHighlighter body;

		[Token(Token = "0x4001E72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65D234", Offset = "0x65D234")]
		public VRTK_BaseHighlighter trigger;

		[Token(Token = "0x4001E73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65D26C", Offset = "0x65D26C")]
		public VRTK_BaseHighlighter gripLeft;

		[Token(Token = "0x4001E74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65D2A4", Offset = "0x65D2A4")]
		public VRTK_BaseHighlighter gripRight;

		[Token(Token = "0x4001E75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65D2DC", Offset = "0x65D2DC")]
		public VRTK_BaseHighlighter touchpad;

		[Token(Token = "0x4001E76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65D314", Offset = "0x65D314")]
		public VRTK_BaseHighlighter touchpadTwo;

		[Token(Token = "0x4001E77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65D34C", Offset = "0x65D34C")]
		public VRTK_BaseHighlighter buttonOne;

		[Token(Token = "0x4001E78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65D384", Offset = "0x65D384")]
		public VRTK_BaseHighlighter buttonTwo;

		[Token(Token = "0x4001E79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65D3BC", Offset = "0x65D3BC")]
		public VRTK_BaseHighlighter systemMenu;

		[Token(Token = "0x4001E7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65D3F4", Offset = "0x65D3F4")]
		public VRTK_BaseHighlighter startMenu;

		[Token(Token = "0x6002036")]
		[Address(RVA = "0xB08594", Offset = "0xB08594", VA = "0xB08594")]
		public VRTK_ControllerElementHighlighters()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200041D")]
	public class VRTK_ControllerModelElementPaths
	{
		[Token(Token = "0x4001E7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65D42C", Offset = "0x65D42C")]
		public string bodyModelPath;

		[Token(Token = "0x4001E7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65D464", Offset = "0x65D464")]
		public string triggerModelPath;

		[Token(Token = "0x4001E7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65D49C", Offset = "0x65D49C")]
		public string leftGripModelPath;

		[Token(Token = "0x4001E7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65D4D4", Offset = "0x65D4D4")]
		public string rightGripModelPath;

		[Token(Token = "0x4001E7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65D50C", Offset = "0x65D50C")]
		public string touchpadModelPath;

		[Token(Token = "0x4001E80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65D544", Offset = "0x65D544")]
		public string touchpadTwoModelPath;

		[Token(Token = "0x4001E81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65D57C", Offset = "0x65D57C")]
		public string buttonOneModelPath;

		[Token(Token = "0x4001E82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65D5B4", Offset = "0x65D5B4")]
		public string buttonTwoModelPath;

		[Token(Token = "0x4001E83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65D5EC", Offset = "0x65D5EC")]
		public string systemMenuModelPath;

		[Token(Token = "0x4001E84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65D624", Offset = "0x65D624")]
		public string startMenuModelPath;

		[Token(Token = "0x6002037")]
		[Address(RVA = "0xA1DDE0", Offset = "0xA1DDE0", VA = "0xA1DDE0")]
		public VRTK_ControllerModelElementPaths()
		{
		}
	}
	[Token(Token = "0x200041E")]
	public abstract class VRTK_ObjectFollow : MonoBehaviour
	{
		[Token(Token = "0x4001E85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x65D65C", Offset = "0x65D65C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65D65C", Offset = "0x65D65C")]
		public GameObject gameObjectToFollow;

		[Token(Token = "0x4001E86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65D6BC", Offset = "0x65D6BC")]
		public GameObject gameObjectToChange;

		[Token(Token = "0x4001E87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x65D6F4", Offset = "0x65D6F4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65D6F4", Offset = "0x65D6F4")]
		public bool followsPosition;

		[Token(Token = "0x4001E88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65D754", Offset = "0x65D754")]
		public bool smoothsPosition;

		[Token(Token = "0x4001E89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65D78C", Offset = "0x65D78C")]
		public float maxAllowedPerFrameDistanceDifference;

		[Token(Token = "0x4001E8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x65D7C4", Offset = "0x65D7C4")]
		private Vector3 <targetPosition>k__BackingField;

		[Token(Token = "0x4001E8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x65D7D4", Offset = "0x65D7D4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65D7D4", Offset = "0x65D7D4")]
		public bool followsRotation;

		[Token(Token = "0x4001E8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65D834", Offset = "0x65D834")]
		public bool smoothsRotation;

		[Token(Token = "0x4001E8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65D86C", Offset = "0x65D86C")]
		public float maxAllowedPerFrameAngleDifference;

		[Token(Token = "0x4001E8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x65D8A4", Offset = "0x65D8A4")]
		private Quaternion <targetRotation>k__BackingField;

		[Token(Token = "0x4001E8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x65D8B4", Offset = "0x65D8B4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65D8B4", Offset = "0x65D8B4")]
		public bool followsScale;

		[Token(Token = "0x4001E90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65D914", Offset = "0x65D914")]
		public bool smoothsScale;

		[Token(Token = "0x4001E91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65D94C", Offset = "0x65D94C")]
		public float maxAllowedPerFrameSizeDifference;

		[Token(Token = "0x4001E92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x65D984", Offset = "0x65D984")]
		private Vector3 <targetScale>k__BackingField;

		[Token(Token = "0x170001DC")]
		public Vector3 targetPosition
		{
			[Token(Token = "0x6002038")]
			[Address(RVA = "0xA85CCC", Offset = "0xA85CCC", VA = "0xA85CCC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66D99C", Offset = "0x66D99C")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6002039")]
			[Address(RVA = "0xA85CD8", Offset = "0xA85CD8", VA = "0xA85CD8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66D9AC", Offset = "0x66D9AC")]
			private set
			{
			}
		}

		[Token(Token = "0x170001DD")]
		public Quaternion targetRotation
		{
			[Token(Token = "0x600203A")]
			[Address(RVA = "0xA85CE4", Offset = "0xA85CE4", VA = "0xA85CE4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66D9BC", Offset = "0x66D9BC")]
			get
			{
				return default(Quaternion);
			}
			[Token(Token = "0x600203B")]
			[Address(RVA = "0xA85CF0", Offset = "0xA85CF0", VA = "0xA85CF0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66D9CC", Offset = "0x66D9CC")]
			private set
			{
			}
		}

		[Token(Token = "0x170001DE")]
		public Vector3 targetScale
		{
			[Token(Token = "0x600203C")]
			[Address(RVA = "0xA85CFC", Offset = "0xA85CFC", VA = "0xA85CFC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66D9DC", Offset = "0x66D9DC")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x600203D")]
			[Address(RVA = "0xA85D08", Offset = "0xA85D08", VA = "0xA85D08")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66D9EC", Offset = "0x66D9EC")]
			private set
			{
			}
		}

		[Token(Token = "0x600203E")]
		[Address(RVA = "0xA85D14", Offset = "0xA85D14", VA = "0xA85D14", Slot = "4")]
		public virtual void Follow()
		{
		}

		[Token(Token = "0x600203F")]
		[Address(RVA = "0xA85DE4", Offset = "0xA85DE4", VA = "0xA85DE4", Slot = "5")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6002040")]
		[Address(RVA = "0xA85E74", Offset = "0xA85E74", VA = "0xA85E74", Slot = "6")]
		protected virtual void OnValidate()
		{
		}

		[Token(Token = "0x6002041")]
		protected abstract Vector3 GetPositionToFollow();

		[Token(Token = "0x6002042")]
		protected abstract void SetPositionOnGameObject(Vector3 newPosition);

		[Token(Token = "0x6002043")]
		protected abstract Quaternion GetRotationToFollow();

		[Token(Token = "0x6002044")]
		protected abstract void SetRotationOnGameObject(Quaternion newRotation);

		[Token(Token = "0x6002045")]
		[Address(RVA = "0xA85F24", Offset = "0xA85F24", VA = "0xA85F24", Slot = "11")]
		protected virtual Vector3 GetScaleToFollow()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002046")]
		[Address(RVA = "0xA85F6C", Offset = "0xA85F6C", VA = "0xA85F6C", Slot = "12")]
		protected virtual void SetScaleOnGameObject(Vector3 newScale)
		{
		}

		[Token(Token = "0x6002047")]
		[Address(RVA = "0xA85FDC", Offset = "0xA85FDC", VA = "0xA85FDC", Slot = "13")]
		protected virtual void FollowPosition()
		{
		}

		[Token(Token = "0x6002048")]
		[Address(RVA = "0xA86124", Offset = "0xA86124", VA = "0xA86124", Slot = "14")]
		protected virtual void FollowRotation()
		{
		}

		[Token(Token = "0x6002049")]
		[Address(RVA = "0xA86294", Offset = "0xA86294", VA = "0xA86294", Slot = "15")]
		protected virtual void FollowScale()
		{
		}

		[Token(Token = "0x600204A")]
		[Address(RVA = "0xA863DC", Offset = "0xA863DC", VA = "0xA863DC")]
		protected VRTK_ObjectFollow()
		{
		}
	}
	[Token(Token = "0x200041F")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x640534", Offset = "0x640534")]
	public class VRTK_RigidbodyFollow : VRTK_ObjectFollow
	{
		[Token(Token = "0x2000823")]
		public enum MovementOption
		{
			[Token(Token = "0x4002B17")]
			Set,
			[Token(Token = "0x4002B18")]
			Move,
			[Token(Token = "0x4002B19")]
			Add,
			[Token(Token = "0x4002B1A")]
			Track
		}

		[Token(Token = "0x4001E93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x65D994", Offset = "0x65D994")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65D994", Offset = "0x65D994")]
		public MovementOption movementOption;

		[Token(Token = "0x4001E94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x65D9F4", Offset = "0x65D9F4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65D9F4", Offset = "0x65D9F4")]
		public float trackMaxDistance;

		[Token(Token = "0x4001E95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		protected Rigidbody rigidbodyToFollow;

		[Token(Token = "0x4001E96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		protected Rigidbody rigidbodyToChange;

		[Token(Token = "0x4001E97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		protected float maxDistanceDelta;

		[Token(Token = "0x600204B")]
		[Address(RVA = "0x93C834", Offset = "0x93C834", VA = "0x93C834", Slot = "4")]
		public override void Follow()
		{
		}

		[Token(Token = "0x600204C")]
		[Address(RVA = "0x93C868", Offset = "0x93C868", VA = "0x93C868", Slot = "16")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x600204D")]
		[Address(RVA = "0x93C870", Offset = "0x93C870", VA = "0x93C870", Slot = "17")]
		protected virtual void FixedUpdate()
		{
		}

		[Token(Token = "0x600204E")]
		[Address(RVA = "0x93C87C", Offset = "0x93C87C", VA = "0x93C87C", Slot = "18")]
		protected virtual void CacheRigidbodies()
		{
		}

		[Token(Token = "0x600204F")]
		[Address(RVA = "0x93C9D4", Offset = "0x93C9D4", VA = "0x93C9D4", Slot = "7")]
		protected override Vector3 GetPositionToFollow()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002050")]
		[Address(RVA = "0x93CA94", Offset = "0x93CA94", VA = "0x93CA94", Slot = "9")]
		protected override Quaternion GetRotationToFollow()
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6002051")]
		[Address(RVA = "0x93CB54", Offset = "0x93CB54", VA = "0x93CB54", Slot = "11")]
		protected override Vector3 GetScaleToFollow()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002052")]
		[Address(RVA = "0x93CC2C", Offset = "0x93CC2C", VA = "0x93CC2C", Slot = "8")]
		protected override void SetPositionOnGameObject(Vector3 newPosition)
		{
		}

		[Token(Token = "0x6002053")]
		[Address(RVA = "0x93CE08", Offset = "0x93CE08", VA = "0x93CE08", Slot = "10")]
		protected override void SetRotationOnGameObject(Quaternion newRotation)
		{
		}

		[Token(Token = "0x6002054")]
		[Address(RVA = "0x93CFF8", Offset = "0x93CFF8", VA = "0x93CFF8", Slot = "19")]
		protected virtual void TrackPosition(Vector3 newPosition)
		{
		}

		[Token(Token = "0x6002055")]
		[Address(RVA = "0x93D30C", Offset = "0x93D30C", VA = "0x93D30C", Slot = "20")]
		protected virtual void TrackRotation(Quaternion newRotation)
		{
		}

		[Token(Token = "0x6002056")]
		[Address(RVA = "0x93D550", Offset = "0x93D550", VA = "0x93D550")]
		public VRTK_RigidbodyFollow()
		{
		}
	}
	[Token(Token = "0x2000420")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x64056C", Offset = "0x64056C")]
	public class VRTK_TransformFollow : VRTK_ObjectFollow
	{
		[Token(Token = "0x2000824")]
		public enum FollowMoment
		{
			[Token(Token = "0x4002B1C")]
			OnFixedUpdate,
			[Token(Token = "0x4002B1D")]
			OnUpdate,
			[Token(Token = "0x4002B1E")]
			OnLateUpdate,
			[Token(Token = "0x4002B1F")]
			OnPreRender,
			[Token(Token = "0x4002B20")]
			OnPreCull
		}

		[Token(Token = "0x4001E98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x65DA54", Offset = "0x65DA54")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65DA54", Offset = "0x65DA54")]
		[SerializeField]
		private FollowMoment _moment;

		[Token(Token = "0x4001E99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		protected Transform transformToFollow;

		[Token(Token = "0x4001E9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		protected Transform transformToChange;

		[Token(Token = "0x170001DF")]
		public FollowMoment moment
		{
			[Token(Token = "0x6002057")]
			[Address(RVA = "0x9A7A14", Offset = "0x9A7A14", VA = "0x9A7A14")]
			get
			{
				return default(FollowMoment);
			}
			[Token(Token = "0x6002058")]
			[Address(RVA = "0x9A7A1C", Offset = "0x9A7A1C", VA = "0x9A7A1C")]
			set
			{
			}
		}

		[Token(Token = "0x6002059")]
		[Address(RVA = "0x9A7DAC", Offset = "0x9A7DAC", VA = "0x9A7DAC", Slot = "4")]
		public override void Follow()
		{
		}

		[Token(Token = "0x600205A")]
		[Address(RVA = "0x9A7DE0", Offset = "0x9A7DE0", VA = "0x9A7DE0", Slot = "5")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x600205B")]
		[Address(RVA = "0x9A7FB8", Offset = "0x9A7FB8", VA = "0x9A7FB8", Slot = "16")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x600205C")]
		[Address(RVA = "0x9A8178", Offset = "0x9A8178", VA = "0x9A8178")]
		protected void FixedUpdate()
		{
		}

		[Token(Token = "0x600205D")]
		[Address(RVA = "0x9A8190", Offset = "0x9A8190", VA = "0x9A8190")]
		protected void Update()
		{
		}

		[Token(Token = "0x600205E")]
		[Address(RVA = "0x9A81AC", Offset = "0x9A81AC", VA = "0x9A81AC", Slot = "17")]
		protected virtual void LateUpdate()
		{
		}

		[Token(Token = "0x600205F")]
		[Address(RVA = "0x9A81C8", Offset = "0x9A81C8", VA = "0x9A81C8", Slot = "18")]
		protected virtual void OnCamPreRender(Camera cam)
		{
		}

		[Token(Token = "0x6002060")]
		[Address(RVA = "0x9A82CC", Offset = "0x9A82CC", VA = "0x9A82CC", Slot = "19")]
		protected virtual void OnCamPreCull(Camera cam)
		{
		}

		[Token(Token = "0x6002061")]
		[Address(RVA = "0x9A83D0", Offset = "0x9A83D0", VA = "0x9A83D0", Slot = "7")]
		protected override Vector3 GetPositionToFollow()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002062")]
		[Address(RVA = "0x9A8400", Offset = "0x9A8400", VA = "0x9A8400", Slot = "8")]
		protected override void SetPositionOnGameObject(Vector3 newPosition)
		{
		}

		[Token(Token = "0x6002063")]
		[Address(RVA = "0x9A8458", Offset = "0x9A8458", VA = "0x9A8458", Slot = "9")]
		protected override Quaternion GetRotationToFollow()
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6002064")]
		[Address(RVA = "0x9A8488", Offset = "0x9A8488", VA = "0x9A8488", Slot = "10")]
		protected override void SetRotationOnGameObject(Quaternion newRotation)
		{
		}

		[Token(Token = "0x6002065")]
		[Address(RVA = "0x9A84E8", Offset = "0x9A84E8", VA = "0x9A84E8", Slot = "20")]
		protected virtual void CacheTransforms()
		{
		}

		[Token(Token = "0x6002066")]
		[Address(RVA = "0x9A8638", Offset = "0x9A8638", VA = "0x9A8638")]
		public VRTK_TransformFollow()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000421")]
	public sealed class VRTK_SDKInfo : ISerializationCallbackReceiver
	{
		[Token(Token = "0x4001E9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x65DAC4", Offset = "0x65DAC4")]
		private Type <type>k__BackingField;

		[Token(Token = "0x4001E9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x65DAD4", Offset = "0x65DAD4")]
		private string <originalTypeNameWhenFallbackIsUsed>k__BackingField;

		[Token(Token = "0x4001E9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x65DAE4", Offset = "0x65DAE4")]
		private SDK_DescriptionAttribute <description>k__BackingField;

		[Token(Token = "0x4001E9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private string baseTypeName;

		[Token(Token = "0x4001E9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private string fallbackTypeName;

		[Token(Token = "0x4001EA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private string typeName;

		[Token(Token = "0x4001EA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private int descriptionIndex;

		[Token(Token = "0x170001E0")]
		public Type type
		{
			[Token(Token = "0x6002067")]
			[Address(RVA = "0x93F9A0", Offset = "0x93F9A0", VA = "0x93F9A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66D9FC", Offset = "0x66D9FC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002068")]
			[Address(RVA = "0x93F9A8", Offset = "0x93F9A8", VA = "0x93F9A8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66DA0C", Offset = "0x66DA0C")]
			private set
			{
			}
		}

		[Token(Token = "0x170001E1")]
		public string originalTypeNameWhenFallbackIsUsed
		{
			[Token(Token = "0x6002069")]
			[Address(RVA = "0x93F9B0", Offset = "0x93F9B0", VA = "0x93F9B0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66DA1C", Offset = "0x66DA1C")]
			get
			{
				return null;
			}
			[Token(Token = "0x600206A")]
			[Address(RVA = "0x93F9B8", Offset = "0x93F9B8", VA = "0x93F9B8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66DA2C", Offset = "0x66DA2C")]
			private set
			{
			}
		}

		[Token(Token = "0x170001E2")]
		public SDK_DescriptionAttribute description
		{
			[Token(Token = "0x600206B")]
			[Address(RVA = "0x93F9C0", Offset = "0x93F9C0", VA = "0x93F9C0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66DA3C", Offset = "0x66DA3C")]
			get
			{
				return null;
			}
			[Token(Token = "0x600206C")]
			[Address(RVA = "0x93F9C8", Offset = "0x93F9C8", VA = "0x93F9C8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66DA4C", Offset = "0x66DA4C")]
			private set
			{
			}
		}

		[Token(Token = "0x600206D")]
		public static VRTK_SDKInfo[] Create<BaseType, FallbackType, ActualType>() where BaseType : SDK_Base where FallbackType : BaseType where ActualType : BaseType
		{
			return null;
		}

		[Token(Token = "0x600206E")]
		public static VRTK_SDKInfo[] Create<BaseType, FallbackType>(Type actualType) where BaseType : SDK_Base where FallbackType : BaseType
		{
			return null;
		}

		[Token(Token = "0x600206F")]
		[Address(RVA = "0x93F9D0", Offset = "0x93F9D0", VA = "0x93F9D0")]
		private VRTK_SDKInfo()
		{
		}

		[Token(Token = "0x6002070")]
		[Address(RVA = "0x93F9D8", Offset = "0x93F9D8", VA = "0x93F9D8")]
		public VRTK_SDKInfo(VRTK_SDKInfo infoToCopy)
		{
		}

		[Token(Token = "0x6002071")]
		[Address(RVA = "0x93FAD8", Offset = "0x93FAD8", VA = "0x93FAD8")]
		private void SetUp(Type baseType, Type fallbackType, string actualTypeName, int descriptionIndex)
		{
		}

		[Token(Token = "0x6002072")]
		[Address(RVA = "0x940230", Offset = "0x940230", VA = "0x940230", Slot = "4")]
		public void OnBeforeSerialize()
		{
		}

		[Token(Token = "0x6002073")]
		[Address(RVA = "0x940234", Offset = "0x940234", VA = "0x940234", Slot = "5")]
		public void OnAfterDeserialize()
		{
		}

		[Token(Token = "0x6002074")]
		[Address(RVA = "0x940318", Offset = "0x940318", VA = "0x940318", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6002075")]
		[Address(RVA = "0x940458", Offset = "0x940458", VA = "0x940458")]
		public bool Equals(VRTK_SDKInfo other)
		{
			return default(bool);
		}

		[Token(Token = "0x6002076")]
		[Address(RVA = "0x94045C", Offset = "0x94045C", VA = "0x94045C", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x6002077")]
		[Address(RVA = "0x94039C", Offset = "0x94039C", VA = "0x94039C")]
		public static bool operator ==(VRTK_SDKInfo x, VRTK_SDKInfo y)
		{
			return default(bool);
		}

		[Token(Token = "0x6002078")]
		[Address(RVA = "0x940490", Offset = "0x940490", VA = "0x940490")]
		public static bool operator !=(VRTK_SDKInfo x, VRTK_SDKInfo y)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000422")]
	public sealed class VRTK_SDKManager : MonoBehaviour
	{
		[Token(Token = "0x2000825")]
		public sealed class ScriptingDefineSymbolPredicateInfo
		{
			[Token(Token = "0x4002B21")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public readonly SDK_ScriptingDefineSymbolPredicateAttribute attribute;

			[Token(Token = "0x4002B22")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public readonly MethodInfo methodInfo;

			[Token(Token = "0x6003310")]
			[Address(RVA = "0x947D48", Offset = "0x947D48", VA = "0x947D48")]
			public ScriptingDefineSymbolPredicateInfo(SDK_ScriptingDefineSymbolPredicateAttribute attribute, MethodInfo methodInfo)
			{
			}
		}

		[Token(Token = "0x2000826")]
		public struct LoadedSetupChangeEventArgs
		{
			[Token(Token = "0x4002B23")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public readonly VRTK_SDKSetup previousSetup;

			[Token(Token = "0x4002B24")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public readonly VRTK_SDKSetup currentSetup;

			[Token(Token = "0x4002B25")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public readonly string errorMessage;

			[Token(Token = "0x6003311")]
			[Address(RVA = "0x6E1604", Offset = "0x6E1604", VA = "0x6E1604")]
			public LoadedSetupChangeEventArgs(VRTK_SDKSetup previousSetup, VRTK_SDKSetup currentSetup, string errorMessage)
			{
			}
		}

		[Token(Token = "0x2000827")]
		public delegate void LoadedSetupChangeEventHandler(VRTK_SDKManager sender, LoadedSetupChangeEventArgs e);

		[Serializable]
		[Token(Token = "0x2000828")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x645EC8", Offset = "0x645EC8")]
		private sealed class <>c
		{
			[Token(Token = "0x4002B26")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002B27")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Predicate<VRTK_SDKSetup> <>9__83_0;

			[Token(Token = "0x4002B28")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Predicate<VRTK_SDKSetup> <>9__83_1;

			[Token(Token = "0x4002B29")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Func<string, bool> <>9__83_3;

			[Token(Token = "0x4002B2A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static Predicate<VRTK_SDKSetup> <>9__83_2;

			[Token(Token = "0x4002B2B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public static Func<VRTK_SDKSetup, bool> <>9__84_1;

			[Token(Token = "0x4002B2C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public static Func<VRTK_SDKSetup, bool> <>9__84_0;

			[Token(Token = "0x4002B2D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public static Func<VRTK_SDKSetup, bool> <>9__84_3;

			[Token(Token = "0x4002B2E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public static Func<VRTK_SDKSetup, IEnumerable<string>> <>9__84_4;

			[Token(Token = "0x4002B2F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public static Comparison<ScriptingDefineSymbolPredicateInfo> <>9__96_0;

			[Token(Token = "0x4002B30")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public static Func<ScriptingDefineSymbolPredicateInfo, bool> <>9__97_0;

			[Token(Token = "0x4002B31")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public static Func<ScriptingDefineSymbolPredicateInfo, string> <>9__97_1;

			[Token(Token = "0x6003317")]
			[Address(RVA = "0x9474C4", Offset = "0x9474C4", VA = "0x9474C4")]
			public <>c()
			{
			}

			[Token(Token = "0x6003318")]
			[Address(RVA = "0x9474CC", Offset = "0x9474CC", VA = "0x9474CC")]
			internal bool <TryLoadSDKSetupFromList>b__83_0(VRTK_SDKSetup setup)
			{
				return default(bool);
			}

			[Token(Token = "0x6003319")]
			[Address(RVA = "0x9476C4", Offset = "0x9476C4", VA = "0x9476C4")]
			internal bool <TryLoadSDKSetupFromList>b__83_1(VRTK_SDKSetup setup)
			{
				return default(bool);
			}

			[Token(Token = "0x600331A")]
			[Address(RVA = "0x947738", Offset = "0x947738", VA = "0x947738")]
			internal bool <TryLoadSDKSetupFromList>b__83_2(VRTK_SDKSetup setup)
			{
				return default(bool);
			}

			[Token(Token = "0x600331B")]
			[Address(RVA = "0x947844", Offset = "0x947844", VA = "0x947844")]
			internal bool <TryLoadSDKSetupFromList>b__83_3(string vrDeviceName)
			{
				return default(bool);
			}

			[Token(Token = "0x600331C")]
			[Address(RVA = "0x947898", Offset = "0x947898", VA = "0x947898")]
			internal bool <TryLoadSDKSetup>b__84_1(VRTK_SDKSetup setup)
			{
				return default(bool);
			}

			[Token(Token = "0x600331D")]
			[Address(RVA = "0x9478D0", Offset = "0x9478D0", VA = "0x9478D0")]
			internal bool <TryLoadSDKSetup>b__84_0(VRTK_SDKSetup setup)
			{
				return default(bool);
			}

			[Token(Token = "0x600331E")]
			[Address(RVA = "0x9478FC", Offset = "0x9478FC", VA = "0x9478FC")]
			internal bool <TryLoadSDKSetup>b__84_3(VRTK_SDKSetup setup)
			{
				return default(bool);
			}

			[Token(Token = "0x600331F")]
			[Address(RVA = "0x947A18", Offset = "0x947A18", VA = "0x947A18")]
			internal IEnumerable<string> <TryLoadSDKSetup>b__84_4(VRTK_SDKSetup setup)
			{
				return null;
			}

			[Token(Token = "0x6003320")]
			[Address(RVA = "0x947A44", Offset = "0x947A44", VA = "0x947A44")]
			internal int <PopulateAvailableScriptingDefineSymbolPredicateInfos>b__96_0(ScriptingDefineSymbolPredicateInfo x, ScriptingDefineSymbolPredicateInfo y)
			{
				return default(int);
			}

			[Token(Token = "0x6003321")]
			[Address(RVA = "0x947AB0", Offset = "0x947AB0", VA = "0x947AB0")]
			internal bool <PopulateAvailableAndInstalledSDKInfos>b__97_0(ScriptingDefineSymbolPredicateInfo predicateInfo)
			{
				return default(bool);
			}

			[Token(Token = "0x6003322")]
			[Address(RVA = "0x947BA4", Offset = "0x947BA4", VA = "0x947BA4")]
			internal string <PopulateAvailableAndInstalledSDKInfos>b__97_1(ScriptingDefineSymbolPredicateInfo predicateInfo)
			{
				return null;
			}
		}

		[Token(Token = "0x2000829")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x645ED8", Offset = "0x645ED8")]
		private sealed class <>c__DisplayClass84_0
		{
			[Token(Token = "0x4002B32")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string loadedDeviceName;

			[Token(Token = "0x6003323")]
			[Address(RVA = "0x944900", Offset = "0x944900", VA = "0x944900")]
			public <>c__DisplayClass84_0()
			{
			}

			[Token(Token = "0x6003324")]
			[Address(RVA = "0x947BE0", Offset = "0x947BE0", VA = "0x947BE0")]
			internal bool <TryLoadSDKSetup>b__2(VRTK_SDKSetup setup)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x200082A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x645EE8", Offset = "0x645EE8")]
		private sealed class <>c__DisplayClass91_0
		{
			[Token(Token = "0x4002B33")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string loadedDeviceName;

			[Token(Token = "0x6003325")]
			[Address(RVA = "0x947C5C", Offset = "0x947C5C", VA = "0x947C5C")]
			public <>c__DisplayClass91_0()
			{
			}

			[Token(Token = "0x6003326")]
			[Address(RVA = "0x947C64", Offset = "0x947C64", VA = "0x947C64")]
			internal bool <FinishSDKSetupLoading>b__0(VRTK_SDKSetup setup)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x200082B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x645EF8", Offset = "0x645EF8")]
		private sealed class <FinishSDKSetupLoading>d__91 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002B34")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002B35")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002B36")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private <>c__DisplayClass91_0 <>8__1;

			[Token(Token = "0x4002B37")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public VRTK_SDKManager <>4__this;

			[Token(Token = "0x4002B38")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public VRTK_SDKSetup[] sdkSetups;

			[Token(Token = "0x4002B39")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public VRTK_SDKSetup previousLoadedSetup;

			[Token(Token = "0x1700034D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600332A")]
				[Address(RVA = "0x948E30", Offset = "0x948E30", VA = "0x948E30", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700034E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600332C")]
				[Address(RVA = "0x948EA0", Offset = "0x948EA0", VA = "0x948EA0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003327")]
			[Address(RVA = "0x94717C", Offset = "0x94717C", VA = "0x94717C")]
			[DebuggerHidden]
			public <FinishSDKSetupLoading>d__91(int <>1__state)
			{
			}

			[Token(Token = "0x6003328")]
			[Address(RVA = "0x948540", Offset = "0x948540", VA = "0x948540", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003329")]
			[Address(RVA = "0x948544", Offset = "0x948544", VA = "0x948544", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600332B")]
			[Address(RVA = "0x948E38", Offset = "0x948E38", VA = "0x948E38", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200082C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x645F08", Offset = "0x645F08")]
		private sealed class <CheckLeftControllerReady>d__93 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002B3A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002B3B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002B3C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VRTK_SDKManager <>4__this;

			[Token(Token = "0x4002B3D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private WaitForSeconds <delayInstruction>5__2;

			[Token(Token = "0x4002B3E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int <maxCheckTime>5__3;

			[Token(Token = "0x1700034F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6003330")]
				[Address(RVA = "0x9481A4", Offset = "0x9481A4", VA = "0x9481A4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000350")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003332")]
				[Address(RVA = "0x948214", Offset = "0x948214", VA = "0x948214", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600332D")]
			[Address(RVA = "0x94730C", Offset = "0x94730C", VA = "0x94730C")]
			[DebuggerHidden]
			public <CheckLeftControllerReady>d__93(int <>1__state)
			{
			}

			[Token(Token = "0x600332E")]
			[Address(RVA = "0x947D80", Offset = "0x947D80", VA = "0x947D80", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600332F")]
			[Address(RVA = "0x947D84", Offset = "0x947D84", VA = "0x947D84", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003331")]
			[Address(RVA = "0x9481AC", Offset = "0x9481AC", VA = "0x9481AC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200082D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x645F18", Offset = "0x645F18")]
		private sealed class <CheckRightControllerReady>d__94 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002B3F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002B40")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002B41")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VRTK_SDKManager <>4__this;

			[Token(Token = "0x4002B42")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private WaitForSeconds <delayInstruction>5__2;

			[Token(Token = "0x4002B43")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int <maxCheckTime>5__3;

			[Token(Token = "0x17000351")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6003336")]
				[Address(RVA = "0x9484C8", Offset = "0x9484C8", VA = "0x9484C8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000352")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003338")]
				[Address(RVA = "0x948538", Offset = "0x948538", VA = "0x948538", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003333")]
			[Address(RVA = "0x947338", Offset = "0x947338", VA = "0x947338")]
			[DebuggerHidden]
			public <CheckRightControllerReady>d__94(int <>1__state)
			{
			}

			[Token(Token = "0x6003334")]
			[Address(RVA = "0x94821C", Offset = "0x94821C", VA = "0x94821C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003335")]
			[Address(RVA = "0x948220", Offset = "0x948220", VA = "0x948220", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003337")]
			[Address(RVA = "0x9484D0", Offset = "0x9484D0", VA = "0x9484D0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200082E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x645F28", Offset = "0x645F28")]
		private sealed class <>c__DisplayClass96_0
		{
			[Token(Token = "0x4002B44")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public MethodInfo methodInfo;

			[Token(Token = "0x6003339")]
			[Address(RVA = "0x947364", Offset = "0x947364", VA = "0x947364")]
			public <>c__DisplayClass96_0()
			{
			}

			[Token(Token = "0x600333A")]
			[Address(RVA = "0x947CD4", Offset = "0x947CD4", VA = "0x947CD4")]
			internal ScriptingDefineSymbolPredicateInfo <PopulateAvailableScriptingDefineSymbolPredicateInfos>b__1(SDK_ScriptingDefineSymbolPredicateAttribute predicateAttribute)
			{
				return null;
			}
		}

		[Token(Token = "0x200082F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x645F38", Offset = "0x645F38")]
		private sealed class <>c__DisplayClass98_0<BaseType, FallbackType> where BaseType : SDK_Base where FallbackType : BaseType
		{
			[Token(Token = "0x4002B45")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Type baseType;

			[Token(Token = "0x4002B46")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Type fallbackType;

			[Token(Token = "0x4002B47")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ICollection<string> symbolsOfInstalledSDKs;

			[Token(Token = "0x600333B")]
			public <>c__DisplayClass98_0()
			{
			}

			[Token(Token = "0x600333C")]
			internal bool <PopulateAvailableAndInstalledSDKInfos>b__0(Type type)
			{
				return default(bool);
			}

			[Token(Token = "0x600333D")]
			internal bool <PopulateAvailableAndInstalledSDKInfos>b__2(VRTK_SDKInfo info)
			{
				return default(bool);
			}
		}

		[Serializable]
		[Token(Token = "0x2000830")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x645F48", Offset = "0x645F48")]
		private sealed class <>c__98<BaseType, FallbackType> where BaseType : SDK_Base where FallbackType : BaseType
		{
			[Token(Token = "0x4002B48")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c__98<BaseType, FallbackType> <>9;

			[Token(Token = "0x4002B49")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static Comparison<VRTK_SDKInfo> <>9__98_1;

			[Token(Token = "0x600333F")]
			public <>c__98()
			{
			}

			[Token(Token = "0x6003340")]
			internal int <PopulateAvailableAndInstalledSDKInfos>b__98_1(VRTK_SDKInfo x, VRTK_SDKInfo y)
			{
				return default(int);
			}
		}

		[Token(Token = "0x4001EA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x65DB34", Offset = "0x65DB34")]
		private static ReadOnlyCollection<ScriptingDefineSymbolPredicateInfo> <AvailableScriptingDefineSymbolPredicateInfos>k__BackingField;

		[Token(Token = "0x4001EA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static readonly Dictionary<Type, Type> SDKFallbackTypesByBaseType;

		[Token(Token = "0x4001EA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x65DB44", Offset = "0x65DB44")]
		private static ReadOnlyCollection<VRTK_SDKInfo> <AvailableSystemSDKInfos>k__BackingField;

		[Token(Token = "0x4001EA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x65DB54", Offset = "0x65DB54")]
		private static ReadOnlyCollection<VRTK_SDKInfo> <AvailableBoundariesSDKInfos>k__BackingField;

		[Token(Token = "0x4001EA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x65DB64", Offset = "0x65DB64")]
		private static ReadOnlyCollection<VRTK_SDKInfo> <AvailableHeadsetSDKInfos>k__BackingField;

		[Token(Token = "0x4001EA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x65DB74", Offset = "0x65DB74")]
		private static ReadOnlyCollection<VRTK_SDKInfo> <AvailableControllerSDKInfos>k__BackingField;

		[Token(Token = "0x4001EA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x65DB84", Offset = "0x65DB84")]
		private static ReadOnlyCollection<VRTK_SDKInfo> <InstalledSystemSDKInfos>k__BackingField;

		[Token(Token = "0x4001EA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x65DB94", Offset = "0x65DB94")]
		private static ReadOnlyCollection<VRTK_SDKInfo> <InstalledBoundariesSDKInfos>k__BackingField;

		[Token(Token = "0x4001EAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x65DBA4", Offset = "0x65DBA4")]
		private static ReadOnlyCollection<VRTK_SDKInfo> <InstalledHeadsetSDKInfos>k__BackingField;

		[Token(Token = "0x4001EAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x65DBB4", Offset = "0x65DBB4")]
		private static ReadOnlyCollection<VRTK_SDKInfo> <InstalledControllerSDKInfos>k__BackingField;

		[Token(Token = "0x4001EAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public static HashSet<Behaviour> delayedToggleBehaviours;

		[Token(Token = "0x4001EAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private static VRTK_SDKManager _instance;

		[Token(Token = "0x4001EAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65DBC4", Offset = "0x65DBC4")]
		public bool autoManageScriptDefines;

		[Token(Token = "0x4001EAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<SDK_ScriptingDefineSymbolPredicateAttribute> activeScriptingDefineSymbolsWithoutSDKClasses;

		[Token(Token = "0x4001EB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65DBFC", Offset = "0x65DBFC")]
		public GameObject scriptAliasLeftController;

		[Token(Token = "0x4001EB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65DC34", Offset = "0x65DC34")]
		public GameObject scriptAliasRightController;

		[Token(Token = "0x4001EB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65DC6C", Offset = "0x65DC6C")]
		public bool autoManageVRSettings;

		[Token(Token = "0x4001EB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65DCA4", Offset = "0x65DCA4")]
		public bool autoLoadSetup;

		[Token(Token = "0x4001EB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65DCDC", Offset = "0x65DCDC")]
		public VRTK_SDKSetup[] setups;

		[Token(Token = "0x4001EB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x65DD14", Offset = "0x65DD14")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x65DD14", Offset = "0x65DD14")]
		[ObsoleteInspector]
		public bool persistOnLoad;

		[Token(Token = "0x4001EB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private VRTK_SDKSetup _loadedSetup;

		[Token(Token = "0x4001EB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private static HashSet<VRTK_SDKInfo> _previouslyUsedSetupInfos;

		[Token(Token = "0x4001EB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x65DD84", Offset = "0x65DD84")]
		private ReadOnlyCollection<Behaviour> <behavioursToToggleOnLoadedSetupChange>k__BackingField;

		[Token(Token = "0x4001EB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private List<Behaviour> _behavioursToToggleOnLoadedSetupChange;

		[Token(Token = "0x4001EBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Dictionary<Behaviour, bool> _behavioursInitialState;

		[Token(Token = "0x4001EBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Coroutine checkLeftControllerReadyRoutine;

		[Token(Token = "0x4001EBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Coroutine checkRightControllerReadyRoutine;

		[Token(Token = "0x4001EBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private float checkControllerReadyDelay;

		[Token(Token = "0x4001EBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private int checkControllerValidTimer;

		[Token(Token = "0x170001E3")]
		public static ReadOnlyCollection<ScriptingDefineSymbolPredicateInfo> AvailableScriptingDefineSymbolPredicateInfos
		{
			[Token(Token = "0x6002079")]
			[Address(RVA = "0x9421A0", Offset = "0x9421A0", VA = "0x9421A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66DA5C", Offset = "0x66DA5C")]
			get
			{
				return null;
			}
			[Token(Token = "0x600207A")]
			[Address(RVA = "0x942208", Offset = "0x942208", VA = "0x942208")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66DA6C", Offset = "0x66DA6C")]
			private set
			{
			}
		}

		[Token(Token = "0x170001E4")]
		public static ReadOnlyCollection<VRTK_SDKInfo> AvailableSystemSDKInfos
		{
			[Token(Token = "0x600207B")]
			[Address(RVA = "0x942274", Offset = "0x942274", VA = "0x942274")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66DA7C", Offset = "0x66DA7C")]
			get
			{
				return null;
			}
			[Token(Token = "0x600207C")]
			[Address(RVA = "0x9422DC", Offset = "0x9422DC", VA = "0x9422DC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66DA8C", Offset = "0x66DA8C")]
			private set
			{
			}
		}

		[Token(Token = "0x170001E5")]
		public static ReadOnlyCollection<VRTK_SDKInfo> AvailableBoundariesSDKInfos
		{
			[Token(Token = "0x600207D")]
			[Address(RVA = "0x942348", Offset = "0x942348", VA = "0x942348")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66DA9C", Offset = "0x66DA9C")]
			get
			{
				return null;
			}
			[Token(Token = "0x600207E")]
			[Address(RVA = "0x9423B0", Offset = "0x9423B0", VA = "0x9423B0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66DAAC", Offset = "0x66DAAC")]
			private set
			{
			}
		}

		[Token(Token = "0x170001E6")]
		public static ReadOnlyCollection<VRTK_SDKInfo> AvailableHeadsetSDKInfos
		{
			[Token(Token = "0x600207F")]
			[Address(RVA = "0x94241C", Offset = "0x94241C", VA = "0x94241C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66DABC", Offset = "0x66DABC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002080")]
			[Address(RVA = "0x942484", Offset = "0x942484", VA = "0x942484")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66DACC", Offset = "0x66DACC")]
			private set
			{
			}
		}

		[Token(Token = "0x170001E7")]
		public static ReadOnlyCollection<VRTK_SDKInfo> AvailableControllerSDKInfos
		{
			[Token(Token = "0x6002081")]
			[Address(RVA = "0x9424F0", Offset = "0x9424F0", VA = "0x9424F0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66DADC", Offset = "0x66DADC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002082")]
			[Address(RVA = "0x942558", Offset = "0x942558", VA = "0x942558")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66DAEC", Offset = "0x66DAEC")]
			private set
			{
			}
		}

		[Token(Token = "0x170001E8")]
		public static ReadOnlyCollection<VRTK_SDKInfo> InstalledSystemSDKInfos
		{
			[Token(Token = "0x6002083")]
			[Address(RVA = "0x9425C4", Offset = "0x9425C4", VA = "0x9425C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66DAFC", Offset = "0x66DAFC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002084")]
			[Address(RVA = "0x94262C", Offset = "0x94262C", VA = "0x94262C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66DB0C", Offset = "0x66DB0C")]
			private set
			{
			}
		}

		[Token(Token = "0x170001E9")]
		public static ReadOnlyCollection<VRTK_SDKInfo> InstalledBoundariesSDKInfos
		{
			[Token(Token = "0x6002085")]
			[Address(RVA = "0x942698", Offset = "0x942698", VA = "0x942698")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66DB1C", Offset = "0x66DB1C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002086")]
			[Address(RVA = "0x942700", Offset = "0x942700", VA = "0x942700")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66DB2C", Offset = "0x66DB2C")]
			private set
			{
			}
		}

		[Token(Token = "0x170001EA")]
		public static ReadOnlyCollection<VRTK_SDKInfo> InstalledHeadsetSDKInfos
		{
			[Token(Token = "0x6002087")]
			[Address(RVA = "0x94276C", Offset = "0x94276C", VA = "0x94276C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66DB3C", Offset = "0x66DB3C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002088")]
			[Address(RVA = "0x9427D4", Offset = "0x9427D4", VA = "0x9427D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66DB4C", Offset = "0x66DB4C")]
			private set
			{
			}
		}

		[Token(Token = "0x170001EB")]
		public static ReadOnlyCollection<VRTK_SDKInfo> InstalledControllerSDKInfos
		{
			[Token(Token = "0x6002089")]
			[Address(RVA = "0x942840", Offset = "0x942840", VA = "0x942840")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66DB5C", Offset = "0x66DB5C")]
			get
			{
				return null;
			}
			[Token(Token = "0x600208A")]
			[Address(RVA = "0x9428A8", Offset = "0x9428A8", VA = "0x9428A8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66DB6C", Offset = "0x66DB6C")]
			private set
			{
			}
		}

		[Token(Token = "0x170001EC")]
		public static VRTK_SDKManager instance
		{
			[Token(Token = "0x600208B")]
			[Address(RVA = "0x942914", Offset = "0x942914", VA = "0x942914")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001ED")]
		public VRTK_SDKSetup loadedSetup
		{
			[Token(Token = "0x6002097")]
			[Address(RVA = "0x94326C", Offset = "0x94326C", VA = "0x94326C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002098")]
			[Address(RVA = "0x9448E8", Offset = "0x9448E8", VA = "0x9448E8")]
			private set
			{
			}
		}

		[Token(Token = "0x170001EE")]
		public ReadOnlyCollection<Behaviour> behavioursToToggleOnLoadedSetupChange
		{
			[Token(Token = "0x6002099")]
			[Address(RVA = "0x9448F0", Offset = "0x9448F0", VA = "0x9448F0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66DB7C", Offset = "0x66DB7C")]
			get
			{
				return null;
			}
			[Token(Token = "0x600209A")]
			[Address(RVA = "0x9448F8", Offset = "0x9448F8", VA = "0x9448F8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66DB8C", Offset = "0x66DB8C")]
			private set
			{
			}
		}

		[Token(Token = "0x14000137")]
		public event LoadedSetupChangeEventHandler LoadedSetupChanged
		{
			[Token(Token = "0x600209B")]
			[Address(RVA = "0x943094", Offset = "0x943094", VA = "0x943094")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66DB9C", Offset = "0x66DB9C")]
			add
			{
			}
			[Token(Token = "0x600209C")]
			[Address(RVA = "0x943180", Offset = "0x943180", VA = "0x943180")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66DBAC", Offset = "0x66DBAC")]
			remove
			{
			}
		}

		[Token(Token = "0x600208C")]
		[Address(RVA = "0x942C1C", Offset = "0x942C1C", VA = "0x942C1C")]
		public static bool ValidInstance()
		{
			return default(bool);
		}

		[Token(Token = "0x600208D")]
		[Address(RVA = "0x934EFC", Offset = "0x934EFC", VA = "0x934EFC")]
		public static bool AttemptAddBehaviourToToggleOnLoadedSetupChange(Behaviour givenBehaviour)
		{
			return default(bool);
		}

		[Token(Token = "0x600208E")]
		[Address(RVA = "0x935354", Offset = "0x935354", VA = "0x935354")]
		public static bool AttemptRemoveBehaviourToToggleOnLoadedSetupChange(Behaviour givenBehaviour)
		{
			return default(bool);
		}

		[Token(Token = "0x600208F")]
		[Address(RVA = "0x942E90", Offset = "0x942E90", VA = "0x942E90")]
		public static void ProcessDelayedToggleBehaviours()
		{
		}

		[Token(Token = "0x6002090")]
		[Address(RVA = "0x93ED48", Offset = "0x93ED48", VA = "0x93ED48")]
		public static bool SubscribeLoadedSetupChanged(LoadedSetupChangeEventHandler callback)
		{
			return default(bool);
		}

		[Token(Token = "0x6002091")]
		[Address(RVA = "0x93EEB8", Offset = "0x93EEB8", VA = "0x93EEB8")]
		public static bool UnsubscribeLoadedSetupChanged(LoadedSetupChangeEventHandler callback)
		{
			return default(bool);
		}

		[Token(Token = "0x6002092")]
		[Address(RVA = "0x940620", Offset = "0x940620", VA = "0x940620")]
		public static VRTK_SDKSetup GetLoadedSDKSetup()
		{
			return null;
		}

		[Token(Token = "0x6002093")]
		[Address(RVA = "0x9433C0", Offset = "0x9433C0", VA = "0x9433C0")]
		public static VRTK_SDKSetup[] GetAllSDKSetups()
		{
			return null;
		}

		[Token(Token = "0x6002094")]
		[Address(RVA = "0x943468", Offset = "0x943468", VA = "0x943468")]
		public static bool AttemptTryLoadSDKSetup(int startIndex, bool tryToReinitialize, params VRTK_SDKSetup[] sdkSetups)
		{
			return default(bool);
		}

		[Token(Token = "0x6002095")]
		[Address(RVA = "0x944044", Offset = "0x944044", VA = "0x944044")]
		public static bool AttemptTryLoadSDKSetupFromList(bool tryUseLastLoadedSetup = true)
		{
			return default(bool);
		}

		[Token(Token = "0x6002096")]
		[Address(RVA = "0x944488", Offset = "0x944488", VA = "0x944488")]
		public static bool AttemptUnloadSDKSetup(bool disableVR = false)
		{
			return default(bool);
		}

		[Token(Token = "0x600209D")]
		[Address(RVA = "0x942CB0", Offset = "0x942CB0", VA = "0x942CB0")]
		public void AddBehaviourToToggleOnLoadedSetupChange(Behaviour behaviour)
		{
		}

		[Token(Token = "0x600209E")]
		[Address(RVA = "0x942E20", Offset = "0x942E20", VA = "0x942E20")]
		public void RemoveBehaviourToToggleOnLoadedSetupChange(Behaviour behaviour)
		{
		}

		[Token(Token = "0x600209F")]
		[Address(RVA = "0x9440EC", Offset = "0x9440EC", VA = "0x9440EC")]
		public void TryLoadSDKSetupFromList(bool tryUseLastLoadedSetup = true)
		{
		}

		[Token(Token = "0x60020A0")]
		[Address(RVA = "0x943528", Offset = "0x943528", VA = "0x943528")]
		public void TryLoadSDKSetup(int startIndex, bool tryToReinitialize, params VRTK_SDKSetup[] sdkSetups)
		{
		}

		[Token(Token = "0x60020A1")]
		[Address(RVA = "0x944530", Offset = "0x944530", VA = "0x944530")]
		public void UnloadSDKSetup(bool disableVR = false)
		{
		}

		[Token(Token = "0x60020A2")]
		[Address(RVA = "0x9457DC", Offset = "0x9457DC", VA = "0x9457DC")]
		static VRTK_SDKManager()
		{
		}

		[Token(Token = "0x60020A3")]
		[Address(RVA = "0x946468", Offset = "0x946468", VA = "0x946468")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60020A4")]
		[Address(RVA = "0x946538", Offset = "0x946538", VA = "0x946538")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60020A5")]
		[Address(RVA = "0x942A3C", Offset = "0x942A3C", VA = "0x942A3C")]
		private void CreateInstance()
		{
		}

		[Token(Token = "0x60020A6")]
		[Address(RVA = "0x94577C", Offset = "0x94577C", VA = "0x94577C")]
		private void OnLoadedSetupChanged(LoadedSetupChangeEventArgs e)
		{
		}

		[Token(Token = "0x60020A7")]
		[Address(RVA = "0x9456C4", Offset = "0x9456C4", VA = "0x9456C4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x66DBBC", Offset = "0x66DBBC")]
		private IEnumerator FinishSDKSetupLoading(VRTK_SDKSetup[] sdkSetups, VRTK_SDKSetup previousLoadedSetup)
		{
			return null;
		}

		[Token(Token = "0x60020A8")]
		[Address(RVA = "0x9471A8", Offset = "0x9471A8", VA = "0x9471A8")]
		private void CheckControllersReady()
		{
		}

		[Token(Token = "0x60020A9")]
		[Address(RVA = "0x947224", Offset = "0x947224", VA = "0x947224")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x66DC20", Offset = "0x66DC20")]
		private IEnumerator CheckLeftControllerReady()
		{
			return null;
		}

		[Token(Token = "0x60020AA")]
		[Address(RVA = "0x947298", Offset = "0x947298", VA = "0x947298")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x66DC84", Offset = "0x66DC84")]
		private IEnumerator CheckRightControllerReady()
		{
			return null;
		}

		[Token(Token = "0x60020AB")]
		[Address(RVA = "0x944F08", Offset = "0x944F08", VA = "0x944F08")]
		private void ToggleBehaviours(bool state)
		{
		}

		[Token(Token = "0x60020AC")]
		[Address(RVA = "0x945A38", Offset = "0x945A38", VA = "0x945A38")]
		private static void PopulateAvailableScriptingDefineSymbolPredicateInfos()
		{
		}

		[Token(Token = "0x60020AD")]
		[Address(RVA = "0x94604C", Offset = "0x94604C", VA = "0x94604C")]
		private static void PopulateAvailableAndInstalledSDKInfos()
		{
		}

		[Token(Token = "0x60020AE")]
		private static void PopulateAvailableAndInstalledSDKInfos<BaseType, FallbackType>(List<VRTK_SDKInfo> availableSDKInfos, List<VRTK_SDKInfo> installedSDKInfos, ICollection<string> symbolsOfInstalledSDKs) where BaseType : SDK_Base where FallbackType : BaseType
		{
		}

		[Token(Token = "0x60020AF")]
		[Address(RVA = "0x94736C", Offset = "0x94736C", VA = "0x94736C")]
		public VRTK_SDKManager()
		{
		}
	}
	[Token(Token = "0x2000423")]
	public sealed class VRTK_SDKSetup : MonoBehaviour
	{
		[Token(Token = "0x2000831")]
		public delegate void LoadEventHandler(VRTK_SDKManager sender, VRTK_SDKSetup setup);

		[Serializable]
		[Token(Token = "0x2000832")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x645F58", Offset = "0x645F58")]
		private sealed class <>c
		{
			[Token(Token = "0x4002B4A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002B4B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<VRTK_SDKInfo, string> <>9__35_0;

			[Token(Token = "0x4002B4C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Action<GameObject, GameObject> <>9__54_0;

			[Token(Token = "0x6003346")]
			[Address(RVA = "0x94BB58", Offset = "0x94BB58", VA = "0x94BB58")]
			public <>c()
			{
			}

			[Token(Token = "0x6003347")]
			[Address(RVA = "0x94BB60", Offset = "0x94BB60", VA = "0x94BB60")]
			internal string <get_usedVRDeviceNames>b__35_0(VRTK_SDKInfo info)
			{
				return null;
			}

			[Token(Token = "0x6003348")]
			[Address(RVA = "0x94BB9C", Offset = "0x94BB9C", VA = "0x94BB9C")]
			internal void <SetupControllers>b__54_0(GameObject scriptAliasGameObject, GameObject actualGameObject)
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000833")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x645F68", Offset = "0x645F68")]
		private sealed class <>c__52<BaseType> where BaseType : SDK_Base
		{
			[Token(Token = "0x4002B4D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c__52<BaseType> <>9;

			[Token(Token = "0x4002B4E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static Func<VRTK_SDKInfo, Type> <>9__52_0;

			[Token(Token = "0x600334A")]
			public <>c__52()
			{
			}

			[Token(Token = "0x600334B")]
			internal Type <GetSDKErrorDescription>b__52_0(VRTK_SDKInfo installedInfo)
			{
				return null;
			}
		}

		[Token(Token = "0x4001EC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65DDA4", Offset = "0x65DDA4")]
		public bool autoPopulateObjectReferences;

		[Token(Token = "0x4001EC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65DDDC", Offset = "0x65DDDC")]
		public GameObject actualBoundaries;

		[Token(Token = "0x4001EC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65DE14", Offset = "0x65DE14")]
		public GameObject actualHeadset;

		[Token(Token = "0x4001EC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65DE4C", Offset = "0x65DE4C")]
		public GameObject actualLeftController;

		[Token(Token = "0x4001EC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65DE84", Offset = "0x65DE84")]
		public GameObject actualRightController;

		[Token(Token = "0x4001EC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65DEBC", Offset = "0x65DEBC")]
		public GameObject modelAliasLeftController;

		[Token(Token = "0x4001EC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65DEF4", Offset = "0x65DEF4")]
		public GameObject modelAliasRightController;

		[Token(Token = "0x4001EC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private VRTK_SDKInfo cachedSystemSDKInfo;

		[Token(Token = "0x4001ECA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private VRTK_SDKInfo cachedBoundariesSDKInfo;

		[Token(Token = "0x4001ECB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private VRTK_SDKInfo cachedHeadsetSDKInfo;

		[Token(Token = "0x4001ECC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private VRTK_SDKInfo cachedControllerSDKInfo;

		[Token(Token = "0x4001ECD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private SDK_BaseSystem cachedSystemSDK;

		[Token(Token = "0x4001ECE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private SDK_BaseBoundaries cachedBoundariesSDK;

		[Token(Token = "0x4001ECF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private SDK_BaseHeadset cachedHeadsetSDK;

		[Token(Token = "0x4001ED0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private SDK_BaseController cachedControllerSDK;

		[Token(Token = "0x170001EF")]
		public VRTK_SDKInfo systemSDKInfo
		{
			[Token(Token = "0x60020B4")]
			[Address(RVA = "0x9457BC", Offset = "0x9457BC", VA = "0x9457BC")]
			get
			{
				return null;
			}
			[Token(Token = "0x60020B5")]
			[Address(RVA = "0x94A17C", Offset = "0x94A17C", VA = "0x94A17C")]
			set
			{
			}
		}

		[Token(Token = "0x170001F0")]
		public VRTK_SDKInfo boundariesSDKInfo
		{
			[Token(Token = "0x60020B6")]
			[Address(RVA = "0x9457C4", Offset = "0x9457C4", VA = "0x9457C4")]
			get
			{
				return null;
			}
			[Token(Token = "0x60020B7")]
			[Address(RVA = "0x94A4D0", Offset = "0x94A4D0", VA = "0x94A4D0")]
			set
			{
			}
		}

		[Token(Token = "0x170001F1")]
		public VRTK_SDKInfo headsetSDKInfo
		{
			[Token(Token = "0x60020B8")]
			[Address(RVA = "0x9457CC", Offset = "0x9457CC", VA = "0x9457CC")]
			get
			{
				return null;
			}
			[Token(Token = "0x60020B9")]
			[Address(RVA = "0x94A5D4", Offset = "0x94A5D4", VA = "0x94A5D4")]
			set
			{
			}
		}

		[Token(Token = "0x170001F2")]
		public VRTK_SDKInfo controllerSDKInfo
		{
			[Token(Token = "0x60020BA")]
			[Address(RVA = "0x9457D4", Offset = "0x9457D4", VA = "0x9457D4")]
			get
			{
				return null;
			}
			[Token(Token = "0x60020BB")]
			[Address(RVA = "0x94A6D8", Offset = "0x94A6D8", VA = "0x94A6D8")]
			set
			{
			}
		}

		[Token(Token = "0x170001F3")]
		public SDK_BaseSystem systemSDK
		{
			[Token(Token = "0x60020BC")]
			[Address(RVA = "0x94A7DC", Offset = "0x94A7DC", VA = "0x94A7DC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001F4")]
		public SDK_BaseBoundaries boundariesSDK
		{
			[Token(Token = "0x60020BD")]
			[Address(RVA = "0x94A954", Offset = "0x94A954", VA = "0x94A954")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001F5")]
		public SDK_BaseHeadset headsetSDK
		{
			[Token(Token = "0x60020BE")]
			[Address(RVA = "0x94AACC", Offset = "0x94AACC", VA = "0x94AACC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001F6")]
		public SDK_BaseController controllerSDK
		{
			[Token(Token = "0x60020BF")]
			[Address(RVA = "0x94802C", Offset = "0x94802C", VA = "0x94802C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001F7")]
		public string[] usedVRDeviceNames
		{
			[Token(Token = "0x60020C0")]
			[Address(RVA = "0x94546C", Offset = "0x94546C", VA = "0x94546C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001F8")]
		public bool isValid
		{
			[Token(Token = "0x60020C1")]
			[Address(RVA = "0x9448B4", Offset = "0x9448B4", VA = "0x9448B4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x14000138")]
		public event LoadEventHandler Loaded
		{
			[Token(Token = "0x60020B0")]
			[Address(RVA = "0x949DCC", Offset = "0x949DCC", VA = "0x949DCC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66DCE8", Offset = "0x66DCE8")]
			add
			{
			}
			[Token(Token = "0x60020B1")]
			[Address(RVA = "0x949EB8", Offset = "0x949EB8", VA = "0x949EB8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66DCF8", Offset = "0x66DCF8")]
			remove
			{
			}
		}

		[Token(Token = "0x14000139")]
		public event LoadEventHandler Unloaded
		{
			[Token(Token = "0x60020B2")]
			[Address(RVA = "0x949FA4", Offset = "0x949FA4", VA = "0x949FA4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66DD08", Offset = "0x66DD08")]
			add
			{
			}
			[Token(Token = "0x60020B3")]
			[Address(RVA = "0x94A090", Offset = "0x94A090", VA = "0x94A090")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66DD18", Offset = "0x66DD18")]
			remove
			{
			}
		}

		[Token(Token = "0x60020C2")]
		[Address(RVA = "0x94A280", Offset = "0x94A280", VA = "0x94A280")]
		public void PopulateObjectReferences(bool force)
		{
		}

		[Token(Token = "0x60020C3")]
		[Address(RVA = "0x944908", Offset = "0x944908", VA = "0x944908")]
		public string[] GetSimplifiedErrorDescriptions()
		{
			return null;
		}

		[Token(Token = "0x60020C4")]
		[Address(RVA = "0x948B00", Offset = "0x948B00", VA = "0x948B00")]
		public void OnLoaded(VRTK_SDKManager sender)
		{
		}

		[Token(Token = "0x60020C5")]
		[Address(RVA = "0x945194", Offset = "0x945194", VA = "0x945194")]
		public void OnUnloaded(VRTK_SDKManager sender)
		{
		}

		[Token(Token = "0x60020C6")]
		[Address(RVA = "0x94B818", Offset = "0x94B818", VA = "0x94B818")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60020C7")]
		private static void HandleSDKGetter<BaseType>(string prettyName, VRTK_SDKInfo info, IEnumerable<VRTK_SDKInfo> installedInfos) where BaseType : SDK_Base
		{
		}

		[Token(Token = "0x60020C8")]
		private static string GetSDKErrorDescription<BaseType>(string prettyName, VRTK_SDKInfo info, IEnumerable<VRTK_SDKInfo> installedInfos) where BaseType : SDK_Base
		{
			return null;
		}

		[Token(Token = "0x60020C9")]
		[Address(RVA = "0x94AC44", Offset = "0x94AC44", VA = "0x94AC44")]
		private void SetupHeadset()
		{
		}

		[Token(Token = "0x60020CA")]
		[Address(RVA = "0x94AD48", Offset = "0x94AD48", VA = "0x94AD48")]
		public void SetupControllers()
		{
		}

		[Token(Token = "0x60020CB")]
		[Address(RVA = "0x94B8C4", Offset = "0x94B8C4", VA = "0x94B8C4")]
		public VRTK_SDKSetup()
		{
		}

		[Token(Token = "0x60020CC")]
		[Address(RVA = "0x94BA04", Offset = "0x94BA04", VA = "0x94BA04")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66DD28", Offset = "0x66DD28")]
		private void <OnLoaded>b__48_0(SDK_Base sdkBase)
		{
		}

		[Token(Token = "0x60020CD")]
		[Address(RVA = "0x94BA40", Offset = "0x94BA40", VA = "0x94BA40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66DD38", Offset = "0x66DD38")]
		private void <OnLoaded>b__48_1(SDK_Base sdkBase)
		{
		}

		[Token(Token = "0x60020CE")]
		[Address(RVA = "0x94BA7C", Offset = "0x94BA7C", VA = "0x94BA7C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66DD48", Offset = "0x66DD48")]
		private void <OnUnloaded>b__49_0(SDK_Base sdkBase)
		{
		}

		[Token(Token = "0x60020CF")]
		[Address(RVA = "0x94BAB8", Offset = "0x94BAB8", VA = "0x94BAB8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66DD58", Offset = "0x66DD58")]
		private void <OnUnloaded>b__49_1(SDK_Base sdkBase)
		{
		}
	}
	[Token(Token = "0x2000424")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x6405A4", Offset = "0x6405A4")]
	public sealed class VRTK_AdaptiveQuality : MonoBehaviour
	{
		[Token(Token = "0x2000834")]
		private sealed class AdaptiveSetting<T>
		{
			[Token(Token = "0x4002B4F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x664EF8", Offset = "0x664EF8")]
			private T <previousValue>k__BackingField;

			[Token(Token = "0x4002B50")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x664F08", Offset = "0x664F08")]
			private int <lastChangeFrameCount>k__BackingField;

			[Token(Token = "0x4002B51")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public readonly int increaseFrameCost;

			[Token(Token = "0x4002B52")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public readonly int decreaseFrameCost;

			[Token(Token = "0x4002B53")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private T _currentValue;

			[Token(Token = "0x17000353")]
			public T currentValue
			{
				[Token(Token = "0x600334C")]
				get
				{
					return (T)null;
				}
				[Token(Token = "0x600334D")]
				set
				{
				}
			}

			[Token(Token = "0x17000354")]
			public T previousValue
			{
				[Token(Token = "0x600334E")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x672E24", Offset = "0x672E24")]
				get
				{
					return (T)null;
				}
				[Token(Token = "0x600334F")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x672E34", Offset = "0x672E34")]
				private set
				{
				}
			}

			[Token(Token = "0x17000355")]
			public int lastChangeFrameCount
			{
				[Token(Token = "0x6003350")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x672E44", Offset = "0x672E44")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x6003351")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x672E54", Offset = "0x672E54")]
				private set
				{
				}
			}

			[Token(Token = "0x6003352")]
			public AdaptiveSetting(T currentValue, int increaseFrameCost, int decreaseFrameCost)
			{
			}
		}

		[Token(Token = "0x2000835")]
		private static class CommandLineArguments
		{
			[Token(Token = "0x4002B54")]
			public const string Disable = "-noaq";

			[Token(Token = "0x4002B55")]
			public const string MinimumRenderScale = "-aqminscale";

			[Token(Token = "0x4002B56")]
			public const string MaximumRenderScale = "-aqmaxscale";

			[Token(Token = "0x4002B57")]
			public const string MaximumRenderTargetDimension = "-aqmaxres";

			[Token(Token = "0x4002B58")]
			public const string RenderScaleFillRateStepSizeInPercent = "-aqfillratestep";

			[Token(Token = "0x4002B59")]
			public const string OverrideRenderScaleLevel = "-aqoverride";

			[Token(Token = "0x4002B5A")]
			public const string DrawDebugVisualization = "-vrdebug";

			[Token(Token = "0x4002B5B")]
			public const string MSAALevel = "-msaa";
		}

		[Token(Token = "0x2000836")]
		private static class KeyboardShortcuts
		{
			[Token(Token = "0x4002B5C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly KeyCode[] Modifiers;

			[Token(Token = "0x4002B5D")]
			public const KeyCode ToggleDrawDebugVisualization = KeyCode.F1;

			[Token(Token = "0x4002B5E")]
			public const KeyCode ToggleOverrideRenderScale = KeyCode.F2;

			[Token(Token = "0x4002B5F")]
			public const KeyCode DecreaseOverrideRenderScaleLevel = KeyCode.F3;

			[Token(Token = "0x4002B60")]
			public const KeyCode IncreaseOverrideRenderScaleLevel = KeyCode.F4;
		}

		[Token(Token = "0x2000837")]
		private static class ShaderPropertyIDs
		{
			[Token(Token = "0x4002B61")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly int RenderScaleLevelsCount;

			[Token(Token = "0x4002B62")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public static readonly int DefaultRenderViewportScaleLevel;

			[Token(Token = "0x4002B63")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static readonly int CurrentRenderViewportScaleLevel;

			[Token(Token = "0x4002B64")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public static readonly int CurrentRenderScaleLevel;

			[Token(Token = "0x4002B65")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static readonly int LastFrameIsInBudget;
		}

		[Token(Token = "0x2000838")]
		private sealed class Timing
		{
			[Token(Token = "0x4002B66")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private readonly float[] buffer;

			[Token(Token = "0x4002B67")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private int bufferIndex;

			[Token(Token = "0x6003355")]
			[Address(RVA = "0x7DA430", Offset = "0x7DA430", VA = "0x7DA430")]
			public void SaveCurrentFrameTiming()
			{
			}

			[Token(Token = "0x6003356")]
			[Address(RVA = "0x7DB31C", Offset = "0x7DB31C", VA = "0x7DB31C")]
			public float GetFrameTiming(int framesAgo)
			{
				return default(float);
			}

			[Token(Token = "0x6003357")]
			[Address(RVA = "0x7DB0E0", Offset = "0x7DB0E0", VA = "0x7DB0E0")]
			public bool WasFrameTimingBad(int framesAgo, float thresholdInMilliseconds, int lastChangeFrameCount, int changeFrameCost)
			{
				return default(bool);
			}

			[Token(Token = "0x6003358")]
			[Address(RVA = "0x7DB290", Offset = "0x7DB290", VA = "0x7DB290")]
			public bool WasFrameTimingGood(int framesAgo, float thresholdInMilliseconds, int lastChangeFrameCount, int changeFrameCost)
			{
				return default(bool);
			}

			[Token(Token = "0x6003359")]
			[Address(RVA = "0x7DB16C", Offset = "0x7DB16C", VA = "0x7DB16C")]
			public bool WillFrameTimingBeBad(float extrapolationThresholdInMilliseconds, float thresholdInMilliseconds, int lastChangeFrameCount, int changeFrameCost)
			{
				return default(bool);
			}

			[Token(Token = "0x600335A")]
			[Address(RVA = "0x7DB66C", Offset = "0x7DB66C", VA = "0x7DB66C")]
			private static bool AreFramesAvailable(int framesAgo, int lastChangeFrameCount, int changeFrameCost)
			{
				return default(bool);
			}

			[Token(Token = "0x600335B")]
			[Address(RVA = "0x7D8544", Offset = "0x7D8544", VA = "0x7D8544")]
			public Timing()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000839")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x645F78", Offset = "0x645F78")]
		private sealed class <>c
		{
			[Token(Token = "0x4002B68")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002B69")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Predicate<float> <>9__51_0;

			[Token(Token = "0x600335D")]
			[Address(RVA = "0x7DB4BC", Offset = "0x7DB4BC", VA = "0x7DB4BC")]
			public <>c()
			{
			}

			[Token(Token = "0x600335E")]
			[Address(RVA = "0x7DB4C4", Offset = "0x7DB4C4", VA = "0x7DB4C4")]
			internal bool <UpdateRenderScaleLevels>b__51_0(float renderScale)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4001ED1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65DF8C", Offset = "0x65DF8C")]
		public bool drawDebugVisualization;

		[Token(Token = "0x4001ED2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65DFC4", Offset = "0x65DFC4")]
		public bool allowKeyboardShortcuts;

		[Token(Token = "0x4001ED3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65DFFC", Offset = "0x65DFFC")]
		public bool allowCommandLineArguments;

		[Token(Token = "0x4001ED4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65E034", Offset = "0x65E034")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x65E034", Offset = "0x65E034")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x65E034", Offset = "0x65E034")]
		public int msaaLevel;

		[Token(Token = "0x4001ED5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65E0AC", Offset = "0x65E0AC")]
		public bool scaleRenderViewport;

		[Token(Token = "0x4001ED6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65E0E4", Offset = "0x65E0E4")]
		[AttributeAttribute(Name = "MinMaxRangeAttribute", RVA = "0x65E0E4", Offset = "0x65E0E4")]
		public Limits2D renderScaleLimits;

		[Token(Token = "0x4001ED7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x65E13C", Offset = "0x65E13C")]
		[ObsoleteInspector]
		public float minimumRenderScale;

		[Token(Token = "0x4001ED8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x65E188", Offset = "0x65E188")]
		[ObsoleteInspector]
		public float maximumRenderScale;

		[Token(Token = "0x4001ED9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65E1D4", Offset = "0x65E1D4")]
		public int maximumRenderTargetDimension;

		[Token(Token = "0x4001EDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65E20C", Offset = "0x65E20C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x65E20C", Offset = "0x65E20C")]
		public int renderScaleFillRateStepSizeInPercent;

		[Token(Token = "0x4001EDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65E264", Offset = "0x65E264")]
		public bool scaleRenderTargetResolution;

		[NonSerialized]
		[Token(Token = "0x4001EDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65E29C", Offset = "0x65E29C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x65E29C", Offset = "0x65E29C")]
		public bool overrideRenderViewportScale;

		[NonSerialized]
		[Token(Token = "0x4001EDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65E2FC", Offset = "0x65E2FC")]
		public int overrideRenderViewportScaleLevel;

		[Token(Token = "0x4001EDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public readonly ReadOnlyCollection<float> renderScales;

		[Token(Token = "0x4001EDF")]
		private const float DefaultFrameDurationInMilliseconds = 11.111111f;

		[Token(Token = "0x4001EE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private readonly AdaptiveSetting<int> renderViewportScaleSetting;

		[Token(Token = "0x4001EE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private readonly AdaptiveSetting<int> renderScaleSetting;

		[Token(Token = "0x4001EE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private readonly List<float> allRenderScales;

		[Token(Token = "0x4001EE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private int defaultRenderViewportScaleLevel;

		[Token(Token = "0x4001EE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private float previousMinimumRenderScale;

		[Token(Token = "0x4001EE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float previousMaximumRenderScale;

		[Token(Token = "0x4001EE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private float previousRenderScaleFillRateStepSizeInPercent;

		[Token(Token = "0x4001EE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private readonly Timing timing;

		[Token(Token = "0x4001EE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int lastRenderViewportScaleLevelBelowRenderScaleLevelFrameCount;

		[Token(Token = "0x4001EE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private bool interleavedReprojectionEnabled;

		[Token(Token = "0x4001EEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x85")]
		private bool hmdDisplayIsOnDesktop;

		[Token(Token = "0x4001EEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private float singleFrameDurationInMilliseconds;

		[Token(Token = "0x4001EEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private GameObject debugVisualizationQuad;

		[Token(Token = "0x4001EED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Material debugVisualizationQuadMaterial;

		[Token(Token = "0x4001EEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private DebugParameterItem.DebugParameterFunction _function;

		[Token(Token = "0x170001F9")]
		public static float CurrentRenderScale
		{
			[Token(Token = "0x60020D0")]
			[Address(RVA = "0x7D8268", Offset = "0x7D8268", VA = "0x7D8268")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170001FA")]
		public Vector2 defaultRenderTargetResolution
		{
			[Token(Token = "0x60020D1")]
			[Address(RVA = "0x7D8298", Offset = "0x7D8298", VA = "0x7D8298")]
			get
			{
				return default(Vector2);
			}
		}

		[Token(Token = "0x170001FB")]
		public Vector2 currentRenderTargetResolution
		{
			[Token(Token = "0x60020D2")]
			[Address(RVA = "0x7D8398", Offset = "0x7D8398", VA = "0x7D8398")]
			get
			{
				return default(Vector2);
			}
		}

		[Token(Token = "0x60020D3")]
		[Address(RVA = "0x7D83C8", Offset = "0x7D83C8", VA = "0x7D83C8")]
		public VRTK_AdaptiveQuality()
		{
		}

		[Token(Token = "0x60020D4")]
		[Address(RVA = "0x7D8304", Offset = "0x7D8304", VA = "0x7D8304")]
		public static Vector2 RenderTargetResolutionForRenderScale(float renderScale)
		{
			return default(Vector2);
		}

		[Token(Token = "0x60020D5")]
		[Address(RVA = "0x7D85A4", Offset = "0x7D85A4", VA = "0x7D85A4")]
		public float BiggestAllowedMaximumRenderScale()
		{
			return default(float);
		}

		[Token(Token = "0x60020D6")]
		[Address(RVA = "0x7D86B4", Offset = "0x7D86B4", VA = "0x7D86B4", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x60020D7")]
		[Address(RVA = "0x7D8B3C", Offset = "0x7D8B3C", VA = "0x7D8B3C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60020D8")]
		[Address(RVA = "0x7D8BA4", Offset = "0x7D8BA4", VA = "0x7D8BA4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60020D9")]
		[Address(RVA = "0x7D925C", Offset = "0x7D925C", VA = "0x7D925C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60020DA")]
		[Address(RVA = "0x7D9494", Offset = "0x7D9494", VA = "0x7D9494")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60020DB")]
		[Address(RVA = "0x7D9114", Offset = "0x7D9114", VA = "0x7D9114")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x60020DC")]
		[Address(RVA = "0x7D94FC", Offset = "0x7D94FC", VA = "0x7D94FC")]
		private void Update()
		{
		}

		[Token(Token = "0x60020DD")]
		[Address(RVA = "0x7DA4CC", Offset = "0x7DA4CC", VA = "0x7DA4CC")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60020DE")]
		[Address(RVA = "0x7DAF10", Offset = "0x7DAF10", VA = "0x7DAF10")]
		private void OnCameraPreCull(Camera camera)
		{
		}

		[Token(Token = "0x60020DF")]
		[Address(RVA = "0x7D8DD0", Offset = "0x7D8DD0", VA = "0x7D8DD0")]
		private void HandleCommandLineArguments()
		{
		}

		[Token(Token = "0x60020E0")]
		[Address(RVA = "0x7D9548", Offset = "0x7D9548", VA = "0x7D9548")]
		private void HandleKeyPresses()
		{
		}

		[Token(Token = "0x60020E1")]
		[Address(RVA = "0x7DAFF4", Offset = "0x7DAFF4", VA = "0x7DAFF4")]
		private void UpdateMSAALevel()
		{
		}

		[Token(Token = "0x60020E2")]
		[Address(RVA = "0x7D9694", Offset = "0x7D9694", VA = "0x7D9694")]
		private void UpdateRenderScaleLevels()
		{
		}

		[Token(Token = "0x60020E3")]
		[Address(RVA = "0x7DA4D0", Offset = "0x7DA4D0", VA = "0x7DA4D0")]
		private void UpdateRenderScale()
		{
		}

		[Token(Token = "0x60020E4")]
		[Address(RVA = "0x7D93A0", Offset = "0x7D93A0", VA = "0x7D93A0")]
		private static void SetRenderScale(float renderScale, float renderViewportScale)
		{
		}

		[Token(Token = "0x60020E5")]
		[Address(RVA = "0x7DB038", Offset = "0x7DB038", VA = "0x7DB038")]
		private int ClampRenderScaleLevel(int renderScaleLevel)
		{
			return default(int);
		}

		[Token(Token = "0x60020E6")]
		[Address(RVA = "0x7D9AAC", Offset = "0x7D9AAC", VA = "0x7D9AAC")]
		private void CreateOrDestroyDebugVisualization()
		{
		}

		[Token(Token = "0x60020E7")]
		[Address(RVA = "0x7DA1D8", Offset = "0x7DA1D8", VA = "0x7DA1D8")]
		private void UpdateDebugVisualization()
		{
		}

		[Token(Token = "0x60020E8")]
		[Address(RVA = "0x7DB3B8", Offset = "0x7DB3B8", VA = "0x7DB3B8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66DD68", Offset = "0x66DD68")]
		private void <OnEnable>b__41_0(bool clicked, out string name, out string value)
		{
		}
	}
	[Token(Token = "0x2000425")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x6405DC", Offset = "0x6405DC")]
	public class VRTK_CustomRaycast : MonoBehaviour
	{
		[Token(Token = "0x4001EEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65E334", Offset = "0x65E334")]
		public LayerMask layersToIgnore;

		[Token(Token = "0x4001EF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65E36C", Offset = "0x65E36C")]
		public QueryTriggerInteraction triggerInteraction;

		[Token(Token = "0x60020E9")]
		[Address(RVA = "0xA24D8C", Offset = "0xA24D8C", VA = "0xA24D8C")]
		public static bool Raycast(VRTK_CustomRaycast customCast, Ray ray, out RaycastHit hitData, LayerMask ignoreLayers, float length = float.PositiveInfinity, QueryTriggerInteraction affectTriggers = QueryTriggerInteraction.UseGlobal)
		{
			return default(bool);
		}

		[Token(Token = "0x60020EA")]
		[Address(RVA = "0xA24EC0", Offset = "0xA24EC0", VA = "0xA24EC0")]
		public static bool Linecast(VRTK_CustomRaycast customCast, Vector3 startPosition, Vector3 endPosition, out RaycastHit hitData, LayerMask ignoreLayers, QueryTriggerInteraction affectTriggers = QueryTriggerInteraction.UseGlobal)
		{
			return default(bool);
		}

		[Token(Token = "0x60020EB")]
		[Address(RVA = "0xA25008", Offset = "0xA25008", VA = "0xA25008")]
		public static bool CapsuleCast(VRTK_CustomRaycast customCast, Vector3 point1, Vector3 point2, float radius, Vector3 direction, float maxDistance, out RaycastHit hitData, LayerMask ignoreLayers, QueryTriggerInteraction affectTriggers = QueryTriggerInteraction.UseGlobal)
		{
			return default(bool);
		}

		[Token(Token = "0x60020EC")]
		[Address(RVA = "0xA2518C", Offset = "0xA2518C", VA = "0xA2518C")]
		public static bool BoxCast(VRTK_CustomRaycast customCast, Vector3 center, Vector3 halfExtents, Vector3 direction, Quaternion orientation, float maxDistance, out RaycastHit hitData, LayerMask ignoreLayers, QueryTriggerInteraction affectTriggers = QueryTriggerInteraction.UseGlobal)
		{
			return default(bool);
		}

		[Token(Token = "0x60020ED")]
		[Address(RVA = "0xA25304", Offset = "0xA25304", VA = "0xA25304", Slot = "4")]
		public virtual bool CustomRaycast(Ray ray, out RaycastHit hitData, float length = float.PositiveInfinity)
		{
			return default(bool);
		}

		[Token(Token = "0x60020EE")]
		[Address(RVA = "0xA25374", Offset = "0xA25374", VA = "0xA25374", Slot = "5")]
		public virtual bool CustomLinecast(Vector3 startPosition, Vector3 endPosition, out RaycastHit hitData)
		{
			return default(bool);
		}

		[Token(Token = "0x60020EF")]
		[Address(RVA = "0xA253F8", Offset = "0xA253F8", VA = "0xA253F8", Slot = "6")]
		public virtual bool CustomCapsuleCast(Vector3 point1, Vector3 point2, float radius, Vector3 direction, float maxDistance, out RaycastHit hitData)
		{
			return default(bool);
		}

		[Token(Token = "0x60020F0")]
		[Address(RVA = "0xA254A4", Offset = "0xA254A4", VA = "0xA254A4", Slot = "7")]
		public virtual bool CustomBoxCast(Vector3 center, Vector3 halfExtents, Vector3 direction, Quaternion orientation, float maxDistance, out RaycastHit hitData)
		{
			return default(bool);
		}

		[Token(Token = "0x60020F1")]
		[Address(RVA = "0xA25560", Offset = "0xA25560", VA = "0xA25560")]
		public VRTK_CustomRaycast()
		{
		}
	}
	[Token(Token = "0x2000426")]
	public static class VRTK_DeviceFinder
	{
		[Token(Token = "0x200083A")]
		public enum Devices
		{
			[Token(Token = "0x4002B6B")]
			Headset,
			[Token(Token = "0x4002B6C")]
			LeftController,
			[Token(Token = "0x4002B6D")]
			RightController
		}

		[Token(Token = "0x200083B")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x645F88", Offset = "0x645F88")]
		public enum Headsets
		{
			[Token(Token = "0x4002B6F")]
			Unknown,
			[Token(Token = "0x4002B70")]
			OculusRift,
			[Token(Token = "0x4002B71")]
			OculusRiftCV1,
			[Token(Token = "0x4002B72")]
			Vive,
			[Token(Token = "0x4002B73")]
			ViveMV,
			[Token(Token = "0x4002B74")]
			ViveDVT,
			[Token(Token = "0x4002B75")]
			OculusRiftES07
		}

		[Token(Token = "0x4001EF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static string cachedHeadsetType;

		[Token(Token = "0x4001EF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static string _tagLeft;

		[Token(Token = "0x4001EF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static string _tagRight;

		[Token(Token = "0x60020F2")]
		[Address(RVA = "0xA2B914", Offset = "0xA2B914", VA = "0xA2B914")]
		public static SDK_BaseController.ControllerType GetCurrentControllerType([Optional] VRTK_ControllerReference controllerReference)
		{
			return default(SDK_BaseController.ControllerType);
		}

		[Token(Token = "0x60020F3")]
		[Address(RVA = "0xA2B97C", Offset = "0xA2B97C", VA = "0xA2B97C")]
		public static uint GetControllerIndex(GameObject controller)
		{
			return default(uint);
		}

		[Token(Token = "0x60020F4")]
		[Address(RVA = "0xA2B9E4", Offset = "0xA2B9E4", VA = "0xA2B9E4")]
		public static GameObject GetControllerByIndex(uint index, bool getActual)
		{
			return null;
		}

		[Token(Token = "0x60020F5")]
		[Address(RVA = "0xA2BA5C", Offset = "0xA2BA5C", VA = "0xA2BA5C")]
		public static Transform GetControllerOrigin(VRTK_ControllerReference controllerReference)
		{
			return null;
		}

		[Token(Token = "0x60020F6")]
		[Address(RVA = "0xA2BAC4", Offset = "0xA2BAC4", VA = "0xA2BAC4")]
		public static Transform DeviceTransform(Devices device)
		{
			return null;
		}

		[Token(Token = "0x60020F7")]
		[Address(RVA = "0xA2BBBC", Offset = "0xA2BBBC", VA = "0xA2BBBC")]
		public static SDK_BaseController.ControllerHand GetControllerHandType(string hand)
		{
			return default(SDK_BaseController.ControllerHand);
		}

		[Token(Token = "0x60020F8")]
		[Address(RVA = "0xA1B904", Offset = "0xA1B904", VA = "0xA1B904")]
		public static SDK_BaseController.ControllerHand GetControllerHand(GameObject controller)
		{
			return default(SDK_BaseController.ControllerHand);
		}

		[Token(Token = "0x60020F9")]
		[Address(RVA = "0xA2A0C4", Offset = "0xA2A0C4", VA = "0xA2A0C4")]
		public static GameObject GetControllerLeftHand(bool getActual = false)
		{
			return null;
		}

		[Token(Token = "0x60020FA")]
		[Address(RVA = "0xA2A12C", Offset = "0xA2A12C", VA = "0xA2A12C")]
		public static GameObject GetControllerRightHand(bool getActual = false)
		{
			return null;
		}

		[Token(Token = "0x60020FB")]
		[Address(RVA = "0xA2BC5C", Offset = "0xA2BC5C", VA = "0xA2BC5C")]
		public static VRTK_ControllerReference GetControllerReferenceLeftHand()
		{
			return null;
		}

		[Token(Token = "0x60020FC")]
		[Address(RVA = "0xA2BCBC", Offset = "0xA2BCBC", VA = "0xA2BCBC")]
		public static VRTK_ControllerReference GetControllerReferenceRightHand()
		{
			return null;
		}

		[Token(Token = "0x60020FD")]
		[Address(RVA = "0xA2BD1C", Offset = "0xA2BD1C", VA = "0xA2BD1C")]
		public static VRTK_ControllerReference GetControllerReferenceForHand(SDK_BaseController.ControllerHand hand)
		{
			return null;
		}

		[Token(Token = "0x60020FE")]
		[Address(RVA = "0xA2BD80", Offset = "0xA2BD80", VA = "0xA2BD80")]
		public static bool IsControllerOfHand(GameObject checkController, SDK_BaseController.ControllerHand hand)
		{
			return default(bool);
		}

		[Token(Token = "0x60020FF")]
		[Address(RVA = "0xA2BE48", Offset = "0xA2BE48", VA = "0xA2BE48")]
		public static bool IsControllerLeftHand(GameObject checkController)
		{
			return default(bool);
		}

		[Token(Token = "0x6002100")]
		[Address(RVA = "0xA2BEB0", Offset = "0xA2BEB0", VA = "0xA2BEB0")]
		public static bool IsControllerRightHand(GameObject checkController)
		{
			return default(bool);
		}

		[Token(Token = "0x6002101")]
		[Address(RVA = "0xA2BF18", Offset = "0xA2BF18", VA = "0xA2BF18")]
		public static SDK_BaseController.ControllerHand GetOppositeHand(SDK_BaseController.ControllerHand currentHand)
		{
			return default(SDK_BaseController.ControllerHand);
		}

		[Token(Token = "0x6002102")]
		[Address(RVA = "0xA1C4BC", Offset = "0xA1C4BC", VA = "0xA1C4BC")]
		public static GameObject GetActualController(GameObject givenController)
		{
			return null;
		}

		[Token(Token = "0x6002103")]
		[Address(RVA = "0xA2BF34", Offset = "0xA2BF34", VA = "0xA2BF34")]
		public static GameObject GetScriptAliasController(GameObject givenController)
		{
			return null;
		}

		[Token(Token = "0x6002104")]
		[Address(RVA = "0xA1CA64", Offset = "0xA1CA64", VA = "0xA1CA64")]
		public static GameObject GetModelAliasController(GameObject givenController)
		{
			return null;
		}

		[Token(Token = "0x6002105")]
		[Address(RVA = "0xA2C08C", Offset = "0xA2C08C", VA = "0xA2C08C")]
		public static SDK_BaseController.ControllerHand GetModelAliasControllerHand(GameObject givenObject)
		{
			return default(SDK_BaseController.ControllerHand);
		}

		[Token(Token = "0x6002106")]
		[Address(RVA = "0xA2C1A4", Offset = "0xA2C1A4", VA = "0xA2C1A4")]
		public static Vector3 GetControllerVelocity(VRTK_ControllerReference controllerReference)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002107")]
		[Address(RVA = "0xA2C20C", Offset = "0xA2C20C", VA = "0xA2C20C")]
		public static Vector3 GetControllerAngularVelocity(VRTK_ControllerReference controllerReference)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002108")]
		[Address(RVA = "0xA2C274", Offset = "0xA2C274", VA = "0xA2C274")]
		public static Vector3 GetHeadsetVelocity()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002109")]
		[Address(RVA = "0xA2C2D4", Offset = "0xA2C2D4", VA = "0xA2C2D4")]
		public static Vector3 GetHeadsetAngularVelocity()
		{
			return default(Vector3);
		}

		[Token(Token = "0x600210A")]
		[Address(RVA = "0xA29A60", Offset = "0xA29A60", VA = "0xA29A60")]
		public static Transform HeadsetTransform()
		{
			return null;
		}

		[Token(Token = "0x600210B")]
		[Address(RVA = "0xA280FC", Offset = "0xA280FC", VA = "0xA280FC")]
		public static Transform HeadsetCamera()
		{
			return null;
		}

		[Token(Token = "0x600210C")]
		[Address(RVA = "0xA2C334", Offset = "0xA2C334", VA = "0xA2C334")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x66DD78", Offset = "0x66DD78")]
		public static void ResetHeadsetTypeCache()
		{
		}

		[Token(Token = "0x600210D")]
		[Address(RVA = "0xA2C3A8", Offset = "0xA2C3A8", VA = "0xA2C3A8")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x66DDB0", Offset = "0x66DDB0")]
		public static Headsets GetHeadsetType(bool summary = false)
		{
			return default(Headsets);
		}

		[Token(Token = "0x600210E")]
		[Address(RVA = "0xA2C71C", Offset = "0xA2C71C", VA = "0xA2C71C")]
		public static string GetHeadsetTypeAsString()
		{
			return null;
		}

		[Token(Token = "0x600210F")]
		[Address(RVA = "0xA2C77C", Offset = "0xA2C77C", VA = "0xA2C77C")]
		public static SDK_BaseHeadset.HeadsetType GetHeadsetType()
		{
			return default(SDK_BaseHeadset.HeadsetType);
		}

		[Token(Token = "0x6002110")]
		[Address(RVA = "0xA29A00", Offset = "0xA29A00", VA = "0xA29A00")]
		public static Transform PlayAreaTransform()
		{
			return null;
		}
	}
	[Token(Token = "0x2000427")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x640614", Offset = "0x640614")]
	public class VRTK_NavMeshData : MonoBehaviour
	{
		[Token(Token = "0x4001EF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65E3A4", Offset = "0x65E3A4")]
		public float distanceLimit;

		[Token(Token = "0x4001EF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65E3DC", Offset = "0x65E3DC")]
		public int validAreas;

		[Token(Token = "0x6002112")]
		[Address(RVA = "0xA81FA8", Offset = "0xA81FA8", VA = "0xA81FA8")]
		public VRTK_NavMeshData()
		{
		}
	}
	[Token(Token = "0x2000428")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x64064C", Offset = "0x64064C")]
	public class VRTK_PolicyList : MonoBehaviour
	{
		[Token(Token = "0x200083C")]
		public enum OperationTypes
		{
			[Token(Token = "0x4002B77")]
			Ignore,
			[Token(Token = "0x4002B78")]
			Include
		}

		[Token(Token = "0x200083D")]
		public enum CheckTypes
		{
			[Token(Token = "0x4002B7A")]
			Tag = 1,
			[Token(Token = "0x4002B7B")]
			Script = 2,
			[Token(Token = "0x4002B7C")]
			Layer = 4,
			[Token(Token = "0x4002B7D")]
			PolicyName = 8
		}

		[Token(Token = "0x4001EF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65E414", Offset = "0x65E414")]
		public OperationTypes operation;

		[Token(Token = "0x4001EF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65E44C", Offset = "0x65E44C")]
		public CheckTypes checkType;

		[Token(Token = "0x4001EF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65E484", Offset = "0x65E484")]
		public List<string> identifiers;

		[Token(Token = "0x4001EF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<PolicyName.PolicyNameData> policyNames;

		[Token(Token = "0x6002113")]
		[Address(RVA = "0x93844C", Offset = "0x93844C", VA = "0x93844C", Slot = "4")]
		public virtual bool Find(GameObject obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6002114")]
		[Address(RVA = "0x93847C", Offset = "0x93847C", VA = "0x93847C")]
		public static bool Check(GameObject obj, VRTK_PolicyList list)
		{
			return default(bool);
		}

		[Token(Token = "0x6002115")]
		[Address(RVA = "0x93852C", Offset = "0x93852C", VA = "0x93852C", Slot = "5")]
		protected virtual bool ScriptCheck(GameObject obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6002116")]
		[Address(RVA = "0x938648", Offset = "0x938648", VA = "0x938648", Slot = "6")]
		protected virtual bool TagCheck(GameObject obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6002117")]
		[Address(RVA = "0x938728", Offset = "0x938728", VA = "0x938728", Slot = "7")]
		protected virtual bool LayerCheck(GameObject obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6002118")]
		[Address(RVA = "0x9387BC", Offset = "0x9387BC", VA = "0x9387BC", Slot = "8")]
		protected virtual bool PolicyNameCheck(GameObject obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6002119")]
		[Address(RVA = "0x9388AC", Offset = "0x9388AC", VA = "0x9388AC", Slot = "9")]
		protected virtual bool TypeCheck(GameObject obj, bool returnState)
		{
			return default(bool);
		}

		[Token(Token = "0x600211A")]
		[Address(RVA = "0x938974", Offset = "0x938974", VA = "0x938974")]
		public VRTK_PolicyList()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000429")]
	public class VRTK_SDKInputOverrideType
	{
		[Token(Token = "0x4001EFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x65E4BC", Offset = "0x65E4BC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65E4BC", Offset = "0x65E4BC")]
		public VRTK_SDKSetup loadedSDKSetup;

		[Token(Token = "0x4001EFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65E51C", Offset = "0x65E51C")]
		public SDK_BaseController.ControllerType controllerType;

		[Token(Token = "0x600211B")]
		[Address(RVA = "0x93EC88", Offset = "0x93EC88", VA = "0x93EC88")]
		public VRTK_SDKInputOverrideType()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200042A")]
	public class VRTK_SDKButtonInputOverrideType : VRTK_SDKInputOverrideType
	{
		[Token(Token = "0x4001EFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x65E554", Offset = "0x65E554")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65E554", Offset = "0x65E554")]
		public VRTK_ControllerEvents.ButtonAlias overrideButton;

		[Token(Token = "0x600211C")]
		[Address(RVA = "0x93EC80", Offset = "0x93EC80", VA = "0x93EC80")]
		public VRTK_SDKButtonInputOverrideType()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200042B")]
	public class VRTK_SDKVector2AxisInputOverrideType : VRTK_SDKInputOverrideType
	{
		[Token(Token = "0x4001EFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x65E5B4", Offset = "0x65E5B4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65E5B4", Offset = "0x65E5B4")]
		public VRTK_ControllerEvents.Vector2AxisAlias overrideAxis;

		[Token(Token = "0x600211D")]
		[Address(RVA = "0x94DDA4", Offset = "0x94DDA4", VA = "0x94DDA4")]
		public VRTK_SDKVector2AxisInputOverrideType()
		{
		}
	}
	[Token(Token = "0x200042C")]
	public class VRTK_SDKInputOverride : VRTK_SDKControllerReady
	{
		[Token(Token = "0x200083E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x645FC0", Offset = "0x645FC0")]
		private sealed class <>c__DisplayClass32_0
		{
			[Token(Token = "0x4002B7E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SDK_BaseController.ControllerType currentControllerType;

			[Token(Token = "0x600335F")]
			[Address(RVA = "0x9408D8", Offset = "0x9408D8", VA = "0x9408D8")]
			public <>c__DisplayClass32_0()
			{
			}

			[Token(Token = "0x6003360")]
			[Address(RVA = "0x942128", Offset = "0x942128", VA = "0x942128")]
			internal bool <GetSelectedModifier>b__1(VRTK_SDKButtonInputOverrideType item)
			{
				return default(bool);
			}
		}

		[Serializable]
		[Token(Token = "0x200083F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x645FD0", Offset = "0x645FD0")]
		private sealed class <>c
		{
			[Token(Token = "0x4002B7F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002B80")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<VRTK_SDKButtonInputOverrideType, bool> <>9__32_0;

			[Token(Token = "0x4002B81")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<VRTK_SDKVector2AxisInputOverrideType, bool> <>9__33_0;

			[Token(Token = "0x6003362")]
			[Address(RVA = "0x941FD0", Offset = "0x941FD0", VA = "0x941FD0")]
			public <>c()
			{
			}

			[Token(Token = "0x6003363")]
			[Address(RVA = "0x941FD8", Offset = "0x941FD8", VA = "0x941FD8")]
			internal bool <GetSelectedModifier>b__32_0(VRTK_SDKButtonInputOverrideType item)
			{
				return default(bool);
			}

			[Token(Token = "0x6003364")]
			[Address(RVA = "0x942080", Offset = "0x942080", VA = "0x942080")]
			internal bool <GetSelectedModifier>b__33_0(VRTK_SDKVector2AxisInputOverrideType item)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000840")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x645FE0", Offset = "0x645FE0")]
		private sealed class <>c__DisplayClass33_0
		{
			[Token(Token = "0x4002B82")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SDK_BaseController.ControllerType currentControllerType;

			[Token(Token = "0x6003365")]
			[Address(RVA = "0x940A90", Offset = "0x940A90", VA = "0x940A90")]
			public <>c__DisplayClass33_0()
			{
			}

			[Token(Token = "0x6003366")]
			[Address(RVA = "0x942164", Offset = "0x942164", VA = "0x942164")]
			internal bool <GetSelectedModifier>b__1(VRTK_SDKVector2AxisInputOverrideType item)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4001EFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x65E614", Offset = "0x65E614")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65E614", Offset = "0x65E614")]
		public VRTK_InteractGrab interactGrabScript;

		[Token(Token = "0x4001EFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65E674", Offset = "0x65E674")]
		public List<VRTK_SDKButtonInputOverrideType> interactGrabOverrides;

		[Token(Token = "0x4001F00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x65E6AC", Offset = "0x65E6AC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65E6AC", Offset = "0x65E6AC")]
		public VRTK_InteractUse interactUseScript;

		[Token(Token = "0x4001F01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65E70C", Offset = "0x65E70C")]
		public List<VRTK_SDKButtonInputOverrideType> interactUseOverrides;

		[Token(Token = "0x4001F02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x65E744", Offset = "0x65E744")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65E744", Offset = "0x65E744")]
		public VRTK_Pointer pointerScript;

		[Token(Token = "0x4001F03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65E7A4", Offset = "0x65E7A4")]
		public List<VRTK_SDKButtonInputOverrideType> pointerActivationOverrides;

		[Token(Token = "0x4001F04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65E7DC", Offset = "0x65E7DC")]
		public List<VRTK_SDKButtonInputOverrideType> pointerSelectionOverrides;

		[Token(Token = "0x4001F05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x65E814", Offset = "0x65E814")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65E814", Offset = "0x65E814")]
		public VRTK_UIPointer uiPointerScript;

		[Token(Token = "0x4001F06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65E874", Offset = "0x65E874")]
		public List<VRTK_SDKButtonInputOverrideType> uiPointerActivationOverrides;

		[Token(Token = "0x4001F07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65E8AC", Offset = "0x65E8AC")]
		public List<VRTK_SDKButtonInputOverrideType> uiPointerSelectionOverrides;

		[Token(Token = "0x4001F08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x65E8E4", Offset = "0x65E8E4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65E8E4", Offset = "0x65E8E4")]
		public VRTK_PointerDirectionIndicator pointerDirectionIndicatorScript;

		[Token(Token = "0x4001F09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65E944", Offset = "0x65E944")]
		public List<VRTK_SDKVector2AxisInputOverrideType> directionIndicatorCoordinateOverrides;

		[Token(Token = "0x4001F0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x65E97C", Offset = "0x65E97C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65E97C", Offset = "0x65E97C")]
		public VRTK_TouchpadControl touchpadControlScript;

		[Token(Token = "0x4001F0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65E9DC", Offset = "0x65E9DC")]
		public List<VRTK_SDKVector2AxisInputOverrideType> touchpadControlCoordinateOverrides;

		[Token(Token = "0x4001F0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65EA14", Offset = "0x65EA14")]
		public List<VRTK_SDKButtonInputOverrideType> touchpadControlActivationOverrides;

		[Token(Token = "0x4001F0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65EA4C", Offset = "0x65EA4C")]
		public List<VRTK_SDKButtonInputOverrideType> touchpadControlModifierOverrides;

		[Token(Token = "0x4001F0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x65EA84", Offset = "0x65EA84")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65EA84", Offset = "0x65EA84")]
		public VRTK_ButtonControl buttonControlScript;

		[Token(Token = "0x4001F0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65EAE4", Offset = "0x65EAE4")]
		public List<VRTK_SDKButtonInputOverrideType> buttonControlForwardOverrides;

		[Token(Token = "0x4001F10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65EB1C", Offset = "0x65EB1C")]
		public List<VRTK_SDKButtonInputOverrideType> buttonControlBackwardOverrides;

		[Token(Token = "0x4001F11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65EB54", Offset = "0x65EB54")]
		public List<VRTK_SDKButtonInputOverrideType> buttonControlLeftOverrides;

		[Token(Token = "0x4001F12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65EB8C", Offset = "0x65EB8C")]
		public List<VRTK_SDKButtonInputOverrideType> buttonControlRightOverrides;

		[Token(Token = "0x4001F13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x65EBC4", Offset = "0x65EBC4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65EBC4", Offset = "0x65EBC4")]
		public VRTK_SlingshotJump slingshotJumpScript;

		[Token(Token = "0x4001F14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65EC24", Offset = "0x65EC24")]
		public List<VRTK_SDKButtonInputOverrideType> slingshotJumpActivationOverrides;

		[Token(Token = "0x4001F15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65EC5C", Offset = "0x65EC5C")]
		public List<VRTK_SDKButtonInputOverrideType> slingshotJumpCancelOverrides;

		[Token(Token = "0x4001F16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x65EC94", Offset = "0x65EC94")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65EC94", Offset = "0x65EC94")]
		public VRTK_MoveInPlace moveInPlaceScript;

		[Token(Token = "0x4001F17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65ECF4", Offset = "0x65ECF4")]
		public List<VRTK_SDKButtonInputOverrideType> moveInPlaceEngageOverrides;

		[Token(Token = "0x4001F18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x65ED2C", Offset = "0x65ED2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65ED2C", Offset = "0x65ED2C")]
		public VRTK_StepMultiplier stepMultiplierScript;

		[Token(Token = "0x4001F19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65ED8C", Offset = "0x65ED8C")]
		public List<VRTK_SDKButtonInputOverrideType> stepMultiplierActivationOverrides;

		[Token(Token = "0x600211E")]
		[Address(RVA = "0x9404AC", Offset = "0x9404AC", VA = "0x9404AC", Slot = "15")]
		public virtual void ForceManage()
		{
		}

		[Token(Token = "0x600211F")]
		[Address(RVA = "0x9404BC", Offset = "0x9404BC", VA = "0x9404BC", Slot = "4")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6002120")]
		[Address(RVA = "0x9404EC", Offset = "0x9404EC", VA = "0x9404EC", Slot = "5")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x6002121")]
		[Address(RVA = "0x94053C", Offset = "0x94053C", VA = "0x94053C", Slot = "14")]
		protected override void ControllerReady(VRTK_ControllerReference controllerReference)
		{
		}

		[Token(Token = "0x6002122")]
		[Address(RVA = "0x9406C0", Offset = "0x9406C0", VA = "0x9406C0", Slot = "16")]
		protected virtual VRTK_SDKButtonInputOverrideType GetSelectedModifier(List<VRTK_SDKButtonInputOverrideType> overrideTypes, VRTK_ControllerReference controllerReference)
		{
			return null;
		}

		[Token(Token = "0x6002123")]
		[Address(RVA = "0x9408E0", Offset = "0x9408E0", VA = "0x9408E0", Slot = "17")]
		protected virtual VRTK_SDKVector2AxisInputOverrideType GetSelectedModifier(List<VRTK_SDKVector2AxisInputOverrideType> overrideTypes, VRTK_ControllerReference controllerReference)
		{
			return null;
		}

		[Token(Token = "0x6002124")]
		[Address(RVA = "0x940A98", Offset = "0x940A98", VA = "0x940A98", Slot = "18")]
		protected virtual void ManageInputs()
		{
		}

		[Token(Token = "0x6002125")]
		[Address(RVA = "0x940B74", Offset = "0x940B74", VA = "0x940B74", Slot = "19")]
		protected virtual VRTK_ControllerReference GetReferenceFromEvents(VRTK_ControllerEvents controllerEvents)
		{
			return null;
		}

		[Token(Token = "0x6002126")]
		[Address(RVA = "0x940C30", Offset = "0x940C30", VA = "0x940C30", Slot = "20")]
		protected virtual VRTK_ControllerReference GetRightThenLeftReference()
		{
			return null;
		}

		[Token(Token = "0x6002127")]
		[Address(RVA = "0x940CD8", Offset = "0x940CD8", VA = "0x940CD8", Slot = "21")]
		protected virtual void ManageInteractGrab()
		{
		}

		[Token(Token = "0x6002128")]
		[Address(RVA = "0x940E10", Offset = "0x940E10", VA = "0x940E10", Slot = "22")]
		protected virtual void ManageInteractUse()
		{
		}

		[Token(Token = "0x6002129")]
		[Address(RVA = "0x940F48", Offset = "0x940F48", VA = "0x940F48", Slot = "23")]
		protected virtual void ManagePointer()
		{
		}

		[Token(Token = "0x600212A")]
		[Address(RVA = "0x941108", Offset = "0x941108", VA = "0x941108", Slot = "24")]
		protected virtual void ManageUIPointer()
		{
		}

		[Token(Token = "0x600212B")]
		[Address(RVA = "0x9412C8", Offset = "0x9412C8", VA = "0x9412C8", Slot = "25")]
		protected virtual void ManagePointerDirectionIndicator()
		{
		}

		[Token(Token = "0x600212C")]
		[Address(RVA = "0x941410", Offset = "0x941410", VA = "0x941410", Slot = "26")]
		protected virtual void ManageTouchpadControl()
		{
		}

		[Token(Token = "0x600212D")]
		[Address(RVA = "0x941654", Offset = "0x941654", VA = "0x941654", Slot = "27")]
		protected virtual void ManageButtonControl()
		{
		}

		[Token(Token = "0x600212E")]
		[Address(RVA = "0x94191C", Offset = "0x94191C", VA = "0x94191C", Slot = "28")]
		protected virtual void ManageSlingshotJump()
		{
		}

		[Token(Token = "0x600212F")]
		[Address(RVA = "0x941AE8", Offset = "0x941AE8", VA = "0x941AE8", Slot = "29")]
		protected virtual void ManageMoveInPlace()
		{
		}

		[Token(Token = "0x6002130")]
		[Address(RVA = "0x941C0C", Offset = "0x941C0C", VA = "0x941C0C", Slot = "30")]
		protected virtual void ManageStepMultiplier()
		{
		}

		[Token(Token = "0x6002131")]
		[Address(RVA = "0x941D44", Offset = "0x941D44", VA = "0x941D44")]
		public VRTK_SDKInputOverride()
		{
		}
	}
	[Token(Token = "0x200042D")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x640684", Offset = "0x640684")]
	public class VRTK_SDKObjectAlias : MonoBehaviour
	{
		[Token(Token = "0x2000841")]
		public enum SDKObject
		{
			[Token(Token = "0x4002B84")]
			Boundary,
			[Token(Token = "0x4002B85")]
			Headset
		}

		[Token(Token = "0x4001F1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65EDC4", Offset = "0x65EDC4")]
		public SDKObject sdkObject;

		[Token(Token = "0x6002132")]
		[Address(RVA = "0x948F50", Offset = "0x948F50", VA = "0x948F50", Slot = "4")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6002133")]
		[Address(RVA = "0x948FF8", Offset = "0x948FF8", VA = "0x948FF8", Slot = "5")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x6002134")]
		[Address(RVA = "0x9490C4", Offset = "0x9490C4", VA = "0x9490C4", Slot = "6")]
		protected virtual void LoadedSetupChanged(VRTK_SDKManager sender, VRTK_SDKManager.LoadedSetupChangeEventArgs e)
		{
		}

		[Token(Token = "0x6002135")]
		[Address(RVA = "0x94916C", Offset = "0x94916C", VA = "0x94916C", Slot = "7")]
		protected virtual void ChildToSDKObject()
		{
		}

		[Token(Token = "0x6002136")]
		[Address(RVA = "0x949384", Offset = "0x949384", VA = "0x949384")]
		public VRTK_SDKObjectAlias()
		{
		}
	}
	[Token(Token = "0x200042E")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x6406BC", Offset = "0x6406BC")]
	public class VRTK_SDKObjectState : VRTK_SDKControllerReady
	{
		[Token(Token = "0x2000842")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x645FF0", Offset = "0x645FF0")]
		private sealed class <CheckToggleAtEndOfFrame>d__10 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002B86")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002B87")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002B88")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VRTK_SDKObjectState <>4__this;

			[Token(Token = "0x17000356")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600336A")]
				[Address(RVA = "0x949D54", Offset = "0x949D54", VA = "0x949D54", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000357")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600336C")]
				[Address(RVA = "0x949DC4", Offset = "0x949DC4", VA = "0x949DC4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003367")]
			[Address(RVA = "0x9495E4", Offset = "0x9495E4", VA = "0x9495E4")]
			[DebuggerHidden]
			public <CheckToggleAtEndOfFrame>d__10(int <>1__state)
			{
			}

			[Token(Token = "0x6003368")]
			[Address(RVA = "0x949C9C", Offset = "0x949C9C", VA = "0x949C9C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003369")]
			[Address(RVA = "0x949CA0", Offset = "0x949CA0", VA = "0x949CA0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600336B")]
			[Address(RVA = "0x949D5C", Offset = "0x949D5C", VA = "0x949D5C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001F1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x65EDFC", Offset = "0x65EDFC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65EDFC", Offset = "0x65EDFC")]
		public UnityEngine.Object target;

		[Token(Token = "0x4001F1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65EE5C", Offset = "0x65EE5C")]
		public bool objectState;

		[Token(Token = "0x4001F1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65EE94", Offset = "0x65EE94")]
		public VRTK_SDKSetup loadedSDKSetup;

		[Token(Token = "0x4001F1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65EECC", Offset = "0x65EECC")]
		public SDK_BaseHeadset.HeadsetType headsetType;

		[Token(Token = "0x4001F1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65EF04", Offset = "0x65EF04")]
		public SDK_BaseController.ControllerType controllerType;

		[Token(Token = "0x4001F20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected Coroutine checkToggleRoutine;

		[Token(Token = "0x6002137")]
		[Address(RVA = "0x94938C", Offset = "0x94938C", VA = "0x94938C", Slot = "15")]
		public virtual void SetStateByControllerReference(VRTK_ControllerReference controllerReference)
		{
		}

		[Token(Token = "0x6002138")]
		[Address(RVA = "0x949464", Offset = "0x949464", VA = "0x949464", Slot = "4")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6002139")]
		[Address(RVA = "0x949524", Offset = "0x949524", VA = "0x949524", Slot = "5")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x600213A")]
		[Address(RVA = "0x949560", Offset = "0x949560", VA = "0x949560", Slot = "14")]
		protected override void ControllerReady(VRTK_ControllerReference controllerReference)
		{
		}

		[Token(Token = "0x600213B")]
		[Address(RVA = "0x949570", Offset = "0x949570", VA = "0x949570", Slot = "16")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x66DDE8", Offset = "0x66DDE8")]
		protected virtual IEnumerator CheckToggleAtEndOfFrame()
		{
			return null;
		}

		[Token(Token = "0x600213C")]
		[Address(RVA = "0x949610", Offset = "0x949610", VA = "0x949610", Slot = "17")]
		protected virtual void CheckToggle()
		{
		}

		[Token(Token = "0x600213D")]
		[Address(RVA = "0x94964C", Offset = "0x94964C", VA = "0x94964C", Slot = "18")]
		protected virtual void ToggleOnSDK()
		{
		}

		[Token(Token = "0x600213E")]
		[Address(RVA = "0x949748", Offset = "0x949748", VA = "0x949748", Slot = "19")]
		protected virtual void ToggleOnHeadset()
		{
		}

		[Token(Token = "0x600213F")]
		[Address(RVA = "0x9497DC", Offset = "0x9497DC", VA = "0x9497DC", Slot = "20")]
		protected virtual void ToggleOnController(VRTK_ControllerReference controllerReference)
		{
		}

		[Token(Token = "0x6002140")]
		[Address(RVA = "0x94988C", Offset = "0x94988C", VA = "0x94988C", Slot = "21")]
		protected virtual void ToggleObject()
		{
		}

		[Token(Token = "0x6002141")]
		[Address(RVA = "0x94998C", Offset = "0x94998C", VA = "0x94998C", Slot = "22")]
		protected virtual void ToggleGameObject()
		{
		}

		[Token(Token = "0x6002142")]
		[Address(RVA = "0x949AF0", Offset = "0x949AF0", VA = "0x949AF0", Slot = "23")]
		protected virtual void ToggleComponent()
		{
		}

		[Token(Token = "0x6002143")]
		[Address(RVA = "0x949C94", Offset = "0x949C94", VA = "0x949C94")]
		public VRTK_SDKObjectState()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200042F")]
	public class VRTK_SDKTransformModifiers
	{
		[Token(Token = "0x4001F21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x65EF3C", Offset = "0x65EF3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65EF3C", Offset = "0x65EF3C")]
		public VRTK_SDKSetup loadedSDKSetup;

		[Token(Token = "0x4001F22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65EF9C", Offset = "0x65EF9C")]
		public SDK_BaseController.ControllerType controllerType;

		[Token(Token = "0x4001F23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x65EFD4", Offset = "0x65EFD4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65EFD4", Offset = "0x65EFD4")]
		public Vector3 position;

		[Token(Token = "0x4001F24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65F034", Offset = "0x65F034")]
		public Vector3 rotation;

		[Token(Token = "0x4001F25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65F06C", Offset = "0x65F06C")]
		public Vector3 scale;

		[Token(Token = "0x6002144")]
		[Address(RVA = "0x94D4CC", Offset = "0x94D4CC", VA = "0x94D4CC")]
		public VRTK_SDKTransformModifiers()
		{
		}
	}
	[Token(Token = "0x2000430")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x6406F4", Offset = "0x6406F4")]
	public class VRTK_SDKTransformModify : VRTK_SDKControllerReady
	{
		[Token(Token = "0x2000843")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x646000", Offset = "0x646000")]
		private sealed class <>c__DisplayClass11_0
		{
			[Token(Token = "0x4002B89")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SDK_BaseController.ControllerType currentControllerType;

			[Token(Token = "0x600336D")]
			[Address(RVA = "0x94DBD4", Offset = "0x94DBD4", VA = "0x94DBD4")]
			public <>c__DisplayClass11_0()
			{
			}

			[Token(Token = "0x600336E")]
			[Address(RVA = "0x94DD68", Offset = "0x94DD68", VA = "0x94DD68")]
			internal bool <GetSelectedModifier>b__1(VRTK_SDKTransformModifiers item)
			{
				return default(bool);
			}
		}

		[Serializable]
		[Token(Token = "0x2000844")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x646010", Offset = "0x646010")]
		private sealed class <>c
		{
			[Token(Token = "0x4002B8A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002B8B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<VRTK_SDKTransformModifiers, bool> <>9__11_0;

			[Token(Token = "0x6003370")]
			[Address(RVA = "0x94DCB8", Offset = "0x94DCB8", VA = "0x94DCB8")]
			public <>c()
			{
			}

			[Token(Token = "0x6003371")]
			[Address(RVA = "0x94DCC0", Offset = "0x94DCC0", VA = "0x94DCC0")]
			internal bool <GetSelectedModifier>b__11_0(VRTK_SDKTransformModifiers item)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4001F26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65F0A4", Offset = "0x65F0A4")]
		public Transform target;

		[Token(Token = "0x4001F27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65F0DC", Offset = "0x65F0DC")]
		public bool resetOnDisable;

		[Token(Token = "0x4001F28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65F114", Offset = "0x65F114")]
		public List<VRTK_SDKTransformModifiers> sdkOverrides;

		[Token(Token = "0x4001F29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected Vector3 originalPosition;

		[Token(Token = "0x4001F2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		protected Quaternion originalRotation;

		[Token(Token = "0x4001F2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		protected Vector3 originalScale;

		[Token(Token = "0x6002145")]
		[Address(RVA = "0x94D564", Offset = "0x94D564", VA = "0x94D564", Slot = "15")]
		public virtual void UpdateTransform([Optional] VRTK_ControllerReference controllerReference)
		{
		}

		[Token(Token = "0x6002146")]
		[Address(RVA = "0x94D6BC", Offset = "0x94D6BC", VA = "0x94D6BC", Slot = "16")]
		public virtual void SetOrigins()
		{
		}

		[Token(Token = "0x6002147")]
		[Address(RVA = "0x94D7A0", Offset = "0x94D7A0", VA = "0x94D7A0", Slot = "4")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6002148")]
		[Address(RVA = "0x94D848", Offset = "0x94D848", VA = "0x94D848", Slot = "5")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x6002149")]
		[Address(RVA = "0x94D924", Offset = "0x94D924", VA = "0x94D924", Slot = "14")]
		protected override void ControllerReady(VRTK_ControllerReference controllerReference)
		{
		}

		[Token(Token = "0x600214A")]
		[Address(RVA = "0x94DA1C", Offset = "0x94DA1C", VA = "0x94DA1C", Slot = "17")]
		protected virtual VRTK_SDKTransformModifiers GetSelectedModifier(VRTK_ControllerReference controllerReference)
		{
			return null;
		}

		[Token(Token = "0x600214B")]
		[Address(RVA = "0x94DBDC", Offset = "0x94DBDC", VA = "0x94DBDC")]
		public VRTK_SDKTransformModify()
		{
		}
	}
	[Token(Token = "0x2000431")]
	public static class VRTK_SharedMethods
	{
		[Token(Token = "0x2000845")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x646020", Offset = "0x646020")]
		private sealed class <>c__DisplayClass11_0<T> where T : Component
		{
			[Token(Token = "0x4002B8C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string gameObjectName;

			[Token(Token = "0x6003372")]
			public <>c__DisplayClass11_0()
			{
			}

			[Token(Token = "0x6003373")]
			internal GameObject <FindEvenInactiveGameObject>b__0(T component)
			{
				return null;
			}
		}

		[Serializable]
		[Token(Token = "0x2000846")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x646030", Offset = "0x646030")]
		private sealed class <>c__11<T> where T : Component
		{
			[Token(Token = "0x4002B8D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c__11<T> <>9;

			[Token(Token = "0x4002B8E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static Func<GameObject, bool> <>9__11_1;

			[Token(Token = "0x6003375")]
			public <>c__11()
			{
			}

			[Token(Token = "0x6003376")]
			internal bool <FindEvenInactiveGameObject>b__11_1(GameObject gameObject)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600214C")]
		[Address(RVA = "0x99494C", Offset = "0x99494C", VA = "0x99494C")]
		public static Bounds GetBounds(Transform transform, [Optional] Transform excludeRotation, [Optional] Transform excludeTransform)
		{
			return default(Bounds);
		}

		[Token(Token = "0x600214D")]
		[Address(RVA = "0x994F08", Offset = "0x994F08", VA = "0x994F08")]
		public static bool IsLowest(float value, float[] others)
		{
			return default(bool);
		}

		[Token(Token = "0x600214E")]
		[Address(RVA = "0x994F90", Offset = "0x994F90", VA = "0x994F90")]
		public static Transform AddCameraFade()
		{
			return null;
		}

		[Token(Token = "0x600214F")]
		[Address(RVA = "0x99502C", Offset = "0x99502C", VA = "0x99502C")]
		public static void CreateColliders(GameObject obj)
		{
		}

		[Token(Token = "0x6002150")]
		[Address(RVA = "0x99519C", Offset = "0x99519C", VA = "0x99519C")]
		public static Collider[] ColliderExclude(Collider[] setA, Collider[] setB)
		{
			return null;
		}

		[Token(Token = "0x6002151")]
		[Address(RVA = "0x99520C", Offset = "0x99520C", VA = "0x99520C")]
		public static Collider[] GetCollidersInGameObjects(GameObject[] gameObjects, bool searchChildren, bool includeInactive)
		{
			return null;
		}

		[Token(Token = "0x6002152")]
		[Address(RVA = "0x9953A8", Offset = "0x9953A8", VA = "0x9953A8")]
		public static Component CloneComponent(Component source, GameObject destination, bool copyProperties = false)
		{
			return null;
		}

		[Token(Token = "0x6002153")]
		[Address(RVA = "0x9955DC", Offset = "0x9955DC", VA = "0x9955DC")]
		public static Color ColorDarken(Color color, float percent)
		{
			return default(Color);
		}

		[Token(Token = "0x6002154")]
		[Address(RVA = "0x99570C", Offset = "0x99570C", VA = "0x99570C")]
		public static float RoundFloat(float givenFloat, int decimalPlaces, bool rawFidelity = false)
		{
			return default(float);
		}

		[Token(Token = "0x6002155")]
		[Address(RVA = "0x99583C", Offset = "0x99583C", VA = "0x99583C")]
		public static bool IsEditTime()
		{
			return default(bool);
		}

		[Token(Token = "0x6002156")]
		[Address(RVA = "0x995844", Offset = "0x995844", VA = "0x995844")]
		public static float Mod(float a, float b)
		{
			return default(float);
		}

		[Token(Token = "0x6002157")]
		public static GameObject FindEvenInactiveGameObject<T>([Optional] string gameObjectName, bool searchAllScenes = false) where T : Component
		{
			return null;
		}

		[Token(Token = "0x6002158")]
		public static T[] FindEvenInactiveComponents<T>(bool searchAllScenes = false) where T : Component
		{
			return null;
		}

		[Token(Token = "0x6002159")]
		public static T FindEvenInactiveComponent<T>(bool searchAllScenes = false) where T : Component
		{
			return null;
		}

		[Token(Token = "0x600215A")]
		[Address(RVA = "0x9958C0", Offset = "0x9958C0", VA = "0x9958C0")]
		public static string GenerateVRTKObjectName(bool autoGen, params object[] replacements)
		{
			return null;
		}

		[Token(Token = "0x600215B")]
		[Address(RVA = "0x995B0C", Offset = "0x995B0C", VA = "0x995B0C")]
		public static float GetGPUTimeLastFrame()
		{
			return default(float);
		}

		[Token(Token = "0x600215C")]
		[Address(RVA = "0x995B44", Offset = "0x995B44", VA = "0x995B44")]
		public static bool Vector2ShallowCompare(Vector2 vectorA, Vector2 vectorB, int compareFidelity)
		{
			return default(bool);
		}

		[Token(Token = "0x600215D")]
		[Address(RVA = "0x995CAC", Offset = "0x995CAC", VA = "0x995CAC")]
		public static bool Vector3ShallowCompare(Vector3 vectorA, Vector3 vectorB, float threshold)
		{
			return default(bool);
		}

		[Token(Token = "0x600215E")]
		[Address(RVA = "0x99566C", Offset = "0x99566C", VA = "0x99566C")]
		public static float NumberPercent(float value, float percent)
		{
			return default(float);
		}

		[Token(Token = "0x600215F")]
		[Address(RVA = "0x995D6C", Offset = "0x995D6C", VA = "0x995D6C")]
		public static void SetGlobalScale(this Transform transform, Vector3 globalScale)
		{
		}

		[Token(Token = "0x6002160")]
		[Address(RVA = "0x995EF0", Offset = "0x995EF0", VA = "0x995EF0")]
		public static Vector3 VectorHeading(Vector3 originPosition, Vector3 targetPosition)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002161")]
		[Address(RVA = "0x995F98", Offset = "0x995F98", VA = "0x995F98")]
		public static Vector3 VectorDirection(Vector3 originPosition, Vector3 targetPosition)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002162")]
		[Address(RVA = "0x996090", Offset = "0x996090", VA = "0x996090")]
		public static float DividerToMultiplier(float value)
		{
			return default(float);
		}

		[Token(Token = "0x6002163")]
		[Address(RVA = "0x9960A4", Offset = "0x9960A4", VA = "0x9960A4")]
		public static float NormalizeValue(float value, float minValue, float maxValue, float threshold = 0f)
		{
			return default(float);
		}

		[Token(Token = "0x6002164")]
		[Address(RVA = "0x996168", Offset = "0x996168", VA = "0x996168")]
		public static Vector3 AxisDirection(int axisIndex, [Optional] Transform givenTransform)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002165")]
		public static bool AddListValue<TValue>(List<TValue> list, TValue value, bool preventDuplicates = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6002166")]
		public static TValue GetDictionaryValue<TKey, TValue>(Dictionary<TKey, TValue> dictionary, TKey key, [Optional] TValue defaultValue, bool setMissingKey = false)
		{
			return (TValue)null;
		}

		[Token(Token = "0x6002167")]
		public static TValue GetDictionaryValue<TKey, TValue>(Dictionary<TKey, TValue> dictionary, TKey key, out bool keyExists, [Optional] TValue defaultValue, bool setMissingKey = false)
		{
			return (TValue)null;
		}

		[Token(Token = "0x6002168")]
		public static bool AddDictionaryValue<TKey, TValue>(Dictionary<TKey, TValue> dictionary, TKey key, TValue value, bool overwriteExisting = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6002169")]
		[Address(RVA = "0x996408", Offset = "0x996408", VA = "0x996408")]
		public static Type GetTypeUnknownAssembly(string typeName)
		{
			return null;
		}

		[Token(Token = "0x600216A")]
		[Address(RVA = "0x996588", Offset = "0x996588", VA = "0x996588")]
		public static float GetEyeTextureResolutionScale()
		{
			return default(float);
		}

		[Token(Token = "0x600216B")]
		[Address(RVA = "0x996590", Offset = "0x996590", VA = "0x996590")]
		public static void SetEyeTextureResolutionScale(float value)
		{
		}

		[Token(Token = "0x600216C")]
		[Address(RVA = "0x996598", Offset = "0x996598", VA = "0x996598")]
		public static bool IsTypeSubclassOf(Type givenType, Type givenBaseType)
		{
			return default(bool);
		}

		[Token(Token = "0x600216D")]
		[Address(RVA = "0x9965D4", Offset = "0x9965D4", VA = "0x9965D4")]
		public static object[] GetTypeCustomAttributes(Type givenType, Type attributeType, bool inherit)
		{
			return null;
		}

		[Token(Token = "0x600216E")]
		[Address(RVA = "0x99661C", Offset = "0x99661C", VA = "0x99661C")]
		public static Type GetBaseType(Type givenType)
		{
			return null;
		}

		[Token(Token = "0x600216F")]
		[Address(RVA = "0x996650", Offset = "0x996650", VA = "0x996650")]
		public static bool IsTypeAssignableFrom(Type givenType, Type sourceType)
		{
			return default(bool);
		}

		[Token(Token = "0x6002170")]
		[Address(RVA = "0x99668C", Offset = "0x99668C", VA = "0x99668C")]
		public static Type GetNestedType(Type givenType, string name)
		{
			return null;
		}

		[Token(Token = "0x6002171")]
		public static string GetPropertyFirstName<T>()
		{
			return null;
		}

		[Token(Token = "0x6002172")]
		[Address(RVA = "0x9966C0", Offset = "0x9966C0", VA = "0x9966C0")]
		public static string[] GetCommandLineArguements()
		{
			return null;
		}

		[Token(Token = "0x6002173")]
		[Address(RVA = "0x9966C8", Offset = "0x9966C8", VA = "0x9966C8")]
		public static Type[] GetTypesOfType(Type givenType)
		{
			return null;
		}

		[Token(Token = "0x6002174")]
		[Address(RVA = "0x996718", Offset = "0x996718", VA = "0x996718")]
		public static Type[] GetExportedTypesOfType(Type givenType)
		{
			return null;
		}

		[Token(Token = "0x6002175")]
		[Address(RVA = "0x99676C", Offset = "0x99676C", VA = "0x99676C")]
		public static bool IsTypeAbstract(Type givenType)
		{
			return default(bool);
		}

		[Token(Token = "0x6002176")]
		private static IEnumerable<T> FindEvenInactiveComponentsInValidScenes<T>(bool searchAllScenes, bool stopOnMatch = false) where T : Component
		{
			return null;
		}

		[Token(Token = "0x6002177")]
		private static IEnumerable<T> FindEvenInactiveComponentsInScene<T>(Scene scene, bool stopOnMatch = false)
		{
			return null;
		}
	}
	[Token(Token = "0x2000432")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x64073C", Offset = "0x64073C")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x64073C", Offset = "0x64073C")]
	public class VRTK_Simulator : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000847")]
		public class Keys
		{
			[Token(Token = "0x4002B8F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public KeyCode forward;

			[Token(Token = "0x4002B90")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public KeyCode backward;

			[Token(Token = "0x4002B91")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public KeyCode strafeLeft;

			[Token(Token = "0x4002B92")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public KeyCode strafeRight;

			[Token(Token = "0x4002B93")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public KeyCode left;

			[Token(Token = "0x4002B94")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public KeyCode right;

			[Token(Token = "0x4002B95")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public KeyCode up;

			[Token(Token = "0x4002B96")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public KeyCode down;

			[Token(Token = "0x4002B97")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public KeyCode reset;

			[Token(Token = "0x6003377")]
			[Address(RVA = "0x997040", Offset = "0x997040", VA = "0x997040")]
			public Keys()
			{
			}
		}

		[Token(Token = "0x4001F2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65F14C", Offset = "0x65F14C")]
		public Keys keys;

		[Token(Token = "0x4001F2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65F184", Offset = "0x65F184")]
		public bool onlyInEditor;

		[Token(Token = "0x4001F2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65F1BC", Offset = "0x65F1BC")]
		public float stepSize;

		[Token(Token = "0x4001F2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65F1F4", Offset = "0x65F1F4")]
		public Transform camStart;

		[Token(Token = "0x4001F30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected Transform headset;

		[Token(Token = "0x4001F31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected Transform playArea;

		[Token(Token = "0x4001F32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected Vector3 initialPosition;

		[Token(Token = "0x4001F33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		protected Quaternion initialRotation;

		[Token(Token = "0x6002178")]
		[Address(RVA = "0x996798", Offset = "0x996798", VA = "0x996798", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6002179")]
		[Address(RVA = "0x996800", Offset = "0x996800", VA = "0x996800", Slot = "5")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x600217A")]
		[Address(RVA = "0x996BA0", Offset = "0x996BA0", VA = "0x996BA0", Slot = "6")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x600217B")]
		[Address(RVA = "0x996C08", Offset = "0x996C08", VA = "0x996C08", Slot = "7")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x600217C")]
		[Address(RVA = "0x996FEC", Offset = "0x996FEC", VA = "0x996FEC", Slot = "8")]
		protected virtual Vector3 overwriteY(Vector3 vector, float value)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600217D")]
		[Address(RVA = "0x997024", Offset = "0x997024", VA = "0x997024")]
		public VRTK_Simulator()
		{
		}
	}
	[Token(Token = "0x2000433")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x64079C", Offset = "0x64079C")]
	public class VRTK_VelocityEstimator : MonoBehaviour
	{
		[Token(Token = "0x2000848")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x646040", Offset = "0x646040")]
		private sealed class <EstimateVelocity>d__15 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002B98")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002B99")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002B9A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VRTK_VelocityEstimator <>4__this;

			[Token(Token = "0x4002B9B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Vector3 <previousPosition>5__2;

			[Token(Token = "0x4002B9C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private Quaternion <previousRotation>5__3;

			[Token(Token = "0x17000358")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600337B")]
				[Address(RVA = "0x8FBC04", Offset = "0x8FBC04", VA = "0x8FBC04", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000359")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600337D")]
				[Address(RVA = "0x8FBC74", Offset = "0x8FBC74", VA = "0x8FBC74", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003378")]
			[Address(RVA = "0x8FB6D0", Offset = "0x8FB6D0", VA = "0x8FB6D0")]
			[DebuggerHidden]
			public <EstimateVelocity>d__15(int <>1__state)
			{
			}

			[Token(Token = "0x6003379")]
			[Address(RVA = "0x8FB718", Offset = "0x8FB718", VA = "0x8FB718", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600337A")]
			[Address(RVA = "0x8FB71C", Offset = "0x8FB71C", VA = "0x8FB71C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600337C")]
			[Address(RVA = "0x8FBC0C", Offset = "0x8FBC0C", VA = "0x8FBC0C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001F34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65F22C", Offset = "0x65F22C")]
		public bool autoStartSampling;

		[Token(Token = "0x4001F35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65F264", Offset = "0x65F264")]
		public int velocityAverageFrames;

		[Token(Token = "0x4001F36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65F29C", Offset = "0x65F29C")]
		public int angularVelocityAverageFrames;

		[Token(Token = "0x4001F37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected Vector3[] velocitySamples;

		[Token(Token = "0x4001F38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected Vector3[] angularVelocitySamples;

		[Token(Token = "0x4001F39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected int currentSampleCount;

		[Token(Token = "0x4001F3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected Coroutine calculateSamplesRoutine;

		[Token(Token = "0x600217E")]
		[Address(RVA = "0x8FAF1C", Offset = "0x8FAF1C", VA = "0x8FAF1C", Slot = "4")]
		public virtual void StartEstimation()
		{
		}

		[Token(Token = "0x600217F")]
		[Address(RVA = "0x8FAF68", Offset = "0x8FAF68", VA = "0x8FAF68", Slot = "5")]
		public virtual void EndEstimation()
		{
		}

		[Token(Token = "0x6002180")]
		[Address(RVA = "0x8FAF9C", Offset = "0x8FAF9C", VA = "0x8FAF9C", Slot = "6")]
		public virtual Vector3 GetVelocityEstimate()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002181")]
		[Address(RVA = "0x8FB17C", Offset = "0x8FB17C", VA = "0x8FB17C", Slot = "7")]
		public virtual Vector3 GetAngularVelocityEstimate()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002182")]
		[Address(RVA = "0x8FB35C", Offset = "0x8FB35C", VA = "0x8FB35C", Slot = "8")]
		public virtual Vector3 GetAccelerationEstimate()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002183")]
		[Address(RVA = "0x8FB5A0", Offset = "0x8FB5A0", VA = "0x8FB5A0", Slot = "9")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6002184")]
		[Address(RVA = "0x8FB5E8", Offset = "0x8FB5E8", VA = "0x8FB5E8", Slot = "10")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x6002185")]
		[Address(RVA = "0x8FB5F4", Offset = "0x8FB5F4", VA = "0x8FB5F4", Slot = "11")]
		protected virtual void InitArrays()
		{
		}

		[Token(Token = "0x6002186")]
		[Address(RVA = "0x8FB65C", Offset = "0x8FB65C", VA = "0x8FB65C", Slot = "12")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x66DE5C", Offset = "0x66DE5C")]
		protected virtual IEnumerator EstimateVelocity()
		{
			return null;
		}

		[Token(Token = "0x6002187")]
		[Address(RVA = "0x8FB6FC", Offset = "0x8FB6FC", VA = "0x8FB6FC")]
		public VRTK_VelocityEstimator()
		{
		}
	}
	[Token(Token = "0x2000434")]
	public abstract class SDK_Base : ScriptableObject
	{
		[Token(Token = "0x6002188")]
		[Address(RVA = "0xDDB990", Offset = "0xDDB990", VA = "0xDDB990", Slot = "4")]
		public virtual void OnBeforeSetupLoad(VRTK_SDKSetup setup)
		{
		}

		[Token(Token = "0x6002189")]
		[Address(RVA = "0xDDB994", Offset = "0xDDB994", VA = "0xDDB994", Slot = "5")]
		public virtual void OnAfterSetupLoad(VRTK_SDKSetup setup)
		{
		}

		[Token(Token = "0x600218A")]
		[Address(RVA = "0xDDB998", Offset = "0xDDB998", VA = "0xDDB998", Slot = "6")]
		public virtual void OnBeforeSetupUnload(VRTK_SDKSetup setup)
		{
		}

		[Token(Token = "0x600218B")]
		[Address(RVA = "0xDDB99C", Offset = "0xDDB99C", VA = "0xDDB99C", Slot = "7")]
		public virtual void OnAfterSetupUnload(VRTK_SDKSetup setup)
		{
		}

		[Token(Token = "0x600218C")]
		[Address(RVA = "0xDDB9A0", Offset = "0xDDB9A0", VA = "0xDDB9A0")]
		protected SDK_Base()
		{
		}
	}
	[Token(Token = "0x2000435")]
	public abstract class SDK_BaseBoundaries : SDK_Base
	{
		[Token(Token = "0x4001F3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected Transform cachedPlayArea;

		[Token(Token = "0x600218D")]
		public abstract void InitBoundaries();

		[Token(Token = "0x600218E")]
		public abstract Transform GetPlayArea();

		[Token(Token = "0x600218F")]
		public abstract Vector3[] GetPlayAreaVertices();

		[Token(Token = "0x6002190")]
		public abstract float GetPlayAreaBorderThickness();

		[Token(Token = "0x6002191")]
		public abstract bool IsPlayAreaSizeCalibrated();

		[Token(Token = "0x6002192")]
		public abstract bool GetDrawAtRuntime();

		[Token(Token = "0x6002193")]
		public abstract void SetDrawAtRuntime(bool value);

		[Token(Token = "0x6002194")]
		[Address(RVA = "0xDDB9A8", Offset = "0xDDB9A8", VA = "0xDDB9A8")]
		protected Transform GetSDKManagerPlayArea()
		{
			return null;
		}

		[Token(Token = "0x6002195")]
		[Address(RVA = "0xDDBB5C", Offset = "0xDDBB5C", VA = "0xDDBB5C")]
		protected SDK_BaseBoundaries()
		{
		}
	}
	[Token(Token = "0x2000436")]
	public struct VRTKSDKBaseControllerEventArgs
	{
		[Token(Token = "0x4001F3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VRTK_ControllerReference controllerReference;
	}
	[Token(Token = "0x2000437")]
	public delegate void VRTKSDKBaseControllerEventHandler(object sender, VRTKSDKBaseControllerEventArgs e);
	[Token(Token = "0x2000438")]
	public abstract class SDK_BaseController : SDK_Base
	{
		[Token(Token = "0x2000849")]
		public enum ButtonTypes
		{
			[Token(Token = "0x4002B9E")]
			ButtonOne,
			[Token(Token = "0x4002B9F")]
			ButtonTwo,
			[Token(Token = "0x4002BA0")]
			Grip,
			[Token(Token = "0x4002BA1")]
			GripHairline,
			[Token(Token = "0x4002BA2")]
			StartMenu,
			[Token(Token = "0x4002BA3")]
			Trigger,
			[Token(Token = "0x4002BA4")]
			TriggerHairline,
			[Token(Token = "0x4002BA5")]
			Touchpad,
			[Token(Token = "0x4002BA6")]
			TouchpadTwo,
			[Token(Token = "0x4002BA7")]
			MiddleFinger,
			[Token(Token = "0x4002BA8")]
			RingFinger,
			[Token(Token = "0x4002BA9")]
			PinkyFinger
		}

		[Token(Token = "0x200084A")]
		public enum ButtonPressTypes
		{
			[Token(Token = "0x4002BAB")]
			Press,
			[Token(Token = "0x4002BAC")]
			PressDown,
			[Token(Token = "0x4002BAD")]
			PressUp,
			[Token(Token = "0x4002BAE")]
			Touch,
			[Token(Token = "0x4002BAF")]
			TouchDown,
			[Token(Token = "0x4002BB0")]
			TouchUp
		}

		[Token(Token = "0x200084B")]
		public enum ControllerElements
		{
			[Token(Token = "0x4002BB2")]
			AttachPoint,
			[Token(Token = "0x4002BB3")]
			Trigger,
			[Token(Token = "0x4002BB4")]
			GripLeft,
			[Token(Token = "0x4002BB5")]
			GripRight,
			[Token(Token = "0x4002BB6")]
			Touchpad,
			[Token(Token = "0x4002BB7")]
			ButtonOne,
			[Token(Token = "0x4002BB8")]
			ButtonTwo,
			[Token(Token = "0x4002BB9")]
			SystemMenu,
			[Token(Token = "0x4002BBA")]
			Body,
			[Token(Token = "0x4002BBB")]
			StartMenu,
			[Token(Token = "0x4002BBC")]
			TouchpadTwo
		}

		[Token(Token = "0x200084C")]
		public enum ControllerHand
		{
			[Token(Token = "0x4002BBE")]
			None,
			[Token(Token = "0x4002BBF")]
			Left,
			[Token(Token = "0x4002BC0")]
			Right
		}

		[Token(Token = "0x200084D")]
		public enum ControllerType
		{
			[Token(Token = "0x4002BC2")]
			Undefined,
			[Token(Token = "0x4002BC3")]
			Custom,
			[Token(Token = "0x4002BC4")]
			Simulator_Hand,
			[Token(Token = "0x4002BC5")]
			SteamVR_ViveWand,
			[Token(Token = "0x4002BC6")]
			SteamVR_OculusTouch,
			[Token(Token = "0x4002BC7")]
			Oculus_OculusTouch,
			[Token(Token = "0x4002BC8")]
			Daydream_Controller,
			[Token(Token = "0x4002BC9")]
			Ximmerse_Flip,
			[Token(Token = "0x4002BCA")]
			SteamVR_ValveKnuckles,
			[Token(Token = "0x4002BCB")]
			Oculus_OculusGamepad,
			[Token(Token = "0x4002BCC")]
			Oculus_OculusRemote,
			[Token(Token = "0x4002BCD")]
			Oculus_GearVRHMD,
			[Token(Token = "0x4002BCE")]
			Oculus_GearVRController,
			[Token(Token = "0x4002BCF")]
			WindowsMR_MotionController,
			[Token(Token = "0x4002BD0")]
			SteamVR_WindowsMRController
		}

		[Token(Token = "0x4001F41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected Transform defaultSDKLeftControllerModel;

		[Token(Token = "0x4001F42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected Transform defaultSDKRightControllerModel;

		[Token(Token = "0x1400013A")]
		public event VRTKSDKBaseControllerEventHandler LeftControllerReady
		{
			[Token(Token = "0x600219A")]
			[Address(RVA = "0xDDBB64", Offset = "0xDDBB64", VA = "0xDDBB64")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66DEC0", Offset = "0x66DEC0")]
			add
			{
			}
			[Token(Token = "0x600219B")]
			[Address(RVA = "0xDDBC50", Offset = "0xDDBC50", VA = "0xDDBC50")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66DED0", Offset = "0x66DED0")]
			remove
			{
			}
		}

		[Token(Token = "0x1400013B")]
		public event VRTKSDKBaseControllerEventHandler RightControllerReady
		{
			[Token(Token = "0x600219C")]
			[Address(RVA = "0xDDBD3C", Offset = "0xDDBD3C", VA = "0xDDBD3C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66DEE0", Offset = "0x66DEE0")]
			add
			{
			}
			[Token(Token = "0x600219D")]
			[Address(RVA = "0xDDBE28", Offset = "0xDDBE28", VA = "0xDDBE28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66DEF0", Offset = "0x66DEF0")]
			remove
			{
			}
		}

		[Token(Token = "0x1400013C")]
		public event VRTKSDKBaseControllerEventHandler LeftControllerModelReady
		{
			[Token(Token = "0x600219E")]
			[Address(RVA = "0xDDBF14", Offset = "0xDDBF14", VA = "0xDDBF14")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66DF00", Offset = "0x66DF00")]
			add
			{
			}
			[Token(Token = "0x600219F")]
			[Address(RVA = "0xDDC000", Offset = "0xDDC000", VA = "0xDDC000")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66DF10", Offset = "0x66DF10")]
			remove
			{
			}
		}

		[Token(Token = "0x1400013D")]
		public event VRTKSDKBaseControllerEventHandler RightControllerModelReady
		{
			[Token(Token = "0x60021A0")]
			[Address(RVA = "0xDDC0EC", Offset = "0xDDC0EC", VA = "0xDDC0EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66DF20", Offset = "0x66DF20")]
			add
			{
			}
			[Token(Token = "0x60021A1")]
			[Address(RVA = "0xDDC1D8", Offset = "0xDDC1D8", VA = "0xDDC1D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66DF30", Offset = "0x66DF30")]
			remove
			{
			}
		}

		[Token(Token = "0x60021A2")]
		[Address(RVA = "0xDDC2C4", Offset = "0xDDC2C4", VA = "0xDDC2C4", Slot = "8")]
		public virtual void OnControllerReady(ControllerHand hand)
		{
		}

		[Token(Token = "0x60021A3")]
		public abstract void ProcessUpdate(VRTK_ControllerReference controllerReference, Dictionary<string, object> options);

		[Token(Token = "0x60021A4")]
		public abstract void ProcessFixedUpdate(VRTK_ControllerReference controllerReference, Dictionary<string, object> options);

		[Token(Token = "0x60021A5")]
		public abstract ControllerType GetCurrentControllerType([Optional] VRTK_ControllerReference controllerReference);

		[Token(Token = "0x60021A6")]
		public abstract string GetControllerDefaultColliderPath(ControllerHand hand);

		[Token(Token = "0x60021A7")]
		public abstract string GetControllerElementPath(ControllerElements element, ControllerHand hand, bool fullPath = false);

		[Token(Token = "0x60021A8")]
		public abstract uint GetControllerIndex(GameObject controller);

		[Token(Token = "0x60021A9")]
		public abstract GameObject GetControllerByIndex(uint index, bool actual = false);

		[Token(Token = "0x60021AA")]
		public abstract Transform GetControllerOrigin(VRTK_ControllerReference controllerReference);

		[Token(Token = "0x60021AB")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x66DF40", Offset = "0x66DF40")]
		public abstract Transform GenerateControllerPointerOrigin(GameObject parent);

		[Token(Token = "0x60021AC")]
		public abstract GameObject GetControllerLeftHand(bool actual = false);

		[Token(Token = "0x60021AD")]
		public abstract GameObject GetControllerRightHand(bool actual = false);

		[Token(Token = "0x60021AE")]
		public abstract bool IsControllerLeftHand(GameObject controller);

		[Token(Token = "0x60021AF")]
		public abstract bool IsControllerRightHand(GameObject controller);

		[Token(Token = "0x60021B0")]
		public abstract bool IsControllerLeftHand(GameObject controller, bool actual);

		[Token(Token = "0x60021B1")]
		public abstract bool IsControllerRightHand(GameObject controller, bool actual);

		[Token(Token = "0x60021B2")]
		public abstract bool WaitForControllerModel(ControllerHand hand);

		[Token(Token = "0x60021B3")]
		public abstract GameObject GetControllerModel(GameObject controller);

		[Token(Token = "0x60021B4")]
		public abstract GameObject GetControllerModel(ControllerHand hand);

		[Token(Token = "0x60021B5")]
		[Address(RVA = "0xDDC378", Offset = "0xDDC378", VA = "0xDDC378", Slot = "27")]
		public virtual ControllerHand GetControllerModelHand(GameObject controllerModel)
		{
			return default(ControllerHand);
		}

		[Token(Token = "0x60021B6")]
		public abstract GameObject GetControllerRenderModel(VRTK_ControllerReference controllerReference);

		[Token(Token = "0x60021B7")]
		public abstract void SetControllerRenderModelWheel(GameObject renderModel, bool state);

		[Token(Token = "0x60021B8")]
		public abstract void HapticPulse(VRTK_ControllerReference controllerReference, float strength = 0.5f);

		[Token(Token = "0x60021B9")]
		public abstract bool HapticPulse(VRTK_ControllerReference controllerReference, AudioClip clip);

		[Token(Token = "0x60021BA")]
		public abstract SDK_ControllerHapticModifiers GetHapticModifiers();

		[Token(Token = "0x60021BB")]
		public abstract Vector3 GetVelocity(VRTK_ControllerReference controllerReference);

		[Token(Token = "0x60021BC")]
		public abstract Vector3 GetAngularVelocity(VRTK_ControllerReference controllerReference);

		[Token(Token = "0x60021BD")]
		public abstract bool IsTouchpadStatic(bool isTouched, Vector2 currentAxisValues, Vector2 previousAxisValues, int compareFidelity);

		[Token(Token = "0x60021BE")]
		public abstract Vector2 GetButtonAxis(ButtonTypes buttonType, VRTK_ControllerReference controllerReference);

		[Token(Token = "0x60021BF")]
		public abstract float GetButtonSenseAxis(ButtonTypes buttonType, VRTK_ControllerReference controllerReference);

		[Token(Token = "0x60021C0")]
		public abstract float GetButtonHairlineDelta(ButtonTypes buttonType, VRTK_ControllerReference controllerReference);

		[Token(Token = "0x60021C1")]
		public abstract bool GetControllerButtonState(ButtonTypes buttonType, ButtonPressTypes pressType, VRTK_ControllerReference controllerReference);

		[Token(Token = "0x60021C2")]
		[Address(RVA = "0xDDC52C", Offset = "0xDDC52C", VA = "0xDDC52C", Slot = "40")]
		protected virtual GameObject GetSDKManagerControllerLeftHand(bool actual = false)
		{
			return null;
		}

		[Token(Token = "0x60021C3")]
		[Address(RVA = "0xDDC66C", Offset = "0xDDC66C", VA = "0xDDC66C", Slot = "41")]
		protected virtual GameObject GetSDKManagerControllerRightHand(bool actual = false)
		{
			return null;
		}

		[Token(Token = "0x60021C4")]
		[Address(RVA = "0xDDC7AC", Offset = "0xDDC7AC", VA = "0xDDC7AC", Slot = "42")]
		protected virtual bool CheckActualOrScriptAliasControllerIsLeftHand(GameObject controller)
		{
			return default(bool);
		}

		[Token(Token = "0x60021C5")]
		[Address(RVA = "0xDDC80C", Offset = "0xDDC80C", VA = "0xDDC80C", Slot = "43")]
		protected virtual bool CheckActualOrScriptAliasControllerIsRightHand(GameObject controller)
		{
			return default(bool);
		}

		[Token(Token = "0x60021C6")]
		[Address(RVA = "0xDDC86C", Offset = "0xDDC86C", VA = "0xDDC86C", Slot = "44")]
		protected virtual bool CheckControllerLeftHand(GameObject controller, bool actual)
		{
			return default(bool);
		}

		[Token(Token = "0x60021C7")]
		[Address(RVA = "0xDDCA1C", Offset = "0xDDCA1C", VA = "0xDDCA1C", Slot = "45")]
		protected virtual bool CheckControllerRightHand(GameObject controller, bool actual)
		{
			return default(bool);
		}

		[Token(Token = "0x60021C8")]
		[Address(RVA = "0xDDCBCC", Offset = "0xDDCBCC", VA = "0xDDCBCC", Slot = "46")]
		protected virtual GameObject GetControllerModelFromController(GameObject controller)
		{
			return null;
		}

		[Token(Token = "0x60021C9")]
		[Address(RVA = "0xDDCC58", Offset = "0xDDCC58", VA = "0xDDCC58", Slot = "47")]
		protected virtual GameObject GetSDKManagerControllerModelForHand(ControllerHand hand)
		{
			return null;
		}

		[Token(Token = "0x60021CA")]
		[Address(RVA = "0xDDCDCC", Offset = "0xDDCDCC", VA = "0xDDCDCC", Slot = "48")]
		protected virtual GameObject GetActualController(GameObject controller)
		{
			return null;
		}

		[Token(Token = "0x60021CB")]
		[Address(RVA = "0xDDCF6C", Offset = "0xDDCF6C", VA = "0xDDCF6C", Slot = "49")]
		protected virtual void OnControllerModelReady(ControllerHand hand, VRTK_ControllerReference controllerReference)
		{
		}

		[Token(Token = "0x60021CC")]
		[Address(RVA = "0xDDCFA0", Offset = "0xDDCFA0", VA = "0xDDCFA0", Slot = "50")]
		protected virtual bool ShouldWaitForControllerModel(ControllerHand hand, bool ignoreChildCount)
		{
			return default(bool);
		}

		[Token(Token = "0x60021CD")]
		[Address(RVA = "0xDDD02C", Offset = "0xDDD02C", VA = "0xDDD02C", Slot = "51")]
		protected virtual bool IsDefaultControllerModel(Transform givenDefault, GameObject givenActual, bool ignoreChildCount)
		{
			return default(bool);
		}

		[Token(Token = "0x60021CE")]
		[Address(RVA = "0xDDD170", Offset = "0xDDD170", VA = "0xDDD170")]
		protected SDK_BaseController()
		{
		}
	}
	[Token(Token = "0x2000439")]
	public class SDK_ControllerHapticModifiers
	{
		[Token(Token = "0x4001F43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float durationModifier;

		[Token(Token = "0x4001F44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float intervalModifier;

		[Token(Token = "0x4001F45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ushort maxHapticVibration;

		[Token(Token = "0x4001F46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int hapticsBufferSize;

		[Token(Token = "0x60021CF")]
		[Address(RVA = "0xDDD814", Offset = "0xDDD814", VA = "0xDDD814")]
		public SDK_ControllerHapticModifiers()
		{
		}
	}
	[Token(Token = "0x200043A")]
	public abstract class SDK_BaseHeadset : SDK_Base
	{
		[Token(Token = "0x200084E")]
		public enum HeadsetType
		{
			[Token(Token = "0x4002BD2")]
			Undefined,
			[Token(Token = "0x4002BD3")]
			Simulator,
			[Token(Token = "0x4002BD4")]
			HTCVive,
			[Token(Token = "0x4002BD5")]
			OculusRiftDK1,
			[Token(Token = "0x4002BD6")]
			OculusRiftDK2,
			[Token(Token = "0x4002BD7")]
			OculusRift,
			[Token(Token = "0x4002BD8")]
			OculusGearVR,
			[Token(Token = "0x4002BD9")]
			GoogleDaydream,
			[Token(Token = "0x4002BDA")]
			GoogleCardboard,
			[Token(Token = "0x4002BDB")]
			HyperealVR,
			[Token(Token = "0x4002BDC")]
			WindowsMixedReality
		}

		[Token(Token = "0x4001F47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected Transform cachedHeadset;

		[Token(Token = "0x4001F48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected Transform cachedHeadsetCamera;

		[Token(Token = "0x60021D0")]
		public abstract void ProcessUpdate(Dictionary<string, object> options);

		[Token(Token = "0x60021D1")]
		public abstract void ProcessFixedUpdate(Dictionary<string, object> options);

		[Token(Token = "0x60021D2")]
		public abstract Transform GetHeadset();

		[Token(Token = "0x60021D3")]
		public abstract Transform GetHeadsetCamera();

		[Token(Token = "0x60021D4")]
		public abstract string GetHeadsetType();

		[Token(Token = "0x60021D5")]
		public abstract Vector3 GetHeadsetVelocity();

		[Token(Token = "0x60021D6")]
		public abstract Vector3 GetHeadsetAngularVelocity();

		[Token(Token = "0x60021D7")]
		public abstract void HeadsetFade(Color color, float duration, bool fadeOverlay = false);

		[Token(Token = "0x60021D8")]
		public abstract bool HasHeadsetFade(Transform obj);

		[Token(Token = "0x60021D9")]
		public abstract void AddHeadsetFade(Transform camera);

		[Token(Token = "0x60021DA")]
		[Address(RVA = "0xDDD178", Offset = "0xDDD178", VA = "0xDDD178")]
		protected Transform GetSDKManagerHeadset()
		{
			return null;
		}

		[Token(Token = "0x60021DB")]
		[Address(RVA = "0xDDD37C", Offset = "0xDDD37C", VA = "0xDDD37C", Slot = "18")]
		protected virtual string ScrapeHeadsetType()
		{
			return null;
		}

		[Token(Token = "0x60021DC")]
		[Address(RVA = "0xDDD730", Offset = "0xDDD730", VA = "0xDDD730")]
		protected string CleanPropertyString(string inputString)
		{
			return null;
		}

		[Token(Token = "0x60021DD")]
		[Address(RVA = "0xDDD804", Offset = "0xDDD804", VA = "0xDDD804")]
		protected SDK_BaseHeadset()
		{
		}
	}
	[Token(Token = "0x200043B")]
	public abstract class SDK_BaseSystem : SDK_Base
	{
		[Token(Token = "0x60021DE")]
		public abstract bool IsDisplayOnDesktop();

		[Token(Token = "0x60021DF")]
		public abstract bool ShouldAppRenderWithLowResources();

		[Token(Token = "0x60021E0")]
		public abstract void ForceInterleavedReprojectionOn(bool force);

		[Token(Token = "0x60021E1")]
		[Address(RVA = "0xDDD80C", Offset = "0xDDD80C", VA = "0xDDD80C")]
		protected SDK_BaseSystem()
		{
		}
	}
	[Token(Token = "0x200043C")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0x6407D4", Offset = "0x6407D4")]
	public sealed class SDK_DescriptionAttribute : Attribute
	{
		[Serializable]
		[Token(Token = "0x200084F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x646050", Offset = "0x646050")]
		private sealed class <>c
		{
			[Token(Token = "0x4002BDD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002BDE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<SDK_DescriptionAttribute, int> <>9__8_0;

			[Token(Token = "0x600337F")]
			[Address(RVA = "0xDDE1B0", Offset = "0xDDE1B0", VA = "0xDDE1B0")]
			public <>c()
			{
			}

			[Token(Token = "0x6003380")]
			[Address(RVA = "0xDDE1B8", Offset = "0xDDE1B8", VA = "0xDDE1B8")]
			internal int <GetDescriptions>b__8_0(SDK_DescriptionAttribute attribute)
			{
				return default(int);
			}
		}

		[Token(Token = "0x4001F49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string prettyName;

		[Token(Token = "0x4001F4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string symbol;

		[Token(Token = "0x4001F4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly string vrDeviceName;

		[Token(Token = "0x4001F4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly int index;

		[Token(Token = "0x170001FC")]
		public bool describesFallbackSDK
		{
			[Token(Token = "0x60021E2")]
			[Address(RVA = "0xDDDA9C", Offset = "0xDDDA9C", VA = "0xDDDA9C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60021E3")]
		[Address(RVA = "0xDDDAF0", Offset = "0xDDDAF0", VA = "0xDDDAF0")]
		public SDK_DescriptionAttribute(string prettyName, string symbol, string vrDeviceName, string buildTargetGroupName, int index = 0)
		{
		}

		[Token(Token = "0x60021E4")]
		[Address(RVA = "0xDDDC78", Offset = "0xDDDC78", VA = "0xDDDC78")]
		public SDK_DescriptionAttribute(Type typeToCopyExistingDescriptionFrom, int index = 0)
		{
		}

		[Token(Token = "0x60021E5")]
		[Address(RVA = "0xDDDFE8", Offset = "0xDDDFE8", VA = "0xDDDFE8")]
		public static SDK_DescriptionAttribute[] GetDescriptions(Type type)
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x200043D")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0x640820", Offset = "0x640820")]
	public sealed class SDK_ScriptingDefineSymbolPredicateAttribute : Attribute, ISerializationCallbackReceiver
	{
		[Token(Token = "0x4001F4D")]
		public const string RemovableSymbolPrefix = "VRTK_DEFINE_";

		[Token(Token = "0x4001F4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string symbol;

		[Token(Token = "0x4001F4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private string buildTargetGroupName;

		[Token(Token = "0x60021E6")]
		[Address(RVA = "0xACD384", Offset = "0xACD384", VA = "0xACD384")]
		private SDK_ScriptingDefineSymbolPredicateAttribute()
		{
		}

		[Token(Token = "0x60021E7")]
		[Address(RVA = "0xACD38C", Offset = "0xACD38C", VA = "0xACD38C")]
		public SDK_ScriptingDefineSymbolPredicateAttribute(string symbol, string buildTargetGroupName)
		{
		}

		[Token(Token = "0x60021E8")]
		[Address(RVA = "0xACD55C", Offset = "0xACD55C", VA = "0xACD55C")]
		public SDK_ScriptingDefineSymbolPredicateAttribute(SDK_ScriptingDefineSymbolPredicateAttribute attributeToCopy)
		{
		}

		[Token(Token = "0x60021E9")]
		[Address(RVA = "0xACD5B8", Offset = "0xACD5B8", VA = "0xACD5B8", Slot = "6")]
		public void OnBeforeSerialize()
		{
		}

		[Token(Token = "0x60021EA")]
		[Address(RVA = "0xACD5BC", Offset = "0xACD5BC", VA = "0xACD5BC", Slot = "7")]
		public void OnAfterDeserialize()
		{
		}

		[Token(Token = "0x60021EB")]
		[Address(RVA = "0xACD554", Offset = "0xACD554", VA = "0xACD554")]
		private void SetBuildTarget(string groupName)
		{
		}
	}
	[Token(Token = "0x200043E")]
	[AttributeAttribute(Name = "SDK_DescriptionAttribute", RVA = "0x64086C", Offset = "0x64086C")]
	public class SDK_DaydreamBoundaries : SDK_FallbackBoundaries
	{
		[Token(Token = "0x60021EC")]
		[Address(RVA = "0xDDD9D8", Offset = "0xDDD9D8", VA = "0xDDD9D8")]
		public SDK_DaydreamBoundaries()
		{
		}
	}
	[Token(Token = "0x200043F")]
	[AttributeAttribute(Name = "SDK_DescriptionAttribute", RVA = "0x6408D4", Offset = "0x6408D4")]
	public class SDK_DaydreamController : SDK_FallbackController
	{
		[Token(Token = "0x60021ED")]
		[Address(RVA = "0xDDD9E8", Offset = "0xDDD9E8", VA = "0xDDD9E8")]
		public SDK_DaydreamController()
		{
		}
	}
	[Token(Token = "0x2000440")]
	public static class SDK_DaydreamDefines
	{
		[Token(Token = "0x4001F50")]
		public const string ScriptingDefineSymbol = "VRTK_DEFINE_SDK_DAYDREAM";

		[Token(Token = "0x60021EE")]
		[Address(RVA = "0xDDD9F8", Offset = "0xDDD9F8", VA = "0xDDD9F8")]
		[AttributeAttribute(Name = "SDK_ScriptingDefineSymbolPredicateAttribute", RVA = "0x66DF78", Offset = "0x66DF78")]
		private static bool IsDaydreamAvailable()
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000441")]
	[AttributeAttribute(Name = "SDK_DescriptionAttribute", RVA = "0x64093C", Offset = "0x64093C")]
	public class SDK_DaydreamHeadset : SDK_FallbackHeadset
	{
		[Token(Token = "0x60021EF")]
		[Address(RVA = "0xDDDA7C", Offset = "0xDDDA7C", VA = "0xDDDA7C")]
		public SDK_DaydreamHeadset()
		{
		}
	}
	[Token(Token = "0x2000442")]
	[AttributeAttribute(Name = "SDK_DescriptionAttribute", RVA = "0x6409A4", Offset = "0x6409A4")]
	public class SDK_DaydreamSystem : SDK_FallbackSystem
	{
		[Token(Token = "0x60021F0")]
		[Address(RVA = "0xDDDA8C", Offset = "0xDDDA8C", VA = "0xDDDA8C")]
		public SDK_DaydreamSystem()
		{
		}
	}
	[Token(Token = "0x2000443")]
	[AttributeAttribute(Name = "SDK_DescriptionAttribute", RVA = "0x640A24", Offset = "0x640A24")]
	public class SDK_FallbackBoundaries : SDK_BaseBoundaries
	{
		[Token(Token = "0x60021F1")]
		[Address(RVA = "0xDDE1E4", Offset = "0xDDE1E4", VA = "0xDDE1E4", Slot = "8")]
		public override void InitBoundaries()
		{
		}

		[Token(Token = "0x60021F2")]
		[Address(RVA = "0xDDE1E8", Offset = "0xDDE1E8", VA = "0xDDE1E8", Slot = "9")]
		public override Transform GetPlayArea()
		{
			return null;
		}

		[Token(Token = "0x60021F3")]
		[Address(RVA = "0xDDE1F0", Offset = "0xDDE1F0", VA = "0xDDE1F0", Slot = "10")]
		public override Vector3[] GetPlayAreaVertices()
		{
			return null;
		}

		[Token(Token = "0x60021F4")]
		[Address(RVA = "0xDDE1F8", Offset = "0xDDE1F8", VA = "0xDDE1F8", Slot = "11")]
		public override float GetPlayAreaBorderThickness()
		{
			return default(float);
		}

		[Token(Token = "0x60021F5")]
		[Address(RVA = "0xDDE200", Offset = "0xDDE200", VA = "0xDDE200", Slot = "12")]
		public override bool IsPlayAreaSizeCalibrated()
		{
			return default(bool);
		}

		[Token(Token = "0x60021F6")]
		[Address(RVA = "0xDDE208", Offset = "0xDDE208", VA = "0xDDE208", Slot = "13")]
		public override bool GetDrawAtRuntime()
		{
			return default(bool);
		}

		[Token(Token = "0x60021F7")]
		[Address(RVA = "0xDDE210", Offset = "0xDDE210", VA = "0xDDE210", Slot = "14")]
		public override void SetDrawAtRuntime(bool value)
		{
		}

		[Token(Token = "0x60021F8")]
		[Address(RVA = "0xDDD9E0", Offset = "0xDDD9E0", VA = "0xDDD9E0")]
		public SDK_FallbackBoundaries()
		{
		}
	}
	[Token(Token = "0x2000444")]
	[AttributeAttribute(Name = "SDK_DescriptionAttribute", RVA = "0x640A8C", Offset = "0x640A8C")]
	public class SDK_FallbackController : SDK_BaseController
	{
		[Token(Token = "0x60021F9")]
		[Address(RVA = "0xDDE214", Offset = "0xDDE214", VA = "0xDDE214", Slot = "9")]
		public override void ProcessUpdate(VRTK_ControllerReference controllerReference, Dictionary<string, object> options)
		{
		}

		[Token(Token = "0x60021FA")]
		[Address(RVA = "0xDDE218", Offset = "0xDDE218", VA = "0xDDE218", Slot = "10")]
		public override void ProcessFixedUpdate(VRTK_ControllerReference controllerReference, Dictionary<string, object> options)
		{
		}

		[Token(Token = "0x60021FB")]
		[Address(RVA = "0xDDE21C", Offset = "0xDDE21C", VA = "0xDDE21C", Slot = "11")]
		public override ControllerType GetCurrentControllerType([Optional] VRTK_ControllerReference controllerReference)
		{
			return default(ControllerType);
		}

		[Token(Token = "0x60021FC")]
		[Address(RVA = "0xDDE224", Offset = "0xDDE224", VA = "0xDDE224", Slot = "12")]
		public override string GetControllerDefaultColliderPath(ControllerHand hand)
		{
			return null;
		}

		[Token(Token = "0x60021FD")]
		[Address(RVA = "0xDDE26C", Offset = "0xDDE26C", VA = "0xDDE26C", Slot = "13")]
		public override string GetControllerElementPath(ControllerElements element, ControllerHand hand, bool fullPath = false)
		{
			return null;
		}

		[Token(Token = "0x60021FE")]
		[Address(RVA = "0xDDE2B4", Offset = "0xDDE2B4", VA = "0xDDE2B4", Slot = "14")]
		public override uint GetControllerIndex(GameObject controller)
		{
			return default(uint);
		}

		[Token(Token = "0x60021FF")]
		[Address(RVA = "0xDDE2BC", Offset = "0xDDE2BC", VA = "0xDDE2BC", Slot = "15")]
		public override GameObject GetControllerByIndex(uint index, bool actual = false)
		{
			return null;
		}

		[Token(Token = "0x6002200")]
		[Address(RVA = "0xDDE2C4", Offset = "0xDDE2C4", VA = "0xDDE2C4", Slot = "16")]
		public override Transform GetControllerOrigin(VRTK_ControllerReference controllerReference)
		{
			return null;
		}

		[Token(Token = "0x6002201")]
		[Address(RVA = "0xDDE2CC", Offset = "0xDDE2CC", VA = "0xDDE2CC", Slot = "17")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x66DFC4", Offset = "0x66DFC4")]
		public override Transform GenerateControllerPointerOrigin(GameObject parent)
		{
			return null;
		}

		[Token(Token = "0x6002202")]
		[Address(RVA = "0xDDE2D4", Offset = "0xDDE2D4", VA = "0xDDE2D4", Slot = "18")]
		public override GameObject GetControllerLeftHand(bool actual = false)
		{
			return null;
		}

		[Token(Token = "0x6002203")]
		[Address(RVA = "0xDDE2DC", Offset = "0xDDE2DC", VA = "0xDDE2DC", Slot = "19")]
		public override GameObject GetControllerRightHand(bool actual = false)
		{
			return null;
		}

		[Token(Token = "0x6002204")]
		[Address(RVA = "0xDDE2E4", Offset = "0xDDE2E4", VA = "0xDDE2E4", Slot = "20")]
		public override bool IsControllerLeftHand(GameObject controller)
		{
			return default(bool);
		}

		[Token(Token = "0x6002205")]
		[Address(RVA = "0xDDE2EC", Offset = "0xDDE2EC", VA = "0xDDE2EC", Slot = "21")]
		public override bool IsControllerRightHand(GameObject controller)
		{
			return default(bool);
		}

		[Token(Token = "0x6002206")]
		[Address(RVA = "0xDDE2F4", Offset = "0xDDE2F4", VA = "0xDDE2F4", Slot = "22")]
		public override bool IsControllerLeftHand(GameObject controller, bool actual)
		{
			return default(bool);
		}

		[Token(Token = "0x6002207")]
		[Address(RVA = "0xDDE2FC", Offset = "0xDDE2FC", VA = "0xDDE2FC", Slot = "23")]
		public override bool IsControllerRightHand(GameObject controller, bool actual)
		{
			return default(bool);
		}

		[Token(Token = "0x6002208")]
		[Address(RVA = "0xDDE304", Offset = "0xDDE304", VA = "0xDDE304", Slot = "24")]
		public override bool WaitForControllerModel(ControllerHand hand)
		{
			return default(bool);
		}

		[Token(Token = "0x6002209")]
		[Address(RVA = "0xDDE30C", Offset = "0xDDE30C", VA = "0xDDE30C", Slot = "25")]
		public override GameObject GetControllerModel(GameObject controller)
		{
			return null;
		}

		[Token(Token = "0x600220A")]
		[Address(RVA = "0xDDE314", Offset = "0xDDE314", VA = "0xDDE314", Slot = "26")]
		public override GameObject GetControllerModel(ControllerHand hand)
		{
			return null;
		}

		[Token(Token = "0x600220B")]
		[Address(RVA = "0xDDE31C", Offset = "0xDDE31C", VA = "0xDDE31C", Slot = "28")]
		public override GameObject GetControllerRenderModel(VRTK_ControllerReference controllerReference)
		{
			return null;
		}

		[Token(Token = "0x600220C")]
		[Address(RVA = "0xDDE324", Offset = "0xDDE324", VA = "0xDDE324", Slot = "29")]
		public override void SetControllerRenderModelWheel(GameObject renderModel, bool state)
		{
		}

		[Token(Token = "0x600220D")]
		[Address(RVA = "0xDDE328", Offset = "0xDDE328", VA = "0xDDE328", Slot = "30")]
		public override void HapticPulse(VRTK_ControllerReference controllerReference, float strength = 0.5f)
		{
		}

		[Token(Token = "0x600220E")]
		[Address(RVA = "0xDDE32C", Offset = "0xDDE32C", VA = "0xDDE32C", Slot = "31")]
		public override bool HapticPulse(VRTK_ControllerReference controllerReference, AudioClip clip)
		{
			return default(bool);
		}

		[Token(Token = "0x600220F")]
		[Address(RVA = "0xDDE334", Offset = "0xDDE334", VA = "0xDDE334", Slot = "32")]
		public override SDK_ControllerHapticModifiers GetHapticModifiers()
		{
			return null;
		}

		[Token(Token = "0x6002210")]
		[Address(RVA = "0xDDE3A8", Offset = "0xDDE3A8", VA = "0xDDE3A8", Slot = "33")]
		public override Vector3 GetVelocity(VRTK_ControllerReference controllerReference)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002211")]
		[Address(RVA = "0xDDE408", Offset = "0xDDE408", VA = "0xDDE408", Slot = "34")]
		public override Vector3 GetAngularVelocity(VRTK_ControllerReference controllerReference)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002212")]
		[Address(RVA = "0xDDE468", Offset = "0xDDE468", VA = "0xDDE468", Slot = "35")]
		public override bool IsTouchpadStatic(bool isTouched, Vector2 currentAxisValues, Vector2 previousAxisValues, int compareFidelity)
		{
			return default(bool);
		}

		[Token(Token = "0x6002213")]
		[Address(RVA = "0xDDE480", Offset = "0xDDE480", VA = "0xDDE480", Slot = "36")]
		public override Vector2 GetButtonAxis(ButtonTypes buttonType, VRTK_ControllerReference controllerReference)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6002214")]
		[Address(RVA = "0xDDE4E0", Offset = "0xDDE4E0", VA = "0xDDE4E0", Slot = "37")]
		public override float GetButtonSenseAxis(ButtonTypes buttonType, VRTK_ControllerReference controllerReference)
		{
			return default(float);
		}

		[Token(Token = "0x6002215")]
		[Address(RVA = "0xDDE4E8", Offset = "0xDDE4E8", VA = "0xDDE4E8", Slot = "38")]
		public override float GetButtonHairlineDelta(ButtonTypes buttonType, VRTK_ControllerReference controllerReference)
		{
			return default(float);
		}

		[Token(Token = "0x6002216")]
		[Address(RVA = "0xDDE4F0", Offset = "0xDDE4F0", VA = "0xDDE4F0", Slot = "39")]
		public override bool GetControllerButtonState(ButtonTypes buttonType, ButtonPressTypes pressType, VRTK_ControllerReference controllerReference)
		{
			return default(bool);
		}

		[Token(Token = "0x6002217")]
		[Address(RVA = "0xDDD9F0", Offset = "0xDDD9F0", VA = "0xDDD9F0")]
		public SDK_FallbackController()
		{
		}
	}
	[Token(Token = "0x2000445")]
	[AttributeAttribute(Name = "SDK_DescriptionAttribute", RVA = "0x640AF4", Offset = "0x640AF4")]
	public class SDK_FallbackHeadset : SDK_BaseHeadset
	{
		[Token(Token = "0x6002218")]
		[Address(RVA = "0xDDE4F8", Offset = "0xDDE4F8", VA = "0xDDE4F8", Slot = "8")]
		public override void ProcessUpdate(Dictionary<string, object> options)
		{
		}

		[Token(Token = "0x6002219")]
		[Address(RVA = "0xDDE4FC", Offset = "0xDDE4FC", VA = "0xDDE4FC", Slot = "9")]
		public override void ProcessFixedUpdate(Dictionary<string, object> options)
		{
		}

		[Token(Token = "0x600221A")]
		[Address(RVA = "0xDDE500", Offset = "0xDDE500", VA = "0xDDE500", Slot = "10")]
		public override Transform GetHeadset()
		{
			return null;
		}

		[Token(Token = "0x600221B")]
		[Address(RVA = "0xDDE508", Offset = "0xDDE508", VA = "0xDDE508", Slot = "11")]
		public override Transform GetHeadsetCamera()
		{
			return null;
		}

		[Token(Token = "0x600221C")]
		[Address(RVA = "0xDDE510", Offset = "0xDDE510", VA = "0xDDE510", Slot = "12")]
		public override string GetHeadsetType()
		{
			return null;
		}

		[Token(Token = "0x600221D")]
		[Address(RVA = "0xDDE558", Offset = "0xDDE558", VA = "0xDDE558", Slot = "13")]
		public override Vector3 GetHeadsetVelocity()
		{
			return default(Vector3);
		}

		[Token(Token = "0x600221E")]
		[Address(RVA = "0xDDE5B8", Offset = "0xDDE5B8", VA = "0xDDE5B8", Slot = "14")]
		public override Vector3 GetHeadsetAngularVelocity()
		{
			return default(Vector3);
		}

		[Token(Token = "0x600221F")]
		[Address(RVA = "0xDDE618", Offset = "0xDDE618", VA = "0xDDE618", Slot = "15")]
		public override void HeadsetFade(Color color, float duration, bool fadeOverlay = false)
		{
		}

		[Token(Token = "0x6002220")]
		[Address(RVA = "0xDDE61C", Offset = "0xDDE61C", VA = "0xDDE61C", Slot = "16")]
		public override bool HasHeadsetFade(Transform obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6002221")]
		[Address(RVA = "0xDDE624", Offset = "0xDDE624", VA = "0xDDE624", Slot = "17")]
		public override void AddHeadsetFade(Transform camera)
		{
		}

		[Token(Token = "0x6002222")]
		[Address(RVA = "0xDDDA84", Offset = "0xDDDA84", VA = "0xDDDA84")]
		public SDK_FallbackHeadset()
		{
		}
	}
	[Token(Token = "0x2000446")]
	[AttributeAttribute(Name = "SDK_DescriptionAttribute", RVA = "0x640B5C", Offset = "0x640B5C")]
	public class SDK_FallbackSystem : SDK_BaseSystem
	{
		[Token(Token = "0x6002223")]
		[Address(RVA = "0xDDE628", Offset = "0xDDE628", VA = "0xDDE628", Slot = "8")]
		public override bool IsDisplayOnDesktop()
		{
			return default(bool);
		}

		[Token(Token = "0x6002224")]
		[Address(RVA = "0xDDE630", Offset = "0xDDE630", VA = "0xDDE630", Slot = "9")]
		public override bool ShouldAppRenderWithLowResources()
		{
			return default(bool);
		}

		[Token(Token = "0x6002225")]
		[Address(RVA = "0xDDE638", Offset = "0xDDE638", VA = "0xDDE638", Slot = "10")]
		public override void ForceInterleavedReprojectionOn(bool force)
		{
		}

		[Token(Token = "0x6002226")]
		[Address(RVA = "0xDDDA94", Offset = "0xDDDA94", VA = "0xDDDA94")]
		public SDK_FallbackSystem()
		{
		}
	}
	[Token(Token = "0x2000447")]
	[AttributeAttribute(Name = "SDK_DescriptionAttribute", RVA = "0x640BA4", Offset = "0x640BA4")]
	public class SDK_HyperealVRBoundaries : SDK_FallbackBoundaries
	{
		[Token(Token = "0x6002227")]
		[Address(RVA = "0xDDE63C", Offset = "0xDDE63C", VA = "0xDDE63C")]
		public SDK_HyperealVRBoundaries()
		{
		}
	}
	[Token(Token = "0x2000448")]
	[AttributeAttribute(Name = "SDK_DescriptionAttribute", RVA = "0x640C0C", Offset = "0x640C0C")]
	public class SDK_HyperealVRController : SDK_FallbackController
	{
		[Token(Token = "0x6002228")]
		[Address(RVA = "0xDDE644", Offset = "0xDDE644", VA = "0xDDE644")]
		public SDK_HyperealVRController()
		{
		}
	}
	[Token(Token = "0x2000449")]
	public static class SDK_HyperealVRDefines
	{
		[Token(Token = "0x4001F51")]
		public const string ScriptingDefineSymbol = "VRTK_DEFINE_SDK_HYPEREALVR";

		[Token(Token = "0x4001F52")]
		private const string BuildTargetGroupName = "Standalone";

		[Token(Token = "0x6002229")]
		[Address(RVA = "0xDDE64C", Offset = "0xDDE64C", VA = "0xDDE64C")]
		[AttributeAttribute(Name = "SDK_ScriptingDefineSymbolPredicateAttribute", RVA = "0x66DFFC", Offset = "0x66DFFC")]
		private static bool IsHyperealVRAvailable()
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200044A")]
	[AttributeAttribute(Name = "SDK_DescriptionAttribute", RVA = "0x640C74", Offset = "0x640C74")]
	public class SDK_HyperealVRHeadset : SDK_FallbackHeadset
	{
		[Token(Token = "0x600222A")]
		[Address(RVA = "0xDDE6D0", Offset = "0xDDE6D0", VA = "0xDDE6D0")]
		public SDK_HyperealVRHeadset()
		{
		}
	}
	[Token(Token = "0x200044B")]
	[AttributeAttribute(Name = "SDK_DescriptionAttribute", RVA = "0x640CDC", Offset = "0x640CDC")]
	public class SDK_HyperealVRSystem : SDK_FallbackSystem
	{
		[Token(Token = "0x600222B")]
		[Address(RVA = "0xDDE6D8", Offset = "0xDDE6D8", VA = "0xDDE6D8")]
		public SDK_HyperealVRSystem()
		{
		}
	}
	[Token(Token = "0x200044C")]
	[AttributeAttribute(Name = "SDK_DescriptionAttribute", RVA = "0x640D4C", Offset = "0x640D4C")]
	public class SDK_PicoBoundaries : SDK_BaseBoundaries
	{
		[Token(Token = "0x600222C")]
		[Address(RVA = "0xABF180", Offset = "0xABF180", VA = "0xABF180", Slot = "8")]
		public override void InitBoundaries()
		{
		}

		[Token(Token = "0x600222D")]
		[Address(RVA = "0xABF184", Offset = "0xABF184", VA = "0xABF184", Slot = "9")]
		public override Transform GetPlayArea()
		{
			return null;
		}

		[Token(Token = "0x600222E")]
		[Address(RVA = "0xABF280", Offset = "0xABF280", VA = "0xABF280", Slot = "10")]
		public override Vector3[] GetPlayAreaVertices()
		{
			return null;
		}

		[Token(Token = "0x600222F")]
		[Address(RVA = "0xABF288", Offset = "0xABF288", VA = "0xABF288", Slot = "11")]
		public override float GetPlayAreaBorderThickness()
		{
			return default(float);
		}

		[Token(Token = "0x6002230")]
		[Address(RVA = "0xABF294", Offset = "0xABF294", VA = "0xABF294", Slot = "12")]
		public override bool IsPlayAreaSizeCalibrated()
		{
			return default(bool);
		}

		[Token(Token = "0x6002231")]
		[Address(RVA = "0xABF29C", Offset = "0xABF29C", VA = "0xABF29C", Slot = "13")]
		public override bool GetDrawAtRuntime()
		{
			return default(bool);
		}

		[Token(Token = "0x6002232")]
		[Address(RVA = "0xABF2A4", Offset = "0xABF2A4", VA = "0xABF2A4", Slot = "14")]
		public override void SetDrawAtRuntime(bool value)
		{
		}

		[Token(Token = "0x6002233")]
		[Address(RVA = "0xABF2A8", Offset = "0xABF2A8", VA = "0xABF2A8")]
		public SDK_PicoBoundaries()
		{
		}
	}
	[Token(Token = "0x200044D")]
	public class SDK_PicoCameraRig : MonoBehaviour
	{
		[Token(Token = "0x4001F53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65F324", Offset = "0x65F324")]
		public bool lockPhysicsUpdateRateToRenderFrequency;

		[Token(Token = "0x6002234")]
		[Address(RVA = "0xABF2B0", Offset = "0xABF2B0", VA = "0xABF2B0")]
		private void Start()
		{
		}

		[Token(Token = "0x6002235")]
		[Address(RVA = "0xABF324", Offset = "0xABF324", VA = "0xABF324", Slot = "4")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x6002236")]
		[Address(RVA = "0xABF36C", Offset = "0xABF36C", VA = "0xABF36C")]
		public SDK_PicoCameraRig()
		{
		}
	}
	[Token(Token = "0x200044E")]
	[AttributeAttribute(Name = "SDK_DescriptionAttribute", RVA = "0x640DB4", Offset = "0x640DB4")]
	public class SDK_PicoController : SDK_BaseController
	{
		[Token(Token = "0x4001F54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected SDK_PicoBoundaries cachedBoundariesSDK;

		[Token(Token = "0x4001F55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected VRTK_TrackedController cachedLeftController;

		[Token(Token = "0x4001F56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		protected VRTK_TrackedController cachedRightController;

		[Token(Token = "0x4001F57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		protected VRTK_VelocityEstimator cachedLeftVelocityEstimator;

		[Token(Token = "0x4001F58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		protected VRTK_VelocityEstimator cachedRightVelocityEstimator;

		[Token(Token = "0x4001F59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		protected bool[] previousHairTriggerState;

		[Token(Token = "0x4001F5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		protected bool[] currentHairTriggerState;

		[Token(Token = "0x4001F5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		protected bool[] previousHairGripState;

		[Token(Token = "0x4001F5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		protected bool[] currentHairGripState;

		[Token(Token = "0x4001F5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		protected float[] hairTriggerLimit;

		[Token(Token = "0x4001F5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		protected float[] hairGripLimit;

		[Token(Token = "0x4001F5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		protected ControllerType cachedControllerType;

		[Token(Token = "0x4001F60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private Vector2 tempAxis;

		[Token(Token = "0x4001F61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private bool touchpadIsDown;

		[Token(Token = "0x6002237")]
		[Address(RVA = "0xABF37C", Offset = "0xABF37C", VA = "0xABF37C", Slot = "5")]
		public override void OnAfterSetupLoad(VRTK_SDKSetup setup)
		{
		}

		[Token(Token = "0x6002238")]
		[Address(RVA = "0xABF384", Offset = "0xABF384", VA = "0xABF384", Slot = "9")]
		public override void ProcessUpdate(VRTK_ControllerReference controllerReference, Dictionary<string, object> options)
		{
		}

		[Token(Token = "0x6002239")]
		[Address(RVA = "0xABF394", Offset = "0xABF394", VA = "0xABF394", Slot = "10")]
		public override void ProcessFixedUpdate(VRTK_ControllerReference controllerReference, Dictionary<string, object> options)
		{
		}

		[Token(Token = "0x600223A")]
		[Address(RVA = "0xABF398", Offset = "0xABF398", VA = "0xABF398", Slot = "11")]
		public override ControllerType GetCurrentControllerType([Optional] VRTK_ControllerReference controllerReference)
		{
			return default(ControllerType);
		}

		[Token(Token = "0x600223B")]
		[Address(RVA = "0xABF3CC", Offset = "0xABF3CC", VA = "0xABF3CC", Slot = "12")]
		public override string GetControllerDefaultColliderPath(ControllerHand hand)
		{
			return null;
		}

		[Token(Token = "0x600223C")]
		[Address(RVA = "0xABF414", Offset = "0xABF414", VA = "0xABF414", Slot = "13")]
		public override string GetControllerElementPath(ControllerElements element, ControllerHand hand, bool fullPath = false)
		{
			return null;
		}

		[Token(Token = "0x600223D")]
		[Address(RVA = "0xABF470", Offset = "0xABF470", VA = "0xABF470", Slot = "14")]
		public override uint GetControllerIndex(GameObject controller)
		{
			return default(uint);
		}

		[Token(Token = "0x600223E")]
		[Address(RVA = "0xABF528", Offset = "0xABF528", VA = "0xABF528", Slot = "15")]
		public override GameObject GetControllerByIndex(uint index, bool actual = false)
		{
			return null;
		}

		[Token(Token = "0x600223F")]
		[Address(RVA = "0xABF720", Offset = "0xABF720", VA = "0xABF720", Slot = "16")]
		public override Transform GetControllerOrigin(VRTK_ControllerReference controllerReference)
		{
			return null;
		}

		[Token(Token = "0x6002240")]
		[Address(RVA = "0xABF780", Offset = "0xABF780", VA = "0xABF780", Slot = "17")]
		public override Transform GenerateControllerPointerOrigin(GameObject parent)
		{
			return null;
		}

		[Token(Token = "0x6002241")]
		[Address(RVA = "0xABF788", Offset = "0xABF788", VA = "0xABF788", Slot = "18")]
		public override GameObject GetControllerLeftHand(bool actual = false)
		{
			return null;
		}

		[Token(Token = "0x6002242")]
		[Address(RVA = "0xABF85C", Offset = "0xABF85C", VA = "0xABF85C", Slot = "19")]
		public override GameObject GetControllerRightHand(bool actual = false)
		{
			return null;
		}

		[Token(Token = "0x6002243")]
		[Address(RVA = "0xABF930", Offset = "0xABF930", VA = "0xABF930", Slot = "20")]
		public override bool IsControllerLeftHand(GameObject controller)
		{
			return default(bool);
		}

		[Token(Token = "0x6002244")]
		[Address(RVA = "0xABF940", Offset = "0xABF940", VA = "0xABF940", Slot = "21")]
		public override bool IsControllerRightHand(GameObject controller)
		{
			return default(bool);
		}

		[Token(Token = "0x6002245")]
		[Address(RVA = "0xABF950", Offset = "0xABF950", VA = "0xABF950", Slot = "22")]
		public override bool IsControllerLeftHand(GameObject controller, bool actual)
		{
			return default(bool);
		}

		[Token(Token = "0x6002246")]
		[Address(RVA = "0xABF964", Offset = "0xABF964", VA = "0xABF964", Slot = "23")]
		public override bool IsControllerRightHand(GameObject controller, bool actual)
		{
			return default(bool);
		}

		[Token(Token = "0x6002247")]
		[Address(RVA = "0xABF978", Offset = "0xABF978", VA = "0xABF978", Slot = "24")]
		public override bool WaitForControllerModel(ControllerHand hand)
		{
			return default(bool);
		}

		[Token(Token = "0x6002248")]
		[Address(RVA = "0xABF9D8", Offset = "0xABF9D8", VA = "0xABF9D8", Slot = "25")]
		public override GameObject GetControllerModel(GameObject controller)
		{
			return null;
		}

		[Token(Token = "0x6002249")]
		[Address(RVA = "0xABF9E8", Offset = "0xABF9E8", VA = "0xABF9E8", Slot = "26")]
		public override GameObject GetControllerModel(ControllerHand hand)
		{
			return null;
		}

		[Token(Token = "0x600224A")]
		[Address(RVA = "0xABFB58", Offset = "0xABFB58", VA = "0xABFB58", Slot = "28")]
		public override GameObject GetControllerRenderModel(VRTK_ControllerReference controllerReference)
		{
			return null;
		}

		[Token(Token = "0x600224B")]
		[Address(RVA = "0xABFB60", Offset = "0xABFB60", VA = "0xABFB60", Slot = "29")]
		public override void SetControllerRenderModelWheel(GameObject renderModel, bool state)
		{
		}

		[Token(Token = "0x600224C")]
		[Address(RVA = "0xABFB64", Offset = "0xABFB64", VA = "0xABFB64", Slot = "30")]
		public override void HapticPulse(VRTK_ControllerReference controllerReference, float strength = 0.5f)
		{
		}

		[Token(Token = "0x600224D")]
		[Address(RVA = "0xABFCB4", Offset = "0xABFCB4", VA = "0xABFCB4", Slot = "31")]
		public override bool HapticPulse(VRTK_ControllerReference controllerReference, AudioClip clip)
		{
			return default(bool);
		}

		[Token(Token = "0x600224E")]
		[Address(RVA = "0xABFCBC", Offset = "0xABFCBC", VA = "0xABFCBC", Slot = "32")]
		public override SDK_ControllerHapticModifiers GetHapticModifiers()
		{
			return null;
		}

		[Token(Token = "0x600224F")]
		[Address(RVA = "0xABFD54", Offset = "0xABFD54", VA = "0xABFD54", Slot = "33")]
		public override Vector3 GetVelocity(VRTK_ControllerReference controllerReference)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002250")]
		[Address(RVA = "0xABFEDC", Offset = "0xABFEDC", VA = "0xABFEDC", Slot = "34")]
		public override Vector3 GetAngularVelocity(VRTK_ControllerReference controllerReference)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002251")]
		[Address(RVA = "0xAC0064", Offset = "0xAC0064", VA = "0xAC0064", Slot = "35")]
		public override bool IsTouchpadStatic(bool isTouched, Vector2 currentAxisValues, Vector2 previousAxisValues, int compareFidelity)
		{
			return default(bool);
		}

		[Token(Token = "0x6002252")]
		[Address(RVA = "0xAC0070", Offset = "0xAC0070", VA = "0xAC0070", Slot = "36")]
		public override Vector2 GetButtonAxis(ButtonTypes buttonType, VRTK_ControllerReference controllerReference)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6002253")]
		[Address(RVA = "0xAC01AC", Offset = "0xAC01AC", VA = "0xAC01AC", Slot = "37")]
		public override float GetButtonSenseAxis(ButtonTypes buttonType, VRTK_ControllerReference controllerReference)
		{
			return default(float);
		}

		[Token(Token = "0x6002254")]
		[Address(RVA = "0xAC01B4", Offset = "0xAC01B4", VA = "0xAC01B4", Slot = "38")]
		public override float GetButtonHairlineDelta(ButtonTypes buttonType, VRTK_ControllerReference controllerReference)
		{
			return default(float);
		}

		[Token(Token = "0x6002255")]
		[Address(RVA = "0xAC0234", Offset = "0xAC0234", VA = "0xAC0234", Slot = "39")]
		public override bool GetControllerButtonState(ButtonTypes buttonType, ButtonPressTypes pressType, VRTK_ControllerReference controllerReference)
		{
			return default(bool);
		}

		[Token(Token = "0x6002256")]
		[Address(RVA = "0xAC04BC", Offset = "0xAC04BC", VA = "0xAC04BC")]
		private bool GetTouchpadTouchState(int index, ButtonPressTypes type)
		{
			return default(bool);
		}

		[Token(Token = "0x6002257")]
		[Address(RVA = "0xAC053C", Offset = "0xAC053C", VA = "0xAC053C")]
		private bool StartTouchpadTouch()
		{
			return default(bool);
		}

		[Token(Token = "0x6002258")]
		[Address(RVA = "0xAC055C", Offset = "0xAC055C", VA = "0xAC055C")]
		private bool EndTouchpadTouch()
		{
			return default(bool);
		}

		[Token(Token = "0x6002259")]
		[Address(RVA = "0xAC0578", Offset = "0xAC0578", VA = "0xAC0578", Slot = "52")]
		protected virtual void SetControllerButtonValues(ref Dictionary<ButtonTypes, Pvr_KeyCode?> touchKeyCodes, ref Dictionary<ButtonTypes, Pvr_KeyCode?> pressKeyCodes, int joystickIndex, int[] touchCodes, int[] pressCodes)
		{
		}

		[Token(Token = "0x600225A")]
		[Address(RVA = "0xAC0954", Offset = "0xAC0954", VA = "0xAC0954", Slot = "53")]
		protected virtual Pvr_KeyCode StringToKeyCode(int index, int code)
		{
			return default(Pvr_KeyCode);
		}

		[Token(Token = "0x600225B")]
		[Address(RVA = "0xAC0C34", Offset = "0xAC0C34", VA = "0xAC0C34", Slot = "54")]
		protected virtual void BothControllersReady()
		{
		}

		[Token(Token = "0x600225C")]
		[Address(RVA = "0xAC0CE0", Offset = "0xAC0CE0", VA = "0xAC0CE0", Slot = "55")]
		protected virtual void ProcessControllerUpdate(VRTK_ControllerReference controllerReference)
		{
		}

		[Token(Token = "0x600225D")]
		[Address(RVA = "0xAC0F1C", Offset = "0xAC0F1C", VA = "0xAC0F1C", Slot = "56")]
		protected virtual Vector2 GetThumbstickValue(VRTK_ControllerReference controllerReference)
		{
			return default(Vector2);
		}

		[Token(Token = "0x600225E")]
		[Address(RVA = "0xAC1054", Offset = "0xAC1054", VA = "0xAC1054", Slot = "57")]
		protected virtual Vector2 GetThumbstickValue(int index)
		{
			return default(Vector2);
		}

		[Token(Token = "0x600225F")]
		[Address(RVA = "0xAC117C", Offset = "0xAC117C", VA = "0xAC117C", Slot = "58")]
		protected virtual bool CheckAxisTouch(int index)
		{
			return default(bool);
		}

		[Token(Token = "0x6002260")]
		[Address(RVA = "0xAC1238", Offset = "0xAC1238", VA = "0xAC1238", Slot = "59")]
		protected virtual void SetTrackedControllerCaches(bool forceRefresh = false)
		{
		}

		[Token(Token = "0x6002261")]
		[Address(RVA = "0xAC1674", Offset = "0xAC1674", VA = "0xAC1674", Slot = "60")]
		protected virtual VRTK_TrackedController GetTrackedObject(GameObject controller)
		{
			return null;
		}

		[Token(Token = "0x6002262")]
		[Address(RVA = "0xAC16F8", Offset = "0xAC16F8", VA = "0xAC16F8", Slot = "61")]
		public virtual bool IsButtonPressed(int index, ButtonPressTypes type, Pvr_KeyCode button)
		{
			return default(bool);
		}

		[Token(Token = "0x6002263")]
		[Address(RVA = "0xAC18DC", Offset = "0xAC18DC", VA = "0xAC18DC", Slot = "62")]
		protected virtual void UpdateHairValues(uint index, float axisValue, float hairDelta, ref bool previousState, ref bool currentState, ref float hairLimit)
		{
		}

		[Token(Token = "0x6002264")]
		[Address(RVA = "0xAC19FC", Offset = "0xAC19FC", VA = "0xAC19FC", Slot = "63")]
		protected virtual SDK_PicoBoundaries GetBoundariesSDK()
		{
			return null;
		}

		[Token(Token = "0x6002265")]
		[Address(RVA = "0xAC1B88", Offset = "0xAC1B88", VA = "0xAC1B88", Slot = "64")]
		protected virtual bool HasAvatar(bool controllersAreVisible = true)
		{
			return default(bool);
		}

		[Token(Token = "0x6002266")]
		[Address(RVA = "0xAC1BAC", Offset = "0xAC1BAC", VA = "0xAC1BAC", Slot = "65")]
		protected virtual GameObject GetAvatar()
		{
			return null;
		}

		[Token(Token = "0x6002267")]
		[Address(RVA = "0xAC1BD0", Offset = "0xAC1BD0", VA = "0xAC1BD0")]
		public SDK_PicoController()
		{
		}
	}
	[Token(Token = "0x200044F")]
	public class SDK_PicoControllerTracker : MonoBehaviour
	{
		[Token(Token = "0x4001F62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65F35C", Offset = "0x65F35C")]
		public XRNode nodeType;

		[Token(Token = "0x4001F63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65F394", Offset = "0x65F394")]
		public uint index;

		[Token(Token = "0x4001F64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65F3CC", Offset = "0x65F3CC")]
		public string triggerAxisName;

		[Token(Token = "0x4001F65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65F418", Offset = "0x65F418")]
		public string gripAxisName;

		[Token(Token = "0x4001F66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65F464", Offset = "0x65F464")]
		public string touchpadHorizontalAxisName;

		[Token(Token = "0x4001F67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65F4B0", Offset = "0x65F4B0")]
		public string touchpadVerticalAxisName;

		[Token(Token = "0x6002268")]
		[Address(RVA = "0xAC1CBC", Offset = "0xAC1CBC", VA = "0xAC1CBC", Slot = "4")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6002269")]
		protected virtual string GetVarName<T>(T item) where T : class
		{
			return null;
		}

		[Token(Token = "0x600226A")]
		[Address(RVA = "0xAC1D78", Offset = "0xAC1D78", VA = "0xAC1D78", Slot = "6")]
		protected virtual void CheckAxisIsValid(string axisName, string varName)
		{
		}

		[Token(Token = "0x600226B")]
		[Address(RVA = "0xAC1D7C", Offset = "0xAC1D7C", VA = "0xAC1D7C", Slot = "7")]
		protected virtual void FixedUpdate()
		{
		}

		[Token(Token = "0x600226C")]
		[Address(RVA = "0xAC1ECC", Offset = "0xAC1ECC", VA = "0xAC1ECC")]
		public SDK_PicoControllerTracker()
		{
		}
	}
	[Token(Token = "0x2000450")]
	public static class SDK_PicoDefines
	{
		[Token(Token = "0x4001F68")]
		public const string ScriptingDefineSymbol = "VRTK_DEFINE_SDK_PICO";

		[Token(Token = "0x4001F69")]
		private const string BuildTargetGroupName = "Android";

		[Token(Token = "0x600226D")]
		[Address(RVA = "0xAC1F28", Offset = "0xAC1F28", VA = "0xAC1F28")]
		[AttributeAttribute(Name = "SDK_ScriptingDefineSymbolPredicateAttribute", RVA = "0x66E048", Offset = "0x66E048")]
		[AttributeAttribute(Name = "SDK_ScriptingDefineSymbolPredicateAttribute", RVA = "0x66E048", Offset = "0x66E048")]
		private static bool HasControllerVisualization()
		{
			return default(bool);
		}

		[Token(Token = "0x600226E")]
		[Address(RVA = "0xAC1FAC", Offset = "0xAC1FAC", VA = "0xAC1FAC")]
		[AttributeAttribute(Name = "SDK_ScriptingDefineSymbolPredicateAttribute", RVA = "0x66E0D8", Offset = "0x66E0D8")]
		private static bool IsXRSettingsEnabled()
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000451")]
	[AttributeAttribute(Name = "SDK_DescriptionAttribute", RVA = "0x640E1C", Offset = "0x640E1C")]
	public class SDK_PicoHeadset : SDK_BaseHeadset
	{
		[Token(Token = "0x4001F6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected VRTK_VelocityEstimator cachedHeadsetVelocityEstimator;

		[Token(Token = "0x600226F")]
		[Address(RVA = "0xAC1FB4", Offset = "0xAC1FB4", VA = "0xAC1FB4", Slot = "8")]
		public override void ProcessUpdate(Dictionary<string, object> options)
		{
		}

		[Token(Token = "0x6002270")]
		[Address(RVA = "0xAC1FB8", Offset = "0xAC1FB8", VA = "0xAC1FB8", Slot = "9")]
		public override void ProcessFixedUpdate(Dictionary<string, object> options)
		{
		}

		[Token(Token = "0x6002271")]
		[Address(RVA = "0xAC1FBC", Offset = "0xAC1FBC", VA = "0xAC1FBC", Slot = "10")]
		public override Transform GetHeadset()
		{
			return null;
		}

		[Token(Token = "0x6002272")]
		[Address(RVA = "0xAC20B8", Offset = "0xAC20B8", VA = "0xAC20B8", Slot = "11")]
		public override Transform GetHeadsetCamera()
		{
			return null;
		}

		[Token(Token = "0x6002273")]
		[Address(RVA = "0xAC20C4", Offset = "0xAC20C4", VA = "0xAC20C4", Slot = "12")]
		public override string GetHeadsetType()
		{
			return null;
		}

		[Token(Token = "0x6002274")]
		[Address(RVA = "0xAC20D4", Offset = "0xAC20D4", VA = "0xAC20D4", Slot = "13")]
		public override Vector3 GetHeadsetVelocity()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002275")]
		[Address(RVA = "0xAC211C", Offset = "0xAC211C", VA = "0xAC211C", Slot = "14")]
		public override Vector3 GetHeadsetAngularVelocity()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002276")]
		[Address(RVA = "0xAC2164", Offset = "0xAC2164", VA = "0xAC2164", Slot = "15")]
		public override void HeadsetFade(Color color, float duration, bool fadeOverlay = false)
		{
		}

		[Token(Token = "0x6002277")]
		[Address(RVA = "0xAC216C", Offset = "0xAC216C", VA = "0xAC216C", Slot = "16")]
		public override bool HasHeadsetFade(Transform obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6002278")]
		[Address(RVA = "0xAC21FC", Offset = "0xAC21FC", VA = "0xAC21FC", Slot = "17")]
		public override void AddHeadsetFade(Transform camera)
		{
		}

		[Token(Token = "0x6002279")]
		[Address(RVA = "0xAC24A8", Offset = "0xAC24A8", VA = "0xAC24A8", Slot = "19")]
		protected virtual void SetHeadsetCaches()
		{
		}

		[Token(Token = "0x600227A")]
		[Address(RVA = "0xAC2590", Offset = "0xAC2590", VA = "0xAC2590")]
		public SDK_PicoHeadset()
		{
		}
	}
	[Token(Token = "0x2000452")]
	public class SDK_PicoHeadsetTracker : MonoBehaviour
	{
		[Token(Token = "0x600227B")]
		[Address(RVA = "0xAC2598", Offset = "0xAC2598", VA = "0xAC2598")]
		public SDK_PicoHeadsetTracker()
		{
		}
	}
	[Token(Token = "0x2000453")]
	[AttributeAttribute(Name = "SDK_DescriptionAttribute", RVA = "0x640E84", Offset = "0x640E84")]
	public class SDK_PicoSystem : SDK_BaseSystem
	{
		[Token(Token = "0x600227C")]
		[Address(RVA = "0xAC25A0", Offset = "0xAC25A0", VA = "0xAC25A0", Slot = "8")]
		public override bool IsDisplayOnDesktop()
		{
			return default(bool);
		}

		[Token(Token = "0x600227D")]
		[Address(RVA = "0xAC25A8", Offset = "0xAC25A8", VA = "0xAC25A8", Slot = "9")]
		public override bool ShouldAppRenderWithLowResources()
		{
			return default(bool);
		}

		[Token(Token = "0x600227E")]
		[Address(RVA = "0xAC25B0", Offset = "0xAC25B0", VA = "0xAC25B0", Slot = "10")]
		public override void ForceInterleavedReprojectionOn(bool force)
		{
		}

		[Token(Token = "0x600227F")]
		[Address(RVA = "0xAC25B4", Offset = "0xAC25B4", VA = "0xAC25B4")]
		public SDK_PicoSystem()
		{
		}
	}
	[Token(Token = "0x2000454")]
	public class SDK_PlayStationFrustum : MonoBehaviour
	{
		[Token(Token = "0x2000850")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x646060", Offset = "0x646060")]
		private sealed class <Start>d__22 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002BDF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002BE0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002BE1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SDK_PlayStationFrustum <>4__this;

			[Token(Token = "0x1700035A")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6003384")]
				[Address(RVA = "0xAC35DC", Offset = "0xAC35DC", VA = "0xAC35DC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700035B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003386")]
				[Address(RVA = "0xAC364C", Offset = "0xAC364C", VA = "0xAC364C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003381")]
			[Address(RVA = "0xAC2D7C", Offset = "0xAC2D7C", VA = "0xAC2D7C")]
			[DebuggerHidden]
			public <Start>d__22(int <>1__state)
			{
			}

			[Token(Token = "0x6003382")]
			[Address(RVA = "0xAC34C4", Offset = "0xAC34C4", VA = "0xAC34C4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003383")]
			[Address(RVA = "0xAC34C8", Offset = "0xAC34C8", VA = "0xAC34C8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003385")]
			[Address(RVA = "0xAC35E4", Offset = "0xAC35E4", VA = "0xAC35E4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001F6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Color cachedShowColor;

		[Token(Token = "0x4001F6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Color cachedHideColor;

		[Token(Token = "0x4001F6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3 camAcceleration;

		[Token(Token = "0x4001F6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float fadeSpeed;

		[Token(Token = "0x4001F6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Renderer[] frustumRenderers;

		[Token(Token = "0x4001F70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Transform frustumTransform;

		[Token(Token = "0x4001F71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Vector3 hmdPositionRaw;

		[Token(Token = "0x4001F72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private Quaternion hmdRotationUnity;

		[Token(Token = "0x4001F73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private Quaternion hmdRotationRaw;

		[Token(Token = "0x4001F74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public float safeDistance;

		[Token(Token = "0x4001F75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Color showColor;

		[Token(Token = "0x4001F76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public Color hideColor;

		[Token(Token = "0x4001F77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x65F4FC", Offset = "0x65F4FC")]
		private bool <ShowFrustum>k__BackingField;

		[Token(Token = "0x170001FD")]
		public Vector3[] Bounds
		{
			[Token(Token = "0x6002283")]
			[Address(RVA = "0xAC268C", Offset = "0xAC268C", VA = "0xAC268C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001FE")]
		public bool ShowFrustum
		{
			[Token(Token = "0x6002284")]
			[Address(RVA = "0xAC2CC8", Offset = "0xAC2CC8", VA = "0xAC2CC8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66E124", Offset = "0x66E124")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002285")]
			[Address(RVA = "0xAC2CD0", Offset = "0xAC2CD0", VA = "0xAC2CD0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66E134", Offset = "0x66E134")]
			set
			{
			}
		}

		[Token(Token = "0x6002280")]
		[Address(RVA = "0xAC25BC", Offset = "0xAC25BC", VA = "0xAC25BC")]
		public void UpdateFrustumTracking()
		{
		}

		[Token(Token = "0x6002281")]
		[Address(RVA = "0xAC25C0", Offset = "0xAC25C0", VA = "0xAC25C0")]
		public void Register()
		{
		}

		[Token(Token = "0x6002282")]
		[Address(RVA = "0xAC2688", Offset = "0xAC2688", VA = "0xAC2688")]
		private void UpdateFrustumTransform()
		{
		}

		[Token(Token = "0x6002286")]
		[Address(RVA = "0xAC2CDC", Offset = "0xAC2CDC", VA = "0xAC2CDC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002287")]
		[Address(RVA = "0xAC2D08", Offset = "0xAC2D08", VA = "0xAC2D08")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x66E144", Offset = "0x66E144")]
		private IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x6002288")]
		[Address(RVA = "0xAC2DA8", Offset = "0xAC2DA8", VA = "0xAC2DA8")]
		private void Update()
		{
		}

		[Token(Token = "0x6002289")]
		[Address(RVA = "0xAC2690", Offset = "0xAC2690", VA = "0xAC2690")]
		private Vector3[] BoundsCalculation()
		{
			return null;
		}

		[Token(Token = "0x600228A")]
		[Address(RVA = "0xAC2DAC", Offset = "0xAC2DAC", VA = "0xAC2DAC")]
		private Bounds CalculateBoundingBox(GameObject gameObjectWithMesh)
		{
			return default(Bounds);
		}

		[Token(Token = "0x600228B")]
		[Address(RVA = "0xAC325C", Offset = "0xAC325C", VA = "0xAC325C")]
		private void UpdateFrustumDisplay()
		{
		}

		[Token(Token = "0x600228C")]
		[Address(RVA = "0xAC340C", Offset = "0xAC340C", VA = "0xAC340C")]
		public void TurnOnFrustum()
		{
		}

		[Token(Token = "0x600228D")]
		[Address(RVA = "0xAC3438", Offset = "0xAC3438", VA = "0xAC3438")]
		public void ToggleFrustum(bool on)
		{
		}

		[Token(Token = "0x600228E")]
		[Address(RVA = "0xAC346C", Offset = "0xAC346C", VA = "0xAC346C")]
		public void TurnOffFrustum()
		{
		}

		[Token(Token = "0x600228F")]
		[Address(RVA = "0xAC34A8", Offset = "0xAC34A8", VA = "0xAC34A8")]
		public SDK_PlayStationFrustum()
		{
		}
	}
	[Token(Token = "0x2000455")]
	public class SDK_PlayStationMoveController : MonoBehaviour
	{
		[Token(Token = "0x2000851")]
		public class TrackedDevice
		{
			[Token(Token = "0x4002BE2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Vector3 AngularVelocity;

			[Token(Token = "0x4002BE3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Transform DeviceTransform;

			[Token(Token = "0x4002BE4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public int Handle;

			[Token(Token = "0x4002BE5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Renderer Light;

			[Token(Token = "0x4002BE6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Quaternion Orientation;

			[Token(Token = "0x4002BE7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public bool PoorTracking;

			[Token(Token = "0x4002BE8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			public Vector3 Position;

			[Token(Token = "0x4002BE9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public bool Primary;

			[Token(Token = "0x4002BEA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			public Vector3 Velocity;

			[Token(Token = "0x6003387")]
			[Address(RVA = "0xAC37E4", Offset = "0xAC37E4", VA = "0xAC37E4")]
			public TrackedDevice()
			{
			}
		}

		[Token(Token = "0x2000852")]
		public enum Controller
		{
			[Token(Token = "0x4002BEC")]
			Primary,
			[Token(Token = "0x4002BED")]
			Secondary
		}

		[Serializable]
		[Token(Token = "0x2000853")]
		public enum PlayStationKeys
		{
			[Token(Token = "0x4002BEF")]
			Trigger = 334,
			[Token(Token = "0x4002BF0")]
			Middle = 335,
			[Token(Token = "0x4002BF1")]
			Start = 337,
			[Token(Token = "0x4002BF2")]
			Triangle = 333,
			[Token(Token = "0x4002BF3")]
			Circle = 331,
			[Token(Token = "0x4002BF4")]
			Cross = 330,
			[Token(Token = "0x4002BF5")]
			Square = 332,
			[Token(Token = "0x4002BF6")]
			Options = 1,
			[Token(Token = "0x4002BF7")]
			L1 = 2,
			[Token(Token = "0x4002BF8")]
			L3 = 3,
			[Token(Token = "0x4002BF9")]
			R1 = 4,
			[Token(Token = "0x4002BFA")]
			R3 = 5,
			[Token(Token = "0x4002BFB")]
			Touchpad = 6,
			[Token(Token = "0x4002BFC")]
			L2 = 7,
			[Token(Token = "0x4002BFD")]
			R2 = 8,
			[Token(Token = "0x4002BFE")]
			None = -1
		}

		[Token(Token = "0x4001F78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private TrackedDevice device;

		[Token(Token = "0x4001F79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private SDK_PlayStationVRInput.PSControllerType psControllerType;

		[Token(Token = "0x4001F7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[HideInInspector]
		public bool ActiveController;

		[Token(Token = "0x4001F7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Controller ControllerType;

		[Token(Token = "0x4001F7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[HideInInspector]
		public bool IsTracked;

		[Token(Token = "0x4001F7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Dictionary<PlayStationKeys, int> keyMappingsPSMove;

		[Token(Token = "0x4001F7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Dictionary<PlayStationKeys, KeyCode> keyMappingsDualShock4;

		[Token(Token = "0x4001F7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Vector3 lastPos;

		[Token(Token = "0x4001F80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Vector3 lastRot;

		[Token(Token = "0x4001F81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private List<Vector3> posList;

		[Token(Token = "0x4001F82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private List<float> timeList;

		[Token(Token = "0x4001F83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private List<Vector3> rotList;

		[Token(Token = "0x4001F84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private VRTK_VelocityEstimator velocityEstimator;

		[Token(Token = "0x170001FF")]
		public TrackedDevice Device
		{
			[Token(Token = "0x6002290")]
			[Address(RVA = "0xAC3654", Offset = "0xAC3654", VA = "0xAC3654")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000200")]
		public SDK_PlayStationVRInput.PSControllerType PSControllerType
		{
			[Token(Token = "0x6002291")]
			[Address(RVA = "0xAC37D4", Offset = "0xAC37D4", VA = "0xAC37D4")]
			get
			{
				return default(SDK_PlayStationVRInput.PSControllerType);
			}
			[Token(Token = "0x6002292")]
			[Address(RVA = "0xAC37DC", Offset = "0xAC37DC", VA = "0xAC37DC")]
			set
			{
			}
		}

		[Token(Token = "0x6002293")]
		[Address(RVA = "0xAC3684", Offset = "0xAC3684", VA = "0xAC3684")]
		public TrackedDevice CreateDevice()
		{
			return null;
		}

		[Token(Token = "0x6002294")]
		[Address(RVA = "0xAC38B4", Offset = "0xAC38B4", VA = "0xAC38B4")]
		public void OnUnregisterMoveController()
		{
		}

		[Token(Token = "0x6002295")]
		[Address(RVA = "0xAC38FC", Offset = "0xAC38FC", VA = "0xAC38FC")]
		public Vector2 Trigger()
		{
			return default(Vector2);
		}

		[Token(Token = "0x6002296")]
		[Address(RVA = "0xAC395C", Offset = "0xAC395C", VA = "0xAC395C")]
		public Vector3 GetDeviceVelocity()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002297")]
		[Address(RVA = "0xAC3A44", Offset = "0xAC3A44", VA = "0xAC3A44")]
		public Vector3 GetDeviceAngularVelocity()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002298")]
		[Address(RVA = "0xAC3B2C", Offset = "0xAC3B2C", VA = "0xAC3B2C")]
		public bool IsPoorTrackingQuality()
		{
			return default(bool);
		}

		[Token(Token = "0x6002299")]
		[Address(RVA = "0xAC3BF4", Offset = "0xAC3BF4", VA = "0xAC3BF4")]
		private void UpdateMoveTransforms()
		{
		}

		[Token(Token = "0x600229A")]
		[Address(RVA = "0xAC3C54", Offset = "0xAC3C54", VA = "0xAC3C54")]
		public Vector3 GetVelocity()
		{
			return default(Vector3);
		}

		[Token(Token = "0x600229B")]
		[Address(RVA = "0xAC402C", Offset = "0xAC402C", VA = "0xAC402C")]
		public Vector3 GetAngularVelocity()
		{
			return default(Vector3);
		}

		[Token(Token = "0x600229C")]
		[Address(RVA = "0xAC4060", Offset = "0xAC4060", VA = "0xAC4060")]
		public void SetKeyMappings(Dictionary<PlayStationKeys, KeyCode> mapping)
		{
		}

		[Token(Token = "0x600229D")]
		[Address(RVA = "0xAC43D4", Offset = "0xAC43D4", VA = "0xAC43D4")]
		public void SetKey(PlayStationKeys key, KeyCode inputKey)
		{
		}

		[Token(Token = "0x600229E")]
		[Address(RVA = "0xAC4478", Offset = "0xAC4478", VA = "0xAC4478")]
		public KeyCode GetControllerKey(PlayStationKeys key)
		{
			return default(KeyCode);
		}

		[Token(Token = "0x600229F")]
		[Address(RVA = "0xAC4614", Offset = "0xAC4614", VA = "0xAC4614")]
		public int GetStickId()
		{
			return default(int);
		}

		[Token(Token = "0x60022A0")]
		[Address(RVA = "0xAC46A8", Offset = "0xAC46A8", VA = "0xAC46A8")]
		private void Awake()
		{
		}

		[Token(Token = "0x60022A1")]
		[Address(RVA = "0xAC4828", Offset = "0xAC4828", VA = "0xAC4828")]
		private void Update()
		{
		}

		[Token(Token = "0x60022A2")]
		[Address(RVA = "0xAC4C00", Offset = "0xAC4C00", VA = "0xAC4C00")]
		public SDK_PlayStationMoveController()
		{
		}
	}
	[Token(Token = "0x2000456")]
	[AttributeAttribute(Name = "SDK_DescriptionAttribute", RVA = "0x640EF4", Offset = "0x640EF4")]
	public class SDK_PlayStationVRController : SDK_BaseController
	{
		[Token(Token = "0x2000854")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x646070", Offset = "0x646070")]
		private sealed class <Vibrate>d__7 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002BFF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002C00")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002C01")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float time;

			[Token(Token = "0x4002C02")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public SDK_PlayStationVRController <>4__this;

			[Token(Token = "0x4002C03")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public int index;

			[Token(Token = "0x1700035C")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600338B")]
				[Address(RVA = "0xAC7DE0", Offset = "0xAC7DE0", VA = "0xAC7DE0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700035D")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600338D")]
				[Address(RVA = "0xAC7E50", Offset = "0xAC7E50", VA = "0xAC7E50", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003388")]
			[Address(RVA = "0xAC5370", Offset = "0xAC5370", VA = "0xAC5370")]
			[DebuggerHidden]
			public <Vibrate>d__7(int <>1__state)
			{
			}

			[Token(Token = "0x6003389")]
			[Address(RVA = "0xAC7CE0", Offset = "0xAC7CE0", VA = "0xAC7CE0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600338A")]
			[Address(RVA = "0xAC7CE4", Offset = "0xAC7CE4", VA = "0xAC7CE4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600338C")]
			[Address(RVA = "0xAC7DE8", Offset = "0xAC7DE8", VA = "0xAC7DE8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000855")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x646080", Offset = "0x646080")]
		private sealed class <>c
		{
			[Token(Token = "0x4002C04")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002C05")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Predicate<SDK_PlayStationMoveController> <>9__37_0;

			[Token(Token = "0x4002C06")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Predicate<SDK_PlayStationMoveController> <>9__37_1;

			[Token(Token = "0x4002C07")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Predicate<SDK_PlayStationMoveController> <>9__43_0;

			[Token(Token = "0x4002C08")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static Predicate<SDK_PlayStationMoveController> <>9__43_1;

			[Token(Token = "0x4002C09")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public static Predicate<SDK_PlayStationMoveController> <>9__52_0;

			[Token(Token = "0x4002C0A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public static Predicate<SDK_PlayStationMoveController> <>9__52_1;

			[Token(Token = "0x600338F")]
			[Address(RVA = "0xAC7BA0", Offset = "0xAC7BA0", VA = "0xAC7BA0")]
			public <>c()
			{
			}

			[Token(Token = "0x6003390")]
			[Address(RVA = "0xAC7BA8", Offset = "0xAC7BA8", VA = "0xAC7BA8")]
			internal bool <GetActualController>b__37_0(SDK_PlayStationMoveController e)
			{
				return default(bool);
			}

			[Token(Token = "0x6003391")]
			[Address(RVA = "0xAC7BDC", Offset = "0xAC7BDC", VA = "0xAC7BDC")]
			internal bool <GetActualController>b__37_1(SDK_PlayStationMoveController e)
			{
				return default(bool);
			}

			[Token(Token = "0x6003392")]
			[Address(RVA = "0xAC7C10", Offset = "0xAC7C10", VA = "0xAC7C10")]
			internal bool <GetControllerModel>b__43_0(SDK_PlayStationMoveController e)
			{
				return default(bool);
			}

			[Token(Token = "0x6003393")]
			[Address(RVA = "0xAC7C44", Offset = "0xAC7C44", VA = "0xAC7C44")]
			internal bool <GetControllerModel>b__43_1(SDK_PlayStationMoveController e)
			{
				return default(bool);
			}

			[Token(Token = "0x6003394")]
			[Address(RVA = "0xAC7C78", Offset = "0xAC7C78", VA = "0xAC7C78")]
			internal bool <OnEnable>b__52_0(SDK_PlayStationMoveController e)
			{
				return default(bool);
			}

			[Token(Token = "0x6003395")]
			[Address(RVA = "0xAC7CAC", Offset = "0xAC7CAC", VA = "0xAC7CAC")]
			internal bool <OnEnable>b__52_1(SDK_PlayStationMoveController e)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4001F85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Coroutine vibrateCoroutine_L;

		[Token(Token = "0x4001F86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Coroutine vibrateCoroutine_R;

		[Token(Token = "0x4001F87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int maxVibration;

		[Token(Token = "0x4001F88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private float vibrationScale;

		[Token(Token = "0x4001F89")]
		private const string HandNameLeft = "HandLeft";

		[Token(Token = "0x4001F8A")]
		private const string HandNameRight = "HandRight";

		[Token(Token = "0x4001F8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private SDK_PlayStationMoveController leftController;

		[Token(Token = "0x4001F8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private SDK_PlayStationMoveController rightController;

		[Token(Token = "0x4001F8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private SDK_PlayStationVRKeyMappings keyMappings;

		[Token(Token = "0x4001F8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		protected VRTK_TrackedController cachedLeftController;

		[Token(Token = "0x4001F8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		protected VRTK_TrackedController cachedRightController;

		[Token(Token = "0x4001F90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private bool stick;

		[Token(Token = "0x4001F91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x89")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65F52C", Offset = "0x65F52C")]
		public bool Sticky;

		[Token(Token = "0x4001F92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65F564", Offset = "0x65F564")]
		public SDK_PlayStationMoveController.PlayStationKeys[] TouchPadSimulationActivator;

		[Token(Token = "0x4001F93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65F59C", Offset = "0x65F59C")]
		public SDK_PlayStationMoveController.PlayStationKeys[] TouchPadSimulationKey;

		[Token(Token = "0x4001F94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private List<int> m_downKeys;

		[Token(Token = "0x4001F95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private List<KeyCode> _internalButtonList;

		[Token(Token = "0x60022A3")]
		[Address(RVA = "0xAC5060", Offset = "0xAC5060", VA = "0xAC5060")]
		public void SetvibrationStrength(int value)
		{
		}

		[Token(Token = "0x60022A4")]
		[Address(RVA = "0xAC50E4", Offset = "0xAC50E4", VA = "0xAC50E4", Slot = "52")]
		public virtual void PlayStationHapticPulseOnIndex(uint index, float strength = 0.3f, bool controller = false)
		{
		}

		[Token(Token = "0x60022A5")]
		[Address(RVA = "0xAC51D8", Offset = "0xAC51D8", VA = "0xAC51D8", Slot = "53")]
		public virtual void TriggerHapticPulse(int index, int strength = 119, bool controller = false)
		{
		}

		[Token(Token = "0x60022A6")]
		[Address(RVA = "0xAC52B8", Offset = "0xAC52B8", VA = "0xAC52B8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x66E1A8", Offset = "0x66E1A8")]
		private IEnumerator Vibrate(int index, int strength = 119, bool dualShockController = false, float time = 0.1f)
		{
			return null;
		}

		[Token(Token = "0x60022A7")]
		[Address(RVA = "0xAC539C", Offset = "0xAC539C", VA = "0xAC539C")]
		private void NullCoroutine(int index)
		{
		}

		[Token(Token = "0x60022A8")]
		[Address(RVA = "0xAC53BC", Offset = "0xAC53BC", VA = "0xAC53BC", Slot = "24")]
		public override bool WaitForControllerModel(ControllerHand hand)
		{
			return default(bool);
		}

		[Token(Token = "0x60022A9")]
		[Address(RVA = "0xAC53C4", Offset = "0xAC53C4", VA = "0xAC53C4", Slot = "37")]
		public override float GetButtonSenseAxis(ButtonTypes buttonType, VRTK_ControllerReference controllerReference)
		{
			return default(float);
		}

		[Token(Token = "0x60022AA")]
		[Address(RVA = "0xAC53CC", Offset = "0xAC53CC", VA = "0xAC53CC", Slot = "54")]
		public virtual void SetKeyMappings(Dictionary<SDK_PlayStationMoveController.PlayStationKeys, KeyCode> givenKeyMappings)
		{
		}

		[Token(Token = "0x60022AB")]
		[Address(RVA = "0xAC5428", Offset = "0xAC5428", VA = "0xAC5428", Slot = "55")]
		public virtual void SetKeyMappings(Dictionary<SDK_PlayStationMoveController.PlayStationKeys, KeyCode> givenKeyMappings, SDK_PlayStationMoveController controller)
		{
		}

		[Token(Token = "0x60022AC")]
		[Address(RVA = "0xAC545C", Offset = "0xAC545C", VA = "0xAC545C", Slot = "9")]
		public override void ProcessUpdate(VRTK_ControllerReference controllerReference, Dictionary<string, object> options)
		{
		}

		[Token(Token = "0x60022AD")]
		[Address(RVA = "0xAC5460", Offset = "0xAC5460", VA = "0xAC5460", Slot = "10")]
		public override void ProcessFixedUpdate(VRTK_ControllerReference controllerReference, Dictionary<string, object> options)
		{
		}

		[Token(Token = "0x60022AE")]
		[Address(RVA = "0xAC5464", Offset = "0xAC5464", VA = "0xAC5464", Slot = "12")]
		public override string GetControllerDefaultColliderPath(ControllerHand hand)
		{
			return null;
		}

		[Token(Token = "0x60022AF")]
		[Address(RVA = "0xAC54AC", Offset = "0xAC54AC", VA = "0xAC54AC", Slot = "13")]
		public override string GetControllerElementPath(ControllerElements element, ControllerHand hand, bool fullPath = false)
		{
			return null;
		}

		[Token(Token = "0x60022B0")]
		[Address(RVA = "0xAC554C", Offset = "0xAC554C", VA = "0xAC554C", Slot = "14")]
		public override uint GetControllerIndex(GameObject controller)
		{
			return default(uint);
		}

		[Token(Token = "0x60022B1")]
		[Address(RVA = "0xAC5604", Offset = "0xAC5604", VA = "0xAC5604", Slot = "56")]
		protected virtual VRTK_TrackedController GetTrackedObject(GameObject controller)
		{
			return null;
		}

		[Token(Token = "0x60022B2")]
		[Address(RVA = "0xAC5688", Offset = "0xAC5688", VA = "0xAC5688", Slot = "57")]
		public virtual void SetTrackedControllerCaches(bool forceRefresh = false)
		{
		}

		[Token(Token = "0x60022B3")]
		[Address(RVA = "0xAC5964", Offset = "0xAC5964", VA = "0xAC5964", Slot = "15")]
		public override GameObject GetControllerByIndex(uint index, bool actual = false)
		{
			return null;
		}

		[Token(Token = "0x60022B4")]
		[Address(RVA = "0xAC5B5C", Offset = "0xAC5B5C", VA = "0xAC5B5C", Slot = "16")]
		public override Transform GetControllerOrigin(VRTK_ControllerReference controllerReference)
		{
			return null;
		}

		[Token(Token = "0x60022B5")]
		[Address(RVA = "0xAC5BA4", Offset = "0xAC5BA4", VA = "0xAC5BA4", Slot = "17")]
		public override Transform GenerateControllerPointerOrigin(GameObject parent)
		{
			return null;
		}

		[Token(Token = "0x60022B6")]
		[Address(RVA = "0xAC5BAC", Offset = "0xAC5BAC", VA = "0xAC5BAC", Slot = "18")]
		public override GameObject GetControllerLeftHand(bool actual = false)
		{
			return null;
		}

		[Token(Token = "0x60022B7")]
		[Address(RVA = "0xAC5F00", Offset = "0xAC5F00", VA = "0xAC5F00", Slot = "19")]
		public override GameObject GetControllerRightHand(bool actual = false)
		{
			return null;
		}

		[Token(Token = "0x60022B8")]
		[Address(RVA = "0xAC5C64", Offset = "0xAC5C64", VA = "0xAC5C64")]
		private static GameObject GetActualController(ControllerHand hand)
		{
			return null;
		}

		[Token(Token = "0x60022B9")]
		[Address(RVA = "0xAC6110", Offset = "0xAC6110", VA = "0xAC6110", Slot = "20")]
		public override bool IsControllerLeftHand(GameObject controller)
		{
			return default(bool);
		}

		[Token(Token = "0x60022BA")]
		[Address(RVA = "0xAC6120", Offset = "0xAC6120", VA = "0xAC6120", Slot = "21")]
		public override bool IsControllerRightHand(GameObject controller)
		{
			return default(bool);
		}

		[Token(Token = "0x60022BB")]
		[Address(RVA = "0xAC6130", Offset = "0xAC6130", VA = "0xAC6130", Slot = "22")]
		public override bool IsControllerLeftHand(GameObject controller, bool actual)
		{
			return default(bool);
		}

		[Token(Token = "0x60022BC")]
		[Address(RVA = "0xAC6144", Offset = "0xAC6144", VA = "0xAC6144", Slot = "23")]
		public override bool IsControllerRightHand(GameObject controller, bool actual)
		{
			return default(bool);
		}

		[Token(Token = "0x60022BD")]
		[Address(RVA = "0xAC6158", Offset = "0xAC6158", VA = "0xAC6158", Slot = "25")]
		public override GameObject GetControllerModel(GameObject controller)
		{
			return null;
		}

		[Token(Token = "0x60022BE")]
		[Address(RVA = "0xAC6168", Offset = "0xAC6168", VA = "0xAC6168", Slot = "26")]
		public override GameObject GetControllerModel(ControllerHand hand)
		{
			return null;
		}

		[Token(Token = "0x60022BF")]
		[Address(RVA = "0xAC64E0", Offset = "0xAC64E0", VA = "0xAC64E0", Slot = "29")]
		public override void SetControllerRenderModelWheel(GameObject renderModel, bool state)
		{
		}

		[Token(Token = "0x60022C0")]
		[Address(RVA = "0xAC64E4", Offset = "0xAC64E4", VA = "0xAC64E4", Slot = "32")]
		public override SDK_ControllerHapticModifiers GetHapticModifiers()
		{
			return null;
		}

		[Token(Token = "0x60022C1")]
		[Address(RVA = "0xAC6540", Offset = "0xAC6540", VA = "0xAC6540")]
		protected bool IsTouchModifierPressed()
		{
			return default(bool);
		}

		[Token(Token = "0x60022C2")]
		[Address(RVA = "0xAC65B4", Offset = "0xAC65B4", VA = "0xAC65B4")]
		protected bool IsHairTouchModifierPressed()
		{
			return default(bool);
		}

		[Token(Token = "0x60022C3")]
		[Address(RVA = "0xAC6628", Offset = "0xAC6628", VA = "0xAC6628")]
		protected bool IsButtonPressIgnored()
		{
			return default(bool);
		}

		[Token(Token = "0x60022C4")]
		[Address(RVA = "0xAC6660", Offset = "0xAC6660", VA = "0xAC6660")]
		protected bool IsButtonHairTouchIgnored()
		{
			return default(bool);
		}

		[Token(Token = "0x60022C5")]
		[Address(RVA = "0xAC669C", Offset = "0xAC669C", VA = "0xAC669C")]
		private bool TouchPadSimulator(uint index, ButtonPressTypes type)
		{
			return default(bool);
		}

		[Token(Token = "0x60022C6")]
		[Address(RVA = "0xAC6734", Offset = "0xAC6734", VA = "0xAC6734")]
		public bool IsButtonPressed(uint index, ButtonPressTypes type, ref SDK_PlayStationMoveController.PlayStationKeys[] playStationKey)
		{
			return default(bool);
		}

		[Token(Token = "0x60022C7")]
		[Address(RVA = "0xAC6F94", Offset = "0xAC6F94", VA = "0xAC6F94")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60022C8")]
		[Address(RVA = "0xAC71F4", Offset = "0xAC71F4", VA = "0xAC71F4", Slot = "28")]
		public override GameObject GetControllerRenderModel(VRTK_ControllerReference controllerReference)
		{
			return null;
		}

		[Token(Token = "0x60022C9")]
		[Address(RVA = "0xAC73A8", Offset = "0xAC73A8", VA = "0xAC73A8", Slot = "30")]
		public override void HapticPulse(VRTK_ControllerReference controllerReference, float strength = 0.5f)
		{
		}

		[Token(Token = "0x60022CA")]
		[Address(RVA = "0xAC73AC", Offset = "0xAC73AC", VA = "0xAC73AC", Slot = "31")]
		public override bool HapticPulse(VRTK_ControllerReference controllerReference, AudioClip clip)
		{
			return default(bool);
		}

		[Token(Token = "0x60022CB")]
		[Address(RVA = "0xAC73B4", Offset = "0xAC73B4", VA = "0xAC73B4", Slot = "33")]
		public override Vector3 GetVelocity(VRTK_ControllerReference controllerReference)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60022CC")]
		[Address(RVA = "0xAC7478", Offset = "0xAC7478", VA = "0xAC7478", Slot = "34")]
		public override Vector3 GetAngularVelocity(VRTK_ControllerReference controllerReference)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60022CD")]
		[Address(RVA = "0xAC7554", Offset = "0xAC7554", VA = "0xAC7554", Slot = "35")]
		public override bool IsTouchpadStatic(bool isTouched, Vector2 currentAxisValues, Vector2 previousAxisValues, int compareFidelity)
		{
			return default(bool);
		}

		[Token(Token = "0x60022CE")]
		[Address(RVA = "0xAC755C", Offset = "0xAC755C", VA = "0xAC755C", Slot = "36")]
		public override Vector2 GetButtonAxis(ButtonTypes buttonType, VRTK_ControllerReference controllerReference)
		{
			return default(Vector2);
		}

		[Token(Token = "0x60022CF")]
		[Address(RVA = "0xAC76FC", Offset = "0xAC76FC", VA = "0xAC76FC", Slot = "38")]
		public override float GetButtonHairlineDelta(ButtonTypes buttonType, VRTK_ControllerReference controllerReference)
		{
			return default(float);
		}

		[Token(Token = "0x60022D0")]
		[Address(RVA = "0xAC7704", Offset = "0xAC7704", VA = "0xAC7704", Slot = "39")]
		public override bool GetControllerButtonState(ButtonTypes buttonType, ButtonPressTypes pressType, VRTK_ControllerReference controllerReference)
		{
			return default(bool);
		}

		[Token(Token = "0x60022D1")]
		[Address(RVA = "0xAC7A08", Offset = "0xAC7A08", VA = "0xAC7A08", Slot = "11")]
		public override ControllerType GetCurrentControllerType(VRTK_ControllerReference reference)
		{
			return default(ControllerType);
		}

		[Token(Token = "0x60022D2")]
		[Address(RVA = "0xAC7A10", Offset = "0xAC7A10", VA = "0xAC7A10")]
		public SDK_PlayStationVRController()
		{
		}
	}
	[Token(Token = "0x2000457")]
	public class SDK_PlayStationVRInput : MonoBehaviour
	{
		[Token(Token = "0x2000856")]
		public enum PSControllerType
		{
			[Token(Token = "0x4002C0C")]
			Move,
			[Token(Token = "0x4002C0D")]
			DS4,
			[Token(Token = "0x4002C0E")]
			Auto,
			[Token(Token = "0x4002C0F")]
			None
		}

		[Token(Token = "0x2000857")]
		public delegate void HardwareChangedDelegate(PSControllerType type);

		[Token(Token = "0x2000858")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x646090", Offset = "0x646090")]
		private sealed class <DeviceTracking>d__20 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002C10")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002C11")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002C12")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SDK_PlayStationVRInput <>4__this;

			[Token(Token = "0x1700035E")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600339D")]
				[Address(RVA = "0xACC75C", Offset = "0xACC75C", VA = "0xACC75C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700035F")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600339F")]
				[Address(RVA = "0xACC7CC", Offset = "0xACC7CC", VA = "0xACC7CC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600339A")]
			[Address(RVA = "0xAC8170", Offset = "0xAC8170", VA = "0xAC8170")]
			[DebuggerHidden]
			public <DeviceTracking>d__20(int <>1__state)
			{
			}

			[Token(Token = "0x600339B")]
			[Address(RVA = "0xACC504", Offset = "0xACC504", VA = "0xACC504", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600339C")]
			[Address(RVA = "0xACC508", Offset = "0xACC508", VA = "0xACC508", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600339E")]
			[Address(RVA = "0xACC764", Offset = "0xACC764", VA = "0xACC764", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000859")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6460A0", Offset = "0x6460A0")]
		private sealed class <RegisterDualShock4Controller>d__28 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002C13")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002C14")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002C15")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SDK_PlayStationVRInput <>4__this;

			[Token(Token = "0x17000360")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60033A3")]
				[Address(RVA = "0xACC8D0", Offset = "0xACC8D0", VA = "0xACC8D0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000361")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60033A5")]
				[Address(RVA = "0xACC940", Offset = "0xACC940", VA = "0xACC940", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60033A0")]
			[Address(RVA = "0xAC8544", Offset = "0xAC8544", VA = "0xAC8544")]
			[DebuggerHidden]
			public <RegisterDualShock4Controller>d__28(int <>1__state)
			{
			}

			[Token(Token = "0x60033A1")]
			[Address(RVA = "0xACC7D4", Offset = "0xACC7D4", VA = "0xACC7D4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60033A2")]
			[Address(RVA = "0xACC7D8", Offset = "0xACC7D8", VA = "0xACC7D8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60033A4")]
			[Address(RVA = "0xACC8D8", Offset = "0xACC8D8", VA = "0xACC8D8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200085A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6460B0", Offset = "0x6460B0")]
		private sealed class <RegisterMoveControllers>d__29 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002C16")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002C17")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002C18")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SDK_PlayStationVRInput <>4__this;

			[Token(Token = "0x17000362")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60033A9")]
				[Address(RVA = "0xACCA3C", Offset = "0xACCA3C", VA = "0xACCA3C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000363")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60033AB")]
				[Address(RVA = "0xACCAAC", Offset = "0xACCAAC", VA = "0xACCAAC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60033A6")]
			[Address(RVA = "0xAC85E4", Offset = "0xAC85E4", VA = "0xAC85E4")]
			[DebuggerHidden]
			public <RegisterMoveControllers>d__29(int <>1__state)
			{
			}

			[Token(Token = "0x60033A7")]
			[Address(RVA = "0xACC948", Offset = "0xACC948", VA = "0xACC948", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60033A8")]
			[Address(RVA = "0xACC94C", Offset = "0xACC94C", VA = "0xACC94C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60033AA")]
			[Address(RVA = "0xACCA44", Offset = "0xACCA44", VA = "0xACCA44", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200085B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6460C0", Offset = "0x6460C0")]
		private sealed class <>c
		{
			[Token(Token = "0x4002C19")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002C1A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<KeyCode, string> <>9__100_0;

			[Token(Token = "0x60033AD")]
			[Address(RVA = "0xACC440", Offset = "0xACC440", VA = "0xACC440")]
			public <>c()
			{
			}

			[Token(Token = "0x60033AE")]
			[Address(RVA = "0xACC448", Offset = "0xACC448", VA = "0xACC448")]
			internal string <UpdateHints>b__100_0(KeyCode k)
			{
				return null;
			}
		}

		[Token(Token = "0x4001F96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static SDK_PlayStationVRInput m_instance;

		[Token(Token = "0x4001F97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private PSControllerType controlType;

		[Token(Token = "0x4001F98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private PSControllerType activeController;

		[Token(Token = "0x4001F99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static bool loaded;

		[Token(Token = "0x4001F9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Transform headsetRoot;

		[Token(Token = "0x4001F9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private SDK_PlayStationFrustum frustum;

		[Token(Token = "0x4001F9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x65F5D4", Offset = "0x65F5D4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65F5D4", Offset = "0x65F5D4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x65F5D4", Offset = "0x65F5D4")]
		public int MaxVibration;

		[Token(Token = "0x4001F9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Vector3 startHeadTrackingLocation;

		[Token(Token = "0x4001F9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool trackingStarted;

		[Token(Token = "0x4001F9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9")]
		private static bool _isLoading;

		[Token(Token = "0x4001FA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x65F650", Offset = "0x65F650")]
		public float _playerHeight;

		[Token(Token = "0x4001FA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Transform rightHand;

		[Token(Token = "0x4001FA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Transform leftHand;

		[Token(Token = "0x4001FA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Transform myCamera;

		[Token(Token = "0x4001FA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Transform trackedDevices;

		[Token(Token = "0x4001FA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private SDK_PlayStationMoveController rightController;

		[Token(Token = "0x4001FA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private SDK_PlayStationMoveController leftController;

		[Token(Token = "0x4001FA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static GameObject cachedCameraRig;

		[Token(Token = "0x4001FA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private GameObject hintCanvas;

		[Token(Token = "0x4001FAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private DebugParameterItem.DebugParameterFunction _func;

		[Token(Token = "0x4001FAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x65F678", Offset = "0x65F678")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65F678", Offset = "0x65F678")]
		public bool showControlHints;

		[Token(Token = "0x4001FAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x91")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65F6D8", Offset = "0x65F6D8")]
		public bool hideHandsAtSwitch;

		[Token(Token = "0x4001FAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x92")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65F710", Offset = "0x65F710")]
		public bool resetHandsAtSwitch;

		[Token(Token = "0x4001FAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x93")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65F748", Offset = "0x65F748")]
		public bool lockMouseToView;

		[Token(Token = "0x4001FAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x65F780", Offset = "0x65F780")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65F780", Offset = "0x65F780")]
		public float handMoveMultiplier;

		[Token(Token = "0x4001FB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65F7E0", Offset = "0x65F7E0")]
		public float handRotationMultiplier;

		[Token(Token = "0x4001FB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65F818", Offset = "0x65F818")]
		public float playerMoveMultiplier;

		[Token(Token = "0x4001FB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65F850", Offset = "0x65F850")]
		public float playerRotationMultiplier;

		[Token(Token = "0x4001FB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x65F888", Offset = "0x65F888")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65F888", Offset = "0x65F888")]
		public KeyCode mouseMovementKey;

		[Token(Token = "0x4001FB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65F8E8", Offset = "0x65F8E8")]
		public KeyCode toggleControlHints;

		[Token(Token = "0x4001FB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65F920", Offset = "0x65F920")]
		public KeyCode changeHands;

		[Token(Token = "0x4001FB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65F958", Offset = "0x65F958")]
		public KeyCode handsOnOff;

		[Token(Token = "0x4001FB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65F990", Offset = "0x65F990")]
		public KeyCode rotationPosition;

		[Token(Token = "0x4001FB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65F9C8", Offset = "0x65F9C8")]
		public KeyCode changeAxis;

		[Token(Token = "0x4001FB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x65FA00", Offset = "0x65FA00")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65FA00", Offset = "0x65FA00")]
		public KeyCode moveForward;

		[Token(Token = "0x4001FBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65FA60", Offset = "0x65FA60")]
		public KeyCode moveLeft;

		[Token(Token = "0x4001FBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65FA98", Offset = "0x65FA98")]
		public KeyCode moveBackward;

		[Token(Token = "0x4001FBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65FAD0", Offset = "0x65FAD0")]
		public KeyCode moveRight;

		[Token(Token = "0x4001FBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x65FB08", Offset = "0x65FB08")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65FB08", Offset = "0x65FB08")]
		public KeyCode triggerAlias;

		[Token(Token = "0x4001FBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65FB68", Offset = "0x65FB68")]
		public KeyCode gripAlias;

		[Token(Token = "0x4001FBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65FBA0", Offset = "0x65FBA0")]
		public KeyCode touchpadAlias;

		[Token(Token = "0x4001FC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65FBD8", Offset = "0x65FBD8")]
		public KeyCode buttonOneAlias;

		[Token(Token = "0x4001FC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65FC10", Offset = "0x65FC10")]
		public KeyCode buttonTwoAlias;

		[Token(Token = "0x4001FC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65FC48", Offset = "0x65FC48")]
		public KeyCode startMenuAlias;

		[Token(Token = "0x4001FC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65FC80", Offset = "0x65FC80")]
		public KeyCode touchModifier;

		[Token(Token = "0x4001FC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65FCB8", Offset = "0x65FCB8")]
		public KeyCode hairTouchModifier;

		[Token(Token = "0x4001FC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65FCF0", Offset = "0x65FCF0")]
		public KeyCode RadiusLimitKey;

		[Token(Token = "0x4001FC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65FD28", Offset = "0x65FD28")]
		public KeyCode IncreaseMultipliersKey;

		[Token(Token = "0x4001FC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65FD60", Offset = "0x65FD60")]
		public KeyCode DecreaseMultipliersKey;

		[Token(Token = "0x4001FC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private bool isHand;

		[Token(Token = "0x4001FC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private Text hintText;

		[Token(Token = "0x4001FCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private SDK_PlayStationMoveController currentHand;

		[Token(Token = "0x4001FCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private Vector3 oldPos;

		[Token(Token = "0x4001FCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		[SerializeField]
		private float controllerRadiusLimit;

		[Token(Token = "0x17000201")]
		private static SDK_PlayStationVRInput _instance
		{
			[Token(Token = "0x60022D3")]
			[Address(RVA = "0xAC7E68", Offset = "0xAC7E68", VA = "0xAC7E68")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000202")]
		public static bool isLoading
		{
			[Token(Token = "0x60022D4")]
			[Address(RVA = "0xAC7EF8", Offset = "0xAC7EF8", VA = "0xAC7EF8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60022D5")]
			[Address(RVA = "0xAC7F48", Offset = "0xAC7F48", VA = "0xAC7F48")]
			set
			{
			}
		}

		[Token(Token = "0x17000203")]
		public PSControllerType controllerType
		{
			[Token(Token = "0x60022D6")]
			[Address(RVA = "0xAC7FA0", Offset = "0xAC7FA0", VA = "0xAC7FA0")]
			get
			{
				return default(PSControllerType);
			}
			[Token(Token = "0x60022D7")]
			[Address(RVA = "0xAC7FA8", Offset = "0xAC7FA8", VA = "0xAC7FA8")]
			set
			{
			}
		}

		[Token(Token = "0x17000204")]
		public float playerHeight
		{
			[Token(Token = "0x60022E9")]
			[Address(RVA = "0xAC88C0", Offset = "0xAC88C0", VA = "0xAC88C0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60022EA")]
			[Address(RVA = "0xAC88C8", Offset = "0xAC88C8", VA = "0xAC88C8")]
			set
			{
			}
		}

		[Token(Token = "0x1400013E")]
		public event HardwareChangedDelegate OnHardwareChanged
		{
			[Token(Token = "0x60022E7")]
			[Address(RVA = "0xAC86E8", Offset = "0xAC86E8", VA = "0xAC86E8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66E338", Offset = "0x66E338")]
			add
			{
			}
			[Token(Token = "0x60022E8")]
			[Address(RVA = "0xAC87D4", Offset = "0xAC87D4", VA = "0xAC87D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66E348", Offset = "0x66E348")]
			remove
			{
			}
		}

		[Token(Token = "0x60022D8")]
		[Address(RVA = "0xAC7FB0", Offset = "0xAC7FB0", VA = "0xAC7FB0")]
		private void InitDeviceTracking()
		{
		}

		[Token(Token = "0x60022D9")]
		[Address(RVA = "0xAC80FC", Offset = "0xAC80FC", VA = "0xAC80FC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x66E20C", Offset = "0x66E20C")]
		private IEnumerator DeviceTracking()
		{
			return null;
		}

		[Token(Token = "0x60022DA")]
		[Address(RVA = "0xAC819C", Offset = "0xAC819C", VA = "0xAC819C")]
		private bool ControllersConnected()
		{
			return default(bool);
		}

		[Token(Token = "0x60022DB")]
		[Address(RVA = "0xAC81A4", Offset = "0xAC81A4", VA = "0xAC81A4")]
		private void UpdateInputTracking()
		{
		}

		[Token(Token = "0x60022DC")]
		[Address(RVA = "0xAC840C", Offset = "0xAC840C", VA = "0xAC840C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60022DD")]
		[Address(RVA = "0xAC8428", Offset = "0xAC8428", VA = "0xAC8428")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60022DE")]
		[Address(RVA = "0xAC842C", Offset = "0xAC842C", VA = "0xAC842C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60022DF")]
		[Address(RVA = "0xAC8434", Offset = "0xAC8434", VA = "0xAC8434")]
		public static void ResetDeviceTracking()
		{
		}

		[Token(Token = "0x60022E0")]
		[Address(RVA = "0xAC84CC", Offset = "0xAC84CC", VA = "0xAC84CC")]
		private void RegisterDevices()
		{
		}

		[Token(Token = "0x60022E1")]
		[Address(RVA = "0xAC84D0", Offset = "0xAC84D0", VA = "0xAC84D0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x66E270", Offset = "0x66E270")]
		private IEnumerator RegisterDualShock4Controller()
		{
			return null;
		}

		[Token(Token = "0x60022E2")]
		[Address(RVA = "0xAC8570", Offset = "0xAC8570", VA = "0xAC8570")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x66E2D4", Offset = "0x66E2D4")]
		private IEnumerator RegisterMoveControllers()
		{
			return null;
		}

		[Token(Token = "0x60022E3")]
		[Address(RVA = "0xAC8420", Offset = "0xAC8420", VA = "0xAC8420")]
		public void UnregisterDevices()
		{
		}

		[Token(Token = "0x60022E4")]
		[Address(RVA = "0xAC8610", Offset = "0xAC8610", VA = "0xAC8610")]
		private void UnregisterMoveControllers()
		{
		}

		[Token(Token = "0x60022E5")]
		[Address(RVA = "0xAC8614", Offset = "0xAC8614", VA = "0xAC8614")]
		public static void RecenterAll()
		{
		}

		[Token(Token = "0x60022E6")]
		[Address(RVA = "0xAC82C4", Offset = "0xAC82C4", VA = "0xAC82C4")]
		private void Recenter()
		{
		}

		[Token(Token = "0x60022EB")]
		[Address(RVA = "0xAC5FB8", Offset = "0xAC5FB8", VA = "0xAC5FB8")]
		public static GameObject FindInScene()
		{
			return null;
		}

		[Token(Token = "0x60022EC")]
		[Address(RVA = "0xAC8A90", Offset = "0xAC8A90", VA = "0xAC8A90")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x60022ED")]
		[Address(RVA = "0xAC88D0", Offset = "0xAC88D0", VA = "0xAC88D0")]
		private void UpdatePlayerHeight()
		{
		}

		[Token(Token = "0x60022EE")]
		[Address(RVA = "0xAC8BCC", Offset = "0xAC8BCC", VA = "0xAC8BCC")]
		private void Start()
		{
		}

		[Token(Token = "0x60022EF")]
		[Address(RVA = "0xAC8EF8", Offset = "0xAC8EF8", VA = "0xAC8EF8")]
		private void Update()
		{
		}

		[Token(Token = "0x60022F0")]
		[Address(RVA = "0xAC8EFC", Offset = "0xAC8EFC", VA = "0xAC8EFC")]
		private void SetUpEditorSimulator()
		{
		}

		[Token(Token = "0x60022F1")]
		[Address(RVA = "0xAC927C", Offset = "0xAC927C", VA = "0xAC927C")]
		private void UpdateSimulator()
		{
		}

		[Token(Token = "0x60022F2")]
		[Address(RVA = "0xAC9AD0", Offset = "0xAC9AD0", VA = "0xAC9AD0")]
		private void UpdateHands()
		{
		}

		[Token(Token = "0x60022F3")]
		[Address(RVA = "0xAC9424", Offset = "0xAC9424", VA = "0xAC9424")]
		private void RadiusLimiter()
		{
		}

		[Token(Token = "0x60022F4")]
		[Address(RVA = "0xAC96DC", Offset = "0xAC96DC", VA = "0xAC96DC")]
		private void MultiplierInputMonitor()
		{
		}

		[Token(Token = "0x60022F5")]
		[Address(RVA = "0xACC130", Offset = "0xACC130", VA = "0xACC130")]
		private void AdjustMultipliers(float value)
		{
		}

		[Token(Token = "0x60022F6")]
		[Address(RVA = "0xAC9E94", Offset = "0xAC9E94", VA = "0xAC9E94")]
		private void UpdateRotation()
		{
		}

		[Token(Token = "0x60022F7")]
		[Address(RVA = "0xACA184", Offset = "0xACA184", VA = "0xACA184")]
		private void UpdatePosition()
		{
		}

		[Token(Token = "0x60022F8")]
		[Address(RVA = "0xAC9814", Offset = "0xAC9814", VA = "0xAC9814")]
		private void SetHand()
		{
		}

		[Token(Token = "0x60022F9")]
		[Address(RVA = "0xAC9768", Offset = "0xAC9768", VA = "0xAC9768")]
		private void SetMove()
		{
		}

		[Token(Token = "0x60022FA")]
		[Address(RVA = "0xACA4F0", Offset = "0xACA4F0", VA = "0xACA4F0")]
		private void UpdateHints()
		{
		}

		[Token(Token = "0x60022FB")]
		[Address(RVA = "0xACC124", Offset = "0xACC124", VA = "0xACC124")]
		private bool IsAcceptingMouseInput()
		{
			return default(bool);
		}

		[Token(Token = "0x60022FC")]
		[Address(RVA = "0xACBFCC", Offset = "0xACBFCC", VA = "0xACBFCC")]
		private Vector3 GetMouseDelta()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60022FD")]
		[Address(RVA = "0xACC154", Offset = "0xACC154", VA = "0xACC154")]
		public SDK_PlayStationVRInput()
		{
		}

		[Token(Token = "0x60022FE")]
		[Address(RVA = "0xACC1DC", Offset = "0xACC1DC", VA = "0xACC1DC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66E358", Offset = "0x66E358")]
		private void <Start>b__54_0(bool clicked, out string name, out string value)
		{
		}

		[Token(Token = "0x60022FF")]
		[Address(RVA = "0xACC290", Offset = "0xACC290", VA = "0xACC290")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66E368", Offset = "0x66E368")]
		private void <Start>b__54_1(bool clicked, out string name, out string value)
		{
		}
	}
	[Token(Token = "0x2000458")]
	[AttributeAttribute(Name = "SDK_DescriptionAttribute", RVA = "0x640F5C", Offset = "0x640F5C")]
	public class SDK_PlayStationVRBoundaries : SDK_FallbackBoundaries
	{
		[Token(Token = "0x6002300")]
		[Address(RVA = "0xAC5058", Offset = "0xAC5058", VA = "0xAC5058")]
		public SDK_PlayStationVRBoundaries()
		{
		}
	}
	[Token(Token = "0x2000459")]
	public static class SDK_PlayStationVRDefines
	{
		[Token(Token = "0x4001FCD")]
		public const string ScriptingDefineSymbol = "VRTK_DEFINE_SDK_PlayStation";

		[Token(Token = "0x4001FCE")]
		public const string BuildTargetGroupName = "PS4";

		[Token(Token = "0x6002301")]
		[Address(RVA = "0xAC7E58", Offset = "0xAC7E58", VA = "0xAC7E58")]
		[AttributeAttribute(Name = "SDK_ScriptingDefineSymbolPredicateAttribute", RVA = "0x66E378", Offset = "0x66E378")]
		public static bool IsAvailable()
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200045A")]
	[AttributeAttribute(Name = "SDK_DescriptionAttribute", RVA = "0x640FC4", Offset = "0x640FC4")]
	public class SDK_PlayStationVRHeadset : SDK_FallbackHeadset
	{
		[Token(Token = "0x6002302")]
		[Address(RVA = "0xAC7E60", Offset = "0xAC7E60", VA = "0xAC7E60")]
		public SDK_PlayStationVRHeadset()
		{
		}
	}
	[Token(Token = "0x200045B")]
	public class SDK_PlayStationVRKeyMappings : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200085C")]
		public class ControlSet
		{
			[Token(Token = "0x4002C1B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SDK_PlayStationMoveController.PlayStationKeys[] trigger;

			[Token(Token = "0x4002C1C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public SDK_PlayStationMoveController.PlayStationKeys[] triggerHairline;

			[Token(Token = "0x4002C1D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SDK_PlayStationMoveController.PlayStationKeys[] grip;

			[Token(Token = "0x4002C1E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public SDK_PlayStationMoveController.PlayStationKeys[] gripHairline;

			[Token(Token = "0x4002C1F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public SDK_PlayStationMoveController.PlayStationKeys[] touchpad;

			[Token(Token = "0x4002C20")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public SDK_PlayStationMoveController.PlayStationKeys[] buttonOne;

			[Token(Token = "0x4002C21")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public SDK_PlayStationMoveController.PlayStationKeys[] buttonTwo;

			[Token(Token = "0x4002C22")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public SDK_PlayStationMoveController.PlayStationKeys[] startMenu;

			[Token(Token = "0x60033AF")]
			[Address(RVA = "0xACD04C", Offset = "0xACD04C", VA = "0xACD04C")]
			public static bool ContainsKeys(ref SDK_PlayStationMoveController.PlayStationKeys[] checkKeys, SDK_PlayStationMoveController.PlayStationKeys option1, SDK_PlayStationMoveController.PlayStationKeys option2)
			{
				return default(bool);
			}

			[Token(Token = "0x60033B0")]
			[Address(RVA = "0xACD144", Offset = "0xACD144", VA = "0xACD144")]
			public ControlSet()
			{
			}
		}

		[Token(Token = "0x4001FCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ControlSet MoveControlMapping;

		[Token(Token = "0x4001FD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ControlSet DualShock4ControlMapping;

		[Token(Token = "0x4001FD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static bool m_L2Old;

		[Token(Token = "0x4001FD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		public static bool m_R2Old;

		[Token(Token = "0x4001FD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
		private static bool m_LastHadController;

		[Token(Token = "0x4001FD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3")]
		private static bool m_LastHadMoves;

		[Token(Token = "0x6002303")]
		[Address(RVA = "0xACCF9C", Offset = "0xACCF9C", VA = "0xACCF9C")]
		public void LateUpdate()
		{
		}

		[Token(Token = "0x6002304")]
		[Address(RVA = "0xACD040", Offset = "0xACD040", VA = "0xACD040")]
		private void Update()
		{
		}

		[Token(Token = "0x6002305")]
		[Address(RVA = "0xACD044", Offset = "0xACD044", VA = "0xACD044")]
		public SDK_PlayStationVRKeyMappings()
		{
		}
	}
	[Token(Token = "0x200045C")]
	[AttributeAttribute(Name = "SDK_DescriptionAttribute", RVA = "0x64202C", Offset = "0x64202C")]
	public class SDK_PlayStationVRSystem : SDK_FallbackSystem
	{
		[Token(Token = "0x6002306")]
		[Address(RVA = "0xACD37C", Offset = "0xACD37C", VA = "0xACD37C")]
		public SDK_PlayStationVRSystem()
		{
		}
	}
	[Token(Token = "0x200045D")]
	public class SDK_ControllerSim : MonoBehaviour
	{
		[Token(Token = "0x4001FD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public bool selected;

		[Token(Token = "0x4001FD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected VRTK_VelocityEstimator cachedVelocityEstimator;

		[Token(Token = "0x4001FD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected float magnitude;

		[Token(Token = "0x4001FD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		protected Vector3 axis;

		[Token(Token = "0x6002307")]
		[Address(RVA = "0xDDD834", Offset = "0xDDD834", VA = "0xDDD834")]
		public Vector3 GetVelocity()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002308")]
		[Address(RVA = "0xDDD878", Offset = "0xDDD878", VA = "0xDDD878")]
		public Vector3 GetAngularVelocity()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002309")]
		[Address(RVA = "0xDDD8BC", Offset = "0xDDD8BC", VA = "0xDDD8BC", Slot = "4")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x600230A")]
		[Address(RVA = "0xDDD8C8", Offset = "0xDDD8C8", VA = "0xDDD8C8", Slot = "5")]
		protected virtual void SetCaches()
		{
		}

		[Token(Token = "0x600230B")]
		[Address(RVA = "0xDDD9D0", Offset = "0xDDD9D0", VA = "0xDDD9D0")]
		public SDK_ControllerSim()
		{
		}
	}
	[Token(Token = "0x200045E")]
	public class SDK_InputSimulator : MonoBehaviour
	{
		[Token(Token = "0x200085D")]
		public enum MouseInputMode
		{
			[Token(Token = "0x4002C24")]
			Always,
			[Token(Token = "0x4002C25")]
			RequiresButtonPress
		}

		[Serializable]
		[Token(Token = "0x200085E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6460D0", Offset = "0x6460D0")]
		private sealed class <>c
		{
			[Token(Token = "0x4002C26")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002C27")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<KeyCode, string> <>9__68_0;

			[Token(Token = "0x60033B2")]
			[Address(RVA = "0xABF0BC", Offset = "0xABF0BC", VA = "0xABF0BC")]
			public <>c()
			{
			}

			[Token(Token = "0x60033B3")]
			[Address(RVA = "0xABF0C4", Offset = "0xABF0C4", VA = "0xABF0C4")]
			internal string <UpdateHints>b__68_0(KeyCode k)
			{
				return null;
			}
		}

		[Token(Token = "0x4001FD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x65FDB8", Offset = "0x65FDB8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65FDB8", Offset = "0x65FDB8")]
		public bool showControlHints;

		[Token(Token = "0x4001FDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65FE18", Offset = "0x65FE18")]
		public bool hideHandsAtSwitch;

		[Token(Token = "0x4001FDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65FE50", Offset = "0x65FE50")]
		public bool resetHandsAtSwitch;

		[Token(Token = "0x4001FDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65FE88", Offset = "0x65FE88")]
		public bool showHandAxisHelpers;

		[Token(Token = "0x4001FDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x65FEC0", Offset = "0x65FEC0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65FEC0", Offset = "0x65FEC0")]
		public bool lockMouseToView;

		[Token(Token = "0x4001FDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65FF20", Offset = "0x65FF20")]
		public MouseInputMode mouseMovementInput;

		[Token(Token = "0x4001FDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x65FF58", Offset = "0x65FF58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65FF58", Offset = "0x65FF58")]
		public float handMoveMultiplier;

		[Token(Token = "0x4001FE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65FFB8", Offset = "0x65FFB8")]
		public float handRotationMultiplier;

		[Token(Token = "0x4001FE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x65FFF0", Offset = "0x65FFF0")]
		public float playerMoveMultiplier;

		[Token(Token = "0x4001FE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x660028", Offset = "0x660028")]
		public float playerRotationMultiplier;

		[Token(Token = "0x4001FE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x660060", Offset = "0x660060")]
		public float playerSprintMultiplier;

		[Token(Token = "0x4001FE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x660098", Offset = "0x660098")]
		public float lockedCursorMultiplier;

		[Token(Token = "0x4001FE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6600D0", Offset = "0x6600D0")]
		public Color leftHandColor;

		[Token(Token = "0x4001FE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x660108", Offset = "0x660108")]
		public Color rightHandColor;

		[Token(Token = "0x4001FE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x660140", Offset = "0x660140")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x660140", Offset = "0x660140")]
		public KeyCode mouseMovementKey;

		[Token(Token = "0x4001FE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6601A0", Offset = "0x6601A0")]
		public KeyCode toggleControlHints;

		[Token(Token = "0x4001FE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6601D8", Offset = "0x6601D8")]
		public KeyCode toggleMouseLock;

		[Token(Token = "0x4001FEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x660210", Offset = "0x660210")]
		public KeyCode changeHands;

		[Token(Token = "0x4001FEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x660248", Offset = "0x660248")]
		public KeyCode handsOnOff;

		[Token(Token = "0x4001FEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x660280", Offset = "0x660280")]
		public KeyCode rotationPosition;

		[Token(Token = "0x4001FED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6602B8", Offset = "0x6602B8")]
		public KeyCode changeAxis;

		[Token(Token = "0x4001FEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6602F0", Offset = "0x6602F0")]
		public KeyCode distancePickupLeft;

		[Token(Token = "0x4001FEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x660328", Offset = "0x660328")]
		public KeyCode distancePickupRight;

		[Token(Token = "0x4001FF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x660360", Offset = "0x660360")]
		public KeyCode distancePickupModifier;

		[Token(Token = "0x4001FF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x660398", Offset = "0x660398")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x660398", Offset = "0x660398")]
		public KeyCode moveForward;

		[Token(Token = "0x4001FF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6603F8", Offset = "0x6603F8")]
		public KeyCode moveLeft;

		[Token(Token = "0x4001FF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x660430", Offset = "0x660430")]
		public KeyCode moveBackward;

		[Token(Token = "0x4001FF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x660468", Offset = "0x660468")]
		public KeyCode moveRight;

		[Token(Token = "0x4001FF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6604A0", Offset = "0x6604A0")]
		public KeyCode sprint;

		[Token(Token = "0x4001FF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6604D8", Offset = "0x6604D8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6604D8", Offset = "0x6604D8")]
		public KeyCode triggerAlias;

		[Token(Token = "0x4001FF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x660538", Offset = "0x660538")]
		public KeyCode gripAlias;

		[Token(Token = "0x4001FF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x660570", Offset = "0x660570")]
		public KeyCode touchpadAlias;

		[Token(Token = "0x4001FF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6605A8", Offset = "0x6605A8")]
		public KeyCode buttonOneAlias;

		[Token(Token = "0x4001FFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6605E0", Offset = "0x6605E0")]
		public KeyCode buttonTwoAlias;

		[Token(Token = "0x4001FFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x660618", Offset = "0x660618")]
		public KeyCode startMenuAlias;

		[Token(Token = "0x4001FFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x660650", Offset = "0x660650")]
		public KeyCode touchModifier;

		[Token(Token = "0x4001FFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x660688", Offset = "0x660688")]
		public KeyCode hairTouchModifier;

		[Token(Token = "0x4001FFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		protected bool isHand;

		[Token(Token = "0x4001FFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		protected GameObject hintCanvas;

		[Token(Token = "0x4002000")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		protected Text hintText;

		[Token(Token = "0x4002001")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		protected Transform rightHand;

		[Token(Token = "0x4002002")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		protected Transform leftHand;

		[Token(Token = "0x4002003")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		protected Transform currentHand;

		[Token(Token = "0x4002004")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		protected Vector3 oldPos;

		[Token(Token = "0x4002005")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		protected Transform neck;

		[Token(Token = "0x4002006")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		protected SDK_ControllerSim rightController;

		[Token(Token = "0x4002007")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		protected SDK_ControllerSim leftController;

		[Token(Token = "0x4002008")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected static GameObject cachedCameraRig;

		[Token(Token = "0x4002009")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		protected static bool destroyed;

		[Token(Token = "0x400200A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		protected float sprintMultiplier;

		[Token(Token = "0x400200B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		protected GameObject crossHairPanel;

		[Token(Token = "0x400200C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		protected Transform leftHandHorizontalAxisGuide;

		[Token(Token = "0x400200D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		protected Transform leftHandVerticalAxisGuide;

		[Token(Token = "0x400200E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		protected Transform rightHandHorizontalAxisGuide;

		[Token(Token = "0x400200F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		protected Transform rightHandVerticalAxisGuide;

		[Token(Token = "0x600230C")]
		[Address(RVA = "0xDDE6E0", Offset = "0xDDE6E0", VA = "0xDDE6E0")]
		public static GameObject FindInScene()
		{
			return null;
		}

		[Token(Token = "0x600230D")]
		[Address(RVA = "0xDDE9A0", Offset = "0xDDE9A0", VA = "0xDDE9A0", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x600230E")]
		[Address(RVA = "0xDDEA08", Offset = "0xDDEA08", VA = "0xDDEA08", Slot = "5")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x600230F")]
		[Address(RVA = "0xDDF0AC", Offset = "0xDDF0AC", VA = "0xDDF0AC", Slot = "6")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x6002310")]
		[Address(RVA = "0xDDF148", Offset = "0xDDF148", VA = "0xDDF148", Slot = "7")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x6002311")]
		[Address(RVA = "0xDDF478", Offset = "0xDDF478", VA = "0xDDF478", Slot = "8")]
		protected virtual void SetHandColor(Transform hand, Color givenColor)
		{
		}

		[Token(Token = "0x6002312")]
		[Address(RVA = "0xDDF624", Offset = "0xDDF624", VA = "0xDDF624", Slot = "9")]
		protected virtual void TryPickup(bool rightHand)
		{
		}

		[Token(Token = "0x6002313")]
		[Address(RVA = "0xDDF8B8", Offset = "0xDDF8B8", VA = "0xDDF8B8", Slot = "10")]
		protected virtual void UpdateHands()
		{
		}

		[Token(Token = "0x6002314")]
		[Address(RVA = "0xDDFCD0", Offset = "0xDDFCD0", VA = "0xDDFCD0", Slot = "11")]
		protected virtual void UpdateRotation()
		{
		}

		[Token(Token = "0x6002315")]
		[Address(RVA = "0xDDFFD4", Offset = "0xDDFFD4", VA = "0xDDFFD4", Slot = "12")]
		protected virtual void UpdatePosition()
		{
		}

		[Token(Token = "0x6002316")]
		[Address(RVA = "0xDE02E0", Offset = "0xDE02E0", VA = "0xDE02E0", Slot = "13")]
		protected virtual void SetHand()
		{
		}

		[Token(Token = "0x6002317")]
		[Address(RVA = "0xDE0590", Offset = "0xDE0590", VA = "0xDE0590", Slot = "14")]
		protected virtual void SetMove()
		{
		}

		[Token(Token = "0x6002318")]
		[Address(RVA = "0xDE063C", Offset = "0xDE063C", VA = "0xDE063C", Slot = "15")]
		protected virtual void UpdateHints()
		{
		}

		[Token(Token = "0x6002319")]
		[Address(RVA = "0xDE21B4", Offset = "0xDE21B4", VA = "0xDE21B4", Slot = "16")]
		protected virtual bool IsAcceptingMouseInput()
		{
			return default(bool);
		}

		[Token(Token = "0x600231A")]
		[Address(RVA = "0xDE21D0", Offset = "0xDE21D0", VA = "0xDE21D0", Slot = "17")]
		protected virtual Vector3 GetMouseDelta()
		{
			return default(Vector3);
		}

		[Token(Token = "0x600231B")]
		[Address(RVA = "0xDE2354", Offset = "0xDE2354", VA = "0xDE2354", Slot = "18")]
		protected virtual void ToggleGuidePlanes(bool horizontalState, bool verticalState)
		{
		}

		[Token(Token = "0x600231C")]
		[Address(RVA = "0xDE2578", Offset = "0xDE2578", VA = "0xDE2578")]
		public SDK_InputSimulator()
		{
		}
	}
	[Token(Token = "0x200045F")]
	[AttributeAttribute(Name = "SDK_DescriptionAttribute", RVA = "0x6420AC", Offset = "0x6420AC")]
	public class SDK_SimBoundaries : SDK_BaseBoundaries
	{
		[Token(Token = "0x4002010")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Transform area;

		[Token(Token = "0x600231E")]
		[Address(RVA = "0xACD5C0", Offset = "0xACD5C0", VA = "0xACD5C0", Slot = "8")]
		public override void InitBoundaries()
		{
		}

		[Token(Token = "0x600231F")]
		[Address(RVA = "0xACD5C4", Offset = "0xACD5C4", VA = "0xACD5C4", Slot = "9")]
		public override Transform GetPlayArea()
		{
			return null;
		}

		[Token(Token = "0x6002320")]
		[Address(RVA = "0xACD6BC", Offset = "0xACD6BC", VA = "0xACD6BC", Slot = "10")]
		public override Vector3[] GetPlayAreaVertices()
		{
			return null;
		}

		[Token(Token = "0x6002321")]
		[Address(RVA = "0xACD9A4", Offset = "0xACD9A4", VA = "0xACD9A4", Slot = "11")]
		public override float GetPlayAreaBorderThickness()
		{
			return default(float);
		}

		[Token(Token = "0x6002322")]
		[Address(RVA = "0xACD9B0", Offset = "0xACD9B0", VA = "0xACD9B0", Slot = "12")]
		public override bool IsPlayAreaSizeCalibrated()
		{
			return default(bool);
		}

		[Token(Token = "0x6002323")]
		[Address(RVA = "0xACD9B8", Offset = "0xACD9B8", VA = "0xACD9B8", Slot = "13")]
		public override bool GetDrawAtRuntime()
		{
			return default(bool);
		}

		[Token(Token = "0x6002324")]
		[Address(RVA = "0xACD9C0", Offset = "0xACD9C0", VA = "0xACD9C0", Slot = "14")]
		public override void SetDrawAtRuntime(bool value)
		{
		}

		[Token(Token = "0x6002325")]
		[Address(RVA = "0xACD9C4", Offset = "0xACD9C4", VA = "0xACD9C4")]
		public SDK_SimBoundaries()
		{
		}
	}
	[Token(Token = "0x2000460")]
	[AttributeAttribute(Name = "SDK_DescriptionAttribute", RVA = "0x642114", Offset = "0x642114")]
	public class SDK_SimController : SDK_BaseController
	{
		[Token(Token = "0x4002011")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected SDK_ControllerSim rightController;

		[Token(Token = "0x4002012")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected SDK_ControllerSim leftController;

		[Token(Token = "0x4002013")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		protected Dictionary<string, KeyCode> keyMappings;

		[Token(Token = "0x4002014")]
		protected const string RIGHT_HAND_CONTROLLER_NAME = "RightHand";

		[Token(Token = "0x4002015")]
		protected const string LEFT_HAND_CONTROLLER_NAME = "LeftHand";

		[Token(Token = "0x6002326")]
		[Address(RVA = "0xACD9CC", Offset = "0xACD9CC", VA = "0xACD9CC", Slot = "52")]
		public virtual void SetKeyMappings(Dictionary<string, KeyCode> givenKeyMappings)
		{
		}

		[Token(Token = "0x6002327")]
		[Address(RVA = "0xACD9D4", Offset = "0xACD9D4", VA = "0xACD9D4", Slot = "9")]
		public override void ProcessUpdate(VRTK_ControllerReference controllerReference, Dictionary<string, object> options)
		{
		}

		[Token(Token = "0x6002328")]
		[Address(RVA = "0xACD9D8", Offset = "0xACD9D8", VA = "0xACD9D8", Slot = "10")]
		public override void ProcessFixedUpdate(VRTK_ControllerReference controllerReference, Dictionary<string, object> options)
		{
		}

		[Token(Token = "0x6002329")]
		[Address(RVA = "0xACD9DC", Offset = "0xACD9DC", VA = "0xACD9DC", Slot = "11")]
		public override ControllerType GetCurrentControllerType([Optional] VRTK_ControllerReference controllerReference)
		{
			return default(ControllerType);
		}

		[Token(Token = "0x600232A")]
		[Address(RVA = "0xACD9E4", Offset = "0xACD9E4", VA = "0xACD9E4", Slot = "12")]
		public override string GetControllerDefaultColliderPath(ControllerHand hand)
		{
			return null;
		}

		[Token(Token = "0x600232B")]
		[Address(RVA = "0xACDA2C", Offset = "0xACDA2C", VA = "0xACDA2C", Slot = "13")]
		public override string GetControllerElementPath(ControllerElements element, ControllerHand hand, bool fullPath = false)
		{
			return null;
		}

		[Token(Token = "0x600232C")]
		[Address(RVA = "0xACDAC0", Offset = "0xACDAC0", VA = "0xACDAC0", Slot = "14")]
		public override uint GetControllerIndex(GameObject controller)
		{
			return default(uint);
		}

		[Token(Token = "0x600232D")]
		[Address(RVA = "0xACDB20", Offset = "0xACDB20", VA = "0xACDB20", Slot = "15")]
		public override GameObject GetControllerByIndex(uint index, bool actual = false)
		{
			return null;
		}

		[Token(Token = "0x600232E")]
		[Address(RVA = "0xACDD00", Offset = "0xACDD00", VA = "0xACDD00", Slot = "16")]
		public override Transform GetControllerOrigin(VRTK_ControllerReference controllerReference)
		{
			return null;
		}

		[Token(Token = "0x600232F")]
		[Address(RVA = "0xACDDBC", Offset = "0xACDDBC", VA = "0xACDDBC", Slot = "17")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x66E3C4", Offset = "0x66E3C4")]
		public override Transform GenerateControllerPointerOrigin(GameObject parent)
		{
			return null;
		}

		[Token(Token = "0x6002330")]
		[Address(RVA = "0xACDDC4", Offset = "0xACDDC4", VA = "0xACDDC4", Slot = "18")]
		public override GameObject GetControllerLeftHand(bool actual = false)
		{
			return null;
		}

		[Token(Token = "0x6002331")]
		[Address(RVA = "0xACDE90", Offset = "0xACDE90", VA = "0xACDE90", Slot = "19")]
		public override GameObject GetControllerRightHand(bool actual = false)
		{
			return null;
		}

		[Token(Token = "0x6002332")]
		[Address(RVA = "0xACDF5C", Offset = "0xACDF5C", VA = "0xACDF5C", Slot = "20")]
		public override bool IsControllerLeftHand(GameObject controller)
		{
			return default(bool);
		}

		[Token(Token = "0x6002333")]
		[Address(RVA = "0xACDF6C", Offset = "0xACDF6C", VA = "0xACDF6C", Slot = "21")]
		public override bool IsControllerRightHand(GameObject controller)
		{
			return default(bool);
		}

		[Token(Token = "0x6002334")]
		[Address(RVA = "0xACDF7C", Offset = "0xACDF7C", VA = "0xACDF7C", Slot = "22")]
		public override bool IsControllerLeftHand(GameObject controller, bool actual)
		{
			return default(bool);
		}

		[Token(Token = "0x6002335")]
		[Address(RVA = "0xACDF90", Offset = "0xACDF90", VA = "0xACDF90", Slot = "23")]
		public override bool IsControllerRightHand(GameObject controller, bool actual)
		{
			return default(bool);
		}

		[Token(Token = "0x6002336")]
		[Address(RVA = "0xACDFA4", Offset = "0xACDFA4", VA = "0xACDFA4", Slot = "24")]
		public override bool WaitForControllerModel(ControllerHand hand)
		{
			return default(bool);
		}

		[Token(Token = "0x6002337")]
		[Address(RVA = "0xACDFAC", Offset = "0xACDFAC", VA = "0xACDFAC", Slot = "25")]
		public override GameObject GetControllerModel(GameObject controller)
		{
			return null;
		}

		[Token(Token = "0x6002338")]
		[Address(RVA = "0xACDFBC", Offset = "0xACDFBC", VA = "0xACDFBC", Slot = "26")]
		public override GameObject GetControllerModel(ControllerHand hand)
		{
			return null;
		}

		[Token(Token = "0x6002339")]
		[Address(RVA = "0xACE120", Offset = "0xACE120", VA = "0xACE120", Slot = "28")]
		public override GameObject GetControllerRenderModel(VRTK_ControllerReference controllerReference)
		{
			return null;
		}

		[Token(Token = "0x600233A")]
		[Address(RVA = "0xACE1E0", Offset = "0xACE1E0", VA = "0xACE1E0", Slot = "29")]
		public override void SetControllerRenderModelWheel(GameObject renderModel, bool state)
		{
		}

		[Token(Token = "0x600233B")]
		[Address(RVA = "0xACE1E4", Offset = "0xACE1E4", VA = "0xACE1E4", Slot = "30")]
		public override void HapticPulse(VRTK_ControllerReference controllerReference, float strength = 0.5f)
		{
		}

		[Token(Token = "0x600233C")]
		[Address(RVA = "0xACE1E8", Offset = "0xACE1E8", VA = "0xACE1E8", Slot = "31")]
		public override bool HapticPulse(VRTK_ControllerReference controllerReference, AudioClip clip)
		{
			return default(bool);
		}

		[Token(Token = "0x600233D")]
		[Address(RVA = "0xACE1F0", Offset = "0xACE1F0", VA = "0xACE1F0", Slot = "32")]
		public override SDK_ControllerHapticModifiers GetHapticModifiers()
		{
			return null;
		}

		[Token(Token = "0x600233E")]
		[Address(RVA = "0xACE24C", Offset = "0xACE24C", VA = "0xACE24C", Slot = "33")]
		public override Vector3 GetVelocity(VRTK_ControllerReference controllerReference)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600233F")]
		[Address(RVA = "0xACE3B0", Offset = "0xACE3B0", VA = "0xACE3B0", Slot = "34")]
		public override Vector3 GetAngularVelocity(VRTK_ControllerReference controllerReference)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002340")]
		[Address(RVA = "0xACE514", Offset = "0xACE514", VA = "0xACE514", Slot = "35")]
		public override bool IsTouchpadStatic(bool isTouched, Vector2 currentAxisValues, Vector2 previousAxisValues, int compareFidelity)
		{
			return default(bool);
		}

		[Token(Token = "0x6002341")]
		[Address(RVA = "0xACE52C", Offset = "0xACE52C", VA = "0xACE52C", Slot = "36")]
		public override Vector2 GetButtonAxis(ButtonTypes buttonType, VRTK_ControllerReference controllerReference)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6002342")]
		[Address(RVA = "0xACE58C", Offset = "0xACE58C", VA = "0xACE58C", Slot = "37")]
		public override float GetButtonSenseAxis(ButtonTypes buttonType, VRTK_ControllerReference controllerReference)
		{
			return default(float);
		}

		[Token(Token = "0x6002343")]
		[Address(RVA = "0xACE594", Offset = "0xACE594", VA = "0xACE594", Slot = "38")]
		public override float GetButtonHairlineDelta(ButtonTypes buttonType, VRTK_ControllerReference controllerReference)
		{
			return default(float);
		}

		[Token(Token = "0x6002344")]
		[Address(RVA = "0xACE59C", Offset = "0xACE59C", VA = "0xACE59C", Slot = "39")]
		public override bool GetControllerButtonState(ButtonTypes buttonType, ButtonPressTypes pressType, VRTK_ControllerReference controllerReference)
		{
			return default(bool);
		}

		[Token(Token = "0x6002345")]
		[Address(RVA = "0xACE66C", Offset = "0xACE66C", VA = "0xACE66C", Slot = "53")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6002346")]
		[Address(RVA = "0xACE67C", Offset = "0xACE67C", VA = "0xACE67C", Slot = "54")]
		protected virtual void SetupPlayer()
		{
		}

		[Token(Token = "0x6002347")]
		[Address(RVA = "0xACE8B8", Offset = "0xACE8B8", VA = "0xACE8B8", Slot = "55")]
		protected virtual bool IsTouchModifierPressed()
		{
			return default(bool);
		}

		[Token(Token = "0x6002348")]
		[Address(RVA = "0xACE924", Offset = "0xACE924", VA = "0xACE924", Slot = "56")]
		protected virtual bool IsHairTouchModifierPressed()
		{
			return default(bool);
		}

		[Token(Token = "0x6002349")]
		[Address(RVA = "0xACE990", Offset = "0xACE990", VA = "0xACE990", Slot = "57")]
		protected virtual bool IsButtonPressIgnored()
		{
			return default(bool);
		}

		[Token(Token = "0x600234A")]
		[Address(RVA = "0xACE9E0", Offset = "0xACE9E0", VA = "0xACE9E0", Slot = "58")]
		protected virtual bool IsButtonHairTouchIgnored()
		{
			return default(bool);
		}

		[Token(Token = "0x600234B")]
		[Address(RVA = "0xACEA34", Offset = "0xACEA34", VA = "0xACEA34", Slot = "59")]
		protected virtual bool GetControllerButtonState(uint index, string keyMapping, ButtonPressTypes pressType)
		{
			return default(bool);
		}

		[Token(Token = "0x600234C")]
		[Address(RVA = "0xACEB78", Offset = "0xACEB78", VA = "0xACEB78", Slot = "60")]
		protected virtual bool IsButtonPressed(uint index, ButtonPressTypes type, KeyCode button)
		{
			return default(bool);
		}

		[Token(Token = "0x600234D")]
		[Address(RVA = "0xACECF8", Offset = "0xACECF8", VA = "0xACECF8", Slot = "61")]
		protected virtual GameObject GetActualController(ControllerHand hand)
		{
			return null;
		}

		[Token(Token = "0x600234E")]
		[Address(RVA = "0xACEE3C", Offset = "0xACEE3C", VA = "0xACEE3C")]
		public SDK_SimController()
		{
		}
	}
	[Token(Token = "0x2000461")]
	[AttributeAttribute(Name = "SDK_DescriptionAttribute", RVA = "0x64217C", Offset = "0x64217C")]
	public class SDK_SimHeadset : SDK_BaseHeadset
	{
		[Token(Token = "0x4002016")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Transform camera;

		[Token(Token = "0x4002017")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected VRTK_VelocityEstimator cachedHeadsetVelocityEstimator;

		[Token(Token = "0x4002018")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float magnitude;

		[Token(Token = "0x4002019")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Vector3 axis;

		[Token(Token = "0x600234F")]
		[Address(RVA = "0xACF07C", Offset = "0xACF07C", VA = "0xACF07C", Slot = "8")]
		public override void ProcessUpdate(Dictionary<string, object> options)
		{
		}

		[Token(Token = "0x6002350")]
		[Address(RVA = "0xACF080", Offset = "0xACF080", VA = "0xACF080", Slot = "9")]
		public override void ProcessFixedUpdate(Dictionary<string, object> options)
		{
		}

		[Token(Token = "0x6002351")]
		[Address(RVA = "0xACF084", Offset = "0xACF084", VA = "0xACF084", Slot = "10")]
		public override Transform GetHeadset()
		{
			return null;
		}

		[Token(Token = "0x6002352")]
		[Address(RVA = "0xACF1A0", Offset = "0xACF1A0", VA = "0xACF1A0", Slot = "11")]
		public override Transform GetHeadsetCamera()
		{
			return null;
		}

		[Token(Token = "0x6002353")]
		[Address(RVA = "0xACF1AC", Offset = "0xACF1AC", VA = "0xACF1AC", Slot = "12")]
		public override string GetHeadsetType()
		{
			return null;
		}

		[Token(Token = "0x6002354")]
		[Address(RVA = "0xACF200", Offset = "0xACF200", VA = "0xACF200", Slot = "13")]
		public override Vector3 GetHeadsetVelocity()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002355")]
		[Address(RVA = "0xACF248", Offset = "0xACF248", VA = "0xACF248", Slot = "14")]
		public override Vector3 GetHeadsetAngularVelocity()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002356")]
		[Address(RVA = "0xACF290", Offset = "0xACF290", VA = "0xACF290", Slot = "15")]
		public override void HeadsetFade(Color color, float duration, bool fadeOverlay = false)
		{
		}

		[Token(Token = "0x6002357")]
		[Address(RVA = "0xACF298", Offset = "0xACF298", VA = "0xACF298", Slot = "16")]
		public override bool HasHeadsetFade(Transform obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6002358")]
		[Address(RVA = "0xACF32C", Offset = "0xACF32C", VA = "0xACF32C", Slot = "17")]
		public override void AddHeadsetFade(Transform camera)
		{
		}

		[Token(Token = "0x6002359")]
		[Address(RVA = "0xACF434", Offset = "0xACF434", VA = "0xACF434", Slot = "19")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x600235A")]
		[Address(RVA = "0xACF444", Offset = "0xACF444", VA = "0xACF444", Slot = "20")]
		protected virtual void SetHeadsetCaches()
		{
		}

		[Token(Token = "0x600235B")]
		[Address(RVA = "0xACF5B8", Offset = "0xACF5B8", VA = "0xACF5B8")]
		public SDK_SimHeadset()
		{
		}
	}
	[Token(Token = "0x2000462")]
	[AttributeAttribute(Name = "SDK_DescriptionAttribute", RVA = "0x6421E4", Offset = "0x6421E4")]
	public class SDK_SimSystem : SDK_BaseSystem
	{
		[Token(Token = "0x600235C")]
		[Address(RVA = "0xACF5C0", Offset = "0xACF5C0", VA = "0xACF5C0", Slot = "8")]
		public override bool IsDisplayOnDesktop()
		{
			return default(bool);
		}

		[Token(Token = "0x600235D")]
		[Address(RVA = "0xACF5C8", Offset = "0xACF5C8", VA = "0xACF5C8", Slot = "9")]
		public override bool ShouldAppRenderWithLowResources()
		{
			return default(bool);
		}

		[Token(Token = "0x600235E")]
		[Address(RVA = "0xACF5D0", Offset = "0xACF5D0", VA = "0xACF5D0", Slot = "10")]
		public override void ForceInterleavedReprojectionOn(bool force)
		{
		}

		[Token(Token = "0x600235F")]
		[Address(RVA = "0xACF5D4", Offset = "0xACF5D4", VA = "0xACF5D4")]
		public SDK_SimSystem()
		{
		}
	}
	[Token(Token = "0x2000463")]
	[AttributeAttribute(Name = "SDK_DescriptionAttribute", RVA = "0x64223C", Offset = "0x64223C")]
	public class SDK_SteamVRBoundaries : SDK_FallbackBoundaries
	{
		[Token(Token = "0x6002360")]
		[Address(RVA = "0xACF5DC", Offset = "0xACF5DC", VA = "0xACF5DC")]
		public SDK_SteamVRBoundaries()
		{
		}
	}
	[Token(Token = "0x2000464")]
	[AttributeAttribute(Name = "SDK_DescriptionAttribute", RVA = "0x6422A4", Offset = "0x6422A4")]
	public class SDK_SteamVRController : SDK_FallbackController
	{
		[Token(Token = "0x6002361")]
		[Address(RVA = "0xACF5E4", Offset = "0xACF5E4", VA = "0xACF5E4")]
		public SDK_SteamVRController()
		{
		}
	}
	[Token(Token = "0x2000465")]
	public static class SDK_SteamVRDefines
	{
		[Token(Token = "0x400201A")]
		public const string ScriptingDefineSymbol = "VRTK_DEFINE_SDK_STEAMVR";

		[Token(Token = "0x400201B")]
		private const string BuildTargetGroupName = "Standalone";

		[Token(Token = "0x6002362")]
		[Address(RVA = "0xACF5EC", Offset = "0xACF5EC", VA = "0xACF5EC")]
		[AttributeAttribute(Name = "SDK_ScriptingDefineSymbolPredicateAttribute", RVA = "0x66E3FC", Offset = "0x66E3FC")]
		[AttributeAttribute(Name = "SDK_ScriptingDefineSymbolPredicateAttribute", RVA = "0x66E3FC", Offset = "0x66E3FC")]
		private static bool IsPluginVersion122OrNewer()
		{
			return default(bool);
		}

		[Token(Token = "0x6002363")]
		[Address(RVA = "0xACF6B8", Offset = "0xACF6B8", VA = "0xACF6B8")]
		[AttributeAttribute(Name = "SDK_ScriptingDefineSymbolPredicateAttribute", RVA = "0x66E48C", Offset = "0x66E48C")]
		[AttributeAttribute(Name = "SDK_ScriptingDefineSymbolPredicateAttribute", RVA = "0x66E48C", Offset = "0x66E48C")]
		private static bool IsPluginVersion121OrNewer()
		{
			return default(bool);
		}

		[Token(Token = "0x6002364")]
		[Address(RVA = "0xACF830", Offset = "0xACF830", VA = "0xACF830")]
		[AttributeAttribute(Name = "SDK_ScriptingDefineSymbolPredicateAttribute", RVA = "0x66E51C", Offset = "0x66E51C")]
		[AttributeAttribute(Name = "SDK_ScriptingDefineSymbolPredicateAttribute", RVA = "0x66E51C", Offset = "0x66E51C")]
		private static bool IsPluginVersion120()
		{
			return default(bool);
		}

		[Token(Token = "0x6002365")]
		[Address(RVA = "0xACF9A4", Offset = "0xACF9A4", VA = "0xACF9A4")]
		[AttributeAttribute(Name = "SDK_ScriptingDefineSymbolPredicateAttribute", RVA = "0x66E5AC", Offset = "0x66E5AC")]
		[AttributeAttribute(Name = "SDK_ScriptingDefineSymbolPredicateAttribute", RVA = "0x66E5AC", Offset = "0x66E5AC")]
		private static bool IsPluginVersion111OrOlder()
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000466")]
	[AttributeAttribute(Name = "SDK_DescriptionAttribute", RVA = "0x64230C", Offset = "0x64230C")]
	public class SDK_SteamVRHeadset : SDK_FallbackHeadset
	{
		[Token(Token = "0x6002366")]
		[Address(RVA = "0xACFABC", Offset = "0xACFABC", VA = "0xACFABC")]
		public SDK_SteamVRHeadset()
		{
		}
	}
	[Token(Token = "0x2000467")]
	[AttributeAttribute(Name = "SDK_DescriptionAttribute", RVA = "0x642374", Offset = "0x642374")]
	public class SDK_SteamVRSystem : SDK_FallbackSystem
	{
		[Token(Token = "0x6002367")]
		[Address(RVA = "0xACFAC4", Offset = "0xACFAC4", VA = "0xACFAC4")]
		public SDK_SteamVRSystem()
		{
		}
	}
	[Token(Token = "0x2000468")]
	[AttributeAttribute(Name = "SDK_DescriptionAttribute", RVA = "0x6423F4", Offset = "0x6423F4")]
	[AttributeAttribute(Name = "SDK_DescriptionAttribute", RVA = "0x6423F4", Offset = "0x6423F4")]
	[AttributeAttribute(Name = "SDK_DescriptionAttribute", RVA = "0x6423F4", Offset = "0x6423F4")]
	[AttributeAttribute(Name = "SDK_DescriptionAttribute", RVA = "0x6423F4", Offset = "0x6423F4")]
	[AttributeAttribute(Name = "SDK_DescriptionAttribute", RVA = "0x6423F4", Offset = "0x6423F4")]
	[AttributeAttribute(Name = "SDK_DescriptionAttribute", RVA = "0x6423F4", Offset = "0x6423F4")]
	public class SDK_UnityBoundaries : SDK_BaseBoundaries
	{
		[Token(Token = "0x6002368")]
		[Address(RVA = "0xACFACC", Offset = "0xACFACC", VA = "0xACFACC", Slot = "8")]
		public override void InitBoundaries()
		{
		}

		[Token(Token = "0x6002369")]
		[Address(RVA = "0xACFAD0", Offset = "0xACFAD0", VA = "0xACFAD0", Slot = "9")]
		public override Transform GetPlayArea()
		{
			return null;
		}

		[Token(Token = "0x600236A")]
		[Address(RVA = "0xACFBCC", Offset = "0xACFBCC", VA = "0xACFBCC", Slot = "10")]
		public override Vector3[] GetPlayAreaVertices()
		{
			return null;
		}

		[Token(Token = "0x600236B")]
		[Address(RVA = "0xACFBD4", Offset = "0xACFBD4", VA = "0xACFBD4", Slot = "11")]
		public override float GetPlayAreaBorderThickness()
		{
			return default(float);
		}

		[Token(Token = "0x600236C")]
		[Address(RVA = "0xACFBE0", Offset = "0xACFBE0", VA = "0xACFBE0", Slot = "12")]
		public override bool IsPlayAreaSizeCalibrated()
		{
			return default(bool);
		}

		[Token(Token = "0x600236D")]
		[Address(RVA = "0xACFBE8", Offset = "0xACFBE8", VA = "0xACFBE8", Slot = "13")]
		public override bool GetDrawAtRuntime()
		{
			return default(bool);
		}

		[Token(Token = "0x600236E")]
		[Address(RVA = "0xACFBF0", Offset = "0xACFBF0", VA = "0xACFBF0", Slot = "14")]
		public override void SetDrawAtRuntime(bool value)
		{
		}

		[Token(Token = "0x600236F")]
		[Address(RVA = "0xACFBF4", Offset = "0xACFBF4", VA = "0xACFBF4")]
		public SDK_UnityBoundaries()
		{
		}
	}
	[Token(Token = "0x2000469")]
	public class SDK_UnityCameraRig : MonoBehaviour
	{
		[Token(Token = "0x400201C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6606C0", Offset = "0x6606C0")]
		public bool lockPhysicsUpdateRateToRenderFrequency;

		[Token(Token = "0x6002370")]
		[Address(RVA = "0xACFBFC", Offset = "0xACFBFC", VA = "0xACFBFC", Slot = "4")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x6002371")]
		[Address(RVA = "0xACFCA8", Offset = "0xACFCA8", VA = "0xACFCA8")]
		public SDK_UnityCameraRig()
		{
		}
	}
	[Token(Token = "0x200046A")]
	[AttributeAttribute(Name = "SDK_DescriptionAttribute", RVA = "0x642518", Offset = "0x642518")]
	[AttributeAttribute(Name = "SDK_DescriptionAttribute", RVA = "0x642518", Offset = "0x642518")]
	[AttributeAttribute(Name = "SDK_DescriptionAttribute", RVA = "0x642518", Offset = "0x642518")]
	[AttributeAttribute(Name = "SDK_DescriptionAttribute", RVA = "0x642518", Offset = "0x642518")]
	[AttributeAttribute(Name = "SDK_DescriptionAttribute", RVA = "0x642518", Offset = "0x642518")]
	[AttributeAttribute(Name = "SDK_DescriptionAttribute", RVA = "0x642518", Offset = "0x642518")]
	public class SDK_UnityController : SDK_BaseController
	{
		[Token(Token = "0x400201D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected VRTK_TrackedController cachedLeftController;

		[Token(Token = "0x400201E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected VRTK_TrackedController cachedRightController;

		[Token(Token = "0x400201F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		protected SDK_UnityControllerTracker cachedLeftTracker;

		[Token(Token = "0x4002020")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		protected SDK_UnityControllerTracker cachedRightTracker;

		[Token(Token = "0x4002021")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		protected VRTK_VelocityEstimator cachedLeftVelocityEstimator;

		[Token(Token = "0x4002022")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		protected VRTK_VelocityEstimator cachedRightVelocityEstimator;

		[Token(Token = "0x4002023")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		protected Vector2 buttonPressThreshold;

		[Token(Token = "0x4002024")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		protected Dictionary<ButtonTypes, bool> rightAxisButtonPressState;

		[Token(Token = "0x4002025")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		protected Dictionary<ButtonTypes, bool> leftAxisButtonPressState;

		[Token(Token = "0x4002026")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		protected List<string> validRightHands;

		[Token(Token = "0x4002027")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		protected List<string> validLeftHands;

		[Token(Token = "0x4002028")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		protected int[] rightControllerTouchCodes;

		[Token(Token = "0x4002029")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		protected int[] rightControllerPressCodes;

		[Token(Token = "0x400202A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		protected int[] rightOculusRemotePressCodes;

		[Token(Token = "0x400202B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		protected int[] leftControllerTouchCodes;

		[Token(Token = "0x400202C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		protected int[] leftControllerPressCodes;

		[Token(Token = "0x400202D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		protected ControllerType cachedControllerType;

		[Token(Token = "0x400202E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		protected Dictionary<ButtonTypes, KeyCode?> rightControllerTouchKeyCodes;

		[Token(Token = "0x400202F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		protected Dictionary<ButtonTypes, KeyCode?> rightControllerPressKeyCodes;

		[Token(Token = "0x4002030")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		protected Dictionary<ButtonTypes, KeyCode?> leftControllerTouchKeyCodes;

		[Token(Token = "0x4002031")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		protected Dictionary<ButtonTypes, KeyCode?> leftControllerPressKeyCodes;

		[Token(Token = "0x4002032")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private bool settingCaches;

		[Token(Token = "0x6002372")]
		[Address(RVA = "0xACFCB8", Offset = "0xACFCB8", VA = "0xACFCB8", Slot = "9")]
		public override void ProcessUpdate(VRTK_ControllerReference controllerReference, Dictionary<string, object> options)
		{
		}

		[Token(Token = "0x6002373")]
		[Address(RVA = "0xACFCBC", Offset = "0xACFCBC", VA = "0xACFCBC", Slot = "10")]
		public override void ProcessFixedUpdate(VRTK_ControllerReference controllerReference, Dictionary<string, object> options)
		{
		}

		[Token(Token = "0x6002374")]
		[Address(RVA = "0xACFCC0", Offset = "0xACFCC0", VA = "0xACFCC0", Slot = "11")]
		public override ControllerType GetCurrentControllerType([Optional] VRTK_ControllerReference controllerReference)
		{
			return default(ControllerType);
		}

		[Token(Token = "0x6002375")]
		[Address(RVA = "0xACFCF4", Offset = "0xACFCF4", VA = "0xACFCF4", Slot = "12")]
		public override string GetControllerDefaultColliderPath(ControllerHand hand)
		{
			return null;
		}

		[Token(Token = "0x6002376")]
		[Address(RVA = "0xACFD3C", Offset = "0xACFD3C", VA = "0xACFD3C", Slot = "13")]
		public override string GetControllerElementPath(ControllerElements element, ControllerHand hand, bool fullPath = false)
		{
			return null;
		}

		[Token(Token = "0x6002377")]
		[Address(RVA = "0xACFD98", Offset = "0xACFD98", VA = "0xACFD98", Slot = "14")]
		public override uint GetControllerIndex(GameObject controller)
		{
			return default(uint);
		}

		[Token(Token = "0x6002378")]
		[Address(RVA = "0xACFE50", Offset = "0xACFE50", VA = "0xACFE50", Slot = "15")]
		public override GameObject GetControllerByIndex(uint index, bool actual = false)
		{
			return null;
		}

		[Token(Token = "0x6002379")]
		[Address(RVA = "0xAD0048", Offset = "0xAD0048", VA = "0xAD0048", Slot = "16")]
		public override Transform GetControllerOrigin(VRTK_ControllerReference controllerReference)
		{
			return null;
		}

		[Token(Token = "0x600237A")]
		[Address(RVA = "0xAD00A8", Offset = "0xAD00A8", VA = "0xAD00A8", Slot = "17")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x66E63C", Offset = "0x66E63C")]
		public override Transform GenerateControllerPointerOrigin(GameObject parent)
		{
			return null;
		}

		[Token(Token = "0x600237B")]
		[Address(RVA = "0xAD00B0", Offset = "0xAD00B0", VA = "0xAD00B0", Slot = "18")]
		public override GameObject GetControllerLeftHand(bool actual = false)
		{
			return null;
		}

		[Token(Token = "0x600237C")]
		[Address(RVA = "0xAD0184", Offset = "0xAD0184", VA = "0xAD0184", Slot = "19")]
		public override GameObject GetControllerRightHand(bool actual = false)
		{
			return null;
		}

		[Token(Token = "0x600237D")]
		[Address(RVA = "0xAD0258", Offset = "0xAD0258", VA = "0xAD0258", Slot = "20")]
		public override bool IsControllerLeftHand(GameObject controller)
		{
			return default(bool);
		}

		[Token(Token = "0x600237E")]
		[Address(RVA = "0xAD0268", Offset = "0xAD0268", VA = "0xAD0268", Slot = "21")]
		public override bool IsControllerRightHand(GameObject controller)
		{
			return default(bool);
		}

		[Token(Token = "0x600237F")]
		[Address(RVA = "0xAD0278", Offset = "0xAD0278", VA = "0xAD0278", Slot = "22")]
		public override bool IsControllerLeftHand(GameObject controller, bool actual)
		{
			return default(bool);
		}

		[Token(Token = "0x6002380")]
		[Address(RVA = "0xAD028C", Offset = "0xAD028C", VA = "0xAD028C", Slot = "23")]
		public override bool IsControllerRightHand(GameObject controller, bool actual)
		{
			return default(bool);
		}

		[Token(Token = "0x6002381")]
		[Address(RVA = "0xAD02A0", Offset = "0xAD02A0", VA = "0xAD02A0", Slot = "24")]
		public override bool WaitForControllerModel(ControllerHand hand)
		{
			return default(bool);
		}

		[Token(Token = "0x6002382")]
		[Address(RVA = "0xAD02A8", Offset = "0xAD02A8", VA = "0xAD02A8", Slot = "25")]
		public override GameObject GetControllerModel(GameObject controller)
		{
			return null;
		}

		[Token(Token = "0x6002383")]
		[Address(RVA = "0xAD02B8", Offset = "0xAD02B8", VA = "0xAD02B8", Slot = "26")]
		public override GameObject GetControllerModel(ControllerHand hand)
		{
			return null;
		}

		[Token(Token = "0x6002384")]
		[Address(RVA = "0xAD0428", Offset = "0xAD0428", VA = "0xAD0428", Slot = "28")]
		public override GameObject GetControllerRenderModel(VRTK_ControllerReference controllerReference)
		{
			return null;
		}

		[Token(Token = "0x6002385")]
		[Address(RVA = "0xAD0430", Offset = "0xAD0430", VA = "0xAD0430", Slot = "29")]
		public override void SetControllerRenderModelWheel(GameObject renderModel, bool state)
		{
		}

		[Token(Token = "0x6002386")]
		[Address(RVA = "0xAD0434", Offset = "0xAD0434", VA = "0xAD0434", Slot = "30")]
		public override void HapticPulse(VRTK_ControllerReference controllerReference, float strength = 0.5f)
		{
		}

		[Token(Token = "0x6002387")]
		[Address(RVA = "0xAD0438", Offset = "0xAD0438", VA = "0xAD0438", Slot = "31")]
		public override bool HapticPulse(VRTK_ControllerReference controllerReference, AudioClip clip)
		{
			return default(bool);
		}

		[Token(Token = "0x6002388")]
		[Address(RVA = "0xAD0440", Offset = "0xAD0440", VA = "0xAD0440", Slot = "32")]
		public override SDK_ControllerHapticModifiers GetHapticModifiers()
		{
			return null;
		}

		[Token(Token = "0x6002389")]
		[Address(RVA = "0xAD049C", Offset = "0xAD049C", VA = "0xAD049C", Slot = "33")]
		public override Vector3 GetVelocity(VRTK_ControllerReference controllerReference)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600238A")]
		[Address(RVA = "0xAD0624", Offset = "0xAD0624", VA = "0xAD0624", Slot = "34")]
		public override Vector3 GetAngularVelocity(VRTK_ControllerReference controllerReference)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600238B")]
		[Address(RVA = "0xAD07AC", Offset = "0xAD07AC", VA = "0xAD07AC", Slot = "35")]
		public override bool IsTouchpadStatic(bool isTouched, Vector2 currentAxisValues, Vector2 previousAxisValues, int compareFidelity)
		{
			return default(bool);
		}

		[Token(Token = "0x600238C")]
		[Address(RVA = "0xAD07C4", Offset = "0xAD07C4", VA = "0xAD07C4", Slot = "36")]
		public override Vector2 GetButtonAxis(ButtonTypes buttonType, VRTK_ControllerReference controllerReference)
		{
			return default(Vector2);
		}

		[Token(Token = "0x600238D")]
		[Address(RVA = "0xAD09FC", Offset = "0xAD09FC", VA = "0xAD09FC", Slot = "37")]
		public override float GetButtonSenseAxis(ButtonTypes buttonType, VRTK_ControllerReference controllerReference)
		{
			return default(float);
		}

		[Token(Token = "0x600238E")]
		[Address(RVA = "0xAD0A04", Offset = "0xAD0A04", VA = "0xAD0A04", Slot = "38")]
		public override float GetButtonHairlineDelta(ButtonTypes buttonType, VRTK_ControllerReference controllerReference)
		{
			return default(float);
		}

		[Token(Token = "0x600238F")]
		[Address(RVA = "0xAD0A0C", Offset = "0xAD0A0C", VA = "0xAD0A0C", Slot = "39")]
		public override bool GetControllerButtonState(ButtonTypes buttonType, ButtonPressTypes pressType, VRTK_ControllerReference controllerReference)
		{
			return default(bool);
		}

		[Token(Token = "0x6002390")]
		[Address(RVA = "0xAD0C2C", Offset = "0xAD0C2C", VA = "0xAD0C2C", Slot = "52")]
		protected virtual bool IsMouseAliasPress(bool validController, ButtonTypes buttonType, ButtonPressTypes pressType)
		{
			return default(bool);
		}

		[Token(Token = "0x6002391")]
		[Address(RVA = "0xAD0C80", Offset = "0xAD0C80", VA = "0xAD0C80", Slot = "53")]
		protected virtual bool MousePressType(ButtonPressTypes pressType, int buttonIndex)
		{
			return default(bool);
		}

		[Token(Token = "0x6002392")]
		[Address(RVA = "0xAD0CC0", Offset = "0xAD0CC0", VA = "0xAD0CC0", Slot = "54")]
		protected virtual float GetAxisValue(string axisName)
		{
			return default(float);
		}

		[Token(Token = "0x6002393")]
		[Address(RVA = "0xAD0D80", Offset = "0xAD0D80", VA = "0xAD0D80", Slot = "55")]
		protected virtual bool IsAxisOnHandButtonPress(Dictionary<ButtonTypes, bool> axisHandState, ButtonTypes buttonType, ButtonPressTypes pressType, Vector2 axisValue)
		{
			return default(bool);
		}

		[Token(Token = "0x6002394")]
		[Address(RVA = "0xAD0EBC", Offset = "0xAD0EBC", VA = "0xAD0EBC", Slot = "56")]
		protected virtual bool IsAxisButtonPress(VRTK_ControllerReference controllerReference, ButtonTypes buttonType, ButtonPressTypes pressType)
		{
			return default(bool);
		}

		[Token(Token = "0x6002395")]
		[Address(RVA = "0xAD0F80", Offset = "0xAD0F80", VA = "0xAD0F80", Slot = "57")]
		protected virtual bool GetAxisPressState(bool currentState, float axisValue)
		{
			return default(bool);
		}

		[Token(Token = "0x6002396")]
		[Address(RVA = "0xAD0FAC", Offset = "0xAD0FAC", VA = "0xAD0FAC", Slot = "58")]
		protected virtual bool IsButtonPressed(ButtonPressTypes pressType, KeyCode? touchKey, KeyCode? pressKey)
		{
			return default(bool);
		}

		[Token(Token = "0x6002397")]
		[Address(RVA = "0xAD1140", Offset = "0xAD1140", VA = "0xAD1140", Slot = "59")]
		protected virtual void SetTrackedControllerCaches(bool forceRefresh = false)
		{
		}

		[Token(Token = "0x6002398")]
		[Address(RVA = "0xAD1568", Offset = "0xAD1568", VA = "0xAD1568", Slot = "60")]
		protected virtual void SetControllerButtons(ControllerHand hand)
		{
		}

		[Token(Token = "0x6002399")]
		[Address(RVA = "0xAD19F4", Offset = "0xAD19F4", VA = "0xAD19F4", Slot = "61")]
		protected virtual void SetCachedControllerType(string givenType)
		{
		}

		[Token(Token = "0x600239A")]
		[Address(RVA = "0xAD1B40", Offset = "0xAD1B40", VA = "0xAD1B40", Slot = "62")]
		protected virtual void SetControllerButtonValues(ref Dictionary<ButtonTypes, KeyCode?> touchKeyCodes, ref Dictionary<ButtonTypes, KeyCode?> pressKeyCodes, int joystickIndex, int[] touchCodes, int[] pressCodes)
		{
		}

		[Token(Token = "0x600239B")]
		[Address(RVA = "0xAD1F1C", Offset = "0xAD1F1C", VA = "0xAD1F1C", Slot = "63")]
		protected virtual KeyCode StringToKeyCode(int index, int code)
		{
			return default(KeyCode);
		}

		[Token(Token = "0x600239C")]
		[Address(RVA = "0xAD21FC", Offset = "0xAD21FC", VA = "0xAD21FC", Slot = "64")]
		protected virtual void SetControllerIndex(ref VRTK_TrackedController trackedController)
		{
		}

		[Token(Token = "0x600239D")]
		[Address(RVA = "0xAD22F8", Offset = "0xAD22F8", VA = "0xAD22F8", Slot = "65")]
		protected virtual VRTK_TrackedController GetTrackedObject(GameObject controller)
		{
			return null;
		}

		[Token(Token = "0x600239E")]
		[Address(RVA = "0xAD237C", Offset = "0xAD237C", VA = "0xAD237C")]
		public SDK_UnityController()
		{
		}
	}
	[Token(Token = "0x200046B")]
	public class SDK_UnityControllerTracker : MonoBehaviour
	{
		[Token(Token = "0x4002033")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6606F8", Offset = "0x6606F8")]
		public XRNode nodeType;

		[Token(Token = "0x4002034")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x660730", Offset = "0x660730")]
		public uint index;

		[Token(Token = "0x4002035")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x660768", Offset = "0x660768")]
		public string triggerAxisName;

		[Token(Token = "0x4002036")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6607A0", Offset = "0x6607A0")]
		public string gripAxisName;

		[Token(Token = "0x4002037")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6607D8", Offset = "0x6607D8")]
		public string touchpadHorizontalAxisName;

		[Token(Token = "0x4002038")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x660810", Offset = "0x660810")]
		public string touchpadVerticalAxisName;

		[Token(Token = "0x600239F")]
		[Address(RVA = "0xAD2EA0", Offset = "0xAD2EA0", VA = "0xAD2EA0", Slot = "4")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x60023A0")]
		protected virtual string GetVarName<T>(T item) where T : class
		{
			return null;
		}

		[Token(Token = "0x60023A1")]
		[Address(RVA = "0xAD2F5C", Offset = "0xAD2F5C", VA = "0xAD2F5C", Slot = "6")]
		protected virtual void CheckAxisIsValid(string axisName, string varName)
		{
		}

		[Token(Token = "0x60023A2")]
		[Address(RVA = "0xAD32AC", Offset = "0xAD32AC", VA = "0xAD32AC", Slot = "7")]
		protected virtual void FixedUpdate()
		{
		}

		[Token(Token = "0x60023A3")]
		[Address(RVA = "0xAD33CC", Offset = "0xAD33CC", VA = "0xAD33CC")]
		public SDK_UnityControllerTracker()
		{
		}
	}
	[Token(Token = "0x200046C")]
	[AttributeAttribute(Name = "SDK_DescriptionAttribute", RVA = "0x64263C", Offset = "0x64263C")]
	[AttributeAttribute(Name = "SDK_DescriptionAttribute", RVA = "0x64263C", Offset = "0x64263C")]
	[AttributeAttribute(Name = "SDK_DescriptionAttribute", RVA = "0x64263C", Offset = "0x64263C")]
	[AttributeAttribute(Name = "SDK_DescriptionAttribute", RVA = "0x64263C", Offset = "0x64263C")]
	[AttributeAttribute(Name = "SDK_DescriptionAttribute", RVA = "0x64263C", Offset = "0x64263C")]
	[AttributeAttribute(Name = "SDK_DescriptionAttribute", RVA = "0x64263C", Offset = "0x64263C")]
	public class SDK_UnityHeadset : SDK_BaseHeadset
	{
		[Token(Token = "0x4002039")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected VRTK_VelocityEstimator cachedHeadsetVelocityEstimator;

		[Token(Token = "0x60023A4")]
		[Address(RVA = "0xAD3428", Offset = "0xAD3428", VA = "0xAD3428", Slot = "8")]
		public override void ProcessUpdate(Dictionary<string, object> options)
		{
		}

		[Token(Token = "0x60023A5")]
		[Address(RVA = "0xAD342C", Offset = "0xAD342C", VA = "0xAD342C", Slot = "9")]
		public override void ProcessFixedUpdate(Dictionary<string, object> options)
		{
		}

		[Token(Token = "0x60023A6")]
		[Address(RVA = "0xAD3430", Offset = "0xAD3430", VA = "0xAD3430", Slot = "10")]
		public override Transform GetHeadset()
		{
			return null;
		}

		[Token(Token = "0x60023A7")]
		[Address(RVA = "0xAD352C", Offset = "0xAD352C", VA = "0xAD352C", Slot = "11")]
		public override Transform GetHeadsetCamera()
		{
			return null;
		}

		[Token(Token = "0x60023A8")]
		[Address(RVA = "0xAD3538", Offset = "0xAD3538", VA = "0xAD3538", Slot = "12")]
		public override string GetHeadsetType()
		{
			return null;
		}

		[Token(Token = "0x60023A9")]
		[Address(RVA = "0xAD3548", Offset = "0xAD3548", VA = "0xAD3548", Slot = "13")]
		public override Vector3 GetHeadsetVelocity()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60023AA")]
		[Address(RVA = "0xAD3590", Offset = "0xAD3590", VA = "0xAD3590", Slot = "14")]
		public override Vector3 GetHeadsetAngularVelocity()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60023AB")]
		[Address(RVA = "0xAD35D8", Offset = "0xAD35D8", VA = "0xAD35D8", Slot = "15")]
		public override void HeadsetFade(Color color, float duration, bool fadeOverlay = false)
		{
		}

		[Token(Token = "0x60023AC")]
		[Address(RVA = "0xAD35E0", Offset = "0xAD35E0", VA = "0xAD35E0", Slot = "16")]
		public override bool HasHeadsetFade(Transform obj)
		{
			return default(bool);
		}

		[Token(Token = "0x60023AD")]
		[Address(RVA = "0xAD3670", Offset = "0xAD3670", VA = "0xAD3670", Slot = "17")]
		public override void AddHeadsetFade(Transform camera)
		{
		}

		[Token(Token = "0x60023AE")]
		[Address(RVA = "0xAD3774", Offset = "0xAD3774", VA = "0xAD3774", Slot = "19")]
		protected virtual void SetHeadsetCaches()
		{
		}

		[Token(Token = "0x60023AF")]
		[Address(RVA = "0xAD385C", Offset = "0xAD385C", VA = "0xAD385C")]
		public SDK_UnityHeadset()
		{
		}
	}
	[Token(Token = "0x200046D")]
	public class SDK_UnityHeadsetTracker : MonoBehaviour
	{
		[Token(Token = "0x60023B0")]
		[Address(RVA = "0xAD3864", Offset = "0xAD3864", VA = "0xAD3864")]
		public SDK_UnityHeadsetTracker()
		{
		}
	}
	[Token(Token = "0x200046E")]
	[AttributeAttribute(Name = "SDK_DescriptionAttribute", RVA = "0x642760", Offset = "0x642760")]
	[AttributeAttribute(Name = "SDK_DescriptionAttribute", RVA = "0x642760", Offset = "0x642760")]
	[AttributeAttribute(Name = "SDK_DescriptionAttribute", RVA = "0x642760", Offset = "0x642760")]
	[AttributeAttribute(Name = "SDK_DescriptionAttribute", RVA = "0x642760", Offset = "0x642760")]
	[AttributeAttribute(Name = "SDK_DescriptionAttribute", RVA = "0x642760", Offset = "0x642760")]
	[AttributeAttribute(Name = "SDK_DescriptionAttribute", RVA = "0x642760", Offset = "0x642760")]
	public class SDK_UnitySystem : SDK_BaseSystem
	{
		[Token(Token = "0x60023B1")]
		[Address(RVA = "0xAD386C", Offset = "0xAD386C", VA = "0xAD386C", Slot = "8")]
		public override bool IsDisplayOnDesktop()
		{
			return default(bool);
		}

		[Token(Token = "0x60023B2")]
		[Address(RVA = "0xAD3874", Offset = "0xAD3874", VA = "0xAD3874", Slot = "9")]
		public override bool ShouldAppRenderWithLowResources()
		{
			return default(bool);
		}

		[Token(Token = "0x60023B3")]
		[Address(RVA = "0xAD387C", Offset = "0xAD387C", VA = "0xAD387C", Slot = "10")]
		public override void ForceInterleavedReprojectionOn(bool force)
		{
		}

		[Token(Token = "0x60023B4")]
		[Address(RVA = "0xAD3880", Offset = "0xAD3880", VA = "0xAD3880")]
		public SDK_UnitySystem()
		{
		}
	}
	[Token(Token = "0x200046F")]
	public static class VRTK_SDK_Bridge
	{
		[Token(Token = "0x400203A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static SDK_BaseSystem systemSDK;

		[Token(Token = "0x400203B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static SDK_BaseHeadset headsetSDK;

		[Token(Token = "0x400203C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static SDK_BaseController controllerSDK;

		[Token(Token = "0x400203D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static SDK_BaseBoundaries boundariesSDK;

		[Token(Token = "0x60023B5")]
		[Address(RVA = "0x94DDAC", Offset = "0x94DDAC", VA = "0x94DDAC")]
		public static void ControllerProcessUpdate(VRTK_ControllerReference controllerReference, [Optional] Dictionary<string, object> options)
		{
		}

		[Token(Token = "0x60023B6")]
		[Address(RVA = "0x94DE3C", Offset = "0x94DE3C", VA = "0x94DE3C")]
		public static void ControllerProcessFixedUpdate(VRTK_ControllerReference controllerReference, [Optional] Dictionary<string, object> options)
		{
		}

		[Token(Token = "0x60023B7")]
		[Address(RVA = "0x94DECC", Offset = "0x94DECC", VA = "0x94DECC")]
		public static SDK_BaseController.ControllerType GetCurrentControllerType([Optional] VRTK_ControllerReference controllerReference)
		{
			return default(SDK_BaseController.ControllerType);
		}

		[Token(Token = "0x60023B8")]
		[Address(RVA = "0x94DF4C", Offset = "0x94DF4C", VA = "0x94DF4C")]
		public static string GetControllerDefaultColliderPath(SDK_BaseController.ControllerHand hand)
		{
			return null;
		}

		[Token(Token = "0x60023B9")]
		[Address(RVA = "0x94DFCC", Offset = "0x94DFCC", VA = "0x94DFCC")]
		public static string GetControllerElementPath(SDK_BaseController.ControllerElements element, SDK_BaseController.ControllerHand hand, bool fullPath = false)
		{
			return null;
		}

		[Token(Token = "0x60023BA")]
		[Address(RVA = "0x94E064", Offset = "0x94E064", VA = "0x94E064")]
		public static uint GetControllerIndex(GameObject controller)
		{
			return default(uint);
		}

		[Token(Token = "0x60023BB")]
		[Address(RVA = "0x94E0E8", Offset = "0x94E0E8", VA = "0x94E0E8")]
		public static GameObject GetControllerByIndex(uint index, bool actual)
		{
			return null;
		}

		[Token(Token = "0x60023BC")]
		[Address(RVA = "0x94E17C", Offset = "0x94E17C", VA = "0x94E17C")]
		public static Transform GetControllerOrigin(VRTK_ControllerReference controllerReference)
		{
			return null;
		}

		[Token(Token = "0x60023BD")]
		[Address(RVA = "0x94E200", Offset = "0x94E200", VA = "0x94E200")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x66E674", Offset = "0x66E674")]
		public static Transform GenerateControllerPointerOrigin(GameObject parent)
		{
			return null;
		}

		[Token(Token = "0x60023BE")]
		[Address(RVA = "0x94E284", Offset = "0x94E284", VA = "0x94E284")]
		public static GameObject GetControllerLeftHand(bool actual)
		{
			return null;
		}

		[Token(Token = "0x60023BF")]
		[Address(RVA = "0x94E308", Offset = "0x94E308", VA = "0x94E308")]
		public static GameObject GetControllerRightHand(bool actual)
		{
			return null;
		}

		[Token(Token = "0x60023C0")]
		[Address(RVA = "0x94E38C", Offset = "0x94E38C", VA = "0x94E38C")]
		public static GameObject GetControllerByHand(SDK_BaseController.ControllerHand hand, bool actual)
		{
			return null;
		}

		[Token(Token = "0x60023C1")]
		[Address(RVA = "0x94E454", Offset = "0x94E454", VA = "0x94E454")]
		public static bool IsControllerLeftHand(GameObject controller)
		{
			return default(bool);
		}

		[Token(Token = "0x60023C2")]
		[Address(RVA = "0x94E4D8", Offset = "0x94E4D8", VA = "0x94E4D8")]
		public static bool IsControllerRightHand(GameObject controller)
		{
			return default(bool);
		}

		[Token(Token = "0x60023C3")]
		[Address(RVA = "0x94E55C", Offset = "0x94E55C", VA = "0x94E55C")]
		public static bool IsControllerLeftHand(GameObject controller, bool actual)
		{
			return default(bool);
		}

		[Token(Token = "0x60023C4")]
		[Address(RVA = "0x94E5F0", Offset = "0x94E5F0", VA = "0x94E5F0")]
		public static bool IsControllerRightHand(GameObject controller, bool actual)
		{
			return default(bool);
		}

		[Token(Token = "0x60023C5")]
		[Address(RVA = "0x94E684", Offset = "0x94E684", VA = "0x94E684")]
		public static bool WaitForControllerModel(SDK_BaseController.ControllerHand hand)
		{
			return default(bool);
		}

		[Token(Token = "0x60023C6")]
		[Address(RVA = "0x94E708", Offset = "0x94E708", VA = "0x94E708")]
		public static GameObject GetControllerModel(GameObject controller)
		{
			return null;
		}

		[Token(Token = "0x60023C7")]
		[Address(RVA = "0x94E78C", Offset = "0x94E78C", VA = "0x94E78C")]
		public static GameObject GetControllerModel(SDK_BaseController.ControllerHand hand)
		{
			return null;
		}

		[Token(Token = "0x60023C8")]
		[Address(RVA = "0x94E810", Offset = "0x94E810", VA = "0x94E810")]
		public static SDK_BaseController.ControllerHand GetControllerModelHand(GameObject controllerModel)
		{
			return default(SDK_BaseController.ControllerHand);
		}

		[Token(Token = "0x60023C9")]
		[Address(RVA = "0x94E894", Offset = "0x94E894", VA = "0x94E894")]
		public static GameObject GetControllerRenderModel(VRTK_ControllerReference controllerReference)
		{
			return null;
		}

		[Token(Token = "0x60023CA")]
		[Address(RVA = "0x94E918", Offset = "0x94E918", VA = "0x94E918")]
		public static void SetControllerRenderModelWheel(GameObject renderModel, bool state)
		{
		}

		[Token(Token = "0x60023CB")]
		[Address(RVA = "0x94E9AC", Offset = "0x94E9AC", VA = "0x94E9AC")]
		public static void HapticPulse(VRTK_ControllerReference controllerReference, float strength = 0.5f)
		{
		}

		[Token(Token = "0x60023CC")]
		[Address(RVA = "0x94EA40", Offset = "0x94EA40", VA = "0x94EA40")]
		public static bool HapticPulse(VRTK_ControllerReference controllerReference, AudioClip clip)
		{
			return default(bool);
		}

		[Token(Token = "0x60023CD")]
		[Address(RVA = "0x94EAD4", Offset = "0x94EAD4", VA = "0x94EAD4")]
		public static SDK_ControllerHapticModifiers GetHapticModifiers()
		{
			return null;
		}

		[Token(Token = "0x60023CE")]
		[Address(RVA = "0x94EB50", Offset = "0x94EB50", VA = "0x94EB50")]
		public static Vector3 GetControllerVelocity(VRTK_ControllerReference controllerReference)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60023CF")]
		[Address(RVA = "0x94EBD4", Offset = "0x94EBD4", VA = "0x94EBD4")]
		public static Vector3 GetControllerAngularVelocity(VRTK_ControllerReference controllerReference)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60023D0")]
		[Address(RVA = "0x94EC58", Offset = "0x94EC58", VA = "0x94EC58")]
		public static bool IsTouchpadStatic(bool isTouched, Vector2 currentAxisValues, Vector2 previousAxisValues, int compareFidelity)
		{
			return default(bool);
		}

		[Token(Token = "0x60023D1")]
		[Address(RVA = "0x94ED1C", Offset = "0x94ED1C", VA = "0x94ED1C")]
		public static Vector2 GetControllerAxis(SDK_BaseController.ButtonTypes buttonType, VRTK_ControllerReference controllerReference)
		{
			return default(Vector2);
		}

		[Token(Token = "0x60023D2")]
		[Address(RVA = "0x94EDB0", Offset = "0x94EDB0", VA = "0x94EDB0")]
		public static float GetControllerSenseAxis(SDK_BaseController.ButtonTypes buttonType, VRTK_ControllerReference controllerReference)
		{
			return default(float);
		}

		[Token(Token = "0x60023D3")]
		[Address(RVA = "0x94EE44", Offset = "0x94EE44", VA = "0x94EE44")]
		public static float GetControllerHairlineDelta(SDK_BaseController.ButtonTypes buttonType, VRTK_ControllerReference controllerReference)
		{
			return default(float);
		}

		[Token(Token = "0x60023D4")]
		[Address(RVA = "0x94EED8", Offset = "0x94EED8", VA = "0x94EED8")]
		public static bool GetControllerButtonState(SDK_BaseController.ButtonTypes buttonType, SDK_BaseController.ButtonPressTypes pressType, VRTK_ControllerReference controllerReference)
		{
			return default(bool);
		}

		[Token(Token = "0x60023D5")]
		[Address(RVA = "0x94EF74", Offset = "0x94EF74", VA = "0x94EF74")]
		public static void HeadsetProcessUpdate([Optional] Dictionary<string, object> options)
		{
		}

		[Token(Token = "0x60023D6")]
		[Address(RVA = "0x94F210", Offset = "0x94F210", VA = "0x94F210")]
		public static void HeadsetProcessFixedUpdate([Optional] Dictionary<string, object> options)
		{
		}

		[Token(Token = "0x60023D7")]
		[Address(RVA = "0x94F290", Offset = "0x94F290", VA = "0x94F290")]
		public static Transform GetHeadset()
		{
			return null;
		}

		[Token(Token = "0x60023D8")]
		[Address(RVA = "0x94F308", Offset = "0x94F308", VA = "0x94F308")]
		public static Transform GetHeadsetCamera()
		{
			return null;
		}

		[Token(Token = "0x60023D9")]
		[Address(RVA = "0x94F380", Offset = "0x94F380", VA = "0x94F380")]
		public static string GetHeadsetType()
		{
			return null;
		}

		[Token(Token = "0x60023DA")]
		[Address(RVA = "0x94F3F8", Offset = "0x94F3F8", VA = "0x94F3F8")]
		public static Vector3 GetHeadsetVelocity()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60023DB")]
		[Address(RVA = "0x94F470", Offset = "0x94F470", VA = "0x94F470")]
		public static Vector3 GetHeadsetAngularVelocity()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60023DC")]
		[Address(RVA = "0x94F4EC", Offset = "0x94F4EC", VA = "0x94F4EC")]
		public static void HeadsetFade(Color color, float duration, bool fadeOverlay = false)
		{
		}

		[Token(Token = "0x60023DD")]
		[Address(RVA = "0x94F5B0", Offset = "0x94F5B0", VA = "0x94F5B0")]
		public static bool HasHeadsetFade(Transform obj)
		{
			return default(bool);
		}

		[Token(Token = "0x60023DE")]
		[Address(RVA = "0x94F634", Offset = "0x94F634", VA = "0x94F634")]
		public static void AddHeadsetFade(Transform camera)
		{
		}

		[Token(Token = "0x60023DF")]
		[Address(RVA = "0x94F6B8", Offset = "0x94F6B8", VA = "0x94F6B8")]
		public static Transform GetPlayArea()
		{
			return null;
		}

		[Token(Token = "0x60023E0")]
		[Address(RVA = "0x93EAC8", Offset = "0x93EAC8", VA = "0x93EAC8")]
		public static Vector3[] GetPlayAreaVertices()
		{
			return null;
		}

		[Token(Token = "0x60023E1")]
		[Address(RVA = "0x94F94C", Offset = "0x94F94C", VA = "0x94F94C")]
		public static float GetPlayAreaBorderThickness()
		{
			return default(float);
		}

		[Token(Token = "0x60023E2")]
		[Address(RVA = "0x94F9C4", Offset = "0x94F9C4", VA = "0x94F9C4")]
		public static bool IsPlayAreaSizeCalibrated()
		{
			return default(bool);
		}

		[Token(Token = "0x60023E3")]
		[Address(RVA = "0x94FA3C", Offset = "0x94FA3C", VA = "0x94FA3C")]
		public static bool GetDrawAtRuntime()
		{
			return default(bool);
		}

		[Token(Token = "0x60023E4")]
		[Address(RVA = "0x94FAB4", Offset = "0x94FAB4", VA = "0x94FAB4")]
		public static void SetDrawAtRuntime(bool value)
		{
		}

		[Token(Token = "0x60023E5")]
		[Address(RVA = "0x94FB38", Offset = "0x94FB38", VA = "0x94FB38")]
		public static bool IsDisplayOnDesktop()
		{
			return default(bool);
		}

		[Token(Token = "0x60023E6")]
		[Address(RVA = "0x94FDC4", Offset = "0x94FDC4", VA = "0x94FDC4")]
		public static bool ShouldAppRenderWithLowResources()
		{
			return default(bool);
		}

		[Token(Token = "0x60023E7")]
		[Address(RVA = "0x94FE3C", Offset = "0x94FE3C", VA = "0x94FE3C")]
		public static void ForceInterleavedReprojectionOn(bool force)
		{
		}

		[Token(Token = "0x60023E8")]
		[Address(RVA = "0x94FBB0", Offset = "0x94FBB0", VA = "0x94FBB0")]
		public static SDK_BaseSystem GetSystemSDK()
		{
			return null;
		}

		[Token(Token = "0x60023E9")]
		[Address(RVA = "0x94EFF4", Offset = "0x94EFF4", VA = "0x94EFF4")]
		public static SDK_BaseHeadset GetHeadsetSDK()
		{
			return null;
		}

		[Token(Token = "0x60023EA")]
		[Address(RVA = "0x93EFD8", Offset = "0x93EFD8", VA = "0x93EFD8")]
		public static SDK_BaseController GetControllerSDK()
		{
			return null;
		}

		[Token(Token = "0x60023EB")]
		[Address(RVA = "0x94F730", Offset = "0x94F730", VA = "0x94F730")]
		public static SDK_BaseBoundaries GetBoundariesSDK()
		{
			return null;
		}

		[Token(Token = "0x60023EC")]
		[Address(RVA = "0x946620", Offset = "0x946620", VA = "0x946620")]
		public static void InvalidateCaches()
		{
		}
	}
	[Token(Token = "0x2000470")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x642980", Offset = "0x642980")]
	public class WindowsMR_Camera : MonoBehaviour
	{
		[Token(Token = "0x400203E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x660848", Offset = "0x660848")]
		private bool forceRoomScaleTracking;

		[Token(Token = "0x400203F")]
		private const string DEVICE_NAME = "WindowsMR";

		[Token(Token = "0x17000205")]
		public bool ForceRoomScaleTracking
		{
			[Token(Token = "0x60023EE")]
			[Address(RVA = "0x8FD460", Offset = "0x8FD460", VA = "0x8FD460")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60023EF")]
			[Address(RVA = "0x8FD468", Offset = "0x8FD468", VA = "0x8FD468")]
			set
			{
			}
		}

		[Token(Token = "0x60023F0")]
		[Address(RVA = "0x8FD474", Offset = "0x8FD474", VA = "0x8FD474", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x60023F1")]
		[Address(RVA = "0x8FD4B8", Offset = "0x8FD4B8", VA = "0x8FD4B8", Slot = "5")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x60023F2")]
		[Address(RVA = "0x8FD5AC", Offset = "0x8FD5AC", VA = "0x8FD5AC", Slot = "6")]
		protected virtual bool CheckForMixedRealitySupport()
		{
			return default(bool);
		}

		[Token(Token = "0x60023F3")]
		[Address(RVA = "0x8FD6E0", Offset = "0x8FD6E0", VA = "0x8FD6E0", Slot = "7")]
		protected virtual void SetupMRCamera()
		{
		}

		[Token(Token = "0x60023F4")]
		[Address(RVA = "0x8FD810", Offset = "0x8FD810", VA = "0x8FD810")]
		public WindowsMR_Camera()
		{
		}
	}
	[Token(Token = "0x2000471")]
	public class WindowsMR_ControllerManager : MonoBehaviour
	{
		[Token(Token = "0x60023F5")]
		[Address(RVA = "0x8FD820", Offset = "0x8FD820", VA = "0x8FD820")]
		public WindowsMR_ControllerManager()
		{
		}
	}
	[Token(Token = "0x2000472")]
	public class WindowsMR_TrackedObject : MonoBehaviour
	{
		[Token(Token = "0x60023F6")]
		[Address(RVA = "0x8FD828", Offset = "0x8FD828", VA = "0x8FD828")]
		public WindowsMR_TrackedObject()
		{
		}
	}
	[Token(Token = "0x2000473")]
	[AttributeAttribute(Name = "SDK_DescriptionAttribute", RVA = "0x6429E4", Offset = "0x6429E4")]
	public class SDK_WindowsMRBoundaries : SDK_FallbackBoundaries
	{
		[Token(Token = "0x60023F7")]
		[Address(RVA = "0xAD3890", Offset = "0xAD3890", VA = "0xAD3890")]
		public SDK_WindowsMRBoundaries()
		{
		}
	}
	[Token(Token = "0x2000474")]
	[AttributeAttribute(Name = "SDK_DescriptionAttribute", RVA = "0x642A4C", Offset = "0x642A4C")]
	public class SDK_WindowsMRController : SDK_FallbackController
	{
		[Token(Token = "0x60023F8")]
		[Address(RVA = "0xAD3898", Offset = "0xAD3898", VA = "0xAD3898")]
		public SDK_WindowsMRController()
		{
		}
	}
	[Token(Token = "0x2000475")]
	public static class SDK_WindowsMRDefines
	{
		[Token(Token = "0x4002040")]
		public const string ScriptingDefineSymbol = "VRTK_DEFINE_SDK_WINDOWSMR";

		[Token(Token = "0x4002041")]
		private const string BuildTargetGroupName = "WSA";

		[Token(Token = "0x60023F9")]
		[Address(RVA = "0xAD38A0", Offset = "0xAD38A0", VA = "0xAD38A0")]
		[AttributeAttribute(Name = "SDK_ScriptingDefineSymbolPredicateAttribute", RVA = "0x66E6AC", Offset = "0x66E6AC")]
		[AttributeAttribute(Name = "SDK_ScriptingDefineSymbolPredicateAttribute", RVA = "0x66E6AC", Offset = "0x66E6AC")]
		private static bool HasControllerVisualization()
		{
			return default(bool);
		}

		[Token(Token = "0x60023FA")]
		[Address(RVA = "0xAD3924", Offset = "0xAD3924", VA = "0xAD3924")]
		[AttributeAttribute(Name = "SDK_ScriptingDefineSymbolPredicateAttribute", RVA = "0x66E73C", Offset = "0x66E73C")]
		private static bool IsXRSettingsEnabled()
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000476")]
	[AttributeAttribute(Name = "SDK_DescriptionAttribute", RVA = "0x642AB4", Offset = "0x642AB4")]
	public class SDK_WindowsMRHeadset : SDK_FallbackHeadset
	{
		[Token(Token = "0x60023FB")]
		[Address(RVA = "0xAD392C", Offset = "0xAD392C", VA = "0xAD392C")]
		public SDK_WindowsMRHeadset()
		{
		}
	}
	[Token(Token = "0x2000477")]
	[AttributeAttribute(Name = "SDK_DescriptionAttribute", RVA = "0x642B1C", Offset = "0x642B1C")]
	public class SDK_WindowsMR : SDK_FallbackSystem
	{
		[Token(Token = "0x60023FC")]
		[Address(RVA = "0xAD3888", Offset = "0xAD3888", VA = "0xAD3888")]
		public SDK_WindowsMR()
		{
		}
	}
	[Token(Token = "0x2000478")]
	[AttributeAttribute(Name = "SDK_DescriptionAttribute", RVA = "0x642B9C", Offset = "0x642B9C")]
	[AttributeAttribute(Name = "SDK_DescriptionAttribute", RVA = "0x642B9C", Offset = "0x642B9C")]
	public class SDK_XimmerseBoundaries : SDK_FallbackBoundaries
	{
		[Token(Token = "0x60023FD")]
		[Address(RVA = "0xAD3934", Offset = "0xAD3934", VA = "0xAD3934")]
		public SDK_XimmerseBoundaries()
		{
		}
	}
	[Token(Token = "0x2000479")]
	[AttributeAttribute(Name = "SDK_DescriptionAttribute", RVA = "0x642C30", Offset = "0x642C30")]
	[AttributeAttribute(Name = "SDK_DescriptionAttribute", RVA = "0x642C30", Offset = "0x642C30")]
	public class SDK_XimmerseController : SDK_FallbackController
	{
		[Token(Token = "0x60023FE")]
		[Address(RVA = "0xAD393C", Offset = "0xAD393C", VA = "0xAD393C")]
		public SDK_XimmerseController()
		{
		}
	}
	[Token(Token = "0x200047A")]
	public static class SDK_XimmerseDefines
	{
		[Token(Token = "0x4002042")]
		public const string ScriptingDefineSymbol = "VRTK_DEFINE_SDK_XIMMERSE";

		[Token(Token = "0x60023FF")]
		[Address(RVA = "0xAD3944", Offset = "0xAD3944", VA = "0xAD3944")]
		[AttributeAttribute(Name = "SDK_ScriptingDefineSymbolPredicateAttribute", RVA = "0x66E788", Offset = "0x66E788")]
		[AttributeAttribute(Name = "SDK_ScriptingDefineSymbolPredicateAttribute", RVA = "0x66E788", Offset = "0x66E788")]
		private static bool IsXimmerseAvailable()
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200047B")]
	[AttributeAttribute(Name = "SDK_DescriptionAttribute", RVA = "0x642CC4", Offset = "0x642CC4")]
	[AttributeAttribute(Name = "SDK_DescriptionAttribute", RVA = "0x642CC4", Offset = "0x642CC4")]
	public class SDK_XimmerseHeadset : SDK_FallbackHeadset
	{
		[Token(Token = "0x6002400")]
		[Address(RVA = "0xAD39C8", Offset = "0xAD39C8", VA = "0xAD39C8")]
		public SDK_XimmerseHeadset()
		{
		}
	}
	[Token(Token = "0x200047C")]
	[AttributeAttribute(Name = "SDK_DescriptionAttribute", RVA = "0x642D58", Offset = "0x642D58")]
	[AttributeAttribute(Name = "SDK_DescriptionAttribute", RVA = "0x642D58", Offset = "0x642D58")]
	public class SDK_XimmerseSystem : SDK_FallbackSystem
	{
		[Token(Token = "0x6002401")]
		[Address(RVA = "0xAD39D0", Offset = "0xAD39D0", VA = "0xAD39D0")]
		public SDK_XimmerseSystem()
		{
		}
	}
}
namespace VRTK.WindowsMixedReality.Utilities
{
	[Token(Token = "0x200047D")]
	public static class InteractionSourceExtensions
	{
		[Token(Token = "0x4002043")]
		private const ushort ContinuousBuzzWaveform = 4100;
	}
	[Token(Token = "0x200047E")]
	public static class WindowsApiChecker
	{
		[Token(Token = "0x4002044")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x660894", Offset = "0x660894")]
		private static bool <UniversalApiContractV5_IsAvailable>k__BackingField;

		[Token(Token = "0x4002045")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6608A4", Offset = "0x6608A4")]
		private static bool <UniversalApiContractV4_IsAvailable>k__BackingField;

		[Token(Token = "0x4002046")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6608B4", Offset = "0x6608B4")]
		private static bool <UniversalApiContractV3_IsAvailable>k__BackingField;

		[Token(Token = "0x17000206")]
		public static bool UniversalApiContractV5_IsAvailable
		{
			[Token(Token = "0x6002403")]
			[Address(RVA = "0x8FD9A4", Offset = "0x8FD9A4", VA = "0x8FD9A4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66E818", Offset = "0x66E818")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002404")]
			[Address(RVA = "0x8FD854", Offset = "0x8FD854", VA = "0x8FD854")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66E828", Offset = "0x66E828")]
			private set
			{
			}
		}

		[Token(Token = "0x17000207")]
		public static bool UniversalApiContractV4_IsAvailable
		{
			[Token(Token = "0x6002405")]
			[Address(RVA = "0x8FDA0C", Offset = "0x8FDA0C", VA = "0x8FDA0C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66E838", Offset = "0x66E838")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002406")]
			[Address(RVA = "0x8FD8C4", Offset = "0x8FD8C4", VA = "0x8FD8C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66E848", Offset = "0x66E848")]
			private set
			{
			}
		}

		[Token(Token = "0x17000208")]
		public static bool UniversalApiContractV3_IsAvailable
		{
			[Token(Token = "0x6002407")]
			[Address(RVA = "0x8FDA74", Offset = "0x8FDA74", VA = "0x8FDA74")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66E858", Offset = "0x66E858")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002408")]
			[Address(RVA = "0x8FD934", Offset = "0x8FD934", VA = "0x8FD934")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66E868", Offset = "0x66E868")]
			private set
			{
			}
		}

		[Token(Token = "0x6002402")]
		[Address(RVA = "0x8FD830", Offset = "0x8FD830", VA = "0x8FD830")]
		static WindowsApiChecker()
		{
		}
	}
}
namespace VRTK.UnityEventHelper
{
	[Token(Token = "0x200047F")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x642E48", Offset = "0x642E48")]
	public sealed class VRTK_BaseControllable_UnityEvents : VRTK_UnityEvents<VRTK_BaseControllable>
	{
		[Serializable]
		[Token(Token = "0x200085F")]
		public sealed class BaseControllablEvent : UnityEvent<object, ControllableEventArgs>
		{
			[Token(Token = "0x60033B4")]
			[Address(RVA = "0xAD93C8", Offset = "0xAD93C8", VA = "0xAD93C8")]
			public BaseControllablEvent()
			{
			}
		}

		[Token(Token = "0x4002047")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BaseControllablEvent OnValueChanged;

		[Token(Token = "0x4002048")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public BaseControllablEvent OnRestingPointReached;

		[Token(Token = "0x4002049")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public BaseControllablEvent OnMinLimitReached;

		[Token(Token = "0x400204A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public BaseControllablEvent OnMinLimitExited;

		[Token(Token = "0x400204B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public BaseControllablEvent OnMaxLimitReached;

		[Token(Token = "0x400204C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public BaseControllablEvent OnMaxLimitExited;

		[Token(Token = "0x6002409")]
		[Address(RVA = "0xAD8B78", Offset = "0xAD8B78", VA = "0xAD8B78", Slot = "4")]
		protected override void AddListeners(VRTK_BaseControllable component)
		{
		}

		[Token(Token = "0x600240A")]
		[Address(RVA = "0xAD8D48", Offset = "0xAD8D48", VA = "0xAD8D48", Slot = "5")]
		protected override void RemoveListeners(VRTK_BaseControllable component)
		{
		}

		[Token(Token = "0x600240B")]
		[Address(RVA = "0xAD8F18", Offset = "0xAD8F18", VA = "0xAD8F18")]
		private void ValueChanged(object o, ControllableEventArgs e)
		{
		}

		[Token(Token = "0x600240C")]
		[Address(RVA = "0xAD8FBC", Offset = "0xAD8FBC", VA = "0xAD8FBC")]
		private void RestingPointReached(object o, ControllableEventArgs e)
		{
		}

		[Token(Token = "0x600240D")]
		[Address(RVA = "0xAD9060", Offset = "0xAD9060", VA = "0xAD9060")]
		private void MinLimitReached(object o, ControllableEventArgs e)
		{
		}

		[Token(Token = "0x600240E")]
		[Address(RVA = "0xAD9104", Offset = "0xAD9104", VA = "0xAD9104")]
		private void MinLimitExited(object o, ControllableEventArgs e)
		{
		}

		[Token(Token = "0x600240F")]
		[Address(RVA = "0xAD91A8", Offset = "0xAD91A8", VA = "0xAD91A8")]
		private void MaxLimitReached(object o, ControllableEventArgs e)
		{
		}

		[Token(Token = "0x6002410")]
		[Address(RVA = "0xAD924C", Offset = "0xAD924C", VA = "0xAD924C")]
		private void MaxLimitExited(object o, ControllableEventArgs e)
		{
		}

		[Token(Token = "0x6002411")]
		[Address(RVA = "0xAD92F0", Offset = "0xAD92F0", VA = "0xAD92F0")]
		public VRTK_BaseControllable_UnityEvents()
		{
		}
	}
	[Token(Token = "0x2000480")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x642E80", Offset = "0x642E80")]
	public sealed class VRTK_BasicTeleport_UnityEvents : VRTK_UnityEvents<VRTK_BasicTeleport>
	{
		[Serializable]
		[Token(Token = "0x2000860")]
		public sealed class TeleportEvent : UnityEvent<object, DestinationMarkerEventArgs>
		{
			[Token(Token = "0x60033B5")]
			[Address(RVA = "0xAD97A0", Offset = "0xAD97A0", VA = "0xAD97A0")]
			public TeleportEvent()
			{
			}
		}

		[Token(Token = "0x400204D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportEvent OnTeleporting;

		[Token(Token = "0x400204E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TeleportEvent OnTeleported;

		[Token(Token = "0x6002412")]
		[Address(RVA = "0xAD9418", Offset = "0xAD9418", VA = "0xAD9418", Slot = "4")]
		protected override void AddListeners(VRTK_BasicTeleport component)
		{
		}

		[Token(Token = "0x6002413")]
		[Address(RVA = "0xAD94E8", Offset = "0xAD94E8", VA = "0xAD94E8", Slot = "5")]
		protected override void RemoveListeners(VRTK_BasicTeleport component)
		{
		}

		[Token(Token = "0x6002414")]
		[Address(RVA = "0xAD95B8", Offset = "0xAD95B8", VA = "0xAD95B8")]
		private void Teleporting(object o, DestinationMarkerEventArgs e)
		{
		}

		[Token(Token = "0x6002415")]
		[Address(RVA = "0xAD9668", Offset = "0xAD9668", VA = "0xAD9668")]
		private void Teleported(object o, DestinationMarkerEventArgs e)
		{
		}

		[Token(Token = "0x6002416")]
		[Address(RVA = "0xAD9718", Offset = "0xAD9718", VA = "0xAD9718")]
		public VRTK_BasicTeleport_UnityEvents()
		{
		}
	}
	[Token(Token = "0x2000481")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x642EB8", Offset = "0x642EB8")]
	public sealed class VRTK_BodyPhysics_UnityEvents : VRTK_UnityEvents<VRTK_BodyPhysics>
	{
		[Serializable]
		[Token(Token = "0x2000861")]
		public sealed class BodyPhysicsEvent : UnityEvent<object, BodyPhysicsEventArgs>
		{
			[Token(Token = "0x60033B6")]
			[Address(RVA = "0x7C6AEC", Offset = "0x7C6AEC", VA = "0x7C6AEC")]
			public BodyPhysicsEvent()
			{
			}
		}

		[Token(Token = "0x400204F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BodyPhysicsEvent OnStartFalling;

		[Token(Token = "0x4002050")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public BodyPhysicsEvent OnStopFalling;

		[Token(Token = "0x4002051")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public BodyPhysicsEvent OnStartMoving;

		[Token(Token = "0x4002052")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public BodyPhysicsEvent OnStopMoving;

		[Token(Token = "0x4002053")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public BodyPhysicsEvent OnStartColliding;

		[Token(Token = "0x4002054")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public BodyPhysicsEvent OnStopColliding;

		[Token(Token = "0x4002055")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public BodyPhysicsEvent OnStartLeaning;

		[Token(Token = "0x4002056")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public BodyPhysicsEvent OnStopLeaning;

		[Token(Token = "0x4002057")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public BodyPhysicsEvent OnStartTouchingGround;

		[Token(Token = "0x4002058")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public BodyPhysicsEvent OnStopTouchingGround;

		[Token(Token = "0x6002417")]
		[Address(RVA = "0xAD97F0", Offset = "0xAD97F0", VA = "0xAD97F0", Slot = "4")]
		protected override void AddListeners(VRTK_BodyPhysics component)
		{
		}

		[Token(Token = "0x6002418")]
		[Address(RVA = "0xAD9AC0", Offset = "0xAD9AC0", VA = "0xAD9AC0", Slot = "5")]
		protected override void RemoveListeners(VRTK_BodyPhysics component)
		{
		}

		[Token(Token = "0x6002419")]
		[Address(RVA = "0xAD9D90", Offset = "0xAD9D90", VA = "0xAD9D90")]
		private void StartFalling(object o, BodyPhysicsEventArgs e)
		{
		}

		[Token(Token = "0x600241A")]
		[Address(RVA = "0xAD9E18", Offset = "0xAD9E18", VA = "0xAD9E18")]
		private void StopFalling(object o, BodyPhysicsEventArgs e)
		{
		}

		[Token(Token = "0x600241B")]
		[Address(RVA = "0xAD9EA0", Offset = "0xAD9EA0", VA = "0xAD9EA0")]
		private void StartMoving(object o, BodyPhysicsEventArgs e)
		{
		}

		[Token(Token = "0x600241C")]
		[Address(RVA = "0xAD9F28", Offset = "0xAD9F28", VA = "0xAD9F28")]
		private void StopMoving(object o, BodyPhysicsEventArgs e)
		{
		}

		[Token(Token = "0x600241D")]
		[Address(RVA = "0xAD9FB0", Offset = "0xAD9FB0", VA = "0xAD9FB0")]
		private void StartColliding(object o, BodyPhysicsEventArgs e)
		{
		}

		[Token(Token = "0x600241E")]
		[Address(RVA = "0xADA038", Offset = "0xADA038", VA = "0xADA038")]
		private void StopColliding(object o, BodyPhysicsEventArgs e)
		{
		}

		[Token(Token = "0x600241F")]
		[Address(RVA = "0xADA0C0", Offset = "0xADA0C0", VA = "0xADA0C0")]
		private void StartLeaning(object o, BodyPhysicsEventArgs e)
		{
		}

		[Token(Token = "0x6002420")]
		[Address(RVA = "0xADA148", Offset = "0xADA148", VA = "0xADA148")]
		private void StopLeaning(object o, BodyPhysicsEventArgs e)
		{
		}

		[Token(Token = "0x6002421")]
		[Address(RVA = "0xADA1D0", Offset = "0xADA1D0", VA = "0xADA1D0")]
		private void StartTouchingGround(object o, BodyPhysicsEventArgs e)
		{
		}

		[Token(Token = "0x6002422")]
		[Address(RVA = "0xADA258", Offset = "0xADA258", VA = "0xADA258")]
		private void StopTouchingGround(object o, BodyPhysicsEventArgs e)
		{
		}

		[Token(Token = "0x6002423")]
		[Address(RVA = "0xADA2E0", Offset = "0xADA2E0", VA = "0xADA2E0")]
		public VRTK_BodyPhysics_UnityEvents()
		{
		}
	}
	[Token(Token = "0x2000482")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x642EF0", Offset = "0x642EF0")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x642EF0", Offset = "0x642EF0")]
	public sealed class VRTK_Button_UnityEvents : VRTK_UnityEvents<VRTK_Button>
	{
		[Serializable]
		[Token(Token = "0x2000862")]
		public sealed class Button3DEvent : UnityEvent<object, Control3DEventArgs>
		{
			[Token(Token = "0x60033B7")]
			[Address(RVA = "0x7C6E74", Offset = "0x7C6E74", VA = "0x7C6E74")]
			public Button3DEvent()
			{
			}
		}

		[Token(Token = "0x4002059")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Button3DEvent OnPushed;

		[Token(Token = "0x400205A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Button3DEvent OnReleased;

		[Token(Token = "0x6002424")]
		[Address(RVA = "0x7C6B3C", Offset = "0x7C6B3C", VA = "0x7C6B3C", Slot = "4")]
		protected override void AddListeners(VRTK_Button component)
		{
		}

		[Token(Token = "0x6002425")]
		[Address(RVA = "0x7C6C0C", Offset = "0x7C6C0C", VA = "0x7C6C0C", Slot = "5")]
		protected override void RemoveListeners(VRTK_Button component)
		{
		}

		[Token(Token = "0x6002426")]
		[Address(RVA = "0x7C6CDC", Offset = "0x7C6CDC", VA = "0x7C6CDC")]
		private void Pushed(object o, Control3DEventArgs e)
		{
		}

		[Token(Token = "0x6002427")]
		[Address(RVA = "0x7C6D64", Offset = "0x7C6D64", VA = "0x7C6D64")]
		public void Released(object o, Control3DEventArgs e)
		{
		}

		[Token(Token = "0x6002428")]
		[Address(RVA = "0x7C6DEC", Offset = "0x7C6DEC", VA = "0x7C6DEC")]
		public VRTK_Button_UnityEvents()
		{
		}
	}
	[Token(Token = "0x2000483")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x642F50", Offset = "0x642F50")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x642F50", Offset = "0x642F50")]
	public sealed class VRTK_Control_UnityEvents : VRTK_UnityEvents<VRTK_Control>
	{
		[Serializable]
		[Token(Token = "0x2000863")]
		public sealed class Control3DEvent : UnityEvent<object, Control3DEventArgs>
		{
			[Token(Token = "0x60033B8")]
			[Address(RVA = "0x7C757C", Offset = "0x7C757C", VA = "0x7C757C")]
			public Control3DEvent()
			{
			}
		}

		[Token(Token = "0x400205B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Control3DEvent OnValueChanged;

		[Token(Token = "0x6002429")]
		[Address(RVA = "0x7C7368", Offset = "0x7C7368", VA = "0x7C7368", Slot = "4")]
		protected override void AddListeners(VRTK_Control component)
		{
		}

		[Token(Token = "0x600242A")]
		[Address(RVA = "0x7C73F8", Offset = "0x7C73F8", VA = "0x7C73F8", Slot = "5")]
		protected override void RemoveListeners(VRTK_Control component)
		{
		}

		[Token(Token = "0x600242B")]
		[Address(RVA = "0x7C7488", Offset = "0x7C7488", VA = "0x7C7488")]
		private void ValueChanged(object o, Control3DEventArgs e)
		{
		}

		[Token(Token = "0x600242C")]
		[Address(RVA = "0x7C7510", Offset = "0x7C7510", VA = "0x7C7510")]
		public VRTK_Control_UnityEvents()
		{
		}
	}
	[Token(Token = "0x2000484")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x642FB0", Offset = "0x642FB0")]
	public sealed class VRTK_ControlAnimationGrabAttach_UnityEvents : VRTK_UnityEvents<VRTK_ControlAnimationGrabAttach>
	{
		[Serializable]
		[Token(Token = "0x2000864")]
		public sealed class ControlAnimationGrabAttachEvent : UnityEvent<object, ControlAnimationGrabAttachEventArgs>
		{
			[Token(Token = "0x60033B9")]
			[Address(RVA = "0x7C7318", Offset = "0x7C7318", VA = "0x7C7318")]
			public ControlAnimationGrabAttachEvent()
			{
			}
		}

		[Token(Token = "0x400205C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ControlAnimationGrabAttachEvent OnAnimationFrameAtStart;

		[Token(Token = "0x400205D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ControlAnimationGrabAttachEvent OnAnimationFrameAtEnd;

		[Token(Token = "0x400205E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public ControlAnimationGrabAttachEvent OnAnimationFrameChanged;

		[Token(Token = "0x600242D")]
		[Address(RVA = "0x7C6EC4", Offset = "0x7C6EC4", VA = "0x7C6EC4", Slot = "4")]
		protected override void AddListeners(VRTK_ControlAnimationGrabAttach component)
		{
		}

		[Token(Token = "0x600242E")]
		[Address(RVA = "0x7C6FD4", Offset = "0x7C6FD4", VA = "0x7C6FD4", Slot = "5")]
		protected override void RemoveListeners(VRTK_ControlAnimationGrabAttach component)
		{
		}

		[Token(Token = "0x600242F")]
		[Address(RVA = "0x7C70E4", Offset = "0x7C70E4", VA = "0x7C70E4")]
		private void AnimationFrameAtStart(object o, ControlAnimationGrabAttachEventArgs e)
		{
		}

		[Token(Token = "0x6002430")]
		[Address(RVA = "0x7C716C", Offset = "0x7C716C", VA = "0x7C716C")]
		private void AnimationFrameAtEnd(object o, ControlAnimationGrabAttachEventArgs e)
		{
		}

		[Token(Token = "0x6002431")]
		[Address(RVA = "0x7C71F4", Offset = "0x7C71F4", VA = "0x7C71F4")]
		private void AnimationFrameChanged(object o, ControlAnimationGrabAttachEventArgs e)
		{
		}

		[Token(Token = "0x6002432")]
		[Address(RVA = "0x7C727C", Offset = "0x7C727C", VA = "0x7C727C")]
		public VRTK_ControlAnimationGrabAttach_UnityEvents()
		{
		}
	}
	[Token(Token = "0x2000485")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x642FE8", Offset = "0x642FE8")]
	public sealed class VRTK_ControllerEvents_UnityEvents : VRTK_UnityEvents<VRTK_ControllerEvents>
	{
		[Serializable]
		[Token(Token = "0x2000865")]
		public sealed class ControllerInteractionEvent : UnityEvent<object, ControllerInteractionEventArgs>
		{
			[Token(Token = "0x60033BA")]
			[Address(RVA = "0x7CAFCC", Offset = "0x7CAFCC", VA = "0x7CAFCC")]
			public ControllerInteractionEvent()
			{
			}
		}

		[Token(Token = "0x400205F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ControllerInteractionEvent OnTriggerPressed;

		[Token(Token = "0x4002060")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ControllerInteractionEvent OnTriggerReleased;

		[Token(Token = "0x4002061")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public ControllerInteractionEvent OnTriggerTouchStart;

		[Token(Token = "0x4002062")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public ControllerInteractionEvent OnTriggerTouchEnd;

		[Token(Token = "0x4002063")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public ControllerInteractionEvent OnTriggerHairlineStart;

		[Token(Token = "0x4002064")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public ControllerInteractionEvent OnTriggerHairlineEnd;

		[Token(Token = "0x4002065")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public ControllerInteractionEvent OnTriggerClicked;

		[Token(Token = "0x4002066")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public ControllerInteractionEvent OnTriggerUnclicked;

		[Token(Token = "0x4002067")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public ControllerInteractionEvent OnTriggerAxisChanged;

		[Token(Token = "0x4002068")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public ControllerInteractionEvent OnGripPressed;

		[Token(Token = "0x4002069")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public ControllerInteractionEvent OnGripReleased;

		[Token(Token = "0x400206A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public ControllerInteractionEvent OnGripTouchStart;

		[Token(Token = "0x400206B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public ControllerInteractionEvent OnGripTouchEnd;

		[Token(Token = "0x400206C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public ControllerInteractionEvent OnGripHairlineStart;

		[Token(Token = "0x400206D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public ControllerInteractionEvent OnGripHairlineEnd;

		[Token(Token = "0x400206E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public ControllerInteractionEvent OnGripClicked;

		[Token(Token = "0x400206F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public ControllerInteractionEvent OnGripUnclicked;

		[Token(Token = "0x4002070")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public ControllerInteractionEvent OnGripAxisChanged;

		[Token(Token = "0x4002071")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public ControllerInteractionEvent OnTouchpadPressed;

		[Token(Token = "0x4002072")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public ControllerInteractionEvent OnTouchpadReleased;

		[Token(Token = "0x4002073")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public ControllerInteractionEvent OnTouchpadTouchStart;

		[Token(Token = "0x4002074")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public ControllerInteractionEvent OnTouchpadTouchEnd;

		[Token(Token = "0x4002075")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public ControllerInteractionEvent OnTouchpadAxisChanged;

		[Token(Token = "0x4002076")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public ControllerInteractionEvent OnButtonOnePressed;

		[Token(Token = "0x4002077")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public ControllerInteractionEvent OnButtonOneReleased;

		[Token(Token = "0x4002078")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public ControllerInteractionEvent OnButtonOneTouchStart;

		[Token(Token = "0x4002079")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public ControllerInteractionEvent OnButtonOneTouchEnd;

		[Token(Token = "0x400207A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public ControllerInteractionEvent OnButtonTwoPressed;

		[Token(Token = "0x400207B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public ControllerInteractionEvent OnButtonTwoReleased;

		[Token(Token = "0x400207C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public ControllerInteractionEvent OnButtonTwoTouchStart;

		[Token(Token = "0x400207D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public ControllerInteractionEvent OnButtonTwoTouchEnd;

		[Token(Token = "0x400207E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		public ControllerInteractionEvent OnStartMenuPressed;

		[Token(Token = "0x400207F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		public ControllerInteractionEvent OnStartMenuReleased;

		[Token(Token = "0x4002080")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		public ControllerInteractionEvent OnAliasPointerOn;

		[Token(Token = "0x4002081")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		public ControllerInteractionEvent OnAliasPointerOff;

		[Token(Token = "0x4002082")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		public ControllerInteractionEvent OnAliasPointerSet;

		[Token(Token = "0x4002083")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		public ControllerInteractionEvent OnAliasGrabOn;

		[Token(Token = "0x4002084")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		public ControllerInteractionEvent OnAliasGrabOff;

		[Token(Token = "0x4002085")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		public ControllerInteractionEvent OnAliasUseOn;

		[Token(Token = "0x4002086")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		public ControllerInteractionEvent OnAliasUseOff;

		[Token(Token = "0x4002087")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		public ControllerInteractionEvent OnAliasUIClickOn;

		[Token(Token = "0x4002088")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		public ControllerInteractionEvent OnAliasUIClickOff;

		[Token(Token = "0x4002089")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		public ControllerInteractionEvent OnAliasMenuOn;

		[Token(Token = "0x400208A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		public ControllerInteractionEvent OnAliasMenuOff;

		[Token(Token = "0x400208B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		public ControllerInteractionEvent OnControllerEnabled;

		[Token(Token = "0x400208C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		public ControllerInteractionEvent OnControllerDisabled;

		[Token(Token = "0x400208D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		public ControllerInteractionEvent OnControllerIndexChanged;

		[Token(Token = "0x400208E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		public ControllerInteractionEvent OnControllerModelAvailable;

		[Token(Token = "0x400208F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		public ControllerInteractionEvent OnControllerVisible;

		[Token(Token = "0x4002090")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		public ControllerInteractionEvent OnControllerHidden;

		[Token(Token = "0x6002433")]
		[Address(RVA = "0x7C75CC", Offset = "0x7C75CC", VA = "0x7C75CC", Slot = "4")]
		protected override void AddListeners(VRTK_ControllerEvents component)
		{
		}

		[Token(Token = "0x6002434")]
		[Address(RVA = "0x7C7FDC", Offset = "0x7C7FDC", VA = "0x7C7FDC", Slot = "5")]
		protected override void RemoveListeners(VRTK_ControllerEvents component)
		{
		}

		[Token(Token = "0x6002435")]
		[Address(RVA = "0x7C89EC", Offset = "0x7C89EC", VA = "0x7C89EC")]
		private void TriggerPressed(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6002436")]
		[Address(RVA = "0x7C8A98", Offset = "0x7C8A98", VA = "0x7C8A98")]
		private void TriggerReleased(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6002437")]
		[Address(RVA = "0x7C8B44", Offset = "0x7C8B44", VA = "0x7C8B44")]
		private void TriggerTouchStart(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6002438")]
		[Address(RVA = "0x7C8BF0", Offset = "0x7C8BF0", VA = "0x7C8BF0")]
		private void TriggerTouchEnd(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6002439")]
		[Address(RVA = "0x7C8C9C", Offset = "0x7C8C9C", VA = "0x7C8C9C")]
		private void TriggerHairlineStart(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x600243A")]
		[Address(RVA = "0x7C8D48", Offset = "0x7C8D48", VA = "0x7C8D48")]
		private void TriggerHairlineEnd(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x600243B")]
		[Address(RVA = "0x7C8DF4", Offset = "0x7C8DF4", VA = "0x7C8DF4")]
		private void TriggerClicked(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x600243C")]
		[Address(RVA = "0x7C8EA0", Offset = "0x7C8EA0", VA = "0x7C8EA0")]
		private void TriggerUnclicked(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x600243D")]
		[Address(RVA = "0x7C8F4C", Offset = "0x7C8F4C", VA = "0x7C8F4C")]
		private void TriggerAxisChanged(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x600243E")]
		[Address(RVA = "0x7C8FF8", Offset = "0x7C8FF8", VA = "0x7C8FF8")]
		private void GripPressed(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x600243F")]
		[Address(RVA = "0x7C90A4", Offset = "0x7C90A4", VA = "0x7C90A4")]
		private void GripReleased(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6002440")]
		[Address(RVA = "0x7C9150", Offset = "0x7C9150", VA = "0x7C9150")]
		private void GripTouchStart(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6002441")]
		[Address(RVA = "0x7C91FC", Offset = "0x7C91FC", VA = "0x7C91FC")]
		private void GripTouchEnd(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6002442")]
		[Address(RVA = "0x7C92A8", Offset = "0x7C92A8", VA = "0x7C92A8")]
		private void GripHairlineStart(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6002443")]
		[Address(RVA = "0x7C9354", Offset = "0x7C9354", VA = "0x7C9354")]
		private void GripHairlineEnd(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6002444")]
		[Address(RVA = "0x7C9400", Offset = "0x7C9400", VA = "0x7C9400")]
		private void GripClicked(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6002445")]
		[Address(RVA = "0x7C94AC", Offset = "0x7C94AC", VA = "0x7C94AC")]
		private void GripUnclicked(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6002446")]
		[Address(RVA = "0x7C9558", Offset = "0x7C9558", VA = "0x7C9558")]
		private void GripAxisChanged(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6002447")]
		[Address(RVA = "0x7C9604", Offset = "0x7C9604", VA = "0x7C9604")]
		private void TouchpadPressed(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6002448")]
		[Address(RVA = "0x7C96B0", Offset = "0x7C96B0", VA = "0x7C96B0")]
		private void TouchpadReleased(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6002449")]
		[Address(RVA = "0x7C975C", Offset = "0x7C975C", VA = "0x7C975C")]
		private void TouchpadTouchStart(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x600244A")]
		[Address(RVA = "0x7C9808", Offset = "0x7C9808", VA = "0x7C9808")]
		private void TouchpadTouchEnd(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x600244B")]
		[Address(RVA = "0x7C98B4", Offset = "0x7C98B4", VA = "0x7C98B4")]
		private void TouchpadAxisChanged(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x600244C")]
		[Address(RVA = "0x7C9960", Offset = "0x7C9960", VA = "0x7C9960")]
		private void ButtonOnePressed(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x600244D")]
		[Address(RVA = "0x7C9A0C", Offset = "0x7C9A0C", VA = "0x7C9A0C")]
		private void ButtonOneReleased(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x600244E")]
		[Address(RVA = "0x7C9AB8", Offset = "0x7C9AB8", VA = "0x7C9AB8")]
		private void ButtonOneTouchStart(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x600244F")]
		[Address(RVA = "0x7C9B64", Offset = "0x7C9B64", VA = "0x7C9B64")]
		private void ButtonOneTouchEnd(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6002450")]
		[Address(RVA = "0x7C9C10", Offset = "0x7C9C10", VA = "0x7C9C10")]
		private void ButtonTwoPressed(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6002451")]
		[Address(RVA = "0x7C9CBC", Offset = "0x7C9CBC", VA = "0x7C9CBC")]
		private void ButtonTwoReleased(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6002452")]
		[Address(RVA = "0x7C9D68", Offset = "0x7C9D68", VA = "0x7C9D68")]
		private void ButtonTwoTouchStart(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6002453")]
		[Address(RVA = "0x7C9E14", Offset = "0x7C9E14", VA = "0x7C9E14")]
		private void ButtonTwoTouchEnd(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6002454")]
		[Address(RVA = "0x7C9EC0", Offset = "0x7C9EC0", VA = "0x7C9EC0")]
		private void StartMenuPressed(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6002455")]
		[Address(RVA = "0x7C9F6C", Offset = "0x7C9F6C", VA = "0x7C9F6C")]
		private void StartMenuReleased(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6002456")]
		[Address(RVA = "0x7CA018", Offset = "0x7CA018", VA = "0x7CA018")]
		private void AliasPointerOn(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6002457")]
		[Address(RVA = "0x7CA0C4", Offset = "0x7CA0C4", VA = "0x7CA0C4")]
		private void AliasPointerOff(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6002458")]
		[Address(RVA = "0x7CA170", Offset = "0x7CA170", VA = "0x7CA170")]
		private void AliasPointerSet(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6002459")]
		[Address(RVA = "0x7CA21C", Offset = "0x7CA21C", VA = "0x7CA21C")]
		private void AliasGrabOn(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x600245A")]
		[Address(RVA = "0x7CA2C8", Offset = "0x7CA2C8", VA = "0x7CA2C8")]
		private void AliasGrabOff(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x600245B")]
		[Address(RVA = "0x7CA374", Offset = "0x7CA374", VA = "0x7CA374")]
		private void AliasUseOn(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x600245C")]
		[Address(RVA = "0x7CA420", Offset = "0x7CA420", VA = "0x7CA420")]
		private void AliasUseOff(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x600245D")]
		[Address(RVA = "0x7CA4CC", Offset = "0x7CA4CC", VA = "0x7CA4CC")]
		private void AliasUIClickOn(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x600245E")]
		[Address(RVA = "0x7CA578", Offset = "0x7CA578", VA = "0x7CA578")]
		private void AliasUIClickOff(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x600245F")]
		[Address(RVA = "0x7CA624", Offset = "0x7CA624", VA = "0x7CA624")]
		private void AliasMenuOn(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6002460")]
		[Address(RVA = "0x7CA6D0", Offset = "0x7CA6D0", VA = "0x7CA6D0")]
		private void AliasMenuOff(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6002461")]
		[Address(RVA = "0x7CA77C", Offset = "0x7CA77C", VA = "0x7CA77C")]
		private void ControllerEnabled(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6002462")]
		[Address(RVA = "0x7CA828", Offset = "0x7CA828", VA = "0x7CA828")]
		private void ControllerDisabled(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6002463")]
		[Address(RVA = "0x7CA8D4", Offset = "0x7CA8D4", VA = "0x7CA8D4")]
		private void ControllerIndexChanged(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6002464")]
		[Address(RVA = "0x7CA980", Offset = "0x7CA980", VA = "0x7CA980")]
		private void ControllerModelAvailable(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6002465")]
		[Address(RVA = "0x7CAA2C", Offset = "0x7CAA2C", VA = "0x7CAA2C")]
		private void ControllerVisible(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6002466")]
		[Address(RVA = "0x7CAAD8", Offset = "0x7CAAD8", VA = "0x7CAAD8")]
		private void ControllerHidden(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6002467")]
		[Address(RVA = "0x7CAB84", Offset = "0x7CAB84", VA = "0x7CAB84")]
		public VRTK_ControllerEvents_UnityEvents()
		{
		}
	}
	[Token(Token = "0x2000486")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x643020", Offset = "0x643020")]
	public sealed class VRTK_ControllerRigidbodyActivator_UnityEvents : VRTK_UnityEvents<VRTK_ControllerRigidbodyActivator>
	{
		[Serializable]
		[Token(Token = "0x2000866")]
		public sealed class ControllerRigidbodyActivatorEvent : UnityEvent<object, ControllerRigidbodyActivatorEventArgs>
		{
			[Token(Token = "0x60033BB")]
			[Address(RVA = "0x7CB334", Offset = "0x7CB334", VA = "0x7CB334")]
			public ControllerRigidbodyActivatorEvent()
			{
			}
		}

		[Token(Token = "0x4002091")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ControllerRigidbodyActivatorEvent OnControllerRigidbodyOn;

		[Token(Token = "0x4002092")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ControllerRigidbodyActivatorEvent OnControllerRigidbodyOff;

		[Token(Token = "0x6002468")]
		[Address(RVA = "0x7CB01C", Offset = "0x7CB01C", VA = "0x7CB01C", Slot = "4")]
		protected override void AddListeners(VRTK_ControllerRigidbodyActivator component)
		{
		}

		[Token(Token = "0x6002469")]
		[Address(RVA = "0x7CB0EC", Offset = "0x7CB0EC", VA = "0x7CB0EC", Slot = "5")]
		protected override void RemoveListeners(VRTK_ControllerRigidbodyActivator component)
		{
		}

		[Token(Token = "0x600246A")]
		[Address(RVA = "0x7CB1BC", Offset = "0x7CB1BC", VA = "0x7CB1BC")]
		private void ControllerRigidbodyOn(object o, ControllerRigidbodyActivatorEventArgs e)
		{
		}

		[Token(Token = "0x600246B")]
		[Address(RVA = "0x7CB234", Offset = "0x7CB234", VA = "0x7CB234")]
		private void ControllerRigidbodyOff(object o, ControllerRigidbodyActivatorEventArgs e)
		{
		}

		[Token(Token = "0x600246C")]
		[Address(RVA = "0x7CB2AC", Offset = "0x7CB2AC", VA = "0x7CB2AC")]
		public VRTK_ControllerRigidbodyActivator_UnityEvents()
		{
		}
	}
	[Token(Token = "0x2000487")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x643058", Offset = "0x643058")]
	public sealed class VRTK_ControllerTooltips_UnityEvents : VRTK_UnityEvents<VRTK_ControllerTooltips>
	{
		[Serializable]
		[Token(Token = "0x2000867")]
		public sealed class ControllerTooltipsEvent : UnityEvent<object, ControllerTooltipsEventArgs>
		{
			[Token(Token = "0x60033BC")]
			[Address(RVA = "0x7CB69C", Offset = "0x7CB69C", VA = "0x7CB69C")]
			public ControllerTooltipsEvent()
			{
			}
		}

		[Token(Token = "0x4002093")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ControllerTooltipsEvent OnControllerTooltipOn;

		[Token(Token = "0x4002094")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ControllerTooltipsEvent OnControllerTooltipOff;

		[Token(Token = "0x600246D")]
		[Address(RVA = "0x7CB384", Offset = "0x7CB384", VA = "0x7CB384", Slot = "4")]
		protected override void AddListeners(VRTK_ControllerTooltips component)
		{
		}

		[Token(Token = "0x600246E")]
		[Address(RVA = "0x7CB454", Offset = "0x7CB454", VA = "0x7CB454", Slot = "5")]
		protected override void RemoveListeners(VRTK_ControllerTooltips component)
		{
		}

		[Token(Token = "0x600246F")]
		[Address(RVA = "0x7CB524", Offset = "0x7CB524", VA = "0x7CB524")]
		private void ControllerTooltipOn(object o, ControllerTooltipsEventArgs e)
		{
		}

		[Token(Token = "0x6002470")]
		[Address(RVA = "0x7CB59C", Offset = "0x7CB59C", VA = "0x7CB59C")]
		private void ControllerTooltipOff(object o, ControllerTooltipsEventArgs e)
		{
		}

		[Token(Token = "0x6002471")]
		[Address(RVA = "0x7CB614", Offset = "0x7CB614", VA = "0x7CB614")]
		public VRTK_ControllerTooltips_UnityEvents()
		{
		}
	}
	[Token(Token = "0x2000488")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x643090", Offset = "0x643090")]
	public sealed class VRTK_DashTeleport_UnityEvents : VRTK_UnityEvents<VRTK_DashTeleport>
	{
		[Serializable]
		[Token(Token = "0x2000868")]
		public sealed class DashTeleportEvent : UnityEvent<object, DashTeleportEventArgs>
		{
			[Token(Token = "0x60033BD")]
			[Address(RVA = "0x7CBA04", Offset = "0x7CBA04", VA = "0x7CBA04")]
			public DashTeleportEvent()
			{
			}
		}

		[Token(Token = "0x4002095")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DashTeleportEvent OnWillDashThruObjects;

		[Token(Token = "0x4002096")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public DashTeleportEvent OnDashedThruObjects;

		[Token(Token = "0x6002472")]
		[Address(RVA = "0x7CB6EC", Offset = "0x7CB6EC", VA = "0x7CB6EC", Slot = "4")]
		protected override void AddListeners(VRTK_DashTeleport component)
		{
		}

		[Token(Token = "0x6002473")]
		[Address(RVA = "0x7CB7BC", Offset = "0x7CB7BC", VA = "0x7CB7BC", Slot = "5")]
		protected override void RemoveListeners(VRTK_DashTeleport component)
		{
		}

		[Token(Token = "0x6002474")]
		[Address(RVA = "0x7CB88C", Offset = "0x7CB88C", VA = "0x7CB88C")]
		private void WillDashThruObjects(object o, DashTeleportEventArgs e)
		{
		}

		[Token(Token = "0x6002475")]
		[Address(RVA = "0x7CB904", Offset = "0x7CB904", VA = "0x7CB904")]
		private void DashedThruObjects(object o, DashTeleportEventArgs e)
		{
		}

		[Token(Token = "0x6002476")]
		[Address(RVA = "0x7CB97C", Offset = "0x7CB97C", VA = "0x7CB97C")]
		public VRTK_DashTeleport_UnityEvents()
		{
		}
	}
	[Token(Token = "0x2000489")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x6430C8", Offset = "0x6430C8")]
	public sealed class VRTK_DestinationMarker_UnityEvents : VRTK_UnityEvents<VRTK_DestinationMarker>
	{
		[Serializable]
		[Token(Token = "0x2000869")]
		public sealed class DestinationMarkerEvent : UnityEvent<object, DestinationMarkerEventArgs>
		{
			[Token(Token = "0x60033BE")]
			[Address(RVA = "0x7CC064", Offset = "0x7CC064", VA = "0x7CC064")]
			public DestinationMarkerEvent()
			{
			}
		}

		[Token(Token = "0x4002097")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DestinationMarkerEvent OnDestinationMarkerEnter;

		[Token(Token = "0x4002098")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public DestinationMarkerEvent OnDestinationMarkerExit;

		[Token(Token = "0x4002099")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public DestinationMarkerEvent OnDestinationMarkerHover;

		[Token(Token = "0x400209A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public DestinationMarkerEvent OnDestinationMarkerSet;

		[Token(Token = "0x6002477")]
		[Address(RVA = "0x7CBA54", Offset = "0x7CBA54", VA = "0x7CBA54", Slot = "4")]
		protected override void AddListeners(VRTK_DestinationMarker component)
		{
		}

		[Token(Token = "0x6002478")]
		[Address(RVA = "0x7CBBA4", Offset = "0x7CBBA4", VA = "0x7CBBA4", Slot = "5")]
		protected override void RemoveListeners(VRTK_DestinationMarker component)
		{
		}

		[Token(Token = "0x6002479")]
		[Address(RVA = "0x7CBCF4", Offset = "0x7CBCF4", VA = "0x7CBCF4")]
		private void DestinationMarkerEnter(object o, DestinationMarkerEventArgs e)
		{
		}

		[Token(Token = "0x600247A")]
		[Address(RVA = "0x7CBDA4", Offset = "0x7CBDA4", VA = "0x7CBDA4")]
		private void DestinationMarkerExit(object o, DestinationMarkerEventArgs e)
		{
		}

		[Token(Token = "0x600247B")]
		[Address(RVA = "0x7CBE54", Offset = "0x7CBE54", VA = "0x7CBE54")]
		private void DestinationMarkerHover(object o, DestinationMarkerEventArgs e)
		{
		}

		[Token(Token = "0x600247C")]
		[Address(RVA = "0x7CBF04", Offset = "0x7CBF04", VA = "0x7CBF04")]
		private void DestinationMarkerSet(object o, DestinationMarkerEventArgs e)
		{
		}

		[Token(Token = "0x600247D")]
		[Address(RVA = "0x7CBFB4", Offset = "0x7CBFB4", VA = "0x7CBFB4")]
		public VRTK_DestinationMarker_UnityEvents()
		{
		}
	}
	[Token(Token = "0x200048A")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x643100", Offset = "0x643100")]
	public sealed class VRTK_DestinationPoint_UnityEvents : VRTK_UnityEvents<VRTK_DestinationPoint>
	{
		[Serializable]
		[Token(Token = "0x200086A")]
		public sealed class DestinationPointEvent : UnityEvent<object>
		{
			[Token(Token = "0x60033BF")]
			[Address(RVA = "0x7CC6C8", Offset = "0x7CC6C8", VA = "0x7CC6C8")]
			public DestinationPointEvent()
			{
			}
		}

		[Token(Token = "0x400209B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DestinationPointEvent OnDestinationPointEnabled;

		[Token(Token = "0x400209C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public DestinationPointEvent OnDestinationPointDisabled;

		[Token(Token = "0x400209D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public DestinationPointEvent OnDestinationPointLocked;

		[Token(Token = "0x400209E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public DestinationPointEvent OnDestinationPointUnlocked;

		[Token(Token = "0x400209F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public DestinationPointEvent OnDestinationPointReset;

		[Token(Token = "0x600247E")]
		[Address(RVA = "0x7CC0B4", Offset = "0x7CC0B4", VA = "0x7CC0B4", Slot = "4")]
		protected override void AddListeners(VRTK_DestinationPoint component)
		{
		}

		[Token(Token = "0x600247F")]
		[Address(RVA = "0x7CC244", Offset = "0x7CC244", VA = "0x7CC244", Slot = "5")]
		protected override void RemoveListeners(VRTK_DestinationPoint component)
		{
		}

		[Token(Token = "0x6002480")]
		[Address(RVA = "0x7CC3D4", Offset = "0x7CC3D4", VA = "0x7CC3D4")]
		private void DestinationPointEnabled(object o)
		{
		}

		[Token(Token = "0x6002481")]
		[Address(RVA = "0x7CC444", Offset = "0x7CC444", VA = "0x7CC444")]
		private void DestinationPointDisabled(object o)
		{
		}

		[Token(Token = "0x6002482")]
		[Address(RVA = "0x7CC4B4", Offset = "0x7CC4B4", VA = "0x7CC4B4")]
		private void DestinationPointLocked(object o)
		{
		}

		[Token(Token = "0x6002483")]
		[Address(RVA = "0x7CC524", Offset = "0x7CC524", VA = "0x7CC524")]
		private void DestinationPointUnlocked(object o)
		{
		}

		[Token(Token = "0x6002484")]
		[Address(RVA = "0x7CC594", Offset = "0x7CC594", VA = "0x7CC594")]
		private void DestinationPointReset(object o)
		{
		}

		[Token(Token = "0x6002485")]
		[Address(RVA = "0x7CC604", Offset = "0x7CC604", VA = "0x7CC604")]
		public VRTK_DestinationPoint_UnityEvents()
		{
		}
	}
	[Token(Token = "0x200048B")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x643138", Offset = "0x643138")]
	public sealed class VRTK_HeadsetCollision_UnityEvents : VRTK_UnityEvents<VRTK_HeadsetCollision>
	{
		[Serializable]
		[Token(Token = "0x200086B")]
		public sealed class HeadsetCollisionEvent : UnityEvent<object, HeadsetCollisionEventArgs>
		{
			[Token(Token = "0x60033C0")]
			[Address(RVA = "0x7CCA50", Offset = "0x7CCA50", VA = "0x7CCA50")]
			public HeadsetCollisionEvent()
			{
			}
		}

		[Token(Token = "0x40020A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HeadsetCollisionEvent OnHeadsetCollisionDetect;

		[Token(Token = "0x40020A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public HeadsetCollisionEvent OnHeadsetCollisionEnded;

		[Token(Token = "0x6002486")]
		[Address(RVA = "0x7CC718", Offset = "0x7CC718", VA = "0x7CC718", Slot = "4")]
		protected override void AddListeners(VRTK_HeadsetCollision component)
		{
		}

		[Token(Token = "0x6002487")]
		[Address(RVA = "0x7CC7E8", Offset = "0x7CC7E8", VA = "0x7CC7E8", Slot = "5")]
		protected override void RemoveListeners(VRTK_HeadsetCollision component)
		{
		}

		[Token(Token = "0x6002488")]
		[Address(RVA = "0x7CC8B8", Offset = "0x7CC8B8", VA = "0x7CC8B8")]
		private void HeadsetCollisionDetect(object o, HeadsetCollisionEventArgs e)
		{
		}

		[Token(Token = "0x6002489")]
		[Address(RVA = "0x7CC940", Offset = "0x7CC940", VA = "0x7CC940")]
		private void HeadsetCollisionEnded(object o, HeadsetCollisionEventArgs e)
		{
		}

		[Token(Token = "0x600248A")]
		[Address(RVA = "0x7CC9C8", Offset = "0x7CC9C8", VA = "0x7CC9C8")]
		public VRTK_HeadsetCollision_UnityEvents()
		{
		}
	}
	[Token(Token = "0x200048C")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x643170", Offset = "0x643170")]
	public sealed class VRTK_HeadsetControllerAware_UnityEvents : VRTK_UnityEvents<VRTK_HeadsetControllerAware>
	{
		[Serializable]
		[Token(Token = "0x200086C")]
		public sealed class HeadsetControllerAwareEvent : UnityEvent<object, HeadsetControllerAwareEventArgs>
		{
			[Token(Token = "0x60033C1")]
			[Address(RVA = "0x7CD0E0", Offset = "0x7CD0E0", VA = "0x7CD0E0")]
			public HeadsetControllerAwareEvent()
			{
			}
		}

		[Token(Token = "0x40020A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HeadsetControllerAwareEvent OnControllerObscured;

		[Token(Token = "0x40020A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public HeadsetControllerAwareEvent OnControllerUnobscured;

		[Token(Token = "0x40020A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public HeadsetControllerAwareEvent OnControllerGlanceEnter;

		[Token(Token = "0x40020A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public HeadsetControllerAwareEvent OnControllerGlanceExit;

		[Token(Token = "0x600248B")]
		[Address(RVA = "0x7CCAA0", Offset = "0x7CCAA0", VA = "0x7CCAA0", Slot = "4")]
		protected override void AddListeners(VRTK_HeadsetControllerAware component)
		{
		}

		[Token(Token = "0x600248C")]
		[Address(RVA = "0x7CCBF0", Offset = "0x7CCBF0", VA = "0x7CCBF0", Slot = "5")]
		protected override void RemoveListeners(VRTK_HeadsetControllerAware component)
		{
		}

		[Token(Token = "0x600248D")]
		[Address(RVA = "0x7CCD40", Offset = "0x7CCD40", VA = "0x7CCD40")]
		private void ControllerObscured(object o, HeadsetControllerAwareEventArgs e)
		{
		}

		[Token(Token = "0x600248E")]
		[Address(RVA = "0x7CCDFC", Offset = "0x7CCDFC", VA = "0x7CCDFC")]
		private void ControllerUnobscured(object o, HeadsetControllerAwareEventArgs e)
		{
		}

		[Token(Token = "0x600248F")]
		[Address(RVA = "0x7CCEB8", Offset = "0x7CCEB8", VA = "0x7CCEB8")]
		private void ControllerGlanceEnter(object o, HeadsetControllerAwareEventArgs e)
		{
		}

		[Token(Token = "0x6002490")]
		[Address(RVA = "0x7CCF74", Offset = "0x7CCF74", VA = "0x7CCF74")]
		private void ControllerGlanceExit(object o, HeadsetControllerAwareEventArgs e)
		{
		}

		[Token(Token = "0x6002491")]
		[Address(RVA = "0x7CD030", Offset = "0x7CD030", VA = "0x7CD030")]
		public VRTK_HeadsetControllerAware_UnityEvents()
		{
		}
	}
	[Token(Token = "0x200048D")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x6431A8", Offset = "0x6431A8")]
	public sealed class VRTK_HeadsetFade_UnityEvents : VRTK_UnityEvents<VRTK_HeadsetFade>
	{
		[Serializable]
		[Token(Token = "0x200086D")]
		public sealed class HeadsetFadeEvent : UnityEvent<object, HeadsetFadeEventArgs>
		{
			[Token(Token = "0x60033C2")]
			[Address(RVA = "0x7CD6A0", Offset = "0x7CD6A0", VA = "0x7CD6A0")]
			public HeadsetFadeEvent()
			{
			}
		}

		[Token(Token = "0x40020A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HeadsetFadeEvent OnHeadsetFadeStart;

		[Token(Token = "0x40020A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public HeadsetFadeEvent OnHeadsetFadeComplete;

		[Token(Token = "0x40020A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public HeadsetFadeEvent OnHeadsetUnfadeStart;

		[Token(Token = "0x40020A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public HeadsetFadeEvent OnHeadsetUnfadeComplete;

		[Token(Token = "0x6002492")]
		[Address(RVA = "0x7CD130", Offset = "0x7CD130", VA = "0x7CD130", Slot = "4")]
		protected override void AddListeners(VRTK_HeadsetFade component)
		{
		}

		[Token(Token = "0x6002493")]
		[Address(RVA = "0x7CD280", Offset = "0x7CD280", VA = "0x7CD280", Slot = "5")]
		protected override void RemoveListeners(VRTK_HeadsetFade component)
		{
		}

		[Token(Token = "0x6002494")]
		[Address(RVA = "0x7CD3D0", Offset = "0x7CD3D0", VA = "0x7CD3D0")]
		private void HeadsetFadeStart(object o, HeadsetFadeEventArgs e)
		{
		}

		[Token(Token = "0x6002495")]
		[Address(RVA = "0x7CD458", Offset = "0x7CD458", VA = "0x7CD458")]
		private void HeadsetFadeComplete(object o, HeadsetFadeEventArgs e)
		{
		}

		[Token(Token = "0x6002496")]
		[Address(RVA = "0x7CD4E0", Offset = "0x7CD4E0", VA = "0x7CD4E0")]
		private void HeadsetUnfadeStart(object o, HeadsetFadeEventArgs e)
		{
		}

		[Token(Token = "0x6002497")]
		[Address(RVA = "0x7CD568", Offset = "0x7CD568", VA = "0x7CD568")]
		private void HeadsetUnfadeComplete(object o, HeadsetFadeEventArgs e)
		{
		}

		[Token(Token = "0x6002498")]
		[Address(RVA = "0x7CD5F0", Offset = "0x7CD5F0", VA = "0x7CD5F0")]
		public VRTK_HeadsetFade_UnityEvents()
		{
		}
	}
	[Token(Token = "0x200048E")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x6431E0", Offset = "0x6431E0")]
	public sealed class VRTK_InteractableObject_UnityEvents : VRTK_UnityEvents<VRTK_InteractableObject>
	{
		[Serializable]
		[Token(Token = "0x200086E")]
		public sealed class InteractableObjectEvent : UnityEvent<object, InteractableObjectEventArgs>
		{
			[Token(Token = "0x60033C3")]
			[Address(RVA = "0x7D1C58", Offset = "0x7D1C58", VA = "0x7D1C58")]
			public InteractableObjectEvent()
			{
			}
		}

		[Token(Token = "0x40020AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public InteractableObjectEvent OnObjectEnable;

		[Token(Token = "0x40020AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public InteractableObjectEvent OnObjectDisable;

		[Token(Token = "0x40020AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public InteractableObjectEvent OnNearTouch;

		[Token(Token = "0x40020AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public InteractableObjectEvent OnNearUntouch;

		[Token(Token = "0x40020AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public InteractableObjectEvent OnTouch;

		[Token(Token = "0x40020AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public InteractableObjectEvent OnUntouch;

		[Token(Token = "0x40020B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public InteractableObjectEvent OnGrab;

		[Token(Token = "0x40020B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public InteractableObjectEvent OnUngrab;

		[Token(Token = "0x40020B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public InteractableObjectEvent OnUse;

		[Token(Token = "0x40020B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public InteractableObjectEvent OnUnuse;

		[Token(Token = "0x40020B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public InteractableObjectEvent OnEnterSnapDropZone;

		[Token(Token = "0x40020B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public InteractableObjectEvent OnExitSnapDropZone;

		[Token(Token = "0x40020B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public InteractableObjectEvent OnSnapToDropZone;

		[Token(Token = "0x40020B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public InteractableObjectEvent OnUnsnapFromDropZone;

		[Token(Token = "0x6002499")]
		[Address(RVA = "0x7D0CB0", Offset = "0x7D0CB0", VA = "0x7D0CB0", Slot = "4")]
		protected override void AddListeners(VRTK_InteractableObject component)
		{
		}

		[Token(Token = "0x600249A")]
		[Address(RVA = "0x7D1080", Offset = "0x7D1080", VA = "0x7D1080", Slot = "5")]
		protected override void RemoveListeners(VRTK_InteractableObject component)
		{
		}

		[Token(Token = "0x600249B")]
		[Address(RVA = "0x7D1450", Offset = "0x7D1450", VA = "0x7D1450")]
		private void Enable(object o, InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x600249C")]
		[Address(RVA = "0x7D14C8", Offset = "0x7D14C8", VA = "0x7D14C8")]
		private void Disable(object o, InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x600249D")]
		[Address(RVA = "0x7D1540", Offset = "0x7D1540", VA = "0x7D1540")]
		private void NearTouch(object o, InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x600249E")]
		[Address(RVA = "0x7D15B8", Offset = "0x7D15B8", VA = "0x7D15B8")]
		private void NearUnTouch(object o, InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x600249F")]
		[Address(RVA = "0x7D1630", Offset = "0x7D1630", VA = "0x7D1630")]
		private void Touch(object o, InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x60024A0")]
		[Address(RVA = "0x7D16A8", Offset = "0x7D16A8", VA = "0x7D16A8")]
		private void UnTouch(object o, InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x60024A1")]
		[Address(RVA = "0x7D1720", Offset = "0x7D1720", VA = "0x7D1720")]
		private void Grab(object o, InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x60024A2")]
		[Address(RVA = "0x7D1798", Offset = "0x7D1798", VA = "0x7D1798")]
		private void UnGrab(object o, InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x60024A3")]
		[Address(RVA = "0x7D1810", Offset = "0x7D1810", VA = "0x7D1810")]
		private void Use(object o, InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x60024A4")]
		[Address(RVA = "0x7D1888", Offset = "0x7D1888", VA = "0x7D1888")]
		private void Unuse(object o, InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x60024A5")]
		[Address(RVA = "0x7D1900", Offset = "0x7D1900", VA = "0x7D1900")]
		private void EnterSnapDropZone(object o, InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x60024A6")]
		[Address(RVA = "0x7D1978", Offset = "0x7D1978", VA = "0x7D1978")]
		private void ExitSnapDropZone(object o, InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x60024A7")]
		[Address(RVA = "0x7D19F0", Offset = "0x7D19F0", VA = "0x7D19F0")]
		private void SnapToDropZone(object o, InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x60024A8")]
		[Address(RVA = "0x7D1A68", Offset = "0x7D1A68", VA = "0x7D1A68")]
		private void UnsnapFromDropZone(object o, InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x60024A9")]
		[Address(RVA = "0x7D1AE0", Offset = "0x7D1AE0", VA = "0x7D1AE0")]
		public VRTK_InteractableObject_UnityEvents()
		{
		}
	}
	[Token(Token = "0x200048F")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x643218", Offset = "0x643218")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x643218", Offset = "0x643218")]
	public sealed class VRTK_InteractControllerAppearance_UnityEvents : VRTK_UnityEvents<VRTK_InteractControllerAppearance>
	{
		[Serializable]
		[Token(Token = "0x200086F")]
		public sealed class InteractControllerAppearanceEvent : UnityEvent<object, InteractControllerAppearanceEventArgs>
		{
			[Token(Token = "0x60033C4")]
			[Address(RVA = "0x7CE0D0", Offset = "0x7CE0D0", VA = "0x7CE0D0")]
			public InteractControllerAppearanceEvent()
			{
			}
		}

		[Token(Token = "0x40020B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public InteractControllerAppearanceEvent OnControllerHidden;

		[Token(Token = "0x40020B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public InteractControllerAppearanceEvent OnControllerVisible;

		[Token(Token = "0x40020BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public InteractControllerAppearanceEvent OnHiddenOnTouch;

		[Token(Token = "0x40020BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public InteractControllerAppearanceEvent OnVisibleOnTouch;

		[Token(Token = "0x40020BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public InteractControllerAppearanceEvent OnHiddenOnGrab;

		[Token(Token = "0x40020BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public InteractControllerAppearanceEvent OnVisibleOnGrab;

		[Token(Token = "0x40020BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public InteractControllerAppearanceEvent OnHiddenOnUse;

		[Token(Token = "0x40020BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public InteractControllerAppearanceEvent OnVisibleOnUse;

		[Token(Token = "0x60024AA")]
		[Address(RVA = "0x7CD6F0", Offset = "0x7CD6F0", VA = "0x7CD6F0", Slot = "4")]
		protected override void AddListeners(VRTK_InteractControllerAppearance component)
		{
		}

		[Token(Token = "0x60024AB")]
		[Address(RVA = "0x7CD940", Offset = "0x7CD940", VA = "0x7CD940", Slot = "5")]
		protected override void RemoveListeners(VRTK_InteractControllerAppearance component)
		{
		}

		[Token(Token = "0x60024AC")]
		[Address(RVA = "0x7CDB90", Offset = "0x7CDB90", VA = "0x7CDB90")]
		private void ControllerHidden(object o, InteractControllerAppearanceEventArgs e)
		{
		}

		[Token(Token = "0x60024AD")]
		[Address(RVA = "0x7CDC18", Offset = "0x7CDC18", VA = "0x7CDC18")]
		private void ControllerVisible(object o, InteractControllerAppearanceEventArgs e)
		{
		}

		[Token(Token = "0x60024AE")]
		[Address(RVA = "0x7CDCA0", Offset = "0x7CDCA0", VA = "0x7CDCA0")]
		private void HiddenOnTouch(object o, InteractControllerAppearanceEventArgs e)
		{
		}

		[Token(Token = "0x60024AF")]
		[Address(RVA = "0x7CDD28", Offset = "0x7CDD28", VA = "0x7CDD28")]
		private void VisibleOnTouch(object o, InteractControllerAppearanceEventArgs e)
		{
		}

		[Token(Token = "0x60024B0")]
		[Address(RVA = "0x7CDDB0", Offset = "0x7CDDB0", VA = "0x7CDDB0")]
		private void HiddenOnGrab(object o, InteractControllerAppearanceEventArgs e)
		{
		}

		[Token(Token = "0x60024B1")]
		[Address(RVA = "0x7CDE38", Offset = "0x7CDE38", VA = "0x7CDE38")]
		private void VisibleOnGrab(object o, InteractControllerAppearanceEventArgs e)
		{
		}

		[Token(Token = "0x60024B2")]
		[Address(RVA = "0x7CDEC0", Offset = "0x7CDEC0", VA = "0x7CDEC0")]
		private void HiddenOnUse(object o, InteractControllerAppearanceEventArgs e)
		{
		}

		[Token(Token = "0x60024B3")]
		[Address(RVA = "0x7CDF48", Offset = "0x7CDF48", VA = "0x7CDF48")]
		private void VisibleOnUse(object o, InteractControllerAppearanceEventArgs e)
		{
		}

		[Token(Token = "0x60024B4")]
		[Address(RVA = "0x7CDFD0", Offset = "0x7CDFD0", VA = "0x7CDFD0")]
		public VRTK_InteractControllerAppearance_UnityEvents()
		{
		}
	}
	[Token(Token = "0x2000490")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x643278", Offset = "0x643278")]
	public sealed class VRTK_InteractGrab_UnityEvents : VRTK_UnityEvents<VRTK_InteractGrab>
	{
		[Serializable]
		[Token(Token = "0x2000870")]
		public sealed class ObjectInteractEvent : UnityEvent<object, ObjectInteractEventArgs>
		{
			[Token(Token = "0x60033C5")]
			[Address(RVA = "0x7CE928", Offset = "0x7CE928", VA = "0x7CE928")]
			public ObjectInteractEvent()
			{
			}
		}

		[Token(Token = "0x40020C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ObjectInteractEvent OnControllerStartGrabInteractableObject;

		[Token(Token = "0x40020C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ObjectInteractEvent OnControllerGrabInteractableObject;

		[Token(Token = "0x40020C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public ObjectInteractEvent OnControllerStartUngrabInteractableObject;

		[Token(Token = "0x40020C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public ObjectInteractEvent OnControllerUngrabInteractableObject;

		[Token(Token = "0x40020C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public VRTK_ControllerEvents_UnityEvents.ControllerInteractionEvent OnGrabButtonPressed;

		[Token(Token = "0x40020C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public VRTK_ControllerEvents_UnityEvents.ControllerInteractionEvent OnGrabButtonReleased;

		[Token(Token = "0x60024B5")]
		[Address(RVA = "0x7CE120", Offset = "0x7CE120", VA = "0x7CE120", Slot = "4")]
		protected override void AddListeners(VRTK_InteractGrab component)
		{
		}

		[Token(Token = "0x60024B6")]
		[Address(RVA = "0x7CE2F8", Offset = "0x7CE2F8", VA = "0x7CE2F8", Slot = "5")]
		protected override void RemoveListeners(VRTK_InteractGrab component)
		{
		}

		[Token(Token = "0x60024B7")]
		[Address(RVA = "0x7CE4D0", Offset = "0x7CE4D0", VA = "0x7CE4D0")]
		private void ControllerStartGrabInteractableObject(object o, ObjectInteractEventArgs e)
		{
		}

		[Token(Token = "0x60024B8")]
		[Address(RVA = "0x7CE558", Offset = "0x7CE558", VA = "0x7CE558")]
		private void ControllerGrabInteractableObject(object o, ObjectInteractEventArgs e)
		{
		}

		[Token(Token = "0x60024B9")]
		[Address(RVA = "0x7CE5E0", Offset = "0x7CE5E0", VA = "0x7CE5E0")]
		private void ControllerStartUngrabInteractableObject(object o, ObjectInteractEventArgs e)
		{
		}

		[Token(Token = "0x60024BA")]
		[Address(RVA = "0x7CE668", Offset = "0x7CE668", VA = "0x7CE668")]
		private void ControllerUngrabInteractableObject(object o, ObjectInteractEventArgs e)
		{
		}

		[Token(Token = "0x60024BB")]
		[Address(RVA = "0x7CE6F0", Offset = "0x7CE6F0", VA = "0x7CE6F0")]
		private void GrabButtonPressed(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60024BC")]
		[Address(RVA = "0x7CE79C", Offset = "0x7CE79C", VA = "0x7CE79C")]
		private void GrabButtonReleased(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60024BD")]
		[Address(RVA = "0x7CE848", Offset = "0x7CE848", VA = "0x7CE848")]
		public VRTK_InteractGrab_UnityEvents()
		{
		}
	}
	[Token(Token = "0x2000491")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x6432B0", Offset = "0x6432B0")]
	public sealed class VRTK_InteractHaptics_UnityEvents : VRTK_UnityEvents<VRTK_InteractHaptics>
	{
		[Serializable]
		[Token(Token = "0x2000871")]
		public sealed class InteractHapticsEvent : UnityEvent<object, InteractHapticsEventArgs>
		{
			[Token(Token = "0x60033C6")]
			[Address(RVA = "0x7CEEA8", Offset = "0x7CEEA8", VA = "0x7CEEA8")]
			public InteractHapticsEvent()
			{
			}
		}

		[Token(Token = "0x40020C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public InteractHapticsEvent OnInteractHapticsNearTouched;

		[Token(Token = "0x40020C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public InteractHapticsEvent OnInteractHapticsTouched;

		[Token(Token = "0x40020C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public InteractHapticsEvent OnInteractHapticsGrabbed;

		[Token(Token = "0x40020C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public InteractHapticsEvent OnInteractHapticsUsed;

		[Token(Token = "0x60024BE")]
		[Address(RVA = "0x7CE978", Offset = "0x7CE978", VA = "0x7CE978", Slot = "4")]
		protected override void AddListeners(VRTK_InteractHaptics component)
		{
		}

		[Token(Token = "0x60024BF")]
		[Address(RVA = "0x7CEAC8", Offset = "0x7CEAC8", VA = "0x7CEAC8", Slot = "5")]
		protected override void RemoveListeners(VRTK_InteractHaptics component)
		{
		}

		[Token(Token = "0x60024C0")]
		[Address(RVA = "0x7CEC18", Offset = "0x7CEC18", VA = "0x7CEC18")]
		private void InteractHapticsNearTouched(object o, InteractHapticsEventArgs e)
		{
		}

		[Token(Token = "0x60024C1")]
		[Address(RVA = "0x7CEC90", Offset = "0x7CEC90", VA = "0x7CEC90")]
		private void InteractHapticsTouched(object o, InteractHapticsEventArgs e)
		{
		}

		[Token(Token = "0x60024C2")]
		[Address(RVA = "0x7CED08", Offset = "0x7CED08", VA = "0x7CED08")]
		private void InteractHapticsGrabbed(object o, InteractHapticsEventArgs e)
		{
		}

		[Token(Token = "0x60024C3")]
		[Address(RVA = "0x7CED80", Offset = "0x7CED80", VA = "0x7CED80")]
		private void InteractHapticsUsed(object o, InteractHapticsEventArgs e)
		{
		}

		[Token(Token = "0x60024C4")]
		[Address(RVA = "0x7CEDF8", Offset = "0x7CEDF8", VA = "0x7CEDF8")]
		public VRTK_InteractHaptics_UnityEvents()
		{
		}
	}
	[Token(Token = "0x2000492")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x6432E8", Offset = "0x6432E8")]
	public sealed class VRTK_InteractNearTouch_UnityEvents : VRTK_UnityEvents<VRTK_InteractNearTouch>
	{
		[Serializable]
		[Token(Token = "0x2000872")]
		public sealed class ObjectInteractEvent : UnityEvent<object, ObjectInteractEventArgs>
		{
			[Token(Token = "0x60033C7")]
			[Address(RVA = "0x7CF230", Offset = "0x7CF230", VA = "0x7CF230")]
			public ObjectInteractEvent()
			{
			}
		}

		[Token(Token = "0x40020CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ObjectInteractEvent OnControllerNearTouchInteractableObject;

		[Token(Token = "0x40020CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ObjectInteractEvent OnControllerNearUntouchInteractableObject;

		[Token(Token = "0x60024C5")]
		[Address(RVA = "0x7CEEF8", Offset = "0x7CEEF8", VA = "0x7CEEF8", Slot = "4")]
		protected override void AddListeners(VRTK_InteractNearTouch component)
		{
		}

		[Token(Token = "0x60024C6")]
		[Address(RVA = "0x7CEFC8", Offset = "0x7CEFC8", VA = "0x7CEFC8", Slot = "5")]
		protected override void RemoveListeners(VRTK_InteractNearTouch component)
		{
		}

		[Token(Token = "0x60024C7")]
		[Address(RVA = "0x7CF098", Offset = "0x7CF098", VA = "0x7CF098")]
		private void ControllerNearTouchInteractableObject(object o, ObjectInteractEventArgs e)
		{
		}

		[Token(Token = "0x60024C8")]
		[Address(RVA = "0x7CF120", Offset = "0x7CF120", VA = "0x7CF120")]
		private void ControllerNearUntouchInteractableObject(object o, ObjectInteractEventArgs e)
		{
		}

		[Token(Token = "0x60024C9")]
		[Address(RVA = "0x7CF1A8", Offset = "0x7CF1A8", VA = "0x7CF1A8")]
		public VRTK_InteractNearTouch_UnityEvents()
		{
		}
	}
	[Token(Token = "0x2000493")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x643320", Offset = "0x643320")]
	public sealed class VRTK_InteractObjectAppearance_UnityEvents : VRTK_UnityEvents<VRTK_InteractObjectAppearance>
	{
		[Serializable]
		[Token(Token = "0x2000873")]
		public sealed class InteractObjectAppearanceEvent : UnityEvent<object, InteractObjectAppearanceEventArgs>
		{
			[Token(Token = "0x60033C8")]
			[Address(RVA = "0x7CF840", Offset = "0x7CF840", VA = "0x7CF840")]
			public InteractObjectAppearanceEvent()
			{
			}
		}

		[Token(Token = "0x40020CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public InteractObjectAppearanceEvent OnGameObjectEnabled;

		[Token(Token = "0x40020CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public InteractObjectAppearanceEvent OnGameObjectDisabled;

		[Token(Token = "0x40020CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public InteractObjectAppearanceEvent OnRenderersEnabled;

		[Token(Token = "0x40020CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public InteractObjectAppearanceEvent OnRenderersDisabled;

		[Token(Token = "0x60024CA")]
		[Address(RVA = "0x7CF280", Offset = "0x7CF280", VA = "0x7CF280", Slot = "4")]
		protected override void AddListeners(VRTK_InteractObjectAppearance component)
		{
		}

		[Token(Token = "0x60024CB")]
		[Address(RVA = "0x7CF3D0", Offset = "0x7CF3D0", VA = "0x7CF3D0", Slot = "5")]
		protected override void RemoveListeners(VRTK_InteractObjectAppearance component)
		{
		}

		[Token(Token = "0x60024CC")]
		[Address(RVA = "0x7CF520", Offset = "0x7CF520", VA = "0x7CF520")]
		private void GameObjectEnabled(object o, InteractObjectAppearanceEventArgs e)
		{
		}

		[Token(Token = "0x60024CD")]
		[Address(RVA = "0x7CF5BC", Offset = "0x7CF5BC", VA = "0x7CF5BC")]
		private void GameObjectDisabled(object o, InteractObjectAppearanceEventArgs e)
		{
		}

		[Token(Token = "0x60024CE")]
		[Address(RVA = "0x7CF658", Offset = "0x7CF658", VA = "0x7CF658")]
		private void RenderersEnabled(object o, InteractObjectAppearanceEventArgs e)
		{
		}

		[Token(Token = "0x60024CF")]
		[Address(RVA = "0x7CF6F4", Offset = "0x7CF6F4", VA = "0x7CF6F4")]
		private void RenderersDisabled(object o, InteractObjectAppearanceEventArgs e)
		{
		}

		[Token(Token = "0x60024D0")]
		[Address(RVA = "0x7CF790", Offset = "0x7CF790", VA = "0x7CF790")]
		public VRTK_InteractObjectAppearance_UnityEvents()
		{
		}
	}
	[Token(Token = "0x2000494")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x643358", Offset = "0x643358")]
	public sealed class VRTK_InteractObjectHighlighter_UnityEvents : VRTK_UnityEvents<VRTK_InteractObjectHighlighter>
	{
		[Serializable]
		[Token(Token = "0x2000874")]
		public sealed class InteractObjectHighlighterEvent : UnityEvent<object, InteractObjectHighlighterEventArgs>
		{
			[Token(Token = "0x60033C9")]
			[Address(RVA = "0x7CFC10", Offset = "0x7CFC10", VA = "0x7CFC10")]
			public InteractObjectHighlighterEvent()
			{
			}
		}

		[Token(Token = "0x40020D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public InteractObjectHighlighterEvent OnInteractObjectHighlighterHighlighted;

		[Token(Token = "0x40020D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public InteractObjectHighlighterEvent OnInteractObjectHighlighterUnhighlighted;

		[Token(Token = "0x60024D1")]
		[Address(RVA = "0x7CF890", Offset = "0x7CF890", VA = "0x7CF890", Slot = "4")]
		protected override void AddListeners(VRTK_InteractObjectHighlighter component)
		{
		}

		[Token(Token = "0x60024D2")]
		[Address(RVA = "0x7CF960", Offset = "0x7CF960", VA = "0x7CF960", Slot = "5")]
		protected override void RemoveListeners(VRTK_InteractObjectHighlighter component)
		{
		}

		[Token(Token = "0x60024D3")]
		[Address(RVA = "0x7CFA30", Offset = "0x7CFA30", VA = "0x7CFA30")]
		private void InteractObjectHighlighterHighlighted(object o, InteractObjectHighlighterEventArgs e)
		{
		}

		[Token(Token = "0x60024D4")]
		[Address(RVA = "0x7CFADC", Offset = "0x7CFADC", VA = "0x7CFADC")]
		private void InteractObjectHighlighterUnhighlighted(object o, InteractObjectHighlighterEventArgs e)
		{
		}

		[Token(Token = "0x60024D5")]
		[Address(RVA = "0x7CFB88", Offset = "0x7CFB88", VA = "0x7CFB88")]
		public VRTK_InteractObjectHighlighter_UnityEvents()
		{
		}
	}
	[Token(Token = "0x2000495")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x643390", Offset = "0x643390")]
	public sealed class VRTK_InteractTouch_UnityEvents : VRTK_UnityEvents<VRTK_InteractTouch>
	{
		[Serializable]
		[Token(Token = "0x2000875")]
		public sealed class ObjectInteractEvent : UnityEvent<object, ObjectInteractEventArgs>
		{
			[Token(Token = "0x60033CA")]
			[Address(RVA = "0x7D0408", Offset = "0x7D0408", VA = "0x7D0408")]
			public ObjectInteractEvent()
			{
			}
		}

		[Token(Token = "0x40020D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ObjectInteractEvent OnControllerStartTouchInteractableObject;

		[Token(Token = "0x40020D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ObjectInteractEvent OnControllerTouchInteractableObject;

		[Token(Token = "0x40020D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public ObjectInteractEvent OnControllerStartUntouchInteractableObject;

		[Token(Token = "0x40020D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public ObjectInteractEvent OnControllerUntouchInteractableObject;

		[Token(Token = "0x40020D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public ObjectInteractEvent OnControllerRigidbodyActivated;

		[Token(Token = "0x40020D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public ObjectInteractEvent OnControllerRigidbodyDeactivated;

		[Token(Token = "0x60024D6")]
		[Address(RVA = "0x7CFC60", Offset = "0x7CFC60", VA = "0x7CFC60", Slot = "4")]
		protected override void AddListeners(VRTK_InteractTouch component)
		{
		}

		[Token(Token = "0x60024D7")]
		[Address(RVA = "0x7CFE30", Offset = "0x7CFE30", VA = "0x7CFE30", Slot = "5")]
		protected override void RemoveListeners(VRTK_InteractTouch component)
		{
		}

		[Token(Token = "0x60024D8")]
		[Address(RVA = "0x7D0000", Offset = "0x7D0000", VA = "0x7D0000")]
		private void ControllerStartTouchInteractableObject(object o, ObjectInteractEventArgs e)
		{
		}

		[Token(Token = "0x60024D9")]
		[Address(RVA = "0x7D0088", Offset = "0x7D0088", VA = "0x7D0088")]
		private void ControllerTouchInteractableObject(object o, ObjectInteractEventArgs e)
		{
		}

		[Token(Token = "0x60024DA")]
		[Address(RVA = "0x7D0110", Offset = "0x7D0110", VA = "0x7D0110")]
		private void ControllerStartUntouchInteractableObject(object o, ObjectInteractEventArgs e)
		{
		}

		[Token(Token = "0x60024DB")]
		[Address(RVA = "0x7D0198", Offset = "0x7D0198", VA = "0x7D0198")]
		private void ControllerUntouchInteractableObject(object o, ObjectInteractEventArgs e)
		{
		}

		[Token(Token = "0x60024DC")]
		[Address(RVA = "0x7D0220", Offset = "0x7D0220", VA = "0x7D0220")]
		private void ControllerRigidbodyActivated(object o, ObjectInteractEventArgs e)
		{
		}

		[Token(Token = "0x60024DD")]
		[Address(RVA = "0x7D02A8", Offset = "0x7D02A8", VA = "0x7D02A8")]
		private void ControllerRigidbodyDeactivated(object o, ObjectInteractEventArgs e)
		{
		}

		[Token(Token = "0x60024DE")]
		[Address(RVA = "0x7D0330", Offset = "0x7D0330", VA = "0x7D0330")]
		public VRTK_InteractTouch_UnityEvents()
		{
		}
	}
	[Token(Token = "0x2000496")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x6433C8", Offset = "0x6433C8")]
	public sealed class VRTK_InteractUse_UnityEvents : VRTK_UnityEvents<VRTK_InteractUse>
	{
		[Serializable]
		[Token(Token = "0x2000876")]
		public sealed class ObjectInteractEvent : UnityEvent<object, ObjectInteractEventArgs>
		{
			[Token(Token = "0x60033CB")]
			[Address(RVA = "0x7D0C60", Offset = "0x7D0C60", VA = "0x7D0C60")]
			public ObjectInteractEvent()
			{
			}
		}

		[Token(Token = "0x40020D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ObjectInteractEvent OnControllerStartUseInteractableObject;

		[Token(Token = "0x40020D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ObjectInteractEvent OnControllerUseInteractableObject;

		[Token(Token = "0x40020DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public ObjectInteractEvent OnControllerStartUnuseInteractableObject;

		[Token(Token = "0x40020DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public ObjectInteractEvent OnControllerUnuseInteractableObject;

		[Token(Token = "0x40020DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public VRTK_ControllerEvents_UnityEvents.ControllerInteractionEvent OnUseButtonPressed;

		[Token(Token = "0x40020DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public VRTK_ControllerEvents_UnityEvents.ControllerInteractionEvent OnUseButtonReleased;

		[Token(Token = "0x60024DF")]
		[Address(RVA = "0x7D0458", Offset = "0x7D0458", VA = "0x7D0458", Slot = "4")]
		protected override void AddListeners(VRTK_InteractUse component)
		{
		}

		[Token(Token = "0x60024E0")]
		[Address(RVA = "0x7D0630", Offset = "0x7D0630", VA = "0x7D0630", Slot = "5")]
		protected override void RemoveListeners(VRTK_InteractUse component)
		{
		}

		[Token(Token = "0x60024E1")]
		[Address(RVA = "0x7D0808", Offset = "0x7D0808", VA = "0x7D0808")]
		private void ControllerStartUseInteractableObject(object o, ObjectInteractEventArgs e)
		{
		}

		[Token(Token = "0x60024E2")]
		[Address(RVA = "0x7D0890", Offset = "0x7D0890", VA = "0x7D0890")]
		private void ControllerUseInteractableObject(object o, ObjectInteractEventArgs e)
		{
		}

		[Token(Token = "0x60024E3")]
		[Address(RVA = "0x7D0918", Offset = "0x7D0918", VA = "0x7D0918")]
		private void ControllerStartUnuseInteractableObject(object o, ObjectInteractEventArgs e)
		{
		}

		[Token(Token = "0x60024E4")]
		[Address(RVA = "0x7D09A0", Offset = "0x7D09A0", VA = "0x7D09A0")]
		private void ControllerUnuseInteractableObject(object o, ObjectInteractEventArgs e)
		{
		}

		[Token(Token = "0x60024E5")]
		[Address(RVA = "0x7D0A28", Offset = "0x7D0A28", VA = "0x7D0A28")]
		private void UseButtonPressed(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60024E6")]
		[Address(RVA = "0x7D0AD4", Offset = "0x7D0AD4", VA = "0x7D0AD4")]
		private void UseButtonReleased(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60024E7")]
		[Address(RVA = "0x7D0B80", Offset = "0x7D0B80", VA = "0x7D0B80")]
		public VRTK_InteractUse_UnityEvents()
		{
		}
	}
	[Token(Token = "0x2000497")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x643400", Offset = "0x643400")]
	public sealed class VRTK_MoveTransformGrabAttach_UnityEvents : VRTK_UnityEvents<VRTK_MoveTransformGrabAttach>
	{
		[Serializable]
		[Token(Token = "0x2000877")]
		public sealed class MoveTransformGrabAttachEvent : UnityEvent<object, MoveTransformGrabAttachEventArgs>
		{
			[Token(Token = "0x60033CC")]
			[Address(RVA = "0x7D2EB8", Offset = "0x7D2EB8", VA = "0x7D2EB8")]
			public MoveTransformGrabAttachEvent()
			{
			}
		}

		[Token(Token = "0x40020DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MoveTransformGrabAttachEvent OnTransformPositionChanged;

		[Token(Token = "0x40020DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public MoveTransformGrabAttachEvent OnXAxisMinLimitReached;

		[Token(Token = "0x40020E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public MoveTransformGrabAttachEvent OnXAxisMinLimitExited;

		[Token(Token = "0x40020E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public MoveTransformGrabAttachEvent OnXAxisMaxLimitReached;

		[Token(Token = "0x40020E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public MoveTransformGrabAttachEvent OnXAxisMaxLimitExited;

		[Token(Token = "0x40020E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public MoveTransformGrabAttachEvent OnYAxisMinLimitReached;

		[Token(Token = "0x40020E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public MoveTransformGrabAttachEvent OnYAxisMinLimitExited;

		[Token(Token = "0x40020E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public MoveTransformGrabAttachEvent OnYAxisMaxLimitReached;

		[Token(Token = "0x40020E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public MoveTransformGrabAttachEvent OnYAxisMaxLimitExited;

		[Token(Token = "0x40020E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public MoveTransformGrabAttachEvent OnZAxisMinLimitReached;

		[Token(Token = "0x40020E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public MoveTransformGrabAttachEvent OnZAxisMinLimitExited;

		[Token(Token = "0x40020E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public MoveTransformGrabAttachEvent OnZAxisMaxLimitReached;

		[Token(Token = "0x40020EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public MoveTransformGrabAttachEvent OnZAxisMaxLimitExited;

		[Token(Token = "0x60024E8")]
		[Address(RVA = "0x7D1CA8", Offset = "0x7D1CA8", VA = "0x7D1CA8", Slot = "4")]
		protected override void AddListeners(VRTK_MoveTransformGrabAttach component)
		{
		}

		[Token(Token = "0x60024E9")]
		[Address(RVA = "0x7D2038", Offset = "0x7D2038", VA = "0x7D2038", Slot = "5")]
		protected override void RemoveListeners(VRTK_MoveTransformGrabAttach component)
		{
		}

		[Token(Token = "0x60024EA")]
		[Address(RVA = "0x7D23C8", Offset = "0x7D23C8", VA = "0x7D23C8")]
		private void TransformPositionChanged(object o, MoveTransformGrabAttachEventArgs e)
		{
		}

		[Token(Token = "0x60024EB")]
		[Address(RVA = "0x7D2484", Offset = "0x7D2484", VA = "0x7D2484")]
		private void XAxisMinLimitReached(object o, MoveTransformGrabAttachEventArgs e)
		{
		}

		[Token(Token = "0x60024EC")]
		[Address(RVA = "0x7D2540", Offset = "0x7D2540", VA = "0x7D2540")]
		private void XAxisMaxLimitReached(object o, MoveTransformGrabAttachEventArgs e)
		{
		}

		[Token(Token = "0x60024ED")]
		[Address(RVA = "0x7D25FC", Offset = "0x7D25FC", VA = "0x7D25FC")]
		private void YAxisMinLimitReached(object o, MoveTransformGrabAttachEventArgs e)
		{
		}

		[Token(Token = "0x60024EE")]
		[Address(RVA = "0x7D26B8", Offset = "0x7D26B8", VA = "0x7D26B8")]
		private void YAxisMaxLimitReached(object o, MoveTransformGrabAttachEventArgs e)
		{
		}

		[Token(Token = "0x60024EF")]
		[Address(RVA = "0x7D2774", Offset = "0x7D2774", VA = "0x7D2774")]
		private void ZAxisMinLimitReached(object o, MoveTransformGrabAttachEventArgs e)
		{
		}

		[Token(Token = "0x60024F0")]
		[Address(RVA = "0x7D2830", Offset = "0x7D2830", VA = "0x7D2830")]
		private void ZAxisMaxLimitReached(object o, MoveTransformGrabAttachEventArgs e)
		{
		}

		[Token(Token = "0x60024F1")]
		[Address(RVA = "0x7D28EC", Offset = "0x7D28EC", VA = "0x7D28EC")]
		private void XAxisMinLimitExited(object o, MoveTransformGrabAttachEventArgs e)
		{
		}

		[Token(Token = "0x60024F2")]
		[Address(RVA = "0x7D29A8", Offset = "0x7D29A8", VA = "0x7D29A8")]
		private void XAxisMaxLimitExited(object o, MoveTransformGrabAttachEventArgs e)
		{
		}

		[Token(Token = "0x60024F3")]
		[Address(RVA = "0x7D2A64", Offset = "0x7D2A64", VA = "0x7D2A64")]
		private void YAxisMinLimitExited(object o, MoveTransformGrabAttachEventArgs e)
		{
		}

		[Token(Token = "0x60024F4")]
		[Address(RVA = "0x7D2B20", Offset = "0x7D2B20", VA = "0x7D2B20")]
		private void YAxisMaxLimitExited(object o, MoveTransformGrabAttachEventArgs e)
		{
		}

		[Token(Token = "0x60024F5")]
		[Address(RVA = "0x7D2BDC", Offset = "0x7D2BDC", VA = "0x7D2BDC")]
		private void ZAxisMinLimitExited(object o, MoveTransformGrabAttachEventArgs e)
		{
		}

		[Token(Token = "0x60024F6")]
		[Address(RVA = "0x7D2C98", Offset = "0x7D2C98", VA = "0x7D2C98")]
		private void ZAxisMaxLimitExited(object o, MoveTransformGrabAttachEventArgs e)
		{
		}

		[Token(Token = "0x60024F7")]
		[Address(RVA = "0x7D2D54", Offset = "0x7D2D54", VA = "0x7D2D54")]
		public VRTK_MoveTransformGrabAttach_UnityEvents()
		{
		}
	}
	[Token(Token = "0x2000498")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x643438", Offset = "0x643438")]
	public sealed class VRTK_ObjectAutoGrab_UnityEvents : VRTK_UnityEvents<VRTK_ObjectAutoGrab>
	{
		[Serializable]
		[Token(Token = "0x2000878")]
		public sealed class ObjectAutoGrabEvent : UnityEvent<object>
		{
			[Token(Token = "0x60033CD")]
			[Address(RVA = "0x7D3104", Offset = "0x7D3104", VA = "0x7D3104")]
			public ObjectAutoGrabEvent()
			{
			}
		}

		[Token(Token = "0x40020EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ObjectAutoGrabEvent OnObjectAutoGrabCompleted;

		[Token(Token = "0x60024F8")]
		[Address(RVA = "0x7D2F08", Offset = "0x7D2F08", VA = "0x7D2F08", Slot = "4")]
		protected override void AddListeners(VRTK_ObjectAutoGrab component)
		{
		}

		[Token(Token = "0x60024F9")]
		[Address(RVA = "0x7D2F98", Offset = "0x7D2F98", VA = "0x7D2F98", Slot = "5")]
		protected override void RemoveListeners(VRTK_ObjectAutoGrab component)
		{
		}

		[Token(Token = "0x60024FA")]
		[Address(RVA = "0x7D3028", Offset = "0x7D3028", VA = "0x7D3028")]
		private void ObjectAutoGrabCompleted(object o)
		{
		}

		[Token(Token = "0x60024FB")]
		[Address(RVA = "0x7D3098", Offset = "0x7D3098", VA = "0x7D3098")]
		public VRTK_ObjectAutoGrab_UnityEvents()
		{
		}
	}
	[Token(Token = "0x2000499")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x643470", Offset = "0x643470")]
	public sealed class VRTK_ObjectControl_UnityEvents : VRTK_UnityEvents<VRTK_ObjectControl>
	{
		[Serializable]
		[Token(Token = "0x2000879")]
		public sealed class ObjectControlEvent : UnityEvent<object, ObjectControlEventArgs>
		{
			[Token(Token = "0x60033CE")]
			[Address(RVA = "0x7D34D4", Offset = "0x7D34D4", VA = "0x7D34D4")]
			public ObjectControlEvent()
			{
			}
		}

		[Token(Token = "0x40020EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ObjectControlEvent OnXAxisChanged;

		[Token(Token = "0x40020ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ObjectControlEvent OnYAxisChanged;

		[Token(Token = "0x60024FC")]
		[Address(RVA = "0x7D3154", Offset = "0x7D3154", VA = "0x7D3154", Slot = "4")]
		protected override void AddListeners(VRTK_ObjectControl component)
		{
		}

		[Token(Token = "0x60024FD")]
		[Address(RVA = "0x7D3224", Offset = "0x7D3224", VA = "0x7D3224", Slot = "5")]
		protected override void RemoveListeners(VRTK_ObjectControl component)
		{
		}

		[Token(Token = "0x60024FE")]
		[Address(RVA = "0x7D32F4", Offset = "0x7D32F4", VA = "0x7D32F4")]
		private void XAxisChanged(object o, ObjectControlEventArgs e)
		{
		}

		[Token(Token = "0x60024FF")]
		[Address(RVA = "0x7D33A0", Offset = "0x7D33A0", VA = "0x7D33A0")]
		private void YAxisChanged(object o, ObjectControlEventArgs e)
		{
		}

		[Token(Token = "0x6002500")]
		[Address(RVA = "0x7D344C", Offset = "0x7D344C", VA = "0x7D344C")]
		public VRTK_ObjectControl_UnityEvents()
		{
		}
	}
	[Token(Token = "0x200049A")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x6434A8", Offset = "0x6434A8")]
	public sealed class VRTK_ObjectTooltip_UnityEvents : VRTK_UnityEvents<VRTK_ObjectTooltip>
	{
		[Serializable]
		[Token(Token = "0x200087A")]
		public sealed class ObjectTooltipEvent : UnityEvent<object, ObjectTooltipEventArgs>
		{
			[Token(Token = "0x60033CF")]
			[Address(RVA = "0x7D383C", Offset = "0x7D383C", VA = "0x7D383C")]
			public ObjectTooltipEvent()
			{
			}
		}

		[Token(Token = "0x40020EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ObjectTooltipEvent OnObjectTooltipReset;

		[Token(Token = "0x40020EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ObjectTooltipEvent OnObjectTooltipTextUpdated;

		[Token(Token = "0x6002501")]
		[Address(RVA = "0x7D3524", Offset = "0x7D3524", VA = "0x7D3524", Slot = "4")]
		protected override void AddListeners(VRTK_ObjectTooltip component)
		{
		}

		[Token(Token = "0x6002502")]
		[Address(RVA = "0x7D35F4", Offset = "0x7D35F4", VA = "0x7D35F4", Slot = "5")]
		protected override void RemoveListeners(VRTK_ObjectTooltip component)
		{
		}

		[Token(Token = "0x6002503")]
		[Address(RVA = "0x7D36C4", Offset = "0x7D36C4", VA = "0x7D36C4")]
		private void ObjectTooltipReset(object o, ObjectTooltipEventArgs e)
		{
		}

		[Token(Token = "0x6002504")]
		[Address(RVA = "0x7D373C", Offset = "0x7D373C", VA = "0x7D373C")]
		private void ObjectTooltipTextUpdated(object o, ObjectTooltipEventArgs e)
		{
		}

		[Token(Token = "0x6002505")]
		[Address(RVA = "0x7D37B4", Offset = "0x7D37B4", VA = "0x7D37B4")]
		public VRTK_ObjectTooltip_UnityEvents()
		{
		}
	}
	[Token(Token = "0x200049B")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x6434E0", Offset = "0x6434E0")]
	public sealed class VRTK_PlayAreaCursor_UnityEvents : VRTK_UnityEvents<VRTK_PlayAreaCursor>
	{
		[Serializable]
		[Token(Token = "0x200087B")]
		public sealed class PlayAreaCursorEvent : UnityEvent<object, PlayAreaCursorEventArgs>
		{
			[Token(Token = "0x60033D0")]
			[Address(RVA = "0x7D3BA4", Offset = "0x7D3BA4", VA = "0x7D3BA4")]
			public PlayAreaCursorEvent()
			{
			}
		}

		[Token(Token = "0x40020F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PlayAreaCursorEvent OnPlayAreaCursorStartCollision;

		[Token(Token = "0x40020F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public PlayAreaCursorEvent OnPlayAreaCursorEndCollision;

		[Token(Token = "0x6002506")]
		[Address(RVA = "0x7D388C", Offset = "0x7D388C", VA = "0x7D388C", Slot = "4")]
		protected override void AddListeners(VRTK_PlayAreaCursor component)
		{
		}

		[Token(Token = "0x6002507")]
		[Address(RVA = "0x7D395C", Offset = "0x7D395C", VA = "0x7D395C", Slot = "5")]
		protected override void RemoveListeners(VRTK_PlayAreaCursor component)
		{
		}

		[Token(Token = "0x6002508")]
		[Address(RVA = "0x7D3A2C", Offset = "0x7D3A2C", VA = "0x7D3A2C")]
		private void PlayAreaCursorStartCollision(object o, PlayAreaCursorEventArgs e)
		{
		}

		[Token(Token = "0x6002509")]
		[Address(RVA = "0x7D3AA4", Offset = "0x7D3AA4", VA = "0x7D3AA4")]
		private void PlayAreaCursorEndCollision(object o, PlayAreaCursorEventArgs e)
		{
		}

		[Token(Token = "0x600250A")]
		[Address(RVA = "0x7D3B1C", Offset = "0x7D3B1C", VA = "0x7D3B1C")]
		public VRTK_PlayAreaCursor_UnityEvents()
		{
		}
	}
	[Token(Token = "0x200049C")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x643518", Offset = "0x643518")]
	public sealed class VRTK_PlayerClimb_UnityEvents : VRTK_UnityEvents<VRTK_PlayerClimb>
	{
		[Serializable]
		[Token(Token = "0x200087C")]
		public sealed class PlayerClimbEvent : UnityEvent<object, PlayerClimbEventArgs>
		{
			[Token(Token = "0x60033D1")]
			[Address(RVA = "0x7D3F2C", Offset = "0x7D3F2C", VA = "0x7D3F2C")]
			public PlayerClimbEvent()
			{
			}
		}

		[Token(Token = "0x40020F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PlayerClimbEvent OnPlayerClimbStarted;

		[Token(Token = "0x40020F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public PlayerClimbEvent OnPlayerClimbEnded;

		[Token(Token = "0x600250B")]
		[Address(RVA = "0x7D3BF4", Offset = "0x7D3BF4", VA = "0x7D3BF4", Slot = "4")]
		protected override void AddListeners(VRTK_PlayerClimb component)
		{
		}

		[Token(Token = "0x600250C")]
		[Address(RVA = "0x7D3CC4", Offset = "0x7D3CC4", VA = "0x7D3CC4", Slot = "5")]
		protected override void RemoveListeners(VRTK_PlayerClimb component)
		{
		}

		[Token(Token = "0x600250D")]
		[Address(RVA = "0x7D3D94", Offset = "0x7D3D94", VA = "0x7D3D94")]
		private void PlayerClimbStarted(object o, PlayerClimbEventArgs e)
		{
		}

		[Token(Token = "0x600250E")]
		[Address(RVA = "0x7D3E1C", Offset = "0x7D3E1C", VA = "0x7D3E1C")]
		private void PlayerClimbEnded(object o, PlayerClimbEventArgs e)
		{
		}

		[Token(Token = "0x600250F")]
		[Address(RVA = "0x7D3EA4", Offset = "0x7D3EA4", VA = "0x7D3EA4")]
		public VRTK_PlayerClimb_UnityEvents()
		{
		}
	}
	[Token(Token = "0x200049D")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x643550", Offset = "0x643550")]
	public sealed class VRTK_Pointer_UnityEvents : VRTK_UnityEvents<VRTK_Pointer>
	{
		[Token(Token = "0x40020F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public VRTK_ControllerEvents_UnityEvents.ControllerInteractionEvent OnActivationButtonPressed;

		[Token(Token = "0x40020F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public VRTK_ControllerEvents_UnityEvents.ControllerInteractionEvent OnActivationButtonReleased;

		[Token(Token = "0x40020F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public VRTK_ControllerEvents_UnityEvents.ControllerInteractionEvent OnSelectionButtonPressed;

		[Token(Token = "0x40020F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public VRTK_ControllerEvents_UnityEvents.ControllerInteractionEvent OnSelectionButtonReleased;

		[Token(Token = "0x40020F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public VRTK_DestinationMarker_UnityEvents.DestinationMarkerEvent OnPointerStateValid;

		[Token(Token = "0x40020F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public VRTK_DestinationMarker_UnityEvents.DestinationMarkerEvent OnPointerStateInvalid;

		[Token(Token = "0x6002510")]
		[Address(RVA = "0x7D41C8", Offset = "0x7D41C8", VA = "0x7D41C8", Slot = "4")]
		protected override void AddListeners(VRTK_Pointer component)
		{
		}

		[Token(Token = "0x6002511")]
		[Address(RVA = "0x7D43A0", Offset = "0x7D43A0", VA = "0x7D43A0", Slot = "5")]
		protected override void RemoveListeners(VRTK_Pointer component)
		{
		}

		[Token(Token = "0x6002512")]
		[Address(RVA = "0x7D4578", Offset = "0x7D4578", VA = "0x7D4578")]
		private void ActivationButtonPressed(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6002513")]
		[Address(RVA = "0x7D4624", Offset = "0x7D4624", VA = "0x7D4624")]
		private void ActivationButtonReleased(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6002514")]
		[Address(RVA = "0x7D46D0", Offset = "0x7D46D0", VA = "0x7D46D0")]
		private void SelectionButtonPressed(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6002515")]
		[Address(RVA = "0x7D477C", Offset = "0x7D477C", VA = "0x7D477C")]
		private void SelectionButtonReleased(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6002516")]
		[Address(RVA = "0x7D4828", Offset = "0x7D4828", VA = "0x7D4828")]
		private void PointerStateValid(object o, DestinationMarkerEventArgs e)
		{
		}

		[Token(Token = "0x6002517")]
		[Address(RVA = "0x7D48D8", Offset = "0x7D48D8", VA = "0x7D48D8")]
		private void PointerStateInvalid(object o, DestinationMarkerEventArgs e)
		{
		}

		[Token(Token = "0x6002518")]
		[Address(RVA = "0x7D4988", Offset = "0x7D4988", VA = "0x7D4988")]
		public VRTK_Pointer_UnityEvents()
		{
		}
	}
	[Token(Token = "0x200049E")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x643588", Offset = "0x643588")]
	public sealed class VRTK_PointerDirectionIndicator_UnityEvents : VRTK_UnityEvents<VRTK_PointerDirectionIndicator>
	{
		[Serializable]
		[Token(Token = "0x200087D")]
		public sealed class PointerDirectionIndicatorEvent : UnityEvent<object>
		{
			[Token(Token = "0x60033D2")]
			[Address(RVA = "0x7D4178", Offset = "0x7D4178", VA = "0x7D4178")]
			public PointerDirectionIndicatorEvent()
			{
			}
		}

		[Token(Token = "0x40020FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PointerDirectionIndicatorEvent OnPointerDirectionIndicatorPositionSet;

		[Token(Token = "0x6002519")]
		[Address(RVA = "0x7D3F7C", Offset = "0x7D3F7C", VA = "0x7D3F7C", Slot = "4")]
		protected override void AddListeners(VRTK_PointerDirectionIndicator component)
		{
		}

		[Token(Token = "0x600251A")]
		[Address(RVA = "0x7D400C", Offset = "0x7D400C", VA = "0x7D400C", Slot = "5")]
		protected override void RemoveListeners(VRTK_PointerDirectionIndicator component)
		{
		}

		[Token(Token = "0x600251B")]
		[Address(RVA = "0x7D409C", Offset = "0x7D409C", VA = "0x7D409C")]
		private void PointerDirectionIndicatorPositionSet(object o)
		{
		}

		[Token(Token = "0x600251C")]
		[Address(RVA = "0x7D410C", Offset = "0x7D410C", VA = "0x7D410C")]
		public VRTK_PointerDirectionIndicator_UnityEvents()
		{
		}
	}
	[Token(Token = "0x200049F")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x6435C0", Offset = "0x6435C0")]
	public sealed class VRTK_PositionRewind_UnityEvents : VRTK_UnityEvents<VRTK_PositionRewind>
	{
		[Serializable]
		[Token(Token = "0x200087E")]
		public sealed class PositionRewindEvent : UnityEvent<object, PositionRewindEventArgs>
		{
			[Token(Token = "0x60033D3")]
			[Address(RVA = "0x7D4C98", Offset = "0x7D4C98", VA = "0x7D4C98")]
			public PositionRewindEvent()
			{
			}
		}

		[Token(Token = "0x40020FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PositionRewindEvent OnPositionRewindToSafe;

		[Token(Token = "0x600251D")]
		[Address(RVA = "0x7D4A68", Offset = "0x7D4A68", VA = "0x7D4A68", Slot = "4")]
		protected override void AddListeners(VRTK_PositionRewind component)
		{
		}

		[Token(Token = "0x600251E")]
		[Address(RVA = "0x7D4AF8", Offset = "0x7D4AF8", VA = "0x7D4AF8", Slot = "5")]
		protected override void RemoveListeners(VRTK_PositionRewind component)
		{
		}

		[Token(Token = "0x600251F")]
		[Address(RVA = "0x7D4B88", Offset = "0x7D4B88", VA = "0x7D4B88")]
		private void PositionRewindToSafe(object o, PositionRewindEventArgs e)
		{
		}

		[Token(Token = "0x6002520")]
		[Address(RVA = "0x7D4C2C", Offset = "0x7D4C2C", VA = "0x7D4C2C")]
		public VRTK_PositionRewind_UnityEvents()
		{
		}
	}
	[Token(Token = "0x20004A0")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x6435F8", Offset = "0x6435F8")]
	public sealed class VRTK_RotateTransformGrabAttach_UnityEvents : VRTK_UnityEvents<VRTK_RotateTransformGrabAttach>
	{
		[Serializable]
		[Token(Token = "0x200087F")]
		public sealed class RotateTransformGrabAttachEvent : UnityEvent<object, RotateTransformGrabAttachEventArgs>
		{
			[Token(Token = "0x60033D4")]
			[Address(RVA = "0x7D53D8", Offset = "0x7D53D8", VA = "0x7D53D8")]
			public RotateTransformGrabAttachEvent()
			{
			}
		}

		[Token(Token = "0x40020FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RotateTransformGrabAttachEvent OnAngleChanged;

		[Token(Token = "0x40020FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public RotateTransformGrabAttachEvent OnMinAngleReached;

		[Token(Token = "0x40020FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public RotateTransformGrabAttachEvent OnMinAngleExited;

		[Token(Token = "0x40020FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public RotateTransformGrabAttachEvent OnMaxAngleReached;

		[Token(Token = "0x4002100")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public RotateTransformGrabAttachEvent OnMaxAngleExited;

		[Token(Token = "0x6002521")]
		[Address(RVA = "0x7D4CE8", Offset = "0x7D4CE8", VA = "0x7D4CE8", Slot = "4")]
		protected override void AddListeners(VRTK_RotateTransformGrabAttach component)
		{
		}

		[Token(Token = "0x6002522")]
		[Address(RVA = "0x7D4E78", Offset = "0x7D4E78", VA = "0x7D4E78", Slot = "5")]
		protected override void RemoveListeners(VRTK_RotateTransformGrabAttach component)
		{
		}

		[Token(Token = "0x6002523")]
		[Address(RVA = "0x7D5008", Offset = "0x7D5008", VA = "0x7D5008")]
		private void AngleChanged(object o, RotateTransformGrabAttachEventArgs e)
		{
		}

		[Token(Token = "0x6002524")]
		[Address(RVA = "0x7D50A4", Offset = "0x7D50A4", VA = "0x7D50A4")]
		private void MinAngleReached(object o, RotateTransformGrabAttachEventArgs e)
		{
		}

		[Token(Token = "0x6002525")]
		[Address(RVA = "0x7D5140", Offset = "0x7D5140", VA = "0x7D5140")]
		private void MinAngleExited(object o, RotateTransformGrabAttachEventArgs e)
		{
		}

		[Token(Token = "0x6002526")]
		[Address(RVA = "0x7D51DC", Offset = "0x7D51DC", VA = "0x7D51DC")]
		private void MaxAngleReached(object o, RotateTransformGrabAttachEventArgs e)
		{
		}

		[Token(Token = "0x6002527")]
		[Address(RVA = "0x7D5278", Offset = "0x7D5278", VA = "0x7D5278")]
		private void MaxAngleExited(object o, RotateTransformGrabAttachEventArgs e)
		{
		}

		[Token(Token = "0x6002528")]
		[Address(RVA = "0x7D5314", Offset = "0x7D5314", VA = "0x7D5314")]
		public VRTK_RotateTransformGrabAttach_UnityEvents()
		{
		}
	}
	[Token(Token = "0x20004A1")]
	public sealed class VRTK_SDKManager_UnityEvents : VRTK_UnityEvents<VRTK_SDKManager>
	{
		[Serializable]
		[Token(Token = "0x2000880")]
		public sealed class LoadedSetupChangeEvent : UnityEvent<VRTK_SDKManager, VRTK_SDKManager.LoadedSetupChangeEventArgs>
		{
			[Token(Token = "0x60033D5")]
			[Address(RVA = "0x7D5658", Offset = "0x7D5658", VA = "0x7D5658")]
			public LoadedSetupChangeEvent()
			{
			}
		}

		[Token(Token = "0x4002101")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LoadedSetupChangeEvent OnLoadedSetupChanged;

		[Token(Token = "0x6002529")]
		[Address(RVA = "0x7D5428", Offset = "0x7D5428", VA = "0x7D5428", Slot = "4")]
		protected override void AddListeners(VRTK_SDKManager component)
		{
		}

		[Token(Token = "0x600252A")]
		[Address(RVA = "0x7D54B8", Offset = "0x7D54B8", VA = "0x7D54B8", Slot = "5")]
		protected override void RemoveListeners(VRTK_SDKManager component)
		{
		}

		[Token(Token = "0x600252B")]
		[Address(RVA = "0x7D5548", Offset = "0x7D5548", VA = "0x7D5548")]
		private void LoadedSetupChanged(VRTK_SDKManager sender, VRTK_SDKManager.LoadedSetupChangeEventArgs e)
		{
		}

		[Token(Token = "0x600252C")]
		[Address(RVA = "0x7D55EC", Offset = "0x7D55EC", VA = "0x7D55EC")]
		public VRTK_SDKManager_UnityEvents()
		{
		}
	}
	[Token(Token = "0x20004A2")]
	public sealed class VRTK_SDKSetup_UnityEvents : VRTK_UnityEvents<VRTK_SDKSetup>
	{
		[Serializable]
		[Token(Token = "0x2000881")]
		public sealed class LoadEvent : UnityEvent<VRTK_SDKManager, VRTK_SDKSetup>
		{
			[Token(Token = "0x60033D6")]
			[Address(RVA = "0x7D59C0", Offset = "0x7D59C0", VA = "0x7D59C0")]
			public LoadEvent()
			{
			}
		}

		[Token(Token = "0x4002102")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LoadEvent OnLoaded;

		[Token(Token = "0x4002103")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public LoadEvent OnUnloaded;

		[Token(Token = "0x600252D")]
		[Address(RVA = "0x7D56A8", Offset = "0x7D56A8", VA = "0x7D56A8", Slot = "4")]
		protected override void AddListeners(VRTK_SDKSetup component)
		{
		}

		[Token(Token = "0x600252E")]
		[Address(RVA = "0x7D5778", Offset = "0x7D5778", VA = "0x7D5778", Slot = "5")]
		protected override void RemoveListeners(VRTK_SDKSetup component)
		{
		}

		[Token(Token = "0x600252F")]
		[Address(RVA = "0x7D5848", Offset = "0x7D5848", VA = "0x7D5848")]
		private void Loaded(VRTK_SDKManager sender, VRTK_SDKSetup setup)
		{
		}

		[Token(Token = "0x6002530")]
		[Address(RVA = "0x7D58C0", Offset = "0x7D58C0", VA = "0x7D58C0")]
		private void Unloaded(VRTK_SDKManager sender, VRTK_SDKSetup setup)
		{
		}

		[Token(Token = "0x6002531")]
		[Address(RVA = "0x7D5938", Offset = "0x7D5938", VA = "0x7D5938")]
		public VRTK_SDKSetup_UnityEvents()
		{
		}
	}
	[Token(Token = "0x20004A3")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x643630", Offset = "0x643630")]
	public sealed class VRTK_SlingshotJump_UnityEvents : VRTK_UnityEvents<VRTK_SlingshotJump>
	{
		[Serializable]
		[Token(Token = "0x2000882")]
		public sealed class SlingshotJumpEvent : UnityEvent<object>
		{
			[Token(Token = "0x60033D7")]
			[Address(RVA = "0x7D5C0C", Offset = "0x7D5C0C", VA = "0x7D5C0C")]
			public SlingshotJumpEvent()
			{
			}
		}

		[Token(Token = "0x4002104")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SlingshotJumpEvent OnSlingshotJumped;

		[Token(Token = "0x6002532")]
		[Address(RVA = "0x7D5A10", Offset = "0x7D5A10", VA = "0x7D5A10", Slot = "4")]
		protected override void AddListeners(VRTK_SlingshotJump component)
		{
		}

		[Token(Token = "0x6002533")]
		[Address(RVA = "0x7D5AA0", Offset = "0x7D5AA0", VA = "0x7D5AA0", Slot = "5")]
		protected override void RemoveListeners(VRTK_SlingshotJump component)
		{
		}

		[Token(Token = "0x6002534")]
		[Address(RVA = "0x7D5B30", Offset = "0x7D5B30", VA = "0x7D5B30")]
		private void SlingshotJumped(object o)
		{
		}

		[Token(Token = "0x6002535")]
		[Address(RVA = "0x7D5BA0", Offset = "0x7D5BA0", VA = "0x7D5BA0")]
		public VRTK_SlingshotJump_UnityEvents()
		{
		}
	}
	[Token(Token = "0x20004A4")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x643668", Offset = "0x643668")]
	public sealed class VRTK_SnapDropZone_UnityEvents : VRTK_UnityEvents<VRTK_SnapDropZone>
	{
		[Serializable]
		[Token(Token = "0x2000883")]
		public sealed class SnapDropZoneEvent : UnityEvent<object, SnapDropZoneEventArgs>
		{
			[Token(Token = "0x60033D8")]
			[Address(RVA = "0x7D618C", Offset = "0x7D618C", VA = "0x7D618C")]
			public SnapDropZoneEvent()
			{
			}
		}

		[Token(Token = "0x4002105")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SnapDropZoneEvent OnObjectEnteredSnapDropZone;

		[Token(Token = "0x4002106")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SnapDropZoneEvent OnObjectExitedSnapDropZone;

		[Token(Token = "0x4002107")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public SnapDropZoneEvent OnObjectSnappedToDropZone;

		[Token(Token = "0x4002108")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public SnapDropZoneEvent OnObjectUnsnappedFromDropZone;

		[Token(Token = "0x6002536")]
		[Address(RVA = "0x7D5C5C", Offset = "0x7D5C5C", VA = "0x7D5C5C", Slot = "4")]
		protected override void AddListeners(VRTK_SnapDropZone component)
		{
		}

		[Token(Token = "0x6002537")]
		[Address(RVA = "0x7D5DAC", Offset = "0x7D5DAC", VA = "0x7D5DAC", Slot = "5")]
		protected override void RemoveListeners(VRTK_SnapDropZone component)
		{
		}

		[Token(Token = "0x6002538")]
		[Address(RVA = "0x7D5EFC", Offset = "0x7D5EFC", VA = "0x7D5EFC")]
		private void ObjectEnteredSnapDropZone(object o, SnapDropZoneEventArgs e)
		{
		}

		[Token(Token = "0x6002539")]
		[Address(RVA = "0x7D5F74", Offset = "0x7D5F74", VA = "0x7D5F74")]
		private void ObjectExitedSnapDropZone(object o, SnapDropZoneEventArgs e)
		{
		}

		[Token(Token = "0x600253A")]
		[Address(RVA = "0x7D5FEC", Offset = "0x7D5FEC", VA = "0x7D5FEC")]
		private void ObjectSnappedToDropZone(object o, SnapDropZoneEventArgs e)
		{
		}

		[Token(Token = "0x600253B")]
		[Address(RVA = "0x7D6064", Offset = "0x7D6064", VA = "0x7D6064")]
		private void ObjectUnsnappedFromDropZone(object o, SnapDropZoneEventArgs e)
		{
		}

		[Token(Token = "0x600253C")]
		[Address(RVA = "0x7D60DC", Offset = "0x7D60DC", VA = "0x7D60DC")]
		public VRTK_SnapDropZone_UnityEvents()
		{
		}
	}
	[Token(Token = "0x20004A5")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x6436A0", Offset = "0x6436A0")]
	public sealed class VRTK_UIDraggableItem_UnityEvents : VRTK_UnityEvents<VRTK_UIDraggableItem>
	{
		[Serializable]
		[Token(Token = "0x2000884")]
		public sealed class UIDraggableItemEvent : UnityEvent<object, UIDraggableItemEventArgs>
		{
			[Token(Token = "0x60033D9")]
			[Address(RVA = "0x7D64F4", Offset = "0x7D64F4", VA = "0x7D64F4")]
			public UIDraggableItemEvent()
			{
			}
		}

		[Token(Token = "0x4002109")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UIDraggableItemEvent OnDraggableItemDropped;

		[Token(Token = "0x400210A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UIDraggableItemEvent OnDraggableItemReset;

		[Token(Token = "0x600253D")]
		[Address(RVA = "0x7D61DC", Offset = "0x7D61DC", VA = "0x7D61DC", Slot = "4")]
		protected override void AddListeners(VRTK_UIDraggableItem component)
		{
		}

		[Token(Token = "0x600253E")]
		[Address(RVA = "0x7D62AC", Offset = "0x7D62AC", VA = "0x7D62AC", Slot = "5")]
		protected override void RemoveListeners(VRTK_UIDraggableItem component)
		{
		}

		[Token(Token = "0x600253F")]
		[Address(RVA = "0x7D637C", Offset = "0x7D637C", VA = "0x7D637C")]
		private void DraggableItemDropped(object o, UIDraggableItemEventArgs e)
		{
		}

		[Token(Token = "0x6002540")]
		[Address(RVA = "0x7D63F4", Offset = "0x7D63F4", VA = "0x7D63F4")]
		private void DraggableItemReset(object o, UIDraggableItemEventArgs e)
		{
		}

		[Token(Token = "0x6002541")]
		[Address(RVA = "0x7D646C", Offset = "0x7D646C", VA = "0x7D646C")]
		public VRTK_UIDraggableItem_UnityEvents()
		{
		}
	}
	[Token(Token = "0x20004A6")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x6436D8", Offset = "0x6436D8")]
	public sealed class VRTK_UIPointer_UnityEvents : VRTK_UnityEvents<VRTK_UIPointer>
	{
		[Serializable]
		[Token(Token = "0x2000885")]
		public sealed class UIPointerEvent : UnityEvent<object, UIPointerEventArgs>
		{
			[Token(Token = "0x60033DA")]
			[Address(RVA = "0x7D71B0", Offset = "0x7D71B0", VA = "0x7D71B0")]
			public UIPointerEvent()
			{
			}
		}

		[Token(Token = "0x400210B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UIPointerEvent OnUIPointerElementEnter;

		[Token(Token = "0x400210C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UIPointerEvent OnUIPointerElementExit;

		[Token(Token = "0x400210D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public UIPointerEvent OnUIPointerElementClick;

		[Token(Token = "0x400210E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public UIPointerEvent OnUIPointerElementDragStart;

		[Token(Token = "0x400210F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public UIPointerEvent OnUIPointerElementDragEnd;

		[Token(Token = "0x4002110")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public VRTK_ControllerEvents_UnityEvents.ControllerInteractionEvent OnActivationButtonPressed;

		[Token(Token = "0x4002111")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public VRTK_ControllerEvents_UnityEvents.ControllerInteractionEvent OnActivationButtonReleased;

		[Token(Token = "0x4002112")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public VRTK_ControllerEvents_UnityEvents.ControllerInteractionEvent OnSelectionButtonPressed;

		[Token(Token = "0x4002113")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public VRTK_ControllerEvents_UnityEvents.ControllerInteractionEvent OnSelectionButtonReleased;

		[Token(Token = "0x6002542")]
		[Address(RVA = "0x7D6544", Offset = "0x7D6544", VA = "0x7D6544", Slot = "4")]
		protected override void AddListeners(VRTK_UIPointer component)
		{
		}

		[Token(Token = "0x6002543")]
		[Address(RVA = "0x7D67DC", Offset = "0x7D67DC", VA = "0x7D67DC", Slot = "5")]
		protected override void RemoveListeners(VRTK_UIPointer component)
		{
		}

		[Token(Token = "0x6002544")]
		[Address(RVA = "0x7D6A74", Offset = "0x7D6A74", VA = "0x7D6A74")]
		private void UIPointerElementEnter(object o, UIPointerEventArgs e)
		{
		}

		[Token(Token = "0x6002545")]
		[Address(RVA = "0x7D6B24", Offset = "0x7D6B24", VA = "0x7D6B24")]
		private void UIPointerElementExit(object o, UIPointerEventArgs e)
		{
		}

		[Token(Token = "0x6002546")]
		[Address(RVA = "0x7D6BD4", Offset = "0x7D6BD4", VA = "0x7D6BD4")]
		private void UIPointerElementClick(object o, UIPointerEventArgs e)
		{
		}

		[Token(Token = "0x6002547")]
		[Address(RVA = "0x7D6C84", Offset = "0x7D6C84", VA = "0x7D6C84")]
		private void UIPointerElementDragStart(object o, UIPointerEventArgs e)
		{
		}

		[Token(Token = "0x6002548")]
		[Address(RVA = "0x7D6D34", Offset = "0x7D6D34", VA = "0x7D6D34")]
		private void UIPointerElementDragEnd(object o, UIPointerEventArgs e)
		{
		}

		[Token(Token = "0x6002549")]
		[Address(RVA = "0x7D6DE4", Offset = "0x7D6DE4", VA = "0x7D6DE4")]
		private void ActivationButtonPressed(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x600254A")]
		[Address(RVA = "0x7D6E90", Offset = "0x7D6E90", VA = "0x7D6E90")]
		private void ActivationButtonReleased(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x600254B")]
		[Address(RVA = "0x7D6F3C", Offset = "0x7D6F3C", VA = "0x7D6F3C")]
		private void SelectionButtonPressed(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x600254C")]
		[Address(RVA = "0x7D6FE8", Offset = "0x7D6FE8", VA = "0x7D6FE8")]
		private void SelectionButtonReleased(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x600254D")]
		[Address(RVA = "0x7D7094", Offset = "0x7D7094", VA = "0x7D7094")]
		public VRTK_UIPointer_UnityEvents()
		{
		}
	}
	[Token(Token = "0x20004A7")]
	public abstract class VRTK_UnityEvents<T> : MonoBehaviour where T : Component
	{
		[Token(Token = "0x4002114")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T component;

		[Token(Token = "0x600254E")]
		protected abstract void AddListeners(T component);

		[Token(Token = "0x600254F")]
		protected abstract void RemoveListeners(T component);

		[Token(Token = "0x6002550")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6002551")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x6002552")]
		protected VRTK_UnityEvents()
		{
		}
	}
}
namespace VRTK.SecondaryControllerGrabActions
{
	[Token(Token = "0x20004A8")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x643710", Offset = "0x643710")]
	public class VRTK_AxisScaleGrabAction : VRTK_BaseGrabAction
	{
		[Token(Token = "0x4002115")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6608C4", Offset = "0x6608C4")]
		public float ungrabDistance;

		[Token(Token = "0x4002116")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6608FC", Offset = "0x6608FC")]
		public Vector3State lockAxis;

		[Token(Token = "0x4002117")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x660934", Offset = "0x660934")]
		public bool uniformScaling;

		[Token(Token = "0x4002118")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x66096C", Offset = "0x66096C")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x66096C", Offset = "0x66096C")]
		[ObsoleteInspector]
		public bool lockXAxis;

		[Token(Token = "0x4002119")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x52")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x6609DC", Offset = "0x6609DC")]
		[ObsoleteInspector]
		public bool lockYAxis;

		[Token(Token = "0x400211A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x53")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x660A28", Offset = "0x660A28")]
		[ObsoleteInspector]
		public bool lockZAxis;

		[Token(Token = "0x400211B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		protected Vector3 initialScale;

		[Token(Token = "0x400211C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		protected float initalLength;

		[Token(Token = "0x400211D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		protected float initialScaleFactor;

		[Token(Token = "0x6002553")]
		[Address(RVA = "0xAD39D8", Offset = "0xAD39D8", VA = "0xAD39D8", Slot = "4")]
		public override void Initialise(VRTK_InteractableObject currentGrabbdObject, VRTK_InteractGrab currentPrimaryGrabbingObject, VRTK_InteractGrab currentSecondaryGrabbingObject, Transform primaryGrabPoint, Transform secondaryGrabPoint)
		{
		}

		[Token(Token = "0x6002554")]
		[Address(RVA = "0xAD3C48", Offset = "0xAD3C48", VA = "0xAD3C48", Slot = "8")]
		public override void ProcessUpdate()
		{
		}

		[Token(Token = "0x6002555")]
		[Address(RVA = "0xAD3C5C", Offset = "0xAD3C5C", VA = "0xAD3C5C", Slot = "9")]
		public override void ProcessFixedUpdate()
		{
		}

		[Token(Token = "0x6002556")]
		[Address(RVA = "0xAD3C8C", Offset = "0xAD3C8C", VA = "0xAD3C8C", Slot = "12")]
		protected virtual void ApplyScale(Vector3 newScale)
		{
		}

		[Token(Token = "0x6002557")]
		[Address(RVA = "0xAD3DFC", Offset = "0xAD3DFC", VA = "0xAD3DFC", Slot = "13")]
		protected virtual void NonUniformScale()
		{
		}

		[Token(Token = "0x6002558")]
		[Address(RVA = "0xAD414C", Offset = "0xAD414C", VA = "0xAD414C", Slot = "14")]
		protected virtual void UniformScale()
		{
		}

		[Token(Token = "0x6002559")]
		[Address(RVA = "0xAD42C4", Offset = "0xAD42C4", VA = "0xAD42C4", Slot = "15")]
		protected virtual float CalculateAxisScale(float centerPosition, float initialPosition, float currentPosition)
		{
			return default(float);
		}

		[Token(Token = "0x600255A")]
		[Address(RVA = "0xAD42D8", Offset = "0xAD42D8", VA = "0xAD42D8")]
		public VRTK_AxisScaleGrabAction()
		{
		}
	}
	[Token(Token = "0x20004A9")]
	public abstract class VRTK_BaseGrabAction : MonoBehaviour
	{
		[Token(Token = "0x400211E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected VRTK_InteractableObject grabbedObject;

		[Token(Token = "0x400211F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected VRTK_InteractGrab primaryGrabbingObject;

		[Token(Token = "0x4002120")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected VRTK_InteractGrab secondaryGrabbingObject;

		[Token(Token = "0x4002121")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected Transform primaryInitialGrabPoint;

		[Token(Token = "0x4002122")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected Transform secondaryInitialGrabPoint;

		[Token(Token = "0x4002123")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected bool initialised;

		[Token(Token = "0x4002124")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		protected bool isActionable;

		[Token(Token = "0x4002125")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x42")]
		protected bool isSwappable;

		[Token(Token = "0x600255B")]
		[Address(RVA = "0xAD3C30", Offset = "0xAD3C30", VA = "0xAD3C30", Slot = "4")]
		public virtual void Initialise(VRTK_InteractableObject currentGrabbdObject, VRTK_InteractGrab currentPrimaryGrabbingObject, VRTK_InteractGrab currentSecondaryGrabbingObject, Transform primaryGrabPoint, Transform secondaryGrabPoint)
		{
		}

		[Token(Token = "0x600255C")]
		[Address(RVA = "0xAD4328", Offset = "0xAD4328", VA = "0xAD4328", Slot = "5")]
		public virtual void ResetAction()
		{
		}

		[Token(Token = "0x600255D")]
		[Address(RVA = "0xAD4340", Offset = "0xAD4340", VA = "0xAD4340", Slot = "6")]
		public virtual bool IsActionable()
		{
			return default(bool);
		}

		[Token(Token = "0x600255E")]
		[Address(RVA = "0xAD4348", Offset = "0xAD4348", VA = "0xAD4348", Slot = "7")]
		public virtual bool IsSwappable()
		{
			return default(bool);
		}

		[Token(Token = "0x600255F")]
		[Address(RVA = "0xAD3C58", Offset = "0xAD3C58", VA = "0xAD3C58", Slot = "8")]
		public virtual void ProcessUpdate()
		{
		}

		[Token(Token = "0x6002560")]
		[Address(RVA = "0xAD3C88", Offset = "0xAD3C88", VA = "0xAD3C88", Slot = "9")]
		public virtual void ProcessFixedUpdate()
		{
		}

		[Token(Token = "0x6002561")]
		[Address(RVA = "0xAD4350", Offset = "0xAD4350", VA = "0xAD4350", Slot = "10")]
		public virtual void OnDropAction()
		{
		}

		[Token(Token = "0x6002562")]
		[Address(RVA = "0xAD4354", Offset = "0xAD4354", VA = "0xAD4354", Slot = "11")]
		protected virtual void CheckForceStopDistance(float ungrabDistance)
		{
		}

		[Token(Token = "0x6002563")]
		[Address(RVA = "0xAD4318", Offset = "0xAD4318", VA = "0xAD4318")]
		protected VRTK_BaseGrabAction()
		{
		}
	}
	[Token(Token = "0x20004AA")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x643748", Offset = "0x643748")]
	public class VRTK_ControlDirectionGrabAction : VRTK_BaseGrabAction
	{
		[Token(Token = "0x2000886")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6460E0", Offset = "0x6460E0")]
		private sealed class <RealignOnRelease>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002C28")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002C29")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002C2A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VRTK_ControlDirectionGrabAction <>4__this;

			[Token(Token = "0x4002C2B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <elapsedTime>5__2;

			[Token(Token = "0x17000364")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60033DE")]
				[Address(RVA = "0xAD526C", Offset = "0xAD526C", VA = "0xAD526C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000365")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60033E0")]
				[Address(RVA = "0xAD52DC", Offset = "0xAD52DC", VA = "0xAD52DC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60033DB")]
			[Address(RVA = "0xAD4764", Offset = "0xAD4764", VA = "0xAD4764")]
			[DebuggerHidden]
			public <RealignOnRelease>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x60033DC")]
			[Address(RVA = "0xAD4FC4", Offset = "0xAD4FC4", VA = "0xAD4FC4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60033DD")]
			[Address(RVA = "0xAD4FC8", Offset = "0xAD4FC8", VA = "0xAD4FC8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60033DF")]
			[Address(RVA = "0xAD5274", Offset = "0xAD5274", VA = "0xAD5274", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002126")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x660A74", Offset = "0x660A74")]
		public float ungrabDistance;

		[Token(Token = "0x4002127")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x660AAC", Offset = "0x660AAC")]
		public float releaseSnapSpeed;

		[Token(Token = "0x4002128")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x660AE4", Offset = "0x660AE4")]
		public bool lockZRotation;

		[Token(Token = "0x4002129")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected Vector3 initialPosition;

		[Token(Token = "0x400212A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		protected Quaternion initialRotation;

		[Token(Token = "0x400212B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		protected Quaternion releaseRotation;

		[Token(Token = "0x400212C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		protected Coroutine snappingOnRelease;

		[Token(Token = "0x6002564")]
		[Address(RVA = "0xAD44AC", Offset = "0xAD44AC", VA = "0xAD44AC", Slot = "4")]
		public override void Initialise(VRTK_InteractableObject currentGrabbdObject, VRTK_InteractGrab currentPrimaryGrabbingObject, VRTK_InteractGrab currentSecondaryGrabbingObject, Transform primaryGrabPoint, Transform secondaryGrabPoint)
		{
		}

		[Token(Token = "0x6002565")]
		[Address(RVA = "0xAD4564", Offset = "0xAD4564", VA = "0xAD4564", Slot = "5")]
		public override void ResetAction()
		{
		}

		[Token(Token = "0x6002566")]
		[Address(RVA = "0xAD4684", Offset = "0xAD4684", VA = "0xAD4684", Slot = "10")]
		public override void OnDropAction()
		{
		}

		[Token(Token = "0x6002567")]
		[Address(RVA = "0xAD4690", Offset = "0xAD4690", VA = "0xAD4690", Slot = "8")]
		public override void ProcessUpdate()
		{
		}

		[Token(Token = "0x6002568")]
		[Address(RVA = "0xAD46A0", Offset = "0xAD46A0", VA = "0xAD46A0", Slot = "9")]
		public override void ProcessFixedUpdate()
		{
		}

		[Token(Token = "0x6002569")]
		[Address(RVA = "0xAD46BC", Offset = "0xAD46BC", VA = "0xAD46BC", Slot = "12")]
		protected virtual void StopRealignOnRelease()
		{
		}

		[Token(Token = "0x600256A")]
		[Address(RVA = "0xAD46F0", Offset = "0xAD46F0", VA = "0xAD46F0", Slot = "13")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x66E878", Offset = "0x66E878")]
		protected virtual IEnumerator RealignOnRelease()
		{
			return null;
		}

		[Token(Token = "0x600256B")]
		[Address(RVA = "0xAD4790", Offset = "0xAD4790", VA = "0xAD4790", Slot = "14")]
		protected virtual void AimObject()
		{
		}

		[Token(Token = "0x600256C")]
		[Address(RVA = "0xAD4B04", Offset = "0xAD4B04", VA = "0xAD4B04", Slot = "15")]
		protected virtual void ZLockedAim()
		{
		}

		[Token(Token = "0x600256D")]
		[Address(RVA = "0xAD4FA0", Offset = "0xAD4FA0", VA = "0xAD4FA0")]
		public VRTK_ControlDirectionGrabAction()
		{
		}
	}
	[Token(Token = "0x20004AB")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x643780", Offset = "0x643780")]
	public class VRTK_SwapControllerGrabAction : VRTK_BaseGrabAction
	{
		[Token(Token = "0x600256E")]
		[Address(RVA = "0xAD52E4", Offset = "0xAD52E4", VA = "0xAD52E4", Slot = "12")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x600256F")]
		[Address(RVA = "0xAD52F0", Offset = "0xAD52F0", VA = "0xAD52F0")]
		public VRTK_SwapControllerGrabAction()
		{
		}
	}
}
namespace VRTK.GrabAttachMechanics
{
	[Token(Token = "0x20004AC")]
	public abstract class VRTK_BaseGrabAttach : MonoBehaviour
	{
		[Token(Token = "0x400212D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x660B1C", Offset = "0x660B1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x660B1C", Offset = "0x660B1C")]
		public bool precisionGrab;

		[Token(Token = "0x400212E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x660B8C", Offset = "0x660B8C")]
		public Transform rightSnapHandle;

		[Token(Token = "0x400212F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x660BC4", Offset = "0x660BC4")]
		public Transform leftSnapHandle;

		[Token(Token = "0x4002130")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x660BFC", Offset = "0x660BFC")]
		public bool throwVelocityWithAttachDistance;

		[Token(Token = "0x4002131")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x660C34", Offset = "0x660C34")]
		public float throwMultiplier;

		[Token(Token = "0x4002132")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x660C6C", Offset = "0x660C6C")]
		public float onGrabCollisionDelay;

		[Token(Token = "0x4002133")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		protected bool tracked;

		[Token(Token = "0x4002134")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
		protected bool climbable;

		[Token(Token = "0x4002135")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3E")]
		protected bool kinematic;

		[Token(Token = "0x4002136")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected GameObject grabbedObject;

		[Token(Token = "0x4002137")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected Rigidbody grabbedObjectRigidBody;

		[Token(Token = "0x4002138")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected VRTK_InteractableObject grabbedObjectScript;

		[Token(Token = "0x4002139")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		protected Transform trackPoint;

		[Token(Token = "0x400213A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		protected Transform grabbedSnapHandle;

		[Token(Token = "0x400213B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		protected Transform initialAttachPoint;

		[Token(Token = "0x400213C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		protected Rigidbody controllerAttachPoint;

		[Token(Token = "0x6002570")]
		[Address(RVA = "0x990DC8", Offset = "0x990DC8", VA = "0x990DC8", Slot = "4")]
		public virtual bool IsTracked()
		{
			return default(bool);
		}

		[Token(Token = "0x6002571")]
		[Address(RVA = "0x990DD0", Offset = "0x990DD0", VA = "0x990DD0", Slot = "5")]
		public virtual bool IsClimbable()
		{
			return default(bool);
		}

		[Token(Token = "0x6002572")]
		[Address(RVA = "0x990DD8", Offset = "0x990DD8", VA = "0x990DD8", Slot = "6")]
		public virtual bool IsKinematic()
		{
			return default(bool);
		}

		[Token(Token = "0x6002573")]
		[Address(RVA = "0x990DE0", Offset = "0x990DE0", VA = "0x990DE0", Slot = "7")]
		public virtual bool ValidGrab(Rigidbody checkAttachPoint)
		{
			return default(bool);
		}

		[Token(Token = "0x6002574")]
		[Address(RVA = "0x990DE8", Offset = "0x990DE8", VA = "0x990DE8", Slot = "8")]
		public virtual void SetTrackPoint(Transform givenTrackPoint)
		{
		}

		[Token(Token = "0x6002575")]
		[Address(RVA = "0x990DF0", Offset = "0x990DF0", VA = "0x990DF0", Slot = "9")]
		public virtual void SetInitialAttachPoint(Transform givenInitialAttachPoint)
		{
		}

		[Token(Token = "0x6002576")]
		[Address(RVA = "0x990DF8", Offset = "0x990DF8", VA = "0x990DF8", Slot = "10")]
		public virtual bool StartGrab(GameObject grabbingObject, GameObject givenGrabbedObject, Rigidbody givenControllerAttachPoint)
		{
			return default(bool);
		}

		[Token(Token = "0x6002577")]
		[Address(RVA = "0x990F80", Offset = "0x990F80", VA = "0x990F80", Slot = "11")]
		public virtual void StopGrab(bool applyGrabbingObjectVelocity)
		{
		}

		[Token(Token = "0x6002578")]
		[Address(RVA = "0x990F94", Offset = "0x990F94", VA = "0x990F94", Slot = "12")]
		public virtual Transform CreateTrackPoint(Transform controllerPoint, GameObject currentGrabbedObject, GameObject currentGrabbingObject, ref bool customTrackPoint)
		{
			return null;
		}

		[Token(Token = "0x6002579")]
		[Address(RVA = "0x990FA0", Offset = "0x990FA0", VA = "0x990FA0", Slot = "13")]
		public virtual void ProcessUpdate()
		{
		}

		[Token(Token = "0x600257A")]
		[Address(RVA = "0x990FA4", Offset = "0x990FA4", VA = "0x990FA4", Slot = "14")]
		public virtual void ProcessFixedUpdate()
		{
		}

		[Token(Token = "0x600257B")]
		[Address(RVA = "0x990FA8", Offset = "0x990FA8", VA = "0x990FA8", Slot = "15")]
		public virtual void ResetState()
		{
		}

		[Token(Token = "0x600257C")]
		[Address(RVA = "0x990FB8", Offset = "0x990FB8", VA = "0x990FB8", Slot = "16")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x600257D")]
		protected abstract void Initialise();

		[Token(Token = "0x600257E")]
		[Address(RVA = "0x990FC8", Offset = "0x990FC8", VA = "0x990FC8", Slot = "18")]
		protected virtual Rigidbody ReleaseFromController(bool applyGrabbingObjectVelocity)
		{
			return null;
		}

		[Token(Token = "0x600257F")]
		[Address(RVA = "0x990FD0", Offset = "0x990FD0", VA = "0x990FD0", Slot = "19")]
		protected virtual void ForceReleaseGrab()
		{
		}

		[Token(Token = "0x6002580")]
		[Address(RVA = "0x991124", Offset = "0x991124", VA = "0x991124", Slot = "20")]
		protected virtual void ReleaseObject(bool applyGrabbingObjectVelocity)
		{
		}

		[Token(Token = "0x6002581")]
		[Address(RVA = "0x9911EC", Offset = "0x9911EC", VA = "0x9911EC", Slot = "21")]
		protected virtual void ThrowReleasedObject(Rigidbody objectRigidbody)
		{
		}

		[Token(Token = "0x6002582")]
		[Address(RVA = "0x991964", Offset = "0x991964", VA = "0x991964", Slot = "22")]
		protected virtual Transform GetSnapHandle(GameObject grabbingObject)
		{
			return null;
		}

		[Token(Token = "0x6002583")]
		[Address(RVA = "0x991B00", Offset = "0x991B00", VA = "0x991B00", Slot = "23")]
		protected virtual void ProcessSDKTransformModify(VRTK_ControllerReference controllerReference)
		{
		}

		[Token(Token = "0x6002584")]
		[Address(RVA = "0x991C64", Offset = "0x991C64", VA = "0x991C64")]
		protected VRTK_BaseGrabAttach()
		{
		}
	}
	[Token(Token = "0x20004AD")]
	public abstract class VRTK_BaseJointGrabAttach : VRTK_BaseGrabAttach
	{
		[Token(Token = "0x400213D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x660CA4", Offset = "0x660CA4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x660CA4", Offset = "0x660CA4")]
		public bool destroyImmediatelyOnThrow;

		[Token(Token = "0x400213E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		protected Joint givenJoint;

		[Token(Token = "0x400213F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		protected Joint controllerAttachJoint;

		[Token(Token = "0x6002585")]
		[Address(RVA = "0x991C74", Offset = "0x991C74", VA = "0x991C74", Slot = "7")]
		public override bool ValidGrab(Rigidbody checkAttachPoint)
		{
			return default(bool);
		}

		[Token(Token = "0x6002586")]
		[Address(RVA = "0x991D54", Offset = "0x991D54", VA = "0x991D54", Slot = "10")]
		public override bool StartGrab(GameObject grabbingObject, GameObject givenGrabbedObject, Rigidbody givenControllerAttachPoint)
		{
			return default(bool);
		}

		[Token(Token = "0x6002587")]
		[Address(RVA = "0x991DA0", Offset = "0x991DA0", VA = "0x991DA0", Slot = "11")]
		public override void StopGrab(bool applyGrabbingObjectVelocity)
		{
		}

		[Token(Token = "0x6002588")]
		[Address(RVA = "0x991DE0", Offset = "0x991DE0", VA = "0x991DE0", Slot = "17")]
		protected override void Initialise()
		{
		}

		[Token(Token = "0x6002589")]
		[Address(RVA = "0x991DF0", Offset = "0x991DF0", VA = "0x991DF0", Slot = "18")]
		protected override Rigidbody ReleaseFromController(bool applyGrabbingObjectVelocity)
		{
			return null;
		}

		[Token(Token = "0x600258A")]
		[Address(RVA = "0x991EC4", Offset = "0x991EC4", VA = "0x991EC4", Slot = "24")]
		protected virtual void OnJointBreak(float force)
		{
		}

		[Token(Token = "0x600258B")]
		[Address(RVA = "0x991ED4", Offset = "0x991ED4", VA = "0x991ED4", Slot = "25")]
		protected virtual void CreateJoint(GameObject obj)
		{
		}

		[Token(Token = "0x600258C")]
		[Address(RVA = "0x992064", Offset = "0x992064", VA = "0x992064", Slot = "26")]
		protected virtual void DestroyJoint(bool withDestroyImmediate, bool applyGrabbingObjectVelocity)
		{
		}

		[Token(Token = "0x600258D")]
		[Address(RVA = "0x992130", Offset = "0x992130", VA = "0x992130", Slot = "27")]
		protected virtual void SetSnappedObjectPosition(GameObject obj)
		{
		}

		[Token(Token = "0x600258E")]
		[Address(RVA = "0x992494", Offset = "0x992494", VA = "0x992494", Slot = "28")]
		protected virtual void SnapObjectToGrabToController(GameObject obj)
		{
		}

		[Token(Token = "0x600258F")]
		[Address(RVA = "0x9924E8", Offset = "0x9924E8", VA = "0x9924E8")]
		protected VRTK_BaseJointGrabAttach()
		{
		}
	}
	[Token(Token = "0x20004AE")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x6437B8", Offset = "0x6437B8")]
	public class VRTK_ChildOfControllerGrabAttach : VRTK_BaseGrabAttach
	{
		[Token(Token = "0x6002590")]
		[Address(RVA = "0x992500", Offset = "0x992500", VA = "0x992500", Slot = "10")]
		public override bool StartGrab(GameObject grabbingObject, GameObject givenGrabbedObject, Rigidbody givenControllerAttachPoint)
		{
			return default(bool);
		}

		[Token(Token = "0x6002591")]
		[Address(RVA = "0x992570", Offset = "0x992570", VA = "0x992570", Slot = "11")]
		public override void StopGrab(bool applyGrabbingObjectVelocity)
		{
		}

		[Token(Token = "0x6002592")]
		[Address(RVA = "0x9925B0", Offset = "0x9925B0", VA = "0x9925B0", Slot = "17")]
		protected override void Initialise()
		{
		}

		[Token(Token = "0x6002593")]
		[Address(RVA = "0x9925C0", Offset = "0x9925C0", VA = "0x9925C0", Slot = "24")]
		protected virtual void SetSnappedObjectPosition(GameObject obj)
		{
		}

		[Token(Token = "0x6002594")]
		[Address(RVA = "0x992924", Offset = "0x992924", VA = "0x992924", Slot = "25")]
		protected virtual void SnapObjectToGrabToController(GameObject obj)
		{
		}

		[Token(Token = "0x6002595")]
		[Address(RVA = "0x9929C0", Offset = "0x9929C0", VA = "0x9929C0")]
		public VRTK_ChildOfControllerGrabAttach()
		{
		}
	}
	[Token(Token = "0x20004AF")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x6437F0", Offset = "0x6437F0")]
	public class VRTK_ClimbableGrabAttach : VRTK_BaseGrabAttach
	{
		[Token(Token = "0x4002140")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x660D14", Offset = "0x660D14")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x660D14", Offset = "0x660D14")]
		public bool useObjectRotation;

		[Token(Token = "0x6002596")]
		[Address(RVA = "0x9929D0", Offset = "0x9929D0", VA = "0x9929D0", Slot = "17")]
		protected override void Initialise()
		{
		}

		[Token(Token = "0x6002597")]
		[Address(RVA = "0x9929E4", Offset = "0x9929E4", VA = "0x9929E4")]
		public VRTK_ClimbableGrabAttach()
		{
		}
	}
	[Token(Token = "0x20004B0")]
	public struct ControlAnimationGrabAttachEventArgs
	{
		[Token(Token = "0x4002141")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public GameObject interactingObject;

		[Token(Token = "0x4002142")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float currentFrame;
	}
	[Token(Token = "0x20004B1")]
	public delegate void ControlAnimationGrabAttachEventHandler(object sender, ControlAnimationGrabAttachEventArgs e);
	[Token(Token = "0x20004B2")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x643828", Offset = "0x643828")]
	public class VRTK_ControlAnimationGrabAttach : VRTK_BaseGrabAttach
	{
		[Token(Token = "0x2000887")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6460F0", Offset = "0x6460F0")]
		private sealed class <ResetTimeline>d__37 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002C2C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002C2D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002C2E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VRTK_ControlAnimationGrabAttach <>4__this;

			[Token(Token = "0x4002C2F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float frame;

			[Token(Token = "0x17000366")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60033E4")]
				[Address(RVA = "0xDC45F8", Offset = "0xDC45F8", VA = "0xDC45F8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000367")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60033E6")]
				[Address(RVA = "0xDC4668", Offset = "0xDC4668", VA = "0xDC4668", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60033E1")]
			[Address(RVA = "0xDC44C0", Offset = "0xDC44C0", VA = "0xDC44C0")]
			[DebuggerHidden]
			public <ResetTimeline>d__37(int <>1__state)
			{
			}

			[Token(Token = "0x60033E2")]
			[Address(RVA = "0xDC44EC", Offset = "0xDC44EC", VA = "0xDC44EC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60033E3")]
			[Address(RVA = "0xDC44F0", Offset = "0xDC44F0", VA = "0xDC44F0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60033E5")]
			[Address(RVA = "0xDC4600", Offset = "0xDC4600", VA = "0xDC4600", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002143")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x660D84", Offset = "0x660D84")]
		public float detachDistance;

		[Token(Token = "0x4002144")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x660DBC", Offset = "0x660DBC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x660DBC", Offset = "0x660DBC")]
		public Animation animationTimeline;

		[Token(Token = "0x4002145")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x660E2C", Offset = "0x660E2C")]
		public Animator animatorTimeline;

		[Token(Token = "0x4002146")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x660E64", Offset = "0x660E64")]
		public float maxFrames;

		[Token(Token = "0x4002147")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x660E9C", Offset = "0x660E9C")]
		public float distanceMultiplier;

		[Token(Token = "0x4002148")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x660ED4", Offset = "0x660ED4")]
		public bool rewindOnRelease;

		[Token(Token = "0x4002149")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x660F0C", Offset = "0x660F0C")]
		public float rewindSpeedMultplier;

		[Token(Token = "0x400214D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		protected float animationSpeed;

		[Token(Token = "0x400214E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		protected float frameOffset;

		[Token(Token = "0x400214F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		protected float currentFrame;

		[Token(Token = "0x4002150")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		protected Coroutine resetTimelineRoutine;

		[Token(Token = "0x4002151")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		protected bool atEnd;

		[Token(Token = "0x4002152")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		protected string animationName;

		[Token(Token = "0x1400013F")]
		public event ControlAnimationGrabAttachEventHandler AnimationFrameAtStart
		{
			[Token(Token = "0x600259C")]
			[Address(RVA = "0x9929F4", Offset = "0x9929F4", VA = "0x9929F4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66E8DC", Offset = "0x66E8DC")]
			add
			{
			}
			[Token(Token = "0x600259D")]
			[Address(RVA = "0x992AE0", Offset = "0x992AE0", VA = "0x992AE0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66E8EC", Offset = "0x66E8EC")]
			remove
			{
			}
		}

		[Token(Token = "0x14000140")]
		public event ControlAnimationGrabAttachEventHandler AnimationFrameAtEnd
		{
			[Token(Token = "0x600259E")]
			[Address(RVA = "0x992BCC", Offset = "0x992BCC", VA = "0x992BCC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66E8FC", Offset = "0x66E8FC")]
			add
			{
			}
			[Token(Token = "0x600259F")]
			[Address(RVA = "0x992CB8", Offset = "0x992CB8", VA = "0x992CB8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66E90C", Offset = "0x66E90C")]
			remove
			{
			}
		}

		[Token(Token = "0x14000141")]
		public event ControlAnimationGrabAttachEventHandler AnimationFrameChanged
		{
			[Token(Token = "0x60025A0")]
			[Address(RVA = "0x992DA4", Offset = "0x992DA4", VA = "0x992DA4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66E91C", Offset = "0x66E91C")]
			add
			{
			}
			[Token(Token = "0x60025A1")]
			[Address(RVA = "0x992E90", Offset = "0x992E90", VA = "0x992E90")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66E92C", Offset = "0x66E92C")]
			remove
			{
			}
		}

		[Token(Token = "0x60025A2")]
		[Address(RVA = "0x992F7C", Offset = "0x992F7C", VA = "0x992F7C", Slot = "24")]
		public virtual void OnAnimationFrameChanged(ControlAnimationGrabAttachEventArgs e)
		{
		}

		[Token(Token = "0x60025A3")]
		[Address(RVA = "0x992FA4", Offset = "0x992FA4", VA = "0x992FA4", Slot = "25")]
		public virtual void OnAnimationFrameAtStart(ControlAnimationGrabAttachEventArgs e)
		{
		}

		[Token(Token = "0x60025A4")]
		[Address(RVA = "0x992FCC", Offset = "0x992FCC", VA = "0x992FCC", Slot = "26")]
		public virtual void OnAnimationFrameAtEnd(ControlAnimationGrabAttachEventArgs e)
		{
		}

		[Token(Token = "0x60025A5")]
		[Address(RVA = "0x992FF4", Offset = "0x992FF4", VA = "0x992FF4", Slot = "10")]
		public override bool StartGrab(GameObject grabbingObject, GameObject givenGrabbedObject, Rigidbody givenControllerAttachPoint)
		{
			return default(bool);
		}

		[Token(Token = "0x60025A6")]
		[Address(RVA = "0x99304C", Offset = "0x99304C", VA = "0x99304C", Slot = "11")]
		public override void StopGrab(bool applyGrabbingObjectVelocity)
		{
		}

		[Token(Token = "0x60025A7")]
		[Address(RVA = "0x993080", Offset = "0x993080", VA = "0x993080", Slot = "12")]
		public override Transform CreateTrackPoint(Transform controllerPoint, GameObject currentGrabbedObject, GameObject currentGrabbingObject, ref bool customTrackPoint)
		{
			return null;
		}

		[Token(Token = "0x60025A8")]
		[Address(RVA = "0x993304", Offset = "0x993304", VA = "0x993304", Slot = "13")]
		public override void ProcessUpdate()
		{
		}

		[Token(Token = "0x60025A9")]
		[Address(RVA = "0x993564", Offset = "0x993564", VA = "0x993564", Slot = "27")]
		public virtual void SetFrame(float frame)
		{
		}

		[Token(Token = "0x60025AA")]
		[Address(RVA = "0x9936A8", Offset = "0x9936A8", VA = "0x9936A8", Slot = "28")]
		public virtual void RewindAnimation()
		{
		}

		[Token(Token = "0x60025AB")]
		[Address(RVA = "0x993700", Offset = "0x993700", VA = "0x993700", Slot = "29")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x60025AC")]
		[Address(RVA = "0x993710", Offset = "0x993710", VA = "0x993710", Slot = "17")]
		protected override void Initialise()
		{
		}

		[Token(Token = "0x60025AD")]
		[Address(RVA = "0x99372C", Offset = "0x99372C", VA = "0x99372C", Slot = "30")]
		protected virtual void InitTimeline()
		{
		}

		[Token(Token = "0x60025AE")]
		[Address(RVA = "0x993B74", Offset = "0x993B74", VA = "0x993B74", Slot = "31")]
		protected virtual void SetTimelineSpeed(float speed)
		{
		}

		[Token(Token = "0x60025AF")]
		[Address(RVA = "0x993CB0", Offset = "0x993CB0", VA = "0x993CB0", Slot = "32")]
		protected virtual void SetTimelinePosition(float framePosition)
		{
		}

		[Token(Token = "0x60025B0")]
		[Address(RVA = "0x993E18", Offset = "0x993E18", VA = "0x993E18", Slot = "33")]
		protected virtual void CancelResetTimeline()
		{
		}

		[Token(Token = "0x60025B1")]
		[Address(RVA = "0x993E2C", Offset = "0x993E2C", VA = "0x993E2C", Slot = "34")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x66E93C", Offset = "0x66E93C")]
		protected virtual IEnumerator ResetTimeline(float frame)
		{
			return null;
		}

		[Token(Token = "0x60025B2")]
		[Address(RVA = "0x993EC4", Offset = "0x993EC4", VA = "0x993EC4", Slot = "35")]
		protected virtual ControlAnimationGrabAttachEventArgs SetEventPayload(float frame)
		{
			return default(ControlAnimationGrabAttachEventArgs);
		}

		[Token(Token = "0x60025B3")]
		[Address(RVA = "0x993F78", Offset = "0x993F78", VA = "0x993F78")]
		public VRTK_ControlAnimationGrabAttach()
		{
		}
	}
	[Token(Token = "0x20004B3")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x643860", Offset = "0x643860")]
	public class VRTK_CustomJointGrabAttach : VRTK_BaseJointGrabAttach
	{
		[Token(Token = "0x4002153")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x660F74", Offset = "0x660F74")]
		public Joint customJoint;

		[Token(Token = "0x4002154")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		protected GameObject jointHolder;

		[Token(Token = "0x60025B4")]
		[Address(RVA = "0xDC4670", Offset = "0xDC4670", VA = "0xDC4670", Slot = "17")]
		protected override void Initialise()
		{
		}

		[Token(Token = "0x60025B5")]
		[Address(RVA = "0xDC46A4", Offset = "0xDC46A4", VA = "0xDC46A4", Slot = "25")]
		protected override void CreateJoint(GameObject obj)
		{
		}

		[Token(Token = "0x60025B6")]
		[Address(RVA = "0xDC49FC", Offset = "0xDC49FC", VA = "0xDC49FC", Slot = "26")]
		protected override void DestroyJoint(bool withDestroyImmediate, bool applyGrabbingObjectVelocity)
		{
		}

		[Token(Token = "0x60025B7")]
		[Address(RVA = "0xDC4A0C", Offset = "0xDC4A0C", VA = "0xDC4A0C", Slot = "29")]
		protected virtual void CopyCustomJoint()
		{
		}

		[Token(Token = "0x60025B8")]
		[Address(RVA = "0xDC4C60", Offset = "0xDC4C60", VA = "0xDC4C60")]
		public VRTK_CustomJointGrabAttach()
		{
		}
	}
	[Token(Token = "0x20004B4")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x643898", Offset = "0x643898")]
	public class VRTK_FixedJointGrabAttach : VRTK_BaseJointGrabAttach
	{
		[Token(Token = "0x4002155")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x660FAC", Offset = "0x660FAC")]
		public float breakForce;

		[Token(Token = "0x60025B9")]
		[Address(RVA = "0xDC4C68", Offset = "0xDC4C68", VA = "0xDC4C68", Slot = "25")]
		protected override void CreateJoint(GameObject obj)
		{
		}

		[Token(Token = "0x60025BA")]
		[Address(RVA = "0xDC4D4C", Offset = "0xDC4D4C", VA = "0xDC4D4C")]
		public VRTK_FixedJointGrabAttach()
		{
		}
	}
	[Token(Token = "0x20004B5")]
	public struct MoveTransformGrabAttachEventArgs
	{
		[Token(Token = "0x4002156")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public GameObject interactingObject;

		[Token(Token = "0x4002157")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Vector3 position;

		[Token(Token = "0x4002158")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public Vector3 normalizedPosition;

		[Token(Token = "0x4002159")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 currentDirection;

		[Token(Token = "0x400215A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Vector3 originDirection;
	}
	[Token(Token = "0x20004B6")]
	public delegate void MoveTransformGrabAttachEventHandler(object sender, MoveTransformGrabAttachEventArgs e);
	[Token(Token = "0x20004B7")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x6438D0", Offset = "0x6438D0")]
	public class VRTK_MoveTransformGrabAttach : VRTK_BaseGrabAttach
	{
		[Token(Token = "0x2000888")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x646100", Offset = "0x646100")]
		private sealed class <MoveToPosition>d__93 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002C30")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002C31")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002C32")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VRTK_MoveTransformGrabAttach <>4__this;

			[Token(Token = "0x4002C33")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Vector3 targetPosition;

			[Token(Token = "0x4002C34")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public float speed;

			[Token(Token = "0x17000368")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60033EA")]
				[Address(RVA = "0xDC9058", Offset = "0xDC9058", VA = "0xDC9058", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000369")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60033EC")]
				[Address(RVA = "0xDC90C8", Offset = "0xDC90C8", VA = "0xDC90C8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60033E7")]
			[Address(RVA = "0xDC7DC4", Offset = "0xDC7DC4", VA = "0xDC7DC4")]
			[DebuggerHidden]
			public <MoveToPosition>d__93(int <>1__state)
			{
			}

			[Token(Token = "0x60033E8")]
			[Address(RVA = "0xDC8E30", Offset = "0xDC8E30", VA = "0xDC8E30", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60033E9")]
			[Address(RVA = "0xDC8E34", Offset = "0xDC8E34", VA = "0xDC8E34", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60033EB")]
			[Address(RVA = "0xDC9060", Offset = "0xDC9060", VA = "0xDC9060", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000889")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x646110", Offset = "0x646110")]
		private sealed class <DeceleratePosition>d__94 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002C35")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002C36")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002C37")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VRTK_MoveTransformGrabAttach <>4__this;

			[Token(Token = "0x1700036A")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60033F0")]
				[Address(RVA = "0xDC8DB8", Offset = "0xDC8DB8", VA = "0xDC8DB8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700036B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60033F2")]
				[Address(RVA = "0xDC8E28", Offset = "0xDC8E28", VA = "0xDC8E28", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60033ED")]
			[Address(RVA = "0xDC7E64", Offset = "0xDC7E64", VA = "0xDC7E64")]
			[DebuggerHidden]
			public <DeceleratePosition>d__94(int <>1__state)
			{
			}

			[Token(Token = "0x60033EE")]
			[Address(RVA = "0xDC8BF4", Offset = "0xDC8BF4", VA = "0xDC8BF4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60033EF")]
			[Address(RVA = "0xDC8BF8", Offset = "0xDC8BF8", VA = "0xDC8BF8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60033F1")]
			[Address(RVA = "0xDC8DC0", Offset = "0xDC8DC0", VA = "0xDC8DC0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400215B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x660FE4", Offset = "0x660FE4")]
		public float detachDistance;

		[Token(Token = "0x400215C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x66101C", Offset = "0x66101C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x66101C", Offset = "0x66101C")]
		public float trackingSpeed;

		[Token(Token = "0x400215D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x66107C", Offset = "0x66107C")]
		public bool forceKinematicOnGrab;

		[Token(Token = "0x400215E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6610B4", Offset = "0x6610B4")]
		public float releaseDecelerationDamper;

		[Token(Token = "0x400215F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6610EC", Offset = "0x6610EC")]
		public float resetToOrignOnReleaseSpeed;

		[Token(Token = "0x4002160")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x661124", Offset = "0x661124")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x661124", Offset = "0x661124")]
		public Limits2D xAxisLimits;

		[Token(Token = "0x4002161")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x661184", Offset = "0x661184")]
		public Limits2D yAxisLimits;

		[Token(Token = "0x4002162")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6611BC", Offset = "0x6611BC")]
		public Limits2D zAxisLimits;

		[Token(Token = "0x4002163")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6611F4", Offset = "0x6611F4")]
		public float minMaxThreshold;

		[Token(Token = "0x4002164")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x66122C", Offset = "0x66122C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x66122C", Offset = "0x66122C")]
		public float minMaxNormalizedThreshold;

		[Token(Token = "0x4002165")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[HideInInspector]
		public Vector3 localOrigin;

		[Token(Token = "0x4002173")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		protected bool previousKinematicState;

		[Token(Token = "0x4002174")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		protected bool[] limitsReached;

		[Token(Token = "0x4002175")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		protected Limits2D xOriginLimits;

		[Token(Token = "0x4002176")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		protected Limits2D yOriginLimits;

		[Token(Token = "0x4002177")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		protected Limits2D zOriginLimits;

		[Token(Token = "0x4002178")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		protected Vector3 previousPosition;

		[Token(Token = "0x4002179")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
		protected Vector3 movementVelocity;

		[Token(Token = "0x400217A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		protected Coroutine resetPositionRoutine;

		[Token(Token = "0x400217B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		protected Coroutine deceleratePositionRoutine;

		[Token(Token = "0x14000142")]
		public event MoveTransformGrabAttachEventHandler TransformPositionChanged
		{
			[Token(Token = "0x60025BF")]
			[Address(RVA = "0xDC4D60", Offset = "0xDC4D60", VA = "0xDC4D60")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66E9A0", Offset = "0x66E9A0")]
			add
			{
			}
			[Token(Token = "0x60025C0")]
			[Address(RVA = "0xDC4E4C", Offset = "0xDC4E4C", VA = "0xDC4E4C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66E9B0", Offset = "0x66E9B0")]
			remove
			{
			}
		}

		[Token(Token = "0x14000143")]
		public event MoveTransformGrabAttachEventHandler XAxisMinLimitReached
		{
			[Token(Token = "0x60025C1")]
			[Address(RVA = "0xDC4F38", Offset = "0xDC4F38", VA = "0xDC4F38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66E9C0", Offset = "0x66E9C0")]
			add
			{
			}
			[Token(Token = "0x60025C2")]
			[Address(RVA = "0xDC5024", Offset = "0xDC5024", VA = "0xDC5024")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66E9D0", Offset = "0x66E9D0")]
			remove
			{
			}
		}

		[Token(Token = "0x14000144")]
		public event MoveTransformGrabAttachEventHandler XAxisMinLimitExited
		{
			[Token(Token = "0x60025C3")]
			[Address(RVA = "0xDC5110", Offset = "0xDC5110", VA = "0xDC5110")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66E9E0", Offset = "0x66E9E0")]
			add
			{
			}
			[Token(Token = "0x60025C4")]
			[Address(RVA = "0xDC51FC", Offset = "0xDC51FC", VA = "0xDC51FC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66E9F0", Offset = "0x66E9F0")]
			remove
			{
			}
		}

		[Token(Token = "0x14000145")]
		public event MoveTransformGrabAttachEventHandler XAxisMaxLimitReached
		{
			[Token(Token = "0x60025C5")]
			[Address(RVA = "0xDC52E8", Offset = "0xDC52E8", VA = "0xDC52E8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66EA00", Offset = "0x66EA00")]
			add
			{
			}
			[Token(Token = "0x60025C6")]
			[Address(RVA = "0xDC53D4", Offset = "0xDC53D4", VA = "0xDC53D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66EA10", Offset = "0x66EA10")]
			remove
			{
			}
		}

		[Token(Token = "0x14000146")]
		public event MoveTransformGrabAttachEventHandler XAxisMaxLimitExited
		{
			[Token(Token = "0x60025C7")]
			[Address(RVA = "0xDC54C0", Offset = "0xDC54C0", VA = "0xDC54C0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66EA20", Offset = "0x66EA20")]
			add
			{
			}
			[Token(Token = "0x60025C8")]
			[Address(RVA = "0xDC55AC", Offset = "0xDC55AC", VA = "0xDC55AC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66EA30", Offset = "0x66EA30")]
			remove
			{
			}
		}

		[Token(Token = "0x14000147")]
		public event MoveTransformGrabAttachEventHandler YAxisMinLimitReached
		{
			[Token(Token = "0x60025C9")]
			[Address(RVA = "0xDC5698", Offset = "0xDC5698", VA = "0xDC5698")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66EA40", Offset = "0x66EA40")]
			add
			{
			}
			[Token(Token = "0x60025CA")]
			[Address(RVA = "0xDC5784", Offset = "0xDC5784", VA = "0xDC5784")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66EA50", Offset = "0x66EA50")]
			remove
			{
			}
		}

		[Token(Token = "0x14000148")]
		public event MoveTransformGrabAttachEventHandler YAxisMinLimitExited
		{
			[Token(Token = "0x60025CB")]
			[Address(RVA = "0xDC5870", Offset = "0xDC5870", VA = "0xDC5870")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66EA60", Offset = "0x66EA60")]
			add
			{
			}
			[Token(Token = "0x60025CC")]
			[Address(RVA = "0xDC595C", Offset = "0xDC595C", VA = "0xDC595C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66EA70", Offset = "0x66EA70")]
			remove
			{
			}
		}

		[Token(Token = "0x14000149")]
		public event MoveTransformGrabAttachEventHandler YAxisMaxLimitReached
		{
			[Token(Token = "0x60025CD")]
			[Address(RVA = "0xDC5A48", Offset = "0xDC5A48", VA = "0xDC5A48")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66EA80", Offset = "0x66EA80")]
			add
			{
			}
			[Token(Token = "0x60025CE")]
			[Address(RVA = "0xDC5B34", Offset = "0xDC5B34", VA = "0xDC5B34")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66EA90", Offset = "0x66EA90")]
			remove
			{
			}
		}

		[Token(Token = "0x1400014A")]
		public event MoveTransformGrabAttachEventHandler YAxisMaxLimitExited
		{
			[Token(Token = "0x60025CF")]
			[Address(RVA = "0xDC5C20", Offset = "0xDC5C20", VA = "0xDC5C20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66EAA0", Offset = "0x66EAA0")]
			add
			{
			}
			[Token(Token = "0x60025D0")]
			[Address(RVA = "0xDC5D10", Offset = "0xDC5D10", VA = "0xDC5D10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66EAB0", Offset = "0x66EAB0")]
			remove
			{
			}
		}

		[Token(Token = "0x1400014B")]
		public event MoveTransformGrabAttachEventHandler ZAxisMinLimitReached
		{
			[Token(Token = "0x60025D1")]
			[Address(RVA = "0xDC5E00", Offset = "0xDC5E00", VA = "0xDC5E00")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66EAC0", Offset = "0x66EAC0")]
			add
			{
			}
			[Token(Token = "0x60025D2")]
			[Address(RVA = "0xDC5EF0", Offset = "0xDC5EF0", VA = "0xDC5EF0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66EAD0", Offset = "0x66EAD0")]
			remove
			{
			}
		}

		[Token(Token = "0x1400014C")]
		public event MoveTransformGrabAttachEventHandler ZAxisMinLimitExited
		{
			[Token(Token = "0x60025D3")]
			[Address(RVA = "0xDC5FE0", Offset = "0xDC5FE0", VA = "0xDC5FE0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66EAE0", Offset = "0x66EAE0")]
			add
			{
			}
			[Token(Token = "0x60025D4")]
			[Address(RVA = "0xDC60D0", Offset = "0xDC60D0", VA = "0xDC60D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66EAF0", Offset = "0x66EAF0")]
			remove
			{
			}
		}

		[Token(Token = "0x1400014D")]
		public event MoveTransformGrabAttachEventHandler ZAxisMaxLimitReached
		{
			[Token(Token = "0x60025D5")]
			[Address(RVA = "0xDC61C0", Offset = "0xDC61C0", VA = "0xDC61C0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66EB00", Offset = "0x66EB00")]
			add
			{
			}
			[Token(Token = "0x60025D6")]
			[Address(RVA = "0xDC62B0", Offset = "0xDC62B0", VA = "0xDC62B0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66EB10", Offset = "0x66EB10")]
			remove
			{
			}
		}

		[Token(Token = "0x1400014E")]
		public event MoveTransformGrabAttachEventHandler ZAxisMaxLimitExited
		{
			[Token(Token = "0x60025D7")]
			[Address(RVA = "0xDC63A0", Offset = "0xDC63A0", VA = "0xDC63A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66EB20", Offset = "0x66EB20")]
			add
			{
			}
			[Token(Token = "0x60025D8")]
			[Address(RVA = "0xDC6490", Offset = "0xDC6490", VA = "0xDC6490")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66EB30", Offset = "0x66EB30")]
			remove
			{
			}
		}

		[Token(Token = "0x60025D9")]
		[Address(RVA = "0xDC6580", Offset = "0xDC6580", VA = "0xDC6580", Slot = "24")]
		public virtual void OnTransformPositionChanged(MoveTransformGrabAttachEventArgs e)
		{
		}

		[Token(Token = "0x60025DA")]
		[Address(RVA = "0xDC65D4", Offset = "0xDC65D4", VA = "0xDC65D4", Slot = "25")]
		public virtual void OnXAxisMinLimitReached(MoveTransformGrabAttachEventArgs e)
		{
		}

		[Token(Token = "0x60025DB")]
		[Address(RVA = "0xDC6628", Offset = "0xDC6628", VA = "0xDC6628", Slot = "26")]
		public virtual void OnXAxisMinLimitExited(MoveTransformGrabAttachEventArgs e)
		{
		}

		[Token(Token = "0x60025DC")]
		[Address(RVA = "0xDC667C", Offset = "0xDC667C", VA = "0xDC667C", Slot = "27")]
		public virtual void OnXAxisMaxLimitReached(MoveTransformGrabAttachEventArgs e)
		{
		}

		[Token(Token = "0x60025DD")]
		[Address(RVA = "0xDC66D0", Offset = "0xDC66D0", VA = "0xDC66D0", Slot = "28")]
		public virtual void OnXAxisMaxLimitExited(MoveTransformGrabAttachEventArgs e)
		{
		}

		[Token(Token = "0x60025DE")]
		[Address(RVA = "0xDC6724", Offset = "0xDC6724", VA = "0xDC6724", Slot = "29")]
		public virtual void OnYAxisMinLimitReached(MoveTransformGrabAttachEventArgs e)
		{
		}

		[Token(Token = "0x60025DF")]
		[Address(RVA = "0xDC6778", Offset = "0xDC6778", VA = "0xDC6778", Slot = "30")]
		public virtual void OnYAxisMinLimitExited(MoveTransformGrabAttachEventArgs e)
		{
		}

		[Token(Token = "0x60025E0")]
		[Address(RVA = "0xDC67CC", Offset = "0xDC67CC", VA = "0xDC67CC", Slot = "31")]
		public virtual void OnYAxisMaxLimitReached(MoveTransformGrabAttachEventArgs e)
		{
		}

		[Token(Token = "0x60025E1")]
		[Address(RVA = "0xDC6820", Offset = "0xDC6820", VA = "0xDC6820", Slot = "32")]
		public virtual void OnYAxisMaxLimitExited(MoveTransformGrabAttachEventArgs e)
		{
		}

		[Token(Token = "0x60025E2")]
		[Address(RVA = "0xDC6874", Offset = "0xDC6874", VA = "0xDC6874", Slot = "33")]
		public virtual void OnZAxisMinLimitReached(MoveTransformGrabAttachEventArgs e)
		{
		}

		[Token(Token = "0x60025E3")]
		[Address(RVA = "0xDC68C8", Offset = "0xDC68C8", VA = "0xDC68C8", Slot = "34")]
		public virtual void OnZAxisMinLimitExited(MoveTransformGrabAttachEventArgs e)
		{
		}

		[Token(Token = "0x60025E4")]
		[Address(RVA = "0xDC691C", Offset = "0xDC691C", VA = "0xDC691C", Slot = "35")]
		public virtual void OnZAxisMaxLimitReached(MoveTransformGrabAttachEventArgs e)
		{
		}

		[Token(Token = "0x60025E5")]
		[Address(RVA = "0xDC6970", Offset = "0xDC6970", VA = "0xDC6970", Slot = "36")]
		public virtual void OnZAxisMaxLimitExited(MoveTransformGrabAttachEventArgs e)
		{
		}

		[Token(Token = "0x60025E6")]
		[Address(RVA = "0xDC69C4", Offset = "0xDC69C4", VA = "0xDC69C4", Slot = "10")]
		public override bool StartGrab(GameObject grabbingObject, GameObject givenGrabbedObject, Rigidbody givenControllerAttachPoint)
		{
			return default(bool);
		}

		[Token(Token = "0x60025E7")]
		[Address(RVA = "0xDC6B14", Offset = "0xDC6B14", VA = "0xDC6B14", Slot = "11")]
		public override void StopGrab(bool applyGrabbingObjectVelocity)
		{
		}

		[Token(Token = "0x60025E8")]
		[Address(RVA = "0xDC6C44", Offset = "0xDC6C44", VA = "0xDC6C44", Slot = "12")]
		public override Transform CreateTrackPoint(Transform controllerPoint, GameObject currentGrabbedObject, GameObject currentGrabbingObject, ref bool customTrackPoint)
		{
			return null;
		}

		[Token(Token = "0x60025E9")]
		[Address(RVA = "0xDC6DF8", Offset = "0xDC6DF8", VA = "0xDC6DF8", Slot = "13")]
		public override void ProcessUpdate()
		{
		}

		[Token(Token = "0x60025EA")]
		[Address(RVA = "0xDC7264", Offset = "0xDC7264", VA = "0xDC7264", Slot = "37")]
		public virtual Vector3 GetPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60025EB")]
		[Address(RVA = "0xDC72D0", Offset = "0xDC72D0", VA = "0xDC72D0", Slot = "38")]
		public virtual Vector3 GetNormalizedPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60025EC")]
		[Address(RVA = "0xDC730C", Offset = "0xDC730C", VA = "0xDC730C", Slot = "39")]
		public virtual Vector3 GetCurrentDirection()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60025ED")]
		[Address(RVA = "0xDC737C", Offset = "0xDC737C", VA = "0xDC737C", Slot = "40")]
		public virtual Vector3 GetDirectionFromOrigin()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60025EE")]
		[Address(RVA = "0xDC73E8", Offset = "0xDC73E8", VA = "0xDC73E8", Slot = "41")]
		public virtual void SetCurrentPosition(Vector3 newPosition, float speed)
		{
		}

		[Token(Token = "0x60025EF")]
		[Address(RVA = "0xDC74AC", Offset = "0xDC74AC", VA = "0xDC74AC", Slot = "42")]
		public virtual void ResetPosition()
		{
		}

		[Token(Token = "0x60025F0")]
		[Address(RVA = "0xDC74C8", Offset = "0xDC74C8", VA = "0xDC74C8", Slot = "43")]
		public virtual Limits2D[] GetWorldLimits()
		{
			return null;
		}

		[Token(Token = "0x60025F1")]
		[Address(RVA = "0xDC761C", Offset = "0xDC761C", VA = "0xDC761C", Slot = "44")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x60025F2")]
		[Address(RVA = "0xDC762C", Offset = "0xDC762C", VA = "0xDC762C", Slot = "45")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x60025F3")]
		[Address(RVA = "0xDC7668", Offset = "0xDC7668", VA = "0xDC7668", Slot = "17")]
		protected override void Initialise()
		{
		}

		[Token(Token = "0x60025F4")]
		[Address(RVA = "0xDC7684", Offset = "0xDC7684", VA = "0xDC7684", Slot = "46")]
		protected virtual void SetupOrigin()
		{
		}

		[Token(Token = "0x60025F5")]
		[Address(RVA = "0xDC786C", Offset = "0xDC786C", VA = "0xDC786C", Slot = "47")]
		protected virtual float ClampAxis(Limits2D limits, float axisValue)
		{
			return default(float);
		}

		[Token(Token = "0x60025F6")]
		[Address(RVA = "0xDC7928", Offset = "0xDC7928", VA = "0xDC7928", Slot = "48")]
		protected virtual void ClampPosition()
		{
		}

		[Token(Token = "0x60025F7")]
		[Address(RVA = "0xDC7A78", Offset = "0xDC7A78", VA = "0xDC7A78", Slot = "49")]
		protected virtual Vector3 NormalizePosition(Vector3 givenHeading)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60025F8")]
		[Address(RVA = "0xDC7B8C", Offset = "0xDC7B8C", VA = "0xDC7B8C", Slot = "50")]
		protected virtual void CancelResetPosition()
		{
		}

		[Token(Token = "0x60025F9")]
		[Address(RVA = "0xDC7BA0", Offset = "0xDC7BA0", VA = "0xDC7BA0", Slot = "51")]
		protected virtual void CancelDeceleratePosition()
		{
		}

		[Token(Token = "0x60025FA")]
		[Address(RVA = "0xDC7BB4", Offset = "0xDC7BB4", VA = "0xDC7BB4", Slot = "52")]
		protected virtual void UpdatePosition(Vector3 newPosition, bool additive, bool forceClamp = true)
		{
		}

		[Token(Token = "0x60025FB")]
		[Address(RVA = "0xDC7D04", Offset = "0xDC7D04", VA = "0xDC7D04", Slot = "53")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x66EB40", Offset = "0x66EB40")]
		protected virtual IEnumerator MoveToPosition(Vector3 targetPosition, float speed)
		{
			return null;
		}

		[Token(Token = "0x60025FC")]
		[Address(RVA = "0xDC7DF0", Offset = "0xDC7DF0", VA = "0xDC7DF0", Slot = "54")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x66EBA4", Offset = "0x66EBA4")]
		protected virtual IEnumerator DeceleratePosition()
		{
			return null;
		}

		[Token(Token = "0x60025FD")]
		[Address(RVA = "0xDC7E90", Offset = "0xDC7E90", VA = "0xDC7E90", Slot = "55")]
		protected virtual void CheckAxisLimits()
		{
		}

		[Token(Token = "0x60025FE")]
		[Address(RVA = "0xDC7EFC", Offset = "0xDC7EFC", VA = "0xDC7EFC", Slot = "56")]
		protected virtual Limits2D FixAxisLimits(Limits2D givenLimits)
		{
			return null;
		}

		[Token(Token = "0x60025FF")]
		[Address(RVA = "0xDC7FB4", Offset = "0xDC7FB4", VA = "0xDC7FB4", Slot = "57")]
		protected virtual void EmitEvents()
		{
		}

		[Token(Token = "0x6002600")]
		[Address(RVA = "0xDC898C", Offset = "0xDC898C", VA = "0xDC898C", Slot = "58")]
		protected virtual MoveTransformGrabAttachEventArgs SetEventPayload()
		{
			return default(MoveTransformGrabAttachEventArgs);
		}

		[Token(Token = "0x6002601")]
		[Address(RVA = "0xDC8AF0", Offset = "0xDC8AF0", VA = "0xDC8AF0")]
		public VRTK_MoveTransformGrabAttach()
		{
		}
	}
	[Token(Token = "0x20004B8")]
	public struct RotateTransformGrabAttachEventArgs
	{
		[Token(Token = "0x400217C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public GameObject interactingObject;

		[Token(Token = "0x400217D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float currentAngle;

		[Token(Token = "0x400217E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float normalizedAngle;

		[Token(Token = "0x400217F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 rotationSpeed;
	}
	[Token(Token = "0x20004B9")]
	public delegate void RotateTransformGrabAttachEventHandler(object sender, RotateTransformGrabAttachEventArgs e);
	[Token(Token = "0x20004BA")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x643908", Offset = "0x643908")]
	public class VRTK_RotateTransformGrabAttach : VRTK_BaseGrabAttach
	{
		[Token(Token = "0x200088A")]
		public enum RotationAxis
		{
			[Token(Token = "0x4002C39")]
			xAxis,
			[Token(Token = "0x4002C3A")]
			yAxis,
			[Token(Token = "0x4002C3B")]
			zAxis
		}

		[Token(Token = "0x200088B")]
		public enum RotationType
		{
			[Token(Token = "0x4002C3D")]
			FollowAttachPoint,
			[Token(Token = "0x4002C3E")]
			FollowLongitudinalAxis,
			[Token(Token = "0x4002C3F")]
			FollowLateralAxis,
			[Token(Token = "0x4002C40")]
			FollowPerpendicularAxis,
			[Token(Token = "0x4002C41")]
			MovementAngle
		}

		[Token(Token = "0x200088C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x646120", Offset = "0x646120")]
		private sealed class <RotateToAngle>d__66 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002C42")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002C43")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002C44")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VRTK_RotateTransformGrabAttach <>4__this;

			[Token(Token = "0x4002C45")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Vector3 targetAngle;

			[Token(Token = "0x4002C46")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public float rotationSpeed;

			[Token(Token = "0x4002C47")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private Vector3 <previousRotation>5__2;

			[Token(Token = "0x1700036C")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60033F6")]
				[Address(RVA = "0xDCC31C", Offset = "0xDCC31C", VA = "0xDCC31C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700036D")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60033F8")]
				[Address(RVA = "0xDCC38C", Offset = "0xDCC38C", VA = "0xDCC38C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60033F3")]
			[Address(RVA = "0xDCB804", Offset = "0xDCB804", VA = "0xDCB804")]
			[DebuggerHidden]
			public <RotateToAngle>d__66(int <>1__state)
			{
			}

			[Token(Token = "0x60033F4")]
			[Address(RVA = "0xDCC0E8", Offset = "0xDCC0E8", VA = "0xDCC0E8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60033F5")]
			[Address(RVA = "0xDCC0EC", Offset = "0xDCC0EC", VA = "0xDCC0EC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60033F7")]
			[Address(RVA = "0xDCC324", Offset = "0xDCC324", VA = "0xDCC324", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200088D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x646130", Offset = "0x646130")]
		private sealed class <DecelerateRotation>d__67 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002C48")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002C49")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002C4A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VRTK_RotateTransformGrabAttach <>4__this;

			[Token(Token = "0x1700036E")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60033FC")]
				[Address(RVA = "0xDCC070", Offset = "0xDCC070", VA = "0xDCC070", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700036F")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60033FE")]
				[Address(RVA = "0xDCC0E0", Offset = "0xDCC0E0", VA = "0xDCC0E0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60033F9")]
			[Address(RVA = "0xDCB8A4", Offset = "0xDCB8A4", VA = "0xDCB8A4")]
			[DebuggerHidden]
			public <DecelerateRotation>d__67(int <>1__state)
			{
			}

			[Token(Token = "0x60033FA")]
			[Address(RVA = "0xDCBEE0", Offset = "0xDCBEE0", VA = "0xDCBEE0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60033FB")]
			[Address(RVA = "0xDCBEE4", Offset = "0xDCBEE4", VA = "0xDCBEE4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60033FD")]
			[Address(RVA = "0xDCC078", Offset = "0xDCC078", VA = "0xDCC078", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002180")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x661364", Offset = "0x661364")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x661364", Offset = "0x661364")]
		public float detachDistance;

		[Token(Token = "0x4002181")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6613C4", Offset = "0x6613C4")]
		public float originDeadzone;

		[Token(Token = "0x4002182")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6613FC", Offset = "0x6613FC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6613FC", Offset = "0x6613FC")]
		public RotationAxis rotateAround;

		[Token(Token = "0x4002183")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x66145C", Offset = "0x66145C")]
		public RotationType rotationAction;

		[Token(Token = "0x4002184")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public bool _includeFollowAttachPoint;

		[Token(Token = "0x4002185")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x661494", Offset = "0x661494")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x661494", Offset = "0x661494")]
		public float rotationFriction;

		[Token(Token = "0x4002186")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6614EC", Offset = "0x6614EC")]
		public float releaseDecelerationDamper;

		[Token(Token = "0x4002187")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x661524", Offset = "0x661524")]
		public float resetToOrignOnReleaseSpeed;

		[Token(Token = "0x4002188")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x66155C", Offset = "0x66155C")]
		public float maximumSpeed;

		[Token(Token = "0x4002189")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x661594", Offset = "0x661594")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x661594", Offset = "0x661594")]
		public Limits2D angleLimits;

		[Token(Token = "0x400218A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6615F4", Offset = "0x6615F4")]
		public bool _freeRotate;

		[Token(Token = "0x400218B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x66162C", Offset = "0x66162C")]
		public float minMaxThreshold;

		[Token(Token = "0x400218C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x661664", Offset = "0x661664")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x661664", Offset = "0x661664")]
		public float minMaxNormalizedThreshold;

		[Token(Token = "0x400218D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		[HideInInspector]
		public Quaternion originRotation;

		[Token(Token = "0x4002193")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		protected Vector3 previousAttachPointPosition;

		[Token(Token = "0x4002194")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		protected Vector3 currentRotation;

		[Token(Token = "0x4002195")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		protected Bounds grabbedObjectBounds;

		[Token(Token = "0x4002196")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		protected Vector3 currentRotationSpeed;

		[Token(Token = "0x4002197")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		protected Coroutine updateRotationRoutine;

		[Token(Token = "0x4002198")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		protected Coroutine decelerateRotationRoutine;

		[Token(Token = "0x4002199")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		protected bool[] limitsReached;

		[Token(Token = "0x400219A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		protected VRTK_ControllerReference grabbingObjectReference;

		[Token(Token = "0x400219B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private Vector3 prevResult;

		[Token(Token = "0x1400014F")]
		public event RotateTransformGrabAttachEventHandler AngleChanged
		{
			[Token(Token = "0x6002606")]
			[Address(RVA = "0xDC90D0", Offset = "0xDC90D0", VA = "0xDC90D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66EC08", Offset = "0x66EC08")]
			add
			{
			}
			[Token(Token = "0x6002607")]
			[Address(RVA = "0xDC91BC", Offset = "0xDC91BC", VA = "0xDC91BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66EC18", Offset = "0x66EC18")]
			remove
			{
			}
		}

		[Token(Token = "0x14000150")]
		public event RotateTransformGrabAttachEventHandler MinAngleReached
		{
			[Token(Token = "0x6002608")]
			[Address(RVA = "0xDC92A8", Offset = "0xDC92A8", VA = "0xDC92A8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66EC28", Offset = "0x66EC28")]
			add
			{
			}
			[Token(Token = "0x6002609")]
			[Address(RVA = "0xDC9394", Offset = "0xDC9394", VA = "0xDC9394")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66EC38", Offset = "0x66EC38")]
			remove
			{
			}
		}

		[Token(Token = "0x14000151")]
		public event RotateTransformGrabAttachEventHandler MinAngleExited
		{
			[Token(Token = "0x600260A")]
			[Address(RVA = "0xDC9480", Offset = "0xDC9480", VA = "0xDC9480")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66EC48", Offset = "0x66EC48")]
			add
			{
			}
			[Token(Token = "0x600260B")]
			[Address(RVA = "0xDC956C", Offset = "0xDC956C", VA = "0xDC956C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66EC58", Offset = "0x66EC58")]
			remove
			{
			}
		}

		[Token(Token = "0x14000152")]
		public event RotateTransformGrabAttachEventHandler MaxAngleReached
		{
			[Token(Token = "0x600260C")]
			[Address(RVA = "0xDC9658", Offset = "0xDC9658", VA = "0xDC9658")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66EC68", Offset = "0x66EC68")]
			add
			{
			}
			[Token(Token = "0x600260D")]
			[Address(RVA = "0xDC9744", Offset = "0xDC9744", VA = "0xDC9744")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66EC78", Offset = "0x66EC78")]
			remove
			{
			}
		}

		[Token(Token = "0x14000153")]
		public event RotateTransformGrabAttachEventHandler MaxAngleExited
		{
			[Token(Token = "0x600260E")]
			[Address(RVA = "0xDC9830", Offset = "0xDC9830", VA = "0xDC9830")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66EC88", Offset = "0x66EC88")]
			add
			{
			}
			[Token(Token = "0x600260F")]
			[Address(RVA = "0xDC991C", Offset = "0xDC991C", VA = "0xDC991C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66EC98", Offset = "0x66EC98")]
			remove
			{
			}
		}

		[Token(Token = "0x6002610")]
		[Address(RVA = "0xDC9A08", Offset = "0xDC9A08", VA = "0xDC9A08", Slot = "24")]
		public virtual void OnAngleChanged(RotateTransformGrabAttachEventArgs e)
		{
		}

		[Token(Token = "0x6002611")]
		[Address(RVA = "0xDC9A4C", Offset = "0xDC9A4C", VA = "0xDC9A4C", Slot = "25")]
		public virtual void OnMinAngleReached(RotateTransformGrabAttachEventArgs e)
		{
		}

		[Token(Token = "0x6002612")]
		[Address(RVA = "0xDC9A90", Offset = "0xDC9A90", VA = "0xDC9A90", Slot = "26")]
		public virtual void OnMinAngleExited(RotateTransformGrabAttachEventArgs e)
		{
		}

		[Token(Token = "0x6002613")]
		[Address(RVA = "0xDC9AD4", Offset = "0xDC9AD4", VA = "0xDC9AD4", Slot = "27")]
		public virtual void OnMaxAngleReached(RotateTransformGrabAttachEventArgs e)
		{
		}

		[Token(Token = "0x6002614")]
		[Address(RVA = "0xDC9B18", Offset = "0xDC9B18", VA = "0xDC9B18", Slot = "28")]
		public virtual void OnMaxAngleExited(RotateTransformGrabAttachEventArgs e)
		{
		}

		[Token(Token = "0x6002615")]
		[Address(RVA = "0xDC9B5C", Offset = "0xDC9B5C", VA = "0xDC9B5C", Slot = "10")]
		public override bool StartGrab(GameObject grabbingObject, GameObject givenGrabbedObject, Rigidbody givenControllerAttachPoint)
		{
			return default(bool);
		}

		[Token(Token = "0x6002616")]
		[Address(RVA = "0xDC9CE4", Offset = "0xDC9CE4", VA = "0xDC9CE4", Slot = "11")]
		public override void StopGrab(bool applyGrabbingObjectVelocity)
		{
		}

		[Token(Token = "0x6002617")]
		[Address(RVA = "0xDC9D80", Offset = "0xDC9D80", VA = "0xDC9D80", Slot = "13")]
		public override void ProcessUpdate()
		{
		}

		[Token(Token = "0x6002618")]
		[Address(RVA = "0xDC9FE0", Offset = "0xDC9FE0", VA = "0xDC9FE0", Slot = "29")]
		public virtual void SetRotation(float newAngle, float transitionTime = 0f)
		{
		}

		[Token(Token = "0x6002619")]
		[Address(RVA = "0xDCA1B4", Offset = "0xDCA1B4", VA = "0xDCA1B4", Slot = "30")]
		public virtual void ResetRotation(bool ignoreTransition = false)
		{
		}

		[Token(Token = "0x600261A")]
		[Address(RVA = "0xDCA2FC", Offset = "0xDCA2FC", VA = "0xDCA2FC", Slot = "31")]
		public virtual float GetAngle()
		{
			return default(float);
		}

		[Token(Token = "0x600261B")]
		[Address(RVA = "0xDCA334", Offset = "0xDCA334", VA = "0xDCA334", Slot = "32")]
		public virtual float GetNormalizedAngle()
		{
			return default(float);
		}

		[Token(Token = "0x600261C")]
		[Address(RVA = "0xDCA404", Offset = "0xDCA404", VA = "0xDCA404", Slot = "33")]
		public virtual Vector3 GetRotationSpeed()
		{
			return default(Vector3);
		}

		[Token(Token = "0x600261D")]
		[Address(RVA = "0xDCA414", Offset = "0xDCA414", VA = "0xDCA414", Slot = "34")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x600261E")]
		[Address(RVA = "0xDCA450", Offset = "0xDCA450", VA = "0xDCA450", Slot = "17")]
		protected override void Initialise()
		{
		}

		[Token(Token = "0x600261F")]
		[Address(RVA = "0xDCA4FC", Offset = "0xDCA4FC", VA = "0xDCA4FC", Slot = "35")]
		protected virtual Vector3 GetNewRotation()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002620")]
		[Address(RVA = "0xDCA990", Offset = "0xDCA990", VA = "0xDCA990", Slot = "36")]
		protected virtual Vector3 BuildFollowAxisVector(float givenAngle)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002621")]
		[Address(RVA = "0xDCA9E8", Offset = "0xDCA9E8", VA = "0xDCA9E8", Slot = "37")]
		protected virtual Vector3 CalculateSpiralAngle(Vector3 originPoint, Vector3 originalGrabPoint, Vector3 currentGrabPoint)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002622")]
		[Address(RVA = "0xDCACB8", Offset = "0xDCACB8", VA = "0xDCACB8", Slot = "38")]
		protected virtual Vector3 CalculateAngle(Vector3 originPoint, Vector3 originalGrabPoint, Vector3 currentGrabPoint)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002623")]
		[Address(RVA = "0xDCAEB8", Offset = "0xDCAEB8", VA = "0xDCAEB8", Slot = "39")]
		protected virtual float CalculateAngle(Vector3 originPoint, Vector3 previousPoint, Vector3 currentPoint, Vector3 direction)
		{
			return default(float);
		}

		[Token(Token = "0x6002624")]
		[Address(RVA = "0xDCB008", Offset = "0xDCB008", VA = "0xDCB008", Slot = "40")]
		protected virtual void UpdateRotation(Vector3 newRotation, bool additive, bool updateCurrentRotation)
		{
		}

		[Token(Token = "0x6002625")]
		[Address(RVA = "0xDCB370", Offset = "0xDCB370", VA = "0xDCB370", Slot = "41")]
		protected virtual bool WithinRotationLimit(Vector3 rotationCheck)
		{
			return default(bool);
		}

		[Token(Token = "0x6002626")]
		[Address(RVA = "0xDCB460", Offset = "0xDCB460", VA = "0xDCB460", Slot = "42")]
		protected virtual float AngleSigned(Vector3 v1, Vector3 v2, Vector3 n)
		{
			return default(float);
		}

		[Token(Token = "0x6002627")]
		[Address(RVA = "0xDCB5B4", Offset = "0xDCB5B4", VA = "0xDCB5B4", Slot = "43")]
		protected virtual bool StillTouching()
		{
			return default(bool);
		}

		[Token(Token = "0x6002628")]
		[Address(RVA = "0xDCB71C", Offset = "0xDCB71C", VA = "0xDCB71C", Slot = "44")]
		public virtual void CancelUpdateRotation()
		{
		}

		[Token(Token = "0x6002629")]
		[Address(RVA = "0xDCB730", Offset = "0xDCB730", VA = "0xDCB730", Slot = "45")]
		public virtual void CancelDecelerateRotation()
		{
		}

		[Token(Token = "0x600262A")]
		[Address(RVA = "0xDCB744", Offset = "0xDCB744", VA = "0xDCB744", Slot = "46")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x66ECA8", Offset = "0x66ECA8")]
		protected virtual IEnumerator RotateToAngle(Vector3 targetAngle, float rotationSpeed)
		{
			return null;
		}

		[Token(Token = "0x600262B")]
		[Address(RVA = "0xDCB830", Offset = "0xDCB830", VA = "0xDCB830", Slot = "47")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x66ED0C", Offset = "0x66ED0C")]
		protected virtual IEnumerator DecelerateRotation()
		{
			return null;
		}

		[Token(Token = "0x600262C")]
		[Address(RVA = "0xDCB8D0", Offset = "0xDCB8D0", VA = "0xDCB8D0", Slot = "48")]
		protected virtual float GetLimitedAngle(float angle)
		{
			return default(float);
		}

		[Token(Token = "0x600262D")]
		[Address(RVA = "0xDCB8F0", Offset = "0xDCB8F0", VA = "0xDCB8F0", Slot = "49")]
		protected virtual void CheckAngleLimits()
		{
		}

		[Token(Token = "0x600262E")]
		[Address(RVA = "0xDCB9C4", Offset = "0xDCB9C4", VA = "0xDCB9C4", Slot = "50")]
		protected virtual void EmitEvents()
		{
		}

		[Token(Token = "0x600262F")]
		[Address(RVA = "0xDCBD3C", Offset = "0xDCBD3C", VA = "0xDCBD3C", Slot = "51")]
		protected virtual RotateTransformGrabAttachEventArgs SetEventPayload()
		{
			return default(RotateTransformGrabAttachEventArgs);
		}

		[Token(Token = "0x6002630")]
		[Address(RVA = "0xDCBE38", Offset = "0xDCBE38", VA = "0xDCBE38")]
		public VRTK_RotateTransformGrabAttach()
		{
		}
	}
	[Token(Token = "0x20004BB")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x643940", Offset = "0x643940")]
	public class VRTK_RotatorTrackGrabAttach : VRTK_TrackObjectGrabAttach
	{
		[Token(Token = "0x6002631")]
		[Address(RVA = "0xDCC394", Offset = "0xDCC394", VA = "0xDCC394", Slot = "11")]
		public override void StopGrab(bool applyGrabbingObjectVelocity)
		{
		}

		[Token(Token = "0x6002632")]
		[Address(RVA = "0xDCC3EC", Offset = "0xDCC3EC", VA = "0xDCC3EC", Slot = "14")]
		public override void ProcessFixedUpdate()
		{
		}

		[Token(Token = "0x6002633")]
		[Address(RVA = "0xDCC53C", Offset = "0xDCC53C", VA = "0xDCC53C", Slot = "24")]
		protected override Transform SetTrackPointOrientation(Transform givenTrackPoint, Transform currentGrabbedObject, Transform controllerPoint)
		{
			return null;
		}

		[Token(Token = "0x6002634")]
		[Address(RVA = "0xDCC608", Offset = "0xDCC608", VA = "0xDCC608")]
		public VRTK_RotatorTrackGrabAttach()
		{
		}
	}
	[Token(Token = "0x20004BC")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x643978", Offset = "0x643978")]
	public class VRTK_SpringJointGrabAttach : VRTK_BaseJointGrabAttach
	{
		[Token(Token = "0x400219C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x66171C", Offset = "0x66171C")]
		public float breakForce;

		[Token(Token = "0x400219D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x661754", Offset = "0x661754")]
		public float strength;

		[Token(Token = "0x400219E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x66178C", Offset = "0x66178C")]
		public float damper;

		[Token(Token = "0x6002635")]
		[Address(RVA = "0xDCC640", Offset = "0xDCC640", VA = "0xDCC640", Slot = "25")]
		protected override void CreateJoint(GameObject obj)
		{
		}

		[Token(Token = "0x6002636")]
		[Address(RVA = "0xDCC780", Offset = "0xDCC780", VA = "0xDCC780")]
		public VRTK_SpringJointGrabAttach()
		{
		}
	}
	[Token(Token = "0x20004BD")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x6439B0", Offset = "0x6439B0")]
	public class VRTK_TrackObjectGrabAttach : VRTK_BaseGrabAttach
	{
		[Token(Token = "0x400219F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6617C4", Offset = "0x6617C4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6617C4", Offset = "0x6617C4")]
		public float detachDistance;

		[Token(Token = "0x40021A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x661834", Offset = "0x661834")]
		public float velocityLimit;

		[Token(Token = "0x40021A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x66186C", Offset = "0x66186C")]
		public float angularVelocityLimit;

		[Token(Token = "0x40021A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6618A4", Offset = "0x6618A4")]
		public float maxDistanceDelta;

		[Token(Token = "0x40021A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		protected bool isReleasable;

		[Token(Token = "0x6002637")]
		[Address(RVA = "0xDCC3A0", Offset = "0xDCC3A0", VA = "0xDCC3A0", Slot = "11")]
		public override void StopGrab(bool applyGrabbingObjectVelocity)
		{
		}

		[Token(Token = "0x6002638")]
		[Address(RVA = "0xDCC7A0", Offset = "0xDCC7A0", VA = "0xDCC7A0", Slot = "12")]
		public override Transform CreateTrackPoint(Transform controllerPoint, GameObject currentGrabbedObject, GameObject currentGrabbingObject, ref bool customTrackPoint)
		{
			return null;
		}

		[Token(Token = "0x6002639")]
		[Address(RVA = "0xDCCA8C", Offset = "0xDCCA8C", VA = "0xDCCA8C", Slot = "13")]
		public override void ProcessUpdate()
		{
		}

		[Token(Token = "0x600263A")]
		[Address(RVA = "0xDCCC0C", Offset = "0xDCCC0C", VA = "0xDCCC0C", Slot = "14")]
		public override void ProcessFixedUpdate()
		{
		}

		[Token(Token = "0x600263B")]
		[Address(RVA = "0xDCD0EC", Offset = "0xDCD0EC", VA = "0xDCD0EC", Slot = "17")]
		protected override void Initialise()
		{
		}

		[Token(Token = "0x600263C")]
		[Address(RVA = "0xDCD0FC", Offset = "0xDCD0FC", VA = "0xDCD0FC", Slot = "24")]
		protected virtual Transform SetTrackPointOrientation(Transform givenTrackPoint, Transform currentGrabbedObject, Transform controllerPoint)
		{
			return null;
		}

		[Token(Token = "0x600263D")]
		[Address(RVA = "0xDCC624", Offset = "0xDCC624", VA = "0xDCC624")]
		public VRTK_TrackObjectGrabAttach()
		{
		}
	}
}
namespace VRTK.Controllables
{
	[Token(Token = "0x20004BE")]
	public struct ControllableEventArgs
	{
		[Token(Token = "0x40021A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Collider interactingCollider;

		[Token(Token = "0x40021A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public VRTK_InteractTouch interactingTouchScript;

		[Token(Token = "0x40021A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float value;

		[Token(Token = "0x40021A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float normalizedValue;
	}
	[Token(Token = "0x20004BF")]
	public delegate void ControllableEventHandler(object sender, ControllableEventArgs e);
	[Token(Token = "0x20004C0")]
	public abstract class VRTK_BaseControllable : MonoBehaviour
	{
		[Token(Token = "0x200088E")]
		public enum OperatingAxis
		{
			[Token(Token = "0x4002C4C")]
			xAxis,
			[Token(Token = "0x4002C4D")]
			yAxis,
			[Token(Token = "0x4002C4E")]
			zAxis
		}

		[Token(Token = "0x200088F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x646140", Offset = "0x646140")]
		private sealed class <ProcessAtEndOfFrame>d__64 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002C4F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002C50")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002C51")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VRTK_BaseControllable <>4__this;

			[Token(Token = "0x17000370")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6003402")]
				[Address(RVA = "0xCD6FEC", Offset = "0xCD6FEC", VA = "0xCD6FEC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000371")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003404")]
				[Address(RVA = "0xCD705C", Offset = "0xCD705C", VA = "0xCD705C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60033FF")]
			[Address(RVA = "0xCD6BC0", Offset = "0xCD6BC0", VA = "0xCD6BC0")]
			[DebuggerHidden]
			public <ProcessAtEndOfFrame>d__64(int <>1__state)
			{
			}

			[Token(Token = "0x6003400")]
			[Address(RVA = "0xCD6EE4", Offset = "0xCD6EE4", VA = "0xCD6EE4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003401")]
			[Address(RVA = "0xCD6EE8", Offset = "0xCD6EE8", VA = "0xCD6EE8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003403")]
			[Address(RVA = "0xCD6FF4", Offset = "0xCD6FF4", VA = "0xCD6FF4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40021A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6618DC", Offset = "0x6618DC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6618DC", Offset = "0x6618DC")]
		public OperatingAxis operateAxis;

		[Token(Token = "0x40021A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x66193C", Offset = "0x66193C")]
		public GameObject[] ignoreCollisionsWith;

		[Token(Token = "0x40021AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x661974", Offset = "0x661974")]
		public GameObject[] excludeColliderCheckOn;

		[Token(Token = "0x40021AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6619AC", Offset = "0x6619AC")]
		public float equalityFidelity;

		[Token(Token = "0x40021B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		protected Vector3 originalLocalPosition;

		[Token(Token = "0x40021B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		protected Quaternion originalLocalRotation;

		[Token(Token = "0x40021B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		protected Vector3 actualTransformPosition;

		[Token(Token = "0x40021B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		protected bool atMinLimit;

		[Token(Token = "0x40021B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x91")]
		protected bool atMaxLimit;

		[Token(Token = "0x40021B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		protected Collider interactingCollider;

		[Token(Token = "0x40021B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		protected VRTK_InteractTouch interactingTouchScript;

		[Token(Token = "0x40021B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		protected Collider[] controlColliders;

		[Token(Token = "0x40021BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		protected bool createCustomCollider;

		[Token(Token = "0x40021BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		protected Coroutine processAtEndOfFrame;

		[Token(Token = "0x40021BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		protected float storedValue;

		[Token(Token = "0x14000154")]
		public event ControllableEventHandler ValueChanged
		{
			[Token(Token = "0x6002642")]
			[Address(RVA = "0xCD5BCC", Offset = "0xCD5BCC", VA = "0xCD5BCC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66ED70", Offset = "0x66ED70")]
			add
			{
			}
			[Token(Token = "0x6002643")]
			[Address(RVA = "0xCD5CB8", Offset = "0xCD5CB8", VA = "0xCD5CB8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66ED80", Offset = "0x66ED80")]
			remove
			{
			}
		}

		[Token(Token = "0x14000155")]
		public event ControllableEventHandler RestingPointReached
		{
			[Token(Token = "0x6002644")]
			[Address(RVA = "0xCD5DA4", Offset = "0xCD5DA4", VA = "0xCD5DA4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66ED90", Offset = "0x66ED90")]
			add
			{
			}
			[Token(Token = "0x6002645")]
			[Address(RVA = "0xCD5E90", Offset = "0xCD5E90", VA = "0xCD5E90")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66EDA0", Offset = "0x66EDA0")]
			remove
			{
			}
		}

		[Token(Token = "0x14000156")]
		public event ControllableEventHandler MinLimitReached
		{
			[Token(Token = "0x6002646")]
			[Address(RVA = "0xCD5F7C", Offset = "0xCD5F7C", VA = "0xCD5F7C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66EDB0", Offset = "0x66EDB0")]
			add
			{
			}
			[Token(Token = "0x6002647")]
			[Address(RVA = "0xCD6068", Offset = "0xCD6068", VA = "0xCD6068")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66EDC0", Offset = "0x66EDC0")]
			remove
			{
			}
		}

		[Token(Token = "0x14000157")]
		public event ControllableEventHandler MinLimitExited
		{
			[Token(Token = "0x6002648")]
			[Address(RVA = "0xCD6154", Offset = "0xCD6154", VA = "0xCD6154")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66EDD0", Offset = "0x66EDD0")]
			add
			{
			}
			[Token(Token = "0x6002649")]
			[Address(RVA = "0xCD6240", Offset = "0xCD6240", VA = "0xCD6240")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66EDE0", Offset = "0x66EDE0")]
			remove
			{
			}
		}

		[Token(Token = "0x14000158")]
		public event ControllableEventHandler MaxLimitReached
		{
			[Token(Token = "0x600264A")]
			[Address(RVA = "0xCD632C", Offset = "0xCD632C", VA = "0xCD632C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66EDF0", Offset = "0x66EDF0")]
			add
			{
			}
			[Token(Token = "0x600264B")]
			[Address(RVA = "0xCD6418", Offset = "0xCD6418", VA = "0xCD6418")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66EE00", Offset = "0x66EE00")]
			remove
			{
			}
		}

		[Token(Token = "0x14000159")]
		public event ControllableEventHandler MaxLimitExited
		{
			[Token(Token = "0x600264C")]
			[Address(RVA = "0xCD6504", Offset = "0xCD6504", VA = "0xCD6504")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66EE10", Offset = "0x66EE10")]
			add
			{
			}
			[Token(Token = "0x600264D")]
			[Address(RVA = "0xCD65F0", Offset = "0xCD65F0", VA = "0xCD65F0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66EE20", Offset = "0x66EE20")]
			remove
			{
			}
		}

		[Token(Token = "0x600264E")]
		[Address(RVA = "0xCD66DC", Offset = "0xCD66DC", VA = "0xCD66DC", Slot = "4")]
		public virtual void OnValueChanged(ControllableEventArgs e)
		{
		}

		[Token(Token = "0x600264F")]
		[Address(RVA = "0xCD671C", Offset = "0xCD671C", VA = "0xCD671C", Slot = "5")]
		public virtual void OnRestingPointReached(ControllableEventArgs e)
		{
		}

		[Token(Token = "0x6002650")]
		[Address(RVA = "0xCD675C", Offset = "0xCD675C", VA = "0xCD675C", Slot = "6")]
		public virtual void OnMinLimitReached(ControllableEventArgs e)
		{
		}

		[Token(Token = "0x6002651")]
		[Address(RVA = "0xCD679C", Offset = "0xCD679C", VA = "0xCD679C", Slot = "7")]
		public virtual void OnMinLimitExited(ControllableEventArgs e)
		{
		}

		[Token(Token = "0x6002652")]
		[Address(RVA = "0xCD67DC", Offset = "0xCD67DC", VA = "0xCD67DC", Slot = "8")]
		public virtual void OnMaxLimitReached(ControllableEventArgs e)
		{
		}

		[Token(Token = "0x6002653")]
		[Address(RVA = "0xCD681C", Offset = "0xCD681C", VA = "0xCD681C", Slot = "9")]
		public virtual void OnMaxLimitExited(ControllableEventArgs e)
		{
		}

		[Token(Token = "0x6002654")]
		public abstract float GetValue();

		[Token(Token = "0x6002655")]
		public abstract float GetNormalizedValue();

		[Token(Token = "0x6002656")]
		public abstract void SetValue(float value);

		[Token(Token = "0x6002657")]
		public abstract bool IsResting();

		[Token(Token = "0x6002658")]
		[Address(RVA = "0xCD685C", Offset = "0xCD685C", VA = "0xCD685C", Slot = "14")]
		public virtual bool AtMinLimit()
		{
			return default(bool);
		}

		[Token(Token = "0x6002659")]
		[Address(RVA = "0xCD6864", Offset = "0xCD6864", VA = "0xCD6864", Slot = "15")]
		public virtual bool AtMaxLimit()
		{
			return default(bool);
		}

		[Token(Token = "0x600265A")]
		[Address(RVA = "0xCD686C", Offset = "0xCD686C", VA = "0xCD686C", Slot = "16")]
		public virtual Vector3 GetOriginalLocalPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x600265B")]
		[Address(RVA = "0xCD6878", Offset = "0xCD6878", VA = "0xCD6878", Slot = "17")]
		public virtual Quaternion GetOriginalLocalRotation()
		{
			return default(Quaternion);
		}

		[Token(Token = "0x600265C")]
		[Address(RVA = "0xCD6884", Offset = "0xCD6884", VA = "0xCD6884", Slot = "18")]
		public virtual Collider[] GetControlColliders()
		{
			return null;
		}

		[Token(Token = "0x600265D")]
		[Address(RVA = "0xCD688C", Offset = "0xCD688C", VA = "0xCD688C", Slot = "19")]
		public virtual Collider GetInteractingCollider()
		{
			return null;
		}

		[Token(Token = "0x600265E")]
		[Address(RVA = "0xCD6894", Offset = "0xCD6894", VA = "0xCD6894", Slot = "20")]
		public virtual VRTK_InteractTouch GetInteractingTouch()
		{
			return null;
		}

		[Token(Token = "0x600265F")]
		protected abstract void EmitEvents();

		[Token(Token = "0x6002660")]
		[Address(RVA = "0xCD689C", Offset = "0xCD689C", VA = "0xCD689C", Slot = "22")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6002661")]
		[Address(RVA = "0xCC8A44", Offset = "0xCC8A44", VA = "0xCC8A44", Slot = "23")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6002662")]
		[Address(RVA = "0xCC8AE0", Offset = "0xCC8AE0", VA = "0xCC8AE0", Slot = "24")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x6002663")]
		[Address(RVA = "0xCC899C", Offset = "0xCC899C", VA = "0xCC899C", Slot = "25")]
		protected virtual void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x6002664")]
		[Address(RVA = "0xCD6920", Offset = "0xCD6920", VA = "0xCD6920", Slot = "26")]
		protected virtual void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x6002665")]
		[Address(RVA = "0xCD696C", Offset = "0xCD696C", VA = "0xCD696C", Slot = "27")]
		protected virtual void OnCollisionExit(Collision collision)
		{
		}

		[Token(Token = "0x6002666")]
		[Address(RVA = "0xCD69B8", Offset = "0xCD69B8", VA = "0xCD69B8", Slot = "28")]
		protected virtual void OnTriggerEnter(Collider collider)
		{
		}

		[Token(Token = "0x6002667")]
		[Address(RVA = "0xCD69C8", Offset = "0xCD69C8", VA = "0xCD69C8", Slot = "29")]
		protected virtual void OnTriggerExit(Collider collider)
		{
		}

		[Token(Token = "0x6002668")]
		[Address(RVA = "0xCC90C4", Offset = "0xCC90C4", VA = "0xCC90C4", Slot = "30")]
		protected virtual void OnTouched(Collider collider)
		{
		}

		[Token(Token = "0x6002669")]
		[Address(RVA = "0xCD69D8", Offset = "0xCD69D8", VA = "0xCD69D8", Slot = "31")]
		protected virtual void OnUntouched(Collider collider)
		{
		}

		[Token(Token = "0x600266A")]
		[Address(RVA = "0xCD69E0", Offset = "0xCD69E0", VA = "0xCD69E0", Slot = "32")]
		protected virtual void SetupCollider()
		{
		}

		[Token(Token = "0x600266B")]
		[Address(RVA = "0xCD6B48", Offset = "0xCD6B48", VA = "0xCD6B48", Slot = "33")]
		protected virtual void ConfigureColliders()
		{
		}

		[Token(Token = "0x600266C")]
		[Address(RVA = "0xCD6B4C", Offset = "0xCD6B4C", VA = "0xCD6B4C", Slot = "34")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x66EE30", Offset = "0x66EE30")]
		protected virtual IEnumerator ProcessAtEndOfFrame()
		{
			return null;
		}

		[Token(Token = "0x600266D")]
		[Address(RVA = "0xCD6BEC", Offset = "0xCD6BEC", VA = "0xCD6BEC", Slot = "35")]
		protected virtual void ManageCollisions(bool ignore)
		{
		}

		[Token(Token = "0x600266E")]
		[Address(RVA = "0xCD6EA8", Offset = "0xCD6EA8", VA = "0xCD6EA8", Slot = "36")]
		protected virtual Vector3 AxisDirection(bool local = false)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600266F")]
		[Address(RVA = "0xCCBB94", Offset = "0xCCBB94", VA = "0xCCBB94", Slot = "37")]
		protected virtual ControllableEventArgs EventPayload()
		{
			return default(ControllableEventArgs);
		}

		[Token(Token = "0x6002670")]
		[Address(RVA = "0xCC9890", Offset = "0xCC9890", VA = "0xCC9890")]
		protected VRTK_BaseControllable()
		{
		}
	}
}
namespace VRTK.Controllables.PhysicsBased
{
	[Token(Token = "0x20004C1")]
	public abstract class VRTK_BasePhysicsControllable : VRTK_BaseControllable
	{
		[Token(Token = "0x40021BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x661A44", Offset = "0x661A44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x661A44", Offset = "0x661A44")]
		public Rigidbody connectedTo;

		[Token(Token = "0x40021BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		protected Rigidbody controlRigidbody;

		[Token(Token = "0x40021BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		protected bool createCustomRigidbody;

		[Token(Token = "0x40021C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		protected GameObject rigidbodyActivatorContainer;

		[Token(Token = "0x6002671")]
		[Address(RVA = "0xCCF39C", Offset = "0xCCF39C", VA = "0xCCF39C", Slot = "38")]
		public virtual Rigidbody GetControlRigidbody()
		{
			return null;
		}

		[Token(Token = "0x6002672")]
		[Address(RVA = "0xCCF3A4", Offset = "0xCCF3A4", VA = "0xCCF3A4", Slot = "39")]
		public virtual GameObject GetControlActivatorContainer()
		{
			return null;
		}

		[Token(Token = "0x6002673")]
		[Address(RVA = "0xCCF3AC", Offset = "0xCCF3AC", VA = "0xCCF3AC", Slot = "23")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6002674")]
		[Address(RVA = "0xCCF3F0", Offset = "0xCCF3F0", VA = "0xCCF3F0", Slot = "24")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x6002675")]
		[Address(RVA = "0xCCF46C", Offset = "0xCCF46C", VA = "0xCCF46C", Slot = "40")]
		protected virtual void SetupRigidbodyActivator()
		{
		}

		[Token(Token = "0x6002676")]
		[Address(RVA = "0xCCF534", Offset = "0xCCF534", VA = "0xCCF534", Slot = "41")]
		protected virtual void SetupRigidbody()
		{
		}

		[Token(Token = "0x6002677")]
		[Address(RVA = "0xCCF628", Offset = "0xCCF628", VA = "0xCCF628", Slot = "42")]
		protected virtual void ConfigueRigidbody()
		{
		}

		[Token(Token = "0x6002678")]
		[Address(RVA = "0xCCF62C", Offset = "0xCCF62C", VA = "0xCCF62C", Slot = "43")]
		protected virtual void SetRigidbodyVelocity(Vector3 newVelocity)
		{
		}

		[Token(Token = "0x6002679")]
		[Address(RVA = "0xCCF6F8", Offset = "0xCCF6F8", VA = "0xCCF6F8", Slot = "44")]
		protected virtual void SetRigidbodyDrag(float givenDrag)
		{
		}

		[Token(Token = "0x600267A")]
		[Address(RVA = "0xCCF7A8", Offset = "0xCCF7A8", VA = "0xCCF7A8", Slot = "45")]
		protected virtual void SetRigidbodyAngularDrag(float givenDrag)
		{
		}

		[Token(Token = "0x600267B")]
		[Address(RVA = "0xCCF858", Offset = "0xCCF858", VA = "0xCCF858", Slot = "46")]
		protected virtual void SetRigidbodyGravity(bool useGravity)
		{
		}

		[Token(Token = "0x600267C")]
		[Address(RVA = "0xCCF908", Offset = "0xCCF908", VA = "0xCCF908", Slot = "47")]
		protected virtual void SetRigidbodyKinematic(bool isKinematic)
		{
		}

		[Token(Token = "0x600267D")]
		[Address(RVA = "0xCCF9B8", Offset = "0xCCF9B8", VA = "0xCCF9B8", Slot = "48")]
		protected virtual void SetRigidbodyConstraints(RigidbodyConstraints newConstraints)
		{
		}

		[Token(Token = "0x600267E")]
		[Address(RVA = "0xCCFA68", Offset = "0xCCFA68", VA = "0xCCFA68", Slot = "49")]
		protected virtual void SetRigidbodyCollisionDetectionMode(CollisionDetectionMode newDetectionMode)
		{
		}

		[Token(Token = "0x600267F")]
		[Address(RVA = "0xCCFB18", Offset = "0xCCFB18", VA = "0xCCFB18")]
		protected VRTK_BasePhysicsControllable()
		{
		}
	}
	[Token(Token = "0x20004C2")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x6439E8", Offset = "0x6439E8")]
	public class VRTK_PhysicsPusher : VRTK_BasePhysicsControllable
	{
		[Token(Token = "0x40021C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x661AA4", Offset = "0x661AA4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x661AA4", Offset = "0x661AA4")]
		public float pressedDistance;

		[Token(Token = "0x40021C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x661B04", Offset = "0x661B04")]
		public bool stayPressed;

		[Token(Token = "0x40021C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x661B3C", Offset = "0x661B3C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x661B3C", Offset = "0x661B3C")]
		public float minMaxLimitThreshold;

		[Token(Token = "0x40021C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x661B90", Offset = "0x661B90")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x661B90", Offset = "0x661B90")]
		public float restingPosition;

		[Token(Token = "0x40021C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x661BE4", Offset = "0x661BE4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x661BE4", Offset = "0x661BE4")]
		public float restingPositionThreshold;

		[Token(Token = "0x40021C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x661C38", Offset = "0x661C38")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x661C38", Offset = "0x661C38")]
		public float positionTarget;

		[Token(Token = "0x40021C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x661C8C", Offset = "0x661C8C")]
		public float targetForce;

		[Token(Token = "0x40021C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		protected ConfigurableJoint controlJoint;

		[Token(Token = "0x40021C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		protected bool createControlJoint;

		[Token(Token = "0x40021CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		protected Vector3 previousLocalPosition;

		[Token(Token = "0x40021CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		protected bool pressedDown;

		[Token(Token = "0x40021CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		protected float previousPositionTarget;

		[Token(Token = "0x6002680")]
		[Address(RVA = "0xCCFB1C", Offset = "0xCCFB1C", VA = "0xCCFB1C", Slot = "10")]
		public override float GetValue()
		{
			return default(float);
		}

		[Token(Token = "0x6002681")]
		[Address(RVA = "0xCCFB80", Offset = "0xCCFB80", VA = "0xCCFB80", Slot = "11")]
		public override float GetNormalizedValue()
		{
			return default(float);
		}

		[Token(Token = "0x6002682")]
		[Address(RVA = "0xCCFC1C", Offset = "0xCCFC1C", VA = "0xCCFC1C", Slot = "12")]
		public override void SetValue(float value)
		{
		}

		[Token(Token = "0x6002683")]
		[Address(RVA = "0xCCFC20", Offset = "0xCCFC20", VA = "0xCCFC20", Slot = "13")]
		public override bool IsResting()
		{
			return default(bool);
		}

		[Token(Token = "0x6002684")]
		[Address(RVA = "0xCCFCD8", Offset = "0xCCFCD8", VA = "0xCCFCD8", Slot = "50")]
		public virtual ConfigurableJoint GetControlJoint()
		{
			return null;
		}

		[Token(Token = "0x6002685")]
		[Address(RVA = "0xCCFCE0", Offset = "0xCCFCE0", VA = "0xCCFCE0", Slot = "25")]
		protected override void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x6002686")]
		[Address(RVA = "0xCCFF34", Offset = "0xCCFF34", VA = "0xCCFF34", Slot = "23")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6002687")]
		[Address(RVA = "0xCD0000", Offset = "0xCD0000", VA = "0xCD0000", Slot = "24")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x6002688")]
		[Address(RVA = "0xCD009C", Offset = "0xCD009C", VA = "0xCD009C", Slot = "51")]
		protected virtual void FixedUpdate()
		{
		}

		[Token(Token = "0x6002689")]
		[Address(RVA = "0xCD0128", Offset = "0xCD0128", VA = "0xCD0128", Slot = "52")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x600268A")]
		[Address(RVA = "0xCD01C0", Offset = "0xCD01C0", VA = "0xCD01C0", Slot = "42")]
		protected override void ConfigueRigidbody()
		{
		}

		[Token(Token = "0x600268B")]
		[Address(RVA = "0xCD021C", Offset = "0xCD021C", VA = "0xCD021C", Slot = "21")]
		protected override void EmitEvents()
		{
		}

		[Token(Token = "0x600268C")]
		[Address(RVA = "0xCD0744", Offset = "0xCD0744", VA = "0xCD0744", Slot = "53")]
		protected virtual void ForceLocalPosition()
		{
		}

		[Token(Token = "0x600268D")]
		[Address(RVA = "0xCD0878", Offset = "0xCD0878", VA = "0xCD0878", Slot = "54")]
		protected virtual void CheckUnpress()
		{
		}

		[Token(Token = "0x600268E")]
		[Address(RVA = "0xCD08C8", Offset = "0xCD08C8", VA = "0xCD08C8", Slot = "55")]
		protected virtual void SetTargetPosition()
		{
		}

		[Token(Token = "0x600268F")]
		[Address(RVA = "0xCD0AC8", Offset = "0xCD0AC8", VA = "0xCD0AC8", Slot = "56")]
		protected virtual Vector3 PressedPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002690")]
		[Address(RVA = "0xCD0BAC", Offset = "0xCD0BAC", VA = "0xCD0BAC", Slot = "57")]
		protected virtual void SetupJoint()
		{
		}

		[Token(Token = "0x6002691")]
		[Address(RVA = "0xCD0FC4", Offset = "0xCD0FC4", VA = "0xCD0FC4", Slot = "58")]
		protected virtual void StayPressed()
		{
		}

		[Token(Token = "0x6002692")]
		[Address(RVA = "0xCD1008", Offset = "0xCD1008", VA = "0xCD1008")]
		public VRTK_PhysicsPusher()
		{
		}
	}
	[Token(Token = "0x20004C3")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x643A20", Offset = "0x643A20")]
	public class VRTK_PhysicsRotator : VRTK_BasePhysicsControllable
	{
		[Token(Token = "0x2000890")]
		public enum GrabMechanic
		{
			[Token(Token = "0x4002C53")]
			TrackObject,
			[Token(Token = "0x4002C54")]
			RotatorTrack
		}

		[Token(Token = "0x40021CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x661CC4", Offset = "0x661CC4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x661CC4", Offset = "0x661CC4")]
		public Transform hingePoint;

		[Token(Token = "0x40021CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x661D24", Offset = "0x661D24")]
		[AttributeAttribute(Name = "MinMaxRangeAttribute", RVA = "0x661D24", Offset = "0x661D24")]
		public Limits2D angleLimits;

		[Token(Token = "0x40021CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x661D80", Offset = "0x661D80")]
		public float minMaxThresholdAngle;

		[Token(Token = "0x40021D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x661DB8", Offset = "0x661DB8")]
		public float restingAngle;

		[Token(Token = "0x40021D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x661DF0", Offset = "0x661DF0")]
		public float forceRestingAngleThreshold;

		[Token(Token = "0x40021D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x661E28", Offset = "0x661E28")]
		public float angleTarget;

		[Token(Token = "0x40021D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x661E60", Offset = "0x661E60")]
		public bool isLocked;

		[Token(Token = "0x40021D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x661E98", Offset = "0x661E98")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x661E98", Offset = "0x661E98")]
		public Limits2D stepValueRange;

		[Token(Token = "0x40021D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x661EF8", Offset = "0x661EF8")]
		public float stepSize;

		[Token(Token = "0x40021D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x661F30", Offset = "0x661F30")]
		public bool useStepAsValue;

		[Token(Token = "0x40021D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11D")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x661F68", Offset = "0x661F68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x661F68", Offset = "0x661F68")]
		public bool snapToStep;

		[Token(Token = "0x40021D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x661FC8", Offset = "0x661FC8")]
		public float snapForce;

		[Token(Token = "0x40021D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x662000", Offset = "0x662000")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x662000", Offset = "0x662000")]
		public GrabMechanic grabMechanic;

		[Token(Token = "0x40021DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x662060", Offset = "0x662060")]
		public bool precisionGrab;

		[Token(Token = "0x40021DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x662098", Offset = "0x662098")]
		public float detachDistance;

		[Token(Token = "0x40021DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6620D0", Offset = "0x6620D0")]
		public bool useFrictionOverrides;

		[Token(Token = "0x40021DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x662108", Offset = "0x662108")]
		public float grabbedFriction;

		[Token(Token = "0x40021DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x662140", Offset = "0x662140")]
		public float releasedFriction;

		[Token(Token = "0x40021DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x662178", Offset = "0x662178")]
		public GameObject[] onlyInteractWith;

		[Token(Token = "0x40021E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		protected VRTK_InteractableObject controlInteractableObject;

		[Token(Token = "0x40021E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		protected VRTK_TrackObjectGrabAttach controlGrabAttach;

		[Token(Token = "0x40021E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		protected VRTK_SwapControllerGrabAction controlSecondaryGrabAction;

		[Token(Token = "0x40021E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		protected bool createControlInteractableObject;

		[Token(Token = "0x40021E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		protected HingeJoint controlJoint;

		[Token(Token = "0x40021E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		protected JointSpring controlJointSpring;

		[Token(Token = "0x40021E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
		protected JointLimits controlJointLimits;

		[Token(Token = "0x40021E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		protected bool createControlJoint;

		[Token(Token = "0x40021E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19C")]
		protected RigidbodyConstraints savedConstraints;

		[Token(Token = "0x40021E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		protected bool stillLocked;

		[Token(Token = "0x40021EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A1")]
		protected bool stillResting;

		[Token(Token = "0x40021EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A4")]
		protected float previousValue;

		[Token(Token = "0x40021EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		protected float previousAngleTarget;

		[Token(Token = "0x40021ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		private ControllableAudio _controllableAudio;

		[Token(Token = "0x40021EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		private float _initTime;

		[Token(Token = "0x40021EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1BC")]
		private bool _initInProgress;

		[Token(Token = "0x6002693")]
		[Address(RVA = "0xCD1030", Offset = "0xCD1030", VA = "0xCD1030", Slot = "10")]
		public override float GetValue()
		{
			return default(float);
		}

		[Token(Token = "0x6002694")]
		[Address(RVA = "0xCD11B4", Offset = "0xCD11B4", VA = "0xCD11B4", Slot = "11")]
		public override float GetNormalizedValue()
		{
			return default(float);
		}

		[Token(Token = "0x6002695")]
		[Address(RVA = "0xCD1220", Offset = "0xCD1220", VA = "0xCD1220", Slot = "12")]
		public override void SetValue(float value)
		{
		}

		[Token(Token = "0x6002696")]
		[Address(RVA = "0xCD1230", Offset = "0xCD1230", VA = "0xCD1230", Slot = "50")]
		public virtual float GetStepValue(float currentValue)
		{
			return default(float);
		}

		[Token(Token = "0x6002697")]
		[Address(RVA = "0xCD13A0", Offset = "0xCD13A0", VA = "0xCD13A0", Slot = "51")]
		public virtual void SetAngleTargetWithStepValue(float givenStepValue)
		{
		}

		[Token(Token = "0x6002698")]
		[Address(RVA = "0xCD1424", Offset = "0xCD1424", VA = "0xCD1424", Slot = "52")]
		public virtual void SetRestingAngleWithStepValue(float givenStepValue)
		{
		}

		[Token(Token = "0x6002699")]
		[Address(RVA = "0xCD148C", Offset = "0xCD148C", VA = "0xCD148C", Slot = "53")]
		public virtual float GetAngleFromStepValue(float givenStepValue)
		{
			return default(float);
		}

		[Token(Token = "0x600269A")]
		[Address(RVA = "0xCD1638", Offset = "0xCD1638", VA = "0xCD1638", Slot = "13")]
		public override bool IsResting()
		{
			return default(bool);
		}

		[Token(Token = "0x600269B")]
		[Address(RVA = "0xCD16A8", Offset = "0xCD16A8", VA = "0xCD16A8", Slot = "54")]
		public virtual HingeJoint GetControlJoint()
		{
			return null;
		}

		[Token(Token = "0x600269C")]
		[Address(RVA = "0xCD16B0", Offset = "0xCD16B0", VA = "0xCD16B0", Slot = "55")]
		public virtual VRTK_InteractableObject GetControlInteractableObject()
		{
			return null;
		}

		[Token(Token = "0x600269D")]
		[Address(RVA = "0xCD16B8", Offset = "0xCD16B8", VA = "0xCD16B8", Slot = "25")]
		protected override void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x600269E")]
		[Address(RVA = "0xCD19D8", Offset = "0xCD19D8", VA = "0xCD19D8", Slot = "23")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x600269F")]
		[Address(RVA = "0xCD1B64", Offset = "0xCD1B64", VA = "0xCD1B64", Slot = "24")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x60026A0")]
		[Address(RVA = "0xCD1C68", Offset = "0xCD1C68", VA = "0xCD1C68", Slot = "56")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x60026A1")]
		[Address(RVA = "0xCD1D88", Offset = "0xCD1D88", VA = "0xCD1D88", Slot = "21")]
		protected override void EmitEvents()
		{
		}

		[Token(Token = "0x60026A2")]
		[Address(RVA = "0xCD20E0", Offset = "0xCD20E0", VA = "0xCD20E0", Slot = "37")]
		protected override ControllableEventArgs EventPayload()
		{
			return default(ControllableEventArgs);
		}

		[Token(Token = "0x60026A3")]
		[Address(RVA = "0xCD2184", Offset = "0xCD2184", VA = "0xCD2184", Slot = "57")]
		protected virtual void SetupJoint()
		{
		}

		[Token(Token = "0x60026A4")]
		[Address(RVA = "0xCD242C", Offset = "0xCD242C", VA = "0xCD242C", Slot = "58")]
		protected virtual void SetJointLimits()
		{
		}

		[Token(Token = "0x60026A5")]
		[Address(RVA = "0xCD2538", Offset = "0xCD2538", VA = "0xCD2538", Slot = "59")]
		protected virtual void ManageSpring(bool activate, float springTarget)
		{
		}

		[Token(Token = "0x60026A6")]
		[Address(RVA = "0xCD2634", Offset = "0xCD2634", VA = "0xCD2634", Slot = "60")]
		protected virtual void SetupInteractableObject()
		{
		}

		[Token(Token = "0x60026A7")]
		[Address(RVA = "0xCD27EC", Offset = "0xCD27EC", VA = "0xCD27EC", Slot = "61")]
		protected virtual void SetupGrabMechanic()
		{
		}

		[Token(Token = "0x60026A8")]
		[Address(RVA = "0xCD28D8", Offset = "0xCD28D8", VA = "0xCD28D8", Slot = "62")]
		protected virtual void SetGrabMechanicParameters()
		{
		}

		[Token(Token = "0x60026A9")]
		[Address(RVA = "0xCD2988", Offset = "0xCD2988", VA = "0xCD2988", Slot = "63")]
		protected virtual void SetupSecondaryAction()
		{
		}

		[Token(Token = "0x60026AA")]
		[Address(RVA = "0xCD2A28", Offset = "0xCD2A28", VA = "0xCD2A28", Slot = "64")]
		protected virtual void ManageInteractableObjectListeners(bool state)
		{
		}

		[Token(Token = "0x60026AB")]
		[Address(RVA = "0xCD2CB4", Offset = "0xCD2CB4", VA = "0xCD2CB4", Slot = "65")]
		protected virtual void InteractableObjectTouched(object sender, InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x60026AC")]
		[Address(RVA = "0xCD2D74", Offset = "0xCD2D74", VA = "0xCD2D74", Slot = "66")]
		protected virtual void InteractableObjectUntouched(object sender, InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x60026AD")]
		[Address(RVA = "0xCD2E34", Offset = "0xCD2E34", VA = "0xCD2E34", Slot = "67")]
		protected virtual void InteractableObjectGrabbed(object sender, InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x60026AE")]
		[Address(RVA = "0xCD2E70", Offset = "0xCD2E70", VA = "0xCD2E70", Slot = "68")]
		protected virtual void InteractableObjectUngrabbed(object sender, InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x60026AF")]
		[Address(RVA = "0xCD2E80", Offset = "0xCD2E80", VA = "0xCD2E80", Slot = "69")]
		protected virtual void AttemptMove()
		{
		}

		[Token(Token = "0x60026B0")]
		[Address(RVA = "0xCD2EC8", Offset = "0xCD2EC8", VA = "0xCD2EC8", Slot = "70")]
		protected virtual void AttemptRelease()
		{
		}

		[Token(Token = "0x60026B1")]
		[Address(RVA = "0xCD2EDC", Offset = "0xCD2EDC", VA = "0xCD2EDC", Slot = "71")]
		protected virtual void SetFrictions(float frictionValue)
		{
		}

		[Token(Token = "0x60026B2")]
		[Address(RVA = "0xCD2F48", Offset = "0xCD2F48", VA = "0xCD2F48", Slot = "72")]
		protected virtual void CheckLock()
		{
		}

		[Token(Token = "0x60026B3")]
		[Address(RVA = "0xCD3034", Offset = "0xCD3034", VA = "0xCD3034", Slot = "73")]
		protected virtual void SetAngleWithNormalizedValue(float normalizedTargetAngle)
		{
		}

		[Token(Token = "0x60026B4")]
		[Address(RVA = "0xCD31A8", Offset = "0xCD31A8", VA = "0xCD31A8", Slot = "74")]
		protected virtual void UpdateToAngle(float givenTargetAngle)
		{
		}

		[Token(Token = "0x60026B5")]
		[Address(RVA = "0xCD3250", Offset = "0xCD3250", VA = "0xCD3250", Slot = "75")]
		protected virtual void ForceRestingPosition()
		{
		}

		[Token(Token = "0x60026B6")]
		[Address(RVA = "0xCD33E0", Offset = "0xCD33E0", VA = "0xCD33E0", Slot = "76")]
		protected virtual void ForceAngleTarget()
		{
		}

		[Token(Token = "0x60026B7")]
		[Address(RVA = "0xCD3458", Offset = "0xCD3458", VA = "0xCD3458", Slot = "77")]
		protected virtual void ForceSnapToStep()
		{
		}

		[Token(Token = "0x60026B8")]
		[Address(RVA = "0xCD35F4", Offset = "0xCD35F4", VA = "0xCD35F4", Slot = "78")]
		protected virtual bool IsGrabbed()
		{
			return default(bool);
		}

		[Token(Token = "0x60026B9")]
		[Address(RVA = "0xCD36A0", Offset = "0xCD36A0", VA = "0xCD36A0")]
		public VRTK_PhysicsRotator()
		{
		}
	}
	[Token(Token = "0x20004C4")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x643A58", Offset = "0x643A58")]
	public class VRTK_PhysicsSlider : VRTK_BasePhysicsControllable
	{
		[Token(Token = "0x40021F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6621B0", Offset = "0x6621B0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6621B0", Offset = "0x6621B0")]
		public float maximumLength;

		[Token(Token = "0x40021F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x662210", Offset = "0x662210")]
		public float minMaxThreshold;

		[Token(Token = "0x40021F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x662248", Offset = "0x662248")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x662248", Offset = "0x662248")]
		public float positionTarget;

		[Token(Token = "0x40021F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x66229C", Offset = "0x66229C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x66229C", Offset = "0x66229C")]
		public float restingPosition;

		[Token(Token = "0x40021F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6622F0", Offset = "0x6622F0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6622F0", Offset = "0x6622F0")]
		public float forceRestingPositionThreshold;

		[Token(Token = "0x40021F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x662344", Offset = "0x662344")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x662344", Offset = "0x662344")]
		public Limits2D stepValueRange;

		[Token(Token = "0x40021F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6623A4", Offset = "0x6623A4")]
		public float stepSize;

		[Token(Token = "0x40021F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6623DC", Offset = "0x6623DC")]
		public bool useStepAsValue;

		[Token(Token = "0x40021F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10D")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x662414", Offset = "0x662414")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x662414", Offset = "0x662414")]
		public bool snapToStep;

		[Token(Token = "0x40021F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x662474", Offset = "0x662474")]
		public float snapForce;

		[Token(Token = "0x40021FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6624AC", Offset = "0x6624AC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6624AC", Offset = "0x6624AC")]
		public bool precisionGrab;

		[Token(Token = "0x40021FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x66250C", Offset = "0x66250C")]
		public float detachDistance;

		[Token(Token = "0x40021FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x662544", Offset = "0x662544")]
		public float releaseFriction;

		[Token(Token = "0x40021FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x66257C", Offset = "0x66257C")]
		public GameObject[] onlyInteractWith;

		[Token(Token = "0x40021FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		public VRTK_ControllerEvents controllerEvents;

		[Token(Token = "0x40021FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		protected ConfigurableJoint controlJoint;

		[Token(Token = "0x4002200")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		protected bool createControlJoint;

		[Token(Token = "0x4002201")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		protected VRTK_InteractableObject controlInteractableObject;

		[Token(Token = "0x4002202")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		protected VRTK_TrackObjectGrabAttach controlGrabAttach;

		[Token(Token = "0x4002203")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		protected VRTK_SwapControllerGrabAction controlSecondaryGrabAction;

		[Token(Token = "0x4002204")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		protected bool createControlInteractableObject;

		[Token(Token = "0x4002205")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
		protected Vector3 previousLocalPosition;

		[Token(Token = "0x4002206")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		protected float previousPositionTarget;

		[Token(Token = "0x4002207")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
		protected bool stillResting;

		[Token(Token = "0x60026BA")]
		[Address(RVA = "0xCD3788", Offset = "0xCD3788", VA = "0xCD3788", Slot = "10")]
		public override float GetValue()
		{
			return default(float);
		}

		[Token(Token = "0x60026BB")]
		[Address(RVA = "0xCD37EC", Offset = "0xCD37EC", VA = "0xCD37EC", Slot = "11")]
		public override float GetNormalizedValue()
		{
			return default(float);
		}

		[Token(Token = "0x60026BC")]
		[Address(RVA = "0xCD3888", Offset = "0xCD3888", VA = "0xCD3888", Slot = "12")]
		public override void SetValue(float value)
		{
		}

		[Token(Token = "0x60026BD")]
		[Address(RVA = "0xCD39B4", Offset = "0xCD39B4", VA = "0xCD39B4", Slot = "50")]
		public virtual float GetStepValue(float currentValue)
		{
			return default(float);
		}

		[Token(Token = "0x60026BE")]
		[Address(RVA = "0xCD3B0C", Offset = "0xCD3B0C", VA = "0xCD3B0C", Slot = "51")]
		public virtual void SetPositionTargetWithStepValue(float givenStepValue)
		{
		}

		[Token(Token = "0x60026BF")]
		[Address(RVA = "0xCD3B84", Offset = "0xCD3B84", VA = "0xCD3B84", Slot = "52")]
		public virtual void SetRestingPositionWithStepValue(float givenStepValue)
		{
		}

		[Token(Token = "0x60026C0")]
		[Address(RVA = "0xCD3BEC", Offset = "0xCD3BEC", VA = "0xCD3BEC", Slot = "53")]
		public virtual float GetPositionFromStepValue(float givenStepValue)
		{
			return default(float);
		}

		[Token(Token = "0x60026C1")]
		[Address(RVA = "0xCD3D38", Offset = "0xCD3D38", VA = "0xCD3D38", Slot = "13")]
		public override bool IsResting()
		{
			return default(bool);
		}

		[Token(Token = "0x60026C2")]
		[Address(RVA = "0xCD3DA8", Offset = "0xCD3DA8", VA = "0xCD3DA8", Slot = "54")]
		public virtual ConfigurableJoint GetControlJoint()
		{
			return null;
		}

		[Token(Token = "0x60026C3")]
		[Address(RVA = "0xCD3DB0", Offset = "0xCD3DB0", VA = "0xCD3DB0", Slot = "55")]
		public virtual VRTK_InteractableObject GetControlInteractableObject()
		{
			return null;
		}

		[Token(Token = "0x60026C4")]
		[Address(RVA = "0xCD3DB8", Offset = "0xCD3DB8", VA = "0xCD3DB8", Slot = "25")]
		protected override void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x60026C5")]
		[Address(RVA = "0xCD3F30", Offset = "0xCD3F30", VA = "0xCD3F30", Slot = "23")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x60026C6")]
		[Address(RVA = "0xCD4028", Offset = "0xCD4028", VA = "0xCD4028", Slot = "24")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x60026C7")]
		[Address(RVA = "0xCD4120", Offset = "0xCD4120", VA = "0xCD4120", Slot = "56")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x60026C8")]
		[Address(RVA = "0xCD425C", Offset = "0xCD425C", VA = "0xCD425C", Slot = "42")]
		protected override void ConfigueRigidbody()
		{
		}

		[Token(Token = "0x60026C9")]
		[Address(RVA = "0xCD42C8", Offset = "0xCD42C8", VA = "0xCD42C8", Slot = "21")]
		protected override void EmitEvents()
		{
		}

		[Token(Token = "0x60026CA")]
		[Address(RVA = "0xCD45B0", Offset = "0xCD45B0", VA = "0xCD45B0", Slot = "37")]
		protected override ControllableEventArgs EventPayload()
		{
			return default(ControllableEventArgs);
		}

		[Token(Token = "0x60026CB")]
		[Address(RVA = "0xCD4654", Offset = "0xCD4654", VA = "0xCD4654", Slot = "57")]
		protected virtual void ForceRestingPosition()
		{
		}

		[Token(Token = "0x60026CC")]
		[Address(RVA = "0xCD4744", Offset = "0xCD4744", VA = "0xCD4744", Slot = "58")]
		protected virtual void ForcePositionTarget()
		{
		}

		[Token(Token = "0x60026CD")]
		[Address(RVA = "0xCD47C0", Offset = "0xCD47C0", VA = "0xCD47C0", Slot = "59")]
		protected virtual void ForceSnapToStep()
		{
		}

		[Token(Token = "0x60026CE")]
		[Address(RVA = "0xCD49A8", Offset = "0xCD49A8", VA = "0xCD49A8", Slot = "60")]
		protected virtual void SetPositionWithNormalizedValue(float givenTargetPosition)
		{
		}

		[Token(Token = "0x60026CF")]
		[Address(RVA = "0xCD4AC8", Offset = "0xCD4AC8", VA = "0xCD4AC8", Slot = "61")]
		protected virtual void SnapToPosition(float positionOnAxis)
		{
		}

		[Token(Token = "0x60026D0")]
		[Address(RVA = "0xCD4C40", Offset = "0xCD4C40", VA = "0xCD4C40", Slot = "62")]
		protected virtual Vector3 MaximumLength()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60026D1")]
		[Address(RVA = "0xCD4D24", Offset = "0xCD4D24", VA = "0xCD4D24", Slot = "63")]
		protected virtual void SetupInteractableObject()
		{
		}

		[Token(Token = "0x60026D2")]
		[Address(RVA = "0xCD4EE0", Offset = "0xCD4EE0", VA = "0xCD4EE0", Slot = "64")]
		protected virtual void SetupGrabMechanic()
		{
		}

		[Token(Token = "0x60026D3")]
		[Address(RVA = "0xCD4F88", Offset = "0xCD4F88", VA = "0xCD4F88", Slot = "65")]
		protected virtual void SetGrabMechanicParameters()
		{
		}

		[Token(Token = "0x60026D4")]
		[Address(RVA = "0xCD5038", Offset = "0xCD5038", VA = "0xCD5038", Slot = "66")]
		protected virtual void SetupSecondaryAction()
		{
		}

		[Token(Token = "0x60026D5")]
		[Address(RVA = "0xCD50D8", Offset = "0xCD50D8", VA = "0xCD50D8", Slot = "67")]
		protected virtual void SetupJoint()
		{
		}

		[Token(Token = "0x60026D6")]
		[Address(RVA = "0xCD5430", Offset = "0xCD5430", VA = "0xCD5430", Slot = "68")]
		protected virtual void EnableJointDriver()
		{
		}

		[Token(Token = "0x60026D7")]
		[Address(RVA = "0xCD5444", Offset = "0xCD5444", VA = "0xCD5444", Slot = "69")]
		protected virtual void DisableJointDriver()
		{
		}

		[Token(Token = "0x60026D8")]
		[Address(RVA = "0xCD5458", Offset = "0xCD5458", VA = "0xCD5458", Slot = "70")]
		protected virtual void SetJointDrive(float driverForce)
		{
		}

		[Token(Token = "0x60026D9")]
		[Address(RVA = "0xCD5560", Offset = "0xCD5560", VA = "0xCD5560", Slot = "71")]
		protected virtual void ManageInteractableObjectListeners(bool state)
		{
		}

		[Token(Token = "0x60026DA")]
		[Address(RVA = "0xCD57EC", Offset = "0xCD57EC", VA = "0xCD57EC", Slot = "72")]
		protected virtual void InteractableObjectTouched(object sender, InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x60026DB")]
		[Address(RVA = "0xCD5898", Offset = "0xCD5898", VA = "0xCD5898", Slot = "73")]
		protected virtual void InteractableObjectUntouched(object sender, InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x60026DC")]
		[Address(RVA = "0xCD5944", Offset = "0xCD5944", VA = "0xCD5944", Slot = "74")]
		protected virtual void InteractableObjectGrabbed(object sender, InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x60026DD")]
		[Address(RVA = "0xCD5980", Offset = "0xCD5980", VA = "0xCD5980", Slot = "75")]
		protected virtual void InteractableObjectUngrabbed(object sender, InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x60026DE")]
		[Address(RVA = "0xCD5990", Offset = "0xCD5990", VA = "0xCD5990", Slot = "76")]
		protected virtual void AttemptMove()
		{
		}

		[Token(Token = "0x60026DF")]
		[Address(RVA = "0xCD59D0", Offset = "0xCD59D0", VA = "0xCD59D0", Slot = "77")]
		protected virtual void AttemptRelease()
		{
		}

		[Token(Token = "0x60026E0")]
		[Address(RVA = "0xCD5A5C", Offset = "0xCD5A5C", VA = "0xCD5A5C", Slot = "78")]
		protected virtual bool IsGrabbed()
		{
			return default(bool);
		}

		[Token(Token = "0x60026E1")]
		[Address(RVA = "0xCD5B08", Offset = "0xCD5B08", VA = "0xCD5B08")]
		public VRTK_PhysicsSlider()
		{
		}
	}
}
namespace VRTK.Controllables.ArtificialBased
{
	[Token(Token = "0x20004C5")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x643A90", Offset = "0x643A90")]
	public class VRTK_ArtificialPusher : VRTK_BaseControllable
	{
		[Token(Token = "0x2000891")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x646150", Offset = "0x646150")]
		private sealed class <PositionLerp>d__30 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002C55")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002C56")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002C57")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VRTK_ArtificialPusher <>4__this;

			[Token(Token = "0x4002C58")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Vector3 targetPosition;

			[Token(Token = "0x4002C59")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public float moveSpeed;

			[Token(Token = "0x17000372")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6003408")]
				[Address(RVA = "0xCC9C08", Offset = "0xCC9C08", VA = "0xCC9C08", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000373")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600340A")]
				[Address(RVA = "0xCC9C78", Offset = "0xCC9C78", VA = "0xCC9C78", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003405")]
			[Address(RVA = "0xCC9494", Offset = "0xCC9494", VA = "0xCC9494")]
			[DebuggerHidden]
			public <PositionLerp>d__30(int <>1__state)
			{
			}

			[Token(Token = "0x6003406")]
			[Address(RVA = "0xCC992C", Offset = "0xCC992C", VA = "0xCC992C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003407")]
			[Address(RVA = "0xCC9930", Offset = "0xCC9930", VA = "0xCC9930", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003409")]
			[Address(RVA = "0xCC9C10", Offset = "0xCC9C10", VA = "0xCC9C10", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000892")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x646160", Offset = "0x646160")]
		private sealed class <SetTargetPositionAtEndOfFrame>d__31 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002C5A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002C5B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002C5C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VRTK_ArtificialPusher <>4__this;

			[Token(Token = "0x17000374")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600340E")]
				[Address(RVA = "0xCC9D38", Offset = "0xCC9D38", VA = "0xCC9D38", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000375")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003410")]
				[Address(RVA = "0xCC9DA8", Offset = "0xCC9DA8", VA = "0xCC9DA8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600340B")]
			[Address(RVA = "0xCC9534", Offset = "0xCC9534", VA = "0xCC9534")]
			[DebuggerHidden]
			public <SetTargetPositionAtEndOfFrame>d__31(int <>1__state)
			{
			}

			[Token(Token = "0x600340C")]
			[Address(RVA = "0xCC9C80", Offset = "0xCC9C80", VA = "0xCC9C80", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600340D")]
			[Address(RVA = "0xCC9C84", Offset = "0xCC9C84", VA = "0xCC9C84", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600340F")]
			[Address(RVA = "0xCC9D40", Offset = "0xCC9D40", VA = "0xCC9D40", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002208")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6625B4", Offset = "0x6625B4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6625B4", Offset = "0x6625B4")]
		public float pressedDistance;

		[Token(Token = "0x4002209")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x662614", Offset = "0x662614")]
		[SerializeField]
		protected bool stayPressed;

		[Token(Token = "0x400220A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x662660", Offset = "0x662660")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x662660", Offset = "0x662660")]
		public float minMaxLimitThreshold;

		[Token(Token = "0x400220B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6626B4", Offset = "0x6626B4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6626B4", Offset = "0x6626B4")]
		public float restingPosition;

		[Token(Token = "0x400220C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x662708", Offset = "0x662708")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x662708", Offset = "0x662708")]
		public float restingPositionThreshold;

		[Token(Token = "0x400220D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x66275C", Offset = "0x66275C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x66275C", Offset = "0x66275C")]
		[SerializeField]
		protected float positionTarget;

		[Token(Token = "0x400220E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6627C0", Offset = "0x6627C0")]
		public float pressSpeed;

		[Token(Token = "0x400220F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6627F8", Offset = "0x6627F8")]
		public float returnSpeed;

		[Token(Token = "0x4002210")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		protected Coroutine positionLerpRoutine;

		[Token(Token = "0x4002211")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		protected Coroutine setTargetPositionRoutine;

		[Token(Token = "0x4002212")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		protected float vectorEqualityThreshold;

		[Token(Token = "0x4002213")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		protected bool isPressed;

		[Token(Token = "0x4002214")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFD")]
		protected bool isMoving;

		[Token(Token = "0x4002215")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFE")]
		protected bool isTouched;

		[Token(Token = "0x60026E2")]
		[Address(RVA = "0xCC84CC", Offset = "0xCC84CC", VA = "0xCC84CC", Slot = "10")]
		public override float GetValue()
		{
			return default(float);
		}

		[Token(Token = "0x60026E3")]
		[Address(RVA = "0xCC8530", Offset = "0xCC8530", VA = "0xCC8530", Slot = "11")]
		public override float GetNormalizedValue()
		{
			return default(float);
		}

		[Token(Token = "0x60026E4")]
		[Address(RVA = "0xCC85CC", Offset = "0xCC85CC", VA = "0xCC85CC", Slot = "12")]
		public override void SetValue(float value)
		{
		}

		[Token(Token = "0x60026E5")]
		[Address(RVA = "0xCC85D0", Offset = "0xCC85D0", VA = "0xCC85D0", Slot = "13")]
		public override bool IsResting()
		{
			return default(bool);
		}

		[Token(Token = "0x60026E6")]
		[Address(RVA = "0xCC8688", Offset = "0xCC8688", VA = "0xCC8688", Slot = "38")]
		public virtual void SetStayPressed(bool state)
		{
		}

		[Token(Token = "0x60026E7")]
		[Address(RVA = "0xCC86E4", Offset = "0xCC86E4", VA = "0xCC86E4", Slot = "39")]
		public virtual void SetPositionTarget(float normalizedTarget)
		{
		}

		[Token(Token = "0x60026E8")]
		[Address(RVA = "0xCC8770", Offset = "0xCC8770", VA = "0xCC8770", Slot = "25")]
		protected override void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x60026E9")]
		[Address(RVA = "0xCC89F4", Offset = "0xCC89F4", VA = "0xCC89F4", Slot = "23")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x60026EA")]
		[Address(RVA = "0xCC8A9C", Offset = "0xCC8A9C", VA = "0xCC8A9C", Slot = "24")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x60026EB")]
		[Address(RVA = "0xCC8C04", Offset = "0xCC8C04", VA = "0xCC8C04", Slot = "21")]
		protected override void EmitEvents()
		{
		}

		[Token(Token = "0x60026EC")]
		[Address(RVA = "0xCC8E24", Offset = "0xCC8E24", VA = "0xCC8E24", Slot = "30")]
		protected override void OnTouched(Collider collider)
		{
		}

		[Token(Token = "0x60026ED")]
		[Address(RVA = "0xCC9138", Offset = "0xCC9138", VA = "0xCC9138", Slot = "31")]
		protected override void OnUntouched(Collider collider)
		{
		}

		[Token(Token = "0x60026EE")]
		[Address(RVA = "0xCC9140", Offset = "0xCC9140", VA = "0xCC9140", Slot = "40")]
		protected virtual void SetTargetPosition()
		{
		}

		[Token(Token = "0x60026EF")]
		[Address(RVA = "0xCC9288", Offset = "0xCC9288", VA = "0xCC9288", Slot = "41")]
		protected virtual Vector3 PressedPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60026F0")]
		[Address(RVA = "0xCC936C", Offset = "0xCC936C", VA = "0xCC936C", Slot = "42")]
		protected virtual void CancelPositionLerp()
		{
		}

		[Token(Token = "0x60026F1")]
		[Address(RVA = "0xCC93A0", Offset = "0xCC93A0", VA = "0xCC93A0", Slot = "43")]
		protected virtual void CancelSetTargetPosition()
		{
		}

		[Token(Token = "0x60026F2")]
		[Address(RVA = "0xCC93D4", Offset = "0xCC93D4", VA = "0xCC93D4", Slot = "44")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x66EE94", Offset = "0x66EE94")]
		protected virtual IEnumerator PositionLerp(Vector3 targetPosition, float moveSpeed)
		{
			return null;
		}

		[Token(Token = "0x60026F3")]
		[Address(RVA = "0xCC94C0", Offset = "0xCC94C0", VA = "0xCC94C0", Slot = "45")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x66EEF8", Offset = "0x66EEF8")]
		protected virtual IEnumerator SetTargetPositionAtEndOfFrame()
		{
			return null;
		}

		[Token(Token = "0x60026F4")]
		[Address(RVA = "0xCC9560", Offset = "0xCC9560", VA = "0xCC9560", Slot = "46")]
		protected virtual void ManageAtPressedPosition()
		{
		}

		[Token(Token = "0x60026F5")]
		[Address(RVA = "0xCC95C0", Offset = "0xCC95C0", VA = "0xCC95C0", Slot = "47")]
		protected virtual void ManageAtOriginPosition()
		{
		}

		[Token(Token = "0x60026F6")]
		[Address(RVA = "0xCC9614", Offset = "0xCC9614", VA = "0xCC9614", Slot = "48")]
		protected virtual bool AtOriginPosition()
		{
			return default(bool);
		}

		[Token(Token = "0x60026F7")]
		[Address(RVA = "0xCC9660", Offset = "0xCC9660", VA = "0xCC9660", Slot = "49")]
		protected virtual bool AtPressedPosition()
		{
			return default(bool);
		}

		[Token(Token = "0x60026F8")]
		[Address(RVA = "0xCC96EC", Offset = "0xCC96EC", VA = "0xCC96EC", Slot = "50")]
		public virtual bool AtTargetPosition(Vector3 targetPosition)
		{
			return default(bool);
		}

		[Token(Token = "0x60026F9")]
		[Address(RVA = "0xCC9758", Offset = "0xCC9758", VA = "0xCC9758", Slot = "51")]
		protected virtual void ResetInteractor()
		{
		}

		[Token(Token = "0x60026FA")]
		[Address(RVA = "0xCC9760", Offset = "0xCC9760", VA = "0xCC9760", Slot = "52")]
		protected virtual void SetToRestingPosition()
		{
		}

		[Token(Token = "0x60026FB")]
		[Address(RVA = "0xCC985C", Offset = "0xCC985C", VA = "0xCC985C")]
		public VRTK_ArtificialPusher()
		{
		}
	}
	[Token(Token = "0x20004C6")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x643AC8", Offset = "0x643AC8")]
	public class VRTK_ArtificialRotator : VRTK_BaseControllable
	{
		[Token(Token = "0x4002216")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x662830", Offset = "0x662830")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x662830", Offset = "0x662830")]
		public Transform hingePoint;

		[Token(Token = "0x4002217")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x662890", Offset = "0x662890")]
		public Limits2D angleLimits;

		[Token(Token = "0x4002218")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6628C8", Offset = "0x6628C8")]
		public bool freeRotate;

		[Token(Token = "0x4002219")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x662900", Offset = "0x662900")]
		public float minMaxThresholdAngle;

		[Token(Token = "0x400221A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x662938", Offset = "0x662938")]
		public float restingAngle;

		[Token(Token = "0x400221B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x662970", Offset = "0x662970")]
		public float forceRestingAngleThreshold;

		[Token(Token = "0x400221C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6629A8", Offset = "0x6629A8")]
		[SerializeField]
		protected float angleTarget;

		[Token(Token = "0x400221D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6629F4", Offset = "0x6629F4")]
		public bool isLocked;

		[Token(Token = "0x400221E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x662A2C", Offset = "0x662A2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x662A2C", Offset = "0x662A2C")]
		public Limits2D stepValueRange;

		[Token(Token = "0x400221F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x662A8C", Offset = "0x662A8C")]
		public float stepSize;

		[Token(Token = "0x4002220")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x662AC4", Offset = "0x662AC4")]
		public bool useStepAsValue;

		[Token(Token = "0x4002221")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFD")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x662AFC", Offset = "0x662AFC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x662AFC", Offset = "0x662AFC")]
		public bool snapToStep;

		[Token(Token = "0x4002222")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x662B5C", Offset = "0x662B5C")]
		public float snapForce;

		[Token(Token = "0x4002223")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x662B94", Offset = "0x662B94")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x662B94", Offset = "0x662B94")]
		public float twiddleTimeout;

		[Token(Token = "0x4002224")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x662BF4", Offset = "0x662BF4")]
		public float twiddleAngle;

		[Token(Token = "0x4002225")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x662C2C", Offset = "0x662C2C")]
		public bool twiddleOnlyWhenGrabbed;

		[Token(Token = "0x4002226")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10D")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x662C64", Offset = "0x662C64")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x662C64", Offset = "0x662C64")]
		public bool precisionGrab;

		[Token(Token = "0x4002227")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x662CC4", Offset = "0x662CC4")]
		public float detachDistance;

		[Token(Token = "0x4002228")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x662CFC", Offset = "0x662CFC")]
		public VRTK_RotateTransformGrabAttach.RotationType rotationAction;

		[Token(Token = "0x4002229")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		public bool _includeFollowAttachPoint;

		[Token(Token = "0x400222A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x662D34", Offset = "0x662D34")]
		public float maximumSpeed;

		[Token(Token = "0x400222B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x662D6C", Offset = "0x662D6C")]
		public float grabbedFriction;

		[Token(Token = "0x400222C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x662DA4", Offset = "0x662DA4")]
		public float releasedFriction;

		[Token(Token = "0x400222D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x662DDC", Offset = "0x662DDC")]
		public GameObject[] onlyInteractWith;

		[Token(Token = "0x400222E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x662E14", Offset = "0x662E14")]
		public VRTK_BaseControllable[] lockOutControllable;

		[Token(Token = "0x400222F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		protected VRTK_InteractableObject controlInteractableObject;

		[Token(Token = "0x4002230")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		protected VRTK_RotateTransformGrabAttach controlGrabAttach;

		[Token(Token = "0x4002231")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		protected VRTK_SwapControllerGrabAction controlSecondaryGrabAction;

		[Token(Token = "0x4002232")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		protected bool createInteractableObject;

		[Token(Token = "0x4002233")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		protected GameObject rotatorContainer;

		[Token(Token = "0x4002234")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		protected bool rotationReset;

		[Token(Token = "0x4002235")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x161")]
		protected bool stillResting;

		[Token(Token = "0x4002236")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
		protected float previousValue;

		[Token(Token = "0x4002237")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		protected float previousAngleTarget;

		[Token(Token = "0x4002238")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		protected Transform savedParent;

		[Token(Token = "0x4002239")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		protected float lastTouchedTime;

		[Token(Token = "0x400223A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
		protected float twiddleTotalAngle;

		[Token(Token = "0x1400015A")]
		public event ControllableEventHandler TwiddleCompleted
		{
			[Token(Token = "0x60026FC")]
			[Address(RVA = "0xCC9DB0", Offset = "0xCC9DB0", VA = "0xCC9DB0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66EF5C", Offset = "0x66EF5C")]
			add
			{
			}
			[Token(Token = "0x60026FD")]
			[Address(RVA = "0xCC9EA0", Offset = "0xCC9EA0", VA = "0xCC9EA0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66EF6C", Offset = "0x66EF6C")]
			remove
			{
			}
		}

		[Token(Token = "0x60026FE")]
		[Address(RVA = "0xCC9F90", Offset = "0xCC9F90", VA = "0xCC9F90")]
		public void OnTwiddleCompleted(ControllableEventArgs e)
		{
		}

		[Token(Token = "0x60026FF")]
		[Address(RVA = "0xCCAA30", Offset = "0xCCAA30", VA = "0xCCAA30", Slot = "10")]
		public override float GetValue()
		{
			return default(float);
		}

		[Token(Token = "0x6002700")]
		[Address(RVA = "0xCCAAD8", Offset = "0xCCAAD8", VA = "0xCCAAD8", Slot = "11")]
		public override float GetNormalizedValue()
		{
			return default(float);
		}

		[Token(Token = "0x6002701")]
		[Address(RVA = "0xCCAB44", Offset = "0xCCAB44", VA = "0xCCAB44", Slot = "12")]
		public override void SetValue(float value)
		{
		}

		[Token(Token = "0x6002702")]
		[Address(RVA = "0xCCAB54", Offset = "0xCCAB54", VA = "0xCCAB54", Slot = "38")]
		public virtual GameObject GetContainer()
		{
			return null;
		}

		[Token(Token = "0x6002703")]
		[Address(RVA = "0xCCAB5C", Offset = "0xCCAB5C", VA = "0xCCAB5C", Slot = "39")]
		public virtual float GetStepValue(float currentValue)
		{
			return default(float);
		}

		[Token(Token = "0x6002704")]
		[Address(RVA = "0xCCACCC", Offset = "0xCCACCC", VA = "0xCCACCC", Slot = "40")]
		public virtual void SetAngleTargetWithStepValue(float givenStepValue)
		{
		}

		[Token(Token = "0x6002705")]
		[Address(RVA = "0xCCAD4C", Offset = "0xCCAD4C", VA = "0xCCAD4C", Slot = "41")]
		public virtual void SetRestingAngleWithStepValue(float givenStepValue)
		{
		}

		[Token(Token = "0x6002706")]
		[Address(RVA = "0xCCADB4", Offset = "0xCCADB4", VA = "0xCCADB4", Slot = "42")]
		public virtual float GetAngleFromStepValue(float givenStepValue)
		{
			return default(float);
		}

		[Token(Token = "0x6002707")]
		[Address(RVA = "0xCCAF1C", Offset = "0xCCAF1C", VA = "0xCCAF1C", Slot = "43")]
		public virtual void SetAngleTarget(float newAngle)
		{
		}

		[Token(Token = "0x6002708")]
		[Address(RVA = "0xCCB044", Offset = "0xCCB044", VA = "0xCCB044", Slot = "13")]
		public override bool IsResting()
		{
			return default(bool);
		}

		[Token(Token = "0x6002709")]
		[Address(RVA = "0xCCB0B4", Offset = "0xCCB0B4", VA = "0xCCB0B4", Slot = "44")]
		public virtual VRTK_InteractableObject GetControlInteractableObject()
		{
			return null;
		}

		[Token(Token = "0x600270A")]
		[Address(RVA = "0xCCB0BC", Offset = "0xCCB0BC", VA = "0xCCB0BC", Slot = "25")]
		protected override void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x600270B")]
		[Address(RVA = "0xCCB3DC", Offset = "0xCCB3DC", VA = "0xCCB3DC", Slot = "23")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x600270C")]
		[Address(RVA = "0xCCB568", Offset = "0xCCB568", VA = "0xCCB568", Slot = "24")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x600270D")]
		[Address(RVA = "0xCCB628", Offset = "0xCCB628", VA = "0xCCB628", Slot = "21")]
		protected override void EmitEvents()
		{
		}

		[Token(Token = "0x600270E")]
		[Address(RVA = "0xCCBAF0", Offset = "0xCCBAF0", VA = "0xCCBAF0", Slot = "37")]
		protected override ControllableEventArgs EventPayload()
		{
			return default(ControllableEventArgs);
		}

		[Token(Token = "0x600270F")]
		[Address(RVA = "0xCCBBF0", Offset = "0xCCBBF0", VA = "0xCCBBF0", Slot = "45")]
		protected virtual void SetupParentContainer()
		{
		}

		[Token(Token = "0x6002710")]
		[Address(RVA = "0xCCC254", Offset = "0xCCC254", VA = "0xCCC254", Slot = "46")]
		protected virtual void RemoveParentContainer()
		{
		}

		[Token(Token = "0x6002711")]
		[Address(RVA = "0xCCC304", Offset = "0xCCC304", VA = "0xCCC304", Slot = "47")]
		protected virtual void ResetParentContainer()
		{
		}

		[Token(Token = "0x6002712")]
		[Address(RVA = "0xCCC3E4", Offset = "0xCCC3E4", VA = "0xCCC3E4", Slot = "48")]
		protected virtual void SetupInteractableObject()
		{
		}

		[Token(Token = "0x6002713")]
		[Address(RVA = "0xCCC580", Offset = "0xCCC580", VA = "0xCCC580", Slot = "49")]
		protected virtual void SetupGrabMechanic()
		{
		}

		[Token(Token = "0x6002714")]
		[Address(RVA = "0xCCC68C", Offset = "0xCCC68C", VA = "0xCCC68C", Slot = "50")]
		protected virtual void SetGrabMechanicParameters()
		{
		}

		[Token(Token = "0x6002715")]
		[Address(RVA = "0xCCC7FC", Offset = "0xCCC7FC", VA = "0xCCC7FC", Slot = "51")]
		protected virtual void SetupSecondaryAction()
		{
		}

		[Token(Token = "0x6002716")]
		[Address(RVA = "0xCCC8D4", Offset = "0xCCC8D4", VA = "0xCCC8D4", Slot = "52")]
		protected virtual void ManageInteractableListeners(bool state)
		{
		}

		[Token(Token = "0x6002717")]
		[Address(RVA = "0xCCCA60", Offset = "0xCCCA60", VA = "0xCCCA60", Slot = "53")]
		protected virtual void InteractableObjectGrabbed(object sender, InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x6002718")]
		[Address(RVA = "0xCCCD2C", Offset = "0xCCCD2C", VA = "0xCCCD2C", Slot = "54")]
		protected virtual void InteractableObjectUngrabbed(object sender, InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x6002719")]
		[Address(RVA = "0xCCCD6C", Offset = "0xCCCD6C", VA = "0xCCCD6C", Slot = "55")]
		public virtual void CheckLock()
		{
		}

		[Token(Token = "0x600271A")]
		[Address(RVA = "0xCCCE2C", Offset = "0xCCCE2C", VA = "0xCCCE2C", Slot = "56")]
		protected virtual void ManageGrabbableListeners(bool state)
		{
		}

		[Token(Token = "0x600271B")]
		[Address(RVA = "0xCCCF28", Offset = "0xCCCF28", VA = "0xCCCF28", Slot = "57")]
		protected virtual void GrabMechanicAngleChanged(object sender, RotateTransformGrabAttachEventArgs e)
		{
		}

		[Token(Token = "0x600271C")]
		[Address(RVA = "0xCCD018", Offset = "0xCCD018", VA = "0xCCD018", Slot = "58")]
		protected virtual float SetAngleWithNormalizedValue(float normalizedTargetAngle)
		{
			return default(float);
		}

		[Token(Token = "0x600271D")]
		[Address(RVA = "0xCCD168", Offset = "0xCCD168", VA = "0xCCD168", Slot = "59")]
		protected virtual void ForceRestingPosition()
		{
		}

		[Token(Token = "0x600271E")]
		[Address(RVA = "0xCCD244", Offset = "0xCCD244", VA = "0xCCD244", Slot = "60")]
		protected virtual void ForceSnapToStep()
		{
		}

		[Token(Token = "0x600271F")]
		[Address(RVA = "0xCCD3C8", Offset = "0xCCD3C8", VA = "0xCCD3C8", Slot = "61")]
		public virtual void SetRotation(float newAngle, float speed)
		{
		}

		[Token(Token = "0x6002720")]
		[Address(RVA = "0xCCD438", Offset = "0xCCD438", VA = "0xCCD438", Slot = "62")]
		protected virtual bool IsGrabbed()
		{
			return default(bool);
		}

		[Token(Token = "0x6002721")]
		[Address(RVA = "0xCCD4E4", Offset = "0xCCD4E4", VA = "0xCCD4E4")]
		public VRTK_ArtificialRotator()
		{
		}
	}
	[Token(Token = "0x20004C7")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x643B00", Offset = "0x643B00")]
	public class VRTK_ArtificialSlider : VRTK_BaseControllable
	{
		[Token(Token = "0x2000893")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x646170", Offset = "0x646170")]
		private sealed class <SetPositionTargetAtEndOfFrameRoutine>d__38 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002C5D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002C5E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002C5F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VRTK_ArtificialSlider <>4__this;

			[Token(Token = "0x17000376")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6003414")]
				[Address(RVA = "0xCCF26C", Offset = "0xCCF26C", VA = "0xCCF26C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000377")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003416")]
				[Address(RVA = "0xCCF2DC", Offset = "0xCCF2DC", VA = "0xCCF2DC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003411")]
			[Address(RVA = "0xCCE2C4", Offset = "0xCCE2C4", VA = "0xCCE2C4")]
			[DebuggerHidden]
			public <SetPositionTargetAtEndOfFrameRoutine>d__38(int <>1__state)
			{
			}

			[Token(Token = "0x6003412")]
			[Address(RVA = "0xCCF128", Offset = "0xCCF128", VA = "0xCCF128", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003413")]
			[Address(RVA = "0xCCF12C", Offset = "0xCCF12C", VA = "0xCCF12C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003415")]
			[Address(RVA = "0xCCF274", Offset = "0xCCF274", VA = "0xCCF274", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400223C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x662E5C", Offset = "0x662E5C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x662E5C", Offset = "0x662E5C")]
		public float maximumLength;

		[Token(Token = "0x400223D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x662EBC", Offset = "0x662EBC")]
		public float minMaxThreshold;

		[Token(Token = "0x400223E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x662EF4", Offset = "0x662EF4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x662EF4", Offset = "0x662EF4")]
		[SerializeField]
		protected float positionTarget;

		[Token(Token = "0x400223F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x662F58", Offset = "0x662F58")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x662F58", Offset = "0x662F58")]
		public float restingPosition;

		[Token(Token = "0x4002240")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x662FAC", Offset = "0x662FAC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x662FAC", Offset = "0x662FAC")]
		public float forceRestingPositionThreshold;

		[Token(Token = "0x4002241")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x663000", Offset = "0x663000")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x663000", Offset = "0x663000")]
		public Limits2D stepValueRange;

		[Token(Token = "0x4002242")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x663060", Offset = "0x663060")]
		public float stepSize;

		[Token(Token = "0x4002243")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x663098", Offset = "0x663098")]
		public bool useStepAsValue;

		[Token(Token = "0x4002244")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE5")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6630D0", Offset = "0x6630D0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6630D0", Offset = "0x6630D0")]
		public bool snapToStep;

		[Token(Token = "0x4002245")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x663130", Offset = "0x663130")]
		public float snapForce;

		[Token(Token = "0x4002246")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x663168", Offset = "0x663168")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x663168", Offset = "0x663168")]
		public float trackingSpeed;

		[Token(Token = "0x4002247")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6631C8", Offset = "0x6631C8")]
		public bool precisionGrab;

		[Token(Token = "0x4002248")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x663200", Offset = "0x663200")]
		public float detachDistance;

		[Token(Token = "0x4002249")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x663238", Offset = "0x663238")]
		public float releaseFriction;

		[Token(Token = "0x400224A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x663270", Offset = "0x663270")]
		public GameObject[] onlyInteractWith;

		[Token(Token = "0x400224B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		protected VRTK_InteractableObject controlInteractableObject;

		[Token(Token = "0x400224C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		protected VRTK_MoveTransformGrabAttach controlGrabAttach;

		[Token(Token = "0x400224D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		protected VRTK_SwapControllerGrabAction controlSecondaryGrabAction;

		[Token(Token = "0x400224E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		protected bool createInteractableObject;

		[Token(Token = "0x400224F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		protected Limits2D axisLimits;

		[Token(Token = "0x4002250")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		protected Vector3 previousLocalPosition;

		[Token(Token = "0x4002251")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		protected Coroutine setPositionTargetAtEndOfFrameRoutine;

		[Token(Token = "0x4002252")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		protected bool stillResting;

		[Token(Token = "0x6002722")]
		[Address(RVA = "0xCCD5D8", Offset = "0xCCD5D8", VA = "0xCCD5D8", Slot = "10")]
		public override float GetValue()
		{
			return default(float);
		}

		[Token(Token = "0x6002723")]
		[Address(RVA = "0xCCD63C", Offset = "0xCCD63C", VA = "0xCCD63C", Slot = "11")]
		public override float GetNormalizedValue()
		{
			return default(float);
		}

		[Token(Token = "0x6002724")]
		[Address(RVA = "0xCCD6D8", Offset = "0xCCD6D8", VA = "0xCCD6D8", Slot = "12")]
		public override void SetValue(float value)
		{
		}

		[Token(Token = "0x6002725")]
		[Address(RVA = "0xCCD78C", Offset = "0xCCD78C", VA = "0xCCD78C", Slot = "38")]
		public virtual float GetStepValue(float currentValue)
		{
			return default(float);
		}

		[Token(Token = "0x6002726")]
		[Address(RVA = "0xCCD8E4", Offset = "0xCCD8E4", VA = "0xCCD8E4", Slot = "39")]
		public virtual void SetPositionTarget(float newPositionTarget, float speed)
		{
		}

		[Token(Token = "0x6002727")]
		[Address(RVA = "0xCCD8F8", Offset = "0xCCD8F8", VA = "0xCCD8F8", Slot = "40")]
		public virtual void SetPositionTargetWithStepValue(float givenStepValue, float speed)
		{
		}

		[Token(Token = "0x6002728")]
		[Address(RVA = "0xCCD974", Offset = "0xCCD974", VA = "0xCCD974", Slot = "41")]
		public virtual void SetRestingPositionWithStepValue(float givenStepValue)
		{
		}

		[Token(Token = "0x6002729")]
		[Address(RVA = "0xCCD9DC", Offset = "0xCCD9DC", VA = "0xCCD9DC", Slot = "42")]
		public virtual float GetPositionFromStepValue(float givenStepValue)
		{
			return default(float);
		}

		[Token(Token = "0x600272A")]
		[Address(RVA = "0xCCDAD0", Offset = "0xCCDAD0", VA = "0xCCDAD0", Slot = "13")]
		public override bool IsResting()
		{
			return default(bool);
		}

		[Token(Token = "0x600272B")]
		[Address(RVA = "0xCCDB40", Offset = "0xCCDB40", VA = "0xCCDB40", Slot = "43")]
		public virtual VRTK_InteractableObject GetControlInteractableObject()
		{
			return null;
		}

		[Token(Token = "0x600272C")]
		[Address(RVA = "0xCCDB48", Offset = "0xCCDB48", VA = "0xCCDB48", Slot = "25")]
		protected override void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x600272D")]
		[Address(RVA = "0xCCDCC0", Offset = "0xCCDCC0", VA = "0xCCDCC0", Slot = "23")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x600272E")]
		[Address(RVA = "0xCCDDA0", Offset = "0xCCDDA0", VA = "0xCCDDA0", Slot = "24")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x600272F")]
		[Address(RVA = "0xCCDEC4", Offset = "0xCCDEC4", VA = "0xCCDEC4", Slot = "21")]
		protected override void EmitEvents()
		{
		}

		[Token(Token = "0x6002730")]
		[Address(RVA = "0xCCE1AC", Offset = "0xCCE1AC", VA = "0xCCE1AC", Slot = "37")]
		protected override ControllableEventArgs EventPayload()
		{
			return default(ControllableEventArgs);
		}

		[Token(Token = "0x6002731")]
		[Address(RVA = "0xCCE250", Offset = "0xCCE250", VA = "0xCCE250", Slot = "44")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x66EF7C", Offset = "0x66EF7C")]
		protected virtual IEnumerator SetPositionTargetAtEndOfFrameRoutine()
		{
			return null;
		}

		[Token(Token = "0x6002732")]
		[Address(RVA = "0xCCE2F0", Offset = "0xCCE2F0", VA = "0xCCE2F0", Slot = "45")]
		protected virtual void SetupInteractableObject()
		{
		}

		[Token(Token = "0x6002733")]
		[Address(RVA = "0xCCE490", Offset = "0xCCE490", VA = "0xCCE490", Slot = "46")]
		protected virtual void SetupGrabMechanic()
		{
		}

		[Token(Token = "0x6002734")]
		[Address(RVA = "0xCCE5C0", Offset = "0xCCE5C0", VA = "0xCCE5C0", Slot = "47")]
		protected virtual void SetGrabMechanicParameters()
		{
		}

		[Token(Token = "0x6002735")]
		[Address(RVA = "0xCCE784", Offset = "0xCCE784", VA = "0xCCE784", Slot = "48")]
		protected virtual void SetupSecondaryAction()
		{
		}

		[Token(Token = "0x6002736")]
		[Address(RVA = "0xCCE85C", Offset = "0xCCE85C", VA = "0xCCE85C", Slot = "49")]
		protected virtual Vector3 MaximumLength()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002737")]
		[Address(RVA = "0xCCE940", Offset = "0xCCE940", VA = "0xCCE940", Slot = "50")]
		protected virtual void SetPositionWithNormalizedValue(float givenTargetPosition, float speed)
		{
		}

		[Token(Token = "0x6002738")]
		[Address(RVA = "0xCCEA18", Offset = "0xCCEA18", VA = "0xCCEA18", Slot = "51")]
		protected virtual void SnapToPosition(float positionOnAxis, float speed)
		{
		}

		[Token(Token = "0x6002739")]
		[Address(RVA = "0xCCEBA0", Offset = "0xCCEBA0", VA = "0xCCEBA0", Slot = "52")]
		protected virtual void ManageInteractableListeners(bool state)
		{
		}

		[Token(Token = "0x600273A")]
		[Address(RVA = "0xCCED2C", Offset = "0xCCED2C", VA = "0xCCED2C", Slot = "53")]
		protected virtual void InteractableObjectGrabbed(object sender, InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x600273B")]
		[Address(RVA = "0xCCED3C", Offset = "0xCCED3C", VA = "0xCCED3C", Slot = "54")]
		protected virtual void InteractableObjectUngrabbed(object sender, InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x600273C")]
		[Address(RVA = "0xCCEDE8", Offset = "0xCCEDE8", VA = "0xCCEDE8", Slot = "55")]
		protected virtual bool ForceRestingPosition()
		{
			return default(bool);
		}

		[Token(Token = "0x600273D")]
		[Address(RVA = "0xCCEEA8", Offset = "0xCCEEA8", VA = "0xCCEEA8", Slot = "56")]
		protected virtual bool IsGrabbed()
		{
			return default(bool);
		}

		[Token(Token = "0x600273E")]
		[Address(RVA = "0xCCEF54", Offset = "0xCCEF54", VA = "0xCCEF54", Slot = "57")]
		protected virtual void ManageGrabbableListeners(bool state)
		{
		}

		[Token(Token = "0x600273F")]
		[Address(RVA = "0xCCF050", Offset = "0xCCF050", VA = "0xCCF050", Slot = "58")]
		protected virtual void GrabMechanicTransformPositionChanged(object sender, MoveTransformGrabAttachEventArgs e)
		{
		}

		[Token(Token = "0x6002740")]
		[Address(RVA = "0xCCF060", Offset = "0xCCF060", VA = "0xCCF060")]
		public VRTK_ArtificialSlider()
		{
		}
	}
}
namespace VRTK.Highlighters
{
	[Token(Token = "0x20004C8")]
	public abstract class VRTK_BaseHighlighter : MonoBehaviour
	{
		[Token(Token = "0x4002253")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6632A8", Offset = "0x6632A8")]
		public bool active;

		[Token(Token = "0x4002254")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6632E0", Offset = "0x6632E0")]
		public bool unhighlightOnDisable;

		[Token(Token = "0x4002255")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		protected bool usesClonedObject;

		[Token(Token = "0x4002256")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected GameObject objectToAffect;

		[Token(Token = "0x6002741")]
		public abstract void Initialise([Optional] Color? color, [Optional] GameObject affectObject, [Optional] Dictionary<string, object> options);

		[Token(Token = "0x6002742")]
		public abstract void ResetHighlighter();

		[Token(Token = "0x6002743")]
		public abstract void Highlight([Optional] Color? color, float duration = 0f);

		[Token(Token = "0x6002744")]
		public abstract void Unhighlight([Optional] Color? color, float duration = 0f);

		[Token(Token = "0x6002745")]
		public virtual T GetOption<T>(Dictionary<string, object> options, string key)
		{
			return (T)null;
		}

		[Token(Token = "0x6002746")]
		[Address(RVA = "0xDCF510", Offset = "0xDCF510", VA = "0xDCF510", Slot = "9")]
		public virtual bool UsesClonedObject()
		{
			return default(bool);
		}

		[Token(Token = "0x6002747")]
		[Address(RVA = "0xDCF518", Offset = "0xDCF518", VA = "0xDCF518")]
		public static VRTK_BaseHighlighter GetActiveHighlighter(GameObject obj)
		{
			return null;
		}

		[Token(Token = "0x6002748")]
		[Address(RVA = "0xDCF5E8", Offset = "0xDCF5E8", VA = "0xDCF5E8", Slot = "10")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x6002749")]
		[Address(RVA = "0xDCF628", Offset = "0xDCF628", VA = "0xDCF628")]
		protected VRTK_BaseHighlighter()
		{
		}
	}
	[Token(Token = "0x20004C9")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x643B38", Offset = "0x643B38")]
	public class VRTK_MaterialColorSwapHighlighter : VRTK_BaseHighlighter
	{
		[Token(Token = "0x2000894")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x646180", Offset = "0x646180")]
		private sealed class <CycleColor>d__12 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002C60")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002C61")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002C62")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Material material;

			[Token(Token = "0x4002C63")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Color startColor;

			[Token(Token = "0x4002C64")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Color endColor;

			[Token(Token = "0x4002C65")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public float duration;

			[Token(Token = "0x4002C66")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public VRTK_MaterialColorSwapHighlighter <>4__this;

			[Token(Token = "0x4002C67")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private float <elapsedTime>5__2;

			[Token(Token = "0x17000378")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600341A")]
				[Address(RVA = "0xDD0788", Offset = "0xDD0788", VA = "0xDD0788", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000379")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600341C")]
				[Address(RVA = "0xDD07F8", Offset = "0xDD07F8", VA = "0xDD07F8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003417")]
			[Address(RVA = "0xDD0450", Offset = "0xDD0450", VA = "0xDD0450")]
			[DebuggerHidden]
			public <CycleColor>d__12(int <>1__state)
			{
			}

			[Token(Token = "0x6003418")]
			[Address(RVA = "0xDD0544", Offset = "0xDD0544", VA = "0xDD0544", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003419")]
			[Address(RVA = "0xDD0548", Offset = "0xDD0548", VA = "0xDD0548", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600341B")]
			[Address(RVA = "0xDD0790", Offset = "0xDD0790", VA = "0xDD0790", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002257")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x663318", Offset = "0x663318")]
		public float emissionDarken;

		[Token(Token = "0x4002258")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x663350", Offset = "0x663350")]
		public Material customMaterial;

		[Token(Token = "0x4002259")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected Dictionary<string, Material[]> originalSharedRendererMaterials;

		[Token(Token = "0x400225A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected Dictionary<string, Material[]> originalRendererMaterials;

		[Token(Token = "0x400225B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected Dictionary<string, Coroutine> faderRoutines;

		[Token(Token = "0x400225C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected bool resetMainTexture;

		[Token(Token = "0x600274A")]
		[Address(RVA = "0xDCF638", Offset = "0xDCF638", VA = "0xDCF638", Slot = "4")]
		public override void Initialise([Optional] Color? color, [Optional] GameObject affectObject, [Optional] Dictionary<string, object> options)
		{
		}

		[Token(Token = "0x600274B")]
		[Address(RVA = "0xDCF7A4", Offset = "0xDCF7A4", VA = "0xDCF7A4", Slot = "5")]
		public override void ResetHighlighter()
		{
		}

		[Token(Token = "0x600274C")]
		[Address(RVA = "0xDCF7B0", Offset = "0xDCF7B0", VA = "0xDCF7B0", Slot = "6")]
		public override void Highlight(Color? color, float duration = 0f)
		{
		}

		[Token(Token = "0x600274D")]
		[Address(RVA = "0xDCF858", Offset = "0xDCF858", VA = "0xDCF858", Slot = "7")]
		public override void Unhighlight([Optional] Color? color, float duration = 0f)
		{
		}

		[Token(Token = "0x600274E")]
		[Address(RVA = "0xDCFB60", Offset = "0xDCFB60", VA = "0xDCFB60", Slot = "11")]
		protected virtual void StoreOriginalMaterials()
		{
		}

		[Token(Token = "0x600274F")]
		[Address(RVA = "0xDCFD6C", Offset = "0xDCFD6C", VA = "0xDCFD6C", Slot = "12")]
		protected virtual void ChangeToHighlightColor(Color color, float duration = 0f)
		{
		}

		[Token(Token = "0x6002750")]
		[Address(RVA = "0xDD0338", Offset = "0xDD0338", VA = "0xDD0338", Slot = "13")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x66EFE0", Offset = "0x66EFE0")]
		protected virtual IEnumerator CycleColor(Material material, Color startColor, Color endColor, float duration)
		{
			return null;
		}

		[Token(Token = "0x6002751")]
		[Address(RVA = "0xDD047C", Offset = "0xDD047C", VA = "0xDD047C")]
		public VRTK_MaterialColorSwapHighlighter()
		{
		}
	}
	[Token(Token = "0x20004CA")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x643B70", Offset = "0x643B70")]
	public class VRTK_MaterialPropertyBlockColorSwapHighlighter : VRTK_MaterialColorSwapHighlighter
	{
		[Token(Token = "0x2000895")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x646190", Offset = "0x646190")]
		private sealed class <CycleColor>d__6 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002C68")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002C69")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002C6A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MaterialPropertyBlock highlightMaterialPropertyBlock;

			[Token(Token = "0x4002C6B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Color endColor;

			[Token(Token = "0x4002C6C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public float duration;

			[Token(Token = "0x4002C6D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public Renderer renderer;

			[Token(Token = "0x4002C6E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private float <elapsedTime>5__2;

			[Token(Token = "0x1700037A")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6003420")]
				[Address(RVA = "0xDD1544", Offset = "0xDD1544", VA = "0xDD1544", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700037B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003422")]
				[Address(RVA = "0xDD15B4", Offset = "0xDD15B4", VA = "0xDD15B4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600341D")]
			[Address(RVA = "0xDD1240", Offset = "0xDD1240", VA = "0xDD1240")]
			[DebuggerHidden]
			public <CycleColor>d__6(int <>1__state)
			{
			}

			[Token(Token = "0x600341E")]
			[Address(RVA = "0xDD12F8", Offset = "0xDD12F8", VA = "0xDD12F8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600341F")]
			[Address(RVA = "0xDD12FC", Offset = "0xDD12FC", VA = "0xDD12FC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003421")]
			[Address(RVA = "0xDD154C", Offset = "0xDD154C", VA = "0xDD154C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400225D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		protected Dictionary<string, MaterialPropertyBlock> originalMaterialPropertyBlocks;

		[Token(Token = "0x400225E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		protected Dictionary<string, MaterialPropertyBlock> highlightMaterialPropertyBlocks;

		[Token(Token = "0x6002752")]
		[Address(RVA = "0xDD0800", Offset = "0xDD0800", VA = "0xDD0800", Slot = "4")]
		public override void Initialise([Optional] Color? color, [Optional] GameObject affectObject, [Optional] Dictionary<string, object> options)
		{
		}

		[Token(Token = "0x6002753")]
		[Address(RVA = "0xDD08FC", Offset = "0xDD08FC", VA = "0xDD08FC", Slot = "7")]
		public override void Unhighlight([Optional] Color? color, float duration = 0f)
		{
		}

		[Token(Token = "0x6002754")]
		[Address(RVA = "0xDD0BA8", Offset = "0xDD0BA8", VA = "0xDD0BA8", Slot = "11")]
		protected override void StoreOriginalMaterials()
		{
		}

		[Token(Token = "0x6002755")]
		[Address(RVA = "0xDD0DA8", Offset = "0xDD0DA8", VA = "0xDD0DA8", Slot = "12")]
		protected override void ChangeToHighlightColor(Color color, float duration = 0f)
		{
		}

		[Token(Token = "0x6002756")]
		[Address(RVA = "0xDD1154", Offset = "0xDD1154", VA = "0xDD1154", Slot = "14")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x670044", Offset = "0x670044")]
		protected virtual IEnumerator CycleColor(Renderer renderer, MaterialPropertyBlock highlightMaterialPropertyBlock, Color endColor, float duration)
		{
			return null;
		}

		[Token(Token = "0x6002757")]
		[Address(RVA = "0xDD126C", Offset = "0xDD126C", VA = "0xDD126C")]
		public VRTK_MaterialPropertyBlockColorSwapHighlighter()
		{
		}
	}
	[Token(Token = "0x20004CB")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x643BA8", Offset = "0x643BA8")]
	public class VRTK_OutlineObjectCopyHighlighter : VRTK_BaseHighlighter
	{
		[Token(Token = "0x400225F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x663388", Offset = "0x663388")]
		public float thickness;

		[Token(Token = "0x4002260")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6633C0", Offset = "0x6633C0")]
		public GameObject[] customOutlineModels;

		[Token(Token = "0x4002261")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6633F8", Offset = "0x6633F8")]
		public string[] customOutlineModelPaths;

		[Token(Token = "0x4002262")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x663430", Offset = "0x663430")]
		public bool enableSubmeshHighlight;

		[Token(Token = "0x4002263")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected Material stencilOutline;

		[Token(Token = "0x4002264")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected Renderer[] highlightModels;

		[Token(Token = "0x4002265")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		protected string[] copyComponents;

		[Token(Token = "0x6002758")]
		[Address(RVA = "0xDD15BC", Offset = "0xDD15BC", VA = "0xDD15BC", Slot = "4")]
		public override void Initialise([Optional] Color? color, [Optional] GameObject affectObject, [Optional] Dictionary<string, object> options)
		{
		}

		[Token(Token = "0x6002759")]
		[Address(RVA = "0xDD179C", Offset = "0xDD179C", VA = "0xDD179C", Slot = "5")]
		public override void ResetHighlighter()
		{
		}

		[Token(Token = "0x600275A")]
		[Address(RVA = "0xDD17FC", Offset = "0xDD17FC", VA = "0xDD17FC", Slot = "6")]
		public override void Highlight(Color? color, float duration = 0f)
		{
		}

		[Token(Token = "0x600275B")]
		[Address(RVA = "0xDD1A7C", Offset = "0xDD1A7C", VA = "0xDD1A7C", Slot = "7")]
		public override void Unhighlight([Optional] Color? color, float duration = 0f)
		{
		}

		[Token(Token = "0x600275C")]
		[Address(RVA = "0xDD1C00", Offset = "0xDD1C00", VA = "0xDD1C00", Slot = "11")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x600275D")]
		[Address(RVA = "0xDD1C80", Offset = "0xDD1C80", VA = "0xDD1C80", Slot = "12")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x600275E")]
		[Address(RVA = "0xDD1DF0", Offset = "0xDD1DF0", VA = "0xDD1DF0", Slot = "13")]
		protected virtual void ResetHighlighterWithCustomModels()
		{
		}

		[Token(Token = "0x600275F")]
		[Address(RVA = "0xDD1F50", Offset = "0xDD1F50", VA = "0xDD1F50", Slot = "14")]
		protected virtual void ResetHighlighterWithCustomModelPaths()
		{
		}

		[Token(Token = "0x6002760")]
		[Address(RVA = "0xDD20A8", Offset = "0xDD20A8", VA = "0xDD20A8", Slot = "15")]
		protected virtual void ResetHighlightersWithCurrentGameObject()
		{
		}

		[Token(Token = "0x6002761")]
		[Address(RVA = "0xDD218C", Offset = "0xDD218C", VA = "0xDD218C", Slot = "16")]
		protected virtual void SetOptions([Optional] Dictionary<string, object> options)
		{
		}

		[Token(Token = "0x6002762")]
		[Address(RVA = "0xDD22CC", Offset = "0xDD22CC", VA = "0xDD22CC", Slot = "17")]
		protected virtual void DeleteExistingHighlightModels()
		{
		}

		[Token(Token = "0x6002763")]
		[Address(RVA = "0xDD242C", Offset = "0xDD242C", VA = "0xDD242C", Slot = "18")]
		protected virtual Renderer CreateHighlightModel(GameObject givenOutlineModel, string givenOutlineModelPath)
		{
			return null;
		}

		[Token(Token = "0x6002764")]
		[Address(RVA = "0xDD3034", Offset = "0xDD3034", VA = "0xDD3034")]
		public VRTK_OutlineObjectCopyHighlighter()
		{
		}
	}
}
namespace VRTK.Examples
{
	[Token(Token = "0x20004CC")]
	public class AutoRotation : MonoBehaviour
	{
		[Token(Token = "0x4002266")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x663468", Offset = "0x663468")]
		public float degPerSec;

		[Token(Token = "0x4002267")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6634A0", Offset = "0x6634A0")]
		public Vector3 rotAxis;

		[Token(Token = "0x6002765")]
		[Address(RVA = "0x974084", Offset = "0x974084", VA = "0x974084")]
		private void Start()
		{
		}

		[Token(Token = "0x6002766")]
		[Address(RVA = "0x974090", Offset = "0x974090", VA = "0x974090")]
		private void Update()
		{
		}

		[Token(Token = "0x6002767")]
		[Address(RVA = "0x974108", Offset = "0x974108", VA = "0x974108")]
		public AutoRotation()
		{
		}
	}
	[Token(Token = "0x20004CD")]
	public class Breakable_Cube : MonoBehaviour
	{
		[Token(Token = "0x4002268")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float breakForce;

		[Token(Token = "0x6002768")]
		[Address(RVA = "0x974188", Offset = "0x974188", VA = "0x974188")]
		private void Start()
		{
		}

		[Token(Token = "0x6002769")]
		[Address(RVA = "0x9741F4", Offset = "0x9741F4", VA = "0x9741F4")]
		private void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x600276A")]
		[Address(RVA = "0x97422C", Offset = "0x97422C", VA = "0x97422C")]
		private float GetCollisionForce(Collision collision)
		{
			return default(float);
		}

		[Token(Token = "0x600276B")]
		[Address(RVA = "0x9743DC", Offset = "0x9743DC", VA = "0x9743DC")]
		private void ExplodeCube(float force)
		{
		}

		[Token(Token = "0x600276C")]
		[Address(RVA = "0x974558", Offset = "0x974558", VA = "0x974558")]
		private void ExplodeFace(Transform face, float force)
		{
		}

		[Token(Token = "0x600276D")]
		[Address(RVA = "0x97470C", Offset = "0x97470C", VA = "0x97470C")]
		public Breakable_Cube()
		{
		}
	}
	[Token(Token = "0x20004CE")]
	public class ButtonReactor : MonoBehaviour
	{
		[Token(Token = "0x4002269")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected VRTK_PhysicsPusher buttonEvents;

		[Token(Token = "0x400226A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected VRTK_ArtificialPusher artbuttonEvents;

		[Token(Token = "0x600276E")]
		[Address(RVA = "0x97471C", Offset = "0x97471C", VA = "0x97471C", Slot = "4")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x600276F")]
		[Address(RVA = "0x974898", Offset = "0x974898", VA = "0x974898", Slot = "5")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x6002770")]
		[Address(RVA = "0x9749E4", Offset = "0x9749E4", VA = "0x9749E4", Slot = "6")]
		protected virtual void MaxLimitReached(object sender, ControllableEventArgs e)
		{
		}

		[Token(Token = "0x6002771")]
		[Address(RVA = "0x974AEC", Offset = "0x974AEC", VA = "0x974AEC")]
		public ButtonReactor()
		{
		}
	}
	[Token(Token = "0x20004CF")]
	public class Controller_Hand : MonoBehaviour
	{
		[Token(Token = "0x2000896")]
		public enum Hands
		{
			[Token(Token = "0x4002C70")]
			Right,
			[Token(Token = "0x4002C71")]
			Left
		}

		[Token(Token = "0x400226B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Hands hand;

		[Token(Token = "0x400226C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Transform pointerFinger;

		[Token(Token = "0x400226D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Transform gripFingers;

		[Token(Token = "0x400226E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float maxRotation;

		[Token(Token = "0x400226F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float originalPointerRotation;

		[Token(Token = "0x4002270")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float originalGripRotation;

		[Token(Token = "0x4002271")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float targetPointerRotation;

		[Token(Token = "0x4002272")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float targetGripRotation;

		[Token(Token = "0x6002772")]
		[Address(RVA = "0x9750E8", Offset = "0x9750E8", VA = "0x9750E8")]
		private void Start()
		{
		}

		[Token(Token = "0x6002773")]
		[Address(RVA = "0x97544C", Offset = "0x97544C", VA = "0x97544C")]
		private void InversePosition(Transform givenTransform)
		{
		}

		[Token(Token = "0x6002774")]
		[Address(RVA = "0x9755D8", Offset = "0x9755D8", VA = "0x9755D8")]
		private void DoGrabOn(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6002775")]
		[Address(RVA = "0x9755E4", Offset = "0x9755E4", VA = "0x9755E4")]
		private void DoGrabOff(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6002776")]
		[Address(RVA = "0x9755F0", Offset = "0x9755F0", VA = "0x9755F0")]
		private void DoUseOn(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6002777")]
		[Address(RVA = "0x9755FC", Offset = "0x9755FC", VA = "0x9755FC")]
		private void DoUseOff(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6002778")]
		[Address(RVA = "0x975608", Offset = "0x975608", VA = "0x975608")]
		private void Update()
		{
		}

		[Token(Token = "0x6002779")]
		[Address(RVA = "0x9756B4", Offset = "0x9756B4", VA = "0x9756B4")]
		public Controller_Hand()
		{
		}
	}
	[Token(Token = "0x20004D0")]
	public class Controller_Menu : MonoBehaviour
	{
		[Token(Token = "0x4002273")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject menuObject;

		[Token(Token = "0x4002274")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private GameObject clonedMenuObject;

		[Token(Token = "0x4002275")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool menuInit;

		[Token(Token = "0x4002276")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		private bool menuActive;

		[Token(Token = "0x600277A")]
		[Address(RVA = "0x9756C4", Offset = "0x9756C4", VA = "0x9756C4")]
		private void Start()
		{
		}

		[Token(Token = "0x600277B")]
		[Address(RVA = "0x9757D0", Offset = "0x9757D0", VA = "0x9757D0")]
		private void InitMenu()
		{
		}

		[Token(Token = "0x600277C")]
		[Address(RVA = "0x97591C", Offset = "0x97591C", VA = "0x97591C")]
		private void DoMenuOn(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x600277D")]
		[Address(RVA = "0x9759D4", Offset = "0x9759D4", VA = "0x9759D4")]
		private void DoMenuOff(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x600277E")]
		[Address(RVA = "0x975A70", Offset = "0x975A70", VA = "0x975A70")]
		private void Update()
		{
		}

		[Token(Token = "0x600277F")]
		[Address(RVA = "0x975C0C", Offset = "0x975C0C", VA = "0x975C0C")]
		public Controller_Menu()
		{
		}
	}
	[Token(Token = "0x20004D1")]
	public class ControlReactor : MonoBehaviour
	{
		[Token(Token = "0x4002277")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TextMesh go;

		[Token(Token = "0x4002278")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected VRTK_Control_UnityEvents controlEvents;

		[Token(Token = "0x4002279")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected VRTK_BaseControllable controllableEvents;

		[Token(Token = "0x6002780")]
		[Address(RVA = "0x974AF4", Offset = "0x974AF4", VA = "0x974AF4", Slot = "4")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6002781")]
		[Address(RVA = "0x974C44", Offset = "0x974C44", VA = "0x974C44", Slot = "5")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x6002782")]
		[Address(RVA = "0x974C54", Offset = "0x974C54", VA = "0x974C54", Slot = "6")]
		protected virtual void ManageListeners(bool state)
		{
		}

		[Token(Token = "0x6002783")]
		[Address(RVA = "0x974ED8", Offset = "0x974ED8", VA = "0x974ED8", Slot = "7")]
		protected virtual void ValueChanged(object sender, ControllableEventArgs e)
		{
		}

		[Token(Token = "0x6002784")]
		[Address(RVA = "0x974F84", Offset = "0x974F84", VA = "0x974F84", Slot = "8")]
		protected virtual void HandleChange(object sender, Control3DEventArgs e)
		{
		}

		[Token(Token = "0x6002785")]
		[Address(RVA = "0x975030", Offset = "0x975030", VA = "0x975030", Slot = "9")]
		protected virtual void UpdateText(string valueText, string normalizedValueText)
		{
		}

		[Token(Token = "0x6002786")]
		[Address(RVA = "0x9750E0", Offset = "0x9750E0", VA = "0x9750E0")]
		public ControlReactor()
		{
		}
	}
	[Token(Token = "0x20004D2")]
	public class ControlsMenu : MonoBehaviour
	{
		[Token(Token = "0x400227A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float spawnDistance;

		[Token(Token = "0x400227B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject menuSlate;

		[Token(Token = "0x400227C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public VRTK_ControllerEvents controllerEvents;

		[Token(Token = "0x400227D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public VRTK_ControllerEvents.ButtonAlias toggleButton;

		[Token(Token = "0x400227E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		protected bool isVisible;

		[Token(Token = "0x6002787")]
		[Address(RVA = "0x975C14", Offset = "0x975C14", VA = "0x975C14", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6002788")]
		[Address(RVA = "0x975C24", Offset = "0x975C24", VA = "0x975C24", Slot = "5")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6002789")]
		[Address(RVA = "0x975D0C", Offset = "0x975D0C", VA = "0x975D0C", Slot = "6")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x600278A")]
		[Address(RVA = "0x975DF4", Offset = "0x975DF4", VA = "0x975DF4", Slot = "7")]
		protected virtual void ToggleButtonPressed(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x600278B")]
		[Address(RVA = "0x97616C", Offset = "0x97616C", VA = "0x97616C", Slot = "8")]
		protected virtual void ToggleVisibility()
		{
		}

		[Token(Token = "0x600278C")]
		[Address(RVA = "0x976214", Offset = "0x976214", VA = "0x976214")]
		public ControlsMenu()
		{
		}
	}
	[Token(Token = "0x20004D3")]
	public class ExcludeTeleport : MonoBehaviour
	{
		[Token(Token = "0x600278D")]
		[Address(RVA = "0x976230", Offset = "0x976230", VA = "0x976230")]
		public ExcludeTeleport()
		{
		}
	}
	[Token(Token = "0x20004D4")]
	public class Gun : VRTK_InteractableObject
	{
		[Token(Token = "0x400227F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		private GameObject bullet;

		[Token(Token = "0x4002280")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		private float bulletSpeed;

		[Token(Token = "0x4002281")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
		private float bulletLife;

		[Token(Token = "0x600278E")]
		[Address(RVA = "0x976238", Offset = "0x976238", VA = "0x976238", Slot = "28")]
		public override void StartUsing(VRTK_InteractUse usingObject)
		{
		}

		[Token(Token = "0x600278F")]
		[Address(RVA = "0x9764A8", Offset = "0x9764A8", VA = "0x9764A8")]
		protected void Start()
		{
		}

		[Token(Token = "0x6002790")]
		[Address(RVA = "0x976260", Offset = "0x976260", VA = "0x976260")]
		private void FireBullet()
		{
		}

		[Token(Token = "0x6002791")]
		[Address(RVA = "0x97654C", Offset = "0x97654C", VA = "0x97654C")]
		public Gun()
		{
		}
	}
	[Token(Token = "0x20004D5")]
	public class HandLift : VRTK_InteractableObject
	{
		[Token(Token = "0x4002282")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6634D8", Offset = "0x6634D8")]
		public float speed;

		[Token(Token = "0x4002283")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		public Transform handleTop;

		[Token(Token = "0x4002284")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		public Transform ropeTop;

		[Token(Token = "0x4002285")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		public Transform ropeBottom;

		[Token(Token = "0x4002286")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		public GameObject rope;

		[Token(Token = "0x4002287")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		public GameObject handle;

		[Token(Token = "0x4002288")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		private bool isMoving;

		[Token(Token = "0x4002289")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A9")]
		private bool isMovingUp;

		[Token(Token = "0x6002792")]
		[Address(RVA = "0x976560", Offset = "0x976560", VA = "0x976560", Slot = "10")]
		public override void OnInteractableObjectGrabbed(InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x6002793")]
		[Address(RVA = "0x97658C", Offset = "0x97658C", VA = "0x97658C", Slot = "69")]
		protected override void Update()
		{
		}

		[Token(Token = "0x6002794")]
		[Address(RVA = "0x976980", Offset = "0x976980", VA = "0x976980")]
		public HandLift()
		{
		}
	}
	[Token(Token = "0x20004D6")]
	public class Lamp : VRTK_InteractableObject
	{
		[Token(Token = "0x6002795")]
		[Address(RVA = "0x97699C", Offset = "0x97699C", VA = "0x97699C", Slot = "26")]
		public override void Grabbed(VRTK_InteractGrab grabbingObject)
		{
		}

		[Token(Token = "0x6002796")]
		[Address(RVA = "0x976AC4", Offset = "0x976AC4", VA = "0x976AC4", Slot = "27")]
		public override void Ungrabbed(VRTK_InteractGrab previousGrabbingObject)
		{
		}

		[Token(Token = "0x6002797")]
		[Address(RVA = "0x9769C8", Offset = "0x9769C8", VA = "0x9769C8")]
		private void ToggleKinematics(bool state)
		{
		}

		[Token(Token = "0x6002798")]
		[Address(RVA = "0x976AF0", Offset = "0x976AF0", VA = "0x976AF0")]
		public Lamp()
		{
		}
	}
	[Token(Token = "0x20004D7")]
	public class LightSaber : VRTK_InteractableObject
	{
		[Token(Token = "0x400228A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
		private bool beamActive;

		[Token(Token = "0x400228B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		private Vector2 beamLimits;

		[Token(Token = "0x400228C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		private float currentBeamSize;

		[Token(Token = "0x400228D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
		private float beamExtendSpeed;

		[Token(Token = "0x400228E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		private GameObject blade;

		[Token(Token = "0x400228F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		private Color activeColor;

		[Token(Token = "0x4002290")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		private Color targetColor;

		[Token(Token = "0x4002291")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		private Color[] bladePhaseColors;

		[Token(Token = "0x6002799")]
		[Address(RVA = "0x976AF8", Offset = "0x976AF8", VA = "0x976AF8", Slot = "28")]
		public override void StartUsing([Optional] VRTK_InteractUse currentUsingObject)
		{
		}

		[Token(Token = "0x600279A")]
		[Address(RVA = "0x976C84", Offset = "0x976C84", VA = "0x976C84", Slot = "29")]
		public override void StopUsing([Optional] VRTK_InteractUse previousUsingObject, bool resetUsingObjectState = true)
		{
		}

		[Token(Token = "0x600279B")]
		[Address(RVA = "0x976CB4", Offset = "0x976CB4", VA = "0x976CB4")]
		protected void Start()
		{
		}

		[Token(Token = "0x600279C")]
		[Address(RVA = "0x976DE4", Offset = "0x976DE4", VA = "0x976DE4", Slot = "69")]
		protected override void Update()
		{
		}

		[Token(Token = "0x600279D")]
		[Address(RVA = "0x976D4C", Offset = "0x976D4C", VA = "0x976D4C")]
		private void SetBeamSize()
		{
		}

		[Token(Token = "0x600279E")]
		[Address(RVA = "0x976EE0", Offset = "0x976EE0", VA = "0x976EE0")]
		private void PulseBeam()
		{
		}

		[Token(Token = "0x600279F")]
		[Address(RVA = "0x9770D0", Offset = "0x9770D0", VA = "0x9770D0")]
		public LightSaber()
		{
		}
	}
	[Token(Token = "0x20004D8")]
	public class Menu_Color_Changer : VRTK_InteractableObject
	{
		[Token(Token = "0x4002292")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
		public Color newMenuColor;

		[Token(Token = "0x60027A0")]
		[Address(RVA = "0x977120", Offset = "0x977120", VA = "0x977120", Slot = "28")]
		public override void StartUsing(VRTK_InteractUse usingObject)
		{
		}

		[Token(Token = "0x60027A1")]
		[Address(RVA = "0x977408", Offset = "0x977408", VA = "0x977408", Slot = "66")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x60027A2")]
		[Address(RVA = "0x977320", Offset = "0x977320", VA = "0x977320")]
		private void ResetMenuItems()
		{
		}

		[Token(Token = "0x60027A3")]
		[Address(RVA = "0x9774DC", Offset = "0x9774DC", VA = "0x9774DC")]
		public Menu_Color_Changer()
		{
		}
	}
	[Token(Token = "0x20004D9")]
	public class Menu_Container_Object_Colors : VRTK_InteractableObject
	{
		[Token(Token = "0x60027A4")]
		[Address(RVA = "0x97721C", Offset = "0x97721C", VA = "0x97721C")]
		public void SetSelectedColor(Color color)
		{
		}

		[Token(Token = "0x60027A5")]
		[Address(RVA = "0x9775F0", Offset = "0x9775F0", VA = "0x9775F0")]
		protected void Start()
		{
		}

		[Token(Token = "0x60027A6")]
		[Address(RVA = "0x97762C", Offset = "0x97762C", VA = "0x97762C")]
		public Menu_Container_Object_Colors()
		{
		}
	}
	[Token(Token = "0x20004DA")]
	public class Menu_Object_Spawner : VRTK_InteractableObject
	{
		[Token(Token = "0x2000897")]
		public enum PrimitiveTypes
		{
			[Token(Token = "0x4002C73")]
			Cube,
			[Token(Token = "0x4002C74")]
			Sphere
		}

		[Token(Token = "0x4002293")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
		public PrimitiveTypes shape;

		[Token(Token = "0x4002294")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		private Color selectedColor;

		[Token(Token = "0x60027A7")]
		[Address(RVA = "0x977518", Offset = "0x977518", VA = "0x977518")]
		public void SetSelectedColor(Color color)
		{
		}

		[Token(Token = "0x60027A8")]
		[Address(RVA = "0x977634", Offset = "0x977634", VA = "0x977634", Slot = "28")]
		public override void StartUsing(VRTK_InteractUse usingObject)
		{
		}

		[Token(Token = "0x60027A9")]
		[Address(RVA = "0x9776A0", Offset = "0x9776A0", VA = "0x9776A0")]
		private void CreateShape(PrimitiveType shape, Color color)
		{
		}

		[Token(Token = "0x60027AA")]
		[Address(RVA = "0x977880", Offset = "0x977880", VA = "0x977880")]
		private void ResetMenuItems()
		{
		}

		[Token(Token = "0x60027AB")]
		[Address(RVA = "0x977968", Offset = "0x977968", VA = "0x977968")]
		public Menu_Object_Spawner()
		{
		}
	}
	[Token(Token = "0x20004DB")]
	public class ModelVillage_TeleportLocation : VRTK_DestinationMarker
	{
		[Token(Token = "0x4002295")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Transform destination;

		[Token(Token = "0x4002296")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool lastUsePressedState;

		[Token(Token = "0x60027AC")]
		[Address(RVA = "0x977970", Offset = "0x977970", VA = "0x977970")]
		private void OnTriggerStay(Collider collider)
		{
		}

		[Token(Token = "0x60027AD")]
		[Address(RVA = "0x977C80", Offset = "0x977C80", VA = "0x977C80")]
		public ModelVillage_TeleportLocation()
		{
		}
	}
	[Token(Token = "0x20004DC")]
	public class Openable_Door : VRTK_InteractableObject
	{
		[Token(Token = "0x4002297")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
		public bool flipped;

		[Token(Token = "0x4002298")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x17D")]
		public bool rotated;

		[Token(Token = "0x4002299")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		private float sideFlip;

		[Token(Token = "0x400229A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
		private float side;

		[Token(Token = "0x400229B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		private float smooth;

		[Token(Token = "0x400229C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
		private float doorOpenAngle;

		[Token(Token = "0x400229D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		private bool open;

		[Token(Token = "0x400229E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x194")]
		private Vector3 defaultRotation;

		[Token(Token = "0x400229F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		private Vector3 openRotation;

		[Token(Token = "0x60027AE")]
		[Address(RVA = "0x9782C8", Offset = "0x9782C8", VA = "0x9782C8", Slot = "28")]
		public override void StartUsing(VRTK_InteractUse usingObject)
		{
		}

		[Token(Token = "0x60027AF")]
		[Address(RVA = "0x978450", Offset = "0x978450", VA = "0x978450")]
		protected void Start()
		{
		}

		[Token(Token = "0x60027B0")]
		[Address(RVA = "0x9784CC", Offset = "0x9784CC", VA = "0x9784CC", Slot = "69")]
		protected override void Update()
		{
		}

		[Token(Token = "0x60027B1")]
		[Address(RVA = "0x9783E4", Offset = "0x9783E4", VA = "0x9783E4")]
		private void SetRotation()
		{
		}

		[Token(Token = "0x60027B2")]
		[Address(RVA = "0x97833C", Offset = "0x97833C", VA = "0x97833C")]
		private void SetDoorRotation(Vector3 interacterPosition)
		{
		}

		[Token(Token = "0x60027B3")]
		[Address(RVA = "0x978670", Offset = "0x978670", VA = "0x978670")]
		public Openable_Door()
		{
		}
	}
	[Token(Token = "0x20004DD")]
	public class PusherStickyToggle : MonoBehaviour
	{
		[Token(Token = "0x40022A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public VRTK_BaseControllable buttonOne;

		[Token(Token = "0x40022A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public VRTK_BaseControllable buttonTwo;

		[Token(Token = "0x40022A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Color onColor;

		[Token(Token = "0x40022A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Color offColor;

		[Token(Token = "0x40022A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected bool buttonOnePressed;

		[Token(Token = "0x40022A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		protected bool buttonTwoPressed;

		[Token(Token = "0x60027B4")]
		[Address(RVA = "0x979E20", Offset = "0x979E20", VA = "0x979E20", Slot = "4")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x60027B5")]
		[Address(RVA = "0x979FAC", Offset = "0x979FAC", VA = "0x979FAC", Slot = "5")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x60027B6")]
		[Address(RVA = "0x97A108", Offset = "0x97A108", VA = "0x97A108", Slot = "6")]
		protected virtual void ButtonOne_MaxLimitReached(object sender, ControllableEventArgs e)
		{
		}

		[Token(Token = "0x60027B7")]
		[Address(RVA = "0x97A198", Offset = "0x97A198", VA = "0x97A198", Slot = "7")]
		protected virtual void ButtonTwo_MaxLimitReached(object sender, ControllableEventArgs e)
		{
		}

		[Token(Token = "0x60027B8")]
		[Address(RVA = "0x97A228", Offset = "0x97A228", VA = "0x97A228", Slot = "8")]
		protected virtual void ButtonOne_MaxLimitExited(object sender, ControllableEventArgs e)
		{
		}

		[Token(Token = "0x60027B9")]
		[Address(RVA = "0x97A290", Offset = "0x97A290", VA = "0x97A290", Slot = "9")]
		protected virtual void ButtonTwo_MaxLimitExited(object sender, ControllableEventArgs e)
		{
		}

		[Token(Token = "0x60027BA")]
		[Address(RVA = "0x97A2F8", Offset = "0x97A2F8", VA = "0x97A2F8", Slot = "10")]
		protected virtual void ChangeColor(GameObject obj, Color col)
		{
		}

		[Token(Token = "0x60027BB")]
		[Address(RVA = "0x97A3B4", Offset = "0x97A3B4", VA = "0x97A3B4", Slot = "11")]
		protected virtual void SetStayPressed(VRTK_BaseControllable obj, bool state)
		{
		}

		[Token(Token = "0x60027BC")]
		[Address(RVA = "0x97A5C8", Offset = "0x97A5C8", VA = "0x97A5C8", Slot = "12")]
		protected virtual void SetPositionTarget(VRTK_BaseControllable obj, float newTarget)
		{
		}

		[Token(Token = "0x60027BD")]
		[Address(RVA = "0x97A7D8", Offset = "0x97A7D8", VA = "0x97A7D8")]
		public PusherStickyToggle()
		{
		}
	}
	[Token(Token = "0x20004DE")]
	public class RC_Car : MonoBehaviour
	{
		[Token(Token = "0x40022A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float maxAcceleration;

		[Token(Token = "0x40022A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float jumpPower;

		[Token(Token = "0x40022A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float acceleration;

		[Token(Token = "0x40022A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float movementSpeed;

		[Token(Token = "0x40022AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float rotationSpeed;

		[Token(Token = "0x40022AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private bool isJumping;

		[Token(Token = "0x40022AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector2 touchAxis;

		[Token(Token = "0x40022AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float triggerAxis;

		[Token(Token = "0x40022AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Rigidbody rb;

		[Token(Token = "0x40022AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Vector3 defaultPosition;

		[Token(Token = "0x40022B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Quaternion defaultRotation;

		[Token(Token = "0x60027BE")]
		[Address(RVA = "0x97A81C", Offset = "0x97A81C", VA = "0x97A81C")]
		public void SetTouchAxis(Vector2 data)
		{
		}

		[Token(Token = "0x60027BF")]
		[Address(RVA = "0x97A824", Offset = "0x97A824", VA = "0x97A824")]
		public void SetTriggerAxis(float data)
		{
		}

		[Token(Token = "0x60027C0")]
		[Address(RVA = "0x97A82C", Offset = "0x97A82C", VA = "0x97A82C")]
		public void ResetCar()
		{
		}

		[Token(Token = "0x60027C1")]
		[Address(RVA = "0x97A8C4", Offset = "0x97A8C4", VA = "0x97A8C4")]
		private void Awake()
		{
		}

		[Token(Token = "0x60027C2")]
		[Address(RVA = "0x97A974", Offset = "0x97A974", VA = "0x97A974")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x60027C3")]
		[Address(RVA = "0x97A9B8", Offset = "0x97A9B8", VA = "0x97A9B8")]
		private void CalculateSpeed()
		{
		}

		[Token(Token = "0x60027C4")]
		[Address(RVA = "0x97ADA8", Offset = "0x97ADA8", VA = "0x97ADA8")]
		private void Decelerate()
		{
		}

		[Token(Token = "0x60027C5")]
		[Address(RVA = "0x97AA6C", Offset = "0x97AA6C", VA = "0x97AA6C")]
		private void Move()
		{
		}

		[Token(Token = "0x60027C6")]
		[Address(RVA = "0x97ABBC", Offset = "0x97ABBC", VA = "0x97ABBC")]
		private void Turn()
		{
		}

		[Token(Token = "0x60027C7")]
		[Address(RVA = "0x97ACD0", Offset = "0x97ACD0", VA = "0x97ACD0")]
		private void Jump()
		{
		}

		[Token(Token = "0x60027C8")]
		[Address(RVA = "0x97AE94", Offset = "0x97AE94", VA = "0x97AE94")]
		private void OnTriggerStay(Collider collider)
		{
		}

		[Token(Token = "0x60027C9")]
		[Address(RVA = "0x97AE9C", Offset = "0x97AE9C", VA = "0x97AE9C")]
		private void OnTriggerExit(Collider collider)
		{
		}

		[Token(Token = "0x60027CA")]
		[Address(RVA = "0x97AEA8", Offset = "0x97AEA8", VA = "0x97AEA8")]
		public RC_Car()
		{
		}
	}
	[Token(Token = "0x20004DF")]
	public class RC_Car_Controller : MonoBehaviour
	{
		[Token(Token = "0x40022B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject rcCar;

		[Token(Token = "0x40022B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private RC_Car rcCarScript;

		[Token(Token = "0x60027CB")]
		[Address(RVA = "0x97AED0", Offset = "0x97AED0", VA = "0x97AED0")]
		private void Start()
		{
		}

		[Token(Token = "0x60027CC")]
		[Address(RVA = "0x97B0F8", Offset = "0x97B0F8", VA = "0x97B0F8")]
		private void DoTouchpadAxisChanged(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60027CD")]
		[Address(RVA = "0x97B130", Offset = "0x97B130", VA = "0x97B130")]
		private void DoTriggerAxisChanged(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60027CE")]
		[Address(RVA = "0x97B160", Offset = "0x97B160", VA = "0x97B160")]
		private void DoTouchpadTouchEnd(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60027CF")]
		[Address(RVA = "0x97B1EC", Offset = "0x97B1EC", VA = "0x97B1EC")]
		private void DoTriggerReleased(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60027D0")]
		[Address(RVA = "0x97B218", Offset = "0x97B218", VA = "0x97B218")]
		private void DoCarReset(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60027D1")]
		[Address(RVA = "0x97B244", Offset = "0x97B244", VA = "0x97B244")]
		public RC_Car_Controller()
		{
		}
	}
	[Token(Token = "0x20004E0")]
	public class RealGun : VRTK_InteractableObject
	{
		[Token(Token = "0x40022B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
		public float bulletSpeed;

		[Token(Token = "0x40022B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		public float bulletLife;

		[Token(Token = "0x40022B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		private GameObject bullet;

		[Token(Token = "0x40022B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		private GameObject trigger;

		[Token(Token = "0x40022B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		private RealGun_Slide slide;

		[Token(Token = "0x40022B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		private RealGun_SafetySwitch safetySwitch;

		[Token(Token = "0x40022B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		private Rigidbody slideRigidbody;

		[Token(Token = "0x40022BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		private Collider slideCollider;

		[Token(Token = "0x40022BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		private Rigidbody safetySwitchRigidbody;

		[Token(Token = "0x40022BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		private Collider safetySwitchCollider;

		[Token(Token = "0x40022BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		private VRTK_ControllerEvents controllerEvents;

		[Token(Token = "0x40022BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		private float minTriggerRotation;

		[Token(Token = "0x40022BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D4")]
		private float maxTriggerRotation;

		[Token(Token = "0x60027D2")]
		[Address(RVA = "0x97B24C", Offset = "0x97B24C", VA = "0x97B24C")]
		private void ToggleCollision(Rigidbody objRB, Collider objCol, bool state)
		{
		}

		[Token(Token = "0x60027D3")]
		[Address(RVA = "0x97B2B0", Offset = "0x97B2B0", VA = "0x97B2B0")]
		private void ToggleSlide(bool state)
		{
		}

		[Token(Token = "0x60027D4")]
		[Address(RVA = "0x97B344", Offset = "0x97B344", VA = "0x97B344")]
		private void ToggleSafetySwitch(bool state)
		{
		}

		[Token(Token = "0x60027D5")]
		[Address(RVA = "0x97B3A0", Offset = "0x97B3A0", VA = "0x97B3A0", Slot = "26")]
		public override void Grabbed(VRTK_InteractGrab currentGrabbingObject)
		{
		}

		[Token(Token = "0x60027D6")]
		[Address(RVA = "0x97B548", Offset = "0x97B548", VA = "0x97B548", Slot = "27")]
		public override void Ungrabbed(VRTK_InteractGrab previousGrabbingObject)
		{
		}

		[Token(Token = "0x60027D7")]
		[Address(RVA = "0x97B5B8", Offset = "0x97B5B8", VA = "0x97B5B8", Slot = "28")]
		public override void StartUsing(VRTK_InteractUse currentUsingObject)
		{
		}

		[Token(Token = "0x60027D8")]
		[Address(RVA = "0x97B96C", Offset = "0x97B96C", VA = "0x97B96C", Slot = "65")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x60027D9")]
		[Address(RVA = "0x97BBA4", Offset = "0x97BBA4", VA = "0x97BBA4", Slot = "69")]
		protected override void Update()
		{
		}

		[Token(Token = "0x60027DA")]
		[Address(RVA = "0x97B728", Offset = "0x97B728", VA = "0x97B728")]
		private void FireBullet()
		{
		}

		[Token(Token = "0x60027DB")]
		[Address(RVA = "0x97BD24", Offset = "0x97BD24", VA = "0x97BD24")]
		public RealGun()
		{
		}
	}
	[Token(Token = "0x20004E1")]
	public class RealGun_SafetySwitch : VRTK_InteractableObject
	{
		[Token(Token = "0x40022C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
		public bool safetyOff;

		[Token(Token = "0x40022C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		private float offAngle;

		[Token(Token = "0x40022C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
		private Vector3 fixedPosition;

		[Token(Token = "0x60027DC")]
		[Address(RVA = "0x97BD48", Offset = "0x97BD48", VA = "0x97BD48", Slot = "28")]
		public override void StartUsing(VRTK_InteractUse currentUsingObject)
		{
		}

		[Token(Token = "0x60027DD")]
		[Address(RVA = "0x97BD84", Offset = "0x97BD84", VA = "0x97BD84")]
		protected void Start()
		{
		}

		[Token(Token = "0x60027DE")]
		[Address(RVA = "0x97BDCC", Offset = "0x97BDCC", VA = "0x97BDCC", Slot = "69")]
		protected override void Update()
		{
		}

		[Token(Token = "0x60027DF")]
		[Address(RVA = "0x97BD78", Offset = "0x97BD78", VA = "0x97BD78")]
		private void SetSafety(bool safety)
		{
		}

		[Token(Token = "0x60027E0")]
		[Address(RVA = "0x97BEBC", Offset = "0x97BEBC", VA = "0x97BEBC")]
		public RealGun_SafetySwitch()
		{
		}
	}
	[Token(Token = "0x20004E2")]
	public class RealGun_Slide : VRTK_InteractableObject
	{
		[Token(Token = "0x40022C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
		private float restPosition;

		[Token(Token = "0x40022C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		private float fireTimer;

		[Token(Token = "0x40022C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
		private float fireDistance;

		[Token(Token = "0x40022C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		private float boltSpeed;

		[Token(Token = "0x60027E1")]
		[Address(RVA = "0x97B71C", Offset = "0x97B71C", VA = "0x97B71C")]
		public void Fire()
		{
		}

		[Token(Token = "0x60027E2")]
		[Address(RVA = "0x97BED4", Offset = "0x97BED4", VA = "0x97BED4", Slot = "65")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x60027E3")]
		[Address(RVA = "0x97BF20", Offset = "0x97BF20", VA = "0x97BF20", Slot = "69")]
		protected override void Update()
		{
		}

		[Token(Token = "0x60027E4")]
		[Address(RVA = "0x97C234", Offset = "0x97C234", VA = "0x97C234")]
		public RealGun_Slide()
		{
		}
	}
	[Token(Token = "0x20004E3")]
	public class Remote_Beam : MonoBehaviour
	{
		[Token(Token = "0x40022C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Vector2 touchAxis;

		[Token(Token = "0x40022C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float rotationSpeed;

		[Token(Token = "0x40022C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float currentYaw;

		[Token(Token = "0x40022CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float currentPitch;

		[Token(Token = "0x60027E5")]
		[Address(RVA = "0x97C254", Offset = "0x97C254", VA = "0x97C254")]
		public void SetTouchAxis(Vector2 data)
		{
		}

		[Token(Token = "0x60027E6")]
		[Address(RVA = "0x97C25C", Offset = "0x97C25C", VA = "0x97C25C")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x60027E7")]
		[Address(RVA = "0x97C418", Offset = "0x97C418", VA = "0x97C418")]
		public Remote_Beam()
		{
		}
	}
	[Token(Token = "0x20004E4")]
	public class Remote_Beam_Controller : MonoBehaviour
	{
		[Token(Token = "0x40022CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject remoteBeam;

		[Token(Token = "0x40022CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Remote_Beam remoteBeamScript;

		[Token(Token = "0x60027E8")]
		[Address(RVA = "0x97C428", Offset = "0x97C428", VA = "0x97C428")]
		private void Start()
		{
		}

		[Token(Token = "0x60027E9")]
		[Address(RVA = "0x97C554", Offset = "0x97C554", VA = "0x97C554")]
		private void DoTouchpadAxisChanged(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60027EA")]
		[Address(RVA = "0x97C58C", Offset = "0x97C58C", VA = "0x97C58C")]
		private void DoTouchpadTouchEnd(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60027EB")]
		[Address(RVA = "0x97C618", Offset = "0x97C618", VA = "0x97C618")]
		public Remote_Beam_Controller()
		{
		}
	}
	[Token(Token = "0x20004E5")]
	public class RendererOffOnDash : MonoBehaviour
	{
		[Token(Token = "0x40022CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool wasSwitchedOff;

		[Token(Token = "0x40022CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<VRTK_DashTeleport> dashTeleporters;

		[Token(Token = "0x60027EC")]
		[Address(RVA = "0x97C620", Offset = "0x97C620", VA = "0x97C620")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60027ED")]
		[Address(RVA = "0x97C950", Offset = "0x97C950", VA = "0x97C950")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60027EE")]
		[Address(RVA = "0x97CB08", Offset = "0x97CB08", VA = "0x97CB08")]
		private void RendererOff(object sender, DashTeleportEventArgs e)
		{
		}

		[Token(Token = "0x60027EF")]
		[Address(RVA = "0x97CD08", Offset = "0x97CD08", VA = "0x97CD08")]
		private void RendererOn(object sender, DashTeleportEventArgs e)
		{
		}

		[Token(Token = "0x60027F0")]
		[Address(RVA = "0x97CC70", Offset = "0x97CC70", VA = "0x97CC70")]
		private void SwitchRenderer(GameObject go, bool enable)
		{
		}

		[Token(Token = "0x60027F1")]
		[Address(RVA = "0x97CD64", Offset = "0x97CD64", VA = "0x97CD64")]
		public RendererOffOnDash()
		{
		}
	}
	[Token(Token = "0x20004E6")]
	public class SnapDropZoneGroup_Switcher : MonoBehaviour
	{
		[Token(Token = "0x40022CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private VRTK_SnapDropZone cubeZone;

		[Token(Token = "0x40022D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private VRTK_SnapDropZone sphereZone;

		[Token(Token = "0x60027F2")]
		[Address(RVA = "0x97CDD4", Offset = "0x97CDD4", VA = "0x97CDD4")]
		private void Start()
		{
		}

		[Token(Token = "0x60027F3")]
		[Address(RVA = "0x97D0E8", Offset = "0x97D0E8", VA = "0x97D0E8")]
		private void DoCubeZoneSnapped(object sender, SnapDropZoneEventArgs e)
		{
		}

		[Token(Token = "0x60027F4")]
		[Address(RVA = "0x97D1C8", Offset = "0x97D1C8", VA = "0x97D1C8")]
		private void DoCubeZoneUnsnapped(object sender, SnapDropZoneEventArgs e)
		{
		}

		[Token(Token = "0x60027F5")]
		[Address(RVA = "0x97D2A8", Offset = "0x97D2A8", VA = "0x97D2A8")]
		private void DoSphereZoneSnapped(object sender, SnapDropZoneEventArgs e)
		{
		}

		[Token(Token = "0x60027F6")]
		[Address(RVA = "0x97D388", Offset = "0x97D388", VA = "0x97D388")]
		private void DoSphereZoneUnsnapped(object sender, SnapDropZoneEventArgs e)
		{
		}

		[Token(Token = "0x60027F7")]
		[Address(RVA = "0x97D468", Offset = "0x97D468", VA = "0x97D468")]
		public SnapDropZoneGroup_Switcher()
		{
		}
	}
	[Token(Token = "0x20004E7")]
	public class Sphere_Spawner : MonoBehaviour
	{
		[Token(Token = "0x40022D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private GameObject spawnMe;

		[Token(Token = "0x40022D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Vector3 position;

		[Token(Token = "0x60027F8")]
		[Address(RVA = "0x97D470", Offset = "0x97D470", VA = "0x97D470")]
		private void Start()
		{
		}

		[Token(Token = "0x60027F9")]
		[Address(RVA = "0x97D774", Offset = "0x97D774", VA = "0x97D774")]
		private void DoTriggerPressed(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60027FA")]
		[Address(RVA = "0x97D7CC", Offset = "0x97D7CC", VA = "0x97D7CC")]
		private void DoTouchpadPressed(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60027FB")]
		[Address(RVA = "0x97D83C", Offset = "0x97D83C", VA = "0x97D83C")]
		private void CreateSphere()
		{
		}

		[Token(Token = "0x60027FC")]
		[Address(RVA = "0x97D92C", Offset = "0x97D92C", VA = "0x97D92C")]
		public Sphere_Spawner()
		{
		}
	}
	[Token(Token = "0x20004E8")]
	public class Sword : VRTK_InteractableObject
	{
		[Token(Token = "0x40022D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
		private float impactMagnifier;

		[Token(Token = "0x40022D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		private float collisionForce;

		[Token(Token = "0x40022D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
		private float maxCollisionForce;

		[Token(Token = "0x40022D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		private VRTK_ControllerReference controllerReference;

		[Token(Token = "0x60027FD")]
		[Address(RVA = "0x974550", Offset = "0x974550", VA = "0x974550")]
		public float CollisionForce()
		{
			return default(float);
		}

		[Token(Token = "0x60027FE")]
		[Address(RVA = "0x97D934", Offset = "0x97D934", VA = "0x97D934", Slot = "26")]
		public override void Grabbed(VRTK_InteractGrab grabbingObject)
		{
		}

		[Token(Token = "0x60027FF")]
		[Address(RVA = "0x97D9F0", Offset = "0x97D9F0", VA = "0x97D9F0", Slot = "27")]
		public override void Ungrabbed(VRTK_InteractGrab previousGrabbingObject)
		{
		}

		[Token(Token = "0x6002800")]
		[Address(RVA = "0x97DA18", Offset = "0x97DA18", VA = "0x97DA18", Slot = "66")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6002801")]
		[Address(RVA = "0x97DA5C", Offset = "0x97DA5C", VA = "0x97DA5C")]
		private void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x6002802")]
		[Address(RVA = "0x97DBB4", Offset = "0x97DBB4", VA = "0x97DBB4")]
		public Sword()
		{
		}
	}
	[Token(Token = "0x20004E9")]
	public class UI_Interactions : MonoBehaviour
	{
		[Token(Token = "0x2000898")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6461A0", Offset = "0x6461A0")]
		private sealed class <CreateCanvasOnNextFrame>d__7 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002C75")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002C76")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x1700037C")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6003426")]
				[Address(RVA = "0x984D38", Offset = "0x984D38", VA = "0x984D38", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700037D")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003428")]
				[Address(RVA = "0x984DA8", Offset = "0x984DA8", VA = "0x984DA8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003423")]
			[Address(RVA = "0x984270", Offset = "0x984270", VA = "0x984270")]
			[DebuggerHidden]
			public <CreateCanvasOnNextFrame>d__7(int <>1__state)
			{
			}

			[Token(Token = "0x6003424")]
			[Address(RVA = "0x9842A4", Offset = "0x9842A4", VA = "0x9842A4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003425")]
			[Address(RVA = "0x9842A8", Offset = "0x9842A8", VA = "0x9842A8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003427")]
			[Address(RVA = "0x984D40", Offset = "0x984D40", VA = "0x984D40", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40022D7")]
		private const int EXISTING_CANVAS_COUNT = 4;

		[Token(Token = "0x6002803")]
		[Address(RVA = "0x983E10", Offset = "0x983E10", VA = "0x983E10")]
		public void Button_Red()
		{
		}

		[Token(Token = "0x6002804")]
		[Address(RVA = "0x983E7C", Offset = "0x983E7C", VA = "0x983E7C")]
		public void Button_Pink()
		{
		}

		[Token(Token = "0x6002805")]
		[Address(RVA = "0x983EE8", Offset = "0x983EE8", VA = "0x983EE8")]
		public void Toggle(bool state)
		{
		}

		[Token(Token = "0x6002806")]
		[Address(RVA = "0x983F88", Offset = "0x983F88", VA = "0x983F88")]
		public void Dropdown(int value)
		{
		}

		[Token(Token = "0x6002807")]
		[Address(RVA = "0x984038", Offset = "0x984038", VA = "0x984038")]
		public void SetDropText(BaseEventData data)
		{
		}

		[Token(Token = "0x6002808")]
		[Address(RVA = "0x9841E4", Offset = "0x9841E4", VA = "0x9841E4")]
		public void CreateCanvas()
		{
		}

		[Token(Token = "0x6002809")]
		[Address(RVA = "0x984210", Offset = "0x984210", VA = "0x984210")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6700A8", Offset = "0x6700A8")]
		private IEnumerator CreateCanvasOnNextFrame()
		{
			return null;
		}

		[Token(Token = "0x600280A")]
		[Address(RVA = "0x98429C", Offset = "0x98429C", VA = "0x98429C")]
		public UI_Interactions()
		{
		}
	}
	[Token(Token = "0x20004EA")]
	public class UI_Keyboard : MonoBehaviour
	{
		[Token(Token = "0x40022D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private InputField input;

		[Token(Token = "0x600280B")]
		[Address(RVA = "0x984DB0", Offset = "0x984DB0", VA = "0x984DB0")]
		public void ClickKey(string character)
		{
		}

		[Token(Token = "0x600280C")]
		[Address(RVA = "0x984E10", Offset = "0x984E10", VA = "0x984E10")]
		public void Backspace()
		{
		}

		[Token(Token = "0x600280D")]
		[Address(RVA = "0x984F14", Offset = "0x984F14", VA = "0x984F14")]
		public void Enter()
		{
		}

		[Token(Token = "0x600280E")]
		[Address(RVA = "0x984FF0", Offset = "0x984FF0", VA = "0x984FF0")]
		private void Start()
		{
		}

		[Token(Token = "0x600280F")]
		[Address(RVA = "0x985048", Offset = "0x985048", VA = "0x985048")]
		public UI_Keyboard()
		{
		}
	}
	[Token(Token = "0x20004EB")]
	public class UseRotate : VRTK_InteractableObject
	{
		[Token(Token = "0x40022D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x663520", Offset = "0x663520")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x663520", Offset = "0x663520")]
		private float idleSpinSpeed;

		[Token(Token = "0x40022DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x663590", Offset = "0x663590")]
		private float activeSpinSpeed;

		[Token(Token = "0x40022DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6635DC", Offset = "0x6635DC")]
		[SerializeField]
		private Transform rotatingObject;

		[Token(Token = "0x40022DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		[SerializeField]
		private Vector3 rotationAxis;

		[Token(Token = "0x40022DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19C")]
		private float spinSpeed;

		[Token(Token = "0x6002810")]
		[Address(RVA = "0x985050", Offset = "0x985050", VA = "0x985050", Slot = "28")]
		public override void StartUsing([Optional] VRTK_InteractUse currentUsingObject)
		{
		}

		[Token(Token = "0x6002811")]
		[Address(RVA = "0x98507C", Offset = "0x98507C", VA = "0x98507C", Slot = "29")]
		public override void StopUsing([Optional] VRTK_InteractUse previousUsingObject, bool resetUsingObjectState = true)
		{
		}

		[Token(Token = "0x6002812")]
		[Address(RVA = "0x9850AC", Offset = "0x9850AC", VA = "0x9850AC")]
		protected void Start()
		{
		}

		[Token(Token = "0x6002813")]
		[Address(RVA = "0x98513C", Offset = "0x98513C", VA = "0x98513C", Slot = "69")]
		protected override void Update()
		{
		}

		[Token(Token = "0x6002814")]
		[Address(RVA = "0x9851BC", Offset = "0x9851BC", VA = "0x9851BC")]
		public UseRotate()
		{
		}
	}
	[Token(Token = "0x20004EC")]
	public class VRTK_ControllerAppearance_Example : MonoBehaviour
	{
		[Token(Token = "0x40022DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool highlightBodyOnlyOnCollision;

		[Token(Token = "0x40022DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool pulseTriggerHighlightColor;

		[Token(Token = "0x40022E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private VRTK_ControllerTooltips tooltips;

		[Token(Token = "0x40022E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private VRTK_ControllerHighlighter highligher;

		[Token(Token = "0x40022E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private VRTK_ControllerEvents events;

		[Token(Token = "0x40022E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Color highlightColor;

		[Token(Token = "0x40022E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Color pulseColor;

		[Token(Token = "0x40022E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Color currentPulseColor;

		[Token(Token = "0x40022E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float highlightTimer;

		[Token(Token = "0x40022E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private float pulseTimer;

		[Token(Token = "0x40022E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float dimOpacity;

		[Token(Token = "0x40022E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private float defaultOpacity;

		[Token(Token = "0x40022EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private bool highlighted;

		[Token(Token = "0x6002815")]
		[Address(RVA = "0x985A1C", Offset = "0x985A1C", VA = "0x985A1C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6002816")]
		[Address(RVA = "0x985FBC", Offset = "0x985FBC", VA = "0x985FBC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6002817")]
		[Address(RVA = "0x986338", Offset = "0x986338", VA = "0x986338")]
		private void PulseTrigger()
		{
		}

		[Token(Token = "0x6002818")]
		[Address(RVA = "0x98641C", Offset = "0x98641C", VA = "0x98641C")]
		private void DoTriggerPressed(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6002819")]
		[Address(RVA = "0x986578", Offset = "0x986578", VA = "0x986578")]
		private void DoTriggerReleased(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x600281A")]
		[Address(RVA = "0x9866B4", Offset = "0x9866B4", VA = "0x9866B4")]
		private void DoButtonOnePressed(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x600281B")]
		[Address(RVA = "0x9867D4", Offset = "0x9867D4", VA = "0x9867D4")]
		private void DoButtonOneReleased(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x600281C")]
		[Address(RVA = "0x9868F0", Offset = "0x9868F0", VA = "0x9868F0")]
		private void DoButtonTwoPressed(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x600281D")]
		[Address(RVA = "0x986A10", Offset = "0x986A10", VA = "0x986A10")]
		private void DoButtonTwoReleased(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x600281E")]
		[Address(RVA = "0x986B2C", Offset = "0x986B2C", VA = "0x986B2C")]
		private void DoStartMenuPressed(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x600281F")]
		[Address(RVA = "0x986C4C", Offset = "0x986C4C", VA = "0x986C4C")]
		private void DoStartMenuReleased(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6002820")]
		[Address(RVA = "0x986D68", Offset = "0x986D68", VA = "0x986D68")]
		private void DoGripPressed(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6002821")]
		[Address(RVA = "0x986ECC", Offset = "0x986ECC", VA = "0x986ECC")]
		private void DoGripReleased(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6002822")]
		[Address(RVA = "0x98700C", Offset = "0x98700C", VA = "0x98700C")]
		private void DoTouchpadPressed(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6002823")]
		[Address(RVA = "0x98712C", Offset = "0x98712C", VA = "0x98712C")]
		private void DoTouchpadReleased(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6002824")]
		[Address(RVA = "0x987248", Offset = "0x987248", VA = "0x987248")]
		private void OnTriggerEnter(Collider collider)
		{
		}

		[Token(Token = "0x6002825")]
		[Address(RVA = "0x98724C", Offset = "0x98724C", VA = "0x98724C")]
		private void OnTriggerStay(Collider collider)
		{
		}

		[Token(Token = "0x6002826")]
		[Address(RVA = "0x987384", Offset = "0x987384", VA = "0x987384")]
		private void OnTriggerExit(Collider collider)
		{
		}

		[Token(Token = "0x6002827")]
		[Address(RVA = "0x987464", Offset = "0x987464", VA = "0x987464")]
		public VRTK_ControllerAppearance_Example()
		{
		}
	}
	[Token(Token = "0x20004ED")]
	public class VRTK_ControllerEvents_ListenerExample : MonoBehaviour
	{
		[Token(Token = "0x2000899")]
		public enum EventQuickSelect
		{
			[Token(Token = "0x4002C78")]
			Custom,
			[Token(Token = "0x4002C79")]
			None,
			[Token(Token = "0x4002C7A")]
			All,
			[Token(Token = "0x4002C7B")]
			ButtonOnly,
			[Token(Token = "0x4002C7C")]
			AxisOnly,
			[Token(Token = "0x4002C7D")]
			SenseAxisOnly
		}

		[Token(Token = "0x40022EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x663638", Offset = "0x663638")]
		public EventQuickSelect quickSelect;

		[Token(Token = "0x40022EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x663670", Offset = "0x663670")]
		public bool triggerButtonEvents;

		[Token(Token = "0x40022ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
		public bool gripButtonEvents;

		[Token(Token = "0x40022EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
		public bool touchpadButtonEvents;

		[Token(Token = "0x40022EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F")]
		public bool buttonOneButtonEvents;

		[Token(Token = "0x40022F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool buttonTwoButtonEvents;

		[Token(Token = "0x40022F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		public bool startMenuButtonEvents;

		[Token(Token = "0x40022F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6636A8", Offset = "0x6636A8")]
		public bool triggerAxisEvents;

		[Token(Token = "0x40022F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x23")]
		public bool gripAxisEvents;

		[Token(Token = "0x40022F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool touchpadAxisEvents;

		[Token(Token = "0x40022F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
		public bool touchpadTwoAxisEvents;

		[Token(Token = "0x40022F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x26")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6636E0", Offset = "0x6636E0")]
		public bool triggerSenseAxisEvents;

		[Token(Token = "0x40022F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x27")]
		public bool touchpadSenseAxisEvents;

		[Token(Token = "0x40022F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool middleFingerSenseAxisEvents;

		[Token(Token = "0x40022F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		public bool ringFingerSenseAxisEvents;

		[Token(Token = "0x40022FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
		public bool pinkyFingerSenseAxisEvents;

		[Token(Token = "0x40022FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private VRTK_ControllerEvents controllerEvents;

		[Token(Token = "0x6002828")]
		[Address(RVA = "0x9874B4", Offset = "0x9874B4", VA = "0x9874B4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6002829")]
		[Address(RVA = "0x9881D8", Offset = "0x9881D8", VA = "0x9881D8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600282A")]
		[Address(RVA = "0x988D94", Offset = "0x988D94", VA = "0x988D94")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x600282B")]
		[Address(RVA = "0x988E00", Offset = "0x988E00", VA = "0x988E00")]
		private void DebugLogger(uint index, string button, string action, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x600282C")]
		[Address(RVA = "0x989490", Offset = "0x989490", VA = "0x989490")]
		private void DoTriggerPressed(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x600282D")]
		[Address(RVA = "0x989558", Offset = "0x989558", VA = "0x989558")]
		private void DoTriggerReleased(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x600282E")]
		[Address(RVA = "0x989620", Offset = "0x989620", VA = "0x989620")]
		private void DoTriggerTouchStart(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x600282F")]
		[Address(RVA = "0x9896E8", Offset = "0x9896E8", VA = "0x9896E8")]
		private void DoTriggerTouchEnd(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6002830")]
		[Address(RVA = "0x9897B0", Offset = "0x9897B0", VA = "0x9897B0")]
		private void DoTriggerHairlineStart(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6002831")]
		[Address(RVA = "0x989878", Offset = "0x989878", VA = "0x989878")]
		private void DoTriggerHairlineEnd(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6002832")]
		[Address(RVA = "0x989940", Offset = "0x989940", VA = "0x989940")]
		private void DoTriggerClicked(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6002833")]
		[Address(RVA = "0x989A08", Offset = "0x989A08", VA = "0x989A08")]
		private void DoTriggerUnclicked(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6002834")]
		[Address(RVA = "0x989AD0", Offset = "0x989AD0", VA = "0x989AD0")]
		private void DoTriggerAxisChanged(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6002835")]
		[Address(RVA = "0x989B98", Offset = "0x989B98", VA = "0x989B98")]
		private void DoTriggerSenseAxisChanged(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6002836")]
		[Address(RVA = "0x989C60", Offset = "0x989C60", VA = "0x989C60")]
		private void DoGripPressed(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6002837")]
		[Address(RVA = "0x989D28", Offset = "0x989D28", VA = "0x989D28")]
		private void DoGripReleased(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6002838")]
		[Address(RVA = "0x989DF0", Offset = "0x989DF0", VA = "0x989DF0")]
		private void DoGripTouchStart(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6002839")]
		[Address(RVA = "0x989EB8", Offset = "0x989EB8", VA = "0x989EB8")]
		private void DoGripTouchEnd(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x600283A")]
		[Address(RVA = "0x989F80", Offset = "0x989F80", VA = "0x989F80")]
		private void DoGripHairlineStart(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x600283B")]
		[Address(RVA = "0x98A048", Offset = "0x98A048", VA = "0x98A048")]
		private void DoGripHairlineEnd(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x600283C")]
		[Address(RVA = "0x98A110", Offset = "0x98A110", VA = "0x98A110")]
		private void DoGripClicked(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x600283D")]
		[Address(RVA = "0x98A1D8", Offset = "0x98A1D8", VA = "0x98A1D8")]
		private void DoGripUnclicked(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x600283E")]
		[Address(RVA = "0x98A2A0", Offset = "0x98A2A0", VA = "0x98A2A0")]
		private void DoGripAxisChanged(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x600283F")]
		[Address(RVA = "0x98A368", Offset = "0x98A368", VA = "0x98A368")]
		private void DoTouchpadPressed(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6002840")]
		[Address(RVA = "0x98A430", Offset = "0x98A430", VA = "0x98A430")]
		private void DoTouchpadReleased(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6002841")]
		[Address(RVA = "0x98A4F8", Offset = "0x98A4F8", VA = "0x98A4F8")]
		private void DoTouchpadTouchStart(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6002842")]
		[Address(RVA = "0x98A5C0", Offset = "0x98A5C0", VA = "0x98A5C0")]
		private void DoTouchpadTouchEnd(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6002843")]
		[Address(RVA = "0x98A688", Offset = "0x98A688", VA = "0x98A688")]
		private void DoTouchpadAxisChanged(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6002844")]
		[Address(RVA = "0x98A750", Offset = "0x98A750", VA = "0x98A750")]
		private void DoTouchpadTwoAxisChanged(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6002845")]
		[Address(RVA = "0x98A818", Offset = "0x98A818", VA = "0x98A818")]
		private void DoTouchpadSenseAxisChanged(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6002846")]
		[Address(RVA = "0x98A8E0", Offset = "0x98A8E0", VA = "0x98A8E0")]
		private void DoButtonOnePressed(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6002847")]
		[Address(RVA = "0x98A9A8", Offset = "0x98A9A8", VA = "0x98A9A8")]
		private void DoButtonOneReleased(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6002848")]
		[Address(RVA = "0x98AA70", Offset = "0x98AA70", VA = "0x98AA70")]
		private void DoButtonOneTouchStart(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6002849")]
		[Address(RVA = "0x98AB38", Offset = "0x98AB38", VA = "0x98AB38")]
		private void DoButtonOneTouchEnd(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x600284A")]
		[Address(RVA = "0x98AC00", Offset = "0x98AC00", VA = "0x98AC00")]
		private void DoButtonTwoPressed(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x600284B")]
		[Address(RVA = "0x98ACC8", Offset = "0x98ACC8", VA = "0x98ACC8")]
		private void DoButtonTwoReleased(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x600284C")]
		[Address(RVA = "0x98AD90", Offset = "0x98AD90", VA = "0x98AD90")]
		private void DoButtonTwoTouchStart(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x600284D")]
		[Address(RVA = "0x98AE58", Offset = "0x98AE58", VA = "0x98AE58")]
		private void DoButtonTwoTouchEnd(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x600284E")]
		[Address(RVA = "0x98AF20", Offset = "0x98AF20", VA = "0x98AF20")]
		private void DoStartMenuPressed(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x600284F")]
		[Address(RVA = "0x98AFE8", Offset = "0x98AFE8", VA = "0x98AFE8")]
		private void DoStartMenuReleased(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6002850")]
		[Address(RVA = "0x98B0B0", Offset = "0x98B0B0", VA = "0x98B0B0")]
		private void DoControllerEnabled(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6002851")]
		[Address(RVA = "0x98B164", Offset = "0x98B164", VA = "0x98B164")]
		private void DoControllerDisabled(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6002852")]
		[Address(RVA = "0x98B218", Offset = "0x98B218", VA = "0x98B218")]
		private void DoControllerIndexChanged(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6002853")]
		[Address(RVA = "0x98B2CC", Offset = "0x98B2CC", VA = "0x98B2CC")]
		private void DoMiddleFingerSenseAxisChanged(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6002854")]
		[Address(RVA = "0x98B394", Offset = "0x98B394", VA = "0x98B394")]
		private void DoRingFingerSenseAxisChanged(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6002855")]
		[Address(RVA = "0x98B45C", Offset = "0x98B45C", VA = "0x98B45C")]
		private void DoPinkyFingerSenseAxisChanged(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6002856")]
		[Address(RVA = "0x98B524", Offset = "0x98B524", VA = "0x98B524")]
		public VRTK_ControllerEvents_ListenerExample()
		{
		}
	}
	[Token(Token = "0x20004EE")]
	public class VRTK_ControllerInteract_ListenerExample : MonoBehaviour
	{
		[Token(Token = "0x6002857")]
		[Address(RVA = "0x98B540", Offset = "0x98B540", VA = "0x98B540")]
		private void Start()
		{
		}

		[Token(Token = "0x6002858")]
		[Address(RVA = "0x98B8E0", Offset = "0x98B8E0", VA = "0x98B8E0")]
		private void DebugLogger(uint index, string action, GameObject target)
		{
		}

		[Token(Token = "0x6002859")]
		[Address(RVA = "0x98BBA0", Offset = "0x98BBA0", VA = "0x98BBA0")]
		private void DoInteractTouch(object sender, ObjectInteractEventArgs e)
		{
		}

		[Token(Token = "0x600285A")]
		[Address(RVA = "0x98BC6C", Offset = "0x98BC6C", VA = "0x98BC6C")]
		private void DoInteractUntouch(object sender, ObjectInteractEventArgs e)
		{
		}

		[Token(Token = "0x600285B")]
		[Address(RVA = "0x98BD38", Offset = "0x98BD38", VA = "0x98BD38")]
		private void DoInteractGrab(object sender, ObjectInteractEventArgs e)
		{
		}

		[Token(Token = "0x600285C")]
		[Address(RVA = "0x98BE04", Offset = "0x98BE04", VA = "0x98BE04")]
		private void DoInteractUngrab(object sender, ObjectInteractEventArgs e)
		{
		}

		[Token(Token = "0x600285D")]
		[Address(RVA = "0x98BED0", Offset = "0x98BED0", VA = "0x98BED0")]
		public VRTK_ControllerInteract_ListenerExample()
		{
		}
	}
	[Token(Token = "0x20004EF")]
	public class VRTK_ControllerPointerEvents_ListenerExample : MonoBehaviour
	{
		[Token(Token = "0x40022FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool showHoverState;

		[Token(Token = "0x600285E")]
		[Address(RVA = "0x98BED8", Offset = "0x98BED8", VA = "0x98BED8")]
		private void Start()
		{
		}

		[Token(Token = "0x600285F")]
		[Address(RVA = "0x98C238", Offset = "0x98C238", VA = "0x98C238")]
		private void DebugLogger(uint index, string action, Transform target, RaycastHit raycastHit, float distance, Vector3 tipPosition)
		{
		}

		[Token(Token = "0x6002860")]
		[Address(RVA = "0x98C7E8", Offset = "0x98C7E8", VA = "0x98C7E8")]
		private void DoPointerIn(object sender, DestinationMarkerEventArgs e)
		{
		}

		[Token(Token = "0x6002861")]
		[Address(RVA = "0x98C8BC", Offset = "0x98C8BC", VA = "0x98C8BC")]
		private void DoPointerOut(object sender, DestinationMarkerEventArgs e)
		{
		}

		[Token(Token = "0x6002862")]
		[Address(RVA = "0x98C990", Offset = "0x98C990", VA = "0x98C990")]
		private void DoPointerHover(object sender, DestinationMarkerEventArgs e)
		{
		}

		[Token(Token = "0x6002863")]
		[Address(RVA = "0x98CA64", Offset = "0x98CA64", VA = "0x98CA64")]
		private void DoPointerDestinationSet(object sender, DestinationMarkerEventArgs e)
		{
		}

		[Token(Token = "0x6002864")]
		[Address(RVA = "0x98CB38", Offset = "0x98CB38", VA = "0x98CB38")]
		public VRTK_ControllerPointerEvents_ListenerExample()
		{
		}
	}
	[Token(Token = "0x20004F0")]
	public class VRTK_ControllerUIPointerEvents_ListenerExample : MonoBehaviour
	{
		[Token(Token = "0x40022FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool togglePointerOnHit;

		[Token(Token = "0x6002865")]
		[Address(RVA = "0x98CB40", Offset = "0x98CB40", VA = "0x98CB40")]
		private void Start()
		{
		}

		[Token(Token = "0x6002866")]
		[Address(RVA = "0x98CF14", Offset = "0x98CF14", VA = "0x98CF14")]
		private void VRTK_ControllerUIPointerEvents_ListenerExample_UIPointerElementEnter(object sender, UIPointerEventArgs e)
		{
		}

		[Token(Token = "0x6002867")]
		[Address(RVA = "0x98D36C", Offset = "0x98D36C", VA = "0x98D36C")]
		private void VRTK_ControllerUIPointerEvents_ListenerExample_UIPointerElementExit(object sender, UIPointerEventArgs e)
		{
		}

		[Token(Token = "0x6002868")]
		[Address(RVA = "0x98D6F4", Offset = "0x98D6F4", VA = "0x98D6F4")]
		private void VRTK_ControllerUIPointerEvents_ListenerExample_UIPointerElementClick(object sender, UIPointerEventArgs e)
		{
		}

		[Token(Token = "0x6002869")]
		[Address(RVA = "0x98DABC", Offset = "0x98DABC", VA = "0x98DABC")]
		private void VRTK_ControllerUIPointerEvents_ListenerExample_UIPointerElementDragStart(object sender, UIPointerEventArgs e)
		{
		}

		[Token(Token = "0x600286A")]
		[Address(RVA = "0x98DE84", Offset = "0x98DE84", VA = "0x98DE84")]
		private void VRTK_ControllerUIPointerEvents_ListenerExample_UIPointerElementDragEnd(object sender, UIPointerEventArgs e)
		{
		}

		[Token(Token = "0x600286B")]
		[Address(RVA = "0x98E24C", Offset = "0x98E24C", VA = "0x98E24C")]
		public VRTK_ControllerUIPointerEvents_ListenerExample()
		{
		}
	}
	[Token(Token = "0x20004F1")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x643BE0", Offset = "0x643BE0")]
	public class VRTK_RoomExtender_ControllerExample : MonoBehaviour
	{
		[Token(Token = "0x40022FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected VRTK_RoomExtender roomExtender;

		[Token(Token = "0x600286C")]
		[Address(RVA = "0x98E254", Offset = "0x98E254", VA = "0x98E254")]
		private void Start()
		{
		}

		[Token(Token = "0x600286D")]
		[Address(RVA = "0x98E6A0", Offset = "0x98E6A0", VA = "0x98E6A0")]
		private void DoTouchpadPressed(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x600286E")]
		[Address(RVA = "0x98E7B8", Offset = "0x98E7B8", VA = "0x98E7B8")]
		private void DoTouchpadReleased(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x600286F")]
		[Address(RVA = "0x98E824", Offset = "0x98E824", VA = "0x98E824")]
		private void DoSwitchMovementFunction(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6002870")]
		[Address(RVA = "0x98E75C", Offset = "0x98E75C", VA = "0x98E75C")]
		private void EnableAdditionalMovement()
		{
		}

		[Token(Token = "0x6002871")]
		[Address(RVA = "0x98E78C", Offset = "0x98E78C", VA = "0x98E78C")]
		private void DisableAdditionalMovement()
		{
		}

		[Token(Token = "0x6002872")]
		[Address(RVA = "0x98E888", Offset = "0x98E888", VA = "0x98E888")]
		public VRTK_RoomExtender_ControllerExample()
		{
		}
	}
	[Token(Token = "0x20004F2")]
	public class Whirlygig : VRTK_InteractableObject
	{
		[Token(Token = "0x40022FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
		private float spinSpeed;

		[Token(Token = "0x4002300")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		private Transform rotator;

		[Token(Token = "0x6002873")]
		[Address(RVA = "0x98E890", Offset = "0x98E890", VA = "0x98E890", Slot = "28")]
		public override void StartUsing([Optional] VRTK_InteractUse currentUsingObject)
		{
		}

		[Token(Token = "0x6002874")]
		[Address(RVA = "0x98E8BC", Offset = "0x98E8BC", VA = "0x98E8BC", Slot = "29")]
		public override void StopUsing([Optional] VRTK_InteractUse previousUsingObject, bool resetUsingObjectState = true)
		{
		}

		[Token(Token = "0x6002875")]
		[Address(RVA = "0x98E8E8", Offset = "0x98E8E8", VA = "0x98E8E8")]
		protected void Start()
		{
		}

		[Token(Token = "0x6002876")]
		[Address(RVA = "0x98E95C", Offset = "0x98E95C", VA = "0x98E95C", Slot = "69")]
		protected override void Update()
		{
		}

		[Token(Token = "0x6002877")]
		[Address(RVA = "0x98E9FC", Offset = "0x98E9FC", VA = "0x98E9FC")]
		public Whirlygig()
		{
		}
	}
	[Token(Token = "0x20004F3")]
	public class Zipline : VRTK_InteractableObject
	{
		[Token(Token = "0x4002301")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x663718", Offset = "0x663718")]
		public float downStartSpeed;

		[Token(Token = "0x4002302")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		public float acceleration;

		[Token(Token = "0x4002303")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
		public float upSpeed;

		[Token(Token = "0x4002304")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		public Transform handleEndPosition;

		[Token(Token = "0x4002305")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		public Transform handleStartPosition;

		[Token(Token = "0x4002306")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		public GameObject handle;

		[Token(Token = "0x4002307")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		private bool isMoving;

		[Token(Token = "0x4002308")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A1")]
		private bool isMovingDown;

		[Token(Token = "0x4002309")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A4")]
		private float currentSpeed;

		[Token(Token = "0x6002878")]
		[Address(RVA = "0x98EA04", Offset = "0x98EA04", VA = "0x98EA04", Slot = "10")]
		public override void OnInteractableObjectGrabbed(InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x6002879")]
		[Address(RVA = "0x98EA30", Offset = "0x98EA30", VA = "0x98EA30", Slot = "65")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x600287A")]
		[Address(RVA = "0x98EA5C", Offset = "0x98EA5C", VA = "0x98EA5C", Slot = "69")]
		protected override void Update()
		{
		}

		[Token(Token = "0x600287B")]
		[Address(RVA = "0x98ED1C", Offset = "0x98ED1C", VA = "0x98ED1C")]
		public Zipline()
		{
		}
	}
}
namespace VRTK.Examples.Tests
{
	[Token(Token = "0x20004F4")]
	public abstract class VRTK_BaseTest : MonoBehaviour
	{
		[Token(Token = "0x200089A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6461B0", Offset = "0x6461B0")]
		private sealed class <RunTests>d__8 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002C7E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002C7F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002C80")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VRTK_BaseTest <>4__this;

			[Token(Token = "0x1700037E")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600342C")]
				[Address(RVA = "0x97E4E8", Offset = "0x97E4E8", VA = "0x97E4E8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700037F")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600342E")]
				[Address(RVA = "0x97E558", Offset = "0x97E558", VA = "0x97E558", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003429")]
			[Address(RVA = "0x97E400", Offset = "0x97E400", VA = "0x97E400")]
			[DebuggerHidden]
			public <RunTests>d__8(int <>1__state)
			{
			}

			[Token(Token = "0x600342A")]
			[Address(RVA = "0x97E434", Offset = "0x97E434", VA = "0x97E434", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600342B")]
			[Address(RVA = "0x97E438", Offset = "0x97E438", VA = "0x97E438", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600342D")]
			[Address(RVA = "0x97E4F0", Offset = "0x97E4F0", VA = "0x97E4F0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400230A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected string currentTest;

		[Token(Token = "0x400230B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected string currentSetup;

		[Token(Token = "0x600287C")]
		protected abstract void Test();

		[Token(Token = "0x600287D")]
		[Address(RVA = "0x97DBCC", Offset = "0x97DBCC", VA = "0x97DBCC", Slot = "5")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x600287E")]
		[Address(RVA = "0x97DC00", Offset = "0x97DC00", VA = "0x97DC00", Slot = "6")]
		protected virtual void BeginTest(string name, int level = 1)
		{
		}

		[Token(Token = "0x600287F")]
		[Address(RVA = "0x97DE64", Offset = "0x97DE64", VA = "0x97DE64", Slot = "7")]
		protected virtual void SetUp(string message)
		{
		}

		[Token(Token = "0x6002880")]
		[Address(RVA = "0x97DF08", Offset = "0x97DF08", VA = "0x97DF08", Slot = "8")]
		protected virtual void TearDown()
		{
		}

		[Token(Token = "0x6002881")]
		[Address(RVA = "0x97DF74", Offset = "0x97DF74", VA = "0x97DF74", Slot = "9")]
		protected virtual void Assert(string description, bool assertion, string failure, string success = "")
		{
		}

		[Token(Token = "0x6002882")]
		[Address(RVA = "0x97E38C", Offset = "0x97E38C", VA = "0x97E38C", Slot = "10")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x67010C", Offset = "0x67010C")]
		protected virtual IEnumerator RunTests()
		{
			return null;
		}

		[Token(Token = "0x6002883")]
		[Address(RVA = "0x97E42C", Offset = "0x97E42C", VA = "0x97E42C")]
		protected VRTK_BaseTest()
		{
		}
	}
	[Token(Token = "0x20004F5")]
	public class VRTK_ControllerReference_Setup : VRTK_BaseTest
	{
		[Token(Token = "0x400230C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public uint overrideActualIndex;

		[Token(Token = "0x400230D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject overrideActualController;

		[Token(Token = "0x400230E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject overrideAliasController;

		[Token(Token = "0x400230F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GameObject overrideModelController;

		[Token(Token = "0x4002310")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public SDK_BaseController.ControllerHand actualControllerHand;

		[Token(Token = "0x4002311")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected VRTK_ControllerReference testReference;

		[Token(Token = "0x4002312")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		protected uint actualIndex;

		[Token(Token = "0x4002313")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		protected GameObject actualController;

		[Token(Token = "0x4002314")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		protected GameObject aliasController;

		[Token(Token = "0x4002315")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		protected GameObject modelController;

		[Token(Token = "0x6002884")]
		[Address(RVA = "0x97E560", Offset = "0x97E560", VA = "0x97E560", Slot = "7")]
		protected override void SetUp(string message)
		{
		}

		[Token(Token = "0x6002885")]
		[Address(RVA = "0x97E754", Offset = "0x97E754", VA = "0x97E754", Slot = "8")]
		protected override void TearDown()
		{
		}

		[Token(Token = "0x6002886")]
		[Address(RVA = "0x97E788", Offset = "0x97E788", VA = "0x97E788", Slot = "4")]
		protected override void Test()
		{
		}

		[Token(Token = "0x6002887")]
		[Address(RVA = "0x97E87C", Offset = "0x97E87C", VA = "0x97E87C", Slot = "11")]
		protected virtual List<SDK_BaseController.ControllerHand> GetOtherHands(SDK_BaseController.ControllerHand ignore)
		{
			return null;
		}

		[Token(Token = "0x6002888")]
		[Address(RVA = "0x97E964", Offset = "0x97E964", VA = "0x97E964", Slot = "12")]
		protected virtual void TestNullState()
		{
		}

		[Token(Token = "0x6002889")]
		[Address(RVA = "0x97EA0C", Offset = "0x97EA0C", VA = "0x97EA0C", Slot = "13")]
		protected virtual void TestStaticIndex()
		{
		}

		[Token(Token = "0x600288A")]
		[Address(RVA = "0x97F9FC", Offset = "0x97F9FC", VA = "0x97F9FC", Slot = "14")]
		protected virtual void TestStaticActual()
		{
		}

		[Token(Token = "0x600288B")]
		[Address(RVA = "0x9809EC", Offset = "0x9809EC", VA = "0x9809EC", Slot = "15")]
		protected virtual void TestStaticAlias()
		{
		}

		[Token(Token = "0x600288C")]
		[Address(RVA = "0x9819DC", Offset = "0x9819DC", VA = "0x9819DC", Slot = "16")]
		protected virtual void TestStaticModel()
		{
		}

		[Token(Token = "0x600288D")]
		[Address(RVA = "0x9829CC", Offset = "0x9829CC", VA = "0x9829CC", Slot = "17")]
		protected virtual void TestStaticHand()
		{
		}

		[Token(Token = "0x600288E")]
		[Address(RVA = "0x9839BC", Offset = "0x9839BC", VA = "0x9839BC", Slot = "18")]
		protected virtual void TestStaticIsValid()
		{
		}

		[Token(Token = "0x600288F")]
		[Address(RVA = "0x983B7C", Offset = "0x983B7C", VA = "0x983B7C", Slot = "19")]
		protected virtual void TestStaticGetRealIndex()
		{
		}

		[Token(Token = "0x6002890")]
		[Address(RVA = "0x983DF8", Offset = "0x983DF8", VA = "0x983DF8")]
		public VRTK_ControllerReference_Setup()
		{
		}
	}
}
namespace VRTK.Examples.Utilities
{
	[Token(Token = "0x20004F6")]
	public class SceneChanger : MonoBehaviour
	{
		[Token(Token = "0x4002316")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool canPress;

		[Token(Token = "0x4002317")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private VRTK_ControllerReference controllerReference;

		[Token(Token = "0x6002891")]
		[Address(RVA = "0x985240", Offset = "0x985240", VA = "0x985240")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002892")]
		[Address(RVA = "0x9852A4", Offset = "0x9852A4", VA = "0x9852A4")]
		private bool IsForwardPressed()
		{
			return default(bool);
		}

		[Token(Token = "0x6002893")]
		[Address(RVA = "0x9853D8", Offset = "0x9853D8", VA = "0x9853D8")]
		private bool IsBackPressed()
		{
			return default(bool);
		}

		[Token(Token = "0x6002894")]
		[Address(RVA = "0x98550C", Offset = "0x98550C", VA = "0x98550C")]
		private void ResetPress()
		{
		}

		[Token(Token = "0x6002895")]
		[Address(RVA = "0x985518", Offset = "0x985518", VA = "0x985518")]
		private void Update()
		{
		}

		[Token(Token = "0x6002896")]
		[Address(RVA = "0x98565C", Offset = "0x98565C", VA = "0x98565C")]
		public SceneChanger()
		{
		}
	}
	[Token(Token = "0x20004F7")]
	public class SceneLoader : MonoBehaviour
	{
		[Token(Token = "0x4002318")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UnityEngine.Object sceneConstructor;

		[Token(Token = "0x4002319")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool sdkSwitcher;

		[Token(Token = "0x400231A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject leftScriptAlias;

		[Token(Token = "0x400231B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject rightScriptAlias;

		[Token(Token = "0x400231C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected VRTK_SDKSetupSwitcher setupSwitcher;

		[Token(Token = "0x6002897")]
		[Address(RVA = "0x985664", Offset = "0x985664", VA = "0x985664", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6002898")]
		[Address(RVA = "0x985728", Offset = "0x985728", VA = "0x985728", Slot = "5")]
		protected virtual void LateUpdate()
		{
		}

		[Token(Token = "0x6002899")]
		[Address(RVA = "0x9857E8", Offset = "0x9857E8", VA = "0x9857E8", Slot = "6")]
		protected virtual void OnSceneLoaded(Scene loadedScene, LoadSceneMode loadMode)
		{
		}

		[Token(Token = "0x600289A")]
		[Address(RVA = "0x9859A4", Offset = "0x9859A4", VA = "0x9859A4", Slot = "7")]
		protected virtual void ToggleScriptAlias(bool state)
		{
		}

		[Token(Token = "0x600289B")]
		[Address(RVA = "0x985A0C", Offset = "0x985A0C", VA = "0x985A0C")]
		public SceneLoader()
		{
		}
	}
}
namespace VRTK.Examples.PanelMenu
{
	[Token(Token = "0x20004F8")]
	public class PanelMenuDemoFlyingSaucer : MonoBehaviour
	{
		[Token(Token = "0x400231D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly Color[] colors;

		[Token(Token = "0x600289C")]
		[Address(RVA = "0x978684", Offset = "0x978684", VA = "0x978684")]
		public void UpdateGridLayoutValue(int selectedIndex)
		{
		}

		[Token(Token = "0x600289D")]
		[Address(RVA = "0x9787C8", Offset = "0x9787C8", VA = "0x9787C8")]
		public PanelMenuDemoFlyingSaucer()
		{
		}
	}
	[Token(Token = "0x20004F9")]
	public class PanelMenuDemoSphere : MonoBehaviour
	{
		[Token(Token = "0x400231E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly Color[] colors;

		[Token(Token = "0x600289E")]
		[Address(RVA = "0x978A24", Offset = "0x978A24", VA = "0x978A24")]
		public void UpdateSliderValue(float value)
		{
		}

		[Token(Token = "0x600289F")]
		[Address(RVA = "0x978B40", Offset = "0x978B40", VA = "0x978B40")]
		public PanelMenuDemoSphere()
		{
		}
	}
	[Token(Token = "0x20004FA")]
	public class PanelMenuUIGrid : MonoBehaviour
	{
		[Token(Token = "0x200089B")]
		public enum Direction
		{
			[Token(Token = "0x4002C82")]
			None,
			[Token(Token = "0x4002C83")]
			Up,
			[Token(Token = "0x4002C84")]
			Down,
			[Token(Token = "0x4002C85")]
			Left,
			[Token(Token = "0x4002C86")]
			Right
		}

		[Token(Token = "0x400231F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly Color colorDefault;

		[Token(Token = "0x4002320")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly Color colorSelected;

		[Token(Token = "0x4002321")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private readonly float colorAlpha;

		[Token(Token = "0x4002322")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private GridLayoutGroup gridLayoutGroup;

		[Token(Token = "0x4002323")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int selectedIndex;

		[Token(Token = "0x60028A0")]
		[Address(RVA = "0x978E14", Offset = "0x978E14", VA = "0x978E14")]
		private void Start()
		{
		}

		[Token(Token = "0x60028A1")]
		[Address(RVA = "0x9796B4", Offset = "0x9796B4", VA = "0x9796B4")]
		public bool MoveSelectGridLayoutItem(Direction direction, GameObject interactableObject)
		{
			return default(bool);
		}

		[Token(Token = "0x60028A2")]
		[Address(RVA = "0x9796F8", Offset = "0x9796F8", VA = "0x9796F8")]
		private int FindNextItemBasedOnMoveDirection(Direction direction)
		{
			return default(int);
		}

		[Token(Token = "0x60028A3")]
		[Address(RVA = "0x9791D0", Offset = "0x9791D0", VA = "0x9791D0")]
		private void SetGridLayoutItemSelectedState(int index)
		{
		}

		[Token(Token = "0x60028A4")]
		[Address(RVA = "0x979898", Offset = "0x979898", VA = "0x979898")]
		private void OnPanelMenuItemSwipeTop(object sender, PanelMenuItemControllerEventArgs e)
		{
		}

		[Token(Token = "0x60028A5")]
		[Address(RVA = "0x9798A0", Offset = "0x9798A0", VA = "0x9798A0")]
		private void OnPanelMenuItemSwipeBottom(object sender, PanelMenuItemControllerEventArgs e)
		{
		}

		[Token(Token = "0x60028A6")]
		[Address(RVA = "0x9798A8", Offset = "0x9798A8", VA = "0x9798A8")]
		private void OnPanelMenuItemSwipeLeft(object sender, PanelMenuItemControllerEventArgs e)
		{
		}

		[Token(Token = "0x60028A7")]
		[Address(RVA = "0x9798B0", Offset = "0x9798B0", VA = "0x9798B0")]
		private void OnPanelMenuItemSwipeRight(object sender, PanelMenuItemControllerEventArgs e)
		{
		}

		[Token(Token = "0x60028A8")]
		[Address(RVA = "0x9798B8", Offset = "0x9798B8", VA = "0x9798B8")]
		private void OnPanelMenuItemTriggerPressed(object sender, PanelMenuItemControllerEventArgs e)
		{
		}

		[Token(Token = "0x60028A9")]
		[Address(RVA = "0x9798C0", Offset = "0x9798C0", VA = "0x9798C0")]
		private void SendMessageToInteractableObject(GameObject interactableObject)
		{
		}

		[Token(Token = "0x60028AA")]
		[Address(RVA = "0x979954", Offset = "0x979954", VA = "0x979954")]
		public PanelMenuUIGrid()
		{
		}
	}
	[Token(Token = "0x20004FB")]
	public class PanelMenuUISlider : MonoBehaviour
	{
		[Token(Token = "0x4002324")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Slider slider;

		[Token(Token = "0x60028AB")]
		[Address(RVA = "0x9799A0", Offset = "0x9799A0", VA = "0x9799A0")]
		private void Start()
		{
		}

		[Token(Token = "0x60028AC")]
		[Address(RVA = "0x979C54", Offset = "0x979C54", VA = "0x979C54")]
		private void OnPanelMenuItemSwipeLeft(object sender, PanelMenuItemControllerEventArgs e)
		{
		}

		[Token(Token = "0x60028AD")]
		[Address(RVA = "0x979D90", Offset = "0x979D90", VA = "0x979D90")]
		private void OnPanelMenuItemSwipeRight(object sender, PanelMenuItemControllerEventArgs e)
		{
		}

		[Token(Token = "0x60028AE")]
		[Address(RVA = "0x979CDC", Offset = "0x979CDC", VA = "0x979CDC")]
		private void SendMessageToInteractableObject(GameObject interactableObject)
		{
		}

		[Token(Token = "0x60028AF")]
		[Address(RVA = "0x979E18", Offset = "0x979E18", VA = "0x979E18")]
		public PanelMenuUISlider()
		{
		}
	}
}
namespace VRTK.Examples.Old
{
	[Token(Token = "0x20004FC")]
	public class FireExtinguisher_Base : VRTK_InteractableObject
	{
		[Token(Token = "0x4002325")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		public Animation leverAnimation;

		[Token(Token = "0x4002326")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		public FireExtinguisher_Sprayer sprayer;

		[Token(Token = "0x4002327")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		private VRTK_ControllerEvents controllerEvents;

		[Token(Token = "0x60028B0")]
		[Address(RVA = "0x977C88", Offset = "0x977C88", VA = "0x977C88", Slot = "28")]
		public override void StartUsing([Optional] VRTK_InteractUse currentUsingObject)
		{
		}

		[Token(Token = "0x60028B1")]
		[Address(RVA = "0x977D08", Offset = "0x977D08", VA = "0x977D08", Slot = "29")]
		public override void StopUsing([Optional] VRTK_InteractUse previousUsingObject, bool resetUsingObjectState = true)
		{
		}

		[Token(Token = "0x60028B2")]
		[Address(RVA = "0x977D34", Offset = "0x977D34", VA = "0x977D34", Slot = "69")]
		protected override void Update()
		{
		}

		[Token(Token = "0x60028B3")]
		[Address(RVA = "0x977E70", Offset = "0x977E70", VA = "0x977E70")]
		private void Spray(float power)
		{
		}

		[Token(Token = "0x60028B4")]
		[Address(RVA = "0x977EB4", Offset = "0x977EB4", VA = "0x977EB4")]
		private void SetHandleFrame(float frame)
		{
		}

		[Token(Token = "0x60028B5")]
		[Address(RVA = "0x97808C", Offset = "0x97808C", VA = "0x97808C")]
		public FireExtinguisher_Base()
		{
		}
	}
	[Token(Token = "0x20004FD")]
	public class FireExtinguisher_Sprayer : VRTK_InteractableObject
	{
		[Token(Token = "0x4002328")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		public FireExtinguisher_Base baseCan;

		[Token(Token = "0x4002329")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		public float breakDistance;

		[Token(Token = "0x400232A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
		public float maxSprayPower;

		[Token(Token = "0x400232B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		private GameObject waterSpray;

		[Token(Token = "0x400232C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		private ParticleSystem particles;

		[Token(Token = "0x60028B6")]
		[Address(RVA = "0x977FA4", Offset = "0x977FA4", VA = "0x977FA4")]
		public void Spray(float power)
		{
		}

		[Token(Token = "0x60028B7")]
		[Address(RVA = "0x978094", Offset = "0x978094", VA = "0x978094", Slot = "65")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x60028B8")]
		[Address(RVA = "0x978164", Offset = "0x978164", VA = "0x978164", Slot = "69")]
		protected override void Update()
		{
		}

		[Token(Token = "0x60028B9")]
		[Address(RVA = "0x9782B0", Offset = "0x9782B0", VA = "0x9782B0")]
		public FireExtinguisher_Sprayer()
		{
		}
	}
}
namespace VRTK.Examples.Archery
{
	[Token(Token = "0x20004FE")]
	public class Arrow : MonoBehaviour
	{
		[Token(Token = "0x400232D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float maxArrowLife;

		[Token(Token = "0x400232E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float maxCollidedLife;

		[Token(Token = "0x400232F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public bool inFlight;

		[Token(Token = "0x4002330")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		private bool collided;

		[Token(Token = "0x4002331")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Rigidbody rigidBody;

		[Token(Token = "0x4002332")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private GameObject arrowHolder;

		[Token(Token = "0x4002333")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3 originalPosition;

		[Token(Token = "0x4002334")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Quaternion originalRotation;

		[Token(Token = "0x4002335")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Vector3 originalScale;

		[Token(Token = "0x4002336")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private AudioSource source;

		[Token(Token = "0x60028BA")]
		[Address(RVA = "0xCDA790", Offset = "0xCDA790", VA = "0xCDA790")]
		public void SetArrowHolder(GameObject holder)
		{
		}

		[Token(Token = "0x60028BB")]
		[Address(RVA = "0xCDA7C8", Offset = "0xCDA7C8", VA = "0xCDA7C8")]
		public void OnNock()
		{
		}

		[Token(Token = "0x60028BC")]
		[Address(RVA = "0xCDA7D0", Offset = "0xCDA7D0", VA = "0xCDA7D0")]
		public void Fired()
		{
		}

		[Token(Token = "0x60028BD")]
		[Address(RVA = "0xCDA900", Offset = "0xCDA900", VA = "0xCDA900")]
		public void ResetArrow()
		{
		}

		[Token(Token = "0x60028BE")]
		[Address(RVA = "0xCDAC8C", Offset = "0xCDAC8C", VA = "0xCDAC8C")]
		private void Start()
		{
		}

		[Token(Token = "0x60028BF")]
		[Address(RVA = "0xCDAD04", Offset = "0xCDAD04", VA = "0xCDAD04")]
		private void SetOrigns()
		{
		}

		[Token(Token = "0x60028C0")]
		[Address(RVA = "0xCDADA0", Offset = "0xCDADA0", VA = "0xCDADA0")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x60028C1")]
		[Address(RVA = "0xCDAEF8", Offset = "0xCDAEF8", VA = "0xCDAEF8")]
		private void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x60028C2")]
		[Address(RVA = "0xCDA938", Offset = "0xCDA938", VA = "0xCDA938")]
		private void RecreateNotch()
		{
		}

		[Token(Token = "0x60028C3")]
		[Address(RVA = "0xCDAAC0", Offset = "0xCDAAC0", VA = "0xCDAAC0")]
		private void ResetTransform()
		{
		}

		[Token(Token = "0x60028C4")]
		[Address(RVA = "0xCDA86C", Offset = "0xCDA86C", VA = "0xCDA86C")]
		private void DestroyArrow(float time)
		{
		}

		[Token(Token = "0x60028C5")]
		[Address(RVA = "0xCDAF64", Offset = "0xCDAF64", VA = "0xCDAF64")]
		public Arrow()
		{
		}
	}
	[Token(Token = "0x20004FF")]
	public class ArrowNotch : MonoBehaviour
	{
		[Token(Token = "0x4002337")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private GameObject arrow;

		[Token(Token = "0x4002338")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private VRTK_InteractableObject obj;

		[Token(Token = "0x60028C6")]
		[Address(RVA = "0xCDAF78", Offset = "0xCDAF78", VA = "0xCDAF78")]
		private void Start()
		{
		}

		[Token(Token = "0x60028C7")]
		[Address(RVA = "0xCDB01C", Offset = "0xCDB01C", VA = "0xCDB01C")]
		private void OnTriggerEnter(Collider collider)
		{
		}

		[Token(Token = "0x60028C8")]
		[Address(RVA = "0xCDB290", Offset = "0xCDB290", VA = "0xCDB290")]
		private void CopyNotchToArrow()
		{
		}

		[Token(Token = "0x60028C9")]
		[Address(RVA = "0xCDB45C", Offset = "0xCDB45C", VA = "0xCDB45C")]
		public ArrowNotch()
		{
		}
	}
	[Token(Token = "0x2000500")]
	public class ArrowSpawner : MonoBehaviour
	{
		[Token(Token = "0x4002339")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject arrowPrefab;

		[Token(Token = "0x400233A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float spawnDelay;

		[Token(Token = "0x400233B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float spawnDelayTimer;

		[Token(Token = "0x400233C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private BowAim bow;

		[Token(Token = "0x60028CA")]
		[Address(RVA = "0xCDB464", Offset = "0xCDB464", VA = "0xCDB464")]
		private void Start()
		{
		}

		[Token(Token = "0x60028CB")]
		[Address(RVA = "0xCDB46C", Offset = "0xCDB46C", VA = "0xCDB46C")]
		private void OnTriggerStay(Collider collider)
		{
		}

		[Token(Token = "0x60028CC")]
		[Address(RVA = "0xCDB690", Offset = "0xCDB690", VA = "0xCDB690")]
		private bool CanGrab(VRTK_InteractGrab grabbingController)
		{
			return default(bool);
		}

		[Token(Token = "0x60028CD")]
		[Address(RVA = "0xCDB76C", Offset = "0xCDB76C", VA = "0xCDB76C")]
		private bool NoArrowNotched(GameObject controller)
		{
			return default(bool);
		}

		[Token(Token = "0x60028CE")]
		[Address(RVA = "0xCDB9D8", Offset = "0xCDB9D8", VA = "0xCDB9D8")]
		public ArrowSpawner()
		{
		}
	}
	[Token(Token = "0x2000501")]
	public class BowAim : MonoBehaviour
	{
		[Token(Token = "0x200089C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6461C0", Offset = "0x6461C0")]
		private sealed class <GetBaseRotation>d__26 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002C87")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002C88")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002C89")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public BowAim <>4__this;

			[Token(Token = "0x17000380")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6003432")]
				[Address(RVA = "0x973CD0", Offset = "0x973CD0", VA = "0x973CD0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000381")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003434")]
				[Address(RVA = "0x973D40", Offset = "0x973D40", VA = "0x973D40", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600342F")]
			[Address(RVA = "0x973BA0", Offset = "0x973BA0", VA = "0x973BA0")]
			[DebuggerHidden]
			public <GetBaseRotation>d__26(int <>1__state)
			{
			}

			[Token(Token = "0x6003430")]
			[Address(RVA = "0x973BCC", Offset = "0x973BCC", VA = "0x973BCC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003431")]
			[Address(RVA = "0x973BD0", Offset = "0x973BD0", VA = "0x973BD0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003433")]
			[Address(RVA = "0x973CD8", Offset = "0x973CD8", VA = "0x973CD8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400233D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float powerMultiplier;

		[Token(Token = "0x400233E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float pullMultiplier;

		[Token(Token = "0x400233F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float pullOffset;

		[Token(Token = "0x4002340")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float maxPullDistance;

		[Token(Token = "0x4002341")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float bowVibration;

		[Token(Token = "0x4002342")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float stringVibration;

		[Token(Token = "0x4002343")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private BowAnimation bowAnimation;

		[Token(Token = "0x4002344")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private GameObject currentArrow;

		[Token(Token = "0x4002345")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private BowHandle handle;

		[Token(Token = "0x4002346")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private VRTK_InteractableObject interact;

		[Token(Token = "0x4002347")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private VRTK_InteractGrab holdControl;

		[Token(Token = "0x4002348")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private VRTK_InteractGrab stringControl;

		[Token(Token = "0x4002349")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Quaternion releaseRotation;

		[Token(Token = "0x400234A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Quaternion baseRotation;

		[Token(Token = "0x400234B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private bool fired;

		[Token(Token = "0x400234C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private float fireOffset;

		[Token(Token = "0x400234D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private float currentPull;

		[Token(Token = "0x400234E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private float previousPull;

		[Token(Token = "0x400234F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private AudioSource source;

		[Token(Token = "0x60028CF")]
		[Address(RVA = "0xCDB9E8", Offset = "0xCDB9E8", VA = "0xCDB9E8")]
		public VRTK_InteractGrab GetPullHand()
		{
			return null;
		}

		[Token(Token = "0x60028D0")]
		[Address(RVA = "0xCDB254", Offset = "0xCDB254", VA = "0xCDB254")]
		public bool IsHeld()
		{
			return default(bool);
		}

		[Token(Token = "0x60028D1")]
		[Address(RVA = "0xCDB968", Offset = "0xCDB968", VA = "0xCDB968")]
		public bool HasArrow()
		{
			return default(bool);
		}

		[Token(Token = "0x60028D2")]
		[Address(RVA = "0xCDB454", Offset = "0xCDB454", VA = "0xCDB454")]
		public void SetArrow(GameObject arrow)
		{
		}

		[Token(Token = "0x60028D3")]
		[Address(RVA = "0xCDBAAC", Offset = "0xCDBAAC", VA = "0xCDBAAC")]
		private void Start()
		{
		}

		[Token(Token = "0x60028D4")]
		[Address(RVA = "0xCDB9F0", Offset = "0xCDB9F0", VA = "0xCDB9F0")]
		private void PlaySound()
		{
		}

		[Token(Token = "0x60028D5")]
		[Address(RVA = "0xCDBB9C", Offset = "0xCDBB9C", VA = "0xCDBB9C")]
		private void DoObjectGrab(object sender, InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x60028D6")]
		[Address(RVA = "0xCDBD14", Offset = "0xCDBD14", VA = "0xCDBD14")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x670170", Offset = "0x670170")]
		private IEnumerator GetBaseRotation()
		{
			return null;
		}

		[Token(Token = "0x60028D7")]
		[Address(RVA = "0xCDBD88", Offset = "0xCDBD88", VA = "0xCDBD88")]
		private void Update()
		{
		}

		[Token(Token = "0x60028D8")]
		[Address(RVA = "0xCDC6B4", Offset = "0xCDC6B4", VA = "0xCDC6B4")]
		private void Release()
		{
		}

		[Token(Token = "0x60028D9")]
		[Address(RVA = "0xCDC9F0", Offset = "0xCDC9F0", VA = "0xCDC9F0")]
		private void ReleaseArrow()
		{
		}

		[Token(Token = "0x60028DA")]
		[Address(RVA = "0xCDC0F4", Offset = "0xCDC0F4", VA = "0xCDC0F4")]
		private void AimArrow()
		{
		}

		[Token(Token = "0x60028DB")]
		[Address(RVA = "0xCDC238", Offset = "0xCDC238", VA = "0xCDC238")]
		private void AimBow()
		{
		}

		[Token(Token = "0x60028DC")]
		[Address(RVA = "0xCDC44C", Offset = "0xCDC44C", VA = "0xCDC44C")]
		private void PullString()
		{
		}

		[Token(Token = "0x60028DD")]
		[Address(RVA = "0xCDCA90", Offset = "0xCDCA90", VA = "0xCDCA90")]
		public BowAim()
		{
		}
	}
	[Token(Token = "0x2000502")]
	public class BowAnimation : MonoBehaviour
	{
		[Token(Token = "0x4002350")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Animation animationTimeline;

		[Token(Token = "0x60028DE")]
		[Address(RVA = "0x973D48", Offset = "0x973D48", VA = "0x973D48")]
		public void SetFrame(float frame)
		{
		}

		[Token(Token = "0x60028DF")]
		[Address(RVA = "0x973E38", Offset = "0x973E38", VA = "0x973E38")]
		public BowAnimation()
		{
		}
	}
	[Token(Token = "0x2000503")]
	public class BowHandle : MonoBehaviour
	{
		[Token(Token = "0x4002351")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform arrowNockingPoint;

		[Token(Token = "0x4002352")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BowAim aim;

		[Token(Token = "0x4002353")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public Transform nockSide;

		[Token(Token = "0x60028E0")]
		[Address(RVA = "0x973E40", Offset = "0x973E40", VA = "0x973E40")]
		public BowHandle()
		{
		}
	}
	[Token(Token = "0x2000504")]
	public class Follow : MonoBehaviour
	{
		[Token(Token = "0x4002354")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool followPosition;

		[Token(Token = "0x4002355")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool followRotation;

		[Token(Token = "0x4002356")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform target;

		[Token(Token = "0x60028E1")]
		[Address(RVA = "0x973E48", Offset = "0x973E48", VA = "0x973E48")]
		private void Update()
		{
		}

		[Token(Token = "0x60028E2")]
		[Address(RVA = "0x97407C", Offset = "0x97407C", VA = "0x97407C")]
		public Follow()
		{
		}
	}
}
