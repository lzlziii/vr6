using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Diagnostics;
using System.IO;
using System.Reflection;
using System.Runtime.InteropServices;
using System.Text;
using System.Text.RegularExpressions;
using DungeonArchitect;
using DungeonArchitect.Builders.FloorPlan;
using DungeonArchitect.Builders.Grid;
using DungeonArchitect.Builders.GridFlow.Graphs.Abstract;
using DungeonArchitect.Builders.GridFlow.Graphs.Exec;
using DungeonArchitect.Builders.GridFlow.Graphs.Exec.NodeHandlers;
using DungeonArchitect.Builders.GridFlow.Tilemap;
using DungeonArchitect.Builders.SimpleCity;
using DungeonArchitect.Builders.Snap.Impl;
using DungeonArchitect.Grammar;
using DungeonArchitect.Graphs;
using DungeonArchitect.Graphs.SpatialConstraints;
using DungeonArchitect.Landscape;
using DungeonArchitect.MiniMaps;
using DungeonArchitect.Navigation;
using DungeonArchitect.RoadNetworks;
using DungeonArchitect.RuntimeGraphs;
using DungeonArchitect.Samples.ShooterGame;
using DungeonArchitect.SpatialConstraints;
using DungeonArchitect.Triangulator.Geometry;
using DungeonArchitect.UI;
using DungeonArchitect.UI.Widgets;
using DungeonArchitect.UI.Widgets.GraphEditors;
using DungeonArchitect.Utils;
using DungeonArchitect.Utils.Noise;
using Eppy;
using Il2CppDummyDll;
using LitJson;
using Oculus.Platform;
using Oculus.Platform.Models;
using Oculus.Spatializer.Propagation;
using Pvr_UnitySDKAPI;
using Pvr_UnitySDKAPI.Achievement;
using SharpNav;
using SharpNav.Collections;
using SharpNav.Collections.Generic;
using SharpNav.Crowds;
using SharpNav.Geometry;
using SharpNav.Pathfinding;
using Sigtrap.VrTunnellingPro;
using TMPro;
using TwitchChatter;
using UnityEngine;
using UnityEngine.AI;
using UnityEngine.Audio;
using UnityEngine.EventSystems;
using UnityEngine.Events;
using UnityEngine.Rendering;
using UnityEngine.ResourceManagement.AsyncOperations;
using UnityEngine.SceneManagement;
using UnityEngine.UI;
using UnityEngine.Video;
using UnityEngine.XR;

[assembly: AssemblyVersion("0.0.0.0")]
[Token(Token = "0x2000002")]
public class Camera_control : MonoBehaviour
{
	[Token(Token = "0x4000001")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float speedH;

	[Token(Token = "0x4000002")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float speedV;

	[Token(Token = "0x4000003")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float yaw;

	[Token(Token = "0x4000004")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float pitch;

	[Token(Token = "0x6000001")]
	[Address(RVA = "0xB05410", Offset = "0xB05410", VA = "0xB05410")]
	private void Start()
	{
	}

	[Token(Token = "0x6000002")]
	[Address(RVA = "0xB05414", Offset = "0xB05414", VA = "0xB05414")]
	private void Update()
	{
	}

	[Token(Token = "0x6000003")]
	[Address(RVA = "0xB05514", Offset = "0xB05514", VA = "0xB05514")]
	public Camera_control()
	{
	}
}
[Token(Token = "0x2000003")]
public class Skybox_rotator : MonoBehaviour
{
	[Token(Token = "0x4000005")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text skyboxNameText;

	[Token(Token = "0x4000006")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<Material> skyboxes;

	[Token(Token = "0x4000007")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int currentSkybox;

	[Token(Token = "0x6000004")]
	[Address(RVA = "0xB1F540", Offset = "0xB1F540", VA = "0xB1F540")]
	private void Start()
	{
	}

	[Token(Token = "0x6000005")]
	[Address(RVA = "0xB1F618", Offset = "0xB1F618", VA = "0xB1F618")]
	private void Update()
	{
	}

	[Token(Token = "0x6000006")]
	[Address(RVA = "0xB1F544", Offset = "0xB1F544", VA = "0xB1F544")]
	private void SetSkybox()
	{
	}

	[Token(Token = "0x6000007")]
	[Address(RVA = "0xB1F6A0", Offset = "0xB1F6A0", VA = "0xB1F6A0")]
	public Skybox_rotator()
	{
	}
}
[Token(Token = "0x2000004")]
public class FloorPlanRoomMarkers : DungeonMarkerEmitter
{
	[Token(Token = "0x6000008")]
	[Address(RVA = "0xC4DD64", Offset = "0xC4DD64", VA = "0xC4DD64", Slot = "4")]
	public override void EmitMarkers(DungeonBuilder builder)
	{
	}

	[Token(Token = "0x6000009")]
	[Address(RVA = "0xC4DFA8", Offset = "0xC4DFA8", VA = "0xC4DFA8")]
	private void DecorateRoom(DungeonBuilder builder, FloorChunk roomChunk, UnityEngine.Vector3 gridSize)
	{
	}

	[Token(Token = "0x600000A")]
	[Address(RVA = "0xC4E228", Offset = "0xC4E228", VA = "0xC4E228")]
	private void EmitChunkMarker(DungeonBuilder builder, string markerName, UnityEngine.Vector3 gridPositionF, float angle, UnityEngine.Vector3 gridSize, int cellId)
	{
	}

	[Token(Token = "0x600000B")]
	[Address(RVA = "0xC4E438", Offset = "0xC4E438", VA = "0xC4E438")]
	public FloorPlanRoomMarkers()
	{
	}
}
[Serializable]
[Token(Token = "0x2000005")]
public class SkyscraperRange
{
	[Token(Token = "0x4000008")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float startDistance;

	[Token(Token = "0x4000009")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float endDistance;

	[Token(Token = "0x400000A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string markerName;

	[Token(Token = "0x600000C")]
	[Address(RVA = "0xB1F6A8", Offset = "0xB1F6A8", VA = "0xB1F6A8")]
	public SkyscraperRange()
	{
	}
}
[Token(Token = "0x2000006")]
public class CitySkyscraperInserter : DungeonEventListener
{
	[Token(Token = "0x400000B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SkyscraperRange[] skyscraperRanges;

	[Token(Token = "0x600000D")]
	[Address(RVA = "0xB07DAC", Offset = "0xB07DAC", VA = "0xB07DAC", Slot = "5")]
	public override void OnDungeonMarkersEmitted(Dungeon dungeon, DungeonModel model, LevelMarkerList markers)
	{
	}

	[Token(Token = "0x600000E")]
	[Address(RVA = "0xB08238", Offset = "0xB08238", VA = "0xB08238")]
	public CitySkyscraperInserter()
	{
	}
}
[Token(Token = "0x2000007")]
public class SnapDemo_ProceduralLevelLayout : MonoBehaviour, IGrammarGraphBuildScript
{
	[Token(Token = "0x600000F")]
	[Address(RVA = "0xB20180", Offset = "0xB20180", VA = "0xB20180", Slot = "4")]
	public void Generate(IGrammarGraphBuilder grammarBuilder)
	{
	}

	[Token(Token = "0x6000010")]
	[Address(RVA = "0xB20668", Offset = "0xB20668", VA = "0xB20668")]
	public SnapDemo_ProceduralLevelLayout()
	{
	}
}
[Token(Token = "0x2000008")]
public class CliffTileRandomTransformer : TransformationRule
{
	[Token(Token = "0x400000C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float tileWidth;

	[Token(Token = "0x6000011")]
	[Address(RVA = "0xB092F8", Offset = "0xB092F8", VA = "0xB092F8", Slot = "4")]
	public override void GetTransform(PropSocket socket, DungeonModel model, Matrix4x4 propTransform, System.Random random, out UnityEngine.Vector3 outPosition, out Quaternion outRotation, out UnityEngine.Vector3 outScale)
	{
	}

	[Token(Token = "0x6000012")]
	[Address(RVA = "0xB09468", Offset = "0xB09468", VA = "0xB09468")]
	public CliffTileRandomTransformer()
	{
	}
}
[Token(Token = "0x2000009")]
public class Pickup : MonoBehaviour
{
	[Token(Token = "0x6000013")]
	[Address(RVA = "0xB66B98", Offset = "0xB66B98", VA = "0xB66B98")]
	private void Start()
	{
	}

	[Token(Token = "0x6000014")]
	[Address(RVA = "0xB66B9C", Offset = "0xB66B9C", VA = "0xB66B9C")]
	private void OnTriggerEnter2D(Collider2D other)
	{
	}

	[Token(Token = "0x6000015")]
	[Address(RVA = "0xB66CA0", Offset = "0xB66CA0", VA = "0xB66CA0")]
	public Pickup()
	{
	}
}
[Token(Token = "0x200000A")]
public class PickupWobbler : MonoBehaviour
{
	[Token(Token = "0x400000D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UnityEngine.Vector2 wobbleDirection;

	[Token(Token = "0x400000E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float speed;

	[Token(Token = "0x400000F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float randomStartAngle;

	[Token(Token = "0x4000010")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private UnityEngine.Vector3 originalPosition;

	[Token(Token = "0x6000016")]
	[Address(RVA = "0xB66CA8", Offset = "0xB66CA8", VA = "0xB66CA8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000017")]
	[Address(RVA = "0xB66CFC", Offset = "0xB66CFC", VA = "0xB66CFC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000018")]
	[Address(RVA = "0xB66E70", Offset = "0xB66E70", VA = "0xB66E70")]
	public PickupWobbler()
	{
	}
}
[Token(Token = "0x200000B")]
public class PlayerCameraZoom : MonoBehaviour
{
	[Token(Token = "0x4000011")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float sensitivity;

	[Token(Token = "0x4000012")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float zoomMultiplier;

	[Token(Token = "0x4000013")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float maxSpeed;

	[Token(Token = "0x4000014")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Rigidbody2D rigidBody2D;

	[Token(Token = "0x4000015")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float startingZoom;

	[Token(Token = "0x4000016")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float targetZoom;

	[Token(Token = "0x4000017")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Camera cam;

	[Token(Token = "0x6000019")]
	[Address(RVA = "0xB67EDC", Offset = "0xB67EDC", VA = "0xB67EDC")]
	private void Awake()
	{
	}

	[Token(Token = "0x600001A")]
	[Address(RVA = "0xB67F48", Offset = "0xB67F48", VA = "0xB67F48")]
	private void Update()
	{
	}

	[Token(Token = "0x600001B")]
	[Address(RVA = "0xB68050", Offset = "0xB68050", VA = "0xB68050")]
	public PlayerCameraZoom()
	{
	}
}
[Token(Token = "0x200000C")]
public class RotatorZ : MonoBehaviour
{
	[Token(Token = "0x4000018")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float frequency;

	[Token(Token = "0x600001C")]
	[Address(RVA = "0xC1FFD0", Offset = "0xC1FFD0", VA = "0xC1FFD0")]
	private void Update()
	{
	}

	[Token(Token = "0x600001D")]
	[Address(RVA = "0xC20034", Offset = "0xC20034", VA = "0xC20034")]
	public RotatorZ()
	{
	}
}
[Token(Token = "0x200000D")]
public class BillboardGizmo : MonoBehaviour
{
	[Token(Token = "0x4000019")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string iconName;

	[Token(Token = "0x600001E")]
	[Address(RVA = "0xBC6024", Offset = "0xBC6024", VA = "0xBC6024")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x600001F")]
	[Address(RVA = "0xBC60C8", Offset = "0xBC60C8", VA = "0xBC60C8")]
	public BillboardGizmo()
	{
	}
}
[Token(Token = "0x200000E")]
public class AdjacentCorridorTracker : MonoBehaviour
{
	[Token(Token = "0x400001A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Dungeon dungeon;

	[Token(Token = "0x400001B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GridDungeonModel gridModel;

	[Token(Token = "0x400001C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Material materialCursor;

	[Token(Token = "0x400001D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Material materialCorridors;

	[Token(Token = "0x400001E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material materialRooms;

	[Token(Token = "0x400001F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<int> ConnectedCorridors;

	[Token(Token = "0x4000020")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private List<int> ConnectedRooms;

	[Token(Token = "0x4000021")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int cursorCellId;

	[Token(Token = "0x6000020")]
	[Address(RVA = "0xBB7944", Offset = "0xBB7944", VA = "0xBB7944")]
	private void Start()
	{
	}

	[Token(Token = "0x6000021")]
	[Address(RVA = "0xBB7A1C", Offset = "0xBB7A1C", VA = "0xBB7A1C")]
	private Material CreateMaterial(Color color)
	{
		return null;
	}

	[Token(Token = "0x6000022")]
	[Address(RVA = "0xBB7B4C", Offset = "0xBB7B4C", VA = "0xBB7B4C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000023")]
	[Address(RVA = "0xBB8188", Offset = "0xBB8188", VA = "0xBB8188")]
	private void OnPostRender()
	{
	}

	[Token(Token = "0x6000024")]
	[Address(RVA = "0xBB8238", Offset = "0xBB8238", VA = "0xBB8238")]
	private void DrawCells(List<int> cellIds, Material mat)
	{
	}

	[Token(Token = "0x6000025")]
	[Address(RVA = "0xBB84E0", Offset = "0xBB84E0", VA = "0xBB84E0")]
	private void DrawQuad(UnityEngine.Vector3 start, UnityEngine.Vector3 size)
	{
	}

	[Token(Token = "0x6000026")]
	[Address(RVA = "0xBB7C3C", Offset = "0xBB7C3C", VA = "0xBB7C3C")]
	private DungeonArchitect.Builders.Grid.Cell FindCellAtMousePosition(Camera cam)
	{
		return null;
	}

	[Token(Token = "0x6000027")]
	[Address(RVA = "0xBB855C", Offset = "0xBB855C", VA = "0xBB855C")]
	public AdjacentCorridorTracker()
	{
	}
}
[Token(Token = "0x200000F")]
public class RemoveDuplicateMarkersWithinCell : DungeonEventListener
{
	[Token(Token = "0x4000022")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string markerName;

	[Token(Token = "0x6000028")]
	[Address(RVA = "0xC1E898", Offset = "0xC1E898", VA = "0xC1E898", Slot = "5")]
	public override void OnDungeonMarkersEmitted(Dungeon dungeon, DungeonModel model, LevelMarkerList markers)
	{
	}

	[Token(Token = "0x6000029")]
	[Address(RVA = "0xC1ED94", Offset = "0xC1ED94", VA = "0xC1ED94")]
	public RemoveDuplicateMarkersWithinCell()
	{
	}
}
[Token(Token = "0x2000010")]
public class VolumeSpawnExampleListener : DungeonEventListener
{
	[Token(Token = "0x4000023")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Graph bossRoomTheme;

	[Token(Token = "0x4000024")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Graph spawnRoomTheme;

	[Token(Token = "0x4000025")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Graph[] roomThemes;

	[Token(Token = "0x4000026")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private List<GameObject> managedVolumes;

	[Token(Token = "0x4000027")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Volume themeVolumeTemplate;

	[Token(Token = "0x600002A")]
	[Address(RVA = "0xC0B270", Offset = "0xC0B270", VA = "0xC0B270", Slot = "4")]
	public override void OnPostDungeonLayoutBuild(Dungeon dungeon, DungeonModel model)
	{
	}

	[Token(Token = "0x600002B")]
	[Address(RVA = "0xC0B974", Offset = "0xC0B974", VA = "0xC0B974", Slot = "9")]
	public override void OnDungeonDestroyed(Dungeon dungeon)
	{
	}

	[Token(Token = "0x600002C")]
	[Address(RVA = "0xC0B67C", Offset = "0xC0B67C", VA = "0xC0B67C")]
	private void DecorateRoom(Dungeon dungeon, GridDungeonModel gridModel, DungeonArchitect.Builders.Grid.Cell cell, Graph theme)
	{
	}

	[Token(Token = "0x600002D")]
	[Address(RVA = "0xC0B914", Offset = "0xC0B914", VA = "0xC0B914")]
	private Graph GetRandomTheme()
	{
		return null;
	}

	[Token(Token = "0x600002E")]
	[Address(RVA = "0xC0B5FC", Offset = "0xC0B5FC", VA = "0xC0B5FC")]
	private void FindStartEndRooms(GridDungeonModel gridModel, out DungeonArchitect.Builders.Grid.Cell spawnCell, out DungeonArchitect.Builders.Grid.Cell finalBossCell)
	{
	}

	[Token(Token = "0x600002F")]
	[Address(RVA = "0xC0B494", Offset = "0xC0B494", VA = "0xC0B494")]
	private void DestroyManagedVolumes()
	{
	}

	[Token(Token = "0x6000030")]
	[Address(RVA = "0xC0B978", Offset = "0xC0B978", VA = "0xC0B978")]
	public VolumeSpawnExampleListener()
	{
	}
}
[Token(Token = "0x2000011")]
public class DemoHUD : MonoBehaviour
{
	[Token(Token = "0x4000028")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GUIStyle guiStyle;

	[Token(Token = "0x6000031")]
	[Address(RVA = "0xB14D38", Offset = "0xB14D38", VA = "0xB14D38")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000032")]
	[Address(RVA = "0xB14DEC", Offset = "0xB14DEC", VA = "0xB14DEC")]
	public DemoHUD()
	{
	}
}
[Token(Token = "0x2000012")]
public class RegenerateDungeonLayout : MonoBehaviour
{
	[Token(Token = "0x2000622")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B797C", Offset = "0x8B797C")]
	private sealed class <RebuildDungeon>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002033")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002034")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002035")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RegenerateDungeonLayout <>4__this;

		[Token(Token = "0x1700044A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002707")]
			[Address(RVA = "0xC1DCA0", Offset = "0xC1DCA0", VA = "0xC1DCA0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700044B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002709")]
			[Address(RVA = "0xC1DD08", Offset = "0xC1DD08", VA = "0xC1DD08", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002704")]
		[Address(RVA = "0xC1DAE0", Offset = "0xC1DAE0", VA = "0xC1DAE0")]
		[DebuggerHidden]
		public <RebuildDungeon>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x6002705")]
		[Address(RVA = "0xC1DB1C", Offset = "0xC1DB1C", VA = "0xC1DB1C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002706")]
		[Address(RVA = "0xC1DB20", Offset = "0xC1DB20", VA = "0xC1DB20", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002708")]
		[Address(RVA = "0xC1DCA8", Offset = "0xC1DCA8", VA = "0xC1DCA8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000029")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Dungeon dungeon;

	[Token(Token = "0x400002A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool performCleanRebuild;

	[Token(Token = "0x6000033")]
	[Address(RVA = "0xC1D9F8", Offset = "0xC1D9F8", VA = "0xC1D9F8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000034")]
	[Address(RVA = "0xC1DA94", Offset = "0xC1DA94", VA = "0xC1DA94")]
	private void Update()
	{
	}

	[Token(Token = "0x6000035")]
	[Address(RVA = "0xC1DA24", Offset = "0xC1DA24", VA = "0xC1DA24")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C20B0", Offset = "0x8C20B0")]
	private IEnumerator RebuildDungeon()
	{
		return null;
	}

	[Token(Token = "0x6000036")]
	[Address(RVA = "0xC1DB0C", Offset = "0xC1DB0C", VA = "0xC1DB0C")]
	public RegenerateDungeonLayout()
	{
	}
}
[Token(Token = "0x2000013")]
internal class CellSpatialConfig3D
{
	[Token(Token = "0x400002B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string MarkerName;

	[Token(Token = "0x400002C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int[] NeighborConfig;

	[Token(Token = "0x400002D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float RotationOffsetZ;

	[Token(Token = "0x400002E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool StopOnFound;

	[Token(Token = "0x6000037")]
	[Address(RVA = "0xB05D68", Offset = "0xB05D68", VA = "0xB05D68")]
	public CellSpatialConfig3D()
	{
	}
}
[Token(Token = "0x2000014")]
public class CornerEmitter3D : DungeonMarkerEmitter
{
	[Token(Token = "0x400002F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<CellSpatialConfig3D> CornerConfigs;

	[Token(Token = "0x4000030")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool mergeRoomCorridor;

	[Token(Token = "0x6000038")]
	[Address(RVA = "0xB09DFC", Offset = "0xB09DFC", VA = "0xB09DFC")]
	private void RegisterConfig(string MarkerName, int[] NeighborConfig)
	{
	}

	[Token(Token = "0x6000039")]
	[Address(RVA = "0xB09E04", Offset = "0xB09E04", VA = "0xB09E04")]
	private void RegisterConfig(string MarkerName, int[] NeighborConfig, bool StopOnFound)
	{
	}

	[Token(Token = "0x600003A")]
	[Address(RVA = "0xB09F34", Offset = "0xB09F34", VA = "0xB09F34")]
	private int[] Rotate90(int[] NeighborConfig)
	{
		return null;
	}

	[Token(Token = "0x600003B")]
	[Address(RVA = "0xB0A064", Offset = "0xB0A064", VA = "0xB0A064", Slot = "4")]
	public override void EmitMarkers(DungeonBuilder builder)
	{
	}

	[Token(Token = "0x600003C")]
	[Address(RVA = "0xB0A718", Offset = "0xB0A718", VA = "0xB0A718")]
	private void EmitForPoint(DungeonBuilder builder, GridDungeonModel model, IntVector point)
	{
	}

	[Token(Token = "0x600003D")]
	[Address(RVA = "0xB0A88C", Offset = "0xB0A88C", VA = "0xB0A88C")]
	private bool ConfigMatches(GridDungeonModel Model, IntVector Point, CellSpatialConfig3D Config)
	{
		return default(bool);
	}

	[Token(Token = "0x600003E")]
	[Address(RVA = "0xB0AD2C", Offset = "0xB0AD2C", VA = "0xB0AD2C")]
	private bool IsRoomCorridor(CellType type0, CellType type1)
	{
		return default(bool);
	}

	[Token(Token = "0x600003F")]
	[Address(RVA = "0xB0AAC8", Offset = "0xB0AAC8", VA = "0xB0AAC8")]
	private void EmitCornerMarker(DungeonBuilder builder, GridDungeonModel model, IntVector point, float angleY, string markerName)
	{
	}

	[Token(Token = "0x6000040")]
	[Address(RVA = "0xB0A3AC", Offset = "0xB0A3AC", VA = "0xB0A3AC")]
	private void Initialize()
	{
	}

	[Token(Token = "0x6000041")]
	[Address(RVA = "0xB0AD88", Offset = "0xB0AD88", VA = "0xB0AD88")]
	public CornerEmitter3D()
	{
	}
}
[Token(Token = "0x2000015")]
public class GaiaLandscapeModifier : DungeonEventListener
{
	[Token(Token = "0x4000031")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Terrain terrain;

	[Token(Token = "0x4000032")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int corridorTextureIndex;

	[Token(Token = "0x4000033")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int roadBlurDistance;

	[Token(Token = "0x4000034")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float corridorBlurThreshold;

	[Token(Token = "0x4000035")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool modifyTextures;

	[Token(Token = "0x4000036")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
	public bool modifyDetails;

	[Token(Token = "0x6000042")]
	[Address(RVA = "0xC4F0FC", Offset = "0xC4F0FC", VA = "0xC4F0FC", Slot = "4")]
	public override void OnPostDungeonLayoutBuild(Dungeon dungeon, DungeonModel model)
	{
	}

	[Token(Token = "0x6000043")]
	[Address(RVA = "0xC4F30C", Offset = "0xC4F30C", VA = "0xC4F30C")]
	private void UpdateTerrainDetails(GridDungeonModel model)
	{
	}

	[Token(Token = "0x6000044")]
	[Address(RVA = "0xC4F1BC", Offset = "0xC4F1BC", VA = "0xC4F1BC")]
	private void UpdateTerrainTextures(GridDungeonModel model)
	{
	}

	[Token(Token = "0x6000045")]
	[Address(RVA = "0xC4F490", Offset = "0xC4F490", VA = "0xC4F490")]
	private void UpdateDetailTexture(GridDungeonModel model, int[,] map)
	{
	}

	[Token(Token = "0x6000046")]
	[Address(RVA = "0xC4F754", Offset = "0xC4F754", VA = "0xC4F754")]
	private void UpdateBaseTexture(GridDungeonModel model, float[,,] map)
	{
	}

	[Token(Token = "0x6000047")]
	[Address(RVA = "0xC4FBEC", Offset = "0xC4FBEC", VA = "0xC4FBEC")]
	public GaiaLandscapeModifier()
	{
	}
}
[Token(Token = "0x2000016")]
public class IsaacMarkerEmitter_RoomCenter : DungeonMarkerEmitter
{
	[Token(Token = "0x6000048")]
	[Address(RVA = "0xADB3F4", Offset = "0xADB3F4", VA = "0xADB3F4", Slot = "4")]
	public override void EmitMarkers(DungeonBuilder builder)
	{
	}

	[Token(Token = "0x6000049")]
	[Address(RVA = "0xADBBF8", Offset = "0xADBBF8", VA = "0xADBBF8")]
	public IsaacMarkerEmitter_RoomCenter()
	{
	}
}
[Token(Token = "0x2000017")]
public class MarkerTerrainClampListener : DungeonEventListener
{
	[Token(Token = "0x600004A")]
	[Address(RVA = "0xB828C4", Offset = "0xB828C4", VA = "0xB828C4", Slot = "5")]
	public override void OnDungeonMarkersEmitted(Dungeon dungeon, DungeonModel model, LevelMarkerList markers)
	{
	}

	[Token(Token = "0x600004B")]
	[Address(RVA = "0xB82B54", Offset = "0xB82B54", VA = "0xB82B54")]
	private UnityEngine.Vector3 GetClampedPosition(ref Matrix4x4 mat, Terrain terrain)
	{
		return default(UnityEngine.Vector3);
	}

	[Token(Token = "0x600004C")]
	[Address(RVA = "0xB82BA8", Offset = "0xB82BA8", VA = "0xB82BA8")]
	public MarkerTerrainClampListener()
	{
	}
}
[Token(Token = "0x2000018")]
public class RoomMidEmitter : DungeonMarkerEmitter
{
	[Token(Token = "0x600004D")]
	[Address(RVA = "0xC1F91C", Offset = "0xC1F91C", VA = "0xC1F91C", Slot = "4")]
	public override void EmitMarkers(DungeonBuilder builder)
	{
	}

	[Token(Token = "0x600004E")]
	[Address(RVA = "0xC1FD1C", Offset = "0xC1FD1C", VA = "0xC1FD1C")]
	public RoomMidEmitter()
	{
	}
}
[Token(Token = "0x2000019")]
public class AlternateSelectionRule : SelectorRule
{
	[Token(Token = "0x600004F")]
	[Address(RVA = "0xBBD9F4", Offset = "0xBBD9F4", VA = "0xBBD9F4", Slot = "4")]
	public override bool CanSelect(PropSocket socket, Matrix4x4 propTransform, DungeonModel model, System.Random random)
	{
		return default(bool);
	}

	[Token(Token = "0x6000050")]
	[Address(RVA = "0xBBDA1C", Offset = "0xBBDA1C", VA = "0xBBDA1C")]
	public AlternateSelectionRule()
	{
	}
}
[Token(Token = "0x200001A")]
public class BrokenTilesTransformRule : TransformationRule
{
	[Token(Token = "0x4000037")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float maxAngle;

	[Token(Token = "0x6000051")]
	[Address(RVA = "0xB0357C", Offset = "0xB0357C", VA = "0xB0357C", Slot = "4")]
	public override void GetTransform(PropSocket socket, DungeonModel model, Matrix4x4 propTransform, System.Random random, out UnityEngine.Vector3 outPosition, out Quaternion outRotation, out UnityEngine.Vector3 outScale)
	{
	}

	[Token(Token = "0x6000052")]
	[Address(RVA = "0xB036CC", Offset = "0xB036CC", VA = "0xB036CC")]
	public BrokenTilesTransformRule()
	{
	}
}
[Token(Token = "0x200001B")]
public class ClampToGroundTransformRule : TransformationRule
{
	[Token(Token = "0x6000053")]
	[Address(RVA = "0xB08240", Offset = "0xB08240", VA = "0xB08240", Slot = "4")]
	public override void GetTransform(PropSocket socket, DungeonModel model, Matrix4x4 propTransform, System.Random random, out UnityEngine.Vector3 outPosition, out Quaternion outRotation, out UnityEngine.Vector3 outScale)
	{
	}

	[Token(Token = "0x6000054")]
	[Address(RVA = "0xB08420", Offset = "0xB08420", VA = "0xB08420")]
	public ClampToGroundTransformRule()
	{
	}
}
[Token(Token = "0x200001C")]
public class ClampToTerrainTransformRule : TransformationRule
{
	[Token(Token = "0x6000055")]
	[Address(RVA = "0xB08428", Offset = "0xB08428", VA = "0xB08428", Slot = "4")]
	public override void GetTransform(PropSocket socket, DungeonModel model, Matrix4x4 propTransform, System.Random random, out UnityEngine.Vector3 outPosition, out Quaternion outRotation, out UnityEngine.Vector3 outScale)
	{
	}

	[Token(Token = "0x6000056")]
	[Address(RVA = "0xB08558", Offset = "0xB08558", VA = "0xB08558")]
	public ClampToTerrainTransformRule()
	{
	}
}
[Token(Token = "0x200001D")]
public class NonDoorTileSelectionRule : SelectorRule
{
	[Token(Token = "0x6000057")]
	[Address(RVA = "0xB8E94C", Offset = "0xB8E94C", VA = "0xB8E94C", Slot = "4")]
	public override bool CanSelect(PropSocket socket, Matrix4x4 propTransform, DungeonModel model, System.Random random)
	{
		return default(bool);
	}

	[Token(Token = "0x6000058")]
	[Address(RVA = "0xB8EA90", Offset = "0xB8EA90", VA = "0xB8EA90")]
	public NonDoorTileSelectionRule()
	{
	}
}
[Token(Token = "0x200001E")]
public class NonStairRoomTileSelectorRule : NonViewBlockingSelectionRule
{
	[Token(Token = "0x6000059")]
	[Address(RVA = "0xB8EA98", Offset = "0xB8EA98", VA = "0xB8EA98", Slot = "4")]
	public override bool CanSelect(PropSocket socket, Matrix4x4 propTransform, DungeonModel model, System.Random random)
	{
		return default(bool);
	}

	[Token(Token = "0x600005A")]
	[Address(RVA = "0xB8EDCC", Offset = "0xB8EDCC", VA = "0xB8EDCC")]
	public NonStairRoomTileSelectorRule()
	{
	}
}
[Token(Token = "0x200001F")]
public class NonStairTileSelectorRule : NonViewBlockingSelectionRule
{
	[Token(Token = "0x600005B")]
	[Address(RVA = "0xB8EE3C", Offset = "0xB8EE3C", VA = "0xB8EE3C", Slot = "4")]
	public override bool CanSelect(PropSocket socket, Matrix4x4 propTransform, DungeonModel model, System.Random random)
	{
		return default(bool);
	}

	[Token(Token = "0x600005C")]
	[Address(RVA = "0xB8EF94", Offset = "0xB8EF94", VA = "0xB8EF94")]
	public NonStairTileSelectorRule()
	{
	}
}
[Token(Token = "0x2000020")]
public class NonViewBlockingPillarSelectorRule : NonViewBlockingSelectionRule
{
	[Token(Token = "0x600005D")]
	[Address(RVA = "0xB8EFFC", Offset = "0xB8EFFC", VA = "0xB8EFFC", Slot = "4")]
	public override bool CanSelect(PropSocket socket, Matrix4x4 propTransform, DungeonModel model, System.Random random)
	{
		return default(bool);
	}

	[Token(Token = "0x600005E")]
	[Address(RVA = "0xB8F130", Offset = "0xB8F130", VA = "0xB8F130")]
	public NonViewBlockingPillarSelectorRule()
	{
	}
}
[Token(Token = "0x2000021")]
public class NonViewBlockingSelectionRule : SelectorRule
{
	[Token(Token = "0x4000038")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static UnityEngine.Vector3[] validDirections;

	[Token(Token = "0x600005F")]
	[Address(RVA = "0xB8EBEC", Offset = "0xB8EBEC", VA = "0xB8EBEC", Slot = "4")]
	public override bool CanSelect(PropSocket socket, Matrix4x4 propTransform, DungeonModel model, System.Random random)
	{
		return default(bool);
	}

	[Token(Token = "0x6000060")]
	[Address(RVA = "0xB8EE34", Offset = "0xB8EE34", VA = "0xB8EE34")]
	public NonViewBlockingSelectionRule()
	{
	}
}
[Token(Token = "0x2000022")]
public class RandomCliffTransformRule : TransformationRule
{
	[Token(Token = "0x6000062")]
	[Address(RVA = "0xC1CE48", Offset = "0xC1CE48", VA = "0xC1CE48", Slot = "4")]
	public override void GetTransform(PropSocket socket, DungeonModel model, Matrix4x4 propTransform, System.Random random, out UnityEngine.Vector3 outPosition, out Quaternion outRotation, out UnityEngine.Vector3 outScale)
	{
	}

	[Token(Token = "0x6000063")]
	[Address(RVA = "0xC1D14C", Offset = "0xC1D14C", VA = "0xC1D14C")]
	public RandomCliffTransformRule()
	{
	}
}
[Token(Token = "0x2000023")]
public class RandomRotY90TransformRule : TransformationRule
{
	[Token(Token = "0x6000064")]
	[Address(RVA = "0xC1D574", Offset = "0xC1D574", VA = "0xC1D574", Slot = "4")]
	public override void GetTransform(PropSocket socket, DungeonModel model, Matrix4x4 propTransform, System.Random random, out UnityEngine.Vector3 outPosition, out Quaternion outRotation, out UnityEngine.Vector3 outScale)
	{
	}

	[Token(Token = "0x6000065")]
	[Address(RVA = "0xC1D688", Offset = "0xC1D688", VA = "0xC1D688")]
	public RandomRotY90TransformRule()
	{
	}
}
[Token(Token = "0x2000024")]
public class RandomRotYTransformRule : TransformationRule
{
	[Token(Token = "0x6000066")]
	[Address(RVA = "0xC1D690", Offset = "0xC1D690", VA = "0xC1D690", Slot = "4")]
	public override void GetTransform(PropSocket socket, DungeonModel model, Matrix4x4 propTransform, System.Random random, out UnityEngine.Vector3 outPosition, out Quaternion outRotation, out UnityEngine.Vector3 outScale)
	{
	}

	[Token(Token = "0x6000067")]
	[Address(RVA = "0xC1D7B8", Offset = "0xC1D7B8", VA = "0xC1D7B8")]
	public RandomRotYTransformRule()
	{
	}
}
[Token(Token = "0x2000025")]
public class RoomSelectionRule : SelectorRule
{
	[Token(Token = "0x6000068")]
	[Address(RVA = "0xC1FD24", Offset = "0xC1FD24", VA = "0xC1FD24", Slot = "4")]
	public override bool CanSelect(PropSocket socket, Matrix4x4 propTransform, DungeonModel model, System.Random random)
	{
		return default(bool);
	}

	[Token(Token = "0x6000069")]
	[Address(RVA = "0xC1FDD8", Offset = "0xC1FDD8", VA = "0xC1FDD8")]
	public RoomSelectionRule()
	{
	}
}
[Token(Token = "0x2000026")]
public class SmallYTransformRule : TransformationRule
{
	[Token(Token = "0x4000039")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float angleVariation;

	[Token(Token = "0x600006A")]
	[Address(RVA = "0xB1FDB8", Offset = "0xB1FDB8", VA = "0xB1FDB8", Slot = "4")]
	public override void GetTransform(PropSocket socket, DungeonModel model, Matrix4x4 propTransform, System.Random random, out UnityEngine.Vector3 outPosition, out Quaternion outRotation, out UnityEngine.Vector3 outScale)
	{
	}

	[Token(Token = "0x600006B")]
	[Address(RVA = "0xB1FED8", Offset = "0xB1FED8", VA = "0xB1FED8")]
	public SmallYTransformRule()
	{
	}
}
[Token(Token = "0x2000027")]
public class ZFightingFixTransformRule : TransformationRule
{
	[Token(Token = "0x400003A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float movementDistance;

	[Token(Token = "0x600006C")]
	[Address(RVA = "0xC0F638", Offset = "0xC0F638", VA = "0xC0F638", Slot = "4")]
	public override void GetTransform(PropSocket socket, DungeonModel model, Matrix4x4 propTransform, System.Random random, out UnityEngine.Vector3 outPosition, out Quaternion outRotation, out UnityEngine.Vector3 outScale)
	{
	}

	[Token(Token = "0x600006D")]
	[Address(RVA = "0xC0F760", Offset = "0xC0F760", VA = "0xC0F760")]
	public ZFightingFixTransformRule()
	{
	}
}
[Token(Token = "0x2000028")]
public class CameraMovement : MonoBehaviour
{
	[Token(Token = "0x400003B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float movementSpeed;

	[Token(Token = "0x600006E")]
	[Address(RVA = "0xB04F50", Offset = "0xB04F50", VA = "0xB04F50")]
	private void Start()
	{
	}

	[Token(Token = "0x600006F")]
	[Address(RVA = "0xB04F54", Offset = "0xB04F54", VA = "0xB04F54")]
	private void Update()
	{
	}

	[Token(Token = "0x6000070")]
	[Address(RVA = "0xB0515C", Offset = "0xB0515C", VA = "0xB0515C")]
	public CameraMovement()
	{
	}
}
[Token(Token = "0x2000029")]
public class DestroyOnStart : MonoBehaviour
{
	[Token(Token = "0x6000071")]
	[Address(RVA = "0xB15F8C", Offset = "0xB15F8C", VA = "0xB15F8C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000072")]
	[Address(RVA = "0xB16008", Offset = "0xB16008", VA = "0xB16008")]
	private void Update()
	{
	}

	[Token(Token = "0x6000073")]
	[Address(RVA = "0xB1600C", Offset = "0xB1600C", VA = "0xB1600C")]
	public DestroyOnStart()
	{
	}
}
[Token(Token = "0x200002A")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8B534C", Offset = "0x8B534C")]
public class SimpleSmoothMouseLook : MonoBehaviour
{
	[Token(Token = "0x400003C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private UnityEngine.Vector2 _mouseAbsolute;

	[Token(Token = "0x400003D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private UnityEngine.Vector2 _smoothMouse;

	[Token(Token = "0x400003E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public UnityEngine.Vector2 clampInDegrees;

	[Token(Token = "0x400003F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool lockCursor;

	[Token(Token = "0x4000040")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public UnityEngine.Vector2 sensitivity;

	[Token(Token = "0x4000041")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public UnityEngine.Vector2 smoothing;

	[Token(Token = "0x4000042")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public UnityEngine.Vector2 targetDirection;

	[Token(Token = "0x4000043")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public UnityEngine.Vector2 targetCharacterDirection;

	[Token(Token = "0x4000044")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject characterBody;

	[Token(Token = "0x6000074")]
	[Address(RVA = "0xB1E360", Offset = "0xB1E360", VA = "0xB1E360")]
	private void Start()
	{
	}

	[Token(Token = "0x6000075")]
	[Address(RVA = "0xB1E4D8", Offset = "0xB1E4D8", VA = "0xB1E4D8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000076")]
	[Address(RVA = "0xB1EAE8", Offset = "0xB1EAE8", VA = "0xB1EAE8")]
	public SimpleSmoothMouseLook()
	{
	}
}
[Token(Token = "0x200002B")]
[ExecuteInEditMode]
public class GlitchCameraShader : MonoBehaviour
{
	[Token(Token = "0x4000045")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Material material;

	[Token(Token = "0x4000046")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float GlitchInterval;

	[Token(Token = "0x4000047")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8B9170", Offset = "0x8B9170")]
	public float GlitchRate;

	[Token(Token = "0x4000048")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float HorizontalResolution;

	[Token(Token = "0x4000049")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float VerticalResolution;

	[Token(Token = "0x400004A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8B9188", Offset = "0x8B9188")]
	public float WhiteNoiseIntensity;

	[Token(Token = "0x400004B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8B91A0", Offset = "0x8B91A0")]
	public float WaveNoiseIntensity;

	[Token(Token = "0x400004C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8B91B8", Offset = "0x8B91B8")]
	public float RGBShiftIntensity;

	[Token(Token = "0x400004D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Color GlitchTint;

	[Token(Token = "0x400004E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B91D0", Offset = "0x8B91D0")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x8B91D0", Offset = "0x8B91D0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B91D0", Offset = "0x8B91D0")]
	public bool EnableScanlineGlitch;

	[Token(Token = "0x400004F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B9240", Offset = "0x8B9240")]
	public bool EnableBlockGlitch;

	[Token(Token = "0x4000050")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4E")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B9278", Offset = "0x8B9278")]
	public bool EnableShakeGlitch;

	[Token(Token = "0x6000077")]
	[Address(RVA = "0xC51ACC", Offset = "0xC51ACC", VA = "0xC51ACC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000078")]
	[Address(RVA = "0xC51BB0", Offset = "0xC51BB0", VA = "0xC51BB0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000079")]
	[Address(RVA = "0xC51C94", Offset = "0xC51C94", VA = "0xC51C94")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600007A")]
	[Address(RVA = "0xC51D48", Offset = "0xC51D48", VA = "0xC51D48")]
	private void OnRenderImage(RenderTexture source, RenderTexture destination)
	{
	}

	[Token(Token = "0x600007B")]
	[Address(RVA = "0xC51FD8", Offset = "0xC51FD8", VA = "0xC51FD8")]
	public GlitchCameraShader()
	{
	}
}
[Token(Token = "0x200002C")]
[ExecuteInEditMode]
public class MobileGlitchCameraShader : MonoBehaviour
{
	[Token(Token = "0x4000051")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Material material;

	[Token(Token = "0x4000052")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float GlitchInterval;

	[Token(Token = "0x4000053")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8B92B0", Offset = "0x8B92B0")]
	public float GlitchRate;

	[Token(Token = "0x4000054")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float HorizontalResolution;

	[Token(Token = "0x4000055")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float VerticalResolution;

	[Token(Token = "0x4000056")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8B92C8", Offset = "0x8B92C8")]
	public float WhiteNoiseIntensity;

	[Token(Token = "0x4000057")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8B92E0", Offset = "0x8B92E0")]
	public float WaveNoiseIntensity;

	[Token(Token = "0x4000058")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8B92F8", Offset = "0x8B92F8")]
	public float RGBShiftIntensity;

	[Token(Token = "0x4000059")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B9310", Offset = "0x8B9310")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x8B9310", Offset = "0x8B9310")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B9310", Offset = "0x8B9310")]
	public bool EnableScanlineGlitch;

	[Token(Token = "0x400005A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B9380", Offset = "0x8B9380")]
	public bool EnableBlockGlitch;

	[Token(Token = "0x400005B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3E")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B93B8", Offset = "0x8B93B8")]
	public bool EnableShakeGlitch;

	[Token(Token = "0x600007C")]
	[Address(RVA = "0xB85D6C", Offset = "0xB85D6C", VA = "0xB85D6C")]
	private void Start()
	{
	}

	[Token(Token = "0x600007D")]
	[Address(RVA = "0xB85E50", Offset = "0xB85E50", VA = "0xB85E50")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600007E")]
	[Address(RVA = "0xB85F34", Offset = "0xB85F34", VA = "0xB85F34")]
	private void OnRenderImage(RenderTexture source, RenderTexture destination)
	{
	}

	[Token(Token = "0x600007F")]
	[Address(RVA = "0xB861A0", Offset = "0xB861A0", VA = "0xB861A0")]
	public void OnEnableBlockGlitchChanged(bool enable)
	{
	}

	[Token(Token = "0x6000080")]
	[Address(RVA = "0xB861AC", Offset = "0xB861AC", VA = "0xB861AC")]
	public void OnEnableShakeGlitchChanged(bool enable)
	{
	}

	[Token(Token = "0x6000081")]
	[Address(RVA = "0xB861B8", Offset = "0xB861B8", VA = "0xB861B8")]
	public void OnEnableScanlineGlitchChanged(bool enable)
	{
	}

	[Token(Token = "0x6000082")]
	[Address(RVA = "0xB861C4", Offset = "0xB861C4", VA = "0xB861C4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000083")]
	[Address(RVA = "0xB86278", Offset = "0xB86278", VA = "0xB86278")]
	public MobileGlitchCameraShader()
	{
	}
}
[Token(Token = "0x200002D")]
public class SimpleRotator : MonoBehaviour
{
	[Token(Token = "0x400005C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float Speed;

	[Token(Token = "0x400005D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public UnityEngine.Vector3 RotateAbout;

	[Token(Token = "0x6000084")]
	[Address(RVA = "0xB1E264", Offset = "0xB1E264", VA = "0xB1E264")]
	private void Update()
	{
	}

	[Token(Token = "0x6000085")]
	[Address(RVA = "0xB1E2E0", Offset = "0xB1E2E0", VA = "0xB1E2E0")]
	public SimpleRotator()
	{
	}
}
[Token(Token = "0x200002E")]
public class HapticHelper : MonoBehaviour
{
	[Token(Token = "0x400005E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static HapticHelper instance;

	[Token(Token = "0x400005F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OVRHaptics.OVRHapticsChannel m_hapticsChannelL;

	[Token(Token = "0x4000060")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private OVRHaptics.OVRHapticsChannel m_hapticsChannelR;

	[Token(Token = "0x4000061")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B93F0", Offset = "0x8B93F0")]
	public AudioClip GoodAudio;

	[Token(Token = "0x4000062")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AudioClip BadAudio;

	[Token(Token = "0x4000063")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AudioClip[] ExtraAudioClips;

	[Token(Token = "0x4000064")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private OVRHapticsClip GoodClip;

	[Token(Token = "0x4000065")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private OVRHapticsClip BadClip;

	[Token(Token = "0x4000066")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private OVRHapticsClip proceduralClip;

	[Token(Token = "0x4000067")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private OVRHapticsClip ExtraClip;

	[Token(Token = "0x4000068")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B9428", Offset = "0x8B9428")]
	public bool AlwaysPreempt;

	[Token(Token = "0x4000069")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B9460", Offset = "0x8B9460")]
	public bool TestMode;

	[Token(Token = "0x400006A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public OVRInput.Controller myController;

	[Token(Token = "0x400006B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public OVRInput.Button ClipButton;

	[Token(Token = "0x400006C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public OVRInput.Button ProceduralButton;

	[Token(Token = "0x400006D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public AudioClip ClipToTest;

	[Token(Token = "0x400006E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B9498", Offset = "0x8B9498")]
	public bool continuous;

	[Token(Token = "0x400006F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8B94D0", Offset = "0x8B94D0")]
	public int pIntensity;

	[Token(Token = "0x4000070")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8B94EC", Offset = "0x8B94EC")]
	public int pLength;

	[Token(Token = "0x4000071")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public bool useSin;

	[Token(Token = "0x4000072")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public float SinSpeed;

	[Token(Token = "0x6000086")]
	[Address(RVA = "0xAD4790", Offset = "0xAD4790", VA = "0xAD4790")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000087")]
	[Address(RVA = "0xAD48A4", Offset = "0xAD48A4", VA = "0xAD48A4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000088")]
	[Address(RVA = "0xAD48F8", Offset = "0xAD48F8", VA = "0xAD48F8")]
	public void Update()
	{
	}

	[Token(Token = "0x6000089")]
	[Address(RVA = "0xAD4B84", Offset = "0xAD4B84", VA = "0xAD4B84")]
	public void PlayGoodClip(bool isLeft, bool preempt = false)
	{
	}

	[Token(Token = "0x600008A")]
	[Address(RVA = "0xAD4BD8", Offset = "0xAD4BD8", VA = "0xAD4BD8")]
	public void PlayBadClip(bool isLeft, bool preempt = false)
	{
	}

	[Token(Token = "0x600008B")]
	[Address(RVA = "0xAD4C2C", Offset = "0xAD4C2C", VA = "0xAD4C2C")]
	public void PlayExtraClips(bool isLeft, int index, bool preempt = false)
	{
	}

	[Token(Token = "0x600008C")]
	[Address(RVA = "0xAD4A40", Offset = "0xAD4A40", VA = "0xAD4A40")]
	public void PlayHapticAudioClip(bool isLeft, AudioClip aClip, bool preempt = false)
	{
	}

	[Token(Token = "0x600008D")]
	[Address(RVA = "0xAD4B30", Offset = "0xAD4B30", VA = "0xAD4B30")]
	public void ProceduralTone(bool Left, int intensity, int length = 25)
	{
	}

	[Token(Token = "0x600008E")]
	[Address(RVA = "0xAD4A94", Offset = "0xAD4A94", VA = "0xAD4A94")]
	public void GenerateSinPulse(bool Left, int intensity, float speed, int length = 25)
	{
	}

	[Token(Token = "0x600008F")]
	[Address(RVA = "0xAD4C80", Offset = "0xAD4C80", VA = "0xAD4C80")]
	public void ClipPlayer(bool isLeft, OVRHapticsClip clip)
	{
	}

	[Token(Token = "0x6000090")]
	[Address(RVA = "0xAD4CCC", Offset = "0xAD4CCC", VA = "0xAD4CCC")]
	public void ClipPlayerNow(bool isLeft, OVRHapticsClip clip)
	{
	}

	[Token(Token = "0x6000091")]
	[Address(RVA = "0xAD4CFC", Offset = "0xAD4CFC", VA = "0xAD4CFC")]
	public HapticHelper()
	{
	}
}
[Token(Token = "0x200002F")]
public class PlayHapticEvent : MonoBehaviour
{
	[Token(Token = "0x4000073")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool playGood;

	[Token(Token = "0x4000074")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool playBad;

	[Token(Token = "0x4000075")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool playIndex;

	[Token(Token = "0x4000076")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	public bool playProcedrual;

	[Token(Token = "0x4000077")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool playClip;

	[Token(Token = "0x4000078")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int index;

	[Token(Token = "0x4000079")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioClip aClip;

	[Token(Token = "0x400007A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B9508", Offset = "0x8B9508")]
	public bool continuous;

	[Token(Token = "0x400007B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8B9540", Offset = "0x8B9540")]
	public int pIntensity;

	[Token(Token = "0x400007C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8B955C", Offset = "0x8B955C")]
	public int pLength;

	[Token(Token = "0x6000092")]
	[Address(RVA = "0xB67A78", Offset = "0xB67A78", VA = "0xB67A78")]
	private void OnTriggerEnter(Collider col)
	{
	}

	[Token(Token = "0x6000093")]
	[Address(RVA = "0xB67DB4", Offset = "0xB67DB4", VA = "0xB67DB4")]
	private void OnTriggerStay(Collider col)
	{
	}

	[Token(Token = "0x6000094")]
	[Address(RVA = "0xB67ECC", Offset = "0xB67ECC", VA = "0xB67ECC")]
	public PlayHapticEvent()
	{
	}
}
[Token(Token = "0x2000030")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8B53A4", Offset = "0x8B53A4")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8B53A4", Offset = "0x8B53A4")]
public class BetterOutline : Shadow
{
	[Token(Token = "0x400007D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<UIVertex> m_Verts;

	[Token(Token = "0x6000095")]
	[Address(RVA = "0xBC5118", Offset = "0xBC5118", VA = "0xBC5118")]
	protected BetterOutline()
	{
	}

	[Token(Token = "0x6000096")]
	[Address(RVA = "0xBC5188", Offset = "0xBC5188", VA = "0xBC5188", Slot = "20")]
	public override void ModifyMesh(VertexHelper vh)
	{
	}
}
[Token(Token = "0x2000031")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8B5430", Offset = "0x8B5430")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8B5430", Offset = "0x8B5430")]
public class Bevel : BaseMeshEffect
{
	[Token(Token = "0x400007E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Color m_HighlightColor;

	[Token(Token = "0x400007F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Color m_ShadowColor;

	[Token(Token = "0x4000080")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private UnityEngine.Vector2 m_BevelDirectionAndDepth;

	[Token(Token = "0x4000081")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private bool m_UseGraphicAlpha;

	[Token(Token = "0x4000082")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private List<UIVertex> m_Verts;

	[Token(Token = "0x17000001")]
	public Color highlightColor
	{
		[Token(Token = "0x6000098")]
		[Address(RVA = "0xBC5688", Offset = "0xBC5688", VA = "0xBC5688")]
		get
		{
			return default(Color);
		}
		[Token(Token = "0x6000099")]
		[Address(RVA = "0xBC5694", Offset = "0xBC5694", VA = "0xBC5694")]
		set
		{
		}
	}

	[Token(Token = "0x17000002")]
	public Color shadowColor
	{
		[Token(Token = "0x600009A")]
		[Address(RVA = "0xBC5778", Offset = "0xBC5778", VA = "0xBC5778")]
		get
		{
			return default(Color);
		}
		[Token(Token = "0x600009B")]
		[Address(RVA = "0xBC5784", Offset = "0xBC5784", VA = "0xBC5784")]
		set
		{
		}
	}

	[Token(Token = "0x17000003")]
	public UnityEngine.Vector2 bevelDirectionAndDepth
	{
		[Token(Token = "0x600009C")]
		[Address(RVA = "0xBC5868", Offset = "0xBC5868", VA = "0xBC5868")]
		get
		{
			return default(UnityEngine.Vector2);
		}
		[Token(Token = "0x600009D")]
		[Address(RVA = "0xBC5870", Offset = "0xBC5870", VA = "0xBC5870")]
		set
		{
		}
	}

	[Token(Token = "0x17000004")]
	public bool useGraphicAlpha
	{
		[Token(Token = "0x600009E")]
		[Address(RVA = "0xBC5988", Offset = "0xBC5988", VA = "0xBC5988")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600009F")]
		[Address(RVA = "0xBC5990", Offset = "0xBC5990", VA = "0xBC5990")]
		set
		{
		}
	}

	[Token(Token = "0x6000097")]
	[Address(RVA = "0xBC5588", Offset = "0xBC5588", VA = "0xBC5588")]
	protected Bevel()
	{
	}

	[Token(Token = "0x60000A0")]
	[Address(RVA = "0xBC5A5C", Offset = "0xBC5A5C", VA = "0xBC5A5C")]
	protected void ApplyShadowZeroAlloc(List<UIVertex> verts, Color32 color, int start, int end, float x, float y)
	{
	}

	[Token(Token = "0x60000A1")]
	[Address(RVA = "0xBC5C7C", Offset = "0xBC5C7C", VA = "0xBC5C7C", Slot = "20")]
	public override void ModifyMesh(VertexHelper vh)
	{
	}
}
[Token(Token = "0x2000032")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8B54BC", Offset = "0x8B54BC")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8B54BC", Offset = "0x8B54BC")]
public class CharacterSpacing : BaseMeshEffect
{
	[Token(Token = "0x4000083")]
	private const string REGEX_TAGS = "<b>|</b>|<i>|</i>|<size=.*?>|</size>|<color=.*?>|</color>|<material=.*?>|</material>";

	[Token(Token = "0x4000084")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float m_Offset;

	[Token(Token = "0x4000085")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<UIVertex> m_Verts;

	[Token(Token = "0x17000005")]
	public float offset
	{
		[Token(Token = "0x60000A3")]
		[Address(RVA = "0xB06DBC", Offset = "0xB06DBC", VA = "0xB06DBC")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60000A4")]
		[Address(RVA = "0xB06DC4", Offset = "0xB06DC4", VA = "0xB06DC4")]
		set
		{
		}
	}

	[Token(Token = "0x60000A2")]
	[Address(RVA = "0xB06D4C", Offset = "0xB06D4C", VA = "0xB06D4C")]
	protected CharacterSpacing()
	{
	}

	[Token(Token = "0x60000A5")]
	[Address(RVA = "0xB06E98", Offset = "0xB06E98", VA = "0xB06E98", Slot = "20")]
	public override void ModifyMesh(VertexHelper vh)
	{
	}

	[Token(Token = "0x60000A6")]
	[Address(RVA = "0xB07968", Offset = "0xB07968", VA = "0xB07968")]
	private MatchCollection GetRegexMatchedTags(string text, out int lengthWithoutTags)
	{
		return null;
	}
}
[Token(Token = "0x2000033")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8B5548", Offset = "0x8B5548")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8B5548", Offset = "0x8B5548")]
public class CurveEffect : BaseMeshEffect
{
	[Token(Token = "0x2000623")]
	public enum CurveMode
	{
		[Token(Token = "0x4002037")]
		TextArea,
		[Token(Token = "0x4002038")]
		FullRect
	}

	[Token(Token = "0x4000086")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private CurveMode m_CurveMode;

	[Token(Token = "0x4000087")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private AnimationCurve m_Curve;

	[Token(Token = "0x4000088")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private float m_Strength;

	[Token(Token = "0x4000089")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private List<UIVertex> m_Verts;

	[Token(Token = "0x17000006")]
	public AnimationCurve curve
	{
		[Token(Token = "0x60000A8")]
		[Address(RVA = "0xB0B1D4", Offset = "0xB0B1D4", VA = "0xB0B1D4")]
		get
		{
			return null;
		}
		[Token(Token = "0x60000A9")]
		[Address(RVA = "0xB0B1DC", Offset = "0xB0B1DC", VA = "0xB0B1DC")]
		set
		{
		}
	}

	[Token(Token = "0x17000007")]
	public float strength
	{
		[Token(Token = "0x60000AA")]
		[Address(RVA = "0xB0B2B0", Offset = "0xB0B2B0", VA = "0xB0B2B0")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60000AB")]
		[Address(RVA = "0xB0B2B8", Offset = "0xB0B2B8", VA = "0xB0B2B8")]
		set
		{
		}
	}

	[Token(Token = "0x60000A7")]
	[Address(RVA = "0xB0B054", Offset = "0xB0B054", VA = "0xB0B054")]
	protected CurveEffect()
	{
	}

	[Token(Token = "0x60000AC")]
	[Address(RVA = "0xB0B38C", Offset = "0xB0B38C", VA = "0xB0B38C", Slot = "20")]
	public override void ModifyMesh(VertexHelper vh)
	{
	}
}
[Token(Token = "0x2000034")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8B55D4", Offset = "0x8B55D4")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8B55D4", Offset = "0x8B55D4")]
public class DepthEffect : BaseMeshEffect
{
	[Token(Token = "0x400008A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Color m_EffectColor;

	[Token(Token = "0x400008B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private UnityEngine.Vector2 m_EffectDirectionAndDepth;

	[Token(Token = "0x400008C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private UnityEngine.Vector2 m_DepthPerspectiveStrength;

	[Token(Token = "0x400008D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private bool m_OnlyInitialCharactersGenerateDepth;

	[Token(Token = "0x400008E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	[SerializeField]
	private bool m_UseGraphicAlpha;

	[Token(Token = "0x400008F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private UnityEngine.Vector2 m_OverallTextSize;

	[Token(Token = "0x4000090")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private UnityEngine.Vector2 m_TopLeftPos;

	[Token(Token = "0x4000091")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private UnityEngine.Vector2 m_BottomRightPos;

	[Token(Token = "0x4000092")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private List<UIVertex> m_Verts;

	[Token(Token = "0x17000008")]
	public Color effectColor
	{
		[Token(Token = "0x60000AE")]
		[Address(RVA = "0xB14F30", Offset = "0xB14F30", VA = "0xB14F30")]
		get
		{
			return default(Color);
		}
		[Token(Token = "0x60000AF")]
		[Address(RVA = "0xB14F3C", Offset = "0xB14F3C", VA = "0xB14F3C")]
		set
		{
		}
	}

	[Token(Token = "0x17000009")]
	public UnityEngine.Vector2 effectDirectionAndDepth
	{
		[Token(Token = "0x60000B0")]
		[Address(RVA = "0xB15020", Offset = "0xB15020", VA = "0xB15020")]
		get
		{
			return default(UnityEngine.Vector2);
		}
		[Token(Token = "0x60000B1")]
		[Address(RVA = "0xB15028", Offset = "0xB15028", VA = "0xB15028")]
		set
		{
		}
	}

	[Token(Token = "0x1700000A")]
	public UnityEngine.Vector2 depthPerspectiveStrength
	{
		[Token(Token = "0x60000B2")]
		[Address(RVA = "0xB15140", Offset = "0xB15140", VA = "0xB15140")]
		get
		{
			return default(UnityEngine.Vector2);
		}
		[Token(Token = "0x60000B3")]
		[Address(RVA = "0xB15148", Offset = "0xB15148", VA = "0xB15148")]
		set
		{
		}
	}

	[Token(Token = "0x1700000B")]
	public bool onlyInitialCharactersGenerateDepth
	{
		[Token(Token = "0x60000B4")]
		[Address(RVA = "0xB15260", Offset = "0xB15260", VA = "0xB15260")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60000B5")]
		[Address(RVA = "0xB15268", Offset = "0xB15268", VA = "0xB15268")]
		set
		{
		}
	}

	[Token(Token = "0x1700000C")]
	public bool useGraphicAlpha
	{
		[Token(Token = "0x60000B6")]
		[Address(RVA = "0xB15334", Offset = "0xB15334", VA = "0xB15334")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60000B7")]
		[Address(RVA = "0xB1533C", Offset = "0xB1533C", VA = "0xB1533C")]
		set
		{
		}
	}

	[Token(Token = "0x60000AD")]
	[Address(RVA = "0xB14DF4", Offset = "0xB14DF4", VA = "0xB14DF4")]
	protected DepthEffect()
	{
	}

	[Token(Token = "0x60000B8")]
	[Address(RVA = "0xB15408", Offset = "0xB15408", VA = "0xB15408")]
	protected void ApplyShadowZeroAlloc(List<UIVertex> verts, Color32 color, int start, int end, float x, float y, float factor)
	{
	}

	[Token(Token = "0x60000B9")]
	[Address(RVA = "0xB1568C", Offset = "0xB1568C", VA = "0xB1568C", Slot = "20")]
	public override void ModifyMesh(VertexHelper vh)
	{
	}
}
[Token(Token = "0x2000035")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8B5660", Offset = "0x8B5660")]
[DisallowMultipleComponent]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8B5660", Offset = "0x8B5660")]
public class InnerBevel : BaseMeshEffect, IMaterialModifier
{
	[Token(Token = "0x2000624")]
	public enum ColorMode
	{
		[Token(Token = "0x400203A")]
		Override,
		[Token(Token = "0x400203B")]
		Additive,
		[Token(Token = "0x400203C")]
		Multiply
	}

	[Token(Token = "0x4000093")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private ColorMode m_HighlightColorMode;

	[Token(Token = "0x4000094")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	public Color m_HighlightColor;

	[Token(Token = "0x4000095")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private ColorMode m_ShadowColorMode;

	[Token(Token = "0x4000096")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	public Color m_ShadowColor;

	[Token(Token = "0x4000097")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private UnityEngine.Vector2 m_BevelDirectionAndDepth;

	[Token(Token = "0x4000098")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool m_NeedsToSetMaterialDirty;

	[Token(Token = "0x4000099")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Material m_ModifiedMaterial;

	[Token(Token = "0x400009A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private List<UIVertex> m_Verts;

	[Token(Token = "0x1700000D")]
	public ColorMode highlightColorMode
	{
		[Token(Token = "0x60000BC")]
		[Address(RVA = "0xAD844C", Offset = "0xAD844C", VA = "0xAD844C")]
		get
		{
			return default(ColorMode);
		}
		[Token(Token = "0x60000BD")]
		[Address(RVA = "0xAD8454", Offset = "0xAD8454", VA = "0xAD8454")]
		set
		{
		}
	}

	[Token(Token = "0x1700000E")]
	public Color highlightColor
	{
		[Token(Token = "0x60000BE")]
		[Address(RVA = "0xAD851C", Offset = "0xAD851C", VA = "0xAD851C")]
		get
		{
			return default(Color);
		}
		[Token(Token = "0x60000BF")]
		[Address(RVA = "0xAD8528", Offset = "0xAD8528", VA = "0xAD8528")]
		set
		{
		}
	}

	[Token(Token = "0x1700000F")]
	public ColorMode shadowColorMode
	{
		[Token(Token = "0x60000C0")]
		[Address(RVA = "0xAD860C", Offset = "0xAD860C", VA = "0xAD860C")]
		get
		{
			return default(ColorMode);
		}
		[Token(Token = "0x60000C1")]
		[Address(RVA = "0xAD8614", Offset = "0xAD8614", VA = "0xAD8614")]
		set
		{
		}
	}

	[Token(Token = "0x17000010")]
	public Color shadowColor
	{
		[Token(Token = "0x60000C2")]
		[Address(RVA = "0xAD86DC", Offset = "0xAD86DC", VA = "0xAD86DC")]
		get
		{
			return default(Color);
		}
		[Token(Token = "0x60000C3")]
		[Address(RVA = "0xAD86E8", Offset = "0xAD86E8", VA = "0xAD86E8")]
		set
		{
		}
	}

	[Token(Token = "0x17000011")]
	public UnityEngine.Vector2 bevelDirectionAndDepth
	{
		[Token(Token = "0x60000C4")]
		[Address(RVA = "0xAD87CC", Offset = "0xAD87CC", VA = "0xAD87CC")]
		get
		{
			return default(UnityEngine.Vector2);
		}
		[Token(Token = "0x60000C5")]
		[Address(RVA = "0xAD87D4", Offset = "0xAD87D4", VA = "0xAD87D4")]
		set
		{
		}
	}

	[Token(Token = "0x60000BA")]
	[Address(RVA = "0xAD82DC", Offset = "0xAD82DC", VA = "0xAD82DC")]
	protected InnerBevel()
	{
	}

	[Token(Token = "0x60000BB")]
	[Address(RVA = "0xAD8398", Offset = "0xAD8398", VA = "0xAD8398", Slot = "6")]
	protected override void Start()
	{
	}

	[Token(Token = "0x60000C6")]
	[Address(RVA = "0xAD88EC", Offset = "0xAD88EC", VA = "0xAD88EC", Slot = "20")]
	public override void ModifyMesh(VertexHelper vh)
	{
	}

	[Token(Token = "0x60000C7")]
	[Address(RVA = "0xAD8E2C", Offset = "0xAD8E2C", VA = "0xAD8E2C")]
	private void Update()
	{
	}

	[Token(Token = "0x60000C8")]
	[Address(RVA = "0xAD8EE8", Offset = "0xAD8EE8", VA = "0xAD8EE8", Slot = "22")]
	public virtual Material GetModifiedMaterial(Material baseMaterial)
	{
		return null;
	}
}
[Token(Token = "0x2000036")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8B56FC", Offset = "0x8B56FC")]
[DisallowMultipleComponent]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8B56FC", Offset = "0x8B56FC")]
public class InnerOutline : BaseMeshEffect, IMaterialModifier
{
	[Token(Token = "0x2000625")]
	public enum ColorMode
	{
		[Token(Token = "0x400203E")]
		Override,
		[Token(Token = "0x400203F")]
		Additive,
		[Token(Token = "0x4002040")]
		Multiply
	}

	[Token(Token = "0x400009B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private ColorMode m_ColorMode;

	[Token(Token = "0x400009C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	public Color m_OutlineColor;

	[Token(Token = "0x400009D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private float m_OutlineThickness;

	[Token(Token = "0x400009E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool m_NeedsToSetMaterialDirty;

	[Token(Token = "0x400009F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Material m_ModifiedMaterial;

	[Token(Token = "0x40000A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private List<UIVertex> m_Verts;

	[Token(Token = "0x17000012")]
	public ColorMode colorMode
	{
		[Token(Token = "0x60000CB")]
		[Address(RVA = "0xAD93B8", Offset = "0xAD93B8", VA = "0xAD93B8")]
		get
		{
			return default(ColorMode);
		}
		[Token(Token = "0x60000CC")]
		[Address(RVA = "0xAD93C0", Offset = "0xAD93C0", VA = "0xAD93C0")]
		set
		{
		}
	}

	[Token(Token = "0x17000013")]
	public Color outlineColor
	{
		[Token(Token = "0x60000CD")]
		[Address(RVA = "0xAD9488", Offset = "0xAD9488", VA = "0xAD9488")]
		get
		{
			return default(Color);
		}
		[Token(Token = "0x60000CE")]
		[Address(RVA = "0xAD9494", Offset = "0xAD9494", VA = "0xAD9494")]
		set
		{
		}
	}

	[Token(Token = "0x17000014")]
	public float outlineThickness
	{
		[Token(Token = "0x60000CF")]
		[Address(RVA = "0xAD9578", Offset = "0xAD9578", VA = "0xAD9578")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60000D0")]
		[Address(RVA = "0xAD9580", Offset = "0xAD9580", VA = "0xAD9580")]
		set
		{
		}
	}

	[Token(Token = "0x60000C9")]
	[Address(RVA = "0xAD927C", Offset = "0xAD927C", VA = "0xAD927C")]
	protected InnerOutline()
	{
	}

	[Token(Token = "0x60000CA")]
	[Address(RVA = "0xAD9304", Offset = "0xAD9304", VA = "0xAD9304", Slot = "6")]
	protected override void Start()
	{
	}

	[Token(Token = "0x60000D1")]
	[Address(RVA = "0xAD9648", Offset = "0xAD9648", VA = "0xAD9648", Slot = "20")]
	public override void ModifyMesh(VertexHelper vh)
	{
	}

	[Token(Token = "0x60000D2")]
	[Address(RVA = "0xAD9854", Offset = "0xAD9854", VA = "0xAD9854")]
	private void Update()
	{
	}

	[Token(Token = "0x60000D3")]
	[Address(RVA = "0xAD9910", Offset = "0xAD9910", VA = "0xAD9910", Slot = "22")]
	public virtual Material GetModifiedMaterial(Material baseMaterial)
	{
		return null;
	}
}
[Token(Token = "0x2000037")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8B5798", Offset = "0x8B5798")]
[DisallowMultipleComponent]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8B5798", Offset = "0x8B5798")]
public class OverlayTexture : BaseMeshEffect, IMaterialModifier
{
	[Token(Token = "0x2000626")]
	public enum TextureMode
	{
		[Token(Token = "0x4002042")]
		Local,
		[Token(Token = "0x4002043")]
		GlobalTextArea,
		[Token(Token = "0x4002044")]
		GlobalFullRect
	}

	[Token(Token = "0x2000627")]
	public enum ColorMode
	{
		[Token(Token = "0x4002046")]
		Override,
		[Token(Token = "0x4002047")]
		Additive,
		[Token(Token = "0x4002048")]
		Multiply
	}

	[Token(Token = "0x40000A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private TextureMode m_TextureMode;

	[Token(Token = "0x40000A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private ColorMode m_ColorMode;

	[Token(Token = "0x40000A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	public Texture2D m_OverlayTexture;

	[Token(Token = "0x40000A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool m_NeedsToSetMaterialDirty;

	[Token(Token = "0x40000A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material m_ModifiedMaterial;

	[Token(Token = "0x40000A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<UIVertex> m_Verts;

	[Token(Token = "0x17000015")]
	public TextureMode textureMode
	{
		[Token(Token = "0x60000D6")]
		[Address(RVA = "0xAF911C", Offset = "0xAF911C", VA = "0xAF911C")]
		get
		{
			return default(TextureMode);
		}
		[Token(Token = "0x60000D7")]
		[Address(RVA = "0xAF9124", Offset = "0xAF9124", VA = "0xAF9124")]
		set
		{
		}
	}

	[Token(Token = "0x17000016")]
	public ColorMode colorMode
	{
		[Token(Token = "0x60000D8")]
		[Address(RVA = "0xAF91EC", Offset = "0xAF91EC", VA = "0xAF91EC")]
		get
		{
			return default(ColorMode);
		}
		[Token(Token = "0x60000D9")]
		[Address(RVA = "0xAF91F4", Offset = "0xAF91F4", VA = "0xAF91F4")]
		set
		{
		}
	}

	[Token(Token = "0x17000017")]
	public Texture2D overlayTexture
	{
		[Token(Token = "0x60000DA")]
		[Address(RVA = "0xAF92BC", Offset = "0xAF92BC", VA = "0xAF92BC")]
		get
		{
			return null;
		}
		[Token(Token = "0x60000DB")]
		[Address(RVA = "0xAF92C4", Offset = "0xAF92C4", VA = "0xAF92C4")]
		set
		{
		}
	}

	[Token(Token = "0x60000D4")]
	[Address(RVA = "0xAF8FF8", Offset = "0xAF8FF8", VA = "0xAF8FF8")]
	protected OverlayTexture()
	{
	}

	[Token(Token = "0x60000D5")]
	[Address(RVA = "0xAF9068", Offset = "0xAF9068", VA = "0xAF9068", Slot = "6")]
	protected override void Start()
	{
	}

	[Token(Token = "0x60000DC")]
	[Address(RVA = "0xAF938C", Offset = "0xAF938C", VA = "0xAF938C", Slot = "20")]
	public override void ModifyMesh(VertexHelper vh)
	{
	}

	[Token(Token = "0x60000DD")]
	[Address(RVA = "0xAF99A8", Offset = "0xAF99A8", VA = "0xAF99A8")]
	private void Update()
	{
	}

	[Token(Token = "0x60000DE")]
	[Address(RVA = "0xAF9A64", Offset = "0xAF9A64", VA = "0xAF9A64", Slot = "22")]
	public virtual Material GetModifiedMaterial(Material baseMaterial)
	{
		return null;
	}
}
[Token(Token = "0x2000038")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8B5834", Offset = "0x8B5834")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8B5834", Offset = "0x8B5834")]
public class GradientColor : BaseMeshEffect
{
	[Token(Token = "0x2000628")]
	public enum GradientMode
	{
		[Token(Token = "0x400204A")]
		Local,
		[Token(Token = "0x400204B")]
		GlobalTextArea,
		[Token(Token = "0x400204C")]
		GlobalFullRect
	}

	[Token(Token = "0x2000629")]
	public enum GradientDirection
	{
		[Token(Token = "0x400204E")]
		Vertical,
		[Token(Token = "0x400204F")]
		Horizontal
	}

	[Token(Token = "0x200062A")]
	public enum ColorMode
	{
		[Token(Token = "0x4002051")]
		Override,
		[Token(Token = "0x4002052")]
		Additive,
		[Token(Token = "0x4002053")]
		Multiply
	}

	[Token(Token = "0x40000A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GradientMode m_GradientMode;

	[Token(Token = "0x40000A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private GradientDirection m_GradientDirection;

	[Token(Token = "0x40000A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private ColorMode m_ColorMode;

	[Token(Token = "0x40000AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	public Color m_FirstColor;

	[Token(Token = "0x40000AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[SerializeField]
	public Color m_SecondColor;

	[Token(Token = "0x40000AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[SerializeField]
	private bool m_UseGraphicAlpha;

	[Token(Token = "0x40000AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private List<UIVertex> m_Verts;

	[Token(Token = "0x17000018")]
	public GradientMode gradientMode
	{
		[Token(Token = "0x60000E0")]
		[Address(RVA = "0xC52BB8", Offset = "0xC52BB8", VA = "0xC52BB8")]
		get
		{
			return default(GradientMode);
		}
		[Token(Token = "0x60000E1")]
		[Address(RVA = "0xC52BC0", Offset = "0xC52BC0", VA = "0xC52BC0")]
		set
		{
		}
	}

	[Token(Token = "0x17000019")]
	public GradientDirection gradientDirection
	{
		[Token(Token = "0x60000E2")]
		[Address(RVA = "0xC52C88", Offset = "0xC52C88", VA = "0xC52C88")]
		get
		{
			return default(GradientDirection);
		}
		[Token(Token = "0x60000E3")]
		[Address(RVA = "0xC52C90", Offset = "0xC52C90", VA = "0xC52C90")]
		set
		{
		}
	}

	[Token(Token = "0x1700001A")]
	public ColorMode colorMode
	{
		[Token(Token = "0x60000E4")]
		[Address(RVA = "0xC52D58", Offset = "0xC52D58", VA = "0xC52D58")]
		get
		{
			return default(ColorMode);
		}
		[Token(Token = "0x60000E5")]
		[Address(RVA = "0xC52D60", Offset = "0xC52D60", VA = "0xC52D60")]
		set
		{
		}
	}

	[Token(Token = "0x1700001B")]
	public Color firstColor
	{
		[Token(Token = "0x60000E6")]
		[Address(RVA = "0xC52E28", Offset = "0xC52E28", VA = "0xC52E28")]
		get
		{
			return default(Color);
		}
		[Token(Token = "0x60000E7")]
		[Address(RVA = "0xC52E34", Offset = "0xC52E34", VA = "0xC52E34")]
		set
		{
		}
	}

	[Token(Token = "0x1700001C")]
	public Color secondColor
	{
		[Token(Token = "0x60000E8")]
		[Address(RVA = "0xC52F18", Offset = "0xC52F18", VA = "0xC52F18")]
		get
		{
			return default(Color);
		}
		[Token(Token = "0x60000E9")]
		[Address(RVA = "0xC52F24", Offset = "0xC52F24", VA = "0xC52F24")]
		set
		{
		}
	}

	[Token(Token = "0x1700001D")]
	public bool useGraphicAlpha
	{
		[Token(Token = "0x60000EA")]
		[Address(RVA = "0xC53008", Offset = "0xC53008", VA = "0xC53008")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60000EB")]
		[Address(RVA = "0xC53010", Offset = "0xC53010", VA = "0xC53010")]
		set
		{
		}
	}

	[Token(Token = "0x60000DF")]
	[Address(RVA = "0xC52B20", Offset = "0xC52B20", VA = "0xC52B20")]
	protected GradientColor()
	{
	}

	[Token(Token = "0x60000EC")]
	[Address(RVA = "0xC530DC", Offset = "0xC530DC", VA = "0xC530DC", Slot = "20")]
	public override void ModifyMesh(VertexHelper vh)
	{
	}

	[Token(Token = "0x60000ED")]
	[Address(RVA = "0xC538F4", Offset = "0xC538F4", VA = "0xC538F4")]
	private Color CalculateColor(Color initialColor, Color newColor, ColorMode colorMode)
	{
		return default(Color);
	}
}
[Token(Token = "0x2000039")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8B58C0", Offset = "0x8B58C0")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8B58C0", Offset = "0x8B58C0")]
public class LimitVisibleCharacters : BaseMeshEffect
{
	[Token(Token = "0x40000AE")]
	private const string REGEX_TAGS = "<b>|</b>|<i>|</i>|<size=.*?>|</size>|<color=.*?>|</color>|<material=.*?>|</material>";

	[Token(Token = "0x40000AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private int m_VisibleCharacterCount;

	[Token(Token = "0x40000B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<UIVertex> m_Verts;

	[Token(Token = "0x1700001E")]
	public int visibleCharacterCount
	{
		[Token(Token = "0x60000EF")]
		[Address(RVA = "0xAE301C", Offset = "0xAE301C", VA = "0xAE301C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60000F0")]
		[Address(RVA = "0xAE3024", Offset = "0xAE3024", VA = "0xAE3024")]
		set
		{
		}
	}

	[Token(Token = "0x60000EE")]
	[Address(RVA = "0xAE2FAC", Offset = "0xAE2FAC", VA = "0xAE2FAC")]
	protected LimitVisibleCharacters()
	{
	}

	[Token(Token = "0x60000F1")]
	[Address(RVA = "0xAE30F8", Offset = "0xAE30F8", VA = "0xAE30F8", Slot = "20")]
	public override void ModifyMesh(VertexHelper vh)
	{
	}

	[Token(Token = "0x60000F2")]
	[Address(RVA = "0xAE35D4", Offset = "0xAE35D4", VA = "0xAE35D4")]
	private MatchCollection GetRegexMatchedTags(string text, out int lengthWithoutTags)
	{
		return null;
	}
}
[Token(Token = "0x200003A")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8B594C", Offset = "0x8B594C")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8B594C", Offset = "0x8B594C")]
public class Typewriter : MonoBehaviour
{
	[Token(Token = "0x200062B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B798C", Offset = "0x8B798C")]
	private sealed class <PlayTypewriter>d__10 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002054")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002055")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002056")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Typewriter <>4__this;

		[Token(Token = "0x1700044C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600270D")]
			[Address(RVA = "0x1A62378", Offset = "0x1A62378", VA = "0x1A62378", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700044D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600270F")]
			[Address(RVA = "0x1A623E0", Offset = "0x1A623E0", VA = "0x1A623E0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600270A")]
		[Address(RVA = "0x1A62118", Offset = "0x1A62118", VA = "0x1A62118")]
		[DebuggerHidden]
		public <PlayTypewriter>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x600270B")]
		[Address(RVA = "0x1A62158", Offset = "0x1A62158", VA = "0x1A62158", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600270C")]
		[Address(RVA = "0x1A6215C", Offset = "0x1A6215C", VA = "0x1A6215C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600270E")]
		[Address(RVA = "0x1A62380", Offset = "0x1A62380", VA = "0x1A62380", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40000B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float delayBetweenSymbols;

	[Token(Token = "0x40000B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioClip[] typeSoundEffects;

	[Token(Token = "0x40000B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioSource audioSourceForTypeEffect;

	[Token(Token = "0x40000B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float _timer;

	[Token(Token = "0x40000B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private LimitVisibleCharacters _limitVisibleCharactersComponent;

	[Token(Token = "0x40000B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Text _textComponent;

	[Token(Token = "0x60000F3")]
	[Address(RVA = "0x1A61F48", Offset = "0x1A61F48", VA = "0x1A61F48")]
	private void Start()
	{
	}

	[Token(Token = "0x60000F4")]
	[Address(RVA = "0x1A61F4C", Offset = "0x1A61F4C", VA = "0x1A61F4C")]
	private void Update()
	{
	}

	[Token(Token = "0x60000F5")]
	[Address(RVA = "0x1A61F50", Offset = "0x1A61F50", VA = "0x1A61F50")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60000F6")]
	[Address(RVA = "0x1A62054", Offset = "0x1A62054", VA = "0x1A62054")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60000F7")]
	[Address(RVA = "0x1A620A8", Offset = "0x1A620A8", VA = "0x1A620A8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C2114", Offset = "0x8C2114")]
	private IEnumerator PlayTypewriter()
	{
		return null;
	}

	[Token(Token = "0x60000F8")]
	[Address(RVA = "0x1A62144", Offset = "0x1A62144", VA = "0x1A62144")]
	public Typewriter()
	{
	}
}
[Token(Token = "0x200003B")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8B59D8", Offset = "0x8B59D8")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8B59D8", Offset = "0x8B59D8")]
public class SkewEffect : BaseMeshEffect
{
	[Token(Token = "0x200062C")]
	public enum SkewMode
	{
		[Token(Token = "0x4002058")]
		TextArea,
		[Token(Token = "0x4002059")]
		FullRect
	}

	[Token(Token = "0x40000B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private SkewMode m_SkewMode;

	[Token(Token = "0x40000B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private UnityEngine.Vector2 m_UpperLeftOffset;

	[Token(Token = "0x40000B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private UnityEngine.Vector2 m_UpperRightOffset;

	[Token(Token = "0x40000BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private UnityEngine.Vector2 m_LowerLeftOffset;

	[Token(Token = "0x40000BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[SerializeField]
	private UnityEngine.Vector2 m_LowerRightOffset;

	[Token(Token = "0x40000BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private List<UIVertex> m_Verts;

	[Token(Token = "0x1700001F")]
	public UnityEngine.Vector2 upperLeftOffset
	{
		[Token(Token = "0x60000FA")]
		[Address(RVA = "0xB1EC40", Offset = "0xB1EC40", VA = "0xB1EC40")]
		get
		{
			return default(UnityEngine.Vector2);
		}
		[Token(Token = "0x60000FB")]
		[Address(RVA = "0xB1EC48", Offset = "0xB1EC48", VA = "0xB1EC48")]
		set
		{
		}
	}

	[Token(Token = "0x17000020")]
	public UnityEngine.Vector2 upperRightOffset
	{
		[Token(Token = "0x60000FC")]
		[Address(RVA = "0xB1ED14", Offset = "0xB1ED14", VA = "0xB1ED14")]
		get
		{
			return default(UnityEngine.Vector2);
		}
		[Token(Token = "0x60000FD")]
		[Address(RVA = "0xB1ED1C", Offset = "0xB1ED1C", VA = "0xB1ED1C")]
		set
		{
		}
	}

	[Token(Token = "0x17000021")]
	public UnityEngine.Vector2 lowerLeftOffset
	{
		[Token(Token = "0x60000FE")]
		[Address(RVA = "0xB1EDE8", Offset = "0xB1EDE8", VA = "0xB1EDE8")]
		get
		{
			return default(UnityEngine.Vector2);
		}
		[Token(Token = "0x60000FF")]
		[Address(RVA = "0xB1EDF0", Offset = "0xB1EDF0", VA = "0xB1EDF0")]
		set
		{
		}
	}

	[Token(Token = "0x17000022")]
	public UnityEngine.Vector2 lowerRightOffset
	{
		[Token(Token = "0x6000100")]
		[Address(RVA = "0xB1EEBC", Offset = "0xB1EEBC", VA = "0xB1EEBC")]
		get
		{
			return default(UnityEngine.Vector2);
		}
		[Token(Token = "0x6000101")]
		[Address(RVA = "0xB1EEC4", Offset = "0xB1EEC4", VA = "0xB1EEC4")]
		set
		{
		}
	}

	[Token(Token = "0x60000F9")]
	[Address(RVA = "0xB1EB80", Offset = "0xB1EB80", VA = "0xB1EB80")]
	protected SkewEffect()
	{
	}

	[Token(Token = "0x6000102")]
	[Address(RVA = "0xB1EF90", Offset = "0xB1EF90", VA = "0xB1EF90", Slot = "20")]
	public override void ModifyMesh(VertexHelper vh)
	{
	}
}
[Token(Token = "0x200003C")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8B5A64", Offset = "0x8B5A64")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8B5A64", Offset = "0x8B5A64")]
public class SoftShadow : Shadow
{
	[Token(Token = "0x40000BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[SerializeField]
	private float m_BlurSpread;

	[Token(Token = "0x40000BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private bool m_OnlyInitialCharactersDropShadow;

	[Token(Token = "0x40000BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private List<UIVertex> m_Verts;

	[Token(Token = "0x17000023")]
	public float blurSpread
	{
		[Token(Token = "0x6000104")]
		[Address(RVA = "0xB20BF4", Offset = "0xB20BF4", VA = "0xB20BF4")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000105")]
		[Address(RVA = "0xB20BFC", Offset = "0xB20BFC", VA = "0xB20BFC")]
		set
		{
		}
	}

	[Token(Token = "0x17000024")]
	public bool onlyInitialCharactersDropShadow
	{
		[Token(Token = "0x6000106")]
		[Address(RVA = "0xB20CC4", Offset = "0xB20CC4", VA = "0xB20CC4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000107")]
		[Address(RVA = "0xB20CCC", Offset = "0xB20CCC", VA = "0xB20CCC")]
		set
		{
		}
	}

	[Token(Token = "0x6000103")]
	[Address(RVA = "0xB20B74", Offset = "0xB20B74", VA = "0xB20B74")]
	protected SoftShadow()
	{
	}

	[Token(Token = "0x6000108")]
	[Address(RVA = "0xB20D98", Offset = "0xB20D98", VA = "0xB20D98", Slot = "20")]
	public override void ModifyMesh(VertexHelper vh)
	{
	}
}
[Token(Token = "0x200003D")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8B5AF0", Offset = "0x8B5AF0")]
public class ToJOutline : Shadow
{
	[Token(Token = "0x40000C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<UIVertex> m_Verts;

	[Token(Token = "0x6000109")]
	[Address(RVA = "0x1A58A0C", Offset = "0x1A58A0C", VA = "0x1A58A0C")]
	protected ToJOutline()
	{
	}

	[Token(Token = "0x600010A")]
	[Address(RVA = "0x1A58A7C", Offset = "0x1A58A7C", VA = "0x1A58A7C", Slot = "20")]
	public override void ModifyMesh(VertexHelper vh)
	{
	}
}
[Token(Token = "0x200003E")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8B5B2C", Offset = "0x8B5B2C")]
public class ToJShadow : BaseMeshEffect
{
	[Token(Token = "0x40000C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Color m_EffectColor;

	[Token(Token = "0x40000C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private UnityEngine.Vector2 m_EffectDistance;

	[Token(Token = "0x40000C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private bool m_UseGraphicAlpha;

	[Token(Token = "0x40000C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<UIVertex> m_Verts;

	[Token(Token = "0x17000025")]
	public Color effectColor
	{
		[Token(Token = "0x600010C")]
		[Address(RVA = "0x1A58F14", Offset = "0x1A58F14", VA = "0x1A58F14")]
		get
		{
			return default(Color);
		}
		[Token(Token = "0x600010D")]
		[Address(RVA = "0x1A58F20", Offset = "0x1A58F20", VA = "0x1A58F20")]
		set
		{
		}
	}

	[Token(Token = "0x17000026")]
	public UnityEngine.Vector2 effectDistance
	{
		[Token(Token = "0x600010E")]
		[Address(RVA = "0x1A59004", Offset = "0x1A59004", VA = "0x1A59004")]
		get
		{
			return default(UnityEngine.Vector2);
		}
		[Token(Token = "0x600010F")]
		[Address(RVA = "0x1A5900C", Offset = "0x1A5900C", VA = "0x1A5900C")]
		set
		{
		}
	}

	[Token(Token = "0x17000027")]
	public bool useGraphicAlpha
	{
		[Token(Token = "0x6000110")]
		[Address(RVA = "0x1A5914C", Offset = "0x1A5914C", VA = "0x1A5914C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000111")]
		[Address(RVA = "0x1A59154", Offset = "0x1A59154", VA = "0x1A59154")]
		set
		{
		}
	}

	[Token(Token = "0x600010B")]
	[Address(RVA = "0x1A58E48", Offset = "0x1A58E48", VA = "0x1A58E48")]
	protected ToJShadow()
	{
	}

	[Token(Token = "0x6000112")]
	[Address(RVA = "0x1A59220", Offset = "0x1A59220", VA = "0x1A59220")]
	protected void ApplyShadowZeroAlloc(List<UIVertex> verts, Color32 color, int start, int end, float x, float y)
	{
	}

	[Token(Token = "0x6000113")]
	[Address(RVA = "0x1A59478", Offset = "0x1A59478", VA = "0x1A59478")]
	protected void ApplyShadow(List<UIVertex> verts, Color32 color, int start, int end, float x, float y)
	{
	}

	[Token(Token = "0x6000114")]
	[Address(RVA = "0x1A59544", Offset = "0x1A59544", VA = "0x1A59544", Slot = "20")]
	public override void ModifyMesh(VertexHelper vh)
	{
	}
}
[Token(Token = "0x200003F")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8B5B68", Offset = "0x8B5B68")]
public class TwitchChatDebugLogger : MonoBehaviour
{
	[Token(Token = "0x40000C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool printChatMessages;

	[Token(Token = "0x40000C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool printServerMessages;

	[Token(Token = "0x40000C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool printWhispers;

	[Token(Token = "0x6000115")]
	[Address(RVA = "0x1A60820", Offset = "0x1A60820", VA = "0x1A60820")]
	private void Start()
	{
	}

	[Token(Token = "0x6000116")]
	[Address(RVA = "0x1A60A40", Offset = "0x1A60A40", VA = "0x1A60A40")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000117")]
	[Address(RVA = "0x1A60C60", Offset = "0x1A60C60", VA = "0x1A60C60")]
	private void OnChatMessage(ref TwitchChatMessage msg)
	{
	}

	[Token(Token = "0x6000118")]
	[Address(RVA = "0x1A60E54", Offset = "0x1A60E54", VA = "0x1A60E54")]
	private void OnServerMessage(ref TwitchServerMessage msg)
	{
	}

	[Token(Token = "0x6000119")]
	[Address(RVA = "0x1A60F00", Offset = "0x1A60F00", VA = "0x1A60F00")]
	private void OnWhisper(ref TwitchChatMessage msg)
	{
	}

	[Token(Token = "0x600011A")]
	[Address(RVA = "0x1A60FBC", Offset = "0x1A60FBC", VA = "0x1A60FBC")]
	public TwitchChatDebugLogger()
	{
	}
}
[Token(Token = "0x2000040")]
public class TwitchChatPoll : MonoBehaviour
{
	[Token(Token = "0x40000C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string _pollChannelName;

	[Token(Token = "0x40000C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public InputField _optionOneLabel;

	[Token(Token = "0x40000CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public InputField _optionTwoLabel;

	[Token(Token = "0x40000CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public InputField _optionThreeLabel;

	[Token(Token = "0x40000CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Text _optionOneCountLabel;

	[Token(Token = "0x40000CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Text _optionTwoCountLabel;

	[Token(Token = "0x40000CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Text _optionThreeCountLabel;

	[Token(Token = "0x40000CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int _optionOneCount;

	[Token(Token = "0x40000D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private int _optionTwoCount;

	[Token(Token = "0x40000D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private int _optionThreeCount;

	[Token(Token = "0x40000D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private List<string> _voterList;

	[Token(Token = "0x600011B")]
	[Address(RVA = "0x1A60FC4", Offset = "0x1A60FC4", VA = "0x1A60FC4")]
	private void Awake()
	{
	}

	[Token(Token = "0x600011C")]
	[Address(RVA = "0x1A6102C", Offset = "0x1A6102C", VA = "0x1A6102C")]
	private void Start()
	{
	}

	[Token(Token = "0x600011D")]
	[Address(RVA = "0x1A611E8", Offset = "0x1A611E8", VA = "0x1A611E8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600011E")]
	[Address(RVA = "0x1A6131C", Offset = "0x1A6131C", VA = "0x1A6131C")]
	private void OnChatMessage(ref TwitchChatMessage msg)
	{
	}

	[Token(Token = "0x600011F")]
	[Address(RVA = "0x1A614A4", Offset = "0x1A614A4", VA = "0x1A614A4")]
	public void OnResetButtonPressed()
	{
	}

	[Token(Token = "0x6000120")]
	[Address(RVA = "0x1A615A4", Offset = "0x1A615A4", VA = "0x1A615A4")]
	public TwitchChatPoll()
	{
	}
}
[Token(Token = "0x2000041")]
public class TwitchChatRaffle : MonoBehaviour
{
	[Token(Token = "0x40000D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string _raffleChannelName;

	[Token(Token = "0x40000D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text _keywordLabel;

	[Token(Token = "0x40000D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text _buttonLabel;

	[Token(Token = "0x40000D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Text _output;

	[Token(Token = "0x40000D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private List<string> _raffleEntrants;

	[Token(Token = "0x40000D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool _isRaffleStarted;

	[Token(Token = "0x6000121")]
	[Address(RVA = "0x1A615AC", Offset = "0x1A615AC", VA = "0x1A615AC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000122")]
	[Address(RVA = "0x1A61614", Offset = "0x1A61614", VA = "0x1A61614")]
	private void Start()
	{
	}

	[Token(Token = "0x6000123")]
	[Address(RVA = "0x1A617D0", Offset = "0x1A617D0", VA = "0x1A617D0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000124")]
	[Address(RVA = "0x1A61904", Offset = "0x1A61904", VA = "0x1A61904")]
	public void OnButtonPress()
	{
	}

	[Token(Token = "0x6000125")]
	[Address(RVA = "0x1A61A44", Offset = "0x1A61A44", VA = "0x1A61A44")]
	private void Update()
	{
	}

	[Token(Token = "0x6000126")]
	[Address(RVA = "0x1A61AF0", Offset = "0x1A61AF0", VA = "0x1A61AF0")]
	private void OnChatMessage(ref TwitchChatMessage msg)
	{
	}

	[Token(Token = "0x6000127")]
	[Address(RVA = "0x1A61BE4", Offset = "0x1A61BE4", VA = "0x1A61BE4")]
	public TwitchChatRaffle()
	{
	}
}
[Token(Token = "0x2000042")]
public class TwitchChatClient : MonoBehaviour
{
	[Token(Token = "0x40000D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B9808", Offset = "0x8B9808")]
	[SerializeField]
	private string _userName;

	[Token(Token = "0x40000DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B9854", Offset = "0x8B9854")]
	[SerializeField]
	private string _oAuthPassword;

	[Token(Token = "0x40000DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B98A0", Offset = "0x8B98A0")]
	[SerializeField]
	private string[] _autoJoinChannels;

	[Token(Token = "0x40000DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B98EC", Offset = "0x8B98EC")]
	[SerializeField]
	private bool _autoEnableWhispers;

	[Token(Token = "0x40000DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static TwitchChatClient _singleton;

	[Token(Token = "0x40000DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private TwitchChatClientInternal _internalClient;

	[Token(Token = "0x17000028")]
	public string userName
	{
		[Token(Token = "0x6000128")]
		[Address(RVA = "0x1A60320", Offset = "0x1A60320", VA = "0x1A60320")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000129")]
		[Address(RVA = "0x1A60328", Offset = "0x1A60328", VA = "0x1A60328")]
		set
		{
		}
	}

	[Token(Token = "0x17000029")]
	public string oAuthPassword
	{
		[Token(Token = "0x600012A")]
		[Address(RVA = "0x1A60330", Offset = "0x1A60330", VA = "0x1A60330")]
		get
		{
			return null;
		}
		[Token(Token = "0x600012B")]
		[Address(RVA = "0x1A60338", Offset = "0x1A60338", VA = "0x1A60338")]
		set
		{
		}
	}

	[Token(Token = "0x1700002A")]
	public string[] autoJoinChannels
	{
		[Token(Token = "0x600012C")]
		[Address(RVA = "0x1A60340", Offset = "0x1A60340", VA = "0x1A60340")]
		get
		{
			return null;
		}
		[Token(Token = "0x600012D")]
		[Address(RVA = "0x1A60348", Offset = "0x1A60348", VA = "0x1A60348")]
		set
		{
		}
	}

	[Token(Token = "0x1700002B")]
	public bool autoEnableWhispers
	{
		[Token(Token = "0x600012E")]
		[Address(RVA = "0x1A60350", Offset = "0x1A60350", VA = "0x1A60350")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600012F")]
		[Address(RVA = "0x1A60358", Offset = "0x1A60358", VA = "0x1A60358")]
		set
		{
		}
	}

	[Token(Token = "0x1700002C")]
	public bool isConnected
	{
		[Token(Token = "0x6000130")]
		[Address(RVA = "0x1A60364", Offset = "0x1A60364", VA = "0x1A60364")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700002D")]
	public bool isWhispersEnabled
	{
		[Token(Token = "0x6000131")]
		[Address(RVA = "0x1A60378", Offset = "0x1A60378", VA = "0x1A60378")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700002E")]
	public static TwitchChatClient singleton
	{
		[Token(Token = "0x6000132")]
		[Address(RVA = "0x1A6038C", Offset = "0x1A6038C", VA = "0x1A6038C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000133")]
	[Address(RVA = "0x1A603DC", Offset = "0x1A603DC", VA = "0x1A603DC")]
	public void AddChatListener(ChatMessageNotificationDelegate func)
	{
	}

	[Token(Token = "0x6000134")]
	[Address(RVA = "0x1A603F8", Offset = "0x1A603F8", VA = "0x1A603F8")]
	public void RemoveChatListener(ChatMessageNotificationDelegate func)
	{
	}

	[Token(Token = "0x6000135")]
	[Address(RVA = "0x1A60414", Offset = "0x1A60414", VA = "0x1A60414")]
	public void AddServerListener(ServerMessageNotificationDelegate func)
	{
	}

	[Token(Token = "0x6000136")]
	[Address(RVA = "0x1A60430", Offset = "0x1A60430", VA = "0x1A60430")]
	public void RemoveServerListener(ServerMessageNotificationDelegate func)
	{
	}

	[Token(Token = "0x6000137")]
	[Address(RVA = "0x1A6044C", Offset = "0x1A6044C", VA = "0x1A6044C")]
	public void AddChannelJoinedListener(ChannelJoinedNotificationDelegate func)
	{
	}

	[Token(Token = "0x6000138")]
	[Address(RVA = "0x1A60468", Offset = "0x1A60468", VA = "0x1A60468")]
	public void RemoveChannelJoinedListener(ChannelJoinedNotificationDelegate func)
	{
	}

	[Token(Token = "0x6000139")]
	[Address(RVA = "0x1A60484", Offset = "0x1A60484", VA = "0x1A60484")]
	public void JoinChannel(string channelName)
	{
	}

	[Token(Token = "0x600013A")]
	[Address(RVA = "0x1A604AC", Offset = "0x1A604AC", VA = "0x1A604AC")]
	public void LeaveChannel(string channelName)
	{
	}

	[Token(Token = "0x600013B")]
	[Address(RVA = "0x1A604C8", Offset = "0x1A604C8", VA = "0x1A604C8")]
	public void SendMessage(string channelName, string msg)
	{
	}

	[Token(Token = "0x600013C")]
	[Address(RVA = "0x1A604E4", Offset = "0x1A604E4", VA = "0x1A604E4")]
	public void EnableWhispers()
	{
	}

	[Token(Token = "0x600013D")]
	[Address(RVA = "0x1A60598", Offset = "0x1A60598", VA = "0x1A60598")]
	public void AddWhisperListener(WhisperMessageNotificationDelegate func)
	{
	}

	[Token(Token = "0x600013E")]
	[Address(RVA = "0x1A605B4", Offset = "0x1A605B4", VA = "0x1A605B4")]
	public void RemoveWhisperListener(WhisperMessageNotificationDelegate func)
	{
	}

	[Token(Token = "0x600013F")]
	[Address(RVA = "0x1A605D0", Offset = "0x1A605D0", VA = "0x1A605D0")]
	public void AddWhispersEnabledListener(WhispersEnabledNotificationDelegate func)
	{
	}

	[Token(Token = "0x6000140")]
	[Address(RVA = "0x1A605EC", Offset = "0x1A605EC", VA = "0x1A605EC")]
	public void RemoveWhispersEnabledListener(WhispersEnabledNotificationDelegate func)
	{
	}

	[Token(Token = "0x6000141")]
	[Address(RVA = "0x1A60608", Offset = "0x1A60608", VA = "0x1A60608")]
	public void SendWhisper(string userName, string msg)
	{
	}

	[Token(Token = "0x6000142")]
	[Address(RVA = "0x1A60624", Offset = "0x1A60624", VA = "0x1A60624")]
	public void AddConnectionStatusChangedListener(ConnectionStatusChangedNotificationDelegate func)
	{
	}

	[Token(Token = "0x6000143")]
	[Address(RVA = "0x1A60640", Offset = "0x1A60640", VA = "0x1A60640")]
	public void RemoveConnectionStatusChangedListener(ConnectionStatusChangedNotificationDelegate func)
	{
	}

	[Token(Token = "0x6000144")]
	[Address(RVA = "0x1A6065C", Offset = "0x1A6065C", VA = "0x1A6065C")]
	public void Disconnect()
	{
	}

	[Token(Token = "0x6000145")]
	[Address(RVA = "0x1A60678", Offset = "0x1A60678", VA = "0x1A60678")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000146")]
	[Address(RVA = "0x1A6079C", Offset = "0x1A6079C", VA = "0x1A6079C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000147")]
	[Address(RVA = "0x1A607B0", Offset = "0x1A607B0", VA = "0x1A607B0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000148")]
	[Address(RVA = "0x1A60818", Offset = "0x1A60818", VA = "0x1A60818")]
	public TwitchChatClient()
	{
	}
}
[Token(Token = "0x2000043")]
public class ResetPosition : MonoBehaviour
{
	[Token(Token = "0x40000DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float distanceToReset;

	[Token(Token = "0x40000E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private UnityEngine.Vector3 startPosition;

	[Token(Token = "0x6000149")]
	[Address(RVA = "0xC1F3A0", Offset = "0xC1F3A0", VA = "0xC1F3A0")]
	private void Start()
	{
	}

	[Token(Token = "0x600014A")]
	[Address(RVA = "0xC1F3DC", Offset = "0xC1F3DC", VA = "0xC1F3DC")]
	private void Update()
	{
	}

	[Token(Token = "0x600014B")]
	[Address(RVA = "0xC1F4E4", Offset = "0xC1F4E4", VA = "0xC1F4E4")]
	public ResetPosition()
	{
	}
}
[Token(Token = "0x2000044")]
[ExecuteInEditMode]
public class TurnOnDepthBuffer : MonoBehaviour
{
	[Token(Token = "0x600014C")]
	[Address(RVA = "0x1A5F434", Offset = "0x1A5F434", VA = "0x1A5F434")]
	private void Start()
	{
	}

	[Token(Token = "0x600014D")]
	[Address(RVA = "0x1A5F498", Offset = "0x1A5F498", VA = "0x1A5F498")]
	public TurnOnDepthBuffer()
	{
	}
}
[Token(Token = "0x2000045")]
public class CameraScroll : MonoBehaviour
{
	[Token(Token = "0x40000E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Slider speedSlider;

	[Token(Token = "0x40000E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float moveSpeed;

	[Token(Token = "0x600014E")]
	[Address(RVA = "0xB0516C", Offset = "0xB0516C", VA = "0xB0516C")]
	private void Start()
	{
	}

	[Token(Token = "0x600014F")]
	[Address(RVA = "0xB05210", Offset = "0xB05210", VA = "0xB05210")]
	private void Update()
	{
	}

	[Token(Token = "0x6000150")]
	[Address(RVA = "0xB05388", Offset = "0xB05388", VA = "0xB05388")]
	private void ChangeSpeed()
	{
	}

	[Token(Token = "0x6000151")]
	[Address(RVA = "0xB053C4", Offset = "0xB053C4", VA = "0xB053C4")]
	public CameraScroll()
	{
	}

	[Token(Token = "0x6000152")]
	[Address(RVA = "0xB053D4", Offset = "0xB053D4", VA = "0xB053D4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C2178", Offset = "0x8C2178")]
	private void <Start>b__2_0(float <p0>)
	{
	}
}
[Token(Token = "0x2000046")]
public class SnapConnection : MonoBehaviour
{
	[Token(Token = "0x40000E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject doorObject;

	[Token(Token = "0x40000E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject wallObject;

	[Token(Token = "0x40000E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string category;

	[Token(Token = "0x6000153")]
	[Address(RVA = "0xB1FEE8", Offset = "0xB1FEE8", VA = "0xB1FEE8")]
	public void UpdateDoorState(bool isDoor)
	{
	}

	[Token(Token = "0x6000154")]
	[Address(RVA = "0xB1FFD8", Offset = "0xB1FFD8", VA = "0xB1FFD8")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000155")]
	[Address(RVA = "0xB20178", Offset = "0xB20178", VA = "0xB20178")]
	public SnapConnection()
	{
	}
}
[Token(Token = "0x2000047")]
public class SnapPaintTool : DungeonPaintMode
{
	[Token(Token = "0x40000E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Material cursorMaterial;

	[Token(Token = "0x40000E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Material cursorDoorMaterial;

	[Token(Token = "0x6000156")]
	[Address(RVA = "0xB20670", Offset = "0xB20670", VA = "0xB20670")]
	public SnapPaintTool()
	{
	}
}
[Token(Token = "0x2000048")]
public class GridFlowItemMetadataResolver : DungeonEventListener
{
	[Token(Token = "0x6000157")]
	private T[] GetDungeonOwnedComponents<T>(Dungeon dungeon) where T : Component
	{
		return null;
	}

	[Token(Token = "0x6000158")]
	private T FindOrAddComponent<T>(GameObject gameObject) where T : Component
	{
		return null;
	}

	[Token(Token = "0x6000159")]
	[Address(RVA = "0xC53948", Offset = "0xC53948", VA = "0xC53948", Slot = "7")]
	public override void OnPostDungeonBuild(Dungeon dungeon, DungeonModel model)
	{
	}

	[Token(Token = "0x600015A")]
	[Address(RVA = "0xC53E64", Offset = "0xC53E64", VA = "0xC53E64")]
	public GridFlowItemMetadataResolver()
	{
	}
}
[Token(Token = "0x2000049")]
public class DungeonItemGroup : DungeonEventListener
{
	[Token(Token = "0x600015B")]
	[Address(RVA = "0xBF0C90", Offset = "0xBF0C90", VA = "0xBF0C90", Slot = "7")]
	public override void OnPostDungeonBuild(Dungeon dungeon, DungeonModel model)
	{
	}

	[Token(Token = "0x600015C")]
	[Address(RVA = "0xBF1CB0", Offset = "0xBF1CB0", VA = "0xBF1CB0", Slot = "9")]
	public override void OnDungeonDestroyed(Dungeon dungeon)
	{
	}

	[Token(Token = "0x600015D")]
	[Address(RVA = "0xBF11DC", Offset = "0xBF11DC", VA = "0xBF11DC")]
	private DungeonItemGroupInfo GroupItems(GameObject[] items, string groupName, Dungeon dungeon, int groupId)
	{
		return null;
	}

	[Token(Token = "0x600015E")]
	[Address(RVA = "0xBF1508", Offset = "0xBF1508", VA = "0xBF1508")]
	private void DestroyOldGroupObjects(Dungeon dungeon)
	{
	}

	[Token(Token = "0x600015F")]
	[Address(RVA = "0xBF1CB4", Offset = "0xBF1CB4", VA = "0xBF1CB4")]
	private void EditorDestroyObject(UnityEngine.Object obj)
	{
	}

	[Token(Token = "0x6000160")]
	[Address(RVA = "0xBF1638", Offset = "0xBF1638", VA = "0xBF1638")]
	private void PostInitializeForGridBuilder(Dungeon dungeon, GridDungeonModel gridModel)
	{
	}

	[Token(Token = "0x6000161")]
	[Address(RVA = "0xBF1D54", Offset = "0xBF1D54", VA = "0xBF1D54")]
	public DungeonItemGroup()
	{
	}
}
[Token(Token = "0x200004A")]
public class MeshMerger : DungeonEventListener
{
	[Token(Token = "0x200062D")]
	private class MergeMeshItem
	{
		[Token(Token = "0x400205A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Mesh mesh;

		[Token(Token = "0x400205B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Matrix4x4 transform;

		[Token(Token = "0x6002710")]
		[Address(RVA = "0xB85108", Offset = "0xB85108", VA = "0xB85108")]
		public MergeMeshItem()
		{
		}
	}

	[Token(Token = "0x40000E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool mergeMeshes;

	[Token(Token = "0x40000E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float mergePatchSize;

	[Token(Token = "0x40000EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform mergedMeshParent;

	[Token(Token = "0x6000162")]
	[Address(RVA = "0xB844DC", Offset = "0xB844DC", VA = "0xB844DC")]
	private int GetMaterialHash(Material[] materials)
	{
		return default(int);
	}

	[Token(Token = "0x6000163")]
	[Address(RVA = "0xB8460C", Offset = "0xB8460C", VA = "0xB8460C", Slot = "7")]
	public override void OnPostDungeonBuild(Dungeon dungeon, DungeonModel model)
	{
	}

	[Token(Token = "0x6000164")]
	[Address(RVA = "0xB853A0", Offset = "0xB853A0", VA = "0xB853A0")]
	private List<MergeMeshItem[]> SplitPerVertexLimit(List<MergeMeshItem> patchItems, int vertexLimit)
	{
		return null;
	}

	[Token(Token = "0x6000165")]
	[Address(RVA = "0xB85110", Offset = "0xB85110", VA = "0xB85110")]
	private Dictionary<IntVector2, List<MergeMeshItem>> SpatialPartitionByPatchSize(List<MergeMeshItem> items)
	{
		return null;
	}

	[Token(Token = "0x6000166")]
	[Address(RVA = "0xB85670", Offset = "0xB85670", VA = "0xB85670")]
	private static Mesh CreateMergedMesh(MergeMeshItem[] items)
	{
		return null;
	}

	[Token(Token = "0x6000167")]
	[Address(RVA = "0xB85954", Offset = "0xB85954", VA = "0xB85954")]
	public MeshMerger()
	{
	}
}
[Token(Token = "0x200004B")]
public class DungeonUtils
{
	[Token(Token = "0x6000168")]
	[Address(RVA = "0xBF1088", Offset = "0xBF1088", VA = "0xBF1088")]
	public static List<GameObject> GetDungeonObjects(Dungeon dungeon)
	{
		return null;
	}

	[Token(Token = "0x6000169")]
	[Address(RVA = "0xBF21F4", Offset = "0xBF21F4", VA = "0xBF21F4")]
	public static void DestroyObject(GameObject go)
	{
	}

	[Token(Token = "0x600016A")]
	[Address(RVA = "0xBF2294", Offset = "0xBF2294", VA = "0xBF2294")]
	public static Bounds GetDungeonBounds(Dungeon dungeon)
	{
		return default(Bounds);
	}

	[Token(Token = "0x600016B")]
	[Address(RVA = "0xBF24B0", Offset = "0xBF24B0", VA = "0xBF24B0")]
	public DungeonUtils()
	{
	}
}
[Token(Token = "0x200004C")]
public static class RandomExtensions
{
	[Token(Token = "0x600016C")]
	[Address(RVA = "0xC1D004", Offset = "0xC1D004", VA = "0xC1D004")]
	public static float NextFloat(this System.Random random)
	{
		return default(float);
	}

	[Token(Token = "0x600016D")]
	[Address(RVA = "0xC1D02C", Offset = "0xC1D02C", VA = "0xC1D02C")]
	public static UnityEngine.Vector3 OnUnitSphere(this System.Random random)
	{
		return default(UnityEngine.Vector3);
	}

	[Token(Token = "0x600016E")]
	[Address(RVA = "0xC1D45C", Offset = "0xC1D45C", VA = "0xC1D45C")]
	public static float Range(this System.Random random, float a, float b)
	{
		return default(float);
	}

	[Token(Token = "0x600016F")]
	[Address(RVA = "0xC1D4A0", Offset = "0xC1D4A0", VA = "0xC1D4A0")]
	public static int Range(this System.Random random, int a, int b)
	{
		return default(int);
	}

	[Token(Token = "0x6000170")]
	[Address(RVA = "0xC1D54C", Offset = "0xC1D54C", VA = "0xC1D54C")]
	public static float value(this System.Random random)
	{
		return default(float);
	}
}
[Token(Token = "0x200004D")]
public class PropMovementScript : MonoBehaviour
{
	[Token(Token = "0x40000EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float TrahsHold;

	[Token(Token = "0x40000EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool isMoving;

	[Token(Token = "0x40000ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UnityEngine.Vector3 targetPosition;

	[Token(Token = "0x40000EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float speed;

	[Token(Token = "0x40000EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool isRotating;

	[Token(Token = "0x40000F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public UnityEngine.Vector3 targetRotation;

	[Token(Token = "0x40000F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float speedRotation;

	[Token(Token = "0x40000F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private UnityEngine.Vector3 startPosition;

	[Token(Token = "0x40000F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private UnityEngine.Vector3 startRotation;

	[Token(Token = "0x6000171")]
	[Address(RVA = "0xB74FB4", Offset = "0xB74FB4", VA = "0xB74FB4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000172")]
	[Address(RVA = "0xB75048", Offset = "0xB75048", VA = "0xB75048")]
	private void Update()
	{
	}

	[Token(Token = "0x6000173")]
	[Address(RVA = "0xB75398", Offset = "0xB75398", VA = "0xB75398")]
	public PropMovementScript()
	{
	}
}
[Token(Token = "0x200004E")]
public class RotatingScript : MonoBehaviour
{
	[Token(Token = "0x40000F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float xRotation;

	[Token(Token = "0x40000F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float yRotation;

	[Token(Token = "0x40000F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float zRotation;

	[Token(Token = "0x40000F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float SpeedRotation;

	[Token(Token = "0x40000F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private UnityEngine.Vector3 _currentRotation;

	[Token(Token = "0x6000174")]
	[Address(RVA = "0xC1FEEC", Offset = "0xC1FEEC", VA = "0xC1FEEC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000175")]
	[Address(RVA = "0xC1FF54", Offset = "0xC1FF54", VA = "0xC1FF54")]
	private void Update()
	{
	}

	[Token(Token = "0x6000176")]
	[Address(RVA = "0xC1FFC0", Offset = "0xC1FFC0", VA = "0xC1FFC0")]
	public RotatingScript()
	{
	}
}
[Token(Token = "0x200004F")]
[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x8B5BEC", Offset = "0x8B5BEC")]
public class FastList<T>
{
	[Token(Token = "0x200062E")]
	public delegate int CompareFunc(T left, T right);

	[Token(Token = "0x200062F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B799C", Offset = "0x8B799C")]
	private sealed class <GetEnumerator>d__25 : IEnumerator<T>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400205C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <>1__state;

		[Token(Token = "0x400205D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T <>2__current;

		[Token(Token = "0x400205E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public FastList<T> <>4__this;

		[Token(Token = "0x400205F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <i>5__2;

		[Token(Token = "0x1700044E")]
		private T System.Collections.Generic.IEnumerator<T>.Current
		{
			[Token(Token = "0x6002718")]
			[DebuggerHidden]
			get
			{
				return (T)null;
			}
		}

		[Token(Token = "0x1700044F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600271A")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002715")]
		[DebuggerHidden]
		public <GetEnumerator>d__25(int <>1__state)
		{
		}

		[Token(Token = "0x6002716")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002717")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002719")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40000F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public T[] array;

	[Token(Token = "0x40000FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public int size;

	[Token(Token = "0x1700002F")]
	public int Count
	{
		[Token(Token = "0x6000179")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600017A")]
		set
		{
		}
	}

	[Token(Token = "0x17000030")]
	public T Item
	{
		[Token(Token = "0x600017B")]
		get
		{
			return (T)null;
		}
		[Token(Token = "0x600017C")]
		set
		{
		}
	}

	[Token(Token = "0x6000177")]
	public FastList()
	{
	}

	[Token(Token = "0x6000178")]
	public FastList(int size)
	{
	}

	[Token(Token = "0x600017D")]
	public void Add(T item)
	{
	}

	[Token(Token = "0x600017E")]
	public void AddUnique(T item)
	{
	}

	[Token(Token = "0x600017F")]
	public void AddRange(IEnumerable<T> items)
	{
	}

	[Token(Token = "0x6000180")]
	public void Insert(int index, T item)
	{
	}

	[Token(Token = "0x6000181")]
	public bool Remove(T item)
	{
		return default(bool);
	}

	[Token(Token = "0x6000182")]
	public void RemoveAt(int index)
	{
	}

	[Token(Token = "0x6000183")]
	public bool RemoveFast(T item)
	{
		return default(bool);
	}

	[Token(Token = "0x6000184")]
	public void RemoveAtFast(int index)
	{
	}

	[Token(Token = "0x6000185")]
	public bool Contains(T item)
	{
		return default(bool);
	}

	[Token(Token = "0x6000186")]
	public int IndexOf(T item)
	{
		return default(int);
	}

	[Token(Token = "0x6000187")]
	public T Pop()
	{
		return (T)null;
	}

	[Token(Token = "0x6000188")]
	public T[] ToArray()
	{
		return null;
	}

	[Token(Token = "0x6000189")]
	public void Sort(CompareFunc comparer)
	{
	}

	[Token(Token = "0x600018A")]
	public void InsertionSort(CompareFunc comparer)
	{
	}

	[Token(Token = "0x600018B")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C21D8", Offset = "0x8C21D8")]
	public IEnumerator<T> GetEnumerator()
	{
		return null;
	}

	[Token(Token = "0x600018C")]
	public T Find(Predicate<T> match)
	{
		return (T)null;
	}

	[Token(Token = "0x600018D")]
	private void Allocate()
	{
	}

	[Token(Token = "0x600018E")]
	private void Trim()
	{
	}

	[Token(Token = "0x600018F")]
	public void Clear()
	{
	}

	[Token(Token = "0x6000190")]
	public void Release()
	{
	}
}
[Token(Token = "0x2000050")]
public class InspectorNoteAttribute : PropertyAttribute
{
	[Token(Token = "0x40000FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public readonly string header;

	[Token(Token = "0x40000FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public readonly string message;

	[Token(Token = "0x6000191")]
	[Address(RVA = "0xADB1BC", Offset = "0xADB1BC", VA = "0xADB1BC")]
	public InspectorNoteAttribute(string header, string message = "")
	{
	}
}
[Token(Token = "0x2000051")]
public class InspectorCommentAttribute : PropertyAttribute
{
	[Token(Token = "0x40000FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public readonly string message;

	[Token(Token = "0x6000192")]
	[Address(RVA = "0xADB190", Offset = "0xADB190", VA = "0xADB190")]
	public InspectorCommentAttribute(string message = "")
	{
	}
}
[Token(Token = "0x2000052")]
public class OvrAvatarTestDriver : OvrAvatarDriver
{
	[Token(Token = "0x40000FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private UnityEngine.Vector3 headPos;

	[Token(Token = "0x40000FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private Quaternion headRot;

	[Token(Token = "0x4000100")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private float voiceAmplitude;

	[Token(Token = "0x6000193")]
	[Address(RVA = "0xC76C38", Offset = "0xC76C38", VA = "0xC76C38")]
	private ControllerPose GetMalibuControllerPose(OVRInput.Controller controller)
	{
		return default(ControllerPose);
	}

	[Token(Token = "0x6000194")]
	[Address(RVA = "0xC76DA4", Offset = "0xC76DA4", VA = "0xC76DA4")]
	private ControllerPose GetControllerPose(OVRInput.Controller controller)
	{
		return default(ControllerPose);
	}

	[Token(Token = "0x6000195")]
	[Address(RVA = "0xC77148", Offset = "0xC77148", VA = "0xC77148")]
	private void CalculateCurrentPose()
	{
	}

	[Token(Token = "0x6000196")]
	[Address(RVA = "0xC772F0", Offset = "0xC772F0", VA = "0xC772F0", Slot = "4")]
	public override void UpdateTransforms(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x6000197")]
	[Address(RVA = "0xC7731C", Offset = "0xC7731C", VA = "0xC7731C")]
	public OvrAvatarTestDriver()
	{
	}
}
[Token(Token = "0x2000053")]
public class PoseEditHelper : MonoBehaviour
{
	[Token(Token = "0x4000101")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform poseRoot;

	[Token(Token = "0x6000198")]
	[Address(RVA = "0xB74CD4", Offset = "0xB74CD4", VA = "0xB74CD4")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000199")]
	[Address(RVA = "0xB74D60", Offset = "0xB74D60", VA = "0xB74D60")]
	private void DrawJoints(Transform joint)
	{
	}

	[Token(Token = "0x600019A")]
	[Address(RVA = "0xB74ECC", Offset = "0xB74ECC", VA = "0xB74ECC")]
	public PoseEditHelper()
	{
	}
}
[Token(Token = "0x2000054")]
public class GazeTargetSpawner : MonoBehaviour
{
	[Token(Token = "0x4000102")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject GazeTargetPrefab;

	[Token(Token = "0x4000103")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int NumberOfDummyTargets;

	[Token(Token = "0x4000104")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int RadiusMultiplier;

	[Token(Token = "0x4000105")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private bool isVisible;

	[Token(Token = "0x17000031")]
	public bool IsVisible
	{
		[Token(Token = "0x600019B")]
		[Address(RVA = "0xC50930", Offset = "0xC50930", VA = "0xC50930")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600019C")]
		[Address(RVA = "0xC50938", Offset = "0xC50938", VA = "0xC50938")]
		set
		{
		}
	}

	[Token(Token = "0x600019D")]
	[Address(RVA = "0xC50A60", Offset = "0xC50A60", VA = "0xC50A60")]
	private void Start()
	{
	}

	[Token(Token = "0x600019E")]
	[Address(RVA = "0xC50C7C", Offset = "0xC50C7C", VA = "0xC50C7C")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x600019F")]
	[Address(RVA = "0xC50C84", Offset = "0xC50C84", VA = "0xC50C84")]
	public GazeTargetSpawner()
	{
	}
}
[Token(Token = "0x2000055")]
public class RemoteLoopbackManager : MonoBehaviour
{
	[Token(Token = "0x2000630")]
	private class PacketLatencyPair
	{
		[Token(Token = "0x4002060")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public byte[] PacketData;

		[Token(Token = "0x4002061")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float FakeLatency;

		[Token(Token = "0x600271B")]
		[Address(RVA = "0xC1E670", Offset = "0xC1E670", VA = "0xC1E670")]
		public PacketLatencyPair()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000631")]
	public class SimulatedLatencySettings
	{
		[Token(Token = "0x4002062")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8C1F50", Offset = "0x8C1F50")]
		public float FakeLatencyMax;

		[Token(Token = "0x4002063")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8C1F68", Offset = "0x8C1F68")]
		public float FakeLatencyMin;

		[Token(Token = "0x4002064")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8C1F80", Offset = "0x8C1F80")]
		public float LatencyWeight;

		[Token(Token = "0x4002065")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8C1F98", Offset = "0x8C1F98")]
		public int MaxSamples;

		[Token(Token = "0x4002066")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal float AverageWindow;

		[Token(Token = "0x4002067")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		internal float LatencySum;

		[Token(Token = "0x4002068")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal LinkedList<float> LatencyValues;

		[Token(Token = "0x600271C")]
		[Address(RVA = "0xC1E678", Offset = "0xC1E678", VA = "0xC1E678")]
		public float NextValue()
		{
			return default(float);
		}

		[Token(Token = "0x600271D")]
		[Address(RVA = "0xC1E810", Offset = "0xC1E810", VA = "0xC1E810")]
		public SimulatedLatencySettings()
		{
		}
	}

	[Token(Token = "0x4000106")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OvrAvatar LocalAvatar;

	[Token(Token = "0x4000107")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OvrAvatar LoopbackAvatar;

	[Token(Token = "0x4000108")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SimulatedLatencySettings LatencySettings;

	[Token(Token = "0x4000109")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int PacketSequence;

	[Token(Token = "0x400010A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private LinkedList<PacketLatencyPair> packetQueue;

	[Token(Token = "0x60001A0")]
	[Address(RVA = "0xC1DD10", Offset = "0xC1DD10", VA = "0xC1DD10")]
	private void Start()
	{
	}

	[Token(Token = "0x60001A1")]
	[Address(RVA = "0xC1DE34", Offset = "0xC1DE34", VA = "0xC1DE34")]
	private void OnLocalAvatarPacketRecorded(object sender, OvrAvatar.PacketEventArgs args)
	{
	}

	[Token(Token = "0x60001A2")]
	[Address(RVA = "0xC1E198", Offset = "0xC1E198", VA = "0xC1E198")]
	private void Update()
	{
	}

	[Token(Token = "0x60001A3")]
	[Address(RVA = "0xC1E0FC", Offset = "0xC1E0FC", VA = "0xC1E0FC")]
	private void SendPacketData(byte[] data)
	{
	}

	[Token(Token = "0x60001A4")]
	[Address(RVA = "0xC1E3F4", Offset = "0xC1E3F4", VA = "0xC1E3F4")]
	private void ReceivePacketData(byte[] data)
	{
	}

	[Token(Token = "0x60001A5")]
	[Address(RVA = "0xC1E784", Offset = "0xC1E784", VA = "0xC1E784")]
	public RemoteLoopbackManager()
	{
	}
}
[Token(Token = "0x2000056")]
public class GazeTarget : MonoBehaviour
{
	[Token(Token = "0x400010B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ovrAvatarGazeTargetType Type;

	[Token(Token = "0x400010C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ovrAvatarGazeTargets RuntimeTargetList;

	[Token(Token = "0x60001A6")]
	[Address(RVA = "0xC505BC", Offset = "0xC505BC", VA = "0xC505BC")]
	static GazeTarget()
	{
	}

	[Token(Token = "0x60001A7")]
	[Address(RVA = "0xC5062C", Offset = "0xC5062C", VA = "0xC5062C")]
	private void Start()
	{
	}

	[Token(Token = "0x60001A8")]
	[Address(RVA = "0xC507A8", Offset = "0xC507A8", VA = "0xC507A8")]
	private void Update()
	{
	}

	[Token(Token = "0x60001A9")]
	[Address(RVA = "0xC5080C", Offset = "0xC5080C", VA = "0xC5080C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60001AA")]
	[Address(RVA = "0xC50668", Offset = "0xC50668", VA = "0xC50668")]
	private void UpdateGazeTarget()
	{
	}

	[Token(Token = "0x60001AB")]
	[Address(RVA = "0xC508C8", Offset = "0xC508C8", VA = "0xC508C8")]
	private ovrAvatarGazeTarget CreateOvrGazeTarget(uint targetId, UnityEngine.Vector3 targetPosition, ovrAvatarGazeTargetType targetType)
	{
		return default(ovrAvatarGazeTarget);
	}

	[Token(Token = "0x60001AC")]
	[Address(RVA = "0xC50928", Offset = "0xC50928", VA = "0xC50928")]
	public GazeTarget()
	{
	}
}
[Serializable]
[Token(Token = "0x2000057")]
public class AvatarLayer
{
	[Token(Token = "0x400010D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int layerIndex;

	[Token(Token = "0x60001AD")]
	[Address(RVA = "0xBBF808", Offset = "0xBBF808", VA = "0xBBF808")]
	public AvatarLayer()
	{
	}
}
[Serializable]
[Token(Token = "0x2000058")]
public class PacketRecordSettings
{
	[Token(Token = "0x400010E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	internal bool RecordingFrames;

	[Token(Token = "0x400010F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float UpdateRate;

	[Token(Token = "0x4000110")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	internal float AccumulatedTime;

	[Token(Token = "0x60001AE")]
	[Address(RVA = "0xC78530", Offset = "0xC78530", VA = "0xC78530")]
	public PacketRecordSettings()
	{
	}
}
[Token(Token = "0x2000059")]
public class OvrAvatar : MonoBehaviour
{
	[Token(Token = "0x2000632")]
	public class PacketEventArgs : EventArgs
	{
		[Token(Token = "0x4002069")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly OvrAvatarPacket Packet;

		[Token(Token = "0x600271E")]
		[Address(RVA = "0xC68DB0", Offset = "0xC68DB0", VA = "0xC68DB0")]
		public PacketEventArgs(OvrAvatarPacket packet)
		{
		}
	}

	[Token(Token = "0x2000633")]
	public enum HandType
	{
		[Token(Token = "0x400206B")]
		Right,
		[Token(Token = "0x400206C")]
		Left,
		[Token(Token = "0x400206D")]
		Max
	}

	[Token(Token = "0x2000634")]
	public enum HandJoint
	{
		[Token(Token = "0x400206F")]
		HandBase,
		[Token(Token = "0x4002070")]
		IndexBase,
		[Token(Token = "0x4002071")]
		IndexTip,
		[Token(Token = "0x4002072")]
		ThumbBase,
		[Token(Token = "0x4002073")]
		ThumbTip,
		[Token(Token = "0x4002074")]
		Max
	}

	[Token(Token = "0x2000635")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B79AC", Offset = "0x8B79AC")]
	private sealed class <WaitForMouthAudioSource>d__136 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002075")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002076")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002077")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OvrAvatar <>4__this;

		[Token(Token = "0x17000450")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002722")]
			[Address(RVA = "0xC68D40", Offset = "0xC68D40", VA = "0xC68D40", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000451")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002724")]
			[Address(RVA = "0xC68DA8", Offset = "0xC68DA8", VA = "0xC68DA8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600271F")]
		[Address(RVA = "0xC68B84", Offset = "0xC68B84", VA = "0xC68B84")]
		[DebuggerHidden]
		public <WaitForMouthAudioSource>d__136(int <>1__state)
		{
		}

		[Token(Token = "0x6002720")]
		[Address(RVA = "0xC68BB0", Offset = "0xC68BB0", VA = "0xC68BB0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002721")]
		[Address(RVA = "0xC68BB4", Offset = "0xC68BB4", VA = "0xC68BB4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002723")]
		[Address(RVA = "0xC68D48", Offset = "0xC68D48", VA = "0xC68D48", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000111")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B9948", Offset = "0x8B9948")]
	public IntPtr sdkAvatar;

	[Token(Token = "0x4000112")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string oculusUserID;

	[Token(Token = "0x4000113")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OvrAvatarDriver Driver;

	[Token(Token = "0x4000114")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B9980", Offset = "0x8B9980")]
	public bool EnableBody;

	[Token(Token = "0x4000115")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	public bool EnableHands;

	[Token(Token = "0x4000116")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
	public bool EnableBase;

	[Token(Token = "0x4000117")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x33")]
	public bool EnableExpressive;

	[Token(Token = "0x4000118")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B99B8", Offset = "0x8B99B8")]
	public bool RecordPackets;

	[Token(Token = "0x4000119")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
	public bool UseSDKPackets;

	[Token(Token = "0x400011A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public PacketRecordSettings PacketSettings;

	[Token(Token = "0x400011B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B99F0", Offset = "0x8B99F0")]
	public bool StartWithControllers;

	[Token(Token = "0x400011C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AvatarLayer FirstPersonLayer;

	[Token(Token = "0x400011D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AvatarLayer ThirdPersonLayer;

	[Token(Token = "0x400011E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool ShowFirstPerson;

	[Token(Token = "0x400011F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	public bool ShowThirdPerson;

	[Token(Token = "0x4000120")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	internal ovrAvatarCapabilities Capabilities;

	[Token(Token = "0x4000121")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B9A28", Offset = "0x8B9A28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B9A28", Offset = "0x8B9A28")]
	[SerializeField]
	internal ovrAvatarAssetLevelOfDetail LevelOfDetail;

	[Token(Token = "0x4000122")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B9A98", Offset = "0x8B9A98")]
	private bool CombineMeshes;

	[Token(Token = "0x4000123")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B9AD0", Offset = "0x8B9AD0")]
	public bool UseTransparentRenderQueue;

	[Token(Token = "0x4000124")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B9B08", Offset = "0x8B9B08")]
	public Shader Monochrome_SurfaceShader;

	[Token(Token = "0x4000125")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Shader Monochrome_SurfaceShader_SelfOccluding;

	[Token(Token = "0x4000126")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Shader Monochrome_SurfaceShader_PBS;

	[Token(Token = "0x4000127")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Shader Skinshaded_SurfaceShader_SingleComponent;

	[Token(Token = "0x4000128")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Shader Skinshaded_VertFrag_SingleComponent;

	[Token(Token = "0x4000129")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Shader Skinshaded_VertFrag_CombinedMesh;

	[Token(Token = "0x400012A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Shader Skinshaded_Expressive_SurfaceShader_SingleComponent;

	[Token(Token = "0x400012B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Shader Skinshaded_Expressive_VertFrag_SingleComponent;

	[Token(Token = "0x400012C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Shader Skinshaded_Expressive_VertFrag_CombinedMesh;

	[Token(Token = "0x400012D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Shader Loader_VertFrag_CombinedMesh;

	[Token(Token = "0x400012E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Shader EyeLens;

	[Token(Token = "0x400012F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Shader ControllerShader;

	[Token(Token = "0x4000130")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B9B40", Offset = "0x8B9B40")]
	public bool CanOwnMicrophone;

	[Token(Token = "0x4000131")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC9")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B9B78", Offset = "0x8B9B78")]
	public bool EnableLaughter;

	[Token(Token = "0x4000132")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public GameObject MouthAnchor;

	[Token(Token = "0x4000133")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public Transform LeftHandCustomPose;

	[Token(Token = "0x4000134")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public Transform RightHandCustomPose;

	[Token(Token = "0x4000135")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private HashSet<ulong> assetLoadingIds;

	[Token(Token = "0x4000136")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private bool assetsFinishedLoading;

	[Token(Token = "0x4000137")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private OvrAvatarMaterialManager materialManager;

	[Token(Token = "0x4000138")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private bool waitingForCombinedMesh;

	[Token(Token = "0x4000139")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool doneExpressiveGlobalInit;

	[Token(Token = "0x400013A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	private Vector4 clothingAlphaOffset;

	[Token(Token = "0x400013B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private ulong clothingAlphaTexture;

	[Token(Token = "0x400013C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private OVRLipSyncContext lipsyncContext;

	[Token(Token = "0x400013D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private OVRLipSync.Frame currentFrame;

	[Token(Token = "0x400013E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private float[] visemes;

	[Token(Token = "0x400013F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private AudioSource audioSource;

	[Token(Token = "0x4000140")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private ONSPAudioSource spatializedSource;

	[Token(Token = "0x4000141")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private List<float[]> voiceUpdates;

	[Token(Token = "0x4000142")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static ovrAvatarVisemes RuntimeVisemes;

	[Token(Token = "0x4000143")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private Transform cachedLeftHandCustomPose;

	[Token(Token = "0x4000144")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private Transform[] cachedCustomLeftHandJoints;

	[Token(Token = "0x4000145")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private ovrAvatarTransform[] cachedLeftHandTransforms;

	[Token(Token = "0x4000146")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private Transform cachedRightHandCustomPose;

	[Token(Token = "0x4000147")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private Transform[] cachedCustomRightHandJoints;

	[Token(Token = "0x4000148")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private ovrAvatarTransform[] cachedRightHandTransforms;

	[Token(Token = "0x4000149")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private bool showLeftController;

	[Token(Token = "0x400014A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x181")]
	private bool showRightController;

	[Token(Token = "0x400014B")]
	private const bool USE_MOBILE_TEXTURE_FORMAT = true;

	[Token(Token = "0x400014C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static readonly UnityEngine.Vector3 MOUTH_HEAD_OFFSET;

	[Token(Token = "0x400014D")]
	private const string MOUTH_HELPER_NAME = "MouthAnchor";

	[Token(Token = "0x400014E")]
	private const int VISEME_COUNT = 16;

	[Token(Token = "0x400014F")]
	private const float ACTION_UNIT_ONSET_SPEED = 30f;

	[Token(Token = "0x4000150")]
	private const float ACTION_UNIT_FALLOFF_SPEED = 20f;

	[Token(Token = "0x4000151")]
	private const float VISEME_LEVEL_MULTIPLIER = 1.5f;

	[Token(Token = "0x4000152")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	internal ulong oculusUserIDInternal;

	[Token(Token = "0x4000153")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	internal OvrAvatarBase Base;

	[Token(Token = "0x4000154")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	internal OvrAvatarTouchController ControllerLeft;

	[Token(Token = "0x4000155")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	internal OvrAvatarTouchController ControllerRight;

	[Token(Token = "0x4000156")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	internal OvrAvatarBody Body;

	[Token(Token = "0x4000157")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	internal OvrAvatarHand HandLeft;

	[Token(Token = "0x4000158")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	internal OvrAvatarHand HandRight;

	[Token(Token = "0x4000159")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	internal ovrAvatarLookAndFeelVersion LookAndFeelVersion;

	[Token(Token = "0x400015A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C4")]
	internal ovrAvatarLookAndFeelVersion FallbackLookAndFeelVersion;

	[Token(Token = "0x400015B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	private OvrAvatarPacket CurrentUnityPacket;

	[Token(Token = "0x400015C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	public EventHandler<PacketEventArgs> PacketRecorded;

	[Token(Token = "0x400015D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static string[,] HandJoints;

	[Token(Token = "0x400015E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static UnityEngine.Vector3 MOUTH_POSITION_OFFSET;

	[Token(Token = "0x400015F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static string VOICE_PROPERTY;

	[Token(Token = "0x4000160")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static string MOUTH_POSITION_PROPERTY;

	[Token(Token = "0x4000161")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private static string MOUTH_DIRECTION_PROPERTY;

	[Token(Token = "0x4000162")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private static string MOUTH_SCALE_PROPERTY;

	[Token(Token = "0x4000163")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private static float MOUTH_SCALE_GLOBAL;

	[Token(Token = "0x4000164")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private static float MOUTH_MAX_GLOBAL;

	[Token(Token = "0x4000165")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private static string NECK_JONT;

	[Token(Token = "0x4000166")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	public float VoiceAmplitude;

	[Token(Token = "0x4000167")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1DC")]
	public bool EnableMouthVertexAnimation;

	[Token(Token = "0x4000168")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private static ovrAvatarLights ovrLights;

	[Token(Token = "0x60001AF")]
	[Address(RVA = "0xAFD8B8", Offset = "0xAFD8B8", VA = "0xAFD8B8")]
	static OvrAvatar()
	{
	}

	[Token(Token = "0x60001B0")]
	[Address(RVA = "0xAFDC20", Offset = "0xAFDC20", VA = "0xAFDC20")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60001B1")]
	[Address(RVA = "0xAFDCAC", Offset = "0xAFDCAC", VA = "0xAFDCAC")]
	public void AssetLoadedCallback(OvrAvatarAsset asset)
	{
	}

	[Token(Token = "0x60001B2")]
	[Address(RVA = "0xAFDD18", Offset = "0xAFDD18", VA = "0xAFDD18")]
	public void CombinedMeshLoadedCallback(IntPtr assetPtr)
	{
	}

	[Token(Token = "0x60001B3")]
	[Address(RVA = "0xAFDE40", Offset = "0xAFDE40", VA = "0xAFDE40")]
	private OvrAvatarSkinnedMeshRenderComponent AddSkinnedMeshRenderComponent(GameObject gameObject, ovrAvatarRenderPart_SkinnedMeshRender skinnedMeshRender)
	{
		return null;
	}

	[Token(Token = "0x60001B4")]
	[Address(RVA = "0xAFDF24", Offset = "0xAFDF24", VA = "0xAFDF24")]
	private OvrAvatarSkinnedMeshRenderPBSComponent AddSkinnedMeshRenderPBSComponent(GameObject gameObject, ovrAvatarRenderPart_SkinnedMeshRenderPBS skinnedMeshRenderPBS)
	{
		return null;
	}

	[Token(Token = "0x60001B5")]
	[Address(RVA = "0xAFE004", Offset = "0xAFE004", VA = "0xAFE004")]
	private OvrAvatarSkinnedMeshPBSV2RenderComponent AddSkinnedMeshRenderPBSV2Component(IntPtr renderPart, GameObject go, ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2 skinnedMeshRenderPBSV2, bool isBodyPartZero, bool isControllerModel)
	{
		return null;
	}

	[Token(Token = "0x60001B6")]
	[Address(RVA = "0xAFE1EC", Offset = "0xAFE1EC", VA = "0xAFE1EC")]
	public static IntPtr GetRenderPart(ovrAvatarComponent component, uint renderPartIndex)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x60001B7")]
	[Address(RVA = "0xAFE2B4", Offset = "0xAFE2B4", VA = "0xAFE2B4")]
	private static string GetRenderPartName(ovrAvatarComponent component, uint renderPartIndex)
	{
		return null;
	}

	[Token(Token = "0x60001B8")]
	[Address(RVA = "0xAFE338", Offset = "0xAFE338", VA = "0xAFE338")]
	internal static void ConvertTransform(float[] transform, ref ovrAvatarTransform target)
	{
	}

	[Token(Token = "0x60001B9")]
	[Address(RVA = "0xAFE420", Offset = "0xAFE420", VA = "0xAFE420")]
	internal static void ConvertTransform(ovrAvatarTransform transform, Transform target)
	{
	}

	[Token(Token = "0x60001BA")]
	[Address(RVA = "0xAFE4AC", Offset = "0xAFE4AC", VA = "0xAFE4AC")]
	public static ovrAvatarTransform CreateOvrAvatarTransform(UnityEngine.Vector3 position, Quaternion orientation)
	{
		return default(ovrAvatarTransform);
	}

	[Token(Token = "0x60001BB")]
	[Address(RVA = "0xAFE5C8", Offset = "0xAFE5C8", VA = "0xAFE5C8")]
	private static ovrAvatarGazeTarget CreateOvrGazeTarget(uint targetId, UnityEngine.Vector3 targetPosition, ovrAvatarGazeTargetType targetType)
	{
		return default(ovrAvatarGazeTarget);
	}

	[Token(Token = "0x60001BC")]
	[Address(RVA = "0xAFE628", Offset = "0xAFE628", VA = "0xAFE628")]
	private void BuildRenderComponents()
	{
	}

	[Token(Token = "0x60001BD")]
	private void AddAvatarComponent<T>(ref T root, ovrAvatarComponent nativeComponent) where T : OvrAvatarComponent
	{
	}

	[Token(Token = "0x60001BE")]
	[Address(RVA = "0xAFEAAC", Offset = "0xAFEAAC", VA = "0xAFEAAC")]
	private void UpdateCustomPoses()
	{
	}

	[Token(Token = "0x60001BF")]
	[Address(RVA = "0xAFEE0C", Offset = "0xAFEE0C", VA = "0xAFEE0C")]
	private static bool UpdatePoseRoot(Transform poseRoot, ref Transform cachedPoseRoot, ref Transform[] cachedPoseJoints, ref ovrAvatarTransform[] transforms)
	{
		return default(bool);
	}

	[Token(Token = "0x60001C0")]
	[Address(RVA = "0xAFEF70", Offset = "0xAFEF70", VA = "0xAFEF70")]
	private static bool UpdateTransforms(Transform[] joints, ovrAvatarTransform[] transforms)
	{
		return default(bool);
	}

	[Token(Token = "0x60001C1")]
	[Address(RVA = "0xAFF238", Offset = "0xAFF238", VA = "0xAFF238")]
	private static void OrderJoints(Transform transform, List<Transform> joints)
	{
	}

	[Token(Token = "0x60001C2")]
	[Address(RVA = "0xAFF324", Offset = "0xAFF324", VA = "0xAFF324")]
	private void AvatarSpecificationCallback(IntPtr avatarSpecification)
	{
	}

	[Token(Token = "0x60001C3")]
	[Address(RVA = "0xAFF6D8", Offset = "0xAFF6D8", VA = "0xAFF6D8")]
	private void Start()
	{
	}

	[Token(Token = "0x60001C4")]
	[Address(RVA = "0xAFF9D8", Offset = "0xAFF9D8", VA = "0xAFF9D8")]
	private void Update()
	{
	}

	[Token(Token = "0x60001C5")]
	[Address(RVA = "0xB00394", Offset = "0xB00394", VA = "0xB00394")]
	public static ovrAvatarHandInputState CreateInputState(ovrAvatarTransform transform, OvrAvatarDriver.ControllerPose pose)
	{
		return default(ovrAvatarHandInputState);
	}

	[Token(Token = "0x60001C6")]
	[Address(RVA = "0xB003E8", Offset = "0xB003E8", VA = "0xB003E8")]
	public void ShowControllers(bool show)
	{
	}

	[Token(Token = "0x60001C7")]
	[Address(RVA = "0xAFF5A0", Offset = "0xAFF5A0", VA = "0xAFF5A0")]
	public void ShowLeftController(bool show)
	{
	}

	[Token(Token = "0x60001C8")]
	[Address(RVA = "0xAFF63C", Offset = "0xAFF63C", VA = "0xAFF63C")]
	public void ShowRightController(bool show)
	{
	}

	[Token(Token = "0x60001C9")]
	[Address(RVA = "0xB00418", Offset = "0xB00418", VA = "0xB00418")]
	public void UpdateVoiceVisualization(float[] voiceSamples)
	{
	}

	[Token(Token = "0x60001CA")]
	[Address(RVA = "0xAFFD4C", Offset = "0xAFFD4C", VA = "0xAFFD4C")]
	private void RecordFrame()
	{
	}

	[Token(Token = "0x60001CB")]
	[Address(RVA = "0xB00664", Offset = "0xB00664", VA = "0xB00664")]
	private void RecordUnityFrame()
	{
	}

	[Token(Token = "0x60001CC")]
	[Address(RVA = "0xB00480", Offset = "0xB00480", VA = "0xB00480")]
	private void RecordSDKFrame()
	{
	}

	[Token(Token = "0x60001CD")]
	[Address(RVA = "0xB00900", Offset = "0xB00900", VA = "0xB00900")]
	private void AddRenderParts(OvrAvatarComponent ovrComponent, ovrAvatarComponent component, Transform parent)
	{
	}

	[Token(Token = "0x60001CE")]
	[Address(RVA = "0xB00D04", Offset = "0xB00D04", VA = "0xB00D04")]
	public void RefreshBodyParts()
	{
	}

	[Token(Token = "0x60001CF")]
	[Address(RVA = "0xB00F34", Offset = "0xB00F34", VA = "0xB00F34")]
	public ovrAvatarBodyComponent? GetBodyComponent()
	{
		return null;
	}

	[Token(Token = "0x60001D0")]
	[Address(RVA = "0xB01074", Offset = "0xB01074", VA = "0xB01074")]
	public Transform GetHandTransform(HandType hand, HandJoint joint)
	{
		return null;
	}

	[Token(Token = "0x60001D1")]
	[Address(RVA = "0xB0122C", Offset = "0xB0122C", VA = "0xB0122C")]
	public void GetPointingDirection(HandType hand, ref UnityEngine.Vector3 forward, ref UnityEngine.Vector3 up)
	{
	}

	[Token(Token = "0x60001D2")]
	[Address(RVA = "0xAFFE90", Offset = "0xAFFE90", VA = "0xAFFE90")]
	private void UpdateVoiceBehavior()
	{
	}

	[Token(Token = "0x60001D3")]
	[Address(RVA = "0xB01304", Offset = "0xB01304", VA = "0xB01304")]
	private bool IsValidMic()
	{
		return default(bool);
	}

	[Token(Token = "0x60001D4")]
	[Address(RVA = "0xAFFD5C", Offset = "0xAFFD5C", VA = "0xAFFD5C")]
	private void InitPostLoad()
	{
	}

	[Token(Token = "0x60001D5")]
	[Address(RVA = "0xB013E4", Offset = "0xB013E4", VA = "0xB013E4")]
	private static void ExpressiveGlobalInit()
	{
	}

	[Token(Token = "0x60001D6")]
	[Address(RVA = "0xB01990", Offset = "0xB01990", VA = "0xB01990")]
	private static void InitializeLights()
	{
	}

	[Token(Token = "0x60001D7")]
	[Address(RVA = "0xB01E50", Offset = "0xB01E50", VA = "0xB01E50")]
	private static ovrAvatarLight CreateLightDirectional(uint id, UnityEngine.Vector3 direction, float intensity, ref ovrAvatarLight light)
	{
		return default(ovrAvatarLight);
	}

	[Token(Token = "0x60001D8")]
	[Address(RVA = "0xB01EC8", Offset = "0xB01EC8", VA = "0xB01EC8")]
	private static ovrAvatarLight CreateLightPoint(uint id, UnityEngine.Vector3 position, float range, float intensity, ref ovrAvatarLight light)
	{
		return default(ovrAvatarLight);
	}

	[Token(Token = "0x60001D9")]
	[Address(RVA = "0xB01F44", Offset = "0xB01F44", VA = "0xB01F44")]
	private static ovrAvatarLight CreateLightSpot(uint id, UnityEngine.Vector3 position, UnityEngine.Vector3 direction, float spotAngleDeg, float range, float intensity, ref ovrAvatarLight light)
	{
		return default(ovrAvatarLight);
	}

	[Token(Token = "0x60001DA")]
	[Address(RVA = "0xB00228", Offset = "0xB00228", VA = "0xB00228")]
	private void UpdateExpressive()
	{
	}

	[Token(Token = "0x60001DB")]
	[Address(RVA = "0xB014A0", Offset = "0xB014A0", VA = "0xB014A0")]
	private void ConfigureHelpers()
	{
	}

	[Token(Token = "0x60001DC")]
	[Address(RVA = "0xB023AC", Offset = "0xB023AC", VA = "0xB023AC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C223C", Offset = "0x8C223C")]
	private IEnumerator WaitForMouthAudioSource()
	{
		return null;
	}

	[Token(Token = "0x60001DD")]
	[Address(RVA = "0xB0241C", Offset = "0xB0241C", VA = "0xB0241C")]
	public void DestroyHelperObjects()
	{
	}

	[Token(Token = "0x60001DE")]
	[Address(RVA = "0xB02250", Offset = "0xB02250", VA = "0xB02250")]
	public GameObject CreateHelperObject(Transform parent, UnityEngine.Vector3 localPositionOffset, string helperName, string helperTag = "")
	{
		return null;
	}

	[Token(Token = "0x60001DF")]
	[Address(RVA = "0xB024E4", Offset = "0xB024E4", VA = "0xB024E4")]
	public void UpdateVoiceData(short[] pcmData, int numChannels)
	{
	}

	[Token(Token = "0x60001E0")]
	[Address(RVA = "0xB024E8", Offset = "0xB024E8", VA = "0xB024E8")]
	public void UpdateVoiceData(float[] pcmData, int numChannels)
	{
	}

	[Token(Token = "0x60001E1")]
	[Address(RVA = "0xB02014", Offset = "0xB02014", VA = "0xB02014")]
	private void UpdateFacewave()
	{
	}

	[Token(Token = "0x60001E2")]
	[Address(RVA = "0xB024EC", Offset = "0xB024EC", VA = "0xB024EC")]
	public OvrAvatar()
	{
	}
}
[Token(Token = "0x200005A")]
public class OvrAvatarAsset
{
	[Token(Token = "0x4000169")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong assetID;

	[Token(Token = "0x60001E3")]
	[Address(RVA = "0xC68E2C", Offset = "0xC68E2C", VA = "0xC68E2C")]
	public OvrAvatarAsset()
	{
	}
}
[Token(Token = "0x200005B")]
public class OvrAvatarAssetMesh : OvrAvatarAsset
{
	[Token(Token = "0x400016A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Mesh mesh;

	[Token(Token = "0x400016B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ovrAvatarSkinnedMeshPose skinnedBindPose;

	[Token(Token = "0x400016C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string[] jointNames;

	[Token(Token = "0x60001E4")]
	[Address(RVA = "0xC68EDC", Offset = "0xC68EDC", VA = "0xC68EDC")]
	public OvrAvatarAssetMesh(ulong _assetId, IntPtr asset, ovrAvatarAssetType meshType)
	{
	}

	[Token(Token = "0x60001E5")]
	[Address(RVA = "0xC6A1BC", Offset = "0xC6A1BC", VA = "0xC6A1BC")]
	private void LoadSubmeshes(IntPtr asset, IntPtr indexBufferPtr, ulong indexCount)
	{
	}

	[Token(Token = "0x60001E6")]
	[Address(RVA = "0xC69D60", Offset = "0xC69D60", VA = "0xC69D60")]
	private void LoadBlendShapes(IntPtr asset, long vertexCount)
	{
	}

	[Token(Token = "0x60001E7")]
	[Address(RVA = "0xC69B04", Offset = "0xC69B04", VA = "0xC69B04")]
	private void SetSkinnedBindPose(IntPtr asset, ovrAvatarAssetType meshType)
	{
	}

	[Token(Token = "0x60001E8")]
	[Address(RVA = "0xC69BD4", Offset = "0xC69BD4", VA = "0xC69BD4")]
	private void GetVertexAndIndexData(IntPtr asset, ovrAvatarAssetType meshType, out long vertexCount, out IntPtr vertexBuffer, out uint indexCount, out IntPtr indexBuffer)
	{
	}

	[Token(Token = "0x60001E9")]
	[Address(RVA = "0xC6A420", Offset = "0xC6A420", VA = "0xC6A420")]
	public SkinnedMeshRenderer CreateSkinnedMeshRendererOnObject(GameObject target)
	{
		return null;
	}
}
[Token(Token = "0x200005C")]
public class OvrAvatarAssetTexture : OvrAvatarAsset
{
	[Token(Token = "0x400016D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Texture2D texture;

	[Token(Token = "0x400016E")]
	private const int ASTCHeaderSize = 16;

	[Token(Token = "0x60001EA")]
	[Address(RVA = "0xC6A9A0", Offset = "0xC6A9A0", VA = "0xC6A9A0")]
	public OvrAvatarAssetTexture(ulong _assetId, IntPtr asset)
	{
	}
}
[Token(Token = "0x200005D")]
public class OvrAvatarBase : OvrAvatarComponent
{
	[Token(Token = "0x400016F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private ovrAvatarBaseComponent component;

	[Token(Token = "0x60001EB")]
	[Address(RVA = "0xC6AC08", Offset = "0xC6AC08", VA = "0xC6AC08")]
	private void Update()
	{
	}

	[Token(Token = "0x60001EC")]
	[Address(RVA = "0xC6B008", Offset = "0xC6B008", VA = "0xC6B008")]
	public OvrAvatarBase()
	{
	}
}
[Token(Token = "0x200005E")]
public class OvrAvatarBody : OvrAvatarComponent
{
	[Token(Token = "0x4000170")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ovrAvatarBodyComponent component;

	[Token(Token = "0x60001ED")]
	[Address(RVA = "0xC6B104", Offset = "0xC6B104", VA = "0xC6B104")]
	public ovrAvatarComponent? GetNativeAvatarComponent()
	{
		return null;
	}

	[Token(Token = "0x60001EE")]
	[Address(RVA = "0xC6B260", Offset = "0xC6B260", VA = "0xC6B260")]
	private void Update()
	{
	}

	[Token(Token = "0x60001EF")]
	[Address(RVA = "0xC6B37C", Offset = "0xC6B37C", VA = "0xC6B37C")]
	public OvrAvatarBody()
	{
	}
}
[Token(Token = "0x200005F")]
public class OvrAvatarComponent : MonoBehaviour
{
	[Token(Token = "0x4000171")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly string[] LayerKeywords;

	[Token(Token = "0x4000172")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static readonly string[] LayerSampleModeParameters;

	[Token(Token = "0x4000173")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static readonly string[] LayerBlendModeParameters;

	[Token(Token = "0x4000174")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static readonly string[] LayerMaskTypeParameters;

	[Token(Token = "0x4000175")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static readonly string[] LayerColorParameters;

	[Token(Token = "0x4000176")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static readonly string[] LayerSurfaceParameters;

	[Token(Token = "0x4000177")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static readonly string[] LayerSampleParametersParameters;

	[Token(Token = "0x4000178")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static readonly string[] LayerMaskParametersParameters;

	[Token(Token = "0x4000179")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public static readonly string[] LayerMaskAxisParameters;

	[Token(Token = "0x400017A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Dictionary<Material, ovrAvatarMaterialState> materialStates;

	[Token(Token = "0x400017B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<OvrAvatarRenderComponent> RenderParts;

	[Token(Token = "0x400017C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected OvrAvatar owner;

	[Token(Token = "0x400017D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected ovrAvatarComponent nativeAvatarComponent;

	[Token(Token = "0x60001F0")]
	[Address(RVA = "0xC6B3E0", Offset = "0xC6B3E0", VA = "0xC6B3E0")]
	public void SetOvrAvatarOwner(OvrAvatar ovrAvatarOwner)
	{
	}

	[Token(Token = "0x60001F1")]
	[Address(RVA = "0xC6AD24", Offset = "0xC6AD24", VA = "0xC6AD24")]
	public void UpdateAvatar(IntPtr nativeComponent)
	{
	}

	[Token(Token = "0x60001F2")]
	[Address(RVA = "0xC6B9C4", Offset = "0xC6B9C4", VA = "0xC6B9C4")]
	protected void UpdateActive(OvrAvatar avatar, ovrAvatarVisibilityFlags mask)
	{
	}

	[Token(Token = "0x60001F3")]
	[Address(RVA = "0xC6BA24", Offset = "0xC6BA24", VA = "0xC6BA24")]
	public void UpdateAvatarMaterial(Material mat, ovrAvatarMaterialState matState)
	{
	}

	[Token(Token = "0x60001F4")]
	[Address(RVA = "0xC6C208", Offset = "0xC6C208", VA = "0xC6C208")]
	public static Texture2D GetLoadedTexture(ulong assetId)
	{
		return null;
	}

	[Token(Token = "0x60001F5")]
	[Address(RVA = "0xC6B06C", Offset = "0xC6B06C", VA = "0xC6B06C")]
	public OvrAvatarComponent()
	{
	}
}
[Token(Token = "0x2000060")]
public abstract class OvrAvatarDriver : MonoBehaviour
{
	[Token(Token = "0x2000636")]
	public enum PacketMode
	{
		[Token(Token = "0x4002079")]
		SDK,
		[Token(Token = "0x400207A")]
		Unity
	}

	[Token(Token = "0x2000637")]
	public struct ControllerPose
	{
		[Token(Token = "0x400207B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ovrAvatarButton buttons;

		[Token(Token = "0x400207C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public ovrAvatarTouch touches;

		[Token(Token = "0x400207D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public UnityEngine.Vector2 joystickPosition;

		[Token(Token = "0x400207E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float indexTrigger;

		[Token(Token = "0x400207F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float handTrigger;

		[Token(Token = "0x4002080")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool isActive;

		[Token(Token = "0x6002725")]
		[Address(RVA = "0xC6D830", Offset = "0xC6D830", VA = "0xC6D830")]
		public static ControllerPose Interpolate(ControllerPose a, ControllerPose b, float t)
		{
			return default(ControllerPose);
		}
	}

	[Token(Token = "0x2000638")]
	public struct PoseFrame
	{
		[Token(Token = "0x4002081")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public UnityEngine.Vector3 headPosition;

		[Token(Token = "0x4002082")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Quaternion headRotation;

		[Token(Token = "0x4002083")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public UnityEngine.Vector3 handLeftPosition;

		[Token(Token = "0x4002084")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Quaternion handLeftRotation;

		[Token(Token = "0x4002085")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public UnityEngine.Vector3 handRightPosition;

		[Token(Token = "0x4002086")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public Quaternion handRightRotation;

		[Token(Token = "0x4002087")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float voiceAmplitude;

		[Token(Token = "0x4002088")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public ControllerPose controllerLeftPose;

		[Token(Token = "0x4002089")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public ControllerPose controllerRightPose;

		[Token(Token = "0x6002726")]
		[Address(RVA = "0xC6D98C", Offset = "0xC6D98C", VA = "0xC6D98C")]
		public static PoseFrame Interpolate(PoseFrame a, PoseFrame b, float t)
		{
			return default(PoseFrame);
		}
	}

	[Token(Token = "0x400017E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PacketMode Mode;

	[Token(Token = "0x400017F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	protected PoseFrame CurrentPose;

	[Token(Token = "0x4000180")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private ovrAvatarControllerType ControllerType;

	[Token(Token = "0x60001F7")]
	[Address(RVA = "0xC6D504", Offset = "0xC6D504", VA = "0xC6D504")]
	public PoseFrame GetCurrentPose()
	{
		return default(PoseFrame);
	}

	[Token(Token = "0x60001F8")]
	public abstract void UpdateTransforms(IntPtr sdkAvatar);

	[Token(Token = "0x60001F9")]
	[Address(RVA = "0xC6D514", Offset = "0xC6D514", VA = "0xC6D514")]
	private void Start()
	{
	}

	[Token(Token = "0x60001FA")]
	[Address(RVA = "0xC6D5A0", Offset = "0xC6D5A0", VA = "0xC6D5A0")]
	public void UpdateTransformsFromPose(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x60001FB")]
	[Address(RVA = "0xC6D818", Offset = "0xC6D818", VA = "0xC6D818")]
	public static bool GetIsTrackedRemote()
	{
		return default(bool);
	}

	[Token(Token = "0x60001FC")]
	[Address(RVA = "0xC6D820", Offset = "0xC6D820", VA = "0xC6D820")]
	protected OvrAvatarDriver()
	{
	}
}
[Token(Token = "0x2000061")]
public class OvrAvatarHand : OvrAvatarComponent
{
	[Token(Token = "0x4000181")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool isLeftHand;

	[Token(Token = "0x4000182")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private ovrAvatarHandComponent component;

	[Token(Token = "0x60001FD")]
	[Address(RVA = "0xC6DD44", Offset = "0xC6DD44", VA = "0xC6DD44")]
	private void Update()
	{
	}

	[Token(Token = "0x60001FE")]
	[Address(RVA = "0xC6DEA0", Offset = "0xC6DEA0", VA = "0xC6DEA0")]
	public OvrAvatarHand()
	{
	}
}
[Token(Token = "0x2000062")]
public class OvrAvatarLocalDriver : OvrAvatarDriver
{
	[Token(Token = "0x4000183")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private UnityEngine.Vector3 centerEyePosition;

	[Token(Token = "0x4000184")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private Quaternion centerEyeRotation;

	[Token(Token = "0x4000185")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private float voiceAmplitude;

	[Token(Token = "0x60001FF")]
	[Address(RVA = "0xC6DF0C", Offset = "0xC6DF0C", VA = "0xC6DF0C")]
	private ControllerPose GetMalibuControllerPose(OVRInput.Controller controller)
	{
		return default(ControllerPose);
	}

	[Token(Token = "0x6000200")]
	[Address(RVA = "0xC6E078", Offset = "0xC6E078", VA = "0xC6E078")]
	private ControllerPose GetControllerPose(OVRInput.Controller controller)
	{
		return default(ControllerPose);
	}

	[Token(Token = "0x6000201")]
	[Address(RVA = "0xC6E41C", Offset = "0xC6E41C", VA = "0xC6E41C")]
	private void CalculateCurrentPose()
	{
	}

	[Token(Token = "0x6000202")]
	[Address(RVA = "0xC6E638", Offset = "0xC6E638", VA = "0xC6E638", Slot = "4")]
	public override void UpdateTransforms(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x6000203")]
	[Address(RVA = "0xC6E664", Offset = "0xC6E664", VA = "0xC6E664")]
	public OvrAvatarLocalDriver()
	{
	}
}
[Token(Token = "0x2000063")]
public class OvrAvatarMaterialManager : MonoBehaviour
{
	[Token(Token = "0x2000639")]
	public enum TextureType
	{
		[Token(Token = "0x400208B")]
		DiffuseTextures,
		[Token(Token = "0x400208C")]
		NormalMaps,
		[Token(Token = "0x400208D")]
		RoughnessMaps,
		[Token(Token = "0x400208E")]
		Count
	}

	[Token(Token = "0x200063A")]
	public struct AvatarComponentMaterialProperties
	{
		[Token(Token = "0x400208F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ovrAvatarBodyPartType TypeIndex;

		[Token(Token = "0x4002090")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public Color Color;

		[Token(Token = "0x4002091")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Texture2D[] Textures;

		[Token(Token = "0x4002092")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float DiffuseIntensity;

		[Token(Token = "0x4002093")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float RimIntensity;

		[Token(Token = "0x4002094")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float ReflectionIntensity;
	}

	[Token(Token = "0x200063B")]
	public struct AvatarTextureArrayProperties
	{
		[Token(Token = "0x4002095")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Texture2D[] Textures;

		[Token(Token = "0x4002096")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Texture2DArray TextureArray;
	}

	[Token(Token = "0x200063C")]
	public struct AvatarMaterialPropertyBlock
	{
		[Token(Token = "0x4002097")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector4[] Colors;

		[Token(Token = "0x4002098")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float[] DiffuseIntensities;

		[Token(Token = "0x4002099")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float[] RimIntensities;

		[Token(Token = "0x400209A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float[] ReflectionIntensities;
	}

	[Serializable]
	[Token(Token = "0x200063D")]
	public class AvatarMaterialConfig
	{
		[Token(Token = "0x400209B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AvatarComponentMaterialProperties[] ComponentMaterialProperties;

		[Token(Token = "0x400209C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AvatarMaterialPropertyBlock MaterialPropertyBlock;

		[Token(Token = "0x6002727")]
		[Address(RVA = "0xC70884", Offset = "0xC70884", VA = "0xC70884")]
		public AvatarMaterialConfig()
		{
		}
	}

	[Token(Token = "0x200063E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B79BC", Offset = "0x8B79BC")]
	private sealed class <RunLoadingAnimation>d__49 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400209D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400209E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400209F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OvrAvatarMaterialManager <>4__this;

		[Token(Token = "0x40020A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Action callBack;

		[Token(Token = "0x40020A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int <srcBlend>5__2;

		[Token(Token = "0x40020A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int <dstBlend>5__3;

		[Token(Token = "0x40020A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string <lightModeTag>5__4;

		[Token(Token = "0x40020A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private string <renderTypeTag>5__5;

		[Token(Token = "0x40020A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private string <renderQueueTag>5__6;

		[Token(Token = "0x40020A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private string <ignoreProjectorTag>5__7;

		[Token(Token = "0x40020A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int <renderQueue>5__8;

		[Token(Token = "0x40020A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private bool <transparentQueue>5__9;

		[Token(Token = "0x17000452")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600272B")]
			[Address(RVA = "0xC71194", Offset = "0xC71194", VA = "0xC71194", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000453")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600272D")]
			[Address(RVA = "0xC711FC", Offset = "0xC711FC", VA = "0xC711FC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002728")]
		[Address(RVA = "0xC706EC", Offset = "0xC706EC", VA = "0xC706EC")]
		[DebuggerHidden]
		public <RunLoadingAnimation>d__49(int <>1__state)
		{
		}

		[Token(Token = "0x6002729")]
		[Address(RVA = "0xC70B1C", Offset = "0xC70B1C", VA = "0xC70B1C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600272A")]
		[Address(RVA = "0xC70B20", Offset = "0xC70B20", VA = "0xC70B20", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600272C")]
		[Address(RVA = "0xC7119C", Offset = "0xC7119C", VA = "0xC7119C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000186")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Renderer TargetRenderer;

	[Token(Token = "0x4000187")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private AvatarTextureArrayProperties[] TextureArrays;

	[Token(Token = "0x4000188")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly string[] TextureTypeToShaderProperties;

	[Token(Token = "0x4000189")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AvatarMaterialConfig LocalAvatarConfig;

	[Token(Token = "0x400018A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<ReflectionProbeBlendInfo> ReflectionProbes;

	[Token(Token = "0x400018B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Shader CombinedShader;

	[Token(Token = "0x400018C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string AVATAR_SHADER_LOADER;

	[Token(Token = "0x400018D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static string AVATAR_SHADER_MAINTEX;

	[Token(Token = "0x400018E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static string AVATAR_SHADER_NORMALMAP;

	[Token(Token = "0x400018F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static string AVATAR_SHADER_ROUGHNESSMAP;

	[Token(Token = "0x4000190")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static string AVATAR_SHADER_COLOR;

	[Token(Token = "0x4000191")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static string AVATAR_SHADER_DIFFUSEINTENSITY;

	[Token(Token = "0x4000192")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static string AVATAR_SHADER_RIMINTENSITY;

	[Token(Token = "0x4000193")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static string AVATAR_SHADER_REFLECTIONINTENSITY;

	[Token(Token = "0x4000194")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public static string AVATAR_SHADER_CUBEMAP;

	[Token(Token = "0x4000195")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public static string AVATAR_SHADER_ALPHA;

	[Token(Token = "0x4000196")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public static string AVATAR_SHADER_LOADING_DIMMER;

	[Token(Token = "0x4000197")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public static string AVATAR_SHADER_IRIS_COLOR;

	[Token(Token = "0x4000198")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public static string AVATAR_SHADER_LIP_COLOR;

	[Token(Token = "0x4000199")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public static string AVATAR_SHADER_BROW_COLOR;

	[Token(Token = "0x400019A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public static string AVATAR_SHADER_LASH_COLOR;

	[Token(Token = "0x400019B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public static string AVATAR_SHADER_SCLERA_COLOR;

	[Token(Token = "0x400019C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public static string AVATAR_SHADER_GUM_COLOR;

	[Token(Token = "0x400019D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public static string AVATAR_SHADER_TEETH_COLOR;

	[Token(Token = "0x400019E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public static string AVATAR_SHADER_LIP_SMOOTHNESS;

	[Token(Token = "0x400019F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public static float[] DiffuseIntensities;

	[Token(Token = "0x40001A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public static float[] RimIntensities;

	[Token(Token = "0x40001A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public static float[] ReflectionIntensities;

	[Token(Token = "0x40001A2")]
	private const float LOADING_ANIMATION_AMPLITUDE = 0.5f;

	[Token(Token = "0x40001A3")]
	private const float LOADING_ANIMATION_PERIOD = 0.35f;

	[Token(Token = "0x40001A4")]
	private const float LOADING_ANIMATION_CURVE_SCALE = 0.25f;

	[Token(Token = "0x40001A5")]
	private const float LOADING_ANIMATION_DIMMER_MIN = 0.3f;

	[Token(Token = "0x6000204")]
	[Address(RVA = "0xC6E714", Offset = "0xC6E714", VA = "0xC6E714")]
	public void CreateTextureArrays()
	{
	}

	[Token(Token = "0x6000205")]
	[Address(RVA = "0xC6E874", Offset = "0xC6E874", VA = "0xC6E874")]
	public void SetRenderer(Renderer renderer)
	{
	}

	[Token(Token = "0x6000206")]
	[Address(RVA = "0xC6E89C", Offset = "0xC6E89C", VA = "0xC6E89C")]
	public void OnCombinedMeshReady()
	{
	}

	[Token(Token = "0x6000207")]
	[Address(RVA = "0xC6EFB4", Offset = "0xC6EFB4", VA = "0xC6EFB4")]
	public void AddTextureIDToTextureManager(ulong assetID, bool isSingleComponent)
	{
	}

	[Token(Token = "0x6000208")]
	[Address(RVA = "0xC6F234", Offset = "0xC6F234", VA = "0xC6F234")]
	private void DeleteTextureSet()
	{
	}

	[Token(Token = "0x6000209")]
	[Address(RVA = "0xC6E930", Offset = "0xC6E930", VA = "0xC6E930")]
	public void InitTextureArrays()
	{
	}

	[Token(Token = "0x600020A")]
	[Address(RVA = "0xC6F324", Offset = "0xC6F324", VA = "0xC6F324")]
	private void ProcessTexturesWithMips(Texture2D[] textures, int texArrayResolution, Texture2DArray texArray)
	{
	}

	[Token(Token = "0x600020B")]
	[Address(RVA = "0xC6ED30", Offset = "0xC6ED30", VA = "0xC6ED30")]
	private void SetMaterialPropertyBlock()
	{
	}

	[Token(Token = "0x600020C")]
	[Address(RVA = "0xC6F58C", Offset = "0xC6F58C", VA = "0xC6F58C")]
	private void ApplyMaterialPropertyBlock()
	{
	}

	[Token(Token = "0x600020D")]
	[Address(RVA = "0xC6F804", Offset = "0xC6F804", VA = "0xC6F804")]
	public static ovrAvatarBodyPartType GetComponentType(string objectName)
	{
		return default(ovrAvatarBodyPartType);
	}

	[Token(Token = "0x600020E")]
	[Address(RVA = "0xC6F900", Offset = "0xC6F900", VA = "0xC6F900")]
	private ulong GetTextureIDForType(ovrAvatarPBSMaterialState materialState, TextureType type)
	{
		return default(ulong);
	}

	[Token(Token = "0x600020F")]
	[Address(RVA = "0xC6F938", Offset = "0xC6F938", VA = "0xC6F938")]
	public void ValidateTextures(ovrAvatarPBSMaterialState[] materialStates)
	{
	}

	[Token(Token = "0x6000210")]
	[Address(RVA = "0xC6EF38", Offset = "0xC6EF38", VA = "0xC6EF38")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C22A0", Offset = "0x8C22A0")]
	private IEnumerator RunLoadingAnimation(Action callBack)
	{
		return null;
	}

	[Token(Token = "0x6000211")]
	[Address(RVA = "0xC70718", Offset = "0xC70718", VA = "0xC70718")]
	public OvrAvatarMaterialManager()
	{
	}
}
[Token(Token = "0x2000064")]
public class OvrAvatarMeshInstance : MonoBehaviour
{
	[Token(Token = "0x40001A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private HashSet<ulong> AssetsToLoad;

	[Token(Token = "0x40001A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ulong MeshID;

	[Token(Token = "0x40001A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private ulong MaterialID;

	[Token(Token = "0x40001A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private ulong FadeTextureID;

	[Token(Token = "0x40001AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ovrAvatarBodyPartType MeshType;

	[Token(Token = "0x40001AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ovrAvatarMaterialState MaterialState;

	[Token(Token = "0x40001AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private MeshFilter Mesh;

	[Token(Token = "0x40001AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private MeshRenderer MeshInstance;

	[Token(Token = "0x6000213")]
	[Address(RVA = "0xC71204", Offset = "0xC71204", VA = "0xC71204")]
	public void AssetLoadedCallback(OvrAvatarAsset asset)
	{
	}

	[Token(Token = "0x6000214")]
	[Address(RVA = "0xC71CE4", Offset = "0xC71CE4", VA = "0xC71CE4")]
	public void SetMeshAssets(ulong fadeTexture, ulong meshID, ulong materialID, ovrAvatarBodyPartType type)
	{
	}

	[Token(Token = "0x6000215")]
	[Address(RVA = "0xC712A8", Offset = "0xC712A8", VA = "0xC712A8")]
	private void HandleAssetAvailable(OvrAvatarAsset asset)
	{
	}

	[Token(Token = "0x6000216")]
	[Address(RVA = "0xC71F2C", Offset = "0xC71F2C", VA = "0xC71F2C")]
	public void ChangeMaterial(ulong assetID)
	{
	}

	[Token(Token = "0x6000217")]
	[Address(RVA = "0xC71D98", Offset = "0xC71D98", VA = "0xC71D98")]
	private void RequestAsset(ulong assetID)
	{
	}

	[Token(Token = "0x6000218")]
	[Address(RVA = "0xC71E90", Offset = "0xC71E90", VA = "0xC71E90")]
	private void RequestMaterialTextures()
	{
	}

	[Token(Token = "0x6000219")]
	[Address(RVA = "0xC72050", Offset = "0xC72050", VA = "0xC72050")]
	public void SetActive(bool active)
	{
	}

	[Token(Token = "0x600021A")]
	[Address(RVA = "0xC71474", Offset = "0xC71474", VA = "0xC71474")]
	private void UpdateMaterial()
	{
	}

	[Token(Token = "0x600021B")]
	[Address(RVA = "0xC720A0", Offset = "0xC720A0", VA = "0xC720A0")]
	public OvrAvatarMeshInstance()
	{
	}
}
[Token(Token = "0x2000065")]
public class OvrAvatarPacket
{
	[Token(Token = "0x40001AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public IntPtr ovrNativePacket;

	[Token(Token = "0x40001AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<float> frameTimes;

	[Token(Token = "0x40001B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<OvrAvatarDriver.PoseFrame> frames;

	[Token(Token = "0x40001B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<byte[]> encodedAudioPackets;

	[Token(Token = "0x17000032")]
	public float Duration
	{
		[Token(Token = "0x600021C")]
		[Address(RVA = "0xC720A8", Offset = "0xC720A8", VA = "0xC720A8")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000033")]
	public OvrAvatarDriver.PoseFrame FinalFrame
	{
		[Token(Token = "0x600021D")]
		[Address(RVA = "0xC72114", Offset = "0xC72114", VA = "0xC72114")]
		get
		{
			return default(OvrAvatarDriver.PoseFrame);
		}
	}

	[Token(Token = "0x600021E")]
	[Address(RVA = "0xC72198", Offset = "0xC72198", VA = "0xC72198")]
	public OvrAvatarPacket()
	{
	}

	[Token(Token = "0x600021F")]
	[Address(RVA = "0xC7225C", Offset = "0xC7225C", VA = "0xC7225C")]
	public OvrAvatarPacket(OvrAvatarDriver.PoseFrame initialPose)
	{
	}

	[Token(Token = "0x6000220")]
	[Address(RVA = "0xC7239C", Offset = "0xC7239C", VA = "0xC7239C")]
	private OvrAvatarPacket(List<float> frameTimes, List<OvrAvatarDriver.PoseFrame> frames, List<byte[]> audioPackets)
	{
	}

	[Token(Token = "0x6000221")]
	[Address(RVA = "0xC72478", Offset = "0xC72478", VA = "0xC72478")]
	public void AddFrame(OvrAvatarDriver.PoseFrame frame, float deltaSeconds)
	{
	}

	[Token(Token = "0x6000222")]
	[Address(RVA = "0xC72548", Offset = "0xC72548", VA = "0xC72548")]
	public OvrAvatarDriver.PoseFrame GetPoseFrame(float seconds)
	{
		return default(OvrAvatarDriver.PoseFrame);
	}

	[Token(Token = "0x6000223")]
	[Address(RVA = "0xC72750", Offset = "0xC72750", VA = "0xC72750")]
	public static OvrAvatarPacket Read(Stream stream)
	{
		return null;
	}

	[Token(Token = "0x6000224")]
	[Address(RVA = "0xC729A8", Offset = "0xC729A8", VA = "0xC729A8")]
	public void Write(Stream stream)
	{
	}
}
[Token(Token = "0x2000066")]
internal static class BinaryWriterExtensions
{
	[Token(Token = "0x6000225")]
	[Address(RVA = "0xBC6520", Offset = "0xBC6520", VA = "0xBC6520")]
	public static void Write(this BinaryWriter writer, OvrAvatarDriver.PoseFrame frame)
	{
	}

	[Token(Token = "0x6000226")]
	[Address(RVA = "0xBC6634", Offset = "0xBC6634", VA = "0xBC6634")]
	public static void Write(this BinaryWriter writer, UnityEngine.Vector3 vec3)
	{
	}

	[Token(Token = "0x6000227")]
	[Address(RVA = "0xBC67E0", Offset = "0xBC67E0", VA = "0xBC67E0")]
	public static void Write(this BinaryWriter writer, UnityEngine.Vector2 vec2)
	{
	}

	[Token(Token = "0x6000228")]
	[Address(RVA = "0xBC66A4", Offset = "0xBC66A4", VA = "0xBC66A4")]
	public static void Write(this BinaryWriter writer, Quaternion quat)
	{
	}

	[Token(Token = "0x6000229")]
	[Address(RVA = "0xBC6738", Offset = "0xBC6738", VA = "0xBC6738")]
	public static void Write(this BinaryWriter writer, OvrAvatarDriver.ControllerPose pose)
	{
	}
}
[Token(Token = "0x2000067")]
internal static class BinaryReaderExtensions
{
	[Token(Token = "0x600022A")]
	[Address(RVA = "0xBC6120", Offset = "0xBC6120", VA = "0xBC6120")]
	public static OvrAvatarDriver.PoseFrame ReadPoseFrame(this BinaryReader reader)
	{
		return default(OvrAvatarDriver.PoseFrame);
	}

	[Token(Token = "0x600022B")]
	[Address(RVA = "0xBC64C4", Offset = "0xBC64C4", VA = "0xBC64C4")]
	public static UnityEngine.Vector2 ReadVector2(this BinaryReader reader)
	{
		return default(UnityEngine.Vector2);
	}

	[Token(Token = "0x600022C")]
	[Address(RVA = "0xBC62C0", Offset = "0xBC62C0", VA = "0xBC62C0")]
	public static UnityEngine.Vector3 ReadVector3(this BinaryReader reader)
	{
		return default(UnityEngine.Vector3);
	}

	[Token(Token = "0x600022D")]
	[Address(RVA = "0xBC6338", Offset = "0xBC6338", VA = "0xBC6338")]
	public static Quaternion ReadQuaternion(this BinaryReader reader)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x600022E")]
	[Address(RVA = "0xBC63D4", Offset = "0xBC63D4", VA = "0xBC63D4")]
	public static OvrAvatarDriver.ControllerPose ReadControllerPose(this BinaryReader reader)
	{
		return default(OvrAvatarDriver.ControllerPose);
	}
}
[Token(Token = "0x2000068")]
public class OvrAvatarProjectorRenderComponent : OvrAvatarRenderComponent
{
	[Token(Token = "0x40001B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material material;

	[Token(Token = "0x600022F")]
	[Address(RVA = "0xC72B98", Offset = "0xC72B98", VA = "0xC72B98")]
	internal void InitializeProjectorRender(ovrAvatarRenderPart_ProjectorRender render, Shader shader, OvrAvatarRenderComponent target)
	{
	}

	[Token(Token = "0x6000230")]
	[Address(RVA = "0xC72E5C", Offset = "0xC72E5C", VA = "0xC72E5C")]
	internal void UpdateProjectorRender(OvrAvatarComponent component, ovrAvatarRenderPart_ProjectorRender render)
	{
	}

	[Token(Token = "0x6000231")]
	[Address(RVA = "0xC72FC4", Offset = "0xC72FC4", VA = "0xC72FC4")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000232")]
	[Address(RVA = "0xC73540", Offset = "0xC73540", VA = "0xC73540")]
	public OvrAvatarProjectorRenderComponent()
	{
	}
}
[Token(Token = "0x2000069")]
public class OvrAvatarRemoteDriver : OvrAvatarDriver
{
	[Token(Token = "0x40001B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Queue<OvrAvatarPacket> packetQueue;

	[Token(Token = "0x40001B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private IntPtr CurrentSDKPacket;

	[Token(Token = "0x40001B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private float CurrentPacketTime;

	[Token(Token = "0x40001B6")]
	private const int MinPacketQueue = 1;

	[Token(Token = "0x40001B7")]
	private const int MaxPacketQueue = 4;

	[Token(Token = "0x40001B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private int CurrentSequence;

	[Token(Token = "0x40001B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private bool isStreaming;

	[Token(Token = "0x40001BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private OvrAvatarPacket currentPacket;

	[Token(Token = "0x6000233")]
	[Address(RVA = "0xC73560", Offset = "0xC73560", VA = "0xC73560")]
	public void QueuePacket(int sequence, OvrAvatarPacket packet)
	{
	}

	[Token(Token = "0x6000234")]
	[Address(RVA = "0xC735EC", Offset = "0xC735EC", VA = "0xC735EC", Slot = "4")]
	public override void UpdateTransforms(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x6000235")]
	[Address(RVA = "0xC73608", Offset = "0xC73608", VA = "0xC73608")]
	private void UpdateFromSDKPacket(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x6000236")]
	[Address(RVA = "0xC737B4", Offset = "0xC737B4", VA = "0xC737B4")]
	private void UpdateFromUnityPacket(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x6000237")]
	[Address(RVA = "0xC7395C", Offset = "0xC7395C", VA = "0xC7395C")]
	public OvrAvatarRemoteDriver()
	{
	}
}
[Token(Token = "0x200006A")]
public class OvrAvatarRenderComponent : MonoBehaviour
{
	[Token(Token = "0x40001BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool firstSkinnedUpdate;

	[Token(Token = "0x40001BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SkinnedMeshRenderer mesh;

	[Token(Token = "0x40001BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform[] bones;

	[Token(Token = "0x40001BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool isBodyComponent;

	[Token(Token = "0x6000238")]
	[Address(RVA = "0xC739DC", Offset = "0xC739DC", VA = "0xC739DC")]
	protected void UpdateActive(OvrAvatar avatar, ovrAvatarVisibilityFlags mask)
	{
	}

	[Token(Token = "0x6000239")]
	[Address(RVA = "0xC73AC0", Offset = "0xC73AC0", VA = "0xC73AC0")]
	protected SkinnedMeshRenderer CreateSkinnedMesh(ulong assetID, ovrAvatarVisibilityFlags visibilityMask, int thirdPersonLayer, int firstPersonLayer)
	{
		return null;
	}

	[Token(Token = "0x600023A")]
	[Address(RVA = "0xC73CB4", Offset = "0xC73CB4", VA = "0xC73CB4")]
	protected void UpdateSkinnedMesh(OvrAvatar avatar, Transform[] bones, ovrAvatarTransform localTransform, ovrAvatarVisibilityFlags visibilityMask, IntPtr renderPart)
	{
	}

	[Token(Token = "0x600023B")]
	[Address(RVA = "0xC72D64", Offset = "0xC72D64", VA = "0xC72D64")]
	protected Material CreateAvatarMaterial(string name, Shader shader)
	{
		return null;
	}

	[Token(Token = "0x600023C")]
	[Address(RVA = "0xC73550", Offset = "0xC73550", VA = "0xC73550")]
	public OvrAvatarRenderComponent()
	{
	}
}
[Token(Token = "0x200006B")]
[Flags]
public enum ovrAvatarCapabilities
{
	[Token(Token = "0x40001C0")]
	Body = 1,
	[Token(Token = "0x40001C1")]
	Hands = 2,
	[Token(Token = "0x40001C2")]
	Base = 4,
	[Token(Token = "0x40001C3")]
	BodyTilt = 0x10,
	[Token(Token = "0x40001C4")]
	Expressive = 0x20,
	[Token(Token = "0x40001C5")]
	All = -1
}
[Token(Token = "0x200006C")]
public enum ovrAvatarMessageType
{
	[Token(Token = "0x40001C7")]
	AvatarSpecification,
	[Token(Token = "0x40001C8")]
	AssetLoaded,
	[Token(Token = "0x40001C9")]
	Count
}
[Token(Token = "0x200006D")]
public struct ovrAvatarMessage_AvatarSpecification
{
	[Token(Token = "0x40001CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public IntPtr avatarSpec;

	[Token(Token = "0x40001CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ulong oculusUserID;
}
[Token(Token = "0x200006E")]
public struct ovrAvatarMessage_AssetLoaded
{
	[Token(Token = "0x40001CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ulong assetID;

	[Token(Token = "0x40001CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public IntPtr asset;
}
[Token(Token = "0x200006F")]
public enum ovrAvatarAssetType
{
	[Token(Token = "0x40001CF")]
	Mesh,
	[Token(Token = "0x40001D0")]
	Texture,
	[Token(Token = "0x40001D1")]
	Pose,
	[Token(Token = "0x40001D2")]
	Material,
	[Token(Token = "0x40001D3")]
	CombinedMesh,
	[Token(Token = "0x40001D4")]
	PBSMaterial,
	[Token(Token = "0x40001D5")]
	FailedLoad,
	[Token(Token = "0x40001D6")]
	Count
}
[Token(Token = "0x2000070")]
public struct ovrAvatarMeshVertex
{
	[Token(Token = "0x40001D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float x;

	[Token(Token = "0x40001D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float y;

	[Token(Token = "0x40001D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float z;

	[Token(Token = "0x40001DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float nx;

	[Token(Token = "0x40001DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float ny;

	[Token(Token = "0x40001DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float nz;

	[Token(Token = "0x40001DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float tx;

	[Token(Token = "0x40001DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float ty;

	[Token(Token = "0x40001DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float tz;

	[Token(Token = "0x40001E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float tw;

	[Token(Token = "0x40001E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float u;

	[Token(Token = "0x40001E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float v;

	[Token(Token = "0x40001E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public byte[] blendIndices;

	[Token(Token = "0x40001E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float[] blendWeights;
}
[Token(Token = "0x2000071")]
public struct ovrAvatarMeshVertexV2
{
	[Token(Token = "0x40001E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float x;

	[Token(Token = "0x40001E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float y;

	[Token(Token = "0x40001E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float z;

	[Token(Token = "0x40001E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float nx;

	[Token(Token = "0x40001E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float ny;

	[Token(Token = "0x40001EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float nz;

	[Token(Token = "0x40001EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float tx;

	[Token(Token = "0x40001EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float ty;

	[Token(Token = "0x40001ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float tz;

	[Token(Token = "0x40001EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float tw;

	[Token(Token = "0x40001EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float u;

	[Token(Token = "0x40001F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float v;

	[Token(Token = "0x40001F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float r;

	[Token(Token = "0x40001F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float g;

	[Token(Token = "0x40001F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float b;

	[Token(Token = "0x40001F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float a;

	[Token(Token = "0x40001F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public byte[] blendIndices;

	[Token(Token = "0x40001F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float[] blendWeights;
}
[Token(Token = "0x2000072")]
public struct ovrAvatarBlendVertex
{
	[Token(Token = "0x40001F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float x;

	[Token(Token = "0x40001F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float y;

	[Token(Token = "0x40001F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float z;

	[Token(Token = "0x40001FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float nx;

	[Token(Token = "0x40001FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float ny;

	[Token(Token = "0x40001FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float nz;

	[Token(Token = "0x40001FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float tx;

	[Token(Token = "0x40001FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float ty;

	[Token(Token = "0x40001FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float tz;
}
[Token(Token = "0x2000073")]
public struct ovrAvatarMeshAssetData
{
	[Token(Token = "0x4000200")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint vertexCount;

	[Token(Token = "0x4000201")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public IntPtr vertexBuffer;

	[Token(Token = "0x4000202")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public uint indexCount;

	[Token(Token = "0x4000203")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr indexBuffer;

	[Token(Token = "0x4000204")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ovrAvatarSkinnedMeshPose skinnedBindPose;
}
[Token(Token = "0x2000074")]
public struct ovrAvatarMeshAssetDataV2
{
	[Token(Token = "0x4000205")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint vertexCount;

	[Token(Token = "0x4000206")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public IntPtr vertexBuffer;

	[Token(Token = "0x4000207")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public uint indexCount;

	[Token(Token = "0x4000208")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr indexBuffer;

	[Token(Token = "0x4000209")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ovrAvatarSkinnedMeshPose skinnedBindPose;
}
[Token(Token = "0x2000075")]
public enum ovrAvatarTextureFormat
{
	[Token(Token = "0x400020B")]
	RGB24,
	[Token(Token = "0x400020C")]
	DXT1,
	[Token(Token = "0x400020D")]
	DXT5,
	[Token(Token = "0x400020E")]
	ASTC_RGB_6x6,
	[Token(Token = "0x400020F")]
	ASTC_RGB_6x6_MIPMAPS,
	[Token(Token = "0x4000210")]
	Count
}
[Token(Token = "0x2000076")]
public struct ovrAvatarTextureAssetData
{
	[Token(Token = "0x4000211")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTextureFormat format;

	[Token(Token = "0x4000212")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public uint sizeX;

	[Token(Token = "0x4000213")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public uint sizeY;

	[Token(Token = "0x4000214")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public uint mipCount;

	[Token(Token = "0x4000215")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong textureDataSize;

	[Token(Token = "0x4000216")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr textureData;
}
[Token(Token = "0x2000077")]
public enum ovrAvatarRenderPartType
{
	[Token(Token = "0x4000218")]
	SkinnedMeshRender,
	[Token(Token = "0x4000219")]
	SkinnedMeshRenderPBS,
	[Token(Token = "0x400021A")]
	ProjectorRender,
	[Token(Token = "0x400021B")]
	SkinnedMeshRenderPBS_V2,
	[Token(Token = "0x400021C")]
	Count
}
[Token(Token = "0x2000078")]
public enum ovrAvatarLogLevel
{
	[Token(Token = "0x400021E")]
	Unknown,
	[Token(Token = "0x400021F")]
	Default,
	[Token(Token = "0x4000220")]
	Verbose,
	[Token(Token = "0x4000221")]
	Debug,
	[Token(Token = "0x4000222")]
	Info,
	[Token(Token = "0x4000223")]
	Warn,
	[Token(Token = "0x4000224")]
	Error,
	[Token(Token = "0x4000225")]
	Fatal,
	[Token(Token = "0x4000226")]
	Silent
}
[Token(Token = "0x2000079")]
public struct ovrAvatarTransform
{
	[Token(Token = "0x4000227")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public UnityEngine.Vector3 position;

	[Token(Token = "0x4000228")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Quaternion orientation;

	[Token(Token = "0x4000229")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public UnityEngine.Vector3 scale;
}
[Token(Token = "0x200007A")]
[Flags]
public enum ovrAvatarButton
{
	[Token(Token = "0x400022B")]
	One = 1,
	[Token(Token = "0x400022C")]
	Two = 2,
	[Token(Token = "0x400022D")]
	Three = 4,
	[Token(Token = "0x400022E")]
	Joystick = 8
}
[Token(Token = "0x200007B")]
[Flags]
public enum ovrAvatarTouch
{
	[Token(Token = "0x4000230")]
	One = 1,
	[Token(Token = "0x4000231")]
	Two = 2,
	[Token(Token = "0x4000232")]
	Joystick = 4,
	[Token(Token = "0x4000233")]
	ThumbRest = 8,
	[Token(Token = "0x4000234")]
	Index = 0x10,
	[Token(Token = "0x4000235")]
	Pointing = 0x40,
	[Token(Token = "0x4000236")]
	ThumbUp = 0x80
}
[Token(Token = "0x200007C")]
public struct ovrAvatarHandInputState
{
	[Token(Token = "0x4000237")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform transform;

	[Token(Token = "0x4000238")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarButton buttonMask;

	[Token(Token = "0x4000239")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public ovrAvatarTouch touchMask;

	[Token(Token = "0x400023A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float joystickX;

	[Token(Token = "0x400023B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float joystickY;

	[Token(Token = "0x400023C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float indexTrigger;

	[Token(Token = "0x400023D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float handTrigger;

	[Token(Token = "0x400023E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool isActive;
}
[Token(Token = "0x200007D")]
public struct ovrAvatarComponent
{
	[Token(Token = "0x400023F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform transform;

	[Token(Token = "0x4000240")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public uint renderPartCount;

	[Token(Token = "0x4000241")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public IntPtr renderParts;

	[Token(Token = "0x4000242")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string name;
}
[Token(Token = "0x200007E")]
internal struct ovrAvatarComponent_Offsets
{
	[Token(Token = "0x4000243")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static long transform;

	[Token(Token = "0x4000244")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int renderPartCount;

	[Token(Token = "0x4000245")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public static int renderParts;

	[Token(Token = "0x4000246")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static int name;
}
[Token(Token = "0x200007F")]
public struct ovrAvatarBaseComponent
{
	[Token(Token = "0x4000247")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public UnityEngine.Vector3 basePosition;

	[Token(Token = "0x4000248")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public IntPtr renderComponent;
}
[Token(Token = "0x2000080")]
public struct ovrAvatarBodyComponent
{
	[Token(Token = "0x4000249")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform leftEyeTransform;

	[Token(Token = "0x400024A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarTransform rightEyeTransform;

	[Token(Token = "0x400024B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ovrAvatarTransform centerEyeTransform;

	[Token(Token = "0x400024C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public IntPtr renderComponent;
}
[Token(Token = "0x2000081")]
public struct ovrAvatarBodyComponent_Offsets
{
	[Token(Token = "0x400024D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static long leftEyeTransform;

	[Token(Token = "0x400024E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long rightEyeTransform;

	[Token(Token = "0x400024F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static long centerEyeTransform;

	[Token(Token = "0x4000250")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static long renderComponent;
}
[Token(Token = "0x2000082")]
public struct ovrAvatarControllerComponent
{
	[Token(Token = "0x4000251")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarHandInputState inputState;

	[Token(Token = "0x4000252")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public IntPtr renderComponent;
}
[Token(Token = "0x2000083")]
public struct ovrAvatarHandComponent
{
	[Token(Token = "0x4000253")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarHandInputState inputState;

	[Token(Token = "0x4000254")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public IntPtr renderComponent;
}
[Token(Token = "0x2000084")]
public enum ovrAvatarMaterialLayerBlendMode
{
	[Token(Token = "0x4000256")]
	Add,
	[Token(Token = "0x4000257")]
	Multiply,
	[Token(Token = "0x4000258")]
	Count
}
[Token(Token = "0x2000085")]
public enum ovrAvatarMaterialLayerSampleMode
{
	[Token(Token = "0x400025A")]
	Color,
	[Token(Token = "0x400025B")]
	Texture,
	[Token(Token = "0x400025C")]
	TextureSingleChannel,
	[Token(Token = "0x400025D")]
	Parallax,
	[Token(Token = "0x400025E")]
	Count
}
[Token(Token = "0x2000086")]
public enum ovrAvatarMaterialMaskType
{
	[Token(Token = "0x4000260")]
	None,
	[Token(Token = "0x4000261")]
	Positional,
	[Token(Token = "0x4000262")]
	ViewReflection,
	[Token(Token = "0x4000263")]
	Fresnel,
	[Token(Token = "0x4000264")]
	Pulse,
	[Token(Token = "0x4000265")]
	Count
}
[Token(Token = "0x2000087")]
public enum ovrAvatarControllerType
{
	[Token(Token = "0x4000267")]
	Touch,
	[Token(Token = "0x4000268")]
	Malibu,
	[Token(Token = "0x4000269")]
	Go,
	[Token(Token = "0x400026A")]
	Quest,
	[Token(Token = "0x400026B")]
	Count
}
[Token(Token = "0x2000088")]
public enum ovrAvatarAssetLevelOfDetail
{
	[Token(Token = "0x400026D")]
	Lowest = 1,
	[Token(Token = "0x400026E")]
	Medium = 3,
	[Token(Token = "0x400026F")]
	Highest = 5
}
[Token(Token = "0x2000089")]
public enum ovrAvatarLookAndFeelVersion
{
	[Token(Token = "0x4000271")]
	Unknown = -1,
	[Token(Token = "0x4000272")]
	One,
	[Token(Token = "0x4000273")]
	Two
}
[Token(Token = "0x200008A")]
public struct ovrAvatarMaterialLayerState
{
	[Token(Token = "0x4000274")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarMaterialLayerBlendMode blendMode;

	[Token(Token = "0x4000275")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public ovrAvatarMaterialLayerSampleMode sampleMode;

	[Token(Token = "0x4000276")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ovrAvatarMaterialMaskType maskType;

	[Token(Token = "0x4000277")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Vector4 layerColor;

	[Token(Token = "0x4000278")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector4 sampleParameters;

	[Token(Token = "0x4000279")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ulong sampleTexture;

	[Token(Token = "0x400027A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Vector4 sampleScaleOffset;

	[Token(Token = "0x400027B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Vector4 maskParameters;

	[Token(Token = "0x400027C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector4 maskAxis;

	[Token(Token = "0x600023F")]
	[Address(RVA = "0x1A39774", Offset = "0x1A39774", VA = "0x1A39774")]
	private static bool VectorEquals(Vector4 a, Vector4 b)
	{
		return default(bool);
	}

	[Token(Token = "0x6000240")]
	[Address(RVA = "0x9AC5E0", Offset = "0x9AC5E0", VA = "0x9AC5E0", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x6000241")]
	[Address(RVA = "0x9AC5E8", Offset = "0x9AC5E8", VA = "0x9AC5E8", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}
}
[Token(Token = "0x200008B")]
public struct ovrAvatarMaterialState
{
	[Token(Token = "0x400027D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector4 baseColor;

	[Token(Token = "0x400027E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ovrAvatarMaterialMaskType baseMaskType;

	[Token(Token = "0x400027F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Vector4 baseMaskParameters;

	[Token(Token = "0x4000280")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector4 baseMaskAxis;

	[Token(Token = "0x4000281")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public ovrAvatarMaterialLayerSampleMode sampleMode;

	[Token(Token = "0x4000282")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ulong alphaMaskTextureID;

	[Token(Token = "0x4000283")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector4 alphaMaskScaleOffset;

	[Token(Token = "0x4000284")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ulong normalMapTextureID;

	[Token(Token = "0x4000285")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector4 normalMapScaleOffset;

	[Token(Token = "0x4000286")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public ulong parallaxMapTextureID;

	[Token(Token = "0x4000287")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Vector4 parallaxMapScaleOffset;

	[Token(Token = "0x4000288")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public ulong roughnessMapTextureID;

	[Token(Token = "0x4000289")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Vector4 roughnessMapScaleOffset;

	[Token(Token = "0x400028A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public uint layerCount;

	[Token(Token = "0x400028B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public ovrAvatarMaterialLayerState[] layers;

	[Token(Token = "0x6000242")]
	[Address(RVA = "0x1A39AA8", Offset = "0x1A39AA8", VA = "0x1A39AA8")]
	private static bool VectorEquals(Vector4 a, Vector4 b)
	{
		return default(bool);
	}

	[Token(Token = "0x6000243")]
	[Address(RVA = "0x9AC820", Offset = "0x9AC820", VA = "0x9AC820", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x6000244")]
	[Address(RVA = "0x9AC828", Offset = "0x9AC828", VA = "0x9AC828", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}
}
[Token(Token = "0x200008C")]
public struct ovrAvatarExpressiveParameters
{
	[Token(Token = "0x400028C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector4 irisColor;

	[Token(Token = "0x400028D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Vector4 scleraColor;

	[Token(Token = "0x400028E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector4 lashColor;

	[Token(Token = "0x400028F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector4 browColor;

	[Token(Token = "0x4000290")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector4 lipColor;

	[Token(Token = "0x4000291")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Vector4 teethColor;

	[Token(Token = "0x4000292")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Vector4 gumColor;

	[Token(Token = "0x4000293")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float browLashIntensity;

	[Token(Token = "0x4000294")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float lipSmoothness;

	[Token(Token = "0x6000245")]
	[Address(RVA = "0xC10284", Offset = "0xC10284", VA = "0xC10284")]
	private static bool VectorEquals(Vector4 a, Vector4 b)
	{
		return default(bool);
	}

	[Token(Token = "0x6000246")]
	[Address(RVA = "0x9783C8", Offset = "0x9783C8", VA = "0x9783C8", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x6000247")]
	[Address(RVA = "0x9783D0", Offset = "0x9783D0", VA = "0x9783D0", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}
}
[Token(Token = "0x200008D")]
public struct ovrAvatarPBSMaterialState
{
	[Token(Token = "0x4000295")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector4 baseColor;

	[Token(Token = "0x4000296")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong albedoTextureID;

	[Token(Token = "0x4000297")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector4 albedoMultiplier;

	[Token(Token = "0x4000298")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ulong metallicnessTextureID;

	[Token(Token = "0x4000299")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float glossinessScale;

	[Token(Token = "0x400029A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ulong normalTextureID;

	[Token(Token = "0x400029B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ulong heightTextureID;

	[Token(Token = "0x400029C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ulong occlusionTextureID;

	[Token(Token = "0x400029D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ulong emissionTextureID;

	[Token(Token = "0x400029E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector4 emissionMultiplier;

	[Token(Token = "0x400029F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public ulong detailMaskTextureID;

	[Token(Token = "0x40002A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ulong detailAlbedoTextureID;

	[Token(Token = "0x40002A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public ulong detailNormalTextureID;

	[Token(Token = "0x6000248")]
	[Address(RVA = "0x1A39FD4", Offset = "0x1A39FD4", VA = "0x1A39FD4")]
	private static bool VectorEquals(Vector4 a, Vector4 b)
	{
		return default(bool);
	}

	[Token(Token = "0x6000249")]
	[Address(RVA = "0x9AD0A8", Offset = "0x9AD0A8", VA = "0x9AD0A8", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x600024A")]
	[Address(RVA = "0x9AD0B0", Offset = "0x9AD0B0", VA = "0x9AD0B0", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}
}
[Token(Token = "0x200008E")]
public class OvrAvatarAssetMaterial : OvrAvatarAsset
{
	[Token(Token = "0x40002A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ovrAvatarMaterialState material;

	[Token(Token = "0x600024B")]
	[Address(RVA = "0xC68E34", Offset = "0xC68E34", VA = "0xC68E34")]
	public OvrAvatarAssetMaterial(ulong id, IntPtr mat)
	{
	}
}
[Token(Token = "0x200008F")]
public struct ovrAvatarSkinnedMeshPose
{
	[Token(Token = "0x40002A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint jointCount;

	[Token(Token = "0x40002A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ovrAvatarTransform[] jointTransform;

	[Token(Token = "0x40002A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int[] jointParents;

	[Token(Token = "0x40002A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr[] jointNames;
}
[Token(Token = "0x2000090")]
[Flags]
public enum ovrAvatarVisibilityFlags
{
	[Token(Token = "0x40002A8")]
	FirstPerson = 1,
	[Token(Token = "0x40002A9")]
	ThirdPerson = 2,
	[Token(Token = "0x40002AA")]
	SelfOccluding = 4
}
[Token(Token = "0x2000091")]
public struct ovrAvatarRenderPart_SkinnedMeshRender
{
	[Token(Token = "0x40002AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform localTransform;

	[Token(Token = "0x40002AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarVisibilityFlags visibilityMask;

	[Token(Token = "0x40002AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ulong meshAssetID;

	[Token(Token = "0x40002AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ovrAvatarMaterialState materialState;

	[Token(Token = "0x40002AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public ovrAvatarSkinnedMeshPose skinnedPose;
}
[Token(Token = "0x2000092")]
public struct ovrAvatarRenderPart_SkinnedMeshRenderPBS
{
	[Token(Token = "0x40002B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform localTransform;

	[Token(Token = "0x40002B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarVisibilityFlags visibilityMask;

	[Token(Token = "0x40002B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ulong meshAssetID;

	[Token(Token = "0x40002B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ulong albedoTextureAssetID;

	[Token(Token = "0x40002B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ulong surfaceTextureAssetID;

	[Token(Token = "0x40002B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ovrAvatarSkinnedMeshPose skinnedPose;
}
[Token(Token = "0x2000093")]
public struct ovrAvatarRenderPart_ProjectorRender
{
	[Token(Token = "0x40002B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform localTransform;

	[Token(Token = "0x40002B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public uint componentIndex;

	[Token(Token = "0x40002B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public uint renderPartIndex;

	[Token(Token = "0x40002B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ovrAvatarMaterialState materialState;
}
[Token(Token = "0x2000094")]
public struct ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2
{
	[Token(Token = "0x40002BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform localTransform;

	[Token(Token = "0x40002BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarVisibilityFlags visibilityMask;

	[Token(Token = "0x40002BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ulong meshAssetID;

	[Token(Token = "0x40002BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ovrAvatarPBSMaterialState materialState;

	[Token(Token = "0x40002BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public ovrAvatarSkinnedMeshPose skinnedPose;
}
[Token(Token = "0x2000095")]
public enum ovrAvatarHandGesture
{
	[Token(Token = "0x40002C0")]
	Default,
	[Token(Token = "0x40002C1")]
	GripSphere,
	[Token(Token = "0x40002C2")]
	GripCube,
	[Token(Token = "0x40002C3")]
	Count
}
[Token(Token = "0x2000096")]
public enum ovrAvatarBodyPartType
{
	[Token(Token = "0x40002C5")]
	Body,
	[Token(Token = "0x40002C6")]
	Clothing,
	[Token(Token = "0x40002C7")]
	Eyewear,
	[Token(Token = "0x40002C8")]
	Hair,
	[Token(Token = "0x40002C9")]
	Beard,
	[Token(Token = "0x40002CA")]
	Count
}
[Token(Token = "0x2000097")]
public struct ovrAvatarBlendShapeParams
{
	[Token(Token = "0x40002CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint blendShapeParamCount;

	[Token(Token = "0x40002CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float[] blendShapeParams;
}
[Token(Token = "0x2000098")]
internal struct ovrAvatarBlendShapeParams_Offsets
{
	[Token(Token = "0x40002CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int blendShapeParamCount;

	[Token(Token = "0x40002CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long blendShapeParams;
}
[Token(Token = "0x2000099")]
public struct ovrAvatarVisemes
{
	[Token(Token = "0x40002CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint visemeParamCount;

	[Token(Token = "0x40002D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float[] visemeParams;
}
[Token(Token = "0x200009A")]
internal struct ovrAvatarVisemes_Offsets
{
	[Token(Token = "0x40002D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int visemeParamCount;

	[Token(Token = "0x40002D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long visemeParams;
}
[Token(Token = "0x200009B")]
public enum ovrAvatarGazeTargetType
{
	[Token(Token = "0x40002D4")]
	AvatarHead,
	[Token(Token = "0x40002D5")]
	AvatarHand,
	[Token(Token = "0x40002D6")]
	Object,
	[Token(Token = "0x40002D7")]
	ObjectStatic,
	[Token(Token = "0x40002D8")]
	Count
}
[Token(Token = "0x200009C")]
public struct ovrAvatarGazeTarget
{
	[Token(Token = "0x40002D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint id;

	[Token(Token = "0x40002DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public UnityEngine.Vector3 worldPosition;

	[Token(Token = "0x40002DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ovrAvatarGazeTargetType type;
}
[Token(Token = "0x200009D")]
internal struct ovrAvatarGazeTarget_Offsets
{
	[Token(Token = "0x40002DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int id;

	[Token(Token = "0x40002DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static int worldPosition;

	[Token(Token = "0x40002DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int type;
}
[Token(Token = "0x200009E")]
public struct ovrAvatarGazeTargets
{
	[Token(Token = "0x40002DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint targetCount;

	[Token(Token = "0x40002E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ovrAvatarGazeTarget[] targets;
}
[Token(Token = "0x200009F")]
internal struct ovrAvatarGazeTargets_Offsets
{
	[Token(Token = "0x40002E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int targetCount;

	[Token(Token = "0x40002E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long targets;
}
[Token(Token = "0x20000A0")]
public enum ovrAvatarLightType
{
	[Token(Token = "0x40002E4")]
	Point,
	[Token(Token = "0x40002E5")]
	Direction,
	[Token(Token = "0x40002E6")]
	Spot,
	[Token(Token = "0x40002E7")]
	Count
}
[Token(Token = "0x20000A1")]
public struct ovrAvatarLight
{
	[Token(Token = "0x40002E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint id;

	[Token(Token = "0x40002E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public ovrAvatarLightType type;

	[Token(Token = "0x40002EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float intensity;

	[Token(Token = "0x40002EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public UnityEngine.Vector3 worldDirection;

	[Token(Token = "0x40002EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UnityEngine.Vector3 worldPosition;

	[Token(Token = "0x40002ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float range;

	[Token(Token = "0x40002EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float spotAngleDeg;
}
[Token(Token = "0x20000A2")]
internal struct ovrAvatarLight_Offsets
{
	[Token(Token = "0x40002EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static long id;

	[Token(Token = "0x40002F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long type;

	[Token(Token = "0x40002F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static long intensity;

	[Token(Token = "0x40002F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static long worldDirection;

	[Token(Token = "0x40002F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static long worldPosition;

	[Token(Token = "0x40002F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static long range;

	[Token(Token = "0x40002F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static long spotAngleDeg;
}
[Token(Token = "0x20000A3")]
public struct ovrAvatarLights
{
	[Token(Token = "0x40002F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float ambientIntensity;

	[Token(Token = "0x40002F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public uint lightCount;

	[Token(Token = "0x40002F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ovrAvatarLight[] lights;
}
[Token(Token = "0x20000A4")]
internal struct ovrAvatarLights_Offsets
{
	[Token(Token = "0x40002F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static long ambientIntensity;

	[Token(Token = "0x40002FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long lightCount;

	[Token(Token = "0x40002FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static long lights;
}
[Token(Token = "0x20000A5")]
[Flags]
public enum ovrAvatarDebugContext : uint
{
	[Token(Token = "0x40002FD")]
	None = 0u,
	[Token(Token = "0x40002FE")]
	GazeTarget = 1u,
	[Token(Token = "0x40002FF")]
	Any = uint.MaxValue
}
[Token(Token = "0x20000A6")]
public struct ovrAvatarDebugLine
{
	[Token(Token = "0x4000300")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public UnityEngine.Vector3 startPoint;

	[Token(Token = "0x4000301")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public UnityEngine.Vector3 endPoint;

	[Token(Token = "0x4000302")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UnityEngine.Vector3 color;

	[Token(Token = "0x4000303")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public ovrAvatarDebugContext context;

	[Token(Token = "0x4000304")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public IntPtr text;
}
[Token(Token = "0x20000A7")]
public struct ovrAvatarDebugTransform
{
	[Token(Token = "0x4000305")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform transform;

	[Token(Token = "0x4000306")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarDebugContext context;

	[Token(Token = "0x4000307")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public IntPtr text;
}
[Token(Token = "0x20000A8")]
public delegate void specificationCallback(IntPtr specification);
[Token(Token = "0x20000A9")]
public delegate void assetLoadedCallback(OvrAvatarAsset asset);
[Token(Token = "0x20000AA")]
public delegate void combinedMeshLoadedCallback(IntPtr asset);
[Token(Token = "0x20000AB")]
public class OvrAvatarSDKManager : MonoBehaviour
{
	[Token(Token = "0x200063F")]
	public struct AvatarSpecRequestParams
	{
		[Token(Token = "0x40020A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ulong _userId;

		[Token(Token = "0x40020AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public specificationCallback _callback;

		[Token(Token = "0x40020AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool _useCombinedMesh;

		[Token(Token = "0x40020AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public ovrAvatarAssetLevelOfDetail _lod;

		[Token(Token = "0x40020AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool _forceMobileTextureFormat;

		[Token(Token = "0x40020AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public ovrAvatarLookAndFeelVersion _lookVersion;

		[Token(Token = "0x40020AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ovrAvatarLookAndFeelVersion _fallbackVersion;

		[Token(Token = "0x40020B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool _enableExpressive;

		[Token(Token = "0x600272E")]
		[Address(RVA = "0x9797CC", Offset = "0x9797CC", VA = "0x9797CC")]
		public AvatarSpecRequestParams(ulong userId, specificationCallback callback, bool useCombinedMesh, ovrAvatarAssetLevelOfDetail lod, bool forceMobileTextureFormat, ovrAvatarLookAndFeelVersion lookVersion, ovrAvatarLookAndFeelVersion fallbackVersion, bool enableExpressive)
		{
		}
	}

	[Token(Token = "0x4000308")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static OvrAvatarSDKManager _instance;

	[Token(Token = "0x4000309")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool initialized;

	[Token(Token = "0x400030A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Dictionary<ulong, HashSet<specificationCallback>> specificationCallbacks;

	[Token(Token = "0x400030B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<ulong, HashSet<assetLoadedCallback>> assetLoadedCallbacks;

	[Token(Token = "0x400030C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Dictionary<IntPtr, combinedMeshLoadedCallback> combinedMeshLoadedCallbacks;

	[Token(Token = "0x400030D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Dictionary<ulong, OvrAvatarAsset> assetCache;

	[Token(Token = "0x400030E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private OvrAvatarTextureCopyManager textureCopyManager;

	[Token(Token = "0x400030F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ovrAvatarLogLevel LoggingLevel;

	[Token(Token = "0x4000310")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Queue<AvatarSpecRequestParams> avatarSpecificationQueue;

	[Token(Token = "0x4000311")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<int> loadingAvatars;

	[Token(Token = "0x4000312")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool avatarSpecRequestAvailable;

	[Token(Token = "0x4000313")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float lastDispatchedAvatarSpecRequestTime;

	[Token(Token = "0x4000314")]
	private const float AVATAR_SPEC_REQUEST_TIMEOUT = 5f;

	[Token(Token = "0x17000034")]
	public static OvrAvatarSDKManager Instance
	{
		[Token(Token = "0x600025E")]
		[Address(RVA = "0xC6C29C", Offset = "0xC6C29C", VA = "0xC6C29C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600025F")]
	[Address(RVA = "0xC74048", Offset = "0xC74048", VA = "0xC74048")]
	private bool Initialize()
	{
		return default(bool);
	}

	[Token(Token = "0x6000260")]
	[Address(RVA = "0xC74294", Offset = "0xC74294", VA = "0xC74294")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000261")]
	[Address(RVA = "0xC74308", Offset = "0xC74308", VA = "0xC74308")]
	private void Update()
	{
	}

	[Token(Token = "0x6000262")]
	[Address(RVA = "0xC74B4C", Offset = "0xC74B4C", VA = "0xC74B4C")]
	public bool IsAvatarSpecWaiting()
	{
		return default(bool);
	}

	[Token(Token = "0x6000263")]
	[Address(RVA = "0xC74BA4", Offset = "0xC74BA4", VA = "0xC74BA4")]
	public bool IsAvatarLoading()
	{
		return default(bool);
	}

	[Token(Token = "0x6000264")]
	[Address(RVA = "0xC74BFC", Offset = "0xC74BFC", VA = "0xC74BFC")]
	public void AddLoadingAvatar(int gameobjectID)
	{
	}

	[Token(Token = "0x6000265")]
	[Address(RVA = "0xC74C64", Offset = "0xC74C64", VA = "0xC74C64")]
	public void RemoveLoadingAvatar(int gameobjectID)
	{
	}

	[Token(Token = "0x6000266")]
	[Address(RVA = "0xC74CCC", Offset = "0xC74CCC", VA = "0xC74CCC")]
	public void RequestAvatarSpecification(AvatarSpecRequestParams avatarSpecRequest)
	{
	}

	[Token(Token = "0x6000267")]
	[Address(RVA = "0xC74984", Offset = "0xC74984", VA = "0xC74984")]
	private void DispatchAvatarSpecificationRequest(AvatarSpecRequestParams avatarSpecRequest)
	{
	}

	[Token(Token = "0x6000268")]
	[Address(RVA = "0xC71F34", Offset = "0xC71F34", VA = "0xC71F34")]
	public void BeginLoadingAsset(ulong assetId, ovrAvatarAssetLevelOfDetail lod, assetLoadedCallback callback)
	{
	}

	[Token(Token = "0x6000269")]
	[Address(RVA = "0xC74DAC", Offset = "0xC74DAC", VA = "0xC74DAC")]
	public void RegisterCombinedMeshCallback(IntPtr sdkAvatar, combinedMeshLoadedCallback callback)
	{
	}

	[Token(Token = "0x600026A")]
	[Address(RVA = "0xC6C42C", Offset = "0xC6C42C", VA = "0xC6C42C")]
	public OvrAvatarAsset GetAsset(ulong assetId)
	{
		return null;
	}

	[Token(Token = "0x600026B")]
	[Address(RVA = "0xC74E8C", Offset = "0xC74E8C", VA = "0xC74E8C")]
	public void DeleteAssetFromCache(ulong assetId)
	{
	}

	[Token(Token = "0x600026C")]
	[Address(RVA = "0xC74248", Offset = "0xC74248", VA = "0xC74248")]
	public string GetAppId()
	{
		return null;
	}

	[Token(Token = "0x600026D")]
	[Address(RVA = "0xC6F014", Offset = "0xC6F014", VA = "0xC6F014")]
	public OvrAvatarTextureCopyManager GetTextureCopyManager()
	{
		return null;
	}

	[Token(Token = "0x600026E")]
	[Address(RVA = "0xC74F64", Offset = "0xC74F64", VA = "0xC74F64")]
	public OvrAvatarSDKManager()
	{
	}
}
[Token(Token = "0x20000AC")]
public sealed class OvrAvatarSettings : ScriptableObject
{
	[Token(Token = "0x4000315")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static OvrAvatarSettings instance;

	[Token(Token = "0x4000316")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private string ovrAppID;

	[Token(Token = "0x4000317")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private string ovrGearAppID;

	[Token(Token = "0x17000035")]
	public static string AppID
	{
		[Token(Token = "0x600026F")]
		[Address(RVA = "0xC74F24", Offset = "0xC74F24", VA = "0xC74F24")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000270")]
		[Address(RVA = "0xC750BC", Offset = "0xC750BC", VA = "0xC750BC")]
		set
		{
		}
	}

	[Token(Token = "0x17000036")]
	public static string MobileAppID
	{
		[Token(Token = "0x6000271")]
		[Address(RVA = "0xC74F44", Offset = "0xC74F44", VA = "0xC74F44")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000272")]
		[Address(RVA = "0xC750E8", Offset = "0xC750E8", VA = "0xC750E8")]
		set
		{
		}
	}

	[Token(Token = "0x17000037")]
	public static OvrAvatarSettings Instance
	{
		[Token(Token = "0x6000273")]
		[Address(RVA = "0xC74FA8", Offset = "0xC74FA8", VA = "0xC74FA8")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000274")]
		[Address(RVA = "0xC75114", Offset = "0xC75114", VA = "0xC75114")]
		set
		{
		}
	}

	[Token(Token = "0x6000275")]
	[Address(RVA = "0xC75168", Offset = "0xC75168", VA = "0xC75168")]
	public OvrAvatarSettings()
	{
	}
}
[Token(Token = "0x20000AD")]
public class OvrAvatarSkinnedMeshRenderComponent : OvrAvatarRenderComponent
{
	[Token(Token = "0x4000318")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Shader surface;

	[Token(Token = "0x4000319")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Shader surfaceSelfOccluding;

	[Token(Token = "0x400031A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool previouslyActive;

	[Token(Token = "0x6000276")]
	[Address(RVA = "0xC76844", Offset = "0xC76844", VA = "0xC76844")]
	internal void Initialize(ovrAvatarRenderPart_SkinnedMeshRender skinnedMeshRender, Shader surface, Shader surfaceSelfOccluding, int thirdPersonLayer, int firstPersonLayer)
	{
	}

	[Token(Token = "0x6000277")]
	[Address(RVA = "0xC6B3E8", Offset = "0xC6B3E8", VA = "0xC6B3E8")]
	public void UpdateSkinnedMeshRender(OvrAvatarComponent component, OvrAvatar avatar, IntPtr renderPart)
	{
	}

	[Token(Token = "0x6000278")]
	[Address(RVA = "0xC76988", Offset = "0xC76988", VA = "0xC76988")]
	private void UpdateMeshMaterial(ovrAvatarVisibilityFlags visibilityMask, SkinnedMeshRenderer rootMesh)
	{
	}

	[Token(Token = "0x6000279")]
	[Address(RVA = "0xC76AE8", Offset = "0xC76AE8", VA = "0xC76AE8")]
	public OvrAvatarSkinnedMeshRenderComponent()
	{
	}
}
[Token(Token = "0x20000AE")]
public class OvrAvatarSkinnedMeshRenderPBSComponent : OvrAvatarRenderComponent
{
	[Token(Token = "0x400031B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	private bool isMaterialInitilized;

	[Token(Token = "0x600027A")]
	[Address(RVA = "0xC76AF8", Offset = "0xC76AF8", VA = "0xC76AF8")]
	internal void Initialize(ovrAvatarRenderPart_SkinnedMeshRenderPBS skinnedMeshRenderPBS, Shader shader, int thirdPersonLayer, int firstPersonLayer)
	{
	}

	[Token(Token = "0x600027B")]
	[Address(RVA = "0xC6B610", Offset = "0xC6B610", VA = "0xC6B610")]
	internal void UpdateSkinnedMeshRenderPBS(OvrAvatar avatar, IntPtr renderPart, Material mat)
	{
	}

	[Token(Token = "0x600027C")]
	[Address(RVA = "0xC76C28", Offset = "0xC76C28", VA = "0xC76C28")]
	public OvrAvatarSkinnedMeshRenderPBSComponent()
	{
	}
}
[Token(Token = "0x20000AF")]
public class OvrAvatarSkinnedMeshPBSV2RenderComponent : OvrAvatarRenderComponent
{
	[Token(Token = "0x400031C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private OvrAvatarMaterialManager avatarMaterialManager;

	[Token(Token = "0x400031D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool previouslyActive;

	[Token(Token = "0x400031E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	private bool isCombinedMaterial;

	[Token(Token = "0x400031F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private ovrAvatarExpressiveParameters ExpressiveParameters;

	[Token(Token = "0x4000320")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private bool EnableExpressive;

	[Token(Token = "0x4000321")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private int blendShapeCount;

	[Token(Token = "0x4000322")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private ovrAvatarBlendShapeParams blendShapeParams;

	[Token(Token = "0x4000323")]
	private const string MAIN_MATERIAL_NAME = "main_material";

	[Token(Token = "0x4000324")]
	private const string EYE_MATERIAL_NAME = "eye_material";

	[Token(Token = "0x4000325")]
	private const string DEFAULT_MATERIAL_NAME = "_material";

	[Token(Token = "0x600027D")]
	[Address(RVA = "0xC751C0", Offset = "0xC751C0", VA = "0xC751C0")]
	internal void Initialize(IntPtr renderPart, ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2 skinnedMeshRender, OvrAvatarMaterialManager materialManager, int thirdPersonLayer, int firstPersonLayer, bool combinedMesh, ovrAvatarAssetLevelOfDetail lod, bool assignExpressiveParams, OvrAvatar avatar, bool isControllerModel)
	{
	}

	[Token(Token = "0x600027E")]
	[Address(RVA = "0xC6B7A8", Offset = "0xC6B7A8", VA = "0xC6B7A8")]
	public void UpdateSkinnedMeshRender(OvrAvatarComponent component, OvrAvatar avatar, IntPtr renderPart)
	{
	}

	[Token(Token = "0x600027F")]
	[Address(RVA = "0xC76000", Offset = "0xC76000", VA = "0xC76000")]
	private void InitializeSingleComponentMaterial(IntPtr renderPart, int lodIndex)
	{
	}

	[Token(Token = "0x6000280")]
	[Address(RVA = "0xC75794", Offset = "0xC75794", VA = "0xC75794")]
	private void InitializeCombinedMaterial(IntPtr renderPart, int lodIndex)
	{
	}

	[Token(Token = "0x6000281")]
	[Address(RVA = "0xC75564", Offset = "0xC75564", VA = "0xC75564")]
	private void SetMaterialTransparent(Material mat)
	{
	}

	[Token(Token = "0x6000282")]
	[Address(RVA = "0xC75678", Offset = "0xC75678", VA = "0xC75678")]
	private void SetMaterialOpaque(Material mat)
	{
	}

	[Token(Token = "0x6000283")]
	[Address(RVA = "0xC76834", Offset = "0xC76834", VA = "0xC76834")]
	public OvrAvatarSkinnedMeshPBSV2RenderComponent()
	{
	}
}
[Token(Token = "0x20000B0")]
public class OvrAvatarTextureCopyManager : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000640")]
	public struct FallbackTextureSet
	{
		[Token(Token = "0x40020B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool Initialized;

		[Token(Token = "0x40020B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Texture2D DiffuseRoughness;

		[Token(Token = "0x40020B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Texture2D Normal;
	}

	[Token(Token = "0x2000641")]
	private struct CopyTextureParams
	{
		[Token(Token = "0x40020B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Texture Src;

		[Token(Token = "0x40020B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Texture Dst;

		[Token(Token = "0x40020B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int Mip;

		[Token(Token = "0x40020B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int SrcSize;

		[Token(Token = "0x40020B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int DstElement;

		[Token(Token = "0x600272F")]
		[Address(RVA = "0x979834", Offset = "0x979834", VA = "0x979834")]
		public CopyTextureParams(Texture src, Texture dst, int mip, int srcSize, int dstElement)
		{
		}
	}

	[Token(Token = "0x2000642")]
	public struct TextureSet
	{
		[Token(Token = "0x40020B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Dictionary<ulong, bool> TextureIDSingleMeshPair;

		[Token(Token = "0x40020BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public bool IsProcessed;

		[Token(Token = "0x6002730")]
		[Address(RVA = "0x9798BC", Offset = "0x9798BC", VA = "0x9798BC")]
		public TextureSet(Dictionary<ulong, bool> textureIDSingleMeshPair, bool isProcessed)
		{
		}
	}

	[Token(Token = "0x2000643")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B79CC", Offset = "0x8B79CC")]
	private sealed class <DeleteTextureSetCoroutine>d__24 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40020BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40020BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40020BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TextureSet textureSetToDelete;

		[Token(Token = "0x40020BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public OvrAvatarTextureCopyManager <>4__this;

		[Token(Token = "0x40020BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int gameobjectID;

		[Token(Token = "0x17000454")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002734")]
			[Address(RVA = "0xC78020", Offset = "0xC78020", VA = "0xC78020", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000455")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002736")]
			[Address(RVA = "0xC78088", Offset = "0xC78088", VA = "0xC78088", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002731")]
		[Address(RVA = "0xC779E4", Offset = "0xC779E4", VA = "0xC779E4")]
		[DebuggerHidden]
		public <DeleteTextureSetCoroutine>d__24(int <>1__state)
		{
		}

		[Token(Token = "0x6002732")]
		[Address(RVA = "0xC77B4C", Offset = "0xC77B4C", VA = "0xC77B4C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002733")]
		[Address(RVA = "0xC77B50", Offset = "0xC77B50", VA = "0xC77B50", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002735")]
		[Address(RVA = "0xC78028", Offset = "0xC78028", VA = "0xC78028", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000326")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public FallbackTextureSet[] FallbackTextureSets;

	[Token(Token = "0x4000327")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Queue<CopyTextureParams> texturesToCopy;

	[Token(Token = "0x4000328")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<int, TextureSet> textureSets;

	[Token(Token = "0x4000329")]
	private const int TEXTURES_TO_COPY_QUEUE_CAPACITY = 256;

	[Token(Token = "0x400032A")]
	private const int COPIES_PER_FRAME = 8;

	[Token(Token = "0x400032B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly string[] FALLBACK_TEXTURE_PATHS_DIFFUSE_ROUGHNESS;

	[Token(Token = "0x400032C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly string[] FALLBACK_TEXTURE_PATHS_NORMAL;

	[Token(Token = "0x400032D")]
	private const string PATH_HIGHEST_DIFFUSE_ROUGHNESS = "FallbackTextures/fallback_diffuse_roughness_2048";

	[Token(Token = "0x400032E")]
	private const string PATH_MEDIUM_DIFFUSE_ROUGHNESS = "FallbackTextures/fallback_diffuse_roughness_1024";

	[Token(Token = "0x400032F")]
	private const string PATH_LOWEST_DIFFUSE_ROUGHNESS = "FallbackTextures/fallback_diffuse_roughness_256";

	[Token(Token = "0x4000330")]
	private const string PATH_HIGHEST_NORMAL = "FallbackTextures/fallback_normal_2048";

	[Token(Token = "0x4000331")]
	private const string PATH_MEDIUM_NORMAL = "FallbackTextures/fallback_normal_1024";

	[Token(Token = "0x4000332")]
	private const string PATH_LOWEST_NORMAL = "FallbackTextures/fallback_normal_256";

	[Token(Token = "0x4000333")]
	private const int GPU_TEXTURE_COPY_WAIT_TIME = 10;

	[Token(Token = "0x6000284")]
	[Address(RVA = "0xC773DC", Offset = "0xC773DC", VA = "0xC773DC")]
	public OvrAvatarTextureCopyManager()
	{
	}

	[Token(Token = "0x6000285")]
	[Address(RVA = "0xC77738", Offset = "0xC77738", VA = "0xC77738")]
	public void Update()
	{
	}

	[Token(Token = "0x6000286")]
	[Address(RVA = "0xC71144", Offset = "0xC71144", VA = "0xC71144")]
	public int GetTextureCount()
	{
		return default(int);
	}

	[Token(Token = "0x6000287")]
	[Address(RVA = "0xC6F408", Offset = "0xC6F408", VA = "0xC6F408")]
	public void CopyTexture(Texture src, Texture dst, int mipLevel, int mipSize, int dstElement, bool useQueue = true)
	{
	}

	[Token(Token = "0x6000288")]
	[Address(RVA = "0xC778A0", Offset = "0xC778A0", VA = "0xC778A0")]
	private void CopyTexture(CopyTextureParams copyTextureParams)
	{
	}

	[Token(Token = "0x6000289")]
	[Address(RVA = "0xC6F098", Offset = "0xC6F098", VA = "0xC6F098")]
	public void AddTextureIDToTextureSet(int gameobjectID, ulong textureID, bool isSingleMesh)
	{
	}

	[Token(Token = "0x600028A")]
	[Address(RVA = "0xC6F27C", Offset = "0xC6F27C", VA = "0xC6F27C")]
	public void DeleteTextureSet(int gameobjectID)
	{
	}

	[Token(Token = "0x600028B")]
	[Address(RVA = "0xC77950", Offset = "0xC77950", VA = "0xC77950")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C23A4", Offset = "0x8C23A4")]
	private IEnumerator DeleteTextureSetCoroutine(TextureSet textureSetToDelete, int gameobjectID)
	{
		return null;
	}

	[Token(Token = "0x600028C")]
	[Address(RVA = "0xC74D60", Offset = "0xC74D60", VA = "0xC74D60")]
	public void CheckFallbackTextureSet(ovrAvatarAssetLevelOfDetail lod)
	{
	}

	[Token(Token = "0x600028D")]
	[Address(RVA = "0xC77A10", Offset = "0xC77A10", VA = "0xC77A10")]
	private void InitFallbackTextureSet(ovrAvatarAssetLevelOfDetail lod)
	{
	}
}
[Token(Token = "0x20000B1")]
public class OvrAvatarTouchController : OvrAvatarComponent
{
	[Token(Token = "0x4000334")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool isLeftHand;

	[Token(Token = "0x4000335")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private ovrAvatarControllerComponent component;

	[Token(Token = "0x600028E")]
	[Address(RVA = "0xC78090", Offset = "0xC78090", VA = "0xC78090")]
	private void Update()
	{
	}

	[Token(Token = "0x600028F")]
	[Address(RVA = "0xC781EC", Offset = "0xC781EC", VA = "0xC781EC")]
	public OvrAvatarTouchController()
	{
	}
}
[Token(Token = "0x20000B2")]
public class EnableSwitch : MonoBehaviour
{
	[Token(Token = "0x4000336")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] SwitchTargets;

	[Token(Token = "0x6000290")]
	public bool SetActive<T>(int target) where T : MonoBehaviour
	{
		return default(bool);
	}

	[Token(Token = "0x6000291")]
	[Address(RVA = "0xBF3E6C", Offset = "0xBF3E6C", VA = "0xBF3E6C")]
	public EnableSwitch()
	{
	}
}
[Token(Token = "0x20000B3")]
public class LipSyncDemo_Control : MonoBehaviour
{
	[Token(Token = "0x4000337")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B9BD0", Offset = "0x8B9BD0")]
	public KeyCode rotateLeftKey;

	[Token(Token = "0x4000338")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B9C08", Offset = "0x8B9C08")]
	public KeyCode rotateRightKey;

	[Token(Token = "0x4000339")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B9C40", Offset = "0x8B9C40")]
	public KeyCode resetRotationKey;

	[Token(Token = "0x400033A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float resetRotation;

	[Token(Token = "0x400033B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float rotationAmount;

	[Token(Token = "0x400033C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float rotationMax;

	[Token(Token = "0x6000292")]
	[Address(RVA = "0xAE3880", Offset = "0xAE3880", VA = "0xAE3880")]
	private void Start()
	{
	}

	[Token(Token = "0x6000293")]
	[Address(RVA = "0xAE3884", Offset = "0xAE3884", VA = "0xAE3884")]
	private void Update()
	{
	}

	[Token(Token = "0x6000294")]
	[Address(RVA = "0xAE3904", Offset = "0xAE3904", VA = "0xAE3904")]
	private void RotateObject(float amountDegrees, bool absolute = false)
	{
	}

	[Token(Token = "0x6000295")]
	[Address(RVA = "0xAE3AF0", Offset = "0xAE3AF0", VA = "0xAE3AF0")]
	public LipSyncDemo_Control()
	{
	}
}
[Token(Token = "0x20000B4")]
public class LipSyncDemo_SetCurrentTarget : MonoBehaviour
{
	[Token(Token = "0x400033D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public EnableSwitch[] SwitchTargets;

	[Token(Token = "0x400033E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int targetSet;

	[Token(Token = "0x400033F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int maxTarget;

	[Token(Token = "0x4000340")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool XRButtonBeingPressed;

	[Token(Token = "0x6000296")]
	[Address(RVA = "0xAE3B20", Offset = "0xAE3B20", VA = "0xAE3B20")]
	private void Start()
	{
	}

	[Token(Token = "0x6000297")]
	[Address(RVA = "0xAE3C24", Offset = "0xAE3C24", VA = "0xAE3C24")]
	private void Update()
	{
	}

	[Token(Token = "0x6000298")]
	[Address(RVA = "0xAE3F38", Offset = "0xAE3F38", VA = "0xAE3F38")]
	private void SetCurrentTarget()
	{
	}

	[Token(Token = "0x6000299")]
	[Address(RVA = "0xAE41C4", Offset = "0xAE41C4", VA = "0xAE41C4")]
	private void LocalTouchEventCallback(OVRTouchpad.TouchEvent touchEvent)
	{
	}

	[Token(Token = "0x600029A")]
	[Address(RVA = "0xAE4214", Offset = "0xAE4214", VA = "0xAE4214")]
	public LipSyncDemo_SetCurrentTarget()
	{
	}
}
[Token(Token = "0x20000B5")]
public class OVRLipSyncDebugConsole : MonoBehaviour
{
	[Token(Token = "0x4000341")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ArrayList messages;

	[Token(Token = "0x4000342")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int maxMessages;

	[Token(Token = "0x4000343")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text textMsg;

	[Token(Token = "0x4000344")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static OVRLipSyncDebugConsole s_Instance;

	[Token(Token = "0x4000345")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool clearTimeoutOn;

	[Token(Token = "0x4000346")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float clearTimeout;

	[Token(Token = "0x17000038")]
	public static OVRLipSyncDebugConsole instance
	{
		[Token(Token = "0x600029B")]
		[Address(RVA = "0xD1B24C", Offset = "0xD1B24C", VA = "0xD1B24C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600029C")]
	[Address(RVA = "0xD1B504", Offset = "0xD1B504", VA = "0xD1B504")]
	private void Awake()
	{
	}

	[Token(Token = "0x600029D")]
	[Address(RVA = "0xD1B640", Offset = "0xD1B640", VA = "0xD1B640")]
	private void Update()
	{
	}

	[Token(Token = "0x600029E")]
	[Address(RVA = "0xD1B574", Offset = "0xD1B574", VA = "0xD1B574")]
	public void Init()
	{
	}

	[Token(Token = "0x600029F")]
	[Address(RVA = "0xD1B740", Offset = "0xD1B740", VA = "0xD1B740")]
	public static void Log(string message)
	{
	}

	[Token(Token = "0x60002A0")]
	[Address(RVA = "0xD1B8B0", Offset = "0xD1B8B0", VA = "0xD1B8B0")]
	public static void Log(string message, Color color)
	{
	}

	[Token(Token = "0x60002A1")]
	[Address(RVA = "0xD1B6D8", Offset = "0xD1B6D8", VA = "0xD1B6D8")]
	public static void Clear()
	{
	}

	[Token(Token = "0x60002A2")]
	[Address(RVA = "0xD1B98C", Offset = "0xD1B98C", VA = "0xD1B98C")]
	public static void ClearTimeout(float timeToClear)
	{
	}

	[Token(Token = "0x60002A3")]
	[Address(RVA = "0xD1B7C0", Offset = "0xD1B7C0", VA = "0xD1B7C0")]
	public void AddMessage(string message, Color color)
	{
	}

	[Token(Token = "0x60002A4")]
	[Address(RVA = "0xD1B950", Offset = "0xD1B950", VA = "0xD1B950")]
	public void ClearMessages()
	{
	}

	[Token(Token = "0x60002A5")]
	[Address(RVA = "0xD1BA0C", Offset = "0xD1BA0C", VA = "0xD1BA0C")]
	public void SetClearTimeout(float timeout)
	{
	}

	[Token(Token = "0x60002A6")]
	[Address(RVA = "0xD1BC00", Offset = "0xD1BC00", VA = "0xD1BC00")]
	private void Prune()
	{
	}

	[Token(Token = "0x60002A7")]
	[Address(RVA = "0xD1BA1C", Offset = "0xD1BA1C", VA = "0xD1BA1C")]
	private void Display()
	{
	}

	[Token(Token = "0x60002A8")]
	[Address(RVA = "0xD1BCB0", Offset = "0xD1BCB0", VA = "0xD1BCB0")]
	public OVRLipSyncDebugConsole()
	{
	}
}
[Token(Token = "0x20000B6")]
public class OVRNamedArrayAttribute : PropertyAttribute
{
	[Token(Token = "0x4000347")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public readonly string[] names;

	[Token(Token = "0x60002AA")]
	[Address(RVA = "0xD1CFD4", Offset = "0xD1CFD4", VA = "0xD1CFD4")]
	public OVRNamedArrayAttribute(string[] names)
	{
	}
}
[Token(Token = "0x20000B7")]
public static class OVRTouchpad
{
	[Token(Token = "0x2000644")]
	public enum TouchEvent
	{
		[Token(Token = "0x40020C1")]
		SingleTap,
		[Token(Token = "0x40020C2")]
		DoubleTap,
		[Token(Token = "0x40020C3")]
		Left,
		[Token(Token = "0x40020C4")]
		Right,
		[Token(Token = "0x40020C5")]
		Up,
		[Token(Token = "0x40020C6")]
		Down
	}

	[Token(Token = "0x2000645")]
	public delegate void OVRTouchpadCallback<TouchEvent>(TouchEvent arg);

	[Token(Token = "0x4000348")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static UnityEngine.Vector3 moveAmountMouse;

	[Token(Token = "0x4000349")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static float minMovMagnitudeMouse;

	[Token(Token = "0x400034A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static Delegate touchPadCallbacks;

	[Token(Token = "0x400034B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static OVRTouchpadHelper touchpadHelper;

	[Token(Token = "0x60002AB")]
	[Address(RVA = "0xD239E4", Offset = "0xD239E4", VA = "0xD239E4")]
	public static void Create()
	{
	}

	[Token(Token = "0x60002AC")]
	[Address(RVA = "0xD239E8", Offset = "0xD239E8", VA = "0xD239E8")]
	public static void Update()
	{
	}

	[Token(Token = "0x60002AD")]
	[Address(RVA = "0xD23D08", Offset = "0xD23D08", VA = "0xD23D08")]
	public static void OnDisable()
	{
	}

	[Token(Token = "0x60002AE")]
	[Address(RVA = "0xD23B58", Offset = "0xD23B58", VA = "0xD23B58")]
	private static void HandleInputMouse(ref UnityEngine.Vector3 move)
	{
	}

	[Token(Token = "0x60002AF")]
	[Address(RVA = "0xD23D0C", Offset = "0xD23D0C", VA = "0xD23D0C")]
	public static void AddListener(OVRTouchpadCallback<TouchEvent> handler)
	{
	}
}
[Token(Token = "0x20000B8")]
public sealed class OVRTouchpadHelper : MonoBehaviour
{
	[Token(Token = "0x60002B1")]
	[Address(RVA = "0xD23E78", Offset = "0xD23E78", VA = "0xD23E78")]
	private void Awake()
	{
	}

	[Token(Token = "0x60002B2")]
	[Address(RVA = "0xD23EF4", Offset = "0xD23EF4", VA = "0xD23EF4")]
	private void Start()
	{
	}

	[Token(Token = "0x60002B3")]
	[Address(RVA = "0xD23F8C", Offset = "0xD23F8C", VA = "0xD23F8C")]
	private void Update()
	{
	}

	[Token(Token = "0x60002B4")]
	[Address(RVA = "0xD23FE8", Offset = "0xD23FE8", VA = "0xD23FE8")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x60002B5")]
	[Address(RVA = "0xD2404C", Offset = "0xD2404C", VA = "0xD2404C")]
	private void LocalTouchEventCallback(OVRTouchpad.TouchEvent touchEvent)
	{
	}

	[Token(Token = "0x60002B6")]
	[Address(RVA = "0xD24050", Offset = "0xD24050", VA = "0xD24050")]
	public OVRTouchpadHelper()
	{
	}
}
[Token(Token = "0x20000B9")]
public class OVRLipSync : MonoBehaviour
{
	[Token(Token = "0x2000646")]
	public enum Result
	{
		[Token(Token = "0x40020C8")]
		Success = 0,
		[Token(Token = "0x40020C9")]
		Unknown = -2200,
		[Token(Token = "0x40020CA")]
		CannotCreateContext = -2201,
		[Token(Token = "0x40020CB")]
		InvalidParam = -2202,
		[Token(Token = "0x40020CC")]
		BadSampleRate = -2203,
		[Token(Token = "0x40020CD")]
		MissingDLL = -2204,
		[Token(Token = "0x40020CE")]
		BadVersion = -2205,
		[Token(Token = "0x40020CF")]
		UndefinedFunction = -2206
	}

	[Token(Token = "0x2000647")]
	public enum AudioDataType
	{
		[Token(Token = "0x40020D1")]
		S16_Mono,
		[Token(Token = "0x40020D2")]
		S16_Stereo,
		[Token(Token = "0x40020D3")]
		F32_Mono,
		[Token(Token = "0x40020D4")]
		F32_Stereo
	}

	[Token(Token = "0x2000648")]
	public enum Viseme
	{
		[Token(Token = "0x40020D6")]
		sil,
		[Token(Token = "0x40020D7")]
		PP,
		[Token(Token = "0x40020D8")]
		FF,
		[Token(Token = "0x40020D9")]
		TH,
		[Token(Token = "0x40020DA")]
		DD,
		[Token(Token = "0x40020DB")]
		kk,
		[Token(Token = "0x40020DC")]
		CH,
		[Token(Token = "0x40020DD")]
		SS,
		[Token(Token = "0x40020DE")]
		nn,
		[Token(Token = "0x40020DF")]
		RR,
		[Token(Token = "0x40020E0")]
		aa,
		[Token(Token = "0x40020E1")]
		E,
		[Token(Token = "0x40020E2")]
		ih,
		[Token(Token = "0x40020E3")]
		oh,
		[Token(Token = "0x40020E4")]
		ou
	}

	[Token(Token = "0x2000649")]
	public enum Signals
	{
		[Token(Token = "0x40020E6")]
		VisemeOn,
		[Token(Token = "0x40020E7")]
		VisemeOff,
		[Token(Token = "0x40020E8")]
		VisemeAmount,
		[Token(Token = "0x40020E9")]
		VisemeSmoothing,
		[Token(Token = "0x40020EA")]
		LaughterAmount
	}

	[Token(Token = "0x200064A")]
	public enum ContextProviders
	{
		[Token(Token = "0x40020EC")]
		Original,
		[Token(Token = "0x40020ED")]
		Enhanced,
		[Token(Token = "0x40020EE")]
		Enhanced_with_Laughter
	}

	[Serializable]
	[Token(Token = "0x200064B")]
	public class Frame
	{
		[Token(Token = "0x40020EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int frameNumber;

		[Token(Token = "0x40020F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int frameDelay;

		[Token(Token = "0x40020F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float[] Visemes;

		[Token(Token = "0x40020F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float laughterScore;

		[Token(Token = "0x600273B")]
		[Address(RVA = "0x154EA44", Offset = "0x154EA44", VA = "0x154EA44")]
		public void CopyInput(Frame input)
		{
		}

		[Token(Token = "0x600273C")]
		[Address(RVA = "0x154EA9C", Offset = "0x154EA9C", VA = "0x154EA9C")]
		public void Reset()
		{
		}

		[Token(Token = "0x600273D")]
		[Address(RVA = "0x154EB2C", Offset = "0x154EB2C", VA = "0x154EB2C")]
		public Frame()
		{
		}
	}

	[Token(Token = "0x400034C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly int VisemeCount;

	[Token(Token = "0x400034D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static readonly int SignalCount;

	[Token(Token = "0x400034E")]
	public const string strOVRLS = "OVRLipSync";

	[Token(Token = "0x400034F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Result sInitialized;

	[Token(Token = "0x4000350")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static OVRLipSync sInstance;

	[PreserveSig]
	[Token(Token = "0x60002B7")]
	[Address(RVA = "0x154D3D8", Offset = "0x154D3D8", VA = "0x154D3D8")]
	private static extern int ovrLipSyncDll_Initialize(int samplerate, int buffersize);

	[PreserveSig]
	[Token(Token = "0x60002B8")]
	[Address(RVA = "0x154D468", Offset = "0x154D468", VA = "0x154D468")]
	private static extern void ovrLipSyncDll_Shutdown();

	[PreserveSig]
	[Token(Token = "0x60002B9")]
	[Address(RVA = "0x154D4D8", Offset = "0x154D4D8", VA = "0x154D4D8")]
	private static extern IntPtr ovrLipSyncDll_GetVersion(ref int Major, ref int Minor, ref int Patch);

	[PreserveSig]
	[Token(Token = "0x60002BA")]
	[Address(RVA = "0x154D56C", Offset = "0x154D56C", VA = "0x154D56C")]
	private static extern int ovrLipSyncDll_CreateContextEx(ref uint context, ContextProviders provider, int sampleRate, bool enableAcceleration);

	[PreserveSig]
	[Token(Token = "0x60002BB")]
	[Address(RVA = "0x154D614", Offset = "0x154D614", VA = "0x154D614")]
	private static extern int ovrLipSyncDll_CreateContextWithModelFile(ref uint context, ContextProviders provider, string modelPath, int sampleRate, bool enableAcceleration);

	[PreserveSig]
	[Token(Token = "0x60002BC")]
	[Address(RVA = "0x154D6E0", Offset = "0x154D6E0", VA = "0x154D6E0")]
	private static extern int ovrLipSyncDll_DestroyContext(uint context);

	[PreserveSig]
	[Token(Token = "0x60002BD")]
	[Address(RVA = "0x154D760", Offset = "0x154D760", VA = "0x154D760")]
	private static extern int ovrLipSyncDll_ResetContext(uint context);

	[PreserveSig]
	[Token(Token = "0x60002BE")]
	[Address(RVA = "0x154D7E0", Offset = "0x154D7E0", VA = "0x154D7E0")]
	private static extern int ovrLipSyncDll_SendSignal(uint context, Signals signal, int arg1, int arg2);

	[PreserveSig]
	[Token(Token = "0x60002BF")]
	[Address(RVA = "0x154D888", Offset = "0x154D888", VA = "0x154D888")]
	private static extern int ovrLipSyncDll_ProcessFrameEx(uint context, IntPtr audioBuffer, uint bufferSize, AudioDataType dataType, ref int frameNumber, ref int frameDelay, float[] visemes, int visemeCount, ref float laughterScore, float[] laughterCategories, int laughterCategoriesLength);

	[Token(Token = "0x60002C0")]
	[Address(RVA = "0x154D990", Offset = "0x154D990", VA = "0x154D990")]
	private void Awake()
	{
	}

	[Token(Token = "0x60002C1")]
	[Address(RVA = "0x154DE00", Offset = "0x154DE00", VA = "0x154DE00")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60002C2")]
	[Address(RVA = "0x154DCC8", Offset = "0x154DCC8", VA = "0x154DCC8")]
	public static Result Initialize()
	{
		return default(Result);
	}

	[Token(Token = "0x60002C3")]
	[Address(RVA = "0x154DEE0", Offset = "0x154DEE0", VA = "0x154DEE0")]
	public static Result Initialize(int sampleRate, int bufferSize)
	{
		return default(Result);
	}

	[Token(Token = "0x60002C4")]
	[Address(RVA = "0x154DFF4", Offset = "0x154DFF4", VA = "0x154DFF4")]
	public static void Shutdown()
	{
	}

	[Token(Token = "0x60002C5")]
	[Address(RVA = "0x154E064", Offset = "0x154E064", VA = "0x154E064")]
	public static Result IsInitialized()
	{
		return default(Result);
	}

	[Token(Token = "0x60002C6")]
	[Address(RVA = "0x154E0CC", Offset = "0x154E0CC", VA = "0x154E0CC")]
	public static Result CreateContext(ref uint context, ContextProviders provider, int sampleRate = 0, bool enableAcceleration = false)
	{
		return default(Result);
	}

	[Token(Token = "0x60002C7")]
	[Address(RVA = "0x154E1F0", Offset = "0x154E1F0", VA = "0x154E1F0")]
	public static Result CreateContextWithModelFile(ref uint context, ContextProviders provider, string modelPath, int sampleRate = 0, bool enableAcceleration = false)
	{
		return default(Result);
	}

	[Token(Token = "0x60002C8")]
	[Address(RVA = "0x154E328", Offset = "0x154E328", VA = "0x154E328")]
	public static Result DestroyContext(uint context)
	{
		return default(Result);
	}

	[Token(Token = "0x60002C9")]
	[Address(RVA = "0x154E408", Offset = "0x154E408", VA = "0x154E408")]
	public static Result ResetContext(uint context)
	{
		return default(Result);
	}

	[Token(Token = "0x60002CA")]
	[Address(RVA = "0x154E4E8", Offset = "0x154E4E8", VA = "0x154E4E8")]
	public static Result SendSignal(uint context, Signals signal, int arg1, int arg2)
	{
		return default(Result);
	}

	[Token(Token = "0x60002CB")]
	[Address(RVA = "0x154E5EC", Offset = "0x154E5EC", VA = "0x154E5EC")]
	public static Result ProcessFrame(uint context, float[] audioBuffer, Frame frame, bool stereo = true)
	{
		return default(Result);
	}

	[Token(Token = "0x60002CC")]
	[Address(RVA = "0x154E790", Offset = "0x154E790", VA = "0x154E790")]
	public static Result ProcessFrame(uint context, short[] audioBuffer, Frame frame, bool stereo = true)
	{
		return default(Result);
	}

	[Token(Token = "0x60002CD")]
	[Address(RVA = "0x154E92C", Offset = "0x154E92C", VA = "0x154E92C")]
	public OVRLipSync()
	{
	}
}
[Token(Token = "0x20000BA")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8B5C94", Offset = "0x8B5C94")]
public class OVRLipSyncContext : OVRLipSyncContextBase
{
	[Token(Token = "0x4000351")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B9C78", Offset = "0x8B9C78")]
	public bool enableKeyboardInput;

	[Token(Token = "0x4000352")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B9CB0", Offset = "0x8B9CB0")]
	public bool enableTouchInput;

	[Token(Token = "0x4000353")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B9CE8", Offset = "0x8B9CE8")]
	public bool audioLoopback;

	[Token(Token = "0x4000354")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B9D20", Offset = "0x8B9D20")]
	public KeyCode loopbackKey;

	[Token(Token = "0x4000355")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B9D58", Offset = "0x8B9D58")]
	public bool showVisemes;

	[Token(Token = "0x4000356")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B9D90", Offset = "0x8B9D90")]
	public KeyCode debugVisemesKey;

	[Token(Token = "0x4000357")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B9DC8", Offset = "0x8B9DC8")]
	public bool skipAudioSource;

	[Token(Token = "0x4000358")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B9E00", Offset = "0x8B9E00")]
	public float gain;

	[Token(Token = "0x4000359")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool hasDebugConsole;

	[Token(Token = "0x400035A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public KeyCode debugLaughterKey;

	[Token(Token = "0x400035B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool showLaughter;

	[Token(Token = "0x400035C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float laughterScore;

	[Token(Token = "0x60002CF")]
	[Address(RVA = "0x154EBB4", Offset = "0x154EBB4", VA = "0x154EBB4")]
	private void Start()
	{
	}

	[Token(Token = "0x60002D0")]
	[Address(RVA = "0x154ECE0", Offset = "0x154ECE0", VA = "0x154ECE0")]
	private void HandleKeyboard()
	{
	}

	[Token(Token = "0x60002D1")]
	[Address(RVA = "0x154F0E4", Offset = "0x154F0E4", VA = "0x154F0E4")]
	private void Update()
	{
	}

	[Token(Token = "0x60002D2")]
	[Address(RVA = "0x154F398", Offset = "0x154F398", VA = "0x154F398")]
	public void PreprocessAudioSamples(float[] data, int channels)
	{
	}

	[Token(Token = "0x60002D3")]
	[Address(RVA = "0x154F3FC", Offset = "0x154F3FC", VA = "0x154F3FC")]
	public void PostprocessAudioSamples(float[] data, int channels)
	{
	}

	[Token(Token = "0x60002D4")]
	[Address(RVA = "0x154F468", Offset = "0x154F468", VA = "0x154F468")]
	public void ProcessAudioSamplesRaw(float[] data, int channels)
	{
	}

	[Token(Token = "0x60002D5")]
	[Address(RVA = "0x154F5CC", Offset = "0x154F5CC", VA = "0x154F5CC")]
	public void ProcessAudioSamplesRaw(short[] data, int channels)
	{
	}

	[Token(Token = "0x60002D6")]
	[Address(RVA = "0x154F730", Offset = "0x154F730", VA = "0x154F730")]
	public void ProcessAudioSamples(float[] data, int channels)
	{
	}

	[Token(Token = "0x60002D7")]
	[Address(RVA = "0x154F864", Offset = "0x154F864", VA = "0x154F864")]
	private void OnAudioFilterRead(float[] data, int channels)
	{
	}

	[Token(Token = "0x60002D8")]
	[Address(RVA = "0x154F128", Offset = "0x154F128", VA = "0x154F128")]
	private void DebugShowVisemesAndLaughter()
	{
	}

	[Token(Token = "0x60002D9")]
	[Address(RVA = "0x154F004", Offset = "0x154F004", VA = "0x154F004")]
	private void ToggleAudioLoopback()
	{
	}

	[Token(Token = "0x60002DA")]
	[Address(RVA = "0x154F874", Offset = "0x154F874", VA = "0x154F874")]
	private void LocalTouchEventCallback(OVRTouchpad.TouchEvent touchEvent)
	{
	}

	[Token(Token = "0x60002DB")]
	[Address(RVA = "0x154F9AC", Offset = "0x154F9AC", VA = "0x154F9AC")]
	public OVRLipSyncContext()
	{
	}
}
[Token(Token = "0x20000BB")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8B5CF8", Offset = "0x8B5CF8")]
public class OVRLipSyncContextBase : MonoBehaviour
{
	[Token(Token = "0x400035D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioSource audioSource;

	[Token(Token = "0x400035E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B9E38", Offset = "0x8B9E38")]
	public OVRLipSync.ContextProviders provider;

	[Token(Token = "0x400035F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B9E70", Offset = "0x8B9E70")]
	public bool enableAcceleration;

	[Token(Token = "0x4000360")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OVRLipSync.Frame frame;

	[Token(Token = "0x4000361")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private uint context;

	[Token(Token = "0x4000362")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int _smoothing;

	[Token(Token = "0x17000039")]
	public int Smoothing
	{
		[Token(Token = "0x60002DD")]
		[Address(RVA = "0x154FB2C", Offset = "0x154FB2C", VA = "0x154FB2C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60002DC")]
		[Address(RVA = "0x154FA40", Offset = "0x154FA40", VA = "0x154FA40")]
		set
		{
		}
	}

	[Token(Token = "0x1700003A")]
	public uint Context
	{
		[Token(Token = "0x60002DE")]
		[Address(RVA = "0x154FB34", Offset = "0x154FB34", VA = "0x154FB34")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x1700003B")]
	protected OVRLipSync.Frame Frame
	{
		[Token(Token = "0x60002DF")]
		[Address(RVA = "0x154FB3C", Offset = "0x154FB3C", VA = "0x154FB3C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60002E0")]
	[Address(RVA = "0x154FB44", Offset = "0x154FB44", VA = "0x154FB44")]
	private void Awake()
	{
	}

	[Token(Token = "0x60002E1")]
	[Address(RVA = "0x154FCD4", Offset = "0x154FCD4", VA = "0x154FCD4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60002E2")]
	[Address(RVA = "0x154FDF0", Offset = "0x154FDF0", VA = "0x154FDF0")]
	public OVRLipSync.Frame GetCurrentPhonemeFrame()
	{
		return null;
	}

	[Token(Token = "0x60002E3")]
	[Address(RVA = "0x154FDF8", Offset = "0x154FDF8", VA = "0x154FDF8")]
	public void SetVisemeBlend(int viseme, int amount)
	{
	}

	[Token(Token = "0x60002E4")]
	[Address(RVA = "0x154FEEC", Offset = "0x154FEEC", VA = "0x154FEEC")]
	public void SetLaughterBlend(int amount)
	{
	}

	[Token(Token = "0x60002E5")]
	[Address(RVA = "0x154FFB4", Offset = "0x154FFB4", VA = "0x154FFB4")]
	public OVRLipSync.Result ResetContext()
	{
		return default(OVRLipSync.Result);
	}

	[Token(Token = "0x60002E6")]
	[Address(RVA = "0x154F9D0", Offset = "0x154F9D0", VA = "0x154F9D0")]
	public OVRLipSyncContextBase()
	{
	}
}
[Token(Token = "0x20000BC")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8B5D5C", Offset = "0x8B5D5C")]
public class OVRLipSyncContextCanned : OVRLipSyncContextBase
{
	[Token(Token = "0x4000363")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B9EA8", Offset = "0x8B9EA8")]
	public OVRLipSyncSequence currentSequence;

	[Token(Token = "0x60002E7")]
	[Address(RVA = "0xD1A4FC", Offset = "0xD1A4FC", VA = "0xD1A4FC")]
	private void Update()
	{
	}

	[Token(Token = "0x60002E8")]
	[Address(RVA = "0xD1A670", Offset = "0xD1A670", VA = "0xD1A670")]
	public OVRLipSyncContextCanned()
	{
	}
}
[Token(Token = "0x20000BD")]
public class OVRLipSyncContextMorphTarget : MonoBehaviour
{
	[Token(Token = "0x4000364")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B9EE0", Offset = "0x8B9EE0")]
	public SkinnedMeshRenderer skinnedMeshRenderer;

	[Token(Token = "0x4000365")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B9F18", Offset = "0x8B9F18")]
	public int[] visemeToBlendTargets;

	[Token(Token = "0x4000366")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B9F50", Offset = "0x8B9F50")]
	public bool enableVisemeTestKeys;

	[Token(Token = "0x4000367")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B9F88", Offset = "0x8B9F88")]
	public KeyCode[] visemeTestKeys;

	[Token(Token = "0x4000368")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B9FC0", Offset = "0x8B9FC0")]
	public KeyCode laughterKey;

	[Token(Token = "0x4000369")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B9FF8", Offset = "0x8B9FF8")]
	public int laughterBlendTarget;

	[Token(Token = "0x400036A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8BA030", Offset = "0x8BA030")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BA030", Offset = "0x8BA030")]
	public float laughterThreshold;

	[Token(Token = "0x400036B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8BA084", Offset = "0x8BA084")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BA084", Offset = "0x8BA084")]
	public float laughterMultiplier;

	[Token(Token = "0x400036C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8BA0D8", Offset = "0x8BA0D8")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BA0D8", Offset = "0x8BA0D8")]
	public int smoothAmount;

	[Token(Token = "0x400036D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private OVRLipSyncContextBase lipsyncContext;

	[Token(Token = "0x60002E9")]
	[Address(RVA = "0xD1A678", Offset = "0xD1A678", VA = "0xD1A678")]
	private void Start()
	{
	}

	[Token(Token = "0x60002EA")]
	[Address(RVA = "0xD1A7C0", Offset = "0xD1A7C0", VA = "0xD1A7C0")]
	private void Update()
	{
	}

	[Token(Token = "0x60002EB")]
	[Address(RVA = "0xD1AA74", Offset = "0xD1AA74", VA = "0xD1AA74")]
	private void CheckForKeys()
	{
	}

	[Token(Token = "0x60002EC")]
	[Address(RVA = "0xD1A8D0", Offset = "0xD1A8D0", VA = "0xD1A8D0")]
	private void SetVisemeToMorphTarget(OVRLipSync.Frame frame)
	{
	}

	[Token(Token = "0x60002ED")]
	[Address(RVA = "0xD1A984", Offset = "0xD1A984", VA = "0xD1A984")]
	private void SetLaughterToMorphTarget(OVRLipSync.Frame frame)
	{
	}

	[Token(Token = "0x60002EE")]
	[Address(RVA = "0xD1AB44", Offset = "0xD1AB44", VA = "0xD1AB44")]
	private void CheckVisemeKey(KeyCode key, int viseme, int amount)
	{
	}

	[Token(Token = "0x60002EF")]
	[Address(RVA = "0xD1AC10", Offset = "0xD1AC10", VA = "0xD1AC10")]
	private void CheckLaughterKey()
	{
	}

	[Token(Token = "0x60002F0")]
	[Address(RVA = "0xD1AC80", Offset = "0xD1AC80", VA = "0xD1AC80")]
	public OVRLipSyncContextMorphTarget()
	{
	}
}
[Token(Token = "0x20000BE")]
public class OVRLipSyncContextTextureFlip : MonoBehaviour
{
	[Token(Token = "0x400036E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material material;

	[Token(Token = "0x400036F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BA130", Offset = "0x8BA130")]
	[AttributeAttribute(Name = "OVRNamedArrayAttribute", RVA = "0x8BA130", Offset = "0x8BA130")]
	public Texture[] Textures;

	[Token(Token = "0x4000370")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8BA2AC", Offset = "0x8BA2AC")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BA2AC", Offset = "0x8BA2AC")]
	public int smoothAmount;

	[Token(Token = "0x4000371")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private OVRLipSyncContextBase lipsyncContext;

	[Token(Token = "0x4000372")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private OVRLipSync.Frame oldFrame;

	[Token(Token = "0x60002F1")]
	[Address(RVA = "0xD1AD78", Offset = "0xD1AD78", VA = "0xD1AD78")]
	private void Start()
	{
	}

	[Token(Token = "0x60002F2")]
	[Address(RVA = "0xD1AED0", Offset = "0xD1AED0", VA = "0xD1AED0")]
	private void Update()
	{
	}

	[Token(Token = "0x60002F3")]
	[Address(RVA = "0xD1B078", Offset = "0xD1B078", VA = "0xD1B078")]
	private void SetVisemeToTexture()
	{
	}

	[Token(Token = "0x60002F4")]
	[Address(RVA = "0xD1B19C", Offset = "0xD1B19C", VA = "0xD1B19C")]
	public OVRLipSyncContextTextureFlip()
	{
	}
}
[Serializable]
[Token(Token = "0x20000BF")]
public class OVRLipSyncSequence : ScriptableObject
{
	[Token(Token = "0x4000373")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<OVRLipSync.Frame> entries;

	[Token(Token = "0x4000374")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float length;

	[Token(Token = "0x60002F5")]
	[Address(RVA = "0xD1A5CC", Offset = "0xD1A5CC", VA = "0xD1A5CC")]
	public OVRLipSync.Frame GetFrameAtTime(float time)
	{
		return null;
	}

	[Token(Token = "0x60002F6")]
	[Address(RVA = "0xD1BD24", Offset = "0xD1BD24", VA = "0xD1BD24")]
	public OVRLipSyncSequence()
	{
	}
}
[Token(Token = "0x20000C0")]
public class DebugUIBuilder : MonoBehaviour
{
	[Token(Token = "0x200064C")]
	public delegate void OnClick();

	[Token(Token = "0x200064D")]
	public delegate void OnToggleValueChange(Toggle t);

	[Token(Token = "0x200064E")]
	public delegate void OnSlider(float f);

	[Token(Token = "0x200064F")]
	public delegate bool ActiveUpdate();

	[Token(Token = "0x2000650")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B79DC", Offset = "0x8B79DC")]
	private sealed class <>c__DisplayClass35_0
	{
		[Token(Token = "0x40020F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnClick handler;

		[Token(Token = "0x600274E")]
		[Address(RVA = "0xB11D1C", Offset = "0xB11D1C", VA = "0xB11D1C")]
		public <>c__DisplayClass35_0()
		{
		}

		[Token(Token = "0x600274F")]
		[Address(RVA = "0xB126BC", Offset = "0xB126BC", VA = "0xB126BC")]
		internal void <AddButton>b__0()
		{
		}
	}

	[Token(Token = "0x2000651")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B79EC", Offset = "0x8B79EC")]
	private sealed class <>c__DisplayClass37_0
	{
		[Token(Token = "0x40020F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnSlider onValueChanged;

		[Token(Token = "0x6002750")]
		[Address(RVA = "0xB11F90", Offset = "0xB11F90", VA = "0xB11F90")]
		public <>c__DisplayClass37_0()
		{
		}

		[Token(Token = "0x6002751")]
		[Address(RVA = "0xB128E0", Offset = "0xB128E0", VA = "0xB128E0")]
		internal void <AddSlider>b__0(float f)
		{
		}
	}

	[Token(Token = "0x2000652")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B79FC", Offset = "0x8B79FC")]
	private sealed class <>c__DisplayClass39_0
	{
		[Token(Token = "0x40020F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnToggleValueChange onValueChanged;

		[Token(Token = "0x40020F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Toggle t;

		[Token(Token = "0x6002752")]
		[Address(RVA = "0xB121A8", Offset = "0xB121A8", VA = "0xB121A8")]
		public <>c__DisplayClass39_0()
		{
		}

		[Token(Token = "0x6002753")]
		[Address(RVA = "0xB12B58", Offset = "0xB12B58", VA = "0xB12B58")]
		internal void <AddToggle>b__0(bool <p0>)
		{
		}
	}

	[Token(Token = "0x2000653")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B7A0C", Offset = "0x8B7A0C")]
	private sealed class <>c__DisplayClass40_0
	{
		[Token(Token = "0x40020F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnToggleValueChange onValueChanged;

		[Token(Token = "0x40020F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Toggle t;

		[Token(Token = "0x6002754")]
		[Address(RVA = "0xB1233C", Offset = "0xB1233C", VA = "0xB1233C")]
		public <>c__DisplayClass40_0()
		{
		}

		[Token(Token = "0x6002755")]
		[Address(RVA = "0xB12F0C", Offset = "0xB12F0C", VA = "0xB12F0C")]
		internal void <AddToggle>b__0(bool <p0>)
		{
		}
	}

	[Token(Token = "0x2000654")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B7A1C", Offset = "0x8B7A1C")]
	private sealed class <>c__DisplayClass41_0
	{
		[Token(Token = "0x40020F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnToggleValueChange handler;

		[Token(Token = "0x40020FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Toggle tb;

		[Token(Token = "0x6002756")]
		[Address(RVA = "0xB12594", Offset = "0xB12594", VA = "0xB12594")]
		public <>c__DisplayClass41_0()
		{
		}

		[Token(Token = "0x6002757")]
		[Address(RVA = "0xB12F2C", Offset = "0xB12F2C", VA = "0xB12F2C")]
		internal void <AddRadio>b__0(bool <p0>)
		{
		}
	}

	[Token(Token = "0x4000375")]
	public const int DEBUG_PANE_CENTER = 0;

	[Token(Token = "0x4000376")]
	public const int DEBUG_PANE_RIGHT = 1;

	[Token(Token = "0x4000377")]
	public const int DEBUG_PANE_LEFT = 2;

	[Token(Token = "0x4000378")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private RectTransform buttonPrefab;

	[Token(Token = "0x4000379")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private RectTransform labelPrefab;

	[Token(Token = "0x400037A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private RectTransform sliderPrefab;

	[Token(Token = "0x400037B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private RectTransform dividerPrefab;

	[Token(Token = "0x400037C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private RectTransform togglePrefab;

	[Token(Token = "0x400037D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private RectTransform radioPrefab;

	[Token(Token = "0x400037E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private GameObject uiHelpersToInstantiate;

	[Token(Token = "0x400037F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Transform[] targetContentPanels;

	[Token(Token = "0x4000380")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool[] reEnable;

	[Token(Token = "0x4000381")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private List<GameObject> toEnable;

	[Token(Token = "0x4000382")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private List<GameObject> toDisable;

	[Token(Token = "0x4000383")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static DebugUIBuilder instance;

	[Token(Token = "0x4000384")]
	private const float elementSpacing = 16f;

	[Token(Token = "0x4000385")]
	private const float marginH = 16f;

	[Token(Token = "0x4000386")]
	private const float marginV = 16f;

	[Token(Token = "0x4000387")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private UnityEngine.Vector2[] insertPositions;

	[Token(Token = "0x4000388")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private List<RectTransform>[] insertedElements;

	[Token(Token = "0x4000389")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private UnityEngine.Vector3 menuOffset;

	[Token(Token = "0x400038A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private OVRCameraRig rig;

	[Token(Token = "0x400038B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Dictionary<string, ToggleGroup> radioGroups;

	[Token(Token = "0x400038C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private LaserPointer lp;

	[Token(Token = "0x400038D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private LineRenderer lr;

	[Token(Token = "0x400038E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public LaserPointer.LaserBeamBehavior laserBeamBehavior;

	[Token(Token = "0x60002F7")]
	[Address(RVA = "0xB10CC8", Offset = "0xB10CC8", VA = "0xB10CC8")]
	public void Awake()
	{
	}

	[Token(Token = "0x60002F8")]
	[Address(RVA = "0xB110CC", Offset = "0xB110CC", VA = "0xB110CC")]
	public void Show()
	{
	}

	[Token(Token = "0x60002F9")]
	[Address(RVA = "0xB11698", Offset = "0xB11698", VA = "0xB11698")]
	public void Hide()
	{
	}

	[Token(Token = "0x60002FA")]
	[Address(RVA = "0xB11444", Offset = "0xB11444", VA = "0xB11444")]
	private void Relayout()
	{
	}

	[Token(Token = "0x60002FB")]
	[Address(RVA = "0xB11840", Offset = "0xB11840", VA = "0xB11840")]
	private void AddRect(RectTransform r, int targetCanvas)
	{
	}

	[Token(Token = "0x60002FC")]
	[Address(RVA = "0xB11AF4", Offset = "0xB11AF4", VA = "0xB11AF4")]
	public RectTransform AddButton(string label, OnClick handler, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x60002FD")]
	[Address(RVA = "0xB11D24", Offset = "0xB11D24", VA = "0xB11D24")]
	public RectTransform AddLabel(string label, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x60002FE")]
	[Address(RVA = "0xB11E08", Offset = "0xB11E08", VA = "0xB11E08")]
	public RectTransform AddSlider(string label, float min, float max, OnSlider onValueChanged, bool wholeNumbersOnly = false, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x60002FF")]
	[Address(RVA = "0xB11F98", Offset = "0xB11F98", VA = "0xB11F98")]
	public RectTransform AddDivider(int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000300")]
	[Address(RVA = "0xB12034", Offset = "0xB12034", VA = "0xB12034")]
	public RectTransform AddToggle(string label, OnToggleValueChange onValueChanged, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000301")]
	[Address(RVA = "0xB121B0", Offset = "0xB121B0", VA = "0xB121B0")]
	public RectTransform AddToggle(string label, OnToggleValueChange onValueChanged, bool defaultValue, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000302")]
	[Address(RVA = "0xB12344", Offset = "0xB12344", VA = "0xB12344")]
	public RectTransform AddRadio(string label, string group, OnToggleValueChange handler, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000303")]
	[Address(RVA = "0xB1259C", Offset = "0xB1259C", VA = "0xB1259C")]
	public void ToggleLaserPointer(bool isOn)
	{
	}

	[Token(Token = "0x6000304")]
	[Address(RVA = "0xB1264C", Offset = "0xB1264C", VA = "0xB1264C")]
	public DebugUIBuilder()
	{
	}
}
[Token(Token = "0x20000C1")]
public class HandedInputSelector : MonoBehaviour
{
	[Token(Token = "0x400038F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OVRCameraRig m_CameraRig;

	[Token(Token = "0x4000390")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private OVRInputModule m_InputModule;

	[Token(Token = "0x6000305")]
	[Address(RVA = "0xAD4140", Offset = "0xAD4140", VA = "0xAD4140")]
	private void Start()
	{
	}

	[Token(Token = "0x6000306")]
	[Address(RVA = "0xAD41C8", Offset = "0xAD41C8", VA = "0xAD41C8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000307")]
	[Address(RVA = "0xAD4290", Offset = "0xAD4290", VA = "0xAD4290")]
	private void SetActiveController(OVRInput.Controller c)
	{
	}

	[Token(Token = "0x6000308")]
	[Address(RVA = "0xAD42CC", Offset = "0xAD42CC", VA = "0xAD42CC")]
	public HandedInputSelector()
	{
	}
}
[Token(Token = "0x20000C2")]
public class LaserPointer : OVRCursor
{
	[Token(Token = "0x2000655")]
	public enum LaserBeamBehavior
	{
		[Token(Token = "0x40020FC")]
		On,
		[Token(Token = "0x40020FD")]
		Off,
		[Token(Token = "0x40020FE")]
		OnWhenHitTarget
	}

	[Token(Token = "0x4000391")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject cursorVisual;

	[Token(Token = "0x4000392")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float maxLength;

	[Token(Token = "0x4000393")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private LaserBeamBehavior _laserBeamBehavior;

	[Token(Token = "0x4000394")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool m_restoreOnInputAcquired;

	[Token(Token = "0x4000395")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private UnityEngine.Vector3 _startPoint;

	[Token(Token = "0x4000396")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private UnityEngine.Vector3 _forward;

	[Token(Token = "0x4000397")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private UnityEngine.Vector3 _endPoint;

	[Token(Token = "0x4000398")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool _hitTarget;

	[Token(Token = "0x4000399")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private LineRenderer lineRenderer;

	[Token(Token = "0x1700003C")]
	public LaserBeamBehavior laserBeamBehavior
	{
		[Token(Token = "0x600030A")]
		[Address(RVA = "0xAE1BDC", Offset = "0xAE1BDC", VA = "0xAE1BDC")]
		get
		{
			return default(LaserBeamBehavior);
		}
		[Token(Token = "0x6000309")]
		[Address(RVA = "0xAE1B98", Offset = "0xAE1B98", VA = "0xAE1B98")]
		set
		{
		}
	}

	[Token(Token = "0x600030B")]
	[Address(RVA = "0xAE1BE4", Offset = "0xAE1BE4", VA = "0xAE1BE4")]
	private void Awake()
	{
	}

	[Token(Token = "0x600030C")]
	[Address(RVA = "0xAE1C3C", Offset = "0xAE1C3C", VA = "0xAE1C3C")]
	private void Start()
	{
	}

	[Token(Token = "0x600030D")]
	[Address(RVA = "0xAE1DAC", Offset = "0xAE1DAC", VA = "0xAE1DAC", Slot = "5")]
	public override void SetCursorStartDest(UnityEngine.Vector3 start, UnityEngine.Vector3 dest, UnityEngine.Vector3 normal)
	{
	}

	[Token(Token = "0x600030E")]
	[Address(RVA = "0xAE1DC8", Offset = "0xAE1DC8", VA = "0xAE1DC8", Slot = "4")]
	public override void SetCursorRay(Transform t)
	{
	}

	[Token(Token = "0x600030F")]
	[Address(RVA = "0xAE1E1C", Offset = "0xAE1E1C", VA = "0xAE1E1C")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000310")]
	[Address(RVA = "0xAE2078", Offset = "0xAE2078", VA = "0xAE2078")]
	private void UpdateLaserBeam(UnityEngine.Vector3 start, UnityEngine.Vector3 end)
	{
	}

	[Token(Token = "0x6000311")]
	[Address(RVA = "0xAE218C", Offset = "0xAE218C", VA = "0xAE218C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000312")]
	[Address(RVA = "0xAE2220", Offset = "0xAE2220", VA = "0xAE2220")]
	public void OnInputFocusLost()
	{
	}

	[Token(Token = "0x6000313")]
	[Address(RVA = "0xAE1CF4", Offset = "0xAE1CF4", VA = "0xAE1CF4")]
	public void OnInputFocusAcquired()
	{
	}

	[Token(Token = "0x6000314")]
	[Address(RVA = "0xAE2274", Offset = "0xAE2274", VA = "0xAE2274")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000315")]
	[Address(RVA = "0xAE2340", Offset = "0xAE2340", VA = "0xAE2340")]
	public LaserPointer()
	{
	}
}
[Token(Token = "0x20000C3")]
public class BoundsLockedObject : MonoBehaviour
{
	[Token(Token = "0x400039A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private UnityEngine.Vector3 m_initialOffset;

	[Token(Token = "0x400039B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRCameraRig m_playerOrigin;

	[Token(Token = "0x400039C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GuardianBoundaryEnforcer m_enforcer;

	[Token(Token = "0x400039D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Bounds? m_bounds;

	[Token(Token = "0x6000316")]
	[Address(RVA = "0xB02EC8", Offset = "0xB02EC8", VA = "0xB02EC8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000317")]
	[Address(RVA = "0xB030D4", Offset = "0xB030D4", VA = "0xB030D4")]
	private void RefreshDisplay()
	{
	}

	[Token(Token = "0x6000318")]
	[Address(RVA = "0xB03574", Offset = "0xB03574", VA = "0xB03574")]
	public BoundsLockedObject()
	{
	}
}
[Token(Token = "0x20000C4")]
public class GuardianBoundaryDisplay : MonoBehaviour
{
	[Token(Token = "0x400039E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GuardianBoundaryEnforcer m_enforcer;

	[Token(Token = "0x400039F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVRBoundary.BoundaryType m_boundaryType;

	[Token(Token = "0x40003A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject m_errorDisplay;

	[Token(Token = "0x6000319")]
	[Address(RVA = "0xC53E6C", Offset = "0xC53E6C", VA = "0xC53E6C")]
	private void Start()
	{
	}

	[Token(Token = "0x600031A")]
	[Address(RVA = "0xC53FA0", Offset = "0xC53FA0", VA = "0xC53FA0")]
	private void RefreshDisplay()
	{
	}

	[Token(Token = "0x600031B")]
	[Address(RVA = "0xC541F0", Offset = "0xC541F0", VA = "0xC541F0")]
	public GuardianBoundaryDisplay()
	{
	}
}
[Token(Token = "0x20000C5")]
public class GuardianBoundaryEnforcer : MonoBehaviour
{
	[Token(Token = "0x40003A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool m_AllowRecenter;

	[Token(Token = "0x40003A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRCameraRig m_mainCamera;

	[Token(Token = "0x40003A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Quaternion m_originalTrackerOrientation;

	[Token(Token = "0x40003A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int m_framecount;

	[Token(Token = "0x40003A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Quaternion m_orientToOriginalForward;

	[Token(Token = "0x1700003D")]
	public Quaternion OrientToOriginalForward
	{
		[Token(Token = "0x600031E")]
		[Address(RVA = "0xC5429C", Offset = "0xC5429C", VA = "0xC5429C")]
		get
		{
			return default(Quaternion);
		}
	}

	[Token(Token = "0x14000001")]
	public event Action TrackingChanged
	{
		[Token(Token = "0x600031C")]
		[Address(RVA = "0xC53EFC", Offset = "0xC53EFC", VA = "0xC53EFC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C2408", Offset = "0x8C2408")]
		add
		{
		}
		[Token(Token = "0x600031D")]
		[Address(RVA = "0xC541F8", Offset = "0xC541F8", VA = "0xC541F8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C2418", Offset = "0x8C2418")]
		remove
		{
		}
	}

	[Token(Token = "0x600031F")]
	[Address(RVA = "0xC542A8", Offset = "0xC542A8", VA = "0xC542A8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000320")]
	[Address(RVA = "0xC54400", Offset = "0xC54400", VA = "0xC54400")]
	private void Update()
	{
	}

	[Token(Token = "0x6000321")]
	[Address(RVA = "0xC54574", Offset = "0xC54574", VA = "0xC54574")]
	private void Recentered()
	{
	}

	[Token(Token = "0x6000322")]
	[Address(RVA = "0xC5457C", Offset = "0xC5457C", VA = "0xC5457C")]
	public GuardianBoundaryEnforcer()
	{
	}
}
[Token(Token = "0x20000C6")]
public class CharacterCameraConstraint : MonoBehaviour
{
	[Token(Token = "0x40003A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BA3B4", Offset = "0x8BA3B4")]
	public OVRCameraRig CameraRig;

	[Token(Token = "0x40003A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BA3EC", Offset = "0x8BA3EC")]
	public bool EnableCollision;

	[Token(Token = "0x40003A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public LayerMask CollideLayers;

	[Token(Token = "0x40003AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BA424", Offset = "0x8BA424")]
	public float MaxFade;

	[Token(Token = "0x40003AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BA45C", Offset = "0x8BA45C")]
	public float FadeMinDistance;

	[Token(Token = "0x40003AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float PreferredHeight;

	[Token(Token = "0x40003AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BA494", Offset = "0x8BA494")]
	public float FadeMaxDistance;

	[Token(Token = "0x40003AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly Action _cameraUpdateAction;

	[Token(Token = "0x40003AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private readonly Action _preCharacterMovementAction;

	[Token(Token = "0x40003B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private CapsuleCollider _character;

	[Token(Token = "0x40003B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private SimpleCapsuleWithStickMovement _simplePlayerController;

	[Token(Token = "0x6000323")]
	[Address(RVA = "0xB05E9C", Offset = "0xB05E9C", VA = "0xB05E9C")]
	private CharacterCameraConstraint()
	{
	}

	[Token(Token = "0x6000324")]
	[Address(RVA = "0xB05F24", Offset = "0xB05F24", VA = "0xB05F24")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000325")]
	[Address(RVA = "0xB05F94", Offset = "0xB05F94", VA = "0xB05F94")]
	private void Start()
	{
	}

	[Token(Token = "0x6000326")]
	[Address(RVA = "0xB05F98", Offset = "0xB05F98", VA = "0xB05F98")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000327")]
	[Address(RVA = "0xB05FBC", Offset = "0xB05FBC", VA = "0xB05FBC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000328")]
	[Address(RVA = "0xB05FE0", Offset = "0xB05FE0", VA = "0xB05FE0")]
	private void CameraUpdate()
	{
	}
}
[Token(Token = "0x20000C7")]
public class LocomotionController : MonoBehaviour
{
	[Token(Token = "0x40003B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRCameraRig CameraRig;

	[Token(Token = "0x40003B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public CapsuleCollider CharacterController;

	[Token(Token = "0x40003B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SimpleCapsuleWithStickMovement PlayerController;

	[Token(Token = "0x6000329")]
	[Address(RVA = "0xAE42A4", Offset = "0xAE42A4", VA = "0xAE42A4")]
	private void Start()
	{
	}

	[Token(Token = "0x600032A")]
	[Address(RVA = "0xAE4350", Offset = "0xAE4350", VA = "0xAE4350")]
	public LocomotionController()
	{
	}
}
[Token(Token = "0x20000C8")]
public class LocomotionTeleport : MonoBehaviour
{
	[Token(Token = "0x2000656")]
	public enum States
	{
		[Token(Token = "0x4002100")]
		Ready,
		[Token(Token = "0x4002101")]
		Aim,
		[Token(Token = "0x4002102")]
		CancelAim,
		[Token(Token = "0x4002103")]
		PreTeleport,
		[Token(Token = "0x4002104")]
		CancelTeleport,
		[Token(Token = "0x4002105")]
		Teleporting,
		[Token(Token = "0x4002106")]
		PostTeleport
	}

	[Token(Token = "0x2000657")]
	public enum TeleportIntentions
	{
		[Token(Token = "0x4002108")]
		None,
		[Token(Token = "0x4002109")]
		Aim,
		[Token(Token = "0x400210A")]
		PreTeleport,
		[Token(Token = "0x400210B")]
		Teleport
	}

	[Token(Token = "0x2000658")]
	public enum AimCollisionTypes
	{
		[Token(Token = "0x400210D")]
		Point,
		[Token(Token = "0x400210E")]
		Sphere,
		[Token(Token = "0x400210F")]
		Capsule
	}

	[Token(Token = "0x2000659")]
	public class AimData
	{
		[Token(Token = "0x4002110")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public RaycastHit TargetHitInfo;

		[Token(Token = "0x4002111")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool TargetValid;

		[Token(Token = "0x4002112")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public UnityEngine.Vector3? Destination;

		[Token(Token = "0x4002113")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float Radius;

		[Token(Token = "0x4002114")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C1FB0", Offset = "0x8C1FB0")]
		private List<UnityEngine.Vector3> <Points>k__BackingField;

		[Token(Token = "0x17000456")]
		public List<UnityEngine.Vector3> Points
		{
			[Token(Token = "0x6002759")]
			[Address(RVA = "0xAE7514", Offset = "0xAE7514", VA = "0xAE7514")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CBC7C", Offset = "0x8CBC7C")]
			get
			{
				return null;
			}
			[Token(Token = "0x600275A")]
			[Address(RVA = "0xAE751C", Offset = "0xAE751C", VA = "0xAE751C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CBC8C", Offset = "0x8CBC8C")]
			private set
			{
			}
		}

		[Token(Token = "0x6002758")]
		[Address(RVA = "0xAE74A0", Offset = "0xAE74A0", VA = "0xAE74A0")]
		public AimData()
		{
		}

		[Token(Token = "0x600275B")]
		[Address(RVA = "0xAE7524", Offset = "0xAE7524", VA = "0xAE7524")]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x200065A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B7A2C", Offset = "0x8B7A2C")]
	private sealed class <ReadyStateCoroutine>d__52 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002115")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002116")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002117")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000457")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600275F")]
			[Address(RVA = "0xAE72EC", Offset = "0xAE72EC", VA = "0xAE72EC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000458")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002761")]
			[Address(RVA = "0xAE7354", Offset = "0xAE7354", VA = "0xAE7354", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600275C")]
		[Address(RVA = "0xAE57F0", Offset = "0xAE57F0", VA = "0xAE57F0")]
		[DebuggerHidden]
		public <ReadyStateCoroutine>d__52(int <>1__state)
		{
		}

		[Token(Token = "0x600275D")]
		[Address(RVA = "0xAE7204", Offset = "0xAE7204", VA = "0xAE7204", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600275E")]
		[Address(RVA = "0xAE7208", Offset = "0xAE7208", VA = "0xAE7208", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002760")]
		[Address(RVA = "0xAE72F4", Offset = "0xAE72F4", VA = "0xAE72F4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200065B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B7A3C", Offset = "0x8B7A3C")]
	private sealed class <AimStateCoroutine>d__64 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002118")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002119")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400211A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000459")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002765")]
			[Address(RVA = "0xAE6CCC", Offset = "0xAE6CCC", VA = "0xAE6CCC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700045A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002767")]
			[Address(RVA = "0xAE6D34", Offset = "0xAE6D34", VA = "0xAE6D34", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002762")]
		[Address(RVA = "0xAE5CD8", Offset = "0xAE5CD8", VA = "0xAE5CD8")]
		[DebuggerHidden]
		public <AimStateCoroutine>d__64(int <>1__state)
		{
		}

		[Token(Token = "0x6002763")]
		[Address(RVA = "0xAE6B94", Offset = "0xAE6B94", VA = "0xAE6B94", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002764")]
		[Address(RVA = "0xAE6B98", Offset = "0xAE6B98", VA = "0xAE6B98", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002766")]
		[Address(RVA = "0xAE6CD4", Offset = "0xAE6CD4", VA = "0xAE6CD4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200065C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B7A4C", Offset = "0x8B7A4C")]
	private sealed class <CancelAimStateCoroutine>d__68 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400211B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400211C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400211D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x1700045B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600276B")]
			[Address(RVA = "0xAE6DE0", Offset = "0xAE6DE0", VA = "0xAE6DE0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700045C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600276D")]
			[Address(RVA = "0xAE6E48", Offset = "0xAE6E48", VA = "0xAE6E48", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002768")]
		[Address(RVA = "0xAE5EBC", Offset = "0xAE5EBC", VA = "0xAE5EBC")]
		[DebuggerHidden]
		public <CancelAimStateCoroutine>d__68(int <>1__state)
		{
		}

		[Token(Token = "0x6002769")]
		[Address(RVA = "0xAE6D3C", Offset = "0xAE6D3C", VA = "0xAE6D3C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600276A")]
		[Address(RVA = "0xAE6D40", Offset = "0xAE6D40", VA = "0xAE6D40", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600276C")]
		[Address(RVA = "0xAE6DE8", Offset = "0xAE6DE8", VA = "0xAE6DE8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200065D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B7A5C", Offset = "0x8B7A5C")]
	private sealed class <PreTeleportStateCoroutine>d__72 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400211E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400211F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002120")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x1700045D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002771")]
			[Address(RVA = "0xAE7194", Offset = "0xAE7194", VA = "0xAE7194", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700045E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002773")]
			[Address(RVA = "0xAE71FC", Offset = "0xAE71FC", VA = "0xAE71FC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600276E")]
		[Address(RVA = "0xAE60A0", Offset = "0xAE60A0", VA = "0xAE60A0")]
		[DebuggerHidden]
		public <PreTeleportStateCoroutine>d__72(int <>1__state)
		{
		}

		[Token(Token = "0x600276F")]
		[Address(RVA = "0xAE70BC", Offset = "0xAE70BC", VA = "0xAE70BC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002770")]
		[Address(RVA = "0xAE70C0", Offset = "0xAE70C0", VA = "0xAE70C0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002772")]
		[Address(RVA = "0xAE719C", Offset = "0xAE719C", VA = "0xAE719C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200065E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B7A6C", Offset = "0x8B7A6C")]
	private sealed class <CancelTeleportStateCoroutine>d__76 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002121")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002122")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002123")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x1700045F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002777")]
			[Address(RVA = "0xAE6EF4", Offset = "0xAE6EF4", VA = "0xAE6EF4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000460")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002779")]
			[Address(RVA = "0xAE6F5C", Offset = "0xAE6F5C", VA = "0xAE6F5C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002774")]
		[Address(RVA = "0xAE6284", Offset = "0xAE6284", VA = "0xAE6284")]
		[DebuggerHidden]
		public <CancelTeleportStateCoroutine>d__76(int <>1__state)
		{
		}

		[Token(Token = "0x6002775")]
		[Address(RVA = "0xAE6E50", Offset = "0xAE6E50", VA = "0xAE6E50", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002776")]
		[Address(RVA = "0xAE6E54", Offset = "0xAE6E54", VA = "0xAE6E54", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002778")]
		[Address(RVA = "0xAE6EFC", Offset = "0xAE6EFC", VA = "0xAE6EFC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200065F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B7A7C", Offset = "0x8B7A7C")]
	private sealed class <TeleportingStateCoroutine>d__80 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002124")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002125")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002126")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000461")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600277D")]
			[Address(RVA = "0xAE7430", Offset = "0xAE7430", VA = "0xAE7430", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000462")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600277F")]
			[Address(RVA = "0xAE7498", Offset = "0xAE7498", VA = "0xAE7498", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600277A")]
		[Address(RVA = "0xAE6468", Offset = "0xAE6468", VA = "0xAE6468")]
		[DebuggerHidden]
		public <TeleportingStateCoroutine>d__80(int <>1__state)
		{
		}

		[Token(Token = "0x600277B")]
		[Address(RVA = "0xAE735C", Offset = "0xAE735C", VA = "0xAE735C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600277C")]
		[Address(RVA = "0xAE7360", Offset = "0xAE7360", VA = "0xAE7360", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600277E")]
		[Address(RVA = "0xAE7438", Offset = "0xAE7438", VA = "0xAE7438", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000660")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B7A8C", Offset = "0x8B7A8C")]
	private sealed class <PostTeleportStateCoroutine>d__84 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002127")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002128")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002129")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000463")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002783")]
			[Address(RVA = "0xAE704C", Offset = "0xAE704C", VA = "0xAE704C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000464")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002785")]
			[Address(RVA = "0xAE70B4", Offset = "0xAE70B4", VA = "0xAE70B4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002780")]
		[Address(RVA = "0xAE664C", Offset = "0xAE664C", VA = "0xAE664C")]
		[DebuggerHidden]
		public <PostTeleportStateCoroutine>d__84(int <>1__state)
		{
		}

		[Token(Token = "0x6002781")]
		[Address(RVA = "0xAE6F64", Offset = "0xAE6F64", VA = "0xAE6F64", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002782")]
		[Address(RVA = "0xAE6F68", Offset = "0xAE6F68", VA = "0xAE6F68", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002784")]
		[Address(RVA = "0xAE7054", Offset = "0xAE7054", VA = "0xAE7054", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40003B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BA4CC", Offset = "0x8BA4CC")]
	public bool EnableMovementDuringReady;

	[Token(Token = "0x40003B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BA504", Offset = "0x8BA504")]
	public bool EnableMovementDuringAim;

	[Token(Token = "0x40003B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BA53C", Offset = "0x8BA53C")]
	public bool EnableMovementDuringPreTeleport;

	[Token(Token = "0x40003B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BA574", Offset = "0x8BA574")]
	public bool EnableMovementDuringPostTeleport;

	[Token(Token = "0x40003B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BA5AC", Offset = "0x8BA5AC")]
	public bool EnableRotationDuringReady;

	[Token(Token = "0x40003BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BA5E4", Offset = "0x8BA5E4")]
	public bool EnableRotationDuringAim;

	[Token(Token = "0x40003BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BA61C", Offset = "0x8BA61C")]
	public bool EnableRotationDuringPreTeleport;

	[Token(Token = "0x40003BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BA654", Offset = "0x8BA654")]
	public bool EnableRotationDuringPostTeleport;

	[Token(Token = "0x40003BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8BA68C", Offset = "0x8BA68C")]
	private States <CurrentState>k__BackingField;

	[NonSerialized]
	[Token(Token = "0x40003BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TeleportAimHandler AimHandler;

	[Token(Token = "0x40003BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BA69C", Offset = "0x8BA69C")]
	public TeleportDestination TeleportDestinationPrefab;

	[Token(Token = "0x40003C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BA6D4", Offset = "0x8BA6D4")]
	public int TeleportDestinationLayer;

	[NonSerialized]
	[Token(Token = "0x40003C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TeleportInputHandler InputHandler;

	[NonSerialized]
	[Token(Token = "0x40003C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public TeleportIntentions CurrentIntention;

	[NonSerialized]
	[Token(Token = "0x40003C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public bool IsPreTeleportRequested;

	[NonSerialized]
	[Token(Token = "0x40003C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
	public bool IsTransitioning;

	[NonSerialized]
	[Token(Token = "0x40003C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x56")]
	public bool IsPostTeleportRequested;

	[Token(Token = "0x40003C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private TeleportDestination _teleportDestination;

	[Token(Token = "0x40003C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8BA71C", Offset = "0x8BA71C")]
	private LocomotionController <LocomotionController>k__BackingField;

	[Token(Token = "0x40003C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BA72C", Offset = "0x8BA72C")]
	public AimCollisionTypes AimCollisionType;

	[Token(Token = "0x40003CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BA764", Offset = "0x8BA764")]
	public bool UseCharacterCollisionData;

	[Token(Token = "0x40003CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BA79C", Offset = "0x8BA79C")]
	public float AimCollisionRadius;

	[Token(Token = "0x40003CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BA7D4", Offset = "0x8BA7D4")]
	public float AimCollisionHeight;

	[Token(Token = "0x1700003E")]
	public States CurrentState
	{
		[Token(Token = "0x600032D")]
		[Address(RVA = "0xAE4D34", Offset = "0xAE4D34", VA = "0xAE4D34")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C2428", Offset = "0x8C2428")]
		get
		{
			return default(States);
		}
		[Token(Token = "0x600032E")]
		[Address(RVA = "0xAE4D3C", Offset = "0xAE4D3C", VA = "0xAE4D3C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C2438", Offset = "0x8C2438")]
		private set
		{
		}
	}

	[Token(Token = "0x1700003F")]
	public Quaternion DestinationRotation
	{
		[Token(Token = "0x6000332")]
		[Address(RVA = "0xAE4F6C", Offset = "0xAE4F6C", VA = "0xAE4F6C")]
		get
		{
			return default(Quaternion);
		}
	}

	[Token(Token = "0x17000040")]
	public LocomotionController LocomotionController
	{
		[Token(Token = "0x6000333")]
		[Address(RVA = "0xAE4F94", Offset = "0xAE4F94", VA = "0xAE4F94")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C2468", Offset = "0x8C2468")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000334")]
		[Address(RVA = "0xAE4F9C", Offset = "0xAE4F9C", VA = "0xAE4F9C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C2478", Offset = "0x8C2478")]
		private set
		{
		}
	}

	[Token(Token = "0x14000002")]
	public event Action<bool, UnityEngine.Vector3?, Quaternion?, Quaternion?> UpdateTeleportDestination
	{
		[Token(Token = "0x600032F")]
		[Address(RVA = "0xAE4D44", Offset = "0xAE4D44", VA = "0xAE4D44")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C2448", Offset = "0x8C2448")]
		add
		{
		}
		[Token(Token = "0x6000330")]
		[Address(RVA = "0xAE4DE8", Offset = "0xAE4DE8", VA = "0xAE4DE8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C2458", Offset = "0x8C2458")]
		remove
		{
		}
	}

	[Token(Token = "0x14000003")]
	public event Action EnterStateReady
	{
		[Token(Token = "0x600033E")]
		[Address(RVA = "0xAE56A8", Offset = "0xAE56A8", VA = "0xAE56A8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C24C0", Offset = "0x8C24C0")]
		add
		{
		}
		[Token(Token = "0x600033F")]
		[Address(RVA = "0xAE574C", Offset = "0xAE574C", VA = "0xAE574C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C24D0", Offset = "0x8C24D0")]
		remove
		{
		}
	}

	[Token(Token = "0x14000004")]
	public event Action EnterStateAim
	{
		[Token(Token = "0x6000341")]
		[Address(RVA = "0xAE581C", Offset = "0xAE581C", VA = "0xAE581C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C2544", Offset = "0x8C2544")]
		add
		{
		}
		[Token(Token = "0x6000342")]
		[Address(RVA = "0xAE58C0", Offset = "0xAE58C0", VA = "0xAE58C0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C2554", Offset = "0x8C2554")]
		remove
		{
		}
	}

	[Token(Token = "0x14000005")]
	public event Action<AimData> UpdateAimData
	{
		[Token(Token = "0x6000343")]
		[Address(RVA = "0xAE5964", Offset = "0xAE5964", VA = "0xAE5964")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C2564", Offset = "0x8C2564")]
		add
		{
		}
		[Token(Token = "0x6000344")]
		[Address(RVA = "0xAE5A08", Offset = "0xAE5A08", VA = "0xAE5A08")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C2574", Offset = "0x8C2574")]
		remove
		{
		}
	}

	[Token(Token = "0x14000006")]
	public event Action ExitStateAim
	{
		[Token(Token = "0x6000346")]
		[Address(RVA = "0xAE5B20", Offset = "0xAE5B20", VA = "0xAE5B20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C2584", Offset = "0x8C2584")]
		add
		{
		}
		[Token(Token = "0x6000347")]
		[Address(RVA = "0xAE5BC4", Offset = "0xAE5BC4", VA = "0xAE5BC4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C2594", Offset = "0x8C2594")]
		remove
		{
		}
	}

	[Token(Token = "0x14000007")]
	public event Action EnterStateCancelAim
	{
		[Token(Token = "0x6000349")]
		[Address(RVA = "0xAE5D04", Offset = "0xAE5D04", VA = "0xAE5D04")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C2608", Offset = "0x8C2608")]
		add
		{
		}
		[Token(Token = "0x600034A")]
		[Address(RVA = "0xAE5DA8", Offset = "0xAE5DA8", VA = "0xAE5DA8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C2618", Offset = "0x8C2618")]
		remove
		{
		}
	}

	[Token(Token = "0x14000008")]
	public event Action EnterStatePreTeleport
	{
		[Token(Token = "0x600034C")]
		[Address(RVA = "0xAE5EE8", Offset = "0xAE5EE8", VA = "0xAE5EE8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C268C", Offset = "0x8C268C")]
		add
		{
		}
		[Token(Token = "0x600034D")]
		[Address(RVA = "0xAE5F8C", Offset = "0xAE5F8C", VA = "0xAE5F8C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C269C", Offset = "0x8C269C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000009")]
	public event Action EnterStateCancelTeleport
	{
		[Token(Token = "0x600034F")]
		[Address(RVA = "0xAE60CC", Offset = "0xAE60CC", VA = "0xAE60CC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C2710", Offset = "0x8C2710")]
		add
		{
		}
		[Token(Token = "0x6000350")]
		[Address(RVA = "0xAE6170", Offset = "0xAE6170", VA = "0xAE6170")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C2720", Offset = "0x8C2720")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000A")]
	public event Action EnterStateTeleporting
	{
		[Token(Token = "0x6000352")]
		[Address(RVA = "0xAE62B0", Offset = "0xAE62B0", VA = "0xAE62B0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C2794", Offset = "0x8C2794")]
		add
		{
		}
		[Token(Token = "0x6000353")]
		[Address(RVA = "0xAE6354", Offset = "0xAE6354", VA = "0xAE6354")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C27A4", Offset = "0x8C27A4")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000B")]
	public event Action EnterStatePostTeleport
	{
		[Token(Token = "0x6000355")]
		[Address(RVA = "0xAE6494", Offset = "0xAE6494", VA = "0xAE6494")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C2818", Offset = "0x8C2818")]
		add
		{
		}
		[Token(Token = "0x6000356")]
		[Address(RVA = "0xAE6538", Offset = "0xAE6538", VA = "0xAE6538")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C2828", Offset = "0x8C2828")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000C")]
	public event Action<Transform, UnityEngine.Vector3, Quaternion> Teleported
	{
		[Token(Token = "0x6000358")]
		[Address(RVA = "0xAE6678", Offset = "0xAE6678", VA = "0xAE6678")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C289C", Offset = "0x8C289C")]
		add
		{
		}
		[Token(Token = "0x6000359")]
		[Address(RVA = "0xAE671C", Offset = "0xAE671C", VA = "0xAE671C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C28AC", Offset = "0x8C28AC")]
		remove
		{
		}
	}

	[Token(Token = "0x600032B")]
	[Address(RVA = "0xAE4A04", Offset = "0xAE4A04", VA = "0xAE4A04")]
	public void EnableMovement(bool ready, bool aim, bool pre, bool post)
	{
	}

	[Token(Token = "0x600032C")]
	[Address(RVA = "0xAE4A28", Offset = "0xAE4A28", VA = "0xAE4A28")]
	public void EnableRotation(bool ready, bool aim, bool pre, bool post)
	{
	}

	[Token(Token = "0x6000331")]
	[Address(RVA = "0xAE4E8C", Offset = "0xAE4E8C", VA = "0xAE4E8C")]
	public void OnUpdateTeleportDestination(bool isValidDestination, UnityEngine.Vector3? position, Quaternion? rotation, Quaternion? landingRotation)
	{
	}

	[Token(Token = "0x6000335")]
	[Address(RVA = "0xAE4FA4", Offset = "0xAE4FA4", VA = "0xAE4FA4")]
	public bool AimCollisionTest(UnityEngine.Vector3 start, UnityEngine.Vector3 end, LayerMask aimCollisionLayerMask, out RaycastHit hitInfo)
	{
		return default(bool);
	}

	[Token(Token = "0x6000336")]
	[Address(RVA = "0xAE52FC", Offset = "0xAE52FC", VA = "0xAE52FC")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x8C2488", Offset = "0x8C2488")]
	protected void LogState(string msg)
	{
	}

	[Token(Token = "0x6000337")]
	[Address(RVA = "0xAE53B4", Offset = "0xAE53B4", VA = "0xAE53B4")]
	protected void CreateNewTeleportDestination()
	{
	}

	[Token(Token = "0x6000338")]
	[Address(RVA = "0xAE547C", Offset = "0xAE547C", VA = "0xAE547C")]
	private void DeactivateDestination()
	{
	}

	[Token(Token = "0x6000339")]
	[Address(RVA = "0xAE5498", Offset = "0xAE5498", VA = "0xAE5498")]
	public void RecycleTeleportDestination(TeleportDestination oldDestination)
	{
	}

	[Token(Token = "0x600033A")]
	[Address(RVA = "0xAE5560", Offset = "0xAE5560", VA = "0xAE5560")]
	private void EnableMotion(bool enableLinear, bool enableRotation)
	{
	}

	[Token(Token = "0x600033B")]
	[Address(RVA = "0xAE55A4", Offset = "0xAE55A4", VA = "0xAE55A4")]
	private void Awake()
	{
	}

	[Token(Token = "0x600033C")]
	[Address(RVA = "0xAE5600", Offset = "0xAE5600", VA = "0xAE5600", Slot = "4")]
	public virtual void OnEnable()
	{
	}

	[Token(Token = "0x600033D")]
	[Address(RVA = "0xAE56A0", Offset = "0xAE56A0", VA = "0xAE56A0", Slot = "5")]
	public virtual void OnDisable()
	{
	}

	[Token(Token = "0x6000340")]
	[Address(RVA = "0xAE5630", Offset = "0xAE5630", VA = "0xAE5630")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C24E0", Offset = "0x8C24E0")]
	protected IEnumerator ReadyStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000345")]
	[Address(RVA = "0xAE5AAC", Offset = "0xAE5AAC", VA = "0xAE5AAC")]
	public void OnUpdateAimData(AimData aimData)
	{
	}

	[Token(Token = "0x6000348")]
	[Address(RVA = "0xAE5C68", Offset = "0xAE5C68", VA = "0xAE5C68")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C25A4", Offset = "0x8C25A4")]
	protected IEnumerator AimStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x600034B")]
	[Address(RVA = "0xAE5E4C", Offset = "0xAE5E4C", VA = "0xAE5E4C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C2628", Offset = "0x8C2628")]
	protected IEnumerator CancelAimStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x600034E")]
	[Address(RVA = "0xAE6030", Offset = "0xAE6030", VA = "0xAE6030")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C26AC", Offset = "0x8C26AC")]
	protected IEnumerator PreTeleportStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000351")]
	[Address(RVA = "0xAE6214", Offset = "0xAE6214", VA = "0xAE6214")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C2730", Offset = "0x8C2730")]
	protected IEnumerator CancelTeleportStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000354")]
	[Address(RVA = "0xAE63F8", Offset = "0xAE63F8", VA = "0xAE63F8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C27B4", Offset = "0x8C27B4")]
	protected IEnumerator TeleportingStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000357")]
	[Address(RVA = "0xAE65DC", Offset = "0xAE65DC", VA = "0xAE65DC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C2838", Offset = "0x8C2838")]
	protected IEnumerator PostTeleportStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x600035A")]
	[Address(RVA = "0xAE67C0", Offset = "0xAE67C0", VA = "0xAE67C0")]
	public void DoTeleport()
	{
	}

	[Token(Token = "0x600035B")]
	[Address(RVA = "0xAE6904", Offset = "0xAE6904", VA = "0xAE6904")]
	public UnityEngine.Vector3 GetCharacterPosition()
	{
		return default(UnityEngine.Vector3);
	}

	[Token(Token = "0x600035C")]
	[Address(RVA = "0xAE6938", Offset = "0xAE6938", VA = "0xAE6938")]
	public Quaternion GetHeadRotationY()
	{
		return default(Quaternion);
	}

	[Token(Token = "0x600035D")]
	[Address(RVA = "0xAE6A58", Offset = "0xAE6A58", VA = "0xAE6A58")]
	public void DoWarp(UnityEngine.Vector3 startPos, float positionPercent)
	{
	}

	[Token(Token = "0x600035E")]
	[Address(RVA = "0xAE6B84", Offset = "0xAE6B84", VA = "0xAE6B84")]
	public LocomotionTeleport()
	{
	}
}
[Token(Token = "0x20000C9")]
public class SimpleCapsuleWithStickMovement : MonoBehaviour
{
	[Token(Token = "0x40003D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool EnableLinearMovement;

	[Token(Token = "0x40003D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool EnableRotation;

	[Token(Token = "0x40003D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool HMDRotatesPlayer;

	[Token(Token = "0x40003DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	public bool RotationEitherThumbstick;

	[Token(Token = "0x40003DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float RotationAngle;

	[Token(Token = "0x40003DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float Speed;

	[Token(Token = "0x40003DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRCameraRig CameraRig;

	[Token(Token = "0x40003DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool ReadyToSnapTurn;

	[Token(Token = "0x40003DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Rigidbody _rigidbody;

	[Token(Token = "0x1400000D")]
	public event Action CameraUpdated
	{
		[Token(Token = "0x600035F")]
		[Address(RVA = "0xB1D850", Offset = "0xB1D850", VA = "0xB1D850")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C28BC", Offset = "0x8C28BC")]
		add
		{
		}
		[Token(Token = "0x6000360")]
		[Address(RVA = "0xB1D8F4", Offset = "0xB1D8F4", VA = "0xB1D8F4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C28CC", Offset = "0x8C28CC")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000E")]
	public event Action PreCharacterMove
	{
		[Token(Token = "0x6000361")]
		[Address(RVA = "0xB1D998", Offset = "0xB1D998", VA = "0xB1D998")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C28DC", Offset = "0x8C28DC")]
		add
		{
		}
		[Token(Token = "0x6000362")]
		[Address(RVA = "0xB1DA3C", Offset = "0xB1DA3C", VA = "0xB1DA3C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C28EC", Offset = "0x8C28EC")]
		remove
		{
		}
	}

	[Token(Token = "0x6000363")]
	[Address(RVA = "0xB1DAE0", Offset = "0xB1DAE0", VA = "0xB1DAE0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000364")]
	[Address(RVA = "0xB1DB88", Offset = "0xB1DB88", VA = "0xB1DB88")]
	private void Start()
	{
	}

	[Token(Token = "0x6000365")]
	[Address(RVA = "0xB1DB8C", Offset = "0xB1DB8C", VA = "0xB1DB8C")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000366")]
	[Address(RVA = "0xB1DC00", Offset = "0xB1DC00", VA = "0xB1DC00")]
	private void RotatePlayerToHMD()
	{
	}

	[Token(Token = "0x6000367")]
	[Address(RVA = "0xB1DD70", Offset = "0xB1DD70", VA = "0xB1DD70")]
	private void StickMovement()
	{
	}

	[Token(Token = "0x6000368")]
	[Address(RVA = "0xB1E054", Offset = "0xB1E054", VA = "0xB1E054")]
	private void SnapTurn()
	{
	}

	[Token(Token = "0x6000369")]
	[Address(RVA = "0xB1E244", Offset = "0xB1E244", VA = "0xB1E244")]
	public SimpleCapsuleWithStickMovement()
	{
	}
}
[Token(Token = "0x20000CA")]
public abstract class TeleportAimHandler : TeleportSupport
{
	[Token(Token = "0x600036A")]
	[Address(RVA = "0xB2928C", Offset = "0xB2928C", VA = "0xB2928C", Slot = "4")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x600036B")]
	[Address(RVA = "0xB29320", Offset = "0xB29320", VA = "0xB29320", Slot = "5")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x600036C")]
	public abstract void GetPoints(List<UnityEngine.Vector3> points);

	[Token(Token = "0x600036D")]
	[Address(RVA = "0xB293F0", Offset = "0xB293F0", VA = "0xB293F0")]
	protected TeleportAimHandler()
	{
	}
}
[Token(Token = "0x20000CB")]
public class TeleportAimHandlerLaser : TeleportAimHandler
{
	[Token(Token = "0x40003E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BA8CC", Offset = "0x8BA8CC")]
	public float Range;

	[Token(Token = "0x600036E")]
	[Address(RVA = "0xB29400", Offset = "0xB29400", VA = "0xB29400", Slot = "8")]
	public override void GetPoints(List<UnityEngine.Vector3> points)
	{
	}

	[Token(Token = "0x600036F")]
	[Address(RVA = "0xB2955C", Offset = "0xB2955C", VA = "0xB2955C")]
	public TeleportAimHandlerLaser()
	{
	}
}
[Token(Token = "0x20000CC")]
public class TeleportAimHandlerParabolic : TeleportAimHandler
{
	[Token(Token = "0x40003E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BA904", Offset = "0x8BA904")]
	public float Range;

	[Token(Token = "0x40003E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BA93C", Offset = "0x8BA93C")]
	public float MinimumElevation;

	[Token(Token = "0x40003E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BA974", Offset = "0x8BA974")]
	public float Gravity;

	[Token(Token = "0x40003E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BA9AC", Offset = "0x8BA9AC")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8BA9AC", Offset = "0x8BA9AC")]
	public float AimVelocity;

	[Token(Token = "0x40003E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BAA08", Offset = "0x8BAA08")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8BAA08", Offset = "0x8BAA08")]
	public float AimStep;

	[Token(Token = "0x6000370")]
	[Address(RVA = "0xB2956C", Offset = "0xB2956C", VA = "0xB2956C", Slot = "8")]
	public override void GetPoints(List<UnityEngine.Vector3> points)
	{
	}

	[Token(Token = "0x6000371")]
	[Address(RVA = "0xB297B8", Offset = "0xB297B8", VA = "0xB297B8")]
	public TeleportAimHandlerParabolic()
	{
	}
}
[Token(Token = "0x20000CD")]
public class TeleportAimVisualLaser : TeleportSupport
{
	[Token(Token = "0x40003E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BAA60", Offset = "0x8BAA60")]
	public LineRenderer LaserPrefab;

	[Token(Token = "0x40003E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action _enterAimStateAction;

	[Token(Token = "0x40003EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly Action _exitAimStateAction;

	[Token(Token = "0x40003EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private readonly Action<LocomotionTeleport.AimData> _updateAimDataAction;

	[Token(Token = "0x40003EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private LineRenderer _lineRenderer;

	[Token(Token = "0x40003ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private UnityEngine.Vector3[] _linePoints;

	[Token(Token = "0x6000372")]
	[Address(RVA = "0xB297CC", Offset = "0xB297CC", VA = "0xB297CC")]
	public TeleportAimVisualLaser()
	{
	}

	[Token(Token = "0x6000373")]
	[Address(RVA = "0xB298B0", Offset = "0xB298B0", VA = "0xB298B0")]
	private void EnterAimState()
	{
	}

	[Token(Token = "0x6000374")]
	[Address(RVA = "0xB298E0", Offset = "0xB298E0", VA = "0xB298E0")]
	private void ExitAimState()
	{
	}

	[Token(Token = "0x6000375")]
	[Address(RVA = "0xB29910", Offset = "0xB29910", VA = "0xB29910")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000376")]
	[Address(RVA = "0xB299B0", Offset = "0xB299B0", VA = "0xB299B0", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x6000377")]
	[Address(RVA = "0xB29A1C", Offset = "0xB29A1C", VA = "0xB29A1C", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x6000378")]
	[Address(RVA = "0xB29A84", Offset = "0xB29A84", VA = "0xB29A84")]
	private void UpdateAimData(LocomotionTeleport.AimData obj)
	{
	}
}
[Token(Token = "0x20000CE")]
public class TeleportDestination : MonoBehaviour
{
	[Token(Token = "0x40003EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8BAA98", Offset = "0x8BAA98")]
	private bool <IsValidDestination>k__BackingField;

	[Token(Token = "0x40003EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BAAA8", Offset = "0x8BAAA8")]
	public Transform PositionIndicator;

	[Token(Token = "0x40003F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BAAE0", Offset = "0x8BAAE0")]
	public Transform OrientationIndicator;

	[Token(Token = "0x40003F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BAB18", Offset = "0x8BAB18")]
	public Quaternion LandingRotation;

	[NonSerialized]
	[Token(Token = "0x40003F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public LocomotionTeleport LocomotionTeleport;

	[NonSerialized]
	[Token(Token = "0x40003F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public LocomotionTeleport.States TeleportState;

	[Token(Token = "0x40003F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private readonly Action<bool, UnityEngine.Vector3?, Quaternion?, Quaternion?> _updateTeleportDestinationAction;

	[Token(Token = "0x40003F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool _eventsActive;

	[Token(Token = "0x17000041")]
	public bool IsValidDestination
	{
		[Token(Token = "0x6000379")]
		[Address(RVA = "0xB29BA0", Offset = "0xB29BA0", VA = "0xB29BA0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C28FC", Offset = "0x8C28FC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600037A")]
		[Address(RVA = "0xB29BA8", Offset = "0xB29BA8", VA = "0xB29BA8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C290C", Offset = "0x8C290C")]
		private set
		{
		}
	}

	[Token(Token = "0x1400000F")]
	public event Action<TeleportDestination> Deactivated
	{
		[Token(Token = "0x600037F")]
		[Address(RVA = "0xB29D58", Offset = "0xB29D58", VA = "0xB29D58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C291C", Offset = "0x8C291C")]
		add
		{
		}
		[Token(Token = "0x6000380")]
		[Address(RVA = "0xB29DFC", Offset = "0xB29DFC", VA = "0xB29DFC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C292C", Offset = "0x8C292C")]
		remove
		{
		}
	}

	[Token(Token = "0x600037B")]
	[Address(RVA = "0xB29BB4", Offset = "0xB29BB4", VA = "0xB29BB4")]
	private TeleportDestination()
	{
	}

	[Token(Token = "0x600037C")]
	[Address(RVA = "0xB29C3C", Offset = "0xB29C3C", VA = "0xB29C3C")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x600037D")]
	[Address(RVA = "0xB29D14", Offset = "0xB29D14", VA = "0xB29D14")]
	private void TryDisableEventHandlers()
	{
	}

	[Token(Token = "0x600037E")]
	[Address(RVA = "0xB29D54", Offset = "0xB29D54", VA = "0xB29D54")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x6000381")]
	[Address(RVA = "0xB29EA0", Offset = "0xB29EA0", VA = "0xB29EA0")]
	public void OnDeactivated()
	{
	}

	[Token(Token = "0x6000382")]
	[Address(RVA = "0xB29F08", Offset = "0xB29F08", VA = "0xB29F08")]
	public void Recycle()
	{
	}

	[Token(Token = "0x6000383")]
	[Address(RVA = "0xB29F28", Offset = "0xB29F28", VA = "0xB29F28", Slot = "4")]
	public virtual void UpdateTeleportDestination(bool isValidDestination, UnityEngine.Vector3? position, Quaternion? rotation, Quaternion? landingRotation)
	{
	}
}
[Token(Token = "0x20000CF")]
public abstract class TeleportInputHandler : TeleportSupport
{
	[Token(Token = "0x2000661")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B7A9C", Offset = "0x8B7A9C")]
	private sealed class <TeleportReadyCoroutine>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400212A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400212B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400212C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportInputHandler <>4__this;

		[Token(Token = "0x17000465")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002789")]
			[Address(RVA = "0xB2A5EC", Offset = "0xB2A5EC", VA = "0xB2A5EC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000466")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600278B")]
			[Address(RVA = "0xB2A654", Offset = "0xB2A654", VA = "0xB2A654", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002786")]
		[Address(RVA = "0xB2A338", Offset = "0xB2A338", VA = "0xB2A338")]
		[DebuggerHidden]
		public <TeleportReadyCoroutine>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x6002787")]
		[Address(RVA = "0xB2A55C", Offset = "0xB2A55C", VA = "0xB2A55C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002788")]
		[Address(RVA = "0xB2A560", Offset = "0xB2A560", VA = "0xB2A560", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600278A")]
		[Address(RVA = "0xB2A5F4", Offset = "0xB2A5F4", VA = "0xB2A5F4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000662")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B7AAC", Offset = "0x8B7AAC")]
	private sealed class <TeleportAimCoroutine>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400212D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400212E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400212F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportInputHandler <>4__this;

		[Token(Token = "0x17000467")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600278F")]
			[Address(RVA = "0xB2A4EC", Offset = "0xB2A4EC", VA = "0xB2A4EC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000468")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002791")]
			[Address(RVA = "0xB2A554", Offset = "0xB2A554", VA = "0xB2A554", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600278C")]
		[Address(RVA = "0xB2A3D4", Offset = "0xB2A3D4", VA = "0xB2A3D4")]
		[DebuggerHidden]
		public <TeleportAimCoroutine>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x600278D")]
		[Address(RVA = "0xB2A458", Offset = "0xB2A458", VA = "0xB2A458", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600278E")]
		[Address(RVA = "0xB2A45C", Offset = "0xB2A45C", VA = "0xB2A45C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002790")]
		[Address(RVA = "0xB2A4F4", Offset = "0xB2A4F4", VA = "0xB2A4F4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40003F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly Action _startReadyAction;

	[Token(Token = "0x40003F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action _startAimAction;

	[Token(Token = "0x6000384")]
	[Address(RVA = "0xB2A108", Offset = "0xB2A108", VA = "0xB2A108")]
	protected TeleportInputHandler()
	{
	}

	[Token(Token = "0x6000385")]
	[Address(RVA = "0xB2A1B4", Offset = "0xB2A1B4", VA = "0xB2A1B4", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x6000386")]
	[Address(RVA = "0xB2A20C", Offset = "0xB2A20C", VA = "0xB2A20C", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x6000387")]
	[Address(RVA = "0xB2A2C8", Offset = "0xB2A2C8", VA = "0xB2A2C8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C293C", Offset = "0x8C293C")]
	private IEnumerator TeleportReadyCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000388")]
	[Address(RVA = "0xB2A364", Offset = "0xB2A364", VA = "0xB2A364")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C29A0", Offset = "0x8C29A0")]
	private IEnumerator TeleportAimCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000389")]
	public abstract LocomotionTeleport.TeleportIntentions GetIntention();

	[Token(Token = "0x600038A")]
	public abstract void GetAimData(out Ray aimRay);

	[Token(Token = "0x600038B")]
	[Address(RVA = "0xB2A400", Offset = "0xB2A400", VA = "0xB2A400")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C2A04", Offset = "0x8C2A04")]
	private void <.ctor>b__2_0()
	{
	}

	[Token(Token = "0x600038C")]
	[Address(RVA = "0xB2A42C", Offset = "0xB2A42C", VA = "0xB2A42C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C2A14", Offset = "0x8C2A14")]
	private void <.ctor>b__2_1()
	{
	}
}
[Token(Token = "0x20000D0")]
public class TeleportInputHandlerAvatarTouch : TeleportInputHandlerHMD
{
	[Token(Token = "0x2000663")]
	public enum InputModes
	{
		[Token(Token = "0x4002131")]
		CapacitiveButtonForAimAndTeleport,
		[Token(Token = "0x4002132")]
		SeparateButtonsForAimAndTeleport,
		[Token(Token = "0x4002133")]
		ThumbstickTeleport,
		[Token(Token = "0x4002134")]
		ThumbstickTeleportForwardBackOnly
	}

	[Token(Token = "0x2000664")]
	public enum AimCapTouchButtons
	{
		[Token(Token = "0x4002136")]
		A,
		[Token(Token = "0x4002137")]
		B,
		[Token(Token = "0x4002138")]
		LeftTrigger,
		[Token(Token = "0x4002139")]
		LeftThumbstick,
		[Token(Token = "0x400213A")]
		RightTrigger,
		[Token(Token = "0x400213B")]
		RightThumbstick,
		[Token(Token = "0x400213C")]
		X,
		[Token(Token = "0x400213D")]
		Y
	}

	[Token(Token = "0x40003F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BAB60", Offset = "0x8BAB60")]
	public OvrAvatar Avatar;

	[Token(Token = "0x40003FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BAB98", Offset = "0x8BAB98")]
	public InputModes InputMode;

	[Token(Token = "0x40003FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private readonly OVRInput.RawButton[] _rawButtons;

	[Token(Token = "0x40003FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private readonly OVRInput.RawTouch[] _rawTouch;

	[Token(Token = "0x40003FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BABD0", Offset = "0x8BABD0")]
	public OVRInput.Controller AimingController;

	[Token(Token = "0x40003FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private OVRInput.Controller InitiatingController;

	[Token(Token = "0x40003FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BAC08", Offset = "0x8BAC08")]
	public AimCapTouchButtons CapacitiveAimAndTeleportButton;

	[Token(Token = "0x4000400")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BAC40", Offset = "0x8BAC40")]
	public float ThumbstickTeleportThreshold;

	[Token(Token = "0x600038D")]
	[Address(RVA = "0xB2A65C", Offset = "0xB2A65C", VA = "0xB2A65C")]
	private void Start()
	{
	}

	[Token(Token = "0x600038E")]
	[Address(RVA = "0xB2A73C", Offset = "0xB2A73C", VA = "0xB2A73C", Slot = "8")]
	public override LocomotionTeleport.TeleportIntentions GetIntention()
	{
		return default(LocomotionTeleport.TeleportIntentions);
	}

	[Token(Token = "0x600038F")]
	[Address(RVA = "0xB2ACE0", Offset = "0xB2ACE0", VA = "0xB2ACE0", Slot = "9")]
	public override void GetAimData(out Ray aimRay)
	{
	}

	[Token(Token = "0x6000390")]
	[Address(RVA = "0xB2ADB8", Offset = "0xB2ADB8", VA = "0xB2ADB8")]
	public TeleportInputHandlerAvatarTouch()
	{
	}
}
[Token(Token = "0x20000D1")]
public class TeleportInputHandlerHMD : TeleportInputHandler
{
	[Token(Token = "0x4000401")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8BAC78", Offset = "0x8BAC78")]
	private Transform <Pointer>k__BackingField;

	[Token(Token = "0x4000402")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BAC88", Offset = "0x8BAC88")]
	public OVRInput.RawButton AimButton;

	[Token(Token = "0x4000403")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BACC0", Offset = "0x8BACC0")]
	public OVRInput.RawButton TeleportButton;

	[Token(Token = "0x4000404")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BACF8", Offset = "0x8BACF8")]
	public bool FastTeleport;

	[Token(Token = "0x17000042")]
	public Transform Pointer
	{
		[Token(Token = "0x6000391")]
		[Address(RVA = "0xB2AE68", Offset = "0xB2AE68", VA = "0xB2AE68")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C2A24", Offset = "0x8C2A24")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000392")]
		[Address(RVA = "0xB2AE70", Offset = "0xB2AE70", VA = "0xB2AE70")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C2A34", Offset = "0x8C2A34")]
		private set
		{
		}
	}

	[Token(Token = "0x6000393")]
	[Address(RVA = "0xB2AB84", Offset = "0xB2AB84", VA = "0xB2AB84", Slot = "8")]
	public override LocomotionTeleport.TeleportIntentions GetIntention()
	{
		return default(LocomotionTeleport.TeleportIntentions);
	}

	[Token(Token = "0x6000394")]
	[Address(RVA = "0xB2AE78", Offset = "0xB2AE78", VA = "0xB2AE78", Slot = "9")]
	public override void GetAimData(out Ray aimRay)
	{
	}

	[Token(Token = "0x6000395")]
	[Address(RVA = "0xB2AE64", Offset = "0xB2AE64", VA = "0xB2AE64")]
	public TeleportInputHandlerHMD()
	{
	}
}
[Token(Token = "0x20000D2")]
public class TeleportInputHandlerTouch : TeleportInputHandlerHMD
{
	[Token(Token = "0x2000665")]
	public enum InputModes
	{
		[Token(Token = "0x400213F")]
		CapacitiveButtonForAimAndTeleport,
		[Token(Token = "0x4002140")]
		SeparateButtonsForAimAndTeleport,
		[Token(Token = "0x4002141")]
		ThumbstickTeleport,
		[Token(Token = "0x4002142")]
		ThumbstickTeleportForwardBackOnly
	}

	[Token(Token = "0x2000666")]
	public enum AimCapTouchButtons
	{
		[Token(Token = "0x4002144")]
		A,
		[Token(Token = "0x4002145")]
		B,
		[Token(Token = "0x4002146")]
		LeftTrigger,
		[Token(Token = "0x4002147")]
		LeftThumbstick,
		[Token(Token = "0x4002148")]
		RightTrigger,
		[Token(Token = "0x4002149")]
		RightThumbstick,
		[Token(Token = "0x400214A")]
		X,
		[Token(Token = "0x400214B")]
		Y
	}

	[Token(Token = "0x4000405")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform LeftHand;

	[Token(Token = "0x4000406")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform RightHand;

	[Token(Token = "0x4000407")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BAD30", Offset = "0x8BAD30")]
	public InputModes InputMode;

	[Token(Token = "0x4000408")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private readonly OVRInput.RawButton[] _rawButtons;

	[Token(Token = "0x4000409")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private readonly OVRInput.RawTouch[] _rawTouch;

	[Token(Token = "0x400040A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BAD68", Offset = "0x8BAD68")]
	public OVRInput.Controller AimingController;

	[Token(Token = "0x400040B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private OVRInput.Controller InitiatingController;

	[Token(Token = "0x400040C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BADA0", Offset = "0x8BADA0")]
	public AimCapTouchButtons CapacitiveAimAndTeleportButton;

	[Token(Token = "0x400040D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BADD8", Offset = "0x8BADD8")]
	public float ThumbstickTeleportThreshold;

	[Token(Token = "0x6000396")]
	[Address(RVA = "0xB2AF30", Offset = "0xB2AF30", VA = "0xB2AF30")]
	private void Start()
	{
	}

	[Token(Token = "0x6000397")]
	[Address(RVA = "0xB2AF34", Offset = "0xB2AF34", VA = "0xB2AF34", Slot = "8")]
	public override LocomotionTeleport.TeleportIntentions GetIntention()
	{
		return default(LocomotionTeleport.TeleportIntentions);
	}

	[Token(Token = "0x6000398")]
	[Address(RVA = "0xB2B37C", Offset = "0xB2B37C", VA = "0xB2B37C", Slot = "9")]
	public override void GetAimData(out Ray aimRay)
	{
	}

	[Token(Token = "0x6000399")]
	[Address(RVA = "0xB2B43C", Offset = "0xB2B43C", VA = "0xB2B43C")]
	public TeleportInputHandlerTouch()
	{
	}
}
[Token(Token = "0x20000D3")]
public abstract class TeleportOrientationHandler : TeleportSupport
{
	[Token(Token = "0x2000667")]
	public enum OrientationModes
	{
		[Token(Token = "0x400214D")]
		HeadRelative,
		[Token(Token = "0x400214E")]
		ForwardFacing
	}

	[Token(Token = "0x2000668")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B7ABC", Offset = "0x8B7ABC")]
	private sealed class <UpdateOrientationCoroutine>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400214F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002150")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002151")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportOrientationHandler <>4__this;

		[Token(Token = "0x17000469")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002795")]
			[Address(RVA = "0xB2B8CC", Offset = "0xB2B8CC", VA = "0xB2B8CC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700046A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002797")]
			[Address(RVA = "0xB2B934", Offset = "0xB2B934", VA = "0xB2B934", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002792")]
		[Address(RVA = "0xB2B6A8", Offset = "0xB2B6A8", VA = "0xB2B6A8")]
		[DebuggerHidden]
		public <UpdateOrientationCoroutine>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6002793")]
		[Address(RVA = "0xB2B824", Offset = "0xB2B824", VA = "0xB2B824", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002794")]
		[Address(RVA = "0xB2B828", Offset = "0xB2B828", VA = "0xB2B828", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002796")]
		[Address(RVA = "0xB2B8D4", Offset = "0xB2B8D4", VA = "0xB2B8D4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400040E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly Action _updateOrientationAction;

	[Token(Token = "0x400040F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action<LocomotionTeleport.AimData> _updateAimDataAction;

	[Token(Token = "0x4000410")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected LocomotionTeleport.AimData AimData;

	[Token(Token = "0x600039A")]
	[Address(RVA = "0xB2B4E8", Offset = "0xB2B4E8", VA = "0xB2B4E8")]
	protected TeleportOrientationHandler()
	{
	}

	[Token(Token = "0x600039B")]
	[Address(RVA = "0xB2B59C", Offset = "0xB2B59C", VA = "0xB2B59C")]
	private void UpdateAimData(LocomotionTeleport.AimData aimData)
	{
	}

	[Token(Token = "0x600039C")]
	[Address(RVA = "0xB2B5A4", Offset = "0xB2B5A4", VA = "0xB2B5A4", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x600039D")]
	[Address(RVA = "0xB2B5F0", Offset = "0xB2B5F0", VA = "0xB2B5F0", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x600039E")]
	[Address(RVA = "0xB2B638", Offset = "0xB2B638", VA = "0xB2B638")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C2A44", Offset = "0x8C2A44")]
	private IEnumerator UpdateOrientationCoroutine()
	{
		return null;
	}

	[Token(Token = "0x600039F")]
	protected abstract void InitializeTeleportDestination();

	[Token(Token = "0x60003A0")]
	protected abstract void UpdateTeleportDestination();

	[Token(Token = "0x60003A1")]
	[Address(RVA = "0xB2B6D4", Offset = "0xB2B6D4", VA = "0xB2B6D4")]
	protected Quaternion GetLandingOrientation(OrientationModes mode, Quaternion rotation)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x60003A2")]
	[Address(RVA = "0xB2B7F8", Offset = "0xB2B7F8", VA = "0xB2B7F8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C2AA8", Offset = "0x8C2AA8")]
	private void <.ctor>b__3_0()
	{
	}
}
[Token(Token = "0x20000D4")]
public class TeleportOrientationHandler360 : TeleportOrientationHandler
{
	[Token(Token = "0x60003A3")]
	[Address(RVA = "0xB2B93C", Offset = "0xB2B93C", VA = "0xB2B93C", Slot = "8")]
	protected override void InitializeTeleportDestination()
	{
	}

	[Token(Token = "0x60003A4")]
	[Address(RVA = "0xB2B940", Offset = "0xB2B940", VA = "0xB2B940", Slot = "9")]
	protected override void UpdateTeleportDestination()
	{
	}

	[Token(Token = "0x60003A5")]
	[Address(RVA = "0xB2B9BC", Offset = "0xB2B9BC", VA = "0xB2B9BC")]
	public TeleportOrientationHandler360()
	{
	}
}
[Token(Token = "0x20000D5")]
public class TeleportOrientationHandlerHMD : TeleportOrientationHandler
{
	[Token(Token = "0x4000411")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BAE10", Offset = "0x8BAE10")]
	public OrientationModes OrientationMode;

	[Token(Token = "0x4000412")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BAE48", Offset = "0x8BAE48")]
	public bool UpdateOrientationDuringAim;

	[Token(Token = "0x4000413")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BAE80", Offset = "0x8BAE80")]
	public float AimDistanceThreshold;

	[Token(Token = "0x4000414")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BAEB8", Offset = "0x8BAEB8")]
	public float AimDistanceMaxRange;

	[Token(Token = "0x4000415")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Quaternion _initialRotation;

	[Token(Token = "0x60003A6")]
	[Address(RVA = "0xB2B9C0", Offset = "0xB2B9C0", VA = "0xB2B9C0", Slot = "8")]
	protected override void InitializeTeleportDestination()
	{
	}

	[Token(Token = "0x60003A7")]
	[Address(RVA = "0xB2BA30", Offset = "0xB2BA30", VA = "0xB2BA30", Slot = "9")]
	protected override void UpdateTeleportDestination()
	{
	}

	[Token(Token = "0x60003A8")]
	[Address(RVA = "0xB2BEA8", Offset = "0xB2BEA8", VA = "0xB2BEA8")]
	public TeleportOrientationHandlerHMD()
	{
	}
}
[Token(Token = "0x20000D6")]
public class TeleportOrientationHandlerThumbstick : TeleportOrientationHandler
{
	[Token(Token = "0x4000416")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BAEF0", Offset = "0x8BAEF0")]
	public OrientationModes OrientationMode;

	[Token(Token = "0x4000417")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BAF28", Offset = "0x8BAF28")]
	public OVRInput.Controller Thumbstick;

	[Token(Token = "0x4000418")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BAF60", Offset = "0x8BAF60")]
	public float RotateStickThreshold;

	[Token(Token = "0x4000419")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Quaternion _initialRotation;

	[Token(Token = "0x400041A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Quaternion _currentRotation;

	[Token(Token = "0x400041B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private UnityEngine.Vector2 _lastValidDirection;

	[Token(Token = "0x60003A9")]
	[Address(RVA = "0xB2BEAC", Offset = "0xB2BEAC", VA = "0xB2BEAC", Slot = "8")]
	protected override void InitializeTeleportDestination()
	{
	}

	[Token(Token = "0x60003AA")]
	[Address(RVA = "0xB2BEF0", Offset = "0xB2BEF0", VA = "0xB2BEF0", Slot = "9")]
	protected override void UpdateTeleportDestination()
	{
	}

	[Token(Token = "0x60003AB")]
	[Address(RVA = "0xB2C360", Offset = "0xB2C360", VA = "0xB2C360")]
	public TeleportOrientationHandlerThumbstick()
	{
	}
}
[Token(Token = "0x20000D7")]
public class TeleportPoint : MonoBehaviour
{
	[Token(Token = "0x400041C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float dimmingSpeed;

	[Token(Token = "0x400041D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float fullIntensity;

	[Token(Token = "0x400041E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float lowIntensity;

	[Token(Token = "0x400041F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform destTransform;

	[Token(Token = "0x4000420")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float lastLookAtTime;

	[Token(Token = "0x60003AC")]
	[Address(RVA = "0xB2C370", Offset = "0xB2C370", VA = "0xB2C370")]
	private void Start()
	{
	}

	[Token(Token = "0x60003AD")]
	[Address(RVA = "0xB2C374", Offset = "0xB2C374", VA = "0xB2C374")]
	public Transform GetDestTransform()
	{
		return null;
	}

	[Token(Token = "0x60003AE")]
	[Address(RVA = "0xB2C37C", Offset = "0xB2C37C", VA = "0xB2C37C")]
	private void Update()
	{
	}

	[Token(Token = "0x60003AF")]
	[Address(RVA = "0xB2C464", Offset = "0xB2C464", VA = "0xB2C464")]
	public void OnLookAt()
	{
	}

	[Token(Token = "0x60003B0")]
	[Address(RVA = "0xB2C48C", Offset = "0xB2C48C", VA = "0xB2C48C")]
	public TeleportPoint()
	{
	}
}
[Token(Token = "0x20000D8")]
public abstract class TeleportSupport : MonoBehaviour
{
	[Token(Token = "0x4000421")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8BAF98", Offset = "0x8BAF98")]
	private LocomotionTeleport <LocomotionTeleport>k__BackingField;

	[Token(Token = "0x4000422")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool _eventsActive;

	[Token(Token = "0x17000043")]
	protected LocomotionTeleport LocomotionTeleport
	{
		[Token(Token = "0x60003B1")]
		[Address(RVA = "0xB2C4A4", Offset = "0xB2C4A4", VA = "0xB2C4A4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C2AB8", Offset = "0x8C2AB8")]
		get
		{
			return null;
		}
		[Token(Token = "0x60003B2")]
		[Address(RVA = "0xB2C4AC", Offset = "0xB2C4AC", VA = "0xB2C4AC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C2AC8", Offset = "0x8C2AC8")]
		private set
		{
		}
	}

	[Token(Token = "0x60003B3")]
	[Address(RVA = "0xB292BC", Offset = "0xB292BC", VA = "0xB292BC", Slot = "4")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x60003B4")]
	[Address(RVA = "0xB293C4", Offset = "0xB293C4", VA = "0xB293C4", Slot = "5")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x60003B5")]
	[Address(RVA = "0xB2C4B4", Offset = "0xB2C4B4", VA = "0xB2C4B4")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x8C2AD8", Offset = "0x8C2AD8")]
	private void LogEventHandler(string msg)
	{
	}

	[Token(Token = "0x60003B6")]
	[Address(RVA = "0xB29A10", Offset = "0xB29A10", VA = "0xB29A10", Slot = "6")]
	protected virtual void AddEventHandlers()
	{
	}

	[Token(Token = "0x60003B7")]
	[Address(RVA = "0xB29A7C", Offset = "0xB29A7C", VA = "0xB29A7C", Slot = "7")]
	protected virtual void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x60003B8")]
	[Address(RVA = "0xB293F8", Offset = "0xB293F8", VA = "0xB293F8")]
	protected TeleportSupport()
	{
	}
}
[Token(Token = "0x20000D9")]
public abstract class TeleportTargetHandler : TeleportSupport
{
	[Token(Token = "0x2000669")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B7ACC", Offset = "0x8B7ACC")]
	private sealed class <TargetAimCoroutine>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002152")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002153")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002154")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportTargetHandler <>4__this;

		[Token(Token = "0x1700046B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600279B")]
			[Address(RVA = "0xB2CB08", Offset = "0xB2CB08", VA = "0xB2CB08", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700046C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600279D")]
			[Address(RVA = "0xB2CB70", Offset = "0xB2CB70", VA = "0xB2CB70", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002798")]
		[Address(RVA = "0xB2C704", Offset = "0xB2C704", VA = "0xB2C704")]
		[DebuggerHidden]
		public <TargetAimCoroutine>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6002799")]
		[Address(RVA = "0xB2C89C", Offset = "0xB2C89C", VA = "0xB2C89C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600279A")]
		[Address(RVA = "0xB2C8A0", Offset = "0xB2C8A0", VA = "0xB2C8A0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600279C")]
		[Address(RVA = "0xB2CB10", Offset = "0xB2CB10", VA = "0xB2CB10", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000423")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BAFA8", Offset = "0x8BAFA8")]
	public LayerMask AimCollisionLayerMask;

	[Token(Token = "0x4000424")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected readonly LocomotionTeleport.AimData AimData;

	[Token(Token = "0x4000425")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action _startAimAction;

	[Token(Token = "0x4000426")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly List<UnityEngine.Vector3> _aimPoints;

	[Token(Token = "0x4000427")]
	private const float ERROR_MARGIN = 0.1f;

	[Token(Token = "0x60003B9")]
	[Address(RVA = "0xB2C57C", Offset = "0xB2C57C", VA = "0xB2C57C")]
	protected TeleportTargetHandler()
	{
	}

	[Token(Token = "0x60003BA")]
	[Address(RVA = "0xB2C640", Offset = "0xB2C640", VA = "0xB2C640", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x60003BB")]
	[Address(RVA = "0xB2C66C", Offset = "0xB2C66C", VA = "0xB2C66C", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x60003BC")]
	[Address(RVA = "0xB2C694", Offset = "0xB2C694", VA = "0xB2C694")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C2B10", Offset = "0x8C2B10")]
	private IEnumerator TargetAimCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60003BD")]
	[Address(RVA = "0xB2C730", Offset = "0xB2C730", VA = "0xB2C730", Slot = "8")]
	protected virtual void ResetAimData()
	{
	}

	[Token(Token = "0x60003BE")]
	protected abstract bool ConsiderTeleport(UnityEngine.Vector3 start, ref UnityEngine.Vector3 end);

	[Token(Token = "0x60003BF")]
	[Address(RVA = "0xB2C74C", Offset = "0xB2C74C", VA = "0xB2C74C", Slot = "10")]
	public virtual UnityEngine.Vector3? ConsiderDestination(UnityEngine.Vector3 location)
	{
		return null;
	}

	[Token(Token = "0x60003C0")]
	[Address(RVA = "0xB2C870", Offset = "0xB2C870", VA = "0xB2C870")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C2B74", Offset = "0x8C2B74")]
	private void <.ctor>b__3_0()
	{
	}
}
[Token(Token = "0x20000DA")]
public class TeleportTargetHandlerNavMesh : TeleportTargetHandler
{
	[Token(Token = "0x4000428")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int NavMeshAreaMask;

	[Token(Token = "0x4000429")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private NavMeshPath _path;

	[Token(Token = "0x60003C1")]
	[Address(RVA = "0xB2CB78", Offset = "0xB2CB78", VA = "0xB2CB78")]
	private void Awake()
	{
	}

	[Token(Token = "0x60003C2")]
	[Address(RVA = "0xB2CBD8", Offset = "0xB2CBD8", VA = "0xB2CBD8", Slot = "9")]
	protected override bool ConsiderTeleport(UnityEngine.Vector3 start, ref UnityEngine.Vector3 end)
	{
		return default(bool);
	}

	[Token(Token = "0x60003C3")]
	[Address(RVA = "0xB2CD5C", Offset = "0xB2CD5C", VA = "0xB2CD5C", Slot = "10")]
	public override UnityEngine.Vector3? ConsiderDestination(UnityEngine.Vector3 location)
	{
		return null;
	}

	[Token(Token = "0x60003C4")]
	[Address(RVA = "0xB2CE4C", Offset = "0xB2CE4C", VA = "0xB2CE4C")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x8C2B84", Offset = "0x8C2B84")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x60003C5")]
	[Address(RVA = "0xB2CE50", Offset = "0xB2CE50", VA = "0xB2CE50")]
	public TeleportTargetHandlerNavMesh()
	{
	}
}
[Token(Token = "0x20000DB")]
public class TeleportTargetHandlerNode : TeleportTargetHandler
{
	[Token(Token = "0x400042A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BAFE0", Offset = "0x8BAFE0")]
	public float LOSOffset;

	[Token(Token = "0x400042B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BB018", Offset = "0x8BB018")]
	public LayerMask TeleportLayerMask;

	[Token(Token = "0x60003C6")]
	[Address(RVA = "0xB2CE5C", Offset = "0xB2CE5C", VA = "0xB2CE5C", Slot = "9")]
	protected override bool ConsiderTeleport(UnityEngine.Vector3 start, ref UnityEngine.Vector3 end)
	{
		return default(bool);
	}

	[Token(Token = "0x60003C7")]
	[Address(RVA = "0xB2D08C", Offset = "0xB2D08C", VA = "0xB2D08C")]
	public TeleportTargetHandlerNode()
	{
	}
}
[Token(Token = "0x20000DC")]
public class TeleportTargetHandlerPhysical : TeleportTargetHandler
{
	[Token(Token = "0x60003C8")]
	[Address(RVA = "0xB2D098", Offset = "0xB2D098", VA = "0xB2D098", Slot = "9")]
	protected override bool ConsiderTeleport(UnityEngine.Vector3 start, ref UnityEngine.Vector3 end)
	{
		return default(bool);
	}

	[Token(Token = "0x60003C9")]
	[Address(RVA = "0xB2D21C", Offset = "0xB2D21C", VA = "0xB2D21C")]
	public TeleportTargetHandlerPhysical()
	{
	}
}
[Token(Token = "0x20000DD")]
public abstract class TeleportTransition : TeleportSupport
{
	[Token(Token = "0x60003CA")]
	[Address(RVA = "0xB2D220", Offset = "0xB2D220", VA = "0xB2D220", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x60003CB")]
	[Address(RVA = "0xB2D2B8", Offset = "0xB2D2B8", VA = "0xB2D2B8", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x60003CC")]
	protected abstract void LocomotionTeleportOnEnterStateTeleporting();

	[Token(Token = "0x60003CD")]
	[Address(RVA = "0xB2D34C", Offset = "0xB2D34C", VA = "0xB2D34C")]
	protected TeleportTransition()
	{
	}
}
[Token(Token = "0x20000DE")]
public class TeleportTransitionBlink : TeleportTransition
{
	[Token(Token = "0x200066A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B7ADC", Offset = "0x8B7ADC")]
	private sealed class <BlinkCoroutine>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002155")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002156")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002157")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportTransitionBlink <>4__this;

		[Token(Token = "0x4002158")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <elapsedTime>5__2;

		[Token(Token = "0x4002159")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <teleportTime>5__3;

		[Token(Token = "0x400215A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool <teleported>5__4;

		[Token(Token = "0x1700046D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60027A1")]
			[Address(RVA = "0xB2D6B4", Offset = "0xB2D6B4", VA = "0xB2D6B4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700046E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60027A3")]
			[Address(RVA = "0xB2D71C", Offset = "0xB2D71C", VA = "0xB2D71C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600279E")]
		[Address(RVA = "0xB2D3F0", Offset = "0xB2D3F0", VA = "0xB2D3F0")]
		[DebuggerHidden]
		public <BlinkCoroutine>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x600279F")]
		[Address(RVA = "0xB2D5B4", Offset = "0xB2D5B4", VA = "0xB2D5B4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60027A0")]
		[Address(RVA = "0xB2D5B8", Offset = "0xB2D5B8", VA = "0xB2D5B8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60027A2")]
		[Address(RVA = "0xB2D6BC", Offset = "0xB2D6BC", VA = "0xB2D6BC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400042C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BB050", Offset = "0x8BB050")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8BB050", Offset = "0x8BB050")]
	public float TransitionDuration;

	[Token(Token = "0x400042D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BB0A8", Offset = "0x8BB0A8")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8BB0A8", Offset = "0x8BB0A8")]
	public float TeleportDelay;

	[Token(Token = "0x400042E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BB0FC", Offset = "0x8BB0FC")]
	public AnimationCurve FadeLevels;

	[Token(Token = "0x60003CE")]
	[Address(RVA = "0xB2D354", Offset = "0xB2D354", VA = "0xB2D354", Slot = "8")]
	protected override void LocomotionTeleportOnEnterStateTeleporting()
	{
	}

	[Token(Token = "0x60003CF")]
	[Address(RVA = "0xB2D380", Offset = "0xB2D380", VA = "0xB2D380")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C2BBC", Offset = "0x8C2BBC")]
	protected IEnumerator BlinkCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60003D0")]
	[Address(RVA = "0xB2D41C", Offset = "0xB2D41C", VA = "0xB2D41C")]
	public TeleportTransitionBlink()
	{
	}
}
[Token(Token = "0x20000DF")]
public class TeleportTransitionInstant : TeleportTransition
{
	[Token(Token = "0x60003D1")]
	[Address(RVA = "0xB2D724", Offset = "0xB2D724", VA = "0xB2D724", Slot = "8")]
	protected override void LocomotionTeleportOnEnterStateTeleporting()
	{
	}

	[Token(Token = "0x60003D2")]
	[Address(RVA = "0xB2D740", Offset = "0xB2D740", VA = "0xB2D740")]
	public TeleportTransitionInstant()
	{
	}
}
[Token(Token = "0x20000E0")]
public class TeleportTransitionWarp : TeleportTransition
{
	[Token(Token = "0x200066B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B7AEC", Offset = "0x8B7AEC")]
	private sealed class <DoWarp>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400215B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400215C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400215D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportTransitionWarp <>4__this;

		[Token(Token = "0x400215E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private UnityEngine.Vector3 <startPosition>5__2;

		[Token(Token = "0x400215F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <elapsedTime>5__3;

		[Token(Token = "0x1700046F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60027A7")]
			[Address(RVA = "0xB2D98C", Offset = "0xB2D98C", VA = "0xB2D98C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000470")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60027A9")]
			[Address(RVA = "0xB2D9F4", Offset = "0xB2D9F4", VA = "0xB2D9F4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60027A4")]
		[Address(RVA = "0xB2D7E4", Offset = "0xB2D7E4", VA = "0xB2D7E4")]
		[DebuggerHidden]
		public <DoWarp>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x60027A5")]
		[Address(RVA = "0xB2D858", Offset = "0xB2D858", VA = "0xB2D858", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60027A6")]
		[Address(RVA = "0xB2D85C", Offset = "0xB2D85C", VA = "0xB2D85C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60027A8")]
		[Address(RVA = "0xB2D994", Offset = "0xB2D994", VA = "0xB2D994", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400042F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BB134", Offset = "0x8BB134")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8BB134", Offset = "0x8BB134")]
	public float TransitionDuration;

	[Token(Token = "0x4000430")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public AnimationCurve PositionLerp;

	[Token(Token = "0x60003D3")]
	[Address(RVA = "0xB2D748", Offset = "0xB2D748", VA = "0xB2D748", Slot = "8")]
	protected override void LocomotionTeleportOnEnterStateTeleporting()
	{
	}

	[Token(Token = "0x60003D4")]
	[Address(RVA = "0xB2D774", Offset = "0xB2D774", VA = "0xB2D774")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C2C20", Offset = "0x8C2C20")]
	private IEnumerator DoWarp()
	{
		return null;
	}

	[Token(Token = "0x60003D5")]
	[Address(RVA = "0xB2D810", Offset = "0xB2D810", VA = "0xB2D810")]
	public TeleportTransitionWarp()
	{
	}
}
[Token(Token = "0x20000E1")]
public class DebugUISample : MonoBehaviour
{
	[Token(Token = "0x4000431")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool inMenu;

	[Token(Token = "0x4000432")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Text sliderText;

	[Token(Token = "0x60003D6")]
	[Address(RVA = "0xB132FC", Offset = "0xB132FC", VA = "0xB132FC")]
	private void Start()
	{
	}

	[Token(Token = "0x60003D7")]
	[Address(RVA = "0xB136CC", Offset = "0xB136CC", VA = "0xB136CC")]
	public void TogglePressed(Toggle t)
	{
	}

	[Token(Token = "0x60003D8")]
	[Address(RVA = "0xB13784", Offset = "0xB13784", VA = "0xB13784")]
	public void RadioPressed(string radioLabel, string group, Toggle t)
	{
	}

	[Token(Token = "0x60003D9")]
	[Address(RVA = "0xB13984", Offset = "0xB13984", VA = "0xB13984")]
	public void SliderPressed(float f)
	{
	}

	[Token(Token = "0x60003DA")]
	[Address(RVA = "0xB13A6C", Offset = "0xB13A6C", VA = "0xB13A6C")]
	private void Update()
	{
	}

	[Token(Token = "0x60003DB")]
	[Address(RVA = "0xB13B48", Offset = "0xB13B48", VA = "0xB13B48")]
	private void LogButtonPressed()
	{
	}

	[Token(Token = "0x60003DC")]
	[Address(RVA = "0xB13BB4", Offset = "0xB13BB4", VA = "0xB13BB4")]
	public DebugUISample()
	{
	}

	[Token(Token = "0x60003DD")]
	[Address(RVA = "0xB13BBC", Offset = "0xB13BBC", VA = "0xB13BBC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C2C84", Offset = "0x8C2C84")]
	private void <Start>b__2_0(Toggle t)
	{
	}

	[Token(Token = "0x60003DE")]
	[Address(RVA = "0xB13C18", Offset = "0xB13C18", VA = "0xB13C18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C2C94", Offset = "0x8C2C94")]
	private void <Start>b__2_1(Toggle t)
	{
	}

	[Token(Token = "0x60003DF")]
	[Address(RVA = "0xB13C74", Offset = "0xB13C74", VA = "0xB13C74")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C2CA4", Offset = "0x8C2CA4")]
	private void <Start>b__2_2(Toggle t)
	{
	}

	[Token(Token = "0x60003E0")]
	[Address(RVA = "0xB13CD0", Offset = "0xB13CD0", VA = "0xB13CD0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C2CB4", Offset = "0x8C2CB4")]
	private void <Start>b__2_3(Toggle t)
	{
	}
}
[Token(Token = "0x20000E2")]
public class HandsActiveChecker : MonoBehaviour
{
	[Token(Token = "0x200066C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B7AFC", Offset = "0x8B7AFC")]
	private sealed class <GetCenterEye>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002160")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002161")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002162")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HandsActiveChecker <>4__this;

		[Token(Token = "0x17000471")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60027AD")]
			[Address(RVA = "0xAD4720", Offset = "0xAD4720", VA = "0xAD4720", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000472")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60027AF")]
			[Address(RVA = "0xAD4788", Offset = "0xAD4788", VA = "0xAD4788", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60027AA")]
		[Address(RVA = "0xAD45D0", Offset = "0xAD45D0", VA = "0xAD45D0")]
		[DebuggerHidden]
		public <GetCenterEye>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x60027AB")]
		[Address(RVA = "0xAD4604", Offset = "0xAD4604", VA = "0xAD4604", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60027AC")]
		[Address(RVA = "0xAD4608", Offset = "0xAD4608", VA = "0xAD4608", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60027AE")]
		[Address(RVA = "0xAD4728", Offset = "0xAD4728", VA = "0xAD4728", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000433")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject _notificationPrefab;

	[Token(Token = "0x4000434")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject _notification;

	[Token(Token = "0x4000435")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OVRCameraRig _cameraRig;

	[Token(Token = "0x4000436")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform _centerEye;

	[Token(Token = "0x60003E1")]
	[Address(RVA = "0xAD42D4", Offset = "0xAD42D4", VA = "0xAD42D4")]
	private void Awake()
	{
	}

	[Token(Token = "0x60003E2")]
	[Address(RVA = "0xAD43D4", Offset = "0xAD43D4", VA = "0xAD43D4")]
	private void Update()
	{
	}

	[Token(Token = "0x60003E3")]
	[Address(RVA = "0xAD4364", Offset = "0xAD4364", VA = "0xAD4364")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C2CC4", Offset = "0x8C2CC4")]
	private IEnumerator GetCenterEye()
	{
		return null;
	}

	[Token(Token = "0x60003E4")]
	[Address(RVA = "0xAD45FC", Offset = "0xAD45FC", VA = "0xAD45FC")]
	public HandsActiveChecker()
	{
	}
}
[Token(Token = "0x20000E3")]
[ExecuteInEditMode]
public class CharacterCapsule : MonoBehaviour
{
	[Token(Token = "0x4000437")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private CharacterController _character;

	[Token(Token = "0x4000438")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private MeshFilter _meshFilter;

	[Token(Token = "0x4000439")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float _height;

	[Token(Token = "0x400043A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float _radius;

	[Token(Token = "0x400043B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8BB1AC", Offset = "0x8BB1AC")]
	public int SubdivisionsU;

	[Token(Token = "0x400043C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8BB1C8", Offset = "0x8BB1C8")]
	public int SubdivisionsV;

	[Token(Token = "0x400043D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int _subdivisionU;

	[Token(Token = "0x400043E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private int _subdivisionV;

	[Token(Token = "0x400043F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private UnityEngine.Vector3[] _vertices;

	[Token(Token = "0x4000440")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int[] _triangles;

	[Token(Token = "0x60003E5")]
	[Address(RVA = "0xB0628C", Offset = "0xB0628C", VA = "0xB0628C")]
	private void Update()
	{
	}

	[Token(Token = "0x60003E6")]
	[Address(RVA = "0xB06D44", Offset = "0xB06D44", VA = "0xB06D44")]
	public CharacterCapsule()
	{
	}
}
[Token(Token = "0x20000E4")]
public class LocomotionSampleSupport : MonoBehaviour
{
	[Token(Token = "0x4000441")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private LocomotionController lc;

	[Token(Token = "0x4000442")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool inMenu;

	[Token(Token = "0x17000044")]
	private LocomotionTeleport TeleportController
	{
		[Token(Token = "0x60003E7")]
		[Address(RVA = "0xAE4358", Offset = "0xAE4358", VA = "0xAE4358")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60003E8")]
	[Address(RVA = "0xAE43B0", Offset = "0xAE43B0", VA = "0xAE43B0")]
	public void Start()
	{
	}

	[Token(Token = "0x60003E9")]
	[Address(RVA = "0xAE46F4", Offset = "0xAE46F4", VA = "0xAE46F4")]
	public void Update()
	{
	}

	[Token(Token = "0x60003EA")]
	[Address(RVA = "0xAE47D8", Offset = "0xAE47D8", VA = "0xAE47D8")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x8C2D28", Offset = "0x8C2D28")]
	private static void Log(string msg)
	{
	}

	[Token(Token = "0x60003EB")]
	public static TActivate ActivateCategory<TCategory, TActivate>(GameObject target) where TCategory : MonoBehaviour where TActivate : MonoBehaviour
	{
		return null;
	}

	[Token(Token = "0x60003EC")]
	protected void ActivateHandlers<TInput, TAim, TTarget, TOrientation, TTransition>() where TInput : TeleportInputHandler where TAim : TeleportAimHandler where TTarget : TeleportTargetHandler where TOrientation : TeleportOrientationHandler where TTransition : TeleportTransition
	{
	}

	[Token(Token = "0x60003ED")]
	protected void ActivateInput<TActivate>() where TActivate : TeleportInputHandler
	{
	}

	[Token(Token = "0x60003EE")]
	protected void ActivateAim<TActivate>() where TActivate : TeleportAimHandler
	{
	}

	[Token(Token = "0x60003EF")]
	protected void ActivateTarget<TActivate>() where TActivate : TeleportTargetHandler
	{
	}

	[Token(Token = "0x60003F0")]
	protected void ActivateOrientation<TActivate>() where TActivate : TeleportOrientationHandler
	{
	}

	[Token(Token = "0x60003F1")]
	protected void ActivateTransition<TActivate>() where TActivate : TeleportTransition
	{
	}

	[Token(Token = "0x60003F2")]
	protected TActivate ActivateCategory<TCategory, TActivate>() where TCategory : MonoBehaviour where TActivate : MonoBehaviour
	{
		return null;
	}

	[Token(Token = "0x60003F3")]
	[Address(RVA = "0xAE4840", Offset = "0xAE4840", VA = "0xAE4840")]
	protected void UpdateToggle(Toggle toggle, bool enabled)
	{
	}

	[Token(Token = "0x60003F4")]
	[Address(RVA = "0xAE487C", Offset = "0xAE487C", VA = "0xAE487C")]
	private void SetupNonCap()
	{
	}

	[Token(Token = "0x60003F5")]
	[Address(RVA = "0xAE48F0", Offset = "0xAE48F0", VA = "0xAE48F0")]
	private void SetupTeleportDefaults()
	{
	}

	[Token(Token = "0x60003F6")]
	[Address(RVA = "0xAE4A4C", Offset = "0xAE4A4C", VA = "0xAE4A4C")]
	protected GameObject AddInstance(GameObject template, string label)
	{
		return null;
	}

	[Token(Token = "0x60003F7")]
	[Address(RVA = "0xAE4B20", Offset = "0xAE4B20", VA = "0xAE4B20")]
	private void SetupNodeTeleport()
	{
	}

	[Token(Token = "0x60003F8")]
	[Address(RVA = "0xAE4600", Offset = "0xAE4600", VA = "0xAE4600")]
	private void SetupTwoStickTeleport()
	{
	}

	[Token(Token = "0x60003F9")]
	[Address(RVA = "0xAE4BE0", Offset = "0xAE4BE0", VA = "0xAE4BE0")]
	private void SetupWalkOnly()
	{
	}

	[Token(Token = "0x60003FA")]
	[Address(RVA = "0xAE4C48", Offset = "0xAE4C48", VA = "0xAE4C48")]
	private void SetupLeftStrafeRightTeleport()
	{
	}

	[Token(Token = "0x60003FB")]
	[Address(RVA = "0xAE4D2C", Offset = "0xAE4D2C", VA = "0xAE4D2C")]
	public LocomotionSampleSupport()
	{
	}
}
[Token(Token = "0x20000E5")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8B5DD0", Offset = "0x8B5DD0")]
public class OVROverlayCanvas : MonoBehaviour
{
	[Token(Token = "0x200066D")]
	public enum DrawMode
	{
		[Token(Token = "0x4002164")]
		Opaque,
		[Token(Token = "0x4002165")]
		OpaqueWithClip,
		[Token(Token = "0x4002166")]
		TransparentDefaultAlpha,
		[Token(Token = "0x4002167")]
		TransparentCorrectAlpha
	}

	[Token(Token = "0x4000443")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[HideInInspector]
	private Shader _transparentShader;

	[Token(Token = "0x4000444")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	[HideInInspector]
	private Shader _opaqueShader;

	[Token(Token = "0x4000445")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private RectTransform _rectTransform;

	[Token(Token = "0x4000446")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Canvas _canvas;

	[Token(Token = "0x4000447")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Camera _camera;

	[Token(Token = "0x4000448")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private OVROverlay _overlay;

	[Token(Token = "0x4000449")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private RenderTexture _renderTexture;

	[Token(Token = "0x400044A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private MeshRenderer _meshRenderer;

	[Token(Token = "0x400044B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Mesh _quad;

	[Token(Token = "0x400044C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Material _defaultMat;

	[Token(Token = "0x400044D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public int MaxTextureSize;

	[Token(Token = "0x400044E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public int MinTextureSize;

	[Token(Token = "0x400044F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float PixelsPerUnit;

	[Token(Token = "0x4000450")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public int DrawRate;

	[Token(Token = "0x4000451")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public int DrawFrameOffset;

	[Token(Token = "0x4000452")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public bool Expensive;

	[Token(Token = "0x4000453")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public int Layer;

	[Token(Token = "0x4000454")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public DrawMode Opacity;

	[Token(Token = "0x4000455")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool ScaleViewport;

	[Token(Token = "0x4000456")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Plane[] _FrustumPlanes;

	[Token(Token = "0x17000045")]
	public bool overlayEnabled
	{
		[Token(Token = "0x6000402")]
		[Address(RVA = "0xD1E670", Offset = "0xD1E670", VA = "0xD1E670")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000403")]
		[Address(RVA = "0xD1E704", Offset = "0xD1E704", VA = "0xD1E704")]
		set
		{
		}
	}

	[Token(Token = "0x60003FC")]
	[Address(RVA = "0xD1D000", Offset = "0xD1D000", VA = "0xD1D000")]
	private void Start()
	{
	}

	[Token(Token = "0x60003FD")]
	[Address(RVA = "0xD1DC70", Offset = "0xD1DC70", VA = "0xD1DC70")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60003FE")]
	[Address(RVA = "0xD1DCF4", Offset = "0xD1DCF4", VA = "0xD1DCF4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60003FF")]
	[Address(RVA = "0xD1DDE8", Offset = "0xD1DDE8", VA = "0xD1DDE8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000400")]
	[Address(RVA = "0xD1DEDC", Offset = "0xD1DEDC", VA = "0xD1DEDC", Slot = "4")]
	protected virtual bool ShouldRender()
	{
		return default(bool);
	}

	[Token(Token = "0x6000401")]
	[Address(RVA = "0xD1E0E0", Offset = "0xD1E0E0", VA = "0xD1E0E0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000404")]
	[Address(RVA = "0xD1E7D4", Offset = "0xD1E7D4", VA = "0xD1E7D4")]
	public OVROverlayCanvas()
	{
	}
}
[Token(Token = "0x20000E6")]
public class StartMenu : MonoBehaviour
{
	[Token(Token = "0x200066E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B7B0C", Offset = "0x8B7B0C")]
	private sealed class <>c__DisplayClass3_0
	{
		[Token(Token = "0x4002168")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int sceneIndex;

		[Token(Token = "0x4002169")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public StartMenu <>4__this;

		[Token(Token = "0x60027B0")]
		[Address(RVA = "0xB21E9C", Offset = "0xB21E9C", VA = "0xB21E9C")]
		public <>c__DisplayClass3_0()
		{
		}

		[Token(Token = "0x60027B1")]
		[Address(RVA = "0xB21FAC", Offset = "0xB21FAC", VA = "0xB21FAC")]
		internal void <Start>b__0()
		{
		}
	}

	[Token(Token = "0x4000457")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVROverlay overlay;

	[Token(Token = "0x4000458")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVROverlay text;

	[Token(Token = "0x4000459")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRCameraRig vrRig;

	[Token(Token = "0x6000406")]
	[Address(RVA = "0xB21CDC", Offset = "0xB21CDC", VA = "0xB21CDC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000407")]
	[Address(RVA = "0xB21EA4", Offset = "0xB21EA4", VA = "0xB21EA4")]
	private void LoadScene(int idx)
	{
	}

	[Token(Token = "0x6000408")]
	[Address(RVA = "0xB21FA4", Offset = "0xB21FA4", VA = "0xB21FA4")]
	public StartMenu()
	{
	}
}
[Token(Token = "0x20000E7")]
public static class NativeVideoPlayer
{
	[Token(Token = "0x200066F")]
	public enum PlabackState
	{
		[Token(Token = "0x400216B")]
		Idle = 1,
		[Token(Token = "0x400216C")]
		Preparing,
		[Token(Token = "0x400216D")]
		Buffering,
		[Token(Token = "0x400216E")]
		Ready,
		[Token(Token = "0x400216F")]
		Ended
	}

	[Token(Token = "0x400045A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static IntPtr? _Activity;

	[Token(Token = "0x400045B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static IntPtr? _VideoPlayerClass;

	[Token(Token = "0x400045C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static readonly jvalue[] EmptyParams;

	[Token(Token = "0x400045D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static IntPtr getIsPlayingMethodId;

	[Token(Token = "0x400045E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static IntPtr getCurrentPlaybackStateMethodId;

	[Token(Token = "0x400045F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private static IntPtr getDurationMethodId;

	[Token(Token = "0x4000460")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static IntPtr getPlaybackPositionMethodId;

	[Token(Token = "0x4000461")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static IntPtr setPlaybackPositionMethodId;

	[Token(Token = "0x4000462")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private static jvalue[] setPlaybackPositionParams;

	[Token(Token = "0x4000463")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private static IntPtr playVideoMethodId;

	[Token(Token = "0x4000464")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private static jvalue[] playVideoParams;

	[Token(Token = "0x4000465")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private static IntPtr stopMethodId;

	[Token(Token = "0x4000466")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private static IntPtr resumeMethodId;

	[Token(Token = "0x4000467")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private static IntPtr pauseMethodId;

	[Token(Token = "0x4000468")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private static IntPtr setPlaybackSpeedMethodId;

	[Token(Token = "0x4000469")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private static jvalue[] setPlaybackSpeedParams;

	[Token(Token = "0x400046A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private static IntPtr setLoopingMethodId;

	[Token(Token = "0x400046B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private static jvalue[] setLoopingParams;

	[Token(Token = "0x400046C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private static IntPtr setListenerRotationQuaternionMethodId;

	[Token(Token = "0x400046D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private static jvalue[] setListenerRotationQuaternionParams;

	[Token(Token = "0x17000046")]
	private static IntPtr VideoPlayerClass
	{
		[Token(Token = "0x6000409")]
		[Address(RVA = "0xB8E2F4", Offset = "0xB8E2F4", VA = "0xB8E2F4")]
		get
		{
			return default(IntPtr);
		}
	}

	[Token(Token = "0x17000047")]
	private static IntPtr Activity
	{
		[Token(Token = "0x600040A")]
		[Address(RVA = "0xB8E5B0", Offset = "0xB8E5B0", VA = "0xB8E5B0")]
		get
		{
			return default(IntPtr);
		}
	}

	[Token(Token = "0x17000048")]
	public static bool IsAvailable
	{
		[Token(Token = "0x600040B")]
		[Address(RVA = "0xB86D90", Offset = "0xB86D90", VA = "0xB86D90")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000049")]
	public static bool IsPlaying
	{
		[Token(Token = "0x600040C")]
		[Address(RVA = "0xB87FF8", Offset = "0xB87FF8", VA = "0xB87FF8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700004A")]
	public static PlabackState CurrentPlaybackState
	{
		[Token(Token = "0x600040D")]
		[Address(RVA = "0xB8E7F4", Offset = "0xB8E7F4", VA = "0xB8E7F4")]
		get
		{
			return default(PlabackState);
		}
	}

	[Token(Token = "0x1700004B")]
	public static long Duration
	{
		[Token(Token = "0x600040E")]
		[Address(RVA = "0xB881DC", Offset = "0xB881DC", VA = "0xB881DC")]
		get
		{
			return default(long);
		}
	}

	[Token(Token = "0x1700004C")]
	public static long PlaybackPosition
	{
		[Token(Token = "0x600040F")]
		[Address(RVA = "0xB880E8", Offset = "0xB880E8", VA = "0xB880E8")]
		get
		{
			return default(long);
		}
		[Token(Token = "0x6000410")]
		[Address(RVA = "0xB877BC", Offset = "0xB877BC", VA = "0xB877BC")]
		set
		{
		}
	}

	[Token(Token = "0x6000411")]
	[Address(RVA = "0xB8883C", Offset = "0xB8883C", VA = "0xB8883C")]
	public static void PlayVideo(string path, string drmLicenseUrl, IntPtr surfaceObj)
	{
	}

	[Token(Token = "0x6000412")]
	[Address(RVA = "0xB88580", Offset = "0xB88580", VA = "0xB88580")]
	public static void Stop()
	{
	}

	[Token(Token = "0x6000413")]
	[Address(RVA = "0xB8744C", Offset = "0xB8744C", VA = "0xB8744C")]
	public static void Play()
	{
	}

	[Token(Token = "0x6000414")]
	[Address(RVA = "0xB875D0", Offset = "0xB875D0", VA = "0xB875D0")]
	public static void Pause()
	{
	}

	[Token(Token = "0x6000415")]
	[Address(RVA = "0xB883A8", Offset = "0xB883A8", VA = "0xB883A8")]
	public static void SetPlaybackSpeed(float speed)
	{
	}

	[Token(Token = "0x6000416")]
	[Address(RVA = "0xB88A30", Offset = "0xB88A30", VA = "0xB88A30")]
	public static void SetLooping(bool looping)
	{
	}

	[Token(Token = "0x6000417")]
	[Address(RVA = "0xB87E3C", Offset = "0xB87E3C", VA = "0xB87E3C")]
	public static void SetListenerRotation(Quaternion rotation)
	{
	}
}
[Token(Token = "0x20000E8")]
public class ButtonDownListener : MonoBehaviour, IPointerDownHandler, IEventSystemHandler
{
	[Token(Token = "0x14000010")]
	public event Action onButtonDown
	{
		[Token(Token = "0x6000419")]
		[Address(RVA = "0xB03964", Offset = "0xB03964", VA = "0xB03964")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C2D60", Offset = "0x8C2D60")]
		add
		{
		}
		[Token(Token = "0x600041A")]
		[Address(RVA = "0xB03A08", Offset = "0xB03A08", VA = "0xB03A08")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C2D70", Offset = "0x8C2D70")]
		remove
		{
		}
	}

	[Token(Token = "0x600041B")]
	[Address(RVA = "0xB03AAC", Offset = "0xB03AAC", VA = "0xB03AAC", Slot = "4")]
	public void OnPointerDown(PointerEventData eventData)
	{
	}

	[Token(Token = "0x600041C")]
	[Address(RVA = "0xB03AC0", Offset = "0xB03AC0", VA = "0xB03AC0")]
	public ButtonDownListener()
	{
	}
}
[Token(Token = "0x20000E9")]
public class MediaPlayerImage : Image
{
	[Token(Token = "0x2000670")]
	public enum ButtonType
	{
		[Token(Token = "0x4002171")]
		Play,
		[Token(Token = "0x4002172")]
		Pause,
		[Token(Token = "0x4002173")]
		FastForward,
		[Token(Token = "0x4002174")]
		Rewind,
		[Token(Token = "0x4002175")]
		SkipForward,
		[Token(Token = "0x4002176")]
		SkipBack,
		[Token(Token = "0x4002177")]
		Stop
	}

	[Token(Token = "0x400046F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	[SerializeField]
	private ButtonType m_ButtonType;

	[Token(Token = "0x1700004D")]
	public ButtonType buttonType
	{
		[Token(Token = "0x600041D")]
		[Address(RVA = "0xB82CEC", Offset = "0xB82CEC", VA = "0xB82CEC")]
		get
		{
			return default(ButtonType);
		}
		[Token(Token = "0x600041E")]
		[Address(RVA = "0xB82CF4", Offset = "0xB82CF4", VA = "0xB82CF4")]
		set
		{
		}
	}

	[Token(Token = "0x600041F")]
	[Address(RVA = "0xB82D18", Offset = "0xB82D18", VA = "0xB82D18", Slot = "44")]
	protected override void OnPopulateMesh(VertexHelper toFill)
	{
	}

	[Token(Token = "0x6000420")]
	[Address(RVA = "0xB841E4", Offset = "0xB841E4", VA = "0xB841E4")]
	public MediaPlayerImage()
	{
	}
}
[Token(Token = "0x20000EA")]
public class MoviePlayerSample : MonoBehaviour
{
	[Token(Token = "0x2000671")]
	public enum VideoShape
	{
		[Token(Token = "0x4002179")]
		_360,
		[Token(Token = "0x400217A")]
		_180,
		[Token(Token = "0x400217B")]
		Quad
	}

	[Token(Token = "0x2000672")]
	public enum VideoStereo
	{
		[Token(Token = "0x400217D")]
		Mono,
		[Token(Token = "0x400217E")]
		TopBottom,
		[Token(Token = "0x400217F")]
		LeftRight,
		[Token(Token = "0x4002180")]
		BottomTop
	}

	[Token(Token = "0x2000673")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B7B1C", Offset = "0x8B7B1C")]
	private sealed class <Start>d__32 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002181")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002182")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002183")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MoviePlayerSample <>4__this;

		[Token(Token = "0x17000473")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60027B5")]
			[Address(RVA = "0xB88CF8", Offset = "0xB88CF8", VA = "0xB88CF8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000474")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60027B7")]
			[Address(RVA = "0xB88D60", Offset = "0xB88D60", VA = "0xB88D60", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60027B2")]
		[Address(RVA = "0xB87148", Offset = "0xB87148", VA = "0xB87148")]
		[DebuggerHidden]
		public <Start>d__32(int <>1__state)
		{
		}

		[Token(Token = "0x60027B3")]
		[Address(RVA = "0xB88B74", Offset = "0xB88B74", VA = "0xB88B74", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60027B4")]
		[Address(RVA = "0xB88B78", Offset = "0xB88B78", VA = "0xB88B78", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60027B6")]
		[Address(RVA = "0xB88D00", Offset = "0xB88D00", VA = "0xB88D00", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000674")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B7B2C", Offset = "0x8B7B2C")]
	private sealed class <>c__DisplayClass33_0
	{
		[Token(Token = "0x4002184")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string moviePath;

		[Token(Token = "0x4002185")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string drmLicencesUrl;

		[Token(Token = "0x4002186")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MoviePlayerSample <>4__this;

		[Token(Token = "0x60027B8")]
		[Address(RVA = "0xB873B0", Offset = "0xB873B0", VA = "0xB873B0")]
		public <>c__DisplayClass33_0()
		{
		}

		[Token(Token = "0x60027B9")]
		[Address(RVA = "0xB88768", Offset = "0xB88768", VA = "0xB88768")]
		internal void <Play>b__0()
		{
		}
	}

	[Token(Token = "0x4000470")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool videoPausedBeforeAppPause;

	[Token(Token = "0x4000471")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private VideoPlayer videoPlayer;

	[Token(Token = "0x4000472")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OVROverlay overlay;

	[Token(Token = "0x4000473")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Renderer mediaRenderer;

	[Token(Token = "0x4000474")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8BB274", Offset = "0x8BB274")]
	private bool <IsPlaying>k__BackingField;

	[Token(Token = "0x4000475")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8BB284", Offset = "0x8BB284")]
	private long <Duration>k__BackingField;

	[Token(Token = "0x4000476")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8BB294", Offset = "0x8BB294")]
	private long <PlaybackPosition>k__BackingField;

	[Token(Token = "0x4000477")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private RenderTexture copyTexture;

	[Token(Token = "0x4000478")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Material externalTex2DMaterial;

	[Token(Token = "0x4000479")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public string MovieName;

	[Token(Token = "0x400047A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public string DrmLicenseUrl;

	[Token(Token = "0x400047B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool LoopVideo;

	[Token(Token = "0x400047C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public VideoShape Shape;

	[Token(Token = "0x400047D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public VideoStereo Stereo;

	[Token(Token = "0x400047E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public bool DisplayMono;

	[Token(Token = "0x400047F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private VideoShape _LastShape;

	[Token(Token = "0x4000480")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private VideoStereo _LastStereo;

	[Token(Token = "0x4000481")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool _LastDisplayMono;

	[Token(Token = "0x1700004E")]
	public bool IsPlaying
	{
		[Token(Token = "0x6000421")]
		[Address(RVA = "0xB86B44", Offset = "0xB86B44", VA = "0xB86B44")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C2D80", Offset = "0x8C2D80")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000422")]
		[Address(RVA = "0xB86B4C", Offset = "0xB86B4C", VA = "0xB86B4C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C2D90", Offset = "0x8C2D90")]
		private set
		{
		}
	}

	[Token(Token = "0x1700004F")]
	public long Duration
	{
		[Token(Token = "0x6000423")]
		[Address(RVA = "0xB86B58", Offset = "0xB86B58", VA = "0xB86B58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C2DA0", Offset = "0x8C2DA0")]
		get
		{
			return default(long);
		}
		[Token(Token = "0x6000424")]
		[Address(RVA = "0xB86B60", Offset = "0xB86B60", VA = "0xB86B60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C2DB0", Offset = "0x8C2DB0")]
		private set
		{
		}
	}

	[Token(Token = "0x17000050")]
	public long PlaybackPosition
	{
		[Token(Token = "0x6000425")]
		[Address(RVA = "0xB86B68", Offset = "0xB86B68", VA = "0xB86B68")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C2DC0", Offset = "0x8C2DC0")]
		get
		{
			return default(long);
		}
		[Token(Token = "0x6000426")]
		[Address(RVA = "0xB86B70", Offset = "0xB86B70", VA = "0xB86B70")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C2DD0", Offset = "0x8C2DD0")]
		private set
		{
		}
	}

	[Token(Token = "0x6000427")]
	[Address(RVA = "0xB86B78", Offset = "0xB86B78", VA = "0xB86B78")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000428")]
	[Address(RVA = "0xB86DF8", Offset = "0xB86DF8", VA = "0xB86DF8")]
	private bool IsLocalVideo(string movieName)
	{
		return default(bool);
	}

	[Token(Token = "0x6000429")]
	[Address(RVA = "0xB86E60", Offset = "0xB86E60", VA = "0xB86E60")]
	private void UpdateShapeAndStereo()
	{
	}

	[Token(Token = "0x600042A")]
	[Address(RVA = "0xB870D8", Offset = "0xB870D8", VA = "0xB870D8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C2DE0", Offset = "0x8C2DE0")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x600042B")]
	[Address(RVA = "0xB87174", Offset = "0xB87174", VA = "0xB87174")]
	public void Play(string moviePath, string drmLicencesUrl)
	{
	}

	[Token(Token = "0x600042C")]
	[Address(RVA = "0xB873B8", Offset = "0xB873B8", VA = "0xB873B8")]
	public void Play()
	{
	}

	[Token(Token = "0x600042D")]
	[Address(RVA = "0xB87540", Offset = "0xB87540", VA = "0xB87540")]
	public void Pause()
	{
	}

	[Token(Token = "0x600042E")]
	[Address(RVA = "0xB876C4", Offset = "0xB876C4", VA = "0xB876C4")]
	public void SeekTo(long position)
	{
	}

	[Token(Token = "0x600042F")]
	[Address(RVA = "0xB878FC", Offset = "0xB878FC", VA = "0xB878FC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000430")]
	[Address(RVA = "0xB882D0", Offset = "0xB882D0", VA = "0xB882D0")]
	public void SetPlaybackSpeed(float speed)
	{
	}

	[Token(Token = "0x6000431")]
	[Address(RVA = "0xB884F0", Offset = "0xB884F0", VA = "0xB884F0")]
	public void Stop()
	{
	}

	[Token(Token = "0x6000432")]
	[Address(RVA = "0xB88674", Offset = "0xB88674", VA = "0xB88674")]
	private void OnApplicationPause(bool appWasPaused)
	{
	}

	[Token(Token = "0x6000433")]
	[Address(RVA = "0xB88758", Offset = "0xB88758", VA = "0xB88758")]
	public MoviePlayerSample()
	{
	}
}
[Token(Token = "0x20000EB")]
public class MoviePlayerSampleControls : MonoBehaviour
{
	[Token(Token = "0x2000675")]
	private enum PlaybackState
	{
		[Token(Token = "0x4002188")]
		Playing,
		[Token(Token = "0x4002189")]
		Paused,
		[Token(Token = "0x400218A")]
		Rewinding,
		[Token(Token = "0x400218B")]
		FastForwarding
	}

	[Token(Token = "0x4000482")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MoviePlayerSample Player;

	[Token(Token = "0x4000483")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVRInputModule InputModule;

	[Token(Token = "0x4000484")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRGazePointer GazePointer;

	[Token(Token = "0x4000485")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject LeftHand;

	[Token(Token = "0x4000486")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject RightHand;

	[Token(Token = "0x4000487")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Canvas Canvas;

	[Token(Token = "0x4000488")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ButtonDownListener PlayPause;

	[Token(Token = "0x4000489")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public MediaPlayerImage PlayPauseImage;

	[Token(Token = "0x400048A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Slider ProgressBar;

	[Token(Token = "0x400048B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public ButtonDownListener FastForward;

	[Token(Token = "0x400048C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public MediaPlayerImage FastForwardImage;

	[Token(Token = "0x400048D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ButtonDownListener Rewind;

	[Token(Token = "0x400048E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public MediaPlayerImage RewindImage;

	[Token(Token = "0x400048F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float TimeoutTime;

	[Token(Token = "0x4000490")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private bool _isVisible;

	[Token(Token = "0x4000491")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float _lastButtonTime;

	[Token(Token = "0x4000492")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private bool _didSeek;

	[Token(Token = "0x4000493")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private long _seekPreviousPosition;

	[Token(Token = "0x4000494")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private long _rewindStartPosition;

	[Token(Token = "0x4000495")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private float _rewindStartTime;

	[Token(Token = "0x4000496")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private PlaybackState _state;

	[Token(Token = "0x6000434")]
	[Address(RVA = "0xB88D68", Offset = "0xB88D68", VA = "0xB88D68")]
	private void Start()
	{
	}

	[Token(Token = "0x6000435")]
	[Address(RVA = "0xB89064", Offset = "0xB89064", VA = "0xB89064")]
	private void OnPlayPauseClicked()
	{
	}

	[Token(Token = "0x6000436")]
	[Address(RVA = "0xB89240", Offset = "0xB89240", VA = "0xB89240")]
	private void OnFastForwardClicked()
	{
	}

	[Token(Token = "0x6000437")]
	[Address(RVA = "0xB89374", Offset = "0xB89374", VA = "0xB89374")]
	private void OnRewindClicked()
	{
	}

	[Token(Token = "0x6000438")]
	[Address(RVA = "0xB8947C", Offset = "0xB8947C", VA = "0xB8947C")]
	private void OnSeekBarMoved(float value)
	{
	}

	[Token(Token = "0x6000439")]
	[Address(RVA = "0xB89348", Offset = "0xB89348", VA = "0xB89348")]
	private void Seek(long pos)
	{
	}

	[Token(Token = "0x600043A")]
	[Address(RVA = "0xB89544", Offset = "0xB89544", VA = "0xB89544")]
	private void Update()
	{
	}

	[Token(Token = "0x600043B")]
	[Address(RVA = "0xB88F58", Offset = "0xB88F58", VA = "0xB88F58")]
	private void SetVisible(bool visible)
	{
	}

	[Token(Token = "0x600043C")]
	[Address(RVA = "0xB898D8", Offset = "0xB898D8", VA = "0xB898D8")]
	public MoviePlayerSampleControls()
	{
	}
}
[Token(Token = "0x20000EC")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8B5E34", Offset = "0x8B5E34")]
public class OVROverlayMeshGenerator : MonoBehaviour
{
	[Token(Token = "0x2000676")]
	private enum CubeFace
	{
		[Token(Token = "0x400218D")]
		Right,
		[Token(Token = "0x400218E")]
		Left,
		[Token(Token = "0x400218F")]
		Top,
		[Token(Token = "0x4002190")]
		Bottom,
		[Token(Token = "0x4002191")]
		Front,
		[Token(Token = "0x4002192")]
		Back,
		[Token(Token = "0x4002193")]
		COUNT
	}

	[Token(Token = "0x4000497")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Mesh _Mesh;

	[Token(Token = "0x4000498")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<UnityEngine.Vector3> _Verts;

	[Token(Token = "0x4000499")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<UnityEngine.Vector2> _UV;

	[Token(Token = "0x400049A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<int> _Tris;

	[Token(Token = "0x400049B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private OVROverlay _Overlay;

	[Token(Token = "0x400049C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private MeshFilter _MeshFilter;

	[Token(Token = "0x400049D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private MeshCollider _MeshCollider;

	[Token(Token = "0x400049E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Transform _CameraRoot;

	[Token(Token = "0x400049F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Transform _Transform;

	[Token(Token = "0x40004A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private OVROverlay.OverlayShape _LastShape;

	[Token(Token = "0x40004A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private UnityEngine.Vector3 _LastPosition;

	[Token(Token = "0x40004A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Quaternion _LastRotation;

	[Token(Token = "0x40004A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private UnityEngine.Vector3 _LastScale;

	[Token(Token = "0x40004A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private Rect _LastRectLeft;

	[Token(Token = "0x40004A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private Rect _LastRectRight;

	[Token(Token = "0x40004A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private bool _Awake;

	[Token(Token = "0x40004A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly UnityEngine.Vector3[] BottomLeft;

	[Token(Token = "0x40004A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static readonly UnityEngine.Vector3[] RightVector;

	[Token(Token = "0x40004A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static readonly UnityEngine.Vector3[] UpVector;

	[Token(Token = "0x600043D")]
	[Address(RVA = "0xD1E88C", Offset = "0xD1E88C", VA = "0xD1E88C")]
	protected void Awake()
	{
	}

	[Token(Token = "0x600043E")]
	[Address(RVA = "0xD1E9EC", Offset = "0xD1E9EC", VA = "0xD1E9EC")]
	private Rect GetBoundingRect(Rect a, Rect b)
	{
		return default(Rect);
	}

	[Token(Token = "0x600043F")]
	[Address(RVA = "0xD1EBA8", Offset = "0xD1EBA8", VA = "0xD1EBA8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000440")]
	[Address(RVA = "0xD1F080", Offset = "0xD1F080", VA = "0xD1F080")]
	private void UpdateMesh(OVROverlay.OverlayShape shape, UnityEngine.Vector3 position, Quaternion rotation, UnityEngine.Vector3 scale, Rect rect)
	{
	}

	[Token(Token = "0x6000441")]
	[Address(RVA = "0xD1F354", Offset = "0xD1F354", VA = "0xD1F354")]
	public static void GenerateMesh(List<UnityEngine.Vector3> verts, List<UnityEngine.Vector2> uvs, List<int> tris, OVROverlay.OverlayShape shape, UnityEngine.Vector3 position, Quaternion rotation, UnityEngine.Vector3 scale, Rect rect)
	{
	}

	[Token(Token = "0x6000442")]
	[Address(RVA = "0xD205B0", Offset = "0xD205B0", VA = "0xD205B0")]
	private static UnityEngine.Vector2 GetSphereUV(float theta, float phi, float expand_coef)
	{
		return default(UnityEngine.Vector2);
	}

	[Token(Token = "0x6000443")]
	[Address(RVA = "0xD20610", Offset = "0xD20610", VA = "0xD20610")]
	private static UnityEngine.Vector3 GetSphereVert(float theta, float phi)
	{
		return default(UnityEngine.Vector3);
	}

	[Token(Token = "0x6000444")]
	[Address(RVA = "0xD1F6D4", Offset = "0xD1F6D4", VA = "0xD1F6D4")]
	public static void BuildSphere(List<UnityEngine.Vector3> verts, List<UnityEngine.Vector2> uv, List<int> triangles, UnityEngine.Vector3 position, Quaternion rotation, UnityEngine.Vector3 scale, Rect rect, float worldScale = 800f, int latitudes = 128, int longitudes = 128, float expand_coef = 1f)
	{
	}

	[Token(Token = "0x6000445")]
	[Address(RVA = "0xD206F8", Offset = "0xD206F8", VA = "0xD206F8")]
	private static UnityEngine.Vector2 GetCubeUV(CubeFace face, UnityEngine.Vector2 sideUV, float expand_coef)
	{
		return default(UnityEngine.Vector2);
	}

	[Token(Token = "0x6000446")]
	[Address(RVA = "0xD208E4", Offset = "0xD208E4", VA = "0xD208E4")]
	private static UnityEngine.Vector3 GetCubeVert(CubeFace face, UnityEngine.Vector2 sideUV, float expand_coef)
	{
		return default(UnityEngine.Vector3);
	}

	[Token(Token = "0x6000447")]
	[Address(RVA = "0xD1FB8C", Offset = "0xD1FB8C", VA = "0xD1FB8C")]
	public static void BuildCube(List<UnityEngine.Vector3> verts, List<UnityEngine.Vector2> uv, List<int> triangles, UnityEngine.Vector3 position, Quaternion rotation, UnityEngine.Vector3 scale, float worldScale = 800f, int subQuads = 1, float expand_coef = 1.01f)
	{
	}

	[Token(Token = "0x6000448")]
	[Address(RVA = "0xD1FEB4", Offset = "0xD1FEB4", VA = "0xD1FEB4")]
	public static void BuildQuad(List<UnityEngine.Vector3> verts, List<UnityEngine.Vector2> uv, List<int> triangles, Rect rect)
	{
	}

	[Token(Token = "0x6000449")]
	[Address(RVA = "0xD2020C", Offset = "0xD2020C", VA = "0xD2020C")]
	public static void BuildHemicylinder(List<UnityEngine.Vector3> verts, List<UnityEngine.Vector2> uv, List<int> triangles, UnityEngine.Vector3 scale, Rect rect, int longitudes = 128)
	{
	}

	[Token(Token = "0x600044A")]
	[Address(RVA = "0xD20A98", Offset = "0xD20A98", VA = "0xD20A98")]
	public OVROverlayMeshGenerator()
	{
	}
}
[Token(Token = "0x20000ED")]
public static class VectorUtil
{
	[Token(Token = "0x600044C")]
	[Address(RVA = "0xC0A6F8", Offset = "0xC0A6F8", VA = "0xC0A6F8")]
	public static Vector4 ToVector(this Rect rect)
	{
		return default(Vector4);
	}
}
[Token(Token = "0x20000EE")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8B5EB8", Offset = "0x8B5EB8")]
public class MouseLook : MonoBehaviour
{
	[Token(Token = "0x2000677")]
	public enum RotationAxes
	{
		[Token(Token = "0x4002195")]
		MouseXAndY,
		[Token(Token = "0x4002196")]
		MouseX,
		[Token(Token = "0x4002197")]
		MouseY
	}

	[Token(Token = "0x40004AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RotationAxes axes;

	[Token(Token = "0x40004AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float sensitivityX;

	[Token(Token = "0x40004AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float sensitivityY;

	[Token(Token = "0x40004AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float minimumX;

	[Token(Token = "0x40004AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float maximumX;

	[Token(Token = "0x40004AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float minimumY;

	[Token(Token = "0x40004B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float maximumY;

	[Token(Token = "0x40004B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float rotationY;

	[Token(Token = "0x600044D")]
	[Address(RVA = "0xB862AC", Offset = "0xB862AC", VA = "0xB862AC")]
	private void Update()
	{
	}

	[Token(Token = "0x600044E")]
	[Address(RVA = "0xB8650C", Offset = "0xB8650C", VA = "0xB8650C")]
	private void Start()
	{
	}

	[Token(Token = "0x600044F")]
	[Address(RVA = "0xB865CC", Offset = "0xB865CC", VA = "0xB865CC")]
	public MouseLook()
	{
	}
}
[Token(Token = "0x20000EF")]
public class ONSPAmbisonicsNative : MonoBehaviour
{
	[Token(Token = "0x2000678")]
	public enum ovrAmbisonicsNativeStatus
	{
		[Token(Token = "0x4002199")]
		Uninitialized = -1,
		[Token(Token = "0x400219A")]
		NotEnabled,
		[Token(Token = "0x400219B")]
		Success,
		[Token(Token = "0x400219C")]
		StreamError,
		[Token(Token = "0x400219D")]
		ProcessError,
		[Token(Token = "0x400219E")]
		MaxStatValue
	}

	[Token(Token = "0x40004B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private AudioSource source;

	[Token(Token = "0x40004B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int numFOAChannels;

	[Token(Token = "0x40004B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static int paramVSpeakerMode;

	[Token(Token = "0x40004B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static int paramAmbiStat;

	[Token(Token = "0x40004B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ovrAmbisonicsNativeStatus currentStatus;

	[Token(Token = "0x40004B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private bool useVirtualSpeakers;

	[Token(Token = "0x17000051")]
	public bool UseVirtualSpeakers
	{
		[Token(Token = "0x6000450")]
		[Address(RVA = "0xB8F290", Offset = "0xB8F290", VA = "0xB8F290")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000451")]
		[Address(RVA = "0xB8F298", Offset = "0xB8F298", VA = "0xB8F298")]
		set
		{
		}
	}

	[Token(Token = "0x6000452")]
	[Address(RVA = "0xB8F2A4", Offset = "0xB8F2A4", VA = "0xB8F2A4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000453")]
	[Address(RVA = "0xB8F4D8", Offset = "0xB8F4D8", VA = "0xB8F4D8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000454")]
	[Address(RVA = "0xB8F728", Offset = "0xB8F728", VA = "0xB8F728")]
	public ONSPAmbisonicsNative()
	{
	}
}
[Token(Token = "0x20000F0")]
public class ONSPAudioSource : MonoBehaviour
{
	[Token(Token = "0x2000679")]
	private enum Parameters
	{
		[Token(Token = "0x40021A0")]
		P_GAIN,
		[Token(Token = "0x40021A1")]
		P_USEINVSQR,
		[Token(Token = "0x40021A2")]
		P_NEAR,
		[Token(Token = "0x40021A3")]
		P_FAR,
		[Token(Token = "0x40021A4")]
		P_RADIUS,
		[Token(Token = "0x40021A5")]
		P_DISABLE_RFL,
		[Token(Token = "0x40021A6")]
		P_VSPEAKERMODE,
		[Token(Token = "0x40021A7")]
		P_AMBISTAT,
		[Token(Token = "0x40021A8")]
		P_READONLY_GLOBAL_RFL_ENABLED,
		[Token(Token = "0x40021A9")]
		P_READONLY_NUM_VOICES,
		[Token(Token = "0x40021AA")]
		P_SENDLEVEL,
		[Token(Token = "0x40021AB")]
		P_NUM
	}

	[Token(Token = "0x40004B8")]
	public const string strONSPS = "AudioPluginOculusSpatializer";

	[Token(Token = "0x40004B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private bool enableSpatialization;

	[Token(Token = "0x40004BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float gain;

	[Token(Token = "0x40004BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private bool useInvSqr;

	[Token(Token = "0x40004BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private float near;

	[Token(Token = "0x40004BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float far;

	[Token(Token = "0x40004BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private float volumetricRadius;

	[Token(Token = "0x40004BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private float reverbSend;

	[Token(Token = "0x40004C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private bool enableRfl;

	[Token(Token = "0x40004C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ONSPAudioSource RoomReflectionGizmoAS;

	[Token(Token = "0x17000052")]
	public bool EnableSpatialization
	{
		[Token(Token = "0x6000458")]
		[Address(RVA = "0xB8F984", Offset = "0xB8F984", VA = "0xB8F984")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000459")]
		[Address(RVA = "0xB8F98C", Offset = "0xB8F98C", VA = "0xB8F98C")]
		set
		{
		}
	}

	[Token(Token = "0x17000053")]
	public float Gain
	{
		[Token(Token = "0x600045A")]
		[Address(RVA = "0xB8F998", Offset = "0xB8F998", VA = "0xB8F998")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600045B")]
		[Address(RVA = "0xB8F9A0", Offset = "0xB8F9A0", VA = "0xB8F9A0")]
		set
		{
		}
	}

	[Token(Token = "0x17000054")]
	public bool UseInvSqr
	{
		[Token(Token = "0x600045C")]
		[Address(RVA = "0xB8FA24", Offset = "0xB8FA24", VA = "0xB8FA24")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600045D")]
		[Address(RVA = "0xB8FA2C", Offset = "0xB8FA2C", VA = "0xB8FA2C")]
		set
		{
		}
	}

	[Token(Token = "0x17000055")]
	public float Near
	{
		[Token(Token = "0x600045E")]
		[Address(RVA = "0xB8FA38", Offset = "0xB8FA38", VA = "0xB8FA38")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600045F")]
		[Address(RVA = "0xB8FA40", Offset = "0xB8FA40", VA = "0xB8FA40")]
		set
		{
		}
	}

	[Token(Token = "0x17000056")]
	public float Far
	{
		[Token(Token = "0x6000460")]
		[Address(RVA = "0xB8FAC8", Offset = "0xB8FAC8", VA = "0xB8FAC8")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000461")]
		[Address(RVA = "0xB8FAD0", Offset = "0xB8FAD0", VA = "0xB8FAD0")]
		set
		{
		}
	}

	[Token(Token = "0x17000057")]
	public float VolumetricRadius
	{
		[Token(Token = "0x6000462")]
		[Address(RVA = "0xB8FB58", Offset = "0xB8FB58", VA = "0xB8FB58")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000463")]
		[Address(RVA = "0xB8FB60", Offset = "0xB8FB60", VA = "0xB8FB60")]
		set
		{
		}
	}

	[Token(Token = "0x17000058")]
	public float ReverbSend
	{
		[Token(Token = "0x6000464")]
		[Address(RVA = "0xB8FBE8", Offset = "0xB8FBE8", VA = "0xB8FBE8")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000465")]
		[Address(RVA = "0xB8FBF0", Offset = "0xB8FBF0", VA = "0xB8FBF0")]
		set
		{
		}
	}

	[Token(Token = "0x17000059")]
	public bool EnableRfl
	{
		[Token(Token = "0x6000466")]
		[Address(RVA = "0xB8FC78", Offset = "0xB8FC78", VA = "0xB8FC78")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000467")]
		[Address(RVA = "0xB8FC80", Offset = "0xB8FC80", VA = "0xB8FC80")]
		set
		{
		}
	}

	[Token(Token = "0x6000456")]
	[Address(RVA = "0xB8F7AC", Offset = "0xB8F7AC", VA = "0xB8F7AC")]
	[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0x8C2E54", Offset = "0x8C2E54")]
	private static void OnBeforeSceneLoadRuntimeMethod()
	{
	}

	[PreserveSig]
	[Token(Token = "0x6000457")]
	[Address(RVA = "0xB8F8A4", Offset = "0xB8F8A4", VA = "0xB8F8A4")]
	private static extern void ONSP_GetGlobalRoomReflectionValues(ref bool reflOn, ref bool reverbOn, ref float width, ref float height, ref float length);

	[Token(Token = "0x6000468")]
	[Address(RVA = "0xB8FC8C", Offset = "0xB8FC8C", VA = "0xB8FC8C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000469")]
	[Address(RVA = "0xB8FE00", Offset = "0xB8FE00", VA = "0xB8FE00")]
	private void Start()
	{
	}

	[Token(Token = "0x600046A")]
	[Address(RVA = "0xB8FE04", Offset = "0xB8FE04", VA = "0xB8FE04")]
	private void Update()
	{
	}

	[Token(Token = "0x600046B")]
	[Address(RVA = "0xB8FCF8", Offset = "0xB8FCF8", VA = "0xB8FCF8")]
	public void SetParameters(ref AudioSource source)
	{
	}

	[Token(Token = "0x600046C")]
	[Address(RVA = "0xB8FECC", Offset = "0xB8FECC", VA = "0xB8FECC")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x600046D")]
	[Address(RVA = "0xB9032C", Offset = "0xB9032C", VA = "0xB9032C")]
	private void OnDestroy()
	{
	}

	[PreserveSig]
	[Token(Token = "0x600046E")]
	[Address(RVA = "0xB8F824", Offset = "0xB8F824", VA = "0xB8F824")]
	private static extern int OSP_SetGlobalVoiceLimit(int VoiceLimit);

	[Token(Token = "0x600046F")]
	[Address(RVA = "0xB903FC", Offset = "0xB903FC", VA = "0xB903FC")]
	public ONSPAudioSource()
	{
	}
}
[Token(Token = "0x20000F1")]
public class ONSPProfiler : MonoBehaviour
{
	[Token(Token = "0x40004C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool profilerEnabled;

	[Token(Token = "0x40004C3")]
	private const int DEFAULT_PORT = 2121;

	[Token(Token = "0x40004C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int port;

	[Token(Token = "0x40004C5")]
	public const string strONSPS = "AudioPluginOculusSpatializer";

	[Token(Token = "0x6000471")]
	[Address(RVA = "0xB9041C", Offset = "0xB9041C", VA = "0xB9041C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000472")]
	[Address(RVA = "0xB90428", Offset = "0xB90428", VA = "0xB90428")]
	private void Update()
	{
	}

	[PreserveSig]
	[Token(Token = "0x6000473")]
	[Address(RVA = "0xB904E0", Offset = "0xB904E0", VA = "0xB904E0")]
	private static extern int ONSP_SetProfilerEnabled(bool enabled);

	[PreserveSig]
	[Token(Token = "0x6000474")]
	[Address(RVA = "0xB90460", Offset = "0xB90460", VA = "0xB90460")]
	private static extern int ONSP_SetProfilerPort(int port);

	[Token(Token = "0x6000475")]
	[Address(RVA = "0xB90560", Offset = "0xB90560", VA = "0xB90560")]
	public ONSPProfiler()
	{
	}
}
[Token(Token = "0x20000F2")]
public class ONSPPropagationGeometry : MonoBehaviour
{
	[Token(Token = "0x200067A")]
	private struct MeshMaterial
	{
		[Token(Token = "0x40021AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public MeshFilter meshFilter;

		[Token(Token = "0x40021AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ONSPPropagationMaterial[] materials;
	}

	[Token(Token = "0x200067B")]
	private struct TerrainMaterial
	{
		[Token(Token = "0x40021AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Terrain terrain;

		[Token(Token = "0x40021AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ONSPPropagationMaterial[] materials;

		[Token(Token = "0x40021B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Mesh[] treePrototypeMeshes;
	}

	[Token(Token = "0x40004C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string GeometryAssetDirectory;

	[Token(Token = "0x40004C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string filePathRelative;

	[Token(Token = "0x40004C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool fileEnabled;

	[Token(Token = "0x40004C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool includeChildMeshes;

	[Token(Token = "0x40004CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private IntPtr geometryHandle;

	[Token(Token = "0x40004CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int OSPSuccess;

	[Token(Token = "0x40004CC")]
	public const string GEOMETRY_FILE_EXTENSION = "ovramesh";

	[Token(Token = "0x40004CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static int terrainDecimation;

	[Token(Token = "0x1700005A")]
	public static string GeometryAssetPath
	{
		[Token(Token = "0x6000476")]
		[Address(RVA = "0xB92FDC", Offset = "0xB92FDC", VA = "0xB92FDC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700005B")]
	public string filePath
	{
		[Token(Token = "0x6000477")]
		[Address(RVA = "0xB93068", Offset = "0xB93068", VA = "0xB93068")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000478")]
	[Address(RVA = "0xB930E0", Offset = "0xB930E0", VA = "0xB930E0")]
	private static string GetPath(Transform current)
	{
		return null;
	}

	[Token(Token = "0x6000479")]
	[Address(RVA = "0xB93228", Offset = "0xB93228", VA = "0xB93228")]
	private void Awake()
	{
	}

	[Token(Token = "0x600047A")]
	[Address(RVA = "0xB9322C", Offset = "0xB9322C", VA = "0xB9322C")]
	private void CreatePropagationGeometry()
	{
	}

	[Token(Token = "0x600047B")]
	[Address(RVA = "0xB9378C", Offset = "0xB9378C", VA = "0xB9378C")]
	private void Update()
	{
	}

	[Token(Token = "0x600047C")]
	[Address(RVA = "0xB93B24", Offset = "0xB93B24", VA = "0xB93B24")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600047D")]
	[Address(RVA = "0xB93C80", Offset = "0xB93C80", VA = "0xB93C80")]
	private static void traverseMeshHierarchy(GameObject obj, ONSPPropagationMaterial[] currentMaterials, bool includeChildren, List<MeshMaterial> meshMaterials, List<TerrainMaterial> terrainMaterials, bool ignoreStatic, ref int ignoredMeshCount)
	{
	}

	[Token(Token = "0x600047E")]
	[Address(RVA = "0xB94358", Offset = "0xB94358", VA = "0xB94358")]
	private int uploadMesh(IntPtr geometryHandle, GameObject meshObject, Matrix4x4 worldToLocal)
	{
		return default(int);
	}

	[Token(Token = "0x600047F")]
	[Address(RVA = "0xB94394", Offset = "0xB94394", VA = "0xB94394")]
	private int uploadMesh(IntPtr geometryHandle, GameObject meshObject, Matrix4x4 worldToLocal, bool ignoreStatic, ref int ignoredMeshCount)
	{
		return default(int);
	}

	[Token(Token = "0x6000480")]
	[Address(RVA = "0xB959AC", Offset = "0xB959AC", VA = "0xB959AC")]
	private static void uploadMeshFilter(List<UnityEngine.Vector3> tempVertices, List<int> tempIndices, MeshGroup[] groups, float[] vertices, int[] indices, ref int vertexOffset, ref int indexOffset, ref int groupOffset, Mesh mesh, ONSPPropagationMaterial[] materials, Matrix4x4 matrix)
	{
	}

	[Token(Token = "0x6000481")]
	[Address(RVA = "0xB95884", Offset = "0xB95884", VA = "0xB95884")]
	private static void updateCountsForMesh(ref int totalVertexCount, ref uint totalIndexCount, ref int totalFaceCount, ref int totalMaterialCount, Mesh mesh)
	{
	}

	[Token(Token = "0x6000482")]
	[Address(RVA = "0xB935C4", Offset = "0xB935C4", VA = "0xB935C4")]
	public void UploadGeometry()
	{
	}

	[Token(Token = "0x6000483")]
	[Address(RVA = "0xB933F8", Offset = "0xB933F8", VA = "0xB933F8")]
	public bool ReadFile()
	{
		return default(bool);
	}

	[Token(Token = "0x6000484")]
	[Address(RVA = "0xB95E58", Offset = "0xB95E58", VA = "0xB95E58")]
	public bool WriteToObj()
	{
		return default(bool);
	}

	[Token(Token = "0x6000485")]
	[Address(RVA = "0xB96294", Offset = "0xB96294", VA = "0xB96294")]
	public ONSPPropagationGeometry()
	{
	}
}
[Token(Token = "0x20000F3")]
internal class ONSPPropagation
{
	[Token(Token = "0x200067C")]
	public enum ovrAudioScalarType : uint
	{
		[Token(Token = "0x40021B2")]
		Int8,
		[Token(Token = "0x40021B3")]
		UInt8,
		[Token(Token = "0x40021B4")]
		Int16,
		[Token(Token = "0x40021B5")]
		UInt16,
		[Token(Token = "0x40021B6")]
		Int32,
		[Token(Token = "0x40021B7")]
		UInt32,
		[Token(Token = "0x40021B8")]
		Int64,
		[Token(Token = "0x40021B9")]
		UInt64,
		[Token(Token = "0x40021BA")]
		Float16,
		[Token(Token = "0x40021BB")]
		Float32,
		[Token(Token = "0x40021BC")]
		Float64
	}

	[Token(Token = "0x200067D")]
	public class ClientType
	{
		[Token(Token = "0x40021BD")]
		public const uint OVRA_CLIENT_TYPE_NATIVE = 0u;

		[Token(Token = "0x40021BE")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2016 = 1u;

		[Token(Token = "0x40021BF")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2017_1 = 2u;

		[Token(Token = "0x40021C0")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2017_2 = 3u;

		[Token(Token = "0x40021C1")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2018_1 = 4u;

		[Token(Token = "0x40021C2")]
		public const uint OVRA_CLIENT_TYPE_FMOD = 5u;

		[Token(Token = "0x40021C3")]
		public const uint OVRA_CLIENT_TYPE_UNITY = 6u;

		[Token(Token = "0x40021C4")]
		public const uint OVRA_CLIENT_TYPE_UE4 = 7u;

		[Token(Token = "0x40021C5")]
		public const uint OVRA_CLIENT_TYPE_VST = 8u;

		[Token(Token = "0x40021C6")]
		public const uint OVRA_CLIENT_TYPE_AAX = 9u;

		[Token(Token = "0x40021C7")]
		public const uint OVRA_CLIENT_TYPE_TEST = 10u;

		[Token(Token = "0x40021C8")]
		public const uint OVRA_CLIENT_TYPE_OTHER = 11u;

		[Token(Token = "0x40021C9")]
		public const uint OVRA_CLIENT_TYPE_WWISE_UNKNOWN = 12u;

		[Token(Token = "0x40021CA")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2019_1 = 13u;

		[Token(Token = "0x40021CB")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2019_2 = 14u;

		[Token(Token = "0x60027BA")]
		[Address(RVA = "0xB90A14", Offset = "0xB90A14", VA = "0xB90A14")]
		public ClientType()
		{
		}
	}

	[Token(Token = "0x200067E")]
	public interface PropagationInterface
	{
		[Token(Token = "0x60027BB")]
		int SetPropagationQuality(float quality);

		[Token(Token = "0x60027BC")]
		int SetPropagationThreadAffinity(ulong cpuMask);

		[Token(Token = "0x60027BD")]
		int CreateAudioGeometry(out IntPtr geometry);

		[Token(Token = "0x60027BE")]
		int DestroyAudioGeometry(IntPtr geometry);

		[Token(Token = "0x60027BF")]
		int AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, int vertexCount, int[] indices, int indexCount, MeshGroup[] groups, int groupCount);

		[Token(Token = "0x60027C0")]
		int AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4);

		[Token(Token = "0x60027C1")]
		int AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4);

		[Token(Token = "0x60027C2")]
		int AudioGeometryWriteMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x60027C3")]
		int AudioGeometryReadMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x60027C4")]
		int AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath);

		[Token(Token = "0x60027C5")]
		int AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value);

		[Token(Token = "0x60027C6")]
		int CreateAudioMaterial(out IntPtr material);

		[Token(Token = "0x60027C7")]
		int DestroyAudioMaterial(IntPtr material);

		[Token(Token = "0x60027C8")]
		int AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value);

		[Token(Token = "0x60027C9")]
		int AudioMaterialReset(IntPtr material, MaterialProperty property);
	}

	[Token(Token = "0x200067F")]
	public class UnityNativeInterface : PropagationInterface
	{
		[Token(Token = "0x40021CC")]
		public const string strOSPS = "AudioPluginOculusSpatializer";

		[Token(Token = "0x40021CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr context_;

		[Token(Token = "0x17000475")]
		private IntPtr context
		{
			[Token(Token = "0x60027CA")]
			[Address(RVA = "0xB91684", Offset = "0xB91684", VA = "0xB91684")]
			get
			{
				return default(IntPtr);
			}
		}

		[PreserveSig]
		[Token(Token = "0x60027CB")]
		[Address(RVA = "0xB916E8", Offset = "0xB916E8", VA = "0xB916E8")]
		public static extern int ovrAudio_GetPluginContext(out IntPtr context, uint clientType);

		[PreserveSig]
		[Token(Token = "0x60027CC")]
		[Address(RVA = "0xB91778", Offset = "0xB91778", VA = "0xB91778")]
		private static extern int ovrAudio_SetPropagationQuality(IntPtr context, float quality);

		[Token(Token = "0x60027CD")]
		[Address(RVA = "0xB91808", Offset = "0xB91808", VA = "0xB91808", Slot = "4")]
		public int SetPropagationQuality(float quality)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60027CE")]
		[Address(RVA = "0xB9182C", Offset = "0xB9182C", VA = "0xB9182C")]
		private static extern int ovrAudio_SetPropagationThreadAffinity(IntPtr context, ulong cpuMask);

		[Token(Token = "0x60027CF")]
		[Address(RVA = "0xB918BC", Offset = "0xB918BC", VA = "0xB918BC", Slot = "5")]
		public int SetPropagationThreadAffinity(ulong cpuMask)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60027D0")]
		[Address(RVA = "0xB918E0", Offset = "0xB918E0", VA = "0xB918E0")]
		private static extern int ovrAudio_CreateAudioGeometry(IntPtr context, out IntPtr geometry);

		[Token(Token = "0x60027D1")]
		[Address(RVA = "0xB9196C", Offset = "0xB9196C", VA = "0xB9196C", Slot = "6")]
		public int CreateAudioGeometry(out IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60027D2")]
		[Address(RVA = "0xB91990", Offset = "0xB91990", VA = "0xB91990")]
		private static extern int ovrAudio_DestroyAudioGeometry(IntPtr geometry);

		[Token(Token = "0x60027D3")]
		[Address(RVA = "0xB91A10", Offset = "0xB91A10", VA = "0xB91A10", Slot = "7")]
		public int DestroyAudioGeometry(IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60027D4")]
		[Address(RVA = "0xB91A18", Offset = "0xB91A18", VA = "0xB91A18")]
		private static extern int ovrAudio_AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, UIntPtr verticesBytesOffset, UIntPtr vertexCount, UIntPtr vertexStride, ovrAudioScalarType vertexType, int[] indices, UIntPtr indicesByteOffset, UIntPtr indexCount, ovrAudioScalarType indexType, MeshGroup[] groups, UIntPtr groupCount);

		[Token(Token = "0x60027D5")]
		[Address(RVA = "0xB91B38", Offset = "0xB91B38", VA = "0xB91B38", Slot = "8")]
		public int AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, int vertexCount, int[] indices, int indexCount, MeshGroup[] groups, int groupCount)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60027D6")]
		[Address(RVA = "0xB91C30", Offset = "0xB91C30", VA = "0xB91C30")]
		private static extern int ovrAudio_AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4);

		[Token(Token = "0x60027D7")]
		[Address(RVA = "0xB91CC8", Offset = "0xB91CC8", VA = "0xB91CC8", Slot = "9")]
		public int AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60027D8")]
		[Address(RVA = "0xB91CD4", Offset = "0xB91CD4", VA = "0xB91CD4")]
		private static extern int ovrAudio_AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4);

		[Token(Token = "0x60027D9")]
		[Address(RVA = "0xB91E00", Offset = "0xB91E00", VA = "0xB91E00", Slot = "10")]
		public int AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60027DA")]
		[Address(RVA = "0xB91E0C", Offset = "0xB91E0C", VA = "0xB91E0C")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x60027DB")]
		[Address(RVA = "0xB91EB8", Offset = "0xB91EB8", VA = "0xB91EB8", Slot = "11")]
		public int AudioGeometryWriteMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60027DC")]
		[Address(RVA = "0xB91EC4", Offset = "0xB91EC4", VA = "0xB91EC4")]
		private static extern int ovrAudio_AudioGeometryReadMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x60027DD")]
		[Address(RVA = "0xB91F70", Offset = "0xB91F70", VA = "0xB91F70", Slot = "12")]
		public int AudioGeometryReadMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60027DE")]
		[Address(RVA = "0xB91F7C", Offset = "0xB91F7C", VA = "0xB91F7C")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath);

		[Token(Token = "0x60027DF")]
		[Address(RVA = "0xB92028", Offset = "0xB92028", VA = "0xB92028", Slot = "13")]
		public int AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60027E0")]
		[Address(RVA = "0xB92034", Offset = "0xB92034", VA = "0xB92034")]
		private static extern int ovrAudio_CreateAudioMaterial(IntPtr context, out IntPtr material);

		[Token(Token = "0x60027E1")]
		[Address(RVA = "0xB920C0", Offset = "0xB920C0", VA = "0xB920C0", Slot = "15")]
		public int CreateAudioMaterial(out IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60027E2")]
		[Address(RVA = "0xB920E4", Offset = "0xB920E4", VA = "0xB920E4")]
		private static extern int ovrAudio_DestroyAudioMaterial(IntPtr material);

		[Token(Token = "0x60027E3")]
		[Address(RVA = "0xB92164", Offset = "0xB92164", VA = "0xB92164", Slot = "16")]
		public int DestroyAudioMaterial(IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60027E4")]
		[Address(RVA = "0xB9216C", Offset = "0xB9216C", VA = "0xB9216C")]
		private static extern int ovrAudio_AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value);

		[Token(Token = "0x60027E5")]
		[Address(RVA = "0xB92214", Offset = "0xB92214", VA = "0xB92214", Slot = "17")]
		public int AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60027E6")]
		[Address(RVA = "0xB92220", Offset = "0xB92220", VA = "0xB92220")]
		private static extern int ovrAudio_AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value);

		[Token(Token = "0x60027E7")]
		[Address(RVA = "0xB922C8", Offset = "0xB922C8", VA = "0xB922C8", Slot = "14")]
		public int AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60027E8")]
		[Address(RVA = "0xB922D8", Offset = "0xB922D8", VA = "0xB922D8")]
		private static extern int ovrAudio_AudioMaterialReset(IntPtr material, MaterialProperty property);

		[Token(Token = "0x60027E9")]
		[Address(RVA = "0xB92368", Offset = "0xB92368", VA = "0xB92368", Slot = "18")]
		public int AudioMaterialReset(IntPtr material, MaterialProperty property)
		{
			return default(int);
		}

		[Token(Token = "0x60027EA")]
		[Address(RVA = "0xB909C0", Offset = "0xB909C0", VA = "0xB909C0")]
		public UnityNativeInterface()
		{
		}
	}

	[Token(Token = "0x2000680")]
	public class WwisePluginInterface : PropagationInterface
	{
		[Token(Token = "0x40021CE")]
		public const string strOSPS = "OculusSpatializerWwise";

		[Token(Token = "0x40021CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr context_;

		[Token(Token = "0x17000476")]
		private IntPtr context
		{
			[Token(Token = "0x60027EB")]
			[Address(RVA = "0xB92374", Offset = "0xB92374", VA = "0xB92374")]
			get
			{
				return default(IntPtr);
			}
		}

		[PreserveSig]
		[Token(Token = "0x60027EC")]
		[Address(RVA = "0xB90808", Offset = "0xB90808", VA = "0xB90808")]
		public static extern int ovrAudio_GetPluginContext(out IntPtr context, uint clientType);

		[PreserveSig]
		[Token(Token = "0x60027ED")]
		[Address(RVA = "0xB923D8", Offset = "0xB923D8", VA = "0xB923D8")]
		private static extern int ovrAudio_SetPropagationQuality(IntPtr context, float quality);

		[Token(Token = "0x60027EE")]
		[Address(RVA = "0xB92468", Offset = "0xB92468", VA = "0xB92468", Slot = "4")]
		public int SetPropagationQuality(float quality)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60027EF")]
		[Address(RVA = "0xB9248C", Offset = "0xB9248C", VA = "0xB9248C")]
		private static extern int ovrAudio_SetPropagationThreadAffinity(IntPtr context, ulong cpuMask);

		[Token(Token = "0x60027F0")]
		[Address(RVA = "0xB9251C", Offset = "0xB9251C", VA = "0xB9251C", Slot = "5")]
		public int SetPropagationThreadAffinity(ulong cpuMask)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60027F1")]
		[Address(RVA = "0xB92540", Offset = "0xB92540", VA = "0xB92540")]
		private static extern int ovrAudio_CreateAudioGeometry(IntPtr context, out IntPtr geometry);

		[Token(Token = "0x60027F2")]
		[Address(RVA = "0xB925D0", Offset = "0xB925D0", VA = "0xB925D0", Slot = "6")]
		public int CreateAudioGeometry(out IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60027F3")]
		[Address(RVA = "0xB925F4", Offset = "0xB925F4", VA = "0xB925F4")]
		private static extern int ovrAudio_DestroyAudioGeometry(IntPtr geometry);

		[Token(Token = "0x60027F4")]
		[Address(RVA = "0xB92674", Offset = "0xB92674", VA = "0xB92674", Slot = "7")]
		public int DestroyAudioGeometry(IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60027F5")]
		[Address(RVA = "0xB9267C", Offset = "0xB9267C", VA = "0xB9267C")]
		private static extern int ovrAudio_AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, UIntPtr verticesBytesOffset, UIntPtr vertexCount, UIntPtr vertexStride, ovrAudioScalarType vertexType, int[] indices, UIntPtr indicesByteOffset, UIntPtr indexCount, ovrAudioScalarType indexType, MeshGroup[] groups, UIntPtr groupCount);

		[Token(Token = "0x60027F6")]
		[Address(RVA = "0xB9279C", Offset = "0xB9279C", VA = "0xB9279C", Slot = "8")]
		public int AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, int vertexCount, int[] indices, int indexCount, MeshGroup[] groups, int groupCount)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60027F7")]
		[Address(RVA = "0xB92894", Offset = "0xB92894", VA = "0xB92894")]
		private static extern int ovrAudio_AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4);

		[Token(Token = "0x60027F8")]
		[Address(RVA = "0xB9292C", Offset = "0xB9292C", VA = "0xB9292C", Slot = "9")]
		public int AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60027F9")]
		[Address(RVA = "0xB92938", Offset = "0xB92938", VA = "0xB92938")]
		private static extern int ovrAudio_AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4);

		[Token(Token = "0x60027FA")]
		[Address(RVA = "0xB92A64", Offset = "0xB92A64", VA = "0xB92A64", Slot = "10")]
		public int AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60027FB")]
		[Address(RVA = "0xB92A70", Offset = "0xB92A70", VA = "0xB92A70")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x60027FC")]
		[Address(RVA = "0xB92B1C", Offset = "0xB92B1C", VA = "0xB92B1C", Slot = "11")]
		public int AudioGeometryWriteMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60027FD")]
		[Address(RVA = "0xB92B28", Offset = "0xB92B28", VA = "0xB92B28")]
		private static extern int ovrAudio_AudioGeometryReadMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x60027FE")]
		[Address(RVA = "0xB92BD4", Offset = "0xB92BD4", VA = "0xB92BD4", Slot = "12")]
		public int AudioGeometryReadMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60027FF")]
		[Address(RVA = "0xB92BE0", Offset = "0xB92BE0", VA = "0xB92BE0")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath);

		[Token(Token = "0x6002800")]
		[Address(RVA = "0xB92C8C", Offset = "0xB92C8C", VA = "0xB92C8C", Slot = "13")]
		public int AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002801")]
		[Address(RVA = "0xB92C98", Offset = "0xB92C98", VA = "0xB92C98")]
		private static extern int ovrAudio_CreateAudioMaterial(IntPtr context, out IntPtr material);

		[Token(Token = "0x6002802")]
		[Address(RVA = "0xB92D28", Offset = "0xB92D28", VA = "0xB92D28", Slot = "15")]
		public int CreateAudioMaterial(out IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002803")]
		[Address(RVA = "0xB92D4C", Offset = "0xB92D4C", VA = "0xB92D4C")]
		private static extern int ovrAudio_DestroyAudioMaterial(IntPtr material);

		[Token(Token = "0x6002804")]
		[Address(RVA = "0xB92DCC", Offset = "0xB92DCC", VA = "0xB92DCC", Slot = "16")]
		public int DestroyAudioMaterial(IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002805")]
		[Address(RVA = "0xB92DD4", Offset = "0xB92DD4", VA = "0xB92DD4")]
		private static extern int ovrAudio_AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value);

		[Token(Token = "0x6002806")]
		[Address(RVA = "0xB92E7C", Offset = "0xB92E7C", VA = "0xB92E7C", Slot = "17")]
		public int AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002807")]
		[Address(RVA = "0xB92E88", Offset = "0xB92E88", VA = "0xB92E88")]
		private static extern int ovrAudio_AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value);

		[Token(Token = "0x6002808")]
		[Address(RVA = "0xB92F30", Offset = "0xB92F30", VA = "0xB92F30", Slot = "14")]
		public int AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002809")]
		[Address(RVA = "0xB92F40", Offset = "0xB92F40", VA = "0xB92F40")]
		private static extern int ovrAudio_AudioMaterialReset(IntPtr material, MaterialProperty property);

		[Token(Token = "0x600280A")]
		[Address(RVA = "0xB92FD0", Offset = "0xB92FD0", VA = "0xB92FD0", Slot = "18")]
		public int AudioMaterialReset(IntPtr material, MaterialProperty property)
		{
			return default(int);
		}

		[Token(Token = "0x600280B")]
		[Address(RVA = "0xB90898", Offset = "0xB90898", VA = "0xB90898")]
		public WwisePluginInterface()
		{
		}
	}

	[Token(Token = "0x2000681")]
	public class FMODPluginInterface : PropagationInterface
	{
		[Token(Token = "0x40021D0")]
		public const string strOSPS = "OculusSpatializerFMOD";

		[Token(Token = "0x40021D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr context_;

		[Token(Token = "0x17000477")]
		private IntPtr context
		{
			[Token(Token = "0x600280C")]
			[Address(RVA = "0xB90A1C", Offset = "0xB90A1C", VA = "0xB90A1C")]
			get
			{
				return default(IntPtr);
			}
		}

		[PreserveSig]
		[Token(Token = "0x600280D")]
		[Address(RVA = "0xB908E4", Offset = "0xB908E4", VA = "0xB908E4")]
		public static extern int ovrAudio_GetPluginContext(out IntPtr context, uint clientType);

		[PreserveSig]
		[Token(Token = "0x600280E")]
		[Address(RVA = "0xB90A80", Offset = "0xB90A80", VA = "0xB90A80")]
		private static extern int ovrAudio_SetPropagationQuality(IntPtr context, float quality);

		[Token(Token = "0x600280F")]
		[Address(RVA = "0xB90B10", Offset = "0xB90B10", VA = "0xB90B10", Slot = "4")]
		public int SetPropagationQuality(float quality)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002810")]
		[Address(RVA = "0xB90B34", Offset = "0xB90B34", VA = "0xB90B34")]
		private static extern int ovrAudio_SetPropagationThreadAffinity(IntPtr context, ulong cpuMask);

		[Token(Token = "0x6002811")]
		[Address(RVA = "0xB90BC4", Offset = "0xB90BC4", VA = "0xB90BC4", Slot = "5")]
		public int SetPropagationThreadAffinity(ulong cpuMask)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002812")]
		[Address(RVA = "0xB90BE8", Offset = "0xB90BE8", VA = "0xB90BE8")]
		private static extern int ovrAudio_CreateAudioGeometry(IntPtr context, out IntPtr geometry);

		[Token(Token = "0x6002813")]
		[Address(RVA = "0xB90C78", Offset = "0xB90C78", VA = "0xB90C78", Slot = "6")]
		public int CreateAudioGeometry(out IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002814")]
		[Address(RVA = "0xB90C9C", Offset = "0xB90C9C", VA = "0xB90C9C")]
		private static extern int ovrAudio_DestroyAudioGeometry(IntPtr geometry);

		[Token(Token = "0x6002815")]
		[Address(RVA = "0xB90D1C", Offset = "0xB90D1C", VA = "0xB90D1C", Slot = "7")]
		public int DestroyAudioGeometry(IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002816")]
		[Address(RVA = "0xB90D24", Offset = "0xB90D24", VA = "0xB90D24")]
		private static extern int ovrAudio_AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, UIntPtr verticesBytesOffset, UIntPtr vertexCount, UIntPtr vertexStride, ovrAudioScalarType vertexType, int[] indices, UIntPtr indicesByteOffset, UIntPtr indexCount, ovrAudioScalarType indexType, MeshGroup[] groups, UIntPtr groupCount);

		[Token(Token = "0x6002817")]
		[Address(RVA = "0xB90E44", Offset = "0xB90E44", VA = "0xB90E44", Slot = "8")]
		public int AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, int vertexCount, int[] indices, int indexCount, MeshGroup[] groups, int groupCount)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002818")]
		[Address(RVA = "0xB90F3C", Offset = "0xB90F3C", VA = "0xB90F3C")]
		private static extern int ovrAudio_AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4);

		[Token(Token = "0x6002819")]
		[Address(RVA = "0xB90FD4", Offset = "0xB90FD4", VA = "0xB90FD4", Slot = "9")]
		public int AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600281A")]
		[Address(RVA = "0xB90FE0", Offset = "0xB90FE0", VA = "0xB90FE0")]
		private static extern int ovrAudio_AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4);

		[Token(Token = "0x600281B")]
		[Address(RVA = "0xB9110C", Offset = "0xB9110C", VA = "0xB9110C", Slot = "10")]
		public int AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600281C")]
		[Address(RVA = "0xB91118", Offset = "0xB91118", VA = "0xB91118")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x600281D")]
		[Address(RVA = "0xB911C4", Offset = "0xB911C4", VA = "0xB911C4", Slot = "11")]
		public int AudioGeometryWriteMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600281E")]
		[Address(RVA = "0xB911D0", Offset = "0xB911D0", VA = "0xB911D0")]
		private static extern int ovrAudio_AudioGeometryReadMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x600281F")]
		[Address(RVA = "0xB9127C", Offset = "0xB9127C", VA = "0xB9127C", Slot = "12")]
		public int AudioGeometryReadMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002820")]
		[Address(RVA = "0xB91288", Offset = "0xB91288", VA = "0xB91288")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath);

		[Token(Token = "0x6002821")]
		[Address(RVA = "0xB91334", Offset = "0xB91334", VA = "0xB91334", Slot = "13")]
		public int AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002822")]
		[Address(RVA = "0xB91340", Offset = "0xB91340", VA = "0xB91340")]
		private static extern int ovrAudio_CreateAudioMaterial(IntPtr context, out IntPtr material);

		[Token(Token = "0x6002823")]
		[Address(RVA = "0xB913D0", Offset = "0xB913D0", VA = "0xB913D0", Slot = "15")]
		public int CreateAudioMaterial(out IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002824")]
		[Address(RVA = "0xB913F4", Offset = "0xB913F4", VA = "0xB913F4")]
		private static extern int ovrAudio_DestroyAudioMaterial(IntPtr material);

		[Token(Token = "0x6002825")]
		[Address(RVA = "0xB91474", Offset = "0xB91474", VA = "0xB91474", Slot = "16")]
		public int DestroyAudioMaterial(IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002826")]
		[Address(RVA = "0xB9147C", Offset = "0xB9147C", VA = "0xB9147C")]
		private static extern int ovrAudio_AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value);

		[Token(Token = "0x6002827")]
		[Address(RVA = "0xB91524", Offset = "0xB91524", VA = "0xB91524", Slot = "17")]
		public int AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002828")]
		[Address(RVA = "0xB91530", Offset = "0xB91530", VA = "0xB91530")]
		private static extern int ovrAudio_AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value);

		[Token(Token = "0x6002829")]
		[Address(RVA = "0xB915D8", Offset = "0xB915D8", VA = "0xB915D8", Slot = "14")]
		public int AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600282A")]
		[Address(RVA = "0xB915E8", Offset = "0xB915E8", VA = "0xB915E8")]
		private static extern int ovrAudio_AudioMaterialReset(IntPtr material, MaterialProperty property);

		[Token(Token = "0x600282B")]
		[Address(RVA = "0xB91678", Offset = "0xB91678", VA = "0xB91678", Slot = "18")]
		public int AudioMaterialReset(IntPtr material, MaterialProperty property)
		{
			return default(int);
		}

		[Token(Token = "0x600282C")]
		[Address(RVA = "0xB90974", Offset = "0xB90974", VA = "0xB90974")]
		public FMODPluginInterface()
		{
		}
	}

	[Token(Token = "0x40004CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static PropagationInterface CachedInterface;

	[Token(Token = "0x1700005C")]
	public static PropagationInterface Interface
	{
		[Token(Token = "0x6000487")]
		[Address(RVA = "0xB90570", Offset = "0xB90570", VA = "0xB90570")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000488")]
	[Address(RVA = "0xB905E0", Offset = "0xB905E0", VA = "0xB905E0")]
	private static PropagationInterface FindInterface()
	{
		return null;
	}

	[Token(Token = "0x6000489")]
	[Address(RVA = "0xB90A0C", Offset = "0xB90A0C", VA = "0xB90A0C")]
	public ONSPPropagation()
	{
	}
}
[Token(Token = "0x20000F4")]
public sealed class ONSPPropagationMaterial : MonoBehaviour
{
	[Token(Token = "0x2000682")]
	public enum Preset
	{
		[Token(Token = "0x40021D3")]
		Custom,
		[Token(Token = "0x40021D4")]
		AcousticTile,
		[Token(Token = "0x40021D5")]
		Brick,
		[Token(Token = "0x40021D6")]
		BrickPainted,
		[Token(Token = "0x40021D7")]
		Carpet,
		[Token(Token = "0x40021D8")]
		CarpetHeavy,
		[Token(Token = "0x40021D9")]
		CarpetHeavyPadded,
		[Token(Token = "0x40021DA")]
		CeramicTile,
		[Token(Token = "0x40021DB")]
		Concrete,
		[Token(Token = "0x40021DC")]
		ConcreteRough,
		[Token(Token = "0x40021DD")]
		ConcreteBlock,
		[Token(Token = "0x40021DE")]
		ConcreteBlockPainted,
		[Token(Token = "0x40021DF")]
		Curtain,
		[Token(Token = "0x40021E0")]
		Foliage,
		[Token(Token = "0x40021E1")]
		Glass,
		[Token(Token = "0x40021E2")]
		GlassHeavy,
		[Token(Token = "0x40021E3")]
		Grass,
		[Token(Token = "0x40021E4")]
		Gravel,
		[Token(Token = "0x40021E5")]
		GypsumBoard,
		[Token(Token = "0x40021E6")]
		PlasterOnBrick,
		[Token(Token = "0x40021E7")]
		PlasterOnConcreteBlock,
		[Token(Token = "0x40021E8")]
		Soil,
		[Token(Token = "0x40021E9")]
		SoundProof,
		[Token(Token = "0x40021EA")]
		Snow,
		[Token(Token = "0x40021EB")]
		Steel,
		[Token(Token = "0x40021EC")]
		Water,
		[Token(Token = "0x40021ED")]
		WoodThin,
		[Token(Token = "0x40021EE")]
		WoodThick,
		[Token(Token = "0x40021EF")]
		WoodFloor,
		[Token(Token = "0x40021F0")]
		WoodOnConcrete
	}

	[Serializable]
	[Token(Token = "0x2000683")]
	public sealed class Point
	{
		[Token(Token = "0x40021F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float frequency;

		[Token(Token = "0x40021F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float data;

		[Token(Token = "0x600282D")]
		[Address(RVA = "0x15409E4", Offset = "0x15409E4", VA = "0x15409E4")]
		public Point(float frequency = 0f, float data = 0f)
		{
		}

		[Token(Token = "0x600282E")]
		[Address(RVA = "0x1540B2C", Offset = "0x1540B2C", VA = "0x1540B2C")]
		public static implicit operator Point(UnityEngine.Vector2 v)
		{
			return null;
		}

		[Token(Token = "0x600282F")]
		[Address(RVA = "0x1540B9C", Offset = "0x1540B9C", VA = "0x1540B9C")]
		public static implicit operator UnityEngine.Vector2(Point point)
		{
			return default(UnityEngine.Vector2);
		}
	}

	[Serializable]
	[Token(Token = "0x2000684")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x8B7B3C", Offset = "0x8B7B3C")]
	public sealed class Spectrum
	{
		[Serializable]
		[Token(Token = "0x20008CC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B9110", Offset = "0x8B9110")]
		private sealed class <>c
		{
			[Token(Token = "0x4002A85")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002A86")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Point, float> <>9__3_0;

			[Token(Token = "0x4002A87")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<Point, float> <>9__3_1;

			[Token(Token = "0x60030ED")]
			[Address(RVA = "0x1540FF4", Offset = "0x1540FF4", VA = "0x1540FF4")]
			public <>c()
			{
			}

			[Token(Token = "0x60030EE")]
			[Address(RVA = "0x1540FFC", Offset = "0x1540FFC", VA = "0x1540FFC")]
			internal float <get_Item>b__3_0(Point p)
			{
				return default(float);
			}

			[Token(Token = "0x60030EF")]
			[Address(RVA = "0x1541014", Offset = "0x1541014", VA = "0x1541014")]
			internal float <get_Item>b__3_1(Point p)
			{
				return default(float);
			}
		}

		[Token(Token = "0x40021F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int selection;

		[Token(Token = "0x40021F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<Point> points;

		[Token(Token = "0x17000478")]
		public float Item
		{
			[Token(Token = "0x6002830")]
			[Address(RVA = "0x1540BD4", Offset = "0x1540BD4", VA = "0x1540BD4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6002831")]
		[Address(RVA = "0x1540AB4", Offset = "0x1540AB4", VA = "0x1540AB4")]
		public Spectrum()
		{
		}
	}

	[Token(Token = "0x40004CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr materialHandle;

	[Token(Token = "0x40004D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BB334", Offset = "0x8BB334")]
	public Spectrum absorption;

	[Token(Token = "0x40004D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BB36C", Offset = "0x8BB36C")]
	public Spectrum transmission;

	[Token(Token = "0x40004D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BB3A4", Offset = "0x8BB3A4")]
	public Spectrum scattering;

	[Token(Token = "0x40004D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Preset preset_;

	[Token(Token = "0x1700005D")]
	public Preset preset
	{
		[Token(Token = "0x600048A")]
		[Address(RVA = "0x15388C8", Offset = "0x15388C8", VA = "0x15388C8")]
		get
		{
			return default(Preset);
		}
		[Token(Token = "0x600048B")]
		[Address(RVA = "0x15388D0", Offset = "0x15388D0", VA = "0x15388D0")]
		set
		{
		}
	}

	[Token(Token = "0x600048C")]
	[Address(RVA = "0x1538A8C", Offset = "0x1538A8C", VA = "0x1538A8C")]
	private void Start()
	{
	}

	[Token(Token = "0x600048D")]
	[Address(RVA = "0x1538A90", Offset = "0x1538A90", VA = "0x1538A90")]
	public void StartInternal()
	{
	}

	[Token(Token = "0x600048E")]
	[Address(RVA = "0x15391C4", Offset = "0x15391C4", VA = "0x15391C4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600048F")]
	[Address(RVA = "0x15391C8", Offset = "0x15391C8", VA = "0x15391C8")]
	public void DestroyInternal()
	{
	}

	[Token(Token = "0x6000490")]
	[Address(RVA = "0x1538C00", Offset = "0x1538C00", VA = "0x1538C00")]
	public void UploadMaterial()
	{
	}

	[Token(Token = "0x6000491")]
	[Address(RVA = "0x15388F8", Offset = "0x15388F8", VA = "0x15388F8")]
	public void SetPreset(Preset preset)
	{
	}

	[Token(Token = "0x6000492")]
	[Address(RVA = "0x15392B0", Offset = "0x15392B0", VA = "0x15392B0")]
	private static void AcousticTile(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000493")]
	[Address(RVA = "0x1539710", Offset = "0x1539710", VA = "0x1539710")]
	private static void Brick(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000494")]
	[Address(RVA = "0x1539B70", Offset = "0x1539B70", VA = "0x1539B70")]
	private static void BrickPainted(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000495")]
	[Address(RVA = "0x1539FD0", Offset = "0x1539FD0", VA = "0x1539FD0")]
	private static void Carpet(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000496")]
	[Address(RVA = "0x153A430", Offset = "0x153A430", VA = "0x153A430")]
	private static void CarpetHeavy(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000497")]
	[Address(RVA = "0x153A890", Offset = "0x153A890", VA = "0x153A890")]
	private static void CarpetHeavyPadded(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000498")]
	[Address(RVA = "0x153ACF0", Offset = "0x153ACF0", VA = "0x153ACF0")]
	private static void CeramicTile(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000499")]
	[Address(RVA = "0x153B150", Offset = "0x153B150", VA = "0x153B150")]
	private static void Concrete(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600049A")]
	[Address(RVA = "0x153B5B0", Offset = "0x153B5B0", VA = "0x153B5B0")]
	private static void ConcreteRough(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600049B")]
	[Address(RVA = "0x153BA10", Offset = "0x153BA10", VA = "0x153BA10")]
	private static void ConcreteBlock(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600049C")]
	[Address(RVA = "0x153BE70", Offset = "0x153BE70", VA = "0x153BE70")]
	private static void ConcreteBlockPainted(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600049D")]
	[Address(RVA = "0x153C2D0", Offset = "0x153C2D0", VA = "0x153C2D0")]
	private static void Curtain(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600049E")]
	[Address(RVA = "0x153C730", Offset = "0x153C730", VA = "0x153C730")]
	private static void Foliage(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600049F")]
	[Address(RVA = "0x153CB90", Offset = "0x153CB90", VA = "0x153CB90")]
	private static void Glass(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60004A0")]
	[Address(RVA = "0x153CFE8", Offset = "0x153CFE8", VA = "0x153CFE8")]
	private static void GlassHeavy(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60004A1")]
	[Address(RVA = "0x153D448", Offset = "0x153D448", VA = "0x153D448")]
	private static void Grass(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60004A2")]
	[Address(RVA = "0x153D784", Offset = "0x153D784", VA = "0x153D784")]
	private static void Gravel(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60004A3")]
	[Address(RVA = "0x153DAC0", Offset = "0x153DAC0", VA = "0x153DAC0")]
	private static void GypsumBoard(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60004A4")]
	[Address(RVA = "0x153DF20", Offset = "0x153DF20", VA = "0x153DF20")]
	private static void PlasterOnBrick(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60004A5")]
	[Address(RVA = "0x153E380", Offset = "0x153E380", VA = "0x153E380")]
	private static void PlasterOnConcreteBlock(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60004A6")]
	[Address(RVA = "0x153E7E0", Offset = "0x153E7E0", VA = "0x153E7E0")]
	private static void Soil(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60004A7")]
	[Address(RVA = "0x153EB1C", Offset = "0x153EB1C", VA = "0x153EB1C")]
	private static void SoundProof(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60004A8")]
	[Address(RVA = "0x153EC78", Offset = "0x153EC78", VA = "0x153EC78")]
	private static void Snow(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60004A9")]
	[Address(RVA = "0x153EFB4", Offset = "0x153EFB4", VA = "0x153EFB4")]
	private static void Steel(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60004AA")]
	[Address(RVA = "0x153F40C", Offset = "0x153F40C", VA = "0x153F40C")]
	private static void Water(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60004AB")]
	[Address(RVA = "0x153F86C", Offset = "0x153F86C", VA = "0x153F86C")]
	private static void WoodThin(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60004AC")]
	[Address(RVA = "0x153FCC4", Offset = "0x153FCC4", VA = "0x153FCC4")]
	private static void WoodThick(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60004AD")]
	[Address(RVA = "0x1540124", Offset = "0x1540124", VA = "0x1540124")]
	private static void WoodFloor(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60004AE")]
	[Address(RVA = "0x1540584", Offset = "0x1540584", VA = "0x1540584")]
	private static void WoodOnConcrete(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60004AF")]
	[Address(RVA = "0x1540A1C", Offset = "0x1540A1C", VA = "0x1540A1C")]
	public ONSPPropagationMaterial()
	{
	}
}
[Token(Token = "0x20000F5")]
public class ONSPPropagationSettings : MonoBehaviour
{
	[Token(Token = "0x40004D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float quality;

	[Token(Token = "0x60004B0")]
	[Address(RVA = "0x154102C", Offset = "0x154102C", VA = "0x154102C")]
	private void Update()
	{
	}

	[Token(Token = "0x60004B1")]
	[Address(RVA = "0x1541100", Offset = "0x1541100", VA = "0x1541100")]
	public ONSPPropagationSettings()
	{
	}
}
[Token(Token = "0x20000F6")]
public sealed class ONSPSettings : ScriptableObject
{
	[Token(Token = "0x40004D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public int voiceLimit;

	[Token(Token = "0x40004D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ONSPSettings instance;

	[Token(Token = "0x1700005E")]
	public static ONSPSettings Instance
	{
		[Token(Token = "0x60004B2")]
		[Address(RVA = "0x15416BC", Offset = "0x15416BC", VA = "0x15416BC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60004B3")]
	[Address(RVA = "0x15417D0", Offset = "0x15417D0", VA = "0x15417D0")]
	public ONSPSettings()
	{
	}
}
[Token(Token = "0x20000F7")]
public class ONSPVersion : MonoBehaviour
{
	[Token(Token = "0x40004D7")]
	public const string strONSPS = "AudioPluginOculusSpatializer";

	[PreserveSig]
	[Token(Token = "0x60004B4")]
	[Address(RVA = "0x15417E0", Offset = "0x15417E0", VA = "0x15417E0")]
	private static extern void ONSP_GetVersion(ref int Major, ref int Minor, ref int Patch);

	[Token(Token = "0x60004B5")]
	[Address(RVA = "0x1541878", Offset = "0x1541878", VA = "0x1541878")]
	private void Awake()
	{
	}

	[Token(Token = "0x60004B6")]
	[Address(RVA = "0x1541984", Offset = "0x1541984", VA = "0x1541984")]
	private void Start()
	{
	}

	[Token(Token = "0x60004B7")]
	[Address(RVA = "0x1541988", Offset = "0x1541988", VA = "0x1541988")]
	private void Update()
	{
	}

	[Token(Token = "0x60004B8")]
	[Address(RVA = "0x154198C", Offset = "0x154198C", VA = "0x154198C")]
	public ONSPVersion()
	{
	}
}
[Token(Token = "0x20000F8")]
public class OculusSpatializerUnity : MonoBehaviour
{
	[Token(Token = "0x2000685")]
	public delegate void AudioRaycastCallback(UnityEngine.Vector3 origin, UnityEngine.Vector3 direction, out UnityEngine.Vector3 point, out UnityEngine.Vector3 normal, IntPtr data);

	[Token(Token = "0x40004D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LayerMask layerMask;

	[Token(Token = "0x40004D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool visualizeRoom;

	[Token(Token = "0x40004DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	private bool roomVisualizationInitialized;

	[Token(Token = "0x40004DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int raysPerSecond;

	[Token(Token = "0x40004DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float roomInterpSpeed;

	[Token(Token = "0x40004DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float maxWallDistance;

	[Token(Token = "0x40004DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int rayCacheSize;

	[Token(Token = "0x40004DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool dynamicReflectionsEnabled;

	[Token(Token = "0x40004E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float particleSize;

	[Token(Token = "0x40004E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float particleOffset;

	[Token(Token = "0x40004E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GameObject room;

	[Token(Token = "0x40004E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Renderer[] wallRenderer;

	[Token(Token = "0x40004E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float[] dims;

	[Token(Token = "0x40004E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float[] coefs;

	[Token(Token = "0x40004E6")]
	private const int HIT_COUNT = 2048;

	[Token(Token = "0x40004E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private UnityEngine.Vector3[] points;

	[Token(Token = "0x40004E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private UnityEngine.Vector3[] normals;

	[Token(Token = "0x40004E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private ParticleSystem sys;

	[Token(Token = "0x40004EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private ParticleSystem.Particle[] particles;

	[Token(Token = "0x40004EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static LayerMask gLayerMask;

	[Token(Token = "0x40004EC")]
	private const string strOSP = "AudioPluginOculusSpatializer";

	[Token(Token = "0x60004B9")]
	[Address(RVA = "0xAF65EC", Offset = "0xAF65EC", VA = "0xAF65EC")]
	private static UnityEngine.Vector3 swapHandedness(UnityEngine.Vector3 vec)
	{
		return default(UnityEngine.Vector3);
	}

	[Token(Token = "0x60004BA")]
	[Address(RVA = "0xAF641C", Offset = "0xAF641C", VA = "0xAF641C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x8C2E68", Offset = "0x8C2E68")]
	private static void AudioRaycast(UnityEngine.Vector3 origin, UnityEngine.Vector3 direction, out UnityEngine.Vector3 point, out UnityEngine.Vector3 normal, IntPtr data)
	{
	}

	[Token(Token = "0x60004BB")]
	[Address(RVA = "0xAF6624", Offset = "0xAF6624", VA = "0xAF6624")]
	private void Start()
	{
	}

	[Token(Token = "0x60004BC")]
	[Address(RVA = "0xAF6758", Offset = "0xAF6758", VA = "0xAF6758")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60004BD")]
	[Address(RVA = "0xAF684C", Offset = "0xAF684C", VA = "0xAF684C")]
	private void Update()
	{
	}

	[Token(Token = "0x60004BE")]
	[Address(RVA = "0xAF7204", Offset = "0xAF7204", VA = "0xAF7204")]
	private void inititalizeRoomVisualization()
	{
	}

	[PreserveSig]
	[Token(Token = "0x60004BF")]
	[Address(RVA = "0xAF66C4", Offset = "0xAF66C4", VA = "0xAF66C4")]
	private static extern int OSP_Unity_AssignRaycastCallback(AudioRaycastCallback callback, IntPtr data);

	[PreserveSig]
	[Token(Token = "0x60004C0")]
	[Address(RVA = "0xAF67BC", Offset = "0xAF67BC", VA = "0xAF67BC")]
	private static extern int OSP_Unity_AssignRaycastCallback(IntPtr callback, IntPtr data);

	[PreserveSig]
	[Token(Token = "0x60004C1")]
	[Address(RVA = "0xAF6F6C", Offset = "0xAF6F6C", VA = "0xAF6F6C")]
	private static extern int OSP_Unity_SetDynamicRoomRaysPerSecond(int RaysPerSecond);

	[PreserveSig]
	[Token(Token = "0x60004C2")]
	[Address(RVA = "0xAF6FEC", Offset = "0xAF6FEC", VA = "0xAF6FEC")]
	private static extern int OSP_Unity_SetDynamicRoomInterpSpeed(float InterpSpeed);

	[PreserveSig]
	[Token(Token = "0x60004C3")]
	[Address(RVA = "0xAF7074", Offset = "0xAF7074", VA = "0xAF7074")]
	private static extern int OSP_Unity_SetDynamicRoomMaxWallDistance(float MaxWallDistance);

	[PreserveSig]
	[Token(Token = "0x60004C4")]
	[Address(RVA = "0xAF70FC", Offset = "0xAF70FC", VA = "0xAF70FC")]
	private static extern int OSP_Unity_SetDynamicRoomRaysRayCacheSize(int RayCacheSize);

	[PreserveSig]
	[Token(Token = "0x60004C5")]
	[Address(RVA = "0xAF717C", Offset = "0xAF717C", VA = "0xAF717C")]
	private static extern int OSP_Unity_UpdateRoomModel(float wetLevel);

	[PreserveSig]
	[Token(Token = "0x60004C6")]
	[Address(RVA = "0xAF803C", Offset = "0xAF803C", VA = "0xAF803C")]
	private static extern int OSP_Unity_GetRoomDimensions(float[] roomDimensions, float[] reflectionsCoefs, out UnityEngine.Vector3 position);

	[PreserveSig]
	[Token(Token = "0x60004C7")]
	[Address(RVA = "0xAF80E4", Offset = "0xAF80E4", VA = "0xAF80E4")]
	private static extern int OSP_Unity_GetRaycastHits(UnityEngine.Vector3[] points, UnityEngine.Vector3[] normals, int length);

	[Token(Token = "0x60004C8")]
	[Address(RVA = "0xAF818C", Offset = "0xAF818C", VA = "0xAF818C")]
	public OculusSpatializerUnity()
	{
	}
}
[Token(Token = "0x20000F9")]
public struct ReflectionSnapshot
{
	[Token(Token = "0x40004ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public AudioMixerSnapshot mixerSnapshot;

	[Token(Token = "0x40004EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float fadeTime;
}
[Token(Token = "0x20000FA")]
public class ONSPReflectionZone : MonoBehaviour
{
	[Token(Token = "0x40004EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioMixerSnapshot mixerSnapshot;

	[Token(Token = "0x40004F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float fadeTime;

	[Token(Token = "0x40004F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Stack<ReflectionSnapshot> snapshotList;

	[Token(Token = "0x40004F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static ReflectionSnapshot currentSnapshot;

	[Token(Token = "0x60004CA")]
	[Address(RVA = "0x1541110", Offset = "0x1541110", VA = "0x1541110")]
	private void Start()
	{
	}

	[Token(Token = "0x60004CB")]
	[Address(RVA = "0x1541114", Offset = "0x1541114", VA = "0x1541114")]
	private void Update()
	{
	}

	[Token(Token = "0x60004CC")]
	[Address(RVA = "0x1541118", Offset = "0x1541118", VA = "0x1541118")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60004CD")]
	[Address(RVA = "0x1541280", Offset = "0x1541280", VA = "0x1541280")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x60004CE")]
	[Address(RVA = "0x1541164", Offset = "0x1541164", VA = "0x1541164")]
	private bool CheckForAudioListener(GameObject gameObject)
	{
		return default(bool);
	}

	[Token(Token = "0x60004CF")]
	[Address(RVA = "0x15411F4", Offset = "0x15411F4", VA = "0x15411F4")]
	private void PushCurrentMixerShapshot()
	{
	}

	[Token(Token = "0x60004D0")]
	[Address(RVA = "0x15412CC", Offset = "0x15412CC", VA = "0x15412CC")]
	private void PopCurrentMixerSnapshot()
	{
	}

	[Token(Token = "0x60004D1")]
	[Address(RVA = "0x1541364", Offset = "0x1541364", VA = "0x1541364")]
	private void SetReflectionValues()
	{
	}

	[Token(Token = "0x60004D2")]
	[Address(RVA = "0x15414CC", Offset = "0x15414CC", VA = "0x15414CC")]
	private void SetReflectionValues(ref ReflectionSnapshot mss)
	{
	}

	[Token(Token = "0x60004D3")]
	[Address(RVA = "0x1541634", Offset = "0x1541634", VA = "0x1541634")]
	public ONSPReflectionZone()
	{
	}
}
[Token(Token = "0x20000FB")]
public class VoiceModDemo_Logic : MonoBehaviour
{
	[Token(Token = "0x40004F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRVoiceModContext[] contexts;

	[Token(Token = "0x40004F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material material;

	[Token(Token = "0x40004F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform[] xfrms;

	[Token(Token = "0x40004F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public VoiceModEnableSwitch SwitchTarget;

	[Token(Token = "0x40004F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int targetSet;

	[Token(Token = "0x40004F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private UnityEngine.Vector3 scale;

	[Token(Token = "0x40004F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float scaleMax;

	[Token(Token = "0x40004FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private int currentPreset;

	[Token(Token = "0x60004D5")]
	[Address(RVA = "0xC0A78C", Offset = "0xC0A78C", VA = "0xC0A78C")]
	private void Start()
	{
	}

	[Token(Token = "0x60004D6")]
	[Address(RVA = "0xC0A984", Offset = "0xC0A984", VA = "0xC0A984")]
	private void Update()
	{
	}

	[Token(Token = "0x60004D7")]
	[Address(RVA = "0xC0AD70", Offset = "0xC0AD70", VA = "0xC0AD70")]
	private void SetCurrentTarget()
	{
	}

	[Token(Token = "0x60004D8")]
	[Address(RVA = "0xC0AE68", Offset = "0xC0AE68", VA = "0xC0AE68")]
	private void LocalTouchEventCallback(OVRTouchpad.TouchEvent touchEvent)
	{
	}

	[Token(Token = "0x60004D9")]
	[Address(RVA = "0xC0AC40", Offset = "0xC0AC40", VA = "0xC0AC40")]
	private void UpdateModelScale()
	{
	}

	[Token(Token = "0x60004DA")]
	[Address(RVA = "0xC0B204", Offset = "0xC0B204", VA = "0xC0B204")]
	public VoiceModDemo_Logic()
	{
	}
}
[Token(Token = "0x20000FC")]
public class VoiceModEnableSwitch : MonoBehaviour
{
	[Token(Token = "0x40004FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] SwitchTargets;

	[Token(Token = "0x60004DB")]
	public bool SetActive<T>(int target) where T : MonoBehaviour
	{
		return default(bool);
	}

	[Token(Token = "0x60004DC")]
	[Address(RVA = "0xC0A8C0", Offset = "0xC0A8C0", VA = "0xC0A8C0")]
	public bool SetActive(int target)
	{
		return default(bool);
	}

	[Token(Token = "0x60004DD")]
	[Address(RVA = "0xC0B268", Offset = "0xC0B268", VA = "0xC0B268")]
	public VoiceModEnableSwitch()
	{
	}
}
[Token(Token = "0x20000FD")]
public class OVRDebugConsole : MonoBehaviour
{
	[Token(Token = "0x40004FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ArrayList messages;

	[Token(Token = "0x40004FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int maxMessages;

	[Token(Token = "0x40004FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text textMsg;

	[Token(Token = "0x40004FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static OVRDebugConsole s_Instance;

	[Token(Token = "0x4000500")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool clearTimeoutOn;

	[Token(Token = "0x4000501")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float clearTimeout;

	[Token(Token = "0x1700005F")]
	public static OVRDebugConsole instance
	{
		[Token(Token = "0x60004DE")]
		[Address(RVA = "0x154A970", Offset = "0x154A970", VA = "0x154A970")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60004DF")]
	[Address(RVA = "0x154AC28", Offset = "0x154AC28", VA = "0x154AC28")]
	private void Awake()
	{
	}

	[Token(Token = "0x60004E0")]
	[Address(RVA = "0x154AD64", Offset = "0x154AD64", VA = "0x154AD64")]
	private void Update()
	{
	}

	[Token(Token = "0x60004E1")]
	[Address(RVA = "0x154AC98", Offset = "0x154AC98", VA = "0x154AC98")]
	public void Init()
	{
	}

	[Token(Token = "0x60004E2")]
	[Address(RVA = "0x154AE64", Offset = "0x154AE64", VA = "0x154AE64")]
	public static void Log(string message)
	{
	}

	[Token(Token = "0x60004E3")]
	[Address(RVA = "0x154AFD4", Offset = "0x154AFD4", VA = "0x154AFD4")]
	public static void Log(string message, Color color)
	{
	}

	[Token(Token = "0x60004E4")]
	[Address(RVA = "0x154ADFC", Offset = "0x154ADFC", VA = "0x154ADFC")]
	public static void Clear()
	{
	}

	[Token(Token = "0x60004E5")]
	[Address(RVA = "0x154B0B0", Offset = "0x154B0B0", VA = "0x154B0B0")]
	public static void ClearTimeout(float timeToClear)
	{
	}

	[Token(Token = "0x60004E6")]
	[Address(RVA = "0x154AEE4", Offset = "0x154AEE4", VA = "0x154AEE4")]
	public void AddMessage(string message, Color color)
	{
	}

	[Token(Token = "0x60004E7")]
	[Address(RVA = "0x154B074", Offset = "0x154B074", VA = "0x154B074")]
	public void ClearMessages()
	{
	}

	[Token(Token = "0x60004E8")]
	[Address(RVA = "0x154B130", Offset = "0x154B130", VA = "0x154B130")]
	public void SetClearTimeout(float timeout)
	{
	}

	[Token(Token = "0x60004E9")]
	[Address(RVA = "0x154B324", Offset = "0x154B324", VA = "0x154B324")]
	private void Prune()
	{
	}

	[Token(Token = "0x60004EA")]
	[Address(RVA = "0x154B140", Offset = "0x154B140", VA = "0x154B140")]
	private void Display()
	{
	}

	[Token(Token = "0x60004EB")]
	[Address(RVA = "0x154B3D4", Offset = "0x154B3D4", VA = "0x154B3D4")]
	public OVRDebugConsole()
	{
	}
}
[Token(Token = "0x20000FE")]
public delegate void OVRCallback();
[Token(Token = "0x20000FF")]
public delegate void OVRCallback<T>(T arg1);
[Token(Token = "0x2000100")]
public delegate void OVRCallback<T, U>(T arg1, U arg2);
[Token(Token = "0x2000101")]
public delegate void OVRCallback<T, U, V>(T arg1, U arg2, V arg3);
[Token(Token = "0x2000102")]
internal static class OVRMessenger
{
	[Token(Token = "0x2000686")]
	public class BroadcastException : Exception
	{
		[Token(Token = "0x6002836")]
		[Address(RVA = "0xD1CB64", Offset = "0xD1CB64", VA = "0xD1CB64")]
		public BroadcastException(string msg)
		{
		}
	}

	[Token(Token = "0x2000687")]
	public class ListenerException : Exception
	{
		[Token(Token = "0x6002837")]
		[Address(RVA = "0xD1C77C", Offset = "0xD1C77C", VA = "0xD1C77C")]
		public ListenerException(string msg)
		{
		}
	}

	[Token(Token = "0x4000502")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static MessengerHelper messengerHelper;

	[Token(Token = "0x4000503")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static Dictionary<string, Delegate> eventTable;

	[Token(Token = "0x4000504")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static List<string> permanentMessages;

	[Token(Token = "0x60004FD")]
	[Address(RVA = "0xD1BD94", Offset = "0xD1BD94", VA = "0xD1BD94")]
	public static void MarkAsPermanent(string eventType)
	{
	}

	[Token(Token = "0x60004FE")]
	[Address(RVA = "0xD1BE18", Offset = "0xD1BE18", VA = "0xD1BE18")]
	public static void Cleanup()
	{
	}

	[Token(Token = "0x60004FF")]
	[Address(RVA = "0xD1C224", Offset = "0xD1C224", VA = "0xD1C224")]
	public static void PrintEventTable()
	{
	}

	[Token(Token = "0x6000500")]
	[Address(RVA = "0xD1C548", Offset = "0xD1C548", VA = "0xD1C548")]
	public static void OnListenerAdding(string eventType, Delegate listenerBeingAdded)
	{
	}

	[Token(Token = "0x6000501")]
	[Address(RVA = "0xD1C7F4", Offset = "0xD1C7F4", VA = "0xD1C7F4")]
	public static void OnListenerRemoving(string eventType, Delegate listenerBeingRemoved)
	{
	}

	[Token(Token = "0x6000502")]
	[Address(RVA = "0xD1CA10", Offset = "0xD1CA10", VA = "0xD1CA10")]
	public static void OnListenerRemoved(string eventType)
	{
	}

	[Token(Token = "0x6000503")]
	[Address(RVA = "0xD1CAE0", Offset = "0xD1CAE0", VA = "0xD1CAE0")]
	public static void OnBroadcasting(string eventType)
	{
	}

	[Token(Token = "0x6000504")]
	[Address(RVA = "0xD1CAE4", Offset = "0xD1CAE4", VA = "0xD1CAE4")]
	public static BroadcastException CreateBroadcastSignatureException(string eventType)
	{
		return null;
	}

	[Token(Token = "0x6000505")]
	[Address(RVA = "0xD1CBDC", Offset = "0xD1CBDC", VA = "0xD1CBDC")]
	public static void AddListener(string eventType, OVRCallback handler)
	{
	}

	[Token(Token = "0x6000506")]
	public static void AddListener<T>(string eventType, OVRCallback<T> handler)
	{
	}

	[Token(Token = "0x6000507")]
	public static void AddListener<T, U>(string eventType, OVRCallback<T, U> handler)
	{
	}

	[Token(Token = "0x6000508")]
	public static void AddListener<T, U, V>(string eventType, OVRCallback<T, U, V> handler)
	{
	}

	[Token(Token = "0x6000509")]
	[Address(RVA = "0xD1CCE0", Offset = "0xD1CCE0", VA = "0xD1CCE0")]
	public static void RemoveListener(string eventType, OVRCallback handler)
	{
	}

	[Token(Token = "0x600050A")]
	public static void RemoveListener<T>(string eventType, OVRCallback<T> handler)
	{
	}

	[Token(Token = "0x600050B")]
	public static void RemoveListener<T, U>(string eventType, OVRCallback<T, U> handler)
	{
	}

	[Token(Token = "0x600050C")]
	public static void RemoveListener<T, U, V>(string eventType, OVRCallback<T, U, V> handler)
	{
	}

	[Token(Token = "0x600050D")]
	[Address(RVA = "0xD1CDEC", Offset = "0xD1CDEC", VA = "0xD1CDEC")]
	public static void Broadcast(string eventType)
	{
	}

	[Token(Token = "0x600050E")]
	public static void Broadcast<T>(string eventType, T arg1)
	{
	}

	[Token(Token = "0x600050F")]
	public static void Broadcast<T, U>(string eventType, T arg1, U arg2)
	{
	}

	[Token(Token = "0x6000510")]
	public static void Broadcast<T, U, V>(string eventType, T arg1, U arg2, V arg3)
	{
	}
}
[Token(Token = "0x2000103")]
public sealed class MessengerHelper : MonoBehaviour
{
	[Token(Token = "0x6000512")]
	[Address(RVA = "0xB8596C", Offset = "0xB8596C", VA = "0xB8596C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000513")]
	[Address(RVA = "0xB859E8", Offset = "0xB859E8", VA = "0xB859E8")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x6000514")]
	[Address(RVA = "0xB85A48", Offset = "0xB85A48", VA = "0xB85A48")]
	public MessengerHelper()
	{
	}
}
[Token(Token = "0x2000104")]
public class OVRVoiceMod : MonoBehaviour
{
	[Token(Token = "0x2000688")]
	public enum ovrVoiceModError
	{
		[Token(Token = "0x40021F6")]
		Unknown = -2250,
		[Token(Token = "0x40021F7")]
		CannotCreateContext = -2251,
		[Token(Token = "0x40021F8")]
		InvalidParam = -2252,
		[Token(Token = "0x40021F9")]
		BadSampleRate = -2253,
		[Token(Token = "0x40021FA")]
		MissingDLL = -2254,
		[Token(Token = "0x40021FB")]
		BadVersion = -2255,
		[Token(Token = "0x40021FC")]
		UndefinedFunction = -2256
	}

	[Token(Token = "0x2000689")]
	public enum ovrViceModFlag
	{
		[Token(Token = "0x40021FE")]
		None
	}

	[Token(Token = "0x4000505")]
	public const int ovrVoiceModSuccess = 0;

	[Token(Token = "0x4000506")]
	public const string strOVRLS = "OVRVoiceMod";

	[Token(Token = "0x4000507")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int sOVRVoiceModInit;

	[Token(Token = "0x4000508")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static OVRVoiceMod sInstance;

	[PreserveSig]
	[Token(Token = "0x6000515")]
	[Address(RVA = "0xD24058", Offset = "0xD24058", VA = "0xD24058")]
	private static extern int ovrVoiceModDll_Initialize(int SampleRate, int BufferSize);

	[PreserveSig]
	[Token(Token = "0x6000516")]
	[Address(RVA = "0xD240E8", Offset = "0xD240E8", VA = "0xD240E8")]
	private static extern void ovrVoiceModDll_Shutdown();

	[PreserveSig]
	[Token(Token = "0x6000517")]
	[Address(RVA = "0xD24158", Offset = "0xD24158", VA = "0xD24158")]
	private static extern IntPtr ovrVoicemodDll_GetVersion(ref int Major, ref int Minor, ref int Patch);

	[PreserveSig]
	[Token(Token = "0x6000518")]
	[Address(RVA = "0xD241F0", Offset = "0xD241F0", VA = "0xD241F0")]
	private static extern int ovrVoiceModDll_CreateContext(ref uint Context);

	[PreserveSig]
	[Token(Token = "0x6000519")]
	[Address(RVA = "0xD24270", Offset = "0xD24270", VA = "0xD24270")]
	private static extern int ovrVoiceModDll_DestroyContext(uint Context);

	[PreserveSig]
	[Token(Token = "0x600051A")]
	[Address(RVA = "0xD242F0", Offset = "0xD242F0", VA = "0xD242F0")]
	private static extern int ovrVoiceModDll_SendParameter(uint Context, int Parameter, int Value);

	[PreserveSig]
	[Token(Token = "0x600051B")]
	[Address(RVA = "0xD24388", Offset = "0xD24388", VA = "0xD24388")]
	private static extern int ovrVoiceModDll_ProcessFrame(uint Context, uint Flags, float[] AudioBuffer);

	[PreserveSig]
	[Token(Token = "0x600051C")]
	[Address(RVA = "0xD24428", Offset = "0xD24428", VA = "0xD24428")]
	private static extern int ovrVoiceModDll_ProcessFrameInterleaved(uint Context, uint Flags, float[] AudioBuffer);

	[PreserveSig]
	[Token(Token = "0x600051D")]
	[Address(RVA = "0xD244C8", Offset = "0xD244C8", VA = "0xD244C8")]
	private static extern int ovrVoiceModDll_GetAverageAbsVolume(uint Context, ref float Volume);

	[Token(Token = "0x600051E")]
	[Address(RVA = "0xD24558", Offset = "0xD24558", VA = "0xD24558")]
	private void Awake()
	{
	}

	[Token(Token = "0x600051F")]
	[Address(RVA = "0xD248DC", Offset = "0xD248DC", VA = "0xD248DC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000520")]
	[Address(RVA = "0xD248E0", Offset = "0xD248E0", VA = "0xD248E0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000521")]
	[Address(RVA = "0xD248E4", Offset = "0xD248E4", VA = "0xD248E4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000522")]
	[Address(RVA = "0xD249F0", Offset = "0xD249F0", VA = "0xD249F0")]
	public static int IsInitialized()
	{
		return default(int);
	}

	[Token(Token = "0x6000523")]
	[Address(RVA = "0xD24A58", Offset = "0xD24A58", VA = "0xD24A58")]
	public static int CreateContext(ref uint context)
	{
		return default(int);
	}

	[Token(Token = "0x6000524")]
	[Address(RVA = "0xD24B38", Offset = "0xD24B38", VA = "0xD24B38")]
	public static int DestroyContext(uint context)
	{
		return default(int);
	}

	[Token(Token = "0x6000525")]
	[Address(RVA = "0xD24C18", Offset = "0xD24C18", VA = "0xD24C18")]
	public static int SendParameter(uint context, int parameter, int value)
	{
		return default(int);
	}

	[Token(Token = "0x6000526")]
	[Address(RVA = "0xD24D14", Offset = "0xD24D14", VA = "0xD24D14")]
	public static int ProcessFrame(uint context, float[] audioBuffer)
	{
		return default(int);
	}

	[Token(Token = "0x6000527")]
	[Address(RVA = "0xD24E00", Offset = "0xD24E00", VA = "0xD24E00")]
	public static int ProcessFrameInterleaved(uint context, float[] audioBuffer)
	{
		return default(int);
	}

	[Token(Token = "0x6000528")]
	[Address(RVA = "0xD24EEC", Offset = "0xD24EEC", VA = "0xD24EEC")]
	public static float GetAverageAbsVolume(uint context)
	{
		return default(float);
	}

	[Token(Token = "0x6000529")]
	[Address(RVA = "0xD24FD0", Offset = "0xD24FD0", VA = "0xD24FD0")]
	public OVRVoiceMod()
	{
	}
}
[Token(Token = "0x2000105")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8B5EF0", Offset = "0x8B5EF0")]
public class OVRVoiceModContext : MonoBehaviour
{
	[Token(Token = "0x200068A")]
	public enum ovrVoiceModParams
	{
		[Token(Token = "0x4002200")]
		MixInputAudio,
		[Token(Token = "0x4002201")]
		PitchInputAudio,
		[Token(Token = "0x4002202")]
		SetBands,
		[Token(Token = "0x4002203")]
		FormantCorrection,
		[Token(Token = "0x4002204")]
		Carrier1_TrackPitch,
		[Token(Token = "0x4002205")]
		Carrier1_Type,
		[Token(Token = "0x4002206")]
		Carrier1_Gain,
		[Token(Token = "0x4002207")]
		Carrier1_Frequency,
		[Token(Token = "0x4002208")]
		Carrier1_Note,
		[Token(Token = "0x4002209")]
		Carrier1_PulseWidth,
		[Token(Token = "0x400220A")]
		Carrier1_CycledNoiseSize,
		[Token(Token = "0x400220B")]
		Carrier2_TrackPitch,
		[Token(Token = "0x400220C")]
		Carrier2_Type,
		[Token(Token = "0x400220D")]
		Carrier2_Gain,
		[Token(Token = "0x400220E")]
		Carrier2_Frequency,
		[Token(Token = "0x400220F")]
		Carrier2_Note,
		[Token(Token = "0x4002210")]
		Carrier2_PulseWidth,
		[Token(Token = "0x4002211")]
		Carrier2_CycledNoiseSize,
		[Token(Token = "0x4002212")]
		Count
	}

	[Token(Token = "0x200068B")]
	public struct VMPreset
	{
		[Token(Token = "0x4002213")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string info;

		[Token(Token = "0x4002214")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Color color;

		[Token(Token = "0x4002215")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float mix;

		[Token(Token = "0x4002216")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float pitch;

		[Token(Token = "0x4002217")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int bands;

		[Token(Token = "0x4002218")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int formant;

		[Token(Token = "0x4002219")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int c1PTrack;

		[Token(Token = "0x400221A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int c1Type;

		[Token(Token = "0x400221B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float c1Gain;

		[Token(Token = "0x400221C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float c1Freq;

		[Token(Token = "0x400221D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int c1Note;

		[Token(Token = "0x400221E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float c1PW;

		[Token(Token = "0x400221F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public int c1CNS;

		[Token(Token = "0x4002220")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public int c2PTrack;

		[Token(Token = "0x4002221")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public int c2Type;

		[Token(Token = "0x4002222")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float c2Gain;

		[Token(Token = "0x4002223")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float c2Freq;

		[Token(Token = "0x4002224")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public int c2Note;

		[Token(Token = "0x4002225")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float c2PW;

		[Token(Token = "0x4002226")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public int c2CNS;
	}

	[Token(Token = "0x4000509")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioSource audioSource;

	[Token(Token = "0x400050A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float gain;

	[Token(Token = "0x400050B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool audioMute;

	[Token(Token = "0x400050C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public KeyCode loopback;

	[Token(Token = "0x400050D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private VMPreset[] VMPresets;

	[Token(Token = "0x400050E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float VM_MixAudio;

	[Token(Token = "0x400050F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float VM_Pitch;

	[Token(Token = "0x4000510")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int VM_Bands;

	[Token(Token = "0x4000511")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public int VM_FormantCorrect;

	[Token(Token = "0x4000512")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int VM_C1_TrackPitch;

	[Token(Token = "0x4000513")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public int VM_C1_Type;

	[Token(Token = "0x4000514")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float VM_C1_Gain;

	[Token(Token = "0x4000515")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float VM_C1_Freq;

	[Token(Token = "0x4000516")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public int VM_C1_Note;

	[Token(Token = "0x4000517")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float VM_C1_PulseWidth;

	[Token(Token = "0x4000518")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public int VM_C1_CycledNoiseSize;

	[Token(Token = "0x4000519")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public int VM_C2_TrackPitch;

	[Token(Token = "0x400051A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public int VM_C2_Type;

	[Token(Token = "0x400051B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float VM_C2_Gain;

	[Token(Token = "0x400051C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float VM_C2_Freq;

	[Token(Token = "0x400051D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public int VM_C2_Note;

	[Token(Token = "0x400051E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public float VM_C2_PulseWidth;

	[Token(Token = "0x400051F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public int VM_C2_CycledNoiseSize;

	[Token(Token = "0x4000520")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private uint context;

	[Token(Token = "0x4000521")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private float prevVol;

	[Token(Token = "0x600052B")]
	[Address(RVA = "0xD25038", Offset = "0xD25038", VA = "0xD25038")]
	private void Awake()
	{
	}

	[Token(Token = "0x600052C")]
	[Address(RVA = "0xD250F8", Offset = "0xD250F8", VA = "0xD250F8")]
	private void Start()
	{
	}

	[Token(Token = "0x600052D")]
	[Address(RVA = "0xD25684", Offset = "0xD25684", VA = "0xD25684")]
	private void Update()
	{
	}

	[Token(Token = "0x600052E")]
	[Address(RVA = "0xD25908", Offset = "0xD25908", VA = "0xD25908")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600052F")]
	[Address(RVA = "0xD25A24", Offset = "0xD25A24", VA = "0xD25A24")]
	private void OnAudioFilterRead(float[] data, int channels)
	{
	}

	[Token(Token = "0x6000530")]
	[Address(RVA = "0xD25C44", Offset = "0xD25C44", VA = "0xD25C44")]
	public int SendParameter(ovrVoiceModParams parameter, int value)
	{
		return default(int);
	}

	[Token(Token = "0x6000531")]
	[Address(RVA = "0xD25D44", Offset = "0xD25D44", VA = "0xD25D44")]
	public bool SetPreset(int preset)
	{
		return default(bool);
	}

	[Token(Token = "0x6000532")]
	[Address(RVA = "0xD26020", Offset = "0xD26020", VA = "0xD26020")]
	public int GetNumPresets()
	{
		return default(int);
	}

	[Token(Token = "0x6000533")]
	[Address(RVA = "0xD2603C", Offset = "0xD2603C", VA = "0xD2603C")]
	public Color GetPresetColor(int preset)
	{
		return default(Color);
	}

	[Token(Token = "0x6000534")]
	[Address(RVA = "0xD26094", Offset = "0xD26094", VA = "0xD26094")]
	public float GetAverageAbsVolume()
	{
		return default(float);
	}

	[Token(Token = "0x6000535")]
	[Address(RVA = "0xD26138", Offset = "0xD26138", VA = "0xD26138")]
	private void LocalTouchEventCallback(OVRTouchpad.TouchEvent touchEvent)
	{
	}

	[Token(Token = "0x6000536")]
	[Address(RVA = "0xD25860", Offset = "0xD25860", VA = "0xD25860")]
	private void UpdateVoiceModUpdate()
	{
	}

	[Token(Token = "0x6000537")]
	[Address(RVA = "0xD252D0", Offset = "0xD252D0", VA = "0xD252D0")]
	private void SendVoiceModUpdate()
	{
	}

	[Token(Token = "0x6000538")]
	[Address(RVA = "0xD26224", Offset = "0xD26224", VA = "0xD26224")]
	public OVRVoiceModContext()
	{
	}
}
[Token(Token = "0x2000106")]
public class GE_Elementals_Demo : MonoBehaviour
{
	[Token(Token = "0x4000522")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Color m_ColorFire;

	[Token(Token = "0x4000523")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Color m_ColorWater;

	[Token(Token = "0x4000524")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Color m_ColorWind;

	[Token(Token = "0x4000525")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Color m_ColorEarth;

	[Token(Token = "0x4000526")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Color m_ColorThunder;

	[Token(Token = "0x4000527")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Color m_ColorIce;

	[Token(Token = "0x4000528")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Color m_ColorLight;

	[Token(Token = "0x4000529")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Color m_ColorDarkness;

	[Token(Token = "0x400052A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public GameObject[] m_PrefabListFire;

	[Token(Token = "0x400052B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public GameObject[] m_PrefabListWater;

	[Token(Token = "0x400052C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public GameObject[] m_PrefabListWind;

	[Token(Token = "0x400052D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public GameObject[] m_PrefabListEarth;

	[Token(Token = "0x400052E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public GameObject[] m_PrefabListThunder;

	[Token(Token = "0x400052F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public GameObject[] m_PrefabListIce;

	[Token(Token = "0x4000530")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public GameObject[] m_PrefabListLight;

	[Token(Token = "0x4000531")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public GameObject[] m_PrefabListDarkness;

	[Token(Token = "0x4000532")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private int m_CurrentCategoryIndex;

	[Token(Token = "0x4000533")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	private int m_CurrentParticleIndex;

	[Token(Token = "0x4000534")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private string m_CategoryName;

	[Token(Token = "0x4000535")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private string m_ParticleName;

	[Token(Token = "0x4000536")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private GameObject[] m_CurrentCategory;

	[Token(Token = "0x4000537")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private GameObject m_CurrentParticle;

	[Token(Token = "0x4000538")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private Text m_Category;

	[Token(Token = "0x4000539")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private Text m_Particle;

	[Token(Token = "0x400053A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private UnityEngine.Vector3 m_PreviousMousePosition;

	[Token(Token = "0x400053B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
	private bool m_ShowParticleWhenTouchEnded;

	[Token(Token = "0x6000539")]
	[Address(RVA = "0xC4E530", Offset = "0xC4E530", VA = "0xC4E530")]
	private void Start()
	{
	}

	[Token(Token = "0x600053A")]
	[Address(RVA = "0xC4EC94", Offset = "0xC4EC94", VA = "0xC4EC94")]
	private void Update()
	{
	}

	[Token(Token = "0x600053B")]
	[Address(RVA = "0xC4EF04", Offset = "0xC4EF04", VA = "0xC4EF04")]
	public void PreviousCategory()
	{
	}

	[Token(Token = "0x600053C")]
	[Address(RVA = "0xC4EF14", Offset = "0xC4EF14", VA = "0xC4EF14")]
	public void NextCategory()
	{
	}

	[Token(Token = "0x600053D")]
	[Address(RVA = "0xC4EF24", Offset = "0xC4EF24", VA = "0xC4EF24")]
	public void PreviousParticle()
	{
	}

	[Token(Token = "0x600053E")]
	[Address(RVA = "0xC4EF34", Offset = "0xC4EF34", VA = "0xC4EF34")]
	public void NextParticle()
	{
	}

	[Token(Token = "0x600053F")]
	[Address(RVA = "0xC4E5D0", Offset = "0xC4E5D0", VA = "0xC4E5D0")]
	public void ShowParticle()
	{
	}

	[Token(Token = "0x6000540")]
	[Address(RVA = "0xC4EF44", Offset = "0xC4EF44", VA = "0xC4EF44")]
	public GE_Elementals_Demo()
	{
	}
}
[Token(Token = "0x2000107")]
public class CameraHolder : MonoBehaviour
{
	[Token(Token = "0x400053C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform Holder;

	[Token(Token = "0x400053D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float currDistance;

	[Token(Token = "0x400053E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float xRotate;

	[Token(Token = "0x400053F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float yRotate;

	[Token(Token = "0x4000540")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float yMinLimit;

	[Token(Token = "0x4000541")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float yMaxLimit;

	[Token(Token = "0x4000542")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float prevDistance;

	[Token(Token = "0x4000543")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float x;

	[Token(Token = "0x4000544")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float y;

	[Token(Token = "0x4000545")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float windowDpi;

	[Token(Token = "0x4000546")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private GUIStyle screenGUI;

	[Token(Token = "0x4000547")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject[] Prefabs;

	[Token(Token = "0x4000548")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private int Prefab;

	[Token(Token = "0x4000549")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private GameObject Instance;

	[Token(Token = "0x6000541")]
	[Address(RVA = "0xB045C4", Offset = "0xB045C4", VA = "0xB045C4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000542")]
	[Address(RVA = "0xB04804", Offset = "0xB04804", VA = "0xB04804")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000543")]
	[Address(RVA = "0xB046C4", Offset = "0xB046C4", VA = "0xB046C4")]
	private void Counter(int count)
	{
	}

	[Token(Token = "0x6000544")]
	[Address(RVA = "0xB0494C", Offset = "0xB0494C", VA = "0xB0494C")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000545")]
	[Address(RVA = "0xB04E24", Offset = "0xB04E24", VA = "0xB04E24")]
	private static float ClampAngle(float angle, float min, float max)
	{
		return default(float);
	}

	[Token(Token = "0x6000546")]
	[Address(RVA = "0xB04ED4", Offset = "0xB04ED4", VA = "0xB04ED4")]
	public CameraHolder()
	{
	}
}
[Token(Token = "0x2000108")]
public class MagicLoadSceneOnClick : MonoBehaviour
{
	[Token(Token = "0x6000547")]
	[Address(RVA = "0xB81AA8", Offset = "0xB81AA8", VA = "0xB81AA8")]
	public void LoadSceneProjectiles()
	{
	}

	[Token(Token = "0x6000548")]
	[Address(RVA = "0xB81B14", Offset = "0xB81B14", VA = "0xB81B14")]
	public void LoadSceneSprays()
	{
	}

	[Token(Token = "0x6000549")]
	[Address(RVA = "0xB81B80", Offset = "0xB81B80", VA = "0xB81B80")]
	public void LoadSceneAura()
	{
	}

	[Token(Token = "0x600054A")]
	[Address(RVA = "0xB81BEC", Offset = "0xB81BEC", VA = "0xB81BEC")]
	public void LoadSceneModular()
	{
	}

	[Token(Token = "0x600054B")]
	[Address(RVA = "0xB81C58", Offset = "0xB81C58", VA = "0xB81C58")]
	public void LoadSceneShields2()
	{
	}

	[Token(Token = "0x600054C")]
	[Address(RVA = "0xB81CC4", Offset = "0xB81CC4", VA = "0xB81CC4")]
	public void LoadSceneShields()
	{
	}

	[Token(Token = "0x600054D")]
	[Address(RVA = "0xB81D30", Offset = "0xB81D30", VA = "0xB81D30")]
	public void LoadSceneSphereBlast()
	{
	}

	[Token(Token = "0x600054E")]
	[Address(RVA = "0xB81D9C", Offset = "0xB81D9C", VA = "0xB81D9C")]
	public void LoadSceneEnchant()
	{
	}

	[Token(Token = "0x600054F")]
	[Address(RVA = "0xB81E08", Offset = "0xB81E08", VA = "0xB81E08")]
	public void LoadSceneSlash()
	{
	}

	[Token(Token = "0x6000550")]
	[Address(RVA = "0xB81E74", Offset = "0xB81E74", VA = "0xB81E74")]
	public void LoadSceneCharge()
	{
	}

	[Token(Token = "0x6000551")]
	[Address(RVA = "0xB81EE0", Offset = "0xB81EE0", VA = "0xB81EE0")]
	public void LoadSceneCleave()
	{
	}

	[Token(Token = "0x6000552")]
	[Address(RVA = "0xB81F4C", Offset = "0xB81F4C", VA = "0xB81F4C")]
	public void LoadSceneAura2()
	{
	}

	[Token(Token = "0x6000553")]
	[Address(RVA = "0xB81FB8", Offset = "0xB81FB8", VA = "0xB81FB8")]
	public void LoadSceneWalls()
	{
	}

	[Token(Token = "0x6000554")]
	[Address(RVA = "0xB82024", Offset = "0xB82024", VA = "0xB82024")]
	public void LoadSceneBeams()
	{
	}

	[Token(Token = "0x6000555")]
	[Address(RVA = "0xB82090", Offset = "0xB82090", VA = "0xB82090")]
	public void LoadSceneMeshGlow()
	{
	}

	[Token(Token = "0x6000556")]
	[Address(RVA = "0xB820FC", Offset = "0xB820FC", VA = "0xB820FC")]
	public void LoadScenePillarBlast()
	{
	}

	[Token(Token = "0x6000557")]
	[Address(RVA = "0xB82168", Offset = "0xB82168", VA = "0xB82168")]
	public MagicLoadSceneOnClick()
	{
	}
}
[Token(Token = "0x2000109")]
public class MagicProjectileScript : MonoBehaviour
{
	[Token(Token = "0x400054A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject impactParticle;

	[Token(Token = "0x400054B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject projectileParticle;

	[Token(Token = "0x400054C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject muzzleParticle;

	[Token(Token = "0x400054D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject[] trailParticles;

	[Token(Token = "0x400054E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	public UnityEngine.Vector3 impactNormal;

	[Token(Token = "0x400054F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private bool hasCollided;

	[Token(Token = "0x6000558")]
	[Address(RVA = "0xB82170", Offset = "0xB82170", VA = "0xB82170")]
	private void Start()
	{
	}

	[Token(Token = "0x6000559")]
	[Address(RVA = "0xB8237C", Offset = "0xB8237C", VA = "0xB8237C")]
	private void OnCollisionEnter(Collision hit)
	{
	}

	[Token(Token = "0x600055A")]
	[Address(RVA = "0xB827BC", Offset = "0xB827BC", VA = "0xB827BC")]
	public MagicProjectileScript()
	{
	}
}
[Token(Token = "0x200010A")]
public class MagicBeamScript : MonoBehaviour
{
	[Token(Token = "0x4000550")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BB40C", Offset = "0x8BB40C")]
	public GameObject[] beamLineRendererPrefab;

	[Token(Token = "0x4000551")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject[] beamStartPrefab;

	[Token(Token = "0x4000552")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject[] beamEndPrefab;

	[Token(Token = "0x4000553")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int currentBeam;

	[Token(Token = "0x4000554")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private GameObject beamStart;

	[Token(Token = "0x4000555")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GameObject beamEnd;

	[Token(Token = "0x4000556")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private GameObject beam;

	[Token(Token = "0x4000557")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private LineRenderer line;

	[Token(Token = "0x4000558")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BB444", Offset = "0x8BB444")]
	public float beamEndOffset;

	[Token(Token = "0x4000559")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float textureScrollSpeed;

	[Token(Token = "0x400055A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float textureLengthScale;

	[Token(Token = "0x400055B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BB47C", Offset = "0x8BB47C")]
	public Slider endOffSetSlider;

	[Token(Token = "0x400055C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Slider scrollSpeedSlider;

	[Token(Token = "0x400055D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BB4B4", Offset = "0x8BB4B4")]
	public Text textBeamName;

	[Token(Token = "0x600055B")]
	[Address(RVA = "0xB80A80", Offset = "0xB80A80", VA = "0xB80A80")]
	private void Start()
	{
	}

	[Token(Token = "0x600055C")]
	[Address(RVA = "0xB80BF4", Offset = "0xB80BF4", VA = "0xB80BF4")]
	private void Update()
	{
	}

	[Token(Token = "0x600055D")]
	[Address(RVA = "0xB814DC", Offset = "0xB814DC", VA = "0xB814DC")]
	public void nextBeam()
	{
	}

	[Token(Token = "0x600055E")]
	[Address(RVA = "0xB815D4", Offset = "0xB815D4", VA = "0xB815D4")]
	public void previousBeam()
	{
	}

	[Token(Token = "0x600055F")]
	[Address(RVA = "0xB816CC", Offset = "0xB816CC", VA = "0xB816CC")]
	public void UpdateEndOffset()
	{
	}

	[Token(Token = "0x6000560")]
	[Address(RVA = "0xB81708", Offset = "0xB81708", VA = "0xB81708")]
	public void UpdateScrollSpeed()
	{
	}

	[Token(Token = "0x6000561")]
	[Address(RVA = "0xB81084", Offset = "0xB81084", VA = "0xB81084")]
	private void ShootBeamInDir(UnityEngine.Vector3 start, UnityEngine.Vector3 dir)
	{
	}

	[Token(Token = "0x6000562")]
	[Address(RVA = "0xB81744", Offset = "0xB81744", VA = "0xB81744")]
	public MagicBeamScript()
	{
	}
}
[Token(Token = "0x200010B")]
public class MagicLightFlicker : MonoBehaviour
{
	[Token(Token = "0x400055E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string waveFunction;

	[Token(Token = "0x400055F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float startValue;

	[Token(Token = "0x4000560")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float amplitude;

	[Token(Token = "0x4000561")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float phase;

	[Token(Token = "0x4000562")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float frequency;

	[Token(Token = "0x4000563")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Color originalColor;

	[Token(Token = "0x6000563")]
	[Address(RVA = "0xB81760", Offset = "0xB81760", VA = "0xB81760")]
	private void Start()
	{
	}

	[Token(Token = "0x6000564")]
	[Address(RVA = "0xB817CC", Offset = "0xB817CC", VA = "0xB817CC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000565")]
	[Address(RVA = "0xB81870", Offset = "0xB81870", VA = "0xB81870")]
	private float EvalWave()
	{
		return default(float);
	}

	[Token(Token = "0x6000566")]
	[Address(RVA = "0xB81A40", Offset = "0xB81A40", VA = "0xB81A40")]
	public MagicLightFlicker()
	{
	}
}
[Token(Token = "0x200010C")]
public class RainbowCameraOrbit : MonoBehaviour
{
	[Token(Token = "0x4000564")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform target;

	[Token(Token = "0x4000565")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float distance;

	[Token(Token = "0x4000566")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float xSpeed;

	[Token(Token = "0x4000567")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float ySpeed;

	[Token(Token = "0x4000568")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float yMinLimit;

	[Token(Token = "0x4000569")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float yMaxLimit;

	[Token(Token = "0x400056A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float distanceMin;

	[Token(Token = "0x400056B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float distanceMax;

	[Token(Token = "0x400056C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float smoothTime;

	[Token(Token = "0x400056D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float rotationYAxis;

	[Token(Token = "0x400056E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float rotationXAxis;

	[Token(Token = "0x400056F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float velocityX;

	[Token(Token = "0x4000570")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float velocityY;

	[Token(Token = "0x6000567")]
	[Address(RVA = "0xC1B114", Offset = "0xC1B114", VA = "0xC1B114")]
	private void Start()
	{
	}

	[Token(Token = "0x6000568")]
	[Address(RVA = "0xC1B1F0", Offset = "0xC1B1F0", VA = "0xC1B1F0")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000569")]
	[Address(RVA = "0xC1B5F0", Offset = "0xC1B5F0", VA = "0xC1B5F0")]
	public static float ClampAngle(float angle, float min, float max)
	{
		return default(float);
	}

	[Token(Token = "0x600056A")]
	[Address(RVA = "0xC1B6A0", Offset = "0xC1B6A0", VA = "0xC1B6A0")]
	public RainbowCameraOrbit()
	{
	}
}
[Token(Token = "0x200010D")]
public class AchievementSample : MonoBehaviour
{
	[Token(Token = "0x4000571")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text dataOutput;

	[Token(Token = "0x4000572")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public InputField getDefinitionsByNameInputField;

	[Token(Token = "0x4000573")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public InputField getProgressByNameInputField;

	[Token(Token = "0x4000574")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public InputField unLockInputField;

	[Token(Token = "0x4000575")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public InputField addCountInputField;

	[Token(Token = "0x4000576")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public InputField addFieldsInputField;

	[Token(Token = "0x600056B")]
	[Address(RVA = "0xBB4708", Offset = "0xBB4708", VA = "0xBB4708")]
	private void Start()
	{
	}

	[Token(Token = "0x600056C")]
	[Address(RVA = "0xBB4768", Offset = "0xBB4768", VA = "0xBB4768")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600056D")]
	[Address(RVA = "0xBB47C8", Offset = "0xBB47C8", VA = "0xBB47C8")]
	private void OnApplicationPause(bool pause)
	{
	}

	[Token(Token = "0x600056E")]
	[Address(RVA = "0xBB49A0", Offset = "0xBB49A0", VA = "0xBB49A0")]
	private void Update()
	{
	}

	[Token(Token = "0x600056F")]
	[Address(RVA = "0xBB49AC", Offset = "0xBB49AC", VA = "0xBB49AC")]
	public void AsyncInitialize()
	{
	}

	[Token(Token = "0x6000570")]
	[Address(RVA = "0xBB4A2C", Offset = "0xBB4A2C", VA = "0xBB4A2C")]
	public void GetDefinitionsByName()
	{
	}

	[Token(Token = "0x6000571")]
	[Address(RVA = "0xBB4C0C", Offset = "0xBB4C0C", VA = "0xBB4C0C")]
	public void GetProgressByName()
	{
	}

	[Token(Token = "0x6000572")]
	[Address(RVA = "0xBB4DEC", Offset = "0xBB4DEC", VA = "0xBB4DEC")]
	public void GetAllDefinitions()
	{
	}

	[Token(Token = "0x6000573")]
	[Address(RVA = "0xBB4F14", Offset = "0xBB4F14", VA = "0xBB4F14")]
	public void GetAllProgress()
	{
	}

	[Token(Token = "0x6000574")]
	[Address(RVA = "0xBB503C", Offset = "0xBB503C", VA = "0xBB503C")]
	public void UnLock()
	{
	}

	[Token(Token = "0x6000575")]
	[Address(RVA = "0xBB51D4", Offset = "0xBB51D4", VA = "0xBB51D4")]
	public void AddCount()
	{
	}

	[Token(Token = "0x6000576")]
	[Address(RVA = "0xBB54D0", Offset = "0xBB54D0", VA = "0xBB54D0")]
	public void AddFields()
	{
	}

	[Token(Token = "0x6000577")]
	[Address(RVA = "0xBB48F8", Offset = "0xBB48F8", VA = "0xBB48F8")]
	private void achievementInit()
	{
	}

	[Token(Token = "0x6000578")]
	[Address(RVA = "0xBB4E6C", Offset = "0xBB4E6C", VA = "0xBB4E6C")]
	private void getAchievementAllDefinition()
	{
	}

	[Token(Token = "0x6000579")]
	[Address(RVA = "0xBB4F94", Offset = "0xBB4F94", VA = "0xBB4F94")]
	private void getAchievementAllProgress()
	{
	}

	[Token(Token = "0x600057A")]
	[Address(RVA = "0xBB5610", Offset = "0xBB5610", VA = "0xBB5610")]
	private void addFieldsAchievement(string achievementName, string fields)
	{
	}

	[Token(Token = "0x600057B")]
	[Address(RVA = "0xBB53EC", Offset = "0xBB53EC", VA = "0xBB53EC")]
	private void addCountAchievement(string achievementName, string count)
	{
	}

	[Token(Token = "0x600057C")]
	[Address(RVA = "0xBB5124", Offset = "0xBB5124", VA = "0xBB5124")]
	private void unlockAchievement(string achievementName)
	{
	}

	[Token(Token = "0x600057D")]
	[Address(RVA = "0xBB4D3C", Offset = "0xBB4D3C", VA = "0xBB4D3C")]
	private void getAchievementProgress(string[] achievementNames)
	{
	}

	[Token(Token = "0x600057E")]
	[Address(RVA = "0xBB4B5C", Offset = "0xBB4B5C", VA = "0xBB4B5C")]
	private void getAchievementDefinition(string[] achievementNames)
	{
	}

	[Token(Token = "0x600057F")]
	[Address(RVA = "0xBB4840", Offset = "0xBB4840", VA = "0xBB4840")]
	private void printOutputLine(string newLine)
	{
	}

	[Token(Token = "0x6000580")]
	[Address(RVA = "0xBB56C8", Offset = "0xBB56C8", VA = "0xBB56C8")]
	private void achievementAllDefinitionCallback(Pvr_Message<Pvr_AchievementDefinitionList> msg)
	{
	}

	[Token(Token = "0x6000581")]
	[Address(RVA = "0xBB5EBC", Offset = "0xBB5EBC", VA = "0xBB5EBC")]
	private void achievementAllProgressCallback(Pvr_Message<Pvr_AchievementProgressList> msg)
	{
	}

	[Token(Token = "0x6000582")]
	[Address(RVA = "0xBB64C4", Offset = "0xBB64C4", VA = "0xBB64C4")]
	private void achievementFieldsCallback(Pvr_Message msg)
	{
	}

	[Token(Token = "0x6000583")]
	[Address(RVA = "0xBB671C", Offset = "0xBB671C", VA = "0xBB671C")]
	private void achievementCountCallback(Pvr_Message msg)
	{
	}

	[Token(Token = "0x6000584")]
	[Address(RVA = "0xBB6974", Offset = "0xBB6974", VA = "0xBB6974")]
	private void achievementUnlockCallback(Pvr_Message msg)
	{
	}

	[Token(Token = "0x6000585")]
	[Address(RVA = "0xBB6BCC", Offset = "0xBB6BCC", VA = "0xBB6BCC")]
	private void achievementProgressCallback(Pvr_Message<Pvr_AchievementProgressList> msg)
	{
	}

	[Token(Token = "0x6000586")]
	[Address(RVA = "0xBB70C0", Offset = "0xBB70C0", VA = "0xBB70C0")]
	private void achievementDefinitionCallback(Pvr_Message<Pvr_AchievementDefinitionList> msg)
	{
	}

	[Token(Token = "0x6000587")]
	[Address(RVA = "0xBB762C", Offset = "0xBB762C", VA = "0xBB762C")]
	private void initAchievementCallback(Pvr_Message msg)
	{
	}

	[Token(Token = "0x6000588")]
	[Address(RVA = "0xBB7884", Offset = "0xBB7884", VA = "0xBB7884")]
	private void LoginCallback(string LoginInfo)
	{
	}

	[Token(Token = "0x6000589")]
	[Address(RVA = "0xBB793C", Offset = "0xBB793C", VA = "0xBB793C")]
	public AchievementSample()
	{
	}
}
[Token(Token = "0x200010E")]
public class Pvr_Controller : MonoBehaviour
{
	[Token(Token = "0x200068C")]
	public enum UserHandNess
	{
		[Token(Token = "0x4002228")]
		Right,
		[Token(Token = "0x4002229")]
		Left
	}

	[Token(Token = "0x200068D")]
	public enum GazeType
	{
		[Token(Token = "0x400222B")]
		Never,
		[Token(Token = "0x400222C")]
		DuringMotion,
		[Token(Token = "0x400222D")]
		Always
	}

	[Token(Token = "0x200068E")]
	public enum ControllerAxis
	{
		[Token(Token = "0x400222F")]
		Controller,
		[Token(Token = "0x4002230")]
		Wrist,
		[Token(Token = "0x4002231")]
		Elbow,
		[Token(Token = "0x4002232")]
		Shoulder
	}

	[Token(Token = "0x4000577")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject controller0;

	[Token(Token = "0x4000578")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject controller1;

	[Token(Token = "0x4000579")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static UserHandNess handness;

	[Token(Token = "0x400057A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ControllerAxis Axis;

	[Token(Token = "0x400057B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public GazeType Gazetype;

	[Token(Token = "0x400057C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8BB4EC", Offset = "0x8BB4EC")]
	public float ElbowHeight;

	[Token(Token = "0x400057D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8BB508", Offset = "0x8BB508")]
	public float ElbowDepth;

	[Token(Token = "0x400057E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8BB524", Offset = "0x8BB524")]
	public float PointerTiltAngle;

	[Token(Token = "0x400057F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float mouseX;

	[Token(Token = "0x4000580")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float mouseY;

	[Token(Token = "0x4000581")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float mouseZ;

	[Token(Token = "0x4000582")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private UnityEngine.Vector3[] inputDirection;

	[Token(Token = "0x4000583")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8BB53C", Offset = "0x8BB53C")]
	private static UnityEngine.Vector3 <pointerPosition>k__BackingField;

	[Token(Token = "0x4000584")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8BB54C", Offset = "0x8BB54C")]
	private static Quaternion <pointerRotation>k__BackingField;

	[Token(Token = "0x4000585")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8BB55C", Offset = "0x8BB55C")]
	private static UnityEngine.Vector3 <elbowPosition>k__BackingField;

	[Token(Token = "0x4000586")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8BB56C", Offset = "0x8BB56C")]
	private static Quaternion <elbowRotation>k__BackingField;

	[Token(Token = "0x4000587")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8BB57C", Offset = "0x8BB57C")]
	private static UnityEngine.Vector3 <wristPosition>k__BackingField;

	[Token(Token = "0x4000588")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8BB58C", Offset = "0x8BB58C")]
	private static Quaternion <wristRotation>k__BackingField;

	[Token(Token = "0x4000589")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8BB59C", Offset = "0x8BB59C")]
	private static UnityEngine.Vector3 <shoulderPosition>k__BackingField;

	[Token(Token = "0x400058A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8BB5AC", Offset = "0x8BB5AC")]
	private static Quaternion <shoulderRotation>k__BackingField;

	[Token(Token = "0x17000060")]
	public static UnityEngine.Vector3 pointerPosition
	{
		[Token(Token = "0x600059D")]
		[Address(RVA = "0xB7A1A4", Offset = "0xB7A1A4", VA = "0xB7A1A4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C2ECC", Offset = "0x8C2ECC")]
		get
		{
			return default(UnityEngine.Vector3);
		}
		[Token(Token = "0x600059E")]
		[Address(RVA = "0xB7A1F8", Offset = "0xB7A1F8", VA = "0xB7A1F8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C2EDC", Offset = "0x8C2EDC")]
		set
		{
		}
	}

	[Token(Token = "0x17000061")]
	public static Quaternion pointerRotation
	{
		[Token(Token = "0x600059F")]
		[Address(RVA = "0xB7A268", Offset = "0xB7A268", VA = "0xB7A268")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C2EEC", Offset = "0x8C2EEC")]
		get
		{
			return default(Quaternion);
		}
		[Token(Token = "0x60005A0")]
		[Address(RVA = "0xB7A2BC", Offset = "0xB7A2BC", VA = "0xB7A2BC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C2EFC", Offset = "0x8C2EFC")]
		set
		{
		}
	}

	[Token(Token = "0x17000062")]
	public static UnityEngine.Vector3 elbowPosition
	{
		[Token(Token = "0x60005A1")]
		[Address(RVA = "0xB7A330", Offset = "0xB7A330", VA = "0xB7A330")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C2F0C", Offset = "0x8C2F0C")]
		get
		{
			return default(UnityEngine.Vector3);
		}
		[Token(Token = "0x60005A2")]
		[Address(RVA = "0xB7A384", Offset = "0xB7A384", VA = "0xB7A384")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C2F1C", Offset = "0x8C2F1C")]
		set
		{
		}
	}

	[Token(Token = "0x17000063")]
	public static Quaternion elbowRotation
	{
		[Token(Token = "0x60005A3")]
		[Address(RVA = "0xB7A3F4", Offset = "0xB7A3F4", VA = "0xB7A3F4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C2F2C", Offset = "0x8C2F2C")]
		get
		{
			return default(Quaternion);
		}
		[Token(Token = "0x60005A4")]
		[Address(RVA = "0xB7A448", Offset = "0xB7A448", VA = "0xB7A448")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C2F3C", Offset = "0x8C2F3C")]
		set
		{
		}
	}

	[Token(Token = "0x17000064")]
	public static UnityEngine.Vector3 wristPosition
	{
		[Token(Token = "0x60005A5")]
		[Address(RVA = "0xB7A4BC", Offset = "0xB7A4BC", VA = "0xB7A4BC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C2F4C", Offset = "0x8C2F4C")]
		get
		{
			return default(UnityEngine.Vector3);
		}
		[Token(Token = "0x60005A6")]
		[Address(RVA = "0xB7A510", Offset = "0xB7A510", VA = "0xB7A510")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C2F5C", Offset = "0x8C2F5C")]
		set
		{
		}
	}

	[Token(Token = "0x17000065")]
	public static Quaternion wristRotation
	{
		[Token(Token = "0x60005A7")]
		[Address(RVA = "0xB7A580", Offset = "0xB7A580", VA = "0xB7A580")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C2F6C", Offset = "0x8C2F6C")]
		get
		{
			return default(Quaternion);
		}
		[Token(Token = "0x60005A8")]
		[Address(RVA = "0xB7A5D4", Offset = "0xB7A5D4", VA = "0xB7A5D4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C2F7C", Offset = "0x8C2F7C")]
		set
		{
		}
	}

	[Token(Token = "0x17000066")]
	public static UnityEngine.Vector3 shoulderPosition
	{
		[Token(Token = "0x60005A9")]
		[Address(RVA = "0xB7A648", Offset = "0xB7A648", VA = "0xB7A648")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C2F8C", Offset = "0x8C2F8C")]
		get
		{
			return default(UnityEngine.Vector3);
		}
		[Token(Token = "0x60005AA")]
		[Address(RVA = "0xB7A69C", Offset = "0xB7A69C", VA = "0xB7A69C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C2F9C", Offset = "0x8C2F9C")]
		set
		{
		}
	}

	[Token(Token = "0x17000067")]
	public static Quaternion shoulderRotation
	{
		[Token(Token = "0x60005AB")]
		[Address(RVA = "0xB7A70C", Offset = "0xB7A70C", VA = "0xB7A70C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C2FAC", Offset = "0x8C2FAC")]
		get
		{
			return default(Quaternion);
		}
		[Token(Token = "0x60005AC")]
		[Address(RVA = "0xB7A760", Offset = "0xB7A760", VA = "0xB7A760")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C2FBC", Offset = "0x8C2FBC")]
		set
		{
		}
	}

	[Token(Token = "0x600058A")]
	[Address(RVA = "0xB7848C", Offset = "0xB7848C", VA = "0xB7848C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600058B")]
	[Address(RVA = "0xB785C8", Offset = "0xB785C8", VA = "0xB785C8")]
	private void Start()
	{
	}

	[Token(Token = "0x600058C")]
	[Address(RVA = "0xB78638", Offset = "0xB78638", VA = "0xB78638")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600058D")]
	[Address(RVA = "0xB78774", Offset = "0xB78774", VA = "0xB78774")]
	private void MainControllerChanged(string index)
	{
	}

	[Token(Token = "0x600058E")]
	[Address(RVA = "0xB7881C", Offset = "0xB7881C", VA = "0xB7881C")]
	private void HandnessChanged(string index)
	{
	}

	[Token(Token = "0x600058F")]
	[Address(RVA = "0xB78820", Offset = "0xB78820", VA = "0xB78820")]
	private void ServiceStartSuccess()
	{
	}

	[Token(Token = "0x6000590")]
	[Address(RVA = "0xB78778", Offset = "0xB78778", VA = "0xB78778")]
	private void RefreshHandness()
	{
	}

	[Token(Token = "0x6000591")]
	[Address(RVA = "0xB78880", Offset = "0xB78880", VA = "0xB78880")]
	private void OnApplicationPause(bool pause)
	{
	}

	[Token(Token = "0x6000592")]
	[Address(RVA = "0xB78A04", Offset = "0xB78A04", VA = "0xB78A04")]
	private void ShowController()
	{
	}

	[Token(Token = "0x6000593")]
	[Address(RVA = "0xB78B64", Offset = "0xB78B64", VA = "0xB78B64")]
	private void CheckControllerState(string data)
	{
	}

	[Token(Token = "0x6000594")]
	[Address(RVA = "0xB78C38", Offset = "0xB78C38", VA = "0xB78C38")]
	private void Update()
	{
	}

	[Token(Token = "0x6000595")]
	[Address(RVA = "0xB78824", Offset = "0xB78824", VA = "0xB78824")]
	public static void ChangeHandNess()
	{
	}

	[Token(Token = "0x6000596")]
	[Address(RVA = "0xB78E3C", Offset = "0xB78E3C", VA = "0xB78E3C")]
	private void DoUpdateControler0()
	{
	}

	[Token(Token = "0x6000597")]
	[Address(RVA = "0xB78EB8", Offset = "0xB78EB8", VA = "0xB78EB8")]
	private void DoUpdateControler1()
	{
	}

	[Token(Token = "0x6000598")]
	[Address(RVA = "0xB78F3C", Offset = "0xB78F3C", VA = "0xB78F3C")]
	private void UpdateControlloerRay(bool update0 = true, bool update1 = true)
	{
	}

	[Token(Token = "0x6000599")]
	[Address(RVA = "0xB79FC0", Offset = "0xB79FC0", VA = "0xB79FC0")]
	private Quaternion UpdateSimulatedFrameParams()
	{
		return default(Quaternion);
	}

	[Token(Token = "0x600059A")]
	[Address(RVA = "0xB79090", Offset = "0xB79090", VA = "0xB79090")]
	private void SetArmParaToSo(int hand, int gazeType, float elbowHeight, float elbowDepth, float pointerTiltAngle)
	{
	}

	[Token(Token = "0x600059B")]
	[Address(RVA = "0xB790A0", Offset = "0xB790A0", VA = "0xB790A0")]
	private void CalcArmModelfromSo(int hand)
	{
	}

	[Token(Token = "0x600059C")]
	[Address(RVA = "0xB7957C", Offset = "0xB7957C", VA = "0xB7957C")]
	public void UpdateControllerDataSO(int hand)
	{
	}

	[Token(Token = "0x60005AD")]
	[Address(RVA = "0xB7A7D4", Offset = "0xB7A7D4", VA = "0xB7A7D4")]
	public Pvr_Controller()
	{
	}
}
[Token(Token = "0x200010F")]
public class Pvr_ControllerDemo : MonoBehaviour
{
	[Token(Token = "0x400058B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject HeadSetController;

	[Token(Token = "0x400058C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject controller0;

	[Token(Token = "0x400058D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject controller1;

	[Token(Token = "0x400058E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject cube;

	[Token(Token = "0x400058F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Ray ray;

	[Token(Token = "0x4000590")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private GameObject currentController;

	[Token(Token = "0x4000591")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Transform lastHit;

	[Token(Token = "0x4000592")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Transform currentHit;

	[Token(Token = "0x4000593")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private Material normat;

	[Token(Token = "0x4000594")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private Material gazemat;

	[Token(Token = "0x4000595")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private Material clickmat;

	[Token(Token = "0x4000596")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private bool noClick;

	[Token(Token = "0x4000597")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private GameObject referenceObj;

	[Token(Token = "0x4000598")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public float rayDefaultLength;

	[Token(Token = "0x4000599")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private bool isHasController;

	[Token(Token = "0x400059A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x95")]
	private bool headcontrolmode;

	[Token(Token = "0x400059B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private RaycastHit hit;

	[Token(Token = "0x400059C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private GameObject rayLine;

	[Token(Token = "0x400059D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private GameObject dot;

	[Token(Token = "0x400059E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private Transform dragObj;

	[Token(Token = "0x400059F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private float disX;

	[Token(Token = "0x40005A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	private float disY;

	[Token(Token = "0x40005A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private float disZ;

	[Token(Token = "0x60005AE")]
	[Address(RVA = "0xB7A83C", Offset = "0xB7A83C", VA = "0xB7A83C")]
	private void Start()
	{
	}

	[Token(Token = "0x60005AF")]
	[Address(RVA = "0xB7A9C8", Offset = "0xB7A9C8", VA = "0xB7A9C8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60005B0")]
	[Address(RVA = "0xB7AAE0", Offset = "0xB7AAE0", VA = "0xB7AAE0")]
	private void Update()
	{
	}

	[Token(Token = "0x60005B1")]
	[Address(RVA = "0xB7C3C0", Offset = "0xB7C3C0", VA = "0xB7C3C0")]
	private void ServiceStartSuccess()
	{
	}

	[Token(Token = "0x60005B2")]
	[Address(RVA = "0xB7C458", Offset = "0xB7C458", VA = "0xB7C458")]
	private void ControllerStateListener(string data)
	{
	}

	[Token(Token = "0x60005B3")]
	[Address(RVA = "0xB7C4F0", Offset = "0xB7C4F0", VA = "0xB7C4F0")]
	private void CheckControllerStateForGoblin(string state)
	{
	}

	[Token(Token = "0x60005B4")]
	[Address(RVA = "0xB7C588", Offset = "0xB7C588", VA = "0xB7C588")]
	public void SwitchControlMode()
	{
	}

	[Token(Token = "0x60005B5")]
	[Address(RVA = "0xB7C58C", Offset = "0xB7C58C", VA = "0xB7C58C")]
	public Pvr_ControllerDemo()
	{
	}
}
[Token(Token = "0x2000110")]
public class Pvr_ControllerEventsExamples : MonoBehaviour
{
	[Token(Token = "0x60005B6")]
	[Address(RVA = "0xB7C59C", Offset = "0xB7C59C", VA = "0xB7C59C")]
	private void Start()
	{
	}

	[Token(Token = "0x60005B7")]
	[Address(RVA = "0xB7C7D4", Offset = "0xB7C7D4", VA = "0xB7C7D4")]
	private void UIPointerElementEnter(object sender, UIPointerEventArgs e)
	{
	}

	[Token(Token = "0x60005B8")]
	[Address(RVA = "0xB7C874", Offset = "0xB7C874", VA = "0xB7C874")]
	private void UIPointerElementExit(object sender, UIPointerEventArgs e)
	{
	}

	[Token(Token = "0x60005B9")]
	[Address(RVA = "0xB7C914", Offset = "0xB7C914", VA = "0xB7C914")]
	private void UIPointerElementClick(object sender, UIPointerEventArgs e)
	{
	}

	[Token(Token = "0x60005BA")]
	[Address(RVA = "0xB7C9B4", Offset = "0xB7C9B4", VA = "0xB7C9B4")]
	private void UIPointerElementDragStart(object sender, UIPointerEventArgs e)
	{
	}

	[Token(Token = "0x60005BB")]
	[Address(RVA = "0xB7CA54", Offset = "0xB7CA54", VA = "0xB7CA54")]
	private void UIPointerElementDragEnd(object sender, UIPointerEventArgs e)
	{
	}

	[Token(Token = "0x60005BC")]
	[Address(RVA = "0xB7CAF4", Offset = "0xB7CAF4", VA = "0xB7CAF4")]
	public Pvr_ControllerEventsExamples()
	{
	}
}
[Token(Token = "0x2000111")]
public class Pvr_ControllerInit : MonoBehaviour
{
	[Token(Token = "0x200068F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B7B74", Offset = "0x8B7B74")]
	private sealed class <RefreshController>d__31 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002233")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002234")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002235")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int id;

		[Token(Token = "0x4002236")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Pvr_ControllerInit <>4__this;

		[Token(Token = "0x17000479")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600283B")]
			[Address(RVA = "0x13DF1AC", Offset = "0x13DF1AC", VA = "0x13DF1AC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700047A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600283D")]
			[Address(RVA = "0x13DF214", Offset = "0x13DF214", VA = "0x13DF214", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002838")]
		[Address(RVA = "0x13DEDDC", Offset = "0x13DEDDC", VA = "0x13DEDDC")]
		[DebuggerHidden]
		public <RefreshController>d__31(int <>1__state)
		{
		}

		[Token(Token = "0x6002839")]
		[Address(RVA = "0x13DEE08", Offset = "0x13DEE08", VA = "0x13DEE08", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600283A")]
		[Address(RVA = "0x13DEE0C", Offset = "0x13DEE0C", VA = "0x13DEE0C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600283C")]
		[Address(RVA = "0x13DF1B4", Offset = "0x13DF1B4", VA = "0x13DF1B4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40005A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ControllerVariety Variety;

	[Token(Token = "0x40005A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private bool isCustomModel;

	[Token(Token = "0x40005A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject goblin;

	[Token(Token = "0x40005A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject g2;

	[Token(Token = "0x40005A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject neo2L;

	[Token(Token = "0x40005A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private GameObject neo2R;

	[Token(Token = "0x40005A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private GameObject neo3L;

	[Token(Token = "0x40005A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private GameObject neo3R;

	[Token(Token = "0x40005AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Material standardMat;

	[Token(Token = "0x40005AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private Material unlitMat;

	[Token(Token = "0x40005AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private int controllerType;

	[Token(Token = "0x40005AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[HideInInspector]
	public bool loadModelSuccess;

	[Token(Token = "0x40005AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int systemOrUnity;

	[Token(Token = "0x40005AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private JsonData curControllerData;

	[Token(Token = "0x40005B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private string modelName;

	[Token(Token = "0x40005B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private string texFormat;

	[Token(Token = "0x40005B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private string prePath;

	[Token(Token = "0x40005B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private string modelFilePath;

	[Token(Token = "0x40005B4")]
	private const string goblinTexbasePath = "Controller/controller1/controller1";

	[Token(Token = "0x40005B5")]
	private const string g2TexbasePath = "Controller/controller3/controller3";

	[Token(Token = "0x40005B6")]
	private const string neo2TexbasePath = "Controller/controller4/controller4";

	[Token(Token = "0x40005B7")]
	private const string neo3TexbasePath = "Controller/controller5/controller5";

	[Token(Token = "0x60005BD")]
	[Address(RVA = "0xB7CAFC", Offset = "0xB7CAFC", VA = "0xB7CAFC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60005BE")]
	[Address(RVA = "0xB7CC74", Offset = "0xB7CC74", VA = "0xB7CC74")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60005BF")]
	[Address(RVA = "0xB7CD78", Offset = "0xB7CD78", VA = "0xB7CD78")]
	private void OnApplicationPause(bool pause)
	{
	}

	[Token(Token = "0x60005C0")]
	[Address(RVA = "0xB7D008", Offset = "0xB7D008", VA = "0xB7D008")]
	private void ServiceStartSuccess()
	{
	}

	[Token(Token = "0x60005C1")]
	[Address(RVA = "0xB7D200", Offset = "0xB7D200", VA = "0xB7D200")]
	private void LoadResFromJson()
	{
	}

	[Token(Token = "0x60005C2")]
	[Address(RVA = "0xB7D3EC", Offset = "0xB7D3EC", VA = "0xB7D3EC")]
	private void CheckControllerStateForGoblin(string state)
	{
	}

	[Token(Token = "0x60005C3")]
	[Address(RVA = "0xB7D790", Offset = "0xB7D790", VA = "0xB7D790")]
	private void CheckControllerStateOfAbility(string data)
	{
	}

	[Token(Token = "0x60005C4")]
	[Address(RVA = "0xB7CD84", Offset = "0xB7CD84", VA = "0xB7CD84")]
	private void DestroyLocalController()
	{
	}

	[Token(Token = "0x60005C5")]
	[Address(RVA = "0xB7D4D8", Offset = "0xB7D4D8", VA = "0xB7D4D8")]
	private void DestroySysController()
	{
	}

	[Token(Token = "0x60005C6")]
	[Address(RVA = "0xB7D36C", Offset = "0xB7D36C", VA = "0xB7D36C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C2FCC", Offset = "0x8C2FCC")]
	private IEnumerator RefreshController(int id)
	{
		return null;
	}

	[Token(Token = "0x60005C7")]
	[Address(RVA = "0xB7D8F4", Offset = "0xB7D8F4", VA = "0xB7D8F4")]
	private void LoadControllerFromPrefab()
	{
	}

	[Token(Token = "0x60005C8")]
	[Address(RVA = "0xB7DE98", Offset = "0xB7DE98", VA = "0xB7DE98")]
	private void LoadControllerFromSystem(int id)
	{
	}

	[Token(Token = "0x60005C9")]
	[Address(RVA = "0xB7DBA4", Offset = "0xB7DBA4", VA = "0xB7DBA4")]
	private void LoadTexture(Pvr_ControllerVisual visual, string controllerName, bool fromRes)
	{
	}

	[Token(Token = "0x60005CA")]
	[Address(RVA = "0xB7E2AC", Offset = "0xB7E2AC", VA = "0xB7E2AC")]
	private Texture2D LoadOneTexture(string filepath, bool fromRes)
	{
		return null;
	}

	[Token(Token = "0x60005CB")]
	[Address(RVA = "0xB7E3B8", Offset = "0xB7E3B8", VA = "0xB7E3B8")]
	private byte[] ReadPNG(string path)
	{
		return null;
	}

	[Token(Token = "0x60005CC")]
	[Address(RVA = "0xB7E4C4", Offset = "0xB7E4C4", VA = "0xB7E4C4")]
	public Pvr_ControllerInit()
	{
	}
}
[Token(Token = "0x2000112")]
public class Pvr_ControllerLink
{
	[Token(Token = "0x40005B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public AndroidJavaClass javaHummingbirdClass;

	[Token(Token = "0x40005B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AndroidJavaClass javaPico2ReceiverClass;

	[Token(Token = "0x40005BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AndroidJavaClass javaserviceClass;

	[Token(Token = "0x40005BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AndroidJavaClass javavractivityclass;

	[Token(Token = "0x40005BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AndroidJavaClass javaCVClass;

	[Token(Token = "0x40005BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AndroidJavaObject activity;

	[Token(Token = "0x40005BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string gameobjname;

	[Token(Token = "0x40005BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool picoDevice;

	[Token(Token = "0x40005C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public string hummingBirdMac;

	[Token(Token = "0x40005C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public int hummingBirdRSSI;

	[Token(Token = "0x40005C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public bool goblinserviceStarted;

	[Token(Token = "0x40005C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5D")]
	public bool neoserviceStarted;

	[Token(Token = "0x40005C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5E")]
	public bool controller0Connected;

	[Token(Token = "0x40005C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5F")]
	public bool controller1Connected;

	[Token(Token = "0x40005C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public int mainHandID;

	[Token(Token = "0x40005C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public Pvr_Controller.UserHandNess handness;

	[Token(Token = "0x40005C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public int controllerType;

	[Token(Token = "0x40005C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ControllerHand Controller0;

	[Token(Token = "0x40005CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public ControllerHand Controller1;

	[Token(Token = "0x40005CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public int platFormType;

	[Token(Token = "0x40005CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public int trackingmode;

	[Token(Token = "0x40005CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public int systemProp;

	[Token(Token = "0x40005CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public int enablehand6dofbyhead;

	[Token(Token = "0x40005CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public bool switchHomeKey;

	[Token(Token = "0x40005D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private int iPhoneHMDModeEnabled;

	[Token(Token = "0x40005D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private float[] hbPoseData;

	[Token(Token = "0x40005D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private float[] sensorData;

	[Token(Token = "0x40005D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private int[] keyData;

	[Token(Token = "0x40005D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private int[] neo3TouchValue;

	[Token(Token = "0x40005D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private float[] fixedState;

	[Token(Token = "0x40005D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private float[] neoposeData;

	[Token(Token = "0x40005D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private int[] goblinKeyArray;

	[Token(Token = "0x40005D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private int[] neoKeyArray;

	[Token(Token = "0x40005D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private int[] neotriggerV;

	[Token(Token = "0x40005DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private float[] velocity;

	[Token(Token = "0x40005DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private float[] angularVelocity;

	[Token(Token = "0x40005DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private float[] acceData;

	[Token(Token = "0x60005CD")]
	[Address(RVA = "0x13DF21C", Offset = "0x13DF21C", VA = "0x13DF21C")]
	public Pvr_ControllerLink(string name)
	{
	}

	[Token(Token = "0x60005CE")]
	[Address(RVA = "0x13DF5A0", Offset = "0x13DF5A0", VA = "0x13DF5A0")]
	private void StartHummingBirdService()
	{
	}

	[Token(Token = "0x60005CF")]
	[Address(RVA = "0x13DFFA0", Offset = "0x13DFFA0", VA = "0x13DFFA0")]
	public bool IsServiceExisted()
	{
		return default(bool);
	}

	[Token(Token = "0x60005D0")]
	[Address(RVA = "0x13DFD44", Offset = "0x13DFD44", VA = "0x13DFD44")]
	public void SetGameObjectToJar(string name)
	{
	}

	[Token(Token = "0x60005D1")]
	[Address(RVA = "0x13DFE54", Offset = "0x13DFE54", VA = "0x13DFE54")]
	public void BindService()
	{
	}

	[Token(Token = "0x60005D2")]
	[Address(RVA = "0x13E0128", Offset = "0x13E0128", VA = "0x13E0128")]
	public void UnBindService()
	{
	}

	[Token(Token = "0x60005D3")]
	[Address(RVA = "0x13E0274", Offset = "0x13E0274", VA = "0x13E0274")]
	public void StopLark2Receiver()
	{
	}

	[Token(Token = "0x60005D4")]
	[Address(RVA = "0x13E03D0", Offset = "0x13E03D0", VA = "0x13E03D0")]
	public void StartLark2Receiver()
	{
	}

	[Token(Token = "0x60005D5")]
	[Address(RVA = "0x13E04F4", Offset = "0x13E04F4", VA = "0x13E04F4")]
	public void StopLark2Service()
	{
	}

	[Token(Token = "0x60005D6")]
	[Address(RVA = "0x13E0650", Offset = "0x13E0650", VA = "0x13E0650")]
	public void StartLark2Service()
	{
	}

	[Token(Token = "0x60005D7")]
	[Address(RVA = "0x13E07D8", Offset = "0x13E07D8", VA = "0x13E07D8")]
	public int getHandness()
	{
		return default(int);
	}

	[Token(Token = "0x60005D8")]
	[Address(RVA = "0x13E09E8", Offset = "0x13E09E8", VA = "0x13E09E8")]
	public void setHandness(int hand)
	{
	}

	[Token(Token = "0x60005D9")]
	[Address(RVA = "0x13E0B40", Offset = "0x13E0B40", VA = "0x13E0B40")]
	public void StartScan()
	{
	}

	[Token(Token = "0x60005DA")]
	[Address(RVA = "0x13E0C58", Offset = "0x13E0C58", VA = "0x13E0C58")]
	public void StopScan()
	{
	}

	[Token(Token = "0x60005DB")]
	[Address(RVA = "0x13DFBD0", Offset = "0x13DFBD0", VA = "0x13DFBD0")]
	public int GetSysproc()
	{
		return default(int);
	}

	[Token(Token = "0x60005DC")]
	[Address(RVA = "0x13E0D74", Offset = "0x13E0D74", VA = "0x13E0D74")]
	public void ResetController(int num)
	{
	}

	[Token(Token = "0x60005DD")]
	[Address(RVA = "0x13E0F78", Offset = "0x13E0F78", VA = "0x13E0F78")]
	public void ConnectBLE()
	{
	}

	[Token(Token = "0x60005DE")]
	[Address(RVA = "0x13E10B4", Offset = "0x13E10B4", VA = "0x13E10B4")]
	public void DisConnectBLE()
	{
	}

	[Token(Token = "0x60005DF")]
	[Address(RVA = "0x13E11D4", Offset = "0x13E11D4", VA = "0x13E11D4")]
	public bool StartUpgrade()
	{
		return default(bool);
	}

	[Token(Token = "0x60005E0")]
	[Address(RVA = "0x13E1310", Offset = "0x13E1310", VA = "0x13E1310")]
	public void setBinPath(string path, bool isasset)
	{
	}

	[Token(Token = "0x60005E1")]
	[Address(RVA = "0x13E1488", Offset = "0x13E1488", VA = "0x13E1488")]
	public string GetBLEImageType()
	{
		return null;
	}

	[Token(Token = "0x60005E2")]
	[Address(RVA = "0x13E15EC", Offset = "0x13E15EC", VA = "0x13E15EC")]
	public long GetBLEVersion()
	{
		return default(long);
	}

	[Token(Token = "0x60005E3")]
	[Address(RVA = "0x13E1754", Offset = "0x13E1754", VA = "0x13E1754")]
	public string GetFileImageType()
	{
		return null;
	}

	[Token(Token = "0x60005E4")]
	[Address(RVA = "0x13E18B8", Offset = "0x13E18B8", VA = "0x13E18B8")]
	public long GetFileVersion()
	{
		return default(long);
	}

	[Token(Token = "0x60005E5")]
	[Address(RVA = "0x13E1A20", Offset = "0x13E1A20", VA = "0x13E1A20")]
	public int GetControllerConnectionState(int num)
	{
		return default(int);
	}

	[Token(Token = "0x60005E6")]
	[Address(RVA = "0x13E1D60", Offset = "0x13E1D60", VA = "0x13E1D60")]
	public void RebackToLauncher()
	{
	}

	[Token(Token = "0x60005E7")]
	[Address(RVA = "0x13E1F48", Offset = "0x13E1F48", VA = "0x13E1F48")]
	public void TurnUpVolume()
	{
	}

	[Token(Token = "0x60005E8")]
	[Address(RVA = "0x13E20C4", Offset = "0x13E20C4", VA = "0x13E20C4")]
	public void TurnDownVolume()
	{
	}

	[Token(Token = "0x60005E9")]
	[Address(RVA = "0x13E2240", Offset = "0x13E2240", VA = "0x13E2240")]
	public float[] GetHBControllerPoseData()
	{
		return null;
	}

	[Token(Token = "0x60005EA")]
	[Address(RVA = "0x13E2608", Offset = "0x13E2608", VA = "0x13E2608")]
	public float[] GetControllerSensorData()
	{
		return null;
	}

	[Token(Token = "0x60005EB")]
	[Address(RVA = "0x13E27D0", Offset = "0x13E27D0", VA = "0x13E27D0")]
	public int[] GetControllerKeyData()
	{
		return null;
	}

	[Token(Token = "0x60005EC")]
	[Address(RVA = "0x13E28D4", Offset = "0x13E28D4", VA = "0x13E28D4")]
	public int[] GetNeo3TouchData(int hand)
	{
		return null;
	}

	[Token(Token = "0x60005ED")]
	[Address(RVA = "0x13E304C", Offset = "0x13E304C", VA = "0x13E304C")]
	public int GetNeo3GripValue(int hand)
	{
		return default(int);
	}

	[Token(Token = "0x60005EE")]
	[Address(RVA = "0x13E31DC", Offset = "0x13E31DC", VA = "0x13E31DC")]
	public float[] GetControllerFixedSensorState(int hand)
	{
		return null;
	}

	[Token(Token = "0x60005EF")]
	[Address(RVA = "0x13E3784", Offset = "0x13E3784", VA = "0x13E3784")]
	public float[] GetCvControllerPoseData(int hand)
	{
		return null;
	}

	[Token(Token = "0x60005F0")]
	[Address(RVA = "0x13E3D54", Offset = "0x13E3D54", VA = "0x13E3D54")]
	public int[] GetHBControllerKeyData()
	{
		return null;
	}

	[Token(Token = "0x60005F1")]
	[Address(RVA = "0x13E5068", Offset = "0x13E5068", VA = "0x13E5068")]
	public int GetHBKeyValue()
	{
		return default(int);
	}

	[Token(Token = "0x60005F2")]
	[Address(RVA = "0x13E5208", Offset = "0x13E5208", VA = "0x13E5208")]
	public int[] GetCvControllerKeyData(int hand)
	{
		return null;
	}

	[Token(Token = "0x60005F3")]
	[Address(RVA = "0x13E6CB0", Offset = "0x13E6CB0", VA = "0x13E6CB0")]
	public int GetCVTriggerValue(int hand)
	{
		return default(int);
	}

	[Token(Token = "0x60005F4")]
	[Address(RVA = "0x13E6E68", Offset = "0x13E6E68", VA = "0x13E6E68")]
	public void AutoConnectHbController(int scanTimeMs)
	{
	}

	[Token(Token = "0x60005F5")]
	[Address(RVA = "0x13E6FE0", Offset = "0x13E6FE0", VA = "0x13E6FE0")]
	public void StartControllerThread(int headSensorState, int handSensorState)
	{
	}

	[Token(Token = "0x60005F6")]
	[Address(RVA = "0x13E71A4", Offset = "0x13E71A4", VA = "0x13E71A4")]
	public void StopControllerThread(int headSensorState, int handSensorState)
	{
	}

	[Token(Token = "0x60005F7")]
	[Address(RVA = "0x13E7368", Offset = "0x13E7368", VA = "0x13E7368")]
	public void SetUnityVersionToJar(string version)
	{
	}

	[Token(Token = "0x60005F8")]
	[Address(RVA = "0x13E7488", Offset = "0x13E7488", VA = "0x13E7488")]
	public UnityEngine.Vector3 GetVelocity(int num)
	{
		return default(UnityEngine.Vector3);
	}

	[Token(Token = "0x60005F9")]
	[Address(RVA = "0x13E77F8", Offset = "0x13E77F8", VA = "0x13E77F8")]
	public UnityEngine.Vector3 GetAngularVelocity(int num)
	{
		return default(UnityEngine.Vector3);
	}

	[Token(Token = "0x60005FA")]
	[Address(RVA = "0x13E7C00", Offset = "0x13E7C00", VA = "0x13E7C00")]
	public UnityEngine.Vector3 GetAcceleration(int num)
	{
		return default(UnityEngine.Vector3);
	}

	[Token(Token = "0x60005FB")]
	[Address(RVA = "0x13E7FA8", Offset = "0x13E7FA8", VA = "0x13E7FA8")]
	public string GetConnectedDeviceMac()
	{
		return null;
	}

	[Token(Token = "0x60005FC")]
	[Address(RVA = "0x13E810C", Offset = "0x13E810C", VA = "0x13E810C")]
	public void VibrateNeo2Controller(float strength, int time, int hand)
	{
	}

	[Token(Token = "0x60005FD")]
	[Address(RVA = "0x13E83E8", Offset = "0x13E83E8", VA = "0x13E83E8")]
	public int GetMainControllerIndex()
	{
		return default(int);
	}

	[Token(Token = "0x60005FE")]
	[Address(RVA = "0x13E8560", Offset = "0x13E8560", VA = "0x13E8560")]
	public void SetMainController(int index)
	{
	}

	[Token(Token = "0x60005FF")]
	[Address(RVA = "0x13E86B4", Offset = "0x13E86B4", VA = "0x13E86B4")]
	public void ResetHeadSensorForController()
	{
	}

	[Token(Token = "0x6000600")]
	[Address(RVA = "0x13E87DC", Offset = "0x13E87DC", VA = "0x13E87DC")]
	public void GetDeviceVersion(int deviceType)
	{
	}

	[Token(Token = "0x6000601")]
	[Address(RVA = "0x13E8938", Offset = "0x13E8938", VA = "0x13E8938")]
	public void GetControllerSnCode(int controllerSerialNum)
	{
	}

	[Token(Token = "0x6000602")]
	[Address(RVA = "0x13E8A94", Offset = "0x13E8A94", VA = "0x13E8A94")]
	public void SetControllerUnbind(int controllerSerialNum)
	{
	}

	[Token(Token = "0x6000603")]
	[Address(RVA = "0x13E8BF0", Offset = "0x13E8BF0", VA = "0x13E8BF0")]
	public void SetStationRestart()
	{
	}

	[Token(Token = "0x6000604")]
	[Address(RVA = "0x13E8D18", Offset = "0x13E8D18", VA = "0x13E8D18")]
	public void StartStationOtaUpdate()
	{
	}

	[Token(Token = "0x6000605")]
	[Address(RVA = "0x13E8E40", Offset = "0x13E8E40", VA = "0x13E8E40")]
	public void StartControllerOtaUpdate(int mode, int controllerSerialNum)
	{
	}

	[Token(Token = "0x6000606")]
	[Address(RVA = "0x13E8FFC", Offset = "0x13E8FFC", VA = "0x13E8FFC")]
	public void EnterPairMode(int controllerSerialNum)
	{
	}

	[Token(Token = "0x6000607")]
	[Address(RVA = "0x13E9158", Offset = "0x13E9158", VA = "0x13E9158")]
	public void SetControllerShutdown(int controllerSerialNum)
	{
	}

	[Token(Token = "0x6000608")]
	[Address(RVA = "0x13E92B4", Offset = "0x13E92B4", VA = "0x13E92B4")]
	public int GetStationPairState()
	{
		return default(int);
	}

	[Token(Token = "0x6000609")]
	[Address(RVA = "0x13E9430", Offset = "0x13E9430", VA = "0x13E9430")]
	public int GetStationOtaUpdateProgress()
	{
		return default(int);
	}

	[Token(Token = "0x600060A")]
	[Address(RVA = "0x13E95AC", Offset = "0x13E95AC", VA = "0x13E95AC")]
	public int GetControllerOtaUpdateProgress()
	{
		return default(int);
	}

	[Token(Token = "0x600060B")]
	[Address(RVA = "0x13E9728", Offset = "0x13E9728", VA = "0x13E9728")]
	public void GetControllerVersionAndSN(int controllerSerialNum)
	{
	}

	[Token(Token = "0x600060C")]
	[Address(RVA = "0x13E9884", Offset = "0x13E9884", VA = "0x13E9884")]
	public void GetControllerUniqueID()
	{
	}

	[Token(Token = "0x600060D")]
	[Address(RVA = "0x13E99AC", Offset = "0x13E99AC", VA = "0x13E99AC")]
	public void InterruptStationPairMode()
	{
	}

	[Token(Token = "0x600060E")]
	[Address(RVA = "0x13E9AD4", Offset = "0x13E9AD4", VA = "0x13E9AD4")]
	public int GetControllerAbility(int controllerSerialNum)
	{
		return default(int);
	}

	[Token(Token = "0x600060F")]
	[Address(RVA = "0x13E9C4C", Offset = "0x13E9C4C", VA = "0x13E9C4C")]
	public void SwitchHomeKey(bool state)
	{
	}

	[Token(Token = "0x6000610")]
	[Address(RVA = "0x13E9D00", Offset = "0x13E9D00", VA = "0x13E9D00")]
	public void SetBootReconnect()
	{
	}

	[Token(Token = "0x6000611")]
	[Address(RVA = "0x13E9E20", Offset = "0x13E9E20", VA = "0x13E9E20")]
	public int GetTemperature()
	{
		return default(int);
	}

	[Token(Token = "0x6000612")]
	[Address(RVA = "0x13E9F94", Offset = "0x13E9F94", VA = "0x13E9F94")]
	public int GetDeviceType()
	{
		return default(int);
	}

	[Token(Token = "0x6000613")]
	[Address(RVA = "0x13EA108", Offset = "0x13EA108", VA = "0x13EA108")]
	public int GetControllerType()
	{
		return default(int);
	}

	[Token(Token = "0x6000614")]
	[Address(RVA = "0x13EA210", Offset = "0x13EA210", VA = "0x13EA210")]
	public string GetHummingBird2SN()
	{
		return null;
	}

	[Token(Token = "0x6000615")]
	[Address(RVA = "0x13EA36C", Offset = "0x13EA36C", VA = "0x13EA36C")]
	public string GetControllerVersion()
	{
		return null;
	}

	[Token(Token = "0x6000616")]
	[Address(RVA = "0x13EA4C8", Offset = "0x13EA4C8", VA = "0x13EA4C8")]
	public bool IsEnbleTrigger()
	{
		return default(bool);
	}

	[Token(Token = "0x6000617")]
	[Address(RVA = "0x13EA628", Offset = "0x13EA628", VA = "0x13EA628")]
	public void StartCV2PairingMode(int devicetype)
	{
	}

	[Token(Token = "0x6000618")]
	[Address(RVA = "0x13EA784", Offset = "0x13EA784", VA = "0x13EA784")]
	public void StopCV2PairingMode(int devicetype)
	{
	}

	[Token(Token = "0x6000619")]
	[Address(RVA = "0x13EA8E0", Offset = "0x13EA8E0", VA = "0x13EA8E0")]
	public int GetControllerBindingState(int id)
	{
		return default(int);
	}

	[Token(Token = "0x600061A")]
	[Address(RVA = "0x13EAA48", Offset = "0x13EAA48", VA = "0x13EAA48")]
	public void setIsEnbleHomeKey(bool state)
	{
	}

	[Token(Token = "0x600061B")]
	[Address(RVA = "0x13EAB94", Offset = "0x13EAB94", VA = "0x13EAB94")]
	public int getControllerSensorStatus(int id)
	{
		return default(int);
	}
}
[Token(Token = "0x2000113")]
public class Pvr_ControllerManager : MonoBehaviour
{
	[Token(Token = "0x2000690")]
	public delegate void PvrServiceStartSuccess();

	[Token(Token = "0x2000691")]
	public delegate void PvrControllerStateChanged(string data);

	[Token(Token = "0x2000692")]
	public delegate void ChangeMainControllerCallBack(string index);

	[Token(Token = "0x2000693")]
	public delegate void ChangeHandNessCallBack(string index);

	[Token(Token = "0x2000694")]
	public delegate void SetHbServiceBindState();

	[Token(Token = "0x2000695")]
	public delegate void ControllerThreadStartedCallback();

	[Token(Token = "0x2000696")]
	public delegate void SetControllerServiceBindState();

	[Token(Token = "0x2000697")]
	public delegate void ControllerStatusChange(string isconnect);

	[Token(Token = "0x2000698")]
	public delegate void SetControllerAbility(string data);

	[Token(Token = "0x2000699")]
	public delegate void SetControllerStateChanged(string data);

	[Token(Token = "0x200069A")]
	public delegate void SetHbControllerMac(string mac);

	[Token(Token = "0x200069B")]
	public delegate void ControllerDeviceVersionCallback(string data);

	[Token(Token = "0x200069C")]
	public delegate void ControllerSnCodeCallback(string data);

	[Token(Token = "0x200069D")]
	public delegate void ControllerUnbindCallback(string status);

	[Token(Token = "0x200069E")]
	public delegate void ControllerStationStatusCallback(string status);

	[Token(Token = "0x200069F")]
	public delegate void ControllerStationBusyCallback(string status);

	[Token(Token = "0x20006A0")]
	public delegate void ControllerOtaStartCodeCallback(string data);

	[Token(Token = "0x20006A1")]
	public delegate void ControllerDeviceVersionAndSNCallback(string data);

	[Token(Token = "0x20006A2")]
	public delegate void ControllerUniqueIDCallback(string data);

	[Token(Token = "0x20006A3")]
	public delegate void ControllerCombinedKeyUnbindCallback(string data);

	[Token(Token = "0x40005DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Pvr_ControllerManager instance;

	[Token(Token = "0x40005DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static Pvr_ControllerLink controllerlink;

	[Token(Token = "0x40005DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float cTime;

	[Token(Token = "0x40005E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private bool stopConnect;

	[Token(Token = "0x40005E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text toast;

	[Token(Token = "0x40005E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool controllerServicestate;

	[Token(Token = "0x40005E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float disConnectTime;

	[Token(Token = "0x40005E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool LengthAdaptiveRay;

	[Token(Token = "0x40005E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float[] sensorData;

	[Token(Token = "0x40005E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int[] keyData;

	[Token(Token = "0x40005E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float[] g2SensorData;

	[Token(Token = "0x40005E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int[] g2KeyData;

	[Token(Token = "0x40005E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private int keyOffset;

	[Token(Token = "0x40005EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private int rotControllerMode;

	[Token(Token = "0x17000068")]
	public static Pvr_ControllerManager Instance
	{
		[Token(Token = "0x600061C")]
		[Address(RVA = "0x13EACFC", Offset = "0x13EACFC", VA = "0x13EACFC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x14000011")]
	public static event PvrServiceStartSuccess PvrServiceStartSuccessEvent
	{
		[Token(Token = "0x600061D")]
		[Address(RVA = "0x13EAF2C", Offset = "0x13EAF2C", VA = "0x13EAF2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C3030", Offset = "0x8C3030")]
		add
		{
		}
		[Token(Token = "0x600061E")]
		[Address(RVA = "0x13EB01C", Offset = "0x13EB01C", VA = "0x13EB01C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C3040", Offset = "0x8C3040")]
		remove
		{
		}
	}

	[Token(Token = "0x14000012")]
	public static event PvrControllerStateChanged PvrControllerStateChangedEvent
	{
		[Token(Token = "0x600061F")]
		[Address(RVA = "0x13EB10C", Offset = "0x13EB10C", VA = "0x13EB10C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C3050", Offset = "0x8C3050")]
		add
		{
		}
		[Token(Token = "0x6000620")]
		[Address(RVA = "0x13EB1FC", Offset = "0x13EB1FC", VA = "0x13EB1FC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C3060", Offset = "0x8C3060")]
		remove
		{
		}
	}

	[Token(Token = "0x14000013")]
	public static event ChangeMainControllerCallBack ChangeMainControllerCallBackEvent
	{
		[Token(Token = "0x6000621")]
		[Address(RVA = "0x13EB2EC", Offset = "0x13EB2EC", VA = "0x13EB2EC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C3070", Offset = "0x8C3070")]
		add
		{
		}
		[Token(Token = "0x6000622")]
		[Address(RVA = "0x13EB3DC", Offset = "0x13EB3DC", VA = "0x13EB3DC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C3080", Offset = "0x8C3080")]
		remove
		{
		}
	}

	[Token(Token = "0x14000014")]
	public static event ChangeHandNessCallBack ChangeHandNessCallBackEvent
	{
		[Token(Token = "0x6000623")]
		[Address(RVA = "0x13EB4CC", Offset = "0x13EB4CC", VA = "0x13EB4CC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C3090", Offset = "0x8C3090")]
		add
		{
		}
		[Token(Token = "0x6000624")]
		[Address(RVA = "0x13EB5BC", Offset = "0x13EB5BC", VA = "0x13EB5BC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C30A0", Offset = "0x8C30A0")]
		remove
		{
		}
	}

	[Token(Token = "0x14000015")]
	public static event SetHbServiceBindState SetHbServiceBindStateEvent
	{
		[Token(Token = "0x6000625")]
		[Address(RVA = "0x13EB6AC", Offset = "0x13EB6AC", VA = "0x13EB6AC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C30B0", Offset = "0x8C30B0")]
		add
		{
		}
		[Token(Token = "0x6000626")]
		[Address(RVA = "0x13EB79C", Offset = "0x13EB79C", VA = "0x13EB79C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C30C0", Offset = "0x8C30C0")]
		remove
		{
		}
	}

	[Token(Token = "0x14000016")]
	public static event ControllerThreadStartedCallback ControllerThreadStartedCallbackEvent
	{
		[Token(Token = "0x6000627")]
		[Address(RVA = "0x13EB88C", Offset = "0x13EB88C", VA = "0x13EB88C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C30D0", Offset = "0x8C30D0")]
		add
		{
		}
		[Token(Token = "0x6000628")]
		[Address(RVA = "0x13EB97C", Offset = "0x13EB97C", VA = "0x13EB97C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C30E0", Offset = "0x8C30E0")]
		remove
		{
		}
	}

	[Token(Token = "0x14000017")]
	public static event SetControllerServiceBindState SetControllerServiceBindStateEvent
	{
		[Token(Token = "0x6000629")]
		[Address(RVA = "0x13EBA6C", Offset = "0x13EBA6C", VA = "0x13EBA6C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C30F0", Offset = "0x8C30F0")]
		add
		{
		}
		[Token(Token = "0x600062A")]
		[Address(RVA = "0x13EBB5C", Offset = "0x13EBB5C", VA = "0x13EBB5C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C3100", Offset = "0x8C3100")]
		remove
		{
		}
	}

	[Token(Token = "0x14000018")]
	public static event ControllerStatusChange ControllerStatusChangeEvent
	{
		[Token(Token = "0x600062B")]
		[Address(RVA = "0x13EBC4C", Offset = "0x13EBC4C", VA = "0x13EBC4C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C3110", Offset = "0x8C3110")]
		add
		{
		}
		[Token(Token = "0x600062C")]
		[Address(RVA = "0x13EBD3C", Offset = "0x13EBD3C", VA = "0x13EBD3C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C3120", Offset = "0x8C3120")]
		remove
		{
		}
	}

	[Token(Token = "0x14000019")]
	public static event SetControllerAbility SetControllerAbilityEvent
	{
		[Token(Token = "0x600062D")]
		[Address(RVA = "0x13EBE2C", Offset = "0x13EBE2C", VA = "0x13EBE2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C3130", Offset = "0x8C3130")]
		add
		{
		}
		[Token(Token = "0x600062E")]
		[Address(RVA = "0x13EBF1C", Offset = "0x13EBF1C", VA = "0x13EBF1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C3140", Offset = "0x8C3140")]
		remove
		{
		}
	}

	[Token(Token = "0x1400001A")]
	public static event SetControllerStateChanged SetControllerStateChangedEvent
	{
		[Token(Token = "0x600062F")]
		[Address(RVA = "0x13EC00C", Offset = "0x13EC00C", VA = "0x13EC00C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C3150", Offset = "0x8C3150")]
		add
		{
		}
		[Token(Token = "0x6000630")]
		[Address(RVA = "0x13EC0FC", Offset = "0x13EC0FC", VA = "0x13EC0FC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C3160", Offset = "0x8C3160")]
		remove
		{
		}
	}

	[Token(Token = "0x1400001B")]
	public static event SetHbControllerMac SetHbControllerMacEvent
	{
		[Token(Token = "0x6000631")]
		[Address(RVA = "0x13EC1EC", Offset = "0x13EC1EC", VA = "0x13EC1EC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C3170", Offset = "0x8C3170")]
		add
		{
		}
		[Token(Token = "0x6000632")]
		[Address(RVA = "0x13EC2DC", Offset = "0x13EC2DC", VA = "0x13EC2DC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C3180", Offset = "0x8C3180")]
		remove
		{
		}
	}

	[Token(Token = "0x1400001C")]
	public static event ControllerDeviceVersionCallback ControllerDeviceVersionCallbackEvent
	{
		[Token(Token = "0x6000633")]
		[Address(RVA = "0x13EC3CC", Offset = "0x13EC3CC", VA = "0x13EC3CC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C3190", Offset = "0x8C3190")]
		add
		{
		}
		[Token(Token = "0x6000634")]
		[Address(RVA = "0x13EC4BC", Offset = "0x13EC4BC", VA = "0x13EC4BC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C31A0", Offset = "0x8C31A0")]
		remove
		{
		}
	}

	[Token(Token = "0x1400001D")]
	public static event ControllerSnCodeCallback ControllerSnCodeCallbackEvent
	{
		[Token(Token = "0x6000635")]
		[Address(RVA = "0x13EC5AC", Offset = "0x13EC5AC", VA = "0x13EC5AC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C31B0", Offset = "0x8C31B0")]
		add
		{
		}
		[Token(Token = "0x6000636")]
		[Address(RVA = "0x13EC69C", Offset = "0x13EC69C", VA = "0x13EC69C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C31C0", Offset = "0x8C31C0")]
		remove
		{
		}
	}

	[Token(Token = "0x1400001E")]
	public static event ControllerUnbindCallback ControllerUnbindCallbackEvent
	{
		[Token(Token = "0x6000637")]
		[Address(RVA = "0x13EC78C", Offset = "0x13EC78C", VA = "0x13EC78C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C31D0", Offset = "0x8C31D0")]
		add
		{
		}
		[Token(Token = "0x6000638")]
		[Address(RVA = "0x13EC87C", Offset = "0x13EC87C", VA = "0x13EC87C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C31E0", Offset = "0x8C31E0")]
		remove
		{
		}
	}

	[Token(Token = "0x1400001F")]
	public static event ControllerStationStatusCallback ControllerStationStatusCallbackEvent
	{
		[Token(Token = "0x6000639")]
		[Address(RVA = "0x13EC96C", Offset = "0x13EC96C", VA = "0x13EC96C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C31F0", Offset = "0x8C31F0")]
		add
		{
		}
		[Token(Token = "0x600063A")]
		[Address(RVA = "0x13ECA5C", Offset = "0x13ECA5C", VA = "0x13ECA5C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C3200", Offset = "0x8C3200")]
		remove
		{
		}
	}

	[Token(Token = "0x14000020")]
	public static event ControllerStationBusyCallback ControllerStationBusyCallbackEvent
	{
		[Token(Token = "0x600063B")]
		[Address(RVA = "0x13ECB4C", Offset = "0x13ECB4C", VA = "0x13ECB4C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C3210", Offset = "0x8C3210")]
		add
		{
		}
		[Token(Token = "0x600063C")]
		[Address(RVA = "0x13ECC3C", Offset = "0x13ECC3C", VA = "0x13ECC3C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C3220", Offset = "0x8C3220")]
		remove
		{
		}
	}

	[Token(Token = "0x14000021")]
	public static event ControllerOtaStartCodeCallback ControllerOtaStartCodeCallbackEvent
	{
		[Token(Token = "0x600063D")]
		[Address(RVA = "0x13ECD2C", Offset = "0x13ECD2C", VA = "0x13ECD2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C3230", Offset = "0x8C3230")]
		add
		{
		}
		[Token(Token = "0x600063E")]
		[Address(RVA = "0x13ECE1C", Offset = "0x13ECE1C", VA = "0x13ECE1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C3240", Offset = "0x8C3240")]
		remove
		{
		}
	}

	[Token(Token = "0x14000022")]
	public static event ControllerDeviceVersionAndSNCallback ControllerDeviceVersionAndSNCallbackEvent
	{
		[Token(Token = "0x600063F")]
		[Address(RVA = "0x13ECF0C", Offset = "0x13ECF0C", VA = "0x13ECF0C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C3250", Offset = "0x8C3250")]
		add
		{
		}
		[Token(Token = "0x6000640")]
		[Address(RVA = "0x13ECFFC", Offset = "0x13ECFFC", VA = "0x13ECFFC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C3260", Offset = "0x8C3260")]
		remove
		{
		}
	}

	[Token(Token = "0x14000023")]
	public static event ControllerUniqueIDCallback ControllerUniqueIDCallbackEvent
	{
		[Token(Token = "0x6000641")]
		[Address(RVA = "0x13ED0EC", Offset = "0x13ED0EC", VA = "0x13ED0EC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C3270", Offset = "0x8C3270")]
		add
		{
		}
		[Token(Token = "0x6000642")]
		[Address(RVA = "0x13ED1DC", Offset = "0x13ED1DC", VA = "0x13ED1DC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C3280", Offset = "0x8C3280")]
		remove
		{
		}
	}

	[Token(Token = "0x14000024")]
	public static event ControllerCombinedKeyUnbindCallback ControllerCombinedKeyUnbindCallbackEvent
	{
		[Token(Token = "0x6000643")]
		[Address(RVA = "0x13ED2CC", Offset = "0x13ED2CC", VA = "0x13ED2CC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C3290", Offset = "0x8C3290")]
		add
		{
		}
		[Token(Token = "0x6000644")]
		[Address(RVA = "0x13ED3BC", Offset = "0x13ED3BC", VA = "0x13ED3BC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C32A0", Offset = "0x8C32A0")]
		remove
		{
		}
	}

	[Token(Token = "0x6000645")]
	[Address(RVA = "0x13ED4AC", Offset = "0x13ED4AC", VA = "0x13ED4AC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000646")]
	[Address(RVA = "0x13ED798", Offset = "0x13ED798", VA = "0x13ED798")]
	private void Start()
	{
	}

	[Token(Token = "0x6000647")]
	[Address(RVA = "0x13ED840", Offset = "0x13ED840", VA = "0x13ED840")]
	private void Update()
	{
	}

	[Token(Token = "0x6000648")]
	[Address(RVA = "0x13EF2BC", Offset = "0x13EF2BC", VA = "0x13EF2BC")]
	private void OnApplicationPause(bool pause)
	{
	}

	[Token(Token = "0x6000649")]
	[Address(RVA = "0x13EF914", Offset = "0x13EF914", VA = "0x13EF914")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600064A")]
	[Address(RVA = "0x13EF9F0", Offset = "0x13EF9F0", VA = "0x13EF9F0")]
	private void OnApplicationQuit()
	{
	}

	[Token(Token = "0x600064B")]
	[Address(RVA = "0x13EFB30", Offset = "0x13EFB30", VA = "0x13EFB30")]
	public void StopLark2Service()
	{
	}

	[Token(Token = "0x600064C")]
	[Address(RVA = "0x13EFBD4", Offset = "0x13EFBD4", VA = "0x13EFBD4")]
	public UnityEngine.Vector3 GetAngularVelocity(int num)
	{
		return default(UnityEngine.Vector3);
	}

	[Token(Token = "0x600064D")]
	[Address(RVA = "0x13EFCB4", Offset = "0x13EFCB4", VA = "0x13EFCB4")]
	public UnityEngine.Vector3 GetAcceleration(int num)
	{
		return default(UnityEngine.Vector3);
	}

	[Token(Token = "0x600064E")]
	[Address(RVA = "0x13ED6F4", Offset = "0x13ED6F4", VA = "0x13ED6F4")]
	public void BindService()
	{
	}

	[Token(Token = "0x600064F")]
	[Address(RVA = "0x13EFD94", Offset = "0x13EFD94", VA = "0x13EFD94")]
	public void StartScan()
	{
	}

	[Token(Token = "0x6000650")]
	[Address(RVA = "0x13EFE38", Offset = "0x13EFE38", VA = "0x13EFE38")]
	public void StopScan()
	{
	}

	[Token(Token = "0x6000651")]
	[Address(RVA = "0x13EFEDC", Offset = "0x13EFEDC", VA = "0x13EFEDC")]
	public void ResetController(int num)
	{
	}

	[Token(Token = "0x6000652")]
	[Address(RVA = "0x13EF690", Offset = "0x13EF690", VA = "0x13EF690")]
	public static int GetControllerConnectionState(int num)
	{
		return default(int);
	}

	[Token(Token = "0x6000653")]
	[Address(RVA = "0x13EFF88", Offset = "0x13EFF88", VA = "0x13EFF88")]
	public void ConnectBLE()
	{
	}

	[Token(Token = "0x6000654")]
	[Address(RVA = "0x13F002C", Offset = "0x13F002C", VA = "0x13F002C")]
	public void DisConnectBLE()
	{
	}

	[Token(Token = "0x6000655")]
	[Address(RVA = "0x13F00D0", Offset = "0x13F00D0", VA = "0x13F00D0")]
	public void SetBinPath(string path, bool isAsset)
	{
	}

	[Token(Token = "0x6000656")]
	[Address(RVA = "0x13F0190", Offset = "0x13F0190", VA = "0x13F0190")]
	public void StartUpgrade()
	{
	}

	[Token(Token = "0x6000657")]
	[Address(RVA = "0x13F0234", Offset = "0x13F0234", VA = "0x13F0234")]
	public static string GetBLEImageType()
	{
		return null;
	}

	[Token(Token = "0x6000658")]
	[Address(RVA = "0x13F02A4", Offset = "0x13F02A4", VA = "0x13F02A4")]
	public static long GetBLEVersion()
	{
		return default(long);
	}

	[Token(Token = "0x6000659")]
	[Address(RVA = "0x13F0314", Offset = "0x13F0314", VA = "0x13F0314")]
	public static string GetFileImageType()
	{
		return null;
	}

	[Token(Token = "0x600065A")]
	[Address(RVA = "0x13F0384", Offset = "0x13F0384", VA = "0x13F0384")]
	public static long GetFileVersion()
	{
		return default(long);
	}

	[Token(Token = "0x600065B")]
	[Address(RVA = "0x13F03F4", Offset = "0x13F03F4", VA = "0x13F03F4")]
	public static void AutoConnectHbController(int scans)
	{
	}

	[Token(Token = "0x600065C")]
	[Address(RVA = "0x13F04A0", Offset = "0x13F04A0", VA = "0x13F04A0")]
	public static string GetConnectedDeviceMac()
	{
		return null;
	}

	[Token(Token = "0x600065D")]
	[Address(RVA = "0x13F0554", Offset = "0x13F0554", VA = "0x13F0554")]
	public void setHbControllerMac(string mac)
	{
	}

	[Token(Token = "0x600065E")]
	[Address(RVA = "0x13F0AA0", Offset = "0x13F0AA0", VA = "0x13F0AA0")]
	public int GetControllerRSSI()
	{
		return default(int);
	}

	[Token(Token = "0x600065F")]
	[Address(RVA = "0x13F0B14", Offset = "0x13F0B14", VA = "0x13F0B14")]
	public void setHbServiceBindState(string state)
	{
	}

	[Token(Token = "0x6000660")]
	[Address(RVA = "0x13F0FA4", Offset = "0x13F0FA4", VA = "0x13F0FA4")]
	public void setControllerServiceBindState(string state)
	{
	}

	[Token(Token = "0x6000661")]
	[Address(RVA = "0x13F1434", Offset = "0x13F1434", VA = "0x13F1434")]
	public void setHbControllerConnectState(string isconnect)
	{
	}

	[Token(Token = "0x6000662")]
	[Address(RVA = "0x13F1DEC", Offset = "0x13F1DEC", VA = "0x13F1DEC")]
	public void setControllerStateChanged(string state)
	{
	}

	[Token(Token = "0x6000663")]
	[Address(RVA = "0x13F270C", Offset = "0x13F270C", VA = "0x13F270C")]
	public void setControllerAbility(string data)
	{
	}

	[Token(Token = "0x6000664")]
	[Address(RVA = "0x13F2B98", Offset = "0x13F2B98", VA = "0x13F2B98")]
	public void controllerThreadStartedCallback()
	{
	}

	[Token(Token = "0x6000665")]
	[Address(RVA = "0x13F31D4", Offset = "0x13F31D4", VA = "0x13F31D4")]
	public void controllerDeviceVersionCallback(string data)
	{
	}

	[Token(Token = "0x6000666")]
	[Address(RVA = "0x13F3660", Offset = "0x13F3660", VA = "0x13F3660")]
	public void controllerSnCodeCallback(string data)
	{
	}

	[Token(Token = "0x6000667")]
	[Address(RVA = "0x13F3AEC", Offset = "0x13F3AEC", VA = "0x13F3AEC")]
	public void controllerUnbindCallback(string status)
	{
	}

	[Token(Token = "0x6000668")]
	[Address(RVA = "0x13F3F78", Offset = "0x13F3F78", VA = "0x13F3F78")]
	public void controllerStationStatusCallback(string status)
	{
	}

	[Token(Token = "0x6000669")]
	[Address(RVA = "0x13F4404", Offset = "0x13F4404", VA = "0x13F4404")]
	public void controllerStationBusyCallback(string status)
	{
	}

	[Token(Token = "0x600066A")]
	[Address(RVA = "0x13F4890", Offset = "0x13F4890", VA = "0x13F4890")]
	public void controllerOTAStartCodeCallback(string data)
	{
	}

	[Token(Token = "0x600066B")]
	[Address(RVA = "0x13F4D1C", Offset = "0x13F4D1C", VA = "0x13F4D1C")]
	public void controllerDeviceVersionAndSNCallback(string data)
	{
	}

	[Token(Token = "0x600066C")]
	[Address(RVA = "0x13F51A8", Offset = "0x13F51A8", VA = "0x13F51A8")]
	public void controllerUniqueIDCallback(string data)
	{
	}

	[Token(Token = "0x600066D")]
	[Address(RVA = "0x13F5634", Offset = "0x13F5634", VA = "0x13F5634")]
	public void controllerCombinedKeyUnbindCallback(string controllerSerialNum)
	{
	}

	[Token(Token = "0x600066E")]
	[Address(RVA = "0x13F5A74", Offset = "0x13F5A74", VA = "0x13F5A74")]
	public void setupdateFailed()
	{
	}

	[Token(Token = "0x600066F")]
	[Address(RVA = "0x13F5A78", Offset = "0x13F5A78", VA = "0x13F5A78")]
	public void setupdateSuccess()
	{
	}

	[Token(Token = "0x6000670")]
	[Address(RVA = "0x13F5A7C", Offset = "0x13F5A7C", VA = "0x13F5A7C")]
	public void setupdateProgress(string progress)
	{
	}

	[Token(Token = "0x6000671")]
	[Address(RVA = "0x13F5A80", Offset = "0x13F5A80", VA = "0x13F5A80")]
	public void setHbAutoConnectState(string state)
	{
	}

	[Token(Token = "0x6000672")]
	[Address(RVA = "0x13F5D9C", Offset = "0x13F5D9C", VA = "0x13F5D9C")]
	public void callbackControllerServiceState(string state)
	{
	}

	[Token(Token = "0x6000673")]
	[Address(RVA = "0x13F5EF8", Offset = "0x13F5EF8", VA = "0x13F5EF8")]
	public void changeMainControllerCallback(string index)
	{
	}

	[Token(Token = "0x6000674")]
	[Address(RVA = "0x13F63D8", Offset = "0x13F63D8", VA = "0x13F63D8")]
	public void changeHandnessCallback(string index)
	{
	}

	[Token(Token = "0x6000675")]
	[Address(RVA = "0x13F5BD4", Offset = "0x13F5BD4", VA = "0x13F5BD4")]
	private void ShowToast(int type)
	{
	}

	[Token(Token = "0x6000676")]
	[Address(RVA = "0x13F68B8", Offset = "0x13F68B8", VA = "0x13F68B8")]
	private void HideToast()
	{
	}

	[Token(Token = "0x6000677")]
	[Address(RVA = "0x13F6960", Offset = "0x13F6960", VA = "0x13F6960")]
	private void CheckControllerService()
	{
	}

	[Token(Token = "0x6000678")]
	[Address(RVA = "0x13F2CD0", Offset = "0x13F2CD0", VA = "0x13F2CD0")]
	private void GetCVControllerState()
	{
	}

	[Token(Token = "0x6000679")]
	[Address(RVA = "0x13EEBB4", Offset = "0x13EEBB4", VA = "0x13EEBB4")]
	private void SetSystemKey()
	{
	}

	[Token(Token = "0x600067A")]
	[Address(RVA = "0x13EE7E8", Offset = "0x13EE7E8", VA = "0x13EE7E8")]
	private void TransformData(ControllerHand hand, int handId, int[] data)
	{
	}

	[Token(Token = "0x600067B")]
	[Address(RVA = "0x13F6974", Offset = "0x13F6974", VA = "0x13F6974")]
	private void TransSingleKey(PvrControllerKey key, int beginIndex, int[] data)
	{
	}

	[Token(Token = "0x600067C")]
	[Address(RVA = "0x13F6AC4", Offset = "0x13F6AC4", VA = "0x13F6AC4")]
	private void TransformTouchData(ControllerHand hand, int handId, int[] data)
	{
	}

	[Token(Token = "0x600067D")]
	[Address(RVA = "0x13F6B68", Offset = "0x13F6B68", VA = "0x13F6B68")]
	private void TransSingleTouchValue(PvrControllerKey key, int beginIndex, int[] data)
	{
	}

	[Token(Token = "0x600067E")]
	[Address(RVA = "0x13F6C68", Offset = "0x13F6C68", VA = "0x13F6C68")]
	public Pvr_ControllerManager()
	{
	}
}
[Token(Token = "0x2000114")]
public class Pvr_ControllerModuleInit : MonoBehaviour
{
	[Token(Token = "0x20006A4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B7B84", Offset = "0x8B7B84")]
	private sealed class <ShowOrHideRay>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002237")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002238")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002239")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Pvr_ControllerModuleInit <>4__this;

		[Token(Token = "0x400223A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int id;

		[Token(Token = "0x1700047B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002891")]
			[Address(RVA = "0x13F7ABC", Offset = "0x13F7ABC", VA = "0x13F7ABC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700047C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002893")]
			[Address(RVA = "0x13F7B24", Offset = "0x13F7B24", VA = "0x13F7B24", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600288E")]
		[Address(RVA = "0x13F76A8", Offset = "0x13F76A8", VA = "0x13F76A8")]
		[DebuggerHidden]
		public <ShowOrHideRay>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x600288F")]
		[Address(RVA = "0x13F79EC", Offset = "0x13F79EC", VA = "0x13F79EC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002890")]
		[Address(RVA = "0x13F79F0", Offset = "0x13F79F0", VA = "0x13F79F0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002892")]
		[Address(RVA = "0x13F7AC4", Offset = "0x13F7AC4", VA = "0x13F7AC4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40005FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ControllerVariety Variety;

	[Token(Token = "0x4000600")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool IsCustomModel;

	[Token(Token = "0x4000601")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject dot;

	[Token(Token = "0x4000602")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject rayLine;

	[Token(Token = "0x4000603")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject controller;

	[Token(Token = "0x4000604")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool moduleState;

	[Token(Token = "0x6000680")]
	[Address(RVA = "0x13F723C", Offset = "0x13F723C", VA = "0x13F723C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000681")]
	[Address(RVA = "0x13F73C4", Offset = "0x13F73C4", VA = "0x13F73C4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000682")]
	[Address(RVA = "0x13F74AC", Offset = "0x13F74AC", VA = "0x13F74AC")]
	private void ServiceStartSuccess()
	{
	}

	[Token(Token = "0x6000683")]
	[Address(RVA = "0x13F7520", Offset = "0x13F7520", VA = "0x13F7520")]
	private void ControllerStateChanged(string data)
	{
	}

	[Token(Token = "0x6000684")]
	[Address(RVA = "0x13F7624", Offset = "0x13F7624", VA = "0x13F7624")]
	private void MainControllerIDChanged(string data)
	{
	}

	[Token(Token = "0x6000685")]
	[Address(RVA = "0x13F74B0", Offset = "0x13F74B0", VA = "0x13F74B0")]
	private void RefreshRay()
	{
	}

	[Token(Token = "0x6000686")]
	[Address(RVA = "0x13F7628", Offset = "0x13F7628", VA = "0x13F7628")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C32B0", Offset = "0x8C32B0")]
	private IEnumerator ShowOrHideRay(int id)
	{
		return null;
	}

	[Token(Token = "0x6000687")]
	[Address(RVA = "0x13F76D4", Offset = "0x13F76D4", VA = "0x13F76D4")]
	public void ForceHideOrShow(bool state)
	{
	}

	[Token(Token = "0x6000688")]
	[Address(RVA = "0x13F77D0", Offset = "0x13F77D0", VA = "0x13F77D0")]
	public void UpdateRay()
	{
	}

	[Token(Token = "0x6000689")]
	[Address(RVA = "0x13F79DC", Offset = "0x13F79DC", VA = "0x13F79DC")]
	public Pvr_ControllerModuleInit()
	{
	}
}
[Token(Token = "0x2000115")]
public class Pvr_ControllerPower : MonoBehaviour
{
	[Token(Token = "0x4000605")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Sprite power1;

	[Token(Token = "0x4000606")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Sprite power2;

	[Token(Token = "0x4000607")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Sprite power3;

	[Token(Token = "0x4000608")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Sprite power4;

	[Token(Token = "0x4000609")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Sprite power5;

	[Token(Token = "0x400060A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[HideInInspector]
	public ControllerVariety variety;

	[Token(Token = "0x400060B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[HideInInspector]
	public ControllerDevice currentDevice;

	[Token(Token = "0x400060C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Image powerImage;

	[Token(Token = "0x400060D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int powerValue;

	[Token(Token = "0x400060E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float power;

	[Token(Token = "0x600068A")]
	[Address(RVA = "0x13F7B2C", Offset = "0x13F7B2C", VA = "0x13F7B2C")]
	private void Start()
	{
	}

	[Token(Token = "0x600068B")]
	[Address(RVA = "0x13F7BF4", Offset = "0x13F7BF4", VA = "0x13F7BF4")]
	private void Update()
	{
	}

	[Token(Token = "0x600068C")]
	[Address(RVA = "0x13F7C14", Offset = "0x13F7C14", VA = "0x13F7C14")]
	private void RefreshPower(int hand)
	{
	}

	[Token(Token = "0x600068D")]
	[Address(RVA = "0x13F7D34", Offset = "0x13F7D34", VA = "0x13F7D34")]
	public Pvr_ControllerPower()
	{
	}
}
[Token(Token = "0x2000116")]
public class Pvr_ControllerVisual : MonoBehaviour
{
	[Token(Token = "0x400060F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ControllerDevice currentDevice;

	[Token(Token = "0x4000610")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Texture2D m_idle;

	[Token(Token = "0x4000611")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Texture2D m_app;

	[Token(Token = "0x4000612")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Texture2D m_home;

	[Token(Token = "0x4000613")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Texture2D m_touchpad;

	[Token(Token = "0x4000614")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Texture2D m_volUp;

	[Token(Token = "0x4000615")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Texture2D m_volDn;

	[Token(Token = "0x4000616")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Texture2D m_trigger;

	[Token(Token = "0x4000617")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Texture2D m_a;

	[Token(Token = "0x4000618")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Texture2D m_b;

	[Token(Token = "0x4000619")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Texture2D m_x;

	[Token(Token = "0x400061A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Texture2D m_y;

	[Token(Token = "0x400061B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Texture2D m_grip;

	[Token(Token = "0x400061C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Renderer controllerRenderMat;

	[Token(Token = "0x400061D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[HideInInspector]
	public ControllerVariety variety;

	[Token(Token = "0x600068E")]
	[Address(RVA = "0x13F7D3C", Offset = "0x13F7D3C", VA = "0x13F7D3C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600068F")]
	[Address(RVA = "0x13F7D94", Offset = "0x13F7D94", VA = "0x13F7D94")]
	private void Start()
	{
	}

	[Token(Token = "0x6000690")]
	[Address(RVA = "0x13F7E04", Offset = "0x13F7E04", VA = "0x13F7E04")]
	private void Update()
	{
	}

	[Token(Token = "0x6000691")]
	[Address(RVA = "0x13F7E24", Offset = "0x13F7E24", VA = "0x13F7E24")]
	private void ChangeKeyEffects(int hand)
	{
	}

	[Token(Token = "0x6000692")]
	[Address(RVA = "0x13F8150", Offset = "0x13F8150", VA = "0x13F8150")]
	public Pvr_ControllerVisual()
	{
	}
}
[Token(Token = "0x2000117")]
public class Pvr_ToolTips : MonoBehaviour
{
	[Token(Token = "0x20006A5")]
	public enum TipBtn
	{
		[Token(Token = "0x400223C")]
		app,
		[Token(Token = "0x400223D")]
		touchpad,
		[Token(Token = "0x400223E")]
		home,
		[Token(Token = "0x400223F")]
		volup,
		[Token(Token = "0x4002240")]
		voldown,
		[Token(Token = "0x4002241")]
		trigger,
		[Token(Token = "0x4002242")]
		grip
	}

	[Token(Token = "0x400061E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ControllerDevice currentDevice;

	[Token(Token = "0x400061F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float tipsAlpha;

	[Token(Token = "0x4000620")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Pvr_ToolTips tooltips;

	[Token(Token = "0x6000693")]
	[Address(RVA = "0xFEF1BC", Offset = "0xFEF1BC", VA = "0xFEF1BC")]
	public void ChangeTipsText(TipBtn tip, string key)
	{
	}

	[Token(Token = "0x6000694")]
	[Address(RVA = "0xFEF334", Offset = "0xFEF334", VA = "0xFEF334")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000695")]
	[Address(RVA = "0xFEF3AC", Offset = "0xFEF3AC", VA = "0xFEF3AC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000696")]
	[Address(RVA = "0xFEF5B0", Offset = "0xFEF5B0", VA = "0xFEF5B0")]
	private void LoadTextFromJson()
	{
	}

	[Token(Token = "0x6000697")]
	[Address(RVA = "0xFEF9FC", Offset = "0xFEF9FC", VA = "0xFEF9FC")]
	public static void RefreshTips()
	{
	}

	[Token(Token = "0x6000698")]
	[Address(RVA = "0xFEFAA0", Offset = "0xFEFAA0", VA = "0xFEFAA0")]
	public Pvr_ToolTips()
	{
	}
}
[Token(Token = "0x2000118")]
public class Pvr_TouchPadScroll : MonoBehaviour
{
	[Token(Token = "0x4000621")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ScrollRect scrollRect;

	[Token(Token = "0x4000622")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool isHoving;

	[Token(Token = "0x4000623")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int mainHand;

	[Token(Token = "0x4000624")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private SwipeDirection direction;

	[Token(Token = "0x4000625")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private UnityEngine.Vector2 currPos;

	[Token(Token = "0x4000626")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private UnityEngine.Vector2 tarPos;

	[Token(Token = "0x4000627")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float lerpSpeed;

	[Token(Token = "0x4000628")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Transform tranViewport;

	[Token(Token = "0x4000629")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float ignoreDis;

	[Token(Token = "0x400062A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private UnityEngine.Vector2 lastTouchDownPos;

	[Token(Token = "0x400062B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private UnityEngine.Vector2 lastTouchUpPos;

	[Token(Token = "0x400062C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private bool isTouching;

	[Token(Token = "0x400062D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5D")]
	private bool isClosed;

	[Token(Token = "0x400062E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private UnityEngine.Vector2 vecOrigin;

	[Token(Token = "0x400062F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private UnityEngine.Vector2 vecOriginNeo2;

	[Token(Token = "0x6000699")]
	[Address(RVA = "0xFEFAA8", Offset = "0xFEFAA8", VA = "0xFEFAA8")]
	private void Awake()
	{
	}

	[Token(Token = "0x600069A")]
	[Address(RVA = "0xFEFB38", Offset = "0xFEFB38", VA = "0xFEFB38")]
	private void Update()
	{
	}

	[Token(Token = "0x600069B")]
	[Address(RVA = "0xFEFFD0", Offset = "0xFEFFD0", VA = "0xFEFFD0")]
	private bool IsControllerConnect()
	{
		return default(bool);
	}

	[Token(Token = "0x600069C")]
	[Address(RVA = "0xFEFC80", Offset = "0xFEFC80", VA = "0xFEFC80")]
	private void UpdateTargetPos()
	{
	}

	[Token(Token = "0x600069D")]
	[Address(RVA = "0xFF0C94", Offset = "0xFF0C94", VA = "0xFF0C94")]
	private void ComputeTouchPos()
	{
	}

	[Token(Token = "0x600069E")]
	[Address(RVA = "0xFF0FD8", Offset = "0xFF0FD8", VA = "0xFF0FD8")]
	private void ComputeRockerPos()
	{
	}

	[Token(Token = "0x600069F")]
	[Address(RVA = "0xFF144C", Offset = "0xFF144C", VA = "0xFF144C")]
	private bool VerifyNeo2TouchValid(UnityEngine.Vector2 nowTouchPos)
	{
		return default(bool);
	}

	[Token(Token = "0x60006A0")]
	[Address(RVA = "0xFEFDCC", Offset = "0xFEFDCC", VA = "0xFEFDCC")]
	private void UpdatePos()
	{
	}

	[Token(Token = "0x60006A1")]
	[Address(RVA = "0xFF0BB8", Offset = "0xFF0BB8", VA = "0xFF0BB8")]
	private void ResetParameter()
	{
	}

	[Token(Token = "0x60006A2")]
	[Address(RVA = "0xFEFB64", Offset = "0xFEFB64", VA = "0xFEFB64")]
	private void Process()
	{
	}

	[Token(Token = "0x60006A3")]
	[Address(RVA = "0xFF1488", Offset = "0xFF1488", VA = "0xFF1488")]
	private bool IsHovering(Pvr_UIPointer pointer)
	{
		return default(bool);
	}

	[Token(Token = "0x60006A4")]
	[Address(RVA = "0xFF1674", Offset = "0xFF1674", VA = "0xFF1674")]
	private bool FindTree(Transform tran)
	{
		return default(bool);
	}

	[Token(Token = "0x60006A5")]
	[Address(RVA = "0xFF1760", Offset = "0xFF1760", VA = "0xFF1760")]
	public Pvr_TouchPadScroll()
	{
	}
}
[Token(Token = "0x2000119")]
public class Pvr_TouchVisual : MonoBehaviour
{
	[Token(Token = "0x4000630")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public ControllerDevice currentDevice;

	[Token(Token = "0x4000631")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[HideInInspector]
	public ControllerVariety variety;

	[Token(Token = "0x4000632")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private MeshRenderer touchRenderer;

	[Token(Token = "0x60006A6")]
	[Address(RVA = "0xFF181C", Offset = "0xFF181C", VA = "0xFF181C")]
	private void Start()
	{
	}

	[Token(Token = "0x60006A7")]
	[Address(RVA = "0xFF18C4", Offset = "0xFF18C4", VA = "0xFF18C4")]
	private void Update()
	{
	}

	[Token(Token = "0x60006A8")]
	[Address(RVA = "0xFF18E4", Offset = "0xFF18E4", VA = "0xFF18E4")]
	private void ChangeEffects(int hand)
	{
	}

	[Token(Token = "0x60006A9")]
	[Address(RVA = "0xFF1BB4", Offset = "0xFF1BB4", VA = "0xFF1BB4")]
	public Pvr_TouchVisual()
	{
	}
}
[Token(Token = "0x200011A")]
public class DemoController : MonoBehaviour
{
	[Token(Token = "0x20006A6")]
	public delegate void showLoadingEventHandler();

	[Token(Token = "0x20006A7")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B7B94", Offset = "0x8B7B94")]
	private sealed class <>c__DisplayClass12_0
	{
		[Token(Token = "0x4002243")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject btnObj;

		[Token(Token = "0x4002244")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public DemoController <>4__this;

		[Token(Token = "0x6002898")]
		[Address(RVA = "0xB144BC", Offset = "0xB144BC", VA = "0xB144BC")]
		public <>c__DisplayClass12_0()
		{
		}

		[Token(Token = "0x6002899")]
		[Address(RVA = "0xB14CE0", Offset = "0xB14CE0", VA = "0xB14CE0")]
		internal void <InitDelegate>b__0()
		{
		}
	}

	[Token(Token = "0x4000633")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Callback callback;

	[Token(Token = "0x4000634")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject msg;

	[Token(Token = "0x4000635")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Pvr_UnitySDKManager picoVrManager;

	[Token(Token = "0x4000636")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private string currentOrderID;

	[Token(Token = "0x4000637")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject loading;

	[Token(Token = "0x4000638")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject BG;

	[Token(Token = "0x4000639")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject InputPanel;

	[Token(Token = "0x400063A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static showLoadingEventHandler showLoading;

	[Token(Token = "0x60006AA")]
	[Address(RVA = "0xB13D2C", Offset = "0xB13D2C", VA = "0xB13D2C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60006AB")]
	[Address(RVA = "0xB13EDC", Offset = "0xB13EDC", VA = "0xB13EDC")]
	private void Start()
	{
	}

	[Token(Token = "0x60006AC")]
	[Address(RVA = "0xB14358", Offset = "0xB14358", VA = "0xB14358")]
	private void Update()
	{
	}

	[Token(Token = "0x60006AD")]
	[Address(RVA = "0xB13FA0", Offset = "0xB13FA0", VA = "0xB13FA0")]
	private void InitDelegate()
	{
	}

	[Token(Token = "0x60006AE")]
	[Address(RVA = "0xB144C4", Offset = "0xB144C4", VA = "0xB144C4")]
	private void OnClick(GameObject btnObj)
	{
	}

	[Token(Token = "0x60006AF")]
	[Address(RVA = "0xB147F4", Offset = "0xB147F4", VA = "0xB147F4")]
	public string getRamdomTestOrderID()
	{
		return null;
	}

	[Token(Token = "0x60006B0")]
	[Address(RVA = "0xB147B0", Offset = "0xB147B0", VA = "0xB147B0")]
	private void StartLoading()
	{
	}

	[Token(Token = "0x60006B1")]
	[Address(RVA = "0xB14838", Offset = "0xB14838", VA = "0xB14838")]
	public void StopLoading()
	{
	}

	[Token(Token = "0x60006B2")]
	[Address(RVA = "0xB14948", Offset = "0xB14948", VA = "0xB14948")]
	public void DoPayByCode()
	{
	}

	[Token(Token = "0x60006B3")]
	[Address(RVA = "0xB14C08", Offset = "0xB14C08", VA = "0xB14C08")]
	private bool VerifyLocalToken()
	{
		return default(bool);
	}

	[Token(Token = "0x60006B4")]
	[Address(RVA = "0xB14CD8", Offset = "0xB14CD8", VA = "0xB14CD8")]
	public DemoController()
	{
	}
}
[Token(Token = "0x200011B")]
public class LoadingRatation : MonoBehaviour
{
	[Token(Token = "0x60006B5")]
	[Address(RVA = "0xAE4224", Offset = "0xAE4224", VA = "0xAE4224")]
	private void Start()
	{
	}

	[Token(Token = "0x60006B6")]
	[Address(RVA = "0xAE4228", Offset = "0xAE4228", VA = "0xAE4228")]
	private void Update()
	{
	}

	[Token(Token = "0x60006B7")]
	[Address(RVA = "0xAE429C", Offset = "0xAE429C", VA = "0xAE429C")]
	public LoadingRatation()
	{
	}
}
[Token(Token = "0x200011C")]
public class InputManager : MonoBehaviour
{
	[Token(Token = "0x20006A8")]
	public delegate void doEnterEventHandler();

	[Token(Token = "0x20006A9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B7BA4", Offset = "0x8B7BA4")]
	private sealed class <>c__DisplayClass8_0
	{
		[Token(Token = "0x4002245")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject btnObj;

		[Token(Token = "0x4002246")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InputManager <>4__this;

		[Token(Token = "0x600289E")]
		[Address(RVA = "0xADA4CC", Offset = "0xADA4CC", VA = "0xADA4CC")]
		public <>c__DisplayClass8_0()
		{
		}

		[Token(Token = "0x600289F")]
		[Address(RVA = "0xADB0A4", Offset = "0xADB0A4", VA = "0xADB0A4")]
		internal void <InitKeyBoard>b__0()
		{
		}
	}

	[Token(Token = "0x400063B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static doEnterEventHandler doEnter;

	[Token(Token = "0x400063C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private StringBuilder sb;

	[Token(Token = "0x400063D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ArrayList btnsName;

	[Token(Token = "0x400063E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameObject enter;

	[Token(Token = "0x60006B8")]
	[Address(RVA = "0xAD9BF0", Offset = "0xAD9BF0", VA = "0xAD9BF0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60006B9")]
	[Address(RVA = "0xADA4C4", Offset = "0xADA4C4", VA = "0xADA4C4")]
	private void Start()
	{
	}

	[Token(Token = "0x60006BA")]
	[Address(RVA = "0xADA4C8", Offset = "0xADA4C8", VA = "0xADA4C8")]
	private void Update()
	{
	}

	[Token(Token = "0x60006BB")]
	[Address(RVA = "0xAD9BF4", Offset = "0xAD9BF4", VA = "0xAD9BF4")]
	private void InitKeyBoard()
	{
	}

	[Token(Token = "0x60006BC")]
	[Address(RVA = "0xADA4D4", Offset = "0xADA4D4", VA = "0xADA4D4")]
	private void OnClick(GameObject btnObj)
	{
	}

	[Token(Token = "0x60006BD")]
	[Address(RVA = "0xADAF30", Offset = "0xADAF30", VA = "0xADAF30")]
	private void EnterChar(string s)
	{
	}

	[Token(Token = "0x60006BE")]
	[Address(RVA = "0xADA708", Offset = "0xADA708", VA = "0xADA708")]
	private void DoCapslock(bool IsUpper)
	{
	}

	[Token(Token = "0x60006BF")]
	[Address(RVA = "0xADACB4", Offset = "0xADACB4", VA = "0xADACB4")]
	private void ClearBuffer()
	{
	}

	[Token(Token = "0x60006C0")]
	[Address(RVA = "0xADB01C", Offset = "0xADB01C", VA = "0xADB01C")]
	public InputManager()
	{
	}
}
[Token(Token = "0x200011D")]
public class Callback : MonoBehaviour
{
	[Token(Token = "0x400063F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string IS_SUCCESS;

	[Token(Token = "0x4000640")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static string MSG;

	[Token(Token = "0x4000641")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static string CODE;

	[Token(Token = "0x60006C1")]
	[Address(RVA = "0xB03B40", Offset = "0xB03B40", VA = "0xB03B40")]
	public void LoginCallback(string LoginInfo)
	{
	}

	[Token(Token = "0x60006C2")]
	[Address(RVA = "0xB040E4", Offset = "0xB040E4", VA = "0xB040E4")]
	public void QueryOrPayCallback(string queryOrPayInfo)
	{
	}

	[Token(Token = "0x60006C3")]
	[Address(RVA = "0xB042F4", Offset = "0xB042F4", VA = "0xB042F4")]
	public void UserInfoCallback(string userInfo)
	{
	}

	[Token(Token = "0x60006C4")]
	[Address(RVA = "0xB03D4C", Offset = "0xB03D4C", VA = "0xB03D4C")]
	public void SetMassage(string massage)
	{
	}

	[Token(Token = "0x60006C5")]
	[Address(RVA = "0xB043C0", Offset = "0xB043C0", VA = "0xB043C0")]
	public GameObject GetCurrentGameObject()
	{
		return null;
	}

	[Token(Token = "0x60006C6")]
	[Address(RVA = "0xB0440C", Offset = "0xB0440C", VA = "0xB0440C")]
	public void ActivityForResultCallback(string activity)
	{
	}

	[Token(Token = "0x60006C7")]
	[Address(RVA = "0xB04534", Offset = "0xB04534", VA = "0xB04534")]
	public Callback()
	{
	}
}
[Token(Token = "0x200011E")]
public class CommonDic
{
	[Token(Token = "0x4000642")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static CommonDic dic;

	[Token(Token = "0x4000643")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Dictionary<string, string> mydic;

	[Token(Token = "0x4000644")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private string _app_ID;

	[Token(Token = "0x4000645")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private string _app_Key;

	[Token(Token = "0x4000646")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private string _user_token;

	[Token(Token = "0x4000647")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string _access_token;

	[Token(Token = "0x4000648")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private string _open_id;

	[Token(Token = "0x4000649")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private string _refresh_token;

	[Token(Token = "0x400064A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private string _expires_in;

	[Token(Token = "0x400064B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private string _user_info;

	[Token(Token = "0x400064C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private string _subject;

	[Token(Token = "0x400064D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private string _body;

	[Token(Token = "0x400064E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private string _order_id;

	[Token(Token = "0x400064F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private string _total;

	[Token(Token = "0x4000650")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private string _goods_tag;

	[Token(Token = "0x4000651")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private string _notify_url;

	[Token(Token = "0x4000652")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private string _trade_type;

	[Token(Token = "0x4000653")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private string _pay_code;

	[Token(Token = "0x4000654")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private string _order_info;

	[Token(Token = "0x4000655")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private string _code;

	[Token(Token = "0x4000656")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private string _msg;

	[Token(Token = "0x4000657")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private string _merchant_ID;

	[Token(Token = "0x4000658")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private string _payKey;

	[Token(Token = "0x4000659")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private string _isSuucess;

	[Token(Token = "0x400065A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private string _loginMsg;

	[Token(Token = "0x17000069")]
	public string subject
	{
		[Token(Token = "0x60006CD")]
		[Address(RVA = "0xB09C8C", Offset = "0xB09C8C", VA = "0xB09C8C")]
		get
		{
			return null;
		}
		[Token(Token = "0x60006CE")]
		[Address(RVA = "0xB09C94", Offset = "0xB09C94", VA = "0xB09C94")]
		set
		{
		}
	}

	[Token(Token = "0x1700006A")]
	public string body
	{
		[Token(Token = "0x60006CF")]
		[Address(RVA = "0xB09C9C", Offset = "0xB09C9C", VA = "0xB09C9C")]
		get
		{
			return null;
		}
		[Token(Token = "0x60006D0")]
		[Address(RVA = "0xB09CA4", Offset = "0xB09CA4", VA = "0xB09CA4")]
		set
		{
		}
	}

	[Token(Token = "0x1700006B")]
	public string order_id
	{
		[Token(Token = "0x60006D1")]
		[Address(RVA = "0xB09CAC", Offset = "0xB09CAC", VA = "0xB09CAC")]
		get
		{
			return null;
		}
		[Token(Token = "0x60006D2")]
		[Address(RVA = "0xB09CB4", Offset = "0xB09CB4", VA = "0xB09CB4")]
		set
		{
		}
	}

	[Token(Token = "0x1700006C")]
	public string total
	{
		[Token(Token = "0x60006D3")]
		[Address(RVA = "0xB09CBC", Offset = "0xB09CBC", VA = "0xB09CBC")]
		get
		{
			return null;
		}
		[Token(Token = "0x60006D4")]
		[Address(RVA = "0xB09CC4", Offset = "0xB09CC4", VA = "0xB09CC4")]
		set
		{
		}
	}

	[Token(Token = "0x1700006D")]
	public string goods_tag
	{
		[Token(Token = "0x60006D5")]
		[Address(RVA = "0xB09CCC", Offset = "0xB09CCC", VA = "0xB09CCC")]
		get
		{
			return null;
		}
		[Token(Token = "0x60006D6")]
		[Address(RVA = "0xB09CD4", Offset = "0xB09CD4", VA = "0xB09CD4")]
		set
		{
		}
	}

	[Token(Token = "0x1700006E")]
	public string notify_url
	{
		[Token(Token = "0x60006D7")]
		[Address(RVA = "0xB09CDC", Offset = "0xB09CDC", VA = "0xB09CDC")]
		get
		{
			return null;
		}
		[Token(Token = "0x60006D8")]
		[Address(RVA = "0xB09CE4", Offset = "0xB09CE4", VA = "0xB09CE4")]
		set
		{
		}
	}

	[Token(Token = "0x1700006F")]
	public string pay_code
	{
		[Token(Token = "0x60006D9")]
		[Address(RVA = "0xB09CEC", Offset = "0xB09CEC", VA = "0xB09CEC")]
		get
		{
			return null;
		}
		[Token(Token = "0x60006DA")]
		[Address(RVA = "0xB09CF4", Offset = "0xB09CF4", VA = "0xB09CF4")]
		set
		{
		}
	}

	[Token(Token = "0x17000070")]
	public string trade_type
	{
		[Token(Token = "0x60006DB")]
		[Address(RVA = "0xB09CFC", Offset = "0xB09CFC", VA = "0xB09CFC")]
		get
		{
			return null;
		}
		[Token(Token = "0x60006DC")]
		[Address(RVA = "0xB09D04", Offset = "0xB09D04", VA = "0xB09D04")]
		set
		{
		}
	}

	[Token(Token = "0x17000071")]
	public string user_token
	{
		[Token(Token = "0x60006DD")]
		[Address(RVA = "0xB09D0C", Offset = "0xB09D0C", VA = "0xB09D0C")]
		get
		{
			return null;
		}
		[Token(Token = "0x60006DE")]
		[Address(RVA = "0xB09D14", Offset = "0xB09D14", VA = "0xB09D14")]
		set
		{
		}
	}

	[Token(Token = "0x17000072")]
	public string access_token
	{
		[Token(Token = "0x60006DF")]
		[Address(RVA = "0xB09D1C", Offset = "0xB09D1C", VA = "0xB09D1C")]
		get
		{
			return null;
		}
		[Token(Token = "0x60006E0")]
		[Address(RVA = "0xB09D24", Offset = "0xB09D24", VA = "0xB09D24")]
		set
		{
		}
	}

	[Token(Token = "0x17000073")]
	public string open_id
	{
		[Token(Token = "0x60006E1")]
		[Address(RVA = "0xB09D2C", Offset = "0xB09D2C", VA = "0xB09D2C")]
		get
		{
			return null;
		}
		[Token(Token = "0x60006E2")]
		[Address(RVA = "0xB09D34", Offset = "0xB09D34", VA = "0xB09D34")]
		set
		{
		}
	}

	[Token(Token = "0x17000074")]
	public string refresh_token
	{
		[Token(Token = "0x60006E3")]
		[Address(RVA = "0xB09D3C", Offset = "0xB09D3C", VA = "0xB09D3C")]
		get
		{
			return null;
		}
		[Token(Token = "0x60006E4")]
		[Address(RVA = "0xB09D44", Offset = "0xB09D44", VA = "0xB09D44")]
		set
		{
		}
	}

	[Token(Token = "0x17000075")]
	public string expires_in
	{
		[Token(Token = "0x60006E5")]
		[Address(RVA = "0xB09D4C", Offset = "0xB09D4C", VA = "0xB09D4C")]
		get
		{
			return null;
		}
		[Token(Token = "0x60006E6")]
		[Address(RVA = "0xB09D54", Offset = "0xB09D54", VA = "0xB09D54")]
		set
		{
		}
	}

	[Token(Token = "0x17000076")]
	public string isSuccess
	{
		[Token(Token = "0x60006E7")]
		[Address(RVA = "0xB09D5C", Offset = "0xB09D5C", VA = "0xB09D5C")]
		get
		{
			return null;
		}
		[Token(Token = "0x60006E8")]
		[Address(RVA = "0xB09D64", Offset = "0xB09D64", VA = "0xB09D64")]
		set
		{
		}
	}

	[Token(Token = "0x17000077")]
	public string loginMsg
	{
		[Token(Token = "0x60006E9")]
		[Address(RVA = "0xB09D6C", Offset = "0xB09D6C", VA = "0xB09D6C")]
		get
		{
			return null;
		}
		[Token(Token = "0x60006EA")]
		[Address(RVA = "0xB09D74", Offset = "0xB09D74", VA = "0xB09D74")]
		set
		{
		}
	}

	[Token(Token = "0x17000078")]
	public string user_info
	{
		[Token(Token = "0x60006EB")]
		[Address(RVA = "0xB09D7C", Offset = "0xB09D7C", VA = "0xB09D7C")]
		get
		{
			return null;
		}
		[Token(Token = "0x60006EC")]
		[Address(RVA = "0xB09D84", Offset = "0xB09D84", VA = "0xB09D84")]
		set
		{
		}
	}

	[Token(Token = "0x17000079")]
	public string order_info
	{
		[Token(Token = "0x60006ED")]
		[Address(RVA = "0xB09D8C", Offset = "0xB09D8C", VA = "0xB09D8C")]
		get
		{
			return null;
		}
		[Token(Token = "0x60006EE")]
		[Address(RVA = "0xB09D94", Offset = "0xB09D94", VA = "0xB09D94")]
		set
		{
		}
	}

	[Token(Token = "0x1700007A")]
	public string code
	{
		[Token(Token = "0x60006EF")]
		[Address(RVA = "0xB09D9C", Offset = "0xB09D9C", VA = "0xB09D9C")]
		get
		{
			return null;
		}
		[Token(Token = "0x60006F0")]
		[Address(RVA = "0xB09DA4", Offset = "0xB09DA4", VA = "0xB09DA4")]
		set
		{
		}
	}

	[Token(Token = "0x1700007B")]
	public string msg
	{
		[Token(Token = "0x60006F1")]
		[Address(RVA = "0xB09DAC", Offset = "0xB09DAC", VA = "0xB09DAC")]
		get
		{
			return null;
		}
		[Token(Token = "0x60006F2")]
		[Address(RVA = "0xB09DB4", Offset = "0xB09DB4", VA = "0xB09DB4")]
		set
		{
		}
	}

	[Token(Token = "0x1700007C")]
	public string app_ID
	{
		[Token(Token = "0x60006F3")]
		[Address(RVA = "0xB09DBC", Offset = "0xB09DBC", VA = "0xB09DBC")]
		get
		{
			return null;
		}
		[Token(Token = "0x60006F4")]
		[Address(RVA = "0xB09DC4", Offset = "0xB09DC4", VA = "0xB09DC4")]
		set
		{
		}
	}

	[Token(Token = "0x1700007D")]
	public string app_Key
	{
		[Token(Token = "0x60006F5")]
		[Address(RVA = "0xB09DCC", Offset = "0xB09DCC", VA = "0xB09DCC")]
		get
		{
			return null;
		}
		[Token(Token = "0x60006F6")]
		[Address(RVA = "0xB09DD4", Offset = "0xB09DD4", VA = "0xB09DD4")]
		set
		{
		}
	}

	[Token(Token = "0x1700007E")]
	public string merchant_ID
	{
		[Token(Token = "0x60006F7")]
		[Address(RVA = "0xB09DDC", Offset = "0xB09DDC", VA = "0xB09DDC")]
		get
		{
			return null;
		}
		[Token(Token = "0x60006F8")]
		[Address(RVA = "0xB09DE4", Offset = "0xB09DE4", VA = "0xB09DE4")]
		set
		{
		}
	}

	[Token(Token = "0x1700007F")]
	public string paykey
	{
		[Token(Token = "0x60006F9")]
		[Address(RVA = "0xB09DEC", Offset = "0xB09DEC", VA = "0xB09DEC")]
		get
		{
			return null;
		}
		[Token(Token = "0x60006FA")]
		[Address(RVA = "0xB09DF4", Offset = "0xB09DF4", VA = "0xB09DF4")]
		set
		{
		}
	}

	[Token(Token = "0x60006C9")]
	[Address(RVA = "0xB04020", Offset = "0xB04020", VA = "0xB04020")]
	public static CommonDic getInstance()
	{
		return null;
	}

	[Token(Token = "0x60006CA")]
	[Address(RVA = "0xB09A74", Offset = "0xB09A74", VA = "0xB09A74")]
	public Dictionary<string, string> getDic()
	{
		return null;
	}

	[Token(Token = "0x60006CB")]
	[Address(RVA = "0xB09AC4", Offset = "0xB09AC4", VA = "0xB09AC4")]
	public void setParameters(string name, string value)
	{
	}

	[Token(Token = "0x60006CC")]
	[Address(RVA = "0xB09C1C", Offset = "0xB09C1C", VA = "0xB09C1C")]
	public string PayOrderString()
	{
		return null;
	}

	[Token(Token = "0x60006FB")]
	[Address(RVA = "0xB095F0", Offset = "0xB095F0", VA = "0xB095F0")]
	public static void InitDicData(Dictionary<string, string> mydic)
	{
	}

	[Token(Token = "0x60006FC")]
	[Address(RVA = "0xB09584", Offset = "0xB09584", VA = "0xB09584")]
	public CommonDic()
	{
	}
}
[Token(Token = "0x200011F")]
public class LoginSDK
{
	[Token(Token = "0x60006FD")]
	[Address(RVA = "0xAE7588", Offset = "0xAE7588", VA = "0xAE7588")]
	public static void Login()
	{
	}

	[Token(Token = "0x60006FE")]
	[Address(RVA = "0xAE75E8", Offset = "0xAE75E8", VA = "0xAE75E8")]
	public static void GetUserAPI()
	{
	}

	[Token(Token = "0x60006FF")]
	[Address(RVA = "0xAE7648", Offset = "0xAE7648", VA = "0xAE7648")]
	public LoginSDK()
	{
	}
}
[Token(Token = "0x2000120")]
public class PicoPaymentSDK
{
	[Token(Token = "0x400065B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static AndroidJavaObject _jo;

	[Token(Token = "0x17000080")]
	public static AndroidJavaObject jo
	{
		[Token(Token = "0x6000700")]
		[Address(RVA = "0xB66EEC", Offset = "0xB66EEC", VA = "0xB66EEC")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000701")]
		[Address(RVA = "0xB66F54", Offset = "0xB66F54", VA = "0xB66F54")]
		set
		{
		}
	}

	[Token(Token = "0x6000702")]
	[Address(RVA = "0xB66FC0", Offset = "0xB66FC0", VA = "0xB66FC0")]
	public static void Login()
	{
	}

	[Token(Token = "0x6000703")]
	[Address(RVA = "0xB6722C", Offset = "0xB6722C", VA = "0xB6722C")]
	public static void Pay(string payOrderJson)
	{
	}

	[Token(Token = "0x6000704")]
	[Address(RVA = "0xB67454", Offset = "0xB67454", VA = "0xB67454")]
	public static void QueryOrder(string orderId)
	{
	}

	[Token(Token = "0x6000705")]
	[Address(RVA = "0xB6767C", Offset = "0xB6767C", VA = "0xB6767C")]
	public static void GetUserAPI()
	{
	}

	[Token(Token = "0x6000706")]
	[Address(RVA = "0xB678E8", Offset = "0xB678E8", VA = "0xB678E8")]
	public PicoPaymentSDK()
	{
	}
}
[Token(Token = "0x2000121")]
public class Pvr_ToBService : MonoBehaviour
{
	[Token(Token = "0x400065C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text deviceInfoText;

	[Token(Token = "0x6000708")]
	[Address(RVA = "0xFEEC90", Offset = "0xFEEC90", VA = "0xFEEC90")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000709")]
	[Address(RVA = "0xFEECC8", Offset = "0xFEECC8", VA = "0xFEECC8")]
	private void Start()
	{
	}

	[Token(Token = "0x600070A")]
	[Address(RVA = "0xFEECD8", Offset = "0xFEECD8", VA = "0xFEECD8")]
	private void OnDestory()
	{
	}

	[Token(Token = "0x600070B")]
	[Address(RVA = "0xFEEC94", Offset = "0xFEEC94", VA = "0xFEEC94")]
	private void InitToBService()
	{
	}

	[Token(Token = "0x600070C")]
	[Address(RVA = "0xFEECD0", Offset = "0xFEECD0", VA = "0xFEECD0")]
	private void BindToBService()
	{
	}

	[Token(Token = "0x600070D")]
	[Address(RVA = "0xFEECE0", Offset = "0xFEECE0", VA = "0xFEECE0")]
	private void UnBindToBService()
	{
	}

	[Token(Token = "0x600070E")]
	[Address(RVA = "0xFEECE8", Offset = "0xFEECE8", VA = "0xFEECE8")]
	private void BoolCallback(string value)
	{
	}

	[Token(Token = "0x600070F")]
	[Address(RVA = "0xFEED98", Offset = "0xFEED98", VA = "0xFEED98")]
	private void IntCallback(string value)
	{
	}

	[Token(Token = "0x6000710")]
	[Address(RVA = "0xFEEE2C", Offset = "0xFEEE2C", VA = "0xFEEE2C")]
	private void LongCallback(string value)
	{
	}

	[Token(Token = "0x6000711")]
	[Address(RVA = "0xFEEEC0", Offset = "0xFEEEC0", VA = "0xFEEEC0")]
	public void StateGetDeviceInfo()
	{
	}

	[Token(Token = "0x6000712")]
	[Address(RVA = "0xFEEF48", Offset = "0xFEEF48", VA = "0xFEEF48")]
	public void ControlSetDeviceAction()
	{
	}

	[Token(Token = "0x6000713")]
	[Address(RVA = "0xFEEFC8", Offset = "0xFEEFC8", VA = "0xFEEFC8")]
	private void ControlSetDeviceActionCallBack(int value)
	{
	}

	[Token(Token = "0x6000714")]
	[Address(RVA = "0xFEF078", Offset = "0xFEF078", VA = "0xFEF078")]
	public void AppManager()
	{
	}

	[Token(Token = "0x6000715")]
	[Address(RVA = "0xFEF104", Offset = "0xFEF104", VA = "0xFEF104")]
	private void AppManagerCallBack(int value)
	{
	}

	[Token(Token = "0x6000716")]
	[Address(RVA = "0xFEF1B4", Offset = "0xFEF1B4", VA = "0xFEF1B4")]
	public Pvr_ToBService()
	{
	}
}
[Token(Token = "0x2000122")]
public class PLOG : MonoBehaviour
{
	[Token(Token = "0x400065D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int logLevel;

	[Token(Token = "0x6000717")]
	[Address(RVA = "0xC78258", Offset = "0xC78258", VA = "0xC78258")]
	public static void getConfigTraceLevel()
	{
	}

	[Token(Token = "0x6000718")]
	[Address(RVA = "0xC782C4", Offset = "0xC782C4", VA = "0xC782C4")]
	public static void D(string msg)
	{
	}

	[Token(Token = "0x6000719")]
	[Address(RVA = "0xC7836C", Offset = "0xC7836C", VA = "0xC7836C")]
	public static void I(string msg)
	{
	}

	[Token(Token = "0x600071A")]
	[Address(RVA = "0xC78414", Offset = "0xC78414", VA = "0xC78414")]
	public static void W(string msg)
	{
	}

	[Token(Token = "0x600071B")]
	[Address(RVA = "0xC784BC", Offset = "0xC784BC", VA = "0xC784BC")]
	public static void E(string msg)
	{
	}

	[Token(Token = "0x600071C")]
	[Address(RVA = "0xC78524", Offset = "0xC78524", VA = "0xC78524")]
	public PLOG()
	{
	}
}
[Token(Token = "0x2000123")]
public class CPicoSDKSettingAsset : ScriptableObject
{
	[Token(Token = "0x400065E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool IgnoreSDKSetting;

	[Token(Token = "0x400065F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool DontshowBuildWaring;

	[Token(Token = "0x4000660")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool AppIDChecked;

	[Token(Token = "0x600071E")]
	[Address(RVA = "0xB03B38", Offset = "0xB03B38", VA = "0xB03B38")]
	public CPicoSDKSettingAsset()
	{
	}
}
[Serializable]
[Token(Token = "0x2000124")]
public class Pvr_UnitySDKProjectSetting : ScriptableObject
{
	[Token(Token = "0x4000661")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RenderTextureAntiAliasing rtAntiAlising;

	[Token(Token = "0x4000662")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public RenderTextureDepth rtBitDepth;

	[Token(Token = "0x4000663")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public RenderTextureFormat rtFormat;

	[Token(Token = "0x4000664")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool usedefaultRenderTexture;

	[Token(Token = "0x4000665")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public UnityEngine.Vector2 customRTSize;

	[Token(Token = "0x4000666")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool usedefaultfps;

	[Token(Token = "0x4000667")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public int customfps;

	[Token(Token = "0x4000668")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool usesinglepass;

	[Token(Token = "0x4000669")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	public bool usecontentprotect;

	[Token(Token = "0x600071F")]
	[Address(RVA = "0xC12454", Offset = "0xC12454", VA = "0xC12454")]
	public static Pvr_UnitySDKProjectSetting GetProjectConfig()
	{
		return null;
	}

	[Token(Token = "0x6000720")]
	[Address(RVA = "0xC124A8", Offset = "0xC124A8", VA = "0xC124A8")]
	public Pvr_UnitySDKProjectSetting()
	{
	}
}
[Token(Token = "0x2000125")]
public sealed class Pvr_UnitySDKPlatformSetting : ScriptableObject
{
	[Token(Token = "0x20006AA")]
	public enum simulationType
	{
		[Token(Token = "0x4002248")]
		Null,
		[Token(Token = "0x4002249")]
		Invalid,
		[Token(Token = "0x400224A")]
		Valid
	}

	[Token(Token = "0x400066A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private bool entitlementchecksimulation;

	[Token(Token = "0x400066B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	[SerializeField]
	private bool startTimeEntitlementCheck;

	[Token(Token = "0x400066C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	public string appID;

	[Token(Token = "0x400066D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<string> deviceSN;

	[Token(Token = "0x400066E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Pvr_UnitySDKPlatformSetting instance;

	[Token(Token = "0x17000081")]
	public static bool Entitlementchecksimulation
	{
		[Token(Token = "0x6000721")]
		[Address(RVA = "0x12EBFB4", Offset = "0x12EBFB4", VA = "0x12EBFB4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000722")]
		[Address(RVA = "0x12EBFD4", Offset = "0x12EBFD4", VA = "0x12EBFD4")]
		set
		{
		}
	}

	[Token(Token = "0x17000082")]
	public static bool StartTimeEntitlementCheck
	{
		[Token(Token = "0x6000723")]
		[Address(RVA = "0x12EBC1C", Offset = "0x12EBC1C", VA = "0x12EBC1C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000724")]
		[Address(RVA = "0x12EC020", Offset = "0x12EC020", VA = "0x12EC020")]
		set
		{
		}
	}

	[Token(Token = "0x17000083")]
	public static Pvr_UnitySDKPlatformSetting Instance
	{
		[Token(Token = "0x6000725")]
		[Address(RVA = "0x12EBC3C", Offset = "0x12EBC3C", VA = "0x12EBC3C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000726")]
		[Address(RVA = "0x12EC06C", Offset = "0x12EC06C", VA = "0x12EC06C")]
		set
		{
		}
	}

	[Token(Token = "0x6000727")]
	[Address(RVA = "0x12EC0C0", Offset = "0x12EC0C0", VA = "0x12EC0C0")]
	public Pvr_UnitySDKPlatformSetting()
	{
	}
}
[Token(Token = "0x2000126")]
public class Pvr_UnitySDKManager : MonoBehaviour
{
	[Token(Token = "0x20006AB")]
	public delegate void EntitlementCheckResult(int ReturnValue);

	[Token(Token = "0x20006AC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B7BB4", Offset = "0x8B7BB4")]
	private sealed class <ToastManager>d__97 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400224B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400224C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400224D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float time;

		[Token(Token = "0x400224E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int type;

		[Token(Token = "0x400224F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Pvr_UnitySDKManager <>4__this;

		[Token(Token = "0x4002250")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool state;

		[Token(Token = "0x1700047D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60028A7")]
			[Address(RVA = "0x12EBE9C", Offset = "0x12EBE9C", VA = "0x12EBE9C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700047E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60028A9")]
			[Address(RVA = "0x12EBF04", Offset = "0x12EBF04", VA = "0x12EBF04", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60028A4")]
		[Address(RVA = "0x12E72C8", Offset = "0x12E72C8", VA = "0x12E72C8")]
		[DebuggerHidden]
		public <ToastManager>d__97(int <>1__state)
		{
		}

		[Token(Token = "0x60028A5")]
		[Address(RVA = "0x12EBD64", Offset = "0x12EBD64", VA = "0x12EBD64", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60028A6")]
		[Address(RVA = "0x12EBD68", Offset = "0x12EBD68", VA = "0x12EBD68", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60028A8")]
		[Address(RVA = "0x12EBEA4", Offset = "0x12EBEA4", VA = "0x12EBEA4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20006AD")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B7BC4", Offset = "0x8B7BC4")]
	private sealed class <>c__DisplayClass102_0
	{
		[Token(Token = "0x4002251")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Pvr_UnitySDKManager <>4__this;

		[Token(Token = "0x4002252")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform trans;

		[Token(Token = "0x60028AA")]
		[Address(RVA = "0x12E8678", Offset = "0x12E8678", VA = "0x12E8678")]
		public <>c__DisplayClass102_0()
		{
		}

		[Token(Token = "0x60028AB")]
		[Address(RVA = "0x12EB050", Offset = "0x12EB050", VA = "0x12EB050")]
		internal void <SetProperty>b__0()
		{
		}
	}

	[Token(Token = "0x20006AE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B7BD4", Offset = "0x8B7BD4")]
	private sealed class <G3TipsManager>d__106 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002253")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002254")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002255")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float time;

		[Token(Token = "0x4002256")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject tip;

		[Token(Token = "0x1700047F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60028AF")]
			[Address(RVA = "0x12EB15C", Offset = "0x12EB15C", VA = "0x12EB15C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000480")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60028B1")]
			[Address(RVA = "0x12EB1C4", Offset = "0x12EB1C4", VA = "0x12EB1C4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60028AC")]
		[Address(RVA = "0x12E89B0", Offset = "0x12E89B0", VA = "0x12E89B0")]
		[DebuggerHidden]
		public <G3TipsManager>d__106(int <>1__state)
		{
		}

		[Token(Token = "0x60028AD")]
		[Address(RVA = "0x12EB0A0", Offset = "0x12EB0A0", VA = "0x12EB0A0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60028AE")]
		[Address(RVA = "0x12EB0A4", Offset = "0x12EB0A4", VA = "0x12EB0A4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60028B0")]
		[Address(RVA = "0x12EB164", Offset = "0x12EB164", VA = "0x12EB164", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20006AF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B7BE4", Offset = "0x8B7BE4")]
	private sealed class <Start>d__118 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002257")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002258")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002259")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Pvr_UnitySDKManager <>4__this;

		[Token(Token = "0x17000481")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60028B5")]
			[Address(RVA = "0x12EBCF4", Offset = "0x12EBCF4", VA = "0x12EBCF4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000482")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60028B7")]
			[Address(RVA = "0x12EBD5C", Offset = "0x12EBD5C", VA = "0x12EBD5C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60028B2")]
		[Address(RVA = "0x12EA4A4", Offset = "0x12EA4A4", VA = "0x12EA4A4")]
		[DebuggerHidden]
		public <Start>d__118(int <>1__state)
		{
		}

		[Token(Token = "0x60028B3")]
		[Address(RVA = "0x12EB9F4", Offset = "0x12EB9F4", VA = "0x12EB9F4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60028B4")]
		[Address(RVA = "0x12EB9F8", Offset = "0x12EB9F8", VA = "0x12EB9F8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60028B6")]
		[Address(RVA = "0x12EBCFC", Offset = "0x12EBCFC", VA = "0x12EBCFC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20006B0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B7BF4", Offset = "0x8B7BF4")]
	private sealed class <InitRenderThreadRoutine>d__119 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400225A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400225B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400225C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int <i>5__2;

		[Token(Token = "0x17000483")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60028BB")]
			[Address(RVA = "0x12EB380", Offset = "0x12EB380", VA = "0x12EB380", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000484")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60028BD")]
			[Address(RVA = "0x12EB3E8", Offset = "0x12EB3E8", VA = "0x12EB3E8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60028B8")]
		[Address(RVA = "0x12EA530", Offset = "0x12EA530", VA = "0x12EA530")]
		[DebuggerHidden]
		public <InitRenderThreadRoutine>d__119(int <>1__state)
		{
		}

		[Token(Token = "0x60028B9")]
		[Address(RVA = "0x12EB1CC", Offset = "0x12EB1CC", VA = "0x12EB1CC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60028BA")]
		[Address(RVA = "0x12EB1D0", Offset = "0x12EB1D0", VA = "0x12EB1D0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60028BC")]
		[Address(RVA = "0x12EB388", Offset = "0x12EB388", VA = "0x12EB388", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20006B1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B7C04", Offset = "0x8B7C04")]
	private sealed class <OnResume>d__132 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400225D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400225E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400225F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Pvr_UnitySDKManager <>4__this;

		[Token(Token = "0x4002260")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <ability6dof>5__2;

		[Token(Token = "0x4002261")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int <waitNum>5__3;

		[Token(Token = "0x4002262")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int <resetNum>5__4;

		[Token(Token = "0x4002263")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int <i>5__5;

		[Token(Token = "0x17000485")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60028C1")]
			[Address(RVA = "0x12EB984", Offset = "0x12EB984", VA = "0x12EB984", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000486")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60028C3")]
			[Address(RVA = "0x12EB9EC", Offset = "0x12EB9EC", VA = "0x12EB9EC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60028BE")]
		[Address(RVA = "0x12EAF40", Offset = "0x12EAF40", VA = "0x12EAF40")]
		[DebuggerHidden]
		public <OnResume>d__132(int <>1__state)
		{
		}

		[Token(Token = "0x60028BF")]
		[Address(RVA = "0x12EB3F0", Offset = "0x12EB3F0", VA = "0x12EB3F0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60028C0")]
		[Address(RVA = "0x12EB3F4", Offset = "0x12EB3F4", VA = "0x12EB3F4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60028C2")]
		[Address(RVA = "0x12EB98C", Offset = "0x12EB98C", VA = "0x12EB98C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400066F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static PlatForm platform;

	[Token(Token = "0x4000670")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Pvr_UnitySDKManager sdk;

	[Token(Token = "0x4000671")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public float EyesAspect;

	[Token(Token = "0x4000672")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[HideInInspector]
	public int posStatus;

	[Token(Token = "0x4000673")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public bool ismirroring;

	[Token(Token = "0x4000674")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[HideInInspector]
	public UnityEngine.Vector3 resetBasePos;

	[Token(Token = "0x4000675")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public int trackingmode;

	[Token(Token = "0x4000676")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[HideInInspector]
	public int systemprop;

	[Token(Token = "0x4000677")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	public bool systemFPS;

	[Token(Token = "0x4000678")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[HideInInspector]
	public float[] headData;

	[Token(Token = "0x4000679")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private bool rotfoldout;

	[Token(Token = "0x400067A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	[SerializeField]
	private bool hmdOnlyrot;

	[Token(Token = "0x400067B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
	[SerializeField]
	private bool controllerOnlyrot;

	[Token(Token = "0x400067C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[SerializeField]
	private TrackingOrigin trackingOrigin;

	[Token(Token = "0x400067D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool ResetTrackerOnLoad;

	[Token(Token = "0x400067E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[HideInInspector]
	public UnityEngine.Vector3 leftEyeOffset;

	[Token(Token = "0x400067F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[HideInInspector]
	public UnityEngine.Vector3 rightEyeOffset;

	[Token(Token = "0x4000680")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[HideInInspector]
	public Rect leftEyeRect;

	[Token(Token = "0x4000681")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	[HideInInspector]
	public Rect rightEyeRect;

	[Token(Token = "0x4000682")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	[HideInInspector]
	public Matrix4x4 leftEyeView;

	[Token(Token = "0x4000683")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	[HideInInspector]
	public Matrix4x4 rightEyeView;

	[Token(Token = "0x4000684")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	[HideInInspector]
	public Pvr_UnitySDKEditor pvr_UnitySDKEditor;

	[Token(Token = "0x4000685")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	[SerializeField]
	private bool vrModeEnabled;

	[Token(Token = "0x4000686")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	[HideInInspector]
	public Material Eyematerial;

	[Token(Token = "0x4000687")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	[HideInInspector]
	public Material Middlematerial;

	[Token(Token = "0x4000688")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8BBA1C", Offset = "0x8BBA1C")]
	private bool <picovrTriggered>k__BackingField;

	[Token(Token = "0x4000689")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x131")]
	[HideInInspector]
	public bool newPicovrTriggered;

	[Token(Token = "0x400068A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x132")]
	[SerializeField]
	private bool showFPS;

	[Token(Token = "0x400068B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
	[HideInInspector]
	public UnityEngine.Vector3 neckOffset;

	[Token(Token = "0x400068C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	[SerializeField]
	private bool pVRNeck;

	[Token(Token = "0x400068D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x141")]
	[HideInInspector]
	public bool UseCustomNeckPara;

	[Token(Token = "0x400068E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x142")]
	[HideInInspector]
	public bool onResume;

	[Token(Token = "0x400068F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x143")]
	[HideInInspector]
	public bool isEnterVRMode;

	[Token(Token = "0x4000690")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
	public bool isHasController;

	[Token(Token = "0x4000691")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public Pvr_UnitySDKConfigProfile pvr_UnitySDKConfig;

	[Token(Token = "0x4000692")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private GameObject calltoast;

	[Token(Token = "0x4000693")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private GameObject msgtoast;

	[Token(Token = "0x4000694")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private GameObject lowhmdBatterytoast;

	[Token(Token = "0x4000695")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private GameObject lowphoneBatterytoast;

	[Token(Token = "0x4000696")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private GameObject LowPhoneHealthtoast;

	[Token(Token = "0x4000697")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private GameObject LowcontrollerBatterytoast;

	[Token(Token = "0x4000698")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private bool lowControllerpowerstate;

	[Token(Token = "0x4000699")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
	private float controllerpowershowtime;

	[Token(Token = "0x400069A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private bool UseToast;

	[Token(Token = "0x400069B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
	private int iPhoneHMDModeEnabled;

	[Token(Token = "0x400069C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	private GameObject G3LiteTips;

	[Token(Token = "0x400069D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	[SerializeField]
	private bool monoscopic;

	[Token(Token = "0x400069E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x199")]
	private bool mIsAndroid7;

	[Token(Token = "0x400069F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static Func<bool> eventEnterVRMode;

	[Token(Token = "0x40006A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19A")]
	[HideInInspector]
	public bool ShowVideoSeethrough;

	[Token(Token = "0x40006A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19C")]
	public int SystemDebugFFRLevel;

	[Token(Token = "0x40006A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public int SystemFFRLevel;

	[Token(Token = "0x40006A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A4")]
	public int AppCheckResult;

	[Token(Token = "0x40006A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	public Action longPressHomeKeyAction;

	[Token(Token = "0x17000084")]
	public static Pvr_UnitySDKManager SDK
	{
		[Token(Token = "0x6000728")]
		[Address(RVA = "0x12D404C", Offset = "0x12D404C", VA = "0x12D404C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000085")]
	public bool Rotfoldout
	{
		[Token(Token = "0x6000729")]
		[Address(RVA = "0x12E5E00", Offset = "0x12E5E00", VA = "0x12E5E00")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600072A")]
		[Address(RVA = "0x12E5E08", Offset = "0x12E5E08", VA = "0x12E5E08")]
		set
		{
		}
	}

	[Token(Token = "0x17000086")]
	public bool HmdOnlyrot
	{
		[Token(Token = "0x600072B")]
		[Address(RVA = "0x12E5E28", Offset = "0x12E5E28", VA = "0x12E5E28")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600072C")]
		[Address(RVA = "0x12E5E30", Offset = "0x12E5E30", VA = "0x12E5E30")]
		set
		{
		}
	}

	[Token(Token = "0x17000087")]
	public bool ControllerOnlyrot
	{
		[Token(Token = "0x600072D")]
		[Address(RVA = "0x12E5E50", Offset = "0x12E5E50", VA = "0x12E5E50")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600072E")]
		[Address(RVA = "0x12E5E58", Offset = "0x12E5E58", VA = "0x12E5E58")]
		set
		{
		}
	}

	[Token(Token = "0x17000088")]
	public TrackingOrigin TrackingOrigin
	{
		[Token(Token = "0x600072F")]
		[Address(RVA = "0x12E5E78", Offset = "0x12E5E78", VA = "0x12E5E78")]
		get
		{
			return default(TrackingOrigin);
		}
		[Token(Token = "0x6000730")]
		[Address(RVA = "0x12E5E80", Offset = "0x12E5E80", VA = "0x12E5E80")]
		set
		{
		}
	}

	[Token(Token = "0x17000089")]
	[HideInInspector]
	public bool VRModeEnabled
	{
		[Token(Token = "0x6000734")]
		[Address(RVA = "0x12E5F34", Offset = "0x12E5F34", VA = "0x12E5F34")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000735")]
		[Address(RVA = "0x12DF80C", Offset = "0x12DF80C", VA = "0x12DF80C")]
		set
		{
		}
	}

	[Token(Token = "0x1700008A")]
	[HideInInspector]
	public bool picovrTriggered
	{
		[Token(Token = "0x6000736")]
		[Address(RVA = "0x12E5F3C", Offset = "0x12E5F3C", VA = "0x12E5F3C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C3314", Offset = "0x8C3314")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000737")]
		[Address(RVA = "0x12E5F44", Offset = "0x12E5F44", VA = "0x12E5F44")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C3324", Offset = "0x8C3324")]
		set
		{
		}
	}

	[Token(Token = "0x1700008B")]
	public bool ShowFPS
	{
		[Token(Token = "0x6000738")]
		[Address(RVA = "0x12E5F50", Offset = "0x12E5F50", VA = "0x12E5F50")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000739")]
		[Address(RVA = "0x12E5F58", Offset = "0x12E5F58", VA = "0x12E5F58")]
		set
		{
		}
	}

	[Token(Token = "0x1700008C")]
	public bool PVRNeck
	{
		[Token(Token = "0x600073A")]
		[Address(RVA = "0x12E5F78", Offset = "0x12E5F78", VA = "0x12E5F78")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600073B")]
		[Address(RVA = "0x12E5F80", Offset = "0x12E5F80", VA = "0x12E5F80")]
		set
		{
		}
	}

	[Token(Token = "0x1700008D")]
	[HideInInspector]
	public bool Monoscopic
	{
		[Token(Token = "0x600073C")]
		[Address(RVA = "0x12E5FA0", Offset = "0x12E5FA0", VA = "0x12E5FA0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600073D")]
		[Address(RVA = "0x12E5FA8", Offset = "0x12E5FA8", VA = "0x12E5FA8")]
		set
		{
		}
	}

	[Token(Token = "0x14000025")]
	public static event EntitlementCheckResult EntitlementCheckResultEvent
	{
		[Token(Token = "0x600073E")]
		[Address(RVA = "0x12E5FD4", Offset = "0x12E5FD4", VA = "0x12E5FD4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C3334", Offset = "0x8C3334")]
		add
		{
		}
		[Token(Token = "0x600073F")]
		[Address(RVA = "0x12E60C4", Offset = "0x12E60C4", VA = "0x12E60C4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C3344", Offset = "0x8C3344")]
		remove
		{
		}
	}

	[Token(Token = "0x6000731")]
	[Address(RVA = "0x12E5E9C", Offset = "0x12E5E9C", VA = "0x12E5E9C")]
	public void ChangeDefaultCustomRtSize(int w, int h)
	{
	}

	[Token(Token = "0x6000732")]
	[Address(RVA = "0x12E0C34", Offset = "0x12E0C34", VA = "0x12E0C34")]
	public UnityEngine.Vector3 EyeOffset(Eye eye)
	{
		return default(UnityEngine.Vector3);
	}

	[Token(Token = "0x6000733")]
	[Address(RVA = "0x12E5EF8", Offset = "0x12E5EF8", VA = "0x12E5EF8")]
	public Rect EyeRect(Eye eye)
	{
		return default(Rect);
	}

	[Token(Token = "0x6000740")]
	[Address(RVA = "0x12E61B4", Offset = "0x12E61B4", VA = "0x12E61B4")]
	private bool SDKManagerInit()
	{
		return default(bool);
	}

	[Token(Token = "0x6000741")]
	[Address(RVA = "0x12E6304", Offset = "0x12E6304", VA = "0x12E6304")]
	private bool SDKManagerInitCoreAbility()
	{
		return default(bool);
	}

	[Token(Token = "0x6000742")]
	[Address(RVA = "0x12E643C", Offset = "0x12E643C", VA = "0x12E643C")]
	public void smsReceivedCallback(string msg)
	{
	}

	[Token(Token = "0x6000743")]
	[Address(RVA = "0x12E6B5C", Offset = "0x12E6B5C", VA = "0x12E6B5C")]
	public void phoneStateCallback(string state)
	{
	}

	[Token(Token = "0x6000744")]
	[Address(RVA = "0x12E6EDC", Offset = "0x12E6EDC", VA = "0x12E6EDC")]
	public void phoneBatteryStateCallback(string state)
	{
	}

	[Token(Token = "0x6000745")]
	[Address(RVA = "0x12E718C", Offset = "0x12E718C", VA = "0x12E718C")]
	public void hmdLowBatteryCallback(string level)
	{
	}

	[Token(Token = "0x6000746")]
	[Address(RVA = "0x12E67BC", Offset = "0x12E67BC", VA = "0x12E67BC")]
	private string TransformNumber(string number)
	{
		return null;
	}

	[Token(Token = "0x6000747")]
	[Address(RVA = "0x12E72C4", Offset = "0x12E72C4", VA = "0x12E72C4")]
	public void onHmdOrientationReseted()
	{
	}

	[Token(Token = "0x6000748")]
	[Address(RVA = "0x12E6AC0", Offset = "0x12E6AC0", VA = "0x12E6AC0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C3354", Offset = "0x8C3354")]
	private IEnumerator ToastManager(int type, bool state, float time)
	{
		return null;
	}

	[Token(Token = "0x6000749")]
	[Address(RVA = "0x12E72F4", Offset = "0x12E72F4", VA = "0x12E72F4")]
	private void CheckControllerStateForG2(string state)
	{
	}

	[Token(Token = "0x600074A")]
	[Address(RVA = "0x12E74A0", Offset = "0x12E74A0", VA = "0x12E74A0")]
	public void notificationCallback(string data)
	{
	}

	[Token(Token = "0x600074B")]
	[Address(RVA = "0x12E8418", Offset = "0x12E8418", VA = "0x12E8418")]
	private Sprite LoadSprite(UnityEngine.Vector2 size, string filepath)
	{
		return null;
	}

	[Token(Token = "0x600074C")]
	[Address(RVA = "0x12E8534", Offset = "0x12E8534", VA = "0x12E8534")]
	private byte[] ReadTex(string path)
	{
		return null;
	}

	[Token(Token = "0x600074D")]
	[Address(RVA = "0x12E7828", Offset = "0x12E7828", VA = "0x12E7828")]
	private void SetProperty(int type, JsonData data, string value)
	{
	}

	[Token(Token = "0x600074E")]
	[Address(RVA = "0x12E7D24", Offset = "0x12E7D24", VA = "0x12E7D24")]
	private void SetBaseProperty(Transform trans, JsonData data, string value)
	{
	}

	[Token(Token = "0x600074F")]
	[Address(RVA = "0x12E8100", Offset = "0x12E8100", VA = "0x12E8100")]
	private void SetImageProperty(Transform image, JsonData data, string value)
	{
	}

	[Token(Token = "0x6000750")]
	[Address(RVA = "0x12E8680", Offset = "0x12E8680", VA = "0x12E8680")]
	private void SetTextProperty(Transform text, JsonData data, string value)
	{
	}

	[Token(Token = "0x6000751")]
	[Address(RVA = "0x12E8398", Offset = "0x12E8398", VA = "0x12E8398")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C33B8", Offset = "0x8C33B8")]
	private IEnumerator G3TipsManager(GameObject tip, float time)
	{
		return null;
	}

	[Token(Token = "0x6000752")]
	[Address(RVA = "0x12E8934", Offset = "0x12E8934", VA = "0x12E8934")]
	private float JsonToFloat(JsonData data)
	{
		return default(float);
	}

	[Token(Token = "0x6000753")]
	[Address(RVA = "0x12E89DC", Offset = "0x12E89DC", VA = "0x12E89DC")]
	private bool SDKManagerInitFPS()
	{
		return default(bool);
	}

	[Token(Token = "0x6000754")]
	[Address(RVA = "0x12E6290", Offset = "0x12E6290", VA = "0x12E6290")]
	private bool SDKManagerInitConfigProfile()
	{
		return default(bool);
	}

	[Token(Token = "0x6000755")]
	[Address(RVA = "0x12E8B98", Offset = "0x12E8B98", VA = "0x12E8B98")]
	private bool SDKManagerInitEditor()
	{
		return default(bool);
	}

	[Token(Token = "0x6000756")]
	[Address(RVA = "0x12E8C44", Offset = "0x12E8C44", VA = "0x12E8C44")]
	private bool SDKManagerInitPara()
	{
		return default(bool);
	}

	[Token(Token = "0x6000757")]
	[Address(RVA = "0x12E8C4C", Offset = "0x12E8C4C", VA = "0x12E8C4C")]
	public void SDKManagerLongHomeKey()
	{
	}

	[Token(Token = "0x6000758")]
	[Address(RVA = "0x12E8D58", Offset = "0x12E8D58", VA = "0x12E8D58")]
	private void setLongHomeKey()
	{
	}

	[Token(Token = "0x6000759")]
	[Address(RVA = "0x12E8FD8", Offset = "0x12E8FD8", VA = "0x12E8FD8")]
	public void verifyAPPCallback(string code)
	{
	}

	[Token(Token = "0x600075A")]
	[Address(RVA = "0x12E9370", Offset = "0x12E9370", VA = "0x12E9370")]
	public void IpdRefreshCallBack(string ipd)
	{
	}

	[Token(Token = "0x600075B")]
	[Address(RVA = "0x12E94A0", Offset = "0x12E94A0", VA = "0x12E94A0")]
	private void Awake()
	{
	}

	[Token(Token = "0x600075C")]
	[Address(RVA = "0x12EA434", Offset = "0x12EA434", VA = "0x12EA434")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C341C", Offset = "0x8C341C")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x600075D")]
	[Address(RVA = "0x12EA4D0", Offset = "0x12EA4D0", VA = "0x12EA4D0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C3480", Offset = "0x8C3480")]
	private IEnumerator InitRenderThreadRoutine()
	{
		return null;
	}

	[Token(Token = "0x600075E")]
	[Address(RVA = "0x12EA55C", Offset = "0x12EA55C", VA = "0x12EA55C")]
	private void Update()
	{
	}

	[Token(Token = "0x600075F")]
	[Address(RVA = "0x12EA7E8", Offset = "0x12EA7E8", VA = "0x12EA7E8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000760")]
	[Address(RVA = "0x12EA948", Offset = "0x12EA948", VA = "0x12EA948")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000761")]
	[Address(RVA = "0x12EAA78", Offset = "0x12EAA78", VA = "0x12EAA78")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000762")]
	[Address(RVA = "0x12EAA80", Offset = "0x12EAA80", VA = "0x12EAA80")]
	private void OnPause()
	{
	}

	[Token(Token = "0x6000763")]
	[Address(RVA = "0x12EABA4", Offset = "0x12EABA4", VA = "0x12EABA4")]
	private void OnApplicationPause(bool pause)
	{
	}

	[Token(Token = "0x6000764")]
	[Address(RVA = "0x12EAE4C", Offset = "0x12EAE4C", VA = "0x12EAE4C")]
	public void EnterVRMode()
	{
	}

	[Token(Token = "0x6000765")]
	[Address(RVA = "0x12EAB30", Offset = "0x12EAB30", VA = "0x12EAB30")]
	public void LeaveVRMode()
	{
	}

	[Token(Token = "0x6000766")]
	[Address(RVA = "0x12EAF38", Offset = "0x12EAF38", VA = "0x12EAF38")]
	public void SixDofForceQuit()
	{
	}

	[Token(Token = "0x6000767")]
	[Address(RVA = "0x12E9E90", Offset = "0x12E9E90", VA = "0x12E9E90")]
	private void InitUI()
	{
	}

	[Token(Token = "0x6000768")]
	[Address(RVA = "0x12EA08C", Offset = "0x12EA08C", VA = "0x12EA08C")]
	private void RefreshTextByLanguage()
	{
	}

	[Token(Token = "0x6000769")]
	[Address(RVA = "0x12E9AB8", Offset = "0x12E9AB8", VA = "0x12E9AB8")]
	private void LoadIsMirroringValue()
	{
	}

	[Token(Token = "0x600076A")]
	[Address(RVA = "0x12EADDC", Offset = "0x12EADDC", VA = "0x12EADDC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C34E4", Offset = "0x8C34E4")]
	private IEnumerator OnResume()
	{
		return null;
	}

	[Token(Token = "0x600076B")]
	[Address(RVA = "0x12EAF6C", Offset = "0x12EAF6C", VA = "0x12EAF6C")]
	public Pvr_UnitySDKManager()
	{
	}
}
[Token(Token = "0x2000127")]
public class QuitGame : MonoBehaviour
{
	[Token(Token = "0x600076D")]
	[Address(RVA = "0xC1A8AC", Offset = "0xC1A8AC", VA = "0xC1A8AC")]
	private void Start()
	{
	}

	[Token(Token = "0x600076E")]
	[Address(RVA = "0xC1A8B0", Offset = "0xC1A8B0", VA = "0xC1A8B0")]
	private void Update()
	{
	}

	[Token(Token = "0x600076F")]
	[Address(RVA = "0xC1A8DC", Offset = "0xC1A8DC", VA = "0xC1A8DC")]
	public QuitGame()
	{
	}
}
[Token(Token = "0x2000128")]
public class Pvr_UnityEyeMask : MonoBehaviour
{
	[Token(Token = "0x20006B2")]
	private class EyeMaskData
	{
		[Token(Token = "0x4002264")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Eye eyeSide;

		[Token(Token = "0x4002265")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Camera camera;

		[Token(Token = "0x4002266")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CommandBuffer cmdBuf;

		[Token(Token = "0x60028C4")]
		[Address(RVA = "0xFF6E08", Offset = "0xFF6E08", VA = "0xFF6E08")]
		public EyeMaskData()
		{
		}
	}

	[Token(Token = "0x40006A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Shader eyeMaskShader;

	[Token(Token = "0x40006A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Material eyeMaskMaterial;

	[Token(Token = "0x40006A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Mesh eyeMaskMeshLeft;

	[Token(Token = "0x40006A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Mesh eyeMaskMeshRight;

	[Token(Token = "0x40006AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Mesh eyeMaskMeshBoth;

	[Token(Token = "0x40006AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float zDir;

	[Token(Token = "0x40006AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Color eyeMaskColor;

	[Token(Token = "0x40006AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<EyeMaskData> cameraDataList;

	[Token(Token = "0x6000770")]
	[Address(RVA = "0xFF5530", Offset = "0xFF5530", VA = "0xFF5530")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000771")]
	[Address(RVA = "0xFF55E8", Offset = "0xFF55E8", VA = "0xFF55E8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000772")]
	[Address(RVA = "0xFF6140", Offset = "0xFF6140", VA = "0xFF6140")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000773")]
	[Address(RVA = "0xFF5B7C", Offset = "0xFF5B7C", VA = "0xFF5B7C")]
	private void CreateCommandBuffer()
	{
	}

	[Token(Token = "0x6000774")]
	[Address(RVA = "0xFF6C3C", Offset = "0xFF6C3C", VA = "0xFF6C3C")]
	private void OnCustomPreRender(Camera cam)
	{
	}

	[Token(Token = "0x6000775")]
	[Address(RVA = "0xFF64B4", Offset = "0xFF64B4", VA = "0xFF64B4")]
	private Mesh GetStencilMesh(Eye eyeSide)
	{
		return null;
	}

	[Token(Token = "0x6000776")]
	[Address(RVA = "0xFF6808", Offset = "0xFF6808", VA = "0xFF6808")]
	private Mesh GetStencilMeshBoth(Mesh leftMesh, Mesh rightMesh)
	{
		return null;
	}

	[Token(Token = "0x6000777")]
	[Address(RVA = "0xFF63A4", Offset = "0xFF63A4", VA = "0xFF63A4")]
	private bool VerifyCommadBuffer()
	{
		return default(bool);
	}

	[Token(Token = "0x6000778")]
	[Address(RVA = "0xFF583C", Offset = "0xFF583C", VA = "0xFF583C")]
	private void PrepareCameras()
	{
	}

	[Token(Token = "0x6000779")]
	[Address(RVA = "0xFF6DD8", Offset = "0xFF6DD8", VA = "0xFF6DD8")]
	private void AddCameraCommandBuffer(EyeMaskData data)
	{
	}

	[Token(Token = "0x600077A")]
	[Address(RVA = "0xFF630C", Offset = "0xFF630C", VA = "0xFF630C")]
	private void RemoveCameraCommandBuffer(EyeMaskData data)
	{
	}

	[Token(Token = "0x600077B")]
	[Address(RVA = "0xFF6338", Offset = "0xFF6338", VA = "0xFF6338")]
	private void CleanEyeMask()
	{
	}

	[Token(Token = "0x600077C")]
	[Address(RVA = "0xFF6E10", Offset = "0xFF6E10", VA = "0xFF6E10")]
	public Pvr_UnityEyeMask()
	{
	}
}
[Token(Token = "0x2000129")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8B5F54", Offset = "0x8B5F54")]
public class Pvr_UnitySDKEye : MonoBehaviour
{
	[Token(Token = "0x40006AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static List<Pvr_UnitySDKEye> Instances;

	[Token(Token = "0x40006AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Eye eyeSide;

	[Token(Token = "0x40006B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8BBACC", Offset = "0x8BBACC")]
	private Camera <eyecamera>k__BackingField;

	[Token(Token = "0x40006B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int eyeCameraOriginCullingMask;

	[Token(Token = "0x40006B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private CameraClearFlags eyeCameraOriginClearFlag;

	[Token(Token = "0x40006B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Color eyeCameraOriginBackgroundColor;

	[Token(Token = "0x40006B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int lastBoundaryState;

	[Token(Token = "0x40006B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Matrix4x4 realProj;

	[Token(Token = "0x40006B6")]
	private const int bufferSize = 3;

	[Token(Token = "0x40006B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private int IDIndex;

	[Token(Token = "0x40006B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private RenderEventType eventType;

	[Token(Token = "0x40006B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private int previousId;

	[Token(Token = "0x40006BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static bool setLevel;

	[Token(Token = "0x40006BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Material mat_Vignette;

	[Token(Token = "0x1700008E")]
	public Camera eyecamera
	{
		[Token(Token = "0x600077D")]
		[Address(RVA = "0x12DF8C8", Offset = "0x12DF8C8", VA = "0x12DF8C8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C3548", Offset = "0x8C3548")]
		get
		{
			return null;
		}
		[Token(Token = "0x600077E")]
		[Address(RVA = "0x12DF8D0", Offset = "0x12DF8D0", VA = "0x12DF8D0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C3558", Offset = "0x8C3558")]
		private set
		{
		}
	}

	[Token(Token = "0x600077F")]
	[Address(RVA = "0x12DF8D8", Offset = "0x12DF8D8", VA = "0x12DF8D8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000780")]
	[Address(RVA = "0x12DF978", Offset = "0x12DF978", VA = "0x12DF978")]
	private void Start()
	{
	}

	[Token(Token = "0x6000781")]
	[Address(RVA = "0x12DFEF8", Offset = "0x12DFEF8", VA = "0x12DFEF8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000782")]
	[Address(RVA = "0x12E012C", Offset = "0x12E012C", VA = "0x12E012C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000783")]
	[Address(RVA = "0x12E0254", Offset = "0x12E0254", VA = "0x12E0254")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000784")]
	[Address(RVA = "0x12E037C", Offset = "0x12E037C", VA = "0x12E037C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000785")]
	[Address(RVA = "0x12E0400", Offset = "0x12E0400", VA = "0x12E0400")]
	public void MyPreRender(Camera camera)
	{
	}

	[Token(Token = "0x6000786")]
	[Address(RVA = "0x12E05F0", Offset = "0x12E05F0", VA = "0x12E05F0")]
	public void MyPreRender(ScriptableRenderContext context, Camera camera)
	{
	}

	[Token(Token = "0x6000787")]
	[Address(RVA = "0x12E06B0", Offset = "0x12E06B0", VA = "0x12E06B0")]
	public void MyPostRender(ScriptableRenderContext context, Camera camera)
	{
	}

	[Token(Token = "0x6000788")]
	[Address(RVA = "0x12E04C0", Offset = "0x12E04C0", VA = "0x12E04C0")]
	private void OnPreRender()
	{
	}

	[Token(Token = "0x6000789")]
	[Address(RVA = "0x12E0770", Offset = "0x12E0770", VA = "0x12E0770")]
	private void OnPostRender()
	{
	}

	[Token(Token = "0x600078A")]
	[Address(RVA = "0x12E0AB8", Offset = "0x12E0AB8", VA = "0x12E0AB8")]
	public void EyeRender()
	{
	}

	[Token(Token = "0x600078B")]
	[Address(RVA = "0x12DFA50", Offset = "0x12DFA50", VA = "0x12DFA50")]
	private void Setup(Eye eyeSide)
	{
	}

	[Token(Token = "0x600078C")]
	[Address(RVA = "0x12DFC60", Offset = "0x12DFC60", VA = "0x12DFC60")]
	private void SetupUpdate()
	{
	}

	[Token(Token = "0x600078D")]
	[Address(RVA = "0x12D6E0C", Offset = "0x12D6E0C", VA = "0x12D6E0C")]
	public void RefreshCameraPosition(float ipd)
	{
	}

	[Token(Token = "0x600078E")]
	[Address(RVA = "0x12E0C6C", Offset = "0x12E0C6C", VA = "0x12E0C6C")]
	private void DrawVignetteLine()
	{
	}

	[Token(Token = "0x600078F")]
	[Address(RVA = "0x12E0D98", Offset = "0x12E0D98", VA = "0x12E0D98")]
	private void vignette()
	{
	}

	[Token(Token = "0x6000790")]
	[Address(RVA = "0x12E0910", Offset = "0x12E0910", VA = "0x12E0910")]
	private void SetFFRParameter()
	{
	}

	[Token(Token = "0x6000791")]
	[Address(RVA = "0x12E1018", Offset = "0x12E1018", VA = "0x12E1018")]
	public Pvr_UnitySDKEye()
	{
	}
}
[Token(Token = "0x200012A")]
public class Pvr_UnitySDKEyeManager : MonoBehaviour
{
	[Token(Token = "0x20006B3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B7C14", Offset = "0x8B7C14")]
	private sealed class <EndOfFrame>d__41 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002267")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002268")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002269")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Pvr_UnitySDKEyeManager <>4__this;

		[Token(Token = "0x17000487")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60028C8")]
			[Address(RVA = "0x12E4824", Offset = "0x12E4824", VA = "0x12E4824", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000488")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60028CA")]
			[Address(RVA = "0x12E488C", Offset = "0x12E488C", VA = "0x12E488C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60028C5")]
		[Address(RVA = "0x12E2DCC", Offset = "0x12E2DCC", VA = "0x12E2DCC")]
		[DebuggerHidden]
		public <EndOfFrame>d__41(int <>1__state)
		{
		}

		[Token(Token = "0x60028C6")]
		[Address(RVA = "0x12E3904", Offset = "0x12E3904", VA = "0x12E3904", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60028C7")]
		[Address(RVA = "0x12E3908", Offset = "0x12E3908", VA = "0x12E3908", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60028C9")]
		[Address(RVA = "0x12E482C", Offset = "0x12E482C", VA = "0x12E482C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20006B4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B7C24", Offset = "0x8B7C24")]
	private sealed class <ScreenFade>d__64 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400226A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400226B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400226C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Pvr_UnitySDKEyeManager <>4__this;

		[Token(Token = "0x400226D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float startAlpha;

		[Token(Token = "0x400226E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float endAlpha;

		[Token(Token = "0x400226F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <elapsedTime>5__2;

		[Token(Token = "0x17000489")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60028CE")]
			[Address(RVA = "0x12E49C8", Offset = "0x12E49C8", VA = "0x12E49C8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700048A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60028D0")]
			[Address(RVA = "0x12E4A30", Offset = "0x12E4A30", VA = "0x12E4A30", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60028CB")]
		[Address(RVA = "0x12E3850", Offset = "0x12E3850", VA = "0x12E3850")]
		[DebuggerHidden]
		public <ScreenFade>d__64(int <>1__state)
		{
		}

		[Token(Token = "0x60028CC")]
		[Address(RVA = "0x12E4894", Offset = "0x12E4894", VA = "0x12E4894", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60028CD")]
		[Address(RVA = "0x12E4898", Offset = "0x12E4898", VA = "0x12E4898", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60028CF")]
		[Address(RVA = "0x12E49D0", Offset = "0x12E49D0", VA = "0x12E49D0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40006BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Pvr_UnitySDKEyeManager instance;

	[Token(Token = "0x40006BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Pvr_UnitySDKEye[] eyes;

	[Token(Token = "0x40006BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public Camera LeftEyeCamera;

	[Token(Token = "0x40006BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public Camera RightEyeCamera;

	[Token(Token = "0x40006C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public Camera MonoEyeCamera;

	[Token(Token = "0x40006C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	public Camera BothEyeCamera;

	[Token(Token = "0x40006C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int MonoEyeTextureID;

	[Token(Token = "0x40006C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private readonly int WaitSplashScreenFrames;

	[Token(Token = "0x40006C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int frameNum;

	[Token(Token = "0x40006C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[SerializeField]
	[HideInInspector]
	private bool foveatedRendering;

	[Token(Token = "0x40006C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	[HideInInspector]
	private EFoveationLevel foveationLevel;

	[Token(Token = "0x40006C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private int eyeTextureId;

	[Token(Token = "0x40006C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private RenderEventType eventType;

	[Token(Token = "0x40006C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Pvr_UnitySDKEyeOverlay compositeLayer;

	[Token(Token = "0x40006CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int overlayLayerDepth;

	[Token(Token = "0x40006CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private int underlayLayerDepth;

	[Token(Token = "0x40006CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool isHeadLocked;

	[Token(Token = "0x40006CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private int layerFlags;

	[Token(Token = "0x40006CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[HideInInspector]
	public bool EyeTracking;

	[Token(Token = "0x40006CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	[HideInInspector]
	public UnityEngine.Vector3 eyePoint;

	[Token(Token = "0x40006D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private EyeTrackingData eyePoseData;

	[Token(Token = "0x40006D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	[HideInInspector]
	public static bool supportEyeTracking;

	[Token(Token = "0x40006D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BBBBC", Offset = "0x8BBBBC")]
	public bool screenFade;

	[Token(Token = "0x40006D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BBBF4", Offset = "0x8BBBF4")]
	public float fadeTime;

	[Token(Token = "0x40006D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BBC2C", Offset = "0x8BBC2C")]
	public Color fadeColor;

	[Token(Token = "0x40006D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public int renderQueue;

	[Token(Token = "0x40006D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private MeshRenderer fadeMeshRenderer;

	[Token(Token = "0x40006D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private MeshFilter fadeMeshFilter;

	[Token(Token = "0x40006D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private Material fadeMaterial;

	[Token(Token = "0x40006D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private float elapsedTime;

	[Token(Token = "0x40006DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
	private bool isFading;

	[Token(Token = "0x40006DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private float currentAlpha;

	[Token(Token = "0x40006DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
	private float nowFadeAlpha;

	[Token(Token = "0x1700008F")]
	public static Pvr_UnitySDKEyeManager Instance
	{
		[Token(Token = "0x6000793")]
		[Address(RVA = "0x12D6C84", Offset = "0x12D6C84", VA = "0x12D6C84")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000090")]
	public Pvr_UnitySDKEye[] Eyes
	{
		[Token(Token = "0x6000794")]
		[Address(RVA = "0x12D6D7C", Offset = "0x12D6D7C", VA = "0x12D6D7C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000091")]
	[HideInInspector]
	public bool FoveatedRendering
	{
		[Token(Token = "0x6000795")]
		[Address(RVA = "0x12E1130", Offset = "0x12E1130", VA = "0x12E1130")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000796")]
		[Address(RVA = "0x12E1138", Offset = "0x12E1138", VA = "0x12E1138")]
		set
		{
		}
	}

	[Token(Token = "0x17000092")]
	[HideInInspector]
	public EFoveationLevel FoveationLevel
	{
		[Token(Token = "0x6000797")]
		[Address(RVA = "0x12E11A4", Offset = "0x12E11A4", VA = "0x12E11A4")]
		get
		{
			return default(EFoveationLevel);
		}
		[Token(Token = "0x6000798")]
		[Address(RVA = "0x12E11AC", Offset = "0x12E11AC", VA = "0x12E11AC")]
		set
		{
		}
	}

	[Token(Token = "0x6000799")]
	[Address(RVA = "0x12E11C0", Offset = "0x12E11C0", VA = "0x12E11C0")]
	private void SetCameraEnableEditor()
	{
	}

	[Token(Token = "0x600079A")]
	[Address(RVA = "0x12E13D0", Offset = "0x12E13D0", VA = "0x12E13D0")]
	private void SetCamerasEnableByStereoRendering()
	{
	}

	[Token(Token = "0x600079B")]
	[Address(RVA = "0x12E1494", Offset = "0x12E1494", VA = "0x12E1494")]
	private void SetupMonoCamera()
	{
	}

	[Token(Token = "0x600079C")]
	[Address(RVA = "0x12E15A8", Offset = "0x12E15A8", VA = "0x12E15A8")]
	private void SetupUpdate()
	{
	}

	[Token(Token = "0x600079D")]
	[Address(RVA = "0x12E1684", Offset = "0x12E1684", VA = "0x12E1684")]
	private void MonoEyeRender()
	{
	}

	[Token(Token = "0x600079E")]
	[Address(RVA = "0x12E1800", Offset = "0x12E1800", VA = "0x12E1800")]
	private void Awake()
	{
	}

	[Token(Token = "0x600079F")]
	[Address(RVA = "0x12E1FB0", Offset = "0x12E1FB0", VA = "0x12E1FB0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60007A0")]
	[Address(RVA = "0x12E2794", Offset = "0x12E2794", VA = "0x12E2794")]
	private void Start()
	{
	}

	[Token(Token = "0x60007A1")]
	[Address(RVA = "0x12E27B8", Offset = "0x12E27B8", VA = "0x12E27B8")]
	private void Update()
	{
	}

	[Token(Token = "0x60007A2")]
	[Address(RVA = "0x12E2A14", Offset = "0x12E2A14", VA = "0x12E2A14")]
	private void OnPause()
	{
	}

	[Token(Token = "0x60007A3")]
	[Address(RVA = "0x12E2AF8", Offset = "0x12E2AF8", VA = "0x12E2AF8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60007A4")]
	[Address(RVA = "0x12E2B00", Offset = "0x12E2B00", VA = "0x12E2B00")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60007A5")]
	[Address(RVA = "0x12E2C68", Offset = "0x12E2C68", VA = "0x12E2C68")]
	private void OnPostRender()
	{
	}

	[Token(Token = "0x60007A6")]
	[Address(RVA = "0x12E2D5C", Offset = "0x12E2D5C", VA = "0x12E2D5C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C3568", Offset = "0x8C3568")]
	private IEnumerator EndOfFrame()
	{
		return null;
	}

	[Token(Token = "0x60007A7")]
	[Address(RVA = "0x12E2DF8", Offset = "0x12E2DF8", VA = "0x12E2DF8")]
	private void CreateExternalSurface(Pvr_UnitySDKEyeOverlay overlayInstance, int layerDepth)
	{
	}

	[Token(Token = "0x60007A8")]
	[Address(RVA = "0x12E31E4", Offset = "0x12E31E4", VA = "0x12E31E4")]
	public bool SetEyeTrackingMode()
	{
		return default(bool);
	}

	[Token(Token = "0x60007A9")]
	[Address(RVA = "0x12D7C1C", Offset = "0x12D7C1C", VA = "0x12D7C1C")]
	public UnityEngine.Vector3 GetEyeTrackingPos()
	{
		return default(UnityEngine.Vector3);
	}

	[Token(Token = "0x60007AA")]
	[Address(RVA = "0x12E349C", Offset = "0x12E349C", VA = "0x12E349C")]
	private EyeDeviceInfo GetDeviceInfo()
	{
		return default(EyeDeviceInfo);
	}

	[Token(Token = "0x60007AB")]
	[Address(RVA = "0x12E1B44", Offset = "0x12E1B44", VA = "0x12E1B44")]
	private void CreateFadeMesh()
	{
	}

	[Token(Token = "0x60007AC")]
	[Address(RVA = "0x12E2B04", Offset = "0x12E2B04", VA = "0x12E2B04")]
	private void DestoryFadeMesh()
	{
	}

	[Token(Token = "0x60007AD")]
	[Address(RVA = "0x12E1FA8", Offset = "0x12E1FA8", VA = "0x12E1FA8")]
	public void SetCurrentAlpha(float alpha)
	{
	}

	[Token(Token = "0x60007AE")]
	[Address(RVA = "0x12E2710", Offset = "0x12E2710", VA = "0x12E2710")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C35CC", Offset = "0x8C35CC")]
	private IEnumerator ScreenFade(float startAlpha, float endAlpha)
	{
		return null;
	}

	[Token(Token = "0x60007AF")]
	[Address(RVA = "0x12E36F8", Offset = "0x12E36F8", VA = "0x12E36F8")]
	private void SetMaterialAlpha()
	{
	}

	[Token(Token = "0x60007B0")]
	[Address(RVA = "0x12E25C0", Offset = "0x12E25C0", VA = "0x12E25C0")]
	public bool GfxDeviceAdvanceFrameGLES()
	{
		return default(bool);
	}

	[Token(Token = "0x60007B1")]
	[Address(RVA = "0x12E387C", Offset = "0x12E387C", VA = "0x12E387C")]
	public Pvr_UnitySDKEyeManager()
	{
	}
}
[Token(Token = "0x200012B")]
public class Pvr_UnitySDKEyeOverlay : MonoBehaviour, IComparable<Pvr_UnitySDKEyeOverlay>
{
	[Token(Token = "0x20006B5")]
	public delegate void ExternalAndroidSurfaceObjectCreated();

	[Token(Token = "0x20006B6")]
	public enum OverlayShape
	{
		[Token(Token = "0x4002271")]
		Quad,
		[Token(Token = "0x4002272")]
		Cylinder,
		[Token(Token = "0x4002273")]
		Equirect
	}

	[Token(Token = "0x20006B7")]
	public enum OverlayType
	{
		[Token(Token = "0x4002275")]
		Overlay,
		[Token(Token = "0x4002276")]
		Underlay
	}

	[Token(Token = "0x20006B8")]
	public enum OverlayTexFilterMode
	{
		[Token(Token = "0x4002278")]
		NotCare,
		[Token(Token = "0x4002279")]
		Nearest,
		[Token(Token = "0x400227A")]
		Linear,
		[Token(Token = "0x400227B")]
		Nearest_Mipmap_Nearest,
		[Token(Token = "0x400227C")]
		Linear_Mipmap_Nearest,
		[Token(Token = "0x400227D")]
		Nearest_Mipmap_Linear,
		[Token(Token = "0x400227E")]
		Linear_Mipmap_Linear
	}

	[Token(Token = "0x40006DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static List<Pvr_UnitySDKEyeOverlay> Instances;

	[Token(Token = "0x40006DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int layerIndex;

	[Token(Token = "0x40006DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public OverlayType overlayType;

	[Token(Token = "0x40006E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OverlayShape overlayShape;

	[Token(Token = "0x40006E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform layerTransform;

	[Token(Token = "0x40006E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Texture[] layerTextures;

	[Token(Token = "0x40006E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int[] layerTextureIds;

	[Token(Token = "0x40006E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Matrix4x4[] MVMatrixs;

	[Token(Token = "0x40006E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public UnityEngine.Vector3[] ModelScales;

	[Token(Token = "0x40006E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Quaternion[] ModelRotations;

	[Token(Token = "0x40006E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public UnityEngine.Vector3[] ModelTranslations;

	[Token(Token = "0x40006E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Quaternion[] CameraRotations;

	[Token(Token = "0x40006E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public UnityEngine.Vector3[] CameraTranslations;

	[Token(Token = "0x40006EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Camera[] layerEyeCamera;

	[Token(Token = "0x40006EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public bool overrideColorScaleAndOffset;

	[Token(Token = "0x40006EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public Vector4 colorScale;

	[Token(Token = "0x40006ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public Vector4 colorOffset;

	[Token(Token = "0x40006EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private Vector4 overlayLayerColorScaleDefault;

	[Token(Token = "0x40006EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private Vector4 overlayLayerColorOffsetDefault;

	[Token(Token = "0x40006F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	public bool isExternalAndroidSurface;

	[Token(Token = "0x40006F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public IntPtr externalAndroidSurfaceObject;

	[Token(Token = "0x40006F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public ExternalAndroidSurfaceObjectCreated externalAndroidSurfaceObjectCreated;

	[Token(Token = "0x60007B3")]
	[Address(RVA = "0x12E4A38", Offset = "0x12E4A38", VA = "0x12E4A38", Slot = "4")]
	public int CompareTo(Pvr_UnitySDKEyeOverlay other)
	{
		return default(int);
	}

	[Token(Token = "0x60007B4")]
	[Address(RVA = "0x12E4A58", Offset = "0x12E4A58", VA = "0x12E4A58")]
	private void Awake()
	{
	}

	[Token(Token = "0x60007B5")]
	[Address(RVA = "0x12E4F3C", Offset = "0x12E4F3C", VA = "0x12E4F3C")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60007B6")]
	[Address(RVA = "0x12E53F0", Offset = "0x12E53F0", VA = "0x12E53F0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60007B7")]
	[Address(RVA = "0x12E2388", Offset = "0x12E2388", VA = "0x12E2388")]
	public void RefreshCamera()
	{
	}

	[Token(Token = "0x60007B8")]
	[Address(RVA = "0x12E4D88", Offset = "0x12E4D88", VA = "0x12E4D88")]
	private void InitializeBuffer()
	{
	}

	[Token(Token = "0x60007B9")]
	[Address(RVA = "0x12E4F40", Offset = "0x12E4F40", VA = "0x12E4F40")]
	private void UpdateCoords()
	{
	}

	[Token(Token = "0x60007BA")]
	[Address(RVA = "0x12E5474", Offset = "0x12E5474", VA = "0x12E5474")]
	public void SetTexture(Texture texture)
	{
	}

	[Token(Token = "0x60007BB")]
	[Address(RVA = "0x12E550C", Offset = "0x12E550C", VA = "0x12E550C")]
	public void SetLayerColorScaleAndOffset(Vector4 scale, Vector4 offset)
	{
	}

	[Token(Token = "0x60007BC")]
	[Address(RVA = "0x12E47A4", Offset = "0x12E47A4", VA = "0x12E47A4")]
	public Vector4 GetLayerColorScale()
	{
		return default(Vector4);
	}

	[Token(Token = "0x60007BD")]
	[Address(RVA = "0x12E47E4", Offset = "0x12E47E4", VA = "0x12E47E4")]
	public Vector4 GetLayerColorOffset()
	{
		return default(Vector4);
	}

	[Token(Token = "0x60007BE")]
	[Address(RVA = "0x12E5520", Offset = "0x12E5520", VA = "0x12E5520")]
	public Pvr_UnitySDKEyeOverlay()
	{
	}
}
[Token(Token = "0x200012C")]
public class Pvr_UnitySDKRender
{
	[Token(Token = "0x40006F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Pvr_UnitySDKRender instance;

	[Token(Token = "0x40006F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public AndroidJavaObject activity;

	[Token(Token = "0x40006F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static AndroidJavaClass javaVrActivityClass;

	[Token(Token = "0x40006F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static AndroidJavaClass javaSysActivityClass;

	[Token(Token = "0x40006F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static AndroidJavaClass javaserviceClass;

	[Token(Token = "0x40006F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static AndroidJavaClass javaVrActivityLongReceiver;

	[Token(Token = "0x40006F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static AndroidJavaClass javaVrActivityClientClass;

	[Token(Token = "0x40006FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool canConnecttoActivity;

	[Token(Token = "0x40006FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	private bool isInitrenderThread;

	[Token(Token = "0x40006FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private string model;

	[Token(Token = "0x40006FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private UnityEngine.Vector2 prefinger1;

	[Token(Token = "0x40006FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private UnityEngine.Vector2 prefinger2;

	[Token(Token = "0x40006FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int eyeTextureCount;

	[Token(Token = "0x4000700")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public RenderTexture[] eyeTextures;

	[Token(Token = "0x4000701")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int[] eyeTextureIds;

	[Token(Token = "0x4000702")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public int currEyeTextureIdx;

	[Token(Token = "0x4000703")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public int nextEyeTextureIdx;

	[Token(Token = "0x4000704")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public int lastEyeTextureIdx;

	[Token(Token = "0x4000705")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public bool isSwitchSDK;

	[Token(Token = "0x4000706")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public int RenderviewNumber;

	[Token(Token = "0x4000707")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public bool isFirstStartup;

	[Token(Token = "0x4000708")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
	public bool isShellMode;

	[Token(Token = "0x4000709")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private StereoRenderingPathPico stereoRenderPath;

	[Token(Token = "0x400070A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8BBC64", Offset = "0x8BBC64")]
	private SDKStereoRendering <StereoRendering>k__BackingField;

	[Token(Token = "0x400070B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float rtScaleFactor;

	[Token(Token = "0x400070C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private float eyeVFov;

	[Token(Token = "0x400070D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float eyeHFov;

	[Token(Token = "0x17000093")]
	public static Pvr_UnitySDKRender Instance
	{
		[Token(Token = "0x60007C0")]
		[Address(RVA = "0xC124B0", Offset = "0xC124B0", VA = "0xC124B0")]
		get
		{
			return null;
		}
		[Token(Token = "0x60007C1")]
		[Address(RVA = "0xC12680", Offset = "0xC12680", VA = "0xC12680")]
		set
		{
		}
	}

	[Token(Token = "0x17000094")]
	public StereoRenderingPathPico StereoRenderPath
	{
		[Token(Token = "0x60007C3")]
		[Address(RVA = "0xC12FF4", Offset = "0xC12FF4", VA = "0xC12FF4")]
		get
		{
			return default(StereoRenderingPathPico);
		}
	}

	[Token(Token = "0x17000095")]
	public SDKStereoRendering StereoRendering
	{
		[Token(Token = "0x60007C4")]
		[Address(RVA = "0xC12FFC", Offset = "0xC12FFC", VA = "0xC12FFC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C3630", Offset = "0x8C3630")]
		get
		{
			return null;
		}
		[Token(Token = "0x60007C5")]
		[Address(RVA = "0xC13004", Offset = "0xC13004", VA = "0xC13004")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C3640", Offset = "0x8C3640")]
		private set
		{
		}
	}

	[Token(Token = "0x17000096")]
	public float RtScaleFactor
	{
		[Token(Token = "0x60007C6")]
		[Address(RVA = "0xC1300C", Offset = "0xC1300C", VA = "0xC1300C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60007C7")]
		[Address(RVA = "0xC13014", Offset = "0xC13014", VA = "0xC13014")]
		set
		{
		}
	}

	[Token(Token = "0x17000097")]
	public float EyeVFoV
	{
		[Token(Token = "0x60007C8")]
		[Address(RVA = "0xC13174", Offset = "0xC13174", VA = "0xC13174")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60007C9")]
		[Address(RVA = "0xC1317C", Offset = "0xC1317C", VA = "0xC1317C")]
		set
		{
		}
	}

	[Token(Token = "0x17000098")]
	public float EyeHFoV
	{
		[Token(Token = "0x60007CA")]
		[Address(RVA = "0xC13190", Offset = "0xC13190", VA = "0xC13190")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60007CB")]
		[Address(RVA = "0xC13198", Offset = "0xC13198", VA = "0xC13198")]
		set
		{
		}
	}

	[Token(Token = "0x60007C2")]
	[Address(RVA = "0xC12570", Offset = "0xC12570", VA = "0xC12570")]
	public Pvr_UnitySDKRender()
	{
	}

	[Token(Token = "0x60007CC")]
	[Address(RVA = "0xC126EC", Offset = "0xC126EC", VA = "0xC126EC")]
	public void ConnectToAndriod()
	{
	}

	[Token(Token = "0x60007CD")]
	[Address(RVA = "0xC12F74", Offset = "0xC12F74", VA = "0xC12F74")]
	public void Init()
	{
	}

	[Token(Token = "0x60007CE")]
	[Address(RVA = "0xC135F0", Offset = "0xC135F0", VA = "0xC135F0")]
	private bool InitRenderAbility()
	{
		return default(bool);
	}

	[Token(Token = "0x60007CF")]
	[Address(RVA = "0xC1370C", Offset = "0xC1370C", VA = "0xC1370C")]
	private bool UpdateRenderParaFrame()
	{
		return default(bool);
	}

	[Token(Token = "0x60007D0")]
	[Address(RVA = "0xC137B8", Offset = "0xC137B8", VA = "0xC137B8")]
	private bool CreateEyeBuffer()
	{
		return default(bool);
	}

	[Token(Token = "0x60007D1")]
	[Address(RVA = "0xC140E0", Offset = "0xC140E0", VA = "0xC140E0")]
	private void InitSinglePass()
	{
	}

	[Token(Token = "0x60007D2")]
	[Address(RVA = "0xC13AEC", Offset = "0xC13AEC", VA = "0xC13AEC")]
	public float GetEyeVFOV()
	{
		return default(float);
	}

	[Token(Token = "0x60007D3")]
	[Address(RVA = "0xC13C4C", Offset = "0xC13C4C", VA = "0xC13C4C")]
	public float GetEyeHFOV()
	{
		return default(float);
	}

	[Token(Token = "0x60007D4")]
	[Address(RVA = "0xC142F8", Offset = "0xC142F8", VA = "0xC142F8")]
	private void ConfigureEyeBuffer(int eyeTextureIndex, UnityEngine.Vector2 resolution)
	{
	}

	[Token(Token = "0x60007D5")]
	[Address(RVA = "0xC1302C", Offset = "0xC1302C", VA = "0xC1302C")]
	public bool ReCreateEyeBuffer()
	{
		return default(bool);
	}

	[Token(Token = "0x60007D6")]
	[Address(RVA = "0xC14814", Offset = "0xC14814", VA = "0xC14814")]
	public void ReInit()
	{
	}

	[Token(Token = "0x60007D7")]
	[Address(RVA = "0xC1482C", Offset = "0xC1482C", VA = "0xC1482C")]
	public void IssueRenderThread()
	{
	}

	[Token(Token = "0x60007D8")]
	[Address(RVA = "0xC14974", Offset = "0xC14974", VA = "0xC14974")]
	private void AutoAdpatForPico1s()
	{
	}

	[Token(Token = "0x60007D9")]
	[Address(RVA = "0xC13DAC", Offset = "0xC13DAC", VA = "0xC13DAC")]
	public UnityEngine.Vector2 GetEyeBufferResolution()
	{
		return default(UnityEngine.Vector2);
	}

	[Token(Token = "0x60007DA")]
	[Address(RVA = "0xC14B9C", Offset = "0xC14B9C", VA = "0xC14B9C")]
	public bool GetUsePredictedMatrix()
	{
		return default(bool);
	}

	[Token(Token = "0x60007DB")]
	[Address(RVA = "0xC131AC", Offset = "0xC131AC", VA = "0xC131AC")]
	public bool GetIsShellMode()
	{
		return default(bool);
	}
}
[Token(Token = "0x200012D")]
public class Pvr_UnitySDKSinglePass : SDKStereoRendering
{
	[Token(Token = "0x400070E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Camera bothCamera;

	[Token(Token = "0x400070F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Matrix4x4[] unity_StereoMatrixP;

	[Token(Token = "0x4000710")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Matrix4x4[] unity_StereoMatrixInvP;

	[Token(Token = "0x4000711")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Matrix4x4[] unity_StereoWorldToCamera;

	[Token(Token = "0x4000712")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Matrix4x4[] unity_StereoCameraToWorld;

	[Token(Token = "0x4000713")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Matrix4x4[] unity_StereoMatrixVP;

	[Token(Token = "0x4000714")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private UnityEngine.Vector3[] eyesOffset;

	[Token(Token = "0x4000715")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static Matrix4x4[] eyesOffsetMatrix;

	[Token(Token = "0x4000716")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private CommandBuffer commandBufferBeforeForwardOpaque;

	[Token(Token = "0x4000717")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private CommandBuffer commandBufferBeforeSkybox;

	[Token(Token = "0x4000718")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private CommandBuffer commandBufferAfterSkybox;

	[Token(Token = "0x60007DD")]
	[Address(RVA = "0xC17FE0", Offset = "0xC17FE0", VA = "0xC17FE0", Slot = "4")]
	public override void InitEye(Camera eye)
	{
	}

	[Token(Token = "0x60007DE")]
	[Address(RVA = "0xC18858", Offset = "0xC18858", VA = "0xC18858", Slot = "5")]
	public override void OnSDKRenderInited()
	{
	}

	[Token(Token = "0x60007DF")]
	[Address(RVA = "0xC18980", Offset = "0xC18980", VA = "0xC18980", Slot = "6")]
	public override void OnSDKPreRender()
	{
	}

	[Token(Token = "0x60007E0")]
	[Address(RVA = "0xC191A4", Offset = "0xC191A4", VA = "0xC191A4", Slot = "7")]
	public override void OnSDKPostRender()
	{
	}

	[Token(Token = "0x60007E1")]
	[Address(RVA = "0xC1885C", Offset = "0xC1885C", VA = "0xC1885C")]
	public void OnSDKRenderInited_SinglePass()
	{
	}

	[Token(Token = "0x60007E2")]
	[Address(RVA = "0xC1925C", Offset = "0xC1925C", VA = "0xC1925C")]
	private void SetAntiAliasing()
	{
	}

	[Token(Token = "0x60007E3")]
	[Address(RVA = "0xC182FC", Offset = "0xC182FC", VA = "0xC182FC")]
	public void SetEyesPosition()
	{
	}

	[Token(Token = "0x60007E4")]
	[Address(RVA = "0xC18710", Offset = "0xC18710", VA = "0xC18710")]
	public void SetEyeProjection()
	{
	}

	[Token(Token = "0x60007E5")]
	[Address(RVA = "0xC19364", Offset = "0xC19364", VA = "0xC19364")]
	private static Matrix4x4 GetProjection(float near, float far)
	{
		return default(Matrix4x4);
	}

	[Token(Token = "0x60007E6")]
	[Address(RVA = "0xC1957C", Offset = "0xC1957C", VA = "0xC1957C")]
	public static Matrix4x4 MakeProjection(float n, float f)
	{
		return default(Matrix4x4);
	}

	[Token(Token = "0x60007E7")]
	[Address(RVA = "0xC19438", Offset = "0xC19438", VA = "0xC19438")]
	public void SetStereoProjectionMatrix(Matrix4x4 left, Matrix4x4 right)
	{
	}

	[Token(Token = "0x60007E8")]
	[Address(RVA = "0xC191AC", Offset = "0xC191AC", VA = "0xC191AC")]
	private void SwitchKeywordAndDeviceView(bool enable)
	{
	}

	[Token(Token = "0x60007E9")]
	[Address(RVA = "0xC19758", Offset = "0xC19758", VA = "0xC19758")]
	public static Matrix4x4[] GetStereoWorldToCameraMat()
	{
		return null;
	}

	[Token(Token = "0x60007EA")]
	[Address(RVA = "0xC18984", Offset = "0xC18984", VA = "0xC18984")]
	public void SinglePassPreRender()
	{
	}

	[Token(Token = "0x60007EB")]
	[Address(RVA = "0xC19A04", Offset = "0xC19A04", VA = "0xC19A04")]
	private void SetCommandBuffers()
	{
	}

	[Token(Token = "0x60007EC")]
	[Address(RVA = "0xC19964", Offset = "0xC19964", VA = "0xC19964")]
	private void SetRenderTextureWithDepth()
	{
	}

	[Token(Token = "0x60007ED")]
	[Address(RVA = "0xC1476C", Offset = "0xC1476C", VA = "0xC1476C")]
	public Pvr_UnitySDKSinglePass()
	{
	}
}
[Token(Token = "0x200012E")]
public abstract class SDKStereoRendering
{
	[Token(Token = "0x60007EF")]
	public abstract void InitEye(Camera eye);

	[Token(Token = "0x60007F0")]
	public abstract void OnSDKRenderInited();

	[Token(Token = "0x60007F1")]
	public abstract void OnSDKPreRender();

	[Token(Token = "0x60007F2")]
	public abstract void OnSDKPostRender();

	[Token(Token = "0x60007F3")]
	[Address(RVA = "0xC1A058", Offset = "0xC1A058", VA = "0xC1A058")]
	protected SDKStereoRendering()
	{
	}
}
[Token(Token = "0x200012F")]
public class HighlightAtGaze : MonoBehaviour
{
	[Token(Token = "0x4000719")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Color HighlightColor;

	[Token(Token = "0x400071A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float AnimationTime;

	[Token(Token = "0x400071B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Renderer myRenderer;

	[Token(Token = "0x400071C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Color originalColor;

	[Token(Token = "0x400071D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Color targetColor;

	[Token(Token = "0x400071E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private EyeTrackingGazeRay gazeRay;

	[Token(Token = "0x60007F4")]
	[Address(RVA = "0xAD5598", Offset = "0xAD5598", VA = "0xAD5598")]
	private void Start()
	{
	}

	[Token(Token = "0x60007F5")]
	[Address(RVA = "0xAD561C", Offset = "0xAD561C", VA = "0xAD561C")]
	private void Update()
	{
	}

	[Token(Token = "0x60007F6")]
	[Address(RVA = "0xAD57F8", Offset = "0xAD57F8", VA = "0xAD57F8")]
	public HighlightAtGaze()
	{
	}
}
[Token(Token = "0x2000130")]
public class RayVisualizer : MonoBehaviour
{
	[Token(Token = "0x400071F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private LineRenderer _line;

	[Token(Token = "0x4000720")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private EyeTrackingGazeRay gazeRay;

	[Token(Token = "0x60007F7")]
	[Address(RVA = "0xC1D7C0", Offset = "0xC1D7C0", VA = "0xC1D7C0")]
	private void Start()
	{
	}

	[Token(Token = "0x60007F8")]
	[Address(RVA = "0xC1D858", Offset = "0xC1D858", VA = "0xC1D858")]
	private void Update()
	{
	}

	[Token(Token = "0x60007F9")]
	[Address(RVA = "0xC1D9F0", Offset = "0xC1D9F0", VA = "0xC1D9F0")]
	public RayVisualizer()
	{
	}
}
[Token(Token = "0x2000131")]
public class GetSeeThroughImage : MonoBehaviour
{
	[Token(Token = "0x4000721")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RawImage viewImage_left;

	[Token(Token = "0x4000722")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public RawImage viewImage_right;

	[Token(Token = "0x4000723")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int width;

	[Token(Token = "0x4000724")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private int height;

	[Token(Token = "0x4000725")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private RenderTexture cameraTex_left;

	[Token(Token = "0x4000726")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private RenderTexture cameraTex_right;

	[Token(Token = "0x4000727")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool cameraPreview;

	[Token(Token = "0x60007FA")]
	[Address(RVA = "0xC50C98", Offset = "0xC50C98", VA = "0xC50C98")]
	private void Start()
	{
	}

	[Token(Token = "0x60007FB")]
	[Address(RVA = "0xC50DB0", Offset = "0xC50DB0", VA = "0xC50DB0")]
	private void Update()
	{
	}

	[Token(Token = "0x60007FC")]
	[Address(RVA = "0xC50E3C", Offset = "0xC50E3C", VA = "0xC50E3C")]
	private void OnDestory()
	{
	}

	[Token(Token = "0x60007FD")]
	[Address(RVA = "0xC50C9C", Offset = "0xC50C9C", VA = "0xC50C9C")]
	private void CreateTexture()
	{
	}

	[Token(Token = "0x60007FE")]
	[Address(RVA = "0xC50DEC", Offset = "0xC50DEC", VA = "0xC50DEC")]
	private void DrawTexture()
	{
	}

	[Token(Token = "0x60007FF")]
	[Address(RVA = "0xC50E54", Offset = "0xC50E54", VA = "0xC50E54")]
	public GetSeeThroughImage()
	{
	}
}
[Token(Token = "0x2000132")]
public class OverlayExternalSurfaceDemo : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20006B9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B7C34", Offset = "0x8B7C34")]
	private sealed class <>c
	{
		[Token(Token = "0x400227F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4002280")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Pvr_UnitySDKEyeOverlay.ExternalAndroidSurfaceObjectCreated <>9__7_0;

		[Token(Token = "0x60028D6")]
		[Address(RVA = "0xAF8F84", Offset = "0xAF8F84", VA = "0xAF8F84")]
		public <>c()
		{
		}

		[Token(Token = "0x60028D7")]
		[Address(RVA = "0xAF8F8C", Offset = "0xAF8F8C", VA = "0xAF8F8C")]
		internal void <StartPlay>b__7_0()
		{
		}
	}

	[Token(Token = "0x4000728")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string movieName;

	[Token(Token = "0x4000729")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Pvr_UnitySDKEyeOverlay.OverlayType overlayType;

	[Token(Token = "0x400072A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Pvr_UnitySDKEyeOverlay.OverlayShape overlayShape;

	[Token(Token = "0x400072B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Pvr_UnitySDKEyeOverlay overlay;

	[Token(Token = "0x400072C")]
	private const string TAG = "[ExternalSurface]>>>>>>";

	[Token(Token = "0x6000800")]
	[Address(RVA = "0xAF8B80", Offset = "0xAF8B80", VA = "0xAF8B80")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000801")]
	[Address(RVA = "0xAF8CA4", Offset = "0xAF8CA4", VA = "0xAF8CA4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000802")]
	[Address(RVA = "0xAF8D28", Offset = "0xAF8D28", VA = "0xAF8D28")]
	private void StartPlay(string moviePath, string licenceUrl)
	{
	}

	[Token(Token = "0x6000803")]
	[Address(RVA = "0xAF8F18", Offset = "0xAF8F18", VA = "0xAF8F18")]
	public OverlayExternalSurfaceDemo()
	{
	}
}
[Token(Token = "0x2000133")]
public class MoveCylinder : MonoBehaviour
{
	[Token(Token = "0x400072D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private UnityEngine.Vector3 startingPosition;

	[Token(Token = "0x400072E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Quaternion startingRotation;

	[Token(Token = "0x6000804")]
	[Address(RVA = "0xB865EC", Offset = "0xB865EC", VA = "0xB865EC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000805")]
	[Address(RVA = "0xB86648", Offset = "0xB86648", VA = "0xB86648")]
	public void Reset()
	{
	}

	[Token(Token = "0x6000806")]
	[Address(RVA = "0xB866A0", Offset = "0xB866A0", VA = "0xB866A0")]
	public MoveCylinder()
	{
	}
}
[Token(Token = "0x2000134")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8B5FB8", Offset = "0x8B5FB8")]
public class MoveSphere : MonoBehaviour
{
	[Token(Token = "0x400072F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private UnityEngine.Vector3 startingPosition;

	[Token(Token = "0x6000807")]
	[Address(RVA = "0xB867B8", Offset = "0xB867B8", VA = "0xB867B8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000808")]
	[Address(RVA = "0xB8692C", Offset = "0xB8692C", VA = "0xB8692C")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000809")]
	[Address(RVA = "0xB86894", Offset = "0xB86894", VA = "0xB86894")]
	public void SetGazedAt(bool gazedAt)
	{
	}

	[Token(Token = "0x600080A")]
	[Address(RVA = "0xB86930", Offset = "0xB86930", VA = "0xB86930")]
	public void Reset()
	{
	}

	[Token(Token = "0x600080B")]
	[Address(RVA = "0xB86A30", Offset = "0xB86A30", VA = "0xB86A30")]
	public void TeleportRandomly()
	{
	}

	[Token(Token = "0x600080C")]
	[Address(RVA = "0xB86B3C", Offset = "0xB86B3C", VA = "0xB86B3C")]
	public MoveSphere()
	{
	}
}
[Token(Token = "0x2000135")]
public class Resetbutton : MonoBehaviour
{
	[Token(Token = "0x600080D")]
	[Address(RVA = "0xC1F4F4", Offset = "0xC1F4F4", VA = "0xC1F4F4")]
	public void DemoResetTracking()
	{
	}

	[Token(Token = "0x600080E")]
	[Address(RVA = "0xC1F588", Offset = "0xC1F588", VA = "0xC1F588")]
	public Resetbutton()
	{
	}
}
[Token(Token = "0x2000136")]
public class UserEntitlementCheck : MonoBehaviour
{
	[Token(Token = "0x600080F")]
	[Address(RVA = "0xC05AF0", Offset = "0xC05AF0", VA = "0xC05AF0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000810")]
	[Address(RVA = "0xC05B84", Offset = "0xC05B84", VA = "0xC05B84")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000811")]
	[Address(RVA = "0xC05C18", Offset = "0xC05C18", VA = "0xC05C18")]
	private void HandelEntitlementCheckResult(int resultCode)
	{
	}

	[Token(Token = "0x6000812")]
	[Address(RVA = "0xC05EE4", Offset = "0xC05EE4", VA = "0xC05EE4")]
	public UserEntitlementCheck()
	{
	}
}
[Token(Token = "0x2000137")]
public class Pvr_UnitySDKHeadTrack : MonoBehaviour
{
	[Token(Token = "0x4000730")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BBC74", Offset = "0x8BBC74")]
	public bool trackRotation;

	[Token(Token = "0x4000731")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BBCAC", Offset = "0x8BBCAC")]
	public bool trackPosition;

	[Token(Token = "0x4000732")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform target;

	[Token(Token = "0x4000733")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool updated;

	[Token(Token = "0x4000734")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	private bool dataClock;

	[Token(Token = "0x17000099")]
	public Ray Gaze
	{
		[Token(Token = "0x6000813")]
		[Address(RVA = "0x12E58F0", Offset = "0x12E58F0", VA = "0x12E58F0")]
		get
		{
			return default(Ray);
		}
	}

	[Token(Token = "0x6000814")]
	[Address(RVA = "0x12E5DE8", Offset = "0x12E5DE8", VA = "0x12E5DE8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000815")]
	[Address(RVA = "0x12E598C", Offset = "0x12E598C", VA = "0x12E598C")]
	private void UpdateHead()
	{
	}

	[Token(Token = "0x6000816")]
	[Address(RVA = "0x12E5DF0", Offset = "0x12E5DF0", VA = "0x12E5DF0")]
	public Pvr_UnitySDKHeadTrack()
	{
	}
}
[Token(Token = "0x2000138")]
public class Pvr_UnitySDKPose
{
	[Token(Token = "0x4000735")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	protected static readonly Matrix4x4 flipZ;

	[Token(Token = "0x4000736")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8BBCE4", Offset = "0x8BBCE4")]
	private UnityEngine.Vector3 <Position>k__BackingField;

	[Token(Token = "0x4000737")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8BBCF4", Offset = "0x8BBCF4")]
	private Quaternion <Orientation>k__BackingField;

	[Token(Token = "0x4000738")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8BBD04", Offset = "0x8BBD04")]
	private Matrix4x4 <Matrix>k__BackingField;

	[Token(Token = "0x1700009A")]
	public Matrix4x4 RightHandedMatrix
	{
		[Token(Token = "0x6000817")]
		[Address(RVA = "0xC11D88", Offset = "0xC11D88", VA = "0xC11D88")]
		get
		{
			return default(Matrix4x4);
		}
	}

	[Token(Token = "0x1700009B")]
	public UnityEngine.Vector3 Position
	{
		[Token(Token = "0x6000818")]
		[Address(RVA = "0xC11ECC", Offset = "0xC11ECC", VA = "0xC11ECC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C3650", Offset = "0x8C3650")]
		get
		{
			return default(UnityEngine.Vector3);
		}
		[Token(Token = "0x6000819")]
		[Address(RVA = "0xC11ED8", Offset = "0xC11ED8", VA = "0xC11ED8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C3660", Offset = "0x8C3660")]
		protected set
		{
		}
	}

	[Token(Token = "0x1700009C")]
	public Quaternion Orientation
	{
		[Token(Token = "0x600081A")]
		[Address(RVA = "0xC11EE4", Offset = "0xC11EE4", VA = "0xC11EE4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C3670", Offset = "0x8C3670")]
		get
		{
			return default(Quaternion);
		}
		[Token(Token = "0x600081B")]
		[Address(RVA = "0xC11EF0", Offset = "0xC11EF0", VA = "0xC11EF0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C3680", Offset = "0x8C3680")]
		protected set
		{
		}
	}

	[Token(Token = "0x1700009D")]
	public Matrix4x4 Matrix
	{
		[Token(Token = "0x600081C")]
		[Address(RVA = "0xC11EFC", Offset = "0xC11EFC", VA = "0xC11EFC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C3690", Offset = "0x8C3690")]
		get
		{
			return default(Matrix4x4);
		}
		[Token(Token = "0x600081D")]
		[Address(RVA = "0xC11F18", Offset = "0xC11F18", VA = "0xC11F18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C36A0", Offset = "0x8C36A0")]
		protected set
		{
		}
	}

	[Token(Token = "0x600081E")]
	[Address(RVA = "0xC11F34", Offset = "0xC11F34", VA = "0xC11F34")]
	public Pvr_UnitySDKPose(Matrix4x4 matrix)
	{
	}

	[Token(Token = "0x600081F")]
	[Address(RVA = "0xC120EC", Offset = "0xC120EC", VA = "0xC120EC")]
	public Pvr_UnitySDKPose(UnityEngine.Vector3 position, Quaternion orientation)
	{
	}

	[Token(Token = "0x6000820")]
	[Address(RVA = "0xC1216C", Offset = "0xC1216C", VA = "0xC1216C")]
	public void Set(UnityEngine.Vector3 position, Quaternion orientation)
	{
	}

	[Token(Token = "0x6000821")]
	[Address(RVA = "0xC11F80", Offset = "0xC11F80", VA = "0xC11F80")]
	protected void Set(Matrix4x4 matrix)
	{
	}

	[Token(Token = "0x6000822")]
	[Address(RVA = "0xC1229C", Offset = "0xC1229C", VA = "0xC1229C")]
	private Quaternion NormalizeQuaternion(ref Quaternion q)
	{
		return default(Quaternion);
	}
}
[Token(Token = "0x2000139")]
public class Pvr_UnitySDKSensor
{
	[Token(Token = "0x20006BA")]
	public delegate void Enter3DofModel();

	[Token(Token = "0x20006BB")]
	public delegate void Exit3DofModel();

	[Token(Token = "0x4000739")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Pvr_UnitySDKSensor instance;

	[Token(Token = "0x400073A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private bool SensorStart;

	[Token(Token = "0x400073B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	private bool SensorInit;

	[Token(Token = "0x400073C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private Quaternion UnityQuaternion;

	[Token(Token = "0x400073D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private UnityEngine.Vector3 UnityPosition;

	[Token(Token = "0x400073E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Sensorindex sensorIndex;

	[Token(Token = "0x400073F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private bool dofClock;

	[Token(Token = "0x4000740")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static Action EyeFovChanged;

	[Token(Token = "0x4000741")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Pvr_UnitySDKPose HeadPose;

	[Token(Token = "0x4000744")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float vfov;

	[Token(Token = "0x4000745")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float hfov;

	[Token(Token = "0x4000746")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float w;

	[Token(Token = "0x4000747")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float x;

	[Token(Token = "0x4000748")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float y;

	[Token(Token = "0x4000749")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float z;

	[Token(Token = "0x400074A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float px;

	[Token(Token = "0x400074B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float py;

	[Token(Token = "0x400074C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float pz;

	[Token(Token = "0x1700009E")]
	public static Pvr_UnitySDKSensor Instance
	{
		[Token(Token = "0x6000824")]
		[Address(RVA = "0xC14BA8", Offset = "0xC14BA8", VA = "0xC14BA8")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000825")]
		[Address(RVA = "0xC14D24", Offset = "0xC14D24", VA = "0xC14D24")]
		set
		{
		}
	}

	[Token(Token = "0x14000026")]
	public static event Enter3DofModel Enter3DofModelEvent
	{
		[Token(Token = "0x6000827")]
		[Address(RVA = "0xC14EC4", Offset = "0xC14EC4", VA = "0xC14EC4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C36B0", Offset = "0x8C36B0")]
		add
		{
		}
		[Token(Token = "0x6000828")]
		[Address(RVA = "0xC14FB4", Offset = "0xC14FB4", VA = "0xC14FB4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C36C0", Offset = "0x8C36C0")]
		remove
		{
		}
	}

	[Token(Token = "0x14000027")]
	public static event Exit3DofModel Exit3DofModelEvent
	{
		[Token(Token = "0x6000829")]
		[Address(RVA = "0xC150A4", Offset = "0xC150A4", VA = "0xC150A4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C36D0", Offset = "0x8C36D0")]
		add
		{
		}
		[Token(Token = "0x600082A")]
		[Address(RVA = "0xC15194", Offset = "0xC15194", VA = "0xC15194")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C36E0", Offset = "0x8C36E0")]
		remove
		{
		}
	}

	[Token(Token = "0x6000826")]
	[Address(RVA = "0xC14C68", Offset = "0xC14C68", VA = "0xC14C68")]
	public Pvr_UnitySDKSensor()
	{
	}

	[Token(Token = "0x600082B")]
	[Address(RVA = "0xC14D90", Offset = "0xC14D90", VA = "0xC14D90")]
	public void Init()
	{
	}

	[Token(Token = "0x600082C")]
	[Address(RVA = "0xC15744", Offset = "0xC15744", VA = "0xC15744")]
	public void SensorUpdate()
	{
	}

	[Token(Token = "0x600082D")]
	[Address(RVA = "0xC154CC", Offset = "0xC154CC", VA = "0xC154CC")]
	public bool InitUnitySDKSensor()
	{
		return default(bool);
	}

	[Token(Token = "0x600082E")]
	[Address(RVA = "0xC15284", Offset = "0xC15284", VA = "0xC15284")]
	public bool InitUnitySDK6DofSensor()
	{
		return default(bool);
	}

	[Token(Token = "0x600082F")]
	[Address(RVA = "0xC15608", Offset = "0xC15608", VA = "0xC15608")]
	public bool StartUnitySDKSensor()
	{
		return default(bool);
	}

	[Token(Token = "0x6000830")]
	[Address(RVA = "0xC167A0", Offset = "0xC167A0", VA = "0xC167A0")]
	public bool StopUnitySDKSensor()
	{
		return default(bool);
	}

	[Token(Token = "0x6000831")]
	[Address(RVA = "0xC168DC", Offset = "0xC168DC", VA = "0xC168DC")]
	public bool ResetUnitySDKSensor()
	{
		return default(bool);
	}

	[Token(Token = "0x6000832")]
	[Address(RVA = "0xC16A58", Offset = "0xC16A58", VA = "0xC16A58")]
	public bool OptionalResetUnitySDKSensor(int resetRot, int resetPos)
	{
		return default(bool);
	}

	[Token(Token = "0x6000833")]
	[Address(RVA = "0xC15790", Offset = "0xC15790", VA = "0xC15790")]
	public bool GetUnitySDKSensorState()
	{
		return default(bool);
	}

	[Token(Token = "0x6000834")]
	[Address(RVA = "0xC171F8", Offset = "0xC171F8", VA = "0xC171F8")]
	public bool GetUnitySDKPSensorState()
	{
		return default(bool);
	}

	[Token(Token = "0x6000835")]
	[Address(RVA = "0xC17058", Offset = "0xC17058", VA = "0xC17058")]
	private void RefreshHeadData(float x, float y, float z, float w, float px, float py, float pz)
	{
	}
}
[Token(Token = "0x200013A")]
public class CLoadingAsset : ScriptableObject
{
	[Token(Token = "0x400074D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int SplashScreenType;

	[Token(Token = "0x400074E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<Texture2D> splashImage;

	[Token(Token = "0x400074F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Texture2D Inside_background;

	[Token(Token = "0x4000750")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool UseSplashText;

	[Token(Token = "0x4000751")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string DefaultText;

	[Token(Token = "0x4000752")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string ChineseText;

	[Token(Token = "0x4000753")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public string EnglishText;

	[Token(Token = "0x4000754")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public string JapaneseText;

	[Token(Token = "0x4000755")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public string KoreanText;

	[Token(Token = "0x4000756")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public string FontSize;

	[Token(Token = "0x4000757")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Color FontColor;

	[Token(Token = "0x4000758")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public string TextHeight;

	[Token(Token = "0x4000759")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public bool UseCarousel;

	[Token(Token = "0x400075A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public int SplashTextAlignment;

	[Token(Token = "0x6000837")]
	[Address(RVA = "0xB03AC8", Offset = "0xB03AC8", VA = "0xB03AC8")]
	public CLoadingAsset()
	{
	}
}
[Serializable]
[Token(Token = "0x200013B")]
public class Pvr_UnitySDKConfigProfile
{
	[Token(Token = "0x20006BC")]
	public struct Lenses
	{
		[Token(Token = "0x4002281")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float separation;

		[Token(Token = "0x4002282")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float offset;

		[Token(Token = "0x4002283")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float distance;

		[Token(Token = "0x4002284")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public int alignment;

		[Token(Token = "0x4002285")]
		public const int AlignTop = -1;

		[Token(Token = "0x4002286")]
		public const int AlignCenter = 0;

		[Token(Token = "0x4002287")]
		public const int AlignBottom = 1;
	}

	[Token(Token = "0x20006BD")]
	public struct MaxFOV
	{
		[Token(Token = "0x4002288")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float upper;

		[Token(Token = "0x4002289")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float lower;

		[Token(Token = "0x400228A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float inner;

		[Token(Token = "0x400228B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float outer;
	}

	[Token(Token = "0x20006BE")]
	public struct Distortion
	{
		[Token(Token = "0x400228C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float k1;

		[Token(Token = "0x400228D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float k2;

		[Token(Token = "0x400228E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float k3;

		[Token(Token = "0x400228F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float k4;

		[Token(Token = "0x4002290")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float k5;

		[Token(Token = "0x4002291")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float k6;

		[Token(Token = "0x60028E0")]
		[Address(RVA = "0x991784", Offset = "0x991784", VA = "0x991784")]
		public float distort(float r)
		{
			return default(float);
		}

		[Token(Token = "0x60028E1")]
		[Address(RVA = "0x99178C", Offset = "0x99178C", VA = "0x99178C")]
		public float distort(float r, float dist)
		{
			return default(float);
		}

		[Token(Token = "0x60028E2")]
		[Address(RVA = "0x991794", Offset = "0x991794", VA = "0x991794")]
		public float diatortInv(float radious)
		{
			return default(float);
		}
	}

	[Token(Token = "0x20006BF")]
	public struct Device
	{
		[Token(Token = "0x4002292")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Lenses devLenses;

		[Token(Token = "0x4002293")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public MaxFOV devMaxFov;

		[Token(Token = "0x4002294")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Distortion devDistortion;

		[Token(Token = "0x4002295")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Distortion devDistortionInv;
	}

	[Token(Token = "0x400075B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly Device SimulateDevice;

	[Token(Token = "0x400075C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Device device;

	[Token(Token = "0x400075D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public static readonly Pvr_UnitySDKConfigProfile Default;

	[Token(Token = "0x6000838")]
	[Address(RVA = "0x12DDD20", Offset = "0x12DDD20", VA = "0x12DDD20")]
	public Pvr_UnitySDKConfigProfile Clone()
	{
		return null;
	}

	[Token(Token = "0x6000839")]
	[Address(RVA = "0x12DDDB8", Offset = "0x12DDDB8", VA = "0x12DDDB8")]
	public static Pvr_UnitySDKConfigProfile GetPicoProfile()
	{
		return null;
	}

	[Token(Token = "0x600083A")]
	[Address(RVA = "0x12DDE60", Offset = "0x12DDE60", VA = "0x12DDE60")]
	public float[] GetLeftEyeVisibleTanAngles(float width, float height)
	{
		return null;
	}

	[Token(Token = "0x600083B")]
	[Address(RVA = "0x12DE1AC", Offset = "0x12DE1AC", VA = "0x12DE1AC")]
	public float[] GetLeftEyeNoLensTanAngles(float width, float height)
	{
		return null;
	}

	[Token(Token = "0x600083C")]
	[Address(RVA = "0x12DE3D8", Offset = "0x12DE3D8", VA = "0x12DE3D8")]
	public Rect GetLeftEyeVisibleScreenRect(float[] undistortedFrustum, float width, float height)
	{
		return default(Rect);
	}

	[Token(Token = "0x600083D")]
	[Address(RVA = "0x12DDDB0", Offset = "0x12DDDB0", VA = "0x12DDDB0")]
	public Pvr_UnitySDKConfigProfile()
	{
	}
}
[Token(Token = "0x200013C")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8B601C", Offset = "0x8B601C")]
public class Pvr_UnitySDKFPS : MonoBehaviour
{
	[Token(Token = "0x400075E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text fpsText;

	[Token(Token = "0x400075F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float updateInterval;

	[Token(Token = "0x4000760")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float accum;

	[Token(Token = "0x4000761")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int frames;

	[Token(Token = "0x4000762")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float timeLeft;

	[Token(Token = "0x4000763")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private string strFps;

	[Token(Token = "0x600083F")]
	[Address(RVA = "0x12E5750", Offset = "0x12E5750", VA = "0x12E5750")]
	private void Update()
	{
	}

	[Token(Token = "0x6000840")]
	[Address(RVA = "0x12E57D8", Offset = "0x12E57D8", VA = "0x12E57D8")]
	private void ShowFps()
	{
	}

	[Token(Token = "0x6000841")]
	[Address(RVA = "0x12E58E0", Offset = "0x12E58E0", VA = "0x12E58E0")]
	public Pvr_UnitySDKFPS()
	{
	}
}
[Token(Token = "0x200013D")]
public class Pvr_GazeFuse : MonoBehaviour
{
	[Token(Token = "0x4000764")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject gazeGameObject;

	[Token(Token = "0x4000765")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Image image;

	[Token(Token = "0x6000842")]
	[Address(RVA = "0x13F8160", Offset = "0x13F8160", VA = "0x13F8160")]
	private void Start()
	{
	}

	[Token(Token = "0x6000843")]
	[Address(RVA = "0x13F81B8", Offset = "0x13F81B8", VA = "0x13F81B8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000844")]
	[Address(RVA = "0x13F82EC", Offset = "0x13F82EC", VA = "0x13F82EC")]
	private void FuseAmountChanged(float fuseAmount)
	{
	}

	[Token(Token = "0x6000845")]
	[Address(RVA = "0x13F8394", Offset = "0x13F8394", VA = "0x13F8394")]
	public Pvr_GazeFuse()
	{
	}
}
[Token(Token = "0x200013E")]
public class Pvr_GazeInputModule : PointerInputModule
{
	[Token(Token = "0x20006C0")]
	public enum Mode
	{
		[Token(Token = "0x4002297")]
		Click,
		[Token(Token = "0x4002298")]
		Gaze
	}

	[Token(Token = "0x4000766")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Mode mode;

	[Token(Token = "0x4000767")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BBD34", Offset = "0x8BBD34")]
	public string ClickInputName;

	[Token(Token = "0x4000768")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BBD6C", Offset = "0x8BBD6C")]
	public float GazeTimeInSeconds;

	[Token(Token = "0x4000769")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8BBDA4", Offset = "0x8BBDA4")]
	private static float <gazeFraction>k__BackingField;

	[Token(Token = "0x400076A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8BBDB4", Offset = "0x8BBDB4")]
	private static GameObject <gazeGameObject>k__BackingField;

	[Token(Token = "0x400076B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public RaycastResult CurrentRaycast;

	[Token(Token = "0x400076C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private PointerEventData pointerEventData;

	[Token(Token = "0x400076D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private GameObject currentLookAtHandler;

	[Token(Token = "0x400076E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private float currentLookAtHandlerClickTime;

	[Token(Token = "0x1700009F")]
	public static float gazeFraction
	{
		[Token(Token = "0x6000846")]
		[Address(RVA = "0x13F839C", Offset = "0x13F839C", VA = "0x13F839C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C36F0", Offset = "0x8C36F0")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000847")]
		[Address(RVA = "0x13F83EC", Offset = "0x13F83EC", VA = "0x13F83EC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C3700", Offset = "0x8C3700")]
		private set
		{
		}
	}

	[Token(Token = "0x170000A0")]
	public static GameObject gazeGameObject
	{
		[Token(Token = "0x6000848")]
		[Address(RVA = "0x13F8448", Offset = "0x13F8448", VA = "0x13F8448")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C3710", Offset = "0x8C3710")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000849")]
		[Address(RVA = "0x13F8498", Offset = "0x13F8498", VA = "0x13F8498")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C3720", Offset = "0x8C3720")]
		private set
		{
		}
	}

	[Token(Token = "0x600084A")]
	[Address(RVA = "0x13F84EC", Offset = "0x13F84EC", VA = "0x13F84EC", Slot = "17")]
	public override void Process()
	{
	}

	[Token(Token = "0x600084B")]
	[Address(RVA = "0x13F8510", Offset = "0x13F8510", VA = "0x13F8510")]
	private void HandleLook()
	{
	}

	[Token(Token = "0x600084C")]
	[Address(RVA = "0x13F86D4", Offset = "0x13F86D4", VA = "0x13F86D4")]
	private void HandleSelection()
	{
	}

	[Token(Token = "0x600084D")]
	[Address(RVA = "0x13F8B80", Offset = "0x13F8B80", VA = "0x13F8B80")]
	public Pvr_GazeInputModule()
	{
	}
}
[Token(Token = "0x200013F")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8B6080", Offset = "0x8B6080")]
public class Pvr_GazeInputModuleCrosshair : MonoBehaviour
{
	[Token(Token = "0x400076F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool DisplayCrosshair;

	[Token(Token = "0x4000770")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BBDC4", Offset = "0x8BBDC4")]
	public Transform Crosshair;

	[Token(Token = "0x4000771")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Pvr_GazeInputModule gazeInputModule;

	[Token(Token = "0x4000772")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private UnityEngine.Vector3 CrosshairOriginalScale;

	[Token(Token = "0x4000773")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float CrosshairOriginalDistance;

	[Token(Token = "0x600084E")]
	[Address(RVA = "0x13F8BE0", Offset = "0x13F8BE0", VA = "0x13F8BE0")]
	private void Awake()
	{
	}

	[Token(Token = "0x600084F")]
	[Address(RVA = "0x13F8C38", Offset = "0x13F8C38", VA = "0x13F8C38")]
	private void Start()
	{
	}

	[Token(Token = "0x6000850")]
	[Address(RVA = "0x13F8CA0", Offset = "0x13F8CA0", VA = "0x13F8CA0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000851")]
	[Address(RVA = "0x13F8DB0", Offset = "0x13F8DB0", VA = "0x13F8DB0")]
	private void SetCrossHairAtDistance(float dist)
	{
	}

	[Token(Token = "0x6000852")]
	[Address(RVA = "0x13F8EA8", Offset = "0x13F8EA8", VA = "0x13F8EA8")]
	public Pvr_GazeInputModuleCrosshair()
	{
	}
}
[Token(Token = "0x2000140")]
public enum RenderEventType
{
	[Token(Token = "0x4000775")]
	InitRenderThread = 1024,
	[Token(Token = "0x4000776")]
	Pause,
	[Token(Token = "0x4000777")]
	Resume,
	[Token(Token = "0x4000778")]
	LeftEyeEndFrame,
	[Token(Token = "0x4000779")]
	RightEyeEndFrame,
	[Token(Token = "0x400077A")]
	TimeWarp,
	[Token(Token = "0x400077B")]
	ResetVrModeParms,
	[Token(Token = "0x400077C")]
	ShutdownRenderThread,
	[Token(Token = "0x400077D")]
	BeginEye,
	[Token(Token = "0x400077E")]
	EndEye,
	[Token(Token = "0x400077F")]
	BoundaryRenderLeft,
	[Token(Token = "0x4000780")]
	BoundaryRenderRight,
	[Token(Token = "0x4000781")]
	BothEyeEndFrame,
	[Token(Token = "0x4000782")]
	CameraFrameLeft,
	[Token(Token = "0x4000783")]
	CameraFrameRight,
	[Token(Token = "0x4000784")]
	StartCameraFrame,
	[Token(Token = "0x4000785")]
	StopCameraFrame
}
[Token(Token = "0x2000141")]
public static class Pvr_UnitySDKPluginEvent
{
	[Token(Token = "0x20006C1")]
	private delegate void RenderEventDelegate(int eventId);

	[Token(Token = "0x4000786")]
	private const uint IS_DATA_FLAG = 2147483648u;

	[Token(Token = "0x4000787")]
	private const uint DATA_POS_MASK = 1073741824u;

	[Token(Token = "0x4000788")]
	private const int DATA_POS_SHIFT = 30;

	[Token(Token = "0x4000789")]
	private const uint EVENT_TYPE_MASK = 1056899072u;

	[Token(Token = "0x400078A")]
	private const int EVENT_TYPE_SHIFT = 17;

	[Token(Token = "0x400078B")]
	private const uint PAYLOAD_MASK = 65535u;

	[Token(Token = "0x400078C")]
	private const int PAYLOAD_SHIFT = 16;

	[Token(Token = "0x400078D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static RenderEventDelegate SetSinglePassBeforeForwardOpaqueHandle;

	[Token(Token = "0x400078E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static IntPtr SetSinglePassBeforeForwardOpaquePtr;

	[Token(Token = "0x6000854")]
	[Address(RVA = "0x12E0A90", Offset = "0x12E0A90", VA = "0x12E0A90")]
	public static void Issue(RenderEventType eventType)
	{
	}

	[Token(Token = "0x6000855")]
	[Address(RVA = "0x12EC134", Offset = "0x12EC134", VA = "0x12EC134")]
	private static int EncodeType(int eventType)
	{
		return default(int);
	}

	[Token(Token = "0x6000856")]
	[Address(RVA = "0x12EC13C", Offset = "0x12EC13C", VA = "0x12EC13C")]
	private static int EncodeData(int eventId, int eventData, int pos)
	{
		return default(int);
	}

	[Token(Token = "0x6000857")]
	[Address(RVA = "0x12EC15C", Offset = "0x12EC15C", VA = "0x12EC15C")]
	private static int DecodeData(int eventData)
	{
		return default(int);
	}

	[Token(Token = "0x6000858")]
	[Address(RVA = "0x12EC130", Offset = "0x12EC130", VA = "0x12EC130")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x8C3730", Offset = "0x8C3730")]
	private static void SetSinglePassBeforeForwardOpaque(int eventId)
	{
	}

	[Token(Token = "0x6000859")]
	[Address(RVA = "0x12EC170", Offset = "0x12EC170", VA = "0x12EC170")]
	public static void SetSinglePassBeforeForwardOpaque(CommandBuffer cmd)
	{
	}
}
[Token(Token = "0x2000142")]
public class Pvr_UnitySDKSightInputModule : BaseInputModule
{
	[Token(Token = "0x400078F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BBDFC", Offset = "0x8BBDFC")]
	public GameObject cursor;

	[Token(Token = "0x4000790")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public int trigger;

	[Token(Token = "0x4000791")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[HideInInspector]
	public float clickTime;

	[Token(Token = "0x4000792")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[HideInInspector]
	public UnityEngine.Vector2 hotspot;

	[Token(Token = "0x4000793")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private PointerEventData pointerData;

	[Token(Token = "0x600085B")]
	[Address(RVA = "0xC173C8", Offset = "0xC173C8", VA = "0xC173C8", Slot = "21")]
	public override bool ShouldActivateModule()
	{
		return default(bool);
	}

	[Token(Token = "0x600085C")]
	[Address(RVA = "0xC1745C", Offset = "0xC1745C", VA = "0xC1745C", Slot = "22")]
	public override void DeactivateModule()
	{
	}

	[Token(Token = "0x600085D")]
	[Address(RVA = "0xC17748", Offset = "0xC17748", VA = "0xC17748", Slot = "20")]
	public override bool IsPointerOverGameObject(int pointerId)
	{
		return default(bool);
	}

	[Token(Token = "0x600085E")]
	[Address(RVA = "0xC177D0", Offset = "0xC177D0", VA = "0xC177D0", Slot = "17")]
	public override void Process()
	{
	}

	[Token(Token = "0x600085F")]
	[Address(RVA = "0xC1780C", Offset = "0xC1780C", VA = "0xC1780C")]
	private void CastRayFromGaze()
	{
	}

	[Token(Token = "0x6000860")]
	[Address(RVA = "0xC17950", Offset = "0xC17950", VA = "0xC17950")]
	private void UpdateCurrentObject()
	{
	}

	[Token(Token = "0x6000861")]
	[Address(RVA = "0xC17AF0", Offset = "0xC17AF0", VA = "0xC17AF0")]
	private void PlaceCursor()
	{
	}

	[Token(Token = "0x6000862")]
	[Address(RVA = "0xC17558", Offset = "0xC17558", VA = "0xC17558")]
	private void HandlePendingClick()
	{
	}

	[Token(Token = "0x6000863")]
	[Address(RVA = "0xC17D18", Offset = "0xC17D18", VA = "0xC17D18")]
	private void HandleTrigger()
	{
	}

	[Token(Token = "0x6000864")]
	[Address(RVA = "0xC17F8C", Offset = "0xC17F8C", VA = "0xC17F8C")]
	public Pvr_UnitySDKSightInputModule()
	{
	}
}
[Token(Token = "0x2000143")]
public class Pvr_ObjImporter
{
	[Token(Token = "0x4000794")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Pvr_ObjImporter _instance;

	[Token(Token = "0x4000795")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private List<int> triangles;

	[Token(Token = "0x4000796")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<UnityEngine.Vector3> vertices;

	[Token(Token = "0x4000797")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<UnityEngine.Vector2> uv;

	[Token(Token = "0x4000798")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<UnityEngine.Vector3> normals;

	[Token(Token = "0x4000799")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<PvrVector3Int> faceData;

	[Token(Token = "0x400079A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private List<int> intArray;

	[Token(Token = "0x400079B")]
	private const int MIN_POW_10 = -16;

	[Token(Token = "0x400079C")]
	private const int MAX_POW_10 = 16;

	[Token(Token = "0x400079D")]
	private const int NUM_POWS_10 = 33;

	[Token(Token = "0x400079E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static readonly float[] pow10;

	[Token(Token = "0x170000A1")]
	public static Pvr_ObjImporter Instance
	{
		[Token(Token = "0x6000865")]
		[Address(RVA = "0xFED9F8", Offset = "0xFED9F8", VA = "0xFED9F8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000866")]
	[Address(RVA = "0xFEDAA4", Offset = "0xFEDAA4", VA = "0xFEDAA4")]
	public Mesh ImportFile(string filePath)
	{
		return null;
	}

	[Token(Token = "0x6000867")]
	[Address(RVA = "0xFEDEC8", Offset = "0xFEDEC8", VA = "0xFEDEC8")]
	private void LoadMeshData(string fileName)
	{
	}

	[Token(Token = "0x6000868")]
	[Address(RVA = "0xFEE59C", Offset = "0xFEE59C", VA = "0xFEE59C")]
	private float GetFloat(StringBuilder sb, ref int start, ref StringBuilder sbFloat)
	{
		return default(float);
	}

	[Token(Token = "0x6000869")]
	[Address(RVA = "0xFEE714", Offset = "0xFEE714", VA = "0xFEE714")]
	private int GetInt(StringBuilder sb, ref int start, ref StringBuilder sbInt)
	{
		return default(int);
	}

	[Token(Token = "0x600086A")]
	[Address(RVA = "0xFEEB1C", Offset = "0xFEEB1C", VA = "0xFEEB1C")]
	private static float[] GenerateLookupTable()
	{
		return null;
	}

	[Token(Token = "0x600086B")]
	[Address(RVA = "0xFEE854", Offset = "0xFEE854", VA = "0xFEE854")]
	private float ParseFloat(StringBuilder value)
	{
		return default(float);
	}

	[Token(Token = "0x600086C")]
	[Address(RVA = "0xFEEA90", Offset = "0xFEEA90", VA = "0xFEEA90")]
	private int IntParseFast(StringBuilder value)
	{
		return default(int);
	}

	[Token(Token = "0x600086D")]
	[Address(RVA = "0xFEDA9C", Offset = "0xFEDA9C", VA = "0xFEDA9C")]
	public Pvr_ObjImporter()
	{
	}
}
[Token(Token = "0x2000144")]
public sealed class PvrVector3Int
{
	[Token(Token = "0x400079F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8BBE54", Offset = "0x8BBE54")]
	private int <x>k__BackingField;

	[Token(Token = "0x40007A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8BBE64", Offset = "0x8BBE64")]
	private int <y>k__BackingField;

	[Token(Token = "0x40007A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8BBE74", Offset = "0x8BBE74")]
	private int <z>k__BackingField;

	[Token(Token = "0x170000A2")]
	public int x
	{
		[Token(Token = "0x600086F")]
		[Address(RVA = "0xB78414", Offset = "0xB78414", VA = "0xB78414")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C3794", Offset = "0x8C3794")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000870")]
		[Address(RVA = "0xB7841C", Offset = "0xB7841C", VA = "0xB7841C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C37A4", Offset = "0x8C37A4")]
		set
		{
		}
	}

	[Token(Token = "0x170000A3")]
	public int y
	{
		[Token(Token = "0x6000871")]
		[Address(RVA = "0xB78424", Offset = "0xB78424", VA = "0xB78424")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C37B4", Offset = "0x8C37B4")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000872")]
		[Address(RVA = "0xB7842C", Offset = "0xB7842C", VA = "0xB7842C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C37C4", Offset = "0x8C37C4")]
		set
		{
		}
	}

	[Token(Token = "0x170000A4")]
	public int z
	{
		[Token(Token = "0x6000873")]
		[Address(RVA = "0xB78434", Offset = "0xB78434", VA = "0xB78434")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C37D4", Offset = "0x8C37D4")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000874")]
		[Address(RVA = "0xB7843C", Offset = "0xB7843C", VA = "0xB7843C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C37E4", Offset = "0x8C37E4")]
		set
		{
		}
	}

	[Token(Token = "0x6000875")]
	[Address(RVA = "0xB78444", Offset = "0xB78444", VA = "0xB78444")]
	public PvrVector3Int()
	{
	}

	[Token(Token = "0x6000876")]
	[Address(RVA = "0xB7844C", Offset = "0xB7844C", VA = "0xB7844C")]
	public PvrVector3Int(int x, int y, int z)
	{
	}
}
[Token(Token = "0x2000145")]
public class Pvr_EnumFlags : PropertyAttribute
{
	[Token(Token = "0x6000877")]
	[Address(RVA = "0x13F8158", Offset = "0x13F8158", VA = "0x13F8158")]
	public Pvr_EnumFlags()
	{
	}
}
[Token(Token = "0x2000146")]
public enum ConfirmBtn
{
	[Token(Token = "0x40007A3")]
	App = 1,
	[Token(Token = "0x40007A4")]
	TouchPad = 2,
	[Token(Token = "0x40007A5")]
	Trigger = 4
}
[Token(Token = "0x2000147")]
public class Pvr_InputModule : PointerInputModule
{
	[Token(Token = "0x40007A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static List<Pvr_UIPointer> pointers;

	[Token(Token = "0x40007A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[Pvr_EnumFlags]
	public ConfirmBtn confirmBtn;

	[Token(Token = "0x40007A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private List<RaycastResult> rayCasts;

	[Token(Token = "0x40007A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private RaycastResult rayCastResult;

	[Token(Token = "0x6000878")]
	[Address(RVA = "0x13F8F04", Offset = "0x13F8F04", VA = "0x13F8F04", Slot = "30")]
	public virtual void Initialise()
	{
	}

	[Token(Token = "0x6000879")]
	[Address(RVA = "0x13F8F80", Offset = "0x13F8F80", VA = "0x13F8F80")]
	public static void AddPoint(Pvr_UIPointer point)
	{
	}

	[Token(Token = "0x600087A")]
	[Address(RVA = "0x13F9050", Offset = "0x13F9050", VA = "0x13F9050")]
	public static void RemovePoint(Pvr_UIPointer point)
	{
	}

	[Token(Token = "0x600087B")]
	[Address(RVA = "0x13F9120", Offset = "0x13F9120", VA = "0x13F9120", Slot = "17")]
	public override void Process()
	{
	}

	[Token(Token = "0x600087C")]
	[Address(RVA = "0x13F9494", Offset = "0x13F9494", VA = "0x13F9494", Slot = "31")]
	protected virtual List<RaycastResult> CheckRaycasts(Pvr_UIPointer pointer)
	{
		return null;
	}

	[Token(Token = "0x600087D")]
	[Address(RVA = "0x13F9544", Offset = "0x13F9544", VA = "0x13F9544", Slot = "32")]
	protected virtual bool CheckTransformTree(Transform target, Transform source)
	{
		return default(bool);
	}

	[Token(Token = "0x600087E")]
	[Address(RVA = "0x13F9634", Offset = "0x13F9634", VA = "0x13F9634", Slot = "33")]
	protected virtual bool NoValidCollision(Pvr_UIPointer pointer, List<RaycastResult> results)
	{
		return default(bool);
	}

	[Token(Token = "0x600087F")]
	[Address(RVA = "0x13F96F4", Offset = "0x13F96F4", VA = "0x13F96F4", Slot = "34")]
	protected virtual bool IsHovering(Pvr_UIPointer pointer)
	{
		return default(bool);
	}

	[Token(Token = "0x6000880")]
	[Address(RVA = "0x13F98FC", Offset = "0x13F98FC", VA = "0x13F98FC", Slot = "35")]
	protected virtual bool ValidElement(GameObject obj)
	{
		return default(bool);
	}

	[Token(Token = "0x6000881")]
	[Address(RVA = "0x13F99AC", Offset = "0x13F99AC", VA = "0x13F99AC", Slot = "36")]
	protected virtual void CheckPointerHoverClick(Pvr_UIPointer pointer, List<RaycastResult> results)
	{
	}

	[Token(Token = "0x6000882")]
	[Address(RVA = "0x13F9A48", Offset = "0x13F9A48", VA = "0x13F9A48", Slot = "37")]
	protected virtual void Hover(Pvr_UIPointer pointer, List<RaycastResult> results)
	{
	}

	[Token(Token = "0x6000883")]
	[Address(RVA = "0x13FA5C4", Offset = "0x13FA5C4", VA = "0x13FA5C4", Slot = "38")]
	protected virtual void Click(Pvr_UIPointer pointer, List<RaycastResult> results)
	{
	}

	[Token(Token = "0x6000884")]
	[Address(RVA = "0x13FA60C", Offset = "0x13FA60C", VA = "0x13FA60C", Slot = "39")]
	protected virtual void ClickOnUp(Pvr_UIPointer pointer, List<RaycastResult> results)
	{
	}

	[Token(Token = "0x6000885")]
	[Address(RVA = "0x13FA6AC", Offset = "0x13FA6AC", VA = "0x13FA6AC", Slot = "40")]
	protected virtual void ClickOnDown(Pvr_UIPointer pointer, List<RaycastResult> results, bool forceClick = false)
	{
	}

	[Token(Token = "0x6000886")]
	[Address(RVA = "0x13FA768", Offset = "0x13FA768", VA = "0x13FA768", Slot = "41")]
	protected virtual bool IsEligibleClick(Pvr_UIPointer pointer, List<RaycastResult> results)
	{
		return default(bool);
	}

	[Token(Token = "0x6000887")]
	[Address(RVA = "0x13FAA3C", Offset = "0x13FAA3C", VA = "0x13FAA3C", Slot = "42")]
	protected virtual bool AttemptClick(Pvr_UIPointer pointer)
	{
		return default(bool);
	}

	[Token(Token = "0x6000888")]
	[Address(RVA = "0x13FAD08", Offset = "0x13FAD08", VA = "0x13FAD08", Slot = "43")]
	protected virtual void Drag(Pvr_UIPointer pointer, List<RaycastResult> results)
	{
	}

	[Token(Token = "0x6000889")]
	[Address(RVA = "0x13FB3DC", Offset = "0x13FB3DC", VA = "0x13FB3DC")]
	public Pvr_InputModule()
	{
	}
}
[Token(Token = "0x2000148")]
public class Pvr_UICanvas : MonoBehaviour
{
	[Token(Token = "0x20006C2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B7C44", Offset = "0x8B7C44")]
	private sealed class <CreateDraggablePanel>d__10 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002299")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400229A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400229B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Canvas canvas;

		[Token(Token = "0x400229C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UnityEngine.Vector2 canvasSize;

		[Token(Token = "0x1700048B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60028EA")]
			[Address(RVA = "0xFF2684", Offset = "0xFF2684", VA = "0xFF2684", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700048C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60028EC")]
			[Address(RVA = "0xFF26EC", Offset = "0xFF26EC", VA = "0xFF26EC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60028E7")]
		[Address(RVA = "0xFF1FEC", Offset = "0xFF1FEC", VA = "0xFF1FEC")]
		[DebuggerHidden]
		public <CreateDraggablePanel>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x60028E8")]
		[Address(RVA = "0xFF2300", Offset = "0xFF2300", VA = "0xFF2300", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60028E9")]
		[Address(RVA = "0xFF2304", Offset = "0xFF2304", VA = "0xFF2304", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60028EB")]
		[Address(RVA = "0xFF268C", Offset = "0xFF268C", VA = "0xFF268C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40007AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool clickOnPointerCollision;

	[Token(Token = "0x40007AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float autoActivateWithinDistance;

	[Token(Token = "0x40007AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	protected BoxCollider canvasBoxCollider;

	[Token(Token = "0x40007AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected Rigidbody canvasRigidBody;

	[Token(Token = "0x40007AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected Coroutine draggablePanelCreation;

	[Token(Token = "0x40007AF")]
	protected const string CANVAS_DRAGGABLE_PANEL = "UICANVAS_DRAGGABLE_PANEL";

	[Token(Token = "0x600088B")]
	[Address(RVA = "0xFF1BBC", Offset = "0xFF1BBC", VA = "0xFF1BBC", Slot = "4")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x600088C")]
	[Address(RVA = "0xFF1BC8", Offset = "0xFF1BC8", VA = "0xFF1BC8", Slot = "5")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x600088D")]
	[Address(RVA = "0xFF1BD4", Offset = "0xFF1BD4", VA = "0xFF1BD4", Slot = "6")]
	protected virtual void OnDestroy()
	{
	}

	[Token(Token = "0x600088E")]
	[Address(RVA = "0xFF1BE0", Offset = "0xFF1BE0", VA = "0xFF1BE0", Slot = "7")]
	protected virtual void SetupCanvas()
	{
	}

	[Token(Token = "0x600088F")]
	[Address(RVA = "0xFF1F68", Offset = "0xFF1F68", VA = "0xFF1F68", Slot = "8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C37F4", Offset = "0x8C37F4")]
	protected virtual IEnumerator CreateDraggablePanel(Canvas canvas, UnityEngine.Vector2 canvasSize)
	{
		return null;
	}

	[Token(Token = "0x6000890")]
	[Address(RVA = "0xFF2018", Offset = "0xFF2018", VA = "0xFF2018", Slot = "9")]
	protected virtual void RemoveCanvas()
	{
	}

	[Token(Token = "0x6000891")]
	[Address(RVA = "0xFF22F8", Offset = "0xFF22F8", VA = "0xFF22F8")]
	public Pvr_UICanvas()
	{
	}
}
[Token(Token = "0x2000149")]
public struct UIDraggableItemEventArgs
{
	[Token(Token = "0x40007B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public GameObject target;
}
[Token(Token = "0x200014A")]
public delegate void UIDraggableItemEventHandler(object sender, UIDraggableItemEventArgs e);
[Token(Token = "0x200014B")]
public class Pvr_UIDraggableItem : MonoBehaviour, IBeginDragHandler, IEventSystemHandler, IDragHandler, IEndDragHandler
{
	[Token(Token = "0x40007B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool restrictToDropZone;

	[Token(Token = "0x40007B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool restrictToOriginalCanvas;

	[Token(Token = "0x40007B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float moveOffset;

	[Token(Token = "0x40007B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public GameObject validDropZone;

	[Token(Token = "0x40007B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected RectTransform dragTransform;

	[Token(Token = "0x40007B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	protected UnityEngine.Vector3 startPosition;

	[Token(Token = "0x40007B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	protected Quaternion startRotation;

	[Token(Token = "0x40007BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	protected GameObject startDropZone;

	[Token(Token = "0x40007BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	protected Transform startParent;

	[Token(Token = "0x40007BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	protected Canvas startCanvas;

	[Token(Token = "0x40007BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	protected CanvasGroup canvasGroup;

	[Token(Token = "0x40007BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	protected Pvr_InputModule currentInputmodule;

	[Token(Token = "0x14000028")]
	public event UIDraggableItemEventHandler DraggableItemDropped
	{
		[Token(Token = "0x6000896")]
		[Address(RVA = "0xFF26F4", Offset = "0xFF26F4", VA = "0xFF26F4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C3858", Offset = "0x8C3858")]
		add
		{
		}
		[Token(Token = "0x6000897")]
		[Address(RVA = "0xFF2798", Offset = "0xFF2798", VA = "0xFF2798")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C3868", Offset = "0x8C3868")]
		remove
		{
		}
	}

	[Token(Token = "0x14000029")]
	public event UIDraggableItemEventHandler DraggableItemReset
	{
		[Token(Token = "0x6000898")]
		[Address(RVA = "0xFF283C", Offset = "0xFF283C", VA = "0xFF283C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C3878", Offset = "0x8C3878")]
		add
		{
		}
		[Token(Token = "0x6000899")]
		[Address(RVA = "0xFF28E0", Offset = "0xFF28E0", VA = "0xFF28E0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C3888", Offset = "0x8C3888")]
		remove
		{
		}
	}

	[Token(Token = "0x600089A")]
	[Address(RVA = "0xFF2984", Offset = "0xFF2984", VA = "0xFF2984", Slot = "7")]
	public virtual void OnDraggableItemDropped(UIDraggableItemEventArgs e)
	{
	}

	[Token(Token = "0x600089B")]
	[Address(RVA = "0xFF29A4", Offset = "0xFF29A4", VA = "0xFF29A4", Slot = "8")]
	public virtual void OnDraggableItemReset(UIDraggableItemEventArgs e)
	{
	}

	[Token(Token = "0x600089C")]
	[Address(RVA = "0xFF29C4", Offset = "0xFF29C4", VA = "0xFF29C4", Slot = "4")]
	public void OnBeginDrag(PointerEventData eventData)
	{
	}

	[Token(Token = "0x600089D")]
	[Address(RVA = "0xFF2BD8", Offset = "0xFF2BD8", VA = "0xFF2BD8", Slot = "5")]
	public void OnDrag(PointerEventData eventData)
	{
	}

	[Token(Token = "0x600089E")]
	[Address(RVA = "0xFF2BE4", Offset = "0xFF2BE4", VA = "0xFF2BE4", Slot = "6")]
	public void OnEndDrag(PointerEventData eventData)
	{
	}

	[Token(Token = "0x600089F")]
	[Address(RVA = "0xFF3024", Offset = "0xFF3024", VA = "0xFF3024", Slot = "9")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x60008A0")]
	[Address(RVA = "0xFF3118", Offset = "0xFF3118", VA = "0xFF3118", Slot = "10")]
	protected virtual Pvr_UIPointer GetPointer()
	{
		return null;
	}

	[Token(Token = "0x60008A1")]
	[Address(RVA = "0xFF329C", Offset = "0xFF329C", VA = "0xFF329C", Slot = "11")]
	protected virtual void SetDragPosition(PointerEventData eventData)
	{
	}

	[Token(Token = "0x60008A2")]
	[Address(RVA = "0xFF3560", Offset = "0xFF3560", VA = "0xFF3560", Slot = "12")]
	protected virtual void ResetElement()
	{
	}

	[Token(Token = "0x60008A3")]
	[Address(RVA = "0xFF3610", Offset = "0xFF3610", VA = "0xFF3610", Slot = "13")]
	protected virtual UIDraggableItemEventArgs SetEventPayload(GameObject target)
	{
		return default(UIDraggableItemEventArgs);
	}

	[Token(Token = "0x60008A4")]
	[Address(RVA = "0xFF3618", Offset = "0xFF3618", VA = "0xFF3618")]
	public Pvr_UIDraggableItem()
	{
	}
}
[Token(Token = "0x200014C")]
public class Pvr_UIDropZone : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler
{
	[Token(Token = "0x40007BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected Pvr_UIDraggableItem droppableItem;

	[Token(Token = "0x60008A5")]
	[Address(RVA = "0xFF362C", Offset = "0xFF362C", VA = "0xFF362C", Slot = "4")]
	public void OnPointerEnter(PointerEventData eventData)
	{
	}

	[Token(Token = "0x60008A6")]
	[Address(RVA = "0xFF371C", Offset = "0xFF371C", VA = "0xFF371C", Slot = "5")]
	public void OnPointerExit(PointerEventData eventData)
	{
	}

	[Token(Token = "0x60008A7")]
	[Address(RVA = "0xFF37A4", Offset = "0xFF37A4", VA = "0xFF37A4")]
	public Pvr_UIDropZone()
	{
	}
}
[Token(Token = "0x200014D")]
public class Pvr_UIGraphicRaycaster : GraphicRaycaster
{
	[Serializable]
	[Token(Token = "0x20006C3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B7C54", Offset = "0x8B7C54")]
	private sealed class <>c
	{
		[Token(Token = "0x400229D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x400229E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Comparison<RaycastResult> <>9__7_0;

		[Token(Token = "0x60028EE")]
		[Address(RVA = "0xFF46B4", Offset = "0xFF46B4", VA = "0xFF46B4")]
		public <>c()
		{
		}

		[Token(Token = "0x60028EF")]
		[Address(RVA = "0xFF46BC", Offset = "0xFF46BC", VA = "0xFF46BC")]
		internal int <Raycast>b__7_0(RaycastResult g1, RaycastResult g2)
		{
			return default(int);
		}
	}

	[Token(Token = "0x40007C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	protected Canvas currentCanvas;

	[Token(Token = "0x40007C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	protected UnityEngine.Vector2 lastKnownPosition;

	[Token(Token = "0x40007C2")]
	protected const float UI_CONTROL_OFFSET = 1E-05f;

	[NonSerialized]
	[Token(Token = "0x40007C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static List<RaycastResult> s_RaycastResults;

	[Token(Token = "0x170000A5")]
	protected virtual Canvas canvas
	{
		[Token(Token = "0x60008AC")]
		[Address(RVA = "0xFF44CC", Offset = "0xFF44CC", VA = "0xFF44CC", Slot = "25")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60008A8")]
	[Address(RVA = "0xFF37AC", Offset = "0xFF37AC", VA = "0xFF37AC", Slot = "17")]
	public override void Raycast(PointerEventData eventData, List<RaycastResult> resultAppendList)
	{
	}

	[Token(Token = "0x60008A9")]
	[Address(RVA = "0xFF395C", Offset = "0xFF395C", VA = "0xFF395C", Slot = "22")]
	protected virtual void SetNearestRaycast(ref PointerEventData eventData, ref List<RaycastResult> resultAppendList, ref List<RaycastResult> raycastResults)
	{
	}

	[Token(Token = "0x60008AA")]
	[Address(RVA = "0xFF3BE0", Offset = "0xFF3BE0", VA = "0xFF3BE0", Slot = "23")]
	protected virtual float GetHitDistance(Ray ray)
	{
		return default(float);
	}

	[Token(Token = "0x60008AB")]
	[Address(RVA = "0xFF3F00", Offset = "0xFF3F00", VA = "0xFF3F00", Slot = "24")]
	protected virtual void Raycast(Canvas canvas, Camera eventCamera, Ray ray, ref List<RaycastResult> results)
	{
	}

	[Token(Token = "0x60008AD")]
	[Address(RVA = "0xFF4574", Offset = "0xFF4574", VA = "0xFF4574")]
	public Pvr_UIGraphicRaycaster()
	{
	}
}
[Token(Token = "0x200014E")]
public struct UIPointerEventArgs
{
	[Token(Token = "0x40007C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool isActive;

	[Token(Token = "0x40007C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public GameObject currentTarget;

	[Token(Token = "0x40007C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public GameObject previousTarget;

	[Token(Token = "0x40007C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RaycastResult raycastResult;
}
[Token(Token = "0x200014F")]
public delegate void UIPointerEventHandler(object sender, UIPointerEventArgs e);
[Token(Token = "0x2000150")]
public class Pvr_UIPointer : MonoBehaviour
{
	[Token(Token = "0x20006C4")]
	public enum ClickMethods
	{
		[Token(Token = "0x40022A0")]
		ClickOnButtonUp,
		[Token(Token = "0x40022A1")]
		ClickOnButtonDown
	}

	[Token(Token = "0x40007C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ClickMethods clickMethod;

	[Token(Token = "0x40007C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[HideInInspector]
	public bool collisionClick;

	[Token(Token = "0x40007CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	[HideInInspector]
	public bool pressToDrag;

	[Token(Token = "0x40007CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public GameObject autoActivatingCanvas;

	[Token(Token = "0x40007CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public PointerEventData pointerEventData;

	[Token(Token = "0x40007CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public GameObject hoveringElement;

	[Token(Token = "0x40007CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	public float hoverDurationTimer;

	[Token(Token = "0x40007CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[HideInInspector]
	public bool canClickOnHover;

	[Token(Token = "0x40007D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform pointerOriginTransform;

	[Token(Token = "0x40007D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	protected bool pointerClicked;

	[Token(Token = "0x40007D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	protected bool beamEnabledState;

	[Token(Token = "0x40007D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
	protected bool lastPointerPressState;

	[Token(Token = "0x40007D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4B")]
	protected bool lastPointerClickState;

	[Token(Token = "0x40007D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	protected GameObject currentTarget;

	[Token(Token = "0x40007D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	protected EventSystem cachedEventSystem;

	[Token(Token = "0x40007D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	protected Pvr_InputModule cachedVRInputModule;

	[Token(Token = "0x40007D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	protected Transform originalPointerOriginTransform;

	[Token(Token = "0x40007DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool TouchBtnValue;

	[Token(Token = "0x40007DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
	public static bool AppBtnValue;

	[Token(Token = "0x40007E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
	public static bool TriggerBtnValue;

	[Token(Token = "0x1400002A")]
	public event UIPointerEventHandler UIPointerElementEnter
	{
		[Token(Token = "0x60008B3")]
		[Address(RVA = "0xFF46CC", Offset = "0xFF46CC", VA = "0xFF46CC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C3898", Offset = "0x8C3898")]
		add
		{
		}
		[Token(Token = "0x60008B4")]
		[Address(RVA = "0xFF4770", Offset = "0xFF4770", VA = "0xFF4770")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C38A8", Offset = "0x8C38A8")]
		remove
		{
		}
	}

	[Token(Token = "0x1400002B")]
	public event UIPointerEventHandler UIPointerElementExit
	{
		[Token(Token = "0x60008B5")]
		[Address(RVA = "0xFF4814", Offset = "0xFF4814", VA = "0xFF4814")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C38B8", Offset = "0x8C38B8")]
		add
		{
		}
		[Token(Token = "0x60008B6")]
		[Address(RVA = "0xFF48B8", Offset = "0xFF48B8", VA = "0xFF48B8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C38C8", Offset = "0x8C38C8")]
		remove
		{
		}
	}

	[Token(Token = "0x1400002C")]
	public event UIPointerEventHandler UIPointerElementClick
	{
		[Token(Token = "0x60008B7")]
		[Address(RVA = "0xFF495C", Offset = "0xFF495C", VA = "0xFF495C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C38D8", Offset = "0x8C38D8")]
		add
		{
		}
		[Token(Token = "0x60008B8")]
		[Address(RVA = "0xFF4A00", Offset = "0xFF4A00", VA = "0xFF4A00")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C38E8", Offset = "0x8C38E8")]
		remove
		{
		}
	}

	[Token(Token = "0x1400002D")]
	public event UIPointerEventHandler UIPointerElementDragStart
	{
		[Token(Token = "0x60008B9")]
		[Address(RVA = "0xFF4AA4", Offset = "0xFF4AA4", VA = "0xFF4AA4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C38F8", Offset = "0x8C38F8")]
		add
		{
		}
		[Token(Token = "0x60008BA")]
		[Address(RVA = "0xFF4B48", Offset = "0xFF4B48", VA = "0xFF4B48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C3908", Offset = "0x8C3908")]
		remove
		{
		}
	}

	[Token(Token = "0x1400002E")]
	public event UIPointerEventHandler UIPointerElementDragEnd
	{
		[Token(Token = "0x60008BB")]
		[Address(RVA = "0xFF4BEC", Offset = "0xFF4BEC", VA = "0xFF4BEC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C3918", Offset = "0x8C3918")]
		add
		{
		}
		[Token(Token = "0x60008BC")]
		[Address(RVA = "0xFF4C90", Offset = "0xFF4C90", VA = "0xFF4C90")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C3928", Offset = "0x8C3928")]
		remove
		{
		}
	}

	[Token(Token = "0x60008BD")]
	[Address(RVA = "0xFF4D34", Offset = "0xFF4D34", VA = "0xFF4D34", Slot = "4")]
	public virtual bool PointerActive()
	{
		return default(bool);
	}

	[Token(Token = "0x60008BE")]
	[Address(RVA = "0xFF4D3C", Offset = "0xFF4D3C", VA = "0xFF4D3C", Slot = "5")]
	public virtual bool IsSelectionButtonPressed()
	{
		return default(bool);
	}

	[Token(Token = "0x60008BF")]
	[Address(RVA = "0xFF4E1C", Offset = "0xFF4E1C", VA = "0xFF4E1C", Slot = "6")]
	public virtual UnityEngine.Vector3 GetOriginPosition()
	{
		return default(UnityEngine.Vector3);
	}

	[Token(Token = "0x60008C0")]
	[Address(RVA = "0xFF4EB0", Offset = "0xFF4EB0", VA = "0xFF4EB0", Slot = "7")]
	public virtual UnityEngine.Vector3 GetOriginForward()
	{
		return default(UnityEngine.Vector3);
	}

	[Token(Token = "0x60008C1")]
	[Address(RVA = "0xFF4F44", Offset = "0xFF4F44", VA = "0xFF4F44", Slot = "8")]
	public virtual bool ValidClick(bool checkLastClick, bool lastClickState = false)
	{
		return default(bool);
	}

	[Token(Token = "0x60008C2")]
	[Address(RVA = "0xFF4F60", Offset = "0xFF4F60", VA = "0xFF4F60", Slot = "9")]
	protected virtual void ResetHoverTimer()
	{
	}

	[Token(Token = "0x60008C3")]
	[Address(RVA = "0xFF4F6C", Offset = "0xFF4F6C", VA = "0xFF4F6C", Slot = "10")]
	public virtual void OnUIPointerElementEnter(UIPointerEventArgs e)
	{
	}

	[Token(Token = "0x60008C4")]
	[Address(RVA = "0xFF5040", Offset = "0xFF5040", VA = "0xFF5040", Slot = "11")]
	public virtual void OnUIPointerElementExit(UIPointerEventArgs e)
	{
	}

	[Token(Token = "0x60008C5")]
	[Address(RVA = "0xFF510C", Offset = "0xFF510C", VA = "0xFF510C", Slot = "12")]
	public virtual void OnUIPointerElementClick(UIPointerEventArgs e)
	{
	}

	[Token(Token = "0x60008C6")]
	[Address(RVA = "0xFF51D8", Offset = "0xFF51D8", VA = "0xFF51D8", Slot = "13")]
	public virtual void OnUIPointerElementDragStart(UIPointerEventArgs e)
	{
	}

	[Token(Token = "0x60008C7")]
	[Address(RVA = "0xFF5224", Offset = "0xFF5224", VA = "0xFF5224", Slot = "14")]
	public virtual void OnUIPointerElementDragEnd(UIPointerEventArgs e)
	{
	}

	[Token(Token = "0x60008C8")]
	[Address(RVA = "0xFF5270", Offset = "0xFF5270", VA = "0xFF5270", Slot = "15")]
	public virtual UIPointerEventArgs SetUIPointerEvent(RaycastResult currentRaycastResult, GameObject currentTarget, [Optional] GameObject lastTarget)
	{
		return default(UIPointerEventArgs);
	}

	[Token(Token = "0x60008C9")]
	[Address(RVA = "0xFF52D4", Offset = "0xFF52D4", VA = "0xFF52D4", Slot = "16")]
	protected virtual void Awake()
	{
	}

	[Token(Token = "0x60008CA")]
	[Address(RVA = "0xFF52E0", Offset = "0xFF52E0", VA = "0xFF52E0", Slot = "17")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x60008CB")]
	[Address(RVA = "0xFF5318", Offset = "0xFF5318", VA = "0xFF5318", Slot = "18")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x60008CC")]
	[Address(RVA = "0xFF5380", Offset = "0xFF5380", VA = "0xFF5380", Slot = "19")]
	protected virtual void ConfigureEventSystem()
	{
	}

	[Token(Token = "0x60008CD")]
	[Address(RVA = "0xFF5524", Offset = "0xFF5524", VA = "0xFF5524")]
	public Pvr_UIPointer()
	{
	}
}
[Token(Token = "0x2000151")]
[ExecuteInEditMode]
public class Pvr_UnitySDKEditor : MonoBehaviour
{
	[Token(Token = "0x40007E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool vrModeEnabled;

	[Token(Token = "0x40007E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float mouseX;

	[Token(Token = "0x40007E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float mouseY;

	[Token(Token = "0x40007E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float mouseZ;

	[Token(Token = "0x40007E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float neckModelScale;

	[Token(Token = "0x40007E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private bool autoUntiltHead;

	[Token(Token = "0x40007E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly UnityEngine.Vector3 neckOffset;

	[Token(Token = "0x40007E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public Matrix4x4 headView;

	[Token(Token = "0x40007E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[HideInInspector]
	public Matrix4x4 leftEyeUndistortedProj;

	[Token(Token = "0x40007EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[HideInInspector]
	public Matrix4x4 rightEyeUndistortedProj;

	[Token(Token = "0x40007EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[HideInInspector]
	public Matrix4x4 leftEyeProj;

	[Token(Token = "0x40007EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	[HideInInspector]
	public Matrix4x4 rightEyeProj;

	[Token(Token = "0x40007ED")]
	private const float TOUCH_TIME_LIMIT = 0.2f;

	[Token(Token = "0x40007EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private float touchStartTime;

	[Token(Token = "0x60008CF")]
	[Address(RVA = "0x12DE584", Offset = "0x12DE584", VA = "0x12DE584")]
	public Matrix4x4 UndistortedProjection(Eye eye)
	{
		return default(Matrix4x4);
	}

	[Token(Token = "0x60008D0")]
	[Address(RVA = "0x12DE5A8", Offset = "0x12DE5A8", VA = "0x12DE5A8")]
	public Matrix4x4 Projection(Eye eye)
	{
		return default(Matrix4x4);
	}

	[Token(Token = "0x60008D1")]
	[Address(RVA = "0x12DE5CC", Offset = "0x12DE5CC", VA = "0x12DE5CC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60008D2")]
	[Address(RVA = "0x12DE7B4", Offset = "0x12DE7B4", VA = "0x12DE7B4")]
	private void Update()
	{
	}

	[Token(Token = "0x60008D3")]
	[Address(RVA = "0x12DE5E0", Offset = "0x12DE5E0", VA = "0x12DE5E0")]
	public void InitEyePara()
	{
	}

	[Token(Token = "0x60008D4")]
	[Address(RVA = "0x12DE72C", Offset = "0x12DE72C", VA = "0x12DE72C")]
	private void InitEditorSensorPara()
	{
	}

	[Token(Token = "0x60008D5")]
	[Address(RVA = "0x12DF004", Offset = "0x12DF004", VA = "0x12DF004")]
	public static Matrix4x4 MakeProjection(float l, float t, float r, float b, float n, float f)
	{
		return default(Matrix4x4);
	}

	[Token(Token = "0x60008D6")]
	[Address(RVA = "0x12DF1A8", Offset = "0x12DF1A8", VA = "0x12DF1A8")]
	public bool UpdateStatesensor()
	{
		return default(bool);
	}

	[Token(Token = "0x60008D7")]
	[Address(RVA = "0x12DE94C", Offset = "0x12DE94C", VA = "0x12DE94C")]
	public void ComputeEyesFromProfile()
	{
	}

	[Token(Token = "0x60008D8")]
	[Address(RVA = "0x12DF62C", Offset = "0x12DF62C", VA = "0x12DF62C")]
	public bool ResetUnitySDKSensor()
	{
		return default(bool);
	}

	[Token(Token = "0x60008D9")]
	[Address(RVA = "0x12DE848", Offset = "0x12DE848", VA = "0x12DE848")]
	private void SimulateInput()
	{
	}

	[Token(Token = "0x60008DA")]
	[Address(RVA = "0x12DEF50", Offset = "0x12DEF50", VA = "0x12DEF50")]
	private void FovAdjust()
	{
	}

	[Token(Token = "0x60008DB")]
	[Address(RVA = "0x12DF6DC", Offset = "0x12DF6DC", VA = "0x12DF6DC")]
	private Rect RectAdjust(Rect eyeRect)
	{
		return default(Rect);
	}

	[Token(Token = "0x60008DC")]
	[Address(RVA = "0x12DF1C0", Offset = "0x12DF1C0", VA = "0x12DF1C0")]
	private void UpdateSimulatedSensor()
	{
	}

	[Token(Token = "0x60008DD")]
	[Address(RVA = "0x12DEDE0", Offset = "0x12DEDE0", VA = "0x12DEDE0")]
	private void InitForEye(ref Material mat, ref Material mat1)
	{
	}

	[Token(Token = "0x60008DE")]
	[Address(RVA = "0x12DF640", Offset = "0x12DF640", VA = "0x12DF640")]
	private void EnableVEmodel()
	{
	}

	[Token(Token = "0x60008DF")]
	[Address(RVA = "0x12DF82C", Offset = "0x12DF82C", VA = "0x12DF82C")]
	public Pvr_UnitySDKEditor()
	{
	}
}
[Token(Token = "0x2000152")]
public class Pvr_VolumePowerBrightness : MonoBehaviour
{
	[Token(Token = "0x40007EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool VolEnable;

	[Token(Token = "0x40007F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	private bool BattEnable;

	[Token(Token = "0x40007F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text showResult;

	[Token(Token = "0x40007F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text setVolumnum;

	[Token(Token = "0x40007F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Text setBrightnum;

	[Token(Token = "0x40007F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string MusicPath;

	[Token(Token = "0x60008E1")]
	[Address(RVA = "0xC1A0DC", Offset = "0xC1A0DC", VA = "0xC1A0DC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60008E2")]
	[Address(RVA = "0xC1A1AC", Offset = "0xC1A1AC", VA = "0xC1A1AC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60008E3")]
	[Address(RVA = "0xC1A200", Offset = "0xC1A200", VA = "0xC1A200")]
	public void GetMaxVolumeNumber()
	{
	}

	[Token(Token = "0x60008E4")]
	[Address(RVA = "0xC1A2A0", Offset = "0xC1A2A0", VA = "0xC1A2A0")]
	public void GetCurrentVolumeNumber()
	{
	}

	[Token(Token = "0x60008E5")]
	[Address(RVA = "0xC1A340", Offset = "0xC1A340", VA = "0xC1A340")]
	public void VolumeUp()
	{
	}

	[Token(Token = "0x60008E6")]
	[Address(RVA = "0xC1A3C4", Offset = "0xC1A3C4", VA = "0xC1A3C4")]
	public void VolumeDown()
	{
	}

	[Token(Token = "0x60008E7")]
	[Address(RVA = "0xC1A448", Offset = "0xC1A448", VA = "0xC1A448")]
	public void SetVolumeNum()
	{
	}

	[Token(Token = "0x60008E8")]
	[Address(RVA = "0xC1A560", Offset = "0xC1A560", VA = "0xC1A560")]
	public void SetBrightness()
	{
	}

	[Token(Token = "0x60008E9")]
	[Address(RVA = "0xC1A678", Offset = "0xC1A678", VA = "0xC1A678")]
	public void GetCurrentBrightness()
	{
	}

	[Token(Token = "0x60008EA")]
	[Address(RVA = "0xC1A718", Offset = "0xC1A718", VA = "0xC1A718")]
	public bool setAudio(string s)
	{
		return default(bool);
	}

	[Token(Token = "0x60008EB")]
	[Address(RVA = "0xC1A7A8", Offset = "0xC1A7A8", VA = "0xC1A7A8")]
	public bool setBattery(string s)
	{
		return default(bool);
	}

	[Token(Token = "0x60008EC")]
	[Address(RVA = "0xC1A144", Offset = "0xC1A144", VA = "0xC1A144")]
	private bool InitBatteryVolClass()
	{
		return default(bool);
	}

	[Token(Token = "0x60008ED")]
	[Address(RVA = "0xC1A14C", Offset = "0xC1A14C", VA = "0xC1A14C")]
	private bool StartBatteryReceiver(string startreceivre)
	{
		return default(bool);
	}

	[Token(Token = "0x60008EE")]
	[Address(RVA = "0xC1A1F8", Offset = "0xC1A1F8", VA = "0xC1A1F8")]
	private bool StopBatteryReceiver()
	{
		return default(bool);
	}

	[Token(Token = "0x60008EF")]
	[Address(RVA = "0xC1A17C", Offset = "0xC1A17C", VA = "0xC1A17C")]
	private bool StartAudioReceiver(string startreceivre)
	{
		return default(bool);
	}

	[Token(Token = "0x60008F0")]
	[Address(RVA = "0xC1A1F0", Offset = "0xC1A1F0", VA = "0xC1A1F0")]
	private bool StopAudioReceiver()
	{
		return default(bool);
	}

	[Token(Token = "0x60008F1")]
	[Address(RVA = "0xC1A838", Offset = "0xC1A838", VA = "0xC1A838")]
	public Pvr_VolumePowerBrightness()
	{
	}
}
[Token(Token = "0x2000153")]
public class AllyBryce : BattleAlly
{
	[Token(Token = "0x20006C5")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B7C64", Offset = "0x8B7C64")]
	private sealed class <waterAttack>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40022A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40022A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40022A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AllyBryce <>4__this;

		[Token(Token = "0x1700048D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60028F3")]
			[Address(RVA = "0xBB93F4", Offset = "0xBB93F4", VA = "0xBB93F4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700048E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60028F5")]
			[Address(RVA = "0xBB945C", Offset = "0xBB945C", VA = "0xBB945C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60028F0")]
		[Address(RVA = "0xBB8A10", Offset = "0xBB8A10", VA = "0xBB8A10")]
		[DebuggerHidden]
		public <waterAttack>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x60028F1")]
		[Address(RVA = "0xBB8F2C", Offset = "0xBB8F2C", VA = "0xBB8F2C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60028F2")]
		[Address(RVA = "0xBB8F30", Offset = "0xBB8F30", VA = "0xBB8F30", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60028F4")]
		[Address(RVA = "0xBB93FC", Offset = "0xBB93FC", VA = "0xBB93FC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20006C6")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B7C74", Offset = "0x8B7C74")]
	private sealed class <endTurnAfterTime>d__13 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40022A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40022A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40022A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float time;

		[Token(Token = "0x40022A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AllyBryce <>4__this;

		[Token(Token = "0x1700048F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60028F9")]
			[Address(RVA = "0xBB8EBC", Offset = "0xBB8EBC", VA = "0xBB8EBC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000490")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60028FB")]
			[Address(RVA = "0xBB8F24", Offset = "0xBB8F24", VA = "0xBB8F24", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60028F6")]
		[Address(RVA = "0xBB8ABC", Offset = "0xBB8ABC", VA = "0xBB8ABC")]
		[DebuggerHidden]
		public <endTurnAfterTime>d__13(int <>1__state)
		{
		}

		[Token(Token = "0x60028F7")]
		[Address(RVA = "0xBB8B54", Offset = "0xBB8B54", VA = "0xBB8B54", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60028F8")]
		[Address(RVA = "0xBB8B58", Offset = "0xBB8B58", VA = "0xBB8B58", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60028FA")]
		[Address(RVA = "0xBB8EC4", Offset = "0xBB8EC4", VA = "0xBB8EC4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40007F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AllyProjectile waterProj;

	[Token(Token = "0x40007F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public BattleDialogueBox dialogueBox;

	[Token(Token = "0x40007F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject castParticle;

	[Token(Token = "0x40007F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public bool storyVersion;

	[Token(Token = "0x40007F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public AudioClip[] voiceClips;

	[Token(Token = "0x40007FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public AudioClip[] victoryLines;

	[Token(Token = "0x40007FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public AudioClip[] attackCLips;

	[Token(Token = "0x40007FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public AudioSource audioSource;

	[Token(Token = "0x40007FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public string[] dialogueLines;

	[Token(Token = "0x60008F2")]
	[Address(RVA = "0xBB85EC", Offset = "0xBB85EC", VA = "0xBB85EC", Slot = "5")]
	public override void doVictory()
	{
	}

	[Token(Token = "0x60008F3")]
	[Address(RVA = "0xBB86B0", Offset = "0xBB86B0", VA = "0xBB86B0")]
	public void playDialogue(string dialogue)
	{
	}

	[Token(Token = "0x60008F4")]
	[Address(RVA = "0xBB8958", Offset = "0xBB8958", VA = "0xBB8958", Slot = "4")]
	public override void allyAttack()
	{
	}

	[Token(Token = "0x60008F5")]
	[Address(RVA = "0xBB89A0", Offset = "0xBB89A0", VA = "0xBB89A0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C3938", Offset = "0x8C3938")]
	private IEnumerator waterAttack()
	{
		return null;
	}

	[Token(Token = "0x60008F6")]
	[Address(RVA = "0xBB8A3C", Offset = "0xBB8A3C", VA = "0xBB8A3C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C399C", Offset = "0x8C399C")]
	private IEnumerator endTurnAfterTime(float time)
	{
		return null;
	}

	[Token(Token = "0x60008F7")]
	[Address(RVA = "0xBB8AE8", Offset = "0xBB8AE8", VA = "0xBB8AE8")]
	public AllyBryce()
	{
	}
}
[Token(Token = "0x2000154")]
public class AllyDragon : BattleAlly
{
	[Token(Token = "0x20006C7")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B7C84", Offset = "0x8B7C84")]
	private sealed class <fireAttack>d__13 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40022A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40022AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40022AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AllyDragon <>4__this;

		[Token(Token = "0x40022AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Transform <target>5__2;

		[Token(Token = "0x40022AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <maxTime>5__3;

		[Token(Token = "0x40022AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <timer>5__4;

		[Token(Token = "0x17000491")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60028FF")]
			[Address(RVA = "0xBB9F70", Offset = "0xBB9F70", VA = "0xBB9F70", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000492")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002901")]
			[Address(RVA = "0xBB9FD8", Offset = "0xBB9FD8", VA = "0xBB9FD8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60028FC")]
		[Address(RVA = "0xBB97D0", Offset = "0xBB97D0", VA = "0xBB97D0")]
		[DebuggerHidden]
		public <fireAttack>d__13(int <>1__state)
		{
		}

		[Token(Token = "0x60028FD")]
		[Address(RVA = "0xBB9A64", Offset = "0xBB9A64", VA = "0xBB9A64", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60028FE")]
		[Address(RVA = "0xBB9A68", Offset = "0xBB9A68", VA = "0xBB9A68", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002900")]
		[Address(RVA = "0xBB9F78", Offset = "0xBB9F78", VA = "0xBB9F78", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40007FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject fireBreath;

	[Token(Token = "0x40007FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float flySpeed;

	[Token(Token = "0x4000800")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private UnityEngine.Vector3 spawnPos;

	[Token(Token = "0x4000801")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float breathTickMax;

	[Token(Token = "0x4000802")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float breathTimer;

	[Token(Token = "0x4000803")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool usingFire;

	[Token(Token = "0x4000804")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
	public bool lookAtTarget;

	[Token(Token = "0x4000805")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private List<EnemyParent> BreathEnemies;

	[Token(Token = "0x4000806")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Transform lookTarget;

	[Token(Token = "0x60008F8")]
	[Address(RVA = "0xBB9464", Offset = "0xBB9464", VA = "0xBB9464")]
	private void Start()
	{
	}

	[Token(Token = "0x60008F9")]
	[Address(RVA = "0xBB94E0", Offset = "0xBB94E0", VA = "0xBB94E0")]
	private void Update()
	{
	}

	[Token(Token = "0x60008FA")]
	[Address(RVA = "0xBB96B4", Offset = "0xBB96B4", VA = "0xBB96B4", Slot = "4")]
	public override void allyAttack()
	{
	}

	[Token(Token = "0x60008FB")]
	[Address(RVA = "0xBB9778", Offset = "0xBB9778", VA = "0xBB9778")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60008FC")]
	[Address(RVA = "0xBB9708", Offset = "0xBB9708", VA = "0xBB9708")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C3A00", Offset = "0x8C3A00")]
	private IEnumerator fireAttack()
	{
		return null;
	}

	[Token(Token = "0x60008FD")]
	[Address(RVA = "0xBB97FC", Offset = "0xBB97FC", VA = "0xBB97FC")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60008FE")]
	[Address(RVA = "0xBB9904", Offset = "0xBB9904", VA = "0xBB9904")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x60008FF")]
	[Address(RVA = "0xBB99DC", Offset = "0xBB99DC", VA = "0xBB99DC")]
	public AllyDragon()
	{
	}
}
[Token(Token = "0x2000155")]
public class AllyElemental : BattleAlly
{
	[Token(Token = "0x20006C8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B7C94", Offset = "0x8B7C94")]
	private sealed class <punchAttack>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40022AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40022B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40022B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AllyElemental <>4__this;

		[Token(Token = "0x40022B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private EnemyParent <randEnemy>5__2;

		[Token(Token = "0x40022B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int <i>5__3;

		[Token(Token = "0x17000493")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002905")]
			[Address(RVA = "0xBBAA70", Offset = "0xBBAA70", VA = "0xBBAA70", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000494")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002907")]
			[Address(RVA = "0xBBAAD8", Offset = "0xBBAAD8", VA = "0xBBAAD8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002902")]
		[Address(RVA = "0xBBA0C4", Offset = "0xBBA0C4", VA = "0xBBA0C4")]
		[DebuggerHidden]
		public <punchAttack>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6002903")]
		[Address(RVA = "0xBBA2AC", Offset = "0xBBA2AC", VA = "0xBBA2AC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002904")]
		[Address(RVA = "0xBBA2B0", Offset = "0xBBA2B0", VA = "0xBBA2B0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002906")]
		[Address(RVA = "0xBBAA78", Offset = "0xBBAA78", VA = "0xBBAA78", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20006C9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B7CA4", Offset = "0x8B7CA4")]
	private sealed class <endTurnAfterTime>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40022B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40022B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40022B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float time;

		[Token(Token = "0x17000495")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600290B")]
			[Address(RVA = "0xBBA23C", Offset = "0xBBA23C", VA = "0xBBA23C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000496")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600290D")]
			[Address(RVA = "0xBBA2A4", Offset = "0xBBA2A4", VA = "0xBBA2A4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002908")]
		[Address(RVA = "0xBBA168", Offset = "0xBBA168", VA = "0xBBA168")]
		[DebuggerHidden]
		public <endTurnAfterTime>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6002909")]
		[Address(RVA = "0xBBA198", Offset = "0xBBA198", VA = "0xBBA198", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600290A")]
		[Address(RVA = "0xBBA19C", Offset = "0xBBA19C", VA = "0xBBA19C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600290C")]
		[Address(RVA = "0xBBA244", Offset = "0xBBA244", VA = "0xBBA244", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000807")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AudioSource audioSource;

	[Token(Token = "0x4000808")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject punchParticle;

	[Token(Token = "0x4000809")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject teleportParticle;

	[Token(Token = "0x400080A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private UnityEngine.Vector3 startPos;

	[Token(Token = "0x6000900")]
	[Address(RVA = "0xBB9FE0", Offset = "0xBB9FE0", VA = "0xBB9FE0")]
	protected void Start()
	{
	}

	[Token(Token = "0x6000901")]
	[Address(RVA = "0xBBA01C", Offset = "0xBBA01C", VA = "0xBBA01C", Slot = "4")]
	public override void allyAttack()
	{
	}

	[Token(Token = "0x6000902")]
	[Address(RVA = "0xBBA054", Offset = "0xBBA054", VA = "0xBBA054")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C3A64", Offset = "0x8C3A64")]
	private IEnumerator punchAttack()
	{
		return null;
	}

	[Token(Token = "0x6000903")]
	[Address(RVA = "0xBBA0F0", Offset = "0xBBA0F0", VA = "0xBBA0F0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C3AC8", Offset = "0x8C3AC8")]
	private IEnumerator endTurnAfterTime(float time)
	{
		return null;
	}

	[Token(Token = "0x6000904")]
	[Address(RVA = "0xBBA194", Offset = "0xBBA194", VA = "0xBBA194")]
	public AllyElemental()
	{
	}
}
[Token(Token = "0x2000156")]
public class AllyLlorona : BattleAlly
{
	[Token(Token = "0x20006CA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B7CB4", Offset = "0x8B7CB4")]
	private sealed class <bounceAttack>d__11 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40022B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40022B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40022B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AllyLlorona <>4__this;

		[Token(Token = "0x17000497")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002911")]
			[Address(RVA = "0xBBB1F8", Offset = "0xBBB1F8", VA = "0xBBB1F8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000498")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002913")]
			[Address(RVA = "0xBBB260", Offset = "0xBBB260", VA = "0xBBB260", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600290E")]
		[Address(RVA = "0xBBACB8", Offset = "0xBBACB8", VA = "0xBBACB8")]
		[DebuggerHidden]
		public <bounceAttack>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x600290F")]
		[Address(RVA = "0xBBADC0", Offset = "0xBBADC0", VA = "0xBBADC0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002910")]
		[Address(RVA = "0xBBADC4", Offset = "0xBBADC4", VA = "0xBBADC4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002912")]
		[Address(RVA = "0xBBB200", Offset = "0xBBB200", VA = "0xBBB200", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20006CB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B7CC4", Offset = "0x8B7CC4")]
	private sealed class <castHeal>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40022BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40022BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40022BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AllyLlorona <>4__this;

		[Token(Token = "0x17000499")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002917")]
			[Address(RVA = "0xBBB510", Offset = "0xBBB510", VA = "0xBBB510", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700049A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002919")]
			[Address(RVA = "0xBBB578", Offset = "0xBBB578", VA = "0xBBB578", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002914")]
		[Address(RVA = "0xBBACE4", Offset = "0xBBACE4", VA = "0xBBACE4")]
		[DebuggerHidden]
		public <castHeal>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x6002915")]
		[Address(RVA = "0xBBB268", Offset = "0xBBB268", VA = "0xBBB268", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002916")]
		[Address(RVA = "0xBBB26C", Offset = "0xBBB26C", VA = "0xBBB26C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002918")]
		[Address(RVA = "0xBBB518", Offset = "0xBBB518", VA = "0xBBB518", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20006CC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B7CD4", Offset = "0x8B7CD4")]
	private sealed class <endTurnAfterTime>d__13 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40022BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40022BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40022BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float time;

		[Token(Token = "0x40022C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AllyLlorona <>4__this;

		[Token(Token = "0x1700049B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600291D")]
			[Address(RVA = "0xBBB648", Offset = "0xBBB648", VA = "0xBBB648", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700049C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600291F")]
			[Address(RVA = "0xBBB6B0", Offset = "0xBBB6B0", VA = "0xBBB6B0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600291A")]
		[Address(RVA = "0xBBAD90", Offset = "0xBBAD90", VA = "0xBBAD90")]
		[DebuggerHidden]
		public <endTurnAfterTime>d__13(int <>1__state)
		{
		}

		[Token(Token = "0x600291B")]
		[Address(RVA = "0xBBB580", Offset = "0xBBB580", VA = "0xBBB580", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600291C")]
		[Address(RVA = "0xBBB584", Offset = "0xBBB584", VA = "0xBBB584", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600291E")]
		[Address(RVA = "0xBBB650", Offset = "0xBBB650", VA = "0xBBB650", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400080B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BBFD4", Offset = "0x8BBFD4")]
	public AllyProjectile projectile;

	[Token(Token = "0x400080C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject healparticle;

	[Token(Token = "0x400080D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject castParticle;

	[Token(Token = "0x400080E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BC00C", Offset = "0x8BC00C")]
	public AudioSource audioSource;

	[Token(Token = "0x400080F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public AudioClip[] attackClips;

	[Token(Token = "0x4000810")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public AudioClip[] attackClipsHeal;

	[Token(Token = "0x4000811")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public AudioClip[] victoryClips;

	[Token(Token = "0x6000905")]
	[Address(RVA = "0xBBAAE0", Offset = "0xBBAAE0", VA = "0xBBAAE0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000906")]
	[Address(RVA = "0xBBAAE4", Offset = "0xBBAAE4", VA = "0xBBAAE4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000907")]
	[Address(RVA = "0xBBAAE8", Offset = "0xBBAAE8", VA = "0xBBAAE8", Slot = "5")]
	public override void doVictory()
	{
	}

	[Token(Token = "0x6000908")]
	[Address(RVA = "0xBBAB68", Offset = "0xBBAB68", VA = "0xBBAB68", Slot = "4")]
	public override void allyAttack()
	{
	}

	[Token(Token = "0x6000909")]
	[Address(RVA = "0xBBAC48", Offset = "0xBBAC48", VA = "0xBBAC48")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C3B2C", Offset = "0x8C3B2C")]
	private IEnumerator bounceAttack()
	{
		return null;
	}

	[Token(Token = "0x600090A")]
	[Address(RVA = "0xBBABD8", Offset = "0xBBABD8", VA = "0xBBABD8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C3B90", Offset = "0x8C3B90")]
	private IEnumerator castHeal()
	{
		return null;
	}

	[Token(Token = "0x600090B")]
	[Address(RVA = "0xBBAD10", Offset = "0xBBAD10", VA = "0xBBAD10")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C3BF4", Offset = "0x8C3BF4")]
	private IEnumerator endTurnAfterTime(float time)
	{
		return null;
	}

	[Token(Token = "0x600090C")]
	[Address(RVA = "0xBBADBC", Offset = "0xBBADBC", VA = "0xBBADBC")]
	public AllyLlorona()
	{
	}
}
[Token(Token = "0x2000157")]
public class AllyMechaBoat : BattleAlly
{
	[Token(Token = "0x20006CD")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B7CE4", Offset = "0x8B7CE4")]
	private sealed class <waterAttack>d__15 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40022C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40022C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40022C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AllyMechaBoat <>4__this;

		[Token(Token = "0x40022C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <i>5__2;

		[Token(Token = "0x1700049D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002923")]
			[Address(RVA = "0xBBC314", Offset = "0xBBC314", VA = "0xBBC314", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700049E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002925")]
			[Address(RVA = "0xBBC37C", Offset = "0xBBC37C", VA = "0xBBC37C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002920")]
		[Address(RVA = "0xBBB7B8", Offset = "0xBBB7B8", VA = "0xBBB7B8")]
		[DebuggerHidden]
		public <waterAttack>d__15(int <>1__state)
		{
		}

		[Token(Token = "0x6002921")]
		[Address(RVA = "0xBBBC98", Offset = "0xBBBC98", VA = "0xBBBC98", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002922")]
		[Address(RVA = "0xBBBC9C", Offset = "0xBBBC9C", VA = "0xBBBC9C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002924")]
		[Address(RVA = "0xBBC31C", Offset = "0xBBC31C", VA = "0xBBC31C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20006CE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B7CF4", Offset = "0x8B7CF4")]
	private sealed class <endTurnAfterTime>d__16 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40022C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40022C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40022C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float time;

		[Token(Token = "0x40022C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AllyMechaBoat <>4__this;

		[Token(Token = "0x1700049F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002929")]
			[Address(RVA = "0xBBBC28", Offset = "0xBBBC28", VA = "0xBBBC28", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004A0")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600292B")]
			[Address(RVA = "0xBBBC90", Offset = "0xBBBC90", VA = "0xBBBC90", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002926")]
		[Address(RVA = "0xBBB864", Offset = "0xBBB864", VA = "0xBBB864")]
		[DebuggerHidden]
		public <endTurnAfterTime>d__16(int <>1__state)
		{
		}

		[Token(Token = "0x6002927")]
		[Address(RVA = "0xBBBB60", Offset = "0xBBBB60", VA = "0xBBBB60", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002928")]
		[Address(RVA = "0xBBBB64", Offset = "0xBBBB64", VA = "0xBBBB64", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600292A")]
		[Address(RVA = "0xBBBC30", Offset = "0xBBBC30", VA = "0xBBBC30", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000812")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Animator boatAnim;

	[Token(Token = "0x4000813")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public AllyProjectile fireProj;

	[Token(Token = "0x4000814")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public BattleDialogueBox dialogueBox;

	[Token(Token = "0x4000815")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject castParticle;

	[Token(Token = "0x4000816")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool storyVersion;

	[Token(Token = "0x4000817")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public string[] dialogueLines;

	[Token(Token = "0x4000818")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject healParticlePrefab;

	[Token(Token = "0x4000819")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public AudioSource voiceSource;

	[Token(Token = "0x400081A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public AudioClip[] voiceCLips;

	[Token(Token = "0x400081B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public bool inBoatForm;

	[Token(Token = "0x400081C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x99")]
	private bool firstHeal;

	[Token(Token = "0x600090D")]
	[Address(RVA = "0xBBB6B8", Offset = "0xBBB6B8", VA = "0xBBB6B8")]
	private void Start()
	{
	}

	[Token(Token = "0x600090E")]
	[Address(RVA = "0xBBB714", Offset = "0xBBB714", VA = "0xBBB714")]
	private void Update()
	{
	}

	[Token(Token = "0x600090F")]
	[Address(RVA = "0xBBB718", Offset = "0xBBB718", VA = "0xBBB718", Slot = "4")]
	public override void allyAttack()
	{
	}

	[Token(Token = "0x6000910")]
	[Address(RVA = "0xBBB7B4", Offset = "0xBBB7B4", VA = "0xBBB7B4", Slot = "5")]
	public override void doVictory()
	{
	}

	[Token(Token = "0x6000911")]
	[Address(RVA = "0xBBB744", Offset = "0xBBB744", VA = "0xBBB744")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C3C58", Offset = "0x8C3C58")]
	private IEnumerator waterAttack()
	{
		return null;
	}

	[Token(Token = "0x6000912")]
	[Address(RVA = "0xBBB7E4", Offset = "0xBBB7E4", VA = "0xBBB7E4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C3CBC", Offset = "0x8C3CBC")]
	private IEnumerator endTurnAfterTime(float time)
	{
		return null;
	}

	[Token(Token = "0x6000913")]
	[Address(RVA = "0xBBB890", Offset = "0xBBB890", VA = "0xBBB890")]
	public void playDialogue(string dialogue)
	{
	}

	[Token(Token = "0x6000914")]
	[Address(RVA = "0xBBBB50", Offset = "0xBBBB50", VA = "0xBBBB50")]
	public AllyMechaBoat()
	{
	}
}
[Token(Token = "0x2000158")]
public class AllyMirrorImage : BattleAlly
{
	[Token(Token = "0x20006CF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B7D04", Offset = "0x8B7D04")]
	private sealed class <endTurnAfterTime>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40022C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40022CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40022CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float time;

		[Token(Token = "0x40022CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AllyMirrorImage <>4__this;

		[Token(Token = "0x170004A1")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600292F")]
			[Address(RVA = "0xBBC8AC", Offset = "0xBBC8AC", VA = "0xBBC8AC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004A2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002931")]
			[Address(RVA = "0xBBC914", Offset = "0xBBC914", VA = "0xBBC914", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600292C")]
		[Address(RVA = "0xBBC7B4", Offset = "0xBBC7B4", VA = "0xBBC7B4")]
		[DebuggerHidden]
		public <endTurnAfterTime>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x600292D")]
		[Address(RVA = "0xBBC7E4", Offset = "0xBBC7E4", VA = "0xBBC7E4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600292E")]
		[Address(RVA = "0xBBC7E8", Offset = "0xBBC7E8", VA = "0xBBC7E8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002930")]
		[Address(RVA = "0xBBC8B4", Offset = "0xBBC8B4", VA = "0xBBC8B4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x6000915")]
	[Address(RVA = "0xBBC384", Offset = "0xBBC384", VA = "0xBBC384")]
	private void Start()
	{
	}

	[Token(Token = "0x6000916")]
	[Address(RVA = "0xBBC388", Offset = "0xBBC388", VA = "0xBBC388", Slot = "4")]
	public override void allyAttack()
	{
	}

	[Token(Token = "0x6000917")]
	[Address(RVA = "0xBBC444", Offset = "0xBBC444", VA = "0xBBC444", Slot = "6")]
	public override void onSpellCast(PlayerSpell spell, HandCaster hand)
	{
	}

	[Token(Token = "0x6000918")]
	[Address(RVA = "0xBBC468", Offset = "0xBBC468", VA = "0xBBC468")]
	public void copySpell(PlayerSpell spell, HandCaster hand)
	{
	}

	[Token(Token = "0x6000919")]
	[Address(RVA = "0xBBC3C4", Offset = "0xBBC3C4", VA = "0xBBC3C4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C3D20", Offset = "0x8C3D20")]
	private IEnumerator endTurnAfterTime(float time)
	{
		return null;
	}

	[Token(Token = "0x600091A")]
	[Address(RVA = "0xBBC7E0", Offset = "0xBBC7E0", VA = "0xBBC7E0")]
	public AllyMirrorImage()
	{
	}
}
[Token(Token = "0x2000159")]
public class AllyProjectile : MonoBehaviour
{
	[Token(Token = "0x400081D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int power;

	[Token(Token = "0x400081E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool destroyOnCollisionWithEnemy;

	[Token(Token = "0x400081F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	public bool destroyOnCollision;

	[Token(Token = "0x4000820")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
	public bool canUnLink;

	[Token(Token = "0x4000821")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject explosionGameobject;

	[Token(Token = "0x4000822")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float chanceToInflict;

	[Token(Token = "0x4000823")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GlitchEffects glitchEffect;

	[Token(Token = "0x4000824")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float timeToDestruct;

	[Token(Token = "0x4000825")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float destructTimer;

	[Token(Token = "0x4000826")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	protected float minTimeHitEnemy;

	[Token(Token = "0x4000827")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	protected float timeSinceHit;

	[Token(Token = "0x4000828")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float launchPower;

	[Token(Token = "0x600091B")]
	[Address(RVA = "0xBBC91C", Offset = "0xBBC91C", VA = "0xBBC91C")]
	private void Start()
	{
	}

	[Token(Token = "0x600091C")]
	[Address(RVA = "0xBBC9F8", Offset = "0xBBC9F8", VA = "0xBBC9F8")]
	private void Update()
	{
	}

	[Token(Token = "0x600091D")]
	[Address(RVA = "0xBBCAD8", Offset = "0xBBCAD8", VA = "0xBBCAD8")]
	private void spawnImpact(UnityEngine.Vector3 position)
	{
	}

	[Token(Token = "0x600091E")]
	[Address(RVA = "0xBBCBD8", Offset = "0xBBCBD8", VA = "0xBBCBD8")]
	private void collideWithEnemy(EnemyParent ep)
	{
	}

	[Token(Token = "0x600091F")]
	[Address(RVA = "0xBBCEE8", Offset = "0xBBCEE8", VA = "0xBBCEE8")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000920")]
	[Address(RVA = "0xBBD08C", Offset = "0xBBD08C", VA = "0xBBD08C")]
	private void OnTriggerEnter(Collider collision)
	{
	}

	[Token(Token = "0x6000921")]
	[Address(RVA = "0xBBD248", Offset = "0xBBD248", VA = "0xBBD248")]
	public AllyProjectile()
	{
	}
}
[Token(Token = "0x200015A")]
public class AllyTaskMaster : BattleAlly
{
	[Token(Token = "0x20006D0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B7D14", Offset = "0x8B7D14")]
	private sealed class <waterAttack>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40022CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40022CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40022CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AllyTaskMaster <>4__this;

		[Token(Token = "0x40022D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <i>5__2;

		[Token(Token = "0x170004A3")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002935")]
			[Address(RVA = "0xBBD984", Offset = "0xBBD984", VA = "0xBBD984", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004A4")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002937")]
			[Address(RVA = "0xBBD9EC", Offset = "0xBBD9EC", VA = "0xBBD9EC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002932")]
		[Address(RVA = "0xBBD31C", Offset = "0xBBD31C", VA = "0xBBD31C")]
		[DebuggerHidden]
		public <waterAttack>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x6002933")]
		[Address(RVA = "0xBBD530", Offset = "0xBBD530", VA = "0xBBD530", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002934")]
		[Address(RVA = "0xBBD534", Offset = "0xBBD534", VA = "0xBBD534", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002936")]
		[Address(RVA = "0xBBD98C", Offset = "0xBBD98C", VA = "0xBBD98C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20006D1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B7D24", Offset = "0x8B7D24")]
	private sealed class <endTurnAfterTime>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40022D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40022D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40022D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float time;

		[Token(Token = "0x40022D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AllyTaskMaster <>4__this;

		[Token(Token = "0x170004A5")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600293B")]
			[Address(RVA = "0xBBD4C0", Offset = "0xBBD4C0", VA = "0xBBD4C0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004A6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600293D")]
			[Address(RVA = "0xBBD528", Offset = "0xBBD528", VA = "0xBBD528", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002938")]
		[Address(RVA = "0xBBD3C8", Offset = "0xBBD3C8", VA = "0xBBD3C8")]
		[DebuggerHidden]
		public <endTurnAfterTime>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x6002939")]
		[Address(RVA = "0xBBD3F8", Offset = "0xBBD3F8", VA = "0xBBD3F8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600293A")]
		[Address(RVA = "0xBBD3FC", Offset = "0xBBD3FC", VA = "0xBBD3FC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600293C")]
		[Address(RVA = "0xBBD4C8", Offset = "0xBBD4C8", VA = "0xBBD4C8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000829")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AllyProjectile projectile;

	[Token(Token = "0x400082A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject castParticle;

	[Token(Token = "0x400082B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public AudioClip[] attackClips;

	[Token(Token = "0x400082C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public AudioSource voiceSource;

	[Token(Token = "0x6000922")]
	[Address(RVA = "0xBBD274", Offset = "0xBBD274", VA = "0xBBD274")]
	private void Start()
	{
	}

	[Token(Token = "0x6000923")]
	[Address(RVA = "0xBBD278", Offset = "0xBBD278", VA = "0xBBD278")]
	private void Update()
	{
	}

	[Token(Token = "0x6000924")]
	[Address(RVA = "0xBBD27C", Offset = "0xBBD27C", VA = "0xBBD27C", Slot = "4")]
	public override void allyAttack()
	{
	}

	[Token(Token = "0x6000925")]
	[Address(RVA = "0xBBD318", Offset = "0xBBD318", VA = "0xBBD318", Slot = "5")]
	public override void doVictory()
	{
	}

	[Token(Token = "0x6000926")]
	[Address(RVA = "0xBBD2A8", Offset = "0xBBD2A8", VA = "0xBBD2A8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C3D84", Offset = "0x8C3D84")]
	private IEnumerator waterAttack()
	{
		return null;
	}

	[Token(Token = "0x6000927")]
	[Address(RVA = "0xBBD348", Offset = "0xBBD348", VA = "0xBBD348")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C3DE8", Offset = "0x8C3DE8")]
	private IEnumerator endTurnAfterTime(float time)
	{
		return null;
	}

	[Token(Token = "0x6000928")]
	[Address(RVA = "0xBBD3F4", Offset = "0xBBD3F4", VA = "0xBBD3F4")]
	public AllyTaskMaster()
	{
	}
}
[Token(Token = "0x200015B")]
public class DarkaxerBattleHazzard : MonoBehaviour
{
	[Token(Token = "0x20006D2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B7D34", Offset = "0x8B7D34")]
	private sealed class <disolveMaterial>d__13 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40022D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40022D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40022D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DarkaxerBattleHazzard <>4__this;

		[Token(Token = "0x40022D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Renderer[] <rends>5__2;

		[Token(Token = "0x40022D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <disolve>5__3;

		[Token(Token = "0x170004A7")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002941")]
			[Address(RVA = "0xB0D320", Offset = "0xB0D320", VA = "0xB0D320", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004A8")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002943")]
			[Address(RVA = "0xB0D388", Offset = "0xB0D388", VA = "0xB0D388", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600293E")]
		[Address(RVA = "0xB0CCC0", Offset = "0xB0CCC0", VA = "0xB0CCC0")]
		[DebuggerHidden]
		public <disolveMaterial>d__13(int <>1__state)
		{
		}

		[Token(Token = "0x600293F")]
		[Address(RVA = "0xB0D0E0", Offset = "0xB0D0E0", VA = "0xB0D0E0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002940")]
		[Address(RVA = "0xB0D0E4", Offset = "0xB0D0E4", VA = "0xB0D0E4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002942")]
		[Address(RVA = "0xB0D328", Offset = "0xB0D328", VA = "0xB0D328", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20006D3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B7D44", Offset = "0x8B7D44")]
	private sealed class <castShotgunBlast>d__14 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40022DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40022DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40022DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DarkaxerBattleHazzard <>4__this;

		[Token(Token = "0x40022DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <numOfProjectiles>5__2;

		[Token(Token = "0x40022DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <aimAccuracy>5__3;

		[Token(Token = "0x170004A9")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002947")]
			[Address(RVA = "0xB0D070", Offset = "0xB0D070", VA = "0xB0D070", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004AA")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002949")]
			[Address(RVA = "0xB0D0D8", Offset = "0xB0D0D8", VA = "0xB0D0D8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002944")]
		[Address(RVA = "0xB0CCEC", Offset = "0xB0CCEC", VA = "0xB0CCEC")]
		[DebuggerHidden]
		public <castShotgunBlast>d__14(int <>1__state)
		{
		}

		[Token(Token = "0x6002945")]
		[Address(RVA = "0xB0CDD4", Offset = "0xB0CDD4", VA = "0xB0CDD4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002946")]
		[Address(RVA = "0xB0CDD8", Offset = "0xB0CDD8", VA = "0xB0CDD8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002948")]
		[Address(RVA = "0xB0D078", Offset = "0xB0D078", VA = "0xB0D078", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20006D4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B7D54", Offset = "0x8B7D54")]
	private sealed class <shootProjectile>d__15 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40022DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40022E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40022E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DarkaxerBattleHazzard <>4__this;

		[Token(Token = "0x40022E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GameObject <proj>5__2;

		[Token(Token = "0x40022E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Rigidbody <projRB>5__3;

		[Token(Token = "0x170004AB")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600294D")]
			[Address(RVA = "0xB0D614", Offset = "0xB0D614", VA = "0xB0D614", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004AC")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600294F")]
			[Address(RVA = "0xB0D67C", Offset = "0xB0D67C", VA = "0xB0D67C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600294A")]
		[Address(RVA = "0xB0CD88", Offset = "0xB0CD88", VA = "0xB0CD88")]
		[DebuggerHidden]
		public <shootProjectile>d__15(int <>1__state)
		{
		}

		[Token(Token = "0x600294B")]
		[Address(RVA = "0xB0D390", Offset = "0xB0D390", VA = "0xB0D390", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600294C")]
		[Address(RVA = "0xB0D394", Offset = "0xB0D394", VA = "0xB0D394", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600294E")]
		[Address(RVA = "0xB0D61C", Offset = "0xB0D61C", VA = "0xB0D61C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400082D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform[] telePoints;

	[Token(Token = "0x400082E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject projectile;

	[Token(Token = "0x400082F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform projectileLaunchTrans;

	[Token(Token = "0x4000830")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Animator anim;

	[Token(Token = "0x4000831")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float actionTimer;

	[Token(Token = "0x4000832")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float maxActionTime;

	[Token(Token = "0x4000833")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float numOfShots;

	[Token(Token = "0x4000834")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private int damage;

	[Token(Token = "0x4000835")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float projSpeed;

	[Token(Token = "0x6000929")]
	[Address(RVA = "0xB0C950", Offset = "0xB0C950", VA = "0xB0C950")]
	private void Start()
	{
	}

	[Token(Token = "0x600092A")]
	[Address(RVA = "0xB0C9E8", Offset = "0xB0C9E8", VA = "0xB0C9E8")]
	private void Update()
	{
	}

	[Token(Token = "0x600092B")]
	[Address(RVA = "0xB0CC24", Offset = "0xB0CC24", VA = "0xB0CC24")]
	public void disolveMat()
	{
	}

	[Token(Token = "0x600092C")]
	[Address(RVA = "0xB0CB90", Offset = "0xB0CB90", VA = "0xB0CB90")]
	private void teleport()
	{
	}

	[Token(Token = "0x600092D")]
	[Address(RVA = "0xB0CC50", Offset = "0xB0CC50", VA = "0xB0CC50")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C3E4C", Offset = "0x8C3E4C")]
	private IEnumerator disolveMaterial()
	{
		return null;
	}

	[Token(Token = "0x600092E")]
	[Address(RVA = "0xB0CB20", Offset = "0xB0CB20", VA = "0xB0CB20")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C3EB0", Offset = "0x8C3EB0")]
	protected IEnumerator castShotgunBlast()
	{
		return null;
	}

	[Token(Token = "0x600092F")]
	[Address(RVA = "0xB0CD18", Offset = "0xB0CD18", VA = "0xB0CD18")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C3F14", Offset = "0x8C3F14")]
	protected IEnumerator shootProjectile()
	{
		return null;
	}

	[Token(Token = "0x6000930")]
	[Address(RVA = "0xB0CDB4", Offset = "0xB0CDB4", VA = "0xB0CDB4")]
	public DarkaxerBattleHazzard()
	{
	}
}
[Token(Token = "0x200015C")]
public class BattleAbility : MonoBehaviour
{
	[Token(Token = "0x20006D5")]
	public enum AbilityType
	{
		[Token(Token = "0x40022E5")]
		attack,
		[Token(Token = "0x40022E6")]
		defense
	}

	[Token(Token = "0x20006D6")]
	public enum AbilityRange
	{
		[Token(Token = "0x40022E8")]
		ranged,
		[Token(Token = "0x40022E9")]
		melee,
		[Token(Token = "0x40022EA")]
		global
	}

	[Token(Token = "0x20006D7")]
	public enum StatusEffect
	{
		[Token(Token = "0x40022EC")]
		poison,
		[Token(Token = "0x40022ED")]
		stun,
		[Token(Token = "0x40022EE")]
		slow,
		[Token(Token = "0x40022EF")]
		root,
		[Token(Token = "0x40022F0")]
		weaken,
		[Token(Token = "0x40022F1")]
		broken,
		[Token(Token = "0x40022F2")]
		vamp
	}

	[Token(Token = "0x20006D8")]
	public enum Buff
	{
		[Token(Token = "0x40022F4")]
		apBoost,
		[Token(Token = "0x40022F5")]
		defenseBoost,
		[Token(Token = "0x40022F6")]
		powerBoost,
		[Token(Token = "0x40022F7")]
		precisionBoost
	}

	[Token(Token = "0x4000836")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject projectilePrefab;

	[Token(Token = "0x4000837")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject particleEffect;

	[Token(Token = "0x4000838")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AbilityType abilityType;

	[Token(Token = "0x4000839")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public AbilityRange abilityRange;

	[Token(Token = "0x400083A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public StatusEffect statusEffect;

	[Token(Token = "0x400083B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public int baseDamage;

	[Token(Token = "0x400083C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int heal;

	[Token(Token = "0x400083D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public int statusInflictChance;

	[Token(Token = "0x400083E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int effectPotency;

	[Token(Token = "0x400083F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public int buffPotency;

	[Token(Token = "0x4000840")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int adrenalineGain;

	[Token(Token = "0x6000931")]
	[Address(RVA = "0xBBFA58", Offset = "0xBBFA58", VA = "0xBBFA58")]
	public BattleAbility()
	{
	}
}
[Token(Token = "0x200015D")]
public class BattleAlly : MonoBehaviour
{
	[Token(Token = "0x4000841")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int maxTurnsActive;

	[Token(Token = "0x4000842")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int turnsActive;

	[Token(Token = "0x4000843")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int power;

	[Token(Token = "0x4000844")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int level;

	[Token(Token = "0x4000845")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Animator allyAnim;

	[Token(Token = "0x4000846")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform projTrans;

	[Token(Token = "0x4000847")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Sprite allyPortrait;

	[Token(Token = "0x4000848")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string summonName;

	[Token(Token = "0x4000849")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int summonSlot;

	[Token(Token = "0x6000932")]
	[Address(RVA = "0xBB8990", Offset = "0xBB8990", VA = "0xBB8990", Slot = "4")]
	public virtual void allyAttack()
	{
	}

	[Token(Token = "0x6000933")]
	[Address(RVA = "0xBB86AC", Offset = "0xBB86AC", VA = "0xBB86AC", Slot = "5")]
	public virtual void doVictory()
	{
	}

	[Token(Token = "0x6000934")]
	[Address(RVA = "0xBBFA60", Offset = "0xBBFA60", VA = "0xBBFA60", Slot = "6")]
	public virtual void onSpellCast(PlayerSpell spell, HandCaster hand)
	{
	}

	[Token(Token = "0x6000935")]
	[Address(RVA = "0xBB8AF4", Offset = "0xBB8AF4", VA = "0xBB8AF4")]
	public BattleAlly()
	{
	}
}
[Token(Token = "0x200015E")]
public class BattleManager : MonoBehaviour
{
	[Token(Token = "0x20006D9")]
	public enum BattleState
	{
		[Token(Token = "0x40022F9")]
		Starting,
		[Token(Token = "0x40022FA")]
		PlayerTurn,
		[Token(Token = "0x40022FB")]
		EnemyTurn,
		[Token(Token = "0x40022FC")]
		Finished,
		[Token(Token = "0x40022FD")]
		PlayerDead,
		[Token(Token = "0x40022FE")]
		RealTimeCombat,
		[Token(Token = "0x40022FF")]
		AllyTurn
	}

	[Token(Token = "0x20006DA")]
	public delegate void BattleVictoryEventHandler(bool closeCall, bool allyActive);

	[Token(Token = "0x20006DB")]
	private class SpeedSort : IComparer<GameObject>
	{
		[Token(Token = "0x6002954")]
		[Address(RVA = "0xBC3C60", Offset = "0xBC3C60", VA = "0xBC3C60", Slot = "4")]
		private int System.Collections.Generic.IComparer<UnityEngine.GameObject>.Compare(GameObject _objA, GameObject _objB)
		{
			return default(int);
		}

		[Token(Token = "0x6002955")]
		[Address(RVA = "0xBC0C64", Offset = "0xBC0C64", VA = "0xBC0C64")]
		public SpeedSort()
		{
		}
	}

	[Token(Token = "0x20006DC")]
	private class StartingState : State<BattleManager>
	{
		[Token(Token = "0x4002300")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private float startupTime;

		[Token(Token = "0x4002301")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float startupWait;

		[Token(Token = "0x6002956")]
		[Address(RVA = "0xBC3CFC", Offset = "0xBC3CFC", VA = "0xBC3CFC", Slot = "4")]
		public override void activate(BattleManager parent)
		{
		}

		[Token(Token = "0x6002957")]
		[Address(RVA = "0xBC4034", Offset = "0xBC4034", VA = "0xBC4034", Slot = "5")]
		public override void update(BattleManager parent)
		{
		}

		[Token(Token = "0x6002958")]
		[Address(RVA = "0xBC0988", Offset = "0xBC0988", VA = "0xBC0988")]
		public StartingState()
		{
		}
	}

	[Token(Token = "0x20006DD")]
	private class PlayerTurnState : State<BattleManager>
	{
		[Serializable]
		[Token(Token = "0x20008CD")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B9120", Offset = "0x8B9120")]
		private sealed class <>c
		{
			[Token(Token = "0x4002A88")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002A89")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<GameObject, bool> <>9__2_0;

			[Token(Token = "0x60030F1")]
			[Address(RVA = "0xBC3950", Offset = "0xBC3950", VA = "0xBC3950")]
			public <>c()
			{
			}

			[Token(Token = "0x60030F2")]
			[Address(RVA = "0xBC3958", Offset = "0xBC3958", VA = "0xBC3958")]
			internal bool <activate>b__2_0(GameObject item)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4002302")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private float endTimer;

		[Token(Token = "0x4002303")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float endTimeRequired;

		[Token(Token = "0x6002959")]
		[Address(RVA = "0xBC34DC", Offset = "0xBC34DC", VA = "0xBC34DC", Slot = "4")]
		public override void activate(BattleManager parent)
		{
		}

		[Token(Token = "0x600295A")]
		[Address(RVA = "0xBC3794", Offset = "0xBC3794", VA = "0xBC3794", Slot = "5")]
		public override void update(BattleManager parent)
		{
		}

		[Token(Token = "0x600295B")]
		[Address(RVA = "0xBC09E0", Offset = "0xBC09E0", VA = "0xBC09E0")]
		public PlayerTurnState()
		{
		}
	}

	[Token(Token = "0x20006DE")]
	private class AllyTurnState : State<BattleManager>
	{
		[Serializable]
		[Token(Token = "0x20008CE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B9130", Offset = "0x8B9130")]
		private sealed class <>c
		{
			[Token(Token = "0x4002A8A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002A8B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<GameObject, bool> <>9__0_0;

			[Token(Token = "0x60030F4")]
			[Address(RVA = "0xBC2000", Offset = "0xBC2000", VA = "0xBC2000")]
			public <>c()
			{
			}

			[Token(Token = "0x60030F5")]
			[Address(RVA = "0xBC2008", Offset = "0xBC2008", VA = "0xBC2008")]
			internal bool <activate>b__0_0(GameObject item)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600295C")]
		[Address(RVA = "0xBC1CE0", Offset = "0xBC1CE0", VA = "0xBC1CE0", Slot = "4")]
		public override void activate(BattleManager parent)
		{
		}

		[Token(Token = "0x600295D")]
		[Address(RVA = "0xBC1E94", Offset = "0xBC1E94", VA = "0xBC1E94", Slot = "5")]
		public override void update(BattleManager parent)
		{
		}

		[Token(Token = "0x600295E")]
		[Address(RVA = "0xBC0B98", Offset = "0xBC0B98", VA = "0xBC0B98")]
		public AllyTurnState()
		{
		}
	}

	[Token(Token = "0x20006DF")]
	private class EnemyTurnState : State<BattleManager>
	{
		[Serializable]
		[Token(Token = "0x20008CF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B9140", Offset = "0x8B9140")]
		private sealed class <>c
		{
			[Token(Token = "0x4002A8C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002A8D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<GameObject, bool> <>9__0_0;

			[Token(Token = "0x60030F7")]
			[Address(RVA = "0xBC2820", Offset = "0xBC2820", VA = "0xBC2820")]
			public <>c()
			{
			}

			[Token(Token = "0x60030F8")]
			[Address(RVA = "0xBC2828", Offset = "0xBC2828", VA = "0xBC2828")]
			internal bool <activate>b__0_0(GameObject item)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600295F")]
		[Address(RVA = "0xBC23CC", Offset = "0xBC23CC", VA = "0xBC23CC", Slot = "4")]
		public override void activate(BattleManager parent)
		{
		}

		[Token(Token = "0x6002960")]
		[Address(RVA = "0xBC26E4", Offset = "0xBC26E4", VA = "0xBC26E4", Slot = "5")]
		public override void update(BattleManager parent)
		{
		}

		[Token(Token = "0x6002961")]
		[Address(RVA = "0xBC0A3C", Offset = "0xBC0A3C", VA = "0xBC0A3C")]
		public EnemyTurnState()
		{
		}
	}

	[Token(Token = "0x20006E0")]
	private class RealTimeCombatState : State<BattleManager>
	{
		[Token(Token = "0x4002304")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private float spawnTimer;

		[Token(Token = "0x4002305")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private int waveNum;

		[Token(Token = "0x4002306")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float timeToSpawn;

		[Token(Token = "0x6002962")]
		[Address(RVA = "0xBC39C4", Offset = "0xBC39C4", VA = "0xBC39C4")]
		private void spawnEnemies(BattleManager parent)
		{
		}

		[Token(Token = "0x6002963")]
		[Address(RVA = "0xBC3A5C", Offset = "0xBC3A5C", VA = "0xBC3A5C", Slot = "4")]
		public override void activate(BattleManager parent)
		{
		}

		[Token(Token = "0x6002964")]
		[Address(RVA = "0xBC3B90", Offset = "0xBC3B90", VA = "0xBC3B90", Slot = "5")]
		public override void update(BattleManager parent)
		{
		}

		[Token(Token = "0x6002965")]
		[Address(RVA = "0xBC0B3C", Offset = "0xBC0B3C", VA = "0xBC0B3C")]
		public RealTimeCombatState()
		{
		}
	}

	[Token(Token = "0x20006E1")]
	private class FinishedState : State<BattleManager>
	{
		[Token(Token = "0x20008D0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B9150", Offset = "0x8B9150")]
		private sealed class <waitAfterResults>d__7 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002A8E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002A8F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002A90")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FinishedState <>4__this;

			[Token(Token = "0x170006A8")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60030FC")]
				[Address(RVA = "0xBC3380", Offset = "0xBC3380", VA = "0xBC3380", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170006A9")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60030FE")]
				[Address(RVA = "0xBC33E8", Offset = "0xBC33E8", VA = "0xBC33E8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60030F9")]
			[Address(RVA = "0xBC2B70", Offset = "0xBC2B70", VA = "0xBC2B70")]
			[DebuggerHidden]
			public <waitAfterResults>d__7(int <>1__state)
			{
			}

			[Token(Token = "0x60030FA")]
			[Address(RVA = "0xBC32CC", Offset = "0xBC32CC", VA = "0xBC32CC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60030FB")]
			[Address(RVA = "0xBC32D0", Offset = "0xBC32D0", VA = "0xBC32D0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60030FD")]
			[Address(RVA = "0xBC3388", Offset = "0xBC3388", VA = "0xBC3388", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002307")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private bool canGoToNextScene;

		[Token(Token = "0x4002308")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		private bool playerLeveled;

		[Token(Token = "0x4002309")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
		private bool levelScreenSeen;

		[Token(Token = "0x400230A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13")]
		private bool loadingScene;

		[Token(Token = "0x400230B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float finishedTime;

		[Token(Token = "0x400230C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float maxFinishTime;

		[Token(Token = "0x400230D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private bool updatedStats;

		[Token(Token = "0x6002966")]
		[Address(RVA = "0xBC2894", Offset = "0xBC2894", VA = "0xBC2894", Slot = "4")]
		public override void activate(BattleManager parent)
		{
		}

		[Token(Token = "0x6002967")]
		[Address(RVA = "0xBC2B00", Offset = "0xBC2B00", VA = "0xBC2B00")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8CC96C", Offset = "0x8CC96C")]
		private IEnumerator waitAfterResults()
		{
			return null;
		}

		[Token(Token = "0x6002968")]
		[Address(RVA = "0xBC2B9C", Offset = "0xBC2B9C", VA = "0xBC2B9C", Slot = "5")]
		public override void update(BattleManager parent)
		{
		}

		[Token(Token = "0x6002969")]
		[Address(RVA = "0xBC3014", Offset = "0xBC3014", VA = "0xBC3014")]
		private void updatePlayerStats(BattleManager parent)
		{
		}

		[Token(Token = "0x600296A")]
		[Address(RVA = "0xBC0A8C", Offset = "0xBC0A8C", VA = "0xBC0A8C")]
		public FinishedState()
		{
		}
	}

	[Token(Token = "0x20006E2")]
	private class PlayerDeadState : State<BattleManager>
	{
		[Token(Token = "0x400230E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private float finishedTime;

		[Token(Token = "0x400230F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float maxFinishTime;

		[Token(Token = "0x4002310")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool startedSceneLoad;

		[Token(Token = "0x600296B")]
		[Address(RVA = "0xBC33F0", Offset = "0xBC33F0", VA = "0xBC33F0", Slot = "4")]
		public override void activate(BattleManager parent)
		{
		}

		[Token(Token = "0x600296C")]
		[Address(RVA = "0xBC34A4", Offset = "0xBC34A4", VA = "0xBC34A4", Slot = "5")]
		public override void update(BattleManager parent)
		{
		}

		[Token(Token = "0x600296D")]
		[Address(RVA = "0xBC0AE4", Offset = "0xBC0AE4", VA = "0xBC0AE4")]
		public PlayerDeadState()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20006E3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B7D64", Offset = "0x8B7D64")]
	private sealed class <>c
	{
		[Token(Token = "0x4002311")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4002312")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<EnemySpawner, string> <>9__32_0;

		[Token(Token = "0x4002313")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Func<GameObject, bool> <>9__35_0;

		[Token(Token = "0x4002314")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static Func<GameObject, bool> <>9__46_0;

		[Token(Token = "0x600296F")]
		[Address(RVA = "0xBC139C", Offset = "0xBC139C", VA = "0xBC139C")]
		public <>c()
		{
		}

		[Token(Token = "0x6002970")]
		[Address(RVA = "0xBC13A4", Offset = "0xBC13A4", VA = "0xBC13A4")]
		internal string <Start>b__32_0(EnemySpawner go)
		{
			return null;
		}

		[Token(Token = "0x6002971")]
		[Address(RVA = "0xBC13C0", Offset = "0xBC13C0", VA = "0xBC13C0")]
		internal bool <tryToSpawnNewEnemy>b__35_0(GameObject item)
		{
			return default(bool);
		}

		[Token(Token = "0x6002972")]
		[Address(RVA = "0xBC142C", Offset = "0xBC142C", VA = "0xBC142C")]
		internal bool <nextAttackTimer>b__46_0(GameObject item)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x20006E4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B7D74", Offset = "0x8B7D74")]
	private sealed class <delayEnemySpawn>d__37 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002315")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002316")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002317")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EnemySpawner spawner;

		[Token(Token = "0x4002318")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public BattleManager <>4__this;

		[Token(Token = "0x170004AD")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002976")]
			[Address(RVA = "0xBC16E0", Offset = "0xBC16E0", VA = "0xBC16E0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004AE")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002978")]
			[Address(RVA = "0xBC1748", Offset = "0xBC1748", VA = "0xBC1748", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002973")]
		[Address(RVA = "0xBC106C", Offset = "0xBC106C", VA = "0xBC106C")]
		[DebuggerHidden]
		public <delayEnemySpawn>d__37(int <>1__state)
		{
		}

		[Token(Token = "0x6002974")]
		[Address(RVA = "0xBC1498", Offset = "0xBC1498", VA = "0xBC1498", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002975")]
		[Address(RVA = "0xBC149C", Offset = "0xBC149C", VA = "0xBC149C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002977")]
		[Address(RVA = "0xBC16E8", Offset = "0xBC16E8", VA = "0xBC16E8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20006E5")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B7D84", Offset = "0x8B7D84")]
	private sealed class <delaySpawnParticle>d__38 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002319")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400231A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400231B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BattleManager <>4__this;

		[Token(Token = "0x400231C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public EnemyParent ep;

		[Token(Token = "0x170004AF")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600297C")]
			[Address(RVA = "0xBC1800", Offset = "0xBC1800", VA = "0xBC1800", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004B0")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600297E")]
			[Address(RVA = "0xBC1868", Offset = "0xBC1868", VA = "0xBC1868", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002979")]
		[Address(RVA = "0xBC1098", Offset = "0xBC1098", VA = "0xBC1098")]
		[DebuggerHidden]
		public <delaySpawnParticle>d__38(int <>1__state)
		{
		}

		[Token(Token = "0x600297A")]
		[Address(RVA = "0xBC1750", Offset = "0xBC1750", VA = "0xBC1750", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600297B")]
		[Address(RVA = "0xBC1754", Offset = "0xBC1754", VA = "0xBC1754", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600297D")]
		[Address(RVA = "0xBC1808", Offset = "0xBC1808", VA = "0xBC1808", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20006E6")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B7D94", Offset = "0x8B7D94")]
	private sealed class <nextAttackTimer>d__46 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400231D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400231E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400231F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BattleManager <>4__this;

		[Token(Token = "0x170004B1")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002982")]
			[Address(RVA = "0xBC1C70", Offset = "0xBC1C70", VA = "0xBC1C70", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004B2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002984")]
			[Address(RVA = "0xBC1CD8", Offset = "0xBC1CD8", VA = "0xBC1CD8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600297F")]
		[Address(RVA = "0xBC1134", Offset = "0xBC1134", VA = "0xBC1134")]
		[DebuggerHidden]
		public <nextAttackTimer>d__46(int <>1__state)
		{
		}

		[Token(Token = "0x6002980")]
		[Address(RVA = "0xBC1870", Offset = "0xBC1870", VA = "0xBC1870", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002981")]
		[Address(RVA = "0xBC1874", Offset = "0xBC1874", VA = "0xBC1874", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002983")]
		[Address(RVA = "0xBC1C78", Offset = "0xBC1C78", VA = "0xBC1C78", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400084A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static BattleManager instance;

	[Token(Token = "0x400084B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private StateMachine<BattleManager, BattleState> stateMachine;

	[Token(Token = "0x400084C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<GameObject> enemyList;

	[Token(Token = "0x400084D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<EnemyParent> queuedEnemies;

	[Token(Token = "0x400084E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public EnemySpawner[] enemySpawners;

	[Token(Token = "0x400084F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private List<EnemySpawner> queuedSpawners;

	[Token(Token = "0x4000850")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public EnemyParent[] testEnemys;

	[Token(Token = "0x4000851")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AudioSource audioSource;

	[Token(Token = "0x4000852")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject alertPrefab;

	[Token(Token = "0x4000853")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public int turnNum;

	[Token(Token = "0x4000854")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private bool spawnersFull;

	[Token(Token = "0x4000855")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5D")]
	public bool testMode;

	[Token(Token = "0x4000856")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5E")]
	public bool forceTestMode;

	[Token(Token = "0x4000857")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5F")]
	public bool restrictVoiceAssistant;

	[Token(Token = "0x4000858")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public bool showDifficultyInEnemyName;

	[Token(Token = "0x4000859")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
	public bool realTimeCOmbatMode;

	[Token(Token = "0x400085A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x62")]
	public bool freezeCurrentPhase;

	[Token(Token = "0x400085B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public int expPool;

	[Token(Token = "0x400085C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public int moneyPool;

	[Token(Token = "0x400085D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public List<Item> itemPool;

	[Token(Token = "0x400085E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public UnityEvent onPlayerTurnStart;

	[Token(Token = "0x400085F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public UnityEvent onEnemyTurnStart;

	[Token(Token = "0x4000860")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public UnityEvent onBattleStart;

	[Token(Token = "0x4000861")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public UnityEvent OnSpawnEnemy;

	[Token(Token = "0x4000862")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public List<BattleAlly> activeAllies;

	[Token(Token = "0x4000864")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BC054", Offset = "0x8BC054")]
	public float enemyLinkChance;

	[Token(Token = "0x4000865")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	public int currentEnemy;

	[Token(Token = "0x1400002F")]
	public event BattleVictoryEventHandler OnBattleWon
	{
		[Token(Token = "0x6000936")]
		[Address(RVA = "0xBBFFFC", Offset = "0xBBFFFC", VA = "0xBBFFFC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C3F78", Offset = "0x8C3F78")]
		add
		{
		}
		[Token(Token = "0x6000937")]
		[Address(RVA = "0xBC00A0", Offset = "0xBC00A0", VA = "0xBC00A0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C3F88", Offset = "0x8C3F88")]
		remove
		{
		}
	}

	[Token(Token = "0x6000938")]
	[Address(RVA = "0xBC0144", Offset = "0xBC0144", VA = "0xBC0144")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000939")]
	[Address(RVA = "0xBC01A4", Offset = "0xBC01A4", VA = "0xBC01A4")]
	private void Start()
	{
	}

	[Token(Token = "0x600093A")]
	[Address(RVA = "0xBC0C6C", Offset = "0xBC0C6C", VA = "0xBC0C6C")]
	private void Update()
	{
	}

	[Token(Token = "0x600093B")]
	[Address(RVA = "0xBC0CC4", Offset = "0xBC0CC4", VA = "0xBC0CC4")]
	public EnemySpawner getEmptySpawner()
	{
		return null;
	}

	[Token(Token = "0x600093C")]
	[Address(RVA = "0xBC0D28", Offset = "0xBC0D28", VA = "0xBC0D28")]
	public void tryToSpawnNewEnemy(EnemySpawner spawner)
	{
	}

	[Token(Token = "0x600093D")]
	[Address(RVA = "0xBC0F1C", Offset = "0xBC0F1C", VA = "0xBC0F1C")]
	private void spawnAppearParticle(EnemyParent enemy)
	{
	}

	[Token(Token = "0x600093E")]
	[Address(RVA = "0xBC0EA0", Offset = "0xBC0EA0", VA = "0xBC0EA0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C3F98", Offset = "0x8C3F98")]
	private IEnumerator delayEnemySpawn(EnemySpawner spawner)
	{
		return null;
	}

	[Token(Token = "0x600093F")]
	[Address(RVA = "0xBC0BE8", Offset = "0xBC0BE8", VA = "0xBC0BE8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C3FFC", Offset = "0x8C3FFC")]
	private IEnumerator delaySpawnParticle(EnemyParent ep)
	{
		return null;
	}

	[Token(Token = "0x6000940")]
	[Address(RVA = "0xBC10C4", Offset = "0xBC10C4", VA = "0xBC10C4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C4060", Offset = "0x8C4060")]
	private IEnumerator nextAttackTimer(bool enemyDied = false)
	{
		return null;
	}

	[Token(Token = "0x6000941")]
	[Address(RVA = "0xBC1160", Offset = "0xBC1160", VA = "0xBC1160")]
	public void nextAttack(bool enemyDied = false)
	{
	}

	[Token(Token = "0x6000942")]
	[Address(RVA = "0xBB8C1C", Offset = "0xBB8C1C", VA = "0xBB8C1C")]
	public void endAllyTurn(BattleAlly ally)
	{
	}

	[Token(Token = "0x6000943")]
	[Address(RVA = "0xBC1190", Offset = "0xBC1190", VA = "0xBC1190")]
	public BattleState getState()
	{
		return default(BattleState);
	}

	[Token(Token = "0x6000944")]
	[Address(RVA = "0xBC11E0", Offset = "0xBC11E0", VA = "0xBC11E0")]
	public BattleManager()
	{
	}
}
[Token(Token = "0x200015F")]
public class BattleSoundManager : MonoBehaviour
{
	[Token(Token = "0x4000866")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioSource source1;

	[Token(Token = "0x4000867")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioClip[] hurtSounds;

	[Token(Token = "0x4000868")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioClip[] hurtSoundsFem;

	[Token(Token = "0x4000869")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AudioClip changeSpell;

	[Token(Token = "0x400086A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AudioClip selectSpell;

	[Token(Token = "0x400086B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AudioClip castError;

	[Token(Token = "0x400086C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static BattleSoundManager instance;

	[Token(Token = "0x6000945")]
	[Address(RVA = "0xBC4174", Offset = "0xBC4174", VA = "0xBC4174")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000946")]
	[Address(RVA = "0xBC41C8", Offset = "0xBC41C8", VA = "0xBC41C8")]
	public void playHurtSound()
	{
	}

	[Token(Token = "0x6000947")]
	[Address(RVA = "0xBC4274", Offset = "0xBC4274", VA = "0xBC4274")]
	public void playChangeSpellSound()
	{
	}

	[Token(Token = "0x6000948")]
	[Address(RVA = "0xBC42B4", Offset = "0xBC42B4", VA = "0xBC42B4")]
	public void playSelectSpellSOund()
	{
	}

	[Token(Token = "0x6000949")]
	[Address(RVA = "0xBC42F4", Offset = "0xBC42F4", VA = "0xBC42F4")]
	public void playCastErrorSound()
	{
	}

	[Token(Token = "0x600094A")]
	[Address(RVA = "0xBC4334", Offset = "0xBC4334", VA = "0xBC4334")]
	public BattleSoundManager()
	{
	}
}
[Token(Token = "0x2000160")]
public class BattleVoiceAssistant : MonoBehaviour
{
	[Token(Token = "0x400086D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioSource voiceSource;

	[Token(Token = "0x400086E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioClip[] critClips;

	[Token(Token = "0x400086F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioClip[] damagedClips;

	[Token(Token = "0x4000870")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AudioClip[] victoryClips;

	[Token(Token = "0x4000871")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AudioClip[] victoryClipsClose;

	[Token(Token = "0x4000872")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AudioClip[] lowHealthClips;

	[Token(Token = "0x4000873")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AudioClip[] adrenalineMaxed;

	[Token(Token = "0x4000874")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AudioClip[] lotsOfEnemiesClips;

	[Token(Token = "0x4000875")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public AudioClip[] newSpawnClips;

	[Token(Token = "0x4000876")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public AudioClip[] enemyLowClips;

	[Token(Token = "0x4000877")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public AudioClip[] enemyDefeatedClips;

	[Token(Token = "0x4000878")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static BattleVoiceAssistant instance;

	[Token(Token = "0x600094B")]
	[Address(RVA = "0xBC4730", Offset = "0xBC4730", VA = "0xBC4730")]
	private void Awake()
	{
	}

	[Token(Token = "0x600094C")]
	[Address(RVA = "0xBC4784", Offset = "0xBC4784", VA = "0xBC4784")]
	private void Start()
	{
	}

	[Token(Token = "0x600094D")]
	[Address(RVA = "0xBC49B8", Offset = "0xBC49B8", VA = "0xBC49B8")]
	public void playCritVoice(int amount)
	{
	}

	[Token(Token = "0x600094E")]
	[Address(RVA = "0xBC4A7C", Offset = "0xBC4A7C", VA = "0xBC4A7C")]
	public void playDamagedVoice()
	{
	}

	[Token(Token = "0x600094F")]
	[Address(RVA = "0xBC4B40", Offset = "0xBC4B40", VA = "0xBC4B40")]
	public void playLowHealth()
	{
	}

	[Token(Token = "0x6000950")]
	[Address(RVA = "0xBC4C0C", Offset = "0xBC4C0C", VA = "0xBC4C0C")]
	public void playEnemyDefeated()
	{
	}

	[Token(Token = "0x6000951")]
	[Address(RVA = "0xBC4CCC", Offset = "0xBC4CCC", VA = "0xBC4CCC")]
	public void playEnemyLow()
	{
	}

	[Token(Token = "0x6000952")]
	[Address(RVA = "0xBC4D90", Offset = "0xBC4D90", VA = "0xBC4D90")]
	public void playAdrenalineMaxed()
	{
	}

	[Token(Token = "0x6000953")]
	[Address(RVA = "0xBC4EA0", Offset = "0xBC4EA0", VA = "0xBC4EA0")]
	public void playNewSpawn()
	{
	}

	[Token(Token = "0x6000954")]
	[Address(RVA = "0xBC4F60", Offset = "0xBC4F60", VA = "0xBC4F60")]
	public void playLotsOfEnemies()
	{
	}

	[Token(Token = "0x6000955")]
	[Address(RVA = "0xBC5020", Offset = "0xBC5020", VA = "0xBC5020")]
	public void playVictoryVoice(bool closeCall, bool allyActive)
	{
	}

	[Token(Token = "0x6000956")]
	[Address(RVA = "0xBC5110", Offset = "0xBC5110", VA = "0xBC5110")]
	public BattleVoiceAssistant()
	{
	}
}
[Token(Token = "0x2000161")]
public class EnemyLinkEffect : MonoBehaviour
{
	[Token(Token = "0x4000879")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject link1;

	[Token(Token = "0x400087A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject link2;

	[Token(Token = "0x400087B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public LineRenderer lineRend;

	[Token(Token = "0x6000957")]
	[Address(RVA = "0xFDF4A4", Offset = "0xFDF4A4", VA = "0xFDF4A4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000958")]
	[Address(RVA = "0xFDF610", Offset = "0xFDF610", VA = "0xFDF610")]
	public EnemyLinkEffect()
	{
	}
}
[Token(Token = "0x2000162")]
public class EnemySpawner : MonoBehaviour
{
	[Token(Token = "0x400087C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool groundSpawner;

	[Token(Token = "0x400087D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool spawnerOccupied;

	[Token(Token = "0x6000959")]
	[Address(RVA = "0xC43998", Offset = "0xC43998", VA = "0xC43998")]
	public EnemySpawner()
	{
	}
}
[Token(Token = "0x2000163")]
public class GameManager : MonoBehaviour
{
	[Token(Token = "0x600095A")]
	[Address(RVA = "0xC4FC08", Offset = "0xC4FC08", VA = "0xC4FC08")]
	private void Start()
	{
	}

	[Token(Token = "0x600095B")]
	[Address(RVA = "0xC4FC0C", Offset = "0xC4FC0C", VA = "0xC4FC0C")]
	private void Update()
	{
	}

	[Token(Token = "0x600095C")]
	[Address(RVA = "0xC4FC10", Offset = "0xC4FC10", VA = "0xC4FC10")]
	public GameManager()
	{
	}
}
[Token(Token = "0x2000164")]
public class ItemStats
{
	[Token(Token = "0x20006E7")]
	public enum ItemType
	{
		[Token(Token = "0x4002321")]
		weapon,
		[Token(Token = "0x4002322")]
		helm,
		[Token(Token = "0x4002323")]
		chest,
		[Token(Token = "0x4002324")]
		glove
	}

	[Token(Token = "0x400087E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ItemType itemType;

	[Token(Token = "0x400087F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int health;

	[Token(Token = "0x4000880")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int defense;

	[Token(Token = "0x4000881")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int ap;

	[Token(Token = "0x4000882")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int regen;

	[Token(Token = "0x4000883")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int precision;

	[Token(Token = "0x4000884")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int speed;

	[Token(Token = "0x4000885")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int power;

	[Token(Token = "0x600095D")]
	[Address(RVA = "0xADF178", Offset = "0xADF178", VA = "0xADF178")]
	public ItemStats(ItemType setType)
	{
	}
}
[Token(Token = "0x2000165")]
public class PassiveAbility : MonoBehaviour
{
	[Token(Token = "0x20006E8")]
	public enum PassiveType
	{
		[Token(Token = "0x4002326")]
		onceATurn,
		[Token(Token = "0x4002327")]
		abilityMod,
		[Token(Token = "0x4002328")]
		comboMod,
		[Token(Token = "0x4002329")]
		flatStat,
		[Token(Token = "0x400232A")]
		firstTurn,
		[Token(Token = "0x400232B")]
		onCast,
		[Token(Token = "0x400232C")]
		onAttack,
		[Token(Token = "0x400232D")]
		special,
		[Token(Token = "0x400232E")]
		onHurt,
		[Token(Token = "0x400232F")]
		onSpellHit
	}

	[Token(Token = "0x4000886")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string abilityName;

	[Token(Token = "0x4000887")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string description;

	[Token(Token = "0x4000888")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int pointCost;

	[Token(Token = "0x4000889")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Sprite icon;

	[Token(Token = "0x400088A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool stackable;

	[Token(Token = "0x400088B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public int maxStacks;

	[Token(Token = "0x400088C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public PassiveType passiveType;

	[Token(Token = "0x170000A6")]
	public string toolTip
	{
		[Token(Token = "0x600095E")]
		[Address(RVA = "0xC78780", Offset = "0xC78780", VA = "0xC78780")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000A7")]
	public string translatedName
	{
		[Token(Token = "0x600095F")]
		[Address(RVA = "0xC78C3C", Offset = "0xC78C3C", VA = "0xC78C3C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000A8")]
	public string translatedDescription
	{
		[Token(Token = "0x6000960")]
		[Address(RVA = "0xC78908", Offset = "0xC78908", VA = "0xC78908")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000961")]
	[Address(RVA = "0xC78CDC", Offset = "0xC78CDC", VA = "0xC78CDC", Slot = "4")]
	public virtual void onceATurnFunction()
	{
	}

	[Token(Token = "0x6000962")]
	[Address(RVA = "0xC78768", Offset = "0xC78768", VA = "0xC78768", Slot = "5")]
	public virtual void onCastFunction(GameObject hand)
	{
	}

	[Token(Token = "0x6000963")]
	[Address(RVA = "0xC78CE0", Offset = "0xC78CE0", VA = "0xC78CE0", Slot = "6")]
	public virtual void onAttackFunction(Weapon weapon, EnemyParent enemy)
	{
	}

	[Token(Token = "0x6000964")]
	[Address(RVA = "0xC78CE4", Offset = "0xC78CE4", VA = "0xC78CE4", Slot = "7")]
	public virtual void onBattleStartFunction()
	{
	}

	[Token(Token = "0x6000965")]
	[Address(RVA = "0xC78CE8", Offset = "0xC78CE8", VA = "0xC78CE8", Slot = "8")]
	public virtual void onHurtFunction()
	{
	}

	[Token(Token = "0x6000966")]
	[Address(RVA = "0xC78CEC", Offset = "0xC78CEC", VA = "0xC78CEC", Slot = "9")]
	public virtual void onSpellHitFunction(int damage, bool crit)
	{
	}

	[Token(Token = "0x6000967")]
	[Address(RVA = "0xC78554", Offset = "0xC78554", VA = "0xC78554")]
	public PassiveAbility()
	{
	}
}
[Serializable]
[Token(Token = "0x2000166")]
public class PassiveAbilityData
{
	[Token(Token = "0x400088D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string abilityName;

	[Token(Token = "0x6000968")]
	[Address(RVA = "0xC78CF0", Offset = "0xC78CF0", VA = "0xC78CF0")]
	public PassiveAbilityData(string newName)
	{
	}
}
[Token(Token = "0x2000167")]
public class PersistentData : MonoBehaviour
{
	[Token(Token = "0x400088E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string playerStatsString;

	[Token(Token = "0x400088F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string playerProgressString;

	[Token(Token = "0x4000890")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string playerSettingsString;

	[Token(Token = "0x4000891")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AudioMixer mixer;

	[Token(Token = "0x4000892")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<EnemyParent> enemyEncounterList;

	[Token(Token = "0x4000893")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public PlayerStats currentPlayerStats;

	[Token(Token = "0x4000894")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameProgress gameProgress;

	[Token(Token = "0x4000895")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ArcaxerPlayerSettings playerSettings;

	[Token(Token = "0x4000896")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public ItemEquip equippedTop;

	[Token(Token = "0x4000897")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public ItemEquip equippedBottom;

	[Token(Token = "0x4000898")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public ItemEquip equippedHead;

	[Token(Token = "0x4000899")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ItemEquip equippedWeaponRight;

	[Token(Token = "0x400089A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public ItemEquip equippedWeaponLeft;

	[Token(Token = "0x400089B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public ItemEquip equippedAccessory;

	[Token(Token = "0x400089C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public List<Item> liveInventory;

	[Token(Token = "0x400089D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public List<PlayerSpell> currentSpells;

	[Token(Token = "0x400089E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public List<PassiveAbility> equippedPassives;

	[Token(Token = "0x400089F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public List<PassiveAbility> unlockedPassives;

	[Token(Token = "0x40008A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public PlayerSpell[] leftHandSpells;

	[Token(Token = "0x40008A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public PlayerSpell[] rightHandSpells;

	[Token(Token = "0x40008A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public PlayerSpell equippedDefensiveSpellRight;

	[Token(Token = "0x40008A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public PlayerSpell equippedDefensiveSpellLeft;

	[Token(Token = "0x40008A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public OverworldPet activePet;

	[Token(Token = "0x40008A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public bool lastBossDefeated;

	[Token(Token = "0x40008A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD1")]
	public bool debugMode;

	[Token(Token = "0x40008A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD2")]
	public bool loadingFromBattle;

	[Token(Token = "0x40008A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD3")]
	public bool playerInitiatedBattle;

	[Token(Token = "0x40008A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public string lastOverworldSceneName;

	[Token(Token = "0x40008AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public float lastCameraAngle;

	[Token(Token = "0x40008AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	public float difficultyLevel;

	[Token(Token = "0x40008AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public int lastDungeonFloor;

	[Token(Token = "0x40008AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public List<EnemyModifier> activeEnemyModifiers;

	[Token(Token = "0x40008AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public Item[] allItems;

	[Token(Token = "0x40008AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public int currentSaveFileNum;

	[Token(Token = "0x40008B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	private float oldTimeScale;

	[Token(Token = "0x40008B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private bool headSetOff;

	[Token(Token = "0x40008B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x109")]
	private bool headSetUnFocus;

	[Token(Token = "0x40008B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static PersistentData _instance;

	[Token(Token = "0x170000A9")]
	public bool oldSaveData
	{
		[Token(Token = "0x6000969")]
		[Address(RVA = "0xC79930", Offset = "0xC79930", VA = "0xC79930")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000AA")]
	public string hubSceneString
	{
		[Token(Token = "0x600096A")]
		[Address(RVA = "0xC79D58", Offset = "0xC79D58", VA = "0xC79D58")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000AB")]
	public static PersistentData instance
	{
		[Token(Token = "0x6000972")]
		[Address(RVA = "0xC78964", Offset = "0xC78964", VA = "0xC78964")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600096B")]
	[Address(RVA = "0xC78A80", Offset = "0xC78A80", VA = "0xC78A80")]
	public string translateString(string s, string table)
	{
		return null;
	}

	[Token(Token = "0x600096C")]
	[Address(RVA = "0xC79DF8", Offset = "0xC79DF8", VA = "0xC79DF8")]
	private void HandleHMDMounted()
	{
	}

	[Token(Token = "0x600096D")]
	[Address(RVA = "0xC79E38", Offset = "0xC79E38", VA = "0xC79E38")]
	private void HandleHMDUnmounted()
	{
	}

	[Token(Token = "0x600096E")]
	[Address(RVA = "0xC79E88", Offset = "0xC79E88", VA = "0xC79E88")]
	private void HandleHMDFocus()
	{
	}

	[Token(Token = "0x600096F")]
	[Address(RVA = "0xC79EC8", Offset = "0xC79EC8", VA = "0xC79EC8")]
	private void HandleHMDLostFocus()
	{
	}

	[Token(Token = "0x6000970")]
	[Address(RVA = "0xC79F18", Offset = "0xC79F18", VA = "0xC79F18")]
	public bool canEquipPassive(PassiveAbility passive)
	{
		return default(bool);
	}

	[Token(Token = "0x6000971")]
	[Address(RVA = "0xC7A068", Offset = "0xC7A068", VA = "0xC7A068")]
	public bool canlearnPassive(PassiveAbility passive)
	{
		return default(bool);
	}

	[Token(Token = "0x6000973")]
	[Address(RVA = "0xC7A274", Offset = "0xC7A274", VA = "0xC7A274")]
	private void init()
	{
	}

	[Token(Token = "0x6000974")]
	[Address(RVA = "0xC7C79C", Offset = "0xC7C79C", VA = "0xC7C79C")]
	public void convertOldSaveData()
	{
	}

	[Token(Token = "0x6000975")]
	[Address(RVA = "0xC7A60C", Offset = "0xC7A60C", VA = "0xC7A60C")]
	public void createNewSave()
	{
	}

	[Token(Token = "0x6000976")]
	[Address(RVA = "0xC7D574", Offset = "0xC7D574", VA = "0xC7D574")]
	public PlayerSpellData getDataForSpell(PlayerSpell spell)
	{
		return null;
	}

	[Token(Token = "0x6000977")]
	[Address(RVA = "0xC7CC90", Offset = "0xC7CC90", VA = "0xC7CC90")]
	public void saveGame()
	{
	}

	[Token(Token = "0x6000978")]
	[Address(RVA = "0xC7D6D8", Offset = "0xC7D6D8", VA = "0xC7D6D8")]
	private static string readFile(string path)
	{
		return null;
	}

	[Token(Token = "0x6000979")]
	[Address(RVA = "0xC7DA24", Offset = "0xC7DA24", VA = "0xC7DA24")]
	public PlayerStats loadStats(string path)
	{
		return null;
	}

	[Token(Token = "0x600097A")]
	[Address(RVA = "0xC7DA78", Offset = "0xC7DA78", VA = "0xC7DA78")]
	public GameProgress loadGameProgress(string path)
	{
		return null;
	}

	[Token(Token = "0x600097B")]
	[Address(RVA = "0xC7DACC", Offset = "0xC7DACC", VA = "0xC7DACC")]
	public ArcaxerPlayerSettings loadGameSettings(string path)
	{
		return null;
	}

	[Token(Token = "0x600097C")]
	[Address(RVA = "0xC7DB20", Offset = "0xC7DB20", VA = "0xC7DB20")]
	public static void clearJsonData(string path)
	{
	}

	[Token(Token = "0x600097D")]
	[Address(RVA = "0xC7AC04", Offset = "0xC7AC04", VA = "0xC7AC04")]
	public void loadGame()
	{
	}

	[Token(Token = "0x600097E")]
	[Address(RVA = "0xC7DB5C", Offset = "0xC7DB5C", VA = "0xC7DB5C")]
	public void addItemToInventory(Item item)
	{
	}

	[Token(Token = "0x600097F")]
	[Address(RVA = "0xC7DCCC", Offset = "0xC7DCCC", VA = "0xC7DCCC")]
	public void removeItemFromInventory(int itemIndex)
	{
	}

	[Token(Token = "0x6000980")]
	[Address(RVA = "0xC7DDF8", Offset = "0xC7DDF8", VA = "0xC7DDF8")]
	public PersistentData()
	{
	}
}
[Serializable]
[Token(Token = "0x2000168")]
public class PlayerStats
{
	[Token(Token = "0x20006E9")]
	public enum GameDifficulty
	{
		[Token(Token = "0x4002331")]
		easy,
		[Token(Token = "0x4002332")]
		normal,
		[Token(Token = "0x4002333")]
		hard,
		[Token(Token = "0x4002334")]
		veryHard
	}

	[Token(Token = "0x20006EA")]
	public enum DeathType
	{
		[Token(Token = "0x4002336")]
		normal,
		[Token(Token = "0x4002337")]
		hardcore
	}

	[Token(Token = "0x40008B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string name;

	[Token(Token = "0x40008B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string darkaxerName;

	[Token(Token = "0x40008B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool nameSet;

	[Token(Token = "0x40008B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int skinNum;

	[Token(Token = "0x40008B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	public ArcaxerClass playerClass;

	[Token(Token = "0x40008B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public string classFileName;

	[Token(Token = "0x40008BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	public GameDifficulty gameDifficulty;

	[Token(Token = "0x40008BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[SerializeField]
	public DeathType deathType;

	[Token(Token = "0x40008BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private int _currentHealth;

	[Token(Token = "0x40008BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[SerializeField]
	private int _maxHealth;

	[Token(Token = "0x40008BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private int _power;

	[Token(Token = "0x40008BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[SerializeField]
	private int _defense;

	[Token(Token = "0x40008C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private int _speed;

	[Token(Token = "0x40008C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public int buffCrit;

	[Token(Token = "0x40008C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private int _crit;

	[Token(Token = "0x40008C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public int buffCritDamage;

	[Token(Token = "0x40008C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private int _critDamage;

	[Token(Token = "0x40008C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[SerializeField]
	private int _expBoost;

	[Token(Token = "0x40008C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private int _glitchChance;

	[Token(Token = "0x40008C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[SerializeField]
	private int _spellVamp;

	[Token(Token = "0x40008C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private int _runSpeed;

	[Token(Token = "0x40008C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private int _maxAP;

	[Token(Token = "0x40008CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public int precision;

	[Token(Token = "0x40008CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public int maxAdrenaline;

	[Token(Token = "0x40008CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public int maxPP;

	[Token(Token = "0x40008CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private float _spellPowerMod;

	[Token(Token = "0x40008CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private int _summonPower;

	[Token(Token = "0x40008CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public float buffDefense;

	[Token(Token = "0x40008D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public float buffPower;

	[Token(Token = "0x40008D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public List<ItemData> savedItemInventory;

	[Token(Token = "0x40008D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public int credits;

	[Token(Token = "0x40008D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public int casinoTokens;

	[Token(Token = "0x40008D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public List<PlayerSpellData> learnedSpells;

	[Token(Token = "0x40008D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public List<PlayerSpellData> leftHandSpells;

	[Token(Token = "0x40008D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public List<PlayerSpellData> rightHandSpells;

	[Token(Token = "0x40008D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public PlayerSpellData leftHandDefensiveSpell;

	[Token(Token = "0x40008D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public PlayerSpellData rightHandDefensiveSpell;

	[Token(Token = "0x40008D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public ItemData equippedTop;

	[Token(Token = "0x40008DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public ItemData equippedBottom;

	[Token(Token = "0x40008DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public ItemData equippedHead;

	[Token(Token = "0x40008DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public ItemData equippedWeaponRight;

	[Token(Token = "0x40008DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public ItemData equippedWeaponLeft;

	[Token(Token = "0x40008DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public ItemData equippedAccessory;

	[Token(Token = "0x40008DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public List<PassiveAbilityData> unlockedPassives;

	[Token(Token = "0x40008E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public List<PassiveAbilityData> equippedPassives;

	[Token(Token = "0x40008E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	[SerializeField]
	private int _exp;

	[Token(Token = "0x40008E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	private int oldExp;

	[Token(Token = "0x40008E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public int level;

	[Token(Token = "0x40008E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
	public UnityEngine.Vector3 lastOverworldPos;

	[Token(Token = "0x170000AC")]
	public int combatPower
	{
		[Token(Token = "0x6000981")]
		[Address(RVA = "0xB70AC0", Offset = "0xB70AC0", VA = "0xB70AC0")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170000AD")]
	public int currentHealth
	{
		[Token(Token = "0x6000982")]
		[Address(RVA = "0xB70C30", Offset = "0xB70C30", VA = "0xB70C30")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000983")]
		[Address(RVA = "0xB6E5D0", Offset = "0xB6E5D0", VA = "0xB6E5D0")]
		set
		{
		}
	}

	[Token(Token = "0x170000AE")]
	public int maxHealth
	{
		[Token(Token = "0x6000984")]
		[Address(RVA = "0xB690E4", Offset = "0xB690E4", VA = "0xB690E4")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000985")]
		[Address(RVA = "0xB70C38", Offset = "0xB70C38", VA = "0xB70C38")]
		private set
		{
		}
	}

	[Token(Token = "0x170000AF")]
	public int power
	{
		[Token(Token = "0x6000988")]
		[Address(RVA = "0xB6F6E4", Offset = "0xB6F6E4", VA = "0xB6F6E4")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000989")]
		[Address(RVA = "0xB70C60", Offset = "0xB70C60", VA = "0xB70C60")]
		private set
		{
		}
	}

	[Token(Token = "0x170000B0")]
	public int defense
	{
		[Token(Token = "0x600098A")]
		[Address(RVA = "0xB69A48", Offset = "0xB69A48", VA = "0xB69A48")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600098B")]
		[Address(RVA = "0xB70CE0", Offset = "0xB70CE0", VA = "0xB70CE0")]
		private set
		{
		}
	}

	[Token(Token = "0x170000B1")]
	public int speed
	{
		[Token(Token = "0x600098C")]
		[Address(RVA = "0xB70B58", Offset = "0xB70B58", VA = "0xB70B58")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600098D")]
		[Address(RVA = "0xB70CE8", Offset = "0xB70CE8", VA = "0xB70CE8")]
		private set
		{
		}
	}

	[Token(Token = "0x170000B2")]
	public int crit
	{
		[Token(Token = "0x600098E")]
		[Address(RVA = "0xB70CF0", Offset = "0xB70CF0", VA = "0xB70CF0")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600098F")]
		[Address(RVA = "0xB70F28", Offset = "0xB70F28", VA = "0xB70F28")]
		private set
		{
		}
	}

	[Token(Token = "0x170000B3")]
	public int critDamage
	{
		[Token(Token = "0x6000990")]
		[Address(RVA = "0xB70F30", Offset = "0xB70F30", VA = "0xB70F30")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000991")]
		[Address(RVA = "0xB71184", Offset = "0xB71184", VA = "0xB71184")]
		private set
		{
		}
	}

	[Token(Token = "0x170000B4")]
	public int expBoost
	{
		[Token(Token = "0x6000992")]
		[Address(RVA = "0xB7118C", Offset = "0xB7118C", VA = "0xB7118C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000993")]
		[Address(RVA = "0xB713BC", Offset = "0xB713BC", VA = "0xB713BC")]
		private set
		{
		}
	}

	[Token(Token = "0x170000B5")]
	public int glitchChance
	{
		[Token(Token = "0x6000994")]
		[Address(RVA = "0xB713C4", Offset = "0xB713C4", VA = "0xB713C4")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000995")]
		[Address(RVA = "0xB715F4", Offset = "0xB715F4", VA = "0xB715F4")]
		private set
		{
		}
	}

	[Token(Token = "0x170000B6")]
	public int spellVamp
	{
		[Token(Token = "0x6000996")]
		[Address(RVA = "0xB715FC", Offset = "0xB715FC", VA = "0xB715FC")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000997")]
		[Address(RVA = "0xB7182C", Offset = "0xB7182C", VA = "0xB7182C")]
		private set
		{
		}
	}

	[Token(Token = "0x170000B7")]
	public int runSpeed
	{
		[Token(Token = "0x6000998")]
		[Address(RVA = "0xB71834", Offset = "0xB71834", VA = "0xB71834")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000999")]
		[Address(RVA = "0xB71A64", Offset = "0xB71A64", VA = "0xB71A64")]
		private set
		{
		}
	}

	[Token(Token = "0x170000B8")]
	public int maxAP
	{
		[Token(Token = "0x600099A")]
		[Address(RVA = "0xB692F0", Offset = "0xB692F0", VA = "0xB692F0")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170000B9")]
	public int haxDamage
	{
		[Token(Token = "0x600099B")]
		[Address(RVA = "0xB71A6C", Offset = "0xB71A6C", VA = "0xB71A6C")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170000BA")]
	public float spellPowerMod
	{
		[Token(Token = "0x600099C")]
		[Address(RVA = "0xB6F90C", Offset = "0xB6F90C", VA = "0xB6F90C")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170000BB")]
	public int summonPower
	{
		[Token(Token = "0x600099D")]
		[Address(RVA = "0xB71AA4", Offset = "0xB71AA4", VA = "0xB71AA4")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600099E")]
		[Address(RVA = "0xB71CD4", Offset = "0xB71CD4", VA = "0xB71CD4")]
		private set
		{
		}
	}

	[Token(Token = "0x170000BC")]
	public int exp
	{
		[Token(Token = "0x600099F")]
		[Address(RVA = "0xB71CDC", Offset = "0xB71CDC", VA = "0xB71CDC")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60009A0")]
		[Address(RVA = "0xB71CE4", Offset = "0xB71CE4", VA = "0xB71CE4")]
		set
		{
		}
	}

	[Token(Token = "0x170000BD")]
	public int expRequired
	{
		[Token(Token = "0x60009A2")]
		[Address(RVA = "0xB71DFC", Offset = "0xB71DFC", VA = "0xB71DFC")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6000986")]
	[Address(RVA = "0xB70C40", Offset = "0xB70C40", VA = "0xB70C40")]
	public void increaseMaxHPStat(int amt)
	{
	}

	[Token(Token = "0x6000987")]
	[Address(RVA = "0xB70C50", Offset = "0xB70C50", VA = "0xB70C50")]
	public void increaseMaxPowerStat(int amt)
	{
	}

	[Token(Token = "0x60009A1")]
	[Address(RVA = "0xB690D4", Offset = "0xB690D4", VA = "0xB690D4")]
	public void resetBuffValues()
	{
	}

	[Token(Token = "0x60009A3")]
	[Address(RVA = "0xB73A10", Offset = "0xB73A10", VA = "0xB73A10")]
	public void levelUpSpells(int exp)
	{
	}

	[Token(Token = "0x60009A4")]
	[Address(RVA = "0xB73F14", Offset = "0xB73F14", VA = "0xB73F14")]
	public bool spellAlreadyLearned(string name)
	{
		return default(bool);
	}

	[Token(Token = "0x60009A5")]
	[Address(RVA = "0xB74030", Offset = "0xB74030", VA = "0xB74030")]
	public bool passiveAlreadyLearned(string name)
	{
		return default(bool);
	}

	[Token(Token = "0x60009A6")]
	[Address(RVA = "0xB71E90", Offset = "0xB71E90", VA = "0xB71E90")]
	private void levelUp()
	{
	}

	[Token(Token = "0x60009A7")]
	[Address(RVA = "0xB7414C", Offset = "0xB7414C", VA = "0xB7414C")]
	public PlayerStats()
	{
	}
}
[Token(Token = "0x2000169")]
public class TwitchHype : MonoBehaviour
{
	[Token(Token = "0x40008E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string _ChannelName;

	[Token(Token = "0x40008E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string powerWord;

	[Token(Token = "0x40008E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int viewerCountMax;

	[Token(Token = "0x40008E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private int _hypeCount;

	[Token(Token = "0x40008E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<string> _SupporterList;

	[Token(Token = "0x170000BE")]
	public int hypeCount
	{
		[Token(Token = "0x60009A8")]
		[Address(RVA = "0x1A61BEC", Offset = "0x1A61BEC", VA = "0x1A61BEC")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60009A9")]
		[Address(RVA = "0x1A61BF4", Offset = "0x1A61BF4", VA = "0x1A61BF4")]
		private set
		{
		}
	}

	[Token(Token = "0x60009AA")]
	[Address(RVA = "0x1A61BFC", Offset = "0x1A61BFC", VA = "0x1A61BFC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60009AB")]
	[Address(RVA = "0x1A61C64", Offset = "0x1A61C64", VA = "0x1A61C64")]
	private void Start()
	{
	}

	[Token(Token = "0x60009AC")]
	[Address(RVA = "0x1A61E20", Offset = "0x1A61E20", VA = "0x1A61E20")]
	private void OnChatMessage(ref TwitchChatMessage msg)
	{
	}

	[Token(Token = "0x60009AD")]
	[Address(RVA = "0x1A61EDC", Offset = "0x1A61EDC", VA = "0x1A61EDC")]
	private void Update()
	{
	}

	[Token(Token = "0x60009AE")]
	[Address(RVA = "0x1A61EE0", Offset = "0x1A61EE0", VA = "0x1A61EE0")]
	public void resetHype()
	{
	}

	[Token(Token = "0x60009AF")]
	[Address(RVA = "0x1A61EE8", Offset = "0x1A61EE8", VA = "0x1A61EE8")]
	public TwitchHype()
	{
	}
}
[Token(Token = "0x200016A")]
public class DebugConsole : MonoBehaviour
{
	[Token(Token = "0x40008EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Dropdown commandDropdown;

	[Token(Token = "0x40008EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public InputField inputField;

	[Token(Token = "0x40008EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public InputField inputField2;

	[Token(Token = "0x40008ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Text historyText;

	[Token(Token = "0x40008EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static DebugCommand give_item;

	[Token(Token = "0x40008EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static DebugCommand level_up;

	[Token(Token = "0x40008F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static DebugCommand set_story;

	[Token(Token = "0x40008F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static DebugCommand learn_hack;

	[Token(Token = "0x40008F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static DebugCommand learn_passive;

	[Token(Token = "0x40008F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static DebugCommand change_class;

	[Token(Token = "0x40008F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static DebugCommand full_heal;

	[Token(Token = "0x40008F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static DebugCommand load_scene;

	[Token(Token = "0x40008F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<object> commandList;

	[Token(Token = "0x40008F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private DebugCommand selectedCommand;

	[Token(Token = "0x40008F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Keyboard keyboard;

	[Token(Token = "0x60009B0")]
	[Address(RVA = "0xB0F62C", Offset = "0xB0F62C", VA = "0xB0F62C")]
	private void Start()
	{
	}

	[Token(Token = "0x60009B1")]
	[Address(RVA = "0xB0FBCC", Offset = "0xB0FBCC", VA = "0xB0FBCC")]
	public void runCommand()
	{
	}

	[Token(Token = "0x60009B2")]
	[Address(RVA = "0xB0FCA4", Offset = "0xB0FCA4", VA = "0xB0FCA4")]
	public void selectCommand()
	{
	}

	[Token(Token = "0x60009B3")]
	[Address(RVA = "0xB0FD8C", Offset = "0xB0FD8C", VA = "0xB0FD8C")]
	public void input1Focused()
	{
	}

	[Token(Token = "0x60009B4")]
	[Address(RVA = "0xB0FDDC", Offset = "0xB0FDDC", VA = "0xB0FDDC")]
	public void input2Focused()
	{
	}

	[Token(Token = "0x60009B5")]
	[Address(RVA = "0xB0FE2C", Offset = "0xB0FE2C", VA = "0xB0FE2C")]
	public DebugConsole()
	{
	}

	[Token(Token = "0x60009B6")]
	[Address(RVA = "0xB0FE9C", Offset = "0xB0FE9C", VA = "0xB0FE9C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C40C4", Offset = "0x8C40C4")]
	private void <Start>b__15_0()
	{
	}

	[Token(Token = "0x60009B7")]
	[Address(RVA = "0xB1014C", Offset = "0xB1014C", VA = "0xB1014C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C40D4", Offset = "0x8C40D4")]
	private void <Start>b__15_1()
	{
	}

	[Token(Token = "0x60009B8")]
	[Address(RVA = "0xB10220", Offset = "0xB10220", VA = "0xB10220")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C40E4", Offset = "0x8C40E4")]
	private void <Start>b__15_2()
	{
	}

	[Token(Token = "0x60009B9")]
	[Address(RVA = "0xB102E8", Offset = "0xB102E8", VA = "0xB102E8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C40F4", Offset = "0x8C40F4")]
	private void <Start>b__15_3()
	{
	}

	[Token(Token = "0x60009BA")]
	[Address(RVA = "0xB1054C", Offset = "0xB1054C", VA = "0xB1054C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C4104", Offset = "0x8C4104")]
	private void <Start>b__15_4()
	{
	}

	[Token(Token = "0x60009BB")]
	[Address(RVA = "0xB10708", Offset = "0xB10708", VA = "0xB10708")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C4114", Offset = "0x8C4114")]
	private void <Start>b__15_5()
	{
	}

	[Token(Token = "0x60009BC")]
	[Address(RVA = "0xB108C4", Offset = "0xB108C4", VA = "0xB108C4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C4124", Offset = "0x8C4124")]
	private void <Start>b__15_6()
	{
	}

	[Token(Token = "0x60009BD")]
	[Address(RVA = "0xB10A74", Offset = "0xB10A74", VA = "0xB10A74")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C4134", Offset = "0x8C4134")]
	private void <Start>b__15_7()
	{
	}
}
[Token(Token = "0x200016B")]
public class DebugCommand
{
	[Token(Token = "0x40008F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string commandId;

	[Token(Token = "0x40008FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string parameter;

	[Token(Token = "0x40008FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Action command;

	[Token(Token = "0x60009BE")]
	[Address(RVA = "0xB0F5D4", Offset = "0xB0F5D4", VA = "0xB0F5D4")]
	public DebugCommand(string id, Action command)
	{
	}

	[Token(Token = "0x60009BF")]
	[Address(RVA = "0xB0F610", Offset = "0xB0F610", VA = "0xB0F610")]
	public void Invoke()
	{
	}
}
[Token(Token = "0x200016C")]
public class InputSelectDebug : MonoBehaviour, ISelectHandler, IEventSystemHandler
{
	[Token(Token = "0x40008FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UnityEvent onSelectEvent;

	[Token(Token = "0x60009C0")]
	[Address(RVA = "0xADB10C", Offset = "0xADB10C", VA = "0xADB10C", Slot = "4")]
	public void OnSelect(BaseEventData eventData)
	{
	}

	[Token(Token = "0x60009C1")]
	[Address(RVA = "0xADB128", Offset = "0xADB128", VA = "0xADB128")]
	public InputSelectDebug()
	{
	}
}
[Token(Token = "0x200016D")]
public class ChangeSaveLocation : MonoBehaviour
{
	[Token(Token = "0x40008FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string saveSceneName;

	[Token(Token = "0x60009C2")]
	[Address(RVA = "0xB05D78", Offset = "0xB05D78", VA = "0xB05D78")]
	private void Start()
	{
	}

	[Token(Token = "0x60009C3")]
	[Address(RVA = "0xB05E44", Offset = "0xB05E44", VA = "0xB05E44")]
	public ChangeSaveLocation()
	{
	}
}
[Token(Token = "0x200016E")]
public class EnemyOverworld : MonoBehaviour
{
	[Token(Token = "0x20006EB")]
	public enum enemyOverworldState
	{
		[Token(Token = "0x4002339")]
		patroling,
		[Token(Token = "0x400233A")]
		chasing,
		[Token(Token = "0x400233B")]
		startingFight,
		[Token(Token = "0x400233C")]
		returning,
		[Token(Token = "0x400233D")]
		disabled
	}

	[Token(Token = "0x20006EC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B7DA4", Offset = "0x8B7DA4")]
	private sealed class <encounterTimer>d__32 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400233E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400233F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002340")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EnemyOverworld <>4__this;

		[Token(Token = "0x170004B3")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002988")]
			[Address(RVA = "0xFE4B54", Offset = "0xFE4B54", VA = "0xFE4B54", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004B4")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600298A")]
			[Address(RVA = "0xFE4BBC", Offset = "0xFE4BBC", VA = "0xFE4BBC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002985")]
		[Address(RVA = "0xFE3954", Offset = "0xFE3954", VA = "0xFE3954")]
		[DebuggerHidden]
		public <encounterTimer>d__32(int <>1__state)
		{
		}

		[Token(Token = "0x6002986")]
		[Address(RVA = "0xFE49E8", Offset = "0xFE49E8", VA = "0xFE49E8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002987")]
		[Address(RVA = "0xFE49EC", Offset = "0xFE49EC", VA = "0xFE49EC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002989")]
		[Address(RVA = "0xFE4B5C", Offset = "0xFE4B5C", VA = "0xFE4B5C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20006ED")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B7DB4", Offset = "0x8B7DB4")]
	private sealed class <disabledTimer>d__36 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002341")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002342")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002343")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EnemyOverworld <>4__this;

		[Token(Token = "0x4002344")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <maxDisabledTime>5__2;

		[Token(Token = "0x4002345")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <time>5__3;

		[Token(Token = "0x170004B5")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600298E")]
			[Address(RVA = "0xFE4978", Offset = "0xFE4978", VA = "0xFE4978", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004B6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002990")]
			[Address(RVA = "0xFE49E0", Offset = "0xFE49E0", VA = "0xFE49E0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600298B")]
		[Address(RVA = "0xFE474C", Offset = "0xFE474C", VA = "0xFE474C")]
		[DebuggerHidden]
		public <disabledTimer>d__36(int <>1__state)
		{
		}

		[Token(Token = "0x600298C")]
		[Address(RVA = "0xFE4844", Offset = "0xFE4844", VA = "0xFE4844", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600298D")]
		[Address(RVA = "0xFE4848", Offset = "0xFE4848", VA = "0xFE4848", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600298F")]
		[Address(RVA = "0xFE4980", Offset = "0xFE4980", VA = "0xFE4980", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40008FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private NavMeshAgent navMeshAgent;

	[Token(Token = "0x40008FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private UnityEngine.Vector3 playerPos;

	[Token(Token = "0x4000900")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Animator enemyAnimator;

	[Token(Token = "0x4000901")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public LayerMask layerMask;

	[Token(Token = "0x4000902")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject encounterStartParticle;

	[Token(Token = "0x4000903")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject enemyPoolOrb;

	[Token(Token = "0x4000904")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float walkRadius;

	[Token(Token = "0x4000905")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public bool isDungeonEnemy;

	[Token(Token = "0x4000906")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
	public bool isTutorialEnemy;

	[Token(Token = "0x4000907")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float patrolSpeed;

	[Token(Token = "0x4000908")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float chaseSpeed;

	[Token(Token = "0x4000909")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public UnityEngine.Vector3 spawnPosition;

	[Token(Token = "0x400090A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public List<EnemyParent> enemyEncounterList;

	[Token(Token = "0x400090B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public string battleSceneName;

	[Token(Token = "0x400090C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private bool startingEncounter;

	[Token(Token = "0x400090D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private float chaseTime;

	[Token(Token = "0x400090E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float maxChaseTime;

	[Token(Token = "0x400090F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private float idleTime;

	[Token(Token = "0x4000910")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private float maxIdleTime;

	[Token(Token = "0x4000911")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private float maxChaseDistance;

	[Token(Token = "0x4000912")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private float onMeshThreshold;

	[Token(Token = "0x4000913")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public int spawnedOnFloor;

	[Token(Token = "0x4000914")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private bool disabled;

	[Token(Token = "0x4000915")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public enemyOverworldState enemyState;

	[Token(Token = "0x60009C4")]
	[Address(RVA = "0xFE2A64", Offset = "0xFE2A64", VA = "0xFE2A64")]
	private void Start()
	{
	}

	[Token(Token = "0x60009C5")]
	[Address(RVA = "0xFE2B64", Offset = "0xFE2B64", VA = "0xFE2B64")]
	public void UpdateEnemyDungeonState()
	{
	}

	[Token(Token = "0x60009C6")]
	[Address(RVA = "0xFE3114", Offset = "0xFE3114", VA = "0xFE3114")]
	private void Update()
	{
	}

	[Token(Token = "0x60009C7")]
	[Address(RVA = "0xFE3724", Offset = "0xFE3724", VA = "0xFE3724")]
	public void destroyEnemy()
	{
	}

	[Token(Token = "0x60009C8")]
	[Address(RVA = "0xFE35F4", Offset = "0xFE35F4", VA = "0xFE35F4")]
	private void pickPointOnNavMesh()
	{
	}

	[Token(Token = "0x60009C9")]
	[Address(RVA = "0xFE33F4", Offset = "0xFE33F4", VA = "0xFE33F4")]
	private void checkIfPlayerIsSpotted()
	{
	}

	[Token(Token = "0x60009CA")]
	[Address(RVA = "0xFE37A0", Offset = "0xFE37A0", VA = "0xFE37A0")]
	public bool IsAgentOnNavMesh()
	{
		return default(bool);
	}

	[Token(Token = "0x60009CB")]
	[Address(RVA = "0xFE38E4", Offset = "0xFE38E4", VA = "0xFE38E4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C4144", Offset = "0x8C4144")]
	private IEnumerator encounterTimer()
	{
		return null;
	}

	[Token(Token = "0x60009CC")]
	[Address(RVA = "0xFE3980", Offset = "0xFE3980", VA = "0xFE3980")]
	public void forceEncounterWithPlayer()
	{
	}

	[Token(Token = "0x60009CD")]
	[Address(RVA = "0xFE39F0", Offset = "0xFE39F0", VA = "0xFE39F0")]
	public void startEnemyEncounter(GameObject other, bool wasAttacked)
	{
	}

	[Token(Token = "0x60009CE")]
	[Address(RVA = "0xFE4580", Offset = "0xFE4580", VA = "0xFE4580")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60009CF")]
	[Address(RVA = "0xFE46DC", Offset = "0xFE46DC", VA = "0xFE46DC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C41A8", Offset = "0x8C41A8")]
	private IEnumerator disabledTimer()
	{
		return null;
	}

	[Token(Token = "0x60009D0")]
	[Address(RVA = "0xFE4778", Offset = "0xFE4778", VA = "0xFE4778")]
	public EnemyOverworld()
	{
	}
}
[Token(Token = "0x200016F")]
public class EnemyPoolOrb : MonoBehaviour
{
	[Token(Token = "0x4000916")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform moveTotrans;

	[Token(Token = "0x60009D1")]
	[Address(RVA = "0xFE90C0", Offset = "0xFE90C0", VA = "0xFE90C0")]
	private void Update()
	{
	}

	[Token(Token = "0x60009D2")]
	[Address(RVA = "0xFE9220", Offset = "0xFE9220", VA = "0xFE9220")]
	public EnemyPoolOrb()
	{
	}
}
[Token(Token = "0x2000170")]
public class HideMeshByDistance : MonoBehaviour
{
	[Token(Token = "0x4000917")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SkinnedMeshRenderer[] renderers;

	[Token(Token = "0x4000918")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MeshRenderer[] meshRenderers;

	[Token(Token = "0x4000919")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float timeToCheck;

	[Token(Token = "0x400091A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float time;

	[Token(Token = "0x400091B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float distanceRequired;

	[Token(Token = "0x400091C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool isStatic;

	[Token(Token = "0x60009D3")]
	[Address(RVA = "0xAD514C", Offset = "0xAD514C", VA = "0xAD514C")]
	private void Start()
	{
	}

	[Token(Token = "0x60009D4")]
	[Address(RVA = "0xAD5268", Offset = "0xAD5268", VA = "0xAD5268")]
	private void Update()
	{
	}

	[Token(Token = "0x60009D5")]
	[Address(RVA = "0xAD5580", Offset = "0xAD5580", VA = "0xAD5580")]
	public HideMeshByDistance()
	{
	}
}
[Token(Token = "0x2000171")]
public class AberrationLineRender : MonoBehaviour
{
	[Token(Token = "0x400091D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private LineRenderer lineRenderer;

	[Token(Token = "0x400091E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform firstPoint;

	[Token(Token = "0x400091F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform secondPoint;

	[Token(Token = "0x4000920")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform thirdPoint;

	[Token(Token = "0x60009D6")]
	[Address(RVA = "0xBB4614", Offset = "0xBB4614", VA = "0xBB4614")]
	private void Start()
	{
	}

	[Token(Token = "0x60009D7")]
	[Address(RVA = "0xBB466C", Offset = "0xBB466C", VA = "0xBB466C")]
	private void Update()
	{
	}

	[Token(Token = "0x60009D8")]
	[Address(RVA = "0xBB4700", Offset = "0xBB4700", VA = "0xBB4700")]
	public AberrationLineRender()
	{
	}
}
[Token(Token = "0x2000172")]
public class EnemySpinWall : MonoBehaviour
{
	[Token(Token = "0x4000921")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] removeableProjectiles;

	[Token(Token = "0x4000922")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int power;

	[Token(Token = "0x4000923")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float spinSpeed;

	[Token(Token = "0x4000924")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float projSpeed;

	[Token(Token = "0x4000925")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float stallTimer;

	[Token(Token = "0x4000926")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float maxStallTime;

	[Token(Token = "0x60009D9")]
	[Address(RVA = "0xC439A8", Offset = "0xC439A8", VA = "0xC439A8")]
	private void Start()
	{
	}

	[Token(Token = "0x60009DA")]
	[Address(RVA = "0xC43AA8", Offset = "0xC43AA8", VA = "0xC43AA8")]
	private void Update()
	{
	}

	[Token(Token = "0x60009DB")]
	[Address(RVA = "0xC43C18", Offset = "0xC43C18", VA = "0xC43C18")]
	public EnemySpinWall()
	{
	}
}
[Token(Token = "0x2000173")]
public class EnemyBoneProjectile : MonoBehaviour
{
	[Token(Token = "0x4000927")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float spinSpeed;

	[Token(Token = "0x4000928")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float flightSpeed;

	[Token(Token = "0x4000929")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int power;

	[Token(Token = "0x400092A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public EnemyParent parentFired;

	[Token(Token = "0x60009DC")]
	[Address(RVA = "0xBF59F4", Offset = "0xBF59F4", VA = "0xBF59F4")]
	private void Start()
	{
	}

	[Token(Token = "0x60009DD")]
	[Address(RVA = "0xBF5A74", Offset = "0xBF5A74", VA = "0xBF5A74")]
	private void Update()
	{
	}

	[Token(Token = "0x60009DE")]
	[Address(RVA = "0xBF5ACC", Offset = "0xBF5ACC", VA = "0xBF5ACC")]
	private void OnTriggerEnter(Collider collision)
	{
	}

	[Token(Token = "0x60009DF")]
	[Address(RVA = "0xBF5C04", Offset = "0xBF5C04", VA = "0xBF5C04")]
	public EnemyBoneProjectile()
	{
	}
}
[Token(Token = "0x2000174")]
public class EnemySummoner : EnemyParent
{
	[Token(Token = "0x20006EE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B7DC4", Offset = "0x8B7DC4")]
	private sealed class <castBoneStorm>d__16 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002346")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002347")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002348")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EnemySummoner <>4__this;

		[Token(Token = "0x4002349")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <i>5__2;

		[Token(Token = "0x400234A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private EnemyBoneProjectile <proj>5__3;

		[Token(Token = "0x170004B7")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002994")]
			[Address(RVA = "0xC44778", Offset = "0xC44778", VA = "0xC44778", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004B8")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002996")]
			[Address(RVA = "0xC447E0", Offset = "0xC447E0", VA = "0xC447E0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002991")]
		[Address(RVA = "0xC44128", Offset = "0xC44128", VA = "0xC44128")]
		[DebuggerHidden]
		public <castBoneStorm>d__16(int <>1__state)
		{
		}

		[Token(Token = "0x6002992")]
		[Address(RVA = "0xC4436C", Offset = "0xC4436C", VA = "0xC4436C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002993")]
		[Address(RVA = "0xC44370", Offset = "0xC44370", VA = "0xC44370", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002995")]
		[Address(RVA = "0xC44780", Offset = "0xC44780", VA = "0xC44780", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20006EF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B7DD4", Offset = "0x8B7DD4")]
	private sealed class <moveBone>d__17 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400234B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400234C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400234D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject bone;

		[Token(Token = "0x400234E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public EnemySummoner <>4__this;

		[Token(Token = "0x170004B9")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600299A")]
			[Address(RVA = "0xC44988", Offset = "0xC44988", VA = "0xC44988", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004BA")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600299C")]
			[Address(RVA = "0xC449F0", Offset = "0xC449F0", VA = "0xC449F0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002997")]
		[Address(RVA = "0xC441D0", Offset = "0xC441D0", VA = "0xC441D0")]
		[DebuggerHidden]
		public <moveBone>d__17(int <>1__state)
		{
		}

		[Token(Token = "0x6002998")]
		[Address(RVA = "0xC447E8", Offset = "0xC447E8", VA = "0xC447E8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002999")]
		[Address(RVA = "0xC447EC", Offset = "0xC447EC", VA = "0xC447EC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600299B")]
		[Address(RVA = "0xC44990", Offset = "0xC44990", VA = "0xC44990", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20006F0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B7DE4", Offset = "0x8B7DE4")]
	private sealed class <summonEnemy>d__18 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400234F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002350")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002351")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EnemySummoner <>4__this;

		[Token(Token = "0x170004BB")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60029A0")]
			[Address(RVA = "0xC44D6C", Offset = "0xC44D6C", VA = "0xC44D6C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004BC")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60029A2")]
			[Address(RVA = "0xC44DD4", Offset = "0xC44DD4", VA = "0xC44DD4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600299D")]
		[Address(RVA = "0xC441FC", Offset = "0xC441FC", VA = "0xC441FC")]
		[DebuggerHidden]
		public <summonEnemy>d__18(int <>1__state)
		{
		}

		[Token(Token = "0x600299E")]
		[Address(RVA = "0xC449F8", Offset = "0xC449F8", VA = "0xC449F8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600299F")]
		[Address(RVA = "0xC449FC", Offset = "0xC449FC", VA = "0xC449FC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60029A1")]
		[Address(RVA = "0xC44D74", Offset = "0xC44D74", VA = "0xC44D74", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400092B")]
	public const int maxSummonCD = 3;

	[Token(Token = "0x400092C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	private int turnCD;

	[Token(Token = "0x400092D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public int numOfBones;

	[Token(Token = "0x400092E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
	private float boneSpawnMaxDistance;

	[Token(Token = "0x400092F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private float ocSpeedMod;

	[Token(Token = "0x4000930")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public EnemyParent summonedEnemy;

	[Token(Token = "0x4000931")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public GameObject summonParticle;

	[Token(Token = "0x4000932")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public EnemyBoneProjectile boneProjectile;

	[Token(Token = "0x4000933")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public GameObject shields;

	[Token(Token = "0x4000934")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public bool overClocked;

	[Token(Token = "0x60009E0")]
	[Address(RVA = "0xC43C3C", Offset = "0xC43C3C", VA = "0xC43C3C")]
	public void toggleShieldsOn()
	{
	}

	[Token(Token = "0x60009E1")]
	[Address(RVA = "0xC43CD0", Offset = "0xC43CD0", VA = "0xC43CD0")]
	public void toggleShieldsOff()
	{
	}

	[Token(Token = "0x60009E2")]
	[Address(RVA = "0xC43D64", Offset = "0xC43D64", VA = "0xC43D64", Slot = "5")]
	protected override void Start()
	{
	}

	[Token(Token = "0x60009E3")]
	[Address(RVA = "0xC43F2C", Offset = "0xC43F2C", VA = "0xC43F2C", Slot = "6")]
	protected override void Update()
	{
	}

	[Token(Token = "0x60009E4")]
	[Address(RVA = "0xC43FC0", Offset = "0xC43FC0", VA = "0xC43FC0", Slot = "12")]
	public override void enemyAttack(bool endTurnAfter = true)
	{
	}

	[Token(Token = "0x60009E5")]
	[Address(RVA = "0xC44118", Offset = "0xC44118", VA = "0xC44118")]
	public void tickDOwnCD()
	{
	}

	[Token(Token = "0x60009E6")]
	[Address(RVA = "0xC440A8", Offset = "0xC440A8", VA = "0xC440A8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C420C", Offset = "0x8C420C")]
	private IEnumerator castBoneStorm()
	{
		return null;
	}

	[Token(Token = "0x60009E7")]
	[Address(RVA = "0xC44154", Offset = "0xC44154", VA = "0xC44154")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C4270", Offset = "0x8C4270")]
	private IEnumerator moveBone(GameObject bone)
	{
		return null;
	}

	[Token(Token = "0x60009E8")]
	[Address(RVA = "0xC44038", Offset = "0xC44038", VA = "0xC44038")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C42D4", Offset = "0x8C42D4")]
	private IEnumerator summonEnemy()
	{
		return null;
	}

	[Token(Token = "0x60009E9")]
	[Address(RVA = "0xC44228", Offset = "0xC44228", VA = "0xC44228", Slot = "7")]
	public override void killSelf()
	{
	}

	[Token(Token = "0x60009EA")]
	[Address(RVA = "0xC44350", Offset = "0xC44350", VA = "0xC44350")]
	public EnemySummoner()
	{
	}
}
[Token(Token = "0x2000175")]
public class BossCircleLaserAttack : MonoBehaviour
{
	[Token(Token = "0x20006F1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B7DF4", Offset = "0x8B7DF4")]
	private sealed class <spawnLasers>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002352")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002353")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002354")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BossCircleLaserAttack <>4__this;

		[Token(Token = "0x4002355")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <i>5__2;

		[Token(Token = "0x170004BD")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60029A6")]
			[Address(RVA = "0xBC7A64", Offset = "0xBC7A64", VA = "0xBC7A64", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004BE")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60029A8")]
			[Address(RVA = "0xBC7ACC", Offset = "0xBC7ACC", VA = "0xBC7ACC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60029A3")]
		[Address(RVA = "0xBC747C", Offset = "0xBC747C", VA = "0xBC747C")]
		[DebuggerHidden]
		public <spawnLasers>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x60029A4")]
		[Address(RVA = "0xBC7534", Offset = "0xBC7534", VA = "0xBC7534", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60029A5")]
		[Address(RVA = "0xBC7538", Offset = "0xBC7538", VA = "0xBC7538", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60029A7")]
		[Address(RVA = "0xBC7A6C", Offset = "0xBC7A6C", VA = "0xBC7A6C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000935")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] laserSources;

	[Token(Token = "0x4000936")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject laserPrefab;

	[Token(Token = "0x4000937")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject chargeEffect;

	[Token(Token = "0x4000938")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int numToSpawn;

	[Token(Token = "0x4000939")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float delayBetweenLasers;

	[Token(Token = "0x400093A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float difficultyMod;

	[Token(Token = "0x400093B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public int power;

	[Token(Token = "0x400093C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<EnemyLaserAttack> enemyLaserAttacks;

	[Token(Token = "0x60009EB")]
	[Address(RVA = "0xBC73BC", Offset = "0xBC73BC", VA = "0xBC73BC")]
	private void Start()
	{
	}

	[Token(Token = "0x60009EC")]
	[Address(RVA = "0xBC740C", Offset = "0xBC740C", VA = "0xBC740C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C4338", Offset = "0x8C4338")]
	private IEnumerator spawnLasers()
	{
		return null;
	}

	[Token(Token = "0x60009ED")]
	[Address(RVA = "0xBC74A8", Offset = "0xBC74A8", VA = "0xBC74A8")]
	public BossCircleLaserAttack()
	{
	}
}
[Token(Token = "0x2000176")]
public class EnemyAnchorProj : MonoBehaviour
{
	[Token(Token = "0x400093D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Animator anim;

	[Token(Token = "0x60009EE")]
	[Address(RVA = "0xBF5978", Offset = "0xBF5978", VA = "0xBF5978")]
	private void Start()
	{
	}

	[Token(Token = "0x60009EF")]
	[Address(RVA = "0xBF59EC", Offset = "0xBF59EC", VA = "0xBF59EC")]
	public EnemyAnchorProj()
	{
	}
}
[Token(Token = "0x2000177")]
public class EnemyCaptainBryce : EnemyParent
{
	[Token(Token = "0x20006F2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B7E04", Offset = "0x8B7E04")]
	private sealed class <multiBlast>d__15 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002356")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002357")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002358")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EnemyCaptainBryce <>4__this;

		[Token(Token = "0x4002359")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <i>5__2;

		[Token(Token = "0x170004BF")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60029AC")]
			[Address(RVA = "0xBF7150", Offset = "0xBF7150", VA = "0xBF7150", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004C0")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60029AE")]
			[Address(RVA = "0xBF71B8", Offset = "0xBF71B8", VA = "0xBF71B8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60029A9")]
		[Address(RVA = "0xBF64A0", Offset = "0xBF64A0", VA = "0xBF64A0")]
		[DebuggerHidden]
		public <multiBlast>d__15(int <>1__state)
		{
		}

		[Token(Token = "0x60029AA")]
		[Address(RVA = "0xBF7000", Offset = "0xBF7000", VA = "0xBF7000", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60029AB")]
		[Address(RVA = "0xBF7004", Offset = "0xBF7004", VA = "0xBF7004", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60029AD")]
		[Address(RVA = "0xBF7158", Offset = "0xBF7158", VA = "0xBF7158", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20006F3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B7E14", Offset = "0x8B7E14")]
	private sealed class <raiseWaterLevel>d__16 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400235A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400235B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400235C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EnemyCaptainBryce <>4__this;

		[Token(Token = "0x400235D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private UnityEngine.Vector3 <tarWaterLevel>5__2;

		[Token(Token = "0x170004C1")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60029B2")]
			[Address(RVA = "0xBF73AC", Offset = "0xBF73AC", VA = "0xBF73AC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004C2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60029B4")]
			[Address(RVA = "0xBF7414", Offset = "0xBF7414", VA = "0xBF7414", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60029AF")]
		[Address(RVA = "0xBF64CC", Offset = "0xBF64CC", VA = "0xBF64CC")]
		[DebuggerHidden]
		public <raiseWaterLevel>d__16(int <>1__state)
		{
		}

		[Token(Token = "0x60029B0")]
		[Address(RVA = "0xBF71C0", Offset = "0xBF71C0", VA = "0xBF71C0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60029B1")]
		[Address(RVA = "0xBF71C4", Offset = "0xBF71C4", VA = "0xBF71C4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60029B3")]
		[Address(RVA = "0xBF73B4", Offset = "0xBF73B4", VA = "0xBF73B4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20006F4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B7E24", Offset = "0x8B7E24")]
	private sealed class <waitForNextAttack>d__18 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400235E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400235F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002360")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EnemyCaptainBryce <>4__this;

		[Token(Token = "0x170004C3")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60029B8")]
			[Address(RVA = "0xBF7D7C", Offset = "0xBF7D7C", VA = "0xBF7D7C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004C4")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60029BA")]
			[Address(RVA = "0xBF7DE4", Offset = "0xBF7DE4", VA = "0xBF7DE4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60029B5")]
		[Address(RVA = "0xBF64F8", Offset = "0xBF64F8", VA = "0xBF64F8")]
		[DebuggerHidden]
		public <waitForNextAttack>d__18(int <>1__state)
		{
		}

		[Token(Token = "0x60029B6")]
		[Address(RVA = "0xBF7CC4", Offset = "0xBF7CC4", VA = "0xBF7CC4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60029B7")]
		[Address(RVA = "0xBF7CC8", Offset = "0xBF7CC8", VA = "0xBF7CC8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60029B9")]
		[Address(RVA = "0xBF7D84", Offset = "0xBF7D84", VA = "0xBF7D84", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20006F5")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B7E34", Offset = "0x8B7E34")]
	private sealed class <tripleAnchor>d__19 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002361")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002362")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002363")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EnemyCaptainBryce <>4__this;

		[Token(Token = "0x170004C5")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60029BE")]
			[Address(RVA = "0xBF7C54", Offset = "0xBF7C54", VA = "0xBF7C54", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004C6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60029C0")]
			[Address(RVA = "0xBF7CBC", Offset = "0xBF7CBC", VA = "0xBF7CBC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60029BB")]
		[Address(RVA = "0xBF6524", Offset = "0xBF6524", VA = "0xBF6524")]
		[DebuggerHidden]
		public <tripleAnchor>d__19(int <>1__state)
		{
		}

		[Token(Token = "0x60029BC")]
		[Address(RVA = "0xBF77EC", Offset = "0xBF77EC", VA = "0xBF77EC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60029BD")]
		[Address(RVA = "0xBF77F0", Offset = "0xBF77F0", VA = "0xBF77F0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60029BF")]
		[Address(RVA = "0xBF7C5C", Offset = "0xBF7C5C", VA = "0xBF7C5C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20006F6")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B7E44", Offset = "0x8B7E44")]
	private sealed class <castShotgunBlast>d__20 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002364")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002365")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002366")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EnemyCaptainBryce <>4__this;

		[Token(Token = "0x4002367")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <numOfProjectiles>5__2;

		[Token(Token = "0x4002368")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <aimAccuracy>5__3;

		[Token(Token = "0x170004C7")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60029C4")]
			[Address(RVA = "0xBF6B2C", Offset = "0xBF6B2C", VA = "0xBF6B2C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004C8")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60029C6")]
			[Address(RVA = "0xBF6B94", Offset = "0xBF6B94", VA = "0xBF6B94", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60029C1")]
		[Address(RVA = "0xBF65C0", Offset = "0xBF65C0", VA = "0xBF65C0")]
		[DebuggerHidden]
		public <castShotgunBlast>d__20(int <>1__state)
		{
		}

		[Token(Token = "0x60029C2")]
		[Address(RVA = "0xBF6848", Offset = "0xBF6848", VA = "0xBF6848", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60029C3")]
		[Address(RVA = "0xBF684C", Offset = "0xBF684C", VA = "0xBF684C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60029C5")]
		[Address(RVA = "0xBF6B34", Offset = "0xBF6B34", VA = "0xBF6B34", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20006F7")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B7E54", Offset = "0x8B7E54")]
	private sealed class <shootProjectile>d__21 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002369")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400236A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400236B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EnemyCaptainBryce <>4__this;

		[Token(Token = "0x400236C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool goUp;

		[Token(Token = "0x400236D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject enemyProjectile;

		[Token(Token = "0x400236E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private GameObject <proj>5__2;

		[Token(Token = "0x400236F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Rigidbody <projRB>5__3;

		[Token(Token = "0x170004C9")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60029CA")]
			[Address(RVA = "0xBF777C", Offset = "0xBF777C", VA = "0xBF777C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004CA")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60029CC")]
			[Address(RVA = "0xBF77E4", Offset = "0xBF77E4", VA = "0xBF77E4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60029C7")]
		[Address(RVA = "0xBF65EC", Offset = "0xBF65EC", VA = "0xBF65EC")]
		[DebuggerHidden]
		public <shootProjectile>d__21(int <>1__state)
		{
		}

		[Token(Token = "0x60029C8")]
		[Address(RVA = "0xBF741C", Offset = "0xBF741C", VA = "0xBF741C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60029C9")]
		[Address(RVA = "0xBF7420", Offset = "0xBF7420", VA = "0xBF7420", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60029CB")]
		[Address(RVA = "0xBF7784", Offset = "0xBF7784", VA = "0xBF7784", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20006F8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B7E64", Offset = "0x8B7E64")]
	private sealed class <deathDelay>d__25 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002370")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002371")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002372")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EnemyCaptainBryce <>4__this;

		[Token(Token = "0x170004CB")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60029D0")]
			[Address(RVA = "0xBF6F90", Offset = "0xBF6F90", VA = "0xBF6F90", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004CC")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60029D2")]
			[Address(RVA = "0xBF6FF8", Offset = "0xBF6FF8", VA = "0xBF6FF8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60029CD")]
		[Address(RVA = "0xBF6804", Offset = "0xBF6804", VA = "0xBF6804")]
		[DebuggerHidden]
		public <deathDelay>d__25(int <>1__state)
		{
		}

		[Token(Token = "0x60029CE")]
		[Address(RVA = "0xBF6B9C", Offset = "0xBF6B9C", VA = "0xBF6B9C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60029CF")]
		[Address(RVA = "0xBF6BA0", Offset = "0xBF6BA0", VA = "0xBF6BA0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60029D1")]
		[Address(RVA = "0xBF6F98", Offset = "0xBF6F98", VA = "0xBF6F98", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400093E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public BattleDialogueBox dialogueBox;

	[Token(Token = "0x400093F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public Transform dialoguePos;

	[Token(Token = "0x4000940")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private EnemyGasCloud risingWater;

	[Token(Token = "0x4000941")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public EnemyProjectile swingingAnchor;

	[Token(Token = "0x4000942")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public EnemyProjectile waterProjectile;

	[Token(Token = "0x4000943")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public GameObject spawnParticle;

	[Token(Token = "0x4000944")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private Quaternion originProjRot;

	[Token(Token = "0x4000945")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private int turnsPassed;

	[Token(Token = "0x4000946")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
	public float projSpeed;

	[Token(Token = "0x4000947")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BC18C", Offset = "0x8BC18C")]
	public AudioClip[] castClips;

	[Token(Token = "0x4000948")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public AudioClip[] dialogueClips;

	[Token(Token = "0x4000949")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public string[] dialogueLines;

	[Token(Token = "0x400094A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private bool playingDeathAnim;

	[Token(Token = "0x60009F0")]
	[Address(RVA = "0xBF5C18", Offset = "0xBF5C18", VA = "0xBF5C18", Slot = "5")]
	protected override void Start()
	{
	}

	[Token(Token = "0x60009F1")]
	[Address(RVA = "0xBF5DF8", Offset = "0xBF5DF8", VA = "0xBF5DF8", Slot = "6")]
	protected override void Update()
	{
	}

	[Token(Token = "0x60009F2")]
	[Address(RVA = "0xBF5EF8", Offset = "0xBF5EF8", VA = "0xBF5EF8", Slot = "12")]
	public override void enemyAttack(bool endTurnAfter = true)
	{
	}

	[Token(Token = "0x60009F3")]
	[Address(RVA = "0xBF6430", Offset = "0xBF6430", VA = "0xBF6430")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C439C", Offset = "0x8C439C")]
	private IEnumerator multiBlast()
	{
		return null;
	}

	[Token(Token = "0x60009F4")]
	[Address(RVA = "0xBF6120", Offset = "0xBF6120", VA = "0xBF6120")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C4400", Offset = "0x8C4400")]
	private IEnumerator raiseWaterLevel()
	{
		return null;
	}

	[Token(Token = "0x60009F5")]
	[Address(RVA = "0xBF6190", Offset = "0xBF6190", VA = "0xBF6190")]
	public void playDialogue(string dialogue)
	{
	}

	[Token(Token = "0x60009F6")]
	[Address(RVA = "0xBF63C0", Offset = "0xBF63C0", VA = "0xBF63C0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C4464", Offset = "0x8C4464")]
	private IEnumerator waitForNextAttack()
	{
		return null;
	}

	[Token(Token = "0x60009F7")]
	[Address(RVA = "0xBF62C4", Offset = "0xBF62C4", VA = "0xBF62C4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C44C8", Offset = "0x8C44C8")]
	private IEnumerator tripleAnchor()
	{
		return null;
	}

	[Token(Token = "0x60009F8")]
	[Address(RVA = "0xBF6550", Offset = "0xBF6550", VA = "0xBF6550")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C452C", Offset = "0x8C452C")]
	protected IEnumerator castShotgunBlast()
	{
		return null;
	}

	[Token(Token = "0x60009F9")]
	[Address(RVA = "0xBF6334", Offset = "0xBF6334", VA = "0xBF6334")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C4590", Offset = "0x8C4590")]
	protected IEnumerator shootProjectile(GameObject enemyProjectile, bool goUp = false)
	{
		return null;
	}

	[Token(Token = "0x60009FA")]
	[Address(RVA = "0xBF6618", Offset = "0xBF6618", VA = "0xBF6618", Slot = "13")]
	public override void playHurtAnimation()
	{
	}

	[Token(Token = "0x60009FB")]
	[Address(RVA = "0xBF66FC", Offset = "0xBF66FC", VA = "0xBF66FC", Slot = "7")]
	public override void killSelf()
	{
	}

	[Token(Token = "0x60009FC")]
	[Address(RVA = "0xBF6794", Offset = "0xBF6794", VA = "0xBF6794")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C45F4", Offset = "0x8C45F4")]
	private IEnumerator deathDelay()
	{
		return null;
	}

	[Token(Token = "0x60009FD")]
	[Address(RVA = "0xBF6830", Offset = "0xBF6830", VA = "0xBF6830")]
	public EnemyCaptainBryce()
	{
	}

	[Token(Token = "0x60009FE")]
	[Address(RVA = "0xBF6840", Offset = "0xBF6840", VA = "0xBF6840")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C4658", Offset = "0x8C4658")]
	[DebuggerHidden]
	private void <>n__0()
	{
	}
}
[Token(Token = "0x2000178")]
public class RandomDirProjectile : MonoBehaviour
{
	[Token(Token = "0x20006F9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B7E74", Offset = "0x8B7E74")]
	private sealed class <startTimer>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002373")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002374")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002375")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RandomDirProjectile <>4__this;

		[Token(Token = "0x170004CD")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60029D6")]
			[Address(RVA = "0xC1D3EC", Offset = "0xC1D3EC", VA = "0xC1D3EC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004CE")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60029D8")]
			[Address(RVA = "0xC1D454", Offset = "0xC1D454", VA = "0xC1D454", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60029D3")]
		[Address(RVA = "0xC1D2F0", Offset = "0xC1D2F0", VA = "0xC1D2F0")]
		[DebuggerHidden]
		public <startTimer>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x60029D4")]
		[Address(RVA = "0xC1D324", Offset = "0xC1D324", VA = "0xC1D324", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60029D5")]
		[Address(RVA = "0xC1D328", Offset = "0xC1D328", VA = "0xC1D328", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60029D7")]
		[Address(RVA = "0xC1D3F4", Offset = "0xC1D3F4", VA = "0xC1D3F4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400094B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LineRenderer lineRend;

	[Token(Token = "0x400094C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float waitTime;

	[Token(Token = "0x400094D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public EnemyProjectile proj;

	[Token(Token = "0x60009FF")]
	[Address(RVA = "0xC1D154", Offset = "0xC1D154", VA = "0xC1D154")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A00")]
	[Address(RVA = "0xC1D280", Offset = "0xC1D280", VA = "0xC1D280")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C4690", Offset = "0x8C4690")]
	private IEnumerator startTimer()
	{
		return null;
	}

	[Token(Token = "0x6000A01")]
	[Address(RVA = "0xC1D31C", Offset = "0xC1D31C", VA = "0xC1D31C")]
	public RandomDirProjectile()
	{
	}
}
[Token(Token = "0x2000179")]
public class CasterSydMech : EnemyParent
{
	[Token(Token = "0x20006FA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B7E84", Offset = "0x8B7E84")]
	private sealed class <turn1dialogue>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002376")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002377")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002378")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CasterSydMech <>4__this;

		[Token(Token = "0x4002379")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <i>5__2;

		[Token(Token = "0x170004CF")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60029DC")]
			[Address(RVA = "0xB05CF8", Offset = "0xB05CF8", VA = "0xB05CF8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004D0")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60029DE")]
			[Address(RVA = "0xB05D60", Offset = "0xB05D60", VA = "0xB05D60", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60029D9")]
		[Address(RVA = "0xB055E8", Offset = "0xB055E8", VA = "0xB055E8")]
		[DebuggerHidden]
		public <turn1dialogue>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x60029DA")]
		[Address(RVA = "0xB05BF4", Offset = "0xB05BF4", VA = "0xB05BF4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60029DB")]
		[Address(RVA = "0xB05BF8", Offset = "0xB05BF8", VA = "0xB05BF8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60029DD")]
		[Address(RVA = "0xB05D00", Offset = "0xB05D00", VA = "0xB05D00", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20006FB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B7E94", Offset = "0x8B7E94")]
	private sealed class <deathTimer>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400237A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400237B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400237C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CasterSydMech <>4__this;

		[Token(Token = "0x170004D1")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60029E2")]
			[Address(RVA = "0xB05B84", Offset = "0xB05B84", VA = "0xB05B84", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004D2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60029E4")]
			[Address(RVA = "0xB05BEC", Offset = "0xB05BEC", VA = "0xB05BEC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60029DF")]
		[Address(RVA = "0xB05970", Offset = "0xB05970", VA = "0xB05970")]
		[DebuggerHidden]
		public <deathTimer>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x60029E0")]
		[Address(RVA = "0xB05A08", Offset = "0xB05A08", VA = "0xB05A08", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60029E1")]
		[Address(RVA = "0xB05A0C", Offset = "0xB05A0C", VA = "0xB05A0C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60029E3")]
		[Address(RVA = "0xB05B8C", Offset = "0xB05B8C", VA = "0xB05B8C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400094E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public string[] dialogue;

	[Token(Token = "0x400094F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public BattleDialogueBox dialogueBox;

	[Token(Token = "0x4000950")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private int attackNum;

	[Token(Token = "0x6000A02")]
	[Address(RVA = "0xB05524", Offset = "0xB05524", VA = "0xB05524", Slot = "5")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000A03")]
	[Address(RVA = "0xB0552C", Offset = "0xB0552C", VA = "0xB0552C", Slot = "6")]
	protected override void Update()
	{
	}

	[Token(Token = "0x6000A04")]
	[Address(RVA = "0xB05530", Offset = "0xB05530", VA = "0xB05530", Slot = "12")]
	public override void enemyAttack(bool endTurnAfter = true)
	{
	}

	[Token(Token = "0x6000A05")]
	[Address(RVA = "0xB05578", Offset = "0xB05578", VA = "0xB05578")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C46F4", Offset = "0x8C46F4")]
	private IEnumerator turn1dialogue()
	{
		return null;
	}

	[Token(Token = "0x6000A06")]
	[Address(RVA = "0xB05614", Offset = "0xB05614", VA = "0xB05614")]
	public void playDialogue(string dialogue)
	{
	}

	[Token(Token = "0x6000A07")]
	[Address(RVA = "0xB058D4", Offset = "0xB058D4", VA = "0xB058D4", Slot = "7")]
	public override void killSelf()
	{
	}

	[Token(Token = "0x6000A08")]
	[Address(RVA = "0xB05900", Offset = "0xB05900", VA = "0xB05900")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C4758", Offset = "0x8C4758")]
	private IEnumerator deathTimer()
	{
		return null;
	}

	[Token(Token = "0x6000A09")]
	[Address(RVA = "0xB0599C", Offset = "0xB0599C", VA = "0xB0599C", Slot = "13")]
	public override void playHurtAnimation()
	{
	}

	[Token(Token = "0x6000A0A")]
	[Address(RVA = "0xB059F8", Offset = "0xB059F8", VA = "0xB059F8")]
	public CasterSydMech()
	{
	}

	[Token(Token = "0x6000A0B")]
	[Address(RVA = "0xB05A00", Offset = "0xB05A00", VA = "0xB05A00")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C47BC", Offset = "0x8C47BC")]
	[DebuggerHidden]
	private void <>n__0()
	{
	}
}
[Token(Token = "0x200017A")]
public class ChildEnemyTrigger : MonoBehaviour
{
	[Token(Token = "0x4000951")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int power;

	[Token(Token = "0x4000952")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool canDamage;

	[Token(Token = "0x6000A0C")]
	[Address(RVA = "0xB07CDC", Offset = "0xB07CDC", VA = "0xB07CDC")]
	private void OnTriggerEnter(Collider collision)
	{
	}

	[Token(Token = "0x6000A0D")]
	[Address(RVA = "0xB07D94", Offset = "0xB07D94", VA = "0xB07D94")]
	public ChildEnemyTrigger()
	{
	}
}
[Token(Token = "0x200017B")]
public class EnemyCredits : EnemyParent
{
	[Token(Token = "0x20006FC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B7EA4", Offset = "0x8B7EA4")]
	private sealed class <shootProjectile>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400237D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400237E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400237F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject enemyProjectile;

		[Token(Token = "0x4002380")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public EnemyCredits <>4__this;

		[Token(Token = "0x4002381")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string s;

		[Token(Token = "0x4002382")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float delay;

		[Token(Token = "0x4002383")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private GameObject <proj>5__2;

		[Token(Token = "0x4002384")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Rigidbody <projRB>5__3;

		[Token(Token = "0x170004D3")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60029E8")]
			[Address(RVA = "0xDAEC80", Offset = "0xDAEC80", VA = "0xDAEC80", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004D4")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60029EA")]
			[Address(RVA = "0xDAECE8", Offset = "0xDAECE8", VA = "0xDAECE8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60029E5")]
		[Address(RVA = "0xDAD9E0", Offset = "0xDAD9E0", VA = "0xDAD9E0")]
		[DebuggerHidden]
		public <shootProjectile>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x60029E6")]
		[Address(RVA = "0xDAE98C", Offset = "0xDAE98C", VA = "0xDAE98C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60029E7")]
		[Address(RVA = "0xDAE990", Offset = "0xDAE990", VA = "0xDAE990", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60029E9")]
		[Address(RVA = "0xDAEC88", Offset = "0xDAEC88", VA = "0xDAEC88", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20006FD")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B7EB4", Offset = "0x8B7EB4")]
	private sealed class <playCredits>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002385")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002386")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002387")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EnemyCredits <>4__this;

		[Token(Token = "0x4002388")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private string[] <>7__wrap1;

		[Token(Token = "0x4002389")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int <>7__wrap2;

		[Token(Token = "0x170004D5")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60029EE")]
			[Address(RVA = "0xDAE91C", Offset = "0xDAE91C", VA = "0xDAE91C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004D6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60029F0")]
			[Address(RVA = "0xDAE984", Offset = "0xDAE984", VA = "0xDAE984", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60029EB")]
		[Address(RVA = "0xDADAD4", Offset = "0xDADAD4", VA = "0xDADAD4")]
		[DebuggerHidden]
		public <playCredits>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x60029EC")]
		[Address(RVA = "0xDAE760", Offset = "0xDAE760", VA = "0xDAE760", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60029ED")]
		[Address(RVA = "0xDAE764", Offset = "0xDAE764", VA = "0xDAE764", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60029EF")]
		[Address(RVA = "0xDAE924", Offset = "0xDAE924", VA = "0xDAE924", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000953")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public GameObject creditsProjectile;

	[Token(Token = "0x4000954")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public float baseProjectileSpeed;

	[Token(Token = "0x4000955")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	private bool creditsOver;

	[Token(Token = "0x4000956")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private string[] credits;

	[Token(Token = "0x6000A0E")]
	[Address(RVA = "0xDAD800", Offset = "0xDAD800", VA = "0xDAD800", Slot = "5")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000A0F")]
	[Address(RVA = "0xDAD8C4", Offset = "0xDAD8C4", VA = "0xDAD8C4", Slot = "6")]
	protected override void Update()
	{
	}

	[Token(Token = "0x6000A10")]
	[Address(RVA = "0xDAD94C", Offset = "0xDAD94C", VA = "0xDAD94C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C47F4", Offset = "0x8C47F4")]
	protected IEnumerator shootProjectile(GameObject enemyProjectile, float delay, string s)
	{
		return null;
	}

	[Token(Token = "0x6000A11")]
	[Address(RVA = "0xDADA0C", Offset = "0xDADA0C", VA = "0xDADA0C", Slot = "12")]
	public override void enemyAttack(bool endTurnAfter = true)
	{
	}

	[Token(Token = "0x6000A12")]
	[Address(RVA = "0xDADA64", Offset = "0xDADA64", VA = "0xDADA64")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C4858", Offset = "0x8C4858")]
	private IEnumerator playCredits()
	{
		return null;
	}

	[Token(Token = "0x6000A13")]
	[Address(RVA = "0xDADB00", Offset = "0xDADB00", VA = "0xDADB00", Slot = "7")]
	public override void killSelf()
	{
	}

	[Token(Token = "0x6000A14")]
	[Address(RVA = "0xDADBD4", Offset = "0xDADBD4", VA = "0xDADBD4")]
	public EnemyCredits()
	{
	}
}
[Token(Token = "0x200017C")]
public class DarkaxerHand : EnemyParent
{
	[Token(Token = "0x20006FE")]
	public enum HandState
	{
		[Token(Token = "0x400238B")]
		idle,
		[Token(Token = "0x400238C")]
		attack1,
		[Token(Token = "0x400238D")]
		attack2
	}

	[Token(Token = "0x20006FF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B7EC4", Offset = "0x8B7EC4")]
	private sealed class <shotgunBarrage>d__20 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400238E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400238F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002390")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DarkaxerHand <>4__this;

		[Token(Token = "0x4002391")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <barrageCount>5__2;

		[Token(Token = "0x4002392")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int <i>5__3;

		[Token(Token = "0x170004D7")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60029F4")]
			[Address(RVA = "0xB0F564", Offset = "0xB0F564", VA = "0xB0F564", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004D8")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60029F6")]
			[Address(RVA = "0xB0F5CC", Offset = "0xB0F5CC", VA = "0xB0F5CC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60029F1")]
		[Address(RVA = "0xB0E9AC", Offset = "0xB0E9AC", VA = "0xB0E9AC")]
		[DebuggerHidden]
		public <shotgunBarrage>d__20(int <>1__state)
		{
		}

		[Token(Token = "0x60029F2")]
		[Address(RVA = "0xB0F408", Offset = "0xB0F408", VA = "0xB0F408", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60029F3")]
		[Address(RVA = "0xB0F40C", Offset = "0xB0F40C", VA = "0xB0F40C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60029F5")]
		[Address(RVA = "0xB0F56C", Offset = "0xB0F56C", VA = "0xB0F56C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000700")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B7ED4", Offset = "0x8B7ED4")]
	private sealed class <castShotgunBlast>d__21 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002393")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002394")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002395")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DarkaxerHand <>4__this;

		[Token(Token = "0x4002396")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <numOfProjectiles>5__2;

		[Token(Token = "0x4002397")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <aimAccuracy>5__3;

		[Token(Token = "0x170004D9")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60029FA")]
			[Address(RVA = "0xB0F048", Offset = "0xB0F048", VA = "0xB0F048", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004DA")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60029FC")]
			[Address(RVA = "0xB0F0B0", Offset = "0xB0F0B0", VA = "0xB0F0B0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60029F7")]
		[Address(RVA = "0xB0EA48", Offset = "0xB0EA48", VA = "0xB0EA48")]
		[DebuggerHidden]
		public <castShotgunBlast>d__21(int <>1__state)
		{
		}

		[Token(Token = "0x60029F8")]
		[Address(RVA = "0xB0ED4C", Offset = "0xB0ED4C", VA = "0xB0ED4C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60029F9")]
		[Address(RVA = "0xB0ED50", Offset = "0xB0ED50", VA = "0xB0ED50", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60029FB")]
		[Address(RVA = "0xB0F050", Offset = "0xB0F050", VA = "0xB0F050", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000701")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B7EE4", Offset = "0x8B7EE4")]
	private sealed class <shootProjectile>d__23 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002398")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002399")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400239A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DarkaxerHand <>4__this;

		[Token(Token = "0x400239B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GameObject <proj>5__2;

		[Token(Token = "0x400239C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Rigidbody <projRB>5__3;

		[Token(Token = "0x170004DB")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002A00")]
			[Address(RVA = "0xB0F398", Offset = "0xB0F398", VA = "0xB0F398", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004DC")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002A02")]
			[Address(RVA = "0xB0F400", Offset = "0xB0F400", VA = "0xB0F400", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60029FD")]
		[Address(RVA = "0xB0ECEC", Offset = "0xB0ECEC", VA = "0xB0ECEC")]
		[DebuggerHidden]
		public <shootProjectile>d__23(int <>1__state)
		{
		}

		[Token(Token = "0x60029FE")]
		[Address(RVA = "0xB0F0B8", Offset = "0xB0F0B8", VA = "0xB0F0B8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60029FF")]
		[Address(RVA = "0xB0F0BC", Offset = "0xB0F0BC", VA = "0xB0F0BC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002A01")]
		[Address(RVA = "0xB0F3A0", Offset = "0xB0F3A0", VA = "0xB0F3A0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000957")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public GameObject[] enemyProjectiles;

	[Token(Token = "0x4000958")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public float projSpeed;

	[Token(Token = "0x4000959")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	private float flexPose;

	[Token(Token = "0x400095A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private float floatPos;

	[Token(Token = "0x400095B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
	private bool floatUp;

	[Token(Token = "0x400095C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12D")]
	private bool flexOpen;

	[Token(Token = "0x400095D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private float sineFrequency;

	[Token(Token = "0x400095E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
	private float sineAngularFrequency;

	[Token(Token = "0x400095F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public float sinePeriod;

	[Token(Token = "0x4000960")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
	public float sinePhase;

	[Token(Token = "0x4000961")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private float elapsedTime;

	[Token(Token = "0x4000962")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
	public float sineAmplitude;

	[Token(Token = "0x4000963")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private UnityEngine.Vector3 spawnPos;

	[Token(Token = "0x4000964")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
	public bool isRight;

	[Token(Token = "0x4000965")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private HandState handState;

	[Token(Token = "0x6000A15")]
	[Address(RVA = "0xB0E498", Offset = "0xB0E498", VA = "0xB0E498")]
	private void SmoothSineWaveY()
	{
	}

	[Token(Token = "0x6000A16")]
	[Address(RVA = "0xB0E5F4", Offset = "0xB0E5F4", VA = "0xB0E5F4", Slot = "5")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000A17")]
	[Address(RVA = "0xB0E7B0", Offset = "0xB0E7B0", VA = "0xB0E7B0", Slot = "6")]
	protected override void Update()
	{
	}

	[Token(Token = "0x6000A18")]
	[Address(RVA = "0xB0E89C", Offset = "0xB0E89C", VA = "0xB0E89C", Slot = "12")]
	public override void enemyAttack(bool endTurnAfter = true)
	{
	}

	[Token(Token = "0x6000A19")]
	[Address(RVA = "0xB0E93C", Offset = "0xB0E93C", VA = "0xB0E93C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C48BC", Offset = "0x8C48BC")]
	private IEnumerator shotgunBarrage()
	{
		return null;
	}

	[Token(Token = "0x6000A1A")]
	[Address(RVA = "0xB0E9D8", Offset = "0xB0E9D8", VA = "0xB0E9D8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C4920", Offset = "0x8C4920")]
	protected IEnumerator castShotgunBlast()
	{
		return null;
	}

	[Token(Token = "0x6000A1B")]
	[Address(RVA = "0xB0EA74", Offset = "0xB0EA74", VA = "0xB0EA74", Slot = "7")]
	public override void killSelf()
	{
	}

	[Token(Token = "0x6000A1C")]
	[Address(RVA = "0xB0EC7C", Offset = "0xB0EC7C", VA = "0xB0EC7C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C4984", Offset = "0x8C4984")]
	protected IEnumerator shootProjectile()
	{
		return null;
	}

	[Token(Token = "0x6000A1D")]
	[Address(RVA = "0xB0ED18", Offset = "0xB0ED18", VA = "0xB0ED18")]
	public DarkaxerHand()
	{
	}
}
[Token(Token = "0x200017D")]
public class EnemyDarkaxerBoss : EnemyParent
{
	[Token(Token = "0x2000702")]
	public enum DarkaxerPhase
	{
		[Token(Token = "0x400239E")]
		clones,
		[Token(Token = "0x400239F")]
		hands
	}

	[Token(Token = "0x2000703")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B7EF4", Offset = "0x8B7EF4")]
	private sealed class <disolveMaterial1>d__28 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40023A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40023A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40023A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EnemyDarkaxerBoss <>4__this;

		[Token(Token = "0x40023A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Renderer[] <rends>5__2;

		[Token(Token = "0x40023A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <disolve>5__3;

		[Token(Token = "0x170004DD")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002A06")]
			[Address(RVA = "0xDB1AC4", Offset = "0xDB1AC4", VA = "0xDB1AC4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004DE")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002A08")]
			[Address(RVA = "0xDB1B2C", Offset = "0xDB1B2C", VA = "0xDB1B2C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002A03")]
		[Address(RVA = "0xDAFDB4", Offset = "0xDAFDB4", VA = "0xDAFDB4")]
		[DebuggerHidden]
		public <disolveMaterial1>d__28(int <>1__state)
		{
		}

		[Token(Token = "0x6002A04")]
		[Address(RVA = "0xDB1884", Offset = "0xDB1884", VA = "0xDB1884", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002A05")]
		[Address(RVA = "0xDB1888", Offset = "0xDB1888", VA = "0xDB1888", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002A07")]
		[Address(RVA = "0xDB1ACC", Offset = "0xDB1ACC", VA = "0xDB1ACC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000704")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B7F04", Offset = "0x8B7F04")]
	private sealed class <flyBack>d__34 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40023A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40023A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40023A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EnemyDarkaxerBoss <>4__this;

		[Token(Token = "0x40023A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <floatSpeed>5__2;

		[Token(Token = "0x40023A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private UnityEngine.Vector3 <hoverPos>5__3;

		[Token(Token = "0x40023AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float <prog>5__4;

		[Token(Token = "0x170004DF")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002A0C")]
			[Address(RVA = "0xDB1E08", Offset = "0xDB1E08", VA = "0xDB1E08", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004E0")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002A0E")]
			[Address(RVA = "0xDB1E70", Offset = "0xDB1E70", VA = "0xDB1E70", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002A09")]
		[Address(RVA = "0xDB0798", Offset = "0xDB0798", VA = "0xDB0798")]
		[DebuggerHidden]
		public <flyBack>d__34(int <>1__state)
		{
		}

		[Token(Token = "0x6002A0A")]
		[Address(RVA = "0xDB1B34", Offset = "0xDB1B34", VA = "0xDB1B34", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002A0B")]
		[Address(RVA = "0xDB1B38", Offset = "0xDB1B38", VA = "0xDB1B38", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002A0D")]
		[Address(RVA = "0xDB1E10", Offset = "0xDB1E10", VA = "0xDB1E10", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000705")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B7F14", Offset = "0x8B7F14")]
	private sealed class <castMultiSpike>d__35 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40023AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40023AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40023AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EnemyDarkaxerBoss <>4__this;

		[Token(Token = "0x170004E1")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002A12")]
			[Address(RVA = "0xDB1648", Offset = "0xDB1648", VA = "0xDB1648", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004E2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002A14")]
			[Address(RVA = "0xDB16B0", Offset = "0xDB16B0", VA = "0xDB16B0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002A0F")]
		[Address(RVA = "0xDB07C4", Offset = "0xDB07C4", VA = "0xDB07C4")]
		[DebuggerHidden]
		public <castMultiSpike>d__35(int <>1__state)
		{
		}

		[Token(Token = "0x6002A10")]
		[Address(RVA = "0xDB1428", Offset = "0xDB1428", VA = "0xDB1428", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002A11")]
		[Address(RVA = "0xDB142C", Offset = "0xDB142C", VA = "0xDB142C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002A13")]
		[Address(RVA = "0xDB1650", Offset = "0xDB1650", VA = "0xDB1650", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000706")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B7F24", Offset = "0x8B7F24")]
	private sealed class <spikyTimer>d__37 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40023AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40023AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40023B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EnemyDarkaxerBoss <>4__this;

		[Token(Token = "0x40023B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GameObject <ball>5__2;

		[Token(Token = "0x170004E3")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002A18")]
			[Address(RVA = "0xDB2FAC", Offset = "0xDB2FAC", VA = "0xDB2FAC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004E4")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002A1A")]
			[Address(RVA = "0xDB3014", Offset = "0xDB3014", VA = "0xDB3014", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002A15")]
		[Address(RVA = "0xDB088C", Offset = "0xDB088C", VA = "0xDB088C")]
		[DebuggerHidden]
		public <spikyTimer>d__37(int <>1__state)
		{
		}

		[Token(Token = "0x6002A16")]
		[Address(RVA = "0xDB2C00", Offset = "0xDB2C00", VA = "0xDB2C00", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002A17")]
		[Address(RVA = "0xDB2C04", Offset = "0xDB2C04", VA = "0xDB2C04", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002A19")]
		[Address(RVA = "0xDB2FB4", Offset = "0xDB2FB4", VA = "0xDB2FB4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000707")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B7F34", Offset = "0x8B7F34")]
	private sealed class <spawnClones>d__38 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40023B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40023B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40023B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EnemyDarkaxerBoss <>4__this;

		[Token(Token = "0x170004E5")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002A1E")]
			[Address(RVA = "0xDB2B90", Offset = "0xDB2B90", VA = "0xDB2B90", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004E6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002A20")]
			[Address(RVA = "0xDB2BF8", Offset = "0xDB2BF8", VA = "0xDB2BF8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002A1B")]
		[Address(RVA = "0xDB08B8", Offset = "0xDB08B8", VA = "0xDB08B8")]
		[DebuggerHidden]
		public <spawnClones>d__38(int <>1__state)
		{
		}

		[Token(Token = "0x6002A1C")]
		[Address(RVA = "0xDB2214", Offset = "0xDB2214", VA = "0xDB2214", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002A1D")]
		[Address(RVA = "0xDB2218", Offset = "0xDB2218", VA = "0xDB2218", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002A1F")]
		[Address(RVA = "0xDB2B98", Offset = "0xDB2B98", VA = "0xDB2B98", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000708")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B7F44", Offset = "0x8B7F44")]
	private sealed class <switchWithClone>d__39 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40023B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40023B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40023B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EnemyDarkaxerBoss <>4__this;

		[Token(Token = "0x40023B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <numOfSwaps>5__2;

		[Token(Token = "0x40023B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int <i>5__3;

		[Token(Token = "0x170004E7")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002A24")]
			[Address(RVA = "0xDB4328", Offset = "0xDB4328", VA = "0xDB4328", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004E8")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002A26")]
			[Address(RVA = "0xDB4390", Offset = "0xDB4390", VA = "0xDB4390", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002A21")]
		[Address(RVA = "0xDB0954", Offset = "0xDB0954", VA = "0xDB0954")]
		[DebuggerHidden]
		public <switchWithClone>d__39(int <>1__state)
		{
		}

		[Token(Token = "0x6002A22")]
		[Address(RVA = "0xDB3D20", Offset = "0xDB3D20", VA = "0xDB3D20", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002A23")]
		[Address(RVA = "0xDB3D24", Offset = "0xDB3D24", VA = "0xDB3D24", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002A25")]
		[Address(RVA = "0xDB4330", Offset = "0xDB4330", VA = "0xDB4330", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000709")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B7F54", Offset = "0x8B7F54")]
	private sealed class <switchPhase>d__41 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40023BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40023BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40023BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EnemyDarkaxerBoss <>4__this;

		[Token(Token = "0x170004E9")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002A2A")]
			[Address(RVA = "0xDB3CB0", Offset = "0xDB3CB0", VA = "0xDB3CB0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004EA")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002A2C")]
			[Address(RVA = "0xDB3D18", Offset = "0xDB3D18", VA = "0xDB3D18", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002A27")]
		[Address(RVA = "0xDB0AC8", Offset = "0xDB0AC8", VA = "0xDB0AC8")]
		[DebuggerHidden]
		public <switchPhase>d__41(int <>1__state)
		{
		}

		[Token(Token = "0x6002A28")]
		[Address(RVA = "0xDB3640", Offset = "0xDB3640", VA = "0xDB3640", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002A29")]
		[Address(RVA = "0xDB3644", Offset = "0xDB3644", VA = "0xDB3644", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002A2B")]
		[Address(RVA = "0xDB3CB8", Offset = "0xDB3CB8", VA = "0xDB3CB8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200070A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B7F64", Offset = "0x8B7F64")]
	private sealed class <castBulletHell>d__42 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40023BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40023BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40023BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EnemyDarkaxerBoss <>4__this;

		[Token(Token = "0x40023C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <numOfProjectiles>5__2;

		[Token(Token = "0x40023C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <aimAccuracy>5__3;

		[Token(Token = "0x170004EB")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002A30")]
			[Address(RVA = "0xDB13B8", Offset = "0xDB13B8", VA = "0xDB13B8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004EC")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002A32")]
			[Address(RVA = "0xDB1420", Offset = "0xDB1420", VA = "0xDB1420", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002A2D")]
		[Address(RVA = "0xDB0AF4", Offset = "0xDB0AF4", VA = "0xDB0AF4")]
		[DebuggerHidden]
		public <castBulletHell>d__42(int <>1__state)
		{
		}

		[Token(Token = "0x6002A2E")]
		[Address(RVA = "0xDB1084", Offset = "0xDB1084", VA = "0xDB1084", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002A2F")]
		[Address(RVA = "0xDB1088", Offset = "0xDB1088", VA = "0xDB1088", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002A31")]
		[Address(RVA = "0xDB13C0", Offset = "0xDB13C0", VA = "0xDB13C0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200070B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B7F74", Offset = "0x8B7F74")]
	private sealed class <spinAttack>d__44 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40023C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40023C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40023C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EnemyDarkaxerBoss <>4__this;

		[Token(Token = "0x40023C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Quaternion <lastRot>5__2;

		[Token(Token = "0x40023C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float <timer>5__3;

		[Token(Token = "0x40023C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float <maxTime>5__4;

		[Token(Token = "0x170004ED")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002A36")]
			[Address(RVA = "0xDB35D0", Offset = "0xDB35D0", VA = "0xDB35D0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004EE")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002A38")]
			[Address(RVA = "0xDB3638", Offset = "0xDB3638", VA = "0xDB3638", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002A33")]
		[Address(RVA = "0xDB0C48", Offset = "0xDB0C48", VA = "0xDB0C48")]
		[DebuggerHidden]
		public <spinAttack>d__44(int <>1__state)
		{
		}

		[Token(Token = "0x6002A34")]
		[Address(RVA = "0xDB301C", Offset = "0xDB301C", VA = "0xDB301C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002A35")]
		[Address(RVA = "0xDB3020", Offset = "0xDB3020", VA = "0xDB3020", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002A37")]
		[Address(RVA = "0xDB35D8", Offset = "0xDB35D8", VA = "0xDB35D8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200070C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B7F84", Offset = "0x8B7F84")]
	private sealed class <deathTimer>d__46 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40023C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40023C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40023CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EnemyDarkaxerBoss <>4__this;

		[Token(Token = "0x170004EF")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002A3C")]
			[Address(RVA = "0xDB1814", Offset = "0xDB1814", VA = "0xDB1814", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004F0")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002A3E")]
			[Address(RVA = "0xDB187C", Offset = "0xDB187C", VA = "0xDB187C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002A39")]
		[Address(RVA = "0xDB0E68", Offset = "0xDB0E68", VA = "0xDB0E68")]
		[DebuggerHidden]
		public <deathTimer>d__46(int <>1__state)
		{
		}

		[Token(Token = "0x6002A3A")]
		[Address(RVA = "0xDB16B8", Offset = "0xDB16B8", VA = "0xDB16B8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002A3B")]
		[Address(RVA = "0xDB16BC", Offset = "0xDB16BC", VA = "0xDB16BC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002A3D")]
		[Address(RVA = "0xDB181C", Offset = "0xDB181C", VA = "0xDB181C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200070D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B7F94", Offset = "0x8B7F94")]
	private sealed class <shootProjectile>d__47 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40023CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40023CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40023CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject enemyProjectile;

		[Token(Token = "0x40023CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public EnemyDarkaxerBoss <>4__this;

		[Token(Token = "0x40023CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float delay;

		[Token(Token = "0x40023D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private GameObject <proj>5__2;

		[Token(Token = "0x40023D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Rigidbody <projRB>5__3;

		[Token(Token = "0x170004F1")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002A42")]
			[Address(RVA = "0xDB21A4", Offset = "0xDB21A4", VA = "0xDB21A4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004F2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002A44")]
			[Address(RVA = "0xDB220C", Offset = "0xDB220C", VA = "0xDB220C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002A3F")]
		[Address(RVA = "0xDB0F20", Offset = "0xDB0F20", VA = "0xDB0F20")]
		[DebuggerHidden]
		public <shootProjectile>d__47(int <>1__state)
		{
		}

		[Token(Token = "0x6002A40")]
		[Address(RVA = "0xDB1E78", Offset = "0xDB1E78", VA = "0xDB1E78", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002A41")]
		[Address(RVA = "0xDB1E7C", Offset = "0xDB1E7C", VA = "0xDB1E7C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002A43")]
		[Address(RVA = "0xDB21AC", Offset = "0xDB21AC", VA = "0xDB21AC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000966")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	public bool isClone;

	[Token(Token = "0x4000967")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private TMP_Text countdownText;

	[Token(Token = "0x4000968")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private int numOfFastProjectiles;

	[Token(Token = "0x4000969")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public GameObject regularProjectile;

	[Token(Token = "0x400096A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public GameObject crossProj;

	[Token(Token = "0x400096B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public GameObject spawnParticle;

	[Token(Token = "0x400096C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public BattleDialogueBox dialogueBox;

	[Token(Token = "0x400096D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public GameObject spikeBall;

	[Token(Token = "0x400096E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public string[] dialogue1;

	[Token(Token = "0x400096F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public EnemyParent handRight;

	[Token(Token = "0x4000970")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public EnemyParent handLeft;

	[Token(Token = "0x4000971")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public GameObject teleportParticle;

	[Token(Token = "0x4000972")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public float baseProjectileSpeed;

	[Token(Token = "0x4000973")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public EnemyParent cloneObject;

	[Token(Token = "0x4000974")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private bool gameOver;

	[Token(Token = "0x4000975")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x181")]
	private bool isDefeated;

	[Token(Token = "0x4000976")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
	private int turnNum;

	[Token(Token = "0x4000977")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private int turnsSinceClone;

	[Token(Token = "0x4000978")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
	private UnityEngine.Vector3 lastPos;

	[Token(Token = "0x4000979")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	private DarkaxerPhase darkaxerPhase;

	[Token(Token = "0x400097A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19C")]
	private int cloneHealthStart;

	[Token(Token = "0x400097B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	private float matchTimer;

	[Token(Token = "0x400097C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	public AudioClip[] dialogueClips;

	[Token(Token = "0x400097D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	public AudioClip[] attackClips;

	[Token(Token = "0x400097E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	public AudioSource teleportSource;

	[Token(Token = "0x6000A1E")]
	[Address(RVA = "0xDAFBE8", Offset = "0xDAFBE8", VA = "0xDAFBE8", Slot = "5")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000A1F")]
	[Address(RVA = "0xDAFD18", Offset = "0xDAFD18", VA = "0xDAFD18")]
	public void disolveMat()
	{
	}

	[Token(Token = "0x6000A20")]
	[Address(RVA = "0xDAFD44", Offset = "0xDAFD44", VA = "0xDAFD44")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C49E8", Offset = "0x8C49E8")]
	private IEnumerator disolveMaterial1()
	{
		return null;
	}

	[Token(Token = "0x6000A21")]
	[Address(RVA = "0xDAFDE0", Offset = "0xDAFDE0", VA = "0xDAFDE0", Slot = "6")]
	protected override void Update()
	{
	}

	[Token(Token = "0x6000A22")]
	[Address(RVA = "0xDAFF7C", Offset = "0xDAFF7C", VA = "0xDAFF7C")]
	public void playDialogue(string dialogue)
	{
	}

	[Token(Token = "0x6000A23")]
	[Address(RVA = "0xDB01E0", Offset = "0xDB01E0", VA = "0xDB01E0", Slot = "11")]
	public override void addGlitch(GlitchEffects currentGlitch)
	{
	}

	[Token(Token = "0x6000A24")]
	[Address(RVA = "0xDB0280", Offset = "0xDB0280", VA = "0xDB0280", Slot = "12")]
	public override void enemyAttack(bool endTurnAfter = true)
	{
	}

	[Token(Token = "0x6000A25")]
	[Address(RVA = "0xDB06A8", Offset = "0xDB06A8", VA = "0xDB06A8", Slot = "13")]
	public override void playHurtAnimation()
	{
	}

	[Token(Token = "0x6000A26")]
	[Address(RVA = "0xDB0408", Offset = "0xDB0408", VA = "0xDB0408")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C4A4C", Offset = "0x8C4A4C")]
	private IEnumerator flyBack()
	{
		return null;
	}

	[Token(Token = "0x6000A27")]
	[Address(RVA = "0xDB05C8", Offset = "0xDB05C8", VA = "0xDB05C8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C4AB0", Offset = "0x8C4AB0")]
	private IEnumerator castMultiSpike()
	{
		return null;
	}

	[Token(Token = "0x6000A28")]
	[Address(RVA = "0xDB07F0", Offset = "0xDB07F0", VA = "0xDB07F0")]
	public void fireSpikeBall()
	{
	}

	[Token(Token = "0x6000A29")]
	[Address(RVA = "0xDB081C", Offset = "0xDB081C", VA = "0xDB081C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C4B14", Offset = "0x8C4B14")]
	private IEnumerator spikyTimer()
	{
		return null;
	}

	[Token(Token = "0x6000A2A")]
	[Address(RVA = "0xDB0638", Offset = "0xDB0638", VA = "0xDB0638")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C4B78", Offset = "0x8C4B78")]
	private IEnumerator spawnClones()
	{
		return null;
	}

	[Token(Token = "0x6000A2B")]
	[Address(RVA = "0xDB08E4", Offset = "0xDB08E4", VA = "0xDB08E4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C4BDC", Offset = "0x8C4BDC")]
	private IEnumerator switchWithClone()
	{
		return null;
	}

	[Token(Token = "0x6000A2C")]
	[Address(RVA = "0xDB0980", Offset = "0xDB0980", VA = "0xDB0980", Slot = "10")]
	public override void damageEnemy(int amount, bool crit, int combo, bool isPhysical = false)
	{
	}

	[Token(Token = "0x6000A2D")]
	[Address(RVA = "0xDB0478", Offset = "0xDB0478", VA = "0xDB0478")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C4C40", Offset = "0x8C4C40")]
	private IEnumerator switchPhase()
	{
		return null;
	}

	[Token(Token = "0x6000A2E")]
	[Address(RVA = "0xDB04E8", Offset = "0xDB04E8", VA = "0xDB04E8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C4CA4", Offset = "0x8C4CA4")]
	protected IEnumerator castBulletHell()
	{
		return null;
	}

	[Token(Token = "0x6000A2F")]
	[Address(RVA = "0xDB0B20", Offset = "0xDB0B20", VA = "0xDB0B20")]
	private void playRandomAttackSound()
	{
	}

	[Token(Token = "0x6000A30")]
	[Address(RVA = "0xDB0558", Offset = "0xDB0558", VA = "0xDB0558")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C4D08", Offset = "0x8C4D08")]
	private IEnumerator spinAttack()
	{
		return null;
	}

	[Token(Token = "0x6000A31")]
	[Address(RVA = "0xDB0C74", Offset = "0xDB0C74", VA = "0xDB0C74", Slot = "7")]
	public override void killSelf()
	{
	}

	[Token(Token = "0x6000A32")]
	[Address(RVA = "0xDB0DF8", Offset = "0xDB0DF8", VA = "0xDB0DF8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C4D6C", Offset = "0x8C4D6C")]
	private IEnumerator deathTimer()
	{
		return null;
	}

	[Token(Token = "0x6000A33")]
	[Address(RVA = "0xDB0E94", Offset = "0xDB0E94", VA = "0xDB0E94")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C4DD0", Offset = "0x8C4DD0")]
	protected IEnumerator shootProjectile(GameObject enemyProjectile, float delay)
	{
		return null;
	}

	[Token(Token = "0x6000A34")]
	[Address(RVA = "0xDB0F4C", Offset = "0xDB0F4C", VA = "0xDB0F4C", Slot = "14")]
	public override void endTurn(bool enemyDied = false)
	{
	}

	[Token(Token = "0x6000A35")]
	[Address(RVA = "0xDB1054", Offset = "0xDB1054", VA = "0xDB1054")]
	public EnemyDarkaxerBoss()
	{
	}

	[Token(Token = "0x6000A36")]
	[Address(RVA = "0xDB107C", Offset = "0xDB107C", VA = "0xDB107C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C4E34", Offset = "0x8C4E34")]
	[DebuggerHidden]
	private void <>n__0()
	{
	}
}
[Token(Token = "0x200017E")]
public class EnemyDarkaxer : EnemyParent
{
	[Token(Token = "0x200070E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B7FA4", Offset = "0x8B7FA4")]
	private sealed class <castFinalAttack>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40023D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40023D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40023D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EnemyDarkaxer <>4__this;

		[Token(Token = "0x170004F3")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002A48")]
			[Address(RVA = "0xDAF878", Offset = "0xDAF878", VA = "0xDAF878", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004F4")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002A4A")]
			[Address(RVA = "0xDAF8E0", Offset = "0xDAF8E0", VA = "0xDAF8E0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002A45")]
		[Address(RVA = "0xDAF0E4", Offset = "0xDAF0E4", VA = "0xDAF0E4")]
		[DebuggerHidden]
		public <castFinalAttack>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x6002A46")]
		[Address(RVA = "0xDAF65C", Offset = "0xDAF65C", VA = "0xDAF65C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002A47")]
		[Address(RVA = "0xDAF660", Offset = "0xDAF660", VA = "0xDAF660", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002A49")]
		[Address(RVA = "0xDAF880", Offset = "0xDAF880", VA = "0xDAF880", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200070F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B7FB4", Offset = "0x8B7FB4")]
	private sealed class <castBulletHell>d__13 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40023D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40023D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40023D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform firePoint;

		[Token(Token = "0x40023D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public EnemyDarkaxer <>4__this;

		[Token(Token = "0x40023D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int <numOfProjectiles>5__2;

		[Token(Token = "0x40023DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <aimAccuracy>5__3;

		[Token(Token = "0x170004F5")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002A4E")]
			[Address(RVA = "0xDAF5EC", Offset = "0xDAF5EC", VA = "0xDAF5EC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004F6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002A50")]
			[Address(RVA = "0xDAF654", Offset = "0xDAF654", VA = "0xDAF654", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002A4B")]
		[Address(RVA = "0xDAF18C", Offset = "0xDAF18C", VA = "0xDAF18C")]
		[DebuggerHidden]
		public <castBulletHell>d__13(int <>1__state)
		{
		}

		[Token(Token = "0x6002A4C")]
		[Address(RVA = "0xDAF36C", Offset = "0xDAF36C", VA = "0xDAF36C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002A4D")]
		[Address(RVA = "0xDAF370", Offset = "0xDAF370", VA = "0xDAF370", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002A4F")]
		[Address(RVA = "0xDAF5F4", Offset = "0xDAF5F4", VA = "0xDAF5F4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000710")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B7FC4", Offset = "0x8B7FC4")]
	private sealed class <shootProjectileFromPoint>d__14 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40023DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40023DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40023DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EnemyDarkaxer <>4__this;

		[Token(Token = "0x40023DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform point;

		[Token(Token = "0x40023DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private GameObject <proj>5__2;

		[Token(Token = "0x40023E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Rigidbody <projRB>5__3;

		[Token(Token = "0x170004F7")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002A54")]
			[Address(RVA = "0xDAFB78", Offset = "0xDAFB78", VA = "0xDAFB78", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004F8")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002A56")]
			[Address(RVA = "0xDAFBE0", Offset = "0xDAFBE0", VA = "0xDAFBE0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002A51")]
		[Address(RVA = "0xDAF234", Offset = "0xDAF234", VA = "0xDAF234")]
		[DebuggerHidden]
		public <shootProjectileFromPoint>d__14(int <>1__state)
		{
		}

		[Token(Token = "0x6002A52")]
		[Address(RVA = "0xDAF8E8", Offset = "0xDAF8E8", VA = "0xDAF8E8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002A53")]
		[Address(RVA = "0xDAF8EC", Offset = "0xDAF8EC", VA = "0xDAF8EC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002A55")]
		[Address(RVA = "0xDAFB80", Offset = "0xDAFB80", VA = "0xDAFB80", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400097F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public Animator taskMasterAnim;

	[Token(Token = "0x4000980")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public GameObject killPillarPrefab;

	[Token(Token = "0x4000981")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private bool firstAttack;

	[Token(Token = "0x4000982")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public Transform[] finalAttackPoints;

	[Token(Token = "0x4000983")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public float projSpeed;

	[Token(Token = "0x4000984")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public GameObject enemyProjectile;

	[Token(Token = "0x4000985")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public GameObject teleParticle;

	[Token(Token = "0x4000986")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public GameObject arcaxerModel;

	[Token(Token = "0x4000987")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public AudioClip music;

	[Token(Token = "0x6000A37")]
	[Address(RVA = "0xDAECF0", Offset = "0xDAECF0", VA = "0xDAECF0", Slot = "5")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000A38")]
	[Address(RVA = "0xDAEEA4", Offset = "0xDAEEA4", VA = "0xDAEEA4", Slot = "6")]
	protected override void Update()
	{
	}

	[Token(Token = "0x6000A39")]
	[Address(RVA = "0xDAEEA8", Offset = "0xDAEEA8", VA = "0xDAEEA8", Slot = "12")]
	public override void enemyAttack(bool endTurnAfter = true)
	{
	}

	[Token(Token = "0x6000A3A")]
	[Address(RVA = "0xDAF074", Offset = "0xDAF074", VA = "0xDAF074")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C4E6C", Offset = "0x8C4E6C")]
	protected IEnumerator castFinalAttack()
	{
		return null;
	}

	[Token(Token = "0x6000A3B")]
	[Address(RVA = "0xDAF110", Offset = "0xDAF110", VA = "0xDAF110")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C4ED0", Offset = "0x8C4ED0")]
	protected IEnumerator castBulletHell(Transform firePoint)
	{
		return null;
	}

	[Token(Token = "0x6000A3C")]
	[Address(RVA = "0xDAF1B8", Offset = "0xDAF1B8", VA = "0xDAF1B8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C4F34", Offset = "0x8C4F34")]
	protected IEnumerator shootProjectileFromPoint(Transform point)
	{
		return null;
	}

	[Token(Token = "0x6000A3D")]
	[Address(RVA = "0xDAF260", Offset = "0xDAF260", VA = "0xDAF260", Slot = "7")]
	public override void killSelf()
	{
	}

	[Token(Token = "0x6000A3E")]
	[Address(RVA = "0xDAF354", Offset = "0xDAF354", VA = "0xDAF354")]
	public EnemyDarkaxer()
	{
	}
}
[Token(Token = "0x200017F")]
public class EnemyDrJonkal : EnemyParent
{
	[Token(Token = "0x2000711")]
	public enum EnemyForm
	{
		[Token(Token = "0x40023E2")]
		jonkal,
		[Token(Token = "0x40023E3")]
		hugh
	}

	[Token(Token = "0x2000712")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B7FD4", Offset = "0x8B7FD4")]
	private sealed class <transformEnemy>d__20 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40023E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40023E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40023E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EnemyDrJonkal <>4__this;

		[Token(Token = "0x170004F9")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002A5A")]
			[Address(RVA = "0xDB6D1C", Offset = "0xDB6D1C", VA = "0xDB6D1C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004FA")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002A5C")]
			[Address(RVA = "0xDB6D84", Offset = "0xDB6D84", VA = "0xDB6D84", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002A57")]
		[Address(RVA = "0xDB5444", Offset = "0xDB5444", VA = "0xDB5444")]
		[DebuggerHidden]
		public <transformEnemy>d__20(int <>1__state)
		{
		}

		[Token(Token = "0x6002A58")]
		[Address(RVA = "0xDB6798", Offset = "0xDB6798", VA = "0xDB6798", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002A59")]
		[Address(RVA = "0xDB679C", Offset = "0xDB679C", VA = "0xDB679C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002A5B")]
		[Address(RVA = "0xDB6D24", Offset = "0xDB6D24", VA = "0xDB6D24", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000713")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B7FE4", Offset = "0x8B7FE4")]
	private sealed class <poisonWall>d__22 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40023E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40023E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40023E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EnemyDrJonkal <>4__this;

		[Token(Token = "0x170004FB")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002A60")]
			[Address(RVA = "0xDB6424", Offset = "0xDB6424", VA = "0xDB6424", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004FC")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002A62")]
			[Address(RVA = "0xDB648C", Offset = "0xDB648C", VA = "0xDB648C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002A5D")]
		[Address(RVA = "0xDB5704", Offset = "0xDB5704", VA = "0xDB5704")]
		[DebuggerHidden]
		public <poisonWall>d__22(int <>1__state)
		{
		}

		[Token(Token = "0x6002A5E")]
		[Address(RVA = "0xDB6108", Offset = "0xDB6108", VA = "0xDB6108", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002A5F")]
		[Address(RVA = "0xDB610C", Offset = "0xDB610C", VA = "0xDB610C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002A61")]
		[Address(RVA = "0xDB642C", Offset = "0xDB642C", VA = "0xDB642C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000714")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B7FF4", Offset = "0x8B7FF4")]
	private sealed class <poisonCross>d__25 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40023EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40023EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40023EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EnemyDrJonkal <>4__this;

		[Token(Token = "0x40023ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <numOfBeams>5__2;

		[Token(Token = "0x40023EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int <i>5__3;

		[Token(Token = "0x170004FD")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002A66")]
			[Address(RVA = "0xDB6098", Offset = "0xDB6098", VA = "0xDB6098", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004FE")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002A68")]
			[Address(RVA = "0xDB6100", Offset = "0xDB6100", VA = "0xDB6100", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002A63")]
		[Address(RVA = "0xDB5954", Offset = "0xDB5954", VA = "0xDB5954")]
		[DebuggerHidden]
		public <poisonCross>d__25(int <>1__state)
		{
		}

		[Token(Token = "0x6002A64")]
		[Address(RVA = "0xDB5F14", Offset = "0xDB5F14", VA = "0xDB5F14", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002A65")]
		[Address(RVA = "0xDB5F18", Offset = "0xDB5F18", VA = "0xDB5F18", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002A67")]
		[Address(RVA = "0xDB60A0", Offset = "0xDB60A0", VA = "0xDB60A0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000715")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B8004", Offset = "0x8B8004")]
	private sealed class <poisonBeamBarrage>d__26 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40023EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40023F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40023F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EnemyDrJonkal <>4__this;

		[Token(Token = "0x40023F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <numOfBeams>5__2;

		[Token(Token = "0x40023F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int <i>5__3;

		[Token(Token = "0x170004FF")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002A6C")]
			[Address(RVA = "0xDB5EA4", Offset = "0xDB5EA4", VA = "0xDB5EA4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000500")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002A6E")]
			[Address(RVA = "0xDB5F0C", Offset = "0xDB5F0C", VA = "0xDB5F0C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002A69")]
		[Address(RVA = "0xDB5980", Offset = "0xDB5980", VA = "0xDB5980")]
		[DebuggerHidden]
		public <poisonBeamBarrage>d__26(int <>1__state)
		{
		}

		[Token(Token = "0x6002A6A")]
		[Address(RVA = "0xDB5C9C", Offset = "0xDB5C9C", VA = "0xDB5C9C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002A6B")]
		[Address(RVA = "0xDB5CA0", Offset = "0xDB5CA0", VA = "0xDB5CA0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002A6D")]
		[Address(RVA = "0xDB5EAC", Offset = "0xDB5EAC", VA = "0xDB5EAC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000716")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B8014", Offset = "0x8B8014")]
	private sealed class <shootProjectile>d__29 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40023F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40023F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40023F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject enemyProjectile;

		[Token(Token = "0x40023F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public EnemyDrJonkal <>4__this;

		[Token(Token = "0x40023F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float projSpeed;

		[Token(Token = "0x40023F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private GameObject <proj>5__2;

		[Token(Token = "0x40023FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Rigidbody <projRB>5__3;

		[Token(Token = "0x17000501")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002A72")]
			[Address(RVA = "0xDB6728", Offset = "0xDB6728", VA = "0xDB6728", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000502")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002A74")]
			[Address(RVA = "0xDB6790", Offset = "0xDB6790", VA = "0xDB6790", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002A6F")]
		[Address(RVA = "0xDB5C60", Offset = "0xDB5C60", VA = "0xDB5C60")]
		[DebuggerHidden]
		public <shootProjectile>d__29(int <>1__state)
		{
		}

		[Token(Token = "0x6002A70")]
		[Address(RVA = "0xDB6494", Offset = "0xDB6494", VA = "0xDB6494", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002A71")]
		[Address(RVA = "0xDB6498", Offset = "0xDB6498", VA = "0xDB6498", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002A73")]
		[Address(RVA = "0xDB6730", Offset = "0xDB6730", VA = "0xDB6730", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000988")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public GameObject poisonBeamSineX;

	[Token(Token = "0x4000989")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public GameObject poisonOrbX;

	[Token(Token = "0x400098A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public GameObject poisonCrossXY;

	[Token(Token = "0x400098B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public GameObject[] enemyRigs;

	[Token(Token = "0x400098C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public GameObject[] aimAssists;

	[Token(Token = "0x400098D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public Animator[] anims;

	[Token(Token = "0x400098E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public GameObject transformParticle;

	[Token(Token = "0x400098F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public EnemyParent transformationCatalyst;

	[Token(Token = "0x4000990")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public BattleDialogueBox dialogueBox;

	[Token(Token = "0x4000991")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public Transform dialoguePos;

	[Token(Token = "0x4000992")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public string[] dialogue1;

	[Token(Token = "0x4000993")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private bool firstTransform;

	[Token(Token = "0x4000994")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
	private int turnsTaken;

	[Token(Token = "0x4000995")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private UnityEngine.Vector3 originalProjPos;

	[Token(Token = "0x4000996")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public AudioClip[] dialogueClips;

	[Token(Token = "0x4000997")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	private EnemyForm enemyForm;

	[Token(Token = "0x6000A3F")]
	[Address(RVA = "0xDB524C", Offset = "0xDB524C", VA = "0xDB524C", Slot = "5")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000A40")]
	[Address(RVA = "0xDB529C", Offset = "0xDB529C", VA = "0xDB529C", Slot = "6")]
	protected override void Update()
	{
	}

	[Token(Token = "0x6000A41")]
	[Address(RVA = "0xDB53A8", Offset = "0xDB53A8", VA = "0xDB53A8", Slot = "10")]
	public override void damageEnemy(int amount, bool crit, int combo, bool isPhysical = false)
	{
	}

	[Token(Token = "0x6000A42")]
	[Address(RVA = "0xDB53D4", Offset = "0xDB53D4", VA = "0xDB53D4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C4F98", Offset = "0x8C4F98")]
	private IEnumerator transformEnemy()
	{
		return null;
	}

	[Token(Token = "0x6000A43")]
	[Address(RVA = "0xDB5470", Offset = "0xDB5470", VA = "0xDB5470", Slot = "12")]
	public override void enemyAttack(bool endTurnAfter = true)
	{
	}

	[Token(Token = "0x6000A44")]
	[Address(RVA = "0xDB5624", Offset = "0xDB5624", VA = "0xDB5624")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C4FFC", Offset = "0x8C4FFC")]
	private IEnumerator poisonWall()
	{
		return null;
	}

	[Token(Token = "0x6000A45")]
	[Address(RVA = "0xDB5730", Offset = "0xDB5730", VA = "0xDB5730")]
	private void spawnEnemy()
	{
	}

	[Token(Token = "0x6000A46")]
	[Address(RVA = "0xDB57D0", Offset = "0xDB57D0", VA = "0xDB57D0")]
	public void playDialogue(string dialogue)
	{
	}

	[Token(Token = "0x6000A47")]
	[Address(RVA = "0xDB5694", Offset = "0xDB5694", VA = "0xDB5694")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C5060", Offset = "0x8C5060")]
	private IEnumerator poisonCross()
	{
		return null;
	}

	[Token(Token = "0x6000A48")]
	[Address(RVA = "0xDB55B4", Offset = "0xDB55B4", VA = "0xDB55B4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C50C4", Offset = "0x8C50C4")]
	private IEnumerator poisonBeamBarrage()
	{
		return null;
	}

	[Token(Token = "0x6000A49")]
	[Address(RVA = "0xDB59AC", Offset = "0xDB59AC", VA = "0xDB59AC", Slot = "7")]
	public override void killSelf()
	{
	}

	[Token(Token = "0x6000A4A")]
	[Address(RVA = "0xDB5B78", Offset = "0xDB5B78", VA = "0xDB5B78", Slot = "13")]
	public override void playHurtAnimation()
	{
	}

	[Token(Token = "0x6000A4B")]
	[Address(RVA = "0xDB5BD4", Offset = "0xDB5BD4", VA = "0xDB5BD4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C5128", Offset = "0x8C5128")]
	protected IEnumerator shootProjectile(GameObject enemyProjectile, float projSpeed)
	{
		return null;
	}

	[Token(Token = "0x6000A4C")]
	[Address(RVA = "0xDB5C8C", Offset = "0xDB5C8C", VA = "0xDB5C8C")]
	public EnemyDrJonkal()
	{
	}
}
[Token(Token = "0x2000180")]
public class EnemyDragonBoss : EnemyParent
{
	[Token(Token = "0x2000717")]
	public enum DragonPhase
	{
		[Token(Token = "0x40023FC")]
		grounded,
		[Token(Token = "0x40023FD")]
		flying,
		[Token(Token = "0x40023FE")]
		human
	}

	[Token(Token = "0x2000718")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B8024", Offset = "0x8B8024")]
	private sealed class <firstAttack>d__34 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40023FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002400")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002401")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EnemyDragonBoss <>4__this;

		[Token(Token = "0x17000503")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002A78")]
			[Address(RVA = "0xDB98F8", Offset = "0xDB98F8", VA = "0xDB98F8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000504")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002A7A")]
			[Address(RVA = "0xDB9960", Offset = "0xDB9960", VA = "0xDB9960", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002A75")]
		[Address(RVA = "0xDB75A4", Offset = "0xDB75A4", VA = "0xDB75A4")]
		[DebuggerHidden]
		public <firstAttack>d__34(int <>1__state)
		{
		}

		[Token(Token = "0x6002A76")]
		[Address(RVA = "0xDB973C", Offset = "0xDB973C", VA = "0xDB973C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002A77")]
		[Address(RVA = "0xDB9740", Offset = "0xDB9740", VA = "0xDB9740", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002A79")]
		[Address(RVA = "0xDB9900", Offset = "0xDB9900", VA = "0xDB9900", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000719")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B8034", Offset = "0x8B8034")]
	private sealed class <endBattleTransform>d__35 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002402")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002403")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002404")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EnemyDragonBoss <>4__this;

		[Token(Token = "0x4002405")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private MusicPlayer <player>5__2;

		[Token(Token = "0x4002406")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int <numOfProjectiles>5__3;

		[Token(Token = "0x17000505")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002A7E")]
			[Address(RVA = "0xDB8FD4", Offset = "0xDB8FD4", VA = "0xDB8FD4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000506")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002A80")]
			[Address(RVA = "0xDB903C", Offset = "0xDB903C", VA = "0xDB903C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002A7B")]
		[Address(RVA = "0xDB75D0", Offset = "0xDB75D0", VA = "0xDB75D0")]
		[DebuggerHidden]
		public <endBattleTransform>d__35(int <>1__state)
		{
		}

		[Token(Token = "0x6002A7C")]
		[Address(RVA = "0xDB8918", Offset = "0xDB8918", VA = "0xDB8918", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002A7D")]
		[Address(RVA = "0xDB891C", Offset = "0xDB891C", VA = "0xDB891C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002A7F")]
		[Address(RVA = "0xDB8FDC", Offset = "0xDB8FDC", VA = "0xDB8FDC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200071A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B8044", Offset = "0x8B8044")]
	private sealed class <secondAttack>d__36 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002407")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002408")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002409")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EnemyDragonBoss <>4__this;

		[Token(Token = "0x17000507")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002A84")]
			[Address(RVA = "0xDB9E8C", Offset = "0xDB9E8C", VA = "0xDB9E8C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000508")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002A86")]
			[Address(RVA = "0xDB9EF4", Offset = "0xDB9EF4", VA = "0xDB9EF4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002A81")]
		[Address(RVA = "0xDB75FC", Offset = "0xDB75FC", VA = "0xDB75FC")]
		[DebuggerHidden]
		public <secondAttack>d__36(int <>1__state)
		{
		}

		[Token(Token = "0x6002A82")]
		[Address(RVA = "0xDB9CC8", Offset = "0xDB9CC8", VA = "0xDB9CC8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002A83")]
		[Address(RVA = "0xDB9CCC", Offset = "0xDB9CCC", VA = "0xDB9CCC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002A85")]
		[Address(RVA = "0xDB9E94", Offset = "0xDB9E94", VA = "0xDB9E94", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200071B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B8054", Offset = "0x8B8054")]
	private sealed class <spawnCatalystEnemy>d__37 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400240A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400240B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400240C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EnemyDragonBoss <>4__this;

		[Token(Token = "0x17000509")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002A8A")]
			[Address(RVA = "0xDBA46C", Offset = "0xDBA46C", VA = "0xDBA46C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700050A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002A8C")]
			[Address(RVA = "0xDBA4D4", Offset = "0xDBA4D4", VA = "0xDBA4D4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002A87")]
		[Address(RVA = "0xDB7628", Offset = "0xDB7628", VA = "0xDB7628")]
		[DebuggerHidden]
		public <spawnCatalystEnemy>d__37(int <>1__state)
		{
		}

		[Token(Token = "0x6002A88")]
		[Address(RVA = "0xDBA298", Offset = "0xDBA298", VA = "0xDBA298", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002A89")]
		[Address(RVA = "0xDBA29C", Offset = "0xDBA29C", VA = "0xDBA29C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002A8B")]
		[Address(RVA = "0xDBA474", Offset = "0xDBA474", VA = "0xDBA474", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200071C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B8064", Offset = "0x8B8064")]
	private sealed class <healSelf>d__41 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400240D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400240E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400240F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EnemyDragonBoss <>4__this;

		[Token(Token = "0x1700050B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002A90")]
			[Address(RVA = "0xDB9C58", Offset = "0xDB9C58", VA = "0xDB9C58", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700050C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002A92")]
			[Address(RVA = "0xDB9CC0", Offset = "0xDB9CC0", VA = "0xDB9CC0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002A8D")]
		[Address(RVA = "0xDB7A74", Offset = "0xDB7A74", VA = "0xDB7A74")]
		[DebuggerHidden]
		public <healSelf>d__41(int <>1__state)
		{
		}

		[Token(Token = "0x6002A8E")]
		[Address(RVA = "0xDB9968", Offset = "0xDB9968", VA = "0xDB9968", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002A8F")]
		[Address(RVA = "0xDB996C", Offset = "0xDB996C", VA = "0xDB996C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002A91")]
		[Address(RVA = "0xDB9C60", Offset = "0xDB9C60", VA = "0xDB9C60", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200071D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B8074", Offset = "0x8B8074")]
	private sealed class <destroyStageAttack>d__42 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002410")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002411")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002412")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EnemyDragonBoss <>4__this;

		[Token(Token = "0x4002413")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GameObject <stage>5__2;

		[Token(Token = "0x1700050D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002A96")]
			[Address(RVA = "0xDB88A8", Offset = "0xDB88A8", VA = "0xDB88A8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700050E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002A98")]
			[Address(RVA = "0xDB8910", Offset = "0xDB8910", VA = "0xDB8910", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002A93")]
		[Address(RVA = "0xDB7AA0", Offset = "0xDB7AA0", VA = "0xDB7AA0")]
		[DebuggerHidden]
		public <destroyStageAttack>d__42(int <>1__state)
		{
		}

		[Token(Token = "0x6002A94")]
		[Address(RVA = "0xDB84C0", Offset = "0xDB84C0", VA = "0xDB84C0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002A95")]
		[Address(RVA = "0xDB84C4", Offset = "0xDB84C4", VA = "0xDB84C4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002A97")]
		[Address(RVA = "0xDB88B0", Offset = "0xDB88B0", VA = "0xDB88B0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200071E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B8084", Offset = "0x8B8084")]
	private sealed class <fireBreath>d__43 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002414")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002415")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002416")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EnemyDragonBoss <>4__this;

		[Token(Token = "0x4002417")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <maxTime>5__2;

		[Token(Token = "0x4002418")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <timer>5__3;

		[Token(Token = "0x4002419")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private UnityEngine.Vector3 <currentPoint>5__4;

		[Token(Token = "0x1700050F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002A9C")]
			[Address(RVA = "0xDB96CC", Offset = "0xDB96CC", VA = "0xDB96CC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000510")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002A9E")]
			[Address(RVA = "0xDB9734", Offset = "0xDB9734", VA = "0xDB9734", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002A99")]
		[Address(RVA = "0xDB7ACC", Offset = "0xDB7ACC", VA = "0xDB7ACC")]
		[DebuggerHidden]
		public <fireBreath>d__43(int <>1__state)
		{
		}

		[Token(Token = "0x6002A9A")]
		[Address(RVA = "0xDB9044", Offset = "0xDB9044", VA = "0xDB9044", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002A9B")]
		[Address(RVA = "0xDB9048", Offset = "0xDB9048", VA = "0xDB9048", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002A9D")]
		[Address(RVA = "0xDB96D4", Offset = "0xDB96D4", VA = "0xDB96D4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200071F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B8094", Offset = "0x8B8094")]
	private sealed class <castBulletHell>d__44 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400241A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400241B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400241C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EnemyDragonBoss <>4__this;

		[Token(Token = "0x400241D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <numOfProjectiles>5__2;

		[Token(Token = "0x400241E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <aimAccuracy>5__3;

		[Token(Token = "0x17000511")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002AA2")]
			[Address(RVA = "0xDB80EC", Offset = "0xDB80EC", VA = "0xDB80EC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000512")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002AA4")]
			[Address(RVA = "0xDB8154", Offset = "0xDB8154", VA = "0xDB8154", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002A9F")]
		[Address(RVA = "0xDB7AF8", Offset = "0xDB7AF8", VA = "0xDB7AF8")]
		[DebuggerHidden]
		public <castBulletHell>d__44(int <>1__state)
		{
		}

		[Token(Token = "0x6002AA0")]
		[Address(RVA = "0xDB7C24", Offset = "0xDB7C24", VA = "0xDB7C24", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002AA1")]
		[Address(RVA = "0xDB7C28", Offset = "0xDB7C28", VA = "0xDB7C28", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002AA3")]
		[Address(RVA = "0xDB80F4", Offset = "0xDB80F4", VA = "0xDB80F4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000720")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B80A4", Offset = "0x8B80A4")]
	private sealed class <castWalls>d__45 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400241F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002420")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002421")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EnemyDragonBoss <>4__this;

		[Token(Token = "0x4002422")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <numOfProjectiles>5__2;

		[Token(Token = "0x17000513")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002AA8")]
			[Address(RVA = "0xDB8450", Offset = "0xDB8450", VA = "0xDB8450", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000514")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002AAA")]
			[Address(RVA = "0xDB84B8", Offset = "0xDB84B8", VA = "0xDB84B8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002AA5")]
		[Address(RVA = "0xDB7B24", Offset = "0xDB7B24", VA = "0xDB7B24")]
		[DebuggerHidden]
		public <castWalls>d__45(int <>1__state)
		{
		}

		[Token(Token = "0x6002AA6")]
		[Address(RVA = "0xDB815C", Offset = "0xDB815C", VA = "0xDB815C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002AA7")]
		[Address(RVA = "0xDB8160", Offset = "0xDB8160", VA = "0xDB8160", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002AA9")]
		[Address(RVA = "0xDB8458", Offset = "0xDB8458", VA = "0xDB8458", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000721")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B80B4", Offset = "0x8B80B4")]
	private sealed class <shootProjectile>d__47 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002423")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002424")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002425")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject enemyProjectile;

		[Token(Token = "0x4002426")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public EnemyDragonBoss <>4__this;

		[Token(Token = "0x4002427")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float delay;

		[Token(Token = "0x4002428")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private GameObject <proj>5__2;

		[Token(Token = "0x4002429")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Rigidbody <projRB>5__3;

		[Token(Token = "0x17000515")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002AAE")]
			[Address(RVA = "0xDBA228", Offset = "0xDBA228", VA = "0xDBA228", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000516")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002AB0")]
			[Address(RVA = "0xDBA290", Offset = "0xDBA290", VA = "0xDBA290", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002AAB")]
		[Address(RVA = "0xDB7BE0", Offset = "0xDB7BE0", VA = "0xDB7BE0")]
		[DebuggerHidden]
		public <shootProjectile>d__47(int <>1__state)
		{
		}

		[Token(Token = "0x6002AAC")]
		[Address(RVA = "0xDB9EFC", Offset = "0xDB9EFC", VA = "0xDB9EFC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002AAD")]
		[Address(RVA = "0xDB9F00", Offset = "0xDB9F00", VA = "0xDB9F00", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002AAF")]
		[Address(RVA = "0xDBA230", Offset = "0xDBA230", VA = "0xDBA230", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000998")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public Transform[] projectilePoints;

	[Token(Token = "0x4000999")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public GameObject spinprojectile;

	[Token(Token = "0x400099A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public GameObject wallProjectile;

	[Token(Token = "0x400099B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public GameObject wallProjectile2;

	[Token(Token = "0x400099C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public float projSpeed;

	[Token(Token = "0x400099D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public GameObject spawnParticle;

	[Token(Token = "0x400099E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public GameObject healParticlePrefab;

	[Token(Token = "0x400099F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public Animator movementAnimator;

	[Token(Token = "0x40009A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public GameObject dragonLaser;

	[Token(Token = "0x40009A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public GameObject fireBreathAttack;

	[Token(Token = "0x40009A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public GameObject fireShield;

	[Token(Token = "0x40009A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public GameObject transformParticle;

	[Token(Token = "0x40009A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public Transform[] shieldPoints;

	[Token(Token = "0x40009A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public EnemyParent catalystSpawn;

	[Token(Token = "0x40009A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public string[] dialogueLines;

	[Token(Token = "0x40009A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public BattleDialogueBox dialogueBox;

	[Token(Token = "0x40009A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	public GlitchEffects ghostBuff;

	[Token(Token = "0x40009A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public GameObject humanModel;

	[Token(Token = "0x40009AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	public SkinnedMeshRenderer dragonModel;

	[Token(Token = "0x40009AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	public AudioClip finalSong;

	[Token(Token = "0x40009AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	public AudioSource audioSource1;

	[Token(Token = "0x40009AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	public int turnCount;

	[Token(Token = "0x40009AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C4")]
	public int turnsSinceHeal;

	[Token(Token = "0x40009AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	private bool enemySummoned;

	[Token(Token = "0x40009B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	public AudioClip[] dialogueClips;

	[Token(Token = "0x40009B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	public AudioClip[] attackClips;

	[Token(Token = "0x40009B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	private AudioClip roarClip;

	[Token(Token = "0x40009B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	public DragonPhase dragonPhase;

	[Token(Token = "0x40009B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1EC")]
	private UnityEngine.Vector3 originalLaunchPos;

	[Token(Token = "0x6000A4D")]
	[Address(RVA = "0xDB6D8C", Offset = "0xDB6D8C", VA = "0xDB6D8C", Slot = "5")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000A4E")]
	[Address(RVA = "0xDB6DE8", Offset = "0xDB6DE8", VA = "0xDB6DE8", Slot = "6")]
	protected override void Update()
	{
	}

	[Token(Token = "0x6000A4F")]
	[Address(RVA = "0xDB6F04", Offset = "0xDB6F04", VA = "0xDB6F04")]
	private void spawnEnemy()
	{
	}

	[Token(Token = "0x6000A50")]
	[Address(RVA = "0xDB6FA4", Offset = "0xDB6FA4", VA = "0xDB6FA4", Slot = "12")]
	public override void enemyAttack(bool endTurnAfter = true)
	{
	}

	[Token(Token = "0x6000A51")]
	[Address(RVA = "0xDB7224", Offset = "0xDB7224", VA = "0xDB7224")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C518C", Offset = "0x8C518C")]
	protected IEnumerator firstAttack()
	{
		return null;
	}

	[Token(Token = "0x6000A52")]
	[Address(RVA = "0xDB6E94", Offset = "0xDB6E94", VA = "0xDB6E94")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C51F0", Offset = "0x8C51F0")]
	protected IEnumerator endBattleTransform()
	{
		return null;
	}

	[Token(Token = "0x6000A53")]
	[Address(RVA = "0xDB7294", Offset = "0xDB7294", VA = "0xDB7294")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C5254", Offset = "0x8C5254")]
	protected IEnumerator secondAttack()
	{
		return null;
	}

	[Token(Token = "0x6000A54")]
	[Address(RVA = "0xDB7374", Offset = "0xDB7374", VA = "0xDB7374")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C52B8", Offset = "0x8C52B8")]
	protected IEnumerator spawnCatalystEnemy()
	{
		return null;
	}

	[Token(Token = "0x6000A55")]
	[Address(RVA = "0xDB7654", Offset = "0xDB7654", VA = "0xDB7654", Slot = "13")]
	public override void playHurtAnimation()
	{
	}

	[Token(Token = "0x6000A56")]
	[Address(RVA = "0xDB7738", Offset = "0xDB7738", VA = "0xDB7738", Slot = "10")]
	public override void damageEnemy(int amount, bool crit, int combo, bool isPhysical = false)
	{
	}

	[Token(Token = "0x6000A57")]
	[Address(RVA = "0xDB7764", Offset = "0xDB7764", VA = "0xDB7764")]
	public void playDialogue(string dialogue)
	{
	}

	[Token(Token = "0x6000A58")]
	[Address(RVA = "0xDB7304", Offset = "0xDB7304", VA = "0xDB7304")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C531C", Offset = "0x8C531C")]
	protected IEnumerator healSelf()
	{
		return null;
	}

	[Token(Token = "0x6000A59")]
	[Address(RVA = "0xDB73E4", Offset = "0xDB73E4", VA = "0xDB73E4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C5380", Offset = "0x8C5380")]
	protected IEnumerator destroyStageAttack()
	{
		return null;
	}

	[Token(Token = "0x6000A5A")]
	[Address(RVA = "0xDB7454", Offset = "0xDB7454", VA = "0xDB7454")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C53E4", Offset = "0x8C53E4")]
	protected IEnumerator fireBreath()
	{
		return null;
	}

	[Token(Token = "0x6000A5B")]
	[Address(RVA = "0xDB74C4", Offset = "0xDB74C4", VA = "0xDB74C4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C5448", Offset = "0x8C5448")]
	protected IEnumerator castBulletHell()
	{
		return null;
	}

	[Token(Token = "0x6000A5C")]
	[Address(RVA = "0xDB7534", Offset = "0xDB7534", VA = "0xDB7534")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C54AC", Offset = "0x8C54AC")]
	protected IEnumerator castWalls()
	{
		return null;
	}

	[Token(Token = "0x6000A5D")]
	[Address(RVA = "0xDB7B50", Offset = "0xDB7B50", VA = "0xDB7B50", Slot = "7")]
	public override void killSelf()
	{
	}

	[Token(Token = "0x6000A5E")]
	[Address(RVA = "0xDB7B54", Offset = "0xDB7B54", VA = "0xDB7B54")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C5510", Offset = "0x8C5510")]
	protected IEnumerator shootProjectile(GameObject enemyProjectile, float delay)
	{
		return null;
	}

	[Token(Token = "0x6000A5F")]
	[Address(RVA = "0xDB7C0C", Offset = "0xDB7C0C", VA = "0xDB7C0C")]
	public EnemyDragonBoss()
	{
	}

	[Token(Token = "0x6000A60")]
	[Address(RVA = "0xDB7C1C", Offset = "0xDB7C1C", VA = "0xDB7C1C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C5574", Offset = "0x8C5574")]
	[DebuggerHidden]
	private void <>n__0()
	{
	}
}
[Token(Token = "0x2000181")]
public class TrailRendHelper : MonoBehaviour
{
	[Token(Token = "0x40009B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform[] points;

	[Token(Token = "0x40009B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public LineRenderer lineRend;

	[Token(Token = "0x6000A61")]
	[Address(RVA = "0x1A5D348", Offset = "0x1A5D348", VA = "0x1A5D348")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A62")]
	[Address(RVA = "0x1A5D3E4", Offset = "0x1A5D3E4", VA = "0x1A5D3E4")]
	public TrailRendHelper()
	{
	}
}
[Token(Token = "0x2000182")]
public class EnemyModifier : MonoBehaviour
{
	[Token(Token = "0x40009B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string namePrefix;

	[Token(Token = "0x40009B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float projSpeed;

	[Token(Token = "0x40009B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float moveSpeed;

	[Token(Token = "0x40009BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float scale;

	[Token(Token = "0x40009BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float damage;

	[Token(Token = "0x40009BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float health;

	[Token(Token = "0x40009BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float wealth;

	[Token(Token = "0x40009BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float exp;

	[Token(Token = "0x40009BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Material material;

	[Token(Token = "0x40009C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GlitchEffects startGlitch;

	[Token(Token = "0x40009C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AudioClip[] voiceClip;

	[Token(Token = "0x6000A63")]
	[Address(RVA = "0xFE2524", Offset = "0xFE2524", VA = "0xFE2524")]
	public void applyModifier(EnemyParent enemy)
	{
	}

	[Token(Token = "0x6000A64")]
	[Address(RVA = "0xFE28FC", Offset = "0xFE28FC", VA = "0xFE28FC")]
	public EnemyModifier()
	{
	}
}
[Token(Token = "0x2000183")]
public class EnemyTurret : EnemyParent
{
	[Token(Token = "0x2000722")]
	public enum TurretMode
	{
		[Token(Token = "0x400242B")]
		circleFire,
		[Token(Token = "0x400242C")]
		shotgun
	}

	[Token(Token = "0x2000723")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B80C4", Offset = "0x8B80C4")]
	private sealed class <circleAttack>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400242D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400242E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400242F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EnemyTurret <>4__this;

		[Token(Token = "0x17000517")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002AB4")]
			[Address(RVA = "0xC498F8", Offset = "0xC498F8", VA = "0xC498F8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000518")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002AB6")]
			[Address(RVA = "0xC49960", Offset = "0xC49960", VA = "0xC49960", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002AB1")]
		[Address(RVA = "0xC49044", Offset = "0xC49044", VA = "0xC49044")]
		[DebuggerHidden]
		public <circleAttack>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x6002AB2")]
		[Address(RVA = "0xC4962C", Offset = "0xC4962C", VA = "0xC4962C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002AB3")]
		[Address(RVA = "0xC49630", Offset = "0xC49630", VA = "0xC49630", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002AB5")]
		[Address(RVA = "0xC49900", Offset = "0xC49900", VA = "0xC49900", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000724")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B80D4", Offset = "0x8B80D4")]
	private sealed class <healAllies>d__13 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002430")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002431")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002432")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EnemyTurret <>4__this;

		[Token(Token = "0x17000519")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002ABA")]
			[Address(RVA = "0xC49D10", Offset = "0xC49D10", VA = "0xC49D10", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700051A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002ABC")]
			[Address(RVA = "0xC49D78", Offset = "0xC49D78", VA = "0xC49D78", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002AB7")]
		[Address(RVA = "0xC49070", Offset = "0xC49070", VA = "0xC49070")]
		[DebuggerHidden]
		public <healAllies>d__13(int <>1__state)
		{
		}

		[Token(Token = "0x6002AB8")]
		[Address(RVA = "0xC49968", Offset = "0xC49968", VA = "0xC49968", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002AB9")]
		[Address(RVA = "0xC4996C", Offset = "0xC4996C", VA = "0xC4996C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002ABB")]
		[Address(RVA = "0xC49D18", Offset = "0xC49D18", VA = "0xC49D18", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000725")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B80E4", Offset = "0x8B80E4")]
	private sealed class <shotgunAttack>d__14 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002433")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002434")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002435")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EnemyTurret <>4__this;

		[Token(Token = "0x1700051B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002AC0")]
			[Address(RVA = "0xC4A3B0", Offset = "0xC4A3B0", VA = "0xC4A3B0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700051C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002AC2")]
			[Address(RVA = "0xC4A418", Offset = "0xC4A418", VA = "0xC4A418", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002ABD")]
		[Address(RVA = "0xC4909C", Offset = "0xC4909C", VA = "0xC4909C")]
		[DebuggerHidden]
		public <shotgunAttack>d__14(int <>1__state)
		{
		}

		[Token(Token = "0x6002ABE")]
		[Address(RVA = "0xC4A010", Offset = "0xC4A010", VA = "0xC4A010", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002ABF")]
		[Address(RVA = "0xC4A014", Offset = "0xC4A014", VA = "0xC4A014", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002AC1")]
		[Address(RVA = "0xC4A3B8", Offset = "0xC4A3B8", VA = "0xC4A3B8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000726")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B80F4", Offset = "0x8B80F4")]
	private sealed class <shootProjectile>d__20 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002436")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002437")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002438")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject proj;

		[Token(Token = "0x4002439")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public EnemyTurret <>4__this;

		[Token(Token = "0x400243A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Rigidbody <projRB>5__2;

		[Token(Token = "0x1700051D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002AC6")]
			[Address(RVA = "0xC49FA0", Offset = "0xC49FA0", VA = "0xC49FA0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700051E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002AC8")]
			[Address(RVA = "0xC4A008", Offset = "0xC4A008", VA = "0xC4A008", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002AC3")]
		[Address(RVA = "0xC495E4", Offset = "0xC495E4", VA = "0xC495E4")]
		[DebuggerHidden]
		public <shootProjectile>d__20(int <>1__state)
		{
		}

		[Token(Token = "0x6002AC4")]
		[Address(RVA = "0xC49D80", Offset = "0xC49D80", VA = "0xC49D80", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002AC5")]
		[Address(RVA = "0xC49D84", Offset = "0xC49D84", VA = "0xC49D84", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002AC7")]
		[Address(RVA = "0xC49FA8", Offset = "0xC49FA8", VA = "0xC49FA8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40009C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public GameObject enemyProjectile;

	[Token(Token = "0x40009C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public GameObject enemyProjectileSineX;

	[Token(Token = "0x40009C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public GameObject enemyProjectileSineY;

	[Token(Token = "0x40009C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public GameObject launchParticle;

	[Token(Token = "0x40009C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public GameObject healParticle;

	[Token(Token = "0x40009C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public float projSpeed;

	[Token(Token = "0x40009C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
	public int shotgunProjectiles;

	[Token(Token = "0x40009C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public GlitchEffects buffGlitch;

	[Token(Token = "0x40009CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public int healValue;

	[Token(Token = "0x40009CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
	public TurretMode turretMode;

	[Token(Token = "0x6000A65")]
	[Address(RVA = "0xC48E70", Offset = "0xC48E70", VA = "0xC48E70", Slot = "12")]
	public override void enemyAttack(bool endTurnAfter = true)
	{
	}

	[Token(Token = "0x6000A66")]
	[Address(RVA = "0xC48EF4", Offset = "0xC48EF4", VA = "0xC48EF4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C55AC", Offset = "0x8C55AC")]
	private IEnumerator circleAttack()
	{
		return null;
	}

	[Token(Token = "0x6000A67")]
	[Address(RVA = "0xC48F64", Offset = "0xC48F64", VA = "0xC48F64")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C5610", Offset = "0x8C5610")]
	private IEnumerator healAllies()
	{
		return null;
	}

	[Token(Token = "0x6000A68")]
	[Address(RVA = "0xC48FD4", Offset = "0xC48FD4", VA = "0xC48FD4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C5674", Offset = "0x8C5674")]
	private IEnumerator shotgunAttack()
	{
		return null;
	}

	[Token(Token = "0x6000A69")]
	[Address(RVA = "0xC490C8", Offset = "0xC490C8", VA = "0xC490C8", Slot = "5")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000A6A")]
	[Address(RVA = "0xC490D0", Offset = "0xC490D0", VA = "0xC490D0", Slot = "6")]
	protected override void Update()
	{
	}

	[Token(Token = "0x6000A6B")]
	[Address(RVA = "0xC490D8", Offset = "0xC490D8", VA = "0xC490D8", Slot = "7")]
	public override void killSelf()
	{
	}

	[Token(Token = "0x6000A6C")]
	[Address(RVA = "0xC49164", Offset = "0xC49164", VA = "0xC49164", Slot = "13")]
	public override void playHurtAnimation()
	{
	}

	[Token(Token = "0x6000A6D")]
	[Address(RVA = "0xC491C0", Offset = "0xC491C0", VA = "0xC491C0")]
	public void instantiateInCircle(GameObject obj, UnityEngine.Vector3 location, int howMany)
	{
	}

	[Token(Token = "0x6000A6E")]
	[Address(RVA = "0xC49568", Offset = "0xC49568", VA = "0xC49568")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C56D8", Offset = "0x8C56D8")]
	protected IEnumerator shootProjectile(GameObject proj, Transform launchTrans)
	{
		return null;
	}

	[Token(Token = "0x6000A6F")]
	[Address(RVA = "0xC49610", Offset = "0xC49610", VA = "0xC49610")]
	public EnemyTurret()
	{
	}
}
[Token(Token = "0x2000184")]
public class EnemyAberration1 : EnemyParent
{
	[Token(Token = "0x2000727")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B8104", Offset = "0x8B8104")]
	private sealed class <castSpinWall>d__19 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400243B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400243C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400243D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EnemyAberration1 <>4__this;

		[Token(Token = "0x400243E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <timeBetweenWalls>5__2;

		[Token(Token = "0x400243F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int <i>5__3;

		[Token(Token = "0x1700051F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002ACC")]
			[Address(RVA = "0xBF5908", Offset = "0xBF5908", VA = "0xBF5908", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000520")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002ACE")]
			[Address(RVA = "0xBF5970", Offset = "0xBF5970", VA = "0xBF5970", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002AC9")]
		[Address(RVA = "0xBF4814", Offset = "0xBF4814", VA = "0xBF4814")]
		[DebuggerHidden]
		public <castSpinWall>d__19(int <>1__state)
		{
		}

		[Token(Token = "0x6002ACA")]
		[Address(RVA = "0xBF55F0", Offset = "0xBF55F0", VA = "0xBF55F0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002ACB")]
		[Address(RVA = "0xBF55F4", Offset = "0xBF55F4", VA = "0xBF55F4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002ACD")]
		[Address(RVA = "0xBF5910", Offset = "0xBF5910", VA = "0xBF5910", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000728")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B8114", Offset = "0x8B8114")]
	private sealed class <CastSpinLaser>d__21 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002440")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002441")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002442")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EnemyAberration1 <>4__this;

		[Token(Token = "0x4002443")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<GameObject> <allLasers>5__2;

		[Token(Token = "0x4002444")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <maxTurnTime>5__3;

		[Token(Token = "0x4002445")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <time>5__4;

		[Token(Token = "0x4002446")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float <randX>5__5;

		[Token(Token = "0x4002447")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float <randY>5__6;

		[Token(Token = "0x17000521")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002AD2")]
			[Address(RVA = "0xBF5580", Offset = "0xBF5580", VA = "0xBF5580", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000522")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002AD4")]
			[Address(RVA = "0xBF55E8", Offset = "0xBF55E8", VA = "0xBF55E8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002ACF")]
		[Address(RVA = "0xBF4840", Offset = "0xBF4840", VA = "0xBF4840")]
		[DebuggerHidden]
		public <CastSpinLaser>d__21(int <>1__state)
		{
		}

		[Token(Token = "0x6002AD0")]
		[Address(RVA = "0xBF488C", Offset = "0xBF488C", VA = "0xBF488C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002AD1")]
		[Address(RVA = "0xBF4890", Offset = "0xBF4890", VA = "0xBF4890", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002AD3")]
		[Address(RVA = "0xBF5588", Offset = "0xBF5588", VA = "0xBF5588", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40009CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public GameObject laserParent;

	[Token(Token = "0x40009CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public GameObject laserPrefab;

	[Token(Token = "0x40009CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public GameObject shields;

	[Token(Token = "0x40009CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public EnemySpinWall spinWallprefab;

	[Token(Token = "0x40009D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	[SerializeField]
	private float sineAmplitude;

	[Token(Token = "0x40009D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
	public float sinePeriod;

	[Token(Token = "0x40009D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public float projSpeed;

	[Token(Token = "0x40009D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
	public int numOfSpinWalls;

	[Token(Token = "0x40009D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private UnityEngine.Vector3 spawnPos;

	[Token(Token = "0x40009D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
	public bool sineX;

	[Token(Token = "0x40009D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private float elapsedTime;

	[Token(Token = "0x40009D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
	private bool startedAttack;

	[Token(Token = "0x6000A70")]
	[Address(RVA = "0xBF3E74", Offset = "0xBF3E74", VA = "0xBF3E74", Slot = "5")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000A71")]
	[Address(RVA = "0xBF403C", Offset = "0xBF403C", VA = "0xBF403C", Slot = "6")]
	protected override void Update()
	{
	}

	[Token(Token = "0x6000A72")]
	[Address(RVA = "0xBF41D8", Offset = "0xBF41D8", VA = "0xBF41D8")]
	public void toggleShieldsOn()
	{
	}

	[Token(Token = "0x6000A73")]
	[Address(RVA = "0xBF426C", Offset = "0xBF426C", VA = "0xBF426C")]
	public void toggleShieldsOff()
	{
	}

	[Token(Token = "0x6000A74")]
	[Address(RVA = "0xBF4300", Offset = "0xBF4300", VA = "0xBF4300", Slot = "12")]
	public override void enemyAttack(bool endTurnAfter = true)
	{
	}

	[Token(Token = "0x6000A75")]
	[Address(RVA = "0xBF454C", Offset = "0xBF454C", VA = "0xBF454C", Slot = "7")]
	public override void killSelf()
	{
	}

	[Token(Token = "0x6000A76")]
	[Address(RVA = "0xBF47AC", Offset = "0xBF47AC", VA = "0xBF47AC", Slot = "13")]
	public override void playHurtAnimation()
	{
	}

	[Token(Token = "0x6000A77")]
	[Address(RVA = "0xBF44DC", Offset = "0xBF44DC", VA = "0xBF44DC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C573C", Offset = "0x8C573C")]
	private IEnumerator castSpinWall()
	{
		return null;
	}

	[Token(Token = "0x6000A78")]
	[Address(RVA = "0xBF4078", Offset = "0xBF4078", VA = "0xBF4078")]
	private void SmoothSineWave()
	{
	}

	[Token(Token = "0x6000A79")]
	[Address(RVA = "0xBF446C", Offset = "0xBF446C", VA = "0xBF446C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C57A0", Offset = "0x8C57A0")]
	private IEnumerator CastSpinLaser()
	{
		return null;
	}

	[Token(Token = "0x6000A7A")]
	[Address(RVA = "0xBF486C", Offset = "0xBF486C", VA = "0xBF486C")]
	public EnemyAberration1()
	{
	}
}
[Token(Token = "0x2000185")]
public class EnemyCaster : EnemyParent
{
	[Token(Token = "0x2000729")]
	public enum ShieldType
	{
		[Token(Token = "0x4002449")]
		rotate,
		[Token(Token = "0x400244A")]
		rotateAndScale
	}

	[Token(Token = "0x200072A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B8124", Offset = "0x8B8124")]
	private sealed class <castPunchWall>d__20 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400244B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400244C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400244D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EnemyCaster <>4__this;

		[Token(Token = "0x17000523")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002AD8")]
			[Address(RVA = "0xBF93A4", Offset = "0xBF93A4", VA = "0xBF93A4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000524")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002ADA")]
			[Address(RVA = "0xBF940C", Offset = "0xBF940C", VA = "0xBF940C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002AD5")]
		[Address(RVA = "0xBF8548", Offset = "0xBF8548", VA = "0xBF8548")]
		[DebuggerHidden]
		public <castPunchWall>d__20(int <>1__state)
		{
		}

		[Token(Token = "0x6002AD6")]
		[Address(RVA = "0xBF91D8", Offset = "0xBF91D8", VA = "0xBF91D8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002AD7")]
		[Address(RVA = "0xBF91DC", Offset = "0xBF91DC", VA = "0xBF91DC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002AD9")]
		[Address(RVA = "0xBF93AC", Offset = "0xBF93AC", VA = "0xBF93AC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200072B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B8134", Offset = "0x8B8134")]
	private sealed class <shootProjectile>d__21 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400244E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400244F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002450")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EnemyCaster <>4__this;

		[Token(Token = "0x4002451")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GameObject <proj>5__2;

		[Token(Token = "0x4002452")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Rigidbody <projRB>5__3;

		[Token(Token = "0x17000525")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002ADE")]
			[Address(RVA = "0xDAC628", Offset = "0xDAC628", VA = "0xDAC628", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000526")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002AE0")]
			[Address(RVA = "0xDAC690", Offset = "0xDAC690", VA = "0xDAC690", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002ADB")]
		[Address(RVA = "0xDAC2F8", Offset = "0xDAC2F8", VA = "0xDAC2F8")]
		[DebuggerHidden]
		public <shootProjectile>d__21(int <>1__state)
		{
		}

		[Token(Token = "0x6002ADC")]
		[Address(RVA = "0xDAC324", Offset = "0xDAC324", VA = "0xDAC324", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002ADD")]
		[Address(RVA = "0xDAC328", Offset = "0xDAC328", VA = "0xDAC328", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002ADF")]
		[Address(RVA = "0xDAC630", Offset = "0xDAC630", VA = "0xDAC630", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200072C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B8144", Offset = "0x8B8144")]
	private sealed class <castRapidFire>d__22 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002453")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002454")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002455")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EnemyCaster <>4__this;

		[Token(Token = "0x4002456")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <numOfProjectiles>5__2;

		[Token(Token = "0x4002457")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <aimAccuracy>5__3;

		[Token(Token = "0x17000527")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002AE4")]
			[Address(RVA = "0xBF9718", Offset = "0xBF9718", VA = "0xBF9718", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000528")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002AE6")]
			[Address(RVA = "0xBF9780", Offset = "0xBF9780", VA = "0xBF9780", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002AE1")]
		[Address(RVA = "0xBF85E4", Offset = "0xBF85E4", VA = "0xBF85E4")]
		[DebuggerHidden]
		public <castRapidFire>d__22(int <>1__state)
		{
		}

		[Token(Token = "0x6002AE2")]
		[Address(RVA = "0xBF9414", Offset = "0xBF9414", VA = "0xBF9414", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002AE3")]
		[Address(RVA = "0xBF9418", Offset = "0xBF9418", VA = "0xBF9418", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002AE5")]
		[Address(RVA = "0xBF9720", Offset = "0xBF9720", VA = "0xBF9720", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200072D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B8154", Offset = "0x8B8154")]
	private sealed class <castBulletHell>d__23 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002458")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002459")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400245A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EnemyCaster <>4__this;

		[Token(Token = "0x400245B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <numOfProjectiles>5__2;

		[Token(Token = "0x400245C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <aimAccuracy>5__3;

		[Token(Token = "0x17000529")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002AEA")]
			[Address(RVA = "0xBF8C78", Offset = "0xBF8C78", VA = "0xBF8C78", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700052A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002AEC")]
			[Address(RVA = "0xBF8CE0", Offset = "0xBF8CE0", VA = "0xBF8CE0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002AE7")]
		[Address(RVA = "0xBF8610", Offset = "0xBF8610", VA = "0xBF8610")]
		[DebuggerHidden]
		public <castBulletHell>d__23(int <>1__state)
		{
		}

		[Token(Token = "0x6002AE8")]
		[Address(RVA = "0xBF896C", Offset = "0xBF896C", VA = "0xBF896C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002AE9")]
		[Address(RVA = "0xBF8970", Offset = "0xBF8970", VA = "0xBF8970", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002AEB")]
		[Address(RVA = "0xBF8C80", Offset = "0xBF8C80", VA = "0xBF8C80", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200072E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B8164", Offset = "0x8B8164")]
	private sealed class <castShadowWall>d__24 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400245D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400245E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400245F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EnemyCaster <>4__this;

		[Token(Token = "0x4002460")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool randomDir;

		[Token(Token = "0x4002461")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private GameObject <shadowWallInst>5__2;

		[Token(Token = "0x1700052B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002AF0")]
			[Address(RVA = "0xDABDDC", Offset = "0xDABDDC", VA = "0xDABDDC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700052C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002AF2")]
			[Address(RVA = "0xDABE44", Offset = "0xDABE44", VA = "0xDABE44", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002AED")]
		[Address(RVA = "0xDAB7EC", Offset = "0xDAB7EC", VA = "0xDAB7EC")]
		[DebuggerHidden]
		public <castShadowWall>d__24(int <>1__state)
		{
		}

		[Token(Token = "0x6002AEE")]
		[Address(RVA = "0xDAB818", Offset = "0xDAB818", VA = "0xDAB818", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002AEF")]
		[Address(RVA = "0xDAB81C", Offset = "0xDAB81C", VA = "0xDAB81C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002AF1")]
		[Address(RVA = "0xDABDE4", Offset = "0xDABDE4", VA = "0xDABDE4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200072F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B8174", Offset = "0x8B8174")]
	private sealed class <castOrbWall>d__26 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002462")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002463")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002464")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EnemyCaster <>4__this;

		[Token(Token = "0x4002465")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GameObject <proj>5__2;

		[Token(Token = "0x4002466")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Rigidbody <projRB>5__3;

		[Token(Token = "0x1700052D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002AF6")]
			[Address(RVA = "0xBF9168", Offset = "0xBF9168", VA = "0xBF9168", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700052E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002AF8")]
			[Address(RVA = "0xBF91D0", Offset = "0xBF91D0", VA = "0xBF91D0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002AF3")]
		[Address(RVA = "0xBF863C", Offset = "0xBF863C", VA = "0xBF863C")]
		[DebuggerHidden]
		public <castOrbWall>d__26(int <>1__state)
		{
		}

		[Token(Token = "0x6002AF4")]
		[Address(RVA = "0xBF8CE8", Offset = "0xBF8CE8", VA = "0xBF8CE8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002AF5")]
		[Address(RVA = "0xBF8CEC", Offset = "0xBF8CEC", VA = "0xBF8CEC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002AF7")]
		[Address(RVA = "0xBF9170", Offset = "0xBF9170", VA = "0xBF9170", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000730")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B8184", Offset = "0x8B8184")]
	private sealed class <castVBeam>d__27 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002467")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002468")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002469")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EnemyCaster <>4__this;

		[Token(Token = "0x400246A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GameObject <proj>5__2;

		[Token(Token = "0x1700052F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002AFC")]
			[Address(RVA = "0xDAC288", Offset = "0xDAC288", VA = "0xDAC288", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000530")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002AFE")]
			[Address(RVA = "0xDAC2F0", Offset = "0xDAC2F0", VA = "0xDAC2F0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002AF9")]
		[Address(RVA = "0xDABE4C", Offset = "0xDABE4C", VA = "0xDABE4C")]
		[DebuggerHidden]
		public <castVBeam>d__27(int <>1__state)
		{
		}

		[Token(Token = "0x6002AFA")]
		[Address(RVA = "0xDABE78", Offset = "0xDABE78", VA = "0xDABE78", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002AFB")]
		[Address(RVA = "0xDABE7C", Offset = "0xDABE7C", VA = "0xDABE7C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002AFD")]
		[Address(RVA = "0xDAC290", Offset = "0xDAC290", VA = "0xDAC290", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000731")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B8194", Offset = "0x8B8194")]
	private sealed class <waitForNextAttack>d__28 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400246B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400246C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400246D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EnemyCaster <>4__this;

		[Token(Token = "0x17000531")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002B02")]
			[Address(RVA = "0xDAC77C", Offset = "0xDAC77C", VA = "0xDAC77C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000532")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002B04")]
			[Address(RVA = "0xDAC7E4", Offset = "0xDAC7E4", VA = "0xDAC7E4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002AFF")]
		[Address(RVA = "0xDAC698", Offset = "0xDAC698", VA = "0xDAC698")]
		[DebuggerHidden]
		public <waitForNextAttack>d__28(int <>1__state)
		{
		}

		[Token(Token = "0x6002B00")]
		[Address(RVA = "0xDAC6C4", Offset = "0xDAC6C4", VA = "0xDAC6C4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002B01")]
		[Address(RVA = "0xDAC6C8", Offset = "0xDAC6C8", VA = "0xDAC6C8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002B03")]
		[Address(RVA = "0xDAC784", Offset = "0xDAC784", VA = "0xDAC784", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40009D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BC1D4", Offset = "0x8BC1D4")]
	public GameObject enemyProjectile;

	[Token(Token = "0x40009D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public GameObject enemyOrbWall;

	[Token(Token = "0x40009DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public GameObject spawnParticle;

	[Token(Token = "0x40009DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public GameObject shadowWall;

	[Token(Token = "0x40009DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public GameObject shields;

	[Token(Token = "0x40009DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public GameObject verticalBeam;

	[Token(Token = "0x40009DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public GameObject punchWall;

	[Token(Token = "0x40009DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public float projSpeed;

	[Token(Token = "0x40009E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
	public int numOfFastProjectiles;

	[Token(Token = "0x40009E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public int attackRangeLimiter;

	[Token(Token = "0x40009E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
	private bool projectileAimOn;

	[Token(Token = "0x40009E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private float RTMattackTimer;

	[Token(Token = "0x40009E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
	private float RTMattackTimeMax;

	[Token(Token = "0x40009E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public ShieldType shieldType;

	[Token(Token = "0x6000A7B")]
	[Address(RVA = "0xBF7DEC", Offset = "0xBF7DEC", VA = "0xBF7DEC", Slot = "12")]
	public override void enemyAttack(bool endTurnAfter = true)
	{
	}

	[Token(Token = "0x6000A7C")]
	[Address(RVA = "0xBF81E4", Offset = "0xBF81E4", VA = "0xBF81E4", Slot = "6")]
	protected override void Update()
	{
	}

	[Token(Token = "0x6000A7D")]
	[Address(RVA = "0xBF828C", Offset = "0xBF828C", VA = "0xBF828C")]
	public void toggleShieldsOn()
	{
	}

	[Token(Token = "0x6000A7E")]
	[Address(RVA = "0xBF8320", Offset = "0xBF8320", VA = "0xBF8320")]
	public void toggleShieldsOff()
	{
	}

	[Token(Token = "0x6000A7F")]
	[Address(RVA = "0xBF83B4", Offset = "0xBF83B4", VA = "0xBF83B4", Slot = "5")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000A80")]
	[Address(RVA = "0xBF80B8", Offset = "0xBF80B8", VA = "0xBF80B8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C5804", Offset = "0x8C5804")]
	protected IEnumerator castPunchWall()
	{
		return null;
	}

	[Token(Token = "0x6000A81")]
	[Address(RVA = "0xBF8574", Offset = "0xBF8574", VA = "0xBF8574")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C5868", Offset = "0x8C5868")]
	protected IEnumerator shootProjectile()
	{
		return null;
	}

	[Token(Token = "0x6000A82")]
	[Address(RVA = "0xBF7EE4", Offset = "0xBF7EE4", VA = "0xBF7EE4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C58CC", Offset = "0x8C58CC")]
	protected IEnumerator castRapidFire()
	{
		return null;
	}

	[Token(Token = "0x6000A83")]
	[Address(RVA = "0xBF8128", Offset = "0xBF8128", VA = "0xBF8128")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C5930", Offset = "0x8C5930")]
	protected IEnumerator castBulletHell()
	{
		return null;
	}

	[Token(Token = "0x6000A84")]
	[Address(RVA = "0xBF7FC4", Offset = "0xBF7FC4", VA = "0xBF7FC4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C5994", Offset = "0x8C5994")]
	private IEnumerator castShadowWall(bool randomDir = false)
	{
		return null;
	}

	[Token(Token = "0x6000A85")]
	[Address(RVA = "0xBF8198", Offset = "0xBF8198", VA = "0xBF8198")]
	private void doubleShadowWall()
	{
	}

	[Token(Token = "0x6000A86")]
	[Address(RVA = "0xBF7F54", Offset = "0xBF7F54", VA = "0xBF7F54")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C59F8", Offset = "0x8C59F8")]
	private IEnumerator castOrbWall()
	{
		return null;
	}

	[Token(Token = "0x6000A87")]
	[Address(RVA = "0xBF8048", Offset = "0xBF8048", VA = "0xBF8048")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C5A5C", Offset = "0x8C5A5C")]
	private IEnumerator castVBeam()
	{
		return null;
	}

	[Token(Token = "0x6000A88")]
	[Address(RVA = "0xBF8668", Offset = "0xBF8668", VA = "0xBF8668")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C5AC0", Offset = "0x8C5AC0")]
	private IEnumerator waitForNextAttack()
	{
		return null;
	}

	[Token(Token = "0x6000A89")]
	[Address(RVA = "0xBF86D8", Offset = "0xBF86D8", VA = "0xBF86D8", Slot = "7")]
	public override void killSelf()
	{
	}

	[Token(Token = "0x6000A8A")]
	[Address(RVA = "0xBF88E0", Offset = "0xBF88E0", VA = "0xBF88E0", Slot = "13")]
	public override void playHurtAnimation()
	{
	}

	[Token(Token = "0x6000A8B")]
	[Address(RVA = "0xBF893C", Offset = "0xBF893C", VA = "0xBF893C")]
	public EnemyCaster()
	{
	}
}
[Token(Token = "0x2000186")]
public class EnemyCasterTutorial : EnemyCaster
{
	[Token(Token = "0x2000732")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B81A4", Offset = "0x8B81A4")]
	private sealed class <tutAttackTimed>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400246E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400246F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002470")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EnemyCasterTutorial <>4__this;

		[Token(Token = "0x17000533")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002B08")]
			[Address(RVA = "0xDAD360", Offset = "0xDAD360", VA = "0xDAD360", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000534")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002B0A")]
			[Address(RVA = "0xDAD3C8", Offset = "0xDAD3C8", VA = "0xDAD3C8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002B05")]
		[Address(RVA = "0xDACC68", Offset = "0xDACC68", VA = "0xDACC68")]
		[DebuggerHidden]
		public <tutAttackTimed>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x6002B06")]
		[Address(RVA = "0xDAD2A0", Offset = "0xDAD2A0", VA = "0xDAD2A0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002B07")]
		[Address(RVA = "0xDAD2A4", Offset = "0xDAD2A4", VA = "0xDAD2A4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002B09")]
		[Address(RVA = "0xDAD368", Offset = "0xDAD368", VA = "0xDAD368", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000733")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B81B4", Offset = "0x8B81B4")]
	private sealed class <timedPowerGrant>d__11 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002471")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002472")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002473")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EnemyCasterTutorial <>4__this;

		[Token(Token = "0x17000535")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002B0E")]
			[Address(RVA = "0xDAD230", Offset = "0xDAD230", VA = "0xDAD230", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000536")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002B10")]
			[Address(RVA = "0xDAD298", Offset = "0xDAD298", VA = "0xDAD298", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002B0B")]
		[Address(RVA = "0xDACE54", Offset = "0xDACE54", VA = "0xDACE54")]
		[DebuggerHidden]
		public <timedPowerGrant>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x6002B0C")]
		[Address(RVA = "0xDACF08", Offset = "0xDACF08", VA = "0xDACF08", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002B0D")]
		[Address(RVA = "0xDACF0C", Offset = "0xDACF0C", VA = "0xDACF0C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002B0F")]
		[Address(RVA = "0xDAD238", Offset = "0xDAD238", VA = "0xDAD238", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40009E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
	private bool weaponLockTurn;

	[Token(Token = "0x40009E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private int turnNum;

	[Token(Token = "0x40009E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public GameObject arcaxerModuleEffect;

	[Token(Token = "0x40009E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public BattleTutorialPrompts tutorialPromptprefab;

	[Token(Token = "0x40009EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public AudioClip awakenTrack;

	[Token(Token = "0x6000A8C")]
	[Address(RVA = "0xDAC7EC", Offset = "0xDAC7EC", VA = "0xDAC7EC", Slot = "5")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000A8D")]
	[Address(RVA = "0xDAC93C", Offset = "0xDAC93C", VA = "0xDAC93C", Slot = "12")]
	public override void enemyAttack(bool endTurnAfter = true)
	{
	}

	[Token(Token = "0x6000A8E")]
	[Address(RVA = "0xDACB60", Offset = "0xDACB60", VA = "0xDACB60")]
	public void nextAttack()
	{
	}

	[Token(Token = "0x6000A8F")]
	[Address(RVA = "0xDACBF8", Offset = "0xDACBF8", VA = "0xDACBF8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C5B24", Offset = "0x8C5B24")]
	private IEnumerator tutAttackTimed()
	{
		return null;
	}

	[Token(Token = "0x6000A90")]
	[Address(RVA = "0xDACC94", Offset = "0xDACC94", VA = "0xDACC94", Slot = "8")]
	public override void damageEnemy(int amount)
	{
	}

	[Token(Token = "0x6000A91")]
	[Address(RVA = "0xDACCAC", Offset = "0xDACCAC", VA = "0xDACCAC", Slot = "10")]
	public override void damageEnemy(int amount, bool crit, int combo, bool isPhysical)
	{
	}

	[Token(Token = "0x6000A92")]
	[Address(RVA = "0xDACDE4", Offset = "0xDACDE4", VA = "0xDACDE4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C5B88", Offset = "0x8C5B88")]
	private IEnumerator timedPowerGrant()
	{
		return null;
	}

	[Token(Token = "0x6000A93")]
	[Address(RVA = "0xDACE80", Offset = "0xDACE80", VA = "0xDACE80", Slot = "7")]
	public override void killSelf()
	{
	}

	[Token(Token = "0x6000A94")]
	[Address(RVA = "0xDACEF8", Offset = "0xDACEF8", VA = "0xDACEF8")]
	public EnemyCasterTutorial()
	{
	}
}
[Token(Token = "0x2000187")]
public class EnemyClawProjectile : MonoBehaviour
{
	[Token(Token = "0x40009EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int power;

	[Token(Token = "0x40009EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool destroyOnHitOther;

	[Token(Token = "0x6000A95")]
	[Address(RVA = "0xDAD3D0", Offset = "0xDAD3D0", VA = "0xDAD3D0")]
	private void OnTriggerEnter(Collider collision)
	{
	}

	[Token(Token = "0x6000A96")]
	[Address(RVA = "0xDAD66C", Offset = "0xDAD66C", VA = "0xDAD66C")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000A97")]
	[Address(RVA = "0xDAD7F0", Offset = "0xDAD7F0", VA = "0xDAD7F0")]
	public EnemyClawProjectile()
	{
	}
}
[Token(Token = "0x2000188")]
public class EnemyDeathDealer : EnemyParent
{
	[Token(Token = "0x2000734")]
	public enum DealerType
	{
		[Token(Token = "0x4002475")]
		regular,
		[Token(Token = "0x4002476")]
		super
	}

	[Token(Token = "0x2000735")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B81C4", Offset = "0x8B81C4")]
	private sealed class <spikyTimer>d__10 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002477")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002478")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002479")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EnemyDeathDealer <>4__this;

		[Token(Token = "0x400247A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GameObject <ball>5__2;

		[Token(Token = "0x17000537")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002B14")]
			[Address(RVA = "0xDB5068", Offset = "0xDB5068", VA = "0xDB5068", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000538")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002B16")]
			[Address(RVA = "0xDB50D0", Offset = "0xDB50D0", VA = "0xDB50D0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002B11")]
		[Address(RVA = "0xDB4610", Offset = "0xDB4610", VA = "0xDB4610")]
		[DebuggerHidden]
		public <spikyTimer>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x6002B12")]
		[Address(RVA = "0xDB4CF4", Offset = "0xDB4CF4", VA = "0xDB4CF4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002B13")]
		[Address(RVA = "0xDB4CF8", Offset = "0xDB4CF8", VA = "0xDB4CF8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002B15")]
		[Address(RVA = "0xDB5070", Offset = "0xDB5070", VA = "0xDB5070", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000736")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B81D4", Offset = "0x8B81D4")]
	private sealed class <spikyBarrage>d__11 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400247B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400247C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400247D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EnemyDeathDealer <>4__this;

		[Token(Token = "0x400247E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <attackTimeMax>5__2;

		[Token(Token = "0x400247F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int <i>5__3;

		[Token(Token = "0x17000539")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002B1A")]
			[Address(RVA = "0xDB4C84", Offset = "0xDB4C84", VA = "0xDB4C84", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700053A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002B1C")]
			[Address(RVA = "0xDB4CEC", Offset = "0xDB4CEC", VA = "0xDB4CEC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002B17")]
		[Address(RVA = "0xDB463C", Offset = "0xDB463C", VA = "0xDB463C")]
		[DebuggerHidden]
		public <spikyBarrage>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x6002B18")]
		[Address(RVA = "0xDB4838", Offset = "0xDB4838", VA = "0xDB4838", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002B19")]
		[Address(RVA = "0xDB483C", Offset = "0xDB483C", VA = "0xDB483C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002B1B")]
		[Address(RVA = "0xDB4C8C", Offset = "0xDB4C8C", VA = "0xDB4C8C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40009ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	private float flipTimer;

	[Token(Token = "0x40009EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public int numOfBallBarrage;

	[Token(Token = "0x40009EF")]
	private const float flipCD = 1.75f;

	[Token(Token = "0x40009F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public GameObject spikyBall;

	[Token(Token = "0x40009F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public DealerType dealerType;

	[Token(Token = "0x6000A98")]
	[Address(RVA = "0xDB4398", Offset = "0xDB4398", VA = "0xDB4398", Slot = "5")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000A99")]
	[Address(RVA = "0xDB43A0", Offset = "0xDB43A0", VA = "0xDB43A0", Slot = "13")]
	public override void playHurtAnimation()
	{
	}

	[Token(Token = "0x6000A9A")]
	[Address(RVA = "0xDB4408", Offset = "0xDB4408", VA = "0xDB4408", Slot = "6")]
	protected override void Update()
	{
	}

	[Token(Token = "0x6000A9B")]
	[Address(RVA = "0xDB44CC", Offset = "0xDB44CC", VA = "0xDB44CC", Slot = "12")]
	public override void enemyAttack(bool endTurnAfter = true)
	{
	}

	[Token(Token = "0x6000A9C")]
	[Address(RVA = "0xDB4530", Offset = "0xDB4530", VA = "0xDB4530")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C5BEC", Offset = "0x8C5BEC")]
	private IEnumerator spikyTimer()
	{
		return null;
	}

	[Token(Token = "0x6000A9D")]
	[Address(RVA = "0xDB45A0", Offset = "0xDB45A0", VA = "0xDB45A0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C5C50", Offset = "0x8C5C50")]
	private IEnumerator spikyBarrage()
	{
		return null;
	}

	[Token(Token = "0x6000A9E")]
	[Address(RVA = "0xDB4668", Offset = "0xDB4668", VA = "0xDB4668")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000A9F")]
	[Address(RVA = "0xDB4704", Offset = "0xDB4704", VA = "0xDB4704")]
	private void dodgeAttack()
	{
	}

	[Token(Token = "0x6000AA0")]
	[Address(RVA = "0xDB479C", Offset = "0xDB479C", VA = "0xDB479C", Slot = "7")]
	public override void killSelf()
	{
	}

	[Token(Token = "0x6000AA1")]
	[Address(RVA = "0xDB4828", Offset = "0xDB4828", VA = "0xDB4828")]
	public EnemyDeathDealer()
	{
	}
}
[Token(Token = "0x2000189")]
public class EnemyDiscoLaser : MonoBehaviour
{
	[Token(Token = "0x40009F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float damage;

	[Token(Token = "0x40009F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float sphereCastWidth;

	[Token(Token = "0x6000AA2")]
	[Address(RVA = "0xDB50D8", Offset = "0xDB50D8", VA = "0xDB50D8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000AA3")]
	[Address(RVA = "0xDB5238", Offset = "0xDB5238", VA = "0xDB5238")]
	public EnemyDiscoLaser()
	{
	}
}
[Token(Token = "0x200018A")]
public class EnemyEyeLaser : MonoBehaviour
{
	[Token(Token = "0x2000737")]
	public enum LaserMode
	{
		[Token(Token = "0x4002481")]
		straight,
		[Token(Token = "0x4002482")]
		zigZag
	}

	[Token(Token = "0x2000738")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B81E4", Offset = "0x8B81E4")]
	private sealed class <laserZigZag>d__13 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002483")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002484")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002485")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EnemyEyeLaser <>4__this;

		[Token(Token = "0x4002486")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <timer>5__2;

		[Token(Token = "0x4002487")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <timerMax>5__3;

		[Token(Token = "0x4002488")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <sinTime>5__4;

		[Token(Token = "0x4002489")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <height>5__5;

		[Token(Token = "0x400248A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float <timeSinceStart>5__6;

		[Token(Token = "0x400248B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private UnityEngine.Vector3 <pivot>5__7;

		[Token(Token = "0x400248C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private UnityEngine.Vector3 <moveVector>5__8;

		[Token(Token = "0x400248D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private UnityEngine.Vector3 <moveVector2>5__9;

		[Token(Token = "0x400248E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float <speedMod>5__10;

		[Token(Token = "0x1700053B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002B20")]
			[Address(RVA = "0xDBAED4", Offset = "0xDBAED4", VA = "0xDBAED4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700053C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002B22")]
			[Address(RVA = "0xDBAF3C", Offset = "0xDBAF3C", VA = "0xDBAF3C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002B1D")]
		[Address(RVA = "0xDBA884", Offset = "0xDBA884", VA = "0xDBA884")]
		[DebuggerHidden]
		public <laserZigZag>d__13(int <>1__state)
		{
		}

		[Token(Token = "0x6002B1E")]
		[Address(RVA = "0xDBA97C", Offset = "0xDBA97C", VA = "0xDBA97C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002B1F")]
		[Address(RVA = "0xDBA980", Offset = "0xDBA980", VA = "0xDBA980", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002B21")]
		[Address(RVA = "0xDBAEDC", Offset = "0xDBAEDC", VA = "0xDBAEDC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40009F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject spawnObject;

	[Token(Token = "0x40009F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject endObject;

	[Token(Token = "0x40009F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public EnemyParent enemyParent;

	[Token(Token = "0x40009F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public LineRenderer lineRenderer;

	[Token(Token = "0x40009F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int power;

	[Token(Token = "0x40009F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public CapsuleCollider colliderObject;

	[Token(Token = "0x40009FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool endTurnOnComplete;

	[Token(Token = "0x40009FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	public bool oppositeDirection;

	[Token(Token = "0x40009FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float destroyTime;

	[Token(Token = "0x40009FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public LaserMode mode;

	[Token(Token = "0x6000AA4")]
	[Address(RVA = "0xDBA4DC", Offset = "0xDBA4DC", VA = "0xDBA4DC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000AA5")]
	[Address(RVA = "0xDBA770", Offset = "0xDBA770", VA = "0xDBA770")]
	public void startLaser()
	{
	}

	[Token(Token = "0x6000AA6")]
	[Address(RVA = "0xDBA814", Offset = "0xDBA814", VA = "0xDBA814")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C5CB4", Offset = "0x8C5CB4")]
	private IEnumerator laserZigZag()
	{
		return null;
	}

	[Token(Token = "0x6000AA7")]
	[Address(RVA = "0xDBA8B0", Offset = "0xDBA8B0", VA = "0xDBA8B0")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000AA8")]
	[Address(RVA = "0xDBA958", Offset = "0xDBA958", VA = "0xDBA958")]
	public EnemyEyeLaser()
	{
	}
}
[Token(Token = "0x200018B")]
public class EnemyFlyingSphere : EnemyParent
{
	[Token(Token = "0x2000739")]
	public enum Flymode
	{
		[Token(Token = "0x4002490")]
		circle,
		[Token(Token = "0x4002491")]
		pickPoint,
		[Token(Token = "0x4002492")]
		teleport
	}

	[Token(Token = "0x200073A")]
	public enum FlyerType
	{
		[Token(Token = "0x4002494")]
		buggle,
		[Token(Token = "0x4002495")]
		thopter
	}

	[Token(Token = "0x200073B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B81F4", Offset = "0x8B81F4")]
	private sealed class <attackTimer>d__32 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002496")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002497")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002498")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EnemyFlyingSphere <>4__this;

		[Token(Token = "0x4002499")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <attackTimer>5__2;

		[Token(Token = "0x400249A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <attackTimerMax>5__3;

		[Token(Token = "0x1700053D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002B26")]
			[Address(RVA = "0xDBC414", Offset = "0xDBC414", VA = "0xDBC414", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700053E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002B28")]
			[Address(RVA = "0xDBC47C", Offset = "0xDBC47C", VA = "0xDBC47C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002B23")]
		[Address(RVA = "0xDBB804", Offset = "0xDBB804", VA = "0xDBB804")]
		[DebuggerHidden]
		public <attackTimer>d__32(int <>1__state)
		{
		}

		[Token(Token = "0x6002B24")]
		[Address(RVA = "0xDBC1AC", Offset = "0xDBC1AC", VA = "0xDBC1AC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002B25")]
		[Address(RVA = "0xDBC1B0", Offset = "0xDBC1B0", VA = "0xDBC1B0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002B27")]
		[Address(RVA = "0xDBC41C", Offset = "0xDBC41C", VA = "0xDBC41C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200073C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B8204", Offset = "0x8B8204")]
	private sealed class <castShotgunBlast>d__37 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400249B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400249C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400249D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EnemyFlyingSphere <>4__this;

		[Token(Token = "0x400249E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <aimAccuracy>5__2;

		[Token(Token = "0x1700053F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002B2C")]
			[Address(RVA = "0xDBC9BC", Offset = "0xDBC9BC", VA = "0xDBC9BC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000540")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002B2E")]
			[Address(RVA = "0xDBCA24", Offset = "0xDBCA24", VA = "0xDBCA24", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002B29")]
		[Address(RVA = "0xDBBD88", Offset = "0xDBBD88", VA = "0xDBBD88")]
		[DebuggerHidden]
		public <castShotgunBlast>d__37(int <>1__state)
		{
		}

		[Token(Token = "0x6002B2A")]
		[Address(RVA = "0xDBC484", Offset = "0xDBC484", VA = "0xDBC484", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002B2B")]
		[Address(RVA = "0xDBC488", Offset = "0xDBC488", VA = "0xDBC488", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002B2D")]
		[Address(RVA = "0xDBC9C4", Offset = "0xDBC9C4", VA = "0xDBC9C4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200073D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B8214", Offset = "0x8B8214")]
	private sealed class <laserWall>d__38 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400249F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40024A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40024A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EnemyFlyingSphere <>4__this;

		[Token(Token = "0x40024A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private UnityEngine.Vector3 <originalPos>5__2;

		[Token(Token = "0x40024A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Quaternion <originalRot>5__3;

		[Token(Token = "0x40024A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private int <numOfShots>5__4;

		[Token(Token = "0x40024A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int <i>5__5;

		[Token(Token = "0x17000541")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002B32")]
			[Address(RVA = "0xDBD0C8", Offset = "0xDBD0C8", VA = "0xDBD0C8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000542")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002B34")]
			[Address(RVA = "0xDBD130", Offset = "0xDBD130", VA = "0xDBD130", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002B2F")]
		[Address(RVA = "0xDBBDB4", Offset = "0xDBBDB4", VA = "0xDBBDB4")]
		[DebuggerHidden]
		public <laserWall>d__38(int <>1__state)
		{
		}

		[Token(Token = "0x6002B30")]
		[Address(RVA = "0xDBCA2C", Offset = "0xDBCA2C", VA = "0xDBCA2C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002B31")]
		[Address(RVA = "0xDBCA30", Offset = "0xDBCA30", VA = "0xDBCA30", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002B33")]
		[Address(RVA = "0xDBD0D0", Offset = "0xDBD0D0", VA = "0xDBD0D0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200073E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B8224", Offset = "0x8B8224")]
	private sealed class <shootProjectile>d__39 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40024A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40024A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40024A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EnemyFlyingSphere <>4__this;

		[Token(Token = "0x40024A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform launchTrans;

		[Token(Token = "0x40024AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool randomRot;

		[Token(Token = "0x40024AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private GameObject <proj>5__2;

		[Token(Token = "0x40024AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Rigidbody <projRB>5__3;

		[Token(Token = "0x17000543")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002B38")]
			[Address(RVA = "0xDBD49C", Offset = "0xDBD49C", VA = "0xDBD49C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000544")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002B3A")]
			[Address(RVA = "0xDBD504", Offset = "0xDBD504", VA = "0xDBD504", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002B35")]
		[Address(RVA = "0xDBBE68", Offset = "0xDBBE68", VA = "0xDBBE68")]
		[DebuggerHidden]
		public <shootProjectile>d__39(int <>1__state)
		{
		}

		[Token(Token = "0x6002B36")]
		[Address(RVA = "0xDBD138", Offset = "0xDBD138", VA = "0xDBD138", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002B37")]
		[Address(RVA = "0xDBD13C", Offset = "0xDBD13C", VA = "0xDBD13C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002B39")]
		[Address(RVA = "0xDBD4A4", Offset = "0xDBD4A4", VA = "0xDBD4A4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40009FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	private float centerx;

	[Token(Token = "0x40009FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private float centery;

	[Token(Token = "0x4000A00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
	private float centerz;

	[Token(Token = "0x4000A01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private float rad;

	[Token(Token = "0x4000A02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BC20C", Offset = "0x8BC20C")]
	public float attackAnimationSpeed;

	[Token(Token = "0x4000A03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public float dodgeSpeed;

	[Token(Token = "0x4000A04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
	public Flymode flymode;

	[Token(Token = "0x4000A05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private bool isCentering;

	[Token(Token = "0x4000A06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x131")]
	private bool projectileAimOn;

	[Token(Token = "0x4000A07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public Transform[] flyPoints;

	[Token(Token = "0x4000A08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private Transform currentFlyPoint;

	[Token(Token = "0x4000A09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public GameObject enemyProjectile;

	[Token(Token = "0x4000A0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public float projSpeed;

	[Token(Token = "0x4000A0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public GameObject spawnParticle;

	[Token(Token = "0x4000A0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public GameObject teleportParticle;

	[Token(Token = "0x4000A0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public GlitchEffects startGlitch;

	[Token(Token = "0x4000A0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private float dodgeTimer;

	[Token(Token = "0x4000A0F")]
	private const float dodgeCD = 1.75f;

	[Token(Token = "0x4000A10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
	private bool hitPlayer;

	[Token(Token = "0x4000A11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x175")]
	public bool multiAttackOn;

	[Token(Token = "0x4000A12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public FlyerType flyerType;

	[Token(Token = "0x4000A13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public GameObject laserAttack;

	[Token(Token = "0x4000A14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public ChildEnemyTrigger childTrigger;

	[Token(Token = "0x4000A15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public Transform bodyRoot;

	[Token(Token = "0x4000A16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	public float timeBetweenMoves;

	[Token(Token = "0x4000A17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19C")]
	private float timer;

	[Token(Token = "0x4000A18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	private float angle;

	[Token(Token = "0x6000AA9")]
	[Address(RVA = "0xDBAF44", Offset = "0xDBAF44", VA = "0xDBAF44", Slot = "5")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000AAA")]
	[Address(RVA = "0xDBB11C", Offset = "0xDBB11C", VA = "0xDBB11C", Slot = "6")]
	protected override void Update()
	{
	}

	[Token(Token = "0x6000AAB")]
	[Address(RVA = "0xDBB624", Offset = "0xDBB624", VA = "0xDBB624")]
	public void spawnLaserAttack()
	{
	}

	[Token(Token = "0x6000AAC")]
	[Address(RVA = "0xDBB794", Offset = "0xDBB794", VA = "0xDBB794")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C5D18", Offset = "0x8C5D18")]
	private IEnumerator attackTimer()
	{
		return null;
	}

	[Token(Token = "0x6000AAD")]
	[Address(RVA = "0xDBB830", Offset = "0xDBB830", VA = "0xDBB830", Slot = "12")]
	public override void enemyAttack(bool endTurnAfter = true)
	{
	}

	[Token(Token = "0x6000AAE")]
	[Address(RVA = "0xDBBA78", Offset = "0xDBBA78", VA = "0xDBBA78")]
	public void EnemyHit()
	{
	}

	[Token(Token = "0x6000AAF")]
	[Address(RVA = "0xDBBB04", Offset = "0xDBBB04", VA = "0xDBBB04", Slot = "13")]
	public override void playHurtAnimation()
	{
	}

	[Token(Token = "0x6000AB0")]
	[Address(RVA = "0xDBBB84", Offset = "0xDBBB84", VA = "0xDBBB84", Slot = "7")]
	public override void killSelf()
	{
	}

	[Token(Token = "0x6000AB1")]
	[Address(RVA = "0xDBB998", Offset = "0xDBB998", VA = "0xDBB998")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C5D7C", Offset = "0x8C5D7C")]
	protected IEnumerator castShotgunBlast()
	{
		return null;
	}

	[Token(Token = "0x6000AB2")]
	[Address(RVA = "0xDBBA08", Offset = "0xDBBA08", VA = "0xDBBA08")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C5DE0", Offset = "0x8C5DE0")]
	private IEnumerator laserWall()
	{
		return null;
	}

	[Token(Token = "0x6000AB3")]
	[Address(RVA = "0xDBBDE0", Offset = "0xDBBDE0", VA = "0xDBBDE0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C5E44", Offset = "0x8C5E44")]
	protected IEnumerator shootProjectile(Transform launchTrans, bool randomRot = false)
	{
		return null;
	}

	[Token(Token = "0x6000AB4")]
	[Address(RVA = "0xDBBE94", Offset = "0xDBBE94", VA = "0xDBBE94")]
	private void dodgeAttack()
	{
	}

	[Token(Token = "0x6000AB5")]
	[Address(RVA = "0xDBC0D8", Offset = "0xDBC0D8", VA = "0xDBC0D8")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000AB6")]
	[Address(RVA = "0xDBC174", Offset = "0xDBC174", VA = "0xDBC174")]
	public EnemyFlyingSphere()
	{
	}
}
[Token(Token = "0x200018C")]
public class EnemyHomuncBoss : EnemyParent
{
	[Token(Token = "0x200073F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B8234", Offset = "0x8B8234")]
	private sealed class <castDesperationAttack>d__20 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40024AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40024AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40024AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EnemyHomuncBoss <>4__this;

		[Token(Token = "0x17000545")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002B3E")]
			[Address(RVA = "0xFD8930", Offset = "0xFD8930", VA = "0xFD8930", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000546")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002B40")]
			[Address(RVA = "0xFD8998", Offset = "0xFD8998", VA = "0xFD8998", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002B3B")]
		[Address(RVA = "0xFD7564", Offset = "0xFD7564", VA = "0xFD7564")]
		[DebuggerHidden]
		public <castDesperationAttack>d__20(int <>1__state)
		{
		}

		[Token(Token = "0x6002B3C")]
		[Address(RVA = "0xFD84FC", Offset = "0xFD84FC", VA = "0xFD84FC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002B3D")]
		[Address(RVA = "0xFD8500", Offset = "0xFD8500", VA = "0xFD8500", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002B3F")]
		[Address(RVA = "0xFD8938", Offset = "0xFD8938", VA = "0xFD8938", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000740")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B8244", Offset = "0x8B8244")]
	private sealed class <castDoubleLaser>d__21 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40024B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40024B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40024B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EnemyHomuncBoss <>4__this;

		[Token(Token = "0x17000547")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002B44")]
			[Address(RVA = "0xFD8C18", Offset = "0xFD8C18", VA = "0xFD8C18", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000548")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002B46")]
			[Address(RVA = "0xFD8C80", Offset = "0xFD8C80", VA = "0xFD8C80", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002B41")]
		[Address(RVA = "0xFD7590", Offset = "0xFD7590", VA = "0xFD7590")]
		[DebuggerHidden]
		public <castDoubleLaser>d__21(int <>1__state)
		{
		}

		[Token(Token = "0x6002B42")]
		[Address(RVA = "0xFD89A0", Offset = "0xFD89A0", VA = "0xFD89A0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002B43")]
		[Address(RVA = "0xFD89A4", Offset = "0xFD89A4", VA = "0xFD89A4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002B45")]
		[Address(RVA = "0xFD8C20", Offset = "0xFD8C20", VA = "0xFD8C20", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000741")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B8254", Offset = "0x8B8254")]
	private sealed class <firstAttack>d__22 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40024B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40024B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40024B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EnemyHomuncBoss <>4__this;

		[Token(Token = "0x17000549")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002B4A")]
			[Address(RVA = "0xFD9B38", Offset = "0xFD9B38", VA = "0xFD9B38", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700054A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002B4C")]
			[Address(RVA = "0xFD9BA0", Offset = "0xFD9BA0", VA = "0xFD9BA0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002B47")]
		[Address(RVA = "0xFD75BC", Offset = "0xFD75BC", VA = "0xFD75BC")]
		[DebuggerHidden]
		public <firstAttack>d__22(int <>1__state)
		{
		}

		[Token(Token = "0x6002B48")]
		[Address(RVA = "0xFD9A80", Offset = "0xFD9A80", VA = "0xFD9A80", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002B49")]
		[Address(RVA = "0xFD9A84", Offset = "0xFD9A84", VA = "0xFD9A84", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002B4B")]
		[Address(RVA = "0xFD9B40", Offset = "0xFD9B40", VA = "0xFD9B40", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000742")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B8264", Offset = "0x8B8264")]
	private sealed class <laserCircleAttack>d__23 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40024B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40024B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40024B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EnemyHomuncBoss <>4__this;

		[Token(Token = "0x1700054B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002B50")]
			[Address(RVA = "0xFD9D88", Offset = "0xFD9D88", VA = "0xFD9D88", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700054C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002B52")]
			[Address(RVA = "0xFD9DF0", Offset = "0xFD9DF0", VA = "0xFD9DF0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002B4D")]
		[Address(RVA = "0xFD75E8", Offset = "0xFD75E8", VA = "0xFD75E8")]
		[DebuggerHidden]
		public <laserCircleAttack>d__23(int <>1__state)
		{
		}

		[Token(Token = "0x6002B4E")]
		[Address(RVA = "0xFD9BA8", Offset = "0xFD9BA8", VA = "0xFD9BA8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002B4F")]
		[Address(RVA = "0xFD9BAC", Offset = "0xFD9BAC", VA = "0xFD9BAC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002B51")]
		[Address(RVA = "0xFD9D90", Offset = "0xFD9D90", VA = "0xFD9D90", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000743")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B8274", Offset = "0x8B8274")]
	private sealed class <shootProjectile>d__28 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40024B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40024BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40024BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EnemyHomuncBoss <>4__this;

		[Token(Token = "0x40024BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GameObject <proj>5__2;

		[Token(Token = "0x40024BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Rigidbody <projRB>5__3;

		[Token(Token = "0x1700054D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002B56")]
			[Address(RVA = "0xFDA130", Offset = "0xFDA130", VA = "0xFDA130", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700054E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002B58")]
			[Address(RVA = "0xFDA198", Offset = "0xFDA198", VA = "0xFDA198", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002B53")]
		[Address(RVA = "0xFD7E74", Offset = "0xFD7E74", VA = "0xFD7E74")]
		[DebuggerHidden]
		public <shootProjectile>d__28(int <>1__state)
		{
		}

		[Token(Token = "0x6002B54")]
		[Address(RVA = "0xFD9DF8", Offset = "0xFD9DF8", VA = "0xFD9DF8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002B55")]
		[Address(RVA = "0xFD9DFC", Offset = "0xFD9DFC", VA = "0xFD9DFC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002B57")]
		[Address(RVA = "0xFDA138", Offset = "0xFDA138", VA = "0xFDA138", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000744")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B8284", Offset = "0x8B8284")]
	private sealed class <castRapidFire>d__29 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40024BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40024BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40024C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EnemyHomuncBoss <>4__this;

		[Token(Token = "0x40024C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <numOfProjectiles>5__2;

		[Token(Token = "0x40024C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <aimAccuracy>5__3;

		[Token(Token = "0x1700054F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002B5C")]
			[Address(RVA = "0xFD9328", Offset = "0xFD9328", VA = "0xFD9328", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000550")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002B5E")]
			[Address(RVA = "0xFD9390", Offset = "0xFD9390", VA = "0xFD9390", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002B59")]
		[Address(RVA = "0xFD7EA0", Offset = "0xFD7EA0", VA = "0xFD7EA0")]
		[DebuggerHidden]
		public <castRapidFire>d__29(int <>1__state)
		{
		}

		[Token(Token = "0x6002B5A")]
		[Address(RVA = "0xFD9060", Offset = "0xFD9060", VA = "0xFD9060", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002B5B")]
		[Address(RVA = "0xFD9064", Offset = "0xFD9064", VA = "0xFD9064", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002B5D")]
		[Address(RVA = "0xFD9330", Offset = "0xFD9330", VA = "0xFD9330", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000745")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B8294", Offset = "0x8B8294")]
	private sealed class <castShadowWall>d__30 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40024C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40024C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40024C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EnemyHomuncBoss <>4__this;

		[Token(Token = "0x40024C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GameObject <shadowWallInst>5__2;

		[Token(Token = "0x17000551")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002B62")]
			[Address(RVA = "0xFD97B8", Offset = "0xFD97B8", VA = "0xFD97B8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000552")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002B64")]
			[Address(RVA = "0xFD9820", Offset = "0xFD9820", VA = "0xFD9820", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002B5F")]
		[Address(RVA = "0xFD7F3C", Offset = "0xFD7F3C", VA = "0xFD7F3C")]
		[DebuggerHidden]
		public <castShadowWall>d__30(int <>1__state)
		{
		}

		[Token(Token = "0x6002B60")]
		[Address(RVA = "0xFD9398", Offset = "0xFD9398", VA = "0xFD9398", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002B61")]
		[Address(RVA = "0xFD939C", Offset = "0xFD939C", VA = "0xFD939C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002B63")]
		[Address(RVA = "0xFD97C0", Offset = "0xFD97C0", VA = "0xFD97C0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000746")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B82A4", Offset = "0x8B82A4")]
	private sealed class <castOrbWall>d__31 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40024C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40024C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40024C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EnemyHomuncBoss <>4__this;

		[Token(Token = "0x40024CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GameObject <proj>5__2;

		[Token(Token = "0x40024CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Rigidbody <projRB>5__3;

		[Token(Token = "0x17000553")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002B68")]
			[Address(RVA = "0xFD8FF0", Offset = "0xFD8FF0", VA = "0xFD8FF0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000554")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002B6A")]
			[Address(RVA = "0xFD9058", Offset = "0xFD9058", VA = "0xFD9058", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002B65")]
		[Address(RVA = "0xFD7FD8", Offset = "0xFD7FD8", VA = "0xFD7FD8")]
		[DebuggerHidden]
		public <castOrbWall>d__31(int <>1__state)
		{
		}

		[Token(Token = "0x6002B66")]
		[Address(RVA = "0xFD8C88", Offset = "0xFD8C88", VA = "0xFD8C88", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002B67")]
		[Address(RVA = "0xFD8C8C", Offset = "0xFD8C8C", VA = "0xFD8C8C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002B69")]
		[Address(RVA = "0xFD8FF8", Offset = "0xFD8FF8", VA = "0xFD8FF8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000747")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B82B4", Offset = "0x8B82B4")]
	private sealed class <waitForNextAttack>d__32 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40024CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40024CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40024CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EnemyHomuncBoss <>4__this;

		[Token(Token = "0x17000555")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002B6E")]
			[Address(RVA = "0xFDA258", Offset = "0xFDA258", VA = "0xFDA258", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000556")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002B70")]
			[Address(RVA = "0xFDA2C0", Offset = "0xFDA2C0", VA = "0xFDA2C0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002B6B")]
		[Address(RVA = "0xFD8074", Offset = "0xFD8074", VA = "0xFD8074")]
		[DebuggerHidden]
		public <waitForNextAttack>d__32(int <>1__state)
		{
		}

		[Token(Token = "0x6002B6C")]
		[Address(RVA = "0xFDA1A0", Offset = "0xFDA1A0", VA = "0xFDA1A0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002B6D")]
		[Address(RVA = "0xFDA1A4", Offset = "0xFDA1A4", VA = "0xFDA1A4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002B6F")]
		[Address(RVA = "0xFDA260", Offset = "0xFDA260", VA = "0xFDA260", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000748")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B82C4", Offset = "0x8B82C4")]
	private sealed class <deathTimer>d__34 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40024CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40024D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40024D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EnemyHomuncBoss <>4__this;

		[Token(Token = "0x17000557")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002B74")]
			[Address(RVA = "0xFD9A10", Offset = "0xFD9A10", VA = "0xFD9A10", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000558")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002B76")]
			[Address(RVA = "0xFD9A78", Offset = "0xFD9A78", VA = "0xFD9A78", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002B71")]
		[Address(RVA = "0xFD82C4", Offset = "0xFD82C4", VA = "0xFD82C4")]
		[DebuggerHidden]
		public <deathTimer>d__34(int <>1__state)
		{
		}

		[Token(Token = "0x6002B72")]
		[Address(RVA = "0xFD9828", Offset = "0xFD9828", VA = "0xFD9828", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002B73")]
		[Address(RVA = "0xFD982C", Offset = "0xFD982C", VA = "0xFD982C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002B75")]
		[Address(RVA = "0xFD9A18", Offset = "0xFD9A18", VA = "0xFD9A18", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000A19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BC244", Offset = "0x8BC244")]
	public GameObject enemyProjectile;

	[Token(Token = "0x4000A1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public GameObject enemyOrbWall;

	[Token(Token = "0x4000A1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public GameObject spawnParticle;

	[Token(Token = "0x4000A1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public GameObject shadowWall;

	[Token(Token = "0x4000A1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public GameObject shields;

	[Token(Token = "0x4000A1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public GameObject eyeLaser;

	[Token(Token = "0x4000A1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public GameObject laserCirclePrefab;

	[Token(Token = "0x4000A20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public BattleDialogueBox dialogueBox;

	[Token(Token = "0x4000A21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public Transform bossDialoguePos;

	[Token(Token = "0x4000A22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public Transform laserTransLeft;

	[Token(Token = "0x4000A23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public Transform laserTransRight;

	[Token(Token = "0x4000A24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public float projSpeed;

	[Token(Token = "0x4000A25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
	public int numOfFastProjectiles;

	[Token(Token = "0x4000A26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private bool projectileAimOn;

	[Token(Token = "0x4000A27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x179")]
	private bool firstTurn;

	[Token(Token = "0x4000A28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x17A")]
	private bool castingDesperationAttack;

	[Token(Token = "0x4000A29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BC27C", Offset = "0x8BC27C")]
	public AudioClip finalAttackTrack;

	[Token(Token = "0x4000A2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public AudioClip[] dialogueClips;

	[Token(Token = "0x4000A2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public string[] battledialogue;

	[Token(Token = "0x6000AB7")]
	[Address(RVA = "0xFD6EC8", Offset = "0xFD6EC8", VA = "0xFD6EC8", Slot = "12")]
	public override void enemyAttack(bool endTurnAfter = true)
	{
	}

	[Token(Token = "0x6000AB8")]
	[Address(RVA = "0xFD73A4", Offset = "0xFD73A4", VA = "0xFD73A4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C5EA8", Offset = "0x8C5EA8")]
	private IEnumerator castDesperationAttack()
	{
		return null;
	}

	[Token(Token = "0x6000AB9")]
	[Address(RVA = "0xFD7484", Offset = "0xFD7484", VA = "0xFD7484")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C5F0C", Offset = "0x8C5F0C")]
	private IEnumerator castDoubleLaser()
	{
		return null;
	}

	[Token(Token = "0x6000ABA")]
	[Address(RVA = "0xFD7334", Offset = "0xFD7334", VA = "0xFD7334")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C5F70", Offset = "0x8C5F70")]
	private IEnumerator firstAttack()
	{
		return null;
	}

	[Token(Token = "0x6000ABB")]
	[Address(RVA = "0xFD74F4", Offset = "0xFD74F4", VA = "0xFD74F4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C5FD4", Offset = "0x8C5FD4")]
	private IEnumerator laserCircleAttack()
	{
		return null;
	}

	[Token(Token = "0x6000ABC")]
	[Address(RVA = "0xFD7614", Offset = "0xFD7614", VA = "0xFD7614", Slot = "6")]
	protected override void Update()
	{
	}

	[Token(Token = "0x6000ABD")]
	[Address(RVA = "0xFD76B4", Offset = "0xFD76B4", VA = "0xFD76B4")]
	public void toggleShieldsOn()
	{
	}

	[Token(Token = "0x6000ABE")]
	[Address(RVA = "0xFD7748", Offset = "0xFD7748", VA = "0xFD7748")]
	public void toggleShieldsOff()
	{
	}

	[Token(Token = "0x6000ABF")]
	[Address(RVA = "0xFD77DC", Offset = "0xFD77DC", VA = "0xFD77DC", Slot = "5")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000AC0")]
	[Address(RVA = "0xFD7E04", Offset = "0xFD7E04", VA = "0xFD7E04")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C6038", Offset = "0x8C6038")]
	private IEnumerator shootProjectile()
	{
		return null;
	}

	[Token(Token = "0x6000AC1")]
	[Address(RVA = "0xFD7414", Offset = "0xFD7414", VA = "0xFD7414")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C609C", Offset = "0x8C609C")]
	private IEnumerator castRapidFire()
	{
		return null;
	}

	[Token(Token = "0x6000AC2")]
	[Address(RVA = "0xFD7ECC", Offset = "0xFD7ECC", VA = "0xFD7ECC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C6100", Offset = "0x8C6100")]
	private IEnumerator castShadowWall()
	{
		return null;
	}

	[Token(Token = "0x6000AC3")]
	[Address(RVA = "0xFD7F68", Offset = "0xFD7F68", VA = "0xFD7F68")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C6164", Offset = "0x8C6164")]
	private IEnumerator castOrbWall()
	{
		return null;
	}

	[Token(Token = "0x6000AC4")]
	[Address(RVA = "0xFD8004", Offset = "0xFD8004", VA = "0xFD8004")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C61C8", Offset = "0x8C61C8")]
	private IEnumerator waitForNextAttack()
	{
		return null;
	}

	[Token(Token = "0x6000AC5")]
	[Address(RVA = "0xFD80A0", Offset = "0xFD80A0", VA = "0xFD80A0", Slot = "7")]
	public override void killSelf()
	{
	}

	[Token(Token = "0x6000AC6")]
	[Address(RVA = "0xFD81B0", Offset = "0xFD81B0", VA = "0xFD81B0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C622C", Offset = "0x8C622C")]
	private IEnumerator deathTimer()
	{
		return null;
	}

	[Token(Token = "0x6000AC7")]
	[Address(RVA = "0xFD82F0", Offset = "0xFD82F0", VA = "0xFD82F0", Slot = "13")]
	public override void playHurtAnimation()
	{
	}

	[Token(Token = "0x6000AC8")]
	[Address(RVA = "0xFD7CFC", Offset = "0xFD7CFC", VA = "0xFD7CFC")]
	public void playDialogue(string dialogue)
	{
	}

	[Token(Token = "0x6000AC9")]
	[Address(RVA = "0xFD83D4", Offset = "0xFD83D4", VA = "0xFD83D4")]
	public EnemyHomuncBoss()
	{
	}
}
[Token(Token = "0x200018D")]
public class EnemyHorror : EnemyParent
{
	[Token(Token = "0x2000749")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B82D4", Offset = "0x8B82D4")]
	private sealed class <attackTimer>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40024D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40024D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40024D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EnemyHorror <>4__this;

		[Token(Token = "0x40024D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <time>5__2;

		[Token(Token = "0x40024D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <maxTime>5__3;

		[Token(Token = "0x17000559")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002B7A")]
			[Address(RVA = "0xFDAA20", Offset = "0xFDAA20", VA = "0xFDAA20", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700055A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002B7C")]
			[Address(RVA = "0xFDAA88", Offset = "0xFDAA88", VA = "0xFDAA88", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002B77")]
		[Address(RVA = "0xFDA384", Offset = "0xFDA384", VA = "0xFDA384")]
		[DebuggerHidden]
		public <attackTimer>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x6002B78")]
		[Address(RVA = "0xFDA7A0", Offset = "0xFDA7A0", VA = "0xFDA7A0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002B79")]
		[Address(RVA = "0xFDA7A4", Offset = "0xFDA7A4", VA = "0xFDA7A4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002B7B")]
		[Address(RVA = "0xFDAA28", Offset = "0xFDAA28", VA = "0xFDAA28", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200074A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B82E4", Offset = "0x8B82E4")]
	private sealed class <infDamage>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40024D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40024D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x1700055B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002B80")]
			[Address(RVA = "0xFDAB5C", Offset = "0xFDAB5C", VA = "0xFDAB5C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700055C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002B82")]
			[Address(RVA = "0xFDABC4", Offset = "0xFDABC4", VA = "0xFDABC4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002B7D")]
		[Address(RVA = "0xFDA410", Offset = "0xFDA410", VA = "0xFDA410")]
		[DebuggerHidden]
		public <infDamage>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x6002B7E")]
		[Address(RVA = "0xFDAA90", Offset = "0xFDAA90", VA = "0xFDAA90", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002B7F")]
		[Address(RVA = "0xFDAA94", Offset = "0xFDAA94", VA = "0xFDAA94", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002B81")]
		[Address(RVA = "0xFDAB64", Offset = "0xFDAB64", VA = "0xFDAB64", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000A2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public AudioSource scareSource;

	[Token(Token = "0x6000ACA")]
	[Address(RVA = "0xFDA2C8", Offset = "0xFDA2C8", VA = "0xFDA2C8", Slot = "12")]
	public override void enemyAttack(bool endTurnAfter = true)
	{
	}

	[Token(Token = "0x6000ACB")]
	[Address(RVA = "0xFDA314", Offset = "0xFDA314", VA = "0xFDA314")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C6290", Offset = "0x8C6290")]
	private IEnumerator attackTimer()
	{
		return null;
	}

	[Token(Token = "0x6000ACC")]
	[Address(RVA = "0xFDA3B0", Offset = "0xFDA3B0", VA = "0xFDA3B0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C62F4", Offset = "0x8C62F4")]
	private IEnumerator infDamage()
	{
		return null;
	}

	[Token(Token = "0x6000ACD")]
	[Address(RVA = "0xFDA43C", Offset = "0xFDA43C", VA = "0xFDA43C", Slot = "8")]
	public override void damageEnemy(int amount)
	{
	}

	[Token(Token = "0x6000ACE")]
	[Address(RVA = "0xFDA470", Offset = "0xFDA470", VA = "0xFDA470", Slot = "9")]
	public override void damageEnemy(int amount, bool crit)
	{
	}

	[Token(Token = "0x6000ACF")]
	[Address(RVA = "0xFDA4A4", Offset = "0xFDA4A4", VA = "0xFDA4A4", Slot = "10")]
	public override void damageEnemy(int amount, bool crit, int combo, bool isPhysical)
	{
	}

	[Token(Token = "0x6000AD0")]
	[Address(RVA = "0xFDA79C", Offset = "0xFDA79C", VA = "0xFDA79C")]
	public EnemyHorror()
	{
	}
}
[Token(Token = "0x200018E")]
public class EnemyImp : EnemyParent
{
	[Token(Token = "0x200074B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B82F4", Offset = "0x8B82F4")]
	private sealed class <shootProjectile>d__20 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40024D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40024DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40024DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EnemyImp <>4__this;

		[Token(Token = "0x40024DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GameObject <proj>5__2;

		[Token(Token = "0x40024DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Rigidbody <projRB>5__3;

		[Token(Token = "0x1700055D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002B86")]
			[Address(RVA = "0xFDDD98", Offset = "0xFDDD98", VA = "0xFDDD98", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700055E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002B88")]
			[Address(RVA = "0xFDDE00", Offset = "0xFDDE00", VA = "0xFDDE00", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002B83")]
		[Address(RVA = "0xFDCA34", Offset = "0xFDCA34", VA = "0xFDCA34")]
		[DebuggerHidden]
		public <shootProjectile>d__20(int <>1__state)
		{
		}

		[Token(Token = "0x6002B84")]
		[Address(RVA = "0xFDDA94", Offset = "0xFDDA94", VA = "0xFDDA94", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002B85")]
		[Address(RVA = "0xFDDA98", Offset = "0xFDDA98", VA = "0xFDDA98", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002B87")]
		[Address(RVA = "0xFDDDA0", Offset = "0xFDDDA0", VA = "0xFDDDA0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200074C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B8304", Offset = "0x8B8304")]
	private sealed class <shootProjectileGravity>d__21 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40024DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40024DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40024E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EnemyImp <>4__this;

		[Token(Token = "0x1700055F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002B8C")]
			[Address(RVA = "0xFDE0C8", Offset = "0xFDE0C8", VA = "0xFDE0C8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000560")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002B8E")]
			[Address(RVA = "0xFDE130", Offset = "0xFDE130", VA = "0xFDE130", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002B89")]
		[Address(RVA = "0xFDCAD0", Offset = "0xFDCAD0", VA = "0xFDCAD0")]
		[DebuggerHidden]
		public <shootProjectileGravity>d__21(int <>1__state)
		{
		}

		[Token(Token = "0x6002B8A")]
		[Address(RVA = "0xFDDE08", Offset = "0xFDDE08", VA = "0xFDDE08", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002B8B")]
		[Address(RVA = "0xFDDE0C", Offset = "0xFDDE0C", VA = "0xFDDE0C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002B8D")]
		[Address(RVA = "0xFDE0D0", Offset = "0xFDE0D0", VA = "0xFDE0D0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200074D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B8314", Offset = "0x8B8314")]
	private sealed class <castRapidFire>d__22 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40024E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40024E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40024E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EnemyImp <>4__this;

		[Token(Token = "0x40024E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool gravShot;

		[Token(Token = "0x40024E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <maxTimer>5__2;

		[Token(Token = "0x40024E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <timer>5__3;

		[Token(Token = "0x40024E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <aimAccuracy>5__4;

		[Token(Token = "0x40024E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int <numOfProjectiles>5__5;

		[Token(Token = "0x40024E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Quaternion <rotation>5__6;

		[Token(Token = "0x17000561")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002B92")]
			[Address(RVA = "0xFDD640", Offset = "0xFDD640", VA = "0xFDD640", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000562")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002B94")]
			[Address(RVA = "0xFDD6A8", Offset = "0xFDD6A8", VA = "0xFDD6A8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002B8F")]
		[Address(RVA = "0xFDCAFC", Offset = "0xFDCAFC", VA = "0xFDCAFC")]
		[DebuggerHidden]
		public <castRapidFire>d__22(int <>1__state)
		{
		}

		[Token(Token = "0x6002B90")]
		[Address(RVA = "0xFDD134", Offset = "0xFDD134", VA = "0xFDD134", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002B91")]
		[Address(RVA = "0xFDD138", Offset = "0xFDD138", VA = "0xFDD138", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002B93")]
		[Address(RVA = "0xFDD648", Offset = "0xFDD648", VA = "0xFDD648", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200074E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B8324", Offset = "0x8B8324")]
	private sealed class <castShadowWall>d__23 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40024EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40024EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40024EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EnemyImp <>4__this;

		[Token(Token = "0x40024ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GameObject <shadowWallInst>5__2;

		[Token(Token = "0x17000563")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002B98")]
			[Address(RVA = "0xFDDA24", Offset = "0xFDDA24", VA = "0xFDDA24", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000564")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002B9A")]
			[Address(RVA = "0xFDDA8C", Offset = "0xFDDA8C", VA = "0xFDDA8C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002B95")]
		[Address(RVA = "0xFDCB28", Offset = "0xFDCB28", VA = "0xFDCB28")]
		[DebuggerHidden]
		public <castShadowWall>d__23(int <>1__state)
		{
		}

		[Token(Token = "0x6002B96")]
		[Address(RVA = "0xFDD6B0", Offset = "0xFDD6B0", VA = "0xFDD6B0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002B97")]
		[Address(RVA = "0xFDD6B4", Offset = "0xFDD6B4", VA = "0xFDD6B4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002B99")]
		[Address(RVA = "0xFDDA2C", Offset = "0xFDDA2C", VA = "0xFDDA2C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200074F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B8334", Offset = "0x8B8334")]
	private sealed class <castOrbWall>d__24 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40024EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40024EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40024F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EnemyImp <>4__this;

		[Token(Token = "0x40024F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GameObject <proj>5__2;

		[Token(Token = "0x40024F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Rigidbody <projRB>5__3;

		[Token(Token = "0x17000565")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002B9E")]
			[Address(RVA = "0xFDD0C4", Offset = "0xFDD0C4", VA = "0xFDD0C4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000566")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002BA0")]
			[Address(RVA = "0xFDD12C", Offset = "0xFDD12C", VA = "0xFDD12C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002B9B")]
		[Address(RVA = "0xFDCB54", Offset = "0xFDCB54", VA = "0xFDCB54")]
		[DebuggerHidden]
		public <castOrbWall>d__24(int <>1__state)
		{
		}

		[Token(Token = "0x6002B9C")]
		[Address(RVA = "0xFDCDC4", Offset = "0xFDCDC4", VA = "0xFDCDC4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002B9D")]
		[Address(RVA = "0xFDCDC8", Offset = "0xFDCDC8", VA = "0xFDCDC8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002B9F")]
		[Address(RVA = "0xFDD0CC", Offset = "0xFDD0CC", VA = "0xFDD0CC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000750")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B8344", Offset = "0x8B8344")]
	private sealed class <waitForNextAttack>d__25 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40024F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40024F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40024F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EnemyImp <>4__this;

		[Token(Token = "0x17000567")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002BA4")]
			[Address(RVA = "0xFDE1F0", Offset = "0xFDE1F0", VA = "0xFDE1F0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000568")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002BA6")]
			[Address(RVA = "0xFDE258", Offset = "0xFDE258", VA = "0xFDE258", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002BA1")]
		[Address(RVA = "0xFDCBF0", Offset = "0xFDCBF0", VA = "0xFDCBF0")]
		[DebuggerHidden]
		public <waitForNextAttack>d__25(int <>1__state)
		{
		}

		[Token(Token = "0x6002BA2")]
		[Address(RVA = "0xFDE138", Offset = "0xFDE138", VA = "0xFDE138", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002BA3")]
		[Address(RVA = "0xFDE13C", Offset = "0xFDE13C", VA = "0xFDE13C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002BA5")]
		[Address(RVA = "0xFDE1F8", Offset = "0xFDE1F8", VA = "0xFDE1F8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000A2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BC2B4", Offset = "0x8BC2B4")]
	public GameObject enemyProjectile;

	[Token(Token = "0x4000A2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public GameObject spawnParticle;

	[Token(Token = "0x4000A2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public GameObject enemyOrbWall;

	[Token(Token = "0x4000A30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public GameObject shadowWall;

	[Token(Token = "0x4000A31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public NavMeshAgent agent;

	[Token(Token = "0x4000A32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public float walkRadius;

	[Token(Token = "0x4000A33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
	public float timeBetweenMoves;

	[Token(Token = "0x4000A34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	protected bool isCentering;

	[Token(Token = "0x4000A35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
	protected UnityEngine.Vector3 originPoint;

	[Token(Token = "0x4000A36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	protected Quaternion originRot;

	[Token(Token = "0x4000A37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public float projSpeed;

	[Token(Token = "0x4000A38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
	public int numOfProjectilesMax;

	[Token(Token = "0x4000A39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	protected bool projectileAimOn;

	[Token(Token = "0x4000A3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
	private float initialMoveSpeed;

	[Token(Token = "0x4000A3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	protected float timer;

	[Token(Token = "0x6000AD1")]
	[Address(RVA = "0xFDC168", Offset = "0xFDC168", VA = "0xFDC168", Slot = "12")]
	public override void enemyAttack(bool endTurnAfter = true)
	{
	}

	[Token(Token = "0x6000AD2")]
	[Address(RVA = "0xFDC39C", Offset = "0xFDC39C", VA = "0xFDC39C", Slot = "5")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000AD3")]
	[Address(RVA = "0xFDC4A8", Offset = "0xFDC4A8", VA = "0xFDC4A8", Slot = "6")]
	protected override void Update()
	{
	}

	[Token(Token = "0x6000AD4")]
	[Address(RVA = "0xFDC800", Offset = "0xFDC800", VA = "0xFDC800")]
	protected void pickPointOnNavMesh()
	{
	}

	[Token(Token = "0x6000AD5")]
	[Address(RVA = "0xFDC934", Offset = "0xFDC934", VA = "0xFDC934")]
	protected void returnToOrigin()
	{
	}

	[Token(Token = "0x6000AD6")]
	[Address(RVA = "0xFDC9C4", Offset = "0xFDC9C4", VA = "0xFDC9C4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C6358", Offset = "0x8C6358")]
	protected IEnumerator shootProjectile()
	{
		return null;
	}

	[Token(Token = "0x6000AD7")]
	[Address(RVA = "0xFDCA60", Offset = "0xFDCA60", VA = "0xFDCA60")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C63BC", Offset = "0x8C63BC")]
	protected IEnumerator shootProjectileGravity()
	{
		return null;
	}

	[Token(Token = "0x6000AD8")]
	[Address(RVA = "0xFDC238", Offset = "0xFDC238", VA = "0xFDC238")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C6420", Offset = "0x8C6420")]
	protected IEnumerator castRapidFire(bool gravShot = false)
	{
		return null;
	}

	[Token(Token = "0x6000AD9")]
	[Address(RVA = "0xFDC32C", Offset = "0xFDC32C", VA = "0xFDC32C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C6484", Offset = "0x8C6484")]
	protected IEnumerator castShadowWall()
	{
		return null;
	}

	[Token(Token = "0x6000ADA")]
	[Address(RVA = "0xFDC2BC", Offset = "0xFDC2BC", VA = "0xFDC2BC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C64E8", Offset = "0x8C64E8")]
	protected IEnumerator castOrbWall()
	{
		return null;
	}

	[Token(Token = "0x6000ADB")]
	[Address(RVA = "0xFDCB80", Offset = "0xFDCB80", VA = "0xFDCB80")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C654C", Offset = "0x8C654C")]
	protected IEnumerator waitForNextAttack()
	{
		return null;
	}

	[Token(Token = "0x6000ADC")]
	[Address(RVA = "0xFDCC1C", Offset = "0xFDCC1C", VA = "0xFDCC1C", Slot = "7")]
	public override void killSelf()
	{
	}

	[Token(Token = "0x6000ADD")]
	[Address(RVA = "0xFDCD24", Offset = "0xFDCD24", VA = "0xFDCD24", Slot = "13")]
	public override void playHurtAnimation()
	{
	}

	[Token(Token = "0x6000ADE")]
	[Address(RVA = "0xFDCD9C", Offset = "0xFDCD9C", VA = "0xFDCD9C")]
	public EnemyImp()
	{
	}
}
[Token(Token = "0x200018F")]
public class EnemyImpTutorial1 : EnemyImp
{
	[Token(Token = "0x4000A3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public GameObject tutorialPromptprefab;

	[Token(Token = "0x6000ADF")]
	[Address(RVA = "0xFDE260", Offset = "0xFDE260", VA = "0xFDE260", Slot = "5")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000AE0")]
	[Address(RVA = "0xFDE390", Offset = "0xFDE390", VA = "0xFDE390", Slot = "6")]
	protected override void Update()
	{
	}

	[Token(Token = "0x6000AE1")]
	[Address(RVA = "0xFDE42C", Offset = "0xFDE42C", VA = "0xFDE42C", Slot = "12")]
	public override void enemyAttack(bool endTurnAfter = true)
	{
	}

	[Token(Token = "0x6000AE2")]
	[Address(RVA = "0xFDE5E8", Offset = "0xFDE5E8", VA = "0xFDE5E8")]
	public void nextAttack()
	{
	}

	[Token(Token = "0x6000AE3")]
	[Address(RVA = "0xFDE5FC", Offset = "0xFDE5FC", VA = "0xFDE5FC")]
	public EnemyImpTutorial1()
	{
	}
}
[Token(Token = "0x2000190")]
public class EnemyImpTutorial2 : EnemyImp
{
	[Token(Token = "0x2000751")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B8354", Offset = "0x8B8354")]
	private sealed class <tutAttackTimed>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40024F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40024F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40024F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EnemyImpTutorial2 <>4__this;

		[Token(Token = "0x17000569")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002BAA")]
			[Address(RVA = "0xFDEB70", Offset = "0xFDEB70", VA = "0xFDEB70", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700056A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002BAC")]
			[Address(RVA = "0xFDEBD8", Offset = "0xFDEBD8", VA = "0xFDEBD8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002BA7")]
		[Address(RVA = "0xFDEA5C", Offset = "0xFDEA5C", VA = "0xFDEA5C")]
		[DebuggerHidden]
		public <tutAttackTimed>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6002BA8")]
		[Address(RVA = "0xFDEAB0", Offset = "0xFDEAB0", VA = "0xFDEAB0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002BA9")]
		[Address(RVA = "0xFDEAB4", Offset = "0xFDEAB4", VA = "0xFDEAB4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002BAB")]
		[Address(RVA = "0xFDEB78", Offset = "0xFDEB78", VA = "0xFDEB78", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000A3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public GameObject tutorialPromptprefab;

	[Token(Token = "0x4000A3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public int tutorialStep;

	[Token(Token = "0x6000AE4")]
	[Address(RVA = "0xFDE624", Offset = "0xFDE624", VA = "0xFDE624", Slot = "5")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000AE5")]
	[Address(RVA = "0xFDE754", Offset = "0xFDE754", VA = "0xFDE754", Slot = "6")]
	protected override void Update()
	{
	}

	[Token(Token = "0x6000AE6")]
	[Address(RVA = "0xFDE7F0", Offset = "0xFDE7F0", VA = "0xFDE7F0", Slot = "12")]
	public override void enemyAttack(bool endTurnAfter = true)
	{
	}

	[Token(Token = "0x6000AE7")]
	[Address(RVA = "0xFDE9C0", Offset = "0xFDE9C0", VA = "0xFDE9C0")]
	public void nextAttack()
	{
	}

	[Token(Token = "0x6000AE8")]
	[Address(RVA = "0xFDE9EC", Offset = "0xFDE9EC", VA = "0xFDE9EC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C65B0", Offset = "0x8C65B0")]
	private IEnumerator tutAttackTimed()
	{
		return null;
	}

	[Token(Token = "0x6000AE9")]
	[Address(RVA = "0xFDEA88", Offset = "0xFDEA88", VA = "0xFDEA88")]
	public EnemyImpTutorial2()
	{
	}
}
[Token(Token = "0x2000191")]
public class EnemyLaserAttack : MonoBehaviour
{
	[Token(Token = "0x2000752")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B8364", Offset = "0x8B8364")]
	private sealed class <laserAttack>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40024F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40024FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40024FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EnemyLaserAttack <>4__this;

		[Token(Token = "0x1700056B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002BB0")]
			[Address(RVA = "0xFDF434", Offset = "0xFDF434", VA = "0xFDF434", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700056C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002BB2")]
			[Address(RVA = "0xFDF49C", Offset = "0xFDF49C", VA = "0xFDF49C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002BAD")]
		[Address(RVA = "0xFDF234", Offset = "0xFDF234", VA = "0xFDF234")]
		[DebuggerHidden]
		public <laserAttack>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6002BAE")]
		[Address(RVA = "0xFDF330", Offset = "0xFDF330", VA = "0xFDF330", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002BAF")]
		[Address(RVA = "0xFDF334", Offset = "0xFDF334", VA = "0xFDF334", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002BB1")]
		[Address(RVA = "0xFDF43C", Offset = "0xFDF43C", VA = "0xFDF43C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000A3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject warningZone;

	[Token(Token = "0x4000A40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject laserObj;

	[Token(Token = "0x4000A41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Collider laserCol;

	[Token(Token = "0x4000A42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float timeDelay;

	[Token(Token = "0x4000A43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public int power;

	[Token(Token = "0x6000AEA")]
	[Address(RVA = "0xFDF198", Offset = "0xFDF198", VA = "0xFDF198")]
	private void Start()
	{
	}

	[Token(Token = "0x6000AEB")]
	[Address(RVA = "0xFDF1C4", Offset = "0xFDF1C4", VA = "0xFDF1C4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C6614", Offset = "0x8C6614")]
	private IEnumerator laserAttack()
	{
		return null;
	}

	[Token(Token = "0x6000AEC")]
	[Address(RVA = "0xFDF260", Offset = "0xFDF260", VA = "0xFDF260")]
	private void OnTriggerEnter(Collider collision)
	{
	}

	[Token(Token = "0x6000AED")]
	[Address(RVA = "0xFDF31C", Offset = "0xFDF31C", VA = "0xFDF31C")]
	public EnemyLaserAttack()
	{
	}
}
[Token(Token = "0x2000192")]
public class EnemyOrbWall : MonoBehaviour
{
	[Token(Token = "0x4000A44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] orbs;

	[Token(Token = "0x4000A45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int power;

	[Token(Token = "0x6000AEE")]
	[Address(RVA = "0xFE296C", Offset = "0xFE296C", VA = "0xFE296C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000AEF")]
	[Address(RVA = "0xFE2A54", Offset = "0xFE2A54", VA = "0xFE2A54")]
	public EnemyOrbWall()
	{
	}
}
[Token(Token = "0x2000193")]
public abstract class EnemyParent : MonoBehaviour, ITargetable
{
	[Token(Token = "0x2000753")]
	public enum EnemyTribe
	{
		[Token(Token = "0x40024FD")]
		normal,
		[Token(Token = "0x40024FE")]
		mechanical,
		[Token(Token = "0x40024FF")]
		ghost,
		[Token(Token = "0x4002500")]
		aberration
	}

	[Token(Token = "0x2000754")]
	private enum EnemyState
	{
		[Token(Token = "0x4002502")]
		Starting,
		[Token(Token = "0x4002503")]
		Attacking,
		[Token(Token = "0x4002504")]
		Defending,
		[Token(Token = "0x4002505")]
		Dead
	}

	[Token(Token = "0x2000755")]
	private class StartingState : State<EnemyParent>
	{
		[Token(Token = "0x6002BB3")]
		[Address(RVA = "0xFE758C", Offset = "0xFE758C", VA = "0xFE758C", Slot = "4")]
		public override void activate(EnemyParent parent)
		{
		}

		[Token(Token = "0x6002BB4")]
		[Address(RVA = "0xFE7590", Offset = "0xFE7590", VA = "0xFE7590", Slot = "5")]
		public override void update(EnemyParent parent)
		{
		}

		[Token(Token = "0x6002BB5")]
		[Address(RVA = "0xFE7594", Offset = "0xFE7594", VA = "0xFE7594")]
		public StartingState()
		{
		}
	}

	[Token(Token = "0x2000756")]
	private class AttackingState : State<EnemyParent>
	{
		[Token(Token = "0x6002BB6")]
		[Address(RVA = "0xFE7484", Offset = "0xFE7484", VA = "0xFE7484", Slot = "4")]
		public override void activate(EnemyParent parent)
		{
		}

		[Token(Token = "0x6002BB7")]
		[Address(RVA = "0xFE7488", Offset = "0xFE7488", VA = "0xFE7488", Slot = "5")]
		public override void update(EnemyParent parent)
		{
		}

		[Token(Token = "0x6002BB8")]
		[Address(RVA = "0xFE748C", Offset = "0xFE748C", VA = "0xFE748C")]
		public AttackingState()
		{
		}
	}

	[Token(Token = "0x2000757")]
	private class DefendingState : State<EnemyParent>
	{
		[Token(Token = "0x6002BB9")]
		[Address(RVA = "0xFE7534", Offset = "0xFE7534", VA = "0xFE7534", Slot = "4")]
		public override void activate(EnemyParent parent)
		{
		}

		[Token(Token = "0x6002BBA")]
		[Address(RVA = "0xFE7538", Offset = "0xFE7538", VA = "0xFE7538", Slot = "5")]
		public override void update(EnemyParent parent)
		{
		}

		[Token(Token = "0x6002BBB")]
		[Address(RVA = "0xFE753C", Offset = "0xFE753C", VA = "0xFE753C")]
		public DefendingState()
		{
		}
	}

	[Token(Token = "0x2000758")]
	private class DeadState : State<EnemyParent>
	{
		[Token(Token = "0x6002BBC")]
		[Address(RVA = "0xFE74DC", Offset = "0xFE74DC", VA = "0xFE74DC", Slot = "4")]
		public override void activate(EnemyParent parent)
		{
		}

		[Token(Token = "0x6002BBD")]
		[Address(RVA = "0xFE74E0", Offset = "0xFE74E0", VA = "0xFE74E0", Slot = "5")]
		public override void update(EnemyParent parent)
		{
		}

		[Token(Token = "0x6002BBE")]
		[Address(RVA = "0xFE74E4", Offset = "0xFE74E4", VA = "0xFE74E4")]
		public DeadState()
		{
		}
	}

	[Token(Token = "0x2000759")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B8374", Offset = "0x8B8374")]
	private sealed class <destroyGameObject>d__54 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002506")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002507")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002508")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool requireEnemyTurn;

		[Token(Token = "0x4002509")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public EnemyParent <>4__this;

		[Token(Token = "0x400250A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float time;

		[Token(Token = "0x400250B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <waitTime>5__2;

		[Token(Token = "0x1700056D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002BC2")]
			[Address(RVA = "0xFE709C", Offset = "0xFE709C", VA = "0xFE709C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700056E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002BC4")]
			[Address(RVA = "0xFE7104", Offset = "0xFE7104", VA = "0xFE7104", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002BBF")]
		[Address(RVA = "0xFE51EC", Offset = "0xFE51EC", VA = "0xFE51EC")]
		[DebuggerHidden]
		public <destroyGameObject>d__54(int <>1__state)
		{
		}

		[Token(Token = "0x6002BC0")]
		[Address(RVA = "0xFE6EE4", Offset = "0xFE6EE4", VA = "0xFE6EE4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002BC1")]
		[Address(RVA = "0xFE6EE8", Offset = "0xFE6EE8", VA = "0xFE6EE8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002BC3")]
		[Address(RVA = "0xFE70A4", Offset = "0xFE70A4", VA = "0xFE70A4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200075A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B8384", Offset = "0x8B8384")]
	private sealed class <disolveMaterial>d__67 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400250C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400250D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400250E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EnemyParent <>4__this;

		[Token(Token = "0x400250F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Renderer[] <rends>5__2;

		[Token(Token = "0x4002510")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <disolve>5__3;

		[Token(Token = "0x1700056F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002BC8")]
			[Address(RVA = "0xFE7414", Offset = "0xFE7414", VA = "0xFE7414", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000570")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002BCA")]
			[Address(RVA = "0xFE747C", Offset = "0xFE747C", VA = "0xFE747C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002BC5")]
		[Address(RVA = "0xFE5938", Offset = "0xFE5938", VA = "0xFE5938")]
		[DebuggerHidden]
		public <disolveMaterial>d__67(int <>1__state)
		{
		}

		[Token(Token = "0x6002BC6")]
		[Address(RVA = "0xFE710C", Offset = "0xFE710C", VA = "0xFE710C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002BC7")]
		[Address(RVA = "0xFE7110", Offset = "0xFE7110", VA = "0xFE7110", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002BC9")]
		[Address(RVA = "0xFE741C", Offset = "0xFE741C", VA = "0xFE741C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200075B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B8394", Offset = "0x8B8394")]
	private sealed class <delayText>d__78 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002511")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002512")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002513")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float time;

		[Token(Token = "0x4002514")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public EnemyParent <>4__this;

		[Token(Token = "0x4002515")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Color color;

		[Token(Token = "0x4002516")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string info;

		[Token(Token = "0x17000571")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002BCE")]
			[Address(RVA = "0xFE6E74", Offset = "0xFE6E74", VA = "0xFE6E74", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000572")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002BD0")]
			[Address(RVA = "0xFE6EDC", Offset = "0xFE6EDC", VA = "0xFE6EDC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002BCB")]
		[Address(RVA = "0xFE620C", Offset = "0xFE620C", VA = "0xFE620C")]
		[DebuggerHidden]
		public <delayText>d__78(int <>1__state)
		{
		}

		[Token(Token = "0x6002BCC")]
		[Address(RVA = "0xFE6BC0", Offset = "0xFE6BC0", VA = "0xFE6BC0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002BCD")]
		[Address(RVA = "0xFE6BC4", Offset = "0xFE6BC4", VA = "0xFE6BC4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002BCF")]
		[Address(RVA = "0xFE6E7C", Offset = "0xFE6E7C", VA = "0xFE6E7C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000A46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BC2EC", Offset = "0x8BC2EC")]
	[SerializeField]
	protected GameObject aimAssistTarget;

	[Token(Token = "0x4000A47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform projectileLaunchTrans;

	[Token(Token = "0x4000A48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Animator enemyAnim;

	[Token(Token = "0x4000A49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public EnemyInfoCanvas infoCanvasPrefab;

	[Token(Token = "0x4000A4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	public EnemyInfoCanvas infoCanvas;

	[Token(Token = "0x4000A4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform infoCanvasTrans;

	[Token(Token = "0x4000A4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform teleportPos;

	[Token(Token = "0x4000A4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	protected AudioSource audioSource;

	[Token(Token = "0x4000A4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public BossText bossText;

	[Token(Token = "0x4000A4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Sprite enemyPortrait;

	[Token(Token = "0x4000A50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public List<EnemyModifier> enemyModifiers;

	[Token(Token = "0x4000A51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BC348", Offset = "0x8BC348")]
	public AudioClip[] hurtClips;

	[Token(Token = "0x4000A52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public AudioClip battleMusic;

	[Token(Token = "0x4000A53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BC380", Offset = "0x8BC380")]
	public int speed;

	[Token(Token = "0x4000A54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	protected int _health;

	[Token(Token = "0x4000A55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	protected int maxHealth;

	[Token(Token = "0x4000A56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public int setHealth;

	[Token(Token = "0x4000A57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public int power;

	[Token(Token = "0x4000A58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public float damageTakenModifier;

	[Token(Token = "0x4000A59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public float physicalDamageTakenMod;

	[Token(Token = "0x4000A5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public float projectileSpeedMod;

	[Token(Token = "0x4000A5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public float moveSpeedMod;

	[Token(Token = "0x4000A5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public int expValue;

	[Token(Token = "0x4000A5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public bool isGroundUnit;

	[Token(Token = "0x4000A5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA9")]
	public bool isBoss;

	[Token(Token = "0x4000A5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAA")]
	public bool playDeathFade;

	[Token(Token = "0x4000A60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAB")]
	public bool allowBossModifiers;

	[Token(Token = "0x4000A61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	public bool allowModifiers;

	[Token(Token = "0x4000A62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAD")]
	public bool ignoreDifficultyMod;

	[Token(Token = "0x4000A63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public string enemyName;

	[Token(Token = "0x4000A64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public int[] availableAttacks;

	[Token(Token = "0x4000A65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private bool enteredCriticalHealth;

	[Token(Token = "0x4000A66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	public float difficultyMultiplier;

	[Token(Token = "0x4000A67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public bool canLink;

	[Token(Token = "0x4000A68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC9")]
	protected bool turnStarted;

	[Token(Token = "0x4000A69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[HideInInspector]
	public string[] notificationMessages;

	[Token(Token = "0x4000A6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public EnemyTribe enemyTribe;

	[Token(Token = "0x4000A6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public LootTable lootTable;

	[Token(Token = "0x4000A6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public List<EnemyParent> linkedEnemies;

	[Token(Token = "0x4000A6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BC3C8", Offset = "0x8BC3C8")]
	public List<GlitchEffects> glitchEffects;

	[Token(Token = "0x4000A6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	[HideInInspector]
	public EnemySpawner spawner;

	[Token(Token = "0x4000A6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	protected bool isDead;

	[Token(Token = "0x4000A70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private StateMachine<EnemyParent, EnemyState> stateMachine;

	[Token(Token = "0x4000A71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private int effectsTextsActive;

	[Token(Token = "0x170000BF")]
	public bool isEnemyMainTurn
	{
		[Token(Token = "0x6000AF0")]
		[Address(RVA = "0xFDFFE4", Offset = "0xFDFFE4", VA = "0xFDFFE4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000C0")]
	public float getMaxHealth
	{
		[Token(Token = "0x6000AF1")]
		[Address(RVA = "0xFE4BC4", Offset = "0xFE4BC4", VA = "0xFE4BC4")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170000C1")]
	public int health
	{
		[Token(Token = "0x6000AF2")]
		[Address(RVA = "0xFE4BD0", Offset = "0xFE4BD0", VA = "0xFE4BD0")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000AF3")]
		[Address(RVA = "0xFD8220", Offset = "0xFD8220", VA = "0xFD8220")]
		set
		{
		}
	}

	[Token(Token = "0x6000AF4")]
	[Address(RVA = "0xFE4C28", Offset = "0xFE4C28", VA = "0xFE4C28")]
	protected void Awake()
	{
	}

	[Token(Token = "0x6000AF5")]
	[Address(RVA = "0xFD7048", Offset = "0xFD7048", VA = "0xFD7048")]
	protected void turnStart(bool mainTurn)
	{
	}

	[Token(Token = "0x6000AF6")]
	[Address(RVA = "0xFD997C", Offset = "0xFD997C", VA = "0xFD997C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C6678", Offset = "0x8C6678")]
	protected IEnumerator destroyGameObject(float time, bool requireEnemyTurn = true)
	{
		return null;
	}

	[Token(Token = "0x6000AF7")]
	[Address(RVA = "0xFD79A4", Offset = "0xFD79A4", VA = "0xFD79A4", Slot = "5")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x6000AF8")]
	[Address(RVA = "0xFE5218", Offset = "0xFE5218", VA = "0xFE5218")]
	public void tryToLinkEnemy()
	{
	}

	[Token(Token = "0x6000AF9")]
	[Address(RVA = "0xFD76B0", Offset = "0xFD76B0", VA = "0xFD76B0", Slot = "6")]
	protected virtual void Update()
	{
	}

	[Token(Token = "0x6000AFA")]
	[Address(RVA = "0xFE4BD8", Offset = "0xFE4BD8", VA = "0xFE4BD8")]
	private void updateHpBar()
	{
	}

	[Token(Token = "0x6000AFB")]
	[Address(RVA = "0xFE55D0", Offset = "0xFE55D0", VA = "0xFE55D0")]
	public void killAllLinks()
	{
	}

	[Token(Token = "0x6000AFC")]
	[Address(RVA = "0xFE583C", Offset = "0xFE583C", VA = "0xFE583C", Slot = "4")]
	public GameObject getAimAssistTarget()
	{
		return null;
	}

	[Token(Token = "0x6000AFD")]
	[Address(RVA = "0xFDB37C", Offset = "0xFDB37C", VA = "0xFDB37C", Slot = "7")]
	public virtual void killSelf()
	{
	}

	[Token(Token = "0x6000AFE")]
	[Address(RVA = "0xFE590C", Offset = "0xFE590C", VA = "0xFE590C")]
	public void forceDisolveMaterials()
	{
	}

	[Token(Token = "0x6000AFF")]
	[Address(RVA = "0xFE589C", Offset = "0xFE589C", VA = "0xFE589C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C66DC", Offset = "0x8C66DC")]
	protected IEnumerator disolveMaterial()
	{
		return null;
	}

	[Token(Token = "0x6000B00")]
	[Address(RVA = "0xFDA458", Offset = "0xFDA458", VA = "0xFDA458", Slot = "8")]
	public virtual void damageEnemy(int amount)
	{
	}

	[Token(Token = "0x6000B01")]
	[Address(RVA = "0xFDA48C", Offset = "0xFDA48C", VA = "0xFDA48C", Slot = "9")]
	public virtual void damageEnemy(int amount, bool crit)
	{
	}

	[Token(Token = "0x6000B02")]
	[Address(RVA = "0xFDA4B4", Offset = "0xFDA4B4", VA = "0xFDA4B4", Slot = "10")]
	public virtual void damageEnemy(int amount, bool crit, int combo, bool isPhysical = false)
	{
	}

	[Token(Token = "0x6000B03")]
	[Address(RVA = "0xFE5CC4", Offset = "0xFE5CC4", VA = "0xFE5CC4")]
	public void damageEnemyStatus(float percent)
	{
	}

	[Token(Token = "0x6000B04")]
	[Address(RVA = "0xFE5A50", Offset = "0xFE5A50", VA = "0xFE5A50")]
	private void displayDamageText(string amount, bool crit)
	{
	}

	[Token(Token = "0x6000B05")]
	[Address(RVA = "0xFE5D88", Offset = "0xFE5D88", VA = "0xFE5D88")]
	public void healEnemy(int value)
	{
	}

	[Token(Token = "0x6000B06")]
	[Address(RVA = "0xFE5EFC", Offset = "0xFE5EFC", VA = "0xFE5EFC")]
	private void displayHealText(string amount)
	{
	}

	[Token(Token = "0x6000B07")]
	[Address(RVA = "0xFE51BC", Offset = "0xFE51BC", VA = "0xFE51BC")]
	public void displayEffectText(string info)
	{
	}

	[Token(Token = "0x6000B08")]
	[Address(RVA = "0xFE5844", Offset = "0xFE5844", VA = "0xFE5844")]
	public void displayEffectText(string info, Color color)
	{
	}

	[Token(Token = "0x6000B09")]
	[Address(RVA = "0xFE6154", Offset = "0xFE6154", VA = "0xFE6154")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C6740", Offset = "0x8C6740")]
	private IEnumerator delayText(string info, Color color, float time)
	{
		return null;
	}

	[Token(Token = "0x6000B0A")]
	[Address(RVA = "0xFE6238", Offset = "0xFE6238", VA = "0xFE6238", Slot = "11")]
	public virtual void addGlitch(GlitchEffects currentGlitch)
	{
	}

	[Token(Token = "0x6000B0B")]
	[Address(RVA = "0xFE64A8", Offset = "0xFE64A8", VA = "0xFE64A8")]
	public void tickDownEffects()
	{
	}

	[Token(Token = "0x6000B0C")]
	public abstract void enemyAttack(bool endTurnAfter = true);

	[Token(Token = "0x6000B0D")]
	[Address(RVA = "0xFE6788", Offset = "0xFE6788", VA = "0xFE6788", Slot = "13")]
	public virtual void playHurtAnimation()
	{
	}

	[Token(Token = "0x6000B0E")]
	[Address(RVA = "0xFE678C", Offset = "0xFE678C", VA = "0xFE678C")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000B0F")]
	[Address(RVA = "0xFE5964", Offset = "0xFE5964", VA = "0xFE5964")]
	public void playHurtSound()
	{
	}

	[Token(Token = "0x6000B10")]
	[Address(RVA = "0xFE6850", Offset = "0xFE6850", VA = "0xFE6850")]
	public void preApplyDamage()
	{
	}

	[Token(Token = "0x6000B11")]
	[Address(RVA = "0xFE69A0", Offset = "0xFE69A0", VA = "0xFE69A0", Slot = "14")]
	public virtual void endTurn(bool enemyDied = false)
	{
	}

	[Token(Token = "0x6000B12")]
	[Address(RVA = "0xFD83EC", Offset = "0xFD83EC", VA = "0xFD83EC")]
	protected EnemyParent()
	{
	}

	[Token(Token = "0x6000B13")]
	[Address(RVA = "0xFE6AD0", Offset = "0xFE6AD0", VA = "0xFE6AD0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C67A4", Offset = "0x8C67A4")]
	private float <tryToLinkEnemy>b__56_0(GameObject x)
	{
		return default(float);
	}
}
[Token(Token = "0x2000194")]
public class EnemyProjectile : MonoBehaviour
{
	[Token(Token = "0x4000A72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int power;

	[Token(Token = "0x4000A73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BC410", Offset = "0x8BC410")]
	public bool destroyOnHitOther;

	[Token(Token = "0x4000A74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	public bool destroyOnHitPlayer;

	[Token(Token = "0x4000A75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
	public bool deflectable;

	[Token(Token = "0x4000A76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F")]
	public bool deflectedProj;

	[Token(Token = "0x4000A77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool destroyOnTimer;

	[Token(Token = "0x4000A78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public BattleBuff debuff;

	[Token(Token = "0x4000A79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int inflictChance;

	[Token(Token = "0x4000A7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject impactEffect;

	[Token(Token = "0x4000A7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BC448", Offset = "0x8BC448")]
	public bool useSineWaveY;

	[Token(Token = "0x4000A7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	public bool useSineWaveX;

	[Token(Token = "0x4000A7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float sineFrequency;

	[Token(Token = "0x4000A7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float sineAngularFrequency;

	[Token(Token = "0x4000A7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float sinePeriod;

	[Token(Token = "0x4000A80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float sinePhase;

	[Token(Token = "0x4000A81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float maxAliveTime;

	[Token(Token = "0x4000A82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float aliveTime;

	[Token(Token = "0x4000A83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BC480", Offset = "0x8BC480")]
	public bool rotateProjectile;

	[Token(Token = "0x4000A84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float rotateSpeed;

	[Token(Token = "0x4000A85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float rotateX;

	[Token(Token = "0x4000A86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float rotateY;

	[Token(Token = "0x4000A87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float rotateZ;

	[Token(Token = "0x4000A88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool rotateWithVelocity;

	[Token(Token = "0x4000A89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
	public bool addRandomRotation;

	[Token(Token = "0x4000A8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x72")]
	public bool hasParent;

	[Token(Token = "0x4000A8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private UnityEngine.Vector3 spawnPos;

	[Token(Token = "0x4000A8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public EnemyParent firedParent;

	[Token(Token = "0x4000A8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Rigidbody rigidbody;

	[Token(Token = "0x4000A8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public GameObject childRotateObject;

	[Token(Token = "0x4000A8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private bool reverseSine;

	[Token(Token = "0x4000A90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private float elapsedTime;

	[Token(Token = "0x4000A91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public float sineAmplitude;

	[Token(Token = "0x6000B14")]
	[Address(RVA = "0xFE9228", Offset = "0xFE9228", VA = "0xFE9228")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B15")]
	[Address(RVA = "0xFE93A0", Offset = "0xFE93A0", VA = "0xFE93A0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B16")]
	[Address(RVA = "0xFE9864", Offset = "0xFE9864", VA = "0xFE9864")]
	private void OnTriggerEnter(Collider collision)
	{
	}

	[Token(Token = "0x6000B17")]
	[Address(RVA = "0xFE9E4C", Offset = "0xFE9E4C", VA = "0xFE9E4C")]
	public void deflectProjectile()
	{
	}

	[Token(Token = "0x6000B18")]
	[Address(RVA = "0xFEA2C4", Offset = "0xFEA2C4", VA = "0xFEA2C4")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000B19")]
	[Address(RVA = "0xFE95C4", Offset = "0xFE95C4", VA = "0xFE95C4")]
	private void SmoothSineWaveY()
	{
	}

	[Token(Token = "0x6000B1A")]
	[Address(RVA = "0xFE9714", Offset = "0xFE9714", VA = "0xFE9714")]
	private void SmoothSineWaveX()
	{
	}

	[Token(Token = "0x6000B1B")]
	[Address(RVA = "0xFEA880", Offset = "0xFEA880", VA = "0xFEA880")]
	public EnemyProjectile()
	{
	}
}
[Token(Token = "0x2000195")]
public class EnemyPunchOrb : MonoBehaviour
{
	[Token(Token = "0x4000A92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float explodeTime;

	[Token(Token = "0x4000A93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int damage;

	[Token(Token = "0x4000A94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject explodeParticle;

	[Token(Token = "0x4000A95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject successParticle;

	[Token(Token = "0x4000A96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float explodeTimer;

	[Token(Token = "0x6000B1C")]
	[Address(RVA = "0xFEA8B8", Offset = "0xFEA8B8", VA = "0xFEA8B8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B1D")]
	[Address(RVA = "0xFEAA50", Offset = "0xFEAA50", VA = "0xFEAA50")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000B1E")]
	[Address(RVA = "0xFEABCC", Offset = "0xFEABCC", VA = "0xFEABCC")]
	public EnemyPunchOrb()
	{
	}
}
[Token(Token = "0x2000196")]
public class EnemyPunchOrbAttack : MonoBehaviour
{
	[Token(Token = "0x4000A97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] orbsSPawns;

	[Token(Token = "0x4000A98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int numOfReds;

	[Token(Token = "0x4000A99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float explodeTime;

	[Token(Token = "0x4000A9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject badOrb;

	[Token(Token = "0x4000A9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject punchOrb;

	[Token(Token = "0x4000A9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public EnemyParent enemyParent;

	[Token(Token = "0x4000A9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int power;

	[Token(Token = "0x4000A9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float timer;

	[Token(Token = "0x6000B1F")]
	[Address(RVA = "0xFEABDC", Offset = "0xFEABDC", VA = "0xFEABDC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B20")]
	[Address(RVA = "0xFEADB0", Offset = "0xFEADB0", VA = "0xFEADB0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B21")]
	[Address(RVA = "0xFEAE8C", Offset = "0xFEAE8C", VA = "0xFEAE8C")]
	public EnemyPunchOrbAttack()
	{
	}
}
[Token(Token = "0x2000197")]
public class EnemySydneyTutorial1 : EnemyParent
{
	[Token(Token = "0x200075C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B83A4", Offset = "0x8B83A4")]
	private sealed class <endBattleTimer>d__15 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002517")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002518")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002519")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EnemySydneyTutorial1 <>4__this;

		[Token(Token = "0x17000573")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002BD4")]
			[Address(RVA = "0xC45660", Offset = "0xC45660", VA = "0xC45660", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000574")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002BD6")]
			[Address(RVA = "0xC456C8", Offset = "0xC456C8", VA = "0xC456C8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002BD1")]
		[Address(RVA = "0xC45514", Offset = "0xC45514", VA = "0xC45514")]
		[DebuggerHidden]
		public <endBattleTimer>d__15(int <>1__state)
		{
		}

		[Token(Token = "0x6002BD2")]
		[Address(RVA = "0xC4557C", Offset = "0xC4557C", VA = "0xC4557C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002BD3")]
		[Address(RVA = "0xC45580", Offset = "0xC45580", VA = "0xC45580", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002BD5")]
		[Address(RVA = "0xC45668", Offset = "0xC45668", VA = "0xC45668", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200075D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B83B4", Offset = "0x8B83B4")]
	private sealed class <failDialogueTimer>d__16 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400251A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400251B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400251C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EnemySydneyTutorial1 <>4__this;

		[Token(Token = "0x17000575")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002BDA")]
			[Address(RVA = "0xC457C4", Offset = "0xC457C4", VA = "0xC457C4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000576")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002BDC")]
			[Address(RVA = "0xC4582C", Offset = "0xC4582C", VA = "0xC4582C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002BD7")]
		[Address(RVA = "0xC45540", Offset = "0xC45540", VA = "0xC45540")]
		[DebuggerHidden]
		public <failDialogueTimer>d__16(int <>1__state)
		{
		}

		[Token(Token = "0x6002BD8")]
		[Address(RVA = "0xC456D0", Offset = "0xC456D0", VA = "0xC456D0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002BD9")]
		[Address(RVA = "0xC456D4", Offset = "0xC456D4", VA = "0xC456D4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002BDB")]
		[Address(RVA = "0xC457CC", Offset = "0xC457CC", VA = "0xC457CC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000A9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public GameObject tutorialPromptprefab;

	[Token(Token = "0x4000AA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public BattleDialogueBox dialogueBox;

	[Token(Token = "0x4000AA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public Transform bossDialoguePos;

	[Token(Token = "0x4000AA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public string[] battledialogue;

	[Token(Token = "0x4000AA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public GameObject target;

	[Token(Token = "0x4000AA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BC4B8", Offset = "0x8BC4B8")]
	public AudioClip[] dialogueClips;

	[Token(Token = "0x4000AA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private bool firstAttack;

	[Token(Token = "0x6000B22")]
	[Address(RVA = "0xC44DDC", Offset = "0xC44DDC", VA = "0xC44DDC", Slot = "5")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000B23")]
	[Address(RVA = "0xC44EA0", Offset = "0xC44EA0", VA = "0xC44EA0", Slot = "12")]
	public override void enemyAttack(bool endTurnAfter = true)
	{
	}

	[Token(Token = "0x6000B24")]
	[Address(RVA = "0xC4516C", Offset = "0xC4516C", VA = "0xC4516C")]
	public void playDialogue(string dialogue, bool volumeOn = false)
	{
	}

	[Token(Token = "0x6000B25")]
	[Address(RVA = "0xC452A4", Offset = "0xC452A4", VA = "0xC452A4")]
	public void nextAttack()
	{
	}

	[Token(Token = "0x6000B26")]
	[Address(RVA = "0xC45334", Offset = "0xC45334", VA = "0xC45334", Slot = "9")]
	public override void damageEnemy(int amount, bool crit)
	{
	}

	[Token(Token = "0x6000B27")]
	[Address(RVA = "0xC45344", Offset = "0xC45344", VA = "0xC45344", Slot = "8")]
	public override void damageEnemy(int amount)
	{
	}

	[Token(Token = "0x6000B28")]
	[Address(RVA = "0xC45350", Offset = "0xC45350", VA = "0xC45350", Slot = "10")]
	public override void damageEnemy(int amount, bool crit, int combo, bool isPhysical)
	{
	}

	[Token(Token = "0x6000B29")]
	[Address(RVA = "0xC45364", Offset = "0xC45364", VA = "0xC45364", Slot = "7")]
	public override void killSelf()
	{
	}

	[Token(Token = "0x6000B2A")]
	[Address(RVA = "0xC454A4", Offset = "0xC454A4", VA = "0xC454A4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C67B4", Offset = "0x8C67B4")]
	private IEnumerator endBattleTimer()
	{
		return null;
	}

	[Token(Token = "0x6000B2B")]
	[Address(RVA = "0xC450FC", Offset = "0xC450FC", VA = "0xC450FC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C6818", Offset = "0x8C6818")]
	private IEnumerator failDialogueTimer()
	{
		return null;
	}

	[Token(Token = "0x6000B2C")]
	[Address(RVA = "0xC4556C", Offset = "0xC4556C", VA = "0xC4556C")]
	public EnemySydneyTutorial1()
	{
	}
}
[Token(Token = "0x2000198")]
public class EnemyVerticalBeam : MonoBehaviour
{
	[Token(Token = "0x4000AA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int power;

	[Token(Token = "0x4000AA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int speed;

	[Token(Token = "0x6000B2D")]
	[Address(RVA = "0xC4A420", Offset = "0xC4A420", VA = "0xC4A420")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B2E")]
	[Address(RVA = "0xC4A424", Offset = "0xC4A424", VA = "0xC4A424")]
	private void OnTriggerEnter(Collider collision)
	{
	}

	[Token(Token = "0x6000B2F")]
	[Address(RVA = "0xC4A4E0", Offset = "0xC4A4E0", VA = "0xC4A4E0")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000B30")]
	[Address(RVA = "0xC4A59C", Offset = "0xC4A59C", VA = "0xC4A59C")]
	public EnemyVerticalBeam()
	{
	}
}
[Token(Token = "0x2000199")]
public class EnemyWallSpell : MonoBehaviour
{
	[Token(Token = "0x4000AA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject warningIndicator;

	[Token(Token = "0x4000AA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject attackEffect;

	[Token(Token = "0x4000AAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioSource source;

	[Token(Token = "0x4000AAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int power;

	[Token(Token = "0x4000AAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Collider damageCollider;

	[Token(Token = "0x6000B31")]
	[Address(RVA = "0xC4A5AC", Offset = "0xC4A5AC", VA = "0xC4A5AC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B32")]
	[Address(RVA = "0xC4A62C", Offset = "0xC4A62C", VA = "0xC4A62C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B33")]
	[Address(RVA = "0xC4A630", Offset = "0xC4A630", VA = "0xC4A630")]
	public void damagePlayer()
	{
	}

	[Token(Token = "0x6000B34")]
	[Address(RVA = "0xC4A6CC", Offset = "0xC4A6CC", VA = "0xC4A6CC")]
	public EnemyWallSpell()
	{
	}
}
[Token(Token = "0x200019A")]
public class EnemyWallTriggers : MonoBehaviour
{
	[Token(Token = "0x4000AAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public EnemyWallSpell parentWall;

	[Token(Token = "0x6000B35")]
	[Address(RVA = "0xC4A6DC", Offset = "0xC4A6DC", VA = "0xC4A6DC")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000B36")]
	[Address(RVA = "0xC4A778", Offset = "0xC4A778", VA = "0xC4A778")]
	public EnemyWallTriggers()
	{
	}
}
[Token(Token = "0x200019B")]
public class EnemyWreckingBall : EnemyParent
{
	[Token(Token = "0x200075E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B83C4", Offset = "0x8B83C4")]
	private sealed class <swingAttack>d__10 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400251D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400251E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400251F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EnemyWreckingBall <>4__this;

		[Token(Token = "0x4002520")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private UnityEngine.Vector3 <target>5__2;

		[Token(Token = "0x4002521")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private UnityEngine.Vector3 <startPos>5__3;

		[Token(Token = "0x4002522")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float <timer>5__4;

		[Token(Token = "0x4002523")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float <timerMax>5__5;

		[Token(Token = "0x17000577")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002BE0")]
			[Address(RVA = "0xC4B97C", Offset = "0xC4B97C", VA = "0xC4B97C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000578")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002BE2")]
			[Address(RVA = "0xC4B9E4", Offset = "0xC4B9E4", VA = "0xC4B9E4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002BDD")]
		[Address(RVA = "0xC4AA7C", Offset = "0xC4AA7C", VA = "0xC4AA7C")]
		[DebuggerHidden]
		public <swingAttack>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x6002BDE")]
		[Address(RVA = "0xC4B4E4", Offset = "0xC4B4E4", VA = "0xC4B4E4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002BDF")]
		[Address(RVA = "0xC4B4E8", Offset = "0xC4B4E8", VA = "0xC4B4E8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002BE1")]
		[Address(RVA = "0xC4B984", Offset = "0xC4B984", VA = "0xC4B984", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200075F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B83D4", Offset = "0x8B83D4")]
	private sealed class <shootProjectile>d__11 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002524")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002525")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002526")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject enemyProjectile;

		[Token(Token = "0x4002527")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform launchTrans;

		[Token(Token = "0x4002528")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool randomRot;

		[Token(Token = "0x4002529")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public EnemyWreckingBall <>4__this;

		[Token(Token = "0x400252A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private GameObject <proj>5__2;

		[Token(Token = "0x400252B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Rigidbody <projRB>5__3;

		[Token(Token = "0x17000579")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002BE6")]
			[Address(RVA = "0xC4B474", Offset = "0xC4B474", VA = "0xC4B474", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700057A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002BE8")]
			[Address(RVA = "0xC4B4DC", Offset = "0xC4B4DC", VA = "0xC4B4DC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002BE3")]
		[Address(RVA = "0xC4AB40", Offset = "0xC4AB40", VA = "0xC4AB40")]
		[DebuggerHidden]
		public <shootProjectile>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x6002BE4")]
		[Address(RVA = "0xC4B110", Offset = "0xC4B110", VA = "0xC4B110", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002BE5")]
		[Address(RVA = "0xC4B114", Offset = "0xC4B114", VA = "0xC4B114", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002BE7")]
		[Address(RVA = "0xC4B47C", Offset = "0xC4B47C", VA = "0xC4B47C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000760")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B83E4", Offset = "0x8B83E4")]
	private sealed class <castShotgunBlast>d__13 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400252C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400252D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400252E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EnemyWreckingBall <>4__this;

		[Token(Token = "0x400252F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <aimAccuracy>5__2;

		[Token(Token = "0x1700057B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002BEC")]
			[Address(RVA = "0xC4B0A0", Offset = "0xC4B0A0", VA = "0xC4B0A0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700057C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002BEE")]
			[Address(RVA = "0xC4B108", Offset = "0xC4B108", VA = "0xC4B108", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002BE9")]
		[Address(RVA = "0xC4ADD4", Offset = "0xC4ADD4", VA = "0xC4ADD4")]
		[DebuggerHidden]
		public <castShotgunBlast>d__13(int <>1__state)
		{
		}

		[Token(Token = "0x6002BEA")]
		[Address(RVA = "0xC4AE10", Offset = "0xC4AE10", VA = "0xC4AE10", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002BEB")]
		[Address(RVA = "0xC4AE14", Offset = "0xC4AE14", VA = "0xC4AE14", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002BED")]
		[Address(RVA = "0xC4B0A8", Offset = "0xC4B0A8", VA = "0xC4B0A8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000AAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	private UnityEngine.Vector3 startPos;

	[Token(Token = "0x4000AAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public WreckingBallCollider ball;

	[Token(Token = "0x4000AB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public GameObject enemyProjectile1;

	[Token(Token = "0x4000AB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public GameObject enemyProjectile2;

	[Token(Token = "0x4000AB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public float projSpeed;

	[Token(Token = "0x4000AB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public GameObject spawnParticle;

	[Token(Token = "0x4000AB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public GameObject bodyRoot;

	[Token(Token = "0x6000B37")]
	[Address(RVA = "0xC4A780", Offset = "0xC4A780", VA = "0xC4A780", Slot = "5")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000B38")]
	[Address(RVA = "0xC4A924", Offset = "0xC4A924", VA = "0xC4A924", Slot = "6")]
	protected override void Update()
	{
	}

	[Token(Token = "0x6000B39")]
	[Address(RVA = "0xC4A9BC", Offset = "0xC4A9BC", VA = "0xC4A9BC", Slot = "12")]
	public override void enemyAttack(bool endTurnAfter = true)
	{
	}

	[Token(Token = "0x6000B3A")]
	[Address(RVA = "0xC4AA0C", Offset = "0xC4AA0C", VA = "0xC4AA0C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C687C", Offset = "0x8C687C")]
	private IEnumerator swingAttack()
	{
		return null;
	}

	[Token(Token = "0x6000B3B")]
	[Address(RVA = "0xC4AAA8", Offset = "0xC4AAA8", VA = "0xC4AAA8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C68E0", Offset = "0x8C68E0")]
	protected IEnumerator shootProjectile(GameObject enemyProjectile, Transform launchTrans, bool randomRot = false)
	{
		return null;
	}

	[Token(Token = "0x6000B3C")]
	[Address(RVA = "0xC4AB6C", Offset = "0xC4AB6C", VA = "0xC4AB6C", Slot = "7")]
	public override void killSelf()
	{
	}

	[Token(Token = "0x6000B3D")]
	[Address(RVA = "0xC4AD64", Offset = "0xC4AD64", VA = "0xC4AD64")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C6944", Offset = "0x8C6944")]
	protected IEnumerator castShotgunBlast()
	{
		return null;
	}

	[Token(Token = "0x6000B3E")]
	[Address(RVA = "0xC4AE00", Offset = "0xC4AE00", VA = "0xC4AE00")]
	public EnemyWreckingBall()
	{
	}
}
[Token(Token = "0x200019C")]
public class EnemyGasCloud : MonoBehaviour
{
	[Token(Token = "0x4000AB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int damage;

	[Token(Token = "0x4000AB6")]
	public const int maxTurns = 3;

	[Token(Token = "0x4000AB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int turnsRemaining;

	[Token(Token = "0x4000AB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool inGas;

	[Token(Token = "0x4000AB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float damageTickMax;

	[Token(Token = "0x4000ABA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float damageTickTimer;

	[Token(Token = "0x4000ABB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float canDamageTimer;

	[Token(Token = "0x4000ABC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float reqTimeToDamage;

	[Token(Token = "0x4000ABD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool applyScreenColor;

	[Token(Token = "0x4000ABE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Color screenColor;

	[Token(Token = "0x6000B3F")]
	[Address(RVA = "0xDBD50C", Offset = "0xDBD50C", VA = "0xDBD50C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B40")]
	[Address(RVA = "0xDBD5B0", Offset = "0xDBD5B0", VA = "0xDBD5B0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B41")]
	[Address(RVA = "0xDBD6A4", Offset = "0xDBD6A4", VA = "0xDBD6A4")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000B42")]
	[Address(RVA = "0xDBD798", Offset = "0xDBD798", VA = "0xDBD798")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000B43")]
	[Address(RVA = "0xDBD858", Offset = "0xDBD858", VA = "0xDBD858")]
	public void tickDownRemainingTurns()
	{
	}

	[Token(Token = "0x6000B44")]
	[Address(RVA = "0xDBD8F4", Offset = "0xDBD8F4", VA = "0xDBD8F4")]
	public EnemyGasCloud()
	{
	}
}
[Token(Token = "0x200019D")]
public class EnemyGasMan : EnemyParent
{
	[Token(Token = "0x2000761")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B83F4", Offset = "0x8B83F4")]
	private sealed class <poisonGasAttack>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002530")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002531")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002532")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EnemyGasMan <>4__this;

		[Token(Token = "0x1700057D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002BF2")]
			[Address(RVA = "0xDBE344", Offset = "0xDBE344", VA = "0xDBE344", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700057E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002BF4")]
			[Address(RVA = "0xDBE3AC", Offset = "0xDBE3AC", VA = "0xDBE3AC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002BEF")]
		[Address(RVA = "0xDBDC58", Offset = "0xDBDC58", VA = "0xDBDC58")]
		[DebuggerHidden]
		public <poisonGasAttack>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x6002BF0")]
		[Address(RVA = "0xDBE0E4", Offset = "0xDBE0E4", VA = "0xDBE0E4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002BF1")]
		[Address(RVA = "0xDBE0E8", Offset = "0xDBE0E8", VA = "0xDBE0E8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002BF3")]
		[Address(RVA = "0xDBE34C", Offset = "0xDBE34C", VA = "0xDBE34C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000762")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B8404", Offset = "0x8B8404")]
	private sealed class <castShotgunBlast>d__10 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002533")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002534")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002535")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EnemyGasMan <>4__this;

		[Token(Token = "0x4002536")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <numOfProjectiles>5__2;

		[Token(Token = "0x4002537")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <aimAccuracy>5__3;

		[Token(Token = "0x1700057F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002BF8")]
			[Address(RVA = "0xDBE074", Offset = "0xDBE074", VA = "0xDBE074", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000580")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002BFA")]
			[Address(RVA = "0xDBE0DC", Offset = "0xDBE0DC", VA = "0xDBE0DC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002BF5")]
		[Address(RVA = "0xDBDC84", Offset = "0xDBDC84", VA = "0xDBDC84")]
		[DebuggerHidden]
		public <castShotgunBlast>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x6002BF6")]
		[Address(RVA = "0xDBDD64", Offset = "0xDBDD64", VA = "0xDBDD64", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002BF7")]
		[Address(RVA = "0xDBDD68", Offset = "0xDBDD68", VA = "0xDBDD68", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002BF9")]
		[Address(RVA = "0xDBE07C", Offset = "0xDBE07C", VA = "0xDBE07C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000763")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B8414", Offset = "0x8B8414")]
	private sealed class <shootProjectile>d__11 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002538")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002539")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400253A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EnemyGasMan <>4__this;

		[Token(Token = "0x400253B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GameObject <proj>5__2;

		[Token(Token = "0x400253C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Rigidbody <projRB>5__3;

		[Token(Token = "0x17000581")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002BFE")]
			[Address(RVA = "0xDBE65C", Offset = "0xDBE65C", VA = "0xDBE65C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000582")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002C00")]
			[Address(RVA = "0xDBE6C4", Offset = "0xDBE6C4", VA = "0xDBE6C4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002BFB")]
		[Address(RVA = "0xDBDD20", Offset = "0xDBDD20", VA = "0xDBDD20")]
		[DebuggerHidden]
		public <shootProjectile>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x6002BFC")]
		[Address(RVA = "0xDBE3B4", Offset = "0xDBE3B4", VA = "0xDBE3B4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002BFD")]
		[Address(RVA = "0xDBE3B8", Offset = "0xDBE3B8", VA = "0xDBE3B8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002BFF")]
		[Address(RVA = "0xDBE664", Offset = "0xDBE664", VA = "0xDBE664", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000ABF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public EnemyGasCloud cloudPrefab;

	[Token(Token = "0x4000AC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public GameObject enemyProjectile;

	[Token(Token = "0x4000AC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public GameObject spawnParticle;

	[Token(Token = "0x4000AC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public float projSpeed;

	[Token(Token = "0x4000AC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
	public bool projectileAimOn;

	[Token(Token = "0x6000B45")]
	[Address(RVA = "0xDBD918", Offset = "0xDBD918", VA = "0xDBD918", Slot = "12")]
	public override void enemyAttack(bool endTurnAfter = true)
	{
	}

	[Token(Token = "0x6000B46")]
	[Address(RVA = "0xDBDAC8", Offset = "0xDBDAC8", VA = "0xDBDAC8")]
	private new void Update()
	{
	}

	[Token(Token = "0x6000B47")]
	[Address(RVA = "0xDBDB70", Offset = "0xDBDB70", VA = "0xDBDB70", Slot = "7")]
	public override void killSelf()
	{
	}

	[Token(Token = "0x6000B48")]
	[Address(RVA = "0xDBDBFC", Offset = "0xDBDBFC", VA = "0xDBDBFC", Slot = "13")]
	public override void playHurtAnimation()
	{
	}

	[Token(Token = "0x6000B49")]
	[Address(RVA = "0xDBD9E8", Offset = "0xDBD9E8", VA = "0xDBD9E8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C69A8", Offset = "0x8C69A8")]
	private IEnumerator poisonGasAttack()
	{
		return null;
	}

	[Token(Token = "0x6000B4A")]
	[Address(RVA = "0xDBDA58", Offset = "0xDBDA58", VA = "0xDBDA58")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C6A0C", Offset = "0x8C6A0C")]
	protected IEnumerator castShotgunBlast()
	{
		return null;
	}

	[Token(Token = "0x6000B4B")]
	[Address(RVA = "0xDBDCB0", Offset = "0xDBDCB0", VA = "0xDBDCB0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C6A70", Offset = "0x8C6A70")]
	protected IEnumerator shootProjectile()
	{
		return null;
	}

	[Token(Token = "0x6000B4C")]
	[Address(RVA = "0xDBDD4C", Offset = "0xDBDD4C", VA = "0xDBDD4C")]
	public EnemyGasMan()
	{
	}
}
[Token(Token = "0x200019E")]
public class EnemyGhost : EnemyParent
{
	[Token(Token = "0x2000764")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B8424", Offset = "0x8B8424")]
	private sealed class <spinBeam>d__11 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400253D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400253E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400253F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EnemyGhost <>4__this;

		[Token(Token = "0x4002540")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <i>5__2;

		[Token(Token = "0x17000583")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002C04")]
			[Address(RVA = "0xDBF228", Offset = "0xDBF228", VA = "0xDBF228", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000584")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002C06")]
			[Address(RVA = "0xDBF290", Offset = "0xDBF290", VA = "0xDBF290", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002C01")]
		[Address(RVA = "0xDBE9D0", Offset = "0xDBE9D0", VA = "0xDBE9D0")]
		[DebuggerHidden]
		public <spinBeam>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x6002C02")]
		[Address(RVA = "0xDBEFAC", Offset = "0xDBEFAC", VA = "0xDBEFAC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002C03")]
		[Address(RVA = "0xDBEFB0", Offset = "0xDBEFB0", VA = "0xDBEFB0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002C05")]
		[Address(RVA = "0xDBF230", Offset = "0xDBF230", VA = "0xDBF230", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000765")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B8434", Offset = "0x8B8434")]
	private sealed class <shootProjectile>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002541")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002542")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002543")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject enemyProjectile;

		[Token(Token = "0x4002544")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public EnemyGhost <>4__this;

		[Token(Token = "0x4002545")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private GameObject <proj>5__2;

		[Token(Token = "0x4002546")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Rigidbody <projRB>5__3;

		[Token(Token = "0x17000585")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002C0A")]
			[Address(RVA = "0xDBEF3C", Offset = "0xDBEF3C", VA = "0xDBEF3C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000586")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002C0C")]
			[Address(RVA = "0xDBEFA4", Offset = "0xDBEFA4", VA = "0xDBEFA4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002C07")]
		[Address(RVA = "0xDBEA78", Offset = "0xDBEA78", VA = "0xDBEA78")]
		[DebuggerHidden]
		public <shootProjectile>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x6002C08")]
		[Address(RVA = "0xDBEC38", Offset = "0xDBEC38", VA = "0xDBEC38", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002C09")]
		[Address(RVA = "0xDBEC3C", Offset = "0xDBEC3C", VA = "0xDBEC3C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002C0B")]
		[Address(RVA = "0xDBEF44", Offset = "0xDBEF44", VA = "0xDBEF44", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000AC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public GameObject spawnParticle;

	[Token(Token = "0x4000AC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public float projSpeed;

	[Token(Token = "0x4000AC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public GameObject ghostLaserProj;

	[Token(Token = "0x4000AC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public int laserCount;

	[Token(Token = "0x4000AC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public GameObject deathParticle;

	[Token(Token = "0x4000AC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public GameObject bodyRoot;

	[Token(Token = "0x4000ACA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public GlitchEffects startGlitch;

	[Token(Token = "0x6000B4D")]
	[Address(RVA = "0xDBE6CC", Offset = "0xDBE6CC", VA = "0xDBE6CC", Slot = "12")]
	public override void enemyAttack(bool endTurnAfter = true)
	{
	}

	[Token(Token = "0x6000B4E")]
	[Address(RVA = "0xDBE78C", Offset = "0xDBE78C", VA = "0xDBE78C", Slot = "5")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000B4F")]
	[Address(RVA = "0xDBE8D0", Offset = "0xDBE8D0", VA = "0xDBE8D0", Slot = "6")]
	protected override void Update()
	{
	}

	[Token(Token = "0x6000B50")]
	[Address(RVA = "0xDBE974", Offset = "0xDBE974", VA = "0xDBE974", Slot = "13")]
	public override void playHurtAnimation()
	{
	}

	[Token(Token = "0x6000B51")]
	[Address(RVA = "0xDBE71C", Offset = "0xDBE71C", VA = "0xDBE71C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C6AD4", Offset = "0x8C6AD4")]
	protected IEnumerator spinBeam()
	{
		return null;
	}

	[Token(Token = "0x6000B52")]
	[Address(RVA = "0xDBE9FC", Offset = "0xDBE9FC", VA = "0xDBE9FC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C6B38", Offset = "0x8C6B38")]
	protected IEnumerator shootProjectile(GameObject enemyProjectile)
	{
		return null;
	}

	[Token(Token = "0x6000B53")]
	[Address(RVA = "0xDBEAA4", Offset = "0xDBEAA4", VA = "0xDBEAA4", Slot = "7")]
	public override void killSelf()
	{
	}

	[Token(Token = "0x6000B54")]
	[Address(RVA = "0xDBEC28", Offset = "0xDBEC28", VA = "0xDBEC28")]
	public EnemyGhost()
	{
	}
}
[Token(Token = "0x200019F")]
public class EnemyGnome : EnemyParent
{
	[Token(Token = "0x2000766")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B8444", Offset = "0x8B8444")]
	private sealed class <castRapidFire>d__14 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002547")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002548")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002549")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EnemyGnome <>4__this;

		[Token(Token = "0x400254A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <numOfProjectiles>5__2;

		[Token(Token = "0x400254B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <aimAccuracy>5__3;

		[Token(Token = "0x400254C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private GameObject <projectile>5__4;

		[Token(Token = "0x400254D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Quaternion <rotation>5__5;

		[Token(Token = "0x17000587")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002C10")]
			[Address(RVA = "0xDC0234", Offset = "0xDC0234", VA = "0xDC0234", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000588")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002C12")]
			[Address(RVA = "0xDC029C", Offset = "0xDC029C", VA = "0xDC029C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002C0D")]
		[Address(RVA = "0xDBF714", Offset = "0xDBF714", VA = "0xDBF714")]
		[DebuggerHidden]
		public <castRapidFire>d__14(int <>1__state)
		{
		}

		[Token(Token = "0x6002C0E")]
		[Address(RVA = "0xDBFF34", Offset = "0xDBFF34", VA = "0xDBFF34", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002C0F")]
		[Address(RVA = "0xDBFF38", Offset = "0xDBFF38", VA = "0xDBFF38", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002C11")]
		[Address(RVA = "0xDC023C", Offset = "0xDC023C", VA = "0xDC023C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000767")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B8454", Offset = "0x8B8454")]
	private sealed class <shootProjectile>d__15 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400254E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400254F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002550")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject enemyProjectile;

		[Token(Token = "0x4002551")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public EnemyGnome <>4__this;

		[Token(Token = "0x4002552")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private GameObject <proj>5__2;

		[Token(Token = "0x4002553")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Rigidbody <projRB>5__3;

		[Token(Token = "0x17000589")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002C16")]
			[Address(RVA = "0xDC05A8", Offset = "0xDC05A8", VA = "0xDC05A8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700058A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002C18")]
			[Address(RVA = "0xDC0610", Offset = "0xDC0610", VA = "0xDC0610", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002C13")]
		[Address(RVA = "0xDBF7BC", Offset = "0xDBF7BC", VA = "0xDBF7BC")]
		[DebuggerHidden]
		public <shootProjectile>d__15(int <>1__state)
		{
		}

		[Token(Token = "0x6002C14")]
		[Address(RVA = "0xDC02A4", Offset = "0xDC02A4", VA = "0xDC02A4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002C15")]
		[Address(RVA = "0xDC02A8", Offset = "0xDC02A8", VA = "0xDC02A8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002C17")]
		[Address(RVA = "0xDC05B0", Offset = "0xDC05B0", VA = "0xDC05B0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000ACB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public Rigidbody rb;

	[Token(Token = "0x4000ACC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public NavMeshAgent agent;

	[Token(Token = "0x4000ACD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private UnityEngine.Vector3 startPos;

	[Token(Token = "0x4000ACE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
	private Quaternion startRot;

	[Token(Token = "0x4000ACF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
	public int numOfFastProjectiles;

	[Token(Token = "0x4000AD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public GameObject spawnParticle;

	[Token(Token = "0x4000AD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public float projSpeed;

	[Token(Token = "0x4000AD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public GameObject projectile1;

	[Token(Token = "0x4000AD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public GameObject projectile2;

	[Token(Token = "0x4000AD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private float launchTimer;

	[Token(Token = "0x4000AD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
	private float launchCD;

	[Token(Token = "0x6000B55")]
	[Address(RVA = "0xDBF298", Offset = "0xDBF298", VA = "0xDBF298", Slot = "5")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000B56")]
	[Address(RVA = "0xDBF3EC", Offset = "0xDBF3EC", VA = "0xDBF3EC", Slot = "6")]
	protected override void Update()
	{
	}

	[Token(Token = "0x6000B57")]
	[Address(RVA = "0xDBF654", Offset = "0xDBF654", VA = "0xDBF654", Slot = "12")]
	public override void enemyAttack(bool endTurnAfter = true)
	{
	}

	[Token(Token = "0x6000B58")]
	[Address(RVA = "0xDBF6A4", Offset = "0xDBF6A4", VA = "0xDBF6A4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C6B9C", Offset = "0x8C6B9C")]
	protected IEnumerator castRapidFire()
	{
		return null;
	}

	[Token(Token = "0x6000B59")]
	[Address(RVA = "0xDBF740", Offset = "0xDBF740", VA = "0xDBF740")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C6C00", Offset = "0x8C6C00")]
	protected IEnumerator shootProjectile(GameObject enemyProjectile)
	{
		return null;
	}

	[Token(Token = "0x6000B5A")]
	[Address(RVA = "0xDBF7E8", Offset = "0xDBF7E8", VA = "0xDBF7E8", Slot = "7")]
	public override void killSelf()
	{
	}

	[Token(Token = "0x6000B5B")]
	[Address(RVA = "0xDBF8C4", Offset = "0xDBF8C4", VA = "0xDBF8C4")]
	public void resetGnome()
	{
	}

	[Token(Token = "0x6000B5C")]
	[Address(RVA = "0xDBF978", Offset = "0xDBF978", VA = "0xDBF978")]
	public void ragdollGnome()
	{
	}

	[Token(Token = "0x6000B5D")]
	[Address(RVA = "0xDBF9D0", Offset = "0xDBF9D0", VA = "0xDBF9D0", Slot = "10")]
	public override void damageEnemy(int amount, bool crit, int combo, bool isPhysical = false)
	{
	}

	[Token(Token = "0x6000B5E")]
	[Address(RVA = "0xDBFA9C", Offset = "0xDBFA9C", VA = "0xDBFA9C")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000B5F")]
	[Address(RVA = "0xDBFC98", Offset = "0xDBFC98", VA = "0xDBFC98")]
	private void OnTriggerEnter(Collider collision)
	{
	}

	[Token(Token = "0x6000B60")]
	[Address(RVA = "0xDBFE08", Offset = "0xDBFE08", VA = "0xDBFE08")]
	public void addForce(UnityEngine.Vector3 pos)
	{
	}

	[Token(Token = "0x6000B61")]
	[Address(RVA = "0xDBFF10", Offset = "0xDBFF10", VA = "0xDBFF10")]
	public EnemyGnome()
	{
	}
}
[Token(Token = "0x20001A0")]
public class EnemyHomonuculous : EnemyParent
{
	[Token(Token = "0x2000768")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B8464", Offset = "0x8B8464")]
	private sealed class <tonberryAttack>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002554")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002555")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002556")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EnemyHomonuculous <>4__this;

		[Token(Token = "0x4002557")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <runTime>5__2;

		[Token(Token = "0x4002558")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <maxRunTime>5__3;

		[Token(Token = "0x1700058B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002C1C")]
			[Address(RVA = "0xFD6E58", Offset = "0xFD6E58", VA = "0xFD6E58", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700058C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002C1E")]
			[Address(RVA = "0xFD6EC0", Offset = "0xFD6EC0", VA = "0xFD6EC0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002C19")]
		[Address(RVA = "0xFD6B00", Offset = "0xFD6B00", VA = "0xFD6B00")]
		[DebuggerHidden]
		public <tonberryAttack>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6002C1A")]
		[Address(RVA = "0xFD6B2C", Offset = "0xFD6B2C", VA = "0xFD6B2C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002C1B")]
		[Address(RVA = "0xFD6B30", Offset = "0xFD6B30", VA = "0xFD6B30", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002C1D")]
		[Address(RVA = "0xFD6E60", Offset = "0xFD6E60", VA = "0xFD6E60", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000AD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	public float runSpeed;

	[Token(Token = "0x6000B62")]
	[Address(RVA = "0xDC0B3C", Offset = "0xDC0B3C", VA = "0xDC0B3C", Slot = "5")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000B63")]
	[Address(RVA = "0xDC0B44", Offset = "0xDC0B44", VA = "0xDC0B44", Slot = "6")]
	protected override void Update()
	{
	}

	[Token(Token = "0x6000B64")]
	[Address(RVA = "0xDC0C70", Offset = "0xDC0C70", VA = "0xDC0C70", Slot = "12")]
	public override void enemyAttack(bool endTurnAfter = true)
	{
	}

	[Token(Token = "0x6000B65")]
	[Address(RVA = "0xDC0D30", Offset = "0xDC0D30", VA = "0xDC0D30", Slot = "13")]
	public override void playHurtAnimation()
	{
	}

	[Token(Token = "0x6000B66")]
	[Address(RVA = "0xDC0D98", Offset = "0xDC0D98", VA = "0xDC0D98", Slot = "7")]
	public override void killSelf()
	{
	}

	[Token(Token = "0x6000B67")]
	[Address(RVA = "0xDC0CC0", Offset = "0xDC0CC0", VA = "0xDC0CC0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C6C64", Offset = "0x8C6C64")]
	private IEnumerator tonberryAttack()
	{
		return null;
	}

	[Token(Token = "0x6000B68")]
	[Address(RVA = "0xDC0E24", Offset = "0xDC0E24", VA = "0xDC0E24")]
	public EnemyHomonuculous()
	{
	}
}
[Token(Token = "0x20001A1")]
public class EnemyIcicle : EnemyParent
{
	[Token(Token = "0x2000769")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B8474", Offset = "0x8B8474")]
	private sealed class <iceBeams>d__11 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002559")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400255A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400255B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EnemyIcicle <>4__this;

		[Token(Token = "0x400255C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private UnityEngine.Vector3[] <launchPoints>5__2;

		[Token(Token = "0x400255D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int <numOfShots>5__3;

		[Token(Token = "0x400255E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int <i>5__4;

		[Token(Token = "0x1700058D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002C22")]
			[Address(RVA = "0xFDBDF4", Offset = "0xFDBDF4", VA = "0xFDBDF4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700058E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002C24")]
			[Address(RVA = "0xFDBE5C", Offset = "0xFDBE5C", VA = "0xFDBE5C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002C1F")]
		[Address(RVA = "0xFDB09C", Offset = "0xFDB09C", VA = "0xFDB09C")]
		[DebuggerHidden]
		public <iceBeams>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x6002C20")]
		[Address(RVA = "0xFDB8B4", Offset = "0xFDB8B4", VA = "0xFDB8B4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002C21")]
		[Address(RVA = "0xFDB8B8", Offset = "0xFDB8B8", VA = "0xFDB8B8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002C23")]
		[Address(RVA = "0xFDBDFC", Offset = "0xFDBDFC", VA = "0xFDBDFC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200076A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B8484", Offset = "0x8B8484")]
	private sealed class <shootProjectile>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400255F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002560")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002561")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject enemyProjectile;

		[Token(Token = "0x4002562")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public EnemyIcicle <>4__this;

		[Token(Token = "0x4002563")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float speed;

		[Token(Token = "0x4002564")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private GameObject <proj>5__2;

		[Token(Token = "0x4002565")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Rigidbody <projRB>5__3;

		[Token(Token = "0x1700058F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002C28")]
			[Address(RVA = "0xFDC0F8", Offset = "0xFDC0F8", VA = "0xFDC0F8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000590")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002C2A")]
			[Address(RVA = "0xFDC160", Offset = "0xFDC160", VA = "0xFDC160", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002C25")]
		[Address(RVA = "0xFDB154", Offset = "0xFDB154", VA = "0xFDB154")]
		[DebuggerHidden]
		public <shootProjectile>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x6002C26")]
		[Address(RVA = "0xFDBE64", Offset = "0xFDBE64", VA = "0xFDBE64", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002C27")]
		[Address(RVA = "0xFDBE68", Offset = "0xFDBE68", VA = "0xFDBE68", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002C29")]
		[Address(RVA = "0xFDC100", Offset = "0xFDC100", VA = "0xFDC100", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000AD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public GameObject iceBeamPrefab;

	[Token(Token = "0x4000AD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private UnityEngine.Vector3 startPos;

	[Token(Token = "0x4000AD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
	public float f8speed;

	[Token(Token = "0x4000ADA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public float xScale;

	[Token(Token = "0x4000ADB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
	public float yScale;

	[Token(Token = "0x4000ADC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private bool isCentering;

	[Token(Token = "0x4000ADD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public Transform bodyRoot;

	[Token(Token = "0x4000ADE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private UnityEngine.Vector3 projTransOrigin;

	[Token(Token = "0x6000B69")]
	[Address(RVA = "0xFDABCC", Offset = "0xFDABCC", VA = "0xFDABCC", Slot = "5")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000B6A")]
	[Address(RVA = "0xFDACC8", Offset = "0xFDACC8", VA = "0xFDACC8")]
	private new void Update()
	{
	}

	[Token(Token = "0x6000B6B")]
	[Address(RVA = "0xFDAFF4", Offset = "0xFDAFF4", VA = "0xFDAFF4", Slot = "12")]
	public override void enemyAttack(bool endTurnAfter = true)
	{
	}

	[Token(Token = "0x6000B6C")]
	[Address(RVA = "0xFDB02C", Offset = "0xFDB02C", VA = "0xFDB02C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C6CC8", Offset = "0x8C6CC8")]
	private IEnumerator iceBeams()
	{
		return null;
	}

	[Token(Token = "0x6000B6D")]
	[Address(RVA = "0xFDB0C8", Offset = "0xFDB0C8", VA = "0xFDB0C8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C6D2C", Offset = "0x8C6D2C")]
	protected IEnumerator shootProjectile(GameObject enemyProjectile, float speed)
	{
		return null;
	}

	[Token(Token = "0x6000B6E")]
	[Address(RVA = "0xFDB180", Offset = "0xFDB180", VA = "0xFDB180", Slot = "7")]
	public override void killSelf()
	{
	}

	[Token(Token = "0x6000B6F")]
	[Address(RVA = "0xFDB890", Offset = "0xFDB890", VA = "0xFDB890")]
	public EnemyIcicle()
	{
	}
}
[Token(Token = "0x20001A2")]
public class EnemyMechaBoat : EnemyParent
{
	[Token(Token = "0x200076B")]
	public enum BattlePhase
	{
		[Token(Token = "0x4002567")]
		boatForm,
		[Token(Token = "0x4002568")]
		mechForm
	}

	[Token(Token = "0x200076C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B8494", Offset = "0x8B8494")]
	private sealed class <firstAttack>d__24 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002569")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400256A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400256B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EnemyMechaBoat <>4__this;

		[Token(Token = "0x17000591")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002C2E")]
			[Address(RVA = "0xFE166C", Offset = "0xFE166C", VA = "0xFE166C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000592")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002C30")]
			[Address(RVA = "0xFE16D4", Offset = "0xFE16D4", VA = "0xFE16D4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002C2B")]
		[Address(RVA = "0xFDFA24", Offset = "0xFDFA24", VA = "0xFDFA24")]
		[DebuggerHidden]
		public <firstAttack>d__24(int <>1__state)
		{
		}

		[Token(Token = "0x6002C2C")]
		[Address(RVA = "0xFE1550", Offset = "0xFE1550", VA = "0xFE1550", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002C2D")]
		[Address(RVA = "0xFE1554", Offset = "0xFE1554", VA = "0xFE1554", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002C2F")]
		[Address(RVA = "0xFE1674", Offset = "0xFE1674", VA = "0xFE1674", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200076D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B84A4", Offset = "0x8B84A4")]
	private sealed class <cannonAirRaid>d__25 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400256C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400256D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400256E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EnemyMechaBoat <>4__this;

		[Token(Token = "0x400256F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <numOfShots>5__2;

		[Token(Token = "0x4002570")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int <activeCannons>5__3;

		[Token(Token = "0x4002571")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int <i>5__4;

		[Token(Token = "0x17000593")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002C34")]
			[Address(RVA = "0xFE0FE8", Offset = "0xFE0FE8", VA = "0xFE0FE8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000594")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002C36")]
			[Address(RVA = "0xFE1050", Offset = "0xFE1050", VA = "0xFE1050", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002C31")]
		[Address(RVA = "0xFDFAC0", Offset = "0xFDFAC0", VA = "0xFDFAC0")]
		[DebuggerHidden]
		public <cannonAirRaid>d__25(int <>1__state)
		{
		}

		[Token(Token = "0x6002C32")]
		[Address(RVA = "0xFE0450", Offset = "0xFE0450", VA = "0xFE0450", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002C33")]
		[Address(RVA = "0xFE0454", Offset = "0xFE0454", VA = "0xFE0454", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002C35")]
		[Address(RVA = "0xFE0FF0", Offset = "0xFE0FF0", VA = "0xFE0FF0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200076E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B84B4", Offset = "0x8B84B4")]
	private sealed class <spawnEnemy>d__26 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002572")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002573")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002574")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EnemyMechaBoat <>4__this;

		[Token(Token = "0x17000595")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002C3A")]
			[Address(RVA = "0xFE24B4", Offset = "0xFE24B4", VA = "0xFE24B4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000596")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002C3C")]
			[Address(RVA = "0xFE251C", Offset = "0xFE251C", VA = "0xFE251C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002C37")]
		[Address(RVA = "0xFDFB5C", Offset = "0xFDFB5C", VA = "0xFDFB5C")]
		[DebuggerHidden]
		public <spawnEnemy>d__26(int <>1__state)
		{
		}

		[Token(Token = "0x6002C38")]
		[Address(RVA = "0xFE22F4", Offset = "0xFE22F4", VA = "0xFE22F4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002C39")]
		[Address(RVA = "0xFE22F8", Offset = "0xFE22F8", VA = "0xFE22F8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002C3B")]
		[Address(RVA = "0xFE24BC", Offset = "0xFE24BC", VA = "0xFE24BC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200076F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B84C4", Offset = "0x8B84C4")]
	private sealed class <shootProjectile>d__27 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002575")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002576")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002577")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject enemyProjectile;

		[Token(Token = "0x4002578")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public EnemyMechaBoat <>4__this;

		[Token(Token = "0x4002579")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float speed;

		[Token(Token = "0x400257A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private GameObject <proj>5__2;

		[Token(Token = "0x400257B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Rigidbody <projRB>5__3;

		[Token(Token = "0x17000597")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002C40")]
			[Address(RVA = "0xFE2284", Offset = "0xFE2284", VA = "0xFE2284", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000598")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002C42")]
			[Address(RVA = "0xFE22EC", Offset = "0xFE22EC", VA = "0xFE22EC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002C3D")]
		[Address(RVA = "0xFDFC14", Offset = "0xFDFC14", VA = "0xFDFC14")]
		[DebuggerHidden]
		public <shootProjectile>d__27(int <>1__state)
		{
		}

		[Token(Token = "0x6002C3E")]
		[Address(RVA = "0xFE1FF0", Offset = "0xFE1FF0", VA = "0xFE1FF0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002C3F")]
		[Address(RVA = "0xFE1FF4", Offset = "0xFE1FF4", VA = "0xFE1FF4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002C41")]
		[Address(RVA = "0xFE228C", Offset = "0xFE228C", VA = "0xFE228C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000770")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B84D4", Offset = "0x8B84D4")]
	private sealed class <finalAttack>d__28 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400257C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400257D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400257E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EnemyMechaBoat <>4__this;

		[Token(Token = "0x400257F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private MusicPlayer <player>5__2;

		[Token(Token = "0x17000599")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002C46")]
			[Address(RVA = "0xFE14E0", Offset = "0xFE14E0", VA = "0xFE14E0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700059A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002C48")]
			[Address(RVA = "0xFE1548", Offset = "0xFE1548", VA = "0xFE1548", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002C43")]
		[Address(RVA = "0xFDFCB0", Offset = "0xFDFCB0", VA = "0xFDFCB0")]
		[DebuggerHidden]
		public <finalAttack>d__28(int <>1__state)
		{
		}

		[Token(Token = "0x6002C44")]
		[Address(RVA = "0xFE1240", Offset = "0xFE1240", VA = "0xFE1240", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002C45")]
		[Address(RVA = "0xFE1244", Offset = "0xFE1244", VA = "0xFE1244", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002C47")]
		[Address(RVA = "0xFE14E8", Offset = "0xFE14E8", VA = "0xFE14E8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000771")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B84E4", Offset = "0x8B84E4")]
	private sealed class <moveBryceToShip>d__29 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002580")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002581")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002582")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EnemyMechaBoat <>4__this;

		[Token(Token = "0x4002583")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private MusicPlayer <music>5__2;

		[Token(Token = "0x4002584")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <originY>5__3;

		[Token(Token = "0x1700059B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002C4C")]
			[Address(RVA = "0xFE1DB0", Offset = "0xFE1DB0", VA = "0xFE1DB0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700059C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002C4E")]
			[Address(RVA = "0xFE1E18", Offset = "0xFE1E18", VA = "0xFE1E18", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002C49")]
		[Address(RVA = "0xFDFD4C", Offset = "0xFDFD4C", VA = "0xFDFD4C")]
		[DebuggerHidden]
		public <moveBryceToShip>d__29(int <>1__state)
		{
		}

		[Token(Token = "0x6002C4A")]
		[Address(RVA = "0xFE16DC", Offset = "0xFE16DC", VA = "0xFE16DC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002C4B")]
		[Address(RVA = "0xFE16E0", Offset = "0xFE16E0", VA = "0xFE16E0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002C4D")]
		[Address(RVA = "0xFE1DB8", Offset = "0xFE1DB8", VA = "0xFE1DB8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000772")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B84F4", Offset = "0x8B84F4")]
	private sealed class <sharkTimer>d__33 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002585")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002586")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002587")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EnemyMechaBoat <>4__this;

		[Token(Token = "0x1700059D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002C52")]
			[Address(RVA = "0xFE1F80", Offset = "0xFE1F80", VA = "0xFE1F80", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700059E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002C54")]
			[Address(RVA = "0xFE1FE8", Offset = "0xFE1FE8", VA = "0xFE1FE8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002C4F")]
		[Address(RVA = "0xFE03EC", Offset = "0xFE03EC", VA = "0xFE03EC")]
		[DebuggerHidden]
		public <sharkTimer>d__33(int <>1__state)
		{
		}

		[Token(Token = "0x6002C50")]
		[Address(RVA = "0xFE1E20", Offset = "0xFE1E20", VA = "0xFE1E20", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002C51")]
		[Address(RVA = "0xFE1E24", Offset = "0xFE1E24", VA = "0xFE1E24", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002C53")]
		[Address(RVA = "0xFE1F88", Offset = "0xFE1F88", VA = "0xFE1F88", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000773")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B8504", Offset = "0x8B8504")]
	private sealed class <delayDeath>d__34 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002588")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002589")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400258A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EnemyMechaBoat <>4__this;

		[Token(Token = "0x1700059F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002C58")]
			[Address(RVA = "0xFE11D0", Offset = "0xFE11D0", VA = "0xFE11D0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005A0")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002C5A")]
			[Address(RVA = "0xFE1238", Offset = "0xFE1238", VA = "0xFE1238", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002C55")]
		[Address(RVA = "0xFE0418", Offset = "0xFE0418", VA = "0xFE0418")]
		[DebuggerHidden]
		public <delayDeath>d__34(int <>1__state)
		{
		}

		[Token(Token = "0x6002C56")]
		[Address(RVA = "0xFE1058", Offset = "0xFE1058", VA = "0xFE1058", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002C57")]
		[Address(RVA = "0xFE105C", Offset = "0xFE105C", VA = "0xFE105C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002C59")]
		[Address(RVA = "0xFE11D8", Offset = "0xFE11D8", VA = "0xFE11D8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000ADF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public Animator bryceAnim;

	[Token(Token = "0x4000AE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public float projSpeed;

	[Token(Token = "0x4000AE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public Transform[] cannonTransforms;

	[Token(Token = "0x4000AE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public GameObject cannonBall;

	[Token(Token = "0x4000AE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public GameObject cannonFireParticlePrefab;

	[Token(Token = "0x4000AE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public GameObject xIndicator;

	[Token(Token = "0x4000AE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public Transform mechaAAT;

	[Token(Token = "0x4000AE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public AudioClip bossTrack2;

	[Token(Token = "0x4000AE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public AudioClip finalSong;

	[Token(Token = "0x4000AE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public AudioSource cannonSound;

	[Token(Token = "0x4000AE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public GameObject boatCollider;

	[Token(Token = "0x4000AEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public EnemyParent[] enemiesToSpawn;

	[Token(Token = "0x4000AEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public BattleDialogueBox dialogueBox;

	[Token(Token = "0x4000AEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public string[] dialogueLines;

	[Token(Token = "0x4000AED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private bool finalAttackStarted;

	[Token(Token = "0x4000AEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
	private UnityEngine.Vector3 originalProjPos;

	[Token(Token = "0x4000AEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BC4F0", Offset = "0x8BC4F0")]
	public AudioClip[] voiceClips;

	[Token(Token = "0x4000AF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public AudioClip[] attackClips;

	[Token(Token = "0x4000AF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	private BattlePhase battlePhase;

	[Token(Token = "0x4000AF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1AC")]
	private int turnsTaken;

	[Token(Token = "0x6000B70")]
	[Address(RVA = "0xFDF618", Offset = "0xFDF618", VA = "0xFDF618", Slot = "5")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000B71")]
	[Address(RVA = "0xFDF6F0", Offset = "0xFDF6F0", VA = "0xFDF6F0", Slot = "6")]
	protected override void Update()
	{
	}

	[Token(Token = "0x6000B72")]
	[Address(RVA = "0xFDF6F4", Offset = "0xFDF6F4", VA = "0xFDF6F4")]
	public void playDialogue(string dialogue)
	{
	}

	[Token(Token = "0x6000B73")]
	[Address(RVA = "0xFDF9B4", Offset = "0xFDF9B4", VA = "0xFDF9B4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C6D90", Offset = "0x8C6D90")]
	private IEnumerator firstAttack()
	{
		return null;
	}

	[Token(Token = "0x6000B74")]
	[Address(RVA = "0xFDFA50", Offset = "0xFDFA50", VA = "0xFDFA50")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C6DF4", Offset = "0x8C6DF4")]
	private IEnumerator cannonAirRaid()
	{
		return null;
	}

	[Token(Token = "0x6000B75")]
	[Address(RVA = "0xFDFAEC", Offset = "0xFDFAEC", VA = "0xFDFAEC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C6E58", Offset = "0x8C6E58")]
	private IEnumerator spawnEnemy()
	{
		return null;
	}

	[Token(Token = "0x6000B76")]
	[Address(RVA = "0xFDFB88", Offset = "0xFDFB88", VA = "0xFDFB88")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C6EBC", Offset = "0x8C6EBC")]
	protected IEnumerator shootProjectile(GameObject enemyProjectile, float speed)
	{
		return null;
	}

	[Token(Token = "0x6000B77")]
	[Address(RVA = "0xFDFC40", Offset = "0xFDFC40", VA = "0xFDFC40")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C6F20", Offset = "0x8C6F20")]
	private IEnumerator finalAttack()
	{
		return null;
	}

	[Token(Token = "0x6000B78")]
	[Address(RVA = "0xFDFCDC", Offset = "0xFDFCDC", VA = "0xFDFCDC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C6F84", Offset = "0x8C6F84")]
	protected IEnumerator moveBryceToShip()
	{
		return null;
	}

	[Token(Token = "0x6000B79")]
	[Address(RVA = "0xFDFD78", Offset = "0xFDFD78", VA = "0xFDFD78", Slot = "12")]
	public override void enemyAttack(bool endTurnAfter = true)
	{
	}

	[Token(Token = "0x6000B7A")]
	[Address(RVA = "0xFE00B0", Offset = "0xFE00B0", VA = "0xFE00B0", Slot = "13")]
	public override void playHurtAnimation()
	{
	}

	[Token(Token = "0x6000B7B")]
	[Address(RVA = "0xFE01B4", Offset = "0xFE01B4", VA = "0xFE01B4", Slot = "7")]
	public override void killSelf()
	{
	}

	[Token(Token = "0x6000B7C")]
	[Address(RVA = "0xFDFF74", Offset = "0xFDFF74", VA = "0xFDFF74")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C6FE8", Offset = "0x8C6FE8")]
	private IEnumerator sharkTimer()
	{
		return null;
	}

	[Token(Token = "0x6000B7D")]
	[Address(RVA = "0xFE037C", Offset = "0xFE037C", VA = "0xFE037C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C704C", Offset = "0x8C704C")]
	private IEnumerator delayDeath()
	{
		return null;
	}

	[Token(Token = "0x6000B7E")]
	[Address(RVA = "0xFE0444", Offset = "0xFE0444", VA = "0xFE0444")]
	public EnemyMechaBoat()
	{
	}
}
[Token(Token = "0x20001A3")]
public class EnemySharkAttack : MonoBehaviour
{
	[Token(Token = "0x2000774")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B8514", Offset = "0x8B8514")]
	private sealed class <jumpAttackTimer>d__10 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400258B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400258C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400258D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EnemySharkAttack <>4__this;

		[Token(Token = "0x400258E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private MusicPlayer <player>5__2;

		[Token(Token = "0x400258F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <vol>5__3;

		[Token(Token = "0x4002590")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int <randomJump>5__4;

		[Token(Token = "0x4002591")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private UnityEngine.Vector3 <nextPos>5__5;

		[Token(Token = "0x4002592")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private UnityEngine.Vector3 <currentHeadPos>5__6;

		[Token(Token = "0x170005A1")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002C5E")]
			[Address(RVA = "0xC424AC", Offset = "0xC424AC", VA = "0xC424AC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005A2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002C60")]
			[Address(RVA = "0xC42514", Offset = "0xC42514", VA = "0xC42514", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002C5B")]
		[Address(RVA = "0xC4167C", Offset = "0xC4167C", VA = "0xC4167C")]
		[DebuggerHidden]
		public <jumpAttackTimer>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x6002C5C")]
		[Address(RVA = "0xC41774", Offset = "0xC41774", VA = "0xC41774", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002C5D")]
		[Address(RVA = "0xC41778", Offset = "0xC41778", VA = "0xC41778", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002C5F")]
		[Address(RVA = "0xC424B4", Offset = "0xC424B4", VA = "0xC424B4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000AF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform[] spawnPoints;

	[Token(Token = "0x4000AF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform[] jumpPoints;

	[Token(Token = "0x4000AF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject splashParticle;

	[Token(Token = "0x4000AF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AudioSource splashSound;

	[Token(Token = "0x4000AF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AudioSource chompSound;

	[Token(Token = "0x4000AF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AudioSource warningSound;

	[Token(Token = "0x4000AF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float swimSpeed;

	[Token(Token = "0x4000AFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public int damage;

	[Token(Token = "0x6000B7F")]
	[Address(RVA = "0xC415DC", Offset = "0xC415DC", VA = "0xC415DC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B80")]
	[Address(RVA = "0xC415E0", Offset = "0xC415E0", VA = "0xC415E0")]
	public void useJumpAttack()
	{
	}

	[Token(Token = "0x6000B81")]
	[Address(RVA = "0xC4160C", Offset = "0xC4160C", VA = "0xC4160C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C70B0", Offset = "0x8C70B0")]
	private IEnumerator jumpAttackTimer()
	{
		return null;
	}

	[Token(Token = "0x6000B82")]
	[Address(RVA = "0xC416A8", Offset = "0xC416A8", VA = "0xC416A8")]
	private void OnTriggerEnter(Collider collision)
	{
	}

	[Token(Token = "0x6000B83")]
	[Address(RVA = "0xC41764", Offset = "0xC41764", VA = "0xC41764")]
	public EnemySharkAttack()
	{
	}
}
[Token(Token = "0x20001A4")]
public class OrbRotate : MonoBehaviour
{
	[Token(Token = "0x4000AFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float RotationSpeed;

	[Token(Token = "0x6000B84")]
	[Address(RVA = "0xAF8A40", Offset = "0xAF8A40", VA = "0xAF8A40")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B85")]
	[Address(RVA = "0xAF8A44", Offset = "0xAF8A44", VA = "0xAF8A44")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B86")]
	[Address(RVA = "0xAF8B70", Offset = "0xAF8B70", VA = "0xAF8B70")]
	public OrbRotate()
	{
	}
}
[Token(Token = "0x20001A5")]
public class EnemyPirateImp : EnemyParent
{
	[Token(Token = "0x2000775")]
	public enum MovementType
	{
		[Token(Token = "0x4002594")]
		flip,
		[Token(Token = "0x4002595")]
		teleport
	}

	[Token(Token = "0x2000776")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B8524", Offset = "0x8B8524")]
	private sealed class <delayAttackEnd>d__21 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002596")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002597")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002598")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float time;

		[Token(Token = "0x4002599")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public EnemyPirateImp <>4__this;

		[Token(Token = "0x170005A3")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002C64")]
			[Address(RVA = "0xFE83F0", Offset = "0xFE83F0", VA = "0xFE83F0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005A4")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002C66")]
			[Address(RVA = "0xFE8458", Offset = "0xFE8458", VA = "0xFE8458", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002C61")]
		[Address(RVA = "0xFE8194", Offset = "0xFE8194", VA = "0xFE8194")]
		[DebuggerHidden]
		public <delayAttackEnd>d__21(int <>1__state)
		{
		}

		[Token(Token = "0x6002C62")]
		[Address(RVA = "0xFE832C", Offset = "0xFE832C", VA = "0xFE832C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002C63")]
		[Address(RVA = "0xFE8330", Offset = "0xFE8330", VA = "0xFE8330", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002C65")]
		[Address(RVA = "0xFE83F8", Offset = "0xFE83F8", VA = "0xFE83F8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000777")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B8534", Offset = "0x8B8534")]
	private sealed class <shootProjectile>d__22 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400259A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400259B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400259C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject projectile;

		[Token(Token = "0x400259D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public EnemyPirateImp <>4__this;

		[Token(Token = "0x400259E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private GameObject <proj>5__2;

		[Token(Token = "0x400259F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Rigidbody <projRB>5__3;

		[Token(Token = "0x170005A5")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002C6A")]
			[Address(RVA = "0xFE877C", Offset = "0xFE877C", VA = "0xFE877C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005A6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002C6C")]
			[Address(RVA = "0xFE87E4", Offset = "0xFE87E4", VA = "0xFE87E4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002C67")]
		[Address(RVA = "0xFE81C0", Offset = "0xFE81C0", VA = "0xFE81C0")]
		[DebuggerHidden]
		public <shootProjectile>d__22(int <>1__state)
		{
		}

		[Token(Token = "0x6002C68")]
		[Address(RVA = "0xFE8460", Offset = "0xFE8460", VA = "0xFE8460", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002C69")]
		[Address(RVA = "0xFE8464", Offset = "0xFE8464", VA = "0xFE8464", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002C6B")]
		[Address(RVA = "0xFE8784", Offset = "0xFE8784", VA = "0xFE8784", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000AFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public GameObject enemyProjectile;

	[Token(Token = "0x4000AFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public GameObject enemyProjectile2;

	[Token(Token = "0x4000AFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public GameObject enemyProjectile3;

	[Token(Token = "0x4000AFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public GameObject spawnParticle;

	[Token(Token = "0x4000B00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public NavMeshAgent agent;

	[Token(Token = "0x4000B01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private UnityEngine.Vector3 originPoint;

	[Token(Token = "0x4000B02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
	public float walkRadius;

	[Token(Token = "0x4000B03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public float projSpeed;

	[Token(Token = "0x4000B04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
	private float initialMoveSpeed;

	[Token(Token = "0x4000B05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private float timer;

	[Token(Token = "0x4000B06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
	private float timeBetweenMoves;

	[Token(Token = "0x4000B07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private bool animStart;

	[Token(Token = "0x4000B08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public GameObject teleportParticle;

	[Token(Token = "0x4000B09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public MovementType movementType;

	[Token(Token = "0x170000C2")]
	private bool atCenter
	{
		[Token(Token = "0x6000B87")]
		[Address(RVA = "0xFE771C", Offset = "0xFE771C", VA = "0xFE771C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000B88")]
	[Address(RVA = "0xFE77F4", Offset = "0xFE77F4", VA = "0xFE77F4", Slot = "5")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000B89")]
	[Address(RVA = "0xFE7850", Offset = "0xFE7850", VA = "0xFE7850", Slot = "6")]
	protected override void Update()
	{
	}

	[Token(Token = "0x6000B8A")]
	[Address(RVA = "0xFE7C4C", Offset = "0xFE7C4C", VA = "0xFE7C4C")]
	private void makeTeleportPartcile()
	{
	}

	[Token(Token = "0x6000B8B")]
	[Address(RVA = "0xFE7E8C", Offset = "0xFE7E8C", VA = "0xFE7E8C", Slot = "12")]
	public override void enemyAttack(bool endTurnAfter = true)
	{
	}

	[Token(Token = "0x6000B8C")]
	[Address(RVA = "0xFE8114", Offset = "0xFE8114", VA = "0xFE8114")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C7114", Offset = "0x8C7114")]
	private IEnumerator delayAttackEnd(float time)
	{
		return null;
	}

	[Token(Token = "0x6000B8D")]
	[Address(RVA = "0xFE8098", Offset = "0xFE8098", VA = "0xFE8098")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C7178", Offset = "0x8C7178")]
	protected IEnumerator shootProjectile(GameObject projectile)
	{
		return null;
	}

	[Token(Token = "0x6000B8E")]
	[Address(RVA = "0xFE7B28", Offset = "0xFE7B28", VA = "0xFE7B28")]
	protected void pickPointOnNavMesh()
	{
	}

	[Token(Token = "0x6000B8F")]
	[Address(RVA = "0xFE7D6C", Offset = "0xFE7D6C", VA = "0xFE7D6C")]
	protected void teleportTonavMeshPoint()
	{
	}

	[Token(Token = "0x6000B90")]
	[Address(RVA = "0xFE81EC", Offset = "0xFE81EC", VA = "0xFE81EC", Slot = "7")]
	public override void killSelf()
	{
	}

	[Token(Token = "0x6000B91")]
	[Address(RVA = "0xFE8308", Offset = "0xFE8308", VA = "0xFE8308")]
	public EnemyPirateImp()
	{
	}
}
[Token(Token = "0x20001A6")]
public class EnemyPirateTroll : EnemyParent
{
	[Token(Token = "0x2000778")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B8544", Offset = "0x8B8544")]
	private sealed class <cleaveAttack>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40025A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40025A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40025A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EnemyPirateTroll <>4__this;

		[Token(Token = "0x170005A7")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002C70")]
			[Address(RVA = "0xFE8D4C", Offset = "0xFE8D4C", VA = "0xFE8D4C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005A8")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002C72")]
			[Address(RVA = "0xFE8DB4", Offset = "0xFE8DB4", VA = "0xFE8DB4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002C6D")]
		[Address(RVA = "0xFE8958", Offset = "0xFE8958", VA = "0xFE8958")]
		[DebuggerHidden]
		public <cleaveAttack>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6002C6E")]
		[Address(RVA = "0xFE8B58", Offset = "0xFE8B58", VA = "0xFE8B58", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002C6F")]
		[Address(RVA = "0xFE8B5C", Offset = "0xFE8B5C", VA = "0xFE8B5C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002C71")]
		[Address(RVA = "0xFE8D54", Offset = "0xFE8D54", VA = "0xFE8D54", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000779")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B8554", Offset = "0x8B8554")]
	private sealed class <shootProjectileBlock>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40025A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40025A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40025A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EnemyPirateTroll <>4__this;

		[Token(Token = "0x40025A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GameObject <proj>5__2;

		[Token(Token = "0x40025A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Rigidbody <projRB>5__3;

		[Token(Token = "0x170005A9")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002C76")]
			[Address(RVA = "0xFE9050", Offset = "0xFE9050", VA = "0xFE9050", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005AA")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002C78")]
			[Address(RVA = "0xFE90B8", Offset = "0xFE90B8", VA = "0xFE90B8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002C73")]
		[Address(RVA = "0xFE89F4", Offset = "0xFE89F4", VA = "0xFE89F4")]
		[DebuggerHidden]
		public <shootProjectileBlock>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6002C74")]
		[Address(RVA = "0xFE8DBC", Offset = "0xFE8DBC", VA = "0xFE8DBC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002C75")]
		[Address(RVA = "0xFE8DC0", Offset = "0xFE8DC0", VA = "0xFE8DC0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002C77")]
		[Address(RVA = "0xFE9058", Offset = "0xFE9058", VA = "0xFE9058", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000B0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public GameObject cleaveParticle;

	[Token(Token = "0x4000B0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public GameObject spawnParticle;

	[Token(Token = "0x4000B0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public GameObject cleaveProj;

	[Token(Token = "0x4000B0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public float projSpeed;

	[Token(Token = "0x6000B92")]
	[Address(RVA = "0xFE87EC", Offset = "0xFE87EC", VA = "0xFE87EC", Slot = "5")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000B93")]
	[Address(RVA = "0xFE8830", Offset = "0xFE8830", VA = "0xFE8830", Slot = "6")]
	protected override void Update()
	{
	}

	[Token(Token = "0x6000B94")]
	[Address(RVA = "0xFE88E8", Offset = "0xFE88E8", VA = "0xFE88E8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C71DC", Offset = "0x8C71DC")]
	private IEnumerator cleaveAttack()
	{
		return null;
	}

	[Token(Token = "0x6000B95")]
	[Address(RVA = "0xFE8984", Offset = "0xFE8984", VA = "0xFE8984")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C7240", Offset = "0x8C7240")]
	protected IEnumerator shootProjectileBlock()
	{
		return null;
	}

	[Token(Token = "0x6000B96")]
	[Address(RVA = "0xFE8A20", Offset = "0xFE8A20", VA = "0xFE8A20", Slot = "12")]
	public override void enemyAttack(bool endTurnAfter = true)
	{
	}

	[Token(Token = "0x6000B97")]
	[Address(RVA = "0xFE8A6C", Offset = "0xFE8A6C", VA = "0xFE8A6C", Slot = "13")]
	public override void playHurtAnimation()
	{
	}

	[Token(Token = "0x6000B98")]
	[Address(RVA = "0xFE8AC8", Offset = "0xFE8AC8", VA = "0xFE8AC8", Slot = "7")]
	public override void killSelf()
	{
	}

	[Token(Token = "0x6000B99")]
	[Address(RVA = "0xFE8B4C", Offset = "0xFE8B4C", VA = "0xFE8B4C")]
	public EnemyPirateTroll()
	{
	}
}
[Token(Token = "0x20001A7")]
public class EnemyRoller : EnemyParent
{
	[Token(Token = "0x200077A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B8564", Offset = "0x8B8564")]
	private sealed class <castShotgunBlast>d__15 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40025A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40025A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40025AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EnemyRoller <>4__this;

		[Token(Token = "0x170005AB")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002C7C")]
			[Address(RVA = "0xFEB684", Offset = "0xFEB684", VA = "0xFEB684", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005AC")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002C7E")]
			[Address(RVA = "0xFEB6EC", Offset = "0xFEB6EC", VA = "0xFEB6EC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002C79")]
		[Address(RVA = "0xFEB230", Offset = "0xFEB230", VA = "0xFEB230")]
		[DebuggerHidden]
		public <castShotgunBlast>d__15(int <>1__state)
		{
		}

		[Token(Token = "0x6002C7A")]
		[Address(RVA = "0xFEB45C", Offset = "0xFEB45C", VA = "0xFEB45C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002C7B")]
		[Address(RVA = "0xFEB460", Offset = "0xFEB460", VA = "0xFEB460", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002C7D")]
		[Address(RVA = "0xFEB68C", Offset = "0xFEB68C", VA = "0xFEB68C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200077B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B8574", Offset = "0x8B8574")]
	private sealed class <makeEnemyRapidFire>d__16 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40025AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40025AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40025AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EnemyRoller <>4__this;

		[Token(Token = "0x40025AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject enemy;

		[Token(Token = "0x40025AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <aimAccuracy>5__2;

		[Token(Token = "0x40025B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int <numOfProjectiles>5__3;

		[Token(Token = "0x170005AD")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002C82")]
			[Address(RVA = "0xFEB9A0", Offset = "0xFEB9A0", VA = "0xFEB9A0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005AE")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002C84")]
			[Address(RVA = "0xFEBA08", Offset = "0xFEBA08", VA = "0xFEBA08", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002C7F")]
		[Address(RVA = "0xFEB2D8", Offset = "0xFEB2D8", VA = "0xFEB2D8")]
		[DebuggerHidden]
		public <makeEnemyRapidFire>d__16(int <>1__state)
		{
		}

		[Token(Token = "0x6002C80")]
		[Address(RVA = "0xFEB6F4", Offset = "0xFEB6F4", VA = "0xFEB6F4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002C81")]
		[Address(RVA = "0xFEB6F8", Offset = "0xFEB6F8", VA = "0xFEB6F8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002C83")]
		[Address(RVA = "0xFEB9A8", Offset = "0xFEB9A8", VA = "0xFEB9A8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200077C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B8584", Offset = "0x8B8584")]
	private sealed class <shootProjectile>d__18 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40025B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40025B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40025B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EnemyRoller <>4__this;

		[Token(Token = "0x40025B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform launchTrans;

		[Token(Token = "0x40025B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private GameObject <proj>5__2;

		[Token(Token = "0x40025B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Rigidbody <projRB>5__3;

		[Token(Token = "0x170005AF")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002C88")]
			[Address(RVA = "0xFEBD28", Offset = "0xFEBD28", VA = "0xFEBD28", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005B0")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002C8A")]
			[Address(RVA = "0xFEBD90", Offset = "0xFEBD90", VA = "0xFEBD90", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002C85")]
		[Address(RVA = "0xFEB404", Offset = "0xFEB404", VA = "0xFEB404")]
		[DebuggerHidden]
		public <shootProjectile>d__18(int <>1__state)
		{
		}

		[Token(Token = "0x6002C86")]
		[Address(RVA = "0xFEBA10", Offset = "0xFEBA10", VA = "0xFEBA10", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002C87")]
		[Address(RVA = "0xFEBA14", Offset = "0xFEBA14", VA = "0xFEBA14", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002C89")]
		[Address(RVA = "0xFEBD30", Offset = "0xFEBD30", VA = "0xFEBD30", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000B0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	private UnityEngine.Vector3 spawnPos;

	[Token(Token = "0x4000B0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public GameObject body;

	[Token(Token = "0x4000B10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public GameObject enemyProjectile;

	[Token(Token = "0x4000B11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public float projSpeed;

	[Token(Token = "0x4000B12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
	public int numOfProjectilesMax;

	[Token(Token = "0x4000B13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public float timeBetweenShots;

	[Token(Token = "0x4000B14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public GameObject spawnParticle;

	[Token(Token = "0x4000B15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private bool projectileAimOn;

	[Token(Token = "0x4000B16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
	private float elapsedTime;

	[Token(Token = "0x4000B17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private float sineAmplitude;

	[Token(Token = "0x4000B18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
	private bool goingRight;

	[Token(Token = "0x6000B9A")]
	[Address(RVA = "0xFEAEA8", Offset = "0xFEAEA8", VA = "0xFEAEA8", Slot = "5")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000B9B")]
	[Address(RVA = "0xFEAEF0", Offset = "0xFEAEF0", VA = "0xFEAEF0", Slot = "6")]
	protected override void Update()
	{
	}

	[Token(Token = "0x6000B9C")]
	[Address(RVA = "0xFEB174", Offset = "0xFEB174", VA = "0xFEB174", Slot = "12")]
	public override void enemyAttack(bool endTurnAfter = true)
	{
	}

	[Token(Token = "0x6000B9D")]
	[Address(RVA = "0xFEAF9C", Offset = "0xFEAF9C", VA = "0xFEAF9C")]
	private void SmoothSineWave()
	{
	}

	[Token(Token = "0x6000B9E")]
	[Address(RVA = "0xFEB1C0", Offset = "0xFEB1C0", VA = "0xFEB1C0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C72A4", Offset = "0x8C72A4")]
	protected IEnumerator castShotgunBlast()
	{
		return null;
	}

	[Token(Token = "0x6000B9F")]
	[Address(RVA = "0xFEB25C", Offset = "0xFEB25C", VA = "0xFEB25C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C7308", Offset = "0x8C7308")]
	private IEnumerator makeEnemyRapidFire(GameObject enemy)
	{
		return null;
	}

	[Token(Token = "0x6000BA0")]
	[Address(RVA = "0xFEB304", Offset = "0xFEB304", VA = "0xFEB304", Slot = "7")]
	public override void killSelf()
	{
	}

	[Token(Token = "0x6000BA1")]
	[Address(RVA = "0xFEB388", Offset = "0xFEB388", VA = "0xFEB388")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C736C", Offset = "0x8C736C")]
	protected IEnumerator shootProjectile(Transform launchTrans)
	{
		return null;
	}

	[Token(Token = "0x6000BA2")]
	[Address(RVA = "0xFEB430", Offset = "0xFEB430", VA = "0xFEB430")]
	public EnemyRoller()
	{
	}
}
[Token(Token = "0x20001A8")]
public class EnemyShark : EnemyParent
{
	[Token(Token = "0x200077D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B8594", Offset = "0x8B8594")]
	private sealed class <sharkLunge>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40025B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40025B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40025B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EnemyShark <>4__this;

		[Token(Token = "0x40025BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <i>5__2;

		[Token(Token = "0x40025BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <lungeTime>5__3;

		[Token(Token = "0x40025BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <maxLungeTIme>5__4;

		[Token(Token = "0x170005B1")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002C8E")]
			[Address(RVA = "0xFEC988", Offset = "0xFEC988", VA = "0xFEC988", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005B2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002C90")]
			[Address(RVA = "0xFEC9F0", Offset = "0xFEC9F0", VA = "0xFEC9F0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002C8B")]
		[Address(RVA = "0xFEBF34", Offset = "0xFEBF34", VA = "0xFEBF34")]
		[DebuggerHidden]
		public <sharkLunge>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x6002C8C")]
		[Address(RVA = "0xFEC2B8", Offset = "0xFEC2B8", VA = "0xFEC2B8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002C8D")]
		[Address(RVA = "0xFEC2BC", Offset = "0xFEC2BC", VA = "0xFEC2BC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002C8F")]
		[Address(RVA = "0xFEC990", Offset = "0xFEC990", VA = "0xFEC990", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000B19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public GameObject splashEffect;

	[Token(Token = "0x4000B1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private UnityEngine.Vector3 startPos;

	[Token(Token = "0x4000B1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
	private float lungeSpeed;

	[Token(Token = "0x4000B1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private int lungesPerTurn;

	[Token(Token = "0x4000B1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private Rigidbody rb;

	[Token(Token = "0x4000B1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public BattleBuff debuff;

	[Token(Token = "0x6000BA3")]
	[Address(RVA = "0xFEBD98", Offset = "0xFEBD98", VA = "0xFEBD98", Slot = "5")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000BA4")]
	[Address(RVA = "0xFEBE78", Offset = "0xFEBE78", VA = "0xFEBE78", Slot = "12")]
	public override void enemyAttack(bool endTurnAfter = true)
	{
	}

	[Token(Token = "0x6000BA5")]
	[Address(RVA = "0xFEBEC4", Offset = "0xFEBEC4", VA = "0xFEBEC4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C73D0", Offset = "0x8C73D0")]
	private IEnumerator sharkLunge()
	{
		return null;
	}

	[Token(Token = "0x6000BA6")]
	[Address(RVA = "0xFEBF60", Offset = "0xFEBF60", VA = "0xFEBF60", Slot = "13")]
	public override void playHurtAnimation()
	{
	}

	[Token(Token = "0x6000BA7")]
	[Address(RVA = "0xFEBFBC", Offset = "0xFEBFBC", VA = "0xFEBFBC", Slot = "7")]
	public override void killSelf()
	{
	}

	[Token(Token = "0x6000BA8")]
	[Address(RVA = "0xFEC19C", Offset = "0xFEC19C", VA = "0xFEC19C")]
	private void OnTriggerEnter(Collider collision)
	{
	}

	[Token(Token = "0x6000BA9")]
	[Address(RVA = "0xFEC2A4", Offset = "0xFEC2A4", VA = "0xFEC2A4")]
	public EnemyShark()
	{
	}
}
[Token(Token = "0x20001A9")]
public class EnemySkeleton : EnemyParent
{
	[Token(Token = "0x200077E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B85A4", Offset = "0x8B85A4")]
	private sealed class <boneStorm>d__14 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40025BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40025BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40025BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EnemySkeleton <>4__this;

		[Token(Token = "0x40025C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <i>5__2;

		[Token(Token = "0x170005B3")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002C94")]
			[Address(RVA = "0xC430E8", Offset = "0xC430E8", VA = "0xC430E8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005B4")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002C96")]
			[Address(RVA = "0xC43150", Offset = "0xC43150", VA = "0xC43150", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002C91")]
		[Address(RVA = "0xC42C54", Offset = "0xC42C54", VA = "0xC42C54")]
		[DebuggerHidden]
		public <boneStorm>d__14(int <>1__state)
		{
		}

		[Token(Token = "0x6002C92")]
		[Address(RVA = "0xC42FB4", Offset = "0xC42FB4", VA = "0xC42FB4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002C93")]
		[Address(RVA = "0xC42FB8", Offset = "0xC42FB8", VA = "0xC42FB8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002C95")]
		[Address(RVA = "0xC430F0", Offset = "0xC430F0", VA = "0xC430F0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200077F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B85B4", Offset = "0x8B85B4")]
	private sealed class <boneMaze>d__15 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40025C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40025C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40025C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EnemySkeleton <>4__this;

		[Token(Token = "0x40025C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <i>5__2;

		[Token(Token = "0x170005B5")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002C9A")]
			[Address(RVA = "0xC42F44", Offset = "0xC42F44", VA = "0xC42F44", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005B6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002C9C")]
			[Address(RVA = "0xC42FAC", Offset = "0xC42FAC", VA = "0xC42FAC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002C97")]
		[Address(RVA = "0xC42C80", Offset = "0xC42C80", VA = "0xC42C80")]
		[DebuggerHidden]
		public <boneMaze>d__15(int <>1__state)
		{
		}

		[Token(Token = "0x6002C98")]
		[Address(RVA = "0xC42E20", Offset = "0xC42E20", VA = "0xC42E20", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002C99")]
		[Address(RVA = "0xC42E24", Offset = "0xC42E24", VA = "0xC42E24", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002C9B")]
		[Address(RVA = "0xC42F4C", Offset = "0xC42F4C", VA = "0xC42F4C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000780")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B85C4", Offset = "0x8B85C4")]
	private sealed class <shootProjectile>d__16 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40025C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40025C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40025C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject enemyProjectile;

		[Token(Token = "0x40025C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public EnemySkeleton <>4__this;

		[Token(Token = "0x40025C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private GameObject <proj>5__2;

		[Token(Token = "0x40025CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Rigidbody <projRB>5__3;

		[Token(Token = "0x170005B7")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002CA0")]
			[Address(RVA = "0xC43474", Offset = "0xC43474", VA = "0xC43474", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005B8")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002CA2")]
			[Address(RVA = "0xC434DC", Offset = "0xC434DC", VA = "0xC434DC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002C9D")]
		[Address(RVA = "0xC42D28", Offset = "0xC42D28", VA = "0xC42D28")]
		[DebuggerHidden]
		public <shootProjectile>d__16(int <>1__state)
		{
		}

		[Token(Token = "0x6002C9E")]
		[Address(RVA = "0xC43158", Offset = "0xC43158", VA = "0xC43158", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002C9F")]
		[Address(RVA = "0xC4315C", Offset = "0xC4315C", VA = "0xC4315C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002CA1")]
		[Address(RVA = "0xC4347C", Offset = "0xC4347C", VA = "0xC4347C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000781")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B85D4", Offset = "0x8B85D4")]
	private sealed class <shootProjectileRandomize>d__17 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40025CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40025CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40025CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject enemyProjectile;

		[Token(Token = "0x40025CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public EnemySkeleton <>4__this;

		[Token(Token = "0x40025CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool randPos;

		[Token(Token = "0x40025D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private GameObject <proj>5__2;

		[Token(Token = "0x40025D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Rigidbody <projRB>5__3;

		[Token(Token = "0x170005B9")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002CA6")]
			[Address(RVA = "0xC43928", Offset = "0xC43928", VA = "0xC43928", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005BA")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002CA8")]
			[Address(RVA = "0xC43990", Offset = "0xC43990", VA = "0xC43990", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002CA3")]
		[Address(RVA = "0xC42DDC", Offset = "0xC42DDC", VA = "0xC42DDC")]
		[DebuggerHidden]
		public <shootProjectileRandomize>d__17(int <>1__state)
		{
		}

		[Token(Token = "0x6002CA4")]
		[Address(RVA = "0xC434E4", Offset = "0xC434E4", VA = "0xC434E4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002CA5")]
		[Address(RVA = "0xC434E8", Offset = "0xC434E8", VA = "0xC434E8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002CA7")]
		[Address(RVA = "0xC43930", Offset = "0xC43930", VA = "0xC43930", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000B1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public GameObject boneProjSineX;

	[Token(Token = "0x4000B20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public GameObject boneProjSineY;

	[Token(Token = "0x4000B21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public GameObject boneProjstatic;

	[Token(Token = "0x4000B22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public float projSpeed;

	[Token(Token = "0x4000B23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public GameObject spawnParticle;

	[Token(Token = "0x4000B24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public int numOfBones;

	[Token(Token = "0x4000B25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public GameObject shields;

	[Token(Token = "0x6000BAA")]
	[Address(RVA = "0xC4251C", Offset = "0xC4251C", VA = "0xC4251C", Slot = "5")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000BAB")]
	[Address(RVA = "0xC42524", Offset = "0xC42524", VA = "0xC42524", Slot = "6")]
	protected override void Update()
	{
	}

	[Token(Token = "0x6000BAC")]
	[Address(RVA = "0xC425BC", Offset = "0xC425BC", VA = "0xC425BC", Slot = "12")]
	public override void enemyAttack(bool endTurnAfter = true)
	{
	}

	[Token(Token = "0x6000BAD")]
	[Address(RVA = "0xC4270C", Offset = "0xC4270C", VA = "0xC4270C")]
	public void toggleShieldsOn()
	{
	}

	[Token(Token = "0x6000BAE")]
	[Address(RVA = "0xC427A0", Offset = "0xC427A0", VA = "0xC427A0")]
	public void toggleShieldsOff()
	{
	}

	[Token(Token = "0x6000BAF")]
	[Address(RVA = "0xC42834", Offset = "0xC42834", VA = "0xC42834", Slot = "7")]
	public override void killSelf()
	{
	}

	[Token(Token = "0x6000BB0")]
	[Address(RVA = "0xC42BF8", Offset = "0xC42BF8", VA = "0xC42BF8", Slot = "13")]
	public override void playHurtAnimation()
	{
	}

	[Token(Token = "0x6000BB1")]
	[Address(RVA = "0xC4269C", Offset = "0xC4269C", VA = "0xC4269C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C7434", Offset = "0x8C7434")]
	protected IEnumerator boneStorm()
	{
		return null;
	}

	[Token(Token = "0x6000BB2")]
	[Address(RVA = "0xC4262C", Offset = "0xC4262C", VA = "0xC4262C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C7498", Offset = "0x8C7498")]
	protected IEnumerator boneMaze()
	{
		return null;
	}

	[Token(Token = "0x6000BB3")]
	[Address(RVA = "0xC42CAC", Offset = "0xC42CAC", VA = "0xC42CAC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C74FC", Offset = "0x8C74FC")]
	protected IEnumerator shootProjectile(GameObject enemyProjectile)
	{
		return null;
	}

	[Token(Token = "0x6000BB4")]
	[Address(RVA = "0xC42D54", Offset = "0xC42D54", VA = "0xC42D54")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C7560", Offset = "0x8C7560")]
	protected IEnumerator shootProjectileRandomize(GameObject enemyProjectile, bool randPos)
	{
		return null;
	}

	[Token(Token = "0x6000BB5")]
	[Address(RVA = "0xC42E08", Offset = "0xC42E08", VA = "0xC42E08")]
	public EnemySkeleton()
	{
	}
}
[Token(Token = "0x20001AA")]
public class EnemyGridStrike : MonoBehaviour
{
	[Token(Token = "0x2000782")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B85E4", Offset = "0x8B85E4")]
	private sealed class <attack>d__10 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40025D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40025D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40025D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EnemyGridStrike <>4__this;

		[Token(Token = "0x40025D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <i>5__2;

		[Token(Token = "0x170005BB")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002CAC")]
			[Address(RVA = "0xDC0ACC", Offset = "0xDC0ACC", VA = "0xDC0ACC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005BC")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002CAE")]
			[Address(RVA = "0xDC0B34", Offset = "0xDC0B34", VA = "0xDC0B34", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002CA9")]
		[Address(RVA = "0xDC06B4", Offset = "0xDC06B4", VA = "0xDC06B4")]
		[DebuggerHidden]
		public <attack>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x6002CAA")]
		[Address(RVA = "0xDC06FC", Offset = "0xDC06FC", VA = "0xDC06FC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002CAB")]
		[Address(RVA = "0xDC0700", Offset = "0xDC0700", VA = "0xDC0700", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002CAD")]
		[Address(RVA = "0xDC0AD4", Offset = "0xDC0AD4", VA = "0xDC0AD4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000B26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] warningZones;

	[Token(Token = "0x4000B27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject[] disableWarningZones;

	[Token(Token = "0x4000B28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public EnemyParent enemyParent;

	[Token(Token = "0x4000B29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public EnemyPillarBlast hurtPillar;

	[Token(Token = "0x4000B2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float timeToAttack;

	[Token(Token = "0x4000B2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public int numOfStrikes;

	[Token(Token = "0x4000B2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int power;

	[Token(Token = "0x4000B2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AudioSource audioSource;

	[Token(Token = "0x4000B2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AudioClip[] clips;

	[Token(Token = "0x6000BB6")]
	[Address(RVA = "0xDC0618", Offset = "0xDC0618", VA = "0xDC0618")]
	private void Start()
	{
	}

	[Token(Token = "0x6000BB7")]
	[Address(RVA = "0xDC0644", Offset = "0xDC0644", VA = "0xDC0644")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C75C4", Offset = "0x8C75C4")]
	private IEnumerator attack()
	{
		return null;
	}

	[Token(Token = "0x6000BB8")]
	[Address(RVA = "0xDC06E0", Offset = "0xDC06E0", VA = "0xDC06E0")]
	public EnemyGridStrike()
	{
	}
}
[Token(Token = "0x20001AB")]
public class EnemyPillarBlast : MonoBehaviour
{
	[Token(Token = "0x4000B2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int damage;

	[Token(Token = "0x6000BB9")]
	[Address(RVA = "0xFE75E4", Offset = "0xFE75E4", VA = "0xFE75E4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000BBA")]
	[Address(RVA = "0xFE7664", Offset = "0xFE7664", VA = "0xFE7664")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000BBB")]
	[Address(RVA = "0xFE770C", Offset = "0xFE770C", VA = "0xFE770C")]
	public EnemyPillarBlast()
	{
	}
}
[Token(Token = "0x20001AC")]
public class EnemyTaskMaster : EnemyParent
{
	[Token(Token = "0x2000783")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B85F4", Offset = "0x8B85F4")]
	private sealed class <spawnEnemy>d__31 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40025D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40025D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40025D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EnemyTaskMaster <>4__this;

		[Token(Token = "0x170005BD")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002CB2")]
			[Address(RVA = "0xC48684", Offset = "0xC48684", VA = "0xC48684", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005BE")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002CB4")]
			[Address(RVA = "0xC486EC", Offset = "0xC486EC", VA = "0xC486EC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002CAF")]
		[Address(RVA = "0xC45FD0", Offset = "0xC45FD0", VA = "0xC45FD0")]
		[DebuggerHidden]
		public <spawnEnemy>d__31(int <>1__state)
		{
		}

		[Token(Token = "0x6002CB0")]
		[Address(RVA = "0xC4844C", Offset = "0xC4844C", VA = "0xC4844C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002CB1")]
		[Address(RVA = "0xC48450", Offset = "0xC48450", VA = "0xC48450", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002CB3")]
		[Address(RVA = "0xC4868C", Offset = "0xC4868C", VA = "0xC4868C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000784")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B8604", Offset = "0x8B8604")]
	private sealed class <spawnSpikos>d__32 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40025D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40025DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40025DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EnemyTaskMaster <>4__this;

		[Token(Token = "0x170005BF")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002CB8")]
			[Address(RVA = "0xC48BDC", Offset = "0xC48BDC", VA = "0xC48BDC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005C0")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002CBA")]
			[Address(RVA = "0xC48C44", Offset = "0xC48C44", VA = "0xC48C44", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002CB5")]
		[Address(RVA = "0xC45FFC", Offset = "0xC45FFC", VA = "0xC45FFC")]
		[DebuggerHidden]
		public <spawnSpikos>d__32(int <>1__state)
		{
		}

		[Token(Token = "0x6002CB6")]
		[Address(RVA = "0xC486F4", Offset = "0xC486F4", VA = "0xC486F4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002CB7")]
		[Address(RVA = "0xC486F8", Offset = "0xC486F8", VA = "0xC486F8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002CB9")]
		[Address(RVA = "0xC48BE4", Offset = "0xC48BE4", VA = "0xC48BE4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000785")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B8614", Offset = "0x8B8614")]
	private sealed class <summonStando>d__34 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40025DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40025DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40025DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EnemyTaskMaster <>4__this;

		[Token(Token = "0x170005C1")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002CBE")]
			[Address(RVA = "0xC48E00", Offset = "0xC48E00", VA = "0xC48E00", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005C2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002CC0")]
			[Address(RVA = "0xC48E68", Offset = "0xC48E68", VA = "0xC48E68", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002CBB")]
		[Address(RVA = "0xC46158", Offset = "0xC46158", VA = "0xC46158")]
		[DebuggerHidden]
		public <summonStando>d__34(int <>1__state)
		{
		}

		[Token(Token = "0x6002CBC")]
		[Address(RVA = "0xC48C4C", Offset = "0xC48C4C", VA = "0xC48C4C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002CBD")]
		[Address(RVA = "0xC48C50", Offset = "0xC48C50", VA = "0xC48C50", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002CBF")]
		[Address(RVA = "0xC48E08", Offset = "0xC48E08", VA = "0xC48E08", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000786")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B8624", Offset = "0x8B8624")]
	private sealed class <castShotgunBlast>d__35 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40025DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40025E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40025E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EnemyTaskMaster <>4__this;

		[Token(Token = "0x40025E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <numOfProjectiles>5__2;

		[Token(Token = "0x40025E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <aimAccuracy>5__3;

		[Token(Token = "0x170005C3")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002CC4")]
			[Address(RVA = "0xC476B4", Offset = "0xC476B4", VA = "0xC476B4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005C4")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002CC6")]
			[Address(RVA = "0xC4771C", Offset = "0xC4771C", VA = "0xC4771C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002CC1")]
		[Address(RVA = "0xC461F4", Offset = "0xC461F4", VA = "0xC461F4")]
		[DebuggerHidden]
		public <castShotgunBlast>d__35(int <>1__state)
		{
		}

		[Token(Token = "0x6002CC2")]
		[Address(RVA = "0xC473D0", Offset = "0xC473D0", VA = "0xC473D0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002CC3")]
		[Address(RVA = "0xC473D4", Offset = "0xC473D4", VA = "0xC473D4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002CC5")]
		[Address(RVA = "0xC476BC", Offset = "0xC476BC", VA = "0xC476BC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000787")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B8634", Offset = "0x8B8634")]
	private sealed class <castFinalAttack>d__36 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40025E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40025E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40025E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EnemyTaskMaster <>4__this;

		[Token(Token = "0x40025E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private MusicPlayer <player>5__2;

		[Token(Token = "0x170005C5")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002CCA")]
			[Address(RVA = "0xC470C8", Offset = "0xC470C8", VA = "0xC470C8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005C6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002CCC")]
			[Address(RVA = "0xC47130", Offset = "0xC47130", VA = "0xC47130", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002CC7")]
		[Address(RVA = "0xC46220", Offset = "0xC46220", VA = "0xC46220")]
		[DebuggerHidden]
		public <castFinalAttack>d__36(int <>1__state)
		{
		}

		[Token(Token = "0x6002CC8")]
		[Address(RVA = "0xC46CDC", Offset = "0xC46CDC", VA = "0xC46CDC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002CC9")]
		[Address(RVA = "0xC46CE0", Offset = "0xC46CE0", VA = "0xC46CE0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002CCB")]
		[Address(RVA = "0xC470D0", Offset = "0xC470D0", VA = "0xC470D0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000788")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B8644", Offset = "0x8B8644")]
	private sealed class <castBulletHell>d__37 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40025E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40025E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40025EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform firePoint;

		[Token(Token = "0x40025EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public EnemyTaskMaster <>4__this;

		[Token(Token = "0x40025EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int <numOfProjectiles>5__2;

		[Token(Token = "0x40025ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <aimAccuracy>5__3;

		[Token(Token = "0x170005C7")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002CD0")]
			[Address(RVA = "0xC46C6C", Offset = "0xC46C6C", VA = "0xC46C6C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005C8")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002CD2")]
			[Address(RVA = "0xC46CD4", Offset = "0xC46CD4", VA = "0xC46CD4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002CCD")]
		[Address(RVA = "0xC462C8", Offset = "0xC462C8", VA = "0xC462C8")]
		[DebuggerHidden]
		public <castBulletHell>d__37(int <>1__state)
		{
		}

		[Token(Token = "0x6002CCE")]
		[Address(RVA = "0xC469EC", Offset = "0xC469EC", VA = "0xC469EC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002CCF")]
		[Address(RVA = "0xC469F0", Offset = "0xC469F0", VA = "0xC469F0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002CD1")]
		[Address(RVA = "0xC46C74", Offset = "0xC46C74", VA = "0xC46C74", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000789")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B8654", Offset = "0x8B8654")]
	private sealed class <deathTimer>d__39 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40025EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40025EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40025F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EnemyTaskMaster <>4__this;

		[Token(Token = "0x170005C9")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002CD6")]
			[Address(RVA = "0xC47DAC", Offset = "0xC47DAC", VA = "0xC47DAC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005CA")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002CD8")]
			[Address(RVA = "0xC47E14", Offset = "0xC47E14", VA = "0xC47E14", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002CD3")]
		[Address(RVA = "0xC46720", Offset = "0xC46720", VA = "0xC46720")]
		[DebuggerHidden]
		public <deathTimer>d__39(int <>1__state)
		{
		}

		[Token(Token = "0x6002CD4")]
		[Address(RVA = "0xC47C34", Offset = "0xC47C34", VA = "0xC47C34", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002CD5")]
		[Address(RVA = "0xC47C38", Offset = "0xC47C38", VA = "0xC47C38", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002CD7")]
		[Address(RVA = "0xC47DB4", Offset = "0xC47DB4", VA = "0xC47DB4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200078A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B8664", Offset = "0x8B8664")]
	private sealed class <shootProjectile>d__41 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40025F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40025F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40025F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EnemyTaskMaster <>4__this;

		[Token(Token = "0x40025F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GameObject <proj>5__2;

		[Token(Token = "0x40025F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Rigidbody <projRB>5__3;

		[Token(Token = "0x170005CB")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002CDC")]
			[Address(RVA = "0xC480C4", Offset = "0xC480C4", VA = "0xC480C4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005CC")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002CDE")]
			[Address(RVA = "0xC4812C", Offset = "0xC4812C", VA = "0xC4812C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002CD9")]
		[Address(RVA = "0xC468A0", Offset = "0xC468A0", VA = "0xC468A0")]
		[DebuggerHidden]
		public <shootProjectile>d__41(int <>1__state)
		{
		}

		[Token(Token = "0x6002CDA")]
		[Address(RVA = "0xC47E1C", Offset = "0xC47E1C", VA = "0xC47E1C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002CDB")]
		[Address(RVA = "0xC47E20", Offset = "0xC47E20", VA = "0xC47E20", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002CDD")]
		[Address(RVA = "0xC480CC", Offset = "0xC480CC", VA = "0xC480CC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200078B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B8674", Offset = "0x8B8674")]
	private sealed class <shootProjectileFromPoint>d__42 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40025F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40025F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40025F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EnemyTaskMaster <>4__this;

		[Token(Token = "0x40025F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform point;

		[Token(Token = "0x40025FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private GameObject <proj>5__2;

		[Token(Token = "0x40025FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Rigidbody <projRB>5__3;

		[Token(Token = "0x170005CD")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002CE2")]
			[Address(RVA = "0xC483DC", Offset = "0xC483DC", VA = "0xC483DC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005CE")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002CE4")]
			[Address(RVA = "0xC48444", Offset = "0xC48444", VA = "0xC48444", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002CDF")]
		[Address(RVA = "0xC46948", Offset = "0xC46948", VA = "0xC46948")]
		[DebuggerHidden]
		public <shootProjectileFromPoint>d__42(int <>1__state)
		{
		}

		[Token(Token = "0x6002CE0")]
		[Address(RVA = "0xC48134", Offset = "0xC48134", VA = "0xC48134", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002CE1")]
		[Address(RVA = "0xC48138", Offset = "0xC48138", VA = "0xC48138", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002CE3")]
		[Address(RVA = "0xC483E4", Offset = "0xC483E4", VA = "0xC483E4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200078C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B8684", Offset = "0x8B8684")]
	private sealed class <castTeleShot>d__43 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40025FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40025FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40025FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EnemyTaskMaster <>4__this;

		[Token(Token = "0x40025FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <i>5__2;

		[Token(Token = "0x170005CF")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002CE8")]
			[Address(RVA = "0xC47BC4", Offset = "0xC47BC4", VA = "0xC47BC4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005D0")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002CEA")]
			[Address(RVA = "0xC47C2C", Offset = "0xC47C2C", VA = "0xC47C2C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002CE5")]
		[Address(RVA = "0xC46974", Offset = "0xC46974", VA = "0xC46974")]
		[DebuggerHidden]
		public <castTeleShot>d__43(int <>1__state)
		{
		}

		[Token(Token = "0x6002CE6")]
		[Address(RVA = "0xC47724", Offset = "0xC47724", VA = "0xC47724", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002CE7")]
		[Address(RVA = "0xC47728", Offset = "0xC47728", VA = "0xC47728", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002CE9")]
		[Address(RVA = "0xC47BCC", Offset = "0xC47BCC", VA = "0xC47BCC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200078D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B8694", Offset = "0x8B8694")]
	private sealed class <castGridStrike>d__44 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002600")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002601")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002602")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EnemyTaskMaster <>4__this;

		[Token(Token = "0x170005D1")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002CEE")]
			[Address(RVA = "0xC47360", Offset = "0xC47360", VA = "0xC47360", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005D2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002CF0")]
			[Address(RVA = "0xC473C8", Offset = "0xC473C8", VA = "0xC473C8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002CEB")]
		[Address(RVA = "0xC469A0", Offset = "0xC469A0", VA = "0xC469A0")]
		[DebuggerHidden]
		public <castGridStrike>d__44(int <>1__state)
		{
		}

		[Token(Token = "0x6002CEC")]
		[Address(RVA = "0xC47138", Offset = "0xC47138", VA = "0xC47138", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002CED")]
		[Address(RVA = "0xC4713C", Offset = "0xC4713C", VA = "0xC4713C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002CEF")]
		[Address(RVA = "0xC47368", Offset = "0xC47368", VA = "0xC47368", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000B30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public GameObject spikeBallPrefab;

	[Token(Token = "0x4000B31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public GameObject spawnparticle;

	[Token(Token = "0x4000B32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public Transform spikeBallParent;

	[Token(Token = "0x4000B33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public BattleDialogueBox dialogueBox;

	[Token(Token = "0x4000B34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public Transform dialoguePos;

	[Token(Token = "0x4000B35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public string[] dialogue1;

	[Token(Token = "0x4000B36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public EnemyParent[] enemiesToSpawn;

	[Token(Token = "0x4000B37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private bool rotateSpikes;

	[Token(Token = "0x4000B38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
	private UnityEngine.Vector3 originalSPikeParentPos;

	[Token(Token = "0x4000B39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private int turnNum;

	[Token(Token = "0x4000B3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
	private float spinSpeed;

	[Token(Token = "0x4000B3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private int turnsToSpawn;

	[Token(Token = "0x4000B3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
	private int spawnCD;

	[Token(Token = "0x4000B3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public float projSpeed;

	[Token(Token = "0x4000B3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public GameObject enemyProjectile;

	[Token(Token = "0x4000B3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public EnemyGridStrike gridStrikePrefab;

	[Token(Token = "0x4000B40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public Transform[] telepoints;

	[Token(Token = "0x4000B41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public GameObject teleportParticle;

	[Token(Token = "0x4000B42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	public GameObject tmStandModel;

	[Token(Token = "0x4000B43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public Transform standPos;

	[Token(Token = "0x4000B44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	public Transform[] finalAttackPoints;

	[Token(Token = "0x4000B45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	private bool castingFinalAttack;

	[Token(Token = "0x4000B46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B1")]
	private bool finalAttackOver;

	[Token(Token = "0x4000B47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BC528", Offset = "0x8BC528")]
	public AudioClip finalSong;

	[Token(Token = "0x4000B48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	public AudioClip[] attackClips;

	[Token(Token = "0x4000B49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	public AudioClip[] dialogueClips;

	[Token(Token = "0x4000B4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	public AudioClip deathClip;

	[Token(Token = "0x6000BBC")]
	[Address(RVA = "0xC45834", Offset = "0xC45834", VA = "0xC45834", Slot = "5")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000BBD")]
	[Address(RVA = "0xC458C0", Offset = "0xC458C0", VA = "0xC458C0", Slot = "6")]
	protected override void Update()
	{
	}

	[Token(Token = "0x6000BBE")]
	[Address(RVA = "0xC45AEC", Offset = "0xC45AEC", VA = "0xC45AEC", Slot = "12")]
	public override void enemyAttack(bool endTurnAfter = true)
	{
	}

	[Token(Token = "0x6000BBF")]
	[Address(RVA = "0xC459F8", Offset = "0xC459F8", VA = "0xC459F8")]
	private void movePikeParentWithPlayerPos()
	{
	}

	[Token(Token = "0x6000BC0")]
	[Address(RVA = "0xC45E80", Offset = "0xC45E80", VA = "0xC45E80")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C7628", Offset = "0x8C7628")]
	private IEnumerator spawnEnemy()
	{
		return null;
	}

	[Token(Token = "0x6000BC1")]
	[Address(RVA = "0xC45E10", Offset = "0xC45E10", VA = "0xC45E10")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C768C", Offset = "0x8C768C")]
	private IEnumerator spawnSpikos()
	{
		return null;
	}

	[Token(Token = "0x6000BC2")]
	[Address(RVA = "0xC46028", Offset = "0xC46028", VA = "0xC46028")]
	public void shuffleTelepoints()
	{
	}

	[Token(Token = "0x6000BC3")]
	[Address(RVA = "0xC45D30", Offset = "0xC45D30", VA = "0xC45D30")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C76F0", Offset = "0x8C76F0")]
	private IEnumerator summonStando()
	{
		return null;
	}

	[Token(Token = "0x6000BC4")]
	[Address(RVA = "0xC46184", Offset = "0xC46184", VA = "0xC46184")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C7754", Offset = "0x8C7754")]
	protected IEnumerator castShotgunBlast()
	{
		return null;
	}

	[Token(Token = "0x6000BC5")]
	[Address(RVA = "0xC45DA0", Offset = "0xC45DA0", VA = "0xC45DA0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C77B8", Offset = "0x8C77B8")]
	protected IEnumerator castFinalAttack()
	{
		return null;
	}

	[Token(Token = "0x6000BC6")]
	[Address(RVA = "0xC4624C", Offset = "0xC4624C", VA = "0xC4624C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C781C", Offset = "0x8C781C")]
	protected IEnumerator castBulletHell(Transform firePoint)
	{
		return null;
	}

	[Token(Token = "0x6000BC7")]
	[Address(RVA = "0xC462F4", Offset = "0xC462F4", VA = "0xC462F4", Slot = "7")]
	public override void killSelf()
	{
	}

	[Token(Token = "0x6000BC8")]
	[Address(RVA = "0xC46590", Offset = "0xC46590", VA = "0xC46590")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C7880", Offset = "0x8C7880")]
	private IEnumerator deathTimer()
	{
		return null;
	}

	[Token(Token = "0x6000BC9")]
	[Address(RVA = "0xC4674C", Offset = "0xC4674C", VA = "0xC4674C", Slot = "13")]
	public override void playHurtAnimation()
	{
	}

	[Token(Token = "0x6000BCA")]
	[Address(RVA = "0xC46830", Offset = "0xC46830", VA = "0xC46830")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C78E4", Offset = "0x8C78E4")]
	protected IEnumerator shootProjectile()
	{
		return null;
	}

	[Token(Token = "0x6000BCB")]
	[Address(RVA = "0xC468CC", Offset = "0xC468CC", VA = "0xC468CC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C7948", Offset = "0x8C7948")]
	protected IEnumerator shootProjectileFromPoint(Transform point)
	{
		return null;
	}

	[Token(Token = "0x6000BCC")]
	[Address(RVA = "0xC45F60", Offset = "0xC45F60", VA = "0xC45F60")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C79AC", Offset = "0x8C79AC")]
	private IEnumerator castTeleShot()
	{
		return null;
	}

	[Token(Token = "0x6000BCD")]
	[Address(RVA = "0xC45EF0", Offset = "0xC45EF0", VA = "0xC45EF0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C7A10", Offset = "0x8C7A10")]
	private IEnumerator castGridStrike()
	{
		return null;
	}

	[Token(Token = "0x6000BCE")]
	[Address(RVA = "0xC4645C", Offset = "0xC4645C", VA = "0xC4645C")]
	public void playDialogue(string dialogue)
	{
	}

	[Token(Token = "0x6000BCF")]
	[Address(RVA = "0xC469CC", Offset = "0xC469CC", VA = "0xC469CC")]
	public EnemyTaskMaster()
	{
	}
}
[Token(Token = "0x20001AD")]
public class TaskMasterHead : MonoBehaviour
{
	[Token(Token = "0x4000B4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public EnemyTaskMaster taskMaster;

	[Token(Token = "0x6000BD0")]
	[Address(RVA = "0xB29104", Offset = "0xB29104", VA = "0xB29104")]
	private void OnCollisionEnter(Collision other)
	{
	}

	[Token(Token = "0x6000BD1")]
	[Address(RVA = "0xB291C4", Offset = "0xB291C4", VA = "0xB291C4")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000BD2")]
	[Address(RVA = "0xB29284", Offset = "0xB29284", VA = "0xB29284")]
	public TaskMasterHead()
	{
	}
}
[Token(Token = "0x20001AE")]
public class ToxicMass : EnemyParent
{
	[Token(Token = "0x200078E")]
	public enum ToxicMassPhase
	{
		[Token(Token = "0x4002604")]
		giant,
		[Token(Token = "0x4002605")]
		chase
	}

	[Token(Token = "0x200078F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B86A4", Offset = "0x8B86A4")]
	private sealed class <startChase>d__25 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002606")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002607")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002608")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ToxicMass <>4__this;

		[Token(Token = "0x170005D3")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002CF4")]
			[Address(RVA = "0x1A5D2D8", Offset = "0x1A5D2D8", VA = "0x1A5D2D8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005D4")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002CF6")]
			[Address(RVA = "0x1A5D340", Offset = "0x1A5D340", VA = "0x1A5D340", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002CF1")]
		[Address(RVA = "0x1A59C24", Offset = "0x1A59C24", VA = "0x1A59C24")]
		[DebuggerHidden]
		public <startChase>d__25(int <>1__state)
		{
		}

		[Token(Token = "0x6002CF2")]
		[Address(RVA = "0x1A5D0F4", Offset = "0x1A5D0F4", VA = "0x1A5D0F4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002CF3")]
		[Address(RVA = "0x1A5D0F8", Offset = "0x1A5D0F8", VA = "0x1A5D0F8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002CF5")]
		[Address(RVA = "0x1A5D2E0", Offset = "0x1A5D2E0", VA = "0x1A5D2E0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000790")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B86B4", Offset = "0x8B86B4")]
	private sealed class <moveHealthBar>d__26 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002609")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400260A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400260B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ToxicMass <>4__this;

		[Token(Token = "0x170005D5")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002CFA")]
			[Address(RVA = "0x1A5CBB4", Offset = "0x1A5CBB4", VA = "0x1A5CBB4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005D6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002CFC")]
			[Address(RVA = "0x1A5CC1C", Offset = "0x1A5CC1C", VA = "0x1A5CC1C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002CF7")]
		[Address(RVA = "0x1A59CC0", Offset = "0x1A59CC0", VA = "0x1A59CC0")]
		[DebuggerHidden]
		public <moveHealthBar>d__26(int <>1__state)
		{
		}

		[Token(Token = "0x6002CF8")]
		[Address(RVA = "0x1A5C808", Offset = "0x1A5C808", VA = "0x1A5C808", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002CF9")]
		[Address(RVA = "0x1A5C80C", Offset = "0x1A5C80C", VA = "0x1A5C80C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002CFB")]
		[Address(RVA = "0x1A5CBBC", Offset = "0x1A5CBBC", VA = "0x1A5CBBC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000791")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B86C4", Offset = "0x8B86C4")]
	private sealed class <castShotgunBlast>d__27 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400260C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400260D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400260E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ToxicMass <>4__this;

		[Token(Token = "0x400260F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <numOfProjectiles>5__2;

		[Token(Token = "0x4002610")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <aimAccuracy>5__3;

		[Token(Token = "0x170005D7")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002D00")]
			[Address(RVA = "0x1A5ADC4", Offset = "0x1A5ADC4", VA = "0x1A5ADC4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005D8")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002D02")]
			[Address(RVA = "0x1A5AE2C", Offset = "0x1A5AE2C", VA = "0x1A5AE2C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002CFD")]
		[Address(RVA = "0x1A59CEC", Offset = "0x1A59CEC", VA = "0x1A59CEC")]
		[DebuggerHidden]
		public <castShotgunBlast>d__27(int <>1__state)
		{
		}

		[Token(Token = "0x6002CFE")]
		[Address(RVA = "0x1A5AA98", Offset = "0x1A5AA98", VA = "0x1A5AA98", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002CFF")]
		[Address(RVA = "0x1A5AA9C", Offset = "0x1A5AA9C", VA = "0x1A5AA9C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002D01")]
		[Address(RVA = "0x1A5ADCC", Offset = "0x1A5ADCC", VA = "0x1A5ADCC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000792")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B86D4", Offset = "0x8B86D4")]
	private sealed class <moveDarkaxerBack>d__28 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002611")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002612")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002613")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ToxicMass <>4__this;

		[Token(Token = "0x4002614")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private UnityEngine.Vector3 <newPos>5__2;

		[Token(Token = "0x4002615")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <flySpeed>5__3;

		[Token(Token = "0x4002616")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private MusicPlayer <player>5__4;

		[Token(Token = "0x170005D9")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002D06")]
			[Address(RVA = "0x1A5BBCC", Offset = "0x1A5BBCC", VA = "0x1A5BBCC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005DA")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002D08")]
			[Address(RVA = "0x1A5BC34", Offset = "0x1A5BC34", VA = "0x1A5BC34", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002D03")]
		[Address(RVA = "0x1A59D88", Offset = "0x1A59D88", VA = "0x1A59D88")]
		[DebuggerHidden]
		public <moveDarkaxerBack>d__28(int <>1__state)
		{
		}

		[Token(Token = "0x6002D04")]
		[Address(RVA = "0x1A5B774", Offset = "0x1A5B774", VA = "0x1A5B774", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002D05")]
		[Address(RVA = "0x1A5B778", Offset = "0x1A5B778", VA = "0x1A5B778", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002D07")]
		[Address(RVA = "0x1A5BBD4", Offset = "0x1A5BBD4", VA = "0x1A5BBD4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000793")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B86E4", Offset = "0x8B86E4")]
	private sealed class <moveDragon>d__29 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002617")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002618")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002619")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ToxicMass <>4__this;

		[Token(Token = "0x400261A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private AllyDragon <dragon>5__2;

		[Token(Token = "0x400261B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <flySpeed>5__3;

		[Token(Token = "0x400261C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private UnityEngine.Vector3 <pos1>5__4;

		[Token(Token = "0x170005DB")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002D0C")]
			[Address(RVA = "0x1A5C798", Offset = "0x1A5C798", VA = "0x1A5C798", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005DC")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002D0E")]
			[Address(RVA = "0x1A5C800", Offset = "0x1A5C800", VA = "0x1A5C800", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002D09")]
		[Address(RVA = "0x1A59E24", Offset = "0x1A59E24", VA = "0x1A59E24")]
		[DebuggerHidden]
		public <moveDragon>d__29(int <>1__state)
		{
		}

		[Token(Token = "0x6002D0A")]
		[Address(RVA = "0x1A5BC3C", Offset = "0x1A5BC3C", VA = "0x1A5BC3C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002D0B")]
		[Address(RVA = "0x1A5BC40", Offset = "0x1A5BC40", VA = "0x1A5BC40", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002D0D")]
		[Address(RVA = "0x1A5C7A0", Offset = "0x1A5C7A0", VA = "0x1A5C7A0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000794")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B86F4", Offset = "0x8B86F4")]
	private sealed class <firstAttack>d__30 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400261D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400261E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400261F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ToxicMass <>4__this;

		[Token(Token = "0x170005DD")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002D12")]
			[Address(RVA = "0x1A5B704", Offset = "0x1A5B704", VA = "0x1A5B704", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005DE")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002D14")]
			[Address(RVA = "0x1A5B76C", Offset = "0x1A5B76C", VA = "0x1A5B76C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002D0F")]
		[Address(RVA = "0x1A59E50", Offset = "0x1A59E50", VA = "0x1A59E50")]
		[DebuggerHidden]
		public <firstAttack>d__30(int <>1__state)
		{
		}

		[Token(Token = "0x6002D10")]
		[Address(RVA = "0x1A5B1CC", Offset = "0x1A5B1CC", VA = "0x1A5B1CC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002D11")]
		[Address(RVA = "0x1A5B1D0", Offset = "0x1A5B1D0", VA = "0x1A5B1D0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002D13")]
		[Address(RVA = "0x1A5B70C", Offset = "0x1A5B70C", VA = "0x1A5B70C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000795")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B8704", Offset = "0x8B8704")]
	private sealed class <shootProjectile>d__32 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002620")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002621")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002622")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject enemyProjectile;

		[Token(Token = "0x4002623")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ToxicMass <>4__this;

		[Token(Token = "0x4002624")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool makeBig;

		[Token(Token = "0x4002625")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float delay;

		[Token(Token = "0x4002626")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private GameObject <proj>5__2;

		[Token(Token = "0x4002627")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Rigidbody <projRB>5__3;

		[Token(Token = "0x170005DF")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002D18")]
			[Address(RVA = "0x1A5D084", Offset = "0x1A5D084", VA = "0x1A5D084", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005E0")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002D1A")]
			[Address(RVA = "0x1A5D0EC", Offset = "0x1A5D0EC", VA = "0x1A5D0EC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002D15")]
		[Address(RVA = "0x1A5A188", Offset = "0x1A5A188", VA = "0x1A5A188")]
		[DebuggerHidden]
		public <shootProjectile>d__32(int <>1__state)
		{
		}

		[Token(Token = "0x6002D16")]
		[Address(RVA = "0x1A5CC24", Offset = "0x1A5CC24", VA = "0x1A5CC24", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002D17")]
		[Address(RVA = "0x1A5CC28", Offset = "0x1A5CC28", VA = "0x1A5CC28", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002D19")]
		[Address(RVA = "0x1A5D08C", Offset = "0x1A5D08C", VA = "0x1A5D08C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000796")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B8714", Offset = "0x8B8714")]
	private sealed class <castRapidFire>d__34 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002628")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002629")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400262A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ToxicMass <>4__this;

		[Token(Token = "0x400262B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool darkaxerAttack;

		[Token(Token = "0x400262C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int <numOfProjectiles>5__2;

		[Token(Token = "0x400262D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <aimAccuracy>5__3;

		[Token(Token = "0x170005E1")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002D1E")]
			[Address(RVA = "0x1A5AA28", Offset = "0x1A5AA28", VA = "0x1A5AA28", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005E2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002D20")]
			[Address(RVA = "0x1A5AA90", Offset = "0x1A5AA90", VA = "0x1A5AA90", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002D1B")]
		[Address(RVA = "0x1A5A41C", Offset = "0x1A5A41C", VA = "0x1A5A41C")]
		[DebuggerHidden]
		public <castRapidFire>d__34(int <>1__state)
		{
		}

		[Token(Token = "0x6002D1C")]
		[Address(RVA = "0x1A5A594", Offset = "0x1A5A594", VA = "0x1A5A594", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002D1D")]
		[Address(RVA = "0x1A5A598", Offset = "0x1A5A598", VA = "0x1A5A598", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002D1F")]
		[Address(RVA = "0x1A5AA30", Offset = "0x1A5AA30", VA = "0x1A5AA30", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000797")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B8724", Offset = "0x8B8724")]
	private sealed class <darkaxerDeathTimer>d__35 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400262E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400262F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002630")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ToxicMass <>4__this;

		[Token(Token = "0x170005E3")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002D24")]
			[Address(RVA = "0x1A5B028", Offset = "0x1A5B028", VA = "0x1A5B028", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005E4")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002D26")]
			[Address(RVA = "0x1A5B090", Offset = "0x1A5B090", VA = "0x1A5B090", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002D21")]
		[Address(RVA = "0x1A5A448", Offset = "0x1A5A448", VA = "0x1A5A448")]
		[DebuggerHidden]
		public <darkaxerDeathTimer>d__35(int <>1__state)
		{
		}

		[Token(Token = "0x6002D22")]
		[Address(RVA = "0x1A5AE34", Offset = "0x1A5AE34", VA = "0x1A5AE34", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002D23")]
		[Address(RVA = "0x1A5AE38", Offset = "0x1A5AE38", VA = "0x1A5AE38", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002D25")]
		[Address(RVA = "0x1A5B030", Offset = "0x1A5B030", VA = "0x1A5B030", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000798")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B8734", Offset = "0x8B8734")]
	private sealed class <delayFade>d__36 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002631")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002632")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002633")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ToxicMass <>4__this;

		[Token(Token = "0x170005E5")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002D2A")]
			[Address(RVA = "0x1A5B15C", Offset = "0x1A5B15C", VA = "0x1A5B15C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005E6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002D2C")]
			[Address(RVA = "0x1A5B1C4", Offset = "0x1A5B1C4", VA = "0x1A5B1C4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002D27")]
		[Address(RVA = "0x1A5A474", Offset = "0x1A5A474", VA = "0x1A5A474")]
		[DebuggerHidden]
		public <delayFade>d__36(int <>1__state)
		{
		}

		[Token(Token = "0x6002D28")]
		[Address(RVA = "0x1A5B098", Offset = "0x1A5B098", VA = "0x1A5B098", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002D29")]
		[Address(RVA = "0x1A5B09C", Offset = "0x1A5B09C", VA = "0x1A5B09C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002D2B")]
		[Address(RVA = "0x1A5B164", Offset = "0x1A5B164", VA = "0x1A5B164", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000B4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public GameObject spawnParticle;

	[Token(Token = "0x4000B4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public GameObject projectile1;

	[Token(Token = "0x4000B4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public GameObject projectile2;

	[Token(Token = "0x4000B4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public BattleDialogueBox dialogueBox;

	[Token(Token = "0x4000B50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public Sprite sydneyPortrait;

	[Token(Token = "0x4000B51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public GameObject darkaxerObject;

	[Token(Token = "0x4000B52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public Transform darkaxerProjTrans;

	[Token(Token = "0x4000B53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public Weapon fistWeapon;

	[Token(Token = "0x4000B54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public AudioClip finalAttackTrack;

	[Token(Token = "0x4000B55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public AudioSource deathSound;

	[Token(Token = "0x4000B56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public string[] battleDialogue;

	[Token(Token = "0x4000B57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private bool chaseStarted;

	[Token(Token = "0x4000B58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x171")]
	private bool skipDialogue;

	[Token(Token = "0x4000B59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x172")]
	private bool fightEnded;

	[Token(Token = "0x4000B5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
	private UnityEngine.Vector3 originalHpScale;

	[Token(Token = "0x4000B5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public Transform darkaxerInfoCanvasTrans;

	[Token(Token = "0x4000B5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private bool canDie;

	[Token(Token = "0x4000B5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
	public ToxicMassPhase phase;

	[Token(Token = "0x4000B5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	private int turnNum;

	[Token(Token = "0x4000B5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x194")]
	public float baseProjectileSpeed;

	[Token(Token = "0x4000B60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BC560", Offset = "0x8BC560")]
	public AudioClip[] dialogueClips;

	[Token(Token = "0x6000BD3")]
	[Address(RVA = "0x1A597F0", Offset = "0x1A597F0", VA = "0x1A597F0", Slot = "5")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000BD4")]
	[Address(RVA = "0x1A599AC", Offset = "0x1A599AC", VA = "0x1A599AC", Slot = "6")]
	protected override void Update()
	{
	}

	[Token(Token = "0x6000BD5")]
	[Address(RVA = "0x1A599B4", Offset = "0x1A599B4", VA = "0x1A599B4", Slot = "12")]
	public override void enemyAttack(bool endTurnAfter = true)
	{
	}

	[Token(Token = "0x6000BD6")]
	[Address(RVA = "0x1A59A50", Offset = "0x1A59A50", VA = "0x1A59A50")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C7A74", Offset = "0x8C7A74")]
	private IEnumerator startChase()
	{
		return null;
	}

	[Token(Token = "0x6000BD7")]
	[Address(RVA = "0x1A59C50", Offset = "0x1A59C50", VA = "0x1A59C50")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C7AD8", Offset = "0x8C7AD8")]
	private IEnumerator moveHealthBar()
	{
		return null;
	}

	[Token(Token = "0x6000BD8")]
	[Address(RVA = "0x1A59BB4", Offset = "0x1A59BB4", VA = "0x1A59BB4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C7B3C", Offset = "0x8C7B3C")]
	protected IEnumerator castShotgunBlast()
	{
		return null;
	}

	[Token(Token = "0x6000BD9")]
	[Address(RVA = "0x1A59D18", Offset = "0x1A59D18", VA = "0x1A59D18")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C7BA0", Offset = "0x8C7BA0")]
	private IEnumerator moveDarkaxerBack()
	{
		return null;
	}

	[Token(Token = "0x6000BDA")]
	[Address(RVA = "0x1A59DB4", Offset = "0x1A59DB4", VA = "0x1A59DB4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C7C04", Offset = "0x8C7C04")]
	private IEnumerator moveDragon()
	{
		return null;
	}

	[Token(Token = "0x6000BDB")]
	[Address(RVA = "0x1A59AC0", Offset = "0x1A59AC0", VA = "0x1A59AC0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C7C68", Offset = "0x8C7C68")]
	private IEnumerator firstAttack()
	{
		return null;
	}

	[Token(Token = "0x6000BDC")]
	[Address(RVA = "0x1A59E7C", Offset = "0x1A59E7C", VA = "0x1A59E7C")]
	public void playDialogue(string dialogue, Sprite portrait)
	{
	}

	[Token(Token = "0x6000BDD")]
	[Address(RVA = "0x1A5A0F0", Offset = "0x1A5A0F0", VA = "0x1A5A0F0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C7CCC", Offset = "0x8C7CCC")]
	protected IEnumerator shootProjectile(GameObject enemyProjectile, float delay, bool makeBig = true)
	{
		return null;
	}

	[Token(Token = "0x6000BDE")]
	[Address(RVA = "0x1A5A1B4", Offset = "0x1A5A1B4", VA = "0x1A5A1B4", Slot = "7")]
	public override void killSelf()
	{
	}

	[Token(Token = "0x6000BDF")]
	[Address(RVA = "0x1A59B30", Offset = "0x1A59B30", VA = "0x1A59B30")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C7D30", Offset = "0x8C7D30")]
	protected IEnumerator castRapidFire(bool darkaxerAttack = false)
	{
		return null;
	}

	[Token(Token = "0x6000BE0")]
	[Address(RVA = "0x1A5A3AC", Offset = "0x1A5A3AC", VA = "0x1A5A3AC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C7D94", Offset = "0x8C7D94")]
	private IEnumerator darkaxerDeathTimer()
	{
		return null;
	}

	[Token(Token = "0x6000BE1")]
	[Address(RVA = "0x1A5A33C", Offset = "0x1A5A33C", VA = "0x1A5A33C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C7DF8", Offset = "0x8C7DF8")]
	private IEnumerator delayFade()
	{
		return null;
	}

	[Token(Token = "0x6000BE2")]
	[Address(RVA = "0x1A5A4A0", Offset = "0x1A5A4A0", VA = "0x1A5A4A0", Slot = "13")]
	public override void playHurtAnimation()
	{
	}

	[Token(Token = "0x6000BE3")]
	[Address(RVA = "0x1A5A584", Offset = "0x1A5A584", VA = "0x1A5A584")]
	public ToxicMass()
	{
	}
}
[Token(Token = "0x20001AF")]
public class WreckingBallCollider : MonoBehaviour
{
	[Token(Token = "0x4000B61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Rigidbody rb;

	[Token(Token = "0x4000B62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public EnemyWreckingBall ball;

	[Token(Token = "0x6000BE4")]
	[Address(RVA = "0xC0F038", Offset = "0xC0F038", VA = "0xC0F038")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000BE5")]
	[Address(RVA = "0xC0F370", Offset = "0xC0F370", VA = "0xC0F370")]
	private void OnTriggerEnter(Collider collision)
	{
	}

	[Token(Token = "0x6000BE6")]
	[Address(RVA = "0xC0CB38", Offset = "0xC0CB38", VA = "0xC0CB38")]
	public void addForce(UnityEngine.Vector3 pos)
	{
	}

	[Token(Token = "0x6000BE7")]
	[Address(RVA = "0xC0F630", Offset = "0xC0F630", VA = "0xC0F630")]
	public WreckingBallCollider()
	{
	}
}
[Token(Token = "0x20001B0")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8B60F4", Offset = "0x8B60F4")]
public class ItemExpPotion : Item
{
	[Token(Token = "0x4000B63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int expValue;

	[Token(Token = "0x4000B64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject particleEffect;

	[Token(Token = "0x6000BE8")]
	[Address(RVA = "0xADDECC", Offset = "0xADDECC", VA = "0xADDECC", Slot = "4")]
	public override void useItem(int inventoryIndex)
	{
	}

	[Token(Token = "0x6000BE9")]
	[Address(RVA = "0xADE068", Offset = "0xADE068", VA = "0xADE068")]
	public ItemExpPotion()
	{
	}
}
[Token(Token = "0x20001B1")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8B6138", Offset = "0x8B6138")]
public class ItemHubReturn : Item
{
	[Token(Token = "0x6000BEA")]
	[Address(RVA = "0xADE06C", Offset = "0xADE06C", VA = "0xADE06C", Slot = "4")]
	public override void useItem(int inventoryIndex)
	{
	}

	[Token(Token = "0x6000BEB")]
	[Address(RVA = "0xADE0F0", Offset = "0xADE0F0", VA = "0xADE0F0")]
	public ItemHubReturn()
	{
	}
}
[Token(Token = "0x20001B2")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8B617C", Offset = "0x8B617C")]
public class ItemMemoryCore : Item
{
	[Token(Token = "0x4000B65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int expValue;

	[Token(Token = "0x4000B66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject particleEffect;

	[Token(Token = "0x6000BEC")]
	[Address(RVA = "0xADE0F4", Offset = "0xADE0F4", VA = "0xADE0F4", Slot = "4")]
	public override void useItem(int inventoryIndex)
	{
	}

	[Token(Token = "0x6000BED")]
	[Address(RVA = "0xADE25C", Offset = "0xADE25C", VA = "0xADE25C")]
	public ItemMemoryCore()
	{
	}
}
[Token(Token = "0x20001B3")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8B61C0", Offset = "0x8B61C0")]
public class ItemPPUp : Item
{
	[Token(Token = "0x4000B67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject useParticle;

	[Token(Token = "0x6000BEE")]
	[Address(RVA = "0xADE260", Offset = "0xADE260", VA = "0xADE260", Slot = "4")]
	public override void useItem(int inventoryIndex)
	{
	}

	[Token(Token = "0x6000BEF")]
	[Address(RVA = "0xADE3C8", Offset = "0xADE3C8", VA = "0xADE3C8")]
	public ItemPPUp()
	{
	}
}
[Token(Token = "0x20001B4")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8B6204", Offset = "0x8B6204")]
public class ItemPlaceable : Item
{
	[Token(Token = "0x4000B68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject placeableObject;

	[Token(Token = "0x4000B69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject spawnParticle;

	[Token(Token = "0x4000B6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool dungeonOnly;

	[Token(Token = "0x6000BF0")]
	[Address(RVA = "0xADE61C", Offset = "0xADE61C", VA = "0xADE61C")]
	private void placeItem(int inventoryIndex)
	{
	}

	[Token(Token = "0x6000BF1")]
	[Address(RVA = "0xADE914", Offset = "0xADE914", VA = "0xADE914", Slot = "4")]
	public override void useItem(int inventoryIndex)
	{
	}

	[Token(Token = "0x6000BF2")]
	[Address(RVA = "0xADEA6C", Offset = "0xADEA6C", VA = "0xADEA6C")]
	public ItemPlaceable()
	{
	}
}
[Token(Token = "0x20001B5")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8B6248", Offset = "0x8B6248")]
public class ItemStartFight : Item
{
	[Token(Token = "0x4000B6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public List<EnemyParent> enemies;

	[Token(Token = "0x4000B6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public string battleScene;

	[Token(Token = "0x6000BF3")]
	[Address(RVA = "0xADED40", Offset = "0xADED40", VA = "0xADED40", Slot = "4")]
	public override void useItem(int inventoryIndex)
	{
	}

	[Token(Token = "0x6000BF4")]
	[Address(RVA = "0xADF174", Offset = "0xADF174", VA = "0xADF174")]
	public ItemStartFight()
	{
	}
}
[Token(Token = "0x20001B6")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8B628C", Offset = "0x8B628C")]
public class ItemSummonPet : Item
{
	[Token(Token = "0x4000B6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public OverworldPet pet;

	[Token(Token = "0x4000B6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public PlayerSpell learnSpell;

	[Token(Token = "0x6000BF5")]
	[Address(RVA = "0xADF1A4", Offset = "0xADF1A4", VA = "0xADF1A4", Slot = "4")]
	public override void useItem(int inventoryIndex)
	{
	}

	[Token(Token = "0x6000BF6")]
	[Address(RVA = "0xADF548", Offset = "0xADF548", VA = "0xADF548")]
	public ItemSummonPet()
	{
	}
}
[Token(Token = "0x20001B7")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8B62D0", Offset = "0x8B62D0")]
public class ItemTrapDisable : Item
{
	[Token(Token = "0x4000B6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject useParticle;

	[Token(Token = "0x6000BF7")]
	[Address(RVA = "0xADF54C", Offset = "0xADF54C", VA = "0xADF54C", Slot = "4")]
	public override void useItem(int inventoryIndex)
	{
	}

	[Token(Token = "0x6000BF8")]
	[Address(RVA = "0xADF788", Offset = "0xADF788", VA = "0xADF788")]
	public ItemTrapDisable()
	{
	}
}
[Token(Token = "0x20001B8")]
public class BallPuzzleGoal : MonoBehaviour
{
	[Token(Token = "0x4000B70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject chest;

	[Token(Token = "0x4000B71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioSource source;

	[Token(Token = "0x4000B72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool triggered;

	[Token(Token = "0x6000BF9")]
	[Address(RVA = "0xBBF994", Offset = "0xBBF994", VA = "0xBBF994")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000BFA")]
	[Address(RVA = "0xBBFA50", Offset = "0xBBFA50", VA = "0xBBFA50")]
	public BallPuzzleGoal()
	{
	}
}
[Token(Token = "0x20001B9")]
public class PuzzleCube : MonoBehaviour
{
	[Token(Token = "0x4000B73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private UnityEngine.Vector3 startPos;

	[Token(Token = "0x4000B74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Rigidbody rb;

	[Token(Token = "0x6000BFB")]
	[Address(RVA = "0xB782E8", Offset = "0xB782E8", VA = "0xB782E8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000BFC")]
	[Address(RVA = "0xB78324", Offset = "0xB78324", VA = "0xB78324")]
	private void Update()
	{
	}

	[Token(Token = "0x6000BFD")]
	[Address(RVA = "0xB7840C", Offset = "0xB7840C", VA = "0xB7840C")]
	public PuzzleCube()
	{
	}
}
[Token(Token = "0x20001BA")]
public class EnableHoverBoard : MonoBehaviour
{
	[Token(Token = "0x6000BFE")]
	[Address(RVA = "0xBF3E08", Offset = "0xBF3E08", VA = "0xBF3E08")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000BFF")]
	[Address(RVA = "0xBF3E64", Offset = "0xBF3E64", VA = "0xBF3E64")]
	public EnableHoverBoard()
	{
	}
}
[Token(Token = "0x20001BB")]
public class HoverboardController : MonoBehaviour
{
	[Token(Token = "0x4000B75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Rigidbody rigidbody;

	[Token(Token = "0x4000B76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float hoverSpeed;

	[Token(Token = "0x4000B77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float turnSpeed;

	[Token(Token = "0x4000B78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float maxSpeed;

	[Token(Token = "0x4000B79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float boostPower;

	[Token(Token = "0x4000B7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float boostCD;

	[Token(Token = "0x4000B7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float boostTimer;

	[Token(Token = "0x4000B7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform playerPos;

	[Token(Token = "0x4000B7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ParticleSystem boostParticle;

	[Token(Token = "0x4000B7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool isBraking;

	[Token(Token = "0x4000B7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	private bool hasZoomModule;

	[Token(Token = "0x4000B80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AudioSource boostSource;

	[Token(Token = "0x6000C00")]
	[Address(RVA = "0xAD5928", Offset = "0xAD5928", VA = "0xAD5928")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C01")]
	[Address(RVA = "0xAD5A50", Offset = "0xAD5A50", VA = "0xAD5A50")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000C02")]
	[Address(RVA = "0xAD5B60", Offset = "0xAD5B60", VA = "0xAD5B60")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C03")]
	[Address(RVA = "0xAD5D44", Offset = "0xAD5D44", VA = "0xAD5D44")]
	public void moveBoard(UnityEngine.Vector3 direction)
	{
	}

	[Token(Token = "0x6000C04")]
	[Address(RVA = "0xAD5DF0", Offset = "0xAD5DF0", VA = "0xAD5DF0")]
	public void boostBoard()
	{
	}

	[Token(Token = "0x6000C05")]
	[Address(RVA = "0xAD5F30", Offset = "0xAD5F30", VA = "0xAD5F30")]
	public HoverboardController()
	{
	}
}
[Token(Token = "0x20001BC")]
public class HoverboardTriggerZone : MonoBehaviour
{
	[Token(Token = "0x6000C06")]
	[Address(RVA = "0xAD63D8", Offset = "0xAD63D8", VA = "0xAD63D8")]
	private void OnTriggerStay(Collider other)
	{
	}

	[Token(Token = "0x6000C07")]
	[Address(RVA = "0xAD64C4", Offset = "0xAD64C4", VA = "0xAD64C4")]
	public HoverboardTriggerZone()
	{
	}
}
[Token(Token = "0x20001BD")]
public class MiningOre : MonoBehaviour
{
	[Token(Token = "0x4000B81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Item rewardItem;

	[Token(Token = "0x4000B82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject mineParticle;

	[Token(Token = "0x4000B83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int mineDifficulty;

	[Token(Token = "0x6000C08")]
	[Address(RVA = "0xB85A50", Offset = "0xB85A50", VA = "0xB85A50")]
	public void attemptMine(int minePower)
	{
	}

	[Token(Token = "0x6000C09")]
	[Address(RVA = "0xB85B1C", Offset = "0xB85B1C", VA = "0xB85B1C")]
	public MiningOre()
	{
	}
}
[Token(Token = "0x20001BE")]
public class MiningPick : MonoBehaviour
{
	[Token(Token = "0x4000B84")]
	private const float reqVelToSwing = 1f;

	[Token(Token = "0x4000B85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int minePower;

	[Token(Token = "0x4000B86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public PhysicsHead head;

	[Token(Token = "0x4000B87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool grabbed;

	[Token(Token = "0x6000C0A")]
	[Address(RVA = "0xB85B24", Offset = "0xB85B24", VA = "0xB85B24")]
	public void pickUp()
	{
	}

	[Token(Token = "0x6000C0B")]
	[Address(RVA = "0xB85B30", Offset = "0xB85B30", VA = "0xB85B30")]
	public void drop()
	{
	}

	[Token(Token = "0x6000C0C")]
	[Address(RVA = "0xB85B38", Offset = "0xB85B38", VA = "0xB85B38")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000C0D")]
	[Address(RVA = "0xB85D5C", Offset = "0xB85D5C", VA = "0xB85D5C")]
	public MiningPick()
	{
	}
}
[Token(Token = "0x20001BF")]
public class PhysicsFollower : MonoBehaviour
{
	[Token(Token = "0x4000B88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private PhysicsHead _physicsHead;

	[Token(Token = "0x4000B89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Rigidbody rb;

	[Token(Token = "0x4000B8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private UnityEngine.Vector3 _velocity;

	[Token(Token = "0x4000B8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private float _sensitivity;

	[Token(Token = "0x6000C0E")]
	[Address(RVA = "0xB668CC", Offset = "0xB668CC", VA = "0xB668CC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000C0F")]
	[Address(RVA = "0xB66924", Offset = "0xB66924", VA = "0xB66924")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000C10")]
	[Address(RVA = "0xB66AAC", Offset = "0xB66AAC", VA = "0xB66AAC")]
	public void SetFollowTarget(PhysicsHead head)
	{
	}

	[Token(Token = "0x6000C11")]
	[Address(RVA = "0xB66AB4", Offset = "0xB66AB4", VA = "0xB66AB4")]
	public PhysicsFollower()
	{
	}
}
[Token(Token = "0x20001C0")]
public class PhysicsHead : MonoBehaviour
{
	[Token(Token = "0x4000B8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private PhysicsFollower _followerPrefab;

	[Token(Token = "0x4000B8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public PhysicsFollower spawnedFollower;

	[Token(Token = "0x6000C12")]
	[Address(RVA = "0xB66AC4", Offset = "0xB66AC4", VA = "0xB66AC4")]
	private void SpawnBatCapsuleFollower()
	{
	}

	[Token(Token = "0x6000C13")]
	[Address(RVA = "0xB66B8C", Offset = "0xB66B8C", VA = "0xB66B8C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C14")]
	[Address(RVA = "0xB66B90", Offset = "0xB66B90", VA = "0xB66B90")]
	public PhysicsHead()
	{
	}
}
[Token(Token = "0x20001C1")]
public class BagZone : MonoBehaviour
{
	[Token(Token = "0x4000B8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool thisZoneTouched;

	[Token(Token = "0x6000C15")]
	[Address(RVA = "0xBBF818", Offset = "0xBBF818", VA = "0xBBF818")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000C16")]
	[Address(RVA = "0xBBF8D4", Offset = "0xBBF8D4", VA = "0xBBF8D4")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000C17")]
	[Address(RVA = "0xBBF98C", Offset = "0xBBF98C", VA = "0xBBF98C")]
	public BagZone()
	{
	}
}
[Token(Token = "0x20001C2")]
public class PunchingBag : MonoBehaviour
{
	[Token(Token = "0x2000799")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B8744", Offset = "0x8B8744")]
	private sealed class <delayMenuClose>d__34 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002634")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002635")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x170005E7")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002D30")]
			[Address(RVA = "0xB769B4", Offset = "0xB769B4", VA = "0xB769B4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005E8")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002D32")]
			[Address(RVA = "0xB76A1C", Offset = "0xB76A1C", VA = "0xB76A1C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002D2D")]
		[Address(RVA = "0xB75960", Offset = "0xB75960", VA = "0xB75960")]
		[DebuggerHidden]
		public <delayMenuClose>d__34(int <>1__state)
		{
		}

		[Token(Token = "0x6002D2E")]
		[Address(RVA = "0xB768C4", Offset = "0xB768C4", VA = "0xB768C4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002D2F")]
		[Address(RVA = "0xB768C8", Offset = "0xB768C8", VA = "0xB768C8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002D31")]
		[Address(RVA = "0xB769BC", Offset = "0xB769BC", VA = "0xB769BC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200079A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B8754", Offset = "0x8B8754")]
	private sealed class <CycleZones>d__36 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002636")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002637")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002638")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PunchingBag <>4__this;

		[Token(Token = "0x4002639")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float cycleDelay;

		[Token(Token = "0x400263A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <timer>5__2;

		[Token(Token = "0x400263B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <maxTime>5__3;

		[Token(Token = "0x170005E9")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002D36")]
			[Address(RVA = "0xB76724", Offset = "0xB76724", VA = "0xB76724", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005EA")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002D38")]
			[Address(RVA = "0xB7678C", Offset = "0xB7678C", VA = "0xB7678C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002D33")]
		[Address(RVA = "0xB7600C", Offset = "0xB7600C", VA = "0xB7600C")]
		[DebuggerHidden]
		public <CycleZones>d__36(int <>1__state)
		{
		}

		[Token(Token = "0x6002D34")]
		[Address(RVA = "0xB763B4", Offset = "0xB763B4", VA = "0xB763B4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002D35")]
		[Address(RVA = "0xB763B8", Offset = "0xB763B8", VA = "0xB763B8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002D37")]
		[Address(RVA = "0xB7672C", Offset = "0xB7672C", VA = "0xB7672C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200079B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B8764", Offset = "0x8B8764")]
	private sealed class <PunchTimer>d__37 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400263C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400263D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400263E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float punchDelay;

		[Token(Token = "0x400263F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public PunchingBag <>4__this;

		[Token(Token = "0x170005EB")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002D3C")]
			[Address(RVA = "0xB76854", Offset = "0xB76854", VA = "0xB76854", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005EC")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002D3E")]
			[Address(RVA = "0xB768BC", Offset = "0xB768BC", VA = "0xB768BC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002D39")]
		[Address(RVA = "0xB76038", Offset = "0xB76038", VA = "0xB76038")]
		[DebuggerHidden]
		public <PunchTimer>d__37(int <>1__state)
		{
		}

		[Token(Token = "0x6002D3A")]
		[Address(RVA = "0xB76794", Offset = "0xB76794", VA = "0xB76794", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002D3B")]
		[Address(RVA = "0xB76798", Offset = "0xB76798", VA = "0xB76798", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002D3D")]
		[Address(RVA = "0xB7685C", Offset = "0xB7685C", VA = "0xB7685C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000B8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool canBeHit;

	[Token(Token = "0x4000B90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float punchDelay;

	[Token(Token = "0x4000B91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float requiredSpeedToHit;

	[Token(Token = "0x4000B92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int punchNumberToGainz;

	[Token(Token = "0x4000B93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int currentPunches;

	[Token(Token = "0x4000B94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int comboCount;

	[Token(Token = "0x4000B95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float oldLineWidth;

	[Token(Token = "0x4000B96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private bool cycleOn;

	[Token(Token = "0x4000B97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
	public bool touchingZoneOne;

	[Token(Token = "0x4000B98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x36")]
	public bool touchingZoneTwo;

	[Token(Token = "0x4000B99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x37")]
	public bool touchingZoneThree;

	[Token(Token = "0x4000B9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool punchingStarted;

	[Token(Token = "0x4000B9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject ZoneOne;

	[Token(Token = "0x4000B9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject ZoneTwo;

	[Token(Token = "0x4000B9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject ZoneThree;

	[Token(Token = "0x4000B9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject ZoneOneRing;

	[Token(Token = "0x4000B9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject ZoneTwoRing;

	[Token(Token = "0x4000BA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject ZoneThreeRing;

	[Token(Token = "0x4000BA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject ExpThrower;

	[Token(Token = "0x4000BA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject expText;

	[Token(Token = "0x4000BA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject punchParticle;

	[Token(Token = "0x4000BA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public TMP_Text ComboCountText;

	[Token(Token = "0x4000BA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Transform telePoint;

	[Token(Token = "0x4000BA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private UnityEngine.Vector3 smallPointerScale;

	[Token(Token = "0x4000BA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private UnityEngine.Vector3 oldPointerScale;

	[Token(Token = "0x4000BA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public GameObject textParent;

	[Token(Token = "0x4000BA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public AudioSource audioSource;

	[Token(Token = "0x4000BAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public AudioClip[] clips;

	[Token(Token = "0x4000BAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public GameObject currentBonusZone;

	[Token(Token = "0x4000BAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private UnityEngine.Vector3 punchForce;

	[Token(Token = "0x4000BAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public Rigidbody punchingBagRigidbody;

	[Token(Token = "0x6000C18")]
	[Address(RVA = "0xB753A0", Offset = "0xB753A0", VA = "0xB753A0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C19")]
	[Address(RVA = "0xB75640", Offset = "0xB75640", VA = "0xB75640")]
	public void StartPunching()
	{
	}

	[Token(Token = "0x6000C1A")]
	[Address(RVA = "0xB7543C", Offset = "0xB7543C", VA = "0xB7543C")]
	public void stopPunching()
	{
	}

	[Token(Token = "0x6000C1B")]
	[Address(RVA = "0xB75900", Offset = "0xB75900", VA = "0xB75900")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C7E5C", Offset = "0x8C7E5C")]
	private IEnumerator delayMenuClose()
	{
		return null;
	}

	[Token(Token = "0x6000C1C")]
	[Address(RVA = "0xB7598C", Offset = "0xB7598C", VA = "0xB7598C")]
	private void OnTriggerEnter(Collider collision)
	{
	}

	[Token(Token = "0x6000C1D")]
	[Address(RVA = "0xB75880", Offset = "0xB75880", VA = "0xB75880")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C7EC0", Offset = "0x8C7EC0")]
	private IEnumerator CycleZones(float cycleDelay)
	{
		return null;
	}

	[Token(Token = "0x6000C1E")]
	[Address(RVA = "0xB75F8C", Offset = "0xB75F8C", VA = "0xB75F8C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C7F24", Offset = "0x8C7F24")]
	private IEnumerator PunchTimer(float punchDelay)
	{
		return null;
	}

	[Token(Token = "0x6000C1F")]
	[Address(RVA = "0xB75E18", Offset = "0xB75E18", VA = "0xB75E18")]
	private void checkZone()
	{
	}

	[Token(Token = "0x6000C20")]
	[Address(RVA = "0xB76064", Offset = "0xB76064", VA = "0xB76064")]
	private void GiveGainz()
	{
	}

	[Token(Token = "0x6000C21")]
	[Address(RVA = "0xB76390", Offset = "0xB76390", VA = "0xB76390")]
	public PunchingBag()
	{
	}
}
[Token(Token = "0x20001C3")]
public class PusherButton : MonoBehaviour
{
	[Token(Token = "0x4000BAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PusherMan pusherMan;

	[Token(Token = "0x6000C22")]
	[Address(RVA = "0xB76A24", Offset = "0xB76A24", VA = "0xB76A24")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000C23")]
	[Address(RVA = "0xB76D50", Offset = "0xB76D50", VA = "0xB76D50")]
	public PusherButton()
	{
	}
}
[Token(Token = "0x20001C4")]
public class PusherJoystick : MonoBehaviour
{
	[Token(Token = "0x4000BAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private UnityEngine.Vector3 startPos;

	[Token(Token = "0x4000BB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Quaternion startRot;

	[Token(Token = "0x4000BB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public PusherMan pusherMan;

	[Token(Token = "0x4000BB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject stickMesh;

	[Token(Token = "0x4000BB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Transform originalParent;

	[Token(Token = "0x4000BB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AudioSource audioSource;

	[Token(Token = "0x4000BB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool isGrabbed;

	[Token(Token = "0x6000C24")]
	[Address(RVA = "0xB76D58", Offset = "0xB76D58", VA = "0xB76D58")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C25")]
	[Address(RVA = "0xB76DD0", Offset = "0xB76DD0", VA = "0xB76DD0")]
	public void resetTrans()
	{
	}

	[Token(Token = "0x6000C26")]
	[Address(RVA = "0xB76EC0", Offset = "0xB76EC0", VA = "0xB76EC0")]
	public void Grab()
	{
	}

	[Token(Token = "0x6000C27")]
	[Address(RVA = "0xB76ECC", Offset = "0xB76ECC", VA = "0xB76ECC")]
	public void Drop()
	{
	}

	[Token(Token = "0x6000C28")]
	[Address(RVA = "0xB76ED4", Offset = "0xB76ED4", VA = "0xB76ED4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C29")]
	[Address(RVA = "0xB77440", Offset = "0xB77440", VA = "0xB77440")]
	public PusherJoystick()
	{
	}
}
[Token(Token = "0x20001C5")]
public class PusherMan : MonoBehaviour
{
	[Token(Token = "0x200079C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B8774", Offset = "0x8B8774")]
	private sealed class <delayMenuClose>d__27 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002640")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002641")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x170005ED")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002D42")]
			[Address(RVA = "0xB7808C", Offset = "0xB7808C", VA = "0xB7808C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005EE")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002D44")]
			[Address(RVA = "0xB780F4", Offset = "0xB780F4", VA = "0xB780F4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002D3F")]
		[Address(RVA = "0xB77CFC", Offset = "0xB77CFC", VA = "0xB77CFC")]
		[DebuggerHidden]
		public <delayMenuClose>d__27(int <>1__state)
		{
		}

		[Token(Token = "0x6002D40")]
		[Address(RVA = "0xB77F9C", Offset = "0xB77F9C", VA = "0xB77F9C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002D41")]
		[Address(RVA = "0xB77FA0", Offset = "0xB77FA0", VA = "0xB77FA0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002D43")]
		[Address(RVA = "0xB78094", Offset = "0xB78094", VA = "0xB78094", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000BB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public NPCOverworld pusherNPC;

	[Token(Token = "0x4000BB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform telePoint;

	[Token(Token = "0x4000BB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform coinLaunchTrans;

	[Token(Token = "0x4000BB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform[] coinSpawnTranforms;

	[Token(Token = "0x4000BBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject chipPrefab;

	[Token(Token = "0x4000BBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject coinPrefab;

	[Token(Token = "0x4000BBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Rigidbody pusher;

	[Token(Token = "0x4000BBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform pusherParent;

	[Token(Token = "0x4000BBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private UnityEngine.Vector3 originalPusherPos;

	[Token(Token = "0x4000BBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public AudioClip[] soundEffects;

	[Token(Token = "0x4000BC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public AudioSource audioSource;

	[Token(Token = "0x4000BC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Animator textAnim;

	[Token(Token = "0x4000BC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private UnityEngine.Vector3 smallPointerScale;

	[Token(Token = "0x4000BC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private UnityEngine.Vector3 oldPointerScale;

	[Token(Token = "0x4000BC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private float oldLineWidth;

	[Token(Token = "0x4000BC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private int tokensLaunched;

	[Token(Token = "0x4000BC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private int reqTokensToBonus;

	[Token(Token = "0x4000BC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public int bonusTokens;

	[Token(Token = "0x4000BC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private bool gameStarted;

	[Token(Token = "0x4000BC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA9")]
	private bool _isPlaying;

	[Token(Token = "0x170000C3")]
	public bool isPlaying
	{
		[Token(Token = "0x6000C2A")]
		[Address(RVA = "0xB77448", Offset = "0xB77448", VA = "0xB77448")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000C2B")]
	[Address(RVA = "0xB77450", Offset = "0xB77450", VA = "0xB77450")]
	public void startPlaying()
	{
	}

	[Token(Token = "0x6000C2C")]
	[Address(RVA = "0xB77668", Offset = "0xB77668", VA = "0xB77668")]
	public void startGame()
	{
	}

	[Token(Token = "0x6000C2D")]
	[Address(RVA = "0xB77854", Offset = "0xB77854", VA = "0xB77854")]
	public void addTokens(int num)
	{
	}

	[Token(Token = "0x6000C2E")]
	[Address(RVA = "0xB76AAC", Offset = "0xB76AAC", VA = "0xB76AAC")]
	public void launchCoin()
	{
	}

	[Token(Token = "0x6000C2F")]
	[Address(RVA = "0xB77A50", Offset = "0xB77A50", VA = "0xB77A50")]
	public void stopPlaying()
	{
	}

	[Token(Token = "0x6000C30")]
	[Address(RVA = "0xB77C9C", Offset = "0xB77C9C", VA = "0xB77C9C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C7F88", Offset = "0x8C7F88")]
	private IEnumerator delayMenuClose()
	{
		return null;
	}

	[Token(Token = "0x6000C31")]
	[Address(RVA = "0xB77D28", Offset = "0xB77D28", VA = "0xB77D28")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C32")]
	[Address(RVA = "0xB77D6C", Offset = "0xB77D6C", VA = "0xB77D6C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C33")]
	[Address(RVA = "0xB77F08", Offset = "0xB77F08", VA = "0xB77F08")]
	public void turnInToken(int value)
	{
	}

	[Token(Token = "0x6000C34")]
	[Address(RVA = "0xB772DC", Offset = "0xB772DC", VA = "0xB772DC")]
	public void rotateRight()
	{
	}

	[Token(Token = "0x6000C35")]
	[Address(RVA = "0xB77160", Offset = "0xB77160", VA = "0xB77160")]
	public void rotateLeft()
	{
	}

	[Token(Token = "0x6000C36")]
	[Address(RVA = "0xB77F88", Offset = "0xB77F88", VA = "0xB77F88")]
	public PusherMan()
	{
	}
}
[Token(Token = "0x20001C6")]
public static class ShuffleListExtensions
{
	[Token(Token = "0x6000C37")]
	public static T RandomItem<T>(this IList<T> list)
	{
		return (T)null;
	}

	[Token(Token = "0x6000C38")]
	public static void Shuffle<T>(this IList<T> list)
	{
	}
}
[Token(Token = "0x20001C7")]
public class PusherToken : MonoBehaviour
{
	[Token(Token = "0x4000BCA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int tokenValue;

	[Token(Token = "0x6000C39")]
	[Address(RVA = "0xB780FC", Offset = "0xB780FC", VA = "0xB780FC")]
	public PusherToken()
	{
	}
}
[Token(Token = "0x20001C8")]
public class PusherTokenZone : MonoBehaviour
{
	[Token(Token = "0x4000BCB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PusherMan pusherMan;

	[Token(Token = "0x4000BCC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject particle;

	[Token(Token = "0x6000C3A")]
	[Address(RVA = "0xB7810C", Offset = "0xB7810C", VA = "0xB7810C")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000C3B")]
	[Address(RVA = "0xB782E0", Offset = "0xB782E0", VA = "0xB782E0")]
	public PusherTokenZone()
	{
	}
}
[Token(Token = "0x20001C9")]
public class RunInPlace : MonoBehaviour
{
	[Token(Token = "0x200079D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B8784", Offset = "0x8B8784")]
	private sealed class <delayMenuClose>d__43 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002642")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002643")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x170005EF")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002D48")]
			[Address(RVA = "0xC21770", Offset = "0xC21770", VA = "0xC21770", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005F0")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002D4A")]
			[Address(RVA = "0xC217D8", Offset = "0xC217D8", VA = "0xC217D8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002D45")]
		[Address(RVA = "0xC2161C", Offset = "0xC2161C", VA = "0xC2161C")]
		[DebuggerHidden]
		public <delayMenuClose>d__43(int <>1__state)
		{
		}

		[Token(Token = "0x6002D46")]
		[Address(RVA = "0xC21680", Offset = "0xC21680", VA = "0xC21680", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002D47")]
		[Address(RVA = "0xC21684", Offset = "0xC21684", VA = "0xC21684", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002D49")]
		[Address(RVA = "0xC21778", Offset = "0xC21778", VA = "0xC21778", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000BCD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float runSpeed;

	[Token(Token = "0x4000BCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private bool _isRunning;

	[Token(Token = "0x4000BCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject head;

	[Token(Token = "0x4000BD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ScrollUV treadMillScroll;

	[Token(Token = "0x4000BD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public NPCOverworld runnerNPC;

	[Token(Token = "0x4000BD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool runningStarted;

	[Token(Token = "0x4000BD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	private bool isHeadBobbing;

	[Token(Token = "0x4000BD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
	private bool isArmMoving;

	[Token(Token = "0x4000BD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float headCheckInterval;

	[Token(Token = "0x4000BD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float headCheckTimer;

	[Token(Token = "0x4000BD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float requiredHeadVelocity;

	[Token(Token = "0x4000BD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool headMovedLastInterval;

	[Token(Token = "0x4000BD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float headsetVelocity;

	[Token(Token = "0x4000BDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private UnityEngine.Vector3 lastHeadsetPosition;

	[Token(Token = "0x4000BDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float armCheckInterval;

	[Token(Token = "0x4000BDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float armCheckTimer;

	[Token(Token = "0x4000BDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float requiredArmVelocity;

	[Token(Token = "0x4000BDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float lastArmHighestSpeed;

	[Token(Token = "0x4000BDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private bool armsMovedLastInterval;

	[Token(Token = "0x4000BE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private int hpGain;

	[Token(Token = "0x4000BE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private float distRequiredForGain;

	[Token(Token = "0x4000BE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float distSinceLastGain;

	[Token(Token = "0x4000BE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private int totalGains;

	[Token(Token = "0x4000BE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float distanceRun;

	[Token(Token = "0x4000BE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GameObject UICanvas;

	[Token(Token = "0x4000BE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Text speedText;

	[Token(Token = "0x4000BE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Text distText;

	[Token(Token = "0x4000BE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Text gainsText;

	[Token(Token = "0x4000BE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private float oldLineWidth;

	[Token(Token = "0x4000BEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Transform gainedStatTextSpawn;

	[Token(Token = "0x4000BEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public GameObject gainedStatText;

	[Token(Token = "0x4000BEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public GameObject heartsParticle;

	[Token(Token = "0x4000BED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public Transform telePoint;

	[Token(Token = "0x4000BEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private UnityEngine.Vector3 smallPointerScale;

	[Token(Token = "0x4000BEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	private UnityEngine.Vector3 oldPointerScale;

	[Token(Token = "0x170000C4")]
	public bool isRunning
	{
		[Token(Token = "0x6000C3C")]
		[Address(RVA = "0xC20700", Offset = "0xC20700", VA = "0xC20700")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000C3D")]
	[Address(RVA = "0xC20708", Offset = "0xC20708", VA = "0xC20708")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C3E")]
	[Address(RVA = "0xC20760", Offset = "0xC20760", VA = "0xC20760")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C3F")]
	[Address(RVA = "0xC20DA4", Offset = "0xC20DA4", VA = "0xC20DA4")]
	private void increaseGains()
	{
	}

	[Token(Token = "0x6000C40")]
	[Address(RVA = "0xC20CA4", Offset = "0xC20CA4", VA = "0xC20CA4")]
	public static float Round(float value, int digits)
	{
		return default(float);
	}

	[Token(Token = "0x6000C41")]
	[Address(RVA = "0xC21360", Offset = "0xC21360", VA = "0xC21360")]
	public void startRunning()
	{
	}

	[Token(Token = "0x6000C42")]
	[Address(RVA = "0xC21144", Offset = "0xC21144", VA = "0xC21144")]
	public void stopRunning()
	{
	}

	[Token(Token = "0x6000C43")]
	[Address(RVA = "0xC215BC", Offset = "0xC215BC", VA = "0xC215BC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C800C", Offset = "0x8C800C")]
	private IEnumerator delayMenuClose()
	{
		return null;
	}

	[Token(Token = "0x6000C44")]
	[Address(RVA = "0xC209F8", Offset = "0xC209F8", VA = "0xC209F8")]
	private void checkForHeadBob()
	{
	}

	[Token(Token = "0x6000C45")]
	[Address(RVA = "0xC20B60", Offset = "0xC20B60", VA = "0xC20B60")]
	private void checkForArmMovement()
	{
	}

	[Token(Token = "0x6000C46")]
	[Address(RVA = "0xC21648", Offset = "0xC21648", VA = "0xC21648")]
	public RunInPlace()
	{
	}
}
[Token(Token = "0x20001CA")]
public class SlotMachine : MonoBehaviour
{
	[Token(Token = "0x200079E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B8794", Offset = "0x8B8794")]
	private sealed class <delayMenuClose>d__13 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002644")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002645")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x170005F1")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002D4E")]
			[Address(RVA = "0xB1FD48", Offset = "0xB1FD48", VA = "0xB1FD48", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005F2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002D50")]
			[Address(RVA = "0xB1FDB0", Offset = "0xB1FDB0", VA = "0xB1FDB0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002D4B")]
		[Address(RVA = "0xB1FC24", Offset = "0xB1FC24", VA = "0xB1FC24")]
		[DebuggerHidden]
		public <delayMenuClose>d__13(int <>1__state)
		{
		}

		[Token(Token = "0x6002D4C")]
		[Address(RVA = "0xB1FC58", Offset = "0xB1FC58", VA = "0xB1FC58", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002D4D")]
		[Address(RVA = "0xB1FC5C", Offset = "0xB1FC5C", VA = "0xB1FC5C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002D4F")]
		[Address(RVA = "0xB1FD50", Offset = "0xB1FD50", VA = "0xB1FD50", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000BF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public NPCOverworld pusherNPC;

	[Token(Token = "0x4000BF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform telePoint;

	[Token(Token = "0x4000BF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Animator slotsAnimator;

	[Token(Token = "0x4000BF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool slotsRunning;

	[Token(Token = "0x4000BF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int tokensBet;

	[Token(Token = "0x4000BF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private UnityEngine.Vector3 smallPointerScale;

	[Token(Token = "0x4000BF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private UnityEngine.Vector3 oldPointerScale;

	[Token(Token = "0x4000BF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float oldLineWidth;

	[Token(Token = "0x6000C47")]
	[Address(RVA = "0xB1F6B0", Offset = "0xB1F6B0", VA = "0xB1F6B0")]
	public void startPlaying()
	{
	}

	[Token(Token = "0x6000C48")]
	[Address(RVA = "0xB1F87C", Offset = "0xB1F87C", VA = "0xB1F87C")]
	public void startGame()
	{
	}

	[Token(Token = "0x6000C49")]
	[Address(RVA = "0xB1F880", Offset = "0xB1F880", VA = "0xB1F880")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C4A")]
	[Address(RVA = "0xB1F92C", Offset = "0xB1F92C", VA = "0xB1F92C")]
	private void SpinReels()
	{
	}

	[Token(Token = "0x6000C4B")]
	[Address(RVA = "0xB1F9A4", Offset = "0xB1F9A4", VA = "0xB1F9A4")]
	public void stopPlaying()
	{
	}

	[Token(Token = "0x6000C4C")]
	[Address(RVA = "0xB1FBC4", Offset = "0xB1FBC4", VA = "0xB1FBC4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C8070", Offset = "0x8C8070")]
	private IEnumerator delayMenuClose()
	{
		return null;
	}

	[Token(Token = "0x6000C4D")]
	[Address(RVA = "0xB1FC50", Offset = "0xB1FC50", VA = "0xB1FC50")]
	public SlotMachine()
	{
	}
}
[Token(Token = "0x20001CB")]
public class TilePuzzleGame : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200079F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B87A4", Offset = "0x8B87A4")]
	private sealed class <>c
	{
		[Token(Token = "0x4002646")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4002647")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<TilePuzzleTile, float> <>9__6_0;

		[Token(Token = "0x6002D52")]
		[Address(RVA = "0x1A58770", Offset = "0x1A58770", VA = "0x1A58770")]
		public <>c()
		{
		}

		[Token(Token = "0x6002D53")]
		[Address(RVA = "0x1A58778", Offset = "0x1A58778", VA = "0x1A58778")]
		internal float <Start>b__6_0(TilePuzzleTile x)
		{
			return default(float);
		}
	}

	[Token(Token = "0x4000BF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TilePuzzleTrigger[] triggers;

	[Token(Token = "0x4000BF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<TilePuzzleTile> tiles;

	[Token(Token = "0x4000BFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public UnityEvent onGameComplete;

	[Token(Token = "0x4000BFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AudioSource source;

	[Token(Token = "0x4000BFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool firstComplete;

	[Token(Token = "0x4000BFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform respawnPos;

	[Token(Token = "0x6000C4E")]
	[Address(RVA = "0x1A580A4", Offset = "0x1A580A4", VA = "0x1A580A4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C4F")]
	[Address(RVA = "0x1A583E8", Offset = "0x1A583E8", VA = "0x1A583E8")]
	public void checkForCompleteGame()
	{
	}

	[Token(Token = "0x6000C50")]
	[Address(RVA = "0x1A5867C", Offset = "0x1A5867C", VA = "0x1A5867C")]
	public TilePuzzleGame()
	{
	}
}
[Token(Token = "0x20001CC")]
public class TilePuzzleTile : MonoBehaviour
{
	[Token(Token = "0x4000BFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int tileID;

	[Token(Token = "0x170000C5")]
	public bool isTileStraight
	{
		[Token(Token = "0x6000C51")]
		[Address(RVA = "0x1A5855C", Offset = "0x1A5855C", VA = "0x1A5855C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000C52")]
	[Address(RVA = "0x1A58780", Offset = "0x1A58780", VA = "0x1A58780")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C53")]
	[Address(RVA = "0x1A58854", Offset = "0x1A58854", VA = "0x1A58854")]
	public TilePuzzleTile()
	{
	}
}
[Token(Token = "0x20001CD")]
public class TilePuzzleTrigger : MonoBehaviour
{
	[Token(Token = "0x4000BFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int tileID;

	[Token(Token = "0x4000C00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TilePuzzleTile currentlyPlacedTile;

	[Token(Token = "0x6000C54")]
	[Address(RVA = "0x1A58864", Offset = "0x1A58864", VA = "0x1A58864")]
	private void checkGameComplete()
	{
	}

	[Token(Token = "0x6000C55")]
	[Address(RVA = "0x1A58868", Offset = "0x1A58868", VA = "0x1A58868")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000C56")]
	[Address(RVA = "0x1A58960", Offset = "0x1A58960", VA = "0x1A58960")]
	private void onTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000C57")]
	[Address(RVA = "0x1A58A04", Offset = "0x1A58A04", VA = "0x1A58A04")]
	public TilePuzzleTrigger()
	{
	}
}
[Token(Token = "0x20001CE")]
public class DesertDungeon : MonoBehaviour
{
	[Token(Token = "0x4000C01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioClip encounterSound;

	[Token(Token = "0x4000C02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioSource musicPlayer;

	[Token(Token = "0x4000C03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Item board;

	[Token(Token = "0x6000C58")]
	[Address(RVA = "0xB15D60", Offset = "0xB15D60", VA = "0xB15D60")]
	public void playEncounterSound()
	{
	}

	[Token(Token = "0x6000C59")]
	[Address(RVA = "0xB15DA0", Offset = "0xB15DA0", VA = "0xB15DA0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C5A")]
	[Address(RVA = "0xB15DA4", Offset = "0xB15DA4", VA = "0xB15DA4")]
	public void checkForBoard()
	{
	}

	[Token(Token = "0x6000C5B")]
	[Address(RVA = "0xB15EF0", Offset = "0xB15EF0", VA = "0xB15EF0")]
	public DesertDungeon()
	{
	}
}
[Token(Token = "0x20001CF")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8B6324", Offset = "0x8B6324")]
public class Dialogue : ScriptableObject
{
	[Token(Token = "0x4000C04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public DialogueLine[] dialogueTextEnglish;

	[Token(Token = "0x4000C05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Dialogue nextDialogue;

	[Token(Token = "0x6000C5C")]
	[Address(RVA = "0xB16014", Offset = "0xB16014", VA = "0xB16014")]
	public Dialogue()
	{
	}
}
[Token(Token = "0x20001D0")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8B6368", Offset = "0x8B6368")]
public class DialogueAnswer : ScriptableObject
{
	[Token(Token = "0x4000C06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string answerString;

	[Token(Token = "0x4000C07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string associatedQuest;

	[Token(Token = "0x4000C08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int associatedQuestValue;

	[Token(Token = "0x4000C09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Dialogue nextDialogue;

	[Token(Token = "0x6000C5D")]
	[Address(RVA = "0xB1601C", Offset = "0xB1601C", VA = "0xB1601C")]
	public DialogueAnswer()
	{
	}
}
[Token(Token = "0x20001D1")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8B63AC", Offset = "0x8B63AC")]
public class DialogueLine : ScriptableObject
{
	[Token(Token = "0x4000C0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TextAreaAttribute", RVA = "0x8BC5B8", Offset = "0x8BC5B8")]
	public string dialogueString;

	[Token(Token = "0x4000C0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool test;

	[Token(Token = "0x4000C0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool waitForInteraction;

	[Token(Token = "0x4000C0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string animationName;

	[Token(Token = "0x4000C0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string changeNPCName;

	[Token(Token = "0x4000C0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool stopMusic;

	[Token(Token = "0x4000C10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public int changeMusicNum;

	[Token(Token = "0x4000C11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool nameChange;

	[Token(Token = "0x4000C12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	public bool rotateToPlayer;

	[Token(Token = "0x4000C13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AudioClip audioClip;

	[Token(Token = "0x4000C14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public DialogueAnswer[] interactionAnswers;

	[Token(Token = "0x6000C5E")]
	[Address(RVA = "0xB16024", Offset = "0xB16024", VA = "0xB16024")]
	public DialogueLine()
	{
	}
}
[Token(Token = "0x20001D2")]
public class BombPlateExplosion : MonoBehaviour
{
	[Token(Token = "0x4000C15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int damage;

	[Token(Token = "0x4000C16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float timeBeforeDisable;

	[Token(Token = "0x4000C17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float timeBeforeDestroy;

	[Token(Token = "0x4000C18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float timeAlive;

	[Token(Token = "0x6000C5F")]
	[Address(RVA = "0xBC71B4", Offset = "0xBC71B4", VA = "0xBC71B4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C60")]
	[Address(RVA = "0xBC72A0", Offset = "0xBC72A0", VA = "0xBC72A0")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000C61")]
	[Address(RVA = "0xBC73A0", Offset = "0xBC73A0", VA = "0xBC73A0")]
	public BombPlateExplosion()
	{
	}
}
[Token(Token = "0x20001D3")]
public class Dungeon1Overworld : MonoBehaviour
{
	[Token(Token = "0x6000C62")]
	[Address(RVA = "0xB16098", Offset = "0xB16098", VA = "0xB16098")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C63")]
	[Address(RVA = "0xB160FC", Offset = "0xB160FC", VA = "0xB160FC")]
	public Dungeon1Overworld()
	{
	}
}
[Token(Token = "0x20001D4")]
public class DungeonBombPlate : MonoBehaviour
{
	[Token(Token = "0x4000C19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Renderer areaRenderer;

	[Token(Token = "0x4000C1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject explosion;

	[Token(Token = "0x4000C1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool pingPong;

	[Token(Token = "0x4000C1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float distToPlayerCheck;

	[Token(Token = "0x6000C64")]
	[Address(RVA = "0xBED898", Offset = "0xBED898", VA = "0xBED898")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C65")]
	[Address(RVA = "0xBEDA08", Offset = "0xBEDA08", VA = "0xBEDA08")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C66")]
	[Address(RVA = "0xBEDAF4", Offset = "0xBEDAF4", VA = "0xBEDAF4")]
	public void checkForDestroy()
	{
	}

	[Token(Token = "0x6000C67")]
	[Address(RVA = "0xBEDBE4", Offset = "0xBEDBE4", VA = "0xBEDBE4")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000C68")]
	[Address(RVA = "0xBEDE14", Offset = "0xBEDE14", VA = "0xBEDE14")]
	public DungeonBombPlate()
	{
	}
}
[Token(Token = "0x20001D5")]
public class OverworldLaserHazard : MonoBehaviour
{
	[Token(Token = "0x4000C1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject laserEnd;

	[Token(Token = "0x4000C1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public LineRenderer lineRend;

	[Token(Token = "0x4000C1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float power;

	[Token(Token = "0x4000C20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public LayerMask mask;

	[Token(Token = "0x6000C69")]
	[Address(RVA = "0xAFB48C", Offset = "0xAFB48C", VA = "0xAFB48C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C6A")]
	[Address(RVA = "0xAFB490", Offset = "0xAFB490", VA = "0xAFB490")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C6B")]
	[Address(RVA = "0xAFB794", Offset = "0xAFB794", VA = "0xAFB794")]
	public OverworldLaserHazard()
	{
	}
}
[Token(Token = "0x20001D6")]
public class HoverboardRestrictedFloor : MonoBehaviour
{
	[Token(Token = "0x4000C21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string storyString;

	[Token(Token = "0x4000C22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform returnSpot;

	[Token(Token = "0x4000C23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int insideCols;

	[Token(Token = "0x6000C6C")]
	[Address(RVA = "0xAD5F48", Offset = "0xAD5F48", VA = "0xAD5F48")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C6D")]
	[Address(RVA = "0xAD6030", Offset = "0xAD6030", VA = "0xAD6030")]
	public void resetPosition()
	{
	}

	[Token(Token = "0x6000C6E")]
	[Address(RVA = "0xAD60B8", Offset = "0xAD60B8", VA = "0xAD60B8")]
	public void enteredSafeArea()
	{
	}

	[Token(Token = "0x6000C6F")]
	[Address(RVA = "0xAD60C8", Offset = "0xAD60C8", VA = "0xAD60C8")]
	public void exitedSafeArea()
	{
	}

	[Token(Token = "0x6000C70")]
	[Address(RVA = "0xAD618C", Offset = "0xAD618C", VA = "0xAD618C")]
	public void leftHoverboard()
	{
	}

	[Token(Token = "0x6000C71")]
	[Address(RVA = "0xAD622C", Offset = "0xAD622C", VA = "0xAD622C")]
	public HoverboardRestrictedFloor()
	{
	}
}
[Token(Token = "0x20001D7")]
public class HoverboardSafeZone : MonoBehaviour
{
	[Token(Token = "0x4000C24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool occupied;

	[Token(Token = "0x6000C72")]
	[Address(RVA = "0xAD6234", Offset = "0xAD6234", VA = "0xAD6234")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000C73")]
	[Address(RVA = "0xAD6308", Offset = "0xAD6308", VA = "0xAD6308")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000C74")]
	[Address(RVA = "0xAD63D0", Offset = "0xAD63D0", VA = "0xAD63D0")]
	public HoverboardSafeZone()
	{
	}
}
[Token(Token = "0x20001D8")]
public class MakeSunnyFloor : MonoBehaviour
{
	[Token(Token = "0x4000C25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool bakeNavMesh;

	[Token(Token = "0x6000C75")]
	[Address(RVA = "0xB827C4", Offset = "0xB827C4", VA = "0xB827C4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C76")]
	[Address(RVA = "0xB828B4", Offset = "0xB828B4", VA = "0xB828B4")]
	public MakeSunnyFloor()
	{
	}
}
[Token(Token = "0x20001D9")]
public class OverworldShark : MonoBehaviour
{
	[Token(Token = "0x20007A0")]
	public enum SharkState
	{
		[Token(Token = "0x4002649")]
		stalking,
		[Token(Token = "0x400264A")]
		jumping,
		[Token(Token = "0x400264B")]
		attacking,
		[Token(Token = "0x400264C")]
		startingBattle
	}

	[Token(Token = "0x4000C26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Rigidbody rb;

	[Token(Token = "0x4000C27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float startY;

	[Token(Token = "0x4000C28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float stalkSpeed;

	[Token(Token = "0x4000C29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float jumpPower;

	[Token(Token = "0x4000C2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public LayerMask layerMask;

	[Token(Token = "0x4000C2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AudioSource splashFX;

	[Token(Token = "0x4000C2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public EnemyOverworld enemyOverworld;

	[Token(Token = "0x4000C2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject splashEffect;

	[Token(Token = "0x4000C2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public SharkState sharkState;

	[Token(Token = "0x6000C77")]
	[Address(RVA = "0xAFBE24", Offset = "0xAFBE24", VA = "0xAFBE24")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C78")]
	[Address(RVA = "0xAFBE5C", Offset = "0xAFBE5C", VA = "0xAFBE5C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C79")]
	[Address(RVA = "0xAFC7F0", Offset = "0xAFC7F0", VA = "0xAFC7F0")]
	private void attackPlayer()
	{
	}

	[Token(Token = "0x6000C7A")]
	[Address(RVA = "0xAFC4E4", Offset = "0xAFC4E4", VA = "0xAFC4E4")]
	private void lookForPlayer()
	{
	}

	[Token(Token = "0x6000C7B")]
	[Address(RVA = "0xAFC0DC", Offset = "0xAFC0DC", VA = "0xAFC0DC")]
	private void checkForGround()
	{
	}

	[Token(Token = "0x6000C7C")]
	[Address(RVA = "0xAFC93C", Offset = "0xAFC93C", VA = "0xAFC93C")]
	private void sharkJump()
	{
	}

	[Token(Token = "0x6000C7D")]
	[Address(RVA = "0xAFC270", Offset = "0xAFC270", VA = "0xAFC270")]
	private void moveTowardsPlayer()
	{
	}

	[Token(Token = "0x6000C7E")]
	[Address(RVA = "0xAFC9C8", Offset = "0xAFC9C8", VA = "0xAFC9C8")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000C7F")]
	[Address(RVA = "0xAFCA98", Offset = "0xAFCA98", VA = "0xAFCA98")]
	public OverworldShark()
	{
	}
}
[Token(Token = "0x20001DA")]
public class FireTurretDamage : MonoBehaviour
{
	[Token(Token = "0x4000C2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float damage;

	[Token(Token = "0x6000C80")]
	[Address(RVA = "0xC4C190", Offset = "0xC4C190", VA = "0xC4C190")]
	private void OnTriggerStay(Collider other)
	{
	}

	[Token(Token = "0x6000C81")]
	[Address(RVA = "0xC4C2A8", Offset = "0xC4C2A8", VA = "0xC4C2A8")]
	public FireTurretDamage()
	{
	}
}
[Token(Token = "0x20001DB")]
public class DarkaxerChaseHazzard : MonoBehaviour
{
	[Token(Token = "0x20007A1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B87B4", Offset = "0x8B87B4")]
	private sealed class <fireProjectiles>d__13 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400264D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400264E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400264F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DarkaxerChaseHazzard <>4__this;

		[Token(Token = "0x170005F3")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002D57")]
			[Address(RVA = "0xB0E428", Offset = "0xB0E428", VA = "0xB0E428", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005F4")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002D59")]
			[Address(RVA = "0xB0E490", Offset = "0xB0E490", VA = "0xB0E490", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002D54")]
		[Address(RVA = "0xB0DCE0", Offset = "0xB0DCE0", VA = "0xB0DCE0")]
		[DebuggerHidden]
		public <fireProjectiles>d__13(int <>1__state)
		{
		}

		[Token(Token = "0x6002D55")]
		[Address(RVA = "0xB0E22C", Offset = "0xB0E22C", VA = "0xB0E22C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002D56")]
		[Address(RVA = "0xB0E230", Offset = "0xB0E230", VA = "0xB0E230", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002D58")]
		[Address(RVA = "0xB0E430", Offset = "0xB0E430", VA = "0xB0E430", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20007A2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B87C4", Offset = "0x8B87C4")]
	private sealed class <disolveMaterial>d__17 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002650")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002651")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002652")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DarkaxerChaseHazzard <>4__this;

		[Token(Token = "0x4002653")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Renderer[] <rends>5__2;

		[Token(Token = "0x4002654")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <disolve>5__3;

		[Token(Token = "0x170005F5")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002D5D")]
			[Address(RVA = "0xB0E1BC", Offset = "0xB0E1BC", VA = "0xB0E1BC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005F6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002D5F")]
			[Address(RVA = "0xB0E224", Offset = "0xB0E224", VA = "0xB0E224", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002D5A")]
		[Address(RVA = "0xB0DF28", Offset = "0xB0DF28", VA = "0xB0DF28")]
		[DebuggerHidden]
		public <disolveMaterial>d__17(int <>1__state)
		{
		}

		[Token(Token = "0x6002D5B")]
		[Address(RVA = "0xB0DF7C", Offset = "0xB0DF7C", VA = "0xB0DF7C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002D5C")]
		[Address(RVA = "0xB0DF80", Offset = "0xB0DF80", VA = "0xB0DF80", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002D5E")]
		[Address(RVA = "0xB0E1C4", Offset = "0xB0E1C4", VA = "0xB0E1C4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000C30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject projectile;

	[Token(Token = "0x4000C31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float actionTimer;

	[Token(Token = "0x4000C32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float maxActionTime;

	[Token(Token = "0x4000C33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float numOfShots;

	[Token(Token = "0x4000C34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private int damage;

	[Token(Token = "0x4000C35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float followYOffset;

	[Token(Token = "0x4000C36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float followSpeed;

	[Token(Token = "0x4000C37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float targetDist;

	[Token(Token = "0x4000C38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float fireRange;

	[Token(Token = "0x4000C39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform projLaunchTrans;

	[Token(Token = "0x4000C3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Animator animator;

	[Token(Token = "0x6000C82")]
	[Address(RVA = "0xB0D684", Offset = "0xB0D684", VA = "0xB0D684")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000C83")]
	[Address(RVA = "0xB0D71C", Offset = "0xB0D71C", VA = "0xB0D71C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C84")]
	[Address(RVA = "0xB0DA5C", Offset = "0xB0DA5C", VA = "0xB0DA5C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C80D4", Offset = "0x8C80D4")]
	private IEnumerator fireProjectiles()
	{
		return null;
	}

	[Token(Token = "0x6000C85")]
	[Address(RVA = "0xB0DD0C", Offset = "0xB0DD0C", VA = "0xB0DD0C")]
	private void fireBullet()
	{
	}

	[Token(Token = "0x6000C86")]
	[Address(RVA = "0xB0DACC", Offset = "0xB0DACC", VA = "0xB0DACC")]
	private void teleportNearby()
	{
	}

	[Token(Token = "0x6000C87")]
	[Address(RVA = "0xB0DE8C", Offset = "0xB0DE8C", VA = "0xB0DE8C")]
	public void disolveMat()
	{
	}

	[Token(Token = "0x6000C88")]
	[Address(RVA = "0xB0DEB8", Offset = "0xB0DEB8", VA = "0xB0DEB8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C8138", Offset = "0x8C8138")]
	private IEnumerator disolveMaterial()
	{
		return null;
	}

	[Token(Token = "0x6000C89")]
	[Address(RVA = "0xB0DF54", Offset = "0xB0DF54", VA = "0xB0DF54")]
	public DarkaxerChaseHazzard()
	{
	}
}
[Token(Token = "0x20001DC")]
public class DungeonBuiltEvent : DungeonEventListener
{
	[Token(Token = "0x6000C8A")]
	[Address(RVA = "0xBEDE2C", Offset = "0xBEDE2C", VA = "0xBEDE2C", Slot = "7")]
	public override void OnPostDungeonBuild(Dungeon dungeon, DungeonModel model)
	{
	}

	[Token(Token = "0x6000C8B")]
	[Address(RVA = "0xBEDEEC", Offset = "0xBEDEEC", VA = "0xBEDEEC")]
	public DungeonBuiltEvent()
	{
	}
}
[Serializable]
[Token(Token = "0x20001DD")]
public class DungeonFloor
{
	[Token(Token = "0x4000C3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public List<OverworldChestData> floorChests;

	[Token(Token = "0x4000C3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<OverworldEnemyData> floorEnemies;

	[Token(Token = "0x4000C3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public uint floorSeed;

	[Token(Token = "0x4000C3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool isPrefab;

	[Token(Token = "0x4000C3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
	public bool trapsDestroyed;

	[Token(Token = "0x6000C8C")]
	[Address(RVA = "0xBEDFF4", Offset = "0xBEDFF4", VA = "0xBEDFF4")]
	public DungeonFloor()
	{
	}
}
[Serializable]
[Token(Token = "0x20001DE")]
public class OverworldChestData
{
	[Token(Token = "0x4000C40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool opened;

	[Token(Token = "0x4000C41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	public bool doNotRespawn;

	[Token(Token = "0x4000C42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public UnityEngine.Vector3 position;

	[Token(Token = "0x4000C43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public uint id;

	[Token(Token = "0x6000C8D")]
	[Address(RVA = "0xAFA5AC", Offset = "0xAFA5AC", VA = "0xAFA5AC")]
	public OverworldChestData(UnityEngine.Vector3 newPosition)
	{
	}
}
[Serializable]
[Token(Token = "0x20001DF")]
public class OverworldEnemyData
{
	[Token(Token = "0x4000C44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool defeated;

	[Token(Token = "0x4000C45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public uint enemyID;

	[Token(Token = "0x4000C46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UnityEngine.Vector3 position;

	[Token(Token = "0x6000C8E")]
	[Address(RVA = "0xAFB41C", Offset = "0xAFB41C", VA = "0xAFB41C")]
	public OverworldEnemyData(UnityEngine.Vector3 newPosition)
	{
	}
}
[Serializable]
[Token(Token = "0x20001E0")]
public class DungeonInfo : MonoBehaviour
{
	[Token(Token = "0x20007A3")]
	public enum DungeonDifficulty
	{
		[Token(Token = "0x4002656")]
		easy,
		[Token(Token = "0x4002657")]
		medium,
		[Token(Token = "0x4002658")]
		hard,
		[Token(Token = "0x4002659")]
		infinite
	}

	[Token(Token = "0x20007A4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B87D4", Offset = "0x8B87D4")]
	private sealed class <loadPrefabFloorEnum>d__45 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400265A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400265B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400265C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DungeonInfo <>4__this;

		[Token(Token = "0x400265D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int prefabNum;

		[Token(Token = "0x400265E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <maxWait>5__2;

		[Token(Token = "0x400265F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <waitTime>5__3;

		[Token(Token = "0x170005F7")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002D63")]
			[Address(RVA = "0xBF08C4", Offset = "0xBF08C4", VA = "0xBF08C4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005F8")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002D65")]
			[Address(RVA = "0xBF092C", Offset = "0xBF092C", VA = "0xBF092C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002D60")]
		[Address(RVA = "0xBEF42C", Offset = "0xBEF42C", VA = "0xBEF42C")]
		[DebuggerHidden]
		public <loadPrefabFloorEnum>d__45(int <>1__state)
		{
		}

		[Token(Token = "0x6002D61")]
		[Address(RVA = "0xBF0494", Offset = "0xBF0494", VA = "0xBF0494", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002D62")]
		[Address(RVA = "0xBF0498", Offset = "0xBF0498", VA = "0xBF0498", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002D64")]
		[Address(RVA = "0xBF08CC", Offset = "0xBF08CC", VA = "0xBF08CC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20007A5")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B87E4", Offset = "0x8B87E4")]
	private sealed class <textDelay>d__46 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002660")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002661")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x170005F9")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002D69")]
			[Address(RVA = "0xBF0C20", Offset = "0xBF0C20", VA = "0xBF0C20", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005FA")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002D6B")]
			[Address(RVA = "0xBF0C88", Offset = "0xBF0C88", VA = "0xBF0C88", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002D66")]
		[Address(RVA = "0xBEF4B8", Offset = "0xBEF4B8", VA = "0xBEF4B8")]
		[DebuggerHidden]
		public <textDelay>d__46(int <>1__state)
		{
		}

		[Token(Token = "0x6002D67")]
		[Address(RVA = "0xBF0B60", Offset = "0xBF0B60", VA = "0xBF0B60", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002D68")]
		[Address(RVA = "0xBF0B64", Offset = "0xBF0B64", VA = "0xBF0B64", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002D6A")]
		[Address(RVA = "0xBF0C28", Offset = "0xBF0C28", VA = "0xBF0C28", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20007A6")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B87F4", Offset = "0x8B87F4")]
	private sealed class <loadDiscoveredFloor>d__49 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002662")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002663")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002664")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DungeonInfo <>4__this;

		[Token(Token = "0x170005FB")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002D6F")]
			[Address(RVA = "0xBF0424", Offset = "0xBF0424", VA = "0xBF0424", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005FC")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002D71")]
			[Address(RVA = "0xBF048C", Offset = "0xBF048C", VA = "0xBF048C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002D6C")]
		[Address(RVA = "0xBEFC1C", Offset = "0xBEFC1C", VA = "0xBEFC1C")]
		[DebuggerHidden]
		public <loadDiscoveredFloor>d__49(int <>1__state)
		{
		}

		[Token(Token = "0x6002D6D")]
		[Address(RVA = "0xBF0318", Offset = "0xBF0318", VA = "0xBF0318", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002D6E")]
		[Address(RVA = "0xBF031C", Offset = "0xBF031C", VA = "0xBF031C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002D70")]
		[Address(RVA = "0xBF042C", Offset = "0xBF042C", VA = "0xBF042C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20007A7")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B8804", Offset = "0x8B8804")]
	private sealed class <onDungeonBuiltTimer>d__51 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002665")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002666")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002667")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DungeonInfo <>4__this;

		[Token(Token = "0x4002668")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <maxWait>5__2;

		[Token(Token = "0x4002669")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <waitTime>5__3;

		[Token(Token = "0x170005FD")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002D75")]
			[Address(RVA = "0xBF0AF0", Offset = "0xBF0AF0", VA = "0xBF0AF0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005FE")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002D77")]
			[Address(RVA = "0xBF0B58", Offset = "0xBF0B58", VA = "0xBF0B58", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002D72")]
		[Address(RVA = "0xBEFCB8", Offset = "0xBEFCB8", VA = "0xBEFCB8")]
		[DebuggerHidden]
		public <onDungeonBuiltTimer>d__51(int <>1__state)
		{
		}

		[Token(Token = "0x6002D73")]
		[Address(RVA = "0xBF0934", Offset = "0xBF0934", VA = "0xBF0934", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002D74")]
		[Address(RVA = "0xBF0938", Offset = "0xBF0938", VA = "0xBF0938", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002D76")]
		[Address(RVA = "0xBF0AF8", Offset = "0xBF0AF8", VA = "0xBF0AF8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20007A8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B8814", Offset = "0x8B8814")]
	private sealed class <generateNewFloor>d__52 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400266A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400266B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400266C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DungeonInfo <>4__this;

		[Token(Token = "0x400266D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private DungeonFloor <newFloor>5__2;

		[Token(Token = "0x170005FF")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002D7B")]
			[Address(RVA = "0xBF00D8", Offset = "0xBF00D8", VA = "0xBF00D8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000600")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002D7D")]
			[Address(RVA = "0xBF0140", Offset = "0xBF0140", VA = "0xBF0140", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002D78")]
		[Address(RVA = "0xBEFCE4", Offset = "0xBEFCE4", VA = "0xBEFCE4")]
		[DebuggerHidden]
		public <generateNewFloor>d__52(int <>1__state)
		{
		}

		[Token(Token = "0x6002D79")]
		[Address(RVA = "0xBEFF20", Offset = "0xBEFF20", VA = "0xBEFF20", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002D7A")]
		[Address(RVA = "0xBEFF24", Offset = "0xBEFF24", VA = "0xBEFF24", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002D7C")]
		[Address(RVA = "0xBF00E0", Offset = "0xBF00E0", VA = "0xBF00E0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20007A9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B8824", Offset = "0x8B8824")]
	private sealed class <generateNewFloorWithSameData>d__53 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400266E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400266F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002670")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DungeonInfo <>4__this;

		[Token(Token = "0x17000601")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002D81")]
			[Address(RVA = "0xBF02A8", Offset = "0xBF02A8", VA = "0xBF02A8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000602")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002D83")]
			[Address(RVA = "0xBF0310", Offset = "0xBF0310", VA = "0xBF0310", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002D7E")]
		[Address(RVA = "0xBEFD10", Offset = "0xBEFD10", VA = "0xBEFD10")]
		[DebuggerHidden]
		public <generateNewFloorWithSameData>d__53(int <>1__state)
		{
		}

		[Token(Token = "0x6002D7F")]
		[Address(RVA = "0xBF0148", Offset = "0xBF0148", VA = "0xBF0148", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002D80")]
		[Address(RVA = "0xBF014C", Offset = "0xBF014C", VA = "0xBF014C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002D82")]
		[Address(RVA = "0xBF02B0", Offset = "0xBF02B0", VA = "0xBF02B0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000C47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static DungeonInfo instance;

	[Token(Token = "0x4000C48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string dungeonName;

	[Token(Token = "0x4000C49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int numOfFloors;

	[Token(Token = "0x4000C4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int difficultyFloorChangeNum;

	[Token(Token = "0x4000C4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int playerCurrentFloor;

	[Token(Token = "0x4000C4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<DungeonFloor> discoveredFloors;

	[Token(Token = "0x4000C4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string battleSceneName;

	[Token(Token = "0x4000C4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GridDungeonConfig gridConfig;

	[Token(Token = "0x4000C4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Dungeon dungeon;

	[Token(Token = "0x4000C50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public NavMeshSurface navMeshSurface;

	[Token(Token = "0x4000C51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public DungeonCollFixer dungeonColliderFixer;

	[Token(Token = "0x4000C52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public bool generateDungeon;

	[Token(Token = "0x4000C53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
	public bool sendToStart;

	[Token(Token = "0x4000C54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x62")]
	public bool respawnEnemies;

	[Token(Token = "0x4000C55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x63")]
	public bool hoverBoardLocked;

	[Token(Token = "0x4000C56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public bool climbingStairs;

	[Token(Token = "0x4000C57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BC5C8", Offset = "0x8BC5C8")]
	public GameObject[] prefabFloors;

	[Token(Token = "0x4000C58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public int[] prefabFloorNums;

	[Token(Token = "0x4000C59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BC600", Offset = "0x8BC600")]
	public EnemyParent[] dungeonEnemiesEasy;

	[Token(Token = "0x4000C5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public EnemyParent[] dungeonEnemiesMedium;

	[Token(Token = "0x4000C5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public EnemyParent[] dungeonEnemiesHard;

	[Token(Token = "0x4000C5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public EnemyParent[] dungeonEnemiesInfinite;

	[Token(Token = "0x4000C5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public GameObject rareMobSpawn;

	[Token(Token = "0x4000C5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public float rareMobSpawnChance;

	[Token(Token = "0x4000C5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public List<EnemyModifier> dungeonEnemyModifiers;

	[Token(Token = "0x4000C60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public ScriptableEnemyList[] enemyLists;

	[Token(Token = "0x4000C61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public int enemyListTiers;

	[Token(Token = "0x4000C62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BC638", Offset = "0x8BC638")]
	public NPCOverworld[] storyCommsNPCs;

	[Token(Token = "0x4000C63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public int[] storyCommFloorNums;

	[Token(Token = "0x4000C64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public string storyCommProgressString;

	[Token(Token = "0x4000C65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public bool useDungeonLight;

	[Token(Token = "0x4000C66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public UnityEvent onChangeFloor;

	[Token(Token = "0x170000C6")]
	public int currentDungeonTier
	{
		[Token(Token = "0x6000C8F")]
		[Address(RVA = "0xBEE08C", Offset = "0xBEE08C", VA = "0xBEE08C")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170000C7")]
	public int infiniteDungeonDifficulty
	{
		[Token(Token = "0x6000C90")]
		[Address(RVA = "0xBEE164", Offset = "0xBEE164", VA = "0xBEE164")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170000C8")]
	public bool isOnPrefabFloor
	{
		[Token(Token = "0x6000C91")]
		[Address(RVA = "0xBEE24C", Offset = "0xBEE24C", VA = "0xBEE24C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000C9")]
	public DungeonDifficulty difficulty
	{
		[Token(Token = "0x6000C92")]
		[Address(RVA = "0xBEE2D0", Offset = "0xBEE2D0", VA = "0xBEE2D0")]
		get
		{
			return default(DungeonDifficulty);
		}
	}

	[Token(Token = "0x6000C93")]
	[Address(RVA = "0xBEE338", Offset = "0xBEE338", VA = "0xBEE338")]
	public void setDungeonTier()
	{
	}

	[Token(Token = "0x6000C94")]
	[Address(RVA = "0xBEE518", Offset = "0xBEE518", VA = "0xBEE518")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000C95")]
	[Address(RVA = "0xBEEC0C", Offset = "0xBEEC0C", VA = "0xBEEC0C")]
	private void spawnStoryComm()
	{
	}

	[Token(Token = "0x6000C96")]
	[Address(RVA = "0xBEEEC8", Offset = "0xBEEEC8", VA = "0xBEEEC8")]
	public void progressToNewFloor(bool goingUp)
	{
	}

	[Token(Token = "0x6000C97")]
	[Address(RVA = "0xBEEB8C", Offset = "0xBEEB8C", VA = "0xBEEB8C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C819C", Offset = "0x8C819C")]
	public IEnumerator loadPrefabFloorEnum(bool goingUp, int prefabNum)
	{
		return null;
	}

	[Token(Token = "0x6000C98")]
	[Address(RVA = "0xBEF458", Offset = "0xBEF458", VA = "0xBEF458")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C8200", Offset = "0x8C8200")]
	private IEnumerator textDelay()
	{
		return null;
	}

	[Token(Token = "0x6000C99")]
	[Address(RVA = "0xBEF4E4", Offset = "0xBEF4E4", VA = "0xBEF4E4")]
	private void endOfFloorLoadThings()
	{
	}

	[Token(Token = "0x6000C9A")]
	[Address(RVA = "0xBEFA40", Offset = "0xBEFA40", VA = "0xBEFA40")]
	private void movePlayerBackToPlace()
	{
	}

	[Token(Token = "0x6000C9B")]
	[Address(RVA = "0xBEF34C", Offset = "0xBEF34C", VA = "0xBEF34C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C8264", Offset = "0x8C8264")]
	public IEnumerator loadDiscoveredFloor(bool goingUp)
	{
		return null;
	}

	[Token(Token = "0x6000C9C")]
	[Address(RVA = "0xBEDEC0", Offset = "0xBEDEC0", VA = "0xBEDEC0")]
	public void onDungeonBuilt()
	{
	}

	[Token(Token = "0x6000C9D")]
	[Address(RVA = "0xBEFC48", Offset = "0xBEFC48", VA = "0xBEFC48")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C82C8", Offset = "0x8C82C8")]
	public IEnumerator onDungeonBuiltTimer()
	{
		return null;
	}

	[Token(Token = "0x6000C9E")]
	[Address(RVA = "0xBEF3BC", Offset = "0xBEF3BC", VA = "0xBEF3BC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C832C", Offset = "0x8C832C")]
	public IEnumerator generateNewFloor()
	{
		return null;
	}

	[Token(Token = "0x6000C9F")]
	[Address(RVA = "0xBEF760", Offset = "0xBEF760", VA = "0xBEF760")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C8390", Offset = "0x8C8390")]
	public IEnumerator generateNewFloorWithSameData()
	{
		return null;
	}

	[Token(Token = "0x6000CA0")]
	[Address(RVA = "0xBEF7D0", Offset = "0xBEF7D0", VA = "0xBEF7D0")]
	public void updateEnemies()
	{
	}

	[Token(Token = "0x6000CA1")]
	[Address(RVA = "0xBEF984", Offset = "0xBEF984", VA = "0xBEF984")]
	public void updateTraps()
	{
	}

	[Token(Token = "0x6000CA2")]
	[Address(RVA = "0xBEE7FC", Offset = "0xBEE7FC", VA = "0xBEE7FC")]
	public void loadPlayerProgress()
	{
	}

	[Token(Token = "0x6000CA3")]
	[Address(RVA = "0xBEFD3C", Offset = "0xBEFD3C", VA = "0xBEFD3C")]
	public void saveDungeonProgress()
	{
	}

	[Token(Token = "0x6000CA4")]
	[Address(RVA = "0xBEFE74", Offset = "0xBEFE74", VA = "0xBEFE74")]
	public DungeonInfo()
	{
	}
}
[Token(Token = "0x20001E1")]
public class DungeonStairs : MonoBehaviour
{
	[Token(Token = "0x20007AA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B8834", Offset = "0x8B8834")]
	private sealed class <timer>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002671")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002672")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002673")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DungeonStairs <>4__this;

		[Token(Token = "0x17000603")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002D87")]
			[Address(RVA = "0xBF2184", Offset = "0xBF2184", VA = "0xBF2184", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000604")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002D89")]
			[Address(RVA = "0xBF21EC", Offset = "0xBF21EC", VA = "0xBF21EC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002D84")]
		[Address(RVA = "0xBF2034", Offset = "0xBF2034", VA = "0xBF2034")]
		[DebuggerHidden]
		public <timer>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6002D85")]
		[Address(RVA = "0xBF2070", Offset = "0xBF2070", VA = "0xBF2070", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002D86")]
		[Address(RVA = "0xBF2074", Offset = "0xBF2074", VA = "0xBF2074", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002D88")]
		[Address(RVA = "0xBF218C", Offset = "0xBF218C", VA = "0xBF218C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000C67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool upStairs;

	[Token(Token = "0x4000C68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool disabled;

	[Token(Token = "0x4000C69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool forceRotationOnCollide;

	[Token(Token = "0x4000C6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	private bool rotationForced;

	[Token(Token = "0x4000C6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private bool isLoading;

	[Token(Token = "0x4000C6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject blockCage;

	[Token(Token = "0x6000CA5")]
	[Address(RVA = "0xBF1D5C", Offset = "0xBF1D5C", VA = "0xBF1D5C")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000CA6")]
	[Address(RVA = "0xBF1FC4", Offset = "0xBF1FC4", VA = "0xBF1FC4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C83F4", Offset = "0x8C83F4")]
	private IEnumerator timer()
	{
		return null;
	}

	[Token(Token = "0x6000CA7")]
	[Address(RVA = "0xBF2060", Offset = "0xBF2060", VA = "0xBF2060")]
	public DungeonStairs()
	{
	}
}
[Serializable]
[Token(Token = "0x20001E2")]
public class GameProgress
{
	[Token(Token = "0x20007AB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B8844", Offset = "0x8B8844")]
	private sealed class <>c__DisplayClass6_0
	{
		[Token(Token = "0x4002674")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string eventName;

		[Token(Token = "0x6002D8A")]
		[Address(RVA = "0xC4FD84", Offset = "0xC4FD84", VA = "0xC4FD84")]
		public <>c__DisplayClass6_0()
		{
		}

		[Token(Token = "0x6002D8B")]
		[Address(RVA = "0xC504C0", Offset = "0xC504C0", VA = "0xC504C0")]
		internal bool <addNewStoryProgress>b__0(StoryData MyObject)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x20007AC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B8854", Offset = "0x8B8854")]
	private sealed class <>c__DisplayClass7_0
	{
		[Token(Token = "0x4002675")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string eventName;

		[Token(Token = "0x6002D8C")]
		[Address(RVA = "0xC4FD8C", Offset = "0xC4FD8C", VA = "0xC4FD8C")]
		public <>c__DisplayClass7_0()
		{
		}

		[Token(Token = "0x6002D8D")]
		[Address(RVA = "0xC504E4", Offset = "0xC504E4", VA = "0xC504E4")]
		internal bool <setStoryProgress>b__0(StoryData MyObject)
		{
			return default(bool);
		}

		[Token(Token = "0x6002D8E")]
		[Address(RVA = "0xC50508", Offset = "0xC50508", VA = "0xC50508")]
		internal bool <setStoryProgress>b__1(StoryData MyObject)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x20007AD")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B8864", Offset = "0x8B8864")]
	private sealed class <>c__DisplayClass8_0
	{
		[Token(Token = "0x4002676")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string eventName;

		[Token(Token = "0x6002D8F")]
		[Address(RVA = "0xC4FF20", Offset = "0xC4FF20", VA = "0xC4FF20")]
		public <>c__DisplayClass8_0()
		{
		}

		[Token(Token = "0x6002D90")]
		[Address(RVA = "0xC5052C", Offset = "0xC5052C", VA = "0xC5052C")]
		internal bool <setQuestProgress>b__0(QuestData MyObject)
		{
			return default(bool);
		}

		[Token(Token = "0x6002D91")]
		[Address(RVA = "0xC50550", Offset = "0xC50550", VA = "0xC50550")]
		internal bool <setQuestProgress>b__1(QuestData MyObject)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x20007AE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B8874", Offset = "0x8B8874")]
	private sealed class <>c__DisplayClass9_0
	{
		[Token(Token = "0x4002677")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string eventName;

		[Token(Token = "0x6002D92")]
		[Address(RVA = "0xC50200", Offset = "0xC50200", VA = "0xC50200")]
		public <>c__DisplayClass9_0()
		{
		}

		[Token(Token = "0x6002D93")]
		[Address(RVA = "0xC50574", Offset = "0xC50574", VA = "0xC50574")]
		internal bool <increaseStoryProgress>b__0(StoryData MyObject)
		{
			return default(bool);
		}

		[Token(Token = "0x6002D94")]
		[Address(RVA = "0xC50598", Offset = "0xC50598", VA = "0xC50598")]
		internal bool <increaseStoryProgress>b__1(StoryData MyObject)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x20007AF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B8884", Offset = "0x8B8884")]
	private sealed class <>c__DisplayClass10_0
	{
		[Token(Token = "0x4002678")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string eventName;

		[Token(Token = "0x6002D95")]
		[Address(RVA = "0xC50208", Offset = "0xC50208", VA = "0xC50208")]
		public <>c__DisplayClass10_0()
		{
		}

		[Token(Token = "0x6002D96")]
		[Address(RVA = "0xC50430", Offset = "0xC50430", VA = "0xC50430")]
		internal bool <getStoryProgress>b__0(StoryData MyObject)
		{
			return default(bool);
		}

		[Token(Token = "0x6002D97")]
		[Address(RVA = "0xC50454", Offset = "0xC50454", VA = "0xC50454")]
		internal bool <getStoryProgress>b__1(StoryData MyObject)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x20007B0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B8894", Offset = "0x8B8894")]
	private sealed class <>c__DisplayClass11_0
	{
		[Token(Token = "0x4002679")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string eventName;

		[Token(Token = "0x6002D98")]
		[Address(RVA = "0xC50330", Offset = "0xC50330", VA = "0xC50330")]
		public <>c__DisplayClass11_0()
		{
		}

		[Token(Token = "0x6002D99")]
		[Address(RVA = "0xC50478", Offset = "0xC50478", VA = "0xC50478")]
		internal bool <getQuestProgress>b__0(QuestData MyObject)
		{
			return default(bool);
		}

		[Token(Token = "0x6002D9A")]
		[Address(RVA = "0xC5049C", Offset = "0xC5049C", VA = "0xC5049C")]
		internal bool <getQuestProgress>b__1(QuestData MyObject)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4000C6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public List<SavedDungeonInfo> dungeonProgress;

	[Token(Token = "0x4000C6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<StoryData> storyData;

	[Token(Token = "0x4000C6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<QuestData> questData;

	[Token(Token = "0x4000C70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string savedSceneName;

	[Token(Token = "0x4000C71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<string> savedSpecialChestsCollected;

	[Token(Token = "0x4000C72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public UnityEngine.Vector3 saveLocation;

	[Token(Token = "0x6000CA8")]
	[Address(RVA = "0xC4FC18", Offset = "0xC4FC18", VA = "0xC4FC18")]
	public void addNewStoryProgress(string eventName)
	{
	}

	[Token(Token = "0x6000CA9")]
	[Address(RVA = "0xC42A6C", Offset = "0xC42A6C", VA = "0xC42A6C")]
	public void setStoryProgress(string eventName, int progressVal)
	{
	}

	[Token(Token = "0x6000CAA")]
	[Address(RVA = "0xC4FD94", Offset = "0xC4FD94", VA = "0xC4FD94")]
	public void setQuestProgress(string eventName, int progressVal)
	{
	}

	[Token(Token = "0x6000CAB")]
	[Address(RVA = "0xC4FF28", Offset = "0xC4FF28", VA = "0xC4FF28")]
	public void increaseStoryProgress(string eventName)
	{
	}

	[Token(Token = "0x6000CAC")]
	[Address(RVA = "0xC46600", Offset = "0xC46600", VA = "0xC46600")]
	public int getStoryProgress(string eventName)
	{
		return default(int);
	}

	[Token(Token = "0x6000CAD")]
	[Address(RVA = "0xC50210", Offset = "0xC50210", VA = "0xC50210")]
	public int getQuestProgress(string eventName)
	{
		return default(int);
	}

	[Token(Token = "0x6000CAE")]
	[Address(RVA = "0xC50338", Offset = "0xC50338", VA = "0xC50338")]
	public GameProgress()
	{
	}
}
[Serializable]
[Token(Token = "0x20001E3")]
public class StoryData
{
	[Token(Token = "0x4000C73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string eventName;

	[Token(Token = "0x4000C74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int progressVal;

	[Token(Token = "0x6000CAF")]
	[Address(RVA = "0xB22568", Offset = "0xB22568", VA = "0xB22568")]
	public StoryData(string name)
	{
	}
}
[Token(Token = "0x20001E4")]
public class SydLabSwitch : MonoBehaviour
{
	[Token(Token = "0x4000C75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject chest;

	[Token(Token = "0x4000C76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Quaternion Orot;

	[Token(Token = "0x6000CB0")]
	[Address(RVA = "0xB28F68", Offset = "0xB28F68", VA = "0xB28F68")]
	private void Start()
	{
	}

	[Token(Token = "0x6000CB1")]
	[Address(RVA = "0xB28FA4", Offset = "0xB28FA4", VA = "0xB28FA4")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000CB2")]
	[Address(RVA = "0xB290FC", Offset = "0xB290FC", VA = "0xB290FC")]
	public SydLabSwitch()
	{
	}
}
[Token(Token = "0x20001E5")]
public class HubWarp : MonoBehaviour
{
	[Token(Token = "0x20007B1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B88A4", Offset = "0x8B88A4")]
	private sealed class <warpTImer>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400267A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400267B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400267C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HubWarp <>4__this;

		[Token(Token = "0x17000605")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002D9E")]
			[Address(RVA = "0xAD6890", Offset = "0xAD6890", VA = "0xAD6890", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000606")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002DA0")]
			[Address(RVA = "0xAD68F8", Offset = "0xAD68F8", VA = "0xAD68F8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002D9B")]
		[Address(RVA = "0xAD65D8", Offset = "0xAD65D8", VA = "0xAD65D8")]
		[DebuggerHidden]
		public <warpTImer>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x6002D9C")]
		[Address(RVA = "0xAD660C", Offset = "0xAD660C", VA = "0xAD660C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002D9D")]
		[Address(RVA = "0xAD6610", Offset = "0xAD6610", VA = "0xAD6610", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002D9F")]
		[Address(RVA = "0xAD6898", Offset = "0xAD6898", VA = "0xAD6898", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000C77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string sceneName;

	[Token(Token = "0x4000C78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string dungeonName;

	[Token(Token = "0x4000C79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool hasWarped;

	[Token(Token = "0x6000CB3")]
	[Address(RVA = "0xAD64CC", Offset = "0xAD64CC", VA = "0xAD64CC")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000CB4")]
	[Address(RVA = "0xAD6568", Offset = "0xAD6568", VA = "0xAD6568")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C8458", Offset = "0x8C8458")]
	public IEnumerator warpTImer()
	{
		return null;
	}

	[Token(Token = "0x6000CB5")]
	[Address(RVA = "0xAD6604", Offset = "0xAD6604", VA = "0xAD6604")]
	public HubWarp()
	{
	}
}
[Token(Token = "0x20001E6")]
public class HubWorldMaster : MonoBehaviour
{
	[Token(Token = "0x4000C7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Item beetItem;

	[Token(Token = "0x4000C7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Item sydneySpellModule;

	[Token(Token = "0x4000C7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject moneyBoye;

	[Token(Token = "0x4000C7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TMP_Text simSimText;

	[Token(Token = "0x4000C7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Terrain hubTerrain;

	[Token(Token = "0x4000C7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform[] hubSpawnPoints;

	[Token(Token = "0x4000C80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject[] terrains;

	[Token(Token = "0x4000C81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject[] storyevents;

	[Token(Token = "0x6000CB6")]
	[Address(RVA = "0xAD6900", Offset = "0xAD6900", VA = "0xAD6900")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000CB7")]
	[Address(RVA = "0xAD69FC", Offset = "0xAD69FC", VA = "0xAD69FC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000CB8")]
	[Address(RVA = "0xAD7114", Offset = "0xAD7114", VA = "0xAD7114")]
	public void updateDungeon()
	{
	}

	[Token(Token = "0x6000CB9")]
	[Address(RVA = "0xAD7430", Offset = "0xAD7430", VA = "0xAD7430")]
	public void travelToSimSim()
	{
	}

	[Token(Token = "0x6000CBA")]
	[Address(RVA = "0xAD768C", Offset = "0xAD768C", VA = "0xAD768C")]
	public void giveBeet()
	{
	}

	[Token(Token = "0x6000CBB")]
	[Address(RVA = "0xAD7BAC", Offset = "0xAD7BAC", VA = "0xAD7BAC")]
	public void setStoryProgressTo1(string name)
	{
	}

	[Token(Token = "0x6000CBC")]
	[Address(RVA = "0xAD7BEC", Offset = "0xAD7BEC", VA = "0xAD7BEC")]
	public void reEnableMovement()
	{
	}

	[Token(Token = "0x6000CBD")]
	[Address(RVA = "0xAD7058", Offset = "0xAD7058", VA = "0xAD7058")]
	private void loadTerrainForDevice()
	{
	}

	[Token(Token = "0x6000CBE")]
	[Address(RVA = "0xAD7C48", Offset = "0xAD7C48", VA = "0xAD7C48")]
	public void sydneyTutorialEventEnd1()
	{
	}

	[Token(Token = "0x6000CBF")]
	[Address(RVA = "0xAD7CB0", Offset = "0xAD7CB0", VA = "0xAD7CB0")]
	public void sydneyFireballEquipComplete()
	{
	}

	[Token(Token = "0x6000CC0")]
	[Address(RVA = "0xAD7D18", Offset = "0xAD7D18", VA = "0xAD7D18")]
	public void sydneyTutorialEventEnd2()
	{
	}

	[Token(Token = "0x6000CC1")]
	[Address(RVA = "0xAD804C", Offset = "0xAD804C", VA = "0xAD804C")]
	public void sydneyTutorialEventEnd3()
	{
	}

	[Token(Token = "0x6000CC2")]
	[Address(RVA = "0xAD8218", Offset = "0xAD8218", VA = "0xAD8218")]
	public HubWorldMaster()
	{
	}
}
[Token(Token = "0x20001E7")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8B63F0", Offset = "0x8B63F0")]
public class Item : ScriptableObject
{
	[Token(Token = "0x20007B2")]
	public enum ItemType
	{
		[Token(Token = "0x400267E")]
		equip,
		[Token(Token = "0x400267F")]
		consumable,
		[Token(Token = "0x4002680")]
		key
	}

	[Token(Token = "0x20007B3")]
	public enum ItemRarity
	{
		[Token(Token = "0x4002682")]
		trash,
		[Token(Token = "0x4002683")]
		common,
		[Token(Token = "0x4002684")]
		uncommon,
		[Token(Token = "0x4002685")]
		rare,
		[Token(Token = "0x4002686")]
		epic,
		[Token(Token = "0x4002687")]
		forbidden
	}

	[Token(Token = "0x4000C82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "AssetIconAttribute", RVA = "0x8BC670", Offset = "0x8BC670")]
	public Sprite icon;

	[Token(Token = "0x4000C83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ItemType itemType;

	[Token(Token = "0x4000C84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public ItemRarity rarity;

	[Token(Token = "0x4000C85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int itemValue;

	[Token(Token = "0x4000C86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string itemName;

	[Token(Token = "0x4000C87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string itemDescription;

	[Token(Token = "0x4000C88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool stackable;

	[Token(Token = "0x4000C89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	public bool usable;

	[Token(Token = "0x4000C8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x42")]
	public bool unSellable;

	[Token(Token = "0x4000C8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public int numberHeld;

	[Token(Token = "0x170000CA")]
	public int itemSellValue
	{
		[Token(Token = "0x6000CC3")]
		[Address(RVA = "0xADBC00", Offset = "0xADBC00", VA = "0xADBC00")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170000CB")]
	[HideInInspector]
	public string translatedName
	{
		[Token(Token = "0x6000CC4")]
		[Address(RVA = "0xAD79E8", Offset = "0xAD79E8", VA = "0xAD79E8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000CC")]
	[HideInInspector]
	public string translatedDescription
	{
		[Token(Token = "0x6000CC5")]
		[Address(RVA = "0xADBC20", Offset = "0xADBC20", VA = "0xADBC20")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000CD")]
	public Color rarityColor
	{
		[Token(Token = "0x6000CC6")]
		[Address(RVA = "0xADBE28", Offset = "0xADBE28", VA = "0xADBE28")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x6000CC7")]
	[Address(RVA = "0xADBE78", Offset = "0xADBE78", VA = "0xADBE78", Slot = "4")]
	public virtual void useItem(int inventoryIndex)
	{
	}

	[Token(Token = "0x6000CC8")]
	[Address(RVA = "0xADBEC4", Offset = "0xADBEC4", VA = "0xADBEC4")]
	public Item()
	{
	}
}
[Token(Token = "0x20001E8")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8B6434", Offset = "0x8B6434")]
public class ItemAbilityScroll : Item
{
	[Token(Token = "0x4000C8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public PlayerSpell spell;

	[Token(Token = "0x4000C8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject particle;

	[Token(Token = "0x4000C8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public int requiredLevel;

	[Token(Token = "0x6000CC9")]
	[Address(RVA = "0xADBF44", Offset = "0xADBF44", VA = "0xADBF44", Slot = "4")]
	public override void useItem(int inventoryIndex)
	{
	}

	[Token(Token = "0x6000CCA")]
	[Address(RVA = "0xADC2B8", Offset = "0xADC2B8", VA = "0xADC2B8")]
	public ItemAbilityScroll()
	{
	}
}
[Serializable]
[Token(Token = "0x20001E9")]
public class ItemData
{
	[Token(Token = "0x4000C8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string itemName;

	[Token(Token = "0x4000C90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int amount;

	[Token(Token = "0x6000CCB")]
	[Address(RVA = "0xADC2BC", Offset = "0xADC2BC", VA = "0xADC2BC")]
	public ItemData(string newName, int amt)
	{
	}
}
[Token(Token = "0x20001EA")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8B6478", Offset = "0x8B6478")]
public class ItemEquip : Item
{
	[Token(Token = "0x20007B4")]
	public enum EquipType
	{
		[Token(Token = "0x4002689")]
		head,
		[Token(Token = "0x400268A")]
		top,
		[Token(Token = "0x400268B")]
		bottom,
		[Token(Token = "0x400268C")]
		weapon,
		[Token(Token = "0x400268D")]
		accessory
	}

	[Token(Token = "0x4000C91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public EquipType equipType;

	[Token(Token = "0x4000C92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject inGamePrefab;

	[Token(Token = "0x4000C93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public PassiveAbility passive;

	[Token(Token = "0x4000C94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public int power;

	[Token(Token = "0x4000C95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public int defense;

	[Token(Token = "0x4000C96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public int health;

	[Token(Token = "0x4000C97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public int speed;

	[Token(Token = "0x4000C98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public int crit;

	[Token(Token = "0x4000C99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public int expBoost;

	[Token(Token = "0x4000C9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public int spellVamp;

	[Token(Token = "0x4000C9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public int critDamage;

	[Token(Token = "0x4000C9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public int apBoost;

	[Token(Token = "0x4000C9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public int runSpeed;

	[Token(Token = "0x4000C9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public int summonPower;

	[Token(Token = "0x4000C9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public int glitchChance;

	[Token(Token = "0x4000CA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public bool musicSwap;

	[Token(Token = "0x6000CCC")]
	[Address(RVA = "0xADC300", Offset = "0xADC300", VA = "0xADC300", Slot = "4")]
	public override void useItem(int inventoryIndex)
	{
	}

	[Token(Token = "0x6000CCD")]
	[Address(RVA = "0xADC8A0", Offset = "0xADC8A0", VA = "0xADC8A0")]
	public void useItemWeapon(int inventoryIndex, bool rightHand)
	{
	}

	[Token(Token = "0x6000CCE")]
	[Address(RVA = "0xADCBF4", Offset = "0xADCBF4", VA = "0xADCBF4")]
	public string getEquipDescription()
	{
		return null;
	}

	[Token(Token = "0x6000CCF")]
	[Address(RVA = "0xADDEC0", Offset = "0xADDEC0", VA = "0xADDEC0")]
	public ItemEquip()
	{
	}
}
[Token(Token = "0x20001EB")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8B64BC", Offset = "0x8B64BC")]
public class ItemPassiveScroll : Item
{
	[Token(Token = "0x4000CA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public PassiveAbility passive;

	[Token(Token = "0x4000CA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject particle;

	[Token(Token = "0x4000CA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public int requiredLevel;

	[Token(Token = "0x6000CD0")]
	[Address(RVA = "0xADE3CC", Offset = "0xADE3CC", VA = "0xADE3CC", Slot = "4")]
	public override void useItem(int inventoryIndex)
	{
	}

	[Token(Token = "0x6000CD1")]
	[Address(RVA = "0xADE618", Offset = "0xADE618", VA = "0xADE618")]
	public ItemPassiveScroll()
	{
	}
}
[Token(Token = "0x20001EC")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8B6500", Offset = "0x8B6500")]
public class ItemPotion : Item
{
	[Token(Token = "0x4000CA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int potency;

	[Token(Token = "0x4000CA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public bool usePercentage;

	[Token(Token = "0x4000CA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject useParticle;

	[Token(Token = "0x6000CD2")]
	[Address(RVA = "0xADEA78", Offset = "0xADEA78", VA = "0xADEA78", Slot = "4")]
	public override void useItem(int inventoryIndex)
	{
	}

	[Token(Token = "0x6000CD3")]
	[Address(RVA = "0xADED34", Offset = "0xADED34", VA = "0xADED34")]
	public ItemPotion()
	{
	}
}
[Token(Token = "0x20001ED")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8B6544", Offset = "0x8B6544")]
public class LootTable : ScriptableObject
{
	[Token(Token = "0x4000CA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Item[] commonItems;

	[Token(Token = "0x4000CA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Item[] rareItems;

	[Token(Token = "0x4000CA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Item[] veryRareItems;

	[Token(Token = "0x4000CAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Item[] superRareItems;

	[Token(Token = "0x6000CD4")]
	[Address(RVA = "0xAE7964", Offset = "0xAE7964", VA = "0xAE7964")]
	public LootTable()
	{
	}
}
[Token(Token = "0x20001EE")]
public class NPCQuestCondition : MonoBehaviour
{
	[Token(Token = "0x4000CAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool conditionMet;

	[Token(Token = "0x4000CAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string questID;

	[Token(Token = "0x4000CAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Item rewardItem;

	[Token(Token = "0x4000CAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool requireAnswer;

	[Token(Token = "0x4000CAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	public bool giveItem;

	[Token(Token = "0x4000CB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public UnityEvent onCompleteEvent;

	[Token(Token = "0x6000CD5")]
	[Address(RVA = "0xB8D8B0", Offset = "0xB8D8B0", VA = "0xB8D8B0", Slot = "4")]
	public virtual void checkIfConditionMet()
	{
	}

	[Token(Token = "0x6000CD6")]
	[Address(RVA = "0xB8D8B4", Offset = "0xB8D8B4", VA = "0xB8D8B4", Slot = "5")]
	public virtual void onQuestComplete()
	{
	}

	[Token(Token = "0x6000CD7")]
	[Address(RVA = "0xB8D8B8", Offset = "0xB8D8B8", VA = "0xB8D8B8")]
	public NPCQuestCondition()
	{
	}
}
[Token(Token = "0x20001EF")]
public class NPCQuestEquipHack : NPCQuestCondition
{
	[Token(Token = "0x4000CB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public PlayerSpell requiredSpell;

	[Token(Token = "0x4000CB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public string monsterEncounterName;

	[Token(Token = "0x6000CD8")]
	[Address(RVA = "0xB8D928", Offset = "0xB8D928", VA = "0xB8D928", Slot = "4")]
	public override void checkIfConditionMet()
	{
	}

	[Token(Token = "0x6000CD9")]
	[Address(RVA = "0xB8DB58", Offset = "0xB8DB58", VA = "0xB8DB58", Slot = "5")]
	public override void onQuestComplete()
	{
	}

	[Token(Token = "0x6000CDA")]
	[Address(RVA = "0xB8DB5C", Offset = "0xB8DB5C", VA = "0xB8DB5C")]
	public NPCQuestEquipHack()
	{
	}
}
[Token(Token = "0x20001F0")]
public class NPCQuestGiveItem : NPCQuestCondition
{
	[Token(Token = "0x4000CB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Item requiredItem;

	[Token(Token = "0x4000CB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int numOfItemRequired;

	[Token(Token = "0x6000CDB")]
	[Address(RVA = "0xB8DB60", Offset = "0xB8DB60", VA = "0xB8DB60", Slot = "4")]
	public override void checkIfConditionMet()
	{
	}

	[Token(Token = "0x6000CDC")]
	[Address(RVA = "0xB8BBF8", Offset = "0xB8BBF8", VA = "0xB8BBF8")]
	public void removeItems()
	{
	}

	[Token(Token = "0x6000CDD")]
	[Address(RVA = "0xB8DD08", Offset = "0xB8DD08", VA = "0xB8DD08", Slot = "5")]
	public override void onQuestComplete()
	{
	}

	[Token(Token = "0x6000CDE")]
	[Address(RVA = "0xB8DD0C", Offset = "0xB8DD0C", VA = "0xB8DD0C")]
	public NPCQuestGiveItem()
	{
	}
}
[Token(Token = "0x20001F1")]
public class NPCQuestShadow : NPCQuestCondition
{
	[Token(Token = "0x4000CB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform directionLightTrans;

	[Token(Token = "0x6000CDF")]
	[Address(RVA = "0xB8DD18", Offset = "0xB8DD18", VA = "0xB8DD18", Slot = "4")]
	public override void checkIfConditionMet()
	{
	}

	[Token(Token = "0x6000CE0")]
	[Address(RVA = "0xB8DF28", Offset = "0xB8DF28", VA = "0xB8DF28")]
	private void Update()
	{
	}

	[Token(Token = "0x6000CE1")]
	[Address(RVA = "0xB8E12C", Offset = "0xB8E12C", VA = "0xB8E12C")]
	public NPCQuestShadow()
	{
	}
}
[Token(Token = "0x20001F2")]
public class NPCQuestTPose : NPCQuestCondition
{
	[Token(Token = "0x6000CE2")]
	[Address(RVA = "0xB8E130", Offset = "0xB8E130", VA = "0xB8E130", Slot = "4")]
	public override void checkIfConditionMet()
	{
	}

	[Token(Token = "0x6000CE3")]
	[Address(RVA = "0xB8E2F0", Offset = "0xB8E2F0", VA = "0xB8E2F0")]
	public NPCQuestTPose()
	{
	}
}
[Token(Token = "0x20001F3")]
public class NPCOverworld : MonoBehaviour
{
	[Token(Token = "0x20007B5")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B88B4", Offset = "0x8B88B4")]
	private sealed class <>c__DisplayClass51_0
	{
		[Token(Token = "0x400268E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string textToChange;

		[Token(Token = "0x6002DA1")]
		[Address(RVA = "0xB8C7B4", Offset = "0xB8C7B4", VA = "0xB8C7B4")]
		public <>c__DisplayClass51_0()
		{
		}

		[Token(Token = "0x6002DA2")]
		[Address(RVA = "0xB8D038", Offset = "0xB8D038", VA = "0xB8D038")]
		internal void <translateAndSetString>b__0(AsyncOperationHandle<string> op)
		{
		}
	}

	[Token(Token = "0x20007B6")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B88C4", Offset = "0x8B88C4")]
	private sealed class <>c__DisplayClass52_0
	{
		[Token(Token = "0x400268F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Text textToChange;

		[Token(Token = "0x6002DA3")]
		[Address(RVA = "0xB8C7BC", Offset = "0xB8C7BC", VA = "0xB8C7BC")]
		public <>c__DisplayClass52_0()
		{
		}

		[Token(Token = "0x6002DA4")]
		[Address(RVA = "0xB8D09C", Offset = "0xB8D09C", VA = "0xB8D09C")]
		internal void <translateAndSetUIText>b__0(AsyncOperationHandle<string> op)
		{
		}
	}

	[Token(Token = "0x20007B7")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B88D4", Offset = "0x8B88D4")]
	private sealed class <rotateTowardsPlayerTimer>d__54 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002690")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002691")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002692")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public NPCOverworld <>4__this;

		[Token(Token = "0x4002693")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private UnityEngine.Vector3 <distance>5__2;

		[Token(Token = "0x17000607")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002DA8")]
			[Address(RVA = "0xB8D468", Offset = "0xB8D468", VA = "0xB8D468", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000608")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002DAA")]
			[Address(RVA = "0xB8D4D0", Offset = "0xB8D4D0", VA = "0xB8D4D0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002DA5")]
		[Address(RVA = "0xB8C840", Offset = "0xB8C840", VA = "0xB8C840")]
		[DebuggerHidden]
		public <rotateTowardsPlayerTimer>d__54(int <>1__state)
		{
		}

		[Token(Token = "0x6002DA6")]
		[Address(RVA = "0xB8D11C", Offset = "0xB8D11C", VA = "0xB8D11C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002DA7")]
		[Address(RVA = "0xB8D120", Offset = "0xB8D120", VA = "0xB8D120", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002DA9")]
		[Address(RVA = "0xB8D470", Offset = "0xB8D470", VA = "0xB8D470", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20007B8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B88E4", Offset = "0x8B88E4")]
	private sealed class <timedDialogueDisplay>d__59 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002694")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002695")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002696")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public NPCOverworld <>4__this;

		[Token(Token = "0x4002697")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string text;

		[Token(Token = "0x4002698")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private string <>7__wrap1;

		[Token(Token = "0x4002699")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int <>7__wrap2;

		[Token(Token = "0x17000609")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002DAE")]
			[Address(RVA = "0xB8D840", Offset = "0xB8D840", VA = "0xB8D840", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700060A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002DB0")]
			[Address(RVA = "0xB8D8A8", Offset = "0xB8D8A8", VA = "0xB8D8A8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002DAB")]
		[Address(RVA = "0xB8CCA8", Offset = "0xB8CCA8", VA = "0xB8CCA8")]
		[DebuggerHidden]
		public <timedDialogueDisplay>d__59(int <>1__state)
		{
		}

		[Token(Token = "0x6002DAC")]
		[Address(RVA = "0xB8D4D8", Offset = "0xB8D4D8", VA = "0xB8D4D8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002DAD")]
		[Address(RVA = "0xB8D4DC", Offset = "0xB8D4DC", VA = "0xB8D4DC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002DAF")]
		[Address(RVA = "0xB8D848", Offset = "0xB8D848", VA = "0xB8D848", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000CB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string NPCName;

	[Token(Token = "0x4000CB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform dialoguePoint;

	[Token(Token = "0x4000CB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject dialogueBoxprefab;

	[Token(Token = "0x4000CB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public UIDialogueCanvas dialogueBox;

	[Token(Token = "0x4000CBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Dialogue npcDialogue;

	[Token(Token = "0x4000CBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Dialogue questCompleteDialogue;

	[Token(Token = "0x4000CBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Dialogue postQuestCompleteDialogue;

	[Token(Token = "0x4000CBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[HideInInspector]
	public Dialogue originalDialogue;

	[Token(Token = "0x4000CBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public ScriptableStoryEvent npcStoryEvent;

	[Token(Token = "0x4000CBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public List<Item> shopInventory;

	[Token(Token = "0x4000CC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public SideQuest[] sideQuests;

	[Token(Token = "0x4000CC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ShopInventory[] shopInventories;

	[Token(Token = "0x4000CC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public bool shopkeeper;

	[Token(Token = "0x4000CC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
	public bool sideQuestHub;

	[Token(Token = "0x4000CC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7A")]
	public bool interactOnCollision;

	[Token(Token = "0x4000CC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7B")]
	public bool hasStoryAdvanceListener;

	[Token(Token = "0x4000CC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public bool movingNPC;

	[Token(Token = "0x4000CC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private NPCQuestCondition questCondition;

	[Token(Token = "0x4000CC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private int dialogueNum;

	[Token(Token = "0x4000CC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private int storyEventNum;

	[Token(Token = "0x4000CCA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public NavMeshAgent navMeshAgent;

	[Token(Token = "0x4000CCB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public UnityEvent onDialogueEnd;

	[Token(Token = "0x4000CCC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public UnityEvent onInteractStart;

	[Token(Token = "0x4000CCD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[HideInInspector]
	public bool dialogueOver;

	[Token(Token = "0x4000CCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA9")]
	private bool dialogueAnimating;

	[Token(Token = "0x4000CCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAA")]
	private bool dialogueSkipped;

	[Token(Token = "0x4000CD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAB")]
	public bool endStoryFlag;

	[Token(Token = "0x4000CD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	public bool blockInteraction;

	[Token(Token = "0x4000CD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAD")]
	private bool firstQuestCheck;

	[Token(Token = "0x4000CD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Animator anim;

	[Token(Token = "0x4000CD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public UnityEvent playerInteractResume;

	[Token(Token = "0x4000CD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public UnityAction advanceStoryAction;

	[Token(Token = "0x4000CD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BC778", Offset = "0x8BC778")]
	public AudioClip[] welcomeClips;

	[Token(Token = "0x4000CD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public AudioClip[] shopIdleClips;

	[Token(Token = "0x4000CD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public AudioClip[] shopBuyClips;

	[Token(Token = "0x4000CD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public AudioClip[] leaveClips;

	[Token(Token = "0x4000CDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private bool firstInteractionMade;

	[Token(Token = "0x4000CDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private string dialogueCheckString;

	[Token(Token = "0x4000CDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private bool canShowResponses;

	[Token(Token = "0x6000CE4")]
	[Address(RVA = "0xB89DB4", Offset = "0xB89DB4", VA = "0xB89DB4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000CE5")]
	[Address(RVA = "0xB8A108", Offset = "0xB8A108", VA = "0xB8A108")]
	private void Start()
	{
	}

	[Token(Token = "0x6000CE6")]
	[Address(RVA = "0xB8A184", Offset = "0xB8A184", VA = "0xB8A184")]
	public void clearEndDialogueEvents()
	{
	}

	[Token(Token = "0x6000CE7")]
	[Address(RVA = "0xB8A1B8", Offset = "0xB8A1B8", VA = "0xB8A1B8")]
	public void advanceStory()
	{
	}

	[Token(Token = "0x6000CE8")]
	[Address(RVA = "0xB8ABB0", Offset = "0xB8ABB0", VA = "0xB8ABB0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000CE9")]
	[Address(RVA = "0xB8A38C", Offset = "0xB8A38C", VA = "0xB8A38C")]
	public void interactWithNPC()
	{
	}

	[Token(Token = "0x6000CEA")]
	[Address(RVA = "0xB8BB18", Offset = "0xB8BB18", VA = "0xB8BB18")]
	public void playWelcomeClip()
	{
	}

	[Token(Token = "0x6000CEB")]
	[Address(RVA = "0xB8ACD4", Offset = "0xB8ACD4", VA = "0xB8ACD4")]
	public void talkToNPC()
	{
	}

	[Token(Token = "0x6000CEC")]
	[Address(RVA = "0xB8C478", Offset = "0xB8C478", VA = "0xB8C478")]
	public void rotateTowardsPlayer()
	{
	}

	[Token(Token = "0x6000CED")]
	[Address(RVA = "0xB8C514", Offset = "0xB8C514", VA = "0xB8C514")]
	public void playLeaveClip()
	{
	}

	[Token(Token = "0x6000CEE")]
	[Address(RVA = "0xB8C5F4", Offset = "0xB8C5F4", VA = "0xB8C5F4")]
	public void playShopBuyClip()
	{
	}

	[Token(Token = "0x6000CEF")]
	[Address(RVA = "0xB8C6D4", Offset = "0xB8C6D4", VA = "0xB8C6D4")]
	public void playIdleClip()
	{
	}

	[Token(Token = "0x6000CF0")]
	[Address(RVA = "0xB8C248", Offset = "0xB8C248", VA = "0xB8C248")]
	public void translateAndSetString(string s, string textToChange, string table = "UI Text")
	{
	}

	[Token(Token = "0x6000CF1")]
	[Address(RVA = "0xB8BD90", Offset = "0xB8BD90", VA = "0xB8BD90")]
	public void translateAndSetUIText(string s, Text textToChange, string table = "UI Text")
	{
	}

	[Token(Token = "0x6000CF2")]
	[Address(RVA = "0xB8BFDC", Offset = "0xB8BFDC", VA = "0xB8BFDC")]
	public void translateAndSetDialogue(string s)
	{
	}

	[Token(Token = "0x6000CF3")]
	[Address(RVA = "0xB8C4A4", Offset = "0xB8C4A4", VA = "0xB8C4A4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C84BC", Offset = "0x8C84BC")]
	private IEnumerator rotateTowardsPlayerTimer()
	{
		return null;
	}

	[Token(Token = "0x6000CF4")]
	[Address(RVA = "0xB8C86C", Offset = "0xB8C86C", VA = "0xB8C86C")]
	public void makeUninteractable()
	{
	}

	[Token(Token = "0x6000CF5")]
	[Address(RVA = "0xB8C8D0", Offset = "0xB8C8D0", VA = "0xB8C8D0")]
	public void makeInteractable()
	{
	}

	[Token(Token = "0x6000CF6")]
	[Address(RVA = "0xB8C934", Offset = "0xB8C934", VA = "0xB8C934")]
	public void clearDialogueEndEvents()
	{
	}

	[Token(Token = "0x6000CF7")]
	[Address(RVA = "0xB8C950", Offset = "0xB8C950", VA = "0xB8C950")]
	public void answerQuestion(int resp)
	{
	}

	[Token(Token = "0x6000CF8")]
	[Address(RVA = "0xB8C7C4", Offset = "0xB8C7C4", VA = "0xB8C7C4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C8520", Offset = "0x8C8520")]
	private IEnumerator timedDialogueDisplay(string text)
	{
		return null;
	}

	[Token(Token = "0x6000CF9")]
	[Address(RVA = "0xB8CCD4", Offset = "0xB8CCD4", VA = "0xB8CCD4")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000CFA")]
	[Address(RVA = "0xB8CE20", Offset = "0xB8CE20", VA = "0xB8CE20")]
	public void forceRemoveNPCFromInteractList()
	{
	}

	[Token(Token = "0x6000CFB")]
	[Address(RVA = "0xB8CE94", Offset = "0xB8CE94", VA = "0xB8CE94")]
	public void freePlayer()
	{
	}

	[Token(Token = "0x6000CFC")]
	[Address(RVA = "0xB8CEF0", Offset = "0xB8CEF0", VA = "0xB8CEF0")]
	public NPCOverworld()
	{
	}

	[Token(Token = "0x6000CFD")]
	[Address(RVA = "0xB8CFC0", Offset = "0xB8CFC0", VA = "0xB8CFC0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C8584", Offset = "0x8C8584")]
	private void <translateAndSetDialogue>b__53_0(AsyncOperationHandle<string> op)
	{
	}
}
[Token(Token = "0x20001F4")]
public class OverworldChest : MonoBehaviour
{
	[Token(Token = "0x4000CDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool opened;

	[Token(Token = "0x4000CDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool dungeonChest;

	[Token(Token = "0x4000CDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool alwaysDropItem;

	[Token(Token = "0x4000CE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public DungeonFloor thisFloor;

	[Token(Token = "0x4000CE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Item[] itemDrops;

	[Token(Token = "0x4000CE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Item[] itemDropsRare;

	[Token(Token = "0x4000CE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Item[] itemDropsVeryRare;

	[Token(Token = "0x4000CE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Item[] itemDropsUltraRare;

	[Token(Token = "0x4000CE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int averageCreditReward;

	[Token(Token = "0x4000CE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject rewardText;

	[Token(Token = "0x4000CE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private string rewardTextString;

	[Token(Token = "0x4000CE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Item GarunteedItem;

	[Token(Token = "0x4000CE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public int specialChestNum;

	[Token(Token = "0x4000CEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Color currentRarityColor;

	[Token(Token = "0x170000CE")]
	private string specialChestID
	{
		[Token(Token = "0x6000CFE")]
		[Address(RVA = "0xAF9FDC", Offset = "0xAF9FDC", VA = "0xAF9FDC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000CFF")]
	[Address(RVA = "0xAFA17C", Offset = "0xAFA17C", VA = "0xAFA17C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D00")]
	[Address(RVA = "0xAFA61C", Offset = "0xAFA61C", VA = "0xAFA61C")]
	private void rewardGained()
	{
	}

	[Token(Token = "0x6000D01")]
	[Address(RVA = "0xAFAB24", Offset = "0xAFAB24", VA = "0xAFAB24")]
	private void openChest()
	{
	}

	[Token(Token = "0x6000D02")]
	[Address(RVA = "0xAFAA9C", Offset = "0xAFAA9C", VA = "0xAFAA9C")]
	public void switchTextColorToRarity(Item.ItemRarity rarity)
	{
	}

	[Token(Token = "0x6000D03")]
	[Address(RVA = "0xAFAFAC", Offset = "0xAFAFAC", VA = "0xAFAFAC")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000D04")]
	[Address(RVA = "0xAFB044", Offset = "0xAFB044", VA = "0xAFB044")]
	public OverworldChest()
	{
	}
}
[Token(Token = "0x20001F5")]
public class OverworldDamageText : MonoBehaviour
{
	[Token(Token = "0x4000CEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TMP_Text text;

	[Token(Token = "0x4000CEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float aliveTime;

	[Token(Token = "0x4000CED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float timeToFade;

	[Token(Token = "0x6000D05")]
	[Address(RVA = "0xAFB0BC", Offset = "0xAFB0BC", VA = "0xAFB0BC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D06")]
	[Address(RVA = "0xAFB254", Offset = "0xAFB254", VA = "0xAFB254")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D07")]
	[Address(RVA = "0xAFB408", Offset = "0xAFB408", VA = "0xAFB408")]
	public OverworldDamageText()
	{
	}
}
[Token(Token = "0x20001F6")]
public class OverworldShowProjectile : MonoBehaviour
{
	[Token(Token = "0x4000CEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float speed;

	[Token(Token = "0x4000CEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int damage;

	[Token(Token = "0x4000CF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Rigidbody rb;

	[Token(Token = "0x4000CF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject explosionParticle;

	[Token(Token = "0x6000D08")]
	[Address(RVA = "0xAFCAAC", Offset = "0xAFCAAC", VA = "0xAFCAAC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D09")]
	[Address(RVA = "0xAFCB9C", Offset = "0xAFCB9C", VA = "0xAFCB9C")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000D0A")]
	[Address(RVA = "0xAFCD88", Offset = "0xAFCD88", VA = "0xAFCD88")]
	public OverworldShowProjectile()
	{
	}
}
[Token(Token = "0x20001F7")]
public class OverworldSpring : MonoBehaviour
{
	[Token(Token = "0x4000CF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float jumpPower;

	[Token(Token = "0x4000CF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float jumpTime;

	[Token(Token = "0x4000CF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Animator animator;

	[Token(Token = "0x4000CF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioSource source;

	[Token(Token = "0x4000CF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float coolDown;

	[Token(Token = "0x4000CF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float timer;

	[Token(Token = "0x6000D0B")]
	[Address(RVA = "0xAFCD9C", Offset = "0xAFCD9C", VA = "0xAFCD9C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D0C")]
	[Address(RVA = "0xAFCE8C", Offset = "0xAFCE8C", VA = "0xAFCE8C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D0D")]
	[Address(RVA = "0xAFCECC", Offset = "0xAFCECC", VA = "0xAFCECC")]
	public void destroyThis()
	{
	}

	[Token(Token = "0x6000D0E")]
	[Address(RVA = "0xAFCF48", Offset = "0xAFCF48", VA = "0xAFCF48")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000D0F")]
	[Address(RVA = "0xAFD028", Offset = "0xAFD028", VA = "0xAFD028")]
	public OverworldSpring()
	{
	}
}
[Token(Token = "0x20001F8")]
public class OverworldTurret : MonoBehaviour
{
	[Token(Token = "0x20007B9")]
	public enum TurretMode
	{
		[Token(Token = "0x400269B")]
		shootBallMode,
		[Token(Token = "0x400269C")]
		marioFireMode
	}

	[Token(Token = "0x4000CF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform fireTrans;

	[Token(Token = "0x4000CF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject turrethead;

	[Token(Token = "0x4000CFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject projectile;

	[Token(Token = "0x4000CFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float aggroRadius;

	[Token(Token = "0x4000CFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public int damage;

	[Token(Token = "0x4000CFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool spreadShot;

	[Token(Token = "0x4000CFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	public bool superSpread;

	[Token(Token = "0x4000CFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float fireTimer;

	[Token(Token = "0x4000D00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float fireCooldown;

	[Token(Token = "0x4000D01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float rotateSpeed;

	[Token(Token = "0x4000D02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject flames;

	[Token(Token = "0x4000D03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float aliveTime;

	[Token(Token = "0x4000D04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float timeToEnable;

	[Token(Token = "0x4000D05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public TurretMode turretMode;

	[Token(Token = "0x6000D10")]
	[Address(RVA = "0xAFD03C", Offset = "0xAFD03C", VA = "0xAFD03C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D11")]
	[Address(RVA = "0xAFD464", Offset = "0xAFD464", VA = "0xAFD464")]
	private void fireBullet()
	{
	}

	[Token(Token = "0x6000D12")]
	[Address(RVA = "0xAFD890", Offset = "0xAFD890", VA = "0xAFD890")]
	public OverworldTurret()
	{
	}
}
[Serializable]
[Token(Token = "0x20001F9")]
public class SavedDungeonInfo
{
	[Token(Token = "0x4000D06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string dungeonName;

	[Token(Token = "0x4000D07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int numOfFloors;

	[Token(Token = "0x4000D08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int playerCurrentFloor;

	[Token(Token = "0x4000D09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<DungeonFloor> discoveredFloors;

	[Token(Token = "0x4000D0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string battleSceneName;

	[Token(Token = "0x6000D13")]
	[Address(RVA = "0xC217E0", Offset = "0xC217E0", VA = "0xC217E0")]
	public SavedDungeonInfo()
	{
	}
}
[Token(Token = "0x20001FA")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8B6588", Offset = "0x8B6588")]
public class ScriptableEnemyList : ScriptableObject
{
	[Token(Token = "0x4000D0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<EnemyParent> easyEnemies;

	[Token(Token = "0x4000D0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<EnemyParent> mediumEnemies;

	[Token(Token = "0x4000D0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<EnemyParent> hardEnemies;

	[Token(Token = "0x4000D0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<EnemyParent> infiniteEnemies;

	[Token(Token = "0x6000D14")]
	[Address(RVA = "0xC219F4", Offset = "0xC219F4", VA = "0xC219F4")]
	public ScriptableEnemyList()
	{
	}
}
[Token(Token = "0x20001FB")]
public class ScriptableQuest : ScriptableObject
{
	[Token(Token = "0x4000D0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<Dialogue> questDialogue;

	[Token(Token = "0x4000D10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<Dialogue> completeDialogue;

	[Token(Token = "0x4000D11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<Item> requiredItems;

	[Token(Token = "0x4000D12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int requiredCredits;

	[Token(Token = "0x6000D15")]
	[Address(RVA = "0xC21ABC", Offset = "0xC21ABC", VA = "0xC21ABC")]
	public ScriptableQuest()
	{
	}
}
[Token(Token = "0x20001FC")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8B65CC", Offset = "0x8B65CC")]
public class ScriptableStoryEvent : ScriptableObject
{
	[Token(Token = "0x4000D13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string eventName;

	[Token(Token = "0x4000D14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<StoryAction> storyActions;

	[Token(Token = "0x6000D16")]
	[Address(RVA = "0xC21B34", Offset = "0xC21B34", VA = "0xC21B34")]
	public ScriptableStoryEvent()
	{
	}
}
[Token(Token = "0x20001FD")]
public abstract class StoryAction : ScriptableObject
{
	[Token(Token = "0x4000D15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool unlockPlayer;

	[Token(Token = "0x4000D16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool disableAction;

	[Token(Token = "0x6000D17")]
	public abstract void doAction();

	[Token(Token = "0x6000D18")]
	[Address(RVA = "0xB22560", Offset = "0xB22560", VA = "0xB22560")]
	protected StoryAction()
	{
	}
}
[Token(Token = "0x20001FE")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8B6610", Offset = "0x8B6610")]
public class ShopInventory : ScriptableObject
{
	[Token(Token = "0x4000D17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<Item> shopItems;

	[Token(Token = "0x4000D18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string storyUnlockString;

	[Token(Token = "0x4000D19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int reqStoryVal;

	[Token(Token = "0x6000D19")]
	[Address(RVA = "0xD3D444", Offset = "0xD3D444", VA = "0xD3D444")]
	public ShopInventory()
	{
	}
}
[Token(Token = "0x20001FF")]
public class ShopWarper : MonoBehaviour
{
	[Token(Token = "0x4000D1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public NPCOverworld shopNPC;

	[Token(Token = "0x4000D1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform telePoint;

	[Token(Token = "0x4000D1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform returnPoint;

	[Token(Token = "0x4000D1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject togglableShopObjects;

	[Token(Token = "0x4000D1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private UnityEngine.Vector3 oldMenuPos;

	[Token(Token = "0x4000D1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Transform menuLastParent;

	[Token(Token = "0x4000D20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AudioSource doorSource;

	[Token(Token = "0x4000D21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private UnityEngine.Vector3 oldMenuScale;

	[Token(Token = "0x4000D22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private UnityEngine.Vector3 smallMenuScale;

	[Token(Token = "0x4000D23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private UnityEngine.Vector3 oldPointerScale;

	[Token(Token = "0x4000D24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private UnityEngine.Vector3 smallPointerScale;

	[Token(Token = "0x4000D25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float oldLineWidth;

	[Token(Token = "0x4000D26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public int shopMusic;

	[Token(Token = "0x4000D27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private bool storeActive;

	[Token(Token = "0x6000D1A")]
	[Address(RVA = "0xD3D49C", Offset = "0xD3D49C", VA = "0xD3D49C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D1B")]
	[Address(RVA = "0xD3D528", Offset = "0xD3D528", VA = "0xD3D528")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D1C")]
	[Address(RVA = "0xD3D5C8", Offset = "0xD3D5C8", VA = "0xD3D5C8")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000D1D")]
	[Address(RVA = "0xD3DB74", Offset = "0xD3DB74", VA = "0xD3DB74")]
	public void returnPlayer()
	{
	}

	[Token(Token = "0x6000D1E")]
	[Address(RVA = "0xD3DEB8", Offset = "0xD3DEB8", VA = "0xD3DEB8")]
	public ShopWarper()
	{
	}
}
[Token(Token = "0x2000200")]
public class SideQuest : ScriptableObject
{
	[Token(Token = "0x4000D28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Sprite icon;

	[Token(Token = "0x4000D29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string questName;

	[Token(Token = "0x4000D2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string storyPreReq;

	[Token(Token = "0x4000D2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string questDescription;

	[Token(Token = "0x4000D2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Item[] rewarditems;

	[Token(Token = "0x4000D2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int rewardCredits;

	[Token(Token = "0x4000D2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public int expReward;

	[Token(Token = "0x4000D2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool repeatable;

	[Token(Token = "0x170000CF")]
	public string rewardString
	{
		[Token(Token = "0x6000D1F")]
		[Address(RVA = "0xD3DECC", Offset = "0xD3DECC", VA = "0xD3DECC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000D20")]
	[Address(RVA = "0xD3E22C", Offset = "0xD3E22C", VA = "0xD3E22C", Slot = "4")]
	public virtual void completeQuest()
	{
	}

	[Token(Token = "0x6000D21")]
	[Address(RVA = "0xD3E328", Offset = "0xD3E328", VA = "0xD3E328", Slot = "5")]
	public virtual bool isQuestComplete()
	{
		return default(bool);
	}

	[Token(Token = "0x6000D22")]
	[Address(RVA = "0xD3E330", Offset = "0xD3E330", VA = "0xD3E330")]
	public SideQuest()
	{
	}
}
[Serializable]
[Token(Token = "0x2000201")]
public class QuestData
{
	[Token(Token = "0x4000D30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string questName;

	[Token(Token = "0x4000D31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int progress;

	[Token(Token = "0x6000D23")]
	[Address(RVA = "0xC1A840", Offset = "0xC1A840", VA = "0xC1A840")]
	public QuestData(string name)
	{
	}
}
[Token(Token = "0x2000202")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8B6654", Offset = "0x8B6654")]
public class SideQuestItemTurnIn : SideQuest
{
	[Token(Token = "0x4000D32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Item requiredItem;

	[Token(Token = "0x4000D33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public int requiredAmount;

	[Token(Token = "0x6000D24")]
	[Address(RVA = "0xD3E398", Offset = "0xD3E398", VA = "0xD3E398", Slot = "5")]
	public override bool isQuestComplete()
	{
		return default(bool);
	}

	[Token(Token = "0x6000D25")]
	[Address(RVA = "0xD3E4DC", Offset = "0xD3E4DC", VA = "0xD3E4DC", Slot = "4")]
	public override void completeQuest()
	{
	}

	[Token(Token = "0x6000D26")]
	[Address(RVA = "0xD3E67C", Offset = "0xD3E67C", VA = "0xD3E67C")]
	public SideQuestItemTurnIn()
	{
	}
}
[Token(Token = "0x2000203")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8B6698", Offset = "0x8B6698")]
public class SideQuestLvlSpell : SideQuest
{
	[Token(Token = "0x4000D34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public PlayerSpell[] spells;

	[Token(Token = "0x4000D35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public int requiredLevel;

	[Token(Token = "0x6000D27")]
	[Address(RVA = "0xD3E680", Offset = "0xD3E680", VA = "0xD3E680", Slot = "5")]
	public override bool isQuestComplete()
	{
		return default(bool);
	}

	[Token(Token = "0x6000D28")]
	[Address(RVA = "0xD3E738", Offset = "0xD3E738", VA = "0xD3E738")]
	public SideQuestLvlSpell()
	{
	}
}
[Token(Token = "0x2000204")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8B66DC", Offset = "0x8B66DC")]
public class SideQuestStoryProg : SideQuest
{
	[Token(Token = "0x4000D36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public string storyString;

	[Token(Token = "0x4000D37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public int reqProgress;

	[Token(Token = "0x6000D29")]
	[Address(RVA = "0xD3E73C", Offset = "0xD3E73C", VA = "0xD3E73C", Slot = "5")]
	public override bool isQuestComplete()
	{
		return default(bool);
	}

	[Token(Token = "0x6000D2A")]
	[Address(RVA = "0xD3E788", Offset = "0xD3E788", VA = "0xD3E788")]
	public SideQuestStoryProg()
	{
	}
}
[Token(Token = "0x2000205")]
public class SimSimBossStarter : MonoBehaviour
{
	[Token(Token = "0x4000D38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public EnemyOverworld[] bossEnemies;

	[Token(Token = "0x4000D39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject stairs;

	[Token(Token = "0x6000D2B")]
	[Address(RVA = "0xB1D5DC", Offset = "0xB1D5DC", VA = "0xB1D5DC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D2C")]
	[Address(RVA = "0xB1D74C", Offset = "0xB1D74C", VA = "0xB1D74C")]
	public void beginBossEncounter()
	{
	}

	[Token(Token = "0x6000D2D")]
	[Address(RVA = "0xB1D848", Offset = "0xB1D848", VA = "0xB1D848")]
	public SimSimBossStarter()
	{
	}
}
[Token(Token = "0x2000206")]
public class SnowballHazzard : MonoBehaviour
{
	[Token(Token = "0x4000D3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int damage;

	[Token(Token = "0x4000D3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject destroyParticle;

	[Token(Token = "0x4000D3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float maxAliveTime;

	[Token(Token = "0x4000D3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float timeAlive;

	[Token(Token = "0x4000D3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Rigidbody rb;

	[Token(Token = "0x4000D3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private UnityEngine.Vector3 startPos;

	[Token(Token = "0x4000D40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Quaternion startRot;

	[Token(Token = "0x6000D2E")]
	[Address(RVA = "0xB20678", Offset = "0xB20678", VA = "0xB20678")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D2F")]
	[Address(RVA = "0xB20780", Offset = "0xB20780", VA = "0xB20780")]
	private void damagePlayer()
	{
	}

	[Token(Token = "0x6000D30")]
	[Address(RVA = "0xB207E4", Offset = "0xB207E4", VA = "0xB207E4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D31")]
	[Address(RVA = "0xB20A94", Offset = "0xB20A94", VA = "0xB20A94")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000D32")]
	[Address(RVA = "0xB2083C", Offset = "0xB2083C", VA = "0xB2083C")]
	private void resetBall()
	{
	}

	[Token(Token = "0x6000D33")]
	[Address(RVA = "0xB20B5C", Offset = "0xB20B5C", VA = "0xB20B5C")]
	public SnowballHazzard()
	{
	}
}
[Token(Token = "0x2000207")]
public class SoundManager : MonoBehaviour
{
	[Token(Token = "0x20007BA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B88F4", Offset = "0x8B88F4")]
	private sealed class <openCCHestTimer>d__35 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400269D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400269E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400269F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SoundManager <>4__this;

		[Token(Token = "0x1700060B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002DB4")]
			[Address(RVA = "0xB21708", Offset = "0xB21708", VA = "0xB21708", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700060C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002DB6")]
			[Address(RVA = "0xB21770", Offset = "0xB21770", VA = "0xB21770", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002DB1")]
		[Address(RVA = "0xB21608", Offset = "0xB21608", VA = "0xB21608")]
		[DebuggerHidden]
		public <openCCHestTimer>d__35(int <>1__state)
		{
		}

		[Token(Token = "0x6002DB2")]
		[Address(RVA = "0xB2163C", Offset = "0xB2163C", VA = "0xB2163C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002DB3")]
		[Address(RVA = "0xB21640", Offset = "0xB21640", VA = "0xB21640", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002DB5")]
		[Address(RVA = "0xB21710", Offset = "0xB21710", VA = "0xB21710", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000D41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioSource uiSource;

	[Token(Token = "0x4000D42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioSource uiSource2;

	[Token(Token = "0x4000D43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioSource voiceSource;

	[Token(Token = "0x4000D44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static SoundManager instance;

	[Token(Token = "0x4000D45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BC7B0", Offset = "0x8BC7B0")]
	public AudioClip uiSelectSound;

	[Token(Token = "0x4000D46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AudioClip uiSubmitSound;

	[Token(Token = "0x4000D47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AudioClip uiTabChangeSound;

	[Token(Token = "0x4000D48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AudioClip uiOpenSound;

	[Token(Token = "0x4000D49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AudioClip uiCloseSound;

	[Token(Token = "0x4000D4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public AudioClip uiShopPurchase;

	[Token(Token = "0x4000D4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public AudioClip uiChangeSpell;

	[Token(Token = "0x4000D4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public AudioClip uiError1;

	[Token(Token = "0x4000D4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public AudioClip openChest;

	[Token(Token = "0x4000D4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public AudioClip getLoot;

	[Token(Token = "0x4000D4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public AudioClip equipItem;

	[Token(Token = "0x4000D50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public AudioClip tossItem;

	[Token(Token = "0x4000D51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public AudioClip taskComplete;

	[Token(Token = "0x4000D52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BC7E8", Offset = "0x8BC7E8")]
	public AudioClip warpSound;

	[Token(Token = "0x4000D53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public AudioClip enccounterStart;

	[Token(Token = "0x4000D54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public AudioClip hitOWEnemySound;

	[Token(Token = "0x6000D34")]
	[Address(RVA = "0xB211C4", Offset = "0xB211C4", VA = "0xB211C4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D35")]
	[Address(RVA = "0xB21218", Offset = "0xB21218", VA = "0xB21218")]
	public void playUISelect()
	{
	}

	[Token(Token = "0x6000D36")]
	[Address(RVA = "0xB21258", Offset = "0xB21258", VA = "0xB21258")]
	public void playUISubmit()
	{
	}

	[Token(Token = "0x6000D37")]
	[Address(RVA = "0xB21298", Offset = "0xB21298", VA = "0xB21298")]
	public void playTaskComplete()
	{
	}

	[Token(Token = "0x6000D38")]
	[Address(RVA = "0xB212D8", Offset = "0xB212D8", VA = "0xB212D8")]
	public void playUIOpen()
	{
	}

	[Token(Token = "0x6000D39")]
	[Address(RVA = "0xB21318", Offset = "0xB21318", VA = "0xB21318")]
	public void playUIClose()
	{
	}

	[Token(Token = "0x6000D3A")]
	[Address(RVA = "0xB21358", Offset = "0xB21358", VA = "0xB21358")]
	public void playUIPurchase()
	{
	}

	[Token(Token = "0x6000D3B")]
	[Address(RVA = "0xB21398", Offset = "0xB21398", VA = "0xB21398")]
	public void playUIChangeSpell()
	{
	}

	[Token(Token = "0x6000D3C")]
	[Address(RVA = "0xB213D8", Offset = "0xB213D8", VA = "0xB213D8")]
	public void playUIError1()
	{
	}

	[Token(Token = "0x6000D3D")]
	[Address(RVA = "0xB21418", Offset = "0xB21418", VA = "0xB21418")]
	public void playWarpSound()
	{
	}

	[Token(Token = "0x6000D3E")]
	[Address(RVA = "0xB21458", Offset = "0xB21458", VA = "0xB21458")]
	public void playEncounterSound()
	{
	}

	[Token(Token = "0x6000D3F")]
	[Address(RVA = "0xB21498", Offset = "0xB21498", VA = "0xB21498")]
	public void playEquipItem()
	{
	}

	[Token(Token = "0x6000D40")]
	[Address(RVA = "0xB214D8", Offset = "0xB214D8", VA = "0xB214D8")]
	public void playTossItem()
	{
	}

	[Token(Token = "0x6000D41")]
	[Address(RVA = "0xB21518", Offset = "0xB21518", VA = "0xB21518")]
	public void playHitOWEnemySound()
	{
	}

	[Token(Token = "0x6000D42")]
	[Address(RVA = "0xB21558", Offset = "0xB21558", VA = "0xB21558")]
	public void playOpenChestSound()
	{
	}

	[Token(Token = "0x6000D43")]
	[Address(RVA = "0xB21598", Offset = "0xB21598", VA = "0xB21598")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C8594", Offset = "0x8C8594")]
	private IEnumerator openCCHestTimer()
	{
		return null;
	}

	[Token(Token = "0x6000D44")]
	[Address(RVA = "0xB21634", Offset = "0xB21634", VA = "0xB21634")]
	public SoundManager()
	{
	}
}
[Token(Token = "0x2000208")]
public class SpecialOverworld : MonoBehaviour
{
	[Token(Token = "0x6000D45")]
	[Address(RVA = "0xB21778", Offset = "0xB21778", VA = "0xB21778")]
	public void unlockPlayerMovement()
	{
	}

	[Token(Token = "0x6000D46")]
	[Address(RVA = "0xB217D4", Offset = "0xB217D4", VA = "0xB217D4")]
	public SpecialOverworld()
	{
	}
}
[Token(Token = "0x2000209")]
public class IceCreamHandler : MonoBehaviour
{
	[Token(Token = "0x6000D47")]
	[Address(RVA = "0xAD8220", Offset = "0xAD8220", VA = "0xAD8220")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D48")]
	[Address(RVA = "0xAD8224", Offset = "0xAD8224", VA = "0xAD8224")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D49")]
	[Address(RVA = "0xAD82D4", Offset = "0xAD82D4", VA = "0xAD82D4")]
	public IceCreamHandler()
	{
	}
}
[Token(Token = "0x200020A")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8B6720", Offset = "0x8B6720")]
public class StoryDialogue : StoryAction
{
	[Token(Token = "0x4000D55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Dialogue dialogue;

	[Token(Token = "0x4000D56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string npcName;

	[Token(Token = "0x4000D57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private NPCOverworld npc;

	[Token(Token = "0x4000D58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool dialogueSet;

	[Token(Token = "0x6000D4A")]
	[Address(RVA = "0xB22598", Offset = "0xB22598", VA = "0xB22598", Slot = "4")]
	public override void doAction()
	{
	}

	[Token(Token = "0x6000D4B")]
	[Address(RVA = "0xB22684", Offset = "0xB22684", VA = "0xB22684")]
	public StoryDialogue()
	{
	}
}
[Token(Token = "0x200020B")]
public class StoryDisabler : MonoBehaviour
{
	[Token(Token = "0x4000D59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string storyName;

	[Token(Token = "0x4000D5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int reqValue;

	[Token(Token = "0x4000D5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool useExactValue;

	[Token(Token = "0x4000D5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
	public bool requireGreaterValue;

	[Token(Token = "0x4000D5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int[] storyRangeValue;

	[Token(Token = "0x6000D4C")]
	[Address(RVA = "0xB2268C", Offset = "0xB2268C", VA = "0xB2268C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D4D")]
	[Address(RVA = "0xB227D0", Offset = "0xB227D0", VA = "0xB227D0")]
	public StoryDisabler()
	{
	}
}
[Token(Token = "0x200020C")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8B6764", Offset = "0x8B6764")]
public class StoryEndAndSwitchDialogue : StoryAction
{
	[Token(Token = "0x4000D5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string npcName;

	[Token(Token = "0x4000D5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private NPCOverworld npc;

	[Token(Token = "0x4000D60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Dialogue endDialogue;

	[Token(Token = "0x6000D4E")]
	[Address(RVA = "0xB227E8", Offset = "0xB227E8", VA = "0xB227E8", Slot = "4")]
	public override void doAction()
	{
	}

	[Token(Token = "0x6000D4F")]
	[Address(RVA = "0xB228A8", Offset = "0xB228A8", VA = "0xB228A8")]
	public StoryEndAndSwitchDialogue()
	{
	}
}
[Token(Token = "0x200020D")]
public class StoryEventHelper : MonoBehaviour
{
	[Token(Token = "0x20007BB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B8904", Offset = "0x8B8904")]
	private sealed class <whiteFadeSceneTimer>d__16 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40026A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40026A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40026A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string scene;

		[Token(Token = "0x1700060D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002DBA")]
			[Address(RVA = "0xB232BC", Offset = "0xB232BC", VA = "0xB232BC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700060E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002DBC")]
			[Address(RVA = "0xB23324", Offset = "0xB23324", VA = "0xB23324", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002DB7")]
		[Address(RVA = "0xB230A8", Offset = "0xB230A8", VA = "0xB230A8")]
		[DebuggerHidden]
		public <whiteFadeSceneTimer>d__16(int <>1__state)
		{
		}

		[Token(Token = "0x6002DB8")]
		[Address(RVA = "0xB231C0", Offset = "0xB231C0", VA = "0xB231C0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002DB9")]
		[Address(RVA = "0xB231C4", Offset = "0xB231C4", VA = "0xB231C4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002DBB")]
		[Address(RVA = "0xB232C4", Offset = "0xB232C4", VA = "0xB232C4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000D61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string storyString;

	[Token(Token = "0x4000D62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private AudioClip originalMusic;

	[Token(Token = "0x4000D63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioClip[] musicTracks;

	[Token(Token = "0x4000D64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Item storyitem;

	[Token(Token = "0x4000D65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject rewardText;

	[Token(Token = "0x4000D66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool givenItem;

	[Token(Token = "0x4000D67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject[] disabledObjects;

	[Token(Token = "0x6000D50")]
	[Address(RVA = "0xB228B0", Offset = "0xB228B0", VA = "0xB228B0")]
	public void updateStoryString(int val)
	{
	}

	[Token(Token = "0x6000D51")]
	[Address(RVA = "0xB228F4", Offset = "0xB228F4", VA = "0xB228F4")]
	public void enableObject(int num)
	{
	}

	[Token(Token = "0x6000D52")]
	[Address(RVA = "0xB2293C", Offset = "0xB2293C", VA = "0xB2293C")]
	public void unlockPlayer()
	{
	}

	[Token(Token = "0x6000D53")]
	[Address(RVA = "0xB22998", Offset = "0xB22998", VA = "0xB22998")]
	public void switchMusic(int num)
	{
	}

	[Token(Token = "0x6000D54")]
	[Address(RVA = "0xB22AB4", Offset = "0xB22AB4", VA = "0xB22AB4")]
	public void giveItem()
	{
	}

	[Token(Token = "0x6000D55")]
	[Address(RVA = "0xB22E78", Offset = "0xB22E78", VA = "0xB22E78")]
	public void loadScene(string name)
	{
	}

	[Token(Token = "0x6000D56")]
	[Address(RVA = "0xB22EE0", Offset = "0xB22EE0", VA = "0xB22EE0")]
	public void stopMusic()
	{
	}

	[Token(Token = "0x6000D57")]
	[Address(RVA = "0xB22FA0", Offset = "0xB22FA0", VA = "0xB22FA0")]
	public void playWhiteFade(float time)
	{
	}

	[Token(Token = "0x6000D58")]
	[Address(RVA = "0xB2300C", Offset = "0xB2300C", VA = "0xB2300C")]
	public void whiteFadeIntoScene(string scene)
	{
	}

	[Token(Token = "0x6000D59")]
	[Address(RVA = "0xB23038", Offset = "0xB23038", VA = "0xB23038")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C85F8", Offset = "0x8C85F8")]
	private IEnumerator whiteFadeSceneTimer(string scene)
	{
		return null;
	}

	[Token(Token = "0x6000D5A")]
	[Address(RVA = "0xB230D4", Offset = "0xB230D4", VA = "0xB230D4")]
	public void playOriginalMusic()
	{
	}

	[Token(Token = "0x6000D5B")]
	[Address(RVA = "0xB231B8", Offset = "0xB231B8", VA = "0xB231B8")]
	public StoryEventHelper()
	{
	}
}
[Token(Token = "0x200020E")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8B67A8", Offset = "0x8B67A8")]
public class StoryMoveCharacter : StoryAction
{
	[Token(Token = "0x4000D68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string targetPositionName;

	[Token(Token = "0x4000D69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string npcName;

	[Token(Token = "0x4000D6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool autoProceedStory;

	[Token(Token = "0x4000D6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	public bool showRenderersOnMove;

	[Token(Token = "0x4000D6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
	private bool proceeded;

	[Token(Token = "0x4000D6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private NPCOverworld npc;

	[Token(Token = "0x6000D5C")]
	[Address(RVA = "0xB2332C", Offset = "0xB2332C", VA = "0xB2332C", Slot = "4")]
	public override void doAction()
	{
	}

	[Token(Token = "0x6000D5D")]
	[Address(RVA = "0xB23514", Offset = "0xB23514", VA = "0xB23514")]
	public StoryMoveCharacter()
	{
	}
}
[Token(Token = "0x200020F")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8B67EC", Offset = "0x8B67EC")]
public class StoryPlayAnimation : StoryAction
{
	[Token(Token = "0x4000D6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Animator anim;

	[Token(Token = "0x4000D6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool setTrigger;

	[Token(Token = "0x4000D70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool forcePlay;

	[Token(Token = "0x4000D71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string animName;

	[Token(Token = "0x4000D72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string storyGOName;

	[Token(Token = "0x4000D73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float waitTime;

	[Token(Token = "0x4000D74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private int animstarted;

	[Token(Token = "0x4000D75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool playMusic;

	[Token(Token = "0x4000D76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public int musicTrack;

	[Token(Token = "0x4000D77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public int animationLayer;

	[Token(Token = "0x4000D78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public string animation;

	[Token(Token = "0x6000D5E")]
	[Address(RVA = "0xB2351C", Offset = "0xB2351C", VA = "0xB2351C", Slot = "4")]
	public override void doAction()
	{
	}

	[Token(Token = "0x6000D5F")]
	[Address(RVA = "0xB23728", Offset = "0xB23728", VA = "0xB23728")]
	public StoryPlayAnimation()
	{
	}
}
[Token(Token = "0x2000210")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8B6830", Offset = "0x8B6830")]
public class StoryPlayerAnimation : StoryAction
{
	[Token(Token = "0x4000D79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string triggerName;

	[Token(Token = "0x4000D7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string storyGOName;

	[Token(Token = "0x4000D7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float waitTime;

	[Token(Token = "0x4000D7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int animstarted;

	[Token(Token = "0x4000D7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool forcePlay;

	[Token(Token = "0x4000D7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	public bool rotatePlayer;

	[Token(Token = "0x4000D7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float rotateY;

	[Token(Token = "0x4000D80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject particle;

	[Token(Token = "0x6000D60")]
	[Address(RVA = "0xB2373C", Offset = "0xB2373C", VA = "0xB2373C", Slot = "4")]
	public override void doAction()
	{
	}

	[Token(Token = "0x6000D61")]
	[Address(RVA = "0xB23980", Offset = "0xB23980", VA = "0xB23980")]
	public static bool HasParameter(string paramName, Animator animator)
	{
		return default(bool);
	}

	[Token(Token = "0x6000D62")]
	[Address(RVA = "0xB23A24", Offset = "0xB23A24", VA = "0xB23A24")]
	public StoryPlayerAnimation()
	{
	}
}
[Token(Token = "0x2000211")]
public class SwapTriggerOverworld : MonoBehaviour
{
	[Token(Token = "0x4000D81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject disableObject;

	[Token(Token = "0x4000D82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject enableObject;

	[Token(Token = "0x6000D63")]
	[Address(RVA = "0xB28E8C", Offset = "0xB28E8C", VA = "0xB28E8C")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000D64")]
	[Address(RVA = "0xB28F60", Offset = "0xB28F60", VA = "0xB28F60")]
	public SwapTriggerOverworld()
	{
	}
}
[Token(Token = "0x2000212")]
public class WarpToPoint : MonoBehaviour
{
	[Token(Token = "0x6000D65")]
	[Address(RVA = "0xC0B9E8", Offset = "0xC0B9E8", VA = "0xC0B9E8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D66")]
	[Address(RVA = "0xC0B9EC", Offset = "0xC0B9EC", VA = "0xC0B9EC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D67")]
	[Address(RVA = "0xC0B9F0", Offset = "0xC0B9F0", VA = "0xC0B9F0")]
	public WarpToPoint()
	{
	}
}
[Token(Token = "0x2000213")]
public class PassiveAPReduce : PassiveAbility
{
	[Token(Token = "0x4000D83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public int APCostToReduce;

	[Token(Token = "0x4000D84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int amountToReduce;

	[Token(Token = "0x6000D68")]
	[Address(RVA = "0xC78544", Offset = "0xC78544", VA = "0xC78544")]
	public PassiveAPReduce()
	{
	}
}
[Token(Token = "0x2000214")]
public class PassiveAPReturn : PassiveAbility
{
	[Token(Token = "0x4000D85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public int refundAmt;

	[Token(Token = "0x4000D86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float chanceToProc;

	[Token(Token = "0x4000D87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject procEffect;

	[Token(Token = "0x6000D69")]
	[Address(RVA = "0xC785B4", Offset = "0xC785B4", VA = "0xC785B4", Slot = "5")]
	public override void onCastFunction(GameObject hand)
	{
	}

	[Token(Token = "0x6000D6A")]
	[Address(RVA = "0xC7876C", Offset = "0xC7876C", VA = "0xC7876C")]
	public PassiveAPReturn()
	{
	}
}
[Token(Token = "0x2000215")]
public class PassiveAdrOnHurt : PassiveAbility
{
	[Token(Token = "0x4000D88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public int adrenalineGain;

	[Token(Token = "0x4000D89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float timeSinceGain;

	[Token(Token = "0x4000D8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float coolDown;

	[Token(Token = "0x6000D6B")]
	[Address(RVA = "0xC78D5C", Offset = "0xC78D5C", VA = "0xC78D5C", Slot = "8")]
	public override void onHurtFunction()
	{
	}

	[Token(Token = "0x6000D6C")]
	[Address(RVA = "0xC78DD8", Offset = "0xC78DD8", VA = "0xC78DD8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D6D")]
	[Address(RVA = "0xC78E10", Offset = "0xC78E10", VA = "0xC78E10")]
	public PassiveAdrOnHurt()
	{
	}
}
[Token(Token = "0x2000216")]
public class PassiveApplyDebuffOnAttack : PassiveAbility
{
	[Token(Token = "0x4000D8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GlitchEffects glitch;

	[Token(Token = "0x4000D8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float chanceToApply;

	[Token(Token = "0x6000D6E")]
	[Address(RVA = "0xC78E1C", Offset = "0xC78E1C", VA = "0xC78E1C", Slot = "6")]
	public override void onAttackFunction(Weapon weapon, EnemyParent enemy)
	{
	}

	[Token(Token = "0x6000D6F")]
	[Address(RVA = "0xC79050", Offset = "0xC79050", VA = "0xC79050")]
	public PassiveApplyDebuffOnAttack()
	{
	}
}
[Token(Token = "0x2000217")]
public class PassiveAutoSummon : PassiveAbility
{
	[Token(Token = "0x6000D70")]
	[Address(RVA = "0xC79054", Offset = "0xC79054", VA = "0xC79054", Slot = "7")]
	public override void onBattleStartFunction()
	{
	}

	[Token(Token = "0x6000D71")]
	[Address(RVA = "0xC79194", Offset = "0xC79194", VA = "0xC79194")]
	public PassiveAutoSummon()
	{
	}
}
[Token(Token = "0x2000218")]
public class PassiveBuffStart : PassiveAbility
{
	[Token(Token = "0x4000D8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public BuffSpell battleBuff;

	[Token(Token = "0x6000D72")]
	[Address(RVA = "0xC79198", Offset = "0xC79198", VA = "0xC79198", Slot = "7")]
	public override void onBattleStartFunction()
	{
	}

	[Token(Token = "0x6000D73")]
	[Address(RVA = "0xC79248", Offset = "0xC79248", VA = "0xC79248")]
	public PassiveBuffStart()
	{
	}
}
[Token(Token = "0x2000219")]
public class PassiveCureDebuff : PassiveAbility
{
	[Token(Token = "0x4000D8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float healChance;

	[Token(Token = "0x6000D74")]
	[Address(RVA = "0xC7924C", Offset = "0xC7924C", VA = "0xC7924C", Slot = "4")]
	public override void onceATurnFunction()
	{
	}

	[Token(Token = "0x6000D75")]
	[Address(RVA = "0xC794D0", Offset = "0xC794D0", VA = "0xC794D0")]
	public PassiveCureDebuff()
	{
	}
}
[Token(Token = "0x200021A")]
public class PassiveDoublePhysDmg : PassiveAbility
{
	[Token(Token = "0x6000D76")]
	[Address(RVA = "0xC794E0", Offset = "0xC794E0", VA = "0xC794E0", Slot = "6")]
	public override void onAttackFunction(Weapon weapon, EnemyParent enemy)
	{
	}

	[Token(Token = "0x6000D77")]
	[Address(RVA = "0xC79530", Offset = "0xC79530", VA = "0xC79530")]
	public PassiveDoublePhysDmg()
	{
	}
}
[Token(Token = "0x200021B")]
public class PassiveFlatStat : PassiveAbility
{
	[Token(Token = "0x20007BC")]
	public enum StatType
	{
		[Token(Token = "0x40026A4")]
		power,
		[Token(Token = "0x40026A5")]
		defense,
		[Token(Token = "0x40026A6")]
		health,
		[Token(Token = "0x40026A7")]
		crit,
		[Token(Token = "0x40026A8")]
		maxAP,
		[Token(Token = "0x40026A9")]
		moveSpeed,
		[Token(Token = "0x40026AA")]
		critDamage,
		[Token(Token = "0x40026AB")]
		spellVamp,
		[Token(Token = "0x40026AC")]
		expBoost,
		[Token(Token = "0x40026AD")]
		summonPower,
		[Token(Token = "0x40026AE")]
		spellPowerMod,
		[Token(Token = "0x40026AF")]
		glitchChance
	}

	[Token(Token = "0x4000D8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public int statVal;

	[Token(Token = "0x4000D90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public StatType statType;

	[Token(Token = "0x6000D78")]
	[Address(RVA = "0xC79534", Offset = "0xC79534", VA = "0xC79534")]
	public PassiveFlatStat()
	{
	}
}
[Token(Token = "0x200021C")]
public class PassiveGalaxyBrain : PassiveAbility
{
	[Token(Token = "0x6000D79")]
	[Address(RVA = "0xC79538", Offset = "0xC79538", VA = "0xC79538", Slot = "7")]
	public override void onBattleStartFunction()
	{
	}

	[Token(Token = "0x6000D7A")]
	[Address(RVA = "0xC795CC", Offset = "0xC795CC", VA = "0xC795CC")]
	public PassiveGalaxyBrain()
	{
	}
}
[Token(Token = "0x200021D")]
public class PassiveHealTurn : PassiveAbility
{
	[Token(Token = "0x6000D7B")]
	[Address(RVA = "0xC795D0", Offset = "0xC795D0", VA = "0xC795D0", Slot = "4")]
	public override void onceATurnFunction()
	{
	}

	[Token(Token = "0x6000D7C")]
	[Address(RVA = "0xC7965C", Offset = "0xC7965C", VA = "0xC7965C")]
	public PassiveHealTurn()
	{
	}
}
[Token(Token = "0x200021E")]
public class PassiveHealthOnCrit : PassiveAbility
{
	[Token(Token = "0x6000D7D")]
	[Address(RVA = "0xC79660", Offset = "0xC79660", VA = "0xC79660", Slot = "9")]
	public override void onSpellHitFunction(int damage, bool crit)
	{
	}

	[Token(Token = "0x6000D7E")]
	[Address(RVA = "0xC796F8", Offset = "0xC796F8", VA = "0xC796F8")]
	public PassiveHealthOnCrit()
	{
	}
}
[Token(Token = "0x200021F")]
public class PassiveShortenCooldown : PassiveAbility
{
	[Token(Token = "0x4000D91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float chanceToOccur;

	[Token(Token = "0x6000D7F")]
	[Address(RVA = "0xC796FC", Offset = "0xC796FC", VA = "0xC796FC", Slot = "4")]
	public override void onceATurnFunction()
	{
	}

	[Token(Token = "0x6000D80")]
	[Address(RVA = "0xC797B8", Offset = "0xC797B8", VA = "0xC797B8")]
	public PassiveShortenCooldown()
	{
	}
}
[Token(Token = "0x2000220")]
public class PassiveThievery : PassiveAbility
{
	[Token(Token = "0x4000D92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float chanceToSteal;

	[Token(Token = "0x4000D93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float moneyEarnedFactor;

	[Token(Token = "0x6000D81")]
	[Address(RVA = "0xC797C8", Offset = "0xC797C8", VA = "0xC797C8", Slot = "6")]
	public override void onAttackFunction(Weapon weapon, EnemyParent enemy)
	{
	}

	[Token(Token = "0x6000D82")]
	[Address(RVA = "0xC79920", Offset = "0xC79920", VA = "0xC79920")]
	public PassiveThievery()
	{
	}
}
[Token(Token = "0x2000221")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8B6874", Offset = "0x8B6874")]
public class ScriptablePassive : ScriptableObject
{
	[Token(Token = "0x4000D94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PassiveAbility ability;

	[Token(Token = "0x6000D83")]
	[Address(RVA = "0xC21AB4", Offset = "0xC21AB4", VA = "0xC21AB4")]
	public ScriptablePassive()
	{
	}
}
[Token(Token = "0x2000222")]
public class OverworldPet : MonoBehaviour
{
	[Token(Token = "0x20007BD")]
	protected enum PetState
	{
		[Token(Token = "0x40026B1")]
		Idle,
		[Token(Token = "0x40026B2")]
		Following,
		[Token(Token = "0x40026B3")]
		Disarming
	}

	[Token(Token = "0x20007BE")]
	protected class IdleState : State<OverworldPet>
	{
		[Token(Token = "0x6002DBD")]
		[Address(RVA = "0xAFBC70", Offset = "0xAFBC70", VA = "0xAFBC70", Slot = "4")]
		public override void activate(OverworldPet parent)
		{
		}

		[Token(Token = "0x6002DBE")]
		[Address(RVA = "0xAFBCEC", Offset = "0xAFBCEC", VA = "0xAFBCEC", Slot = "5")]
		public override void update(OverworldPet parent)
		{
		}

		[Token(Token = "0x6002DBF")]
		[Address(RVA = "0xAFB918", Offset = "0xAFB918", VA = "0xAFB918")]
		public IdleState()
		{
		}
	}

	[Token(Token = "0x20007BF")]
	protected class FollowState : State<OverworldPet>
	{
		[Token(Token = "0x6002DC0")]
		[Address(RVA = "0xAFBA78", Offset = "0xAFBA78", VA = "0xAFBA78", Slot = "4")]
		public override void activate(OverworldPet parent)
		{
		}

		[Token(Token = "0x6002DC1")]
		[Address(RVA = "0xAFBAF4", Offset = "0xAFBAF4", VA = "0xAFBAF4", Slot = "5")]
		public override void update(OverworldPet parent)
		{
		}

		[Token(Token = "0x6002DC2")]
		[Address(RVA = "0xAFB968", Offset = "0xAFB968", VA = "0xAFB968")]
		public FollowState()
		{
		}
	}

	[Token(Token = "0x20007C0")]
	protected class DisarmState : State<OverworldPet>
	{
		[Token(Token = "0x6002DC3")]
		[Address(RVA = "0xAFBA70", Offset = "0xAFBA70", VA = "0xAFBA70", Slot = "4")]
		public override void activate(OverworldPet parent)
		{
		}

		[Token(Token = "0x6002DC4")]
		[Address(RVA = "0xAFBA74", Offset = "0xAFBA74", VA = "0xAFBA74", Slot = "5")]
		public override void update(OverworldPet parent)
		{
		}

		[Token(Token = "0x6002DC5")]
		[Address(RVA = "0xAFB9B8", Offset = "0xAFB9B8", VA = "0xAFB9B8")]
		public DisarmState()
		{
		}
	}

	[Token(Token = "0x4000D95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public NavMeshAgent agent;

	[Token(Token = "0x4000D96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float followDistance;

	[Token(Token = "0x4000D97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Animator animator;

	[Token(Token = "0x4000D98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected StateMachine<OverworldPet, PetState> stateMachine;

	[Token(Token = "0x6000D84")]
	[Address(RVA = "0xAFB7A4", Offset = "0xAFB7A4", VA = "0xAFB7A4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D85")]
	[Address(RVA = "0xAFBA08", Offset = "0xAFBA08", VA = "0xAFBA08")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D86")]
	[Address(RVA = "0xAFBA60", Offset = "0xAFBA60", VA = "0xAFBA60")]
	public OverworldPet()
	{
	}
}
[Token(Token = "0x2000223")]
public class PetBarkaxer : MonoBehaviour
{
	[Token(Token = "0x6000D87")]
	[Address(RVA = "0xB668BC", Offset = "0xB668BC", VA = "0xB668BC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D88")]
	[Address(RVA = "0xB668C0", Offset = "0xB668C0", VA = "0xB668C0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D89")]
	[Address(RVA = "0xB668C4", Offset = "0xB668C4", VA = "0xB668C4")]
	public PetBarkaxer()
	{
	}
}
[Token(Token = "0x2000224")]
public class MemorySphere : MonoBehaviour
{
	[Token(Token = "0x20007C1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B8914", Offset = "0x8B8914")]
	private sealed class <disableTimer>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40026B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40026B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40026B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MemorySphere <>4__this;

		[Token(Token = "0x1700060F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002DC9")]
			[Address(RVA = "0xB8446C", Offset = "0xB8446C", VA = "0xB8446C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000610")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002DCB")]
			[Address(RVA = "0xB844D4", Offset = "0xB844D4", VA = "0xB844D4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002DC6")]
		[Address(RVA = "0xB84378", Offset = "0xB84378", VA = "0xB84378")]
		[DebuggerHidden]
		public <disableTimer>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6002DC7")]
		[Address(RVA = "0xB843B4", Offset = "0xB843B4", VA = "0xB843B4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002DC8")]
		[Address(RVA = "0xB843B8", Offset = "0xB843B8", VA = "0xB843B8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002DCA")]
		[Address(RVA = "0xB84474", Offset = "0xB84474", VA = "0xB84474", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000D99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject memorySphere;

	[Token(Token = "0x4000D9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material[] materialsRight;

	[Token(Token = "0x4000D9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Material[] materialsLeft;

	[Token(Token = "0x4000D9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public MeshRenderer leftEyeRenderer;

	[Token(Token = "0x4000D9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public MeshRenderer rightEyeRenderer;

	[Token(Token = "0x4000D9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float sphereActiveTime;

	[Token(Token = "0x6000D8A")]
	[Address(RVA = "0xB8424C", Offset = "0xB8424C", VA = "0xB8424C")]
	public void swapSphereTexturesAndEnable(int num)
	{
	}

	[Token(Token = "0x6000D8B")]
	[Address(RVA = "0xB84308", Offset = "0xB84308", VA = "0xB84308")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C865C", Offset = "0x8C865C")]
	private IEnumerator disableTimer()
	{
		return null;
	}

	[Token(Token = "0x6000D8C")]
	[Address(RVA = "0xB843A4", Offset = "0xB843A4", VA = "0xB843A4")]
	public MemorySphere()
	{
	}
}
[Token(Token = "0x2000225")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8B68B8", Offset = "0x8B68B8")]
public class ArcaxerClass : ScriptableObject
{
	[Token(Token = "0x4000D9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string className;

	[Token(Token = "0x4000DA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public PlayerSpell[] learnableSpells;

	[Token(Token = "0x4000DA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public PassiveAbility[] learnablePassives;

	[Token(Token = "0x4000DA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool randomPassives;

	[Token(Token = "0x4000DA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	public bool randomSpells;

	[Token(Token = "0x4000DA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int[] spellLevelReqs;

	[Token(Token = "0x4000DA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int[] passiveLevelReqs;

	[Token(Token = "0x170000D0")]
	public string translatedName
	{
		[Token(Token = "0x6000D8D")]
		[Address(RVA = "0xBBF5C4", Offset = "0xBBF5C4", VA = "0xBBF5C4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000D8E")]
	[Address(RVA = "0xBBF628", Offset = "0xBBF628", VA = "0xBBF628")]
	public ArcaxerClass()
	{
	}
}
[Token(Token = "0x2000226")]
public class BackFlair : MonoBehaviour
{
	[Token(Token = "0x6000D8F")]
	[Address(RVA = "0xBBF810", Offset = "0xBBF810", VA = "0xBBF810")]
	public BackFlair()
	{
	}
}
[Token(Token = "0x2000227")]
public class FootStepSoundPlayer : MonoBehaviour
{
	[Token(Token = "0x4000DA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioSource source;

	[Token(Token = "0x4000DA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float timeToStep;

	[Token(Token = "0x4000DA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float time;

	[Token(Token = "0x6000D90")]
	[Address(RVA = "0xC4E440", Offset = "0xC4E440", VA = "0xC4E440")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D91")]
	[Address(RVA = "0xC4E444", Offset = "0xC4E444", VA = "0xC4E444")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D92")]
	[Address(RVA = "0xC4E51C", Offset = "0xC4E51C", VA = "0xC4E51C")]
	public FootStepSoundPlayer()
	{
	}
}
[Token(Token = "0x2000228")]
public class GiantSummon : MonoBehaviour
{
	[Token(Token = "0x4000DA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static GiantSummon instance;

	[Token(Token = "0x4000DAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform leftCastTrans;

	[Token(Token = "0x4000DAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform rightCastTrans;

	[Token(Token = "0x4000DAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform summonHeadTarget;

	[Token(Token = "0x4000DAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject leftCharge;

	[Token(Token = "0x4000DAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject rightCharge;

	[Token(Token = "0x4000DAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Weapon leftWeapon;

	[Token(Token = "0x4000DB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Weapon rightWeapon;

	[Token(Token = "0x4000DB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Quaternion leftRot;

	[Token(Token = "0x4000DB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Quaternion rightRot;

	[Token(Token = "0x4000DB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Material weaponMat;

	[Token(Token = "0x6000D93")]
	[Address(RVA = "0xC50E5C", Offset = "0xC50E5C", VA = "0xC50E5C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000D94")]
	[Address(RVA = "0xC50EB0", Offset = "0xC50EB0", VA = "0xC50EB0")]
	protected void Update()
	{
	}

	[Token(Token = "0x6000D95")]
	[Address(RVA = "0xC51020", Offset = "0xC51020", VA = "0xC51020")]
	public void copyWeapon(Weapon weapon, bool right)
	{
	}

	[Token(Token = "0x6000D96")]
	[Address(RVA = "0xC51298", Offset = "0xC51298", VA = "0xC51298")]
	public void destroyWeapon(bool right)
	{
	}

	[Token(Token = "0x6000D97")]
	[Address(RVA = "0xC51334", Offset = "0xC51334", VA = "0xC51334")]
	public void copyChargeEffect(GameObject charge, bool right)
	{
	}

	[Token(Token = "0x6000D98")]
	[Address(RVA = "0xC51448", Offset = "0xC51448", VA = "0xC51448")]
	public void destroyCharge(bool right)
	{
	}

	[Token(Token = "0x6000D99")]
	[Address(RVA = "0xC514D0", Offset = "0xC514D0", VA = "0xC514D0")]
	public void enlargeSpell(PlayerSpell spell, bool rightHand)
	{
	}

	[Token(Token = "0x6000D9A")]
	[Address(RVA = "0xC516FC", Offset = "0xC516FC", VA = "0xC516FC")]
	public GiantSummon()
	{
	}
}
[Token(Token = "0x2000229")]
public class HandCaster : MonoBehaviour
{
	[Token(Token = "0x20007C2")]
	public enum HandState
	{
		[Token(Token = "0x40026B8")]
		Idle,
		[Token(Token = "0x40026B9")]
		Casting,
		[Token(Token = "0x40026BA")]
		Charging,
		[Token(Token = "0x40026BB")]
		Weilding,
		[Token(Token = "0x40026BC")]
		Summoning,
		[Token(Token = "0x40026BD")]
		ClosedIdle
	}

	[Token(Token = "0x20007C3")]
	private class IdleState : State<HandCaster>
	{
		[Token(Token = "0x40026BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private bool playedSound;

		[Token(Token = "0x6002DCC")]
		[Address(RVA = "0xAD2B4C", Offset = "0xAD2B4C", VA = "0xAD2B4C", Slot = "4")]
		public override void activate(HandCaster parent)
		{
		}

		[Token(Token = "0x6002DCD")]
		[Address(RVA = "0xAD2B74", Offset = "0xAD2B74", VA = "0xAD2B74", Slot = "5")]
		public override void update(HandCaster parent)
		{
		}

		[Token(Token = "0x6002DCE")]
		[Address(RVA = "0xAD345C", Offset = "0xAD345C", VA = "0xAD345C")]
		public IdleState()
		{
		}
	}

	[Token(Token = "0x20007C4")]
	private class ClosedIdleState : State<HandCaster>
	{
		[Token(Token = "0x6002DCF")]
		[Address(RVA = "0xAD29B0", Offset = "0xAD29B0", VA = "0xAD29B0", Slot = "4")]
		public override void activate(HandCaster parent)
		{
		}

		[Token(Token = "0x6002DD0")]
		[Address(RVA = "0xAD2A7C", Offset = "0xAD2A7C", VA = "0xAD2A7C", Slot = "5")]
		public override void update(HandCaster parent)
		{
		}

		[Token(Token = "0x6002DD1")]
		[Address(RVA = "0xAD2AFC", Offset = "0xAD2AFC", VA = "0xAD2AFC")]
		public ClosedIdleState()
		{
		}
	}

	[Token(Token = "0x20007C5")]
	private class ChargingState : State<HandCaster>
	{
		[Token(Token = "0x6002DD2")]
		[Address(RVA = "0xAD2398", Offset = "0xAD2398", VA = "0xAD2398", Slot = "4")]
		public override void activate(HandCaster parent)
		{
		}

		[Token(Token = "0x6002DD3")]
		[Address(RVA = "0xAD25C4", Offset = "0xAD25C4", VA = "0xAD25C4", Slot = "5")]
		public override void update(HandCaster parent)
		{
		}

		[Token(Token = "0x6002DD4")]
		[Address(RVA = "0xAD2960", Offset = "0xAD2960", VA = "0xAD2960")]
		public ChargingState()
		{
		}
	}

	[Token(Token = "0x20007C6")]
	private class CastingState : State<HandCaster>
	{
		[Token(Token = "0x6002DD5")]
		[Address(RVA = "0xC55EA4", Offset = "0xC55EA4", VA = "0xC55EA4")]
		private void castCurrentSpell(HandCaster parent)
		{
		}

		[Token(Token = "0x6002DD6")]
		[Address(RVA = "0xC56690", Offset = "0xC56690", VA = "0xC56690", Slot = "4")]
		public override void activate(HandCaster parent)
		{
		}

		[Token(Token = "0x6002DD7")]
		[Address(RVA = "0xC56860", Offset = "0xC56860", VA = "0xC56860", Slot = "5")]
		public override void update(HandCaster parent)
		{
		}

		[Token(Token = "0x6002DD8")]
		[Address(RVA = "0xC55A0C", Offset = "0xC55A0C", VA = "0xC55A0C")]
		public CastingState()
		{
		}
	}

	[Token(Token = "0x20007C7")]
	private class SummoningState : State<HandCaster>
	{
		[Token(Token = "0x6002DD9")]
		[Address(RVA = "0xAD34AC", Offset = "0xAD34AC", VA = "0xAD34AC", Slot = "4")]
		public override void activate(HandCaster parent)
		{
		}

		[Token(Token = "0x6002DDA")]
		[Address(RVA = "0xAD34B0", Offset = "0xAD34B0", VA = "0xAD34B0", Slot = "5")]
		public override void update(HandCaster parent)
		{
		}

		[Token(Token = "0x6002DDB")]
		[Address(RVA = "0xAD34B4", Offset = "0xAD34B4", VA = "0xAD34B4")]
		public SummoningState()
		{
		}
	}

	[Token(Token = "0x20007C8")]
	private class WieldingState : State<HandCaster>
	{
		[Token(Token = "0x40026BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private GameObject weaponHeld;

		[Token(Token = "0x40026C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Rigidbody weaponRb;

		[Token(Token = "0x6002DDC")]
		[Address(RVA = "0xAD3504", Offset = "0xAD3504", VA = "0xAD3504")]
		private void teleportToTarget(HandCaster parent)
		{
		}

		[Token(Token = "0x6002DDD")]
		[Address(RVA = "0xAD38CC", Offset = "0xAD38CC", VA = "0xAD38CC")]
		private void teleportToOrigin(HandCaster parent)
		{
		}

		[Token(Token = "0x6002DDE")]
		[Address(RVA = "0xAD39C0", Offset = "0xAD39C0", VA = "0xAD39C0")]
		private void holsterWeapon(HandCaster parent, float timeToDestroy)
		{
		}

		[Token(Token = "0x6002DDF")]
		[Address(RVA = "0xAD3B80", Offset = "0xAD3B80", VA = "0xAD3B80", Slot = "4")]
		public override void activate(HandCaster parent)
		{
		}

		[Token(Token = "0x6002DE0")]
		[Address(RVA = "0xAD3E50", Offset = "0xAD3E50", VA = "0xAD3E50", Slot = "5")]
		public override void update(HandCaster parent)
		{
		}

		[Token(Token = "0x6002DE1")]
		[Address(RVA = "0xAD40F0", Offset = "0xAD40F0", VA = "0xAD40F0")]
		public WieldingState()
		{
		}
	}

	[Token(Token = "0x4000DB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private StateMachine<HandCaster, HandState> stateMachine;

	[Token(Token = "0x4000DB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BC820", Offset = "0x8BC820")]
	public PlayerSpell currentSpell;

	[Token(Token = "0x4000DB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public PlayerSpell defensiveSpell;

	[Token(Token = "0x4000DB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private PlayerSpell lastSpellBeforeEnemyTurn;

	[Token(Token = "0x4000DB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Weapon currentWeapon;

	[Token(Token = "0x4000DB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public PlayerSpell[] equippedSpells;

	[Token(Token = "0x4000DBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool spellsLocked;

	[Token(Token = "0x4000DBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	public bool weaponsLocked;

	[Token(Token = "0x4000DBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BC858", Offset = "0x8BC858")]
	public Transform spellSpawnTrans;

	[Token(Token = "0x4000DBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform weaponSpawnTrans;

	[Token(Token = "0x4000DBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject spellCanvas;

	[Token(Token = "0x4000DBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject adrenalineParticle;

	[Token(Token = "0x4000DC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool rightHand;

	[Token(Token = "0x4000DC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Button[] spellButtons;

	[Token(Token = "0x4000DC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Image[] spellImages;

	[Token(Token = "0x4000DC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Text[] spellTexts;

	[Token(Token = "0x4000DC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public GameObject spellChangeEffect;

	[Token(Token = "0x4000DC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public SkinnedMeshRenderer handRend;

	[Token(Token = "0x4000DC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public GameObject lineRend;

	[Token(Token = "0x4000DC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private PlayerControllerArcaxer playerController;

	[Token(Token = "0x4000DC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Transform originTrans;

	[Token(Token = "0x4000DC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private float _handSpeed;

	[Token(Token = "0x4000DCA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private int[] turnsSinceUsedSpells;

	[Token(Token = "0x4000DCB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private bool[] usedSpellThisTurn;

	[Token(Token = "0x4000DCC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private float[] stackingMultiplier;

	[Token(Token = "0x4000DCD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private int selectedSpellNum;

	[Token(Token = "0x4000DCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private List<PassiveAbility> onCastPassives;

	[Token(Token = "0x4000DCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private GameObject currentEffect;

	[Token(Token = "0x170000D1")]
	private float gripTrigger
	{
		[Token(Token = "0x6000D9B")]
		[Address(RVA = "0xC5458C", Offset = "0xC5458C", VA = "0xC5458C")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170000D2")]
	private float indexTrigger
	{
		[Token(Token = "0x6000D9C")]
		[Address(RVA = "0xC5463C", Offset = "0xC5463C", VA = "0xC5463C")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170000D3")]
	private UnityEngine.Vector2 thumbStick
	{
		[Token(Token = "0x6000D9D")]
		[Address(RVA = "0xC546EC", Offset = "0xC546EC", VA = "0xC546EC")]
		get
		{
			return default(UnityEngine.Vector2);
		}
	}

	[Token(Token = "0x170000D4")]
	private bool handTriggerDown
	{
		[Token(Token = "0x6000D9E")]
		[Address(RVA = "0xC5479C", Offset = "0xC5479C", VA = "0xC5479C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000D5")]
	private bool indexTriggerDown
	{
		[Token(Token = "0x6000D9F")]
		[Address(RVA = "0xC5484C", Offset = "0xC5484C", VA = "0xC5484C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000D6")]
	public float handSpeed
	{
		[Token(Token = "0x6000DA0")]
		[Address(RVA = "0xC548FC", Offset = "0xC548FC", VA = "0xC548FC")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000DA1")]
		[Address(RVA = "0xC54904", Offset = "0xC54904", VA = "0xC54904")]
		private set
		{
		}
	}

	[Token(Token = "0x170000D7")]
	public UnityEngine.Vector3 velocity
	{
		[Token(Token = "0x6000DA2")]
		[Address(RVA = "0xC5490C", Offset = "0xC5490C", VA = "0xC5490C")]
		get
		{
			return default(UnityEngine.Vector3);
		}
	}

	[Token(Token = "0x170000D8")]
	protected bool canCastSpell
	{
		[Token(Token = "0x6000DA3")]
		[Address(RVA = "0xC549BC", Offset = "0xC549BC", VA = "0xC549BC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000DA4")]
	[Address(RVA = "0xC54B20", Offset = "0xC54B20", VA = "0xC54B20")]
	public bool canCastSpellSpecific(int num)
	{
		return default(bool);
	}

	[Token(Token = "0x6000DA5")]
	[Address(RVA = "0xC4BAC0", Offset = "0xC4BAC0", VA = "0xC4BAC0")]
	public void increaseTurnCDCounters()
	{
	}

	[Token(Token = "0x6000DA6")]
	[Address(RVA = "0xC54C0C", Offset = "0xC54C0C", VA = "0xC54C0C")]
	public void increaseAbilityTimers(int amt)
	{
	}

	[Token(Token = "0x6000DA7")]
	[Address(RVA = "0xC54CEC", Offset = "0xC54CEC", VA = "0xC54CEC")]
	public void swapToDefensiveSpell()
	{
	}

	[Token(Token = "0x6000DA8")]
	[Address(RVA = "0xC54DC0", Offset = "0xC54DC0", VA = "0xC54DC0")]
	public void swapFromDefensiveSpell()
	{
	}

	[Token(Token = "0x6000DA9")]
	[Address(RVA = "0xC54E90", Offset = "0xC54E90", VA = "0xC54E90")]
	private void Start()
	{
	}

	[Token(Token = "0x6000DAA")]
	[Address(RVA = "0xC55A5C", Offset = "0xC55A5C", VA = "0xC55A5C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000DAB")]
	[Address(RVA = "0xC55AB4", Offset = "0xC55AB4", VA = "0xC55AB4")]
	private int getThumbPadDirection(HandCaster parent)
	{
		return default(int);
	}

	[Token(Token = "0x6000DAC")]
	[Address(RVA = "0xC55BE0", Offset = "0xC55BE0", VA = "0xC55BE0")]
	private void checkIfTurnOver()
	{
	}

	[Token(Token = "0x6000DAD")]
	[Address(RVA = "0xC55CF4", Offset = "0xC55CF4", VA = "0xC55CF4")]
	public void switchToSummoning()
	{
	}

	[Token(Token = "0x6000DAE")]
	[Address(RVA = "0xC55D50", Offset = "0xC55D50", VA = "0xC55D50")]
	public bool checkForIdle()
	{
		return default(bool);
	}

	[Token(Token = "0x6000DAF")]
	[Address(RVA = "0xC55DA8", Offset = "0xC55DA8", VA = "0xC55DA8")]
	public void forceDropWeapon()
	{
	}

	[Token(Token = "0x6000DB0")]
	[Address(RVA = "0xC55DB4", Offset = "0xC55DB4", VA = "0xC55DB4")]
	public HandCaster()
	{
	}
}
[Token(Token = "0x200022A")]
public class OverworldAttack : MonoBehaviour
{
	[Token(Token = "0x20007C9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B8924", Offset = "0x8B8924")]
	private sealed class <disableCollider>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40026C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40026C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40026C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OverworldAttack <>4__this;

		[Token(Token = "0x17000611")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002DE5")]
			[Address(RVA = "0xAF9F6C", Offset = "0xAF9F6C", VA = "0xAF9F6C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000612")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002DE7")]
			[Address(RVA = "0xAF9FD4", Offset = "0xAF9FD4", VA = "0xAF9FD4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002DE2")]
		[Address(RVA = "0xAF9E7C", Offset = "0xAF9E7C", VA = "0xAF9E7C")]
		[DebuggerHidden]
		public <disableCollider>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x6002DE3")]
		[Address(RVA = "0xAF9EB0", Offset = "0xAF9EB0", VA = "0xAF9EB0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002DE4")]
		[Address(RVA = "0xAF9EB4", Offset = "0xAF9EB4", VA = "0xAF9EB4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002DE6")]
		[Address(RVA = "0xAF9F74", Offset = "0xAF9F74", VA = "0xAF9F74", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000DD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject thirdPersonPlayer;

	[Token(Token = "0x4000DD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Collider col;

	[Token(Token = "0x6000DB1")]
	[Address(RVA = "0xAF9D14", Offset = "0xAF9D14", VA = "0xAF9D14")]
	private void Start()
	{
	}

	[Token(Token = "0x6000DB2")]
	[Address(RVA = "0xAF9DB0", Offset = "0xAF9DB0", VA = "0xAF9DB0")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000DB3")]
	[Address(RVA = "0xAF9D40", Offset = "0xAF9D40", VA = "0xAF9D40")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C86C0", Offset = "0x8C86C0")]
	private IEnumerator disableCollider()
	{
		return null;
	}

	[Token(Token = "0x6000DB4")]
	[Address(RVA = "0xAF9EA8", Offset = "0xAF9EA8", VA = "0xAF9EA8")]
	public OverworldAttack()
	{
	}
}
[Token(Token = "0x200022B")]
public class PlayerControllerArcaxer : MonoBehaviour
{
	[Token(Token = "0x20007CA")]
	public delegate void PlayerCritEventHandler(int damage);

	[Token(Token = "0x20007CB")]
	public delegate void PlayerDamagedEventHandler();

	[Token(Token = "0x20007CC")]
	public delegate void PlayerLowHealthEventHandler();

	[Token(Token = "0x20007CD")]
	public delegate void PlayerAdrenalineMaxedEventHandler();

	[Token(Token = "0x20007CE")]
	public enum SummonState
	{
		[Token(Token = "0x40026C5")]
		idle,
		[Token(Token = "0x40026C6")]
		available,
		[Token(Token = "0x40026C7")]
		summoning,
		[Token(Token = "0x40026C8")]
		summoned
	}

	[Token(Token = "0x20007CF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B8934", Offset = "0x8B8934")]
	private sealed class <resetInvincibilityTimer>d__84 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40026C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40026CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40026CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float time;

		[Token(Token = "0x40026CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public PlayerControllerArcaxer <>4__this;

		[Token(Token = "0x40026CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float level;

		[Token(Token = "0x17000613")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002DFB")]
			[Address(RVA = "0xB6C0CC", Offset = "0xB6C0CC", VA = "0xB6C0CC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000614")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002DFD")]
			[Address(RVA = "0xB6C134", Offset = "0xB6C134", VA = "0xB6C134", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002DF8")]
		[Address(RVA = "0xB696EC", Offset = "0xB696EC", VA = "0xB696EC")]
		[DebuggerHidden]
		public <resetInvincibilityTimer>d__84(int <>1__state)
		{
		}

		[Token(Token = "0x6002DF9")]
		[Address(RVA = "0xB6C00C", Offset = "0xB6C00C", VA = "0xB6C00C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002DFA")]
		[Address(RVA = "0xB6C010", Offset = "0xB6C010", VA = "0xB6C010", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002DFC")]
		[Address(RVA = "0xB6C0D4", Offset = "0xB6C0D4", VA = "0xB6C0D4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20007D0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B8944", Offset = "0x8B8944")]
	private sealed class <killPlayerTimer>d__88 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40026CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40026CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40026D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PlayerControllerArcaxer <>4__this;

		[Token(Token = "0x17000615")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002E01")]
			[Address(RVA = "0xB6BDB8", Offset = "0xB6BDB8", VA = "0xB6BDB8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000616")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002E03")]
			[Address(RVA = "0xB6BE20", Offset = "0xB6BE20", VA = "0xB6BE20", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002DFE")]
		[Address(RVA = "0xB6A1C0", Offset = "0xB6A1C0", VA = "0xB6A1C0")]
		[DebuggerHidden]
		public <killPlayerTimer>d__88(int <>1__state)
		{
		}

		[Token(Token = "0x6002DFF")]
		[Address(RVA = "0xB6BB7C", Offset = "0xB6BB7C", VA = "0xB6BB7C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002E00")]
		[Address(RVA = "0xB6BB80", Offset = "0xB6BB80", VA = "0xB6BB80", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002E02")]
		[Address(RVA = "0xB6BDC0", Offset = "0xB6BDC0", VA = "0xB6BDC0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20007D1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B8954", Offset = "0x8B8954")]
	private sealed class <playNotificationMessageTimer>d__92 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40026D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40026D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40026D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PlayerControllerArcaxer <>4__this;

		[Token(Token = "0x40026D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string text;

		[Token(Token = "0x17000617")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002E07")]
			[Address(RVA = "0xB6BF9C", Offset = "0xB6BF9C", VA = "0xB6BF9C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000618")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002E09")]
			[Address(RVA = "0xB6C004", Offset = "0xB6C004", VA = "0xB6C004", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002E04")]
		[Address(RVA = "0xB6A2F4", Offset = "0xB6A2F4", VA = "0xB6A2F4")]
		[DebuggerHidden]
		public <playNotificationMessageTimer>d__92(int <>1__state)
		{
		}

		[Token(Token = "0x6002E05")]
		[Address(RVA = "0xB6BE28", Offset = "0xB6BE28", VA = "0xB6BE28", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002E06")]
		[Address(RVA = "0xB6BE2C", Offset = "0xB6BE2C", VA = "0xB6BE2C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002E08")]
		[Address(RVA = "0xB6BFA4", Offset = "0xB6BFA4", VA = "0xB6BFA4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20007D2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B8964", Offset = "0x8B8964")]
	private sealed class <>c__DisplayClass97_0
	{
		[Token(Token = "0x40026D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public PlayerControllerArcaxer <>4__this;

		[Token(Token = "0x40026D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AsyncOperationHandle<string> op1;

		[Token(Token = "0x6002E0A")]
		[Address(RVA = "0xB6A778", Offset = "0xB6A778", VA = "0xB6A778")]
		public <>c__DisplayClass97_0()
		{
		}

		[Token(Token = "0x6002E0B")]
		[Address(RVA = "0xB6B6C0", Offset = "0xB6B6C0", VA = "0xB6B6C0")]
		internal void <translateAndSetStringPhaseText>b__0(AsyncOperationHandle<string> op)
		{
		}
	}

	[Token(Token = "0x20007D3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B8974", Offset = "0x8B8974")]
	private sealed class <>c__DisplayClass98_0
	{
		[Token(Token = "0x40026D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public PlayerControllerArcaxer <>4__this;

		[Token(Token = "0x40026D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AsyncOperationHandle<string> op1;

		[Token(Token = "0x6002E0C")]
		[Address(RVA = "0xB6AA68", Offset = "0xB6AA68", VA = "0xB6AA68")]
		public <>c__DisplayClass98_0()
		{
		}

		[Token(Token = "0x6002E0D")]
		[Address(RVA = "0xB6B728", Offset = "0xB6B728", VA = "0xB6B728")]
		internal void <translateAndSetStringNotification>b__0(AsyncOperationHandle<string> op)
		{
		}
	}

	[Token(Token = "0x20007D4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B8984", Offset = "0x8B8984")]
	private sealed class <buffTextTimer>d__106 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40026D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40026DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40026DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<string> strings;

		[Token(Token = "0x40026DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public PlayerControllerArcaxer <>4__this;

		[Token(Token = "0x40026DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<string>.Enumerator <>7__wrap1;

		[Token(Token = "0x17000619")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002E12")]
			[Address(RVA = "0xB6BB0C", Offset = "0xB6BB0C", VA = "0xB6BB0C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700061A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002E14")]
			[Address(RVA = "0xB6BB74", Offset = "0xB6BB74", VA = "0xB6BB74", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002E0E")]
		[Address(RVA = "0xB6B59C", Offset = "0xB6B59C", VA = "0xB6B59C")]
		[DebuggerHidden]
		public <buffTextTimer>d__106(int <>1__state)
		{
		}

		[Token(Token = "0x6002E0F")]
		[Address(RVA = "0xB6B7A0", Offset = "0xB6B7A0", VA = "0xB6B7A0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002E10")]
		[Address(RVA = "0xB6B824", Offset = "0xB6B824", VA = "0xB6B824", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002E11")]
		[Address(RVA = "0xB6B7CC", Offset = "0xB6B7CC", VA = "0xB6B7CC")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x6002E13")]
		[Address(RVA = "0xB6BB14", Offset = "0xB6BB14", VA = "0xB6BB14", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000DD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int maxHealth;

	[Token(Token = "0x4000DD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private int _currentAP;

	[Token(Token = "0x4000DD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int currentHype;

	[Token(Token = "0x4000DD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int maxHype;

	[Token(Token = "0x4000DD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int deathSaves;

	[Token(Token = "0x4000DD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float maxAdrenaline;

	[Token(Token = "0x4000DD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float _currentAdrenaline;

	[Token(Token = "0x4000DD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	protected int _healthPoints;

	[Token(Token = "0x4000DDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool isDead;

	[Token(Token = "0x4000DDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public int maxAp;

	[Token(Token = "0x4000DDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int spellsFiredThisBattle;

	[Token(Token = "0x4000DDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private bool cheatDamage;

	[Token(Token = "0x4000DDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
	public bool disableBackTeleport;

	[Token(Token = "0x4000DDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[HideInInspector]
	public PlayerStats playerStats;

	[Token(Token = "0x4000DE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[HideInInspector]
	public bool isTeleported;

	[Token(Token = "0x4000DE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BC8B0", Offset = "0x8BC8B0")]
	public UIBar healthBar;

	[Token(Token = "0x4000DE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public UIBar APBar;

	[Token(Token = "0x4000DE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public UIBar adrenalineBar;

	[Token(Token = "0x4000DE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Text phaseText;

	[Token(Token = "0x4000DE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Text buffText;

	[Token(Token = "0x4000DE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject damageText;

	[Token(Token = "0x4000DE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GameObject healText;

	[Token(Token = "0x4000DE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public GameObject damageTextCrit;

	[Token(Token = "0x4000DE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public GameObject infoTextEnemy;

	[Token(Token = "0x4000DEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Animator fadeAnim;

	[Token(Token = "0x4000DEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public FadeMaterial fadeToBlack;

	[Token(Token = "0x4000DEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public UIHud uiHUD;

	[Token(Token = "0x4000DED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Image fullScreenColor;

	[Token(Token = "0x4000DEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Transform infoCanvasTrans;

	[Token(Token = "0x4000DEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public GameObject infoCanvas;

	[Token(Token = "0x4000DF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public UIBattleResults UIResults;

	[Token(Token = "0x4000DF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public GameObject playHUD;

	[Token(Token = "0x4000DF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public GameObject cam;

	[Token(Token = "0x4000DF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public GameObject UIInfoCanvas;

	[Token(Token = "0x4000DF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public GameObject deathBlinders;

	[Token(Token = "0x4000DF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public HaxChangeCard changeCardEffect;

	[Token(Token = "0x4000DF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BC8E8", Offset = "0x8BC8E8")]
	public HandCaster leftHand;

	[Token(Token = "0x4000DF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public HandCaster rightHand;

	[Token(Token = "0x4000DF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public Material handNormal;

	[Token(Token = "0x4000DF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public Material handCharged;

	[Token(Token = "0x4000DFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BC920", Offset = "0x8BC920")]
	public GameObject maxAdrenalineParticle;

	[Token(Token = "0x4000DFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BC998", Offset = "0x8BC998")]
	public List<BattleBuff> activeBuffs;

	[Token(Token = "0x4000E00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public SummonState summonState;

	[Token(Token = "0x4000E01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
	public bool hasProjectileReflect;

	[Token(Token = "0x4000E02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private float invincibilityTimeLevel;

	[Token(Token = "0x4000E03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
	private float invincibilityTimer;

	[Token(Token = "0x4000E04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private int defenseFloorMod;

	[Token(Token = "0x4000E05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
	public bool frenziedCasting;

	[Token(Token = "0x4000E06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x165")]
	public bool reflectProjectiles;

	[Token(Token = "0x4000E07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public int adrenalineModifier;

	[Token(Token = "0x4000E08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static PlayerControllerArcaxer instance;

	[Token(Token = "0x170000D9")]
	public int healthpoints
	{
		[Token(Token = "0x6000DB5")]
		[Address(RVA = "0xB6806C", Offset = "0xB6806C", VA = "0xB6806C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000DB6")]
		[Address(RVA = "0xB68074", Offset = "0xB68074", VA = "0xB68074")]
		set
		{
		}
	}

	[Token(Token = "0x170000DA")]
	public int currentAp
	{
		[Token(Token = "0x6000DB7")]
		[Address(RVA = "0xB68154", Offset = "0xB68154", VA = "0xB68154")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000DB8")]
		[Address(RVA = "0xB6815C", Offset = "0xB6815C", VA = "0xB6815C")]
		set
		{
		}
	}

	[Token(Token = "0x170000DB")]
	public float currentAdrenaline
	{
		[Token(Token = "0x6000DB9")]
		[Address(RVA = "0xB681B0", Offset = "0xB681B0", VA = "0xB681B0")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000DBA")]
		[Address(RVA = "0xB681B8", Offset = "0xB681B8", VA = "0xB681B8")]
		set
		{
		}
	}

	[Token(Token = "0x170000DC")]
	public UnityEngine.Vector3 playerPosition
	{
		[Token(Token = "0x6000DC3")]
		[Address(RVA = "0xB688D4", Offset = "0xB688D4", VA = "0xB688D4")]
		get
		{
			return default(UnityEngine.Vector3);
		}
	}

	[Token(Token = "0x14000030")]
	public event PlayerCritEventHandler OnPlayerCrit
	{
		[Token(Token = "0x6000DBB")]
		[Address(RVA = "0xB68394", Offset = "0xB68394", VA = "0xB68394")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C8724", Offset = "0x8C8724")]
		add
		{
		}
		[Token(Token = "0x6000DBC")]
		[Address(RVA = "0xB6843C", Offset = "0xB6843C", VA = "0xB6843C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C8734", Offset = "0x8C8734")]
		remove
		{
		}
	}

	[Token(Token = "0x14000031")]
	public event PlayerDamagedEventHandler OnPlayerDamaged
	{
		[Token(Token = "0x6000DBD")]
		[Address(RVA = "0xB684E4", Offset = "0xB684E4", VA = "0xB684E4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C8744", Offset = "0x8C8744")]
		add
		{
		}
		[Token(Token = "0x6000DBE")]
		[Address(RVA = "0xB6858C", Offset = "0xB6858C", VA = "0xB6858C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C8754", Offset = "0x8C8754")]
		remove
		{
		}
	}

	[Token(Token = "0x14000032")]
	public event PlayerLowHealthEventHandler OnPlayerLow
	{
		[Token(Token = "0x6000DBF")]
		[Address(RVA = "0xB68634", Offset = "0xB68634", VA = "0xB68634")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C8764", Offset = "0x8C8764")]
		add
		{
		}
		[Token(Token = "0x6000DC0")]
		[Address(RVA = "0xB686DC", Offset = "0xB686DC", VA = "0xB686DC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C8774", Offset = "0x8C8774")]
		remove
		{
		}
	}

	[Token(Token = "0x14000033")]
	public event PlayerAdrenalineMaxedEventHandler OnAdrenalineMaxed
	{
		[Token(Token = "0x6000DC1")]
		[Address(RVA = "0xB68784", Offset = "0xB68784", VA = "0xB68784")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C8784", Offset = "0x8C8784")]
		add
		{
		}
		[Token(Token = "0x6000DC2")]
		[Address(RVA = "0xB6882C", Offset = "0xB6882C", VA = "0xB6882C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C8794", Offset = "0x8C8794")]
		remove
		{
		}
	}

	[Token(Token = "0x6000DC4")]
	[Address(RVA = "0xB68968", Offset = "0xB68968", VA = "0xB68968")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000DC5")]
	[Address(RVA = "0xB689BC", Offset = "0xB689BC", VA = "0xB689BC")]
	public void notifyCrit(int amount)
	{
	}

	[Token(Token = "0x6000DC6")]
	[Address(RVA = "0xB68C2C", Offset = "0xB68C2C", VA = "0xB68C2C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000DC7")]
	[Address(RVA = "0xB694D4", Offset = "0xB694D4", VA = "0xB694D4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000DC8")]
	[Address(RVA = "0xB6962C", Offset = "0xB6962C", VA = "0xB6962C")]
	public void makeInvincibleForTime(float time)
	{
	}

	[Token(Token = "0x6000DC9")]
	[Address(RVA = "0xB69664", Offset = "0xB69664", VA = "0xB69664")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C87A4", Offset = "0x8C87A4")]
	private IEnumerator resetInvincibilityTimer(float time, float level)
	{
		return null;
	}

	[Token(Token = "0x6000DCA")]
	[Address(RVA = "0xB69718", Offset = "0xB69718", VA = "0xB69718")]
	public void damagePlayer(int damage, bool isTrueDamage = false, bool hapticFeedback = true)
	{
	}

	[Token(Token = "0x6000DCB")]
	[Address(RVA = "0xB6A0A8", Offset = "0xB6A0A8", VA = "0xB6A0A8")]
	public void healPlayer(int health)
	{
	}

	[Token(Token = "0x6000DCC")]
	[Address(RVA = "0xB68128", Offset = "0xB68128", VA = "0xB68128")]
	public void killPlayer()
	{
	}

	[Token(Token = "0x6000DCD")]
	[Address(RVA = "0xB6A150", Offset = "0xB6A150", VA = "0xB6A150")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C8808", Offset = "0x8C8808")]
	private IEnumerator killPlayerTimer()
	{
		return null;
	}

	[Token(Token = "0x6000DCE")]
	[Address(RVA = "0xB68170", Offset = "0xB68170", VA = "0xB68170")]
	public void updateApBar()
	{
	}

	[Token(Token = "0x6000DCF")]
	[Address(RVA = "0xB6A1EC", Offset = "0xB6A1EC", VA = "0xB6A1EC")]
	public void updateAp(int amount)
	{
	}

	[Token(Token = "0x6000DD0")]
	[Address(RVA = "0xB6A24C", Offset = "0xB6A24C", VA = "0xB6A24C")]
	public void playNotificationMessage(string text)
	{
	}

	[Token(Token = "0x6000DD1")]
	[Address(RVA = "0xB6A278", Offset = "0xB6A278", VA = "0xB6A278")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C886C", Offset = "0x8C886C")]
	private IEnumerator playNotificationMessageTimer(string text)
	{
		return null;
	}

	[Token(Token = "0x6000DD2")]
	[Address(RVA = "0xB6A320", Offset = "0xB6A320", VA = "0xB6A320")]
	private void hideBattleBars()
	{
	}

	[Token(Token = "0x6000DD3")]
	[Address(RVA = "0xB6A3B0", Offset = "0xB6A3B0", VA = "0xB6A3B0")]
	public void giveAdrenaline(float amt)
	{
	}

	[Token(Token = "0x6000DD4")]
	[Address(RVA = "0xB6835C", Offset = "0xB6835C", VA = "0xB6835C")]
	public void updateAdrenalineBar()
	{
	}

	[Token(Token = "0x6000DD5")]
	[Address(RVA = "0xB6A3F8", Offset = "0xB6A3F8", VA = "0xB6A3F8")]
	public void giveAdrenalineRush()
	{
	}

	[Token(Token = "0x6000DD6")]
	[Address(RVA = "0xB6A53C", Offset = "0xB6A53C", VA = "0xB6A53C")]
	public void translateAndSetStringPhaseText(string s)
	{
	}

	[Token(Token = "0x6000DD7")]
	[Address(RVA = "0xB6A81C", Offset = "0xB6A81C", VA = "0xB6A81C")]
	public void translateAndSetStringNotification(string s)
	{
	}

	[Token(Token = "0x6000DD8")]
	[Address(RVA = "0xB6A780", Offset = "0xB6A780", VA = "0xB6A780")]
	private void setPhaseText(string s)
	{
	}

	[Token(Token = "0x6000DD9")]
	[Address(RVA = "0xB6821C", Offset = "0xB6821C", VA = "0xB6821C")]
	public void makeSummonAvailable()
	{
	}

	[Token(Token = "0x6000DDA")]
	[Address(RVA = "0xB6AC7C", Offset = "0xB6AC7C", VA = "0xB6AC7C")]
	public void tickDownBuffs()
	{
	}

	[Token(Token = "0x6000DDB")]
	[Address(RVA = "0xB6AFD4", Offset = "0xB6AFD4", VA = "0xB6AFD4")]
	public bool hasBuff(BattleBuff buff)
	{
		return default(bool);
	}

	[Token(Token = "0x6000DDC")]
	[Address(RVA = "0xB6B0FC", Offset = "0xB6B0FC", VA = "0xB6B0FC")]
	public void addBuff(BattleBuff buff)
	{
	}

	[Token(Token = "0x6000DDD")]
	[Address(RVA = "0xB6B284", Offset = "0xB6B284", VA = "0xB6B284")]
	public void removeBuff(BattleBuff buff)
	{
	}

	[Token(Token = "0x6000DDE")]
	[Address(RVA = "0xB6B3AC", Offset = "0xB6B3AC", VA = "0xB6B3AC")]
	public void removeBuffs(List<BattleBuff> buffs)
	{
	}

	[Token(Token = "0x6000DDF")]
	[Address(RVA = "0xB6AF58", Offset = "0xB6AF58", VA = "0xB6AF58")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C88D0", Offset = "0x8C88D0")]
	private IEnumerator buffTextTimer(List<string> strings)
	{
		return null;
	}

	[Token(Token = "0x6000DE0")]
	[Address(RVA = "0xB69474", Offset = "0xB69474", VA = "0xB69474")]
	public void centerInfoCanvas()
	{
	}

	[Token(Token = "0x6000DE1")]
	[Address(RVA = "0xB6B5C8", Offset = "0xB6B5C8", VA = "0xB6B5C8")]
	public void centerResultsCanvas()
	{
	}

	[Token(Token = "0x6000DE2")]
	[Address(RVA = "0xB6B628", Offset = "0xB6B628", VA = "0xB6B628")]
	public PlayerControllerArcaxer()
	{
	}
}
[Serializable]
[Token(Token = "0x200022C")]
public class ArcaxerPlayerSettings
{
	[Token(Token = "0x4000E09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float worldYPosModifier;

	[Token(Token = "0x4000E0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float worldZPosModifier;

	[Token(Token = "0x4000E0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float worldXPosModifier;

	[Token(Token = "0x4000E0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool comfortModeOn;

	[Token(Token = "0x4000E0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float masterVolume;

	[Token(Token = "0x4000E0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float musicVolume;

	[Token(Token = "0x4000E0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float sfxVolume;

	[Token(Token = "0x4000E10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float voiceVolume;

	[Token(Token = "0x4000E11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float voiceAssistVolume;

	[Token(Token = "0x4000E12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool hapticFeedbackOn;

	[Token(Token = "0x4000E13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
	public bool mirrorCameraTurn;

	[Token(Token = "0x4000E14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x36")]
	public bool smoothTurn;

	[Token(Token = "0x4000E15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x37")]
	public bool leftHandMode;

	[Token(Token = "0x4000E16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int selectedLocale;

	[Token(Token = "0x6000DE3")]
	[Address(RVA = "0xBBF680", Offset = "0xBBF680", VA = "0xBBF680")]
	public ArcaxerPlayerSettings()
	{
	}
}
[Token(Token = "0x200022D")]
public class SpellManager : MonoBehaviour
{
	[Token(Token = "0x20007D5")]
	public enum spellName
	{
		[Token(Token = "0x40026DF")]
		MagicMissile,
		[Token(Token = "0x40026E0")]
		Arcanado
	}

	[Token(Token = "0x4000E17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject magicMissilePrefab;

	[Token(Token = "0x4000E18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject fireBallPrefab;

	[Token(Token = "0x4000E19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static SpellManager instance;

	[Token(Token = "0x6000DE4")]
	[Address(RVA = "0xB217DC", Offset = "0xB217DC", VA = "0xB217DC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000DE5")]
	[Address(RVA = "0xB21830", Offset = "0xB21830", VA = "0xB21830")]
	private void Update()
	{
	}

	[Token(Token = "0x6000DE6")]
	[Address(RVA = "0xB21834", Offset = "0xB21834", VA = "0xB21834")]
	public GameObject getSpellEffect(spellName sp)
	{
		return null;
	}

	[Token(Token = "0x6000DE7")]
	[Address(RVA = "0xB218C4", Offset = "0xB218C4", VA = "0xB218C4")]
	public GameObject getSpellMissile(spellName sp)
	{
		return null;
	}

	[Token(Token = "0x6000DE8")]
	[Address(RVA = "0xB21954", Offset = "0xB21954", VA = "0xB21954")]
	public SpellManager()
	{
	}
}
[Token(Token = "0x200022E")]
public class Arcanado : PlayerSpell
{
	[Token(Token = "0x20007D6")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B8994", Offset = "0x8B8994")]
	private sealed class <propelSpell>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40026E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40026E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40026E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Arcanado <>4__this;

		[Token(Token = "0x40026E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Rigidbody <spellRB>5__2;

		[Token(Token = "0x1700061B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002E18")]
			[Address(RVA = "0xBBE7F4", Offset = "0xBBE7F4", VA = "0xBBE7F4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700061C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002E1A")]
			[Address(RVA = "0xBBE85C", Offset = "0xBBE85C", VA = "0xBBE85C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002E15")]
		[Address(RVA = "0xBBE1E8", Offset = "0xBBE1E8", VA = "0xBBE1E8")]
		[DebuggerHidden]
		public <propelSpell>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x6002E16")]
		[Address(RVA = "0xBBE5E4", Offset = "0xBBE5E4", VA = "0xBBE5E4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002E17")]
		[Address(RVA = "0xBBE5E8", Offset = "0xBBE5E8", VA = "0xBBE5E8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002E19")]
		[Address(RVA = "0xBBE7FC", Offset = "0xBBE7FC", VA = "0xBBE7FC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000E1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	public int damage;

	[Token(Token = "0x4000E1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public float speed;

	[Token(Token = "0x4000E1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	private float curveMultiplier;

	[Token(Token = "0x4000E1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private bool goingRight;

	[Token(Token = "0x4000E1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD9")]
	public bool canUnLink;

	[Token(Token = "0x170000DD")]
	public override string spellToolTip
	{
		[Token(Token = "0x6000DE9")]
		[Address(RVA = "0xBBDA24", Offset = "0xBBDA24", VA = "0xBBDA24", Slot = "5")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000DEA")]
	[Address(RVA = "0xBBDF2C", Offset = "0xBBDF2C", VA = "0xBBDF2C", Slot = "6")]
	public override void castSpell(bool freeCast = false)
	{
	}

	[Token(Token = "0x6000DEB")]
	[Address(RVA = "0xBBE1B0", Offset = "0xBBE1B0", VA = "0xBBE1B0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000DEC")]
	[Address(RVA = "0xBBE140", Offset = "0xBBE140", VA = "0xBBE140")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C8934", Offset = "0x8C8934")]
	public IEnumerator propelSpell()
	{
		return null;
	}

	[Token(Token = "0x6000DED")]
	[Address(RVA = "0xBBE214", Offset = "0xBBE214", VA = "0xBBE214")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000DEE")]
	[Address(RVA = "0xBBE364", Offset = "0xBBE364", VA = "0xBBE364")]
	private void collideWithEnemy(EnemyParent ep)
	{
	}

	[Token(Token = "0x6000DEF")]
	[Address(RVA = "0xBBE4D8", Offset = "0xBBE4D8", VA = "0xBBE4D8")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000DF0")]
	[Address(RVA = "0xBBE5C4", Offset = "0xBBE5C4", VA = "0xBBE5C4")]
	public Arcanado()
	{
	}
}
[Token(Token = "0x200022F")]
public class ArcaneMissile : PlayerSpell
{
	[Token(Token = "0x20007D7")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B89A4", Offset = "0x8B89A4")]
	private sealed class <propelSpell>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40026E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40026E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40026E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ArcaneMissile <>4__this;

		[Token(Token = "0x40026E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Rigidbody <spellRB>5__2;

		[Token(Token = "0x1700061D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002E1E")]
			[Address(RVA = "0xBBF554", Offset = "0xBBF554", VA = "0xBBF554", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700061E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002E20")]
			[Address(RVA = "0xBBF5BC", Offset = "0xBBF5BC", VA = "0xBBF5BC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002E1B")]
		[Address(RVA = "0xBBEF50", Offset = "0xBBEF50", VA = "0xBBEF50")]
		[DebuggerHidden]
		public <propelSpell>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x6002E1C")]
		[Address(RVA = "0xBBF36C", Offset = "0xBBF36C", VA = "0xBBF36C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002E1D")]
		[Address(RVA = "0xBBF370", Offset = "0xBBF370", VA = "0xBBF370", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002E1F")]
		[Address(RVA = "0xBBF55C", Offset = "0xBBF55C", VA = "0xBBF55C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000E1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	public float speed;

	[Token(Token = "0x4000E20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public GameObject explosionGameobject;

	[Token(Token = "0x4000E21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public int damage;

	[Token(Token = "0x4000E22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	public bool bigSpell;

	[Token(Token = "0x170000DE")]
	public override string spellToolTip
	{
		[Token(Token = "0x6000DF1")]
		[Address(RVA = "0xBBE864", Offset = "0xBBE864", VA = "0xBBE864", Slot = "5")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000DF2")]
	[Address(RVA = "0xBBECF8", Offset = "0xBBECF8", VA = "0xBBECF8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000DF3")]
	[Address(RVA = "0xBBED30", Offset = "0xBBED30", VA = "0xBBED30", Slot = "6")]
	public override void castSpell(bool freeCast = false)
	{
	}

	[Token(Token = "0x6000DF4")]
	[Address(RVA = "0xBBEEE0", Offset = "0xBBEEE0", VA = "0xBBEEE0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C8998", Offset = "0x8C8998")]
	public IEnumerator propelSpell()
	{
		return null;
	}

	[Token(Token = "0x6000DF5")]
	[Address(RVA = "0xBBEF7C", Offset = "0xBBEF7C", VA = "0xBBEF7C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000DF6")]
	[Address(RVA = "0xBBF0A8", Offset = "0xBBF0A8", VA = "0xBBF0A8")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000DF7")]
	[Address(RVA = "0xBBF35C", Offset = "0xBBF35C", VA = "0xBBF35C")]
	public ArcaneMissile()
	{
	}
}
[Token(Token = "0x2000230")]
public class AttackBuff : BattleBuff
{
	[Token(Token = "0x6000DF8")]
	[Address(RVA = "0xBBF69C", Offset = "0xBBF69C", VA = "0xBBF69C", Slot = "4")]
	public override void applyBuff()
	{
	}

	[Token(Token = "0x6000DF9")]
	[Address(RVA = "0xBBF720", Offset = "0xBBF720", VA = "0xBBF720", Slot = "5")]
	public override void removeBuff()
	{
	}

	[Token(Token = "0x6000DFA")]
	[Address(RVA = "0xBBF7A4", Offset = "0xBBF7A4", VA = "0xBBF7A4")]
	public AttackBuff()
	{
	}
}
[Token(Token = "0x2000231")]
public abstract class BattleBuff : MonoBehaviour
{
	[Token(Token = "0x4000E23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string buffName;

	[Token(Token = "0x4000E24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int turnDuration;

	[Token(Token = "0x4000E25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[HideInInspector]
	public int turnsActive;

	[Token(Token = "0x4000E26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int potency;

	[Token(Token = "0x4000E27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Sprite icon;

	[Token(Token = "0x4000E28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool debuff;

	[Token(Token = "0x4000E29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	public bool useOnCast;

	[Token(Token = "0x4000E2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
	public bool useOnDamageSpell;

	[Token(Token = "0x4000E2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3B")]
	public bool hasApplied;

	[Token(Token = "0x4000E2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public bool hasRemoved;

	[Token(Token = "0x6000DFB")]
	public abstract void applyBuff();

	[Token(Token = "0x6000DFC")]
	public abstract void removeBuff();

	[Token(Token = "0x6000DFD")]
	[Address(RVA = "0xBBFA64", Offset = "0xBBFA64", VA = "0xBBFA64", Slot = "6")]
	public virtual void onceATurn()
	{
	}

	[Token(Token = "0x6000DFE")]
	[Address(RVA = "0xBBFA68", Offset = "0xBBFA68", VA = "0xBBFA68", Slot = "7")]
	public virtual void onCast()
	{
	}

	[Token(Token = "0x6000DFF")]
	[Address(RVA = "0xBBFA6C", Offset = "0xBBFA6C", VA = "0xBBFA6C", Slot = "8")]
	public virtual void onDamageSpell()
	{
	}

	[Token(Token = "0x6000E00")]
	[Address(RVA = "0xBBF7A8", Offset = "0xBBF7A8", VA = "0xBBF7A8")]
	protected BattleBuff()
	{
	}
}
[Token(Token = "0x2000232")]
public class BuffSpell : PlayerSpell
{
	[Token(Token = "0x4000E2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public BattleBuff battleBuff;

	[Token(Token = "0x4000E2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public string buffNotification;

	[Token(Token = "0x4000E2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public GameObject castEffect;

	[Token(Token = "0x6000E01")]
	[Address(RVA = "0xB036DC", Offset = "0xB036DC", VA = "0xB036DC", Slot = "6")]
	public override void castSpell(bool freeCast = false)
	{
	}

	[Token(Token = "0x6000E02")]
	[Address(RVA = "0xB0390C", Offset = "0xB0390C", VA = "0xB0390C")]
	public BuffSpell()
	{
	}
}
[Token(Token = "0x2000233")]
public class CritBuff : BattleBuff
{
	[Token(Token = "0x6000E03")]
	[Address(RVA = "0xB0ADF8", Offset = "0xB0ADF8", VA = "0xB0ADF8", Slot = "4")]
	public override void applyBuff()
	{
	}

	[Token(Token = "0x6000E04")]
	[Address(RVA = "0xB0AE6C", Offset = "0xB0AE6C", VA = "0xB0AE6C", Slot = "5")]
	public override void removeBuff()
	{
	}

	[Token(Token = "0x6000E05")]
	[Address(RVA = "0xB0AEE0", Offset = "0xB0AEE0", VA = "0xB0AEE0")]
	public CritBuff()
	{
	}
}
[Token(Token = "0x2000234")]
public class HealBuff : BattleBuff
{
	[Token(Token = "0x6000E06")]
	[Address(RVA = "0xAD4F50", Offset = "0xAD4F50", VA = "0xAD4F50", Slot = "4")]
	public override void applyBuff()
	{
	}

	[Token(Token = "0x6000E07")]
	[Address(RVA = "0xAD4FF4", Offset = "0xAD4FF4", VA = "0xAD4FF4", Slot = "5")]
	public override void removeBuff()
	{
	}

	[Token(Token = "0x6000E08")]
	[Address(RVA = "0xAD5098", Offset = "0xAD5098", VA = "0xAD5098", Slot = "6")]
	public override void onceATurn()
	{
	}

	[Token(Token = "0x6000E09")]
	[Address(RVA = "0xAD5144", Offset = "0xAD5144", VA = "0xAD5144")]
	public HealBuff()
	{
	}
}
[Token(Token = "0x2000235")]
public class OneCritBuff : BattleBuff
{
	[Token(Token = "0x20007D8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B89B4", Offset = "0x8B89B4")]
	private sealed class <waitToDestroy>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40026E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40026EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40026EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OneCritBuff <>4__this;

		[Token(Token = "0x1700061F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002E24")]
			[Address(RVA = "0xAF89D0", Offset = "0xAF89D0", VA = "0xAF89D0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000620")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002E26")]
			[Address(RVA = "0xAF8A38", Offset = "0xAF8A38", VA = "0xAF8A38", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002E21")]
		[Address(RVA = "0xAF88E0", Offset = "0xAF88E0", VA = "0xAF88E0")]
		[DebuggerHidden]
		public <waitToDestroy>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x6002E22")]
		[Address(RVA = "0xAF8914", Offset = "0xAF8914", VA = "0xAF8914", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002E23")]
		[Address(RVA = "0xAF8918", Offset = "0xAF8918", VA = "0xAF8918", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002E25")]
		[Address(RVA = "0xAF89D8", Offset = "0xAF89D8", VA = "0xAF89D8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x6000E0A")]
	[Address(RVA = "0xAF8790", Offset = "0xAF8790", VA = "0xAF8790", Slot = "4")]
	public override void applyBuff()
	{
	}

	[Token(Token = "0x6000E0B")]
	[Address(RVA = "0xAF87E4", Offset = "0xAF87E4", VA = "0xAF87E4", Slot = "5")]
	public override void removeBuff()
	{
	}

	[Token(Token = "0x6000E0C")]
	[Address(RVA = "0xAF8838", Offset = "0xAF8838", VA = "0xAF8838", Slot = "8")]
	public override void onDamageSpell()
	{
	}

	[Token(Token = "0x6000E0D")]
	[Address(RVA = "0xAF8870", Offset = "0xAF8870", VA = "0xAF8870")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C89FC", Offset = "0x8C89FC")]
	private IEnumerator waitToDestroy()
	{
		return null;
	}

	[Token(Token = "0x6000E0E")]
	[Address(RVA = "0xAF890C", Offset = "0xAF890C", VA = "0xAF890C")]
	public OneCritBuff()
	{
	}
}
[Token(Token = "0x2000236")]
public class PoisonDebuff : BattleBuff
{
	[Token(Token = "0x6000E0F")]
	[Address(RVA = "0xB742D0", Offset = "0xB742D0", VA = "0xB742D0", Slot = "4")]
	public override void applyBuff()
	{
	}

	[Token(Token = "0x6000E10")]
	[Address(RVA = "0xB74374", Offset = "0xB74374", VA = "0xB74374", Slot = "5")]
	public override void removeBuff()
	{
	}

	[Token(Token = "0x6000E11")]
	[Address(RVA = "0xB74418", Offset = "0xB74418", VA = "0xB74418", Slot = "6")]
	public override void onceATurn()
	{
	}

	[Token(Token = "0x6000E12")]
	[Address(RVA = "0xB744B8", Offset = "0xB744B8", VA = "0xB744B8")]
	public PoisonDebuff()
	{
	}
}
[Token(Token = "0x2000237")]
public class ShieldBuff : BattleBuff
{
	[Token(Token = "0x6000E13")]
	[Address(RVA = "0xD3D334", Offset = "0xD3D334", VA = "0xD3D334", Slot = "4")]
	public override void applyBuff()
	{
	}

	[Token(Token = "0x6000E14")]
	[Address(RVA = "0xD3D3B8", Offset = "0xD3D3B8", VA = "0xD3D3B8", Slot = "5")]
	public override void removeBuff()
	{
	}

	[Token(Token = "0x6000E15")]
	[Address(RVA = "0xD3D43C", Offset = "0xD3D43C", VA = "0xD3D43C")]
	public ShieldBuff()
	{
	}
}
[Token(Token = "0x2000238")]
public class ThornsBuff : BattleBuff
{
	[Token(Token = "0x4000E30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float powerMod;

	[Token(Token = "0x6000E16")]
	[Address(RVA = "0x1A58064", Offset = "0x1A58064", VA = "0x1A58064", Slot = "4")]
	public override void applyBuff()
	{
	}

	[Token(Token = "0x6000E17")]
	[Address(RVA = "0x1A58068", Offset = "0x1A58068", VA = "0x1A58068", Slot = "5")]
	public override void removeBuff()
	{
	}

	[Token(Token = "0x6000E18")]
	[Address(RVA = "0x1A5806C", Offset = "0x1A5806C", VA = "0x1A5806C")]
	public void dealThornDamage(EnemyParent enemy, float damage)
	{
	}

	[Token(Token = "0x6000E19")]
	[Address(RVA = "0x1A5809C", Offset = "0x1A5809C", VA = "0x1A5809C")]
	public ThornsBuff()
	{
	}
}
[Token(Token = "0x2000239")]
public class EarthBomb : PlayerSpell
{
	[Token(Token = "0x4000E31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	public int damage;

	[Token(Token = "0x4000E32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public float glitchDamageBonus;

	[Token(Token = "0x4000E33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	public float speed;

	[Token(Token = "0x4000E34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public EarthBombExplosion explosionGameobject;

	[Token(Token = "0x170000DF")]
	public override string spellToolTip
	{
		[Token(Token = "0x6000E1A")]
		[Address(RVA = "0xBF24B8", Offset = "0xBF24B8", VA = "0xBF24B8", Slot = "5")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000E1B")]
	[Address(RVA = "0xBF29CC", Offset = "0xBF29CC", VA = "0xBF29CC", Slot = "6")]
	public override void castSpell(bool freeCast = false)
	{
	}

	[Token(Token = "0x6000E1C")]
	[Address(RVA = "0xBF2BD4", Offset = "0xBF2BD4", VA = "0xBF2BD4")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000E1D")]
	[Address(RVA = "0xBF2DDC", Offset = "0xBF2DDC", VA = "0xBF2DDC")]
	public EarthBomb()
	{
	}
}
[Token(Token = "0x200023A")]
public class EarthBombExplosion : MonoBehaviour
{
	[Token(Token = "0x4000E35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int damage;

	[Token(Token = "0x4000E36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float adrenalineMod;

	[Token(Token = "0x4000E37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float chanceToInflict;

	[Token(Token = "0x4000E38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<EnemyParent> enemiesHit;

	[Token(Token = "0x6000E1E")]
	[Address(RVA = "0xBF2DEC", Offset = "0xBF2DEC", VA = "0xBF2DEC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E1F")]
	[Address(RVA = "0xBF2E6C", Offset = "0xBF2E6C", VA = "0xBF2E6C")]
	private void OnTriggerEnter(Collider collision)
	{
	}

	[Token(Token = "0x6000E20")]
	[Address(RVA = "0xBF3158", Offset = "0xBF3158", VA = "0xBF3158")]
	public EarthBombExplosion()
	{
	}
}
[Token(Token = "0x200023B")]
public class Earthquake : PlayerSpell
{
	[Token(Token = "0x4000E39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public GameObject particle;

	[Token(Token = "0x4000E3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public GlitchEffects glitch;

	[Token(Token = "0x4000E3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public bool canHitFlying;

	[Token(Token = "0x4000E3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE1")]
	public bool strikeRandomTarget;

	[Token(Token = "0x4000E3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	public float chanceToHurtSelf;

	[Token(Token = "0x4000E3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public int damage;

	[Token(Token = "0x170000E0")]
	public override string spellToolTip
	{
		[Token(Token = "0x6000E21")]
		[Address(RVA = "0xBF31D4", Offset = "0xBF31D4", VA = "0xBF31D4", Slot = "5")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000E22")]
	[Address(RVA = "0xBF36DC", Offset = "0xBF36DC", VA = "0xBF36DC", Slot = "6")]
	public override void castSpell(bool freeCast = false)
	{
	}

	[Token(Token = "0x6000E23")]
	[Address(RVA = "0xBF3E00", Offset = "0xBF3E00", VA = "0xBF3E00")]
	public Earthquake()
	{
	}
}
[Token(Token = "0x200023C")]
public class EraseTime : PlayerSpell
{
	[Token(Token = "0x6000E24")]
	[Address(RVA = "0xC4B9EC", Offset = "0xC4B9EC", VA = "0xC4B9EC", Slot = "4")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000E25")]
	[Address(RVA = "0xC4B9F4", Offset = "0xC4B9F4", VA = "0xC4B9F4", Slot = "6")]
	public override void castSpell(bool freeCast = false)
	{
	}

	[Token(Token = "0x6000E26")]
	[Address(RVA = "0xC4BE4C", Offset = "0xC4BE4C", VA = "0xC4BE4C")]
	public EraseTime()
	{
	}
}
[Token(Token = "0x200023D")]
public class Fireball : PlayerSpell
{
	[Token(Token = "0x20007D9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B89C4", Offset = "0x8B89C4")]
	private sealed class <propelSpell>d__27 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40026EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40026ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40026EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Fireball <>4__this;

		[Token(Token = "0x17000621")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002E2A")]
			[Address(RVA = "0xC4DB84", Offset = "0xC4DB84", VA = "0xC4DB84", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000622")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002E2C")]
			[Address(RVA = "0xC4DBEC", Offset = "0xC4DBEC", VA = "0xC4DBEC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002E27")]
		[Address(RVA = "0xC4CEB0", Offset = "0xC4CEB0", VA = "0xC4CEB0")]
		[DebuggerHidden]
		public <propelSpell>d__27(int <>1__state)
		{
		}

		[Token(Token = "0x6002E28")]
		[Address(RVA = "0xC4D9EC", Offset = "0xC4D9EC", VA = "0xC4D9EC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002E29")]
		[Address(RVA = "0xC4D9F0", Offset = "0xC4D9F0", VA = "0xC4D9F0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002E2B")]
		[Address(RVA = "0xC4DB8C", Offset = "0xC4DB8C", VA = "0xC4DB8C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000E3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	public int damage;

	[Token(Token = "0x4000E40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public float speed;

	[Token(Token = "0x4000E41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public GameObject explosionGameobject;

	[Token(Token = "0x4000E42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public GlitchEffects glitchBurn;

	[Token(Token = "0x4000E43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public Rigidbody rb;

	[Token(Token = "0x4000E44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public bool destroyOnCollision;

	[Token(Token = "0x4000E45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF1")]
	public bool destroyOnCollisionWithEnemy;

	[Token(Token = "0x4000E46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF2")]
	public bool destroyAfterTime;

	[Token(Token = "0x4000E47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF3")]
	public bool stopSeekOnCollision;

	[Token(Token = "0x4000E48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	public float timeToDestruct;

	[Token(Token = "0x4000E49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private float destructTimer;

	[Token(Token = "0x4000E4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	private UnityEngine.Vector3 castVector;

	[Token(Token = "0x4000E4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public bool boomerangVelocity;

	[Token(Token = "0x4000E4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	private float stackingBoomeringVelcoty;

	[Token(Token = "0x4000E4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public float glitchDamageBonus;

	[Token(Token = "0x4000E4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	public bool canUnLink;

	[Token(Token = "0x4000E4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x115")]
	public bool detonateDebuffs;

	[Token(Token = "0x4000E50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x116")]
	public bool increaseDamageStacksOnCollision;

	[Token(Token = "0x4000E51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public float backStabBonus;

	[Token(Token = "0x4000E52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
	private UnityEngine.Vector3 velocityBeforePhysicsUpdate;

	[Token(Token = "0x170000E1")]
	public override string spellToolTip
	{
		[Token(Token = "0x6000E27")]
		[Address(RVA = "0xC4C2B0", Offset = "0xC4C2B0", VA = "0xC4C2B0", Slot = "5")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000E28")]
	[Address(RVA = "0xC4C7C4", Offset = "0xC4C7C4", VA = "0xC4C7C4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000E29")]
	[Address(RVA = "0xC4CAD8", Offset = "0xC4CAD8", VA = "0xC4CAD8")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000E2A")]
	[Address(RVA = "0xC4C9D8", Offset = "0xC4C9D8", VA = "0xC4C9D8")]
	private void spawnImpact(UnityEngine.Vector3 position)
	{
	}

	[Token(Token = "0x6000E2B")]
	[Address(RVA = "0xC4CB6C", Offset = "0xC4CB6C", VA = "0xC4CB6C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000E2C")]
	[Address(RVA = "0xC4CBA4", Offset = "0xC4CBA4", VA = "0xC4CBA4", Slot = "6")]
	public override void castSpell(bool freeCast = false)
	{
	}

	[Token(Token = "0x6000E2D")]
	[Address(RVA = "0xC4CE40", Offset = "0xC4CE40", VA = "0xC4CE40")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C8A60", Offset = "0x8C8A60")]
	public IEnumerator propelSpell()
	{
		return null;
	}

	[Token(Token = "0x6000E2E")]
	[Address(RVA = "0xC4CEDC", Offset = "0xC4CEDC", VA = "0xC4CEDC")]
	private void collideWithEnemy(EnemyParent ep)
	{
	}

	[Token(Token = "0x6000E2F")]
	[Address(RVA = "0xC4D5AC", Offset = "0xC4D5AC", VA = "0xC4D5AC")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000E30")]
	[Address(RVA = "0xC4D774", Offset = "0xC4D774", VA = "0xC4D774")]
	private void OnTriggerEnter(Collider collision)
	{
	}

	[Token(Token = "0x6000E31")]
	[Address(RVA = "0xC4D9C8", Offset = "0xC4D9C8", VA = "0xC4D9C8")]
	public Fireball()
	{
	}
}
[Token(Token = "0x200023E")]
public class Firewall : PlayerSpell
{
	[Token(Token = "0x4000E53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	public float invincibleTime;

	[Token(Token = "0x6000E32")]
	[Address(RVA = "0xC4DBF4", Offset = "0xC4DBF4", VA = "0xC4DBF4", Slot = "6")]
	public override void castSpell(bool freeCast = false)
	{
	}

	[Token(Token = "0x6000E33")]
	[Address(RVA = "0xC4DD54", Offset = "0xC4DD54", VA = "0xC4DD54")]
	public Firewall()
	{
	}
}
[Token(Token = "0x200023F")]
public class GiveAdrenaline : PlayerSpell
{
	[Token(Token = "0x4000E54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	public int adrenalineBonus;

	[Token(Token = "0x6000E34")]
	[Address(RVA = "0xC51704", Offset = "0xC51704", VA = "0xC51704", Slot = "6")]
	public override void castSpell(bool freeCast = false)
	{
	}

	[Token(Token = "0x6000E35")]
	[Address(RVA = "0xC51804", Offset = "0xC51804", VA = "0xC51804")]
	public GiveAdrenaline()
	{
	}
}
[Token(Token = "0x2000240")]
public class HotSwap : PlayerSpell
{
	[Token(Token = "0x6000E36")]
	[Address(RVA = "0xAD5838", Offset = "0xAD5838", VA = "0xAD5838", Slot = "6")]
	public override void castSpell(bool freeCast = false)
	{
	}

	[Token(Token = "0x6000E37")]
	[Address(RVA = "0xAD5920", Offset = "0xAD5920", VA = "0xAD5920")]
	public HotSwap()
	{
	}
}
[Token(Token = "0x2000241")]
public class LightningBeamFade : MonoBehaviour
{
	[Token(Token = "0x4000E55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Color originColor;

	[Token(Token = "0x4000E56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Color alphaColor;

	[Token(Token = "0x4000E57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float timeToFade;

	[Token(Token = "0x6000E38")]
	[Address(RVA = "0xAE2350", Offset = "0xAE2350", VA = "0xAE2350")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E39")]
	[Address(RVA = "0xAE23D0", Offset = "0xAE23D0", VA = "0xAE23D0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000E3A")]
	[Address(RVA = "0xAE23D4", Offset = "0xAE23D4", VA = "0xAE23D4")]
	public LightningBeamFade()
	{
	}
}
[Token(Token = "0x2000242")]
public class LightningBolt : PlayerSpell
{
	[Token(Token = "0x4000E58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	public int damage;

	[Token(Token = "0x4000E59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public bool isCharging;

	[Token(Token = "0x4000E5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	public int chargeLevel;

	[Token(Token = "0x4000E5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public int chargeMax;

	[Token(Token = "0x4000E5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	public int chargeAccel;

	[Token(Token = "0x4000E5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public LightningCharge lCharge;

	[Token(Token = "0x4000E5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public LineRenderer LightningBeam;

	[Token(Token = "0x4000E5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public GameObject hitEnemy;

	[Token(Token = "0x4000E60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private bool perfectCharge;

	[Token(Token = "0x170000E2")]
	public override string spellToolTip
	{
		[Token(Token = "0x6000E3C")]
		[Address(RVA = "0xAE2444", Offset = "0xAE2444", VA = "0xAE2444", Slot = "5")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000E3B")]
	[Address(RVA = "0xAE23E4", Offset = "0xAE23E4", VA = "0xAE23E4", Slot = "7")]
	public override void OnInstantiate()
	{
	}

	[Token(Token = "0x6000E3D")]
	[Address(RVA = "0xAE28B4", Offset = "0xAE28B4", VA = "0xAE28B4", Slot = "6")]
	public override void castSpell(bool freeCast = false)
	{
	}

	[Token(Token = "0x6000E3E")]
	[Address(RVA = "0xAE2E2C", Offset = "0xAE2E2C", VA = "0xAE2E2C")]
	public void chargingBolt()
	{
	}

	[Token(Token = "0x6000E3F")]
	[Address(RVA = "0xAE2C30", Offset = "0xAE2C30", VA = "0xAE2C30")]
	public GameObject SelectClosestTarget()
	{
		return null;
	}

	[Token(Token = "0x6000E40")]
	[Address(RVA = "0xAE2E48", Offset = "0xAE2E48", VA = "0xAE2E48")]
	private void Update()
	{
	}

	[Token(Token = "0x6000E41")]
	[Address(RVA = "0xAE2F78", Offset = "0xAE2F78", VA = "0xAE2F78")]
	public LightningBolt()
	{
	}
}
[Token(Token = "0x2000243")]
public class LightningCharge : MonoBehaviour
{
	[Token(Token = "0x4000E61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int chargeTime;

	[Token(Token = "0x6000E42")]
	[Address(RVA = "0xAE2F8C", Offset = "0xAE2F8C", VA = "0xAE2F8C")]
	private void OnInstantiate()
	{
	}

	[Token(Token = "0x6000E43")]
	[Address(RVA = "0xAE2F94", Offset = "0xAE2F94", VA = "0xAE2F94")]
	private void Update()
	{
	}

	[Token(Token = "0x6000E44")]
	[Address(RVA = "0xAE2FA4", Offset = "0xAE2FA4", VA = "0xAE2FA4")]
	public LightningCharge()
	{
	}
}
[Token(Token = "0x2000244")]
public abstract class PlayerSpell : MonoBehaviour
{
	[Token(Token = "0x20007DA")]
	public class DamageEvent : UnityEvent<int, bool>
	{
		[Token(Token = "0x6002E2D")]
		[Address(RVA = "0xB70444", Offset = "0xB70444", VA = "0xB70444")]
		public DamageEvent()
		{
		}
	}

	[Token(Token = "0x20007DB")]
	public enum SpellType
	{
		[Token(Token = "0x40026F0")]
		Damage,
		[Token(Token = "0x40026F1")]
		Buff,
		[Token(Token = "0x40026F2")]
		Consumable,
		[Token(Token = "0x40026F3")]
		Summon,
		[Token(Token = "0x40026F4")]
		Defensive
	}

	[Token(Token = "0x20007DC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B89D4", Offset = "0x8B89D4")]
	private sealed class <>c__DisplayClass32_0
	{
		[Token(Token = "0x40026F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string textToChange;

		[Token(Token = "0x6002E2E")]
		[Address(RVA = "0xB6F450", Offset = "0xB6F450", VA = "0xB6F450")]
		public <>c__DisplayClass32_0()
		{
		}

		[Token(Token = "0x6002E2F")]
		[Address(RVA = "0xB70494", Offset = "0xB70494", VA = "0xB70494")]
		internal void <translateAndSetString>b__0(AsyncOperationHandle<string> op)
		{
		}
	}

	[Token(Token = "0x20007DD")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B89E4", Offset = "0x8B89E4")]
	private sealed class <AimAssistProjectile>d__45 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40026F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40026F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40026F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject target;

		[Token(Token = "0x40026F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject proj;

		[Token(Token = "0x40026FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public PlayerSpell <>4__this;

		[Token(Token = "0x17000623")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002E33")]
			[Address(RVA = "0xB70850", Offset = "0xB70850", VA = "0xB70850", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000624")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002E35")]
			[Address(RVA = "0xB708B8", Offset = "0xB708B8", VA = "0xB708B8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002E30")]
		[Address(RVA = "0xB6FFA8", Offset = "0xB6FFA8", VA = "0xB6FFA8")]
		[DebuggerHidden]
		public <AimAssistProjectile>d__45(int <>1__state)
		{
		}

		[Token(Token = "0x6002E31")]
		[Address(RVA = "0xB704F8", Offset = "0xB704F8", VA = "0xB704F8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002E32")]
		[Address(RVA = "0xB704FC", Offset = "0xB704FC", VA = "0xB704FC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002E34")]
		[Address(RVA = "0xB70858", Offset = "0xB70858", VA = "0xB70858", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000E62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BC9E0", Offset = "0x8BC9E0")]
	public GameObject chargingEffect;

	[Token(Token = "0x4000E63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject spellEffect;

	[Token(Token = "0x4000E64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject castParticle;

	[Token(Token = "0x4000E65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public float handSpeed;

	[Token(Token = "0x4000E66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[HideInInspector]
	public UnityEngine.Vector3 curveVector;

	[Token(Token = "0x4000E67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[HideInInspector]
	public Quaternion handRotation;

	[Token(Token = "0x4000E68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject handObject;

	[Token(Token = "0x4000E69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BCA48", Offset = "0x8BCA48")]
	public int apCost;

	[Token(Token = "0x4000E6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float adrenalineMod;

	[Token(Token = "0x4000E6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public bool autoSeek;

	[Token(Token = "0x4000E6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public int spellLevel;

	[Token(Token = "0x4000E6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public int coolDown;

	[Token(Token = "0x4000E6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public bool startSpellOnCooldown;

	[Token(Token = "0x4000E6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	protected float minTimeHitEnemy;

	[Token(Token = "0x4000E70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	protected float timeSinceHit;

	[Token(Token = "0x4000E71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public float stackingDamageMultiplier;

	[Token(Token = "0x4000E72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public float stackingDamageIterator;

	[Token(Token = "0x4000E73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float maxStackDamage;

	[Token(Token = "0x4000E74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public bool applyStackingDamage;

	[Token(Token = "0x4000E75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BCA80", Offset = "0x8BCA80")]
	public string spellName;

	[Token(Token = "0x4000E76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public string spellDescription;

	[Token(Token = "0x4000E77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BCAB8", Offset = "0x8BCAB8")]
	public PlayerSpell preReqSpell;

	[Token(Token = "0x4000E78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public DamageEvent onDamageEnemy;

	[Token(Token = "0x4000E79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Sprite icon;

	[Token(Token = "0x4000E7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public SpellType spellType;

	[Token(Token = "0x4000E7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	public int chanceToInflict;

	[Token(Token = "0x4000E7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[SerializeField]
	private float aimAssistAngleMax;

	[Token(Token = "0x4000E7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	[SerializeField]
	private float aimAssistStrength;

	[Token(Token = "0x4000E7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[HideInInspector]
	public UnityEngine.Vector3 startHandPos;

	[Token(Token = "0x170000E3")]
	public int modifiedCost
	{
		[Token(Token = "0x6000E45")]
		[Address(RVA = "0xB6EBDC", Offset = "0xB6EBDC", VA = "0xB6EBDC")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170000E4")]
	[HideInInspector]
	public string translatedName
	{
		[Token(Token = "0x6000E46")]
		[Address(RVA = "0xB6EDC4", Offset = "0xB6EDC4", VA = "0xB6EDC4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000E5")]
	[HideInInspector]
	public string translatedDescription
	{
		[Token(Token = "0x6000E47")]
		[Address(RVA = "0xB6EF88", Offset = "0xB6EF88", VA = "0xB6EF88")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000E6")]
	public virtual string spellToolTip
	{
		[Token(Token = "0x6000E4D")]
		[Address(RVA = "0xB6FBA8", Offset = "0xB6FBA8", VA = "0xB6FBA8", Slot = "5")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000E48")]
	[Address(RVA = "0xB6F190", Offset = "0xB6F190", VA = "0xB6F190", Slot = "4")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x6000E49")]
	[Address(RVA = "0xB6F19C", Offset = "0xB6F19C", VA = "0xB6F19C")]
	public void translateStrings()
	{
	}

	[Token(Token = "0x6000E4A")]
	[Address(RVA = "0xB6F220", Offset = "0xB6F220", VA = "0xB6F220")]
	public void translateAndSetString(string s, string textToChange, string table = "Hax")
	{
	}

	[Token(Token = "0x6000E4B")]
	[Address(RVA = "0xB6F458", Offset = "0xB6F458", VA = "0xB6F458")]
	protected int modifiyDamage(int dam)
	{
		return default(int);
	}

	[Token(Token = "0x6000E4C")]
	[Address(RVA = "0xB6FA84", Offset = "0xB6FA84", VA = "0xB6FA84")]
	protected void preDamageApply()
	{
	}

	[Token(Token = "0x6000E4E")]
	public abstract void castSpell(bool freeCast = false);

	[Token(Token = "0x6000E4F")]
	[Address(RVA = "0xB6FF24", Offset = "0xB6FF24", VA = "0xB6FF24")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C8AC4", Offset = "0x8C8AC4")]
	private IEnumerator AimAssistProjectile(GameObject proj, GameObject target)
	{
		return null;
	}

	[Token(Token = "0x6000E50")]
	[Address(RVA = "0xB6FFD4", Offset = "0xB6FFD4", VA = "0xB6FFD4")]
	public void SelectAimAssistTarget(GameObject proj)
	{
	}

	[Token(Token = "0x6000E51")]
	[Address(RVA = "0xB70398", Offset = "0xB70398", VA = "0xB70398", Slot = "7")]
	public virtual void OnInstantiate()
	{
	}

	[Token(Token = "0x6000E52")]
	[Address(RVA = "0xB7039C", Offset = "0xB7039C", VA = "0xB7039C")]
	protected PlayerSpell()
	{
	}
}
[Serializable]
[Token(Token = "0x2000245")]
public class PlayerSpellData
{
	[Token(Token = "0x4000E7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string spellName;

	[Token(Token = "0x4000E80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private int _level;

	[Token(Token = "0x4000E81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private int _exp;

	[Token(Token = "0x4000E82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int oldExp;

	[Token(Token = "0x170000E7")]
	public int level
	{
		[Token(Token = "0x6000E53")]
		[Address(RVA = "0xB708C0", Offset = "0xB708C0", VA = "0xB708C0")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000E54")]
		[Address(RVA = "0xB708C8", Offset = "0xB708C8", VA = "0xB708C8")]
		set
		{
		}
	}

	[Token(Token = "0x170000E8")]
	public int exp
	{
		[Token(Token = "0x6000E55")]
		[Address(RVA = "0xB708D0", Offset = "0xB708D0", VA = "0xB708D0")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000E56")]
		[Address(RVA = "0xB708D8", Offset = "0xB708D8", VA = "0xB708D8")]
		set
		{
		}
	}

	[Token(Token = "0x170000E9")]
	public int expRequired
	{
		[Token(Token = "0x6000E57")]
		[Address(RVA = "0xB70934", Offset = "0xB70934", VA = "0xB70934")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6000E58")]
	[Address(RVA = "0xB709CC", Offset = "0xB709CC", VA = "0xB709CC")]
	private void levelUp()
	{
	}

	[Token(Token = "0x6000E59")]
	[Address(RVA = "0xB70A4C", Offset = "0xB70A4C", VA = "0xB70A4C")]
	public PlayerSpellData(string name)
	{
	}
}
[Token(Token = "0x2000246")]
public class Projectile : MonoBehaviour
{
	[Token(Token = "0x6000E5A")]
	[Address(RVA = "0xB74ED4", Offset = "0xB74ED4", VA = "0xB74ED4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E5B")]
	[Address(RVA = "0xB74ED8", Offset = "0xB74ED8", VA = "0xB74ED8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000E5C")]
	[Address(RVA = "0xB74EDC", Offset = "0xB74EDC", VA = "0xB74EDC")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000E5D")]
	[Address(RVA = "0xB74FAC", Offset = "0xB74FAC", VA = "0xB74FAC")]
	public Projectile()
	{
	}
}
[Token(Token = "0x2000247")]
public class RNGza : PlayerSpell
{
	[Token(Token = "0x20007DE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B89F4", Offset = "0x8B89F4")]
	private sealed class <waitToSetSpellPower>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40026FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40026FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40026FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PlayerSpell randomSpell;

		[Token(Token = "0x40026FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public RNGza <>4__this;

		[Token(Token = "0x17000625")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002E39")]
			[Address(RVA = "0xC1B0A4", Offset = "0xC1B0A4", VA = "0xC1B0A4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000626")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002E3B")]
			[Address(RVA = "0xC1B10C", Offset = "0xC1B10C", VA = "0xC1B10C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002E36")]
		[Address(RVA = "0xC1AFB8", Offset = "0xC1AFB8", VA = "0xC1AFB8")]
		[DebuggerHidden]
		public <waitToSetSpellPower>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x6002E37")]
		[Address(RVA = "0xC1AFEC", Offset = "0xC1AFEC", VA = "0xC1AFEC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002E38")]
		[Address(RVA = "0xC1AFF0", Offset = "0xC1AFF0", VA = "0xC1AFF0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002E3A")]
		[Address(RVA = "0xC1B0AC", Offset = "0xC1B0AC", VA = "0xC1B0AC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x170000EA")]
	public override string spellToolTip
	{
		[Token(Token = "0x6000E5E")]
		[Address(RVA = "0xC1A8E4", Offset = "0xC1A8E4", VA = "0xC1A8E4", Slot = "5")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000E5F")]
	[Address(RVA = "0xC1ACD0", Offset = "0xC1ACD0", VA = "0xC1ACD0", Slot = "6")]
	public override void castSpell(bool freeCast = false)
	{
	}

	[Token(Token = "0x6000E60")]
	[Address(RVA = "0xC1AF3C", Offset = "0xC1AF3C", VA = "0xC1AF3C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C8B28", Offset = "0x8C8B28")]
	private IEnumerator waitToSetSpellPower(PlayerSpell randomSpell)
	{
		return null;
	}

	[Token(Token = "0x6000E61")]
	[Address(RVA = "0xC1AFE4", Offset = "0xC1AFE4", VA = "0xC1AFE4")]
	public RNGza()
	{
	}
}
[Token(Token = "0x2000248")]
public class RepelBullets : PlayerSpell
{
	[Token(Token = "0x4000E83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private float reqDistanceToPlayer;

	[Token(Token = "0x170000EB")]
	public override string spellToolTip
	{
		[Token(Token = "0x6000E62")]
		[Address(RVA = "0xC1ED9C", Offset = "0xC1ED9C", VA = "0xC1ED9C", Slot = "5")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000E63")]
	[Address(RVA = "0xC1F124", Offset = "0xC1F124", VA = "0xC1F124", Slot = "6")]
	public override void castSpell(bool freeCast = false)
	{
	}

	[Token(Token = "0x6000E64")]
	[Address(RVA = "0xC1F388", Offset = "0xC1F388", VA = "0xC1F388", Slot = "4")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000E65")]
	[Address(RVA = "0xC1F390", Offset = "0xC1F390", VA = "0xC1F390")]
	public RepelBullets()
	{
	}
}
[Token(Token = "0x2000249")]
public class RestoreSpell : PlayerSpell
{
	[Token(Token = "0x4000E84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public string spellNotification;

	[Token(Token = "0x4000E85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public float potency;

	[Token(Token = "0x4000E86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public GameObject auraParticle;

	[Token(Token = "0x4000E87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public int healDebuffs;

	[Token(Token = "0x6000E66")]
	[Address(RVA = "0xC1F590", Offset = "0xC1F590", VA = "0xC1F590", Slot = "6")]
	public override void castSpell(bool freeCast = false)
	{
	}

	[Token(Token = "0x6000E67")]
	[Address(RVA = "0xC1F8BC", Offset = "0xC1F8BC", VA = "0xC1F8BC")]
	public RestoreSpell()
	{
	}
}
[Token(Token = "0x200024A")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8B68FC", Offset = "0x8B68FC")]
public class ScriptableSpell : ScriptableObject
{
	[Token(Token = "0x4000E88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PlayerSpell playerSpell;

	[Token(Token = "0x6000E68")]
	[Address(RVA = "0xC21B2C", Offset = "0xC21B2C", VA = "0xC21B2C")]
	public ScriptableSpell()
	{
	}
}
[Token(Token = "0x200024B")]
public class GlitchBlue : GlitchEffects
{
	[Token(Token = "0x4000E89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public Color blueColor;

	[Token(Token = "0x6000E69")]
	[Address(RVA = "0xC51814", Offset = "0xC51814", VA = "0xC51814", Slot = "4")]
	public override void applyGlitch()
	{
	}

	[Token(Token = "0x6000E6A")]
	[Address(RVA = "0xC518DC", Offset = "0xC518DC", VA = "0xC518DC", Slot = "7")]
	public override void doEffect()
	{
	}

	[Token(Token = "0x6000E6B")]
	[Address(RVA = "0xC518E0", Offset = "0xC518E0", VA = "0xC518E0", Slot = "5")]
	public override void removeGlitch()
	{
	}

	[Token(Token = "0x6000E6C")]
	[Address(RVA = "0xC519B0", Offset = "0xC519B0", VA = "0xC519B0")]
	public GlitchBlue()
	{
	}
}
[Token(Token = "0x200024C")]
public class GlitchBreach : GlitchEffects
{
	[Token(Token = "0x6000E6D")]
	[Address(RVA = "0xC51A14", Offset = "0xC51A14", VA = "0xC51A14", Slot = "4")]
	public override void applyGlitch()
	{
	}

	[Token(Token = "0x6000E6E")]
	[Address(RVA = "0xC51A18", Offset = "0xC51A18", VA = "0xC51A18", Slot = "7")]
	public override void doEffect()
	{
	}

	[Token(Token = "0x6000E6F")]
	[Address(RVA = "0xC51A1C", Offset = "0xC51A1C", VA = "0xC51A1C", Slot = "5")]
	public override void removeGlitch()
	{
	}

	[Token(Token = "0x6000E70")]
	[Address(RVA = "0xC51A20", Offset = "0xC51A20", VA = "0xC51A20", Slot = "6")]
	public override int onDamagedEffect(bool isPhysical, int damage)
	{
		return default(int);
	}

	[Token(Token = "0x6000E71")]
	[Address(RVA = "0xC51A2C", Offset = "0xC51A2C", VA = "0xC51A2C")]
	public GlitchBreach()
	{
	}
}
[Token(Token = "0x200024D")]
public class GlitchBurn : GlitchEffects
{
	[Token(Token = "0x4000E8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public bool damagePercent;

	[Token(Token = "0x6000E72")]
	[Address(RVA = "0xC51A30", Offset = "0xC51A30", VA = "0xC51A30", Slot = "4")]
	public override void applyGlitch()
	{
	}

	[Token(Token = "0x6000E73")]
	[Address(RVA = "0xC51A48", Offset = "0xC51A48", VA = "0xC51A48", Slot = "5")]
	public override void removeGlitch()
	{
	}

	[Token(Token = "0x6000E74")]
	[Address(RVA = "0xC51A4C", Offset = "0xC51A4C", VA = "0xC51A4C", Slot = "7")]
	public override void doEffect()
	{
	}

	[Token(Token = "0x6000E75")]
	[Address(RVA = "0xC51AC0", Offset = "0xC51AC0", VA = "0xC51AC0")]
	public GlitchBurn()
	{
	}
}
[Token(Token = "0x200024E")]
public class GlitchDestabalize : GlitchEffects
{
	[Token(Token = "0x4000E8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject explosionEffect;

	[Token(Token = "0x6000E76")]
	[Address(RVA = "0xC52038", Offset = "0xC52038", VA = "0xC52038", Slot = "4")]
	public override void applyGlitch()
	{
	}

	[Token(Token = "0x6000E77")]
	[Address(RVA = "0xC52048", Offset = "0xC52048", VA = "0xC52048", Slot = "5")]
	public override void removeGlitch()
	{
	}

	[Token(Token = "0x6000E78")]
	[Address(RVA = "0xC5204C", Offset = "0xC5204C", VA = "0xC5204C", Slot = "7")]
	public override void doEffect()
	{
	}

	[Token(Token = "0x6000E79")]
	[Address(RVA = "0xC52210", Offset = "0xC52210", VA = "0xC52210")]
	public GlitchDestabalize()
	{
	}
}
[Token(Token = "0x200024F")]
public abstract class GlitchEffects : MonoBehaviour
{
	[Token(Token = "0x20007DF")]
	public enum GlitchType
	{
		[Token(Token = "0x4002700")]
		onceATurn,
		[Token(Token = "0x4002701")]
		onApply,
		[Token(Token = "0x4002702")]
		onDeath,
		[Token(Token = "0x4002703")]
		onDamaged,
		[Token(Token = "0x4002704")]
		stun
	}

	[Token(Token = "0x4000E8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string effectName;

	[Token(Token = "0x4000E8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Sprite icon;

	[Token(Token = "0x4000E8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int turnDuration;

	[Token(Token = "0x4000E8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[HideInInspector]
	public int turnsActive;

	[Token(Token = "0x4000E90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int potency;

	[Token(Token = "0x4000E91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public EnemyParent enemyParent;

	[Token(Token = "0x4000E92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GlitchType glitchType;

	[Token(Token = "0x170000EC")]
	public string translatedName
	{
		[Token(Token = "0x6000E7A")]
		[Address(RVA = "0xC52214", Offset = "0xC52214", VA = "0xC52214")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000E7B")]
	public abstract void applyGlitch();

	[Token(Token = "0x6000E7C")]
	public abstract void removeGlitch();

	[Token(Token = "0x6000E7D")]
	[Address(RVA = "0xC52278", Offset = "0xC52278", VA = "0xC52278", Slot = "6")]
	public virtual int onDamagedEffect(bool isPhysical, int damage)
	{
		return default(int);
	}

	[Token(Token = "0x6000E7E")]
	public abstract void doEffect();

	[Token(Token = "0x6000E7F")]
	[Address(RVA = "0xC519B4", Offset = "0xC519B4", VA = "0xC519B4")]
	protected GlitchEffects()
	{
	}
}
[Token(Token = "0x2000250")]
public class GlitchEthereal : GlitchEffects
{
	[Token(Token = "0x6000E80")]
	[Address(RVA = "0xC52280", Offset = "0xC52280", VA = "0xC52280", Slot = "4")]
	public override void applyGlitch()
	{
	}

	[Token(Token = "0x6000E81")]
	[Address(RVA = "0xC5229C", Offset = "0xC5229C", VA = "0xC5229C", Slot = "7")]
	public override void doEffect()
	{
	}

	[Token(Token = "0x6000E82")]
	[Address(RVA = "0xC522A0", Offset = "0xC522A0", VA = "0xC522A0", Slot = "5")]
	public override void removeGlitch()
	{
	}

	[Token(Token = "0x6000E83")]
	[Address(RVA = "0xC522C0", Offset = "0xC522C0", VA = "0xC522C0")]
	public GlitchEthereal()
	{
	}
}
[Token(Token = "0x2000251")]
public class GlitchFreeze : GlitchEffects
{
	[Token(Token = "0x6000E84")]
	[Address(RVA = "0xC522C4", Offset = "0xC522C4", VA = "0xC522C4", Slot = "4")]
	public override void applyGlitch()
	{
	}

	[Token(Token = "0x6000E85")]
	[Address(RVA = "0xC522DC", Offset = "0xC522DC", VA = "0xC522DC", Slot = "5")]
	public override void removeGlitch()
	{
	}

	[Token(Token = "0x6000E86")]
	[Address(RVA = "0xC52338", Offset = "0xC52338", VA = "0xC52338", Slot = "7")]
	public override void doEffect()
	{
	}

	[Token(Token = "0x6000E87")]
	[Address(RVA = "0xC52394", Offset = "0xC52394", VA = "0xC52394")]
	public GlitchFreeze()
	{
	}
}
[Token(Token = "0x2000252")]
public class GlitchHealSpring : GlitchEffects
{
	[Token(Token = "0x6000E88")]
	[Address(RVA = "0xC52398", Offset = "0xC52398", VA = "0xC52398", Slot = "4")]
	public override void applyGlitch()
	{
	}

	[Token(Token = "0x6000E89")]
	[Address(RVA = "0xC5239C", Offset = "0xC5239C", VA = "0xC5239C", Slot = "5")]
	public override void removeGlitch()
	{
	}

	[Token(Token = "0x6000E8A")]
	[Address(RVA = "0xC523A0", Offset = "0xC523A0", VA = "0xC523A0", Slot = "7")]
	public override void doEffect()
	{
	}

	[Token(Token = "0x6000E8B")]
	[Address(RVA = "0xC52420", Offset = "0xC52420", VA = "0xC52420")]
	public GlitchHealSpring()
	{
	}
}
[Token(Token = "0x2000253")]
public class GlitchMarked : GlitchEffects
{
	[Token(Token = "0x6000E8C")]
	[Address(RVA = "0xC52424", Offset = "0xC52424", VA = "0xC52424", Slot = "4")]
	public override void applyGlitch()
	{
	}

	[Token(Token = "0x6000E8D")]
	[Address(RVA = "0xC52428", Offset = "0xC52428", VA = "0xC52428", Slot = "7")]
	public override void doEffect()
	{
	}

	[Token(Token = "0x6000E8E")]
	[Address(RVA = "0xC5242C", Offset = "0xC5242C", VA = "0xC5242C", Slot = "5")]
	public override void removeGlitch()
	{
	}

	[Token(Token = "0x6000E8F")]
	[Address(RVA = "0xC52430", Offset = "0xC52430", VA = "0xC52430", Slot = "6")]
	public override int onDamagedEffect(bool isPhysical, int damage)
	{
		return default(int);
	}

	[Token(Token = "0x6000E90")]
	[Address(RVA = "0xC524DC", Offset = "0xC524DC", VA = "0xC524DC")]
	public GlitchMarked()
	{
	}
}
[Token(Token = "0x2000254")]
public class GlitchStrengthen : GlitchEffects
{
	[Token(Token = "0x6000E91")]
	[Address(RVA = "0xC524E0", Offset = "0xC524E0", VA = "0xC524E0", Slot = "4")]
	public override void applyGlitch()
	{
	}

	[Token(Token = "0x6000E92")]
	[Address(RVA = "0xC524E8", Offset = "0xC524E8", VA = "0xC524E8", Slot = "5")]
	public override void removeGlitch()
	{
	}

	[Token(Token = "0x6000E93")]
	[Address(RVA = "0xC52524", Offset = "0xC52524", VA = "0xC52524", Slot = "7")]
	public override void doEffect()
	{
	}

	[Token(Token = "0x6000E94")]
	[Address(RVA = "0xC52560", Offset = "0xC52560", VA = "0xC52560")]
	public GlitchStrengthen()
	{
	}
}
[Token(Token = "0x2000255")]
public class GlitchStun : GlitchEffects
{
	[Token(Token = "0x6000E95")]
	[Address(RVA = "0xC52564", Offset = "0xC52564", VA = "0xC52564", Slot = "4")]
	public override void applyGlitch()
	{
	}

	[Token(Token = "0x6000E96")]
	[Address(RVA = "0xC5257C", Offset = "0xC5257C", VA = "0xC5257C", Slot = "7")]
	public override void doEffect()
	{
	}

	[Token(Token = "0x6000E97")]
	[Address(RVA = "0xC52580", Offset = "0xC52580", VA = "0xC52580", Slot = "5")]
	public override void removeGlitch()
	{
	}

	[Token(Token = "0x6000E98")]
	[Address(RVA = "0xC52584", Offset = "0xC52584", VA = "0xC52584")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E99")]
	[Address(RVA = "0xC52588", Offset = "0xC52588", VA = "0xC52588")]
	private void Update()
	{
	}

	[Token(Token = "0x6000E9A")]
	[Address(RVA = "0xC5258C", Offset = "0xC5258C", VA = "0xC5258C")]
	public GlitchStun()
	{
	}
}
[Token(Token = "0x2000256")]
public class GlitchThorns : GlitchEffects
{
	[Token(Token = "0x6000E9B")]
	[Address(RVA = "0xC52590", Offset = "0xC52590", VA = "0xC52590", Slot = "4")]
	public override void applyGlitch()
	{
	}

	[Token(Token = "0x6000E9C")]
	[Address(RVA = "0xC52594", Offset = "0xC52594", VA = "0xC52594", Slot = "7")]
	public override void doEffect()
	{
	}

	[Token(Token = "0x6000E9D")]
	[Address(RVA = "0xC52598", Offset = "0xC52598", VA = "0xC52598", Slot = "5")]
	public override void removeGlitch()
	{
	}

	[Token(Token = "0x6000E9E")]
	[Address(RVA = "0xC5259C", Offset = "0xC5259C", VA = "0xC5259C", Slot = "6")]
	public override int onDamagedEffect(bool isPhysical, int damage)
	{
		return default(int);
	}

	[Token(Token = "0x6000E9F")]
	[Address(RVA = "0xC52628", Offset = "0xC52628", VA = "0xC52628")]
	public GlitchThorns()
	{
	}
}
[Token(Token = "0x2000257")]
public class GlitchWeaken : GlitchEffects
{
	[Token(Token = "0x6000EA0")]
	[Address(RVA = "0xC5262C", Offset = "0xC5262C", VA = "0xC5262C", Slot = "4")]
	public override void applyGlitch()
	{
	}

	[Token(Token = "0x6000EA1")]
	[Address(RVA = "0xC52644", Offset = "0xC52644", VA = "0xC52644", Slot = "5")]
	public override void removeGlitch()
	{
	}

	[Token(Token = "0x6000EA2")]
	[Address(RVA = "0xC5267C", Offset = "0xC5267C", VA = "0xC5267C", Slot = "7")]
	public override void doEffect()
	{
	}

	[Token(Token = "0x6000EA3")]
	[Address(RVA = "0xC526B4", Offset = "0xC526B4", VA = "0xC526B4")]
	public GlitchWeaken()
	{
	}
}
[Token(Token = "0x2000258")]
public class StopTime : PlayerSpell
{
	[Token(Token = "0x4000E93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private float slowTimeScale;

	[Token(Token = "0x4000E94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private float originalFixedTimeScale;

	[Token(Token = "0x4000E95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public AudioClip timeResumeClip;

	[Token(Token = "0x4000E96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public AudioSource source;

	[Token(Token = "0x4000E97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private float reqTimeToResume;

	[Token(Token = "0x4000E98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	private float timer;

	[Token(Token = "0x170000ED")]
	public override string spellToolTip
	{
		[Token(Token = "0x6000EA4")]
		[Address(RVA = "0xB21FC8", Offset = "0xB21FC8", VA = "0xB21FC8", Slot = "5")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000EA5")]
	[Address(RVA = "0xB22350", Offset = "0xB22350", VA = "0xB22350", Slot = "6")]
	public override void castSpell(bool freeCast = false)
	{
	}

	[Token(Token = "0x6000EA6")]
	[Address(RVA = "0xB22424", Offset = "0xB22424", VA = "0xB22424")]
	private void Update()
	{
	}

	[Token(Token = "0x6000EA7")]
	[Address(RVA = "0xB22544", Offset = "0xB22544", VA = "0xB22544")]
	public StopTime()
	{
	}
}
[Token(Token = "0x2000259")]
public class SummonBryce : PlayerSpell
{
	[Token(Token = "0x4000E99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public BattleAlly ally;

	[Token(Token = "0x4000E9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public GameObject spawnParticle;

	[Token(Token = "0x6000EA8")]
	[Address(RVA = "0xB2809C", Offset = "0xB2809C", VA = "0xB2809C", Slot = "6")]
	public override void castSpell(bool freeCast = false)
	{
	}

	[Token(Token = "0x6000EA9")]
	[Address(RVA = "0xB28768", Offset = "0xB28768", VA = "0xB28768")]
	public SummonBryce()
	{
	}
}
[Token(Token = "0x200025A")]
public class TriBeam : PlayerSpell
{
	[Token(Token = "0x20007E0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B8A04", Offset = "0x8B8A04")]
	private sealed class <beamLife>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002705")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002706")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002707")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TriBeam <>4__this;

		[Token(Token = "0x17000627")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002E3F")]
			[Address(RVA = "0x1A5D884", Offset = "0x1A5D884", VA = "0x1A5D884", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000628")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002E41")]
			[Address(RVA = "0x1A5D8EC", Offset = "0x1A5D8EC", VA = "0x1A5D8EC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002E3C")]
		[Address(RVA = "0x1A5D618", Offset = "0x1A5D618", VA = "0x1A5D618")]
		[DebuggerHidden]
		public <beamLife>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x6002E3D")]
		[Address(RVA = "0x1A5D7AC", Offset = "0x1A5D7AC", VA = "0x1A5D7AC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002E3E")]
		[Address(RVA = "0x1A5D7B0", Offset = "0x1A5D7B0", VA = "0x1A5D7B0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002E40")]
		[Address(RVA = "0x1A5D88C", Offset = "0x1A5D88C", VA = "0x1A5D88C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000E9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	public int damage;

	[Token(Token = "0x4000E9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public GameObject beamObject;

	[Token(Token = "0x4000E9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public GameObject[] beams;

	[Token(Token = "0x4000E9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public GameObject[] startEffects;

	[Token(Token = "0x4000E9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public GameObject[] impactEffects;

	[Token(Token = "0x4000EA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public int currentEffect;

	[Token(Token = "0x4000EA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	public TriBeamCharge.ElementState elementState;

	[Token(Token = "0x6000EAA")]
	[Address(RVA = "0x1A5D3EC", Offset = "0x1A5D3EC", VA = "0x1A5D3EC", Slot = "6")]
	public override void castSpell(bool freeCast = false)
	{
	}

	[Token(Token = "0x6000EAB")]
	[Address(RVA = "0x1A5D5A8", Offset = "0x1A5D5A8", VA = "0x1A5D5A8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C8B8C", Offset = "0x8C8B8C")]
	public IEnumerator beamLife()
	{
		return null;
	}

	[Token(Token = "0x6000EAC")]
	[Address(RVA = "0x1A5D644", Offset = "0x1A5D644", VA = "0x1A5D644")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000EAD")]
	[Address(RVA = "0x1A5D734", Offset = "0x1A5D734", VA = "0x1A5D734", Slot = "7")]
	public override void OnInstantiate()
	{
	}

	[Token(Token = "0x6000EAE")]
	[Address(RVA = "0x1A5D79C", Offset = "0x1A5D79C", VA = "0x1A5D79C")]
	public TriBeam()
	{
	}
}
[Token(Token = "0x200025B")]
public class TriBeamCharge : MonoBehaviour
{
	[Token(Token = "0x20007E1")]
	public enum ElementState
	{
		[Token(Token = "0x4002709")]
		fire,
		[Token(Token = "0x400270A")]
		ice,
		[Token(Token = "0x400270B")]
		electric
	}

	[Token(Token = "0x20007E2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B8A14", Offset = "0x8B8A14")]
	private sealed class <TriBeamCycle>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400270C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400270D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400270E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TriBeamCharge <>4__this;

		[Token(Token = "0x17000629")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002E45")]
			[Address(RVA = "0x1A5DB28", Offset = "0x1A5DB28", VA = "0x1A5DB28", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700062A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002E47")]
			[Address(RVA = "0x1A5DB90", Offset = "0x1A5DB90", VA = "0x1A5DB90", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002E42")]
		[Address(RVA = "0x1A5D990", Offset = "0x1A5D990", VA = "0x1A5D990")]
		[DebuggerHidden]
		public <TriBeamCycle>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x6002E43")]
		[Address(RVA = "0x1A5D9C8", Offset = "0x1A5D9C8", VA = "0x1A5D9C8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002E44")]
		[Address(RVA = "0x1A5D9CC", Offset = "0x1A5D9CC", VA = "0x1A5D9CC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002E46")]
		[Address(RVA = "0x1A5DB30", Offset = "0x1A5DB30", VA = "0x1A5DB30", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000EA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] chargeEffects;

	[Token(Token = "0x4000EA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int currentEffect;

	[Token(Token = "0x4000EA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public ElementState elementState;

	[Token(Token = "0x6000EAF")]
	[Address(RVA = "0x1A5D8F4", Offset = "0x1A5D8F4", VA = "0x1A5D8F4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000EB0")]
	[Address(RVA = "0x1A5D920", Offset = "0x1A5D920", VA = "0x1A5D920")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C8BF0", Offset = "0x8C8BF0")]
	private IEnumerator TriBeamCycle()
	{
		return null;
	}

	[Token(Token = "0x6000EB1")]
	[Address(RVA = "0x1A5D9BC", Offset = "0x1A5D9BC", VA = "0x1A5D9BC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000EB2")]
	[Address(RVA = "0x1A5D9C0", Offset = "0x1A5D9C0", VA = "0x1A5D9C0")]
	public TriBeamCharge()
	{
	}
}
[Token(Token = "0x200025C")]
public class TripleBolt : PlayerSpell
{
	[Token(Token = "0x20007E3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B8A24", Offset = "0x8B8A24")]
	private sealed class <propelSpell>d__20 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400270F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002710")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002711")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TripleBolt <>4__this;

		[Token(Token = "0x4002712")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Rigidbody <spellRB>5__2;

		[Token(Token = "0x1700062B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002E4B")]
			[Address(RVA = "0x1A5F3C4", Offset = "0x1A5F3C4", VA = "0x1A5F3C4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700062C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002E4D")]
			[Address(RVA = "0x1A5F42C", Offset = "0x1A5F42C", VA = "0x1A5F42C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002E48")]
		[Address(RVA = "0x1A5E8C8", Offset = "0x1A5E8C8", VA = "0x1A5E8C8")]
		[DebuggerHidden]
		public <propelSpell>d__20(int <>1__state)
		{
		}

		[Token(Token = "0x6002E49")]
		[Address(RVA = "0x1A5F200", Offset = "0x1A5F200", VA = "0x1A5F200", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002E4A")]
		[Address(RVA = "0x1A5F204", Offset = "0x1A5F204", VA = "0x1A5F204", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002E4C")]
		[Address(RVA = "0x1A5F3CC", Offset = "0x1A5F3CC", VA = "0x1A5F3CC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000EA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	public float speed;

	[Token(Token = "0x4000EA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public GameObject explosionGameobject;

	[Token(Token = "0x4000EA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public int damage;

	[Token(Token = "0x4000EA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	public bool isFirstBolt;

	[Token(Token = "0x4000EA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public GlitchEffects glitchBurn;

	[Token(Token = "0x4000EAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public bool destroyOnCollision;

	[Token(Token = "0x4000EAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE9")]
	public bool destroyOnCollisionWithEnemy;

	[Token(Token = "0x4000EAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEA")]
	public bool destroyAfterTime;

	[Token(Token = "0x4000EAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	public float glitchDamageBonus;

	[Token(Token = "0x4000EAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public bool canUnLink;

	[Token(Token = "0x4000EAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF1")]
	public bool randomizeLaunchAngle;

	[Token(Token = "0x4000EB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	public float launchPower;

	[Token(Token = "0x4000EB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public float launchAngle;

	[Token(Token = "0x4000EB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	public bool quadShot;

	[Token(Token = "0x4000EB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFD")]
	public bool useWeaponDamage;

	[Token(Token = "0x170000EE")]
	public override string spellToolTip
	{
		[Token(Token = "0x6000EB3")]
		[Address(RVA = "0x1A5DB98", Offset = "0x1A5DB98", VA = "0x1A5DB98", Slot = "5")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000EB4")]
	[Address(RVA = "0x1A5E0A0", Offset = "0x1A5E0A0", VA = "0x1A5E0A0", Slot = "4")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000EB5")]
	[Address(RVA = "0x1A5E140", Offset = "0x1A5E140", VA = "0x1A5E140")]
	private void Update()
	{
	}

	[Token(Token = "0x6000EB6")]
	[Address(RVA = "0x1A5E178", Offset = "0x1A5E178", VA = "0x1A5E178", Slot = "6")]
	public override void castSpell(bool freeCast = false)
	{
	}

	[Token(Token = "0x6000EB7")]
	[Address(RVA = "0x1A5E858", Offset = "0x1A5E858", VA = "0x1A5E858")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C8C54", Offset = "0x8C8C54")]
	public IEnumerator propelSpell()
	{
		return null;
	}

	[Token(Token = "0x6000EB8")]
	[Address(RVA = "0x1A5E8F4", Offset = "0x1A5E8F4", VA = "0x1A5E8F4")]
	private void spawnImpact(UnityEngine.Vector3 position)
	{
	}

	[Token(Token = "0x6000EB9")]
	[Address(RVA = "0x1A5E9F4", Offset = "0x1A5E9F4", VA = "0x1A5E9F4")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000EBA")]
	[Address(RVA = "0x1A5F020", Offset = "0x1A5F020", VA = "0x1A5F020")]
	private void OnTriggerEnter(Collider collision)
	{
	}

	[Token(Token = "0x6000EBB")]
	[Address(RVA = "0x1A5EB98", Offset = "0x1A5EB98", VA = "0x1A5EB98")]
	private void collideWithEnemy(EnemyParent ep)
	{
	}

	[Token(Token = "0x6000EBC")]
	[Address(RVA = "0x1A5F1DC", Offset = "0x1A5F1DC", VA = "0x1A5F1DC")]
	public TripleBolt()
	{
	}
}
[Token(Token = "0x200025D")]
public class InteractBox : MonoBehaviour
{
	[Token(Token = "0x4000EB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ThirdPersonController tpc;

	[Token(Token = "0x6000EBD")]
	[Address(RVA = "0xADB1F4", Offset = "0xADB1F4", VA = "0xADB1F4")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000EBE")]
	[Address(RVA = "0xADB2F0", Offset = "0xADB2F0", VA = "0xADB2F0")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000EBF")]
	[Address(RVA = "0xADB3EC", Offset = "0xADB3EC", VA = "0xADB3EC")]
	public InteractBox()
	{
	}
}
[Token(Token = "0x200025E")]
public class ThirdPersonCamFollow : MonoBehaviour
{
	[Token(Token = "0x4000EB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private UnityEngine.Vector3 camPos;

	[Token(Token = "0x4000EB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private UnityEngine.Vector3 camPos2;

	[Token(Token = "0x4000EB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float camModifierY;

	[Token(Token = "0x4000EB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float camModifierX;

	[Token(Token = "0x4000EB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float camModifierZ;

	[Token(Token = "0x4000EBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float lastYGrab;

	[Token(Token = "0x4000EBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float lastXGrab;

	[Token(Token = "0x4000EBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float lastZGrab;

	[Token(Token = "0x4000EBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float turnAngle;

	[Token(Token = "0x4000EBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float camModOpenVRY;

	[Token(Token = "0x4000EBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform camTrans2;

	[Token(Token = "0x4000EC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool _grabbing;

	[Token(Token = "0x170000EF")]
	public bool grabbing
	{
		[Token(Token = "0x6000EC0")]
		[Address(RVA = "0xB2D9FC", Offset = "0xB2D9FC", VA = "0xB2D9FC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000EC1")]
	[Address(RVA = "0xB2DA04", Offset = "0xB2DA04", VA = "0xB2DA04")]
	private void Start()
	{
	}

	[Token(Token = "0x6000EC2")]
	[Address(RVA = "0xB2DAC4", Offset = "0xB2DAC4", VA = "0xB2DAC4")]
	public void resetCamera()
	{
	}

	[Token(Token = "0x6000EC3")]
	[Address(RVA = "0xB2DAFC", Offset = "0xB2DAFC", VA = "0xB2DAFC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000EC4")]
	[Address(RVA = "0xB2DB00", Offset = "0xB2DB00", VA = "0xB2DB00")]
	public void UpdateCameraPos()
	{
	}

	[Token(Token = "0x6000EC5")]
	[Address(RVA = "0xB2E160", Offset = "0xB2E160", VA = "0xB2E160")]
	public UnityEngine.Vector3 RotatePointAroundPivot(UnityEngine.Vector3 point, UnityEngine.Vector3 pivot, UnityEngine.Vector3 angles)
	{
		return default(UnityEngine.Vector3);
	}

	[Token(Token = "0x6000EC6")]
	[Address(RVA = "0xB2E28C", Offset = "0xB2E28C", VA = "0xB2E28C")]
	public ThirdPersonCamFollow()
	{
	}
}
[Token(Token = "0x200025F")]
public class ThirdPersonController : MonoBehaviour
{
	[Token(Token = "0x20007E4")]
	private enum PlayerState
	{
		[Token(Token = "0x4002714")]
		Idle,
		[Token(Token = "0x4002715")]
		Moving,
		[Token(Token = "0x4002716")]
		Attacking,
		[Token(Token = "0x4002717")]
		Interacting,
		[Token(Token = "0x4002718")]
		Damaged,
		[Token(Token = "0x4002719")]
		Dead,
		[Token(Token = "0x400271A")]
		Boarding
	}

	[Token(Token = "0x20007E5")]
	private class IdleState : State<ThirdPersonController>
	{
		[Token(Token = "0x6002E4E")]
		[Address(RVA = "0xB312B0", Offset = "0xB312B0", VA = "0xB312B0", Slot = "4")]
		public override void activate(ThirdPersonController parent)
		{
		}

		[Token(Token = "0x6002E4F")]
		[Address(RVA = "0xB3132C", Offset = "0xB3132C", VA = "0xB3132C", Slot = "5")]
		public override void update(ThirdPersonController parent)
		{
		}

		[Token(Token = "0x6002E50")]
		[Address(RVA = "0xB2E86C", Offset = "0xB2E86C", VA = "0xB2E86C")]
		public IdleState()
		{
		}
	}

	[Token(Token = "0x20007E6")]
	private class InteractingState : State<ThirdPersonController>
	{
		[Token(Token = "0x400271B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private NPCOverworld npc;

		[Token(Token = "0x400271C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private UnityEvent resumeGame;

		[Token(Token = "0x6002E51")]
		[Address(RVA = "0x1A57704", Offset = "0x1A57704", VA = "0x1A57704")]
		public void changeToIdle()
		{
		}

		[Token(Token = "0x6002E52")]
		[Address(RVA = "0x1A57774", Offset = "0x1A57774", VA = "0x1A57774", Slot = "4")]
		public override void activate(ThirdPersonController parent)
		{
		}

		[Token(Token = "0x6002E53")]
		[Address(RVA = "0x1A57938", Offset = "0x1A57938", VA = "0x1A57938", Slot = "5")]
		public override void update(ThirdPersonController parent)
		{
		}

		[Token(Token = "0x6002E54")]
		[Address(RVA = "0x1A57B44", Offset = "0x1A57B44", VA = "0x1A57B44")]
		public InteractingState()
		{
		}
	}

	[Token(Token = "0x20007E7")]
	private class MovingState : State<ThirdPersonController>
	{
		[Token(Token = "0x6002E55")]
		[Address(RVA = "0x1A57BB4", Offset = "0x1A57BB4", VA = "0x1A57BB4", Slot = "4")]
		public override void activate(ThirdPersonController parent)
		{
		}

		[Token(Token = "0x6002E56")]
		[Address(RVA = "0x1A57C30", Offset = "0x1A57C30", VA = "0x1A57C30", Slot = "5")]
		public override void update(ThirdPersonController parent)
		{
		}

		[Token(Token = "0x6002E57")]
		[Address(RVA = "0x1A58014", Offset = "0x1A58014", VA = "0x1A58014")]
		public MovingState()
		{
		}
	}

	[Token(Token = "0x20007E8")]
	private class AttackingState : State<ThirdPersonController>
	{
		[Token(Token = "0x400271D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private float timer;

		[Token(Token = "0x400271E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float animationTime;

		[Token(Token = "0x400271F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool particlePlaced;

		[Token(Token = "0x6002E58")]
		[Address(RVA = "0xB30AAC", Offset = "0xB30AAC", VA = "0xB30AAC", Slot = "4")]
		public override void activate(ThirdPersonController parent)
		{
		}

		[Token(Token = "0x6002E59")]
		[Address(RVA = "0xB30B24", Offset = "0xB30B24", VA = "0xB30B24", Slot = "5")]
		public override void update(ThirdPersonController parent)
		{
		}

		[Token(Token = "0x6002E5A")]
		[Address(RVA = "0xB2E8BC", Offset = "0xB2E8BC", VA = "0xB2E8BC")]
		public AttackingState()
		{
		}
	}

	[Token(Token = "0x20007E9")]
	private class DamagedState : State<ThirdPersonController>
	{
		[Token(Token = "0x6002E5B")]
		[Address(RVA = "0xB3110C", Offset = "0xB3110C", VA = "0xB3110C", Slot = "4")]
		public override void activate(ThirdPersonController parent)
		{
		}

		[Token(Token = "0x6002E5C")]
		[Address(RVA = "0xB3116C", Offset = "0xB3116C", VA = "0xB3116C", Slot = "5")]
		public override void update(ThirdPersonController parent)
		{
		}

		[Token(Token = "0x6002E5D")]
		[Address(RVA = "0xB2E918", Offset = "0xB2E918", VA = "0xB2E918")]
		public DamagedState()
		{
		}
	}

	[Token(Token = "0x20007EA")]
	private class DeadState : State<ThirdPersonController>
	{
		[Token(Token = "0x4002720")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private float timer;

		[Token(Token = "0x4002721")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float animationTime;

		[Token(Token = "0x4002722")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool startedSceneLoad;

		[Token(Token = "0x6002E5E")]
		[Address(RVA = "0xB31170", Offset = "0xB31170", VA = "0xB31170", Slot = "4")]
		public override void activate(ThirdPersonController parent)
		{
		}

		[Token(Token = "0x6002E5F")]
		[Address(RVA = "0xB311E4", Offset = "0xB311E4", VA = "0xB311E4", Slot = "5")]
		public override void update(ThirdPersonController parent)
		{
		}

		[Token(Token = "0x6002E60")]
		[Address(RVA = "0xB2E968", Offset = "0xB2E968", VA = "0xB2E968")]
		public DeadState()
		{
		}
	}

	[Token(Token = "0x20007EB")]
	private class BoardingState : State<ThirdPersonController>
	{
		[Token(Token = "0x6002E61")]
		[Address(RVA = "0xB30CFC", Offset = "0xB30CFC", VA = "0xB30CFC", Slot = "4")]
		public override void activate(ThirdPersonController parent)
		{
		}

		[Token(Token = "0x6002E62")]
		[Address(RVA = "0xB30E88", Offset = "0xB30E88", VA = "0xB30E88", Slot = "5")]
		public override void update(ThirdPersonController parent)
		{
		}

		[Token(Token = "0x6002E63")]
		[Address(RVA = "0xB2E9C0", Offset = "0xB2E9C0", VA = "0xB2E9C0")]
		public BoardingState()
		{
		}
	}

	[Token(Token = "0x20007EC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B8A34", Offset = "0x8B8A34")]
	private sealed class <unlockMenuOnLoad>d__46 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002723")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002724")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002725")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ThirdPersonController <>4__this;

		[Token(Token = "0x1700062D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002E67")]
			[Address(RVA = "0xB30A3C", Offset = "0xB30A3C", VA = "0xB30A3C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700062E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002E69")]
			[Address(RVA = "0xB30AA4", Offset = "0xB30AA4", VA = "0xB30AA4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002E64")]
		[Address(RVA = "0xB2EE80", Offset = "0xB2EE80", VA = "0xB2EE80")]
		[DebuggerHidden]
		public <unlockMenuOnLoad>d__46(int <>1__state)
		{
		}

		[Token(Token = "0x6002E65")]
		[Address(RVA = "0xB3098C", Offset = "0xB3098C", VA = "0xB3098C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002E66")]
		[Address(RVA = "0xB30990", Offset = "0xB30990", VA = "0xB30990", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002E68")]
		[Address(RVA = "0xB30A44", Offset = "0xB30A44", VA = "0xB30A44", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20007ED")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B8A44", Offset = "0x8B8A44")]
	private sealed class <rotatePlayerTimer>d__51 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002726")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002727")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002728")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ThirdPersonController <>4__this;

		[Token(Token = "0x4002729")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float y;

		[Token(Token = "0x400272A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <timer>5__2;

		[Token(Token = "0x400272B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <maxAllowedTime>5__3;

		[Token(Token = "0x1700062F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002E6D")]
			[Address(RVA = "0xB3091C", Offset = "0xB3091C", VA = "0xB3091C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000630")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002E6F")]
			[Address(RVA = "0xB30984", Offset = "0xB30984", VA = "0xB30984", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002E6A")]
		[Address(RVA = "0xB2F024", Offset = "0xB2F024", VA = "0xB2F024")]
		[DebuggerHidden]
		public <rotatePlayerTimer>d__51(int <>1__state)
		{
		}

		[Token(Token = "0x6002E6B")]
		[Address(RVA = "0xB306F8", Offset = "0xB306F8", VA = "0xB306F8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002E6C")]
		[Address(RVA = "0xB306FC", Offset = "0xB306FC", VA = "0xB306FC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002E6E")]
		[Address(RVA = "0xB30924", Offset = "0xB30924", VA = "0xB30924", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20007EE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B8A54", Offset = "0x8B8A54")]
	private sealed class <jumpTimer>d__53 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400272C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400272D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400272E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float jumpPower;

		[Token(Token = "0x400272F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ThirdPersonController <>4__this;

		[Token(Token = "0x4002730")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float time;

		[Token(Token = "0x4002731")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <t>5__2;

		[Token(Token = "0x4002732")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float <jump>5__3;

		[Token(Token = "0x17000631")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002E73")]
			[Address(RVA = "0xB30688", Offset = "0xB30688", VA = "0xB30688", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000632")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002E75")]
			[Address(RVA = "0xB306F0", Offset = "0xB306F0", VA = "0xB306F0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002E70")]
		[Address(RVA = "0xB2F104", Offset = "0xB2F104", VA = "0xB2F104")]
		[DebuggerHidden]
		public <jumpTimer>d__53(int <>1__state)
		{
		}

		[Token(Token = "0x6002E71")]
		[Address(RVA = "0xB3050C", Offset = "0xB3050C", VA = "0xB3050C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002E72")]
		[Address(RVA = "0xB30510", Offset = "0xB30510", VA = "0xB30510", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002E74")]
		[Address(RVA = "0xB30690", Offset = "0xB30690", VA = "0xB30690", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20007EF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B8A64", Offset = "0x8B8A64")]
	private sealed class <encounterTimer>d__54 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002733")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002734")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002735")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string scene;

		[Token(Token = "0x17000633")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002E79")]
			[Address(RVA = "0xB30304", Offset = "0xB30304", VA = "0xB30304", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000634")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002E7B")]
			[Address(RVA = "0xB3036C", Offset = "0xB3036C", VA = "0xB3036C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002E76")]
		[Address(RVA = "0xB2F130", Offset = "0xB2F130", VA = "0xB2F130")]
		[DebuggerHidden]
		public <encounterTimer>d__54(int <>1__state)
		{
		}

		[Token(Token = "0x6002E77")]
		[Address(RVA = "0xB301A4", Offset = "0xB301A4", VA = "0xB301A4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002E78")]
		[Address(RVA = "0xB301A8", Offset = "0xB301A8", VA = "0xB301A8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002E7A")]
		[Address(RVA = "0xB3030C", Offset = "0xB3030C", VA = "0xB3030C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20007F0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B8A74", Offset = "0x8B8A74")]
	private sealed class <interactProceedTimerEnum>d__74 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002736")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002737")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002738")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float time;

		[Token(Token = "0x4002739")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ThirdPersonController <>4__this;

		[Token(Token = "0x400273A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string StoryGOName;

		[Token(Token = "0x17000635")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002E7F")]
			[Address(RVA = "0xB3049C", Offset = "0xB3049C", VA = "0xB3049C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000636")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002E81")]
			[Address(RVA = "0xB30504", Offset = "0xB30504", VA = "0xB30504", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002E7C")]
		[Address(RVA = "0xB30084", Offset = "0xB30084", VA = "0xB30084")]
		[DebuggerHidden]
		public <interactProceedTimerEnum>d__74(int <>1__state)
		{
		}

		[Token(Token = "0x6002E7D")]
		[Address(RVA = "0xB30374", Offset = "0xB30374", VA = "0xB30374", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002E7E")]
		[Address(RVA = "0xB30378", Offset = "0xB30378", VA = "0xB30378", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002E80")]
		[Address(RVA = "0xB304A4", Offset = "0xB304A4", VA = "0xB304A4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000EC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static ThirdPersonController instance;

	[Token(Token = "0x4000EC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Animator playerAnimator;

	[Token(Token = "0x4000EC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool playerStopped;

	[Token(Token = "0x4000EC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool movementLocked;

	[Token(Token = "0x4000EC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
	public bool attackLocked;

	[Token(Token = "0x4000EC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x23")]
	public bool menuLocked;

	[Token(Token = "0x4000EC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool encounterStarting;

	[Token(Token = "0x4000EC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float _movementMagnitude;

	[Token(Token = "0x4000EC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject overworldAttackParticle;

	[Token(Token = "0x4000ECA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject compass;

	[Token(Token = "0x4000ECB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public HoverboardController hoverboard;

	[Token(Token = "0x4000ECC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public HoverboardController hoverboardPrefab;

	[Token(Token = "0x4000ECD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject backFlair;

	[Token(Token = "0x4000ECE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject dungeonLight;

	[Token(Token = "0x4000ECF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Transform attackSpawnTrans;

	[Token(Token = "0x4000ED0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Transform footPos;

	[Token(Token = "0x4000ED1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Transform hoverboardPos;

	[Token(Token = "0x4000ED2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Item requiredHoverItem;

	[Token(Token = "0x4000ED3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public UIBar playerHealthBar;

	[Token(Token = "0x4000ED4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public List<NPCOverworld> lastSeenNPCs;

	[Token(Token = "0x4000ED5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private SkinnedMeshRenderer[] renderers;

	[Token(Token = "0x4000ED6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private MeshRenderer[] renderers2;

	[Token(Token = "0x4000ED7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public bool storyProceedTrigger;

	[Token(Token = "0x4000ED8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA1")]
	public bool canInteract;

	[Token(Token = "0x4000ED9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Material chubgusMaterial;

	[Token(Token = "0x4000EDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Transform avatarSpawn;

	[Token(Token = "0x4000EDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Dictionary<int, string> avatarDic;

	[Token(Token = "0x4000EDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private StateMachine<ThirdPersonController, PlayerState> stateMachine;

	[Token(Token = "0x4000EDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private CharacterController characterController;

	[Token(Token = "0x4000EDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private float _runSpeed;

	[Token(Token = "0x4000EDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public UnityEvent onEnemyEncounter;

	[Token(Token = "0x4000EE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public UnityEvent onHoverboardDismount;

	[Token(Token = "0x4000EE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private bool menuLockOnStart;

	[Token(Token = "0x4000EE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE9")]
	public bool forceOffBoard;

	[Token(Token = "0x170000F0")]
	public float getMoveMagnitude
	{
		[Token(Token = "0x6000EC7")]
		[Address(RVA = "0xB2E294", Offset = "0xB2E294", VA = "0xB2E294")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170000F1")]
	public bool isMoving
	{
		[Token(Token = "0x6000EC8")]
		[Address(RVA = "0xB2E29C", Offset = "0xB2E29C", VA = "0xB2E29C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000F2")]
	public bool isGrounded
	{
		[Token(Token = "0x6000EC9")]
		[Address(RVA = "0xB2E2F4", Offset = "0xB2E2F4", VA = "0xB2E2F4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000F3")]
	public float runSpeed
	{
		[Token(Token = "0x6000ECA")]
		[Address(RVA = "0xB2E310", Offset = "0xB2E310", VA = "0xB2E310")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170000F4")]
	public bool isBoarding
	{
		[Token(Token = "0x6000ECB")]
		[Address(RVA = "0xB2E36C", Offset = "0xB2E36C", VA = "0xB2E36C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000F5")]
	public bool canUseHoverBoard
	{
		[Token(Token = "0x6000EDC")]
		[Address(RVA = "0xB2F6B4", Offset = "0xB2F6B4", VA = "0xB2F6B4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000ECC")]
	[Address(RVA = "0xB2E3C4", Offset = "0xB2E3C4", VA = "0xB2E3C4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000ECD")]
	[Address(RVA = "0xB2EA10", Offset = "0xB2EA10", VA = "0xB2EA10")]
	private void Start()
	{
	}

	[Token(Token = "0x6000ECE")]
	[Address(RVA = "0xB2EE10", Offset = "0xB2EE10", VA = "0xB2EE10")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C8CB8", Offset = "0x8C8CB8")]
	private IEnumerator unlockMenuOnLoad()
	{
		return null;
	}

	[Token(Token = "0x6000ECF")]
	[Address(RVA = "0xB2EC50", Offset = "0xB2EC50", VA = "0xB2EC50")]
	private void destroyCloseEnemies()
	{
	}

	[Token(Token = "0x6000ED0")]
	[Address(RVA = "0xB2EEAC", Offset = "0xB2EEAC", VA = "0xB2EEAC")]
	public void startEncounterBad()
	{
	}

	[Token(Token = "0x6000ED1")]
	[Address(RVA = "0xB2EF08", Offset = "0xB2EF08", VA = "0xB2EF08")]
	public void startEncounterGood(string scene)
	{
	}

	[Token(Token = "0x6000ED2")]
	[Address(RVA = "0xB23954", Offset = "0xB23954", VA = "0xB23954")]
	public void rotatePlayer(float y)
	{
	}

	[Token(Token = "0x6000ED3")]
	[Address(RVA = "0xB2EFA4", Offset = "0xB2EFA4", VA = "0xB2EFA4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C8D1C", Offset = "0x8C8D1C")]
	private IEnumerator rotatePlayerTimer(float y)
	{
		return null;
	}

	[Token(Token = "0x6000ED4")]
	[Address(RVA = "0xB2F050", Offset = "0xB2F050", VA = "0xB2F050")]
	public void characterJump(float jumpPower, float time)
	{
	}

	[Token(Token = "0x6000ED5")]
	[Address(RVA = "0xB2F07C", Offset = "0xB2F07C", VA = "0xB2F07C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C8D80", Offset = "0x8C8D80")]
	private IEnumerator jumpTimer(float jumpPower, float time)
	{
		return null;
	}

	[Token(Token = "0x6000ED6")]
	[Address(RVA = "0xB2EF34", Offset = "0xB2EF34", VA = "0xB2EF34")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C8DE4", Offset = "0x8C8DE4")]
	private IEnumerator encounterTimer(string scene)
	{
		return null;
	}

	[Token(Token = "0x6000ED7")]
	[Address(RVA = "0xB2F15C", Offset = "0xB2F15C", VA = "0xB2F15C")]
	public void hideRenderers()
	{
	}

	[Token(Token = "0x6000ED8")]
	[Address(RVA = "0xB2F220", Offset = "0xB2F220", VA = "0xB2F220")]
	public void showRenderers()
	{
	}

	[Token(Token = "0x6000ED9")]
	[Address(RVA = "0xB2F2E4", Offset = "0xB2F2E4", VA = "0xB2F2E4")]
	public void killPlayer()
	{
	}

	[Token(Token = "0x6000EDA")]
	[Address(RVA = "0xB2F340", Offset = "0xB2F340", VA = "0xB2F340")]
	public void useCompass()
	{
	}

	[Token(Token = "0x6000EDB")]
	[Address(RVA = "0xB2F4E4", Offset = "0xB2F4E4", VA = "0xB2F4E4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000EDD")]
	[Address(RVA = "0xB2F7B0", Offset = "0xB2F7B0", VA = "0xB2F7B0")]
	public void updateHealthBars()
	{
	}

	[Token(Token = "0x6000EDE")]
	[Address(RVA = "0xB2F82C", Offset = "0xB2F82C", VA = "0xB2F82C")]
	public void getMenuInput()
	{
	}

	[Token(Token = "0x6000EDF")]
	[Address(RVA = "0xB2FA2C", Offset = "0xB2FA2C", VA = "0xB2FA2C")]
	private void movePlayer()
	{
	}

	[Token(Token = "0x6000EE0")]
	[Address(RVA = "0xB236F8", Offset = "0xB236F8", VA = "0xB236F8")]
	public void interactProceedTimer(float time, string StoryGOName)
	{
	}

	[Token(Token = "0x6000EE1")]
	[Address(RVA = "0xB2FFF8", Offset = "0xB2FFF8", VA = "0xB2FFF8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C8E48", Offset = "0x8C8E48")]
	private IEnumerator interactProceedTimerEnum(float time, string StoryGOName)
	{
		return null;
	}

	[Token(Token = "0x6000EE2")]
	[Address(RVA = "0xB300B0", Offset = "0xB300B0", VA = "0xB300B0")]
	public ThirdPersonController()
	{
	}
}
[Token(Token = "0x2000260")]
public class BattleTutorialPrompts : MonoBehaviour
{
	[Token(Token = "0x4000EE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TextAreaAttribute", RVA = "0x8BCB50", Offset = "0x8BCB50")]
	public string[] battle1Prompts;

	[Token(Token = "0x4000EE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TextAreaAttribute", RVA = "0x8BCB60", Offset = "0x8BCB60")]
	public string[] battle2Prompts;

	[Token(Token = "0x4000EE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TextAreaAttribute", RVA = "0x8BCB70", Offset = "0x8BCB70")]
	public string[] battle3Prompts;

	[Token(Token = "0x4000EE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TextAreaAttribute", RVA = "0x8BCB80", Offset = "0x8BCB80")]
	public string[] battle4Prompts;

	[Token(Token = "0x4000EE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int currentPrompt;

	[Token(Token = "0x4000EE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private string[] battlePrompts;

	[Token(Token = "0x4000EE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool canProceed;

	[Token(Token = "0x4000EEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Text explainText;

	[Token(Token = "0x4000EEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public int tutorialNum;

	[Token(Token = "0x4000EEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Animator tutorialImageAnim;

	[Token(Token = "0x4000EED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public UnityEvent onPromptClose;

	[Token(Token = "0x6000EE3")]
	[Address(RVA = "0xBC43A4", Offset = "0xBC43A4", VA = "0xBC43A4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000EE4")]
	[Address(RVA = "0xBC4494", Offset = "0xBC4494", VA = "0xBC4494")]
	private void Update()
	{
	}

	[Token(Token = "0x6000EE5")]
	[Address(RVA = "0xBC43A8", Offset = "0xBC43A8", VA = "0xBC43A8")]
	public void forceUpdatePrompt()
	{
	}

	[Token(Token = "0x6000EE6")]
	[Address(RVA = "0xBC46C0", Offset = "0xBC46C0", VA = "0xBC46C0")]
	public BattleTutorialPrompts()
	{
	}
}
[Token(Token = "0x2000261")]
public class TutorialDungeon : MonoBehaviour
{
	[Token(Token = "0x20007F1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B8A84", Offset = "0x8B8A84")]
	private sealed class <floorADvanceTimer1>d__15 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400273B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400273C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400273D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TutorialDungeon <>4__this;

		[Token(Token = "0x17000637")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002E85")]
			[Address(RVA = "0x1A5FF58", Offset = "0x1A5FF58", VA = "0x1A5FF58", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000638")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002E87")]
			[Address(RVA = "0x1A5FFC0", Offset = "0x1A5FFC0", VA = "0x1A5FFC0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002E82")]
		[Address(RVA = "0x1A5FBC4", Offset = "0x1A5FBC4", VA = "0x1A5FBC4")]
		[DebuggerHidden]
		public <floorADvanceTimer1>d__15(int <>1__state)
		{
		}

		[Token(Token = "0x6002E83")]
		[Address(RVA = "0x1A5FC74", Offset = "0x1A5FC74", VA = "0x1A5FC74", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002E84")]
		[Address(RVA = "0x1A5FC78", Offset = "0x1A5FC78", VA = "0x1A5FC78", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002E86")]
		[Address(RVA = "0x1A5FF60", Offset = "0x1A5FF60", VA = "0x1A5FF60", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20007F2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B8A94", Offset = "0x8B8A94")]
	private sealed class <floorADvanceTimer2>d__16 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400273E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400273F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002740")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TutorialDungeon <>4__this;

		[Token(Token = "0x17000639")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002E8B")]
			[Address(RVA = "0x1A602B0", Offset = "0x1A602B0", VA = "0x1A602B0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700063A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002E8D")]
			[Address(RVA = "0x1A60318", Offset = "0x1A60318", VA = "0x1A60318", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002E88")]
		[Address(RVA = "0x1A5FBF0", Offset = "0x1A5FBF0", VA = "0x1A5FBF0")]
		[DebuggerHidden]
		public <floorADvanceTimer2>d__16(int <>1__state)
		{
		}

		[Token(Token = "0x6002E89")]
		[Address(RVA = "0x1A5FFC8", Offset = "0x1A5FFC8", VA = "0x1A5FFC8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002E8A")]
		[Address(RVA = "0x1A5FFCC", Offset = "0x1A5FFCC", VA = "0x1A5FFCC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002E8C")]
		[Address(RVA = "0x1A602B8", Offset = "0x1A602B8", VA = "0x1A602B8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000EEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private string storyName;

	[Token(Token = "0x4000EEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject[] tutorialFloors;

	[Token(Token = "0x4000EF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioClip taskmasterEncounterTrack;

	[Token(Token = "0x4000EF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AudioSource musicPlayer;

	[Token(Token = "0x6000EE7")]
	[Address(RVA = "0x1A5F4A0", Offset = "0x1A5F4A0", VA = "0x1A5F4A0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000EE8")]
	[Address(RVA = "0x1A5F784", Offset = "0x1A5F784", VA = "0x1A5F784")]
	private void Start()
	{
	}

	[Token(Token = "0x6000EE9")]
	[Address(RVA = "0x1A5F8E8", Offset = "0x1A5F8E8", VA = "0x1A5F8E8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000EEA")]
	[Address(RVA = "0x1A5F8EC", Offset = "0x1A5F8EC", VA = "0x1A5F8EC")]
	public void dialogue1Complete()
	{
	}

	[Token(Token = "0x6000EEB")]
	[Address(RVA = "0x1A5F948", Offset = "0x1A5F948", VA = "0x1A5F948")]
	public void lockPlayerMovement()
	{
	}

	[Token(Token = "0x6000EEC")]
	[Address(RVA = "0x1A5F9A8", Offset = "0x1A5F9A8", VA = "0x1A5F9A8")]
	public void dialogue2Complete()
	{
	}

	[Token(Token = "0x6000EED")]
	[Address(RVA = "0x1A5FA08", Offset = "0x1A5FA08", VA = "0x1A5FA08")]
	public void encounter2Complete()
	{
	}

	[Token(Token = "0x6000EEE")]
	[Address(RVA = "0x1A5FA48", Offset = "0x1A5FA48", VA = "0x1A5FA48")]
	public void playTaskMasterEncounterTrack()
	{
	}

	[Token(Token = "0x6000EEF")]
	[Address(RVA = "0x1A5FA88", Offset = "0x1A5FA88", VA = "0x1A5FA88")]
	public void encounter3Complete()
	{
	}

	[Token(Token = "0x6000EF0")]
	[Address(RVA = "0x1A5FA8C", Offset = "0x1A5FA8C", VA = "0x1A5FA8C")]
	public void advanceToFloor2()
	{
	}

	[Token(Token = "0x6000EF1")]
	[Address(RVA = "0x1A5FB28", Offset = "0x1A5FB28", VA = "0x1A5FB28")]
	public void advanceToFloor3()
	{
	}

	[Token(Token = "0x6000EF2")]
	[Address(RVA = "0x1A5FAB8", Offset = "0x1A5FAB8", VA = "0x1A5FAB8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C8EAC", Offset = "0x8C8EAC")]
	private IEnumerator floorADvanceTimer1()
	{
		return null;
	}

	[Token(Token = "0x6000EF3")]
	[Address(RVA = "0x1A5FB54", Offset = "0x1A5FB54", VA = "0x1A5FB54")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C8F10", Offset = "0x8C8F10")]
	private IEnumerator floorADvanceTimer2()
	{
		return null;
	}

	[Token(Token = "0x6000EF4")]
	[Address(RVA = "0x1A5FC1C", Offset = "0x1A5FC1C", VA = "0x1A5FC1C")]
	public TutorialDungeon()
	{
	}
}
[Token(Token = "0x2000262")]
public class BattleDialogueBox : MonoBehaviour
{
	[Token(Token = "0x20007F3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B8AA4", Offset = "0x8B8AA4")]
	private sealed class <timedDialogueDisplay>d__11 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002741")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002742")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002743")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BattleDialogueBox <>4__this;

		[Token(Token = "0x4002744")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string text;

		[Token(Token = "0x4002745")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private string <>7__wrap1;

		[Token(Token = "0x4002746")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int <>7__wrap2;

		[Token(Token = "0x1700063B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002E91")]
			[Address(RVA = "0xBBFF8C", Offset = "0xBBFF8C", VA = "0xBBFF8C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700063C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002E93")]
			[Address(RVA = "0xBBFFF4", Offset = "0xBBFFF4", VA = "0xBBFFF4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002E8E")]
		[Address(RVA = "0xBBFCA0", Offset = "0xBBFCA0", VA = "0xBBFCA0")]
		[DebuggerHidden]
		public <timedDialogueDisplay>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x6002E8F")]
		[Address(RVA = "0xBBFD38", Offset = "0xBBFD38", VA = "0xBBFD38", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002E90")]
		[Address(RVA = "0xBBFD3C", Offset = "0xBBFD3C", VA = "0xBBFD3C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002E92")]
		[Address(RVA = "0xBBFF94", Offset = "0xBBFF94", VA = "0xBBFF94", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000EF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TMP_Text dialogueText;

	[Token(Token = "0x4000EF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string dialogueString;

	[Token(Token = "0x4000EF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool dialogueAnimating;

	[Token(Token = "0x4000EF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	private bool dialogueSkipped;

	[Token(Token = "0x4000EF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
	private bool dialogueOver;

	[Token(Token = "0x4000EF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AudioSource dialogueSource;

	[Token(Token = "0x4000EF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Sprite characterPortrait;

	[Token(Token = "0x4000EF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Image portraitImage;

	[Token(Token = "0x4000EFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float timeDisplayed;

	[Token(Token = "0x4000EFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float timeBetweenChars;

	[Token(Token = "0x6000EF5")]
	[Address(RVA = "0xBBFA70", Offset = "0xBBFA70", VA = "0xBBFA70")]
	private void Start()
	{
	}

	[Token(Token = "0x6000EF6")]
	[Address(RVA = "0xBBFC24", Offset = "0xBBFC24", VA = "0xBBFC24")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C8F74", Offset = "0x8C8F74")]
	private IEnumerator timedDialogueDisplay(string text)
	{
		return null;
	}

	[Token(Token = "0x6000EF7")]
	[Address(RVA = "0xBBFCCC", Offset = "0xBBFCCC", VA = "0xBBFCCC")]
	public BattleDialogueBox()
	{
	}
}
[Token(Token = "0x2000263")]
public class BossText : MonoBehaviour
{
	[Token(Token = "0x20007F4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B8AB4", Offset = "0x8B8AB4")]
	private sealed class <textAppear>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002747")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002748")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002749")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BossText <>4__this;

		[Token(Token = "0x400274A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Color <newCol>5__2;

		[Token(Token = "0x400274B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int <i>5__3;

		[Token(Token = "0x1700063D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002E97")]
			[Address(RVA = "0xBC7EE4", Offset = "0xBC7EE4", VA = "0xBC7EE4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700063E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002E99")]
			[Address(RVA = "0xBC7F4C", Offset = "0xBC7F4C", VA = "0xBC7F4C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002E94")]
		[Address(RVA = "0xBC7B74", Offset = "0xBC7B74", VA = "0xBC7B74")]
		[DebuggerHidden]
		public <textAppear>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x6002E95")]
		[Address(RVA = "0xBC7BF8", Offset = "0xBC7BF8", VA = "0xBC7BF8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002E96")]
		[Address(RVA = "0xBC7BFC", Offset = "0xBC7BFC", VA = "0xBC7BFC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002E98")]
		[Address(RVA = "0xBC7EEC", Offset = "0xBC7EEC", VA = "0xBC7EEC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000EFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string bossName;

	[Token(Token = "0x4000EFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TMP_Text text;

	[Token(Token = "0x4000EFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioSource audioSource;

	[Token(Token = "0x6000EF8")]
	[Address(RVA = "0xBC7AD4", Offset = "0xBC7AD4", VA = "0xBC7AD4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000EF9")]
	[Address(RVA = "0xBC7B70", Offset = "0xBC7B70", VA = "0xBC7B70")]
	private void Update()
	{
	}

	[Token(Token = "0x6000EFA")]
	[Address(RVA = "0xBC7B00", Offset = "0xBC7B00", VA = "0xBC7B00")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C8FD8", Offset = "0x8C8FD8")]
	private IEnumerator textAppear()
	{
		return null;
	}

	[Token(Token = "0x6000EFB")]
	[Address(RVA = "0xBC7BA0", Offset = "0xBC7BA0", VA = "0xBC7BA0")]
	public BossText()
	{
	}
}
[Token(Token = "0x2000264")]
public class FadeMaterial : MonoBehaviour
{
	[Token(Token = "0x20007F5")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B8AC4", Offset = "0x8B8AC4")]
	private sealed class <Fade>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400274C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400274D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400274E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FadeMaterial <>4__this;

		[Token(Token = "0x1700063F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002E9D")]
			[Address(RVA = "0xC4C120", Offset = "0xC4C120", VA = "0xC4C120", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000640")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002E9F")]
			[Address(RVA = "0xC4C188", Offset = "0xC4C188", VA = "0xC4C188", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002E9A")]
		[Address(RVA = "0xC4BF10", Offset = "0xC4BF10", VA = "0xC4BF10")]
		[DebuggerHidden]
		public <Fade>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x6002E9B")]
		[Address(RVA = "0xC4BFAC", Offset = "0xC4BFAC", VA = "0xC4BFAC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002E9C")]
		[Address(RVA = "0xC4BFB0", Offset = "0xC4BFB0", VA = "0xC4BFB0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002E9E")]
		[Address(RVA = "0xC4C128", Offset = "0xC4C128", VA = "0xC4C128", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000EFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float maxTime;

	[Token(Token = "0x4000F00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Renderer rend;

	[Token(Token = "0x4000F01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BCB90", Offset = "0x8BCB90")]
	public UnityEvent onDissolveEnded;

	[Token(Token = "0x6000EFC")]
	[Address(RVA = "0xC4BE70", Offset = "0xC4BE70", VA = "0xC4BE70")]
	public void startDissolve()
	{
	}

	[Token(Token = "0x6000EFD")]
	[Address(RVA = "0xC4BF0C", Offset = "0xC4BF0C", VA = "0xC4BF0C")]
	public void makeWorldGrey()
	{
	}

	[Token(Token = "0x6000EFE")]
	[Address(RVA = "0xC4BE9C", Offset = "0xC4BE9C", VA = "0xC4BE9C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C903C", Offset = "0x8C903C")]
	private IEnumerator Fade()
	{
		return null;
	}

	[Token(Token = "0x6000EFF")]
	[Address(RVA = "0xC4BF3C", Offset = "0xC4BF3C", VA = "0xC4BF3C")]
	public FadeMaterial()
	{
	}
}
[Token(Token = "0x2000265")]
public class HaxChangeCard : MonoBehaviour
{
	[Token(Token = "0x4000F02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text spellText;

	[Token(Token = "0x4000F03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject spinny;

	[Token(Token = "0x4000F04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float deathTime;

	[Token(Token = "0x4000F05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float maxDeathTime;

	[Token(Token = "0x4000F06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private UnityEngine.Vector3 startPos;

	[Token(Token = "0x6000F00")]
	[Address(RVA = "0xAD4D14", Offset = "0xAD4D14", VA = "0xAD4D14")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F01")]
	[Address(RVA = "0xAD4D50", Offset = "0xAD4D50", VA = "0xAD4D50")]
	private void Update()
	{
	}

	[Token(Token = "0x6000F02")]
	[Address(RVA = "0xAD4F40", Offset = "0xAD4F40", VA = "0xAD4F40")]
	public HaxChangeCard()
	{
	}
}
[Token(Token = "0x2000266")]
public class LookAtPlayer : MonoBehaviour
{
	[Token(Token = "0x4000F07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Transform cam;

	[Token(Token = "0x6000F03")]
	[Address(RVA = "0xAE7650", Offset = "0xAE7650", VA = "0xAE7650")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F04")]
	[Address(RVA = "0xAE77BC", Offset = "0xAE77BC", VA = "0xAE77BC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000F05")]
	[Address(RVA = "0xAE795C", Offset = "0xAE795C", VA = "0xAE795C")]
	public LookAtPlayer()
	{
	}
}
[Token(Token = "0x2000267")]
public static class ExtensionMethods
{
	[Token(Token = "0x6000F06")]
	[Address(RVA = "0xC4BE54", Offset = "0xC4BE54", VA = "0xC4BE54")]
	public static float Remap(this float value, float from1, float to1, float from2, float to2)
	{
		return default(float);
	}
}
[Token(Token = "0x2000268")]
public class UIBar : MonoBehaviour
{
	[Token(Token = "0x4000F08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool autoRotate;

	[Token(Token = "0x4000F09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool useGradient;

	[Token(Token = "0x4000F0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool ghostEffect;

	[Token(Token = "0x4000F0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Image bar;

	[Token(Token = "0x4000F0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Image ghostBar;

	[Token(Token = "0x4000F0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Text barText;

	[Token(Token = "0x4000F0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float maxAmount;

	[Token(Token = "0x4000F0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float _amount;

	[Token(Token = "0x4000F10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool debug;

	[Token(Token = "0x4000F11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Gradient gradient;

	[Token(Token = "0x4000F12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool _activateOnReset;

	[Token(Token = "0x4000F13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float healthRemap;

	[Token(Token = "0x4000F14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool colorSet;

	[Token(Token = "0x170000F6")]
	public bool show
	{
		[Token(Token = "0x6000F08")]
		[Address(RVA = "0x1A62420", Offset = "0x1A62420", VA = "0x1A62420")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000F07")]
		[Address(RVA = "0x1A623E8", Offset = "0x1A623E8", VA = "0x1A623E8")]
		set
		{
		}
	}

	[Token(Token = "0x170000F7")]
	public float amount
	{
		[Token(Token = "0x6000F0B")]
		[Address(RVA = "0x1A62480", Offset = "0x1A62480", VA = "0x1A62480")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000F0C")]
		[Address(RVA = "0x1A62488", Offset = "0x1A62488", VA = "0x1A62488")]
		set
		{
		}
	}

	[Token(Token = "0x6000F09")]
	[Address(RVA = "0x1A62428", Offset = "0x1A62428", VA = "0x1A62428")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F0A")]
	[Address(RVA = "0x1A6242C", Offset = "0x1A6242C", VA = "0x1A6242C")]
	private void updateBarText()
	{
	}

	[Token(Token = "0x6000F0D")]
	[Address(RVA = "0x1A626D0", Offset = "0x1A626D0", VA = "0x1A626D0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000F0E")]
	[Address(RVA = "0x1A62740", Offset = "0x1A62740", VA = "0x1A62740")]
	public void reset()
	{
	}

	[Token(Token = "0x6000F0F")]
	[Address(RVA = "0x1A62858", Offset = "0x1A62858", VA = "0x1A62858")]
	public UIBar()
	{
	}
}
[Token(Token = "0x2000269")]
public class UIBattleInfoCanvas : MonoBehaviour
{
	[Token(Token = "0x4000F15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Animator phaseTextAnim;

	[Token(Token = "0x4000F16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Animator notificationAnim;

	[Token(Token = "0x4000F17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static UIBattleInfoCanvas instance;

	[Token(Token = "0x6000F10")]
	[Address(RVA = "0x1A62870", Offset = "0x1A62870", VA = "0x1A62870")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000F11")]
	[Address(RVA = "0x1A628C4", Offset = "0x1A628C4", VA = "0x1A628C4")]
	public UIBattleInfoCanvas()
	{
	}
}
[Token(Token = "0x200026A")]
public class UIHud : MonoBehaviour
{
	[Token(Token = "0x4000F18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform targetTrans;

	[Token(Token = "0x4000F19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform buffTrans;

	[Token(Token = "0x4000F1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<GameObject> buffIcons;

	[Token(Token = "0x4000F1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject buffPrefab;

	[Token(Token = "0x4000F1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Animator healthWarningAnim;

	[Token(Token = "0x4000F1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject redBlinders;

	[Token(Token = "0x4000F1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject damageTextprefab;

	[Token(Token = "0x4000F1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform damageTextSpawn;

	[Token(Token = "0x6000F12")]
	[Address(RVA = "0x1A64F8C", Offset = "0x1A64F8C", VA = "0x1A64F8C")]
	public void addBuffIcon(BattleBuff buff)
	{
	}

	[Token(Token = "0x6000F13")]
	[Address(RVA = "0x1A651C8", Offset = "0x1A651C8", VA = "0x1A651C8")]
	public void updateBuffIcons()
	{
	}

	[Token(Token = "0x6000F14")]
	[Address(RVA = "0x1A652D4", Offset = "0x1A652D4", VA = "0x1A652D4")]
	public void removeAllIcons()
	{
	}

	[Token(Token = "0x6000F15")]
	[Address(RVA = "0x1A653A0", Offset = "0x1A653A0", VA = "0x1A653A0")]
	public void removeBuffIcon(string buffName)
	{
	}

	[Token(Token = "0x6000F16")]
	[Address(RVA = "0x1A65508", Offset = "0x1A65508", VA = "0x1A65508")]
	public void playHealthWarningAnimation()
	{
	}

	[Token(Token = "0x6000F17")]
	[Address(RVA = "0x1A65578", Offset = "0x1A65578", VA = "0x1A65578")]
	public void showDamageText(int damage)
	{
	}

	[Token(Token = "0x6000F18")]
	[Address(RVA = "0x1A65760", Offset = "0x1A65760", VA = "0x1A65760")]
	public void showHealText(int health)
	{
	}

	[Token(Token = "0x6000F19")]
	[Address(RVA = "0x1A65978", Offset = "0x1A65978", VA = "0x1A65978")]
	public UIHud()
	{
	}
}
[Token(Token = "0x200026B")]
public class BattleSpellButton : MonoBehaviour, ISelectHandler, IEventSystemHandler, IPointerEnterHandler
{
	[Token(Token = "0x4000F20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Button button;

	[Token(Token = "0x6000F1A")]
	[Address(RVA = "0xBC433C", Offset = "0xBC433C", VA = "0xBC433C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F1B")]
	[Address(RVA = "0xBC4394", Offset = "0xBC4394", VA = "0xBC4394", Slot = "4")]
	public void OnSelect(BaseEventData eventData)
	{
	}

	[Token(Token = "0x6000F1C")]
	[Address(RVA = "0xBC4398", Offset = "0xBC4398", VA = "0xBC4398", Slot = "5")]
	public void OnPointerEnter(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000F1D")]
	[Address(RVA = "0xBC439C", Offset = "0xBC439C", VA = "0xBC439C")]
	public BattleSpellButton()
	{
	}
}
[Token(Token = "0x200026C")]
public class BlackFade : MonoBehaviour
{
	[Token(Token = "0x20007F6")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B8AD4", Offset = "0x8B8AD4")]
	private sealed class <fadeToBlackTimer>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400274F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002750")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002751")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BlackFade <>4__this;

		[Token(Token = "0x4002752")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float time;

		[Token(Token = "0x4002753")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Color <newCol>5__2;

		[Token(Token = "0x17000641")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002EA3")]
			[Address(RVA = "0xBC6F0C", Offset = "0xBC6F0C", VA = "0xBC6F0C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000642")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002EA5")]
			[Address(RVA = "0xBC6F74", Offset = "0xBC6F74", VA = "0xBC6F74", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002EA0")]
		[Address(RVA = "0xBC6A8C", Offset = "0xBC6A8C", VA = "0xBC6A8C")]
		[DebuggerHidden]
		public <fadeToBlackTimer>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x6002EA1")]
		[Address(RVA = "0xBC6D48", Offset = "0xBC6D48", VA = "0xBC6D48", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002EA2")]
		[Address(RVA = "0xBC6D4C", Offset = "0xBC6D4C", VA = "0xBC6D4C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002EA4")]
		[Address(RVA = "0xBC6F14", Offset = "0xBC6F14", VA = "0xBC6F14", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20007F7")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B8AE4", Offset = "0x8B8AE4")]
	private sealed class <fadeToWhiteTimer>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002754")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002755")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002756")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BlackFade <>4__this;

		[Token(Token = "0x4002757")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float time;

		[Token(Token = "0x4002758")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Color <newCol>5__2;

		[Token(Token = "0x17000643")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002EA9")]
			[Address(RVA = "0xBC7144", Offset = "0xBC7144", VA = "0xBC7144", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000644")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002EAB")]
			[Address(RVA = "0xBC71AC", Offset = "0xBC71AC", VA = "0xBC71AC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002EA6")]
		[Address(RVA = "0xBC6AB8", Offset = "0xBC6AB8", VA = "0xBC6AB8")]
		[DebuggerHidden]
		public <fadeToWhiteTimer>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x6002EA7")]
		[Address(RVA = "0xBC6F7C", Offset = "0xBC6F7C", VA = "0xBC6F7C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002EA8")]
		[Address(RVA = "0xBC6F80", Offset = "0xBC6F80", VA = "0xBC6F80", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002EAA")]
		[Address(RVA = "0xBC714C", Offset = "0xBC714C", VA = "0xBC714C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20007F8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B8AF4", Offset = "0x8B8AF4")]
	private sealed class <fadeFromBlackTimer>d__10 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002759")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400275A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400275B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BlackFade <>4__this;

		[Token(Token = "0x400275C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float time;

		[Token(Token = "0x400275D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Color <newCol>5__2;

		[Token(Token = "0x17000645")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002EAF")]
			[Address(RVA = "0xBC6CD8", Offset = "0xBC6CD8", VA = "0xBC6CD8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000646")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002EB1")]
			[Address(RVA = "0xBC6D40", Offset = "0xBC6D40", VA = "0xBC6D40", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002EAC")]
		[Address(RVA = "0xBC6AE4", Offset = "0xBC6AE4", VA = "0xBC6AE4")]
		[DebuggerHidden]
		public <fadeFromBlackTimer>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x6002EAD")]
		[Address(RVA = "0xBC6B18", Offset = "0xBC6B18", VA = "0xBC6B18", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002EAE")]
		[Address(RVA = "0xBC6B1C", Offset = "0xBC6B1C", VA = "0xBC6B1C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002EB0")]
		[Address(RVA = "0xBC6CE0", Offset = "0xBC6CE0", VA = "0xBC6CE0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000F21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Image image;

	[Token(Token = "0x4000F22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static BlackFade instance;

	[Token(Token = "0x4000F23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool isFading;

	[Token(Token = "0x4000F24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool isReturning;

	[Token(Token = "0x6000F1E")]
	[Address(RVA = "0xBC6834", Offset = "0xBC6834", VA = "0xBC6834")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000F1F")]
	[Address(RVA = "0xBC6888", Offset = "0xBC6888", VA = "0xBC6888")]
	public void fadeToBlack(float time)
	{
	}

	[Token(Token = "0x6000F20")]
	[Address(RVA = "0xBC6934", Offset = "0xBC6934", VA = "0xBC6934")]
	public void fadeToWhite(float time)
	{
	}

	[Token(Token = "0x6000F21")]
	[Address(RVA = "0xBC69E0", Offset = "0xBC69E0", VA = "0xBC69E0")]
	public void fadeFromBlack(float time)
	{
	}

	[Token(Token = "0x6000F22")]
	[Address(RVA = "0xBC68B4", Offset = "0xBC68B4", VA = "0xBC68B4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C90B0", Offset = "0x8C90B0")]
	private IEnumerator fadeToBlackTimer(float time)
	{
		return null;
	}

	[Token(Token = "0x6000F23")]
	[Address(RVA = "0xBC6960", Offset = "0xBC6960", VA = "0xBC6960")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C9114", Offset = "0x8C9114")]
	private IEnumerator fadeToWhiteTimer(float time)
	{
		return null;
	}

	[Token(Token = "0x6000F24")]
	[Address(RVA = "0xBC6A0C", Offset = "0xBC6A0C", VA = "0xBC6A0C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C9178", Offset = "0x8C9178")]
	private IEnumerator fadeFromBlackTimer(float time)
	{
		return null;
	}

	[Token(Token = "0x6000F25")]
	[Address(RVA = "0xBC6B10", Offset = "0xBC6B10", VA = "0xBC6B10")]
	public BlackFade()
	{
	}
}
[Token(Token = "0x200026D")]
public class ClassSelectMenu : MonoBehaviour
{
	[Token(Token = "0x20007F9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B8B04", Offset = "0x8B8B04")]
	private sealed class <loadSceneTimer>d__20 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400275E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400275F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x17000647")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002EB5")]
			[Address(RVA = "0xB08D44", Offset = "0xB08D44", VA = "0xB08D44", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000648")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002EB7")]
			[Address(RVA = "0xB08DAC", Offset = "0xB08DAC", VA = "0xB08DAC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002EB2")]
		[Address(RVA = "0xB08BCC", Offset = "0xB08BCC", VA = "0xB08BCC")]
		[DebuggerHidden]
		public <loadSceneTimer>d__20(int <>1__state)
		{
		}

		[Token(Token = "0x6002EB3")]
		[Address(RVA = "0xB08C40", Offset = "0xB08C40", VA = "0xB08C40", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002EB4")]
		[Address(RVA = "0xB08C44", Offset = "0xB08C44", VA = "0xB08C44", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002EB6")]
		[Address(RVA = "0xB08D4C", Offset = "0xB08D4C", VA = "0xB08D4C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20007FA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B8B14", Offset = "0x8B8B14")]
	private sealed class <timedDialogueDisplay>d__21 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002760")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002761")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002762")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ClassSelectMenu <>4__this;

		[Token(Token = "0x4002763")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string text;

		[Token(Token = "0x4002764")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private string <>7__wrap1;

		[Token(Token = "0x4002765")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int <>7__wrap2;

		[Token(Token = "0x17000649")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002EBB")]
			[Address(RVA = "0xB08FA8", Offset = "0xB08FA8", VA = "0xB08FA8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700064A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002EBD")]
			[Address(RVA = "0xB09010", Offset = "0xB09010", VA = "0xB09010", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002EB8")]
		[Address(RVA = "0xB08BF8", Offset = "0xB08BF8", VA = "0xB08BF8")]
		[DebuggerHidden]
		public <timedDialogueDisplay>d__21(int <>1__state)
		{
		}

		[Token(Token = "0x6002EB9")]
		[Address(RVA = "0xB08DB4", Offset = "0xB08DB4", VA = "0xB08DB4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002EBA")]
		[Address(RVA = "0xB08DB8", Offset = "0xB08DB8", VA = "0xB08DB8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002EBC")]
		[Address(RVA = "0xB08FB0", Offset = "0xB08FB0", VA = "0xB08FB0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000F25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text infoText;

	[Token(Token = "0x4000F26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int selectedClass;

	[Token(Token = "0x4000F27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string[] selectStrings;

	[Token(Token = "0x4000F28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool dialogueAnimating;

	[Token(Token = "0x4000F29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	private bool dialogueSkipped;

	[Token(Token = "0x4000F2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
	private bool dialogueOver;

	[Token(Token = "0x4000F2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject[] selectOrbs;

	[Token(Token = "0x4000F2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GameObject selectedOrb;

	[Token(Token = "0x4000F2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject placementOrb;

	[Token(Token = "0x4000F2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ArcaxerClass[] classes;

	[Token(Token = "0x4000F2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool orbHeld;

	[Token(Token = "0x4000F30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	private bool newSceneLoading;

	[Token(Token = "0x4000F31")]
	private const float smallOrbScale = 0.2f;

	[Token(Token = "0x4000F32")]
	private const float bigOrbScale = 5f;

	[Token(Token = "0x4000F33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float textSpeed;

	[Token(Token = "0x6000F26")]
	[Address(RVA = "0xB08560", Offset = "0xB08560", VA = "0xB08560")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F27")]
	[Address(RVA = "0xB0862C", Offset = "0xB0862C", VA = "0xB0862C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000F28")]
	[Address(RVA = "0xB087C0", Offset = "0xB087C0", VA = "0xB087C0")]
	public void selectClass(int num)
	{
	}

	[Token(Token = "0x6000F29")]
	[Address(RVA = "0xB08940", Offset = "0xB08940", VA = "0xB08940")]
	public void deselectClass()
	{
	}

	[Token(Token = "0x6000F2A")]
	[Address(RVA = "0xB08A74", Offset = "0xB08A74", VA = "0xB08A74")]
	public void loadNextScene()
	{
	}

	[Token(Token = "0x6000F2B")]
	[Address(RVA = "0xB08B6C", Offset = "0xB08B6C", VA = "0xB08B6C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C91DC", Offset = "0x8C91DC")]
	private IEnumerator loadSceneTimer()
	{
		return null;
	}

	[Token(Token = "0x6000F2C")]
	[Address(RVA = "0xB085B0", Offset = "0xB085B0", VA = "0xB085B0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C9240", Offset = "0x8C9240")]
	private IEnumerator timedDialogueDisplay(string text)
	{
		return null;
	}

	[Token(Token = "0x6000F2D")]
	[Address(RVA = "0xB08C24", Offset = "0xB08C24", VA = "0xB08C24")]
	public ClassSelectMenu()
	{
	}
}
[Token(Token = "0x200026E")]
public class ClassSelectOrb : MonoBehaviour
{
	[Token(Token = "0x4000F34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioSource source;

	[Token(Token = "0x4000F35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private UnityEngine.Vector3 startPos;

	[Token(Token = "0x4000F36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Quaternion startRot;

	[Token(Token = "0x4000F37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private bool startingLoad;

	[Token(Token = "0x4000F38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
	private bool pickedUp;

	[Token(Token = "0x4000F39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public UnityEvent onOrbPlacement;

	[Token(Token = "0x6000F2E")]
	[Address(RVA = "0xB09018", Offset = "0xB09018", VA = "0xB09018")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F2F")]
	[Address(RVA = "0xB09074", Offset = "0xB09074", VA = "0xB09074")]
	private void Update()
	{
	}

	[Token(Token = "0x6000F30")]
	[Address(RVA = "0xB090E0", Offset = "0xB090E0", VA = "0xB090E0")]
	public void onDrop()
	{
	}

	[Token(Token = "0x6000F31")]
	[Address(RVA = "0xB091B8", Offset = "0xB091B8", VA = "0xB091B8")]
	public void onPickuP()
	{
	}

	[Token(Token = "0x6000F32")]
	[Address(RVA = "0xB091E0", Offset = "0xB091E0", VA = "0xB091E0")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000F33")]
	[Address(RVA = "0xB09290", Offset = "0xB09290", VA = "0xB09290")]
	public ClassSelectOrb()
	{
	}
}
[Token(Token = "0x200026F")]
public class EnemyInfoCanvas : MonoBehaviour
{
	[Token(Token = "0x4000F3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text nameText;

	[Token(Token = "0x4000F3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UIBar hpBar;

	[Token(Token = "0x4000F3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform buffTrans;

	[Token(Token = "0x4000F3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject buffPrefab;

	[Token(Token = "0x4000F3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<GameObject> buffIcons;

	[Token(Token = "0x6000F34")]
	[Address(RVA = "0xFDEBE0", Offset = "0xFDEBE0", VA = "0xFDEBE0")]
	public void addBuffIcon(GlitchEffects buff)
	{
	}

	[Token(Token = "0x6000F35")]
	[Address(RVA = "0xFDEE18", Offset = "0xFDEE18", VA = "0xFDEE18")]
	public void updateBuffIcons(List<GlitchEffects> effects)
	{
	}

	[Token(Token = "0x6000F36")]
	[Address(RVA = "0xFDEF9C", Offset = "0xFDEF9C", VA = "0xFDEF9C")]
	public void removeBuffIcon(string buffName)
	{
	}

	[Token(Token = "0x6000F37")]
	[Address(RVA = "0xFDF128", Offset = "0xFDF128", VA = "0xFDF128")]
	public EnemyInfoCanvas()
	{
	}
}
[Token(Token = "0x2000270")]
public class PlayerOverworld : MonoBehaviour
{
	[Token(Token = "0x20007FB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B8B24", Offset = "0x8B8B24")]
	private sealed class <deathAnimation>d__47 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002766")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002767")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002768")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PlayerOverworld <>4__this;

		[Token(Token = "0x1700064B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002EC1")]
			[Address(RVA = "0xB6EA50", Offset = "0xB6EA50", VA = "0xB6EA50", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700064C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002EC3")]
			[Address(RVA = "0xB6EAB8", Offset = "0xB6EAB8", VA = "0xB6EAB8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002EBE")]
		[Address(RVA = "0xB6E704", Offset = "0xB6E704", VA = "0xB6E704")]
		[DebuggerHidden]
		public <deathAnimation>d__47(int <>1__state)
		{
		}

		[Token(Token = "0x6002EBF")]
		[Address(RVA = "0xB6E90C", Offset = "0xB6E90C", VA = "0xB6E90C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002EC0")]
		[Address(RVA = "0xB6E910", Offset = "0xB6E910", VA = "0xB6E910", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002EC2")]
		[Address(RVA = "0xB6EA58", Offset = "0xB6EA58", VA = "0xB6EA58", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000F3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BCBC8", Offset = "0x8BCBC8")]
	public GameObject UICanvas;

	[Token(Token = "0x4000F40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject UIInventory;

	[Token(Token = "0x4000F41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject UILoadout;

	[Token(Token = "0x4000F42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public UIMenu UITabs;

	[Token(Token = "0x4000F43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public UIShop shop;

	[Token(Token = "0x4000F44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public UITaskMenu taskMenu;

	[Token(Token = "0x4000F45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject cam;

	[Token(Token = "0x4000F46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject floorTextPrefab;

	[Token(Token = "0x4000F47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Animator UIHUDAnimator;

	[Token(Token = "0x4000F48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BCC00", Offset = "0x8BCC00")]
	public static PlayerOverworld instance;

	[Token(Token = "0x4000F49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject leftHand;

	[Token(Token = "0x4000F4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject rightHand;

	[Token(Token = "0x4000F4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject VRCameraRig;

	[Token(Token = "0x4000F4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject pointerSphere;

	[Token(Token = "0x4000F4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public ThirdPersonCamFollow camFollow;

	[Token(Token = "0x4000F4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public TunnellingMobile tunneling;

	[Token(Token = "0x4000F4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public GameObject firstEnemyAttacked;

	[Token(Token = "0x4000F50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private UnityEngine.Vector3 originalCameraScale;

	[Token(Token = "0x4000F51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private UnityEngine.Vector3 smallCameraScale;

	[Token(Token = "0x4000F52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private UnityEngine.Vector3 preShrinkPosition;

	[Token(Token = "0x4000F53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private Quaternion originalRotation;

	[Token(Token = "0x4000F54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public OverworldPet activePet;

	[Token(Token = "0x4000F55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public Transform playerParentTransform;

	[Token(Token = "0x4000F56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private GameObject currentFloorText;

	[Token(Token = "0x4000F57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public OVRInputModule ovrInputModule;

	[Token(Token = "0x4000F58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BCC38", Offset = "0x8BCC38")]
	public GameObject OculusRig;

	[Token(Token = "0x4000F59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private Dictionary<int, string> skinDic;

	[Token(Token = "0x4000F5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private bool isAlive;

	[Token(Token = "0x4000F5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x101")]
	private bool _inFirstPerson;

	[Token(Token = "0x4000F5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x102")]
	public bool lockPerspectiveSwap;

	[Token(Token = "0x170000F8")]
	public bool inFirstPerson
	{
		[Token(Token = "0x6000F38")]
		[Address(RVA = "0xB6C2BC", Offset = "0xB6C2BC", VA = "0xB6C2BC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000F9")]
	private bool canSwapPerspective
	{
		[Token(Token = "0x6000F39")]
		[Address(RVA = "0xB6C2C4", Offset = "0xB6C2C4", VA = "0xB6C2C4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000F3A")]
	[Address(RVA = "0xB6C3F4", Offset = "0xB6C3F4", VA = "0xB6C3F4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000F3B")]
	[Address(RVA = "0xB6C448", Offset = "0xB6C448", VA = "0xB6C448")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F3C")]
	[Address(RVA = "0xB6CA90", Offset = "0xB6CA90", VA = "0xB6CA90")]
	public void updatePlayerSkin()
	{
	}

	[Token(Token = "0x6000F3D")]
	[Address(RVA = "0xB6C9A8", Offset = "0xB6C9A8", VA = "0xB6C9A8")]
	public void updateHandedPointed()
	{
	}

	[Token(Token = "0x6000F3E")]
	[Address(RVA = "0xB6C898", Offset = "0xB6C898", VA = "0xB6C898")]
	public void loadCameraAngle()
	{
	}

	[Token(Token = "0x6000F3F")]
	[Address(RVA = "0xB6CCD0", Offset = "0xB6CCD0", VA = "0xB6CCD0")]
	public void resetCameraAngle()
	{
	}

	[Token(Token = "0x6000F40")]
	[Address(RVA = "0xB6CDD8", Offset = "0xB6CDD8", VA = "0xB6CDD8")]
	public void playLevelUpEffect()
	{
	}

	[Token(Token = "0x6000F41")]
	[Address(RVA = "0xB6CF34", Offset = "0xB6CF34", VA = "0xB6CF34")]
	private void Update()
	{
	}

	[Token(Token = "0x6000F42")]
	[Address(RVA = "0xB6DA3C", Offset = "0xB6DA3C", VA = "0xB6DA3C")]
	public void displayFloorText()
	{
	}

	[Token(Token = "0x6000F43")]
	[Address(RVA = "0xB6E2B0", Offset = "0xB6E2B0", VA = "0xB6E2B0")]
	public void swapToInventory()
	{
	}

	[Token(Token = "0x6000F44")]
	[Address(RVA = "0xB6E2F4", Offset = "0xB6E2F4", VA = "0xB6E2F4")]
	public void swapToLoadout()
	{
	}

	[Token(Token = "0x6000F45")]
	[Address(RVA = "0xB6E338", Offset = "0xB6E338", VA = "0xB6E338")]
	public void dealDamageToPlayer(int damage)
	{
	}

	[Token(Token = "0x6000F46")]
	[Address(RVA = "0xB6E618", Offset = "0xB6E618", VA = "0xB6E618")]
	public void killPlayer()
	{
	}

	[Token(Token = "0x6000F47")]
	[Address(RVA = "0xB6E694", Offset = "0xB6E694", VA = "0xB6E694")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C92A4", Offset = "0x8C92A4")]
	private IEnumerator deathAnimation()
	{
		return null;
	}

	[Token(Token = "0x6000F48")]
	[Address(RVA = "0xB6D7D0", Offset = "0xB6D7D0", VA = "0xB6D7D0")]
	public void switchToFPCam()
	{
	}

	[Token(Token = "0x6000F49")]
	[Address(RVA = "0xB6D68C", Offset = "0xB6D68C", VA = "0xB6D68C")]
	public void switchToTPCam(bool enableMovement = true)
	{
	}

	[Token(Token = "0x6000F4A")]
	[Address(RVA = "0xB6E730", Offset = "0xB6E730", VA = "0xB6E730")]
	public void unparentPlayer()
	{
	}

	[Token(Token = "0x6000F4B")]
	[Address(RVA = "0xB6E764", Offset = "0xB6E764", VA = "0xB6E764")]
	public PlayerOverworld()
	{
	}
}
[Token(Token = "0x2000271")]
public class UIButton : MonoBehaviour, ISelectHandler, IEventSystemHandler, IPointerEnterHandler
{
	[Token(Token = "0x4000F5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Button button;

	[Token(Token = "0x4000F5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UnityEvent OnPointerEnterEvent;

	[Token(Token = "0x6000F4C")]
	[Address(RVA = "0x1A63B48", Offset = "0x1A63B48", VA = "0x1A63B48")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F4D")]
	[Address(RVA = "0x1A63BA0", Offset = "0x1A63BA0", VA = "0x1A63BA0")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000F4E")]
	[Address(RVA = "0x1A63C60", Offset = "0x1A63C60", VA = "0x1A63C60", Slot = "4")]
	public void OnSelect(BaseEventData eventData)
	{
	}

	[Token(Token = "0x6000F4F")]
	[Address(RVA = "0x1A63C64", Offset = "0x1A63C64", VA = "0x1A63C64", Slot = "5")]
	public void OnPointerEnter(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000F50")]
	[Address(RVA = "0x1A63D2C", Offset = "0x1A63D2C", VA = "0x1A63D2C")]
	public UIButton()
	{
	}
}
[Token(Token = "0x2000272")]
public class UIFloorSelect : MonoBehaviour
{
	[Token(Token = "0x20007FC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B8B34", Offset = "0x8B8B34")]
	private sealed class <warpTImer>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002769")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400276A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400276B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UIFloorSelect <>4__this;

		[Token(Token = "0x400276C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string dungeonSaveString;

		[Token(Token = "0x1700064D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002EC7")]
			[Address(RVA = "0x1A64F1C", Offset = "0x1A64F1C", VA = "0x1A64F1C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700064E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002EC9")]
			[Address(RVA = "0x1A64F84", Offset = "0x1A64F84", VA = "0x1A64F84", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002EC4")]
		[Address(RVA = "0x1A64B78", Offset = "0x1A64B78", VA = "0x1A64B78")]
		[DebuggerHidden]
		public <warpTImer>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x6002EC5")]
		[Address(RVA = "0x1A64BAC", Offset = "0x1A64BAC", VA = "0x1A64BAC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002EC6")]
		[Address(RVA = "0x1A64BB0", Offset = "0x1A64BB0", VA = "0x1A64BB0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002EC8")]
		[Address(RVA = "0x1A64F24", Offset = "0x1A64F24", VA = "0x1A64F24", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000F5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool hasWarped;

	[Token(Token = "0x4000F60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject warpMenu;

	[Token(Token = "0x4000F61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject[] warpButtons;

	[Token(Token = "0x6000F51")]
	[Address(RVA = "0x1A646F8", Offset = "0x1A646F8", VA = "0x1A646F8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F52")]
	[Address(RVA = "0x1A646FC", Offset = "0x1A646FC", VA = "0x1A646FC")]
	private int roundDown(int num)
	{
		return default(int);
	}

	[Token(Token = "0x6000F53")]
	[Address(RVA = "0x1A64774", Offset = "0x1A64774", VA = "0x1A64774")]
	public void leaveWarp()
	{
	}

	[Token(Token = "0x6000F54")]
	[Address(RVA = "0x1A64800", Offset = "0x1A64800", VA = "0x1A64800")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000F55")]
	[Address(RVA = "0x1A64A24", Offset = "0x1A64A24", VA = "0x1A64A24")]
	public void closeMenu()
	{
	}

	[Token(Token = "0x6000F56")]
	[Address(RVA = "0x1A64AC4", Offset = "0x1A64AC4", VA = "0x1A64AC4")]
	public void loadDungeon(string dungeonSaveString)
	{
	}

	[Token(Token = "0x6000F57")]
	[Address(RVA = "0x1A64AFC", Offset = "0x1A64AFC", VA = "0x1A64AFC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C9308", Offset = "0x8C9308")]
	public IEnumerator warpTImer(string dungeonSaveString)
	{
		return null;
	}

	[Token(Token = "0x6000F58")]
	[Address(RVA = "0x1A64BA4", Offset = "0x1A64BA4", VA = "0x1A64BA4")]
	public UIFloorSelect()
	{
	}
}
[Token(Token = "0x2000273")]
public class UIIntroMenu : MonoBehaviour
{
	[Token(Token = "0x20007FD")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B8B44", Offset = "0x8B8B44")]
	private sealed class <exitTimer>d__24 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400276D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400276E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x1700064F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002ECD")]
			[Address(RVA = "0x1A6859C", Offset = "0x1A6859C", VA = "0x1A6859C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000650")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002ECF")]
			[Address(RVA = "0x1A68604", Offset = "0x1A68604", VA = "0x1A68604", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002ECA")]
		[Address(RVA = "0x1A65E5C", Offset = "0x1A65E5C", VA = "0x1A65E5C")]
		[DebuggerHidden]
		public <exitTimer>d__24(int <>1__state)
		{
		}

		[Token(Token = "0x6002ECB")]
		[Address(RVA = "0x1A684FC", Offset = "0x1A684FC", VA = "0x1A684FC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002ECC")]
		[Address(RVA = "0x1A68500", Offset = "0x1A68500", VA = "0x1A68500", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002ECE")]
		[Address(RVA = "0x1A685A4", Offset = "0x1A685A4", VA = "0x1A685A4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20007FE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B8B54", Offset = "0x8B8B54")]
	private sealed class <StartTimer>d__29 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400276F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002770")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002771")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UIIntroMenu <>4__this;

		[Token(Token = "0x17000651")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002ED3")]
			[Address(RVA = "0x1A6848C", Offset = "0x1A6848C", VA = "0x1A6848C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000652")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002ED5")]
			[Address(RVA = "0x1A684F4", Offset = "0x1A684F4", VA = "0x1A684F4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002ED0")]
		[Address(RVA = "0x1A66E44", Offset = "0x1A66E44", VA = "0x1A66E44")]
		[DebuggerHidden]
		public <StartTimer>d__29(int <>1__state)
		{
		}

		[Token(Token = "0x6002ED1")]
		[Address(RVA = "0x1A680BC", Offset = "0x1A680BC", VA = "0x1A680BC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002ED2")]
		[Address(RVA = "0x1A680C0", Offset = "0x1A680C0", VA = "0x1A680C0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002ED4")]
		[Address(RVA = "0x1A68494", Offset = "0x1A68494", VA = "0x1A68494", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20007FF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B8B64", Offset = "0x8B8B64")]
	private sealed class <>c__DisplayClass31_0
	{
		[Token(Token = "0x4002772")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int i;

		[Token(Token = "0x4002773")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UIIntroMenu <>4__this;

		[Token(Token = "0x6002ED6")]
		[Address(RVA = "0x1A66F70", Offset = "0x1A66F70", VA = "0x1A66F70")]
		public <>c__DisplayClass31_0()
		{
		}
	}

	[Token(Token = "0x2000800")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B8B74", Offset = "0x8B8B74")]
	private sealed class <>c__DisplayClass31_1
	{
		[Token(Token = "0x4002774")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AsyncOperationHandle<string> op1;

		[Token(Token = "0x4002775")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AsyncOperationHandle<string> op2;

		[Token(Token = "0x4002776")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public PlayerStats temp;

		[Token(Token = "0x4002777")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public <>c__DisplayClass31_0 CS$<>8__locals1;

		[Token(Token = "0x6002ED7")]
		[Address(RVA = "0x1A66F78", Offset = "0x1A66F78", VA = "0x1A66F78")]
		public <>c__DisplayClass31_1()
		{
		}

		[Token(Token = "0x6002ED8")]
		[Address(RVA = "0x1A67D20", Offset = "0x1A67D20", VA = "0x1A67D20")]
		internal void <updateFileSelectScreen>b__0(AsyncOperationHandle<string> op)
		{
		}

		[Token(Token = "0x6002ED9")]
		[Address(RVA = "0x1A67DCC", Offset = "0x1A67DCC", VA = "0x1A67DCC")]
		internal void <updateFileSelectScreen>b__1(AsyncOperationHandle<string> op)
		{
		}
	}

	[Token(Token = "0x2000801")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B8B84", Offset = "0x8B8B84")]
	private sealed class <>c__DisplayClass31_2
	{
		[Token(Token = "0x4002778")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AsyncOperationHandle<string> op1;

		[Token(Token = "0x4002779")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AsyncOperationHandle<string> op2;

		[Token(Token = "0x400277A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public <>c__DisplayClass31_0 CS$<>8__locals2;

		[Token(Token = "0x6002EDA")]
		[Address(RVA = "0x1A671B4", Offset = "0x1A671B4", VA = "0x1A671B4")]
		public <>c__DisplayClass31_2()
		{
		}

		[Token(Token = "0x6002EDB")]
		[Address(RVA = "0x1A67EC8", Offset = "0x1A67EC8", VA = "0x1A67EC8")]
		internal void <updateFileSelectScreen>b__2(AsyncOperationHandle<string> op)
		{
		}

		[Token(Token = "0x6002EDC")]
		[Address(RVA = "0x1A67F74", Offset = "0x1A67F74", VA = "0x1A67F74")]
		internal void <updateFileSelectScreen>b__3(AsyncOperationHandle<string> op)
		{
		}
	}

	[Token(Token = "0x2000802")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B8B94", Offset = "0x8B8B94")]
	private sealed class <>c__DisplayClass32_0
	{
		[Token(Token = "0x400277B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string textToChange;

		[Token(Token = "0x400277C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AsyncOperationHandle<string> op1;

		[Token(Token = "0x6002EDD")]
		[Address(RVA = "0x1A671BC", Offset = "0x1A671BC", VA = "0x1A671BC")]
		public <>c__DisplayClass32_0()
		{
		}

		[Token(Token = "0x6002EDE")]
		[Address(RVA = "0x1A68064", Offset = "0x1A68064", VA = "0x1A68064")]
		internal void <translateAndSetString>b__0(AsyncOperationHandle<string> op)
		{
		}
	}

	[Token(Token = "0x4000F62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject skipTutorialPrompt;

	[Token(Token = "0x4000F63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject deleteFilePrompt;

	[Token(Token = "0x4000F64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject loadingPrompt;

	[Token(Token = "0x4000F65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject fileSelectScreen;

	[Token(Token = "0x4000F66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject difficultyScreen;

	[Token(Token = "0x4000F67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject keyboard;

	[Token(Token = "0x4000F68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject notEntitledScreen;

	[Token(Token = "0x4000F69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject loadButton;

	[Token(Token = "0x4000F6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject selectSprite;

	[Token(Token = "0x4000F6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject debugModeOn;

	[Token(Token = "0x4000F6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject[] selectPoses;

	[Token(Token = "0x4000F6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Text versionText;

	[Token(Token = "0x4000F6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Text[] fileClassText;

	[Token(Token = "0x4000F6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Text[] fileLvlText;

	[Token(Token = "0x4000F70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Text[] fileNameText;

	[Token(Token = "0x4000F71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Text[] difficultyNameText;

	[Token(Token = "0x4000F72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Text nameField;

	[Token(Token = "0x4000F73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private float cheatTimer;

	[Token(Token = "0x4000F74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private float reqCheatTimer;

	[Token(Token = "0x4000F75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Dropdown dropdown;

	[Token(Token = "0x6000F59")]
	[Address(RVA = "0x1A65980", Offset = "0x1A65980", VA = "0x1A65980")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000F5A")]
	[Address(RVA = "0x1A65B34", Offset = "0x1A65B34", VA = "0x1A65B34")]
	private void getUserCallback(Message<User> msg)
	{
	}

	[Token(Token = "0x6000F5B")]
	[Address(RVA = "0x1A65BE4", Offset = "0x1A65BE4", VA = "0x1A65BE4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F5C")]
	[Address(RVA = "0x1A65D48", Offset = "0x1A65D48", VA = "0x1A65D48")]
	private void EntitlementCallback(Message msg)
	{
	}

	[Token(Token = "0x6000F5D")]
	[Address(RVA = "0x1A65DFC", Offset = "0x1A65DFC", VA = "0x1A65DFC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C936C", Offset = "0x8C936C")]
	private IEnumerator exitTimer()
	{
		return null;
	}

	[Token(Token = "0x6000F5E")]
	[Address(RVA = "0x1A65E88", Offset = "0x1A65E88", VA = "0x1A65E88")]
	private void Update()
	{
	}

	[Token(Token = "0x6000F5F")]
	[Address(RVA = "0x1A65FE0", Offset = "0x1A65FE0", VA = "0x1A65FE0")]
	public void moveSelectSprite(int pos)
	{
	}

	[Token(Token = "0x6000F60")]
	[Address(RVA = "0x1A66064", Offset = "0x1A66064", VA = "0x1A66064")]
	public void newGamePressed()
	{
	}

	[Token(Token = "0x6000F61")]
	[Address(RVA = "0x1A66084", Offset = "0x1A66084", VA = "0x1A66084")]
	public void playStorypressed()
	{
	}

	[Token(Token = "0x6000F62")]
	[Address(RVA = "0x1A65CD8", Offset = "0x1A65CD8", VA = "0x1A65CD8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C93D0", Offset = "0x8C93D0")]
	private IEnumerator StartTimer()
	{
		return null;
	}

	[Token(Token = "0x6000F63")]
	[Address(RVA = "0x1A66E70", Offset = "0x1A66E70", VA = "0x1A66E70")]
	private static void LocaleSelected(int index)
	{
	}

	[Token(Token = "0x6000F64")]
	[Address(RVA = "0x1A66100", Offset = "0x1A66100", VA = "0x1A66100")]
	public void updateFileSelectScreen()
	{
	}

	[Token(Token = "0x6000F65")]
	[Address(RVA = "0x1A66F80", Offset = "0x1A66F80", VA = "0x1A66F80")]
	public void translateAndSetString(string s, string textToChange)
	{
	}

	[Token(Token = "0x6000F66")]
	[Address(RVA = "0x1A671C4", Offset = "0x1A671C4", VA = "0x1A671C4")]
	public void selectSaveFile(int file)
	{
	}

	[Token(Token = "0x6000F67")]
	[Address(RVA = "0x1A67384", Offset = "0x1A67384", VA = "0x1A67384")]
	public void loadGamePressed()
	{
	}

	[Token(Token = "0x6000F68")]
	[Address(RVA = "0x1A67470", Offset = "0x1A67470", VA = "0x1A67470")]
	public void loadNewGame()
	{
	}

	[Token(Token = "0x6000F69")]
	[Address(RVA = "0x1A674E4", Offset = "0x1A674E4", VA = "0x1A674E4")]
	public void deleteButtonPressed(int file)
	{
	}

	[Token(Token = "0x6000F6A")]
	[Address(RVA = "0x1A67574", Offset = "0x1A67574", VA = "0x1A67574")]
	public void deleteFileYesPressed()
	{
	}

	[Token(Token = "0x6000F6B")]
	[Address(RVA = "0x1A677B0", Offset = "0x1A677B0", VA = "0x1A677B0")]
	public void deleteFileNoPressed()
	{
	}

	[Token(Token = "0x6000F6C")]
	[Address(RVA = "0x1A67824", Offset = "0x1A67824", VA = "0x1A67824")]
	public void backFromFileSelectPressed()
	{
	}

	[Token(Token = "0x6000F6D")]
	[Address(RVA = "0x1A67898", Offset = "0x1A67898", VA = "0x1A67898")]
	public void tutorialSkipPressed()
	{
	}

	[Token(Token = "0x6000F6E")]
	[Address(RVA = "0x1A67950", Offset = "0x1A67950", VA = "0x1A67950")]
	public void namesubmitpressed()
	{
	}

	[Token(Token = "0x6000F6F")]
	[Address(RVA = "0x1A67BB0", Offset = "0x1A67BB0", VA = "0x1A67BB0")]
	public void difficultyChosepressed(int num)
	{
	}

	[Token(Token = "0x6000F70")]
	[Address(RVA = "0x1A67C10", Offset = "0x1A67C10", VA = "0x1A67C10")]
	public void tutorialSkipNoPressed()
	{
	}

	[Token(Token = "0x6000F71")]
	[Address(RVA = "0x1A67CAC", Offset = "0x1A67CAC", VA = "0x1A67CAC")]
	public void quitPressed()
	{
	}

	[Token(Token = "0x6000F72")]
	[Address(RVA = "0x1A67D10", Offset = "0x1A67D10", VA = "0x1A67D10")]
	public UIIntroMenu()
	{
	}
}
[Token(Token = "0x2000274")]
public class UIInventory : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000803")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B8BA4", Offset = "0x8B8BA4")]
	private sealed class <>c
	{
		[Token(Token = "0x400277D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x400277E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<Item, string> <>9__34_0;

		[Token(Token = "0x400277F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Func<Item, int> <>9__35_0;

		[Token(Token = "0x4002780")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static Func<Item, Item.ItemRarity> <>9__36_0;

		[Token(Token = "0x6002EE0")]
		[Address(RVA = "0x1A6AA7C", Offset = "0x1A6AA7C", VA = "0x1A6AA7C")]
		public <>c()
		{
		}

		[Token(Token = "0x6002EE1")]
		[Address(RVA = "0x1A6AA84", Offset = "0x1A6AA84", VA = "0x1A6AA84")]
		internal string <sortItemsByName>b__34_0(Item item)
		{
			return null;
		}

		[Token(Token = "0x6002EE2")]
		[Address(RVA = "0x1A6AAA0", Offset = "0x1A6AAA0", VA = "0x1A6AAA0")]
		internal int <sortItemsByValue>b__35_0(Item item)
		{
			return default(int);
		}

		[Token(Token = "0x6002EE3")]
		[Address(RVA = "0x1A6AAB8", Offset = "0x1A6AAB8", VA = "0x1A6AAB8")]
		internal Item.ItemRarity <sortItemsByRarity>b__36_0(Item item)
		{
			return default(Item.ItemRarity);
		}
	}

	[Token(Token = "0x4000F76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static UIInventory instance;

	[Token(Token = "0x4000F77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject UIItemPrefab;

	[Token(Token = "0x4000F78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform UIItemSpawn;

	[Token(Token = "0x4000F79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Item.ItemType currentItemTabType;

	[Token(Token = "0x4000F7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject weaponEquipPrompt;

	[Token(Token = "0x4000F7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject tossItemPrompt;

	[Token(Token = "0x4000F7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Text tossItemPromptText;

	[Token(Token = "0x4000F7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Text tossItemQuantText;

	[Token(Token = "0x4000F7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Text tossButtonText;

	[Token(Token = "0x4000F7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private int tossItemQuantity;

	[Token(Token = "0x4000F80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Text creditsText;

	[Token(Token = "0x4000F81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Text sellValueText;

	[Token(Token = "0x4000F82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Text itemDescriptionText;

	[Token(Token = "0x4000F83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Text topText;

	[Token(Token = "0x4000F84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Text bottomText;

	[Token(Token = "0x4000F85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Text hatText;

	[Token(Token = "0x4000F86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Text weaponLText;

	[Token(Token = "0x4000F87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Text weaponRText;

	[Token(Token = "0x4000F88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Text AccessoryText;

	[Token(Token = "0x4000F89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Image headEquipImg;

	[Token(Token = "0x4000F8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Image topEquipImg;

	[Token(Token = "0x4000F8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Image bottomEquipImg;

	[Token(Token = "0x4000F8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Image weaponLImg;

	[Token(Token = "0x4000F8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public Image weaponRImg;

	[Token(Token = "0x4000F8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public Image accessoryImg;

	[Token(Token = "0x4000F8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public GameObject tabIndicator;

	[Token(Token = "0x4000F90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public GameObject useButton;

	[Token(Token = "0x4000F91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public GameObject tossButton;

	[Token(Token = "0x4000F92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public Transform[] tabIndicatorZones;

	[Token(Token = "0x4000F93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public int currentlySelectedItem;

	[Token(Token = "0x6000F73")]
	[Address(RVA = "0x1A6860C", Offset = "0x1A6860C", VA = "0x1A6860C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000F74")]
	[Address(RVA = "0x1A68754", Offset = "0x1A68754", VA = "0x1A68754")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000F75")]
	[Address(RVA = "0x1A692EC", Offset = "0x1A692EC", VA = "0x1A692EC")]
	public void changeSelectedItem(int num)
	{
	}

	[Token(Token = "0x6000F76")]
	[Address(RVA = "0x1A69790", Offset = "0x1A69790", VA = "0x1A69790")]
	public void useItem()
	{
	}

	[Token(Token = "0x6000F77")]
	[Address(RVA = "0x1A699FC", Offset = "0x1A699FC", VA = "0x1A699FC")]
	public void sortItemsByName()
	{
	}

	[Token(Token = "0x6000F78")]
	[Address(RVA = "0x1A69B54", Offset = "0x1A69B54", VA = "0x1A69B54")]
	public void sortItemsByValue()
	{
	}

	[Token(Token = "0x6000F79")]
	[Address(RVA = "0x1A69CAC", Offset = "0x1A69CAC", VA = "0x1A69CAC")]
	public void sortItemsByRarity()
	{
	}

	[Token(Token = "0x6000F7A")]
	[Address(RVA = "0x1A69E04", Offset = "0x1A69E04", VA = "0x1A69E04")]
	public void tossItem()
	{
	}

	[Token(Token = "0x6000F7B")]
	[Address(RVA = "0x1A6A0EC", Offset = "0x1A6A0EC", VA = "0x1A6A0EC")]
	public void changeTossQuantity(bool increase)
	{
	}

	[Token(Token = "0x6000F7C")]
	[Address(RVA = "0x1A6991C", Offset = "0x1A6991C", VA = "0x1A6991C")]
	private void resetItemSelection()
	{
	}

	[Token(Token = "0x6000F7D")]
	[Address(RVA = "0x1A6A1FC", Offset = "0x1A6A1FC", VA = "0x1A6A1FC")]
	public void tossItemPressed()
	{
	}

	[Token(Token = "0x6000F7E")]
	[Address(RVA = "0x1A6A430", Offset = "0x1A6A430", VA = "0x1A6A430")]
	public void tossItemCancelPressed()
	{
	}

	[Token(Token = "0x6000F7F")]
	[Address(RVA = "0x1A6A450", Offset = "0x1A6A450", VA = "0x1A6A450")]
	public void equipWeapon(bool isRight)
	{
	}

	[Token(Token = "0x6000F80")]
	[Address(RVA = "0x1A6A5FC", Offset = "0x1A6A5FC", VA = "0x1A6A5FC")]
	public void switchTextColorToRarity(Text text, Item.ItemRarity rarity)
	{
	}

	[Token(Token = "0x6000F81")]
	[Address(RVA = "0x1A68758", Offset = "0x1A68758", VA = "0x1A68758")]
	public void refreshItemList()
	{
	}

	[Token(Token = "0x6000F82")]
	[Address(RVA = "0x1A6A6B0", Offset = "0x1A6A6B0", VA = "0x1A6A6B0")]
	public void showEquipInfo(string slot)
	{
	}

	[Token(Token = "0x6000F83")]
	[Address(RVA = "0x1A6A87C", Offset = "0x1A6A87C", VA = "0x1A6A87C")]
	public void switchItemTab(string type)
	{
	}

	[Token(Token = "0x6000F84")]
	[Address(RVA = "0x1A6A9FC", Offset = "0x1A6A9FC", VA = "0x1A6A9FC")]
	public UIInventory()
	{
	}
}
[Token(Token = "0x2000275")]
public class UIItemButton : MonoBehaviour
{
	[Token(Token = "0x4000F94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text titleText;

	[Token(Token = "0x4000F95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text quantityText;

	[Token(Token = "0x4000F96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string descriptionText;

	[Token(Token = "0x4000F97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Image itemImage;

	[Token(Token = "0x4000F98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int itemInventoryIndex;

	[Token(Token = "0x6000F85")]
	[Address(RVA = "0x1A6AAD0", Offset = "0x1A6AAD0", VA = "0x1A6AAD0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F86")]
	[Address(RVA = "0x1A6AB90", Offset = "0x1A6AB90", VA = "0x1A6AB90")]
	public void showItemInfo()
	{
	}

	[Token(Token = "0x6000F87")]
	[Address(RVA = "0x1A6AC04", Offset = "0x1A6AC04", VA = "0x1A6AC04")]
	public void buttonPressed()
	{
	}

	[Token(Token = "0x6000F88")]
	[Address(RVA = "0x1A6AC64", Offset = "0x1A6AC64", VA = "0x1A6AC64")]
	public UIItemButton()
	{
	}
}
[Token(Token = "0x2000276")]
public class UILoadout : MonoBehaviour
{
	[Token(Token = "0x2000804")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B8BB4", Offset = "0x8B8BB4")]
	private sealed class <>c__DisplayClass32_0
	{
		[Token(Token = "0x4002781")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AsyncOperationHandle<string> op1;

		[Token(Token = "0x6002EE4")]
		[Address(RVA = "0x1A6BE90", Offset = "0x1A6BE90", VA = "0x1A6BE90")]
		public <>c__DisplayClass32_0()
		{
		}

		[Token(Token = "0x6002EE5")]
		[Address(RVA = "0x1A6C460", Offset = "0x1A6C460", VA = "0x1A6C460")]
		internal void <updateLoadoutInfo>b__0(AsyncOperationHandle<string> op)
		{
		}
	}

	[Token(Token = "0x4000F99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static UILoadout instance;

	[Token(Token = "0x4000F9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BCC70", Offset = "0x8BCC70")]
	public Text nameText;

	[Token(Token = "0x4000F9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text levelText;

	[Token(Token = "0x4000F9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text powerText;

	[Token(Token = "0x4000F9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Text maxApText;

	[Token(Token = "0x4000F9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Text defenseText;

	[Token(Token = "0x4000F9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Text speedText;

	[Token(Token = "0x4000FA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Text runSpeedText;

	[Token(Token = "0x4000FA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Text critChanceText;

	[Token(Token = "0x4000FA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Text critDamageText;

	[Token(Token = "0x4000FA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Text difficultyText;

	[Token(Token = "0x4000FA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Text spellDexcriptionText;

	[Token(Token = "0x4000FA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Text classText;

	[Token(Token = "0x4000FA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Text CPText;

	[Token(Token = "0x4000FA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BCCA8", Offset = "0x8BCCA8")]
	public UIBar healthBar;

	[Token(Token = "0x4000FA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public UIBar expBar;

	[Token(Token = "0x4000FA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BCCE0", Offset = "0x8BCCE0")]
	public UISpellButton spellButtonPrefab;

	[Token(Token = "0x4000FAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Transform UISpellSpawn;

	[Token(Token = "0x4000FAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private List<GameObject> currentDisplayedSpellButtons;

	[Token(Token = "0x4000FAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public UISpellSelectButton[] rightHandButtons;

	[Token(Token = "0x4000FAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public UISpellSelectButton[] leftHandButtons;

	[Token(Token = "0x4000FAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public UISpellSelectButton defensiveButtonL;

	[Token(Token = "0x4000FAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public GameObject selectSprite;

	[Token(Token = "0x4000FB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public Sprite FemaleProfile;

	[Token(Token = "0x4000FB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public Image profilePicture;

	[Token(Token = "0x4000FB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private int selectedSpellIndex;

	[Token(Token = "0x4000FB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	private bool selectedRightHand;

	[Token(Token = "0x4000FB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDD")]
	private bool selectedDefensive;

	[Token(Token = "0x6000F89")]
	[Address(RVA = "0x1A6AC6C", Offset = "0x1A6AC6C", VA = "0x1A6AC6C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000F8A")]
	[Address(RVA = "0x1A6ACC0", Offset = "0x1A6ACC0", VA = "0x1A6ACC0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F8B")]
	[Address(RVA = "0x1A6B44C", Offset = "0x1A6B44C", VA = "0x1A6B44C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000F8C")]
	[Address(RVA = "0x1A6B450", Offset = "0x1A6B450", VA = "0x1A6B450")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000F8D")]
	[Address(RVA = "0x1A6ACC4", Offset = "0x1A6ACC4", VA = "0x1A6ACC4")]
	public void updateLoadoutInfo()
	{
	}

	[Token(Token = "0x6000F8E")]
	[Address(RVA = "0x1A6B474", Offset = "0x1A6B474", VA = "0x1A6B474")]
	public void updateSpellInventory()
	{
	}

	[Token(Token = "0x6000F8F")]
	[Address(RVA = "0x1A6BE98", Offset = "0x1A6BE98", VA = "0x1A6BE98")]
	public void changeSelectedHand(bool right, int index)
	{
	}

	[Token(Token = "0x6000F90")]
	[Address(RVA = "0x1A6BEAC", Offset = "0x1A6BEAC", VA = "0x1A6BEAC")]
	public void changeSelectHandDefensive(bool right)
	{
	}

	[Token(Token = "0x6000F91")]
	[Address(RVA = "0x1A6BEB8", Offset = "0x1A6BEB8", VA = "0x1A6BEB8")]
	public void changeEquippedSpell(int index)
	{
	}

	[Token(Token = "0x6000F92")]
	[Address(RVA = "0x1A6C1C8", Offset = "0x1A6C1C8", VA = "0x1A6C1C8")]
	public void changeEquippedSpellDefensive(int index)
	{
	}

	[Token(Token = "0x6000F93")]
	[Address(RVA = "0x1A6C3E8", Offset = "0x1A6C3E8", VA = "0x1A6C3E8")]
	public UILoadout()
	{
	}
}
[Token(Token = "0x2000277")]
public class UIOptions : MonoBehaviour
{
	[Token(Token = "0x4000FB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Toggle comfortToggle;

	[Token(Token = "0x4000FB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Toggle hapticFeebackToggle;

	[Token(Token = "0x4000FB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Toggle cameraTurnToggle;

	[Token(Token = "0x4000FB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Toggle smoothTurnToggle;

	[Token(Token = "0x4000FB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Toggle leftHandToggle;

	[Token(Token = "0x4000FBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Slider masterVolume;

	[Token(Token = "0x4000FBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Slider musicVolume;

	[Token(Token = "0x4000FBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Slider sfxVolume;

	[Token(Token = "0x4000FBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Slider voiceVolume;

	[Token(Token = "0x4000FBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Slider voiceAssistantVolume;

	[Token(Token = "0x4000FBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Dropdown skinDropdown;

	[Token(Token = "0x4000FC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Dictionary<string, int> skinDic;

	[Token(Token = "0x6000F94")]
	[Address(RVA = "0x1A6C6F0", Offset = "0x1A6C6F0", VA = "0x1A6C6F0")]
	public void quitGamePressed()
	{
	}

	[Token(Token = "0x6000F95")]
	[Address(RVA = "0x1A6C71C", Offset = "0x1A6C71C", VA = "0x1A6C71C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F96")]
	[Address(RVA = "0x1A6C8BC", Offset = "0x1A6C8BC", VA = "0x1A6C8BC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000F97")]
	[Address(RVA = "0x1A6C9F8", Offset = "0x1A6C9F8", VA = "0x1A6C9F8")]
	public void toggleComfort()
	{
	}

	[Token(Token = "0x6000F98")]
	[Address(RVA = "0x1A6CABC", Offset = "0x1A6CABC", VA = "0x1A6CABC")]
	public void updateSkin()
	{
	}

	[Token(Token = "0x6000F99")]
	[Address(RVA = "0x1A6CBA8", Offset = "0x1A6CBA8", VA = "0x1A6CBA8")]
	public void toggleSmoothTurn()
	{
	}

	[Token(Token = "0x6000F9A")]
	[Address(RVA = "0x1A6CBE8", Offset = "0x1A6CBE8", VA = "0x1A6CBE8")]
	public void toggleLeftHanded()
	{
	}

	[Token(Token = "0x6000F9B")]
	[Address(RVA = "0x1A6CC6C", Offset = "0x1A6CC6C", VA = "0x1A6CC6C")]
	public void toggleCameraTurn()
	{
	}

	[Token(Token = "0x6000F9C")]
	[Address(RVA = "0x1A6CCAC", Offset = "0x1A6CCAC", VA = "0x1A6CCAC")]
	public void toggleHaptics()
	{
	}

	[Token(Token = "0x6000F9D")]
	[Address(RVA = "0x1A6CCEC", Offset = "0x1A6CCEC", VA = "0x1A6CCEC")]
	public void OnSliderChange(int slider)
	{
	}

	[Token(Token = "0x6000F9E")]
	[Address(RVA = "0x1A6CFDC", Offset = "0x1A6CFDC", VA = "0x1A6CFDC")]
	public UIOptions()
	{
	}
}
[Token(Token = "0x2000278")]
public class UIPassiveButton : MonoBehaviour
{
	[Token(Token = "0x4000FC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text titleText;

	[Token(Token = "0x4000FC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text costText;

	[Token(Token = "0x4000FC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string descriptionText;

	[Token(Token = "0x4000FC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Image abilityImage;

	[Token(Token = "0x4000FC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int abilityInevntoryIndex;

	[Token(Token = "0x4000FC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Outline outline;

	[Token(Token = "0x4000FC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Outline textOutline;

	[Token(Token = "0x4000FC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public int btnNum;

	[Token(Token = "0x6000F9F")]
	[Address(RVA = "0x1A6D17C", Offset = "0x1A6D17C", VA = "0x1A6D17C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000FA0")]
	[Address(RVA = "0x1A6D180", Offset = "0x1A6D180", VA = "0x1A6D180")]
	public void showItemInfo()
	{
	}

	[Token(Token = "0x6000FA1")]
	[Address(RVA = "0x1A6D244", Offset = "0x1A6D244", VA = "0x1A6D244")]
	public void buttonPressed()
	{
	}

	[Token(Token = "0x6000FA2")]
	[Address(RVA = "0x1A6D364", Offset = "0x1A6D364", VA = "0x1A6D364")]
	public UIPassiveButton()
	{
	}
}
[Token(Token = "0x2000279")]
public class UIPassiveMenu : MonoBehaviour
{
	[Token(Token = "0x4000FC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject UIPassivePrefab;

	[Token(Token = "0x4000FCA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform UIPassiveSpawn;

	[Token(Token = "0x4000FCB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text ppText;

	[Token(Token = "0x4000FCC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Text abilityNameText;

	[Token(Token = "0x4000FCD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Text abilityDescriptionText;

	[Token(Token = "0x4000FCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public UIPassiveButton currentButton;

	[Token(Token = "0x4000FCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public List<GameObject> currentDisplayedAbilityButtons;

	[Token(Token = "0x4000FD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public int currentlySelectedItem;

	[Token(Token = "0x4000FD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static UIPassiveMenu instance;

	[Token(Token = "0x6000FA3")]
	[Address(RVA = "0x1A6D36C", Offset = "0x1A6D36C", VA = "0x1A6D36C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000FA4")]
	[Address(RVA = "0x1A6DDC0", Offset = "0x1A6DDC0", VA = "0x1A6DDC0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000FA5")]
	[Address(RVA = "0x1A6DE14", Offset = "0x1A6DE14", VA = "0x1A6DE14")]
	public void equipPassiveAbility()
	{
	}

	[Token(Token = "0x6000FA6")]
	[Address(RVA = "0x1A6E164", Offset = "0x1A6E164", VA = "0x1A6E164")]
	public void unequipPassiveAbility()
	{
	}

	[Token(Token = "0x6000FA7")]
	[Address(RVA = "0x1A6D370", Offset = "0x1A6D370", VA = "0x1A6D370")]
	public void refreshAbilityList()
	{
	}

	[Token(Token = "0x6000FA8")]
	[Address(RVA = "0x1A6E41C", Offset = "0x1A6E41C", VA = "0x1A6E41C")]
	public UIPassiveMenu()
	{
	}
}
[Token(Token = "0x200027A")]
public class UIShop : MonoBehaviour
{
	[Token(Token = "0x4000FD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject UIItemPrefab;

	[Token(Token = "0x4000FD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform UIItemSpawn;

	[Token(Token = "0x4000FD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text creditsText;

	[Token(Token = "0x4000FD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Text itemDescriptionText;

	[Token(Token = "0x4000FD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public NPCOverworld npc;

	[Token(Token = "0x4000FD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ScrollRect itemScrollRect;

	[Token(Token = "0x4000FD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform infoTextSpawn;

	[Token(Token = "0x4000FD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject infoTextPrefab;

	[Token(Token = "0x4000FDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject[] stockButtons;

	[Token(Token = "0x4000FDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private int currentStockTab;

	[Token(Token = "0x4000FDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public EventSystem eventSystem;

	[Token(Token = "0x4000FDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float idleTimer;

	[Token(Token = "0x4000FDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private float idleTimeLimit;

	[Token(Token = "0x4000FDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private bool firstBuy;

	[Token(Token = "0x4000FE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private List<GameObject> currentDisplayedItemButtons;

	[Token(Token = "0x4000FE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public int currentlySelectedItem;

	[Token(Token = "0x6000FA9")]
	[Address(RVA = "0xBFADBC", Offset = "0xBFADBC", VA = "0xBFADBC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000FAA")]
	[Address(RVA = "0xBFB11C", Offset = "0xBFB11C", VA = "0xBFB11C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000FAB")]
	[Address(RVA = "0xBFB178", Offset = "0xBFB178", VA = "0xBFB178")]
	private void spawnInfoText(string text)
	{
	}

	[Token(Token = "0x6000FAC")]
	[Address(RVA = "0xBFB060", Offset = "0xBFB060", VA = "0xBFB060")]
	public void switchStockTab(int tab)
	{
	}

	[Token(Token = "0x6000FAD")]
	[Address(RVA = "0xBFAF48", Offset = "0xBFAF48", VA = "0xBFAF48")]
	public void updateStockTabButtons()
	{
	}

	[Token(Token = "0x6000FAE")]
	[Address(RVA = "0xBFB9FC", Offset = "0xBFB9FC", VA = "0xBFB9FC")]
	public void changeSelectedItem(int num)
	{
	}

	[Token(Token = "0x6000FAF")]
	[Address(RVA = "0xBFBE48", Offset = "0xBFBE48", VA = "0xBFBE48")]
	public void buyItem()
	{
	}

	[Token(Token = "0x6000FB0")]
	[Address(RVA = "0xBFC0C8", Offset = "0xBFC0C8", VA = "0xBFC0C8")]
	public void sellAllTrash()
	{
	}

	[Token(Token = "0x6000FB1")]
	[Address(RVA = "0xBFC348", Offset = "0xBFC348", VA = "0xBFC348")]
	public void closeShop()
	{
	}

	[Token(Token = "0x6000FB2")]
	[Address(RVA = "0xBFB968", Offset = "0xBFB968", VA = "0xBFB968")]
	private void clearSelection()
	{
	}

	[Token(Token = "0x6000FB3")]
	[Address(RVA = "0xBFB334", Offset = "0xBFB334", VA = "0xBFB334")]
	public void refreshItemList()
	{
	}

	[Token(Token = "0x6000FB4")]
	[Address(RVA = "0xBFC4A4", Offset = "0xBFC4A4", VA = "0xBFC4A4")]
	public UIShop()
	{
	}
}
[Token(Token = "0x200027B")]
public class UIShopItemButton : MonoBehaviour
{
	[Token(Token = "0x4000FE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text titleText;

	[Token(Token = "0x4000FE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text valueText;

	[Token(Token = "0x4000FE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string descriptionText;

	[Token(Token = "0x4000FE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Image itemImage;

	[Token(Token = "0x4000FE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int itemInventoryIndex;

	[Token(Token = "0x4000FE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public UIShop shop;

	[Token(Token = "0x6000FB5")]
	[Address(RVA = "0xBFC524", Offset = "0xBFC524", VA = "0xBFC524")]
	public void showItemInfo()
	{
	}

	[Token(Token = "0x6000FB6")]
	[Address(RVA = "0xBFC55C", Offset = "0xBFC55C", VA = "0xBFC55C")]
	public void buttonPressed()
	{
	}

	[Token(Token = "0x6000FB7")]
	[Address(RVA = "0xBFC57C", Offset = "0xBFC57C", VA = "0xBFC57C")]
	public UIShopItemButton()
	{
	}
}
[Token(Token = "0x200027C")]
public class UISpellButton : MonoBehaviour
{
	[Token(Token = "0x4000FE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text titleText;

	[Token(Token = "0x4000FE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text spellLevelText;

	[Token(Token = "0x4000FEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text spellExpText;

	[Token(Token = "0x4000FEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string descriptionText;

	[Token(Token = "0x4000FEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Image spellImage;

	[Token(Token = "0x4000FED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int spellInventoryIndex;

	[Token(Token = "0x6000FB8")]
	[Address(RVA = "0xBFC584", Offset = "0xBFC584", VA = "0xBFC584")]
	public void showSpellInfo()
	{
	}

	[Token(Token = "0x6000FB9")]
	[Address(RVA = "0xBFC588", Offset = "0xBFC588", VA = "0xBFC588")]
	public void buttonPressed()
	{
	}

	[Token(Token = "0x6000FBA")]
	[Address(RVA = "0xBFC650", Offset = "0xBFC650", VA = "0xBFC650")]
	public UISpellButton()
	{
	}
}
[Token(Token = "0x200027D")]
public class UISpellSelectButton : MonoBehaviour
{
	[Token(Token = "0x4000FEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int index;

	[Token(Token = "0x4000FEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool isRightHand;

	[Token(Token = "0x4000FF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Image icon;

	[Token(Token = "0x4000FF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform selectSpriteLocation;

	[Token(Token = "0x6000FBB")]
	[Address(RVA = "0xBFC658", Offset = "0xBFC658", VA = "0xBFC658")]
	public void buttonPressed()
	{
	}

	[Token(Token = "0x6000FBC")]
	[Address(RVA = "0xBFC708", Offset = "0xBFC708", VA = "0xBFC708")]
	public void buttonPressedDefensive()
	{
	}

	[Token(Token = "0x6000FBD")]
	[Address(RVA = "0xBFC7B4", Offset = "0xBFC7B4", VA = "0xBFC7B4")]
	public UISpellSelectButton()
	{
	}
}
[Token(Token = "0x200027E")]
public class UITaskButton : MonoBehaviour
{
	[Token(Token = "0x4000FF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text questNameText;

	[Token(Token = "0x4000FF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Image iconImage;

	[Token(Token = "0x4000FF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Image completedImage;

	[Token(Token = "0x4000FF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public SideQuest quest;

	[Token(Token = "0x6000FBE")]
	[Address(RVA = "0xBFC7C4", Offset = "0xBFC7C4", VA = "0xBFC7C4")]
	public void onClick()
	{
	}

	[Token(Token = "0x6000FBF")]
	[Address(RVA = "0xBFC948", Offset = "0xBFC948", VA = "0xBFC948")]
	public UITaskButton()
	{
	}
}
[Token(Token = "0x200027F")]
public class UITaskMenu : MonoBehaviour
{
	[Token(Token = "0x4000FF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text questDescriptionText;

	[Token(Token = "0x4000FF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text questRewardText;

	[Token(Token = "0x4000FF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SideQuest[] quests;

	[Token(Token = "0x4000FF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform UIQuestSpawn;

	[Token(Token = "0x4000FFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public NPCOverworld npc;

	[Token(Token = "0x4000FFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public UITaskButton taskButtonPrefab;

	[Token(Token = "0x4000FFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private SideQuest currentlySelectedQuest;

	[Token(Token = "0x4000FFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[HideInInspector]
	public UITaskButton selectedButton;

	[Token(Token = "0x4000FFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject completeButton;

	[Token(Token = "0x4000FFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public EventSystem eventSystem;

	[Token(Token = "0x4001000")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static UITaskMenu instance;

	[Token(Token = "0x6000FC0")]
	[Address(RVA = "0xBFC950", Offset = "0xBFC950", VA = "0xBFC950")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000FC1")]
	[Address(RVA = "0xBFC9A4", Offset = "0xBFC9A4", VA = "0xBFC9A4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000FC2")]
	[Address(RVA = "0xBFD204", Offset = "0xBFD204", VA = "0xBFD204")]
	public void closeTaskMenu()
	{
	}

	[Token(Token = "0x6000FC3")]
	[Address(RVA = "0xBFC83C", Offset = "0xBFC83C", VA = "0xBFC83C")]
	public void changeSelectedQuest(SideQuest q)
	{
	}

	[Token(Token = "0x6000FC4")]
	[Address(RVA = "0xBFD36C", Offset = "0xBFD36C", VA = "0xBFD36C")]
	public void submitCompleteQuest()
	{
	}

	[Token(Token = "0x6000FC5")]
	[Address(RVA = "0xBFCB14", Offset = "0xBFCB14", VA = "0xBFCB14")]
	public void refreshItemList()
	{
	}

	[Token(Token = "0x6000FC6")]
	[Address(RVA = "0xBFD608", Offset = "0xBFD608", VA = "0xBFD608")]
	public UITaskMenu()
	{
	}
}
[Token(Token = "0x2000280")]
public class StairArrow : MonoBehaviour
{
	[Token(Token = "0x4001001")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float aliveTime;

	[Token(Token = "0x4001002")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float maxTime;

	[Token(Token = "0x4001003")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private UnityEngine.Vector3 target;

	[Token(Token = "0x6000FC7")]
	[Address(RVA = "0xB2195C", Offset = "0xB2195C", VA = "0xB2195C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000FC8")]
	[Address(RVA = "0xB21B54", Offset = "0xB21B54", VA = "0xB21B54")]
	private void Update()
	{
	}

	[Token(Token = "0x6000FC9")]
	[Address(RVA = "0xB21CCC", Offset = "0xB21CCC", VA = "0xB21CCC")]
	public StairArrow()
	{
	}
}
[Token(Token = "0x2000281")]
public class UIBattleResults : MonoBehaviour
{
	[Token(Token = "0x2000805")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B8BC4", Offset = "0x8B8BC4")]
	private sealed class <animateExpBar>d__26 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002782")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002783")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002784")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UIBattleResults <>4__this;

		[Token(Token = "0x4002785")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <iter>5__2;

		[Token(Token = "0x4002786")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<int[]>.Enumerator <>7__wrap2;

		[Token(Token = "0x4002787")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int[] <level>5__4;

		[Token(Token = "0x17000653")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002EEA")]
			[Address(RVA = "0x1A63AD8", Offset = "0x1A63AD8", VA = "0x1A63AD8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000654")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002EEC")]
			[Address(RVA = "0x1A63B40", Offset = "0x1A63B40", VA = "0x1A63B40", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002EE6")]
		[Address(RVA = "0x1A63484", Offset = "0x1A63484", VA = "0x1A63484")]
		[DebuggerHidden]
		public <animateExpBar>d__26(int <>1__state)
		{
		}

		[Token(Token = "0x6002EE7")]
		[Address(RVA = "0x1A63520", Offset = "0x1A63520", VA = "0x1A63520", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002EE8")]
		[Address(RVA = "0x1A63594", Offset = "0x1A63594", VA = "0x1A63594", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002EE9")]
		[Address(RVA = "0x1A6353C", Offset = "0x1A6353C", VA = "0x1A6353C")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x6002EEB")]
		[Address(RVA = "0x1A63AE0", Offset = "0x1A63AE0", VA = "0x1A63AE0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001004")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static UIBattleResults instance;

	[Token(Token = "0x4001005")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BCD28", Offset = "0x8BCD28")]
	public Text expText;

	[Token(Token = "0x4001006")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text moneyText;

	[Token(Token = "0x4001007")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text itemText;

	[Token(Token = "0x4001008")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Text resultsLevelText;

	[Token(Token = "0x4001009")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Text sweepText;

	[Token(Token = "0x400100A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BCD60", Offset = "0x8BCD60")]
	public GameObject resultsHUD;

	[Token(Token = "0x400100B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject levelUpHUD;

	[Token(Token = "0x400100C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject loadingPrompt;

	[Token(Token = "0x400100D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BCD98", Offset = "0x8BCD98")]
	public Text lvlText;

	[Token(Token = "0x400100E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Text statsText;

	[Token(Token = "0x400100F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Text toNextLvlText;

	[Token(Token = "0x4001010")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Text learnedSpellsText;

	[Token(Token = "0x4001011")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public UIBar expBar;

	[Token(Token = "0x4001012")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	public List<int[]> queuedLevels;

	[Token(Token = "0x4001013")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool animatingBar;

	[Token(Token = "0x4001014")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public List<string> learnedSpells;

	[Token(Token = "0x4001015")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public List<string> learnedPassives;

	[Token(Token = "0x170000FA")]
	public bool playerLeveled
	{
		[Token(Token = "0x6000FCA")]
		[Address(RVA = "0x1A628CC", Offset = "0x1A628CC", VA = "0x1A628CC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000FCB")]
	[Address(RVA = "0x1A62924", Offset = "0x1A62924", VA = "0x1A62924")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000FCC")]
	[Address(RVA = "0x1A62978", Offset = "0x1A62978", VA = "0x1A62978")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000FCD")]
	[Address(RVA = "0x1A62A38", Offset = "0x1A62A38", VA = "0x1A62A38")]
	public void updateResultsText(int exp, int money, List<Item> items)
	{
	}

	[Token(Token = "0x6000FCE")]
	[Address(RVA = "0x1A62CC0", Offset = "0x1A62CC0", VA = "0x1A62CC0")]
	public void updateLevelUpText(int level, string stats, int expToNext)
	{
	}

	[Token(Token = "0x6000FCF")]
	[Address(RVA = "0x1A62E2C", Offset = "0x1A62E2C", VA = "0x1A62E2C")]
	public void updateLearnedSpellsText()
	{
	}

	[Token(Token = "0x6000FD0")]
	[Address(RVA = "0x1A6331C", Offset = "0x1A6331C", VA = "0x1A6331C")]
	public void queueLevelUp(int expReq, int expStart, int newExp)
	{
	}

	[Token(Token = "0x6000FD1")]
	[Address(RVA = "0x1A63414", Offset = "0x1A63414", VA = "0x1A63414")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C9434", Offset = "0x8C9434")]
	private IEnumerator animateExpBar()
	{
		return null;
	}

	[Token(Token = "0x6000FD2")]
	[Address(RVA = "0x1A634B0", Offset = "0x1A634B0", VA = "0x1A634B0")]
	public UIBattleResults()
	{
	}
}
[Token(Token = "0x2000282")]
public class UIButtonClick : MonoBehaviour, IPointerDownHandler, IEventSystemHandler, IPointerUpHandler
{
	[Token(Token = "0x4001016")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UnityEvent PointerDown;

	[Token(Token = "0x4001017")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UnityEvent PointerUp;

	[Token(Token = "0x6000FD3")]
	[Address(RVA = "0x1A63D94", Offset = "0x1A63D94", VA = "0x1A63D94", Slot = "4")]
	public void OnPointerDown(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000FD4")]
	[Address(RVA = "0x1A63DA8", Offset = "0x1A63DA8", VA = "0x1A63DA8", Slot = "5")]
	public void OnPointerUp(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000FD5")]
	[Address(RVA = "0x1A63DBC", Offset = "0x1A63DBC", VA = "0x1A63DBC")]
	public UIButtonClick()
	{
	}
}
[Token(Token = "0x2000283")]
public class UIDialogueCanvas : MonoBehaviour
{
	[Token(Token = "0x4001018")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TMP_Text dialogueText;

	[Token(Token = "0x4001019")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text nameText;

	[Token(Token = "0x400101A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public NPCOverworld npc;

	[Token(Token = "0x400101B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Canvas canvas;

	[Token(Token = "0x400101C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Text[] responseTexts;

	[Token(Token = "0x400101D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject[] responseButtons;

	[Token(Token = "0x400101E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AudioSource beepSource;

	[Token(Token = "0x400101F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AudioSource voiceSource;

	[Token(Token = "0x6000FD6")]
	[Address(RVA = "0x1A63DC4", Offset = "0x1A63DC4", VA = "0x1A63DC4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000FD7")]
	[Address(RVA = "0x1A63ECC", Offset = "0x1A63ECC", VA = "0x1A63ECC")]
	public void answerQuestion(int num)
	{
	}

	[Token(Token = "0x6000FD8")]
	[Address(RVA = "0x1A63EE8", Offset = "0x1A63EE8", VA = "0x1A63EE8")]
	public UIDialogueCanvas()
	{
	}
}
[Token(Token = "0x2000284")]
public class UIDungeonInfo : MonoBehaviour
{
	[Token(Token = "0x4001020")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text dungeonNameText;

	[Token(Token = "0x4001021")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text floorNumText;

	[Token(Token = "0x6000FD9")]
	[Address(RVA = "0x1A643AC", Offset = "0x1A643AC", VA = "0x1A643AC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000FDA")]
	[Address(RVA = "0x1A645E4", Offset = "0x1A645E4", VA = "0x1A645E4")]
	public void updateInfo()
	{
	}

	[Token(Token = "0x6000FDB")]
	[Address(RVA = "0x1A646F0", Offset = "0x1A646F0", VA = "0x1A646F0")]
	public UIDungeonInfo()
	{
	}
}
[Token(Token = "0x2000285")]
public class UIMenu : MonoBehaviour
{
	[Token(Token = "0x4001022")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject inventoryMenu;

	[Token(Token = "0x4001023")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject loadoutMenu;

	[Token(Token = "0x4001024")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject passivesMenus;

	[Token(Token = "0x4001025")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject optionsMenu;

	[Token(Token = "0x4001026")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject menuParticle;

	[Token(Token = "0x4001027")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static UIMenu instance;

	[Token(Token = "0x6000FDC")]
	[Address(RVA = "0x1A6C4E4", Offset = "0x1A6C4E4", VA = "0x1A6C4E4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000FDD")]
	[Address(RVA = "0x1A6C538", Offset = "0x1A6C538", VA = "0x1A6C538")]
	public void openInventory()
	{
	}

	[Token(Token = "0x6000FDE")]
	[Address(RVA = "0x1A6C5A4", Offset = "0x1A6C5A4", VA = "0x1A6C5A4")]
	public void openLoadout()
	{
	}

	[Token(Token = "0x6000FDF")]
	[Address(RVA = "0x1A6C610", Offset = "0x1A6C610", VA = "0x1A6C610")]
	public void openPassives()
	{
	}

	[Token(Token = "0x6000FE0")]
	[Address(RVA = "0x1A6C67C", Offset = "0x1A6C67C", VA = "0x1A6C67C")]
	public void openOptions()
	{
	}

	[Token(Token = "0x6000FE1")]
	[Address(RVA = "0x1A6C6E8", Offset = "0x1A6C6E8", VA = "0x1A6C6E8")]
	public UIMenu()
	{
	}
}
[Token(Token = "0x2000286")]
public class ChaseHazzardDisabler : MonoBehaviour
{
	[Token(Token = "0x6000FE2")]
	[Address(RVA = "0xB07C14", Offset = "0xB07C14", VA = "0xB07C14")]
	private void Start()
	{
	}

	[Token(Token = "0x6000FE3")]
	[Address(RVA = "0xB07CD4", Offset = "0xB07CD4", VA = "0xB07CD4")]
	public ChaseHazzardDisabler()
	{
	}
}
[Token(Token = "0x2000287")]
public class CollideWithPlayer : MonoBehaviour
{
	[Token(Token = "0x4001028")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UnityEvent onCollide;

	[Token(Token = "0x6000FE4")]
	[Address(RVA = "0xB09478", Offset = "0xB09478", VA = "0xB09478")]
	private void Start()
	{
	}

	[Token(Token = "0x6000FE5")]
	[Address(RVA = "0xB0947C", Offset = "0xB0947C", VA = "0xB0947C")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000FE6")]
	[Address(RVA = "0xB0951C", Offset = "0xB0951C", VA = "0xB0951C")]
	public CollideWithPlayer()
	{
	}
}
[Token(Token = "0x2000288")]
public class DebugUI : MonoBehaviour
{
	[Token(Token = "0x6000FE7")]
	[Address(RVA = "0xB10B74", Offset = "0xB10B74", VA = "0xB10B74")]
	public void resetGame()
	{
	}

	[Token(Token = "0x6000FE8")]
	[Address(RVA = "0xB10C3C", Offset = "0xB10C3C", VA = "0xB10C3C")]
	public void warpToHub()
	{
	}

	[Token(Token = "0x6000FE9")]
	[Address(RVA = "0xB10CC0", Offset = "0xB10CC0", VA = "0xB10CC0")]
	public DebugUI()
	{
	}
}
[Token(Token = "0x2000289")]
public class DestroyAfterTime : MonoBehaviour
{
	[Token(Token = "0x4001029")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float time;

	[Token(Token = "0x6000FEA")]
	[Address(RVA = "0xB15EF8", Offset = "0xB15EF8", VA = "0xB15EF8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000FEB")]
	[Address(RVA = "0xB15F84", Offset = "0xB15F84", VA = "0xB15F84")]
	public DestroyAfterTime()
	{
	}
}
[Token(Token = "0x200028A")]
public class DisableOnAndroid : MonoBehaviour
{
	[Token(Token = "0x6000FEC")]
	[Address(RVA = "0xB1603C", Offset = "0xB1603C", VA = "0xB1603C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000FED")]
	[Address(RVA = "0xB16090", Offset = "0xB16090", VA = "0xB16090")]
	public DisableOnAndroid()
	{
	}
}
[Token(Token = "0x200028B")]
public class DungeonCollFixer : MonoBehaviour
{
	[Token(Token = "0x6000FEE")]
	[Address(RVA = "0xBEDEF4", Offset = "0xBEDEF4", VA = "0xBEDEF4")]
	public void fixColliders()
	{
	}

	[Token(Token = "0x6000FEF")]
	[Address(RVA = "0xBEDFEC", Offset = "0xBEDFEC", VA = "0xBEDFEC")]
	public DungeonCollFixer()
	{
	}
}
[Token(Token = "0x200028C")]
public class GrabbableEdit : MonoBehaviour
{
	[Token(Token = "0x400102A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	protected bool m_allowOffhandGrab;

	[Token(Token = "0x400102B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	[SerializeField]
	protected bool m_snapPosition;

	[Token(Token = "0x400102C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	[SerializeField]
	protected bool m_snapOrientation;

	[Token(Token = "0x400102D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	protected Transform m_snapOffset;

	[Token(Token = "0x400102E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	protected Collider[] m_grabPoints;

	[Token(Token = "0x400102F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected bool m_grabbedKinematic;

	[Token(Token = "0x4001030")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected Collider m_grabbedCollider;

	[Token(Token = "0x4001031")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	protected OVRGrabber m_grabbedBy;

	[Token(Token = "0x170000FB")]
	public bool allowOffhandGrab
	{
		[Token(Token = "0x6000FF0")]
		[Address(RVA = "0xC526B8", Offset = "0xC526B8", VA = "0xC526B8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000FC")]
	public bool isGrabbed
	{
		[Token(Token = "0x6000FF1")]
		[Address(RVA = "0xC526C0", Offset = "0xC526C0", VA = "0xC526C0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000FD")]
	public bool snapPosition
	{
		[Token(Token = "0x6000FF2")]
		[Address(RVA = "0xC52730", Offset = "0xC52730", VA = "0xC52730")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000FE")]
	public bool snapOrientation
	{
		[Token(Token = "0x6000FF3")]
		[Address(RVA = "0xC52738", Offset = "0xC52738", VA = "0xC52738")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000FF")]
	public Transform snapOffset
	{
		[Token(Token = "0x6000FF4")]
		[Address(RVA = "0xC52740", Offset = "0xC52740", VA = "0xC52740")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000100")]
	public OVRGrabber grabbedBy
	{
		[Token(Token = "0x6000FF5")]
		[Address(RVA = "0xC52748", Offset = "0xC52748", VA = "0xC52748")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000101")]
	public Transform grabbedTransform
	{
		[Token(Token = "0x6000FF6")]
		[Address(RVA = "0xC52750", Offset = "0xC52750", VA = "0xC52750")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000102")]
	public Rigidbody grabbedRigidbody
	{
		[Token(Token = "0x6000FF7")]
		[Address(RVA = "0xC5276C", Offset = "0xC5276C", VA = "0xC5276C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000103")]
	public Collider[] grabPoints
	{
		[Token(Token = "0x6000FF8")]
		[Address(RVA = "0xC52788", Offset = "0xC52788", VA = "0xC52788")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000FF9")]
	[Address(RVA = "0xC52790", Offset = "0xC52790", VA = "0xC52790", Slot = "4")]
	public virtual void GrabBegin(OVRGrabber hand, Collider grabPoint)
	{
	}

	[Token(Token = "0x6000FFA")]
	[Address(RVA = "0xC52814", Offset = "0xC52814", VA = "0xC52814", Slot = "5")]
	public virtual void GrabEnd(UnityEngine.Vector3 linearVelocity, UnityEngine.Vector3 angularVelocity)
	{
	}

	[Token(Token = "0x6000FFB")]
	[Address(RVA = "0xC528F0", Offset = "0xC528F0", VA = "0xC528F0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000FFC")]
	[Address(RVA = "0xC52A34", Offset = "0xC52A34", VA = "0xC52A34", Slot = "6")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x6000FFD")]
	[Address(RVA = "0xC52AA0", Offset = "0xC52AA0", VA = "0xC52AA0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000FFE")]
	[Address(RVA = "0xC52B10", Offset = "0xC52B10", VA = "0xC52B10")]
	public GrabbableEdit()
	{
	}
}
[Token(Token = "0x200028D")]
public interface ITargetable
{
	[Token(Token = "0x6000FFF")]
	GameObject getAimAssistTarget();
}
[Token(Token = "0x200028E")]
public class Keyboard : MonoBehaviour
{
	[Token(Token = "0x4001032")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int characterLimit;

	[Token(Token = "0x4001033")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public InputField input;

	[Token(Token = "0x4001034")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Button[] letterkeys;

	[Token(Token = "0x4001035")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Button[] altKeys;

	[Token(Token = "0x4001036")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string[] convertKeys;

	[Token(Token = "0x4001037")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject badWordText;

	[Token(Token = "0x4001038")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private string alpha;

	[Token(Token = "0x4001039")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool shift_pressed;

	[Token(Token = "0x6001000")]
	[Address(RVA = "0xAE12F4", Offset = "0xAE12F4", VA = "0xAE12F4")]
	private void Start()
	{
	}

	[Token(Token = "0x6001001")]
	[Address(RVA = "0xAE12F8", Offset = "0xAE12F8", VA = "0xAE12F8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001002")]
	[Address(RVA = "0xAE12FC", Offset = "0xAE12FC", VA = "0xAE12FC")]
	public void onClick_type(Text t)
	{
	}

	[Token(Token = "0x6001003")]
	[Address(RVA = "0xAE1410", Offset = "0xAE1410", VA = "0xAE1410")]
	public void LetterUp(int inputNum)
	{
	}

	[Token(Token = "0x6001004")]
	[Address(RVA = "0xAE155C", Offset = "0xAE155C", VA = "0xAE155C")]
	public void LetterDown(int inputNum)
	{
	}

	[Token(Token = "0x6001005")]
	[Address(RVA = "0xAE16A4", Offset = "0xAE16A4", VA = "0xAE16A4")]
	public void onClick_delete()
	{
	}

	[Token(Token = "0x6001006")]
	[Address(RVA = "0xAE1730", Offset = "0xAE1730", VA = "0xAE1730")]
	public void onClick_Shift()
	{
	}

	[Token(Token = "0x6001007")]
	[Address(RVA = "0xAE1A04", Offset = "0xAE1A04", VA = "0xAE1A04")]
	public void onClick_revertChar()
	{
	}

	[Token(Token = "0x6001008")]
	[Address(RVA = "0xAE1880", Offset = "0xAE1880", VA = "0xAE1880")]
	public void changeAltKeys()
	{
	}

	[Token(Token = "0x6001009")]
	[Address(RVA = "0xAE1B30", Offset = "0xAE1B30", VA = "0xAE1B30")]
	public Keyboard()
	{
	}
}
[Token(Token = "0x200028F")]
public class Poke_Button : MonoBehaviour
{
	[Token(Token = "0x400103A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static float maxHoldTime;

	[Token(Token = "0x400103B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Button btn;

	[Token(Token = "0x400103C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool hold;

	[Token(Token = "0x400103D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool afterPress;

	[Token(Token = "0x400103E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AnimationCurve bounceAnim;

	[Token(Token = "0x400103F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private BoxCollider bCollider;

	[Token(Token = "0x4001040")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private UnityEngine.Vector3 initalPos;

	[Token(Token = "0x4001041")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private bool pressed;

	[Token(Token = "0x4001042")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
	private bool bounce;

	[Token(Token = "0x4001043")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float maxDist;

	[Token(Token = "0x4001044")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float maxScale;

	[Token(Token = "0x4001045")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float holdTime;

	[Token(Token = "0x4001046")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float currTime;

	[Token(Token = "0x4001047")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Color normalColor;

	[Token(Token = "0x4001048")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Color hoverColor;

	[Token(Token = "0x600100A")]
	[Address(RVA = "0xB744C0", Offset = "0xB744C0", VA = "0xB744C0")]
	private void Start()
	{
	}

	[Token(Token = "0x600100B")]
	[Address(RVA = "0xB74598", Offset = "0xB74598", VA = "0xB74598")]
	private void Update()
	{
	}

	[Token(Token = "0x600100C")]
	[Address(RVA = "0xB74668", Offset = "0xB74668", VA = "0xB74668")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600100D")]
	[Address(RVA = "0xB74724", Offset = "0xB74724", VA = "0xB74724")]
	private void OnTriggerStay(Collider other)
	{
	}

	[Token(Token = "0x600100E")]
	[Address(RVA = "0xB74A64", Offset = "0xB74A64", VA = "0xB74A64")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x600100F")]
	[Address(RVA = "0xB74A10", Offset = "0xB74A10", VA = "0xB74A10")]
	public void clickButton()
	{
	}

	[Token(Token = "0x6001010")]
	[Address(RVA = "0xB74B68", Offset = "0xB74B68", VA = "0xB74B68")]
	public void hoverEnter()
	{
	}

	[Token(Token = "0x6001011")]
	[Address(RVA = "0xB74BF0", Offset = "0xB74BF0", VA = "0xB74BF0")]
	public void hoverExit()
	{
	}

	[Token(Token = "0x6001012")]
	[Address(RVA = "0xB74C6C", Offset = "0xB74C6C", VA = "0xB74C6C")]
	public Poke_Button()
	{
	}
}
[Token(Token = "0x2000290")]
public class MatchTransform : MonoBehaviour
{
	[Token(Token = "0x4001049")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform copyTrans;

	[Token(Token = "0x400104A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool positionOnly;

	[Token(Token = "0x400104B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float yModifier;

	[Token(Token = "0x6001014")]
	[Address(RVA = "0xB82BB0", Offset = "0xB82BB0", VA = "0xB82BB0")]
	private void Update()
	{
	}

	[Token(Token = "0x6001015")]
	[Address(RVA = "0xB82CE4", Offset = "0xB82CE4", VA = "0xB82CE4")]
	public MatchTransform()
	{
	}
}
[Token(Token = "0x2000291")]
public class MoveRight : MonoBehaviour
{
	[Token(Token = "0x400104C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float speed;

	[Token(Token = "0x6001016")]
	[Address(RVA = "0xB866A8", Offset = "0xB866A8", VA = "0xB866A8")]
	private void Update()
	{
	}

	[Token(Token = "0x6001017")]
	[Address(RVA = "0xB867A8", Offset = "0xB867A8", VA = "0xB867A8")]
	public MoveRight()
	{
	}
}
[Token(Token = "0x2000292")]
public class MusicPlayer : MonoBehaviour
{
	[Token(Token = "0x2000806")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B8BD4", Offset = "0x8B8BD4")]
	private sealed class <playLoopSound>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002788")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002789")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400278A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MusicPlayer <>4__this;

		[Token(Token = "0x400278B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int num;

		[Token(Token = "0x17000655")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002EF0")]
			[Address(RVA = "0xB89D44", Offset = "0xB89D44", VA = "0xB89D44", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000656")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002EF2")]
			[Address(RVA = "0xB89DAC", Offset = "0xB89DAC", VA = "0xB89DAC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002EED")]
		[Address(RVA = "0xB89A64", Offset = "0xB89A64", VA = "0xB89A64")]
		[DebuggerHidden]
		public <playLoopSound>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6002EEE")]
		[Address(RVA = "0xB89BCC", Offset = "0xB89BCC", VA = "0xB89BCC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002EEF")]
		[Address(RVA = "0xB89BD0", Offset = "0xB89BD0", VA = "0xB89BD0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002EF1")]
		[Address(RVA = "0xB89D4C", Offset = "0xB89D4C", VA = "0xB89D4C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400104D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioSource source;

	[Token(Token = "0x400104E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioClip[] musicIntro;

	[Token(Token = "0x400104F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioClip[] musicLoop;

	[Token(Token = "0x4001050")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool lookForMusicSwap;

	[Token(Token = "0x4001051")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	public bool cancelLoop;

	[Token(Token = "0x6001018")]
	[Address(RVA = "0xB898E8", Offset = "0xB898E8", VA = "0xB898E8")]
	private void Start()
	{
	}

	[Token(Token = "0x6001019")]
	[Address(RVA = "0xB899E4", Offset = "0xB899E4", VA = "0xB899E4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C9498", Offset = "0x8C9498")]
	private IEnumerator playLoopSound(int num)
	{
		return null;
	}

	[Token(Token = "0x600101A")]
	[Address(RVA = "0xB89A90", Offset = "0xB89A90", VA = "0xB89A90")]
	public void playTrackStopped(int track)
	{
	}

	[Token(Token = "0x600101B")]
	[Address(RVA = "0xB89B08", Offset = "0xB89B08", VA = "0xB89B08")]
	public void playTrackNum(int num)
	{
	}

	[Token(Token = "0x600101C")]
	[Address(RVA = "0xB89B4C", Offset = "0xB89B4C", VA = "0xB89B4C")]
	public void playTrackNumNoLoop(int num)
	{
	}

	[Token(Token = "0x600101D")]
	[Address(RVA = "0xB89BC4", Offset = "0xB89BC4", VA = "0xB89BC4")]
	public MusicPlayer()
	{
	}
}
[Token(Token = "0x2000293")]
public class OVRGrabbable : MonoBehaviour
{
	[Token(Token = "0x4001052")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	protected bool m_allowOffhandGrab;

	[Token(Token = "0x4001053")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	[SerializeField]
	protected bool m_snapPosition;

	[Token(Token = "0x4001054")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	[SerializeField]
	protected bool m_snapOrientation;

	[Token(Token = "0x4001055")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	protected Transform m_snapOffset;

	[Token(Token = "0x4001056")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	protected Collider[] m_grabPoints;

	[Token(Token = "0x4001057")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected bool m_grabbedKinematic;

	[Token(Token = "0x4001058")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected Collider m_grabbedCollider;

	[Token(Token = "0x4001059")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	protected OVRGrabber m_grabbedBy;

	[Token(Token = "0x400105A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public UnityEvent onGrab;

	[Token(Token = "0x400105B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public UnityEvent onDrop;

	[Token(Token = "0x17000104")]
	public bool allowOffhandGrab
	{
		[Token(Token = "0x600101E")]
		[Address(RVA = "0x154B448", Offset = "0x154B448", VA = "0x154B448")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000105")]
	public bool isGrabbed
	{
		[Token(Token = "0x600101F")]
		[Address(RVA = "0x154B450", Offset = "0x154B450", VA = "0x154B450")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000106")]
	public bool snapPosition
	{
		[Token(Token = "0x6001020")]
		[Address(RVA = "0x154B4C0", Offset = "0x154B4C0", VA = "0x154B4C0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000107")]
	public bool snapOrientation
	{
		[Token(Token = "0x6001021")]
		[Address(RVA = "0x154B4C8", Offset = "0x154B4C8", VA = "0x154B4C8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000108")]
	public Transform snapOffset
	{
		[Token(Token = "0x6001022")]
		[Address(RVA = "0x154B4D0", Offset = "0x154B4D0", VA = "0x154B4D0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000109")]
	public OVRGrabber grabbedBy
	{
		[Token(Token = "0x6001023")]
		[Address(RVA = "0x154B4D8", Offset = "0x154B4D8", VA = "0x154B4D8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700010A")]
	public Transform grabbedTransform
	{
		[Token(Token = "0x6001024")]
		[Address(RVA = "0x154B4E0", Offset = "0x154B4E0", VA = "0x154B4E0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700010B")]
	public Rigidbody grabbedRigidbody
	{
		[Token(Token = "0x6001025")]
		[Address(RVA = "0x154B4FC", Offset = "0x154B4FC", VA = "0x154B4FC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700010C")]
	public Collider[] grabPoints
	{
		[Token(Token = "0x6001026")]
		[Address(RVA = "0x154B518", Offset = "0x154B518", VA = "0x154B518")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6001027")]
	[Address(RVA = "0x154B520", Offset = "0x154B520", VA = "0x154B520", Slot = "4")]
	public virtual void GrabBegin(OVRGrabber hand, Collider grabPoint)
	{
	}

	[Token(Token = "0x6001028")]
	[Address(RVA = "0x154B610", Offset = "0x154B610", VA = "0x154B610", Slot = "5")]
	public virtual void GrabEnd(UnityEngine.Vector3 linearVelocity, UnityEngine.Vector3 angularVelocity, float scaler = 1f)
	{
	}

	[Token(Token = "0x6001029")]
	[Address(RVA = "0x154B74C", Offset = "0x154B74C", VA = "0x154B74C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600102A")]
	[Address(RVA = "0x154B890", Offset = "0x154B890", VA = "0x154B890", Slot = "6")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x600102B")]
	[Address(RVA = "0x154B8FC", Offset = "0x154B8FC", VA = "0x154B8FC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600102C")]
	[Address(RVA = "0x154BA58", Offset = "0x154BA58", VA = "0x154BA58")]
	public OVRGrabbable()
	{
	}
}
[Token(Token = "0x2000294")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8B6950", Offset = "0x8B6950")]
public class OVRGrabber : MonoBehaviour
{
	[Token(Token = "0x400105C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float grabBegin;

	[Token(Token = "0x400105D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float grabEnd;

	[Token(Token = "0x400105E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float handForceScaler;

	[Token(Token = "0x400105F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private bool alreadyUpdated;

	[Token(Token = "0x4001060")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
	[SerializeField]
	protected bool m_parentHeldObject;

	[Token(Token = "0x4001061")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x26")]
	[SerializeField]
	protected bool m_moveHandPosition;

	[Token(Token = "0x4001062")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	protected Transform m_gripTransform;

	[Token(Token = "0x4001063")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	protected Collider[] m_grabVolumes;

	[Token(Token = "0x4001064")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	protected OVRInput.Controller m_controller;

	[Token(Token = "0x4001065")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[SerializeField]
	protected bool rightHand;

	[Token(Token = "0x4001066")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	protected Transform m_parentTransform;

	[Token(Token = "0x4001067")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	protected GameObject m_player;

	[Token(Token = "0x4001068")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	protected bool m_grabVolumeEnabled;

	[Token(Token = "0x4001069")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	protected UnityEngine.Vector3 m_lastPos;

	[Token(Token = "0x400106A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	protected Quaternion m_lastRot;

	[Token(Token = "0x400106B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	protected Quaternion m_anchorOffsetRotation;

	[Token(Token = "0x400106C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	protected UnityEngine.Vector3 m_anchorOffsetPosition;

	[Token(Token = "0x400106D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	protected float m_prevFlex;

	[Token(Token = "0x400106E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	protected OVRGrabbable m_grabbedObj;

	[Token(Token = "0x400106F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	protected UnityEngine.Vector3 m_grabbedObjectPosOff;

	[Token(Token = "0x4001070")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	protected Quaternion m_grabbedObjectRotOff;

	[Token(Token = "0x4001071")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	protected Dictionary<OVRGrabbable, int> m_grabCandidates;

	[Token(Token = "0x4001072")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	protected bool m_operatingWithoutOVRCameraRig;

	[Token(Token = "0x1700010D")]
	public OVRGrabbable grabbedObject
	{
		[Token(Token = "0x600102D")]
		[Address(RVA = "0x154BAE8", Offset = "0x154BAE8", VA = "0x154BAE8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600102E")]
	[Address(RVA = "0x154B990", Offset = "0x154B990", VA = "0x154B990")]
	public void ForceRelease(OVRGrabbable grabbable)
	{
	}

	[Token(Token = "0x600102F")]
	[Address(RVA = "0x154BDE0", Offset = "0x154BDE0", VA = "0x154BDE0", Slot = "4")]
	protected virtual void Awake()
	{
	}

	[Token(Token = "0x6001030")]
	[Address(RVA = "0x154BF1C", Offset = "0x154BF1C", VA = "0x154BF1C", Slot = "5")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x6001031")]
	[Address(RVA = "0x154C170", Offset = "0x154C170", VA = "0x154C170", Slot = "6")]
	public virtual void Update()
	{
	}

	[Token(Token = "0x6001032")]
	[Address(RVA = "0x154C178", Offset = "0x154C178", VA = "0x154C178", Slot = "7")]
	public virtual void FixedUpdate()
	{
	}

	[Token(Token = "0x6001033")]
	[Address(RVA = "0x154C188", Offset = "0x154C188", VA = "0x154C188")]
	private void OnUpdatedAnchors()
	{
	}

	[Token(Token = "0x6001034")]
	[Address(RVA = "0x154C450", Offset = "0x154C450", VA = "0x154C450")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6001035")]
	[Address(RVA = "0x154C4D8", Offset = "0x154C4D8", VA = "0x154C4D8")]
	private void OnTriggerEnter(Collider otherCollider)
	{
	}

	[Token(Token = "0x6001036")]
	[Address(RVA = "0x154C5E0", Offset = "0x154C5E0", VA = "0x154C5E0")]
	private void OnTriggerExit(Collider otherCollider)
	{
	}

	[Token(Token = "0x6001037")]
	[Address(RVA = "0x154C410", Offset = "0x154C410", VA = "0x154C410")]
	protected void CheckForGrabOrRelease(float prevFlex)
	{
	}

	[Token(Token = "0x6001038")]
	[Address(RVA = "0x154C710", Offset = "0x154C710", VA = "0x154C710", Slot = "8")]
	protected virtual void GrabBegin()
	{
	}

	[Token(Token = "0x6001039")]
	[Address(RVA = "0x154CE58", Offset = "0x154CE58", VA = "0x154CE58", Slot = "9")]
	protected virtual void MoveGrabbedObject(UnityEngine.Vector3 pos, Quaternion rot, bool forceTeleport = false)
	{
	}

	[Token(Token = "0x600103A")]
	[Address(RVA = "0x154BAF0", Offset = "0x154BAF0", VA = "0x154BAF0")]
	protected void GrabEnd()
	{
	}

	[Token(Token = "0x600103B")]
	[Address(RVA = "0x154D0CC", Offset = "0x154D0CC", VA = "0x154D0CC")]
	protected void GrabbableRelease(UnityEngine.Vector3 linearVelocity, UnityEngine.Vector3 angularVelocity)
	{
	}

	[Token(Token = "0x600103C")]
	[Address(RVA = "0x154D150", Offset = "0x154D150", VA = "0x154D150", Slot = "10")]
	protected virtual void GrabVolumeEnable(bool enabled)
	{
	}

	[Token(Token = "0x600103D")]
	[Address(RVA = "0x154D238", Offset = "0x154D238", VA = "0x154D238", Slot = "11")]
	protected virtual void OffhandGrabbed(OVRGrabbable grabbable)
	{
	}

	[Token(Token = "0x600103E")]
	[Address(RVA = "0x154C00C", Offset = "0x154C00C", VA = "0x154C00C")]
	protected void SetPlayerIgnoreCollision(GameObject grabbable, bool ignore)
	{
	}

	[Token(Token = "0x600103F")]
	[Address(RVA = "0x154D33C", Offset = "0x154D33C", VA = "0x154D33C")]
	public OVRGrabber()
	{
	}

	[Token(Token = "0x6001040")]
	[Address(RVA = "0x154D3D4", Offset = "0x154D3D4", VA = "0x154D3D4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C94FC", Offset = "0x8C94FC")]
	private void <Awake>b__26_0(OVRCameraRig r)
	{
	}
}
[Token(Token = "0x2000295")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8B69B4", Offset = "0x8B69B4")]
public class OVRRaycaster : GraphicRaycaster, IPointerEnterHandler, IEventSystemHandler
{
	[Token(Token = "0x2000807")]
	private struct RaycastHit
	{
		[Token(Token = "0x400278C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Graphic graphic;

		[Token(Token = "0x400278D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public UnityEngine.Vector3 worldPos;

		[Token(Token = "0x400278E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public bool fromMouse;
	}

	[Serializable]
	[Token(Token = "0x2000808")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B8BE4", Offset = "0x8B8BE4")]
	private sealed class <>c
	{
		[Token(Token = "0x400278F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4002790")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Comparison<RaycastHit> <>9__16_0;

		[Token(Token = "0x6002EF4")]
		[Address(RVA = "0xD22720", Offset = "0xD22720", VA = "0xD22720")]
		public <>c()
		{
		}

		[Token(Token = "0x6002EF5")]
		[Address(RVA = "0xD22728", Offset = "0xD22728", VA = "0xD22728")]
		internal int <GraphicRaycast>b__16_0(RaycastHit g1, RaycastHit g2)
		{
			return default(int);
		}
	}

	[Token(Token = "0x4001073")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BCF00", Offset = "0x8BCF00")]
	public GameObject pointer;

	[Token(Token = "0x4001074")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int sortOrder;

	[NonSerialized]
	[Token(Token = "0x4001075")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Canvas m_Canvas;

	[NonSerialized]
	[Token(Token = "0x4001076")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<RaycastHit> m_RaycastResults;

	[NonSerialized]
	[Token(Token = "0x4001077")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly List<RaycastHit> s_SortedGraphics;

	[Token(Token = "0x1700010E")]
	private Canvas canvas
	{
		[Token(Token = "0x6001042")]
		[Address(RVA = "0xD20F84", Offset = "0xD20F84", VA = "0xD20F84")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700010F")]
	public override Camera eventCamera
	{
		[Token(Token = "0x6001043")]
		[Address(RVA = "0xD2101C", Offset = "0xD2101C", VA = "0xD2101C", Slot = "18")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000110")]
	public override int sortOrderPriority
	{
		[Token(Token = "0x6001044")]
		[Address(RVA = "0xD2103C", Offset = "0xD2103C", VA = "0xD2103C", Slot = "20")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6001041")]
	[Address(RVA = "0xD20EF4", Offset = "0xD20EF4", VA = "0xD20EF4")]
	protected OVRRaycaster()
	{
	}

	[Token(Token = "0x6001045")]
	[Address(RVA = "0xD21044", Offset = "0xD21044", VA = "0xD21044", Slot = "6")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6001046")]
	[Address(RVA = "0xD2115C", Offset = "0xD2115C", VA = "0xD2115C")]
	private void Raycast(PointerEventData eventData, List<RaycastResult> resultAppendList, Ray ray, bool checkForBlocking)
	{
	}

	[Token(Token = "0x6001047")]
	[Address(RVA = "0xD21CC8", Offset = "0xD21CC8", VA = "0xD21CC8", Slot = "17")]
	public override void Raycast(PointerEventData eventData, List<RaycastResult> resultAppendList)
	{
	}

	[Token(Token = "0x6001048")]
	[Address(RVA = "0xD21D40", Offset = "0xD21D40", VA = "0xD21D40")]
	public void RaycastPointer(PointerEventData eventData, List<RaycastResult> resultAppendList)
	{
	}

	[Token(Token = "0x6001049")]
	[Address(RVA = "0xD2173C", Offset = "0xD2173C", VA = "0xD2173C")]
	private void GraphicRaycast(Canvas canvas, Ray ray, List<RaycastHit> results)
	{
	}

	[Token(Token = "0x600104A")]
	[Address(RVA = "0xD2234C", Offset = "0xD2234C", VA = "0xD2234C")]
	public UnityEngine.Vector2 GetScreenPosition(RaycastResult raycastResult)
	{
		return default(UnityEngine.Vector2);
	}

	[Token(Token = "0x600104B")]
	[Address(RVA = "0xD21F4C", Offset = "0xD21F4C", VA = "0xD21F4C")]
	private static bool RayIntersectsRectTransform(RectTransform rectTransform, Ray ray, out UnityEngine.Vector3 worldPos)
	{
		return default(bool);
	}

	[Token(Token = "0x600104C")]
	[Address(RVA = "0xD22410", Offset = "0xD22410", VA = "0xD22410")]
	public bool IsFocussed()
	{
		return default(bool);
	}

	[Token(Token = "0x600104D")]
	[Address(RVA = "0xD2253C", Offset = "0xD2253C", VA = "0xD2253C", Slot = "22")]
	public void OnPointerEnter(PointerEventData e)
	{
	}
}
[Token(Token = "0x2000296")]
public class OWMoveToPlayer : MonoBehaviour
{
	[Token(Token = "0x4001078")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float speed;

	[Token(Token = "0x600104F")]
	[Address(RVA = "0xD26800", Offset = "0xD26800", VA = "0xD26800")]
	private void Update()
	{
	}

	[Token(Token = "0x6001050")]
	[Address(RVA = "0xD26930", Offset = "0xD26930", VA = "0xD26930")]
	public OWMoveToPlayer()
	{
	}
}
[Token(Token = "0x2000297")]
public class OculusPlatformManager : MonoBehaviour
{
	[Token(Token = "0x6001051")]
	[Address(RVA = "0xD2E91C", Offset = "0xD2E91C", VA = "0xD2E91C")]
	private void Start()
	{
	}

	[Token(Token = "0x6001052")]
	[Address(RVA = "0xD2E98C", Offset = "0xD2E98C", VA = "0xD2E98C")]
	private void checkEntitlement()
	{
	}

	[Token(Token = "0x6001053")]
	[Address(RVA = "0xD2EA24", Offset = "0xD2EA24", VA = "0xD2EA24")]
	private void getEntitlementCallback(Message msg)
	{
	}

	[Token(Token = "0x6001054")]
	[Address(RVA = "0xD2EB3C", Offset = "0xD2EB3C", VA = "0xD2EB3C")]
	private void GetLoggedInUserCallback(Message<User> msg)
	{
	}

	[Token(Token = "0x6001055")]
	[Address(RVA = "0xD2EC1C", Offset = "0xD2EC1C", VA = "0xD2EC1C")]
	private void Update()
	{
	}

	[Token(Token = "0x6001056")]
	[Address(RVA = "0xD2EC20", Offset = "0xD2EC20", VA = "0xD2EC20")]
	public OculusPlatformManager()
	{
	}
}
[Token(Token = "0x2000298")]
public class PlatformSwapper : MonoBehaviour
{
	[Token(Token = "0x4001079")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject androidObject;

	[Token(Token = "0x400107A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject pcObject;

	[Token(Token = "0x6001057")]
	[Address(RVA = "0xB679F8", Offset = "0xB679F8", VA = "0xB679F8")]
	private void Start()
	{
	}

	[Token(Token = "0x6001058")]
	[Address(RVA = "0xB67A70", Offset = "0xB67A70", VA = "0xB67A70")]
	public PlatformSwapper()
	{
	}
}
[Token(Token = "0x2000299")]
public class RotateHelper : MonoBehaviour
{
	[Token(Token = "0x400107B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float rotX;

	[Token(Token = "0x400107C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float rotY;

	[Token(Token = "0x400107D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float rotZ;

	[Token(Token = "0x400107E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float speed;

	[Token(Token = "0x6001059")]
	[Address(RVA = "0xC1FDE0", Offset = "0xC1FDE0", VA = "0xC1FDE0")]
	private void Update()
	{
	}

	[Token(Token = "0x600105A")]
	[Address(RVA = "0xC1FE88", Offset = "0xC1FE88", VA = "0xC1FE88")]
	public RotateHelper()
	{
	}
}
[Token(Token = "0x200029A")]
public class RotateWithVelocity : MonoBehaviour
{
	[Token(Token = "0x400107F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Rigidbody rb;

	[Token(Token = "0x600105B")]
	[Address(RVA = "0xC1FE98", Offset = "0xC1FE98", VA = "0xC1FE98")]
	private void Update()
	{
	}

	[Token(Token = "0x600105C")]
	[Address(RVA = "0xC1FEE4", Offset = "0xC1FEE4", VA = "0xC1FEE4")]
	public RotateWithVelocity()
	{
	}
}
[Token(Token = "0x200029B")]
public class ScaleCloseToCam : MonoBehaviour
{
	[Token(Token = "0x600105D")]
	[Address(RVA = "0xC21858", Offset = "0xC21858", VA = "0xC21858")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x600105E")]
	[Address(RVA = "0xC219EC", Offset = "0xC219EC", VA = "0xC219EC")]
	public ScaleCloseToCam()
	{
	}
}
[Token(Token = "0x200029C")]
public class ScrollUV : MonoBehaviour
{
	[Token(Token = "0x4001080")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float scrollSpeed_X;

	[Token(Token = "0x4001081")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float scrollSpeed_Y;

	[Token(Token = "0x4001082")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Renderer rend;

	[Token(Token = "0x600105F")]
	[Address(RVA = "0xC21BA4", Offset = "0xC21BA4", VA = "0xC21BA4")]
	private void Start()
	{
	}

	[Token(Token = "0x6001060")]
	[Address(RVA = "0xC21BFC", Offset = "0xC21BFC", VA = "0xC21BFC")]
	private void Update()
	{
	}

	[Token(Token = "0x6001061")]
	[Address(RVA = "0xC21C98", Offset = "0xC21C98", VA = "0xC21C98")]
	public ScrollUV()
	{
	}
}
[Token(Token = "0x200029D")]
public class StateMachine<T, E>
{
	[Token(Token = "0x4001083")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private E _currentState;

	[Token(Token = "0x4001084")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private T parent;

	[Token(Token = "0x4001085")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private State<T>[] states;

	[Token(Token = "0x17000111")]
	public E CurrentState
	{
		[Token(Token = "0x6001062")]
		get
		{
			return (E)null;
		}
	}

	[Token(Token = "0x17000112")]
	private State<T> currentState
	{
		[Token(Token = "0x6001063")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6001064")]
	public StateMachine(T parent, State<T>[] states, E initState)
	{
	}

	[Token(Token = "0x6001065")]
	public void update()
	{
	}

	[Token(Token = "0x6001066")]
	public void switchState(E newState)
	{
	}
}
[Token(Token = "0x200029E")]
public abstract class State<T>
{
	[Token(Token = "0x6001067")]
	public abstract void activate(T parent);

	[Token(Token = "0x6001068")]
	public abstract void update(T parent);

	[Token(Token = "0x6001069")]
	protected State()
	{
	}
}
[Token(Token = "0x200029F")]
public class SwapInputText : MonoBehaviour
{
	[Token(Token = "0x2000809")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B8BF4", Offset = "0x8B8BF4")]
	private sealed class <lateStart>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002791")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002792")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002793")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SwapInputText <>4__this;

		[Token(Token = "0x17000657")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002EF9")]
			[Address(RVA = "0xB28E1C", Offset = "0xB28E1C", VA = "0xB28E1C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000658")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002EFB")]
			[Address(RVA = "0xB28E84", Offset = "0xB28E84", VA = "0xB28E84", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002EF6")]
		[Address(RVA = "0xB28ABC", Offset = "0xB28ABC", VA = "0xB28ABC")]
		[DebuggerHidden]
		public <lateStart>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x6002EF7")]
		[Address(RVA = "0xB28AF0", Offset = "0xB28AF0", VA = "0xB28AF0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002EF8")]
		[Address(RVA = "0xB28AF4", Offset = "0xB28AF4", VA = "0xB28AF4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002EFA")]
		[Address(RVA = "0xB28E24", Offset = "0xB28E24", VA = "0xB28E24", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001086")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TMP_Text[] texts;

	[Token(Token = "0x4001087")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text[] textsUI;

	[Token(Token = "0x600106A")]
	[Address(RVA = "0xB28770", Offset = "0xB28770", VA = "0xB28770")]
	private void Start()
	{
	}

	[Token(Token = "0x600106B")]
	[Address(RVA = "0xB28A4C", Offset = "0xB28A4C", VA = "0xB28A4C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C950C", Offset = "0x8C950C")]
	private IEnumerator lateStart()
	{
		return null;
	}

	[Token(Token = "0x600106C")]
	[Address(RVA = "0xB28AE8", Offset = "0xB28AE8", VA = "0xB28AE8")]
	public SwapInputText()
	{
	}
}
[Token(Token = "0x20002A0")]
public class PlayerRigSwitcher : MonoBehaviour
{
	[Token(Token = "0x4001088")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject picoPlayer;

	[Token(Token = "0x4001089")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject qiyuPlayer;

	[Token(Token = "0x600106D")]
	[Address(RVA = "0xB6EAC0", Offset = "0xB6EAC0", VA = "0xB6EAC0")]
	private void Awake()
	{
	}

	[Token(Token = "0x600106E")]
	[Address(RVA = "0xB6EBD4", Offset = "0xB6EBD4", VA = "0xB6EBD4")]
	public PlayerRigSwitcher()
	{
	}
}
[Token(Token = "0x20002A1")]
public class UniversalGrabbable : MonoBehaviour
{
	[Token(Token = "0x400108A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	protected bool m_allowOffhandGrab;

	[Token(Token = "0x400108B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	[SerializeField]
	protected bool m_snapPosition;

	[Token(Token = "0x400108C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	[SerializeField]
	protected bool m_snapOrientation;

	[Token(Token = "0x400108D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	protected Transform m_snapOffset;

	[Token(Token = "0x400108E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	protected Collider[] m_grabPoints;

	[Token(Token = "0x400108F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected bool m_grabbedKinematic;

	[Token(Token = "0x4001090")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected Collider m_grabbedCollider;

	[Token(Token = "0x4001091")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	protected UniversalGrabber m_grabbedBy;

	[Token(Token = "0x4001092")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public UnityEvent onGrab;

	[Token(Token = "0x4001093")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public UnityEvent onDrop;

	[Token(Token = "0x17000113")]
	public bool allowOffhandGrab
	{
		[Token(Token = "0x600106F")]
		[Address(RVA = "0xC03BF8", Offset = "0xC03BF8", VA = "0xC03BF8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000114")]
	public bool isGrabbed
	{
		[Token(Token = "0x6001070")]
		[Address(RVA = "0xC03C00", Offset = "0xC03C00", VA = "0xC03C00")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000115")]
	public bool snapPosition
	{
		[Token(Token = "0x6001071")]
		[Address(RVA = "0xC03C70", Offset = "0xC03C70", VA = "0xC03C70")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000116")]
	public bool snapOrientation
	{
		[Token(Token = "0x6001072")]
		[Address(RVA = "0xC03C78", Offset = "0xC03C78", VA = "0xC03C78")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000117")]
	public Transform snapOffset
	{
		[Token(Token = "0x6001073")]
		[Address(RVA = "0xC03C80", Offset = "0xC03C80", VA = "0xC03C80")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000118")]
	public UniversalGrabber grabbedBy
	{
		[Token(Token = "0x6001074")]
		[Address(RVA = "0xC03C88", Offset = "0xC03C88", VA = "0xC03C88")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000119")]
	public Transform grabbedTransform
	{
		[Token(Token = "0x6001075")]
		[Address(RVA = "0xC03C90", Offset = "0xC03C90", VA = "0xC03C90")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700011A")]
	public Rigidbody grabbedRigidbody
	{
		[Token(Token = "0x6001076")]
		[Address(RVA = "0xC03CAC", Offset = "0xC03CAC", VA = "0xC03CAC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700011B")]
	public Collider[] grabPoints
	{
		[Token(Token = "0x6001077")]
		[Address(RVA = "0xC03CC8", Offset = "0xC03CC8", VA = "0xC03CC8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6001078")]
	[Address(RVA = "0xC03CD0", Offset = "0xC03CD0", VA = "0xC03CD0", Slot = "4")]
	public virtual void GrabBegin(UniversalGrabber hand, Collider grabPoint)
	{
	}

	[Token(Token = "0x6001079")]
	[Address(RVA = "0xC03DC0", Offset = "0xC03DC0", VA = "0xC03DC0", Slot = "5")]
	public virtual void GrabEnd(UnityEngine.Vector3 linearVelocity, UnityEngine.Vector3 angularVelocity, float scaler = 1f)
	{
	}

	[Token(Token = "0x600107A")]
	[Address(RVA = "0xC03EFC", Offset = "0xC03EFC", VA = "0xC03EFC")]
	private void Awake()
	{
	}

	[Token(Token = "0x600107B")]
	[Address(RVA = "0xC04040", Offset = "0xC04040", VA = "0xC04040", Slot = "6")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x600107C")]
	[Address(RVA = "0xC040AC", Offset = "0xC040AC", VA = "0xC040AC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600107D")]
	[Address(RVA = "0xC04208", Offset = "0xC04208", VA = "0xC04208")]
	public UniversalGrabbable()
	{
	}
}
[Token(Token = "0x20002A2")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8B6A18", Offset = "0x8B6A18")]
public class UniversalGrabber : MonoBehaviour
{
	[Token(Token = "0x4001094")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float grabBegin;

	[Token(Token = "0x4001095")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float grabEnd;

	[Token(Token = "0x4001096")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float handForceScaler;

	[Token(Token = "0x4001097")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private bool alreadyUpdated;

	[Token(Token = "0x4001098")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
	[SerializeField]
	protected bool m_parentHeldObject;

	[Token(Token = "0x4001099")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x26")]
	[SerializeField]
	protected bool m_moveHandPosition;

	[Token(Token = "0x400109A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	protected Transform m_gripTransform;

	[Token(Token = "0x400109B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	protected Collider[] m_grabVolumes;

	[Token(Token = "0x400109C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	protected OVRInput.Controller m_controller;

	[Token(Token = "0x400109D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	protected Transform m_parentTransform;

	[Token(Token = "0x400109E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	protected GameObject m_player;

	[Token(Token = "0x400109F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	protected bool m_grabVolumeEnabled;

	[Token(Token = "0x40010A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	protected UnityEngine.Vector3 m_lastPos;

	[Token(Token = "0x40010A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	protected Quaternion m_lastRot;

	[Token(Token = "0x40010A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	protected Quaternion m_anchorOffsetRotation;

	[Token(Token = "0x40010A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	protected UnityEngine.Vector3 m_anchorOffsetPosition;

	[Token(Token = "0x40010A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	protected float m_prevFlex;

	[Token(Token = "0x40010A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	protected UniversalGrabbable m_grabbedObj;

	[Token(Token = "0x40010A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	protected UnityEngine.Vector3 m_grabbedObjectPosOff;

	[Token(Token = "0x40010A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	protected Quaternion m_grabbedObjectRotOff;

	[Token(Token = "0x40010A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	protected Dictionary<UniversalGrabbable, int> m_grabCandidates;

	[Token(Token = "0x40010A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	protected bool m_operatingWithoutOVRCameraRig;

	[Token(Token = "0x1700011C")]
	public UniversalGrabbable grabbedObject
	{
		[Token(Token = "0x600107E")]
		[Address(RVA = "0xC04298", Offset = "0xC04298", VA = "0xC04298")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600107F")]
	[Address(RVA = "0xC04140", Offset = "0xC04140", VA = "0xC04140")]
	public void ForceRelease(UniversalGrabbable grabbable)
	{
	}

	[Token(Token = "0x6001080")]
	[Address(RVA = "0xC04534", Offset = "0xC04534", VA = "0xC04534", Slot = "4")]
	protected virtual void Awake()
	{
	}

	[Token(Token = "0x6001081")]
	[Address(RVA = "0xC04670", Offset = "0xC04670", VA = "0xC04670", Slot = "5")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x6001082")]
	[Address(RVA = "0xC048C4", Offset = "0xC048C4", VA = "0xC048C4", Slot = "6")]
	public virtual void Update()
	{
	}

	[Token(Token = "0x6001083")]
	[Address(RVA = "0xC048CC", Offset = "0xC048CC", VA = "0xC048CC", Slot = "7")]
	public virtual void FixedUpdate()
	{
	}

	[Token(Token = "0x6001084")]
	[Address(RVA = "0xC048DC", Offset = "0xC048DC", VA = "0xC048DC")]
	private void OnUpdatedAnchors()
	{
	}

	[Token(Token = "0x6001085")]
	[Address(RVA = "0xC04B68", Offset = "0xC04B68", VA = "0xC04B68")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6001086")]
	[Address(RVA = "0xC04BF0", Offset = "0xC04BF0", VA = "0xC04BF0")]
	private void OnTriggerEnter(Collider otherCollider)
	{
	}

	[Token(Token = "0x6001087")]
	[Address(RVA = "0xC04CF8", Offset = "0xC04CF8", VA = "0xC04CF8")]
	private void OnTriggerExit(Collider otherCollider)
	{
	}

	[Token(Token = "0x6001088")]
	[Address(RVA = "0xC04B28", Offset = "0xC04B28", VA = "0xC04B28")]
	protected void CheckForGrabOrRelease(float prevFlex)
	{
	}

	[Token(Token = "0x6001089")]
	[Address(RVA = "0xC04E28", Offset = "0xC04E28", VA = "0xC04E28", Slot = "8")]
	protected virtual void GrabBegin()
	{
	}

	[Token(Token = "0x600108A")]
	[Address(RVA = "0xC05570", Offset = "0xC05570", VA = "0xC05570", Slot = "9")]
	protected virtual void MoveGrabbedObject(UnityEngine.Vector3 pos, Quaternion rot, bool forceTeleport = false)
	{
	}

	[Token(Token = "0x600108B")]
	[Address(RVA = "0xC042A0", Offset = "0xC042A0", VA = "0xC042A0")]
	protected void GrabEnd()
	{
	}

	[Token(Token = "0x600108C")]
	[Address(RVA = "0xC057E4", Offset = "0xC057E4", VA = "0xC057E4")]
	protected void GrabbableRelease(UnityEngine.Vector3 linearVelocity, UnityEngine.Vector3 angularVelocity)
	{
	}

	[Token(Token = "0x600108D")]
	[Address(RVA = "0xC05868", Offset = "0xC05868", VA = "0xC05868", Slot = "10")]
	protected virtual void GrabVolumeEnable(bool enabled)
	{
	}

	[Token(Token = "0x600108E")]
	[Address(RVA = "0xC05950", Offset = "0xC05950", VA = "0xC05950", Slot = "11")]
	protected virtual void OffhandGrabbed(UniversalGrabbable grabbable)
	{
	}

	[Token(Token = "0x600108F")]
	[Address(RVA = "0xC04760", Offset = "0xC04760", VA = "0xC04760")]
	protected void SetPlayerIgnoreCollision(GameObject grabbable, bool ignore)
	{
	}

	[Token(Token = "0x6001090")]
	[Address(RVA = "0xC05A54", Offset = "0xC05A54", VA = "0xC05A54")]
	public UniversalGrabber()
	{
	}

	[Token(Token = "0x6001091")]
	[Address(RVA = "0xC05AEC", Offset = "0xC05AEC", VA = "0xC05AEC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C9570", Offset = "0x8C9570")]
	private void <Awake>b__25_0(OVRCameraRig r)
	{
	}
}
[Token(Token = "0x20002A3")]
public class VRHapticManager : MonoBehaviour
{
	[Token(Token = "0x40010AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static VRHapticManager _instance;

	[Token(Token = "0x1700011D")]
	public static VRHapticManager instance
	{
		[Token(Token = "0x6001093")]
		[Address(RVA = "0xC05EF0", Offset = "0xC05EF0", VA = "0xC05EF0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6001092")]
	[Address(RVA = "0xC05EEC", Offset = "0xC05EEC", VA = "0xC05EEC")]
	private void init()
	{
	}

	[Token(Token = "0x6001094")]
	[Address(RVA = "0xC06010", Offset = "0xC06010", VA = "0xC06010", Slot = "4")]
	public virtual void playBadClip(bool left, bool overrideClip = false)
	{
	}

	[Token(Token = "0x6001095")]
	[Address(RVA = "0xC06084", Offset = "0xC06084", VA = "0xC06084", Slot = "5")]
	public virtual void playGoodClip(bool left, bool overrideClip = false)
	{
	}

	[Token(Token = "0x6001096")]
	[Address(RVA = "0xC060F8", Offset = "0xC060F8", VA = "0xC060F8", Slot = "6")]
	public virtual void playExtraClip(bool left, int clip, bool overrideClip = false)
	{
	}

	[Token(Token = "0x6001097")]
	[Address(RVA = "0xC06174", Offset = "0xC06174", VA = "0xC06174")]
	public VRHapticManager()
	{
	}
}
[Token(Token = "0x20002A4")]
public class VRHapticManagerPico : VRHapticManager
{
	[Token(Token = "0x6001098")]
	[Address(RVA = "0xC0617C", Offset = "0xC0617C", VA = "0xC0617C", Slot = "4")]
	public override void playBadClip(bool left, bool overrideClip = false)
	{
	}

	[Token(Token = "0x6001099")]
	[Address(RVA = "0xC06200", Offset = "0xC06200", VA = "0xC06200", Slot = "5")]
	public override void playGoodClip(bool left, bool overrideClip = false)
	{
	}

	[Token(Token = "0x600109A")]
	[Address(RVA = "0xC06284", Offset = "0xC06284", VA = "0xC06284", Slot = "6")]
	public override void playExtraClip(bool left, int clip, bool overrideClip = false)
	{
	}

	[Token(Token = "0x600109B")]
	[Address(RVA = "0xC06308", Offset = "0xC06308", VA = "0xC06308")]
	public VRHapticManagerPico()
	{
	}
}
[Token(Token = "0x20002A5")]
public class VRHapticManagerQiyu : VRHapticManager
{
	[Token(Token = "0x40010AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public InputDevice leftHand;

	[Token(Token = "0x40010AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public InputDevice rightHand;

	[Token(Token = "0x600109C")]
	[Address(RVA = "0xC06310", Offset = "0xC06310", VA = "0xC06310")]
	private void Start()
	{
	}

	[Token(Token = "0x600109D")]
	[Address(RVA = "0xC063EC", Offset = "0xC063EC", VA = "0xC063EC", Slot = "4")]
	public override void playBadClip(bool left, bool overrideClip = false)
	{
	}

	[Token(Token = "0x600109E")]
	[Address(RVA = "0xC0648C", Offset = "0xC0648C", VA = "0xC0648C", Slot = "5")]
	public override void playGoodClip(bool left, bool overrideClip = false)
	{
	}

	[Token(Token = "0x600109F")]
	[Address(RVA = "0xC0652C", Offset = "0xC0652C", VA = "0xC0652C", Slot = "6")]
	public override void playExtraClip(bool left, int clip, bool overrideClip = false)
	{
	}

	[Token(Token = "0x60010A0")]
	[Address(RVA = "0xC065CC", Offset = "0xC065CC", VA = "0xC065CC")]
	public VRHapticManagerQiyu()
	{
	}
}
[Token(Token = "0x20002A6")]
public class VRInputManager : MonoBehaviour
{
	[Token(Token = "0x40010AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool openVR;

	[Token(Token = "0x40010AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	private bool lefthanded;

	[Token(Token = "0x40010AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	private bool knuckles;

	[Token(Token = "0x40010B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	protected Transform trackingSpace;

	[Token(Token = "0x40010B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	protected static float stickDeadzone;

	[Token(Token = "0x40010B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static VRInputManager _instance;

	[Token(Token = "0x1700011E")]
	public static VRInputManager instance
	{
		[Token(Token = "0x60010A3")]
		[Address(RVA = "0xC03A8C", Offset = "0xC03A8C", VA = "0xC03A8C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700011F")]
	public bool leftThumbstickIdle
	{
		[Token(Token = "0x60010A4")]
		[Address(RVA = "0xC067C0", Offset = "0xC067C0", VA = "0xC067C0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000120")]
	public virtual string selectButtonString
	{
		[Token(Token = "0x60010A6")]
		[Address(RVA = "0xC06934", Offset = "0xC06934", VA = "0xC06934", Slot = "5")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000121")]
	public virtual string menuButtonString
	{
		[Token(Token = "0x60010A7")]
		[Address(RVA = "0xC06994", Offset = "0xC06994", VA = "0xC06994", Slot = "6")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000122")]
	public virtual string hoverboardString
	{
		[Token(Token = "0x60010A8")]
		[Address(RVA = "0xC069F4", Offset = "0xC069F4", VA = "0xC069F4", Slot = "7")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000123")]
	public virtual string hoverboardBrakeString
	{
		[Token(Token = "0x60010A9")]
		[Address(RVA = "0xC06A54", Offset = "0xC06A54", VA = "0xC06A54", Slot = "8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000124")]
	public virtual bool thumbstickInputLostLeft
	{
		[Token(Token = "0x60010AA")]
		[Address(RVA = "0xC06AB4", Offset = "0xC06AB4", VA = "0xC06AB4", Slot = "9")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000125")]
	public virtual bool thumbstickRequirementLeft
	{
		[Token(Token = "0x60010AB")]
		[Address(RVA = "0xC06B68", Offset = "0xC06B68", VA = "0xC06B68", Slot = "10")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000126")]
	public virtual bool thumbstickRequirementRight
	{
		[Token(Token = "0x60010AC")]
		[Address(RVA = "0xC06B70", Offset = "0xC06B70", VA = "0xC06B70", Slot = "11")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000127")]
	public OVRInput.Button switchPerspective
	{
		[Token(Token = "0x60010B1")]
		[Address(RVA = "0xC06D88", Offset = "0xC06D88", VA = "0xC06D88")]
		get
		{
			return default(OVRInput.Button);
		}
	}

	[Token(Token = "0x17000128")]
	public virtual bool switchPerspectiveDown
	{
		[Token(Token = "0x60010B2")]
		[Address(RVA = "0xC06DA0", Offset = "0xC06DA0", VA = "0xC06DA0", Slot = "16")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000129")]
	public virtual bool cameraTurnRightDown
	{
		[Token(Token = "0x60010B3")]
		[Address(RVA = "0xC06E08", Offset = "0xC06E08", VA = "0xC06E08", Slot = "17")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700012A")]
	public virtual bool cameraTurnLeftDown
	{
		[Token(Token = "0x60010B4")]
		[Address(RVA = "0xC06E70", Offset = "0xC06E70", VA = "0xC06E70", Slot = "18")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700012B")]
	public OVRInput.Button triggerInteract
	{
		[Token(Token = "0x60010B5")]
		[Address(RVA = "0xC06ED8", Offset = "0xC06ED8", VA = "0xC06ED8")]
		get
		{
			return default(OVRInput.Button);
		}
	}

	[Token(Token = "0x1700012C")]
	public virtual bool triggerInteractDown
	{
		[Token(Token = "0x60010B6")]
		[Address(RVA = "0xC06EE0", Offset = "0xC06EE0", VA = "0xC06EE0", Slot = "19")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700012D")]
	public OVRInput.Button triggerMenusRight
	{
		[Token(Token = "0x60010B9")]
		[Address(RVA = "0xC07070", Offset = "0xC07070", VA = "0xC07070")]
		get
		{
			return default(OVRInput.Button);
		}
	}

	[Token(Token = "0x1700012E")]
	public virtual bool triggerMenusRightDown
	{
		[Token(Token = "0x60010BA")]
		[Address(RVA = "0xC07098", Offset = "0xC07098", VA = "0xC07098", Slot = "22")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700012F")]
	public virtual bool triggerMenusRightHeld
	{
		[Token(Token = "0x60010BB")]
		[Address(RVA = "0xC07144", Offset = "0xC07144", VA = "0xC07144", Slot = "23")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000130")]
	public virtual bool triggerMenusRightUp
	{
		[Token(Token = "0x60010BC")]
		[Address(RVA = "0xC071F0", Offset = "0xC071F0", VA = "0xC071F0", Slot = "24")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000131")]
	public virtual bool triggerMenusLeftHeld
	{
		[Token(Token = "0x60010BD")]
		[Address(RVA = "0xC0729C", Offset = "0xC0729C", VA = "0xC0729C", Slot = "25")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000132")]
	public OVRInput.Button triggerMenusLeft
	{
		[Token(Token = "0x60010BE")]
		[Address(RVA = "0xC07348", Offset = "0xC07348", VA = "0xC07348")]
		get
		{
			return default(OVRInput.Button);
		}
	}

	[Token(Token = "0x17000133")]
	public virtual bool triggerMenusLeftDown
	{
		[Token(Token = "0x60010BF")]
		[Address(RVA = "0xC07370", Offset = "0xC07370", VA = "0xC07370", Slot = "26")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000134")]
	public virtual bool triggerMenusLeftUp
	{
		[Token(Token = "0x60010C0")]
		[Address(RVA = "0xC0741C", Offset = "0xC0741C", VA = "0xC0741C", Slot = "27")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000135")]
	public OVRInput.Button hoverBoardBrake
	{
		[Token(Token = "0x60010C1")]
		[Address(RVA = "0xC074C8", Offset = "0xC074C8", VA = "0xC074C8")]
		get
		{
			return default(OVRInput.Button);
		}
	}

	[Token(Token = "0x17000136")]
	public virtual bool hoverBoardBrakeHeld
	{
		[Token(Token = "0x60010C2")]
		[Address(RVA = "0xC074E0", Offset = "0xC074E0", VA = "0xC074E0", Slot = "28")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000137")]
	public virtual float castLeftTriggerVal
	{
		[Token(Token = "0x60010C3")]
		[Address(RVA = "0xC0756C", Offset = "0xC0756C", VA = "0xC0756C", Slot = "29")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000138")]
	public virtual float castRightTriggerVal
	{
		[Token(Token = "0x60010C4")]
		[Address(RVA = "0xC075D4", Offset = "0xC075D4", VA = "0xC075D4", Slot = "30")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000139")]
	public virtual float wieldRightTriggerVal
	{
		[Token(Token = "0x60010C5")]
		[Address(RVA = "0xC0763C", Offset = "0xC0763C", VA = "0xC0763C", Slot = "31")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700013A")]
	public virtual bool wieldRightTriggerHeld
	{
		[Token(Token = "0x60010C6")]
		[Address(RVA = "0xC076A4", Offset = "0xC076A4", VA = "0xC076A4", Slot = "32")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700013B")]
	public virtual float wieldLeftTriggerVal
	{
		[Token(Token = "0x60010C7")]
		[Address(RVA = "0xC0770C", Offset = "0xC0770C", VA = "0xC0770C", Slot = "33")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700013C")]
	public virtual bool wieldLeftTriggerHeld
	{
		[Token(Token = "0x60010C8")]
		[Address(RVA = "0xC07774", Offset = "0xC07774", VA = "0xC07774", Slot = "34")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700013D")]
	public virtual bool leftIndexTriggerDown
	{
		[Token(Token = "0x60010C9")]
		[Address(RVA = "0xC077DC", Offset = "0xC077DC", VA = "0xC077DC", Slot = "35")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700013E")]
	public virtual bool rightIndexTriggerDown
	{
		[Token(Token = "0x60010CA")]
		[Address(RVA = "0xC07844", Offset = "0xC07844", VA = "0xC07844", Slot = "36")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700013F")]
	public virtual bool leftHandTriggerDown
	{
		[Token(Token = "0x60010CB")]
		[Address(RVA = "0xC078AC", Offset = "0xC078AC", VA = "0xC078AC", Slot = "37")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000140")]
	public virtual bool rightHandTriggerDown
	{
		[Token(Token = "0x60010CC")]
		[Address(RVA = "0xC07914", Offset = "0xC07914", VA = "0xC07914", Slot = "38")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000141")]
	public virtual UnityEngine.Vector2 leftThumbStick
	{
		[Token(Token = "0x60010CD")]
		[Address(RVA = "0xC0797C", Offset = "0xC0797C", VA = "0xC0797C", Slot = "39")]
		get
		{
			return default(UnityEngine.Vector2);
		}
	}

	[Token(Token = "0x17000142")]
	public virtual UnityEngine.Vector2 rightThumbStick
	{
		[Token(Token = "0x60010CE")]
		[Address(RVA = "0xC079E4", Offset = "0xC079E4", VA = "0xC079E4", Slot = "40")]
		get
		{
			return default(UnityEngine.Vector2);
		}
	}

	[Token(Token = "0x17000143")]
	public virtual UnityEngine.Vector3 leftHandVelocity
	{
		[Token(Token = "0x60010CF")]
		[Address(RVA = "0xC07A4C", Offset = "0xC07A4C", VA = "0xC07A4C", Slot = "41")]
		get
		{
			return default(UnityEngine.Vector3);
		}
	}

	[Token(Token = "0x17000144")]
	public virtual UnityEngine.Vector3 rightHandVelocity
	{
		[Token(Token = "0x60010D0")]
		[Address(RVA = "0xC07AB0", Offset = "0xC07AB0", VA = "0xC07AB0", Slot = "42")]
		get
		{
			return default(UnityEngine.Vector3);
		}
	}

	[Token(Token = "0x17000145")]
	public OVRInput.Button npcInteract
	{
		[Token(Token = "0x60010D1")]
		[Address(RVA = "0xC07B14", Offset = "0xC07B14", VA = "0xC07B14")]
		get
		{
			return default(OVRInput.Button);
		}
	}

	[Token(Token = "0x17000146")]
	public virtual bool npcInteractDown
	{
		[Token(Token = "0x60010D2")]
		[Address(RVA = "0xC07B28", Offset = "0xC07B28", VA = "0xC07B28", Slot = "43")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000147")]
	public virtual bool npcInteractHeld
	{
		[Token(Token = "0x60010D3")]
		[Address(RVA = "0xC07BB4", Offset = "0xC07BB4", VA = "0xC07BB4", Slot = "44")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000148")]
	public virtual bool npcInteractUp
	{
		[Token(Token = "0x60010D4")]
		[Address(RVA = "0xC07C40", Offset = "0xC07C40", VA = "0xC07C40", Slot = "45")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000149")]
	public OVRInput.Button hoverboardMount
	{
		[Token(Token = "0x60010D5")]
		[Address(RVA = "0xC07CCC", Offset = "0xC07CCC", VA = "0xC07CCC")]
		get
		{
			return default(OVRInput.Button);
		}
	}

	[Token(Token = "0x1700014A")]
	public virtual bool hoverboardMountDown
	{
		[Token(Token = "0x60010D6")]
		[Address(RVA = "0xC07CE0", Offset = "0xC07CE0", VA = "0xC07CE0", Slot = "46")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700014B")]
	public virtual bool hoverboardMountHeld
	{
		[Token(Token = "0x60010D7")]
		[Address(RVA = "0xC07D6C", Offset = "0xC07D6C", VA = "0xC07D6C", Slot = "47")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700014C")]
	public virtual bool hoverboardMountUp
	{
		[Token(Token = "0x60010D8")]
		[Address(RVA = "0xC07DF8", Offset = "0xC07DF8", VA = "0xC07DF8", Slot = "48")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700014D")]
	public virtual bool openMenu
	{
		[Token(Token = "0x60010D9")]
		[Address(RVA = "0xC07E84", Offset = "0xC07E84", VA = "0xC07E84", Slot = "49")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700014E")]
	public virtual bool startDown
	{
		[Token(Token = "0x60010DA")]
		[Address(RVA = "0xC07F10", Offset = "0xC07F10", VA = "0xC07F10", Slot = "50")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60010A1")]
	[Address(RVA = "0xC065D4", Offset = "0xC065D4", VA = "0xC065D4")]
	private void OnSceneLoaded(Scene scene, LoadSceneMode mode)
	{
	}

	[Token(Token = "0x60010A2")]
	[Address(RVA = "0xC06644", Offset = "0xC06644", VA = "0xC06644")]
	private void init()
	{
	}

	[Token(Token = "0x60010A5")]
	[Address(RVA = "0xC06930", Offset = "0xC06930", VA = "0xC06930", Slot = "4")]
	public virtual void updateTrackingSpace()
	{
	}

	[Token(Token = "0x60010AD")]
	[Address(RVA = "0xC06B78", Offset = "0xC06B78", VA = "0xC06B78", Slot = "12")]
	public virtual UnityEngine.Vector3 localControllerPos(bool rightHand)
	{
		return default(UnityEngine.Vector3);
	}

	[Token(Token = "0x60010AE")]
	[Address(RVA = "0xC06BFC", Offset = "0xC06BFC", VA = "0xC06BFC", Slot = "13")]
	public virtual Quaternion localControllerRotation(bool rightHand)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x60010AF")]
	[Address(RVA = "0xC06C80", Offset = "0xC06C80", VA = "0xC06C80", Slot = "14")]
	public virtual UnityEngine.Vector3 localControllerVelocity(bool rightHand)
	{
		return default(UnityEngine.Vector3);
	}

	[Token(Token = "0x60010B0")]
	[Address(RVA = "0xC06D04", Offset = "0xC06D04", VA = "0xC06D04", Slot = "15")]
	public virtual UnityEngine.Vector3 localControllerAngularVelocity(bool rightHand)
	{
		return default(UnityEngine.Vector3);
	}

	[Token(Token = "0x60010B7")]
	[Address(RVA = "0xC06F48", Offset = "0xC06F48", VA = "0xC06F48", Slot = "20")]
	public virtual bool isPointing(bool right)
	{
		return default(bool);
	}

	[Token(Token = "0x60010B8")]
	[Address(RVA = "0xC06FDC", Offset = "0xC06FDC", VA = "0xC06FDC", Slot = "21")]
	public virtual bool isGivingThumbsUp(bool right)
	{
		return default(bool);
	}

	[Token(Token = "0x60010DB")]
	[Address(RVA = "0xC07F78", Offset = "0xC07F78", VA = "0xC07F78")]
	public VRInputManager()
	{
	}
}
[Token(Token = "0x20002A7")]
public class VRInputManagerPico : VRInputManager
{
	[Token(Token = "0x40010B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool rightDownReset;

	[Token(Token = "0x40010B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	private bool leftDownRest;

	[Token(Token = "0x1700014F")]
	public override string selectButtonString
	{
		[Token(Token = "0x60010DD")]
		[Address(RVA = "0xC07FD8", Offset = "0xC07FD8", VA = "0xC07FD8", Slot = "5")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000150")]
	public override string menuButtonString
	{
		[Token(Token = "0x60010DE")]
		[Address(RVA = "0xC08038", Offset = "0xC08038", VA = "0xC08038", Slot = "6")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000151")]
	public override string hoverboardString
	{
		[Token(Token = "0x60010DF")]
		[Address(RVA = "0xC08098", Offset = "0xC08098", VA = "0xC08098", Slot = "7")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000152")]
	public override string hoverboardBrakeString
	{
		[Token(Token = "0x60010E0")]
		[Address(RVA = "0xC080F8", Offset = "0xC080F8", VA = "0xC080F8", Slot = "8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000153")]
	public override bool thumbstickInputLostLeft
	{
		[Token(Token = "0x60010E1")]
		[Address(RVA = "0xC08158", Offset = "0xC08158", VA = "0xC08158", Slot = "9")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000154")]
	public override bool thumbstickRequirementLeft
	{
		[Token(Token = "0x60010E2")]
		[Address(RVA = "0xC0815C", Offset = "0xC0815C", VA = "0xC0815C", Slot = "10")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000155")]
	public override bool thumbstickRequirementRight
	{
		[Token(Token = "0x60010E3")]
		[Address(RVA = "0xC08164", Offset = "0xC08164", VA = "0xC08164", Slot = "11")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000156")]
	public override bool triggerInteractDown
	{
		[Token(Token = "0x60010E5")]
		[Address(RVA = "0xC081FC", Offset = "0xC081FC", VA = "0xC081FC", Slot = "19")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000157")]
	public override bool triggerMenusRightDown
	{
		[Token(Token = "0x60010E7")]
		[Address(RVA = "0xC0829C", Offset = "0xC0829C", VA = "0xC0829C", Slot = "22")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000158")]
	public override bool triggerMenusLeftDown
	{
		[Token(Token = "0x60010E8")]
		[Address(RVA = "0xC082AC", Offset = "0xC082AC", VA = "0xC082AC", Slot = "26")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000159")]
	public override bool triggerMenusRightHeld
	{
		[Token(Token = "0x60010E9")]
		[Address(RVA = "0xC082BC", Offset = "0xC082BC", VA = "0xC082BC", Slot = "23")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700015A")]
	public override bool triggerMenusLeftHeld
	{
		[Token(Token = "0x60010EA")]
		[Address(RVA = "0xC082CC", Offset = "0xC082CC", VA = "0xC082CC", Slot = "25")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700015B")]
	public override bool triggerMenusRightUp
	{
		[Token(Token = "0x60010EB")]
		[Address(RVA = "0xC082DC", Offset = "0xC082DC", VA = "0xC082DC", Slot = "24")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700015C")]
	public override bool triggerMenusLeftUp
	{
		[Token(Token = "0x60010EC")]
		[Address(RVA = "0xC082EC", Offset = "0xC082EC", VA = "0xC082EC", Slot = "27")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700015D")]
	public override bool hoverBoardBrakeHeld
	{
		[Token(Token = "0x60010ED")]
		[Address(RVA = "0xC082FC", Offset = "0xC082FC", VA = "0xC082FC", Slot = "28")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700015E")]
	public override float castLeftTriggerVal
	{
		[Token(Token = "0x60010EE")]
		[Address(RVA = "0xC0830C", Offset = "0xC0830C", VA = "0xC0830C", Slot = "29")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700015F")]
	public override float castRightTriggerVal
	{
		[Token(Token = "0x60010EF")]
		[Address(RVA = "0xC0831C", Offset = "0xC0831C", VA = "0xC0831C", Slot = "30")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000160")]
	public override float wieldRightTriggerVal
	{
		[Token(Token = "0x60010F0")]
		[Address(RVA = "0xC0832C", Offset = "0xC0832C", VA = "0xC0832C", Slot = "31")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000161")]
	public override float wieldLeftTriggerVal
	{
		[Token(Token = "0x60010F1")]
		[Address(RVA = "0xC0833C", Offset = "0xC0833C", VA = "0xC0833C", Slot = "33")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000162")]
	public override bool wieldLeftTriggerHeld
	{
		[Token(Token = "0x60010F2")]
		[Address(RVA = "0xC0834C", Offset = "0xC0834C", VA = "0xC0834C", Slot = "34")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000163")]
	public override bool wieldRightTriggerHeld
	{
		[Token(Token = "0x60010F3")]
		[Address(RVA = "0xC0835C", Offset = "0xC0835C", VA = "0xC0835C", Slot = "32")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000164")]
	public override bool leftIndexTriggerDown
	{
		[Token(Token = "0x60010F4")]
		[Address(RVA = "0xC0836C", Offset = "0xC0836C", VA = "0xC0836C", Slot = "35")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000165")]
	public override bool rightIndexTriggerDown
	{
		[Token(Token = "0x60010F5")]
		[Address(RVA = "0xC0837C", Offset = "0xC0837C", VA = "0xC0837C", Slot = "36")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000166")]
	public override bool leftHandTriggerDown
	{
		[Token(Token = "0x60010F6")]
		[Address(RVA = "0xC0838C", Offset = "0xC0838C", VA = "0xC0838C", Slot = "37")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000167")]
	public override bool rightHandTriggerDown
	{
		[Token(Token = "0x60010F7")]
		[Address(RVA = "0xC0839C", Offset = "0xC0839C", VA = "0xC0839C", Slot = "38")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000168")]
	public override bool cameraTurnRightDown
	{
		[Token(Token = "0x60010F8")]
		[Address(RVA = "0xC083AC", Offset = "0xC083AC", VA = "0xC083AC", Slot = "17")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000169")]
	public override bool cameraTurnLeftDown
	{
		[Token(Token = "0x60010F9")]
		[Address(RVA = "0xC08420", Offset = "0xC08420", VA = "0xC08420", Slot = "18")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700016A")]
	public override UnityEngine.Vector2 leftThumbStick
	{
		[Token(Token = "0x60010FA")]
		[Address(RVA = "0xC08494", Offset = "0xC08494", VA = "0xC08494", Slot = "39")]
		get
		{
			return default(UnityEngine.Vector2);
		}
	}

	[Token(Token = "0x1700016B")]
	public override UnityEngine.Vector2 rightThumbStick
	{
		[Token(Token = "0x60010FB")]
		[Address(RVA = "0xC085D8", Offset = "0xC085D8", VA = "0xC085D8", Slot = "40")]
		get
		{
			return default(UnityEngine.Vector2);
		}
	}

	[Token(Token = "0x1700016C")]
	public override UnityEngine.Vector3 leftHandVelocity
	{
		[Token(Token = "0x60010FC")]
		[Address(RVA = "0xC0871C", Offset = "0xC0871C", VA = "0xC0871C", Slot = "41")]
		get
		{
			return default(UnityEngine.Vector3);
		}
	}

	[Token(Token = "0x1700016D")]
	public override UnityEngine.Vector3 rightHandVelocity
	{
		[Token(Token = "0x60010FD")]
		[Address(RVA = "0xC087B8", Offset = "0xC087B8", VA = "0xC087B8", Slot = "42")]
		get
		{
			return default(UnityEngine.Vector3);
		}
	}

	[Token(Token = "0x1700016E")]
	public override bool npcInteractDown
	{
		[Token(Token = "0x60010FE")]
		[Address(RVA = "0xC08854", Offset = "0xC08854", VA = "0xC08854", Slot = "43")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700016F")]
	public override bool npcInteractHeld
	{
		[Token(Token = "0x60010FF")]
		[Address(RVA = "0xC08864", Offset = "0xC08864", VA = "0xC08864", Slot = "44")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000170")]
	public override bool npcInteractUp
	{
		[Token(Token = "0x6001100")]
		[Address(RVA = "0xC08874", Offset = "0xC08874", VA = "0xC08874", Slot = "45")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000171")]
	public override bool hoverboardMountDown
	{
		[Token(Token = "0x6001101")]
		[Address(RVA = "0xC08884", Offset = "0xC08884", VA = "0xC08884", Slot = "46")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000172")]
	public override bool hoverboardMountHeld
	{
		[Token(Token = "0x6001102")]
		[Address(RVA = "0xC08894", Offset = "0xC08894", VA = "0xC08894", Slot = "47")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000173")]
	public override bool hoverboardMountUp
	{
		[Token(Token = "0x6001103")]
		[Address(RVA = "0xC088A4", Offset = "0xC088A4", VA = "0xC088A4", Slot = "48")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000174")]
	public override bool openMenu
	{
		[Token(Token = "0x6001104")]
		[Address(RVA = "0xC088B4", Offset = "0xC088B4", VA = "0xC088B4", Slot = "49")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000175")]
	public override bool switchPerspectiveDown
	{
		[Token(Token = "0x600110B")]
		[Address(RVA = "0xC08AB0", Offset = "0xC08AB0", VA = "0xC08AB0", Slot = "16")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000176")]
	public override bool startDown
	{
		[Token(Token = "0x600110C")]
		[Address(RVA = "0xC08AC0", Offset = "0xC08AC0", VA = "0xC08AC0", Slot = "50")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60010E4")]
	[Address(RVA = "0xC0816C", Offset = "0xC0816C", VA = "0xC0816C")]
	private void Start()
	{
	}

	[Token(Token = "0x60010E6")]
	[Address(RVA = "0xC0820C", Offset = "0xC0820C", VA = "0xC0820C", Slot = "4")]
	public override void updateTrackingSpace()
	{
	}

	[Token(Token = "0x6001105")]
	[Address(RVA = "0xC088C4", Offset = "0xC088C4", VA = "0xC088C4", Slot = "21")]
	public override bool isGivingThumbsUp(bool right)
	{
		return default(bool);
	}

	[Token(Token = "0x6001106")]
	[Address(RVA = "0xC088CC", Offset = "0xC088CC", VA = "0xC088CC", Slot = "20")]
	public override bool isPointing(bool right)
	{
		return default(bool);
	}

	[Token(Token = "0x6001107")]
	[Address(RVA = "0xC088D4", Offset = "0xC088D4", VA = "0xC088D4", Slot = "15")]
	public override UnityEngine.Vector3 localControllerAngularVelocity(bool rightHand)
	{
		return default(UnityEngine.Vector3);
	}

	[Token(Token = "0x6001108")]
	[Address(RVA = "0xC089C8", Offset = "0xC089C8", VA = "0xC089C8", Slot = "12")]
	public override UnityEngine.Vector3 localControllerPos(bool rightHand)
	{
		return default(UnityEngine.Vector3);
	}

	[Token(Token = "0x6001109")]
	[Address(RVA = "0xC089D4", Offset = "0xC089D4", VA = "0xC089D4", Slot = "13")]
	public override Quaternion localControllerRotation(bool rightHand)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x600110A")]
	[Address(RVA = "0xC089E0", Offset = "0xC089E0", VA = "0xC089E0", Slot = "14")]
	public override UnityEngine.Vector3 localControllerVelocity(bool rightHand)
	{
		return default(UnityEngine.Vector3);
	}

	[Token(Token = "0x600110D")]
	[Address(RVA = "0xC08AD0", Offset = "0xC08AD0", VA = "0xC08AD0")]
	public VRInputManagerPico()
	{
	}
}
[Token(Token = "0x20002A8")]
public class VRInputManagerQiyu : VRInputManager
{
	[Token(Token = "0x200080A")]
	public enum PressType
	{
		[Token(Token = "0x4002795")]
		Begin,
		[Token(Token = "0x4002796")]
		End,
		[Token(Token = "0x4002797")]
		Continuous
	}

	[Token(Token = "0x40010B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public InputDevice leftHand;

	[Token(Token = "0x40010B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public InputDevice rightHand;

	[Token(Token = "0x40010B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool _perspectiveDownLastFrame;

	[Token(Token = "0x40010B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	private bool _cameraTurnRightDown;

	[Token(Token = "0x40010B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
	private bool _cameraTurnLeftDown;

	[Token(Token = "0x40010BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4B")]
	private bool _triggerMenusRightDownLastFrame;

	[Token(Token = "0x40010BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private bool _triggerMenusRightDown;

	[Token(Token = "0x40010BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
	private bool _triggerMenusLeftDownLastFrame;

	[Token(Token = "0x40010BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4E")]
	private bool _leftHandTriggerDownLastFrame;

	[Token(Token = "0x40010BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4F")]
	private bool _rightHandTriggerDownLastFrame;

	[Token(Token = "0x40010BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool _npcInteractDownLastFrame;

	[Token(Token = "0x40010C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
	private bool _hoverboardMountDownLastFrame;

	[Token(Token = "0x40010C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x52")]
	private bool _menuDownlastFrame;

	[Token(Token = "0x40010C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x53")]
	private bool _startDownLastFrame;

	[Token(Token = "0x17000177")]
	public override string selectButtonString
	{
		[Token(Token = "0x6001110")]
		[Address(RVA = "0xC08C54", Offset = "0xC08C54", VA = "0xC08C54", Slot = "5")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000178")]
	public override string menuButtonString
	{
		[Token(Token = "0x6001111")]
		[Address(RVA = "0xC08CB4", Offset = "0xC08CB4", VA = "0xC08CB4", Slot = "6")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000179")]
	public override string hoverboardString
	{
		[Token(Token = "0x6001112")]
		[Address(RVA = "0xC08D14", Offset = "0xC08D14", VA = "0xC08D14", Slot = "7")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700017A")]
	public override string hoverboardBrakeString
	{
		[Token(Token = "0x6001113")]
		[Address(RVA = "0xC08D74", Offset = "0xC08D74", VA = "0xC08D74", Slot = "8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700017B")]
	public override bool thumbstickInputLostLeft
	{
		[Token(Token = "0x6001114")]
		[Address(RVA = "0xC08DD4", Offset = "0xC08DD4", VA = "0xC08DD4", Slot = "9")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700017C")]
	public override bool thumbstickRequirementLeft
	{
		[Token(Token = "0x6001115")]
		[Address(RVA = "0xC08DD8", Offset = "0xC08DD8", VA = "0xC08DD8", Slot = "10")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700017D")]
	public override bool thumbstickRequirementRight
	{
		[Token(Token = "0x6001116")]
		[Address(RVA = "0xC08DE0", Offset = "0xC08DE0", VA = "0xC08DE0", Slot = "11")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700017E")]
	public override bool switchPerspectiveDown
	{
		[Token(Token = "0x6001117")]
		[Address(RVA = "0xC08DE8", Offset = "0xC08DE8", VA = "0xC08DE8", Slot = "16")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700017F")]
	public override bool cameraTurnRightDown
	{
		[Token(Token = "0x6001118")]
		[Address(RVA = "0xC08EA0", Offset = "0xC08EA0", VA = "0xC08EA0", Slot = "17")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000180")]
	public override bool cameraTurnLeftDown
	{
		[Token(Token = "0x6001119")]
		[Address(RVA = "0xC08F74", Offset = "0xC08F74", VA = "0xC08F74", Slot = "18")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000181")]
	public override bool triggerInteractDown
	{
		[Token(Token = "0x600111A")]
		[Address(RVA = "0xC09048", Offset = "0xC09048", VA = "0xC09048", Slot = "19")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000182")]
	public override bool triggerMenusRightDown
	{
		[Token(Token = "0x600111B")]
		[Address(RVA = "0xC09100", Offset = "0xC09100", VA = "0xC09100", Slot = "22")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000183")]
	public override bool triggerMenusRightHeld
	{
		[Token(Token = "0x600111C")]
		[Address(RVA = "0xC09110", Offset = "0xC09110", VA = "0xC09110", Slot = "23")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000184")]
	public override bool triggerMenusRightUp
	{
		[Token(Token = "0x600111D")]
		[Address(RVA = "0xC091A8", Offset = "0xC091A8", VA = "0xC091A8", Slot = "24")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000185")]
	public override bool triggerMenusLeftHeld
	{
		[Token(Token = "0x600111E")]
		[Address(RVA = "0xC09260", Offset = "0xC09260", VA = "0xC09260", Slot = "25")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000186")]
	public override bool triggerMenusLeftDown
	{
		[Token(Token = "0x600111F")]
		[Address(RVA = "0xC092F8", Offset = "0xC092F8", VA = "0xC092F8", Slot = "26")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000187")]
	public override bool triggerMenusLeftUp
	{
		[Token(Token = "0x6001120")]
		[Address(RVA = "0xC093B0", Offset = "0xC093B0", VA = "0xC093B0", Slot = "27")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000188")]
	public override bool hoverBoardBrakeHeld
	{
		[Token(Token = "0x6001121")]
		[Address(RVA = "0xC09468", Offset = "0xC09468", VA = "0xC09468", Slot = "28")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000189")]
	public override float castLeftTriggerVal
	{
		[Token(Token = "0x6001122")]
		[Address(RVA = "0xC09500", Offset = "0xC09500", VA = "0xC09500", Slot = "29")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700018A")]
	public override float castRightTriggerVal
	{
		[Token(Token = "0x6001123")]
		[Address(RVA = "0xC0959C", Offset = "0xC0959C", VA = "0xC0959C", Slot = "30")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700018B")]
	public override float wieldRightTriggerVal
	{
		[Token(Token = "0x6001124")]
		[Address(RVA = "0xC09638", Offset = "0xC09638", VA = "0xC09638", Slot = "31")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700018C")]
	public override bool wieldRightTriggerHeld
	{
		[Token(Token = "0x6001125")]
		[Address(RVA = "0xC096D4", Offset = "0xC096D4", VA = "0xC096D4", Slot = "32")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700018D")]
	public override float wieldLeftTriggerVal
	{
		[Token(Token = "0x6001126")]
		[Address(RVA = "0xC0976C", Offset = "0xC0976C", VA = "0xC0976C", Slot = "33")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700018E")]
	public override bool wieldLeftTriggerHeld
	{
		[Token(Token = "0x6001127")]
		[Address(RVA = "0xC09808", Offset = "0xC09808", VA = "0xC09808", Slot = "34")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700018F")]
	public override bool leftIndexTriggerDown
	{
		[Token(Token = "0x6001128")]
		[Address(RVA = "0xC098A0", Offset = "0xC098A0", VA = "0xC098A0", Slot = "35")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000190")]
	public override bool rightIndexTriggerDown
	{
		[Token(Token = "0x6001129")]
		[Address(RVA = "0xC098B0", Offset = "0xC098B0", VA = "0xC098B0", Slot = "36")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000191")]
	public override bool leftHandTriggerDown
	{
		[Token(Token = "0x600112A")]
		[Address(RVA = "0xC098C0", Offset = "0xC098C0", VA = "0xC098C0", Slot = "37")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000192")]
	public override bool rightHandTriggerDown
	{
		[Token(Token = "0x600112B")]
		[Address(RVA = "0xC09978", Offset = "0xC09978", VA = "0xC09978", Slot = "38")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000193")]
	public override UnityEngine.Vector2 leftThumbStick
	{
		[Token(Token = "0x600112C")]
		[Address(RVA = "0xC09A30", Offset = "0xC09A30", VA = "0xC09A30", Slot = "39")]
		get
		{
			return default(UnityEngine.Vector2);
		}
	}

	[Token(Token = "0x17000194")]
	public override UnityEngine.Vector2 rightThumbStick
	{
		[Token(Token = "0x600112D")]
		[Address(RVA = "0xC09AF4", Offset = "0xC09AF4", VA = "0xC09AF4", Slot = "40")]
		get
		{
			return default(UnityEngine.Vector2);
		}
	}

	[Token(Token = "0x17000195")]
	public override UnityEngine.Vector3 leftHandVelocity
	{
		[Token(Token = "0x600112E")]
		[Address(RVA = "0xC09BB8", Offset = "0xC09BB8", VA = "0xC09BB8", Slot = "41")]
		get
		{
			return default(UnityEngine.Vector3);
		}
	}

	[Token(Token = "0x17000196")]
	public override UnityEngine.Vector3 rightHandVelocity
	{
		[Token(Token = "0x600112F")]
		[Address(RVA = "0xC09C88", Offset = "0xC09C88", VA = "0xC09C88", Slot = "42")]
		get
		{
			return default(UnityEngine.Vector3);
		}
	}

	[Token(Token = "0x17000197")]
	public override bool npcInteractDown
	{
		[Token(Token = "0x6001130")]
		[Address(RVA = "0xC09D58", Offset = "0xC09D58", VA = "0xC09D58", Slot = "43")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000198")]
	public override bool npcInteractHeld
	{
		[Token(Token = "0x6001131")]
		[Address(RVA = "0xC09E10", Offset = "0xC09E10", VA = "0xC09E10", Slot = "44")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000199")]
	public override bool npcInteractUp
	{
		[Token(Token = "0x6001132")]
		[Address(RVA = "0xC09EA8", Offset = "0xC09EA8", VA = "0xC09EA8", Slot = "45")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700019A")]
	public override bool hoverboardMountDown
	{
		[Token(Token = "0x6001133")]
		[Address(RVA = "0xC09F60", Offset = "0xC09F60", VA = "0xC09F60", Slot = "46")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700019B")]
	public override bool hoverboardMountHeld
	{
		[Token(Token = "0x6001134")]
		[Address(RVA = "0xC0A018", Offset = "0xC0A018", VA = "0xC0A018", Slot = "47")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700019C")]
	public override bool hoverboardMountUp
	{
		[Token(Token = "0x6001135")]
		[Address(RVA = "0xC0A0B0", Offset = "0xC0A0B0", VA = "0xC0A0B0", Slot = "48")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700019D")]
	public override bool openMenu
	{
		[Token(Token = "0x6001136")]
		[Address(RVA = "0xC0A168", Offset = "0xC0A168", VA = "0xC0A168", Slot = "49")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700019E")]
	public override bool startDown
	{
		[Token(Token = "0x6001137")]
		[Address(RVA = "0xC0A220", Offset = "0xC0A220", VA = "0xC0A220", Slot = "50")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x600110E")]
	[Address(RVA = "0xC08B40", Offset = "0xC08B40", VA = "0xC08B40")]
	private void Awake()
	{
	}

	[Token(Token = "0x600110F")]
	[Address(RVA = "0xC08C1C", Offset = "0xC08C1C", VA = "0xC08C1C")]
	private bool buttonStateActive(bool buttonDown, bool downLastFrame, PressType type)
	{
		return default(bool);
	}

	[Token(Token = "0x6001138")]
	[Address(RVA = "0xC0A2D8", Offset = "0xC0A2D8", VA = "0xC0A2D8", Slot = "21")]
	public override bool isGivingThumbsUp(bool right)
	{
		return default(bool);
	}

	[Token(Token = "0x6001139")]
	[Address(RVA = "0xC0A2E0", Offset = "0xC0A2E0", VA = "0xC0A2E0", Slot = "20")]
	public override bool isPointing(bool right)
	{
		return default(bool);
	}

	[Token(Token = "0x600113A")]
	[Address(RVA = "0xC0A2E8", Offset = "0xC0A2E8", VA = "0xC0A2E8", Slot = "15")]
	public override UnityEngine.Vector3 localControllerAngularVelocity(bool right)
	{
		return default(UnityEngine.Vector3);
	}

	[Token(Token = "0x600113B")]
	[Address(RVA = "0xC0A418", Offset = "0xC0A418", VA = "0xC0A418", Slot = "12")]
	public override UnityEngine.Vector3 localControllerPos(bool right)
	{
		return default(UnityEngine.Vector3);
	}

	[Token(Token = "0x600113C")]
	[Address(RVA = "0xC0A548", Offset = "0xC0A548", VA = "0xC0A548", Slot = "13")]
	public override Quaternion localControllerRotation(bool right)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x600113D")]
	[Address(RVA = "0xC0A670", Offset = "0xC0A670", VA = "0xC0A670", Slot = "14")]
	public override UnityEngine.Vector3 localControllerVelocity(bool right)
	{
		return default(UnityEngine.Vector3);
	}

	[Token(Token = "0x600113E")]
	[Address(RVA = "0xC0A690", Offset = "0xC0A690", VA = "0xC0A690")]
	public VRInputManagerQiyu()
	{
	}
}
[Token(Token = "0x20002A9")]
public class CrossbowBolt : MonoBehaviour
{
	[Token(Token = "0x40010C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Rigidbody rigidbody;

	[Token(Token = "0x40010C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public WeaponCrossbow crossBow;

	[Token(Token = "0x40010C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Collider col;

	[Token(Token = "0x600113F")]
	[Address(RVA = "0xB0AEE8", Offset = "0xB0AEE8", VA = "0xB0AEE8")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6001140")]
	[Address(RVA = "0xB0B04C", Offset = "0xB0B04C", VA = "0xB0B04C")]
	public CrossbowBolt()
	{
	}
}
[Token(Token = "0x20002AA")]
public class RouleteCannon : WeaponRanged
{
	[Token(Token = "0x200080B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B8C04", Offset = "0x8B8C04")]
	private sealed class <chargeGun>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002798")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002799")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400279A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RouleteCannon <>4__this;

		[Token(Token = "0x17000659")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002EFF")]
			[Address(RVA = "0xC20690", Offset = "0xC20690", VA = "0xC20690", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700065A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002F01")]
			[Address(RVA = "0xC206F8", Offset = "0xC206F8", VA = "0xC206F8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002EFC")]
		[Address(RVA = "0xC20150", Offset = "0xC20150", VA = "0xC20150")]
		[DebuggerHidden]
		public <chargeGun>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6002EFD")]
		[Address(RVA = "0xC202F4", Offset = "0xC202F4", VA = "0xC202F4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002EFE")]
		[Address(RVA = "0xC202F8", Offset = "0xC202F8", VA = "0xC202F8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002F00")]
		[Address(RVA = "0xC20698", Offset = "0xC20698", VA = "0xC20698", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40010C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private bool isFiring;

	[Token(Token = "0x40010C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x111")]
	private bool maxCharge;

	[Token(Token = "0x40010C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	private float chargeTime;

	[Token(Token = "0x40010C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private GameObject gunChargeObject;

	[Token(Token = "0x6001141")]
	[Address(RVA = "0xC20044", Offset = "0xC20044", VA = "0xC20044")]
	private new void Start()
	{
	}

	[Token(Token = "0x6001142")]
	[Address(RVA = "0xC20048", Offset = "0xC20048", VA = "0xC20048")]
	private new void Update()
	{
	}

	[Token(Token = "0x6001143")]
	[Address(RVA = "0xC2004C", Offset = "0xC2004C", VA = "0xC2004C", Slot = "7")]
	public override void fireWeapon()
	{
	}

	[Token(Token = "0x6001144")]
	[Address(RVA = "0xC200E0", Offset = "0xC200E0", VA = "0xC200E0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C9580", Offset = "0x8C9580")]
	private IEnumerator chargeGun()
	{
		return null;
	}

	[Token(Token = "0x6001145")]
	[Address(RVA = "0xC2017C", Offset = "0xC2017C", VA = "0xC2017C")]
	private void chargeFizzle()
	{
	}

	[Token(Token = "0x6001146")]
	[Address(RVA = "0xC202EC", Offset = "0xC202EC", VA = "0xC202EC")]
	public RouleteCannon()
	{
	}
}
[Token(Token = "0x20002AB")]
public class Weapon : MonoBehaviour
{
	[Token(Token = "0x200080C")]
	public enum WeaponType
	{
		[Token(Token = "0x400279C")]
		melee,
		[Token(Token = "0x400279D")]
		ranged,
		[Token(Token = "0x400279E")]
		thrown,
		[Token(Token = "0x400279F")]
		grenade
	}

	[Token(Token = "0x200080D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B8C14", Offset = "0x8B8C14")]
	private sealed class <disolveMaterial>d__42 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40027A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40027A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40027A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Weapon <>4__this;

		[Token(Token = "0x40027A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Renderer[] <rends>5__2;

		[Token(Token = "0x40027A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <disolve>5__3;

		[Token(Token = "0x40027A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <multiplier>5__4;

		[Token(Token = "0x1700065B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002F05")]
			[Address(RVA = "0xC0D09C", Offset = "0xC0D09C", VA = "0xC0D09C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700065C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002F07")]
			[Address(RVA = "0xC0D104", Offset = "0xC0D104", VA = "0xC0D104", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002F02")]
		[Address(RVA = "0xC0CCB4", Offset = "0xC0CCB4", VA = "0xC0CCB4")]
		[DebuggerHidden]
		public <disolveMaterial>d__42(int <>1__state)
		{
		}

		[Token(Token = "0x6002F03")]
		[Address(RVA = "0xC0CEFC", Offset = "0xC0CEFC", VA = "0xC0CEFC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002F04")]
		[Address(RVA = "0xC0CF00", Offset = "0xC0CF00", VA = "0xC0CF00", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002F06")]
		[Address(RVA = "0xC0D0A4", Offset = "0xC0D0A4", VA = "0xC0D0A4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40010CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int power;

	[Token(Token = "0x40010CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int healthCost;

	[Token(Token = "0x40010CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float requiredSpeedToHit;

	[Token(Token = "0x40010CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float cdTime;

	[Token(Token = "0x40010CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float cooldown;

	[Token(Token = "0x40010CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float weaponAliveTime;

	[Token(Token = "0x40010D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float throwPower;

	[Token(Token = "0x40010D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int comboPlus;

	[Token(Token = "0x40010D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int currentCombo;

	[Token(Token = "0x40010D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private EnemyParent currentEnemy;

	[Token(Token = "0x40010D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float statusInflictChance;

	[Token(Token = "0x40010D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GlitchEffects glitch;

	[Token(Token = "0x40010D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool canUnlink;

	[Token(Token = "0x40010D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject weaponHitEffect;

	[Token(Token = "0x40010D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool sliceReset;

	[Token(Token = "0x40010D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
	private bool wasThrown;

	[Token(Token = "0x40010DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6A")]
	public bool canDeflect;

	[Token(Token = "0x40010DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Rigidbody rigidbody;

	[Token(Token = "0x40010DC")]
	private const float reqHandSpeedToDeflect = 1.4f;

	[Token(Token = "0x40010DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public HandCaster hand;

	[Token(Token = "0x40010DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Transform throwTransform;

	[Token(Token = "0x40010DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public AudioSource hitAudio;

	[Token(Token = "0x40010E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private bool throwCollided;

	[Token(Token = "0x40010E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public PlayerSpell specialAbility;

	[Token(Token = "0x40010E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public WeaponType weaponType;

	[Token(Token = "0x40010E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public EnemyParent.EnemyTribe tribeDamageType;

	[Token(Token = "0x40010E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public float tribeDamageMultiplier;

	[Token(Token = "0x40010E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	protected int gunPlayerDamageMultiplier;

	[Token(Token = "0x40010E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public bool hackNSlash;

	[Token(Token = "0x40010E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB1")]
	protected bool arcaxersResolve;

	[Token(Token = "0x1700019F")]
	private bool canDamageTarget
	{
		[Token(Token = "0x6001147")]
		[Address(RVA = "0xC0B9F8", Offset = "0xC0B9F8", VA = "0xC0B9F8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6001148")]
	[Address(RVA = "0xC0BADC", Offset = "0xC0BADC", VA = "0xC0BADC", Slot = "4")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x6001149")]
	[Address(RVA = "0xC0BCC0", Offset = "0xC0BCC0", VA = "0xC0BCC0", Slot = "5")]
	protected virtual void Update()
	{
	}

	[Token(Token = "0x600114A")]
	[Address(RVA = "0xC0BE10", Offset = "0xC0BE10", VA = "0xC0BE10")]
	public void resetCombo()
	{
	}

	[Token(Token = "0x600114B")]
	[Address(RVA = "0xC0BE18", Offset = "0xC0BE18", VA = "0xC0BE18")]
	public void onDropWeapon()
	{
	}

	[Token(Token = "0x600114C")]
	[Address(RVA = "0xC0BF40", Offset = "0xC0BF40", VA = "0xC0BF40", Slot = "6")]
	public virtual void dealDamage(EnemyParent enemy, bool harmSelf = true, float modDamage = 1f)
	{
	}

	[Token(Token = "0x600114D")]
	[Address(RVA = "0xC0C404", Offset = "0xC0C404", VA = "0xC0C404")]
	protected void dealWeaponDamageToPlayer(bool harmSelf)
	{
	}

	[Token(Token = "0x600114E")]
	[Address(RVA = "0xC0C560", Offset = "0xC0C560", VA = "0xC0C560")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x600114F")]
	[Address(RVA = "0xC0C654", Offset = "0xC0C654", VA = "0xC0C654")]
	private void OnTriggerEnter(Collider collision)
	{
	}

	[Token(Token = "0x6001150")]
	[Address(RVA = "0xC0CC28", Offset = "0xC0CC28", VA = "0xC0CC28")]
	private void OnTriggerExit(Collider collision)
	{
	}

	[Token(Token = "0x6001151")]
	[Address(RVA = "0xC0BC50", Offset = "0xC0BC50", VA = "0xC0BC50")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C95E4", Offset = "0x8C95E4")]
	private IEnumerator disolveMaterial()
	{
		return null;
	}

	[Token(Token = "0x6001152")]
	[Address(RVA = "0xC0CCE0", Offset = "0xC0CCE0", VA = "0xC0CCE0", Slot = "7")]
	public virtual void fireWeapon()
	{
	}

	[Token(Token = "0x6001153")]
	[Address(RVA = "0xC0CEB0", Offset = "0xC0CEB0", VA = "0xC0CEB0", Slot = "8")]
	public virtual void releaseTrigger()
	{
	}

	[Token(Token = "0x6001154")]
	[Address(RVA = "0xC0CEB4", Offset = "0xC0CEB4", VA = "0xC0CEB4")]
	public Weapon()
	{
	}
}
[Token(Token = "0x20002AC")]
public class WeaponCrossbow : Weapon
{
	[Token(Token = "0x40010E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public GameObject muzzleFlash;

	[Token(Token = "0x40010E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public GameObject hitParticle;

	[Token(Token = "0x40010EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public Transform barrelPoint;

	[Token(Token = "0x40010EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public CrossbowBolt boltPrefab;

	[Token(Token = "0x40010EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public float fireForce;

	[Token(Token = "0x40010ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public AudioSource shootAudio;

	[Token(Token = "0x40010EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public Animator crossbowAnim;

	[Token(Token = "0x6001155")]
	[Address(RVA = "0xC0D10C", Offset = "0xC0D10C", VA = "0xC0D10C", Slot = "5")]
	protected override void Update()
	{
	}

	[Token(Token = "0x6001156")]
	[Address(RVA = "0xC0D110", Offset = "0xC0D110", VA = "0xC0D110", Slot = "7")]
	public override void fireWeapon()
	{
	}

	[Token(Token = "0x6001157")]
	[Address(RVA = "0xC0D3B4", Offset = "0xC0D3B4", VA = "0xC0D3B4")]
	public WeaponCrossbow()
	{
	}
}
[Token(Token = "0x20002AD")]
public class WeaponGhostBlaster : Weapon
{
	[Token(Token = "0x40010EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public GameObject muzzleFlash;

	[Token(Token = "0x40010F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public GameObject hitParticle;

	[Token(Token = "0x40010F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public Transform barrelPoint;

	[Token(Token = "0x40010F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public GlitchEffects glitchToRemove;

	[Token(Token = "0x40010F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public LayerMask rayMask;

	[Token(Token = "0x40010F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	public float chanceToRemove;

	[Token(Token = "0x6001158")]
	[Address(RVA = "0xC0D404", Offset = "0xC0D404", VA = "0xC0D404", Slot = "5")]
	protected override void Update()
	{
	}

	[Token(Token = "0x6001159")]
	[Address(RVA = "0xC0D408", Offset = "0xC0D408", VA = "0xC0D408", Slot = "7")]
	public override void fireWeapon()
	{
	}

	[Token(Token = "0x600115A")]
	[Address(RVA = "0xC0DBC8", Offset = "0xC0DBC8", VA = "0xC0DBC8")]
	public WeaponGhostBlaster()
	{
	}
}
[Token(Token = "0x20002AE")]
public class WeaponGrenade : Weapon
{
	[Token(Token = "0x40010F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public GameObject explodeParticle;

	[Token(Token = "0x40010F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public float timeToExplode;

	[Token(Token = "0x40010F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private float timeAlive;

	[Token(Token = "0x40010F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public float explodeRadius;

	[Token(Token = "0x40010F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private List<EnemyParent> damagedEnemies;

	[Token(Token = "0x600115B")]
	[Address(RVA = "0xC0DC10", Offset = "0xC0DC10", VA = "0xC0DC10", Slot = "4")]
	protected override void Start()
	{
	}

	[Token(Token = "0x600115C")]
	[Address(RVA = "0xC0DC14", Offset = "0xC0DC14", VA = "0xC0DC14", Slot = "5")]
	protected override void Update()
	{
	}

	[Token(Token = "0x600115D")]
	[Address(RVA = "0xC0DCD0", Offset = "0xC0DCD0", VA = "0xC0DCD0")]
	private void explode()
	{
	}

	[Token(Token = "0x600115E")]
	[Address(RVA = "0xC0DF48", Offset = "0xC0DF48", VA = "0xC0DF48")]
	public WeaponGrenade()
	{
	}
}
[Token(Token = "0x20002AF")]
public class WeaponRanged : Weapon
{
	[Token(Token = "0x200080E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B8C24", Offset = "0x8B8C24")]
	private sealed class <rapidFireTimer>d__18 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40027A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40027A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40027A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WeaponRanged <>4__this;

		[Token(Token = "0x40027A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <numOfShots>5__2;

		[Token(Token = "0x40027AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int <shots>5__3;

		[Token(Token = "0x1700065D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002F0B")]
			[Address(RVA = "0xC0EFC8", Offset = "0xC0EFC8", VA = "0xC0EFC8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700065E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002F0D")]
			[Address(RVA = "0xC0F030", Offset = "0xC0F030", VA = "0xC0F030", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002F08")]
		[Address(RVA = "0xC0E61C", Offset = "0xC0E61C", VA = "0xC0E61C")]
		[DebuggerHidden]
		public <rapidFireTimer>d__18(int <>1__state)
		{
		}

		[Token(Token = "0x6002F09")]
		[Address(RVA = "0xC0EEC4", Offset = "0xC0EEC4", VA = "0xC0EEC4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002F0A")]
		[Address(RVA = "0xC0EEC8", Offset = "0xC0EEC8", VA = "0xC0EEC8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002F0C")]
		[Address(RVA = "0xC0EFD0", Offset = "0xC0EFD0", VA = "0xC0EFD0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200080F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B8C34", Offset = "0x8B8C34")]
	private sealed class <chargeGun>d__19 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40027AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40027AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40027AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WeaponRanged <>4__this;

		[Token(Token = "0x1700065F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002F11")]
			[Address(RVA = "0xC0EE54", Offset = "0xC0EE54", VA = "0xC0EE54", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000660")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002F13")]
			[Address(RVA = "0xC0EEBC", Offset = "0xC0EEBC", VA = "0xC0EEBC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002F0E")]
		[Address(RVA = "0xC0E6B8", Offset = "0xC0E6B8", VA = "0xC0E6B8")]
		[DebuggerHidden]
		public <chargeGun>d__19(int <>1__state)
		{
		}

		[Token(Token = "0x6002F0F")]
		[Address(RVA = "0xC0EAC4", Offset = "0xC0EAC4", VA = "0xC0EAC4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002F10")]
		[Address(RVA = "0xC0EAC8", Offset = "0xC0EAC8", VA = "0xC0EAC8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002F12")]
		[Address(RVA = "0xC0EE5C", Offset = "0xC0EE5C", VA = "0xC0EE5C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40010FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public GameObject muzzleFlash;

	[Token(Token = "0x40010FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public GameObject hitParticle;

	[Token(Token = "0x40010FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public GameObject gunChargeEffect;

	[Token(Token = "0x40010FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public GameObject gunFizzleEffect;

	[Token(Token = "0x40010FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public Transform barrelPoint;

	[Token(Token = "0x40010FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public LayerMask rayMask;

	[Token(Token = "0x4001100")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public Animator gunAnimator;

	[Token(Token = "0x4001101")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private bool isFiring;

	[Token(Token = "0x4001102")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF1")]
	private bool maxCharge;

	[Token(Token = "0x4001103")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF2")]
	public bool rapidFire;

	[Token(Token = "0x4001104")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF3")]
	public bool chargeFire;

	[Token(Token = "0x4001105")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	public int hpCostMultiplier;

	[Token(Token = "0x4001106")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public float ChargeSweetSpotSeconds;

	[Token(Token = "0x4001107")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	public float ChargeFizzleSeconds;

	[Token(Token = "0x4001108")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private float chargeTime;

	[Token(Token = "0x4001109")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private GameObject gunChargeObject;

	[Token(Token = "0x600115F")]
	[Address(RVA = "0xC0E008", Offset = "0xC0E008", VA = "0xC0E008", Slot = "5")]
	protected override void Update()
	{
	}

	[Token(Token = "0x6001160")]
	[Address(RVA = "0xC0E00C", Offset = "0xC0E00C", VA = "0xC0E00C")]
	protected void fireBullet(bool damagePlayer = true, int numOfShotsInClip = 1)
	{
	}

	[Token(Token = "0x6001161")]
	[Address(RVA = "0xC0E5AC", Offset = "0xC0E5AC", VA = "0xC0E5AC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C9648", Offset = "0x8C9648")]
	private IEnumerator rapidFireTimer()
	{
		return null;
	}

	[Token(Token = "0x6001162")]
	[Address(RVA = "0xC0E648", Offset = "0xC0E648", VA = "0xC0E648")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C96AC", Offset = "0x8C96AC")]
	private IEnumerator chargeGun()
	{
		return null;
	}

	[Token(Token = "0x6001163")]
	[Address(RVA = "0xC0E6E4", Offset = "0xC0E6E4", VA = "0xC0E6E4", Slot = "7")]
	public override void fireWeapon()
	{
	}

	[Token(Token = "0x6001164")]
	[Address(RVA = "0xC0E7FC", Offset = "0xC0E7FC", VA = "0xC0E7FC", Slot = "8")]
	public override void releaseTrigger()
	{
	}

	[Token(Token = "0x6001165")]
	[Address(RVA = "0xC0E900", Offset = "0xC0E900", VA = "0xC0E900")]
	private void chargeFizzle()
	{
	}

	[Token(Token = "0x6001166")]
	[Address(RVA = "0xC0EA6C", Offset = "0xC0EA6C", VA = "0xC0EA6C")]
	public WeaponRanged()
	{
	}
}
namespace MK.Toon
{
	[Token(Token = "0x20002B0")]
	public static class MKToonMaterialHelper
	{
		[Token(Token = "0x2000810")]
		public static class PropertyNames
		{
			[Token(Token = "0x40027AE")]
			public const string SHOW_MAIN_BEHAVIOR = "_MKEditorShowMainBehavior";

			[Token(Token = "0x40027AF")]
			public const string SHOW_DETAIL_BEHAVIOR = "_MKEditorShowDetailBehavior";

			[Token(Token = "0x40027B0")]
			public const string SHOW_LIGHT_BEHAVIOR = "_MKEditorShowLightBehavior";

			[Token(Token = "0x40027B1")]
			public const string SHOW_RENDER_BEHAVIOR = "_MKEditorShowRenderBehavior";

			[Token(Token = "0x40027B2")]
			public const string SHOW_SPECULAR_BEHAVIOR = "_MKEditorShowSpecularBehavior";

			[Token(Token = "0x40027B3")]
			public const string SHOW_TRANSLUCENT_BEHAVIOR = "_MKEditorShowTranslucentBehavior";

			[Token(Token = "0x40027B4")]
			public const string SHOW_RIM_BEHAVIOR = "_MKEditorShowRimBehavior";

			[Token(Token = "0x40027B5")]
			public const string SHOW_REFLECTION_BEHAVIOR = "_MKEditorShowReflectionBehavior";

			[Token(Token = "0x40027B6")]
			public const string SHOW_SHADOW_BEHAVIOR = "_MKEditorShowShadowBehavior";

			[Token(Token = "0x40027B7")]
			public const string SHOW_DISSOLVE_BEHAVIOR = "_MKEditorShowDissolveBehavior";

			[Token(Token = "0x40027B8")]
			public const string SHOW_OUTLINE_BEHAVIOR = "_MKEditorShowOutlineBehavior";

			[Token(Token = "0x40027B9")]
			public const string SHOW_SKETCH_BEHAVIOR = "_MKEditorShowSketchBehavior";

			[Token(Token = "0x40027BA")]
			public const string MAIN_TEXTURE = "_MainTex";

			[Token(Token = "0x40027BB")]
			public const string CULL_MODE = "_CullMode";

			[Token(Token = "0x40027BC")]
			public const string Z_WRITE = "_ZWrite";

			[Token(Token = "0x40027BD")]
			public const string MAIN_COLOR = "_Color";

			[Token(Token = "0x40027BE")]
			public const string BLEND_0 = "_Blend0";

			[Token(Token = "0x40027BF")]
			public const string BLEND_1 = "_Blend1";

			[Token(Token = "0x40027C0")]
			public const string CUT_OFF = "_Cutoff";

			[Token(Token = "0x40027C1")]
			public const string BLEND_MODE = "_Mode";

			[Token(Token = "0x40027C2")]
			public const string USE_COLOR_SOURCE_MAP = "_AlbedoMap";

			[Token(Token = "0x40027C3")]
			public const string DETAIL_ALBEDO_MAP = "_DetailAlbedoMap";

			[Token(Token = "0x40027C4")]
			public const string DETAIL_BUMP_SCALE = "_DetailNormalMapScale";

			[Token(Token = "0x40027C5")]
			public const string DETAIL_BUMP_MAP = "_DetailNormalMap";

			[Token(Token = "0x40027C6")]
			public const string DETAIL_COLOR = "_DetailColor";

			[Token(Token = "0x40027C7")]
			public const string DETAIL_TINT = "_DetailTint";

			[Token(Token = "0x40027C8")]
			public const string USE_BUMP_MAP = "_UseBumpMap";

			[Token(Token = "0x40027C9")]
			public const string BUMP_MAP = "_BumpMap";

			[Token(Token = "0x40027CA")]
			public const string BUMP_SCALE = "_BumpScale";

			[Token(Token = "0x40027CB")]
			public const string LIGHT_TYPE = "_LightType";

			[Token(Token = "0x40027CC")]
			public const string LIGHT_MODEL = "_LightModel";

			[Token(Token = "0x40027CD")]
			public const string Ramp = "_Ramp";

			[Token(Token = "0x40027CE")]
			public const string LIGHT_CUTS = "_LightCuts";

			[Token(Token = "0x40027CF")]
			public const string LIGHT_THRESHOLD = "_LightThreshold";

			[Token(Token = "0x40027D0")]
			public const string OCCLUSION_MAP = "_OcclusionMap";

			[Token(Token = "0x40027D1")]
			public const string OCCLUSION_STRENGTH = "_OcclusionStrength";

			[Token(Token = "0x40027D2")]
			public const string LIGHT_SMOOTHNESS = "_LightSmoothness";

			[Token(Token = "0x40027D3")]
			public const string RIM_SMOOTHNESS = "_RimSmoothness";

			[Token(Token = "0x40027D4")]
			public const string REFLECT_SMOOTHNESS = "_ReflectSmoothness";

			[Token(Token = "0x40027D5")]
			public const string CONTRAST = "_Contrast";

			[Token(Token = "0x40027D6")]
			public const string SATURATION = "_Saturation";

			[Token(Token = "0x40027D7")]
			public const string BRIGHTNESS = "_Brightness";

			[Token(Token = "0x40027D8")]
			public const string ROUGHNESS = "_Roughness";

			[Token(Token = "0x40027D9")]
			public const string SHADOW_COLOR = "_ShadowColor";

			[Token(Token = "0x40027DA")]
			public const string HIGHLIGHT_COLOR = "_HighlightColor";

			[Token(Token = "0x40027DB")]
			public const string SHADOW_INTENSITY = "_ShadowIntensity";

			[Token(Token = "0x40027DC")]
			public const string USE_OUTLINE = "_UseOutline";

			[Token(Token = "0x40027DD")]
			public const string OUTLINE_COLOR = "_OutlineColor";

			[Token(Token = "0x40027DE")]
			public const string OUTLINE_SIZE = "_OutlineSize";

			[Token(Token = "0x40027DF")]
			public const string USE_RIM = "_UseRim";

			[Token(Token = "0x40027E0")]
			public const string RIM_COLOR = "_RimColor";

			[Token(Token = "0x40027E1")]
			public const string RIM_SIZE = "_RimSize";

			[Token(Token = "0x40027E2")]
			public const string RIM_INTENSITY = "_RimIntensity";

			[Token(Token = "0x40027E3")]
			public const string SPECULAR_SHININESS = "_Shininess";

			[Token(Token = "0x40027E4")]
			public const string SPEC_COLOR = "_SpecColor";

			[Token(Token = "0x40027E5")]
			public const string SPEC_GLOSS_MAP = "_SpecGlossMap";

			[Token(Token = "0x40027E6")]
			public const string SPECULAR_INTENSITY = "_SpecularIntensity";

			[Token(Token = "0x40027E7")]
			public const string USE_ANISOTROPIC_SPECULAR = "_UseAnisotropicSpecular";

			[Token(Token = "0x40027E8")]
			public const string ANISO_MAP = "_AnisoMap";

			[Token(Token = "0x40027E9")]
			public const string ANISO_OFFSET = "_AnisoOffset";

			[Token(Token = "0x40027EA")]
			public const string USE_REFLECTION = "_UseReflection";

			[Token(Token = "0x40027EB")]
			public const string REFLECT_COLOR = "_ReflectColor";

			[Token(Token = "0x40027EC")]
			public const string REFLECT_INTENSITY = "_ReflectIntensity";

			[Token(Token = "0x40027ED")]
			public const string REFLECT_MAP = "_ReflectMap";

			[Token(Token = "0x40027EE")]
			public const string USE_DISSOLVE = "_UseDissolve";

			[Token(Token = "0x40027EF")]
			public const string DISSOLVE_MAP = "_DissolveMap";

			[Token(Token = "0x40027F0")]
			public const string DISSOLVE_AMOUNT = "_DissolveAmount";

			[Token(Token = "0x40027F1")]
			public const string DISSOLVE_RAMP_SIZE = "_DissolveRampSize";

			[Token(Token = "0x40027F2")]
			public const string DISSOLVE_RAMP = "_DissolveRamp";

			[Token(Token = "0x40027F3")]
			public const string DISSOLVE_COLOR = "_DissolveColor";

			[Token(Token = "0x40027F4")]
			public const string USE_TRANSLUCENT = "_UseTranslucent";

			[Token(Token = "0x40027F5")]
			public const string TRANSLUCENT_COLOR = "_TranslucentColor";

			[Token(Token = "0x40027F6")]
			public const string TRANSLUCENT_MAP = "_TranslucentMap";

			[Token(Token = "0x40027F7")]
			public const string TRANSLUCENT_INTENSITY = "_TranslucentIntensity";

			[Token(Token = "0x40027F8")]
			public const string TRANSLUCENT_SHININESS = "_TranslucentShininess";

			[Token(Token = "0x40027F9")]
			public const string EMISSION_COLOR = "_EmissionColor";

			[Token(Token = "0x40027FA")]
			public const string EMISSION_MAP = "_EmissionMap";

			[Token(Token = "0x40027FB")]
			public const string EMISSION = "_Emission";

			[Token(Token = "0x40027FC")]
			public const string USE_SKETCH = "_UseSketch";

			[Token(Token = "0x40027FD")]
			public const string SKETCH_MAP = "_SketchMap";

			[Token(Token = "0x40027FE")]
			public const string SKETCH_TINT = "_SketchScale";

			[Token(Token = "0x40027FF")]
			public const string SKETCH_TONE_MIN = "_SketchToneMin";

			[Token(Token = "0x4002800")]
			public const string SKETCH_TONE_MAX = "_SketchToneMax";
		}

		[Token(Token = "0x6001167")]
		[Address(RVA = "0xAE796C", Offset = "0xAE796C", VA = "0xAE796C")]
		public static void SetMainTexture(Material material, Texture tex)
		{
		}

		[Token(Token = "0x6001168")]
		[Address(RVA = "0xAE79D8", Offset = "0xAE79D8", VA = "0xAE79D8")]
		public static Texture GetMainTexture(Material material)
		{
			return null;
		}

		[Token(Token = "0x6001169")]
		[Address(RVA = "0xAE7A34", Offset = "0xAE7A34", VA = "0xAE7A34")]
		public static void SetMainColor(Material material, Color color)
		{
		}

		[Token(Token = "0x600116A")]
		[Address(RVA = "0xAE7AC0", Offset = "0xAE7AC0", VA = "0xAE7AC0")]
		public static Color MainColor(Material material)
		{
			return default(Color);
		}

		[Token(Token = "0x600116B")]
		[Address(RVA = "0xAE7B1C", Offset = "0xAE7B1C", VA = "0xAE7B1C")]
		public static void SetZWrite(Material material, bool z)
		{
		}

		[Token(Token = "0x600116C")]
		[Address(RVA = "0xAE7B94", Offset = "0xAE7B94", VA = "0xAE7B94")]
		public static bool GetZWrite(Material material)
		{
			return default(bool);
		}

		[Token(Token = "0x600116D")]
		[Address(RVA = "0xAE7C00", Offset = "0xAE7C00", VA = "0xAE7C00")]
		public static void SetCullMode(Material material, CullMode cull)
		{
		}

		[Token(Token = "0x600116E")]
		[Address(RVA = "0xAE7C6C", Offset = "0xAE7C6C", VA = "0xAE7C6C")]
		public static CullMode GetCullMode(Material material)
		{
			return default(CullMode);
		}

		[Token(Token = "0x600116F")]
		[Address(RVA = "0xAE7CD0", Offset = "0xAE7CD0", VA = "0xAE7CD0")]
		public static void SetDetailTint(Material material, float tint)
		{
		}

		[Token(Token = "0x6001170")]
		[Address(RVA = "0xAE7D3C", Offset = "0xAE7D3C", VA = "0xAE7D3C")]
		public static float GeDetailTint(Material material)
		{
			return default(float);
		}

		[Token(Token = "0x6001171")]
		[Address(RVA = "0xAE7D98", Offset = "0xAE7D98", VA = "0xAE7D98")]
		public static void SetDetailTexture(Material material, Texture tex)
		{
		}

		[Token(Token = "0x6001172")]
		[Address(RVA = "0xAE7E04", Offset = "0xAE7E04", VA = "0xAE7E04")]
		public static Texture GetDetailTexture(Material material)
		{
			return null;
		}

		[Token(Token = "0x6001173")]
		[Address(RVA = "0xAE7E60", Offset = "0xAE7E60", VA = "0xAE7E60")]
		public static void SetDetailNormalMap(Material material, Texture tex)
		{
		}

		[Token(Token = "0x6001174")]
		[Address(RVA = "0xAE7ECC", Offset = "0xAE7ECC", VA = "0xAE7ECC")]
		public static Texture GetDetailNormalMap(Material material)
		{
			return null;
		}

		[Token(Token = "0x6001175")]
		[Address(RVA = "0xAE7F28", Offset = "0xAE7F28", VA = "0xAE7F28")]
		public static void SetDetailBumpScale(Material material, float bumpScale)
		{
		}

		[Token(Token = "0x6001176")]
		[Address(RVA = "0xAE7F94", Offset = "0xAE7F94", VA = "0xAE7F94")]
		public static float GetDetailBumpScale(Material material)
		{
			return default(float);
		}

		[Token(Token = "0x6001177")]
		[Address(RVA = "0xAE7FF0", Offset = "0xAE7FF0", VA = "0xAE7FF0")]
		public static void SetDetailColor(Material material, Color color)
		{
		}

		[Token(Token = "0x6001178")]
		[Address(RVA = "0xAE807C", Offset = "0xAE807C", VA = "0xAE807C")]
		public static Color GetDetailColor(Material material)
		{
			return default(Color);
		}

		[Token(Token = "0x6001179")]
		[Address(RVA = "0xAE80D8", Offset = "0xAE80D8", VA = "0xAE80D8")]
		public static void SetNormalmap(Material material, Texture tex)
		{
		}

		[Token(Token = "0x600117A")]
		[Address(RVA = "0xAE8144", Offset = "0xAE8144", VA = "0xAE8144")]
		public static Texture GetBumpMap(Material material)
		{
			return null;
		}

		[Token(Token = "0x600117B")]
		[Address(RVA = "0xAE81A0", Offset = "0xAE81A0", VA = "0xAE81A0")]
		public static void SetBumpScale(Material material, float bumpScale)
		{
		}

		[Token(Token = "0x600117C")]
		[Address(RVA = "0xAE820C", Offset = "0xAE820C", VA = "0xAE820C")]
		public static float GetBumpScale(Material material)
		{
			return default(float);
		}

		[Token(Token = "0x600117D")]
		[Address(RVA = "0xAE8268", Offset = "0xAE8268", VA = "0xAE8268")]
		public static void SetLightRampMap(Material material, Texture tex)
		{
		}

		[Token(Token = "0x600117E")]
		[Address(RVA = "0xAE82D4", Offset = "0xAE82D4", VA = "0xAE82D4")]
		public static Texture GetLightRampMap(Material material)
		{
			return null;
		}

		[Token(Token = "0x600117F")]
		[Address(RVA = "0xAE8330", Offset = "0xAE8330", VA = "0xAE8330")]
		public static void SetLightCuts(Material material, float cuts)
		{
		}

		[Token(Token = "0x6001180")]
		[Address(RVA = "0xAE839C", Offset = "0xAE839C", VA = "0xAE839C")]
		public static float GetLightCuts(Material material)
		{
			return default(float);
		}

		[Token(Token = "0x6001181")]
		[Address(RVA = "0xAE83F8", Offset = "0xAE83F8", VA = "0xAE83F8")]
		public static void SetLightThreshold(Material material, float threshold)
		{
		}

		[Token(Token = "0x6001182")]
		[Address(RVA = "0xAE8464", Offset = "0xAE8464", VA = "0xAE8464")]
		public static float GetLightThreshold(Material material)
		{
			return default(float);
		}

		[Token(Token = "0x6001183")]
		[Address(RVA = "0xAE84C0", Offset = "0xAE84C0", VA = "0xAE84C0")]
		public static void SetOcclusionMap(Material material, Texture tex)
		{
		}

		[Token(Token = "0x6001184")]
		[Address(RVA = "0xAE852C", Offset = "0xAE852C", VA = "0xAE852C")]
		public static Texture GetOcclusionMap(Material material)
		{
			return null;
		}

		[Token(Token = "0x6001185")]
		[Address(RVA = "0xAE8588", Offset = "0xAE8588", VA = "0xAE8588")]
		public static void SetOcclusionStrength(Material material, float strength)
		{
		}

		[Token(Token = "0x6001186")]
		[Address(RVA = "0xAE85F4", Offset = "0xAE85F4", VA = "0xAE85F4")]
		public static float GetOcclusionStrength(Material material)
		{
			return default(float);
		}

		[Token(Token = "0x6001187")]
		[Address(RVA = "0xAE8650", Offset = "0xAE8650", VA = "0xAE8650")]
		public static void SetBrightness(Material material, float brightness)
		{
		}

		[Token(Token = "0x6001188")]
		[Address(RVA = "0xAE86BC", Offset = "0xAE86BC", VA = "0xAE86BC")]
		public static float GetBrightness(Material material)
		{
			return default(float);
		}

		[Token(Token = "0x6001189")]
		[Address(RVA = "0xAE8718", Offset = "0xAE8718", VA = "0xAE8718")]
		public static void SetContrast(Material material, float contrast)
		{
		}

		[Token(Token = "0x600118A")]
		[Address(RVA = "0xAE8784", Offset = "0xAE8784", VA = "0xAE8784")]
		public static float GetContrast(Material material)
		{
			return default(float);
		}

		[Token(Token = "0x600118B")]
		[Address(RVA = "0xAE87E0", Offset = "0xAE87E0", VA = "0xAE87E0")]
		public static void SetSaturation(Material material, float saturation)
		{
		}

		[Token(Token = "0x600118C")]
		[Address(RVA = "0xAE884C", Offset = "0xAE884C", VA = "0xAE884C")]
		public static float GetSaturation(Material material)
		{
			return default(float);
		}

		[Token(Token = "0x600118D")]
		[Address(RVA = "0xAE88A8", Offset = "0xAE88A8", VA = "0xAE88A8")]
		public static void SetLightSmoothness(Material material, float smoothness)
		{
		}

		[Token(Token = "0x600118E")]
		[Address(RVA = "0xAE8914", Offset = "0xAE8914", VA = "0xAE8914")]
		public static float GetLightSmoothness(Material material)
		{
			return default(float);
		}

		[Token(Token = "0x600118F")]
		[Address(RVA = "0xAE8970", Offset = "0xAE8970", VA = "0xAE8970")]
		public static void SetRimSmoothness(Material material, float smoothness)
		{
		}

		[Token(Token = "0x6001190")]
		[Address(RVA = "0xAE89DC", Offset = "0xAE89DC", VA = "0xAE89DC")]
		public static float GetRimSmoothness(Material material)
		{
			return default(float);
		}

		[Token(Token = "0x6001191")]
		[Address(RVA = "0xAE8A38", Offset = "0xAE8A38", VA = "0xAE8A38")]
		public static void SetReflectSmoothness(Material material, float smoothness)
		{
		}

		[Token(Token = "0x6001192")]
		[Address(RVA = "0xAE8AA4", Offset = "0xAE8AA4", VA = "0xAE8AA4")]
		public static float GetReflectSmoothness(Material material)
		{
			return default(float);
		}

		[Token(Token = "0x6001193")]
		[Address(RVA = "0xAE8B00", Offset = "0xAE8B00", VA = "0xAE8B00")]
		public static void SetRoughness(Material material, float roughness)
		{
		}

		[Token(Token = "0x6001194")]
		[Address(RVA = "0xAE8B6C", Offset = "0xAE8B6C", VA = "0xAE8B6C")]
		public static float GetRoughness(Material material)
		{
			return default(float);
		}

		[Token(Token = "0x6001195")]
		[Address(RVA = "0xAE8BC8", Offset = "0xAE8BC8", VA = "0xAE8BC8")]
		public static void SetShadowColor(Material material, Color color)
		{
		}

		[Token(Token = "0x6001196")]
		[Address(RVA = "0xAE8C54", Offset = "0xAE8C54", VA = "0xAE8C54")]
		public static Color GetShadowColor(Material material)
		{
			return default(Color);
		}

		[Token(Token = "0x6001197")]
		[Address(RVA = "0xAE8CB0", Offset = "0xAE8CB0", VA = "0xAE8CB0")]
		public static void SetHightlightColor(Material material, Color color)
		{
		}

		[Token(Token = "0x6001198")]
		[Address(RVA = "0xAE8D3C", Offset = "0xAE8D3C", VA = "0xAE8D3C")]
		public static Color GetHightlightColor(Material material)
		{
			return default(Color);
		}

		[Token(Token = "0x6001199")]
		[Address(RVA = "0xAE8D98", Offset = "0xAE8D98", VA = "0xAE8D98")]
		public static void SetShadowIntensity(Material material, float intensity)
		{
		}

		[Token(Token = "0x600119A")]
		[Address(RVA = "0xAE8E04", Offset = "0xAE8E04", VA = "0xAE8E04")]
		public static float GetShadowIntensity(Material material)
		{
			return default(float);
		}

		[Token(Token = "0x600119B")]
		[Address(RVA = "0xAE8E60", Offset = "0xAE8E60", VA = "0xAE8E60")]
		public static void SetOutlineColor(Material material, Color color)
		{
		}

		[Token(Token = "0x600119C")]
		[Address(RVA = "0xAE8EEC", Offset = "0xAE8EEC", VA = "0xAE8EEC")]
		public static Color SetOutlineColor(Material material)
		{
			return default(Color);
		}

		[Token(Token = "0x600119D")]
		[Address(RVA = "0xAE8F48", Offset = "0xAE8F48", VA = "0xAE8F48")]
		public static void SetOutlineSize(Material material, float size)
		{
		}

		[Token(Token = "0x600119E")]
		[Address(RVA = "0xAE8FB4", Offset = "0xAE8FB4", VA = "0xAE8FB4")]
		public static float GetOutlineSize(Material material)
		{
			return default(float);
		}

		[Token(Token = "0x600119F")]
		[Address(RVA = "0xAE9010", Offset = "0xAE9010", VA = "0xAE9010")]
		public static void SetRimColor(Material material, Color color)
		{
		}

		[Token(Token = "0x60011A0")]
		[Address(RVA = "0xAE909C", Offset = "0xAE909C", VA = "0xAE909C")]
		public static Color GetRimColor(Material material)
		{
			return default(Color);
		}

		[Token(Token = "0x60011A1")]
		[Address(RVA = "0xAE90F8", Offset = "0xAE90F8", VA = "0xAE90F8")]
		public static void SetRimSize(Material material, float size)
		{
		}

		[Token(Token = "0x60011A2")]
		[Address(RVA = "0xAE9164", Offset = "0xAE9164", VA = "0xAE9164")]
		public static float GetRimSize(Material material)
		{
			return default(float);
		}

		[Token(Token = "0x60011A3")]
		[Address(RVA = "0xAE91C0", Offset = "0xAE91C0", VA = "0xAE91C0")]
		public static void SetRimIntensity(Material material, float intensity)
		{
		}

		[Token(Token = "0x60011A4")]
		[Address(RVA = "0xAE922C", Offset = "0xAE922C", VA = "0xAE922C")]
		public static float GetRimIntensity(Material material)
		{
			return default(float);
		}

		[Token(Token = "0x60011A5")]
		[Address(RVA = "0xAE9288", Offset = "0xAE9288", VA = "0xAE9288")]
		public static void SetSpecularShininess(Material material, float shininess)
		{
		}

		[Token(Token = "0x60011A6")]
		[Address(RVA = "0xAE92F4", Offset = "0xAE92F4", VA = "0xAE92F4")]
		public static float GetSpecularShininess(Material material)
		{
			return default(float);
		}

		[Token(Token = "0x60011A7")]
		[Address(RVA = "0xAE9350", Offset = "0xAE9350", VA = "0xAE9350")]
		public static void SetSpecularColor(Material material, Color color)
		{
		}

		[Token(Token = "0x60011A8")]
		[Address(RVA = "0xAE93DC", Offset = "0xAE93DC", VA = "0xAE93DC")]
		public static Color GetSpecularColor(Material material)
		{
			return default(Color);
		}

		[Token(Token = "0x60011A9")]
		[Address(RVA = "0xAE9438", Offset = "0xAE9438", VA = "0xAE9438")]
		public static void SetSpecularMap(Material material, Texture tex)
		{
		}

		[Token(Token = "0x60011AA")]
		[Address(RVA = "0xAE94A4", Offset = "0xAE94A4", VA = "0xAE94A4")]
		public static Texture GetSpecularMap(Material material)
		{
			return null;
		}

		[Token(Token = "0x60011AB")]
		[Address(RVA = "0xAE9500", Offset = "0xAE9500", VA = "0xAE9500")]
		public static void SetSpecularIntensity(Material material, float intensity)
		{
		}

		[Token(Token = "0x60011AC")]
		[Address(RVA = "0xAE956C", Offset = "0xAE956C", VA = "0xAE956C")]
		public static float GetSpecularIntensity(Material material)
		{
			return default(float);
		}

		[Token(Token = "0x60011AD")]
		[Address(RVA = "0xAE95C8", Offset = "0xAE95C8", VA = "0xAE95C8")]
		public static void SetAnisoMap(Material material, Texture tex)
		{
		}

		[Token(Token = "0x60011AE")]
		[Address(RVA = "0xAE9634", Offset = "0xAE9634", VA = "0xAE9634")]
		public static Texture GetAnisoMap(Material material)
		{
			return null;
		}

		[Token(Token = "0x60011AF")]
		[Address(RVA = "0xAE9690", Offset = "0xAE9690", VA = "0xAE9690")]
		public static void SetAnisoOffset(Material material, float offset)
		{
		}

		[Token(Token = "0x60011B0")]
		[Address(RVA = "0xAE96FC", Offset = "0xAE96FC", VA = "0xAE96FC")]
		public static float GetAnisoOffset(Material material)
		{
			return default(float);
		}

		[Token(Token = "0x60011B1")]
		[Address(RVA = "0xAE9758", Offset = "0xAE9758", VA = "0xAE9758")]
		public static void SetReflectMap(Material material, Texture tex)
		{
		}

		[Token(Token = "0x60011B2")]
		[Address(RVA = "0xAE97C4", Offset = "0xAE97C4", VA = "0xAE97C4")]
		public static Texture GetReflectMap(Material material)
		{
			return null;
		}

		[Token(Token = "0x60011B3")]
		[Address(RVA = "0xAE9820", Offset = "0xAE9820", VA = "0xAE9820")]
		public static void SetReflectColor(Material material, Color color)
		{
		}

		[Token(Token = "0x60011B4")]
		[Address(RVA = "0xAE98AC", Offset = "0xAE98AC", VA = "0xAE98AC")]
		public static Color GetReflectColor(Material material)
		{
			return default(Color);
		}

		[Token(Token = "0x60011B5")]
		[Address(RVA = "0xAE9908", Offset = "0xAE9908", VA = "0xAE9908")]
		public static void SetReflectIntensity(Material material, float intensity)
		{
		}

		[Token(Token = "0x60011B6")]
		[Address(RVA = "0xAE9974", Offset = "0xAE9974", VA = "0xAE9974")]
		public static float GetReflectIntensity(Material material)
		{
			return default(float);
		}

		[Token(Token = "0x60011B7")]
		[Address(RVA = "0xAE99D0", Offset = "0xAE99D0", VA = "0xAE99D0")]
		public static void SetDissolveMap(Material material, Texture tex)
		{
		}

		[Token(Token = "0x60011B8")]
		[Address(RVA = "0xAE9A3C", Offset = "0xAE9A3C", VA = "0xAE9A3C")]
		public static Texture GetDissolveMap(Material material)
		{
			return null;
		}

		[Token(Token = "0x60011B9")]
		[Address(RVA = "0xAE9A98", Offset = "0xAE9A98", VA = "0xAE9A98")]
		public static void SetDissolveRampMap(Material material, Texture tex)
		{
		}

		[Token(Token = "0x60011BA")]
		[Address(RVA = "0xAE9B04", Offset = "0xAE9B04", VA = "0xAE9B04")]
		public static Texture GetDissolveRampMap(Material material)
		{
			return null;
		}

		[Token(Token = "0x60011BB")]
		[Address(RVA = "0xAE9B60", Offset = "0xAE9B60", VA = "0xAE9B60")]
		public static void SetDissolveColor(Material material, Color color)
		{
		}

		[Token(Token = "0x60011BC")]
		[Address(RVA = "0xAE9BEC", Offset = "0xAE9BEC", VA = "0xAE9BEC")]
		public static Color GetDissolveColor(Material material)
		{
			return default(Color);
		}

		[Token(Token = "0x60011BD")]
		[Address(RVA = "0xAE9C48", Offset = "0xAE9C48", VA = "0xAE9C48")]
		public static void SetDissolveAmount(Material material, float amount)
		{
		}

		[Token(Token = "0x60011BE")]
		[Address(RVA = "0xAE9CB4", Offset = "0xAE9CB4", VA = "0xAE9CB4")]
		public static float GetDissolveAmount(Material material)
		{
			return default(float);
		}

		[Token(Token = "0x60011BF")]
		[Address(RVA = "0xAE9D10", Offset = "0xAE9D10", VA = "0xAE9D10")]
		public static void SetDissolveRampSize(Material material, float size)
		{
		}

		[Token(Token = "0x60011C0")]
		[Address(RVA = "0xAE9D7C", Offset = "0xAE9D7C", VA = "0xAE9D7C")]
		public static float GetDissolveRampSize(Material material)
		{
			return default(float);
		}

		[Token(Token = "0x60011C1")]
		[Address(RVA = "0xAE9DD8", Offset = "0xAE9DD8", VA = "0xAE9DD8")]
		public static void SetTranslucentMap(Material material, Texture tex)
		{
		}

		[Token(Token = "0x60011C2")]
		[Address(RVA = "0xAE9E44", Offset = "0xAE9E44", VA = "0xAE9E44")]
		public static Texture GetTranslucentMap(Material material)
		{
			return null;
		}

		[Token(Token = "0x60011C3")]
		[Address(RVA = "0xAE9EA0", Offset = "0xAE9EA0", VA = "0xAE9EA0")]
		public static void SetTranslucentColor(Material material, Color color)
		{
		}

		[Token(Token = "0x60011C4")]
		[Address(RVA = "0xAE9F2C", Offset = "0xAE9F2C", VA = "0xAE9F2C")]
		public static Color GetTranslucentColor(Material material)
		{
			return default(Color);
		}

		[Token(Token = "0x60011C5")]
		[Address(RVA = "0xAE9F88", Offset = "0xAE9F88", VA = "0xAE9F88")]
		public static void SetTranslucentIntensity(Material material, float intensity)
		{
		}

		[Token(Token = "0x60011C6")]
		[Address(RVA = "0xAE9FF4", Offset = "0xAE9FF4", VA = "0xAE9FF4")]
		public static float GetTranslucentIntensity(Material material)
		{
			return default(float);
		}

		[Token(Token = "0x60011C7")]
		[Address(RVA = "0xAEA050", Offset = "0xAEA050", VA = "0xAEA050")]
		public static void SetTranslucentShininess(Material material, float shininess)
		{
		}

		[Token(Token = "0x60011C8")]
		[Address(RVA = "0xAEA0BC", Offset = "0xAEA0BC", VA = "0xAEA0BC")]
		public static float GetTranslucentShininess(Material material)
		{
			return default(float);
		}

		[Token(Token = "0x60011C9")]
		[Address(RVA = "0xAEA118", Offset = "0xAEA118", VA = "0xAEA118")]
		public static void SetEmissionMap(Material material, Texture tex)
		{
		}

		[Token(Token = "0x60011CA")]
		[Address(RVA = "0xAEA184", Offset = "0xAEA184", VA = "0xAEA184")]
		public static Texture GetEmissionMap(Material material)
		{
			return null;
		}

		[Token(Token = "0x60011CB")]
		[Address(RVA = "0xAEA1E0", Offset = "0xAEA1E0", VA = "0xAEA1E0")]
		public static void SetEmissionColor(Material material, Color color)
		{
		}

		[Token(Token = "0x60011CC")]
		[Address(RVA = "0xAEA26C", Offset = "0xAEA26C", VA = "0xAEA26C")]
		public static Color GetEmissionColor(Material material)
		{
			return default(Color);
		}

		[Token(Token = "0x60011CD")]
		[Address(RVA = "0xAEA2C8", Offset = "0xAEA2C8", VA = "0xAEA2C8")]
		public static void SetSketchMap(Material material, Texture tex)
		{
		}

		[Token(Token = "0x60011CE")]
		[Address(RVA = "0xAEA334", Offset = "0xAEA334", VA = "0xAEA334")]
		public static Texture GetSketchMap(Material material)
		{
			return null;
		}

		[Token(Token = "0x60011CF")]
		[Address(RVA = "0xAEA390", Offset = "0xAEA390", VA = "0xAEA390")]
		public static void SetSketchTint(Material material, float tint)
		{
		}

		[Token(Token = "0x60011D0")]
		[Address(RVA = "0xAEA3FC", Offset = "0xAEA3FC", VA = "0xAEA3FC")]
		public static float GetSketchTint(Material material)
		{
			return default(float);
		}

		[Token(Token = "0x60011D1")]
		[Address(RVA = "0xAEA458", Offset = "0xAEA458", VA = "0xAEA458")]
		public static void SetSketchToneMin(Material material, float toneMin)
		{
		}

		[Token(Token = "0x60011D2")]
		[Address(RVA = "0xAEA4C4", Offset = "0xAEA4C4", VA = "0xAEA4C4")]
		public static float GetSketchToneMin(Material material)
		{
			return default(float);
		}

		[Token(Token = "0x60011D3")]
		[Address(RVA = "0xAEA520", Offset = "0xAEA520", VA = "0xAEA520")]
		public static void SetSketchToneMax(Material material, float toneMax)
		{
		}

		[Token(Token = "0x60011D4")]
		[Address(RVA = "0xAEA58C", Offset = "0xAEA58C", VA = "0xAEA58C")]
		public static float GetSketchToneMax(Material material)
		{
			return default(float);
		}
	}
}
namespace UnityEngine.EventSystems
{
	[Token(Token = "0x20002B1")]
	public class OVRInputModule : PointerInputModule
	{
		[Token(Token = "0x2000811")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x8B8C44", Offset = "0x8B8C44")]
		public enum InputMode
		{
			[Token(Token = "0x4002802")]
			Mouse,
			[Token(Token = "0x4002803")]
			Buttons
		}

		[Token(Token = "0x400110A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BCFF8", Offset = "0x8BCFF8")]
		public Transform rayTransform;

		[Token(Token = "0x400110B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public OVRCursor m_Cursor;

		[Token(Token = "0x400110C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public bool rightHanded;

		[Token(Token = "0x400110D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BD030", Offset = "0x8BD030")]
		public KeyCode gazeClickKey;

		[Token(Token = "0x400110E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BD068", Offset = "0x8BD068")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BD068", Offset = "0x8BD068")]
		public bool performSphereCastForGazepointer;

		[Token(Token = "0x400110F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BD0C8", Offset = "0x8BD0C8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BD0C8", Offset = "0x8BD0C8")]
		public bool useRightStickScroll;

		[Token(Token = "0x4001110")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BD128", Offset = "0x8BD128")]
		public float rightStickDeadZone;

		[Token(Token = "0x4001111")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BD160", Offset = "0x8BD160")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BD160", Offset = "0x8BD160")]
		public bool useSwipeScroll;

		[Token(Token = "0x4001112")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BD1C0", Offset = "0x8BD1C0")]
		public float swipeDragThreshold;

		[Token(Token = "0x4001113")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BD1F8", Offset = "0x8BD1F8")]
		public float swipeDragScale;

		[Token(Token = "0x4001114")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BD230", Offset = "0x8BD230")]
		public bool InvertSwipeXAxis;

		[NonSerialized]
		[Token(Token = "0x4001115")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public OVRRaycaster activeGraphicRaycaster;

		[Token(Token = "0x4001116")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BD268", Offset = "0x8BD268")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BD268", Offset = "0x8BD268")]
		public float angleDragThreshold;

		[Token(Token = "0x4001117")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[SerializeField]
		private float m_SpherecastRadius;

		[Token(Token = "0x4001118")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private float m_NextAction;

		[Token(Token = "0x4001119")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private Vector2 m_LastMousePosition;

		[Token(Token = "0x400111A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private Vector2 m_MousePosition;

		[Token(Token = "0x400111B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BD2D8", Offset = "0x8BD2D8")]
		[SerializeField]
		private string m_HorizontalAxis;

		[Token(Token = "0x400111C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private string m_VerticalAxis;

		[Token(Token = "0x400111D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private string m_SubmitButton;

		[Token(Token = "0x400111E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private string m_CancelButton;

		[Token(Token = "0x400111F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private float m_InputActionsPerSecond;

		[Token(Token = "0x4001120")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		[SerializeField]
		private bool m_AllowActivationOnMobileDevice;

		[Token(Token = "0x4001121")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		protected Dictionary<int, OVRPointerEventData> m_VRRayPointerData;

		[Token(Token = "0x4001122")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private readonly MouseState m_MouseState;

		[Token(Token = "0x170001A0")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x8D1990", Offset = "0x8D1990")]
		public InputMode inputMode
		{
			[Token(Token = "0x60011D6")]
			[Address(RVA = "0xC014CC", Offset = "0xC014CC", VA = "0xC014CC")]
			get
			{
				return default(InputMode);
			}
		}

		[Token(Token = "0x170001A1")]
		public bool allowActivationOnMobileDevice
		{
			[Token(Token = "0x60011D7")]
			[Address(RVA = "0xC014D4", Offset = "0xC014D4", VA = "0xC014D4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60011D8")]
			[Address(RVA = "0xC014DC", Offset = "0xC014DC", VA = "0xC014DC")]
			set
			{
			}
		}

		[Token(Token = "0x170001A2")]
		public float inputActionsPerSecond
		{
			[Token(Token = "0x60011D9")]
			[Address(RVA = "0xC014E8", Offset = "0xC014E8", VA = "0xC014E8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60011DA")]
			[Address(RVA = "0xC014F0", Offset = "0xC014F0", VA = "0xC014F0")]
			set
			{
			}
		}

		[Token(Token = "0x170001A3")]
		public string horizontalAxis
		{
			[Token(Token = "0x60011DB")]
			[Address(RVA = "0xC014F8", Offset = "0xC014F8", VA = "0xC014F8")]
			get
			{
				return null;
			}
			[Token(Token = "0x60011DC")]
			[Address(RVA = "0xC01500", Offset = "0xC01500", VA = "0xC01500")]
			set
			{
			}
		}

		[Token(Token = "0x170001A4")]
		public string verticalAxis
		{
			[Token(Token = "0x60011DD")]
			[Address(RVA = "0xC01508", Offset = "0xC01508", VA = "0xC01508")]
			get
			{
				return null;
			}
			[Token(Token = "0x60011DE")]
			[Address(RVA = "0xC01510", Offset = "0xC01510", VA = "0xC01510")]
			set
			{
			}
		}

		[Token(Token = "0x170001A5")]
		public string submitButton
		{
			[Token(Token = "0x60011DF")]
			[Address(RVA = "0xC01518", Offset = "0xC01518", VA = "0xC01518")]
			get
			{
				return null;
			}
			[Token(Token = "0x60011E0")]
			[Address(RVA = "0xC01520", Offset = "0xC01520", VA = "0xC01520")]
			set
			{
			}
		}

		[Token(Token = "0x170001A6")]
		public string cancelButton
		{
			[Token(Token = "0x60011E1")]
			[Address(RVA = "0xC01528", Offset = "0xC01528", VA = "0xC01528")]
			get
			{
				return null;
			}
			[Token(Token = "0x60011E2")]
			[Address(RVA = "0xC01530", Offset = "0xC01530", VA = "0xC01530")]
			set
			{
			}
		}

		[Token(Token = "0x60011D5")]
		[Address(RVA = "0xC013BC", Offset = "0xC013BC", VA = "0xC013BC")]
		protected OVRInputModule()
		{
		}

		[Token(Token = "0x60011E3")]
		[Address(RVA = "0xC01538", Offset = "0xC01538", VA = "0xC01538", Slot = "24")]
		public override void UpdateModule()
		{
		}

		[Token(Token = "0x60011E4")]
		[Address(RVA = "0xC01544", Offset = "0xC01544", VA = "0xC01544", Slot = "25")]
		public override bool IsModuleSupported()
		{
			return default(bool);
		}

		[Token(Token = "0x60011E5")]
		[Address(RVA = "0xC0154C", Offset = "0xC0154C", VA = "0xC0154C", Slot = "21")]
		public override bool ShouldActivateModule()
		{
			return default(bool);
		}

		[Token(Token = "0x60011E6")]
		[Address(RVA = "0xC01554", Offset = "0xC01554", VA = "0xC01554", Slot = "23")]
		public override void ActivateModule()
		{
		}

		[Token(Token = "0x60011E7")]
		[Address(RVA = "0xC01620", Offset = "0xC01620", VA = "0xC01620", Slot = "22")]
		public override void DeactivateModule()
		{
		}

		[Token(Token = "0x60011E8")]
		[Address(RVA = "0xC01854", Offset = "0xC01854", VA = "0xC01854")]
		private bool SendSubmitEventToSelectedObject()
		{
			return default(bool);
		}

		[Token(Token = "0x60011E9")]
		[Address(RVA = "0xC01908", Offset = "0xC01908", VA = "0xC01908")]
		private bool AllowMoveEventProcessing(float time)
		{
			return default(bool);
		}

		[Token(Token = "0x60011EA")]
		[Address(RVA = "0xC01910", Offset = "0xC01910", VA = "0xC01910")]
		private Vector2 GetRawMoveVector()
		{
			return default(Vector2);
		}

		[Token(Token = "0x60011EB")]
		[Address(RVA = "0xC01970", Offset = "0xC01970", VA = "0xC01970")]
		private bool SendMoveEventToSelectedObject()
		{
			return default(bool);
		}

		[Token(Token = "0x60011EC")]
		[Address(RVA = "0xC019B8", Offset = "0xC019B8", VA = "0xC019B8")]
		private bool SendUpdateEventToSelectedObject()
		{
			return default(bool);
		}

		[Token(Token = "0x60011ED")]
		[Address(RVA = "0xC01B0C", Offset = "0xC01B0C", VA = "0xC01B0C")]
		private void ProcessMousePress(MouseButtonEventData data)
		{
		}

		[Token(Token = "0x60011EE")]
		[Address(RVA = "0xC021C0", Offset = "0xC021C0", VA = "0xC021C0")]
		private void ProcessMouseEvent(MouseState mouseData)
		{
		}

		[Token(Token = "0x60011EF")]
		[Address(RVA = "0xC024B0", Offset = "0xC024B0", VA = "0xC024B0", Slot = "17")]
		public override void Process()
		{
		}

		[Token(Token = "0x60011F0")]
		[Address(RVA = "0xC02460", Offset = "0xC02460", VA = "0xC02460")]
		private static bool UseMouse(bool pressed, bool released, PointerEventData pointerData)
		{
			return default(bool);
		}

		[Token(Token = "0x60011F1")]
		[Address(RVA = "0xC02560", Offset = "0xC02560", VA = "0xC02560")]
		protected void CopyFromTo(OVRPointerEventData from, OVRPointerEventData to)
		{
		}

		[Token(Token = "0x60011F2")]
		[Address(RVA = "0xC025CC", Offset = "0xC025CC", VA = "0xC025CC")]
		protected new void CopyFromTo(PointerEventData from, PointerEventData to)
		{
		}

		[Token(Token = "0x60011F3")]
		[Address(RVA = "0xC02628", Offset = "0xC02628", VA = "0xC02628")]
		protected bool GetPointerData(int id, out OVRPointerEventData data, bool create)
		{
			return default(bool);
		}

		[Token(Token = "0x60011F4")]
		[Address(RVA = "0xC01648", Offset = "0xC01648", VA = "0xC01648")]
		protected new void ClearSelection()
		{
		}

		[Token(Token = "0x60011F5")]
		[Address(RVA = "0xC0270C", Offset = "0xC0270C", VA = "0xC0270C")]
		private static Vector3 GetRectTransformNormal(RectTransform rectTransform)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60011F6")]
		[Address(RVA = "0xC0288C", Offset = "0xC0288C", VA = "0xC0288C", Slot = "30")]
		protected virtual MouseState GetGazePointerData()
		{
			return null;
		}

		[Token(Token = "0x60011F7")]
		[Address(RVA = "0xC02FBC", Offset = "0xC02FBC", VA = "0xC02FBC")]
		protected MouseState GetCanvasPointerData()
		{
			return null;
		}

		[Token(Token = "0x60011F8")]
		[Address(RVA = "0xC03384", Offset = "0xC03384", VA = "0xC03384")]
		private bool ShouldStartDrag(PointerEventData pointerEvent)
		{
			return default(bool);
		}

		[Token(Token = "0x60011F9")]
		[Address(RVA = "0xC02518", Offset = "0xC02518", VA = "0xC02518")]
		private static bool IsPointerMoving(PointerEventData pointerEvent)
		{
			return default(bool);
		}

		[Token(Token = "0x60011FA")]
		[Address(RVA = "0xC035C0", Offset = "0xC035C0", VA = "0xC035C0")]
		protected Vector2 SwipeAdjustedPosition(Vector2 originalPosition, PointerEventData pointerEvent)
		{
			return default(Vector2);
		}

		[Token(Token = "0x60011FB")]
		[Address(RVA = "0xC035C4", Offset = "0xC035C4", VA = "0xC035C4", Slot = "29")]
		protected override void ProcessDrag(PointerEventData pointerEvent)
		{
		}

		[Token(Token = "0x60011FC")]
		[Address(RVA = "0xC038E0", Offset = "0xC038E0", VA = "0xC038E0", Slot = "31")]
		protected virtual PointerEventData.FramePressState GetGazeButtonState()
		{
			return default(PointerEventData.FramePressState);
		}

		[Token(Token = "0x60011FD")]
		[Address(RVA = "0xC02E98", Offset = "0xC02E98", VA = "0xC02E98")]
		protected Vector2 GetExtraScrollDelta()
		{
			return default(Vector2);
		}
	}
}
namespace UnityEngine.AI
{
	[Token(Token = "0x20002B2")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "DefaultExecutionOrder", RVA = "0x8B6A7C", Offset = "0x8B6A7C")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8B6A7C", Offset = "0x8B6A7C")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x8B6A7C", Offset = "0x8B6A7C")]
	public class NavMeshLink : MonoBehaviour
	{
		[Token(Token = "0x4001123")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private int m_AgentTypeID;

		[Token(Token = "0x4001124")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private Vector3 m_StartPoint;

		[Token(Token = "0x4001125")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Vector3 m_EndPoint;

		[Token(Token = "0x4001126")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private float m_Width;

		[Token(Token = "0x4001127")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private int m_CostModifier;

		[Token(Token = "0x4001128")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private bool m_Bidirectional;

		[Token(Token = "0x4001129")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
		[SerializeField]
		private bool m_AutoUpdatePosition;

		[Token(Token = "0x400112A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private int m_Area;

		[Token(Token = "0x400112B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private NavMeshLinkInstance m_LinkInstance;

		[Token(Token = "0x400112C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Vector3 m_LastPosition;

		[Token(Token = "0x400112D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Quaternion m_LastRotation;

		[Token(Token = "0x400112E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly List<NavMeshLink> s_Tracked;

		[Token(Token = "0x170001A7")]
		public int agentTypeID
		{
			[Token(Token = "0x60011FE")]
			[Address(RVA = "0xBFD610", Offset = "0xBFD610", VA = "0xBFD610")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60011FF")]
			[Address(RVA = "0xBFD618", Offset = "0xBFD618", VA = "0xBFD618")]
			set
			{
			}
		}

		[Token(Token = "0x170001A8")]
		public Vector3 startPoint
		{
			[Token(Token = "0x6001200")]
			[Address(RVA = "0xBFD674", Offset = "0xBFD674", VA = "0xBFD674")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001201")]
			[Address(RVA = "0xBFD680", Offset = "0xBFD680", VA = "0xBFD680")]
			set
			{
			}
		}

		[Token(Token = "0x170001A9")]
		public Vector3 endPoint
		{
			[Token(Token = "0x6001202")]
			[Address(RVA = "0xBFD6B4", Offset = "0xBFD6B4", VA = "0xBFD6B4")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001203")]
			[Address(RVA = "0xBFD6C0", Offset = "0xBFD6C0", VA = "0xBFD6C0")]
			set
			{
			}
		}

		[Token(Token = "0x170001AA")]
		public float width
		{
			[Token(Token = "0x6001204")]
			[Address(RVA = "0xBFD6F4", Offset = "0xBFD6F4", VA = "0xBFD6F4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001205")]
			[Address(RVA = "0xBFD6FC", Offset = "0xBFD6FC", VA = "0xBFD6FC")]
			set
			{
			}
		}

		[Token(Token = "0x170001AB")]
		public int costModifier
		{
			[Token(Token = "0x6001206")]
			[Address(RVA = "0xBFD72C", Offset = "0xBFD72C", VA = "0xBFD72C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001207")]
			[Address(RVA = "0xBFD734", Offset = "0xBFD734", VA = "0xBFD734")]
			set
			{
			}
		}

		[Token(Token = "0x170001AC")]
		public bool bidirectional
		{
			[Token(Token = "0x6001208")]
			[Address(RVA = "0xBFD764", Offset = "0xBFD764", VA = "0xBFD764")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001209")]
			[Address(RVA = "0xBFD76C", Offset = "0xBFD76C", VA = "0xBFD76C")]
			set
			{
			}
		}

		[Token(Token = "0x170001AD")]
		public bool autoUpdate
		{
			[Token(Token = "0x600120A")]
			[Address(RVA = "0xBFD7A0", Offset = "0xBFD7A0", VA = "0xBFD7A0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600120B")]
			[Address(RVA = "0xBFD7A8", Offset = "0xBFD7A8", VA = "0xBFD7A8")]
			set
			{
			}
		}

		[Token(Token = "0x170001AE")]
		public int area
		{
			[Token(Token = "0x600120C")]
			[Address(RVA = "0xBFD874", Offset = "0xBFD874", VA = "0xBFD874")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600120D")]
			[Address(RVA = "0xBFD87C", Offset = "0xBFD87C", VA = "0xBFD87C")]
			set
			{
			}
		}

		[Token(Token = "0x600120E")]
		[Address(RVA = "0xBFD8AC", Offset = "0xBFD8AC", VA = "0xBFD8AC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600120F")]
		[Address(RVA = "0xBFDC34", Offset = "0xBFDC34", VA = "0xBFDC34")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001210")]
		[Address(RVA = "0xBFD648", Offset = "0xBFD648", VA = "0xBFD648")]
		public void UpdateLink()
		{
		}

		[Token(Token = "0x6001211")]
		[Address(RVA = "0xBFDAFC", Offset = "0xBFDAFC", VA = "0xBFDAFC")]
		private static void AddTracking(NavMeshLink link)
		{
		}

		[Token(Token = "0x6001212")]
		[Address(RVA = "0xBFDCA4", Offset = "0xBFDCA4", VA = "0xBFDCA4")]
		private static void RemoveTracking(NavMeshLink link)
		{
		}

		[Token(Token = "0x6001213")]
		[Address(RVA = "0xBFD7B0", Offset = "0xBFD7B0", VA = "0xBFD7B0")]
		private void SetAutoUpdate(bool value)
		{
		}

		[Token(Token = "0x6001214")]
		[Address(RVA = "0xBFD93C", Offset = "0xBFD93C", VA = "0xBFD93C")]
		private void AddLink()
		{
		}

		[Token(Token = "0x6001215")]
		[Address(RVA = "0xBFDDC0", Offset = "0xBFDDC0", VA = "0xBFDDC0")]
		private bool HasTransformChanged()
		{
			return default(bool);
		}

		[Token(Token = "0x6001216")]
		[Address(RVA = "0xBFDF28", Offset = "0xBFDF28", VA = "0xBFDF28")]
		private void OnDidApplyAnimationProperties()
		{
		}

		[Token(Token = "0x6001217")]
		[Address(RVA = "0xBFDF54", Offset = "0xBFDF54", VA = "0xBFDF54")]
		private static void UpdateTrackedInstances()
		{
		}

		[Token(Token = "0x6001218")]
		[Address(RVA = "0xBFE08C", Offset = "0xBFE08C", VA = "0xBFE08C")]
		public NavMeshLink()
		{
		}
	}
	[Token(Token = "0x20002B3")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8B6B04", Offset = "0x8B6B04")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x8B6B04", Offset = "0x8B6B04")]
	public class NavMeshModifier : MonoBehaviour
	{
		[Token(Token = "0x400112F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool m_OverrideArea;

		[Token(Token = "0x4001130")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private int m_Area;

		[Token(Token = "0x4001131")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private bool m_IgnoreFromBuild;

		[Token(Token = "0x4001132")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private List<int> m_AffectedAgents;

		[Token(Token = "0x4001133")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly List<NavMeshModifier> s_NavMeshModifiers;

		[Token(Token = "0x170001AF")]
		public bool overrideArea
		{
			[Token(Token = "0x600121A")]
			[Address(RVA = "0xBFE224", Offset = "0xBFE224", VA = "0xBFE224")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600121B")]
			[Address(RVA = "0xBFE22C", Offset = "0xBFE22C", VA = "0xBFE22C")]
			set
			{
			}
		}

		[Token(Token = "0x170001B0")]
		public int area
		{
			[Token(Token = "0x600121C")]
			[Address(RVA = "0xBFE238", Offset = "0xBFE238", VA = "0xBFE238")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600121D")]
			[Address(RVA = "0xBFE240", Offset = "0xBFE240", VA = "0xBFE240")]
			set
			{
			}
		}

		[Token(Token = "0x170001B1")]
		public bool ignoreFromBuild
		{
			[Token(Token = "0x600121E")]
			[Address(RVA = "0xBFE248", Offset = "0xBFE248", VA = "0xBFE248")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600121F")]
			[Address(RVA = "0xBFE250", Offset = "0xBFE250", VA = "0xBFE250")]
			set
			{
			}
		}

		[Token(Token = "0x170001B2")]
		public static List<NavMeshModifier> activeModifiers
		{
			[Token(Token = "0x6001220")]
			[Address(RVA = "0xBFE25C", Offset = "0xBFE25C", VA = "0xBFE25C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001221")]
		[Address(RVA = "0xBFE2C4", Offset = "0xBFE2C4", VA = "0xBFE2C4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001222")]
		[Address(RVA = "0xBFE394", Offset = "0xBFE394", VA = "0xBFE394")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001223")]
		[Address(RVA = "0xBFE418", Offset = "0xBFE418", VA = "0xBFE418")]
		public bool AffectsAgentType(int agentTypeID)
		{
			return default(bool);
		}

		[Token(Token = "0x6001224")]
		[Address(RVA = "0xBFE4B4", Offset = "0xBFE4B4", VA = "0xBFE4B4")]
		public NavMeshModifier()
		{
		}
	}
	[Token(Token = "0x20002B4")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8B6B78", Offset = "0x8B6B78")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x8B6B78", Offset = "0x8B6B78")]
	public class NavMeshModifierVolume : MonoBehaviour
	{
		[Token(Token = "0x4001134")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Vector3 m_Size;

		[Token(Token = "0x4001135")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private Vector3 m_Center;

		[Token(Token = "0x4001136")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private int m_Area;

		[Token(Token = "0x4001137")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private List<int> m_AffectedAgents;

		[Token(Token = "0x4001138")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly List<NavMeshModifierVolume> s_NavMeshModifiers;

		[Token(Token = "0x170001B3")]
		public Vector3 size
		{
			[Token(Token = "0x6001226")]
			[Address(RVA = "0xBFE5E0", Offset = "0xBFE5E0", VA = "0xBFE5E0")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001227")]
			[Address(RVA = "0xBFE5EC", Offset = "0xBFE5EC", VA = "0xBFE5EC")]
			set
			{
			}
		}

		[Token(Token = "0x170001B4")]
		public Vector3 center
		{
			[Token(Token = "0x6001228")]
			[Address(RVA = "0xBFE5F8", Offset = "0xBFE5F8", VA = "0xBFE5F8")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001229")]
			[Address(RVA = "0xBFE604", Offset = "0xBFE604", VA = "0xBFE604")]
			set
			{
			}
		}

		[Token(Token = "0x170001B5")]
		public int area
		{
			[Token(Token = "0x600122A")]
			[Address(RVA = "0xBFE610", Offset = "0xBFE610", VA = "0xBFE610")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600122B")]
			[Address(RVA = "0xBFE618", Offset = "0xBFE618", VA = "0xBFE618")]
			set
			{
			}
		}

		[Token(Token = "0x170001B6")]
		public static List<NavMeshModifierVolume> activeModifiers
		{
			[Token(Token = "0x600122C")]
			[Address(RVA = "0xBFE620", Offset = "0xBFE620", VA = "0xBFE620")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600122D")]
		[Address(RVA = "0xBFE688", Offset = "0xBFE688", VA = "0xBFE688")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600122E")]
		[Address(RVA = "0xBFE758", Offset = "0xBFE758", VA = "0xBFE758")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600122F")]
		[Address(RVA = "0xBFE7DC", Offset = "0xBFE7DC", VA = "0xBFE7DC")]
		public bool AffectsAgentType(int agentTypeID)
		{
			return default(bool);
		}

		[Token(Token = "0x6001230")]
		[Address(RVA = "0xBFE878", Offset = "0xBFE878", VA = "0xBFE878")]
		public NavMeshModifierVolume()
		{
		}
	}
	[Token(Token = "0x20002B5")]
	public enum CollectObjects
	{
		[Token(Token = "0x400113A")]
		All,
		[Token(Token = "0x400113B")]
		Volume,
		[Token(Token = "0x400113C")]
		Children
	}
	[Token(Token = "0x20002B6")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "DefaultExecutionOrder", RVA = "0x8B6BEC", Offset = "0x8B6BEC")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8B6BEC", Offset = "0x8B6BEC")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x8B6BEC", Offset = "0x8B6BEC")]
	public class NavMeshSurface : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000812")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B8C80", Offset = "0x8B8C80")]
		private sealed class <>c
		{
			[Token(Token = "0x4002804")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002805")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Predicate<NavMeshModifierVolume> <>9__76_0;

			[Token(Token = "0x4002806")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Predicate<NavMeshModifier> <>9__77_0;

			[Token(Token = "0x4002807")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Predicate<NavMeshBuildSource> <>9__77_1;

			[Token(Token = "0x4002808")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static Predicate<NavMeshBuildSource> <>9__77_2;

			[Token(Token = "0x6002F15")]
			[Address(RVA = "0xC0115C", Offset = "0xC0115C", VA = "0xC0115C")]
			public <>c()
			{
			}

			[Token(Token = "0x6002F16")]
			[Address(RVA = "0xC01164", Offset = "0xC01164", VA = "0xC01164")]
			internal bool <AppendModifierVolumes>b__76_0(NavMeshModifierVolume x)
			{
				return default(bool);
			}

			[Token(Token = "0x6002F17")]
			[Address(RVA = "0xC01190", Offset = "0xC01190", VA = "0xC01190")]
			internal bool <CollectSources>b__77_0(NavMeshModifier x)
			{
				return default(bool);
			}

			[Token(Token = "0x6002F18")]
			[Address(RVA = "0xC011BC", Offset = "0xC011BC", VA = "0xC011BC")]
			internal bool <CollectSources>b__77_1(NavMeshBuildSource x)
			{
				return default(bool);
			}

			[Token(Token = "0x6002F19")]
			[Address(RVA = "0xC012BC", Offset = "0xC012BC", VA = "0xC012BC")]
			internal bool <CollectSources>b__77_2(NavMeshBuildSource x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x400113D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private int m_AgentTypeID;

		[Token(Token = "0x400113E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private CollectObjects m_CollectObjects;

		[Token(Token = "0x400113F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Vector3 m_Size;

		[Token(Token = "0x4001140")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private Vector3 m_Center;

		[Token(Token = "0x4001141")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private LayerMask m_LayerMask;

		[Token(Token = "0x4001142")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private NavMeshCollectGeometry m_UseGeometry;

		[Token(Token = "0x4001143")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private int m_DefaultArea;

		[Token(Token = "0x4001144")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		private bool m_IgnoreNavMeshAgent;

		[Token(Token = "0x4001145")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
		[SerializeField]
		private bool m_IgnoreNavMeshObstacle;

		[Token(Token = "0x4001146")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x46")]
		[SerializeField]
		private bool m_OverrideTileSize;

		[Token(Token = "0x4001147")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private int m_TileSize;

		[Token(Token = "0x4001148")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		private bool m_OverrideVoxelSize;

		[Token(Token = "0x4001149")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private float m_VoxelSize;

		[Token(Token = "0x400114A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[SerializeField]
		private bool m_BuildHeightMesh;

		[Token(Token = "0x400114B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x8BD554", Offset = "0x8BD554")]
		[SerializeField]
		private NavMeshData m_NavMeshData;

		[Token(Token = "0x400114C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private NavMeshDataInstance m_NavMeshDataInstance;

		[Token(Token = "0x400114D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private Vector3 m_LastPosition;

		[Token(Token = "0x400114E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Quaternion m_LastRotation;

		[Token(Token = "0x400114F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly List<NavMeshSurface> s_NavMeshSurfaces;

		[Token(Token = "0x170001B7")]
		public int agentTypeID
		{
			[Token(Token = "0x6001232")]
			[Address(RVA = "0xBFEA10", Offset = "0xBFEA10", VA = "0xBFEA10")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001233")]
			[Address(RVA = "0xBFEA18", Offset = "0xBFEA18", VA = "0xBFEA18")]
			set
			{
			}
		}

		[Token(Token = "0x170001B8")]
		public CollectObjects collectObjects
		{
			[Token(Token = "0x6001234")]
			[Address(RVA = "0xBFEA20", Offset = "0xBFEA20", VA = "0xBFEA20")]
			get
			{
				return default(CollectObjects);
			}
			[Token(Token = "0x6001235")]
			[Address(RVA = "0xBFEA28", Offset = "0xBFEA28", VA = "0xBFEA28")]
			set
			{
			}
		}

		[Token(Token = "0x170001B9")]
		public Vector3 size
		{
			[Token(Token = "0x6001236")]
			[Address(RVA = "0xBFEA30", Offset = "0xBFEA30", VA = "0xBFEA30")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001237")]
			[Address(RVA = "0xBFEA3C", Offset = "0xBFEA3C", VA = "0xBFEA3C")]
			set
			{
			}
		}

		[Token(Token = "0x170001BA")]
		public Vector3 center
		{
			[Token(Token = "0x6001238")]
			[Address(RVA = "0xBFEA48", Offset = "0xBFEA48", VA = "0xBFEA48")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001239")]
			[Address(RVA = "0xBFEA54", Offset = "0xBFEA54", VA = "0xBFEA54")]
			set
			{
			}
		}

		[Token(Token = "0x170001BB")]
		public LayerMask layerMask
		{
			[Token(Token = "0x600123A")]
			[Address(RVA = "0xBFEA60", Offset = "0xBFEA60", VA = "0xBFEA60")]
			get
			{
				return default(LayerMask);
			}
			[Token(Token = "0x600123B")]
			[Address(RVA = "0xBFEA68", Offset = "0xBFEA68", VA = "0xBFEA68")]
			set
			{
			}
		}

		[Token(Token = "0x170001BC")]
		public NavMeshCollectGeometry useGeometry
		{
			[Token(Token = "0x600123C")]
			[Address(RVA = "0xBFEA70", Offset = "0xBFEA70", VA = "0xBFEA70")]
			get
			{
				return default(NavMeshCollectGeometry);
			}
			[Token(Token = "0x600123D")]
			[Address(RVA = "0xBFEA78", Offset = "0xBFEA78", VA = "0xBFEA78")]
			set
			{
			}
		}

		[Token(Token = "0x170001BD")]
		public int defaultArea
		{
			[Token(Token = "0x600123E")]
			[Address(RVA = "0xBFEA80", Offset = "0xBFEA80", VA = "0xBFEA80")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600123F")]
			[Address(RVA = "0xBFEA88", Offset = "0xBFEA88", VA = "0xBFEA88")]
			set
			{
			}
		}

		[Token(Token = "0x170001BE")]
		public bool ignoreNavMeshAgent
		{
			[Token(Token = "0x6001240")]
			[Address(RVA = "0xBFEA90", Offset = "0xBFEA90", VA = "0xBFEA90")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001241")]
			[Address(RVA = "0xBFEA98", Offset = "0xBFEA98", VA = "0xBFEA98")]
			set
			{
			}
		}

		[Token(Token = "0x170001BF")]
		public bool ignoreNavMeshObstacle
		{
			[Token(Token = "0x6001242")]
			[Address(RVA = "0xBFEAA4", Offset = "0xBFEAA4", VA = "0xBFEAA4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001243")]
			[Address(RVA = "0xBFEAAC", Offset = "0xBFEAAC", VA = "0xBFEAAC")]
			set
			{
			}
		}

		[Token(Token = "0x170001C0")]
		public bool overrideTileSize
		{
			[Token(Token = "0x6001244")]
			[Address(RVA = "0xBFEAB8", Offset = "0xBFEAB8", VA = "0xBFEAB8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001245")]
			[Address(RVA = "0xBFEAC0", Offset = "0xBFEAC0", VA = "0xBFEAC0")]
			set
			{
			}
		}

		[Token(Token = "0x170001C1")]
		public int tileSize
		{
			[Token(Token = "0x6001246")]
			[Address(RVA = "0xBFEACC", Offset = "0xBFEACC", VA = "0xBFEACC")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001247")]
			[Address(RVA = "0xBFEAD4", Offset = "0xBFEAD4", VA = "0xBFEAD4")]
			set
			{
			}
		}

		[Token(Token = "0x170001C2")]
		public bool overrideVoxelSize
		{
			[Token(Token = "0x6001248")]
			[Address(RVA = "0xBFEADC", Offset = "0xBFEADC", VA = "0xBFEADC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001249")]
			[Address(RVA = "0xBFEAE4", Offset = "0xBFEAE4", VA = "0xBFEAE4")]
			set
			{
			}
		}

		[Token(Token = "0x170001C3")]
		public float voxelSize
		{
			[Token(Token = "0x600124A")]
			[Address(RVA = "0xBFEAF0", Offset = "0xBFEAF0", VA = "0xBFEAF0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600124B")]
			[Address(RVA = "0xBFEAF8", Offset = "0xBFEAF8", VA = "0xBFEAF8")]
			set
			{
			}
		}

		[Token(Token = "0x170001C4")]
		public bool buildHeightMesh
		{
			[Token(Token = "0x600124C")]
			[Address(RVA = "0xBFEB00", Offset = "0xBFEB00", VA = "0xBFEB00")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600124D")]
			[Address(RVA = "0xBFEB08", Offset = "0xBFEB08", VA = "0xBFEB08")]
			set
			{
			}
		}

		[Token(Token = "0x170001C5")]
		public NavMeshData navMeshData
		{
			[Token(Token = "0x600124E")]
			[Address(RVA = "0xBFEB14", Offset = "0xBFEB14", VA = "0xBFEB14")]
			get
			{
				return null;
			}
			[Token(Token = "0x600124F")]
			[Address(RVA = "0xBFEB1C", Offset = "0xBFEB1C", VA = "0xBFEB1C")]
			set
			{
			}
		}

		[Token(Token = "0x170001C6")]
		public static List<NavMeshSurface> activeSurfaces
		{
			[Token(Token = "0x6001250")]
			[Address(RVA = "0xBFEB24", Offset = "0xBFEB24", VA = "0xBFEB24")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001251")]
		[Address(RVA = "0xBFEB8C", Offset = "0xBFEB8C", VA = "0xBFEB8C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001252")]
		[Address(RVA = "0xBFEEF8", Offset = "0xBFEEF8", VA = "0xBFEEF8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001253")]
		[Address(RVA = "0xBFED84", Offset = "0xBFED84", VA = "0xBFED84")]
		public void AddData()
		{
		}

		[Token(Token = "0x6001254")]
		[Address(RVA = "0xBFEF6C", Offset = "0xBFEF6C", VA = "0xBFEF6C")]
		public void RemoveData()
		{
		}

		[Token(Token = "0x6001255")]
		[Address(RVA = "0xBFF0B4", Offset = "0xBFF0B4", VA = "0xBFF0B4")]
		public NavMeshBuildSettings GetBuildSettings()
		{
			return default(NavMeshBuildSettings);
		}

		[Token(Token = "0x6001256")]
		[Address(RVA = "0xBFF240", Offset = "0xBFF240", VA = "0xBFF240")]
		public void BuildNavMesh()
		{
		}

		[Token(Token = "0x6001257")]
		[Address(RVA = "0xC003C4", Offset = "0xC003C4", VA = "0xC003C4")]
		public AsyncOperation UpdateNavMesh(NavMeshData data)
		{
			return null;
		}

		[Token(Token = "0x6001258")]
		[Address(RVA = "0xBFEBF8", Offset = "0xBFEBF8", VA = "0xBFEBF8")]
		private static void Register(NavMeshSurface surface)
		{
		}

		[Token(Token = "0x6001259")]
		[Address(RVA = "0xBFEF98", Offset = "0xBFEF98", VA = "0xBFEF98")]
		private static void Unregister(NavMeshSurface surface)
		{
		}

		[Token(Token = "0x600125A")]
		[Address(RVA = "0xC0050C", Offset = "0xC0050C", VA = "0xC0050C")]
		private static void UpdateActive()
		{
		}

		[Token(Token = "0x600125B")]
		[Address(RVA = "0xC0062C", Offset = "0xC0062C", VA = "0xC0062C")]
		private void AppendModifierVolumes(ref List<NavMeshBuildSource> sources)
		{
		}

		[Token(Token = "0x600125C")]
		[Address(RVA = "0xBFF4AC", Offset = "0xBFF4AC", VA = "0xBFF4AC")]
		private List<NavMeshBuildSource> CollectSources()
		{
			return null;
		}

		[Token(Token = "0x600125D")]
		[Address(RVA = "0xBFFBF0", Offset = "0xBFFBF0", VA = "0xBFFBF0")]
		private static Vector3 Abs(Vector3 v)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600125E")]
		[Address(RVA = "0xC00BA4", Offset = "0xC00BA4", VA = "0xC00BA4")]
		private static Bounds GetWorldBounds(Matrix4x4 mat, Bounds bounds)
		{
			return default(Bounds);
		}

		[Token(Token = "0x600125F")]
		[Address(RVA = "0xBFFC98", Offset = "0xBFFC98", VA = "0xBFFC98")]
		private Bounds CalculateWorldBounds(List<NavMeshBuildSource> sources)
		{
			return default(Bounds);
		}

		[Token(Token = "0x6001260")]
		[Address(RVA = "0xC00DE8", Offset = "0xC00DE8", VA = "0xC00DE8")]
		private bool HasTransformChanged()
		{
			return default(bool);
		}

		[Token(Token = "0x6001261")]
		[Address(RVA = "0xC005E8", Offset = "0xC005E8", VA = "0xC005E8")]
		private void UpdateDataIfTransformChanged()
		{
		}

		[Token(Token = "0x6001262")]
		[Address(RVA = "0xC00F50", Offset = "0xC00F50", VA = "0xC00F50")]
		public NavMeshSurface()
		{
		}
	}
}
namespace BoundarySystem_Ext
{
	[Token(Token = "0x20002B7")]
	internal static class Pvr_BoundaryAPI
	{
		[Token(Token = "0x4001150")]
		private const string LibFileName = "Pvr_UnitySDK";

		[PreserveSig]
		[Token(Token = "0x6001264")]
		[Address(RVA = "0xBC7F54", Offset = "0xBC7F54", VA = "0xBC7F54")]
		public static extern void Pvr_StartSDKBoundary();

		[PreserveSig]
		[Token(Token = "0x6001265")]
		[Address(RVA = "0xBC7FC4", Offset = "0xBC7FC4", VA = "0xBC7FC4")]
		public static extern void Pvr_ShutdownSDKBoundary();

		[PreserveSig]
		[Token(Token = "0x6001266")]
		[Address(RVA = "0xBC8034", Offset = "0xBC8034", VA = "0xBC8034")]
		private static extern int Pvr_GetMainSensorStateExt(ref float x, ref float y, ref float z, ref float w, ref float px, ref float py, ref float pz, ref float vfov, ref float hfov, ref int viewNumber);

		[PreserveSig]
		[Token(Token = "0x6001267")]
		[Address(RVA = "0xBC8118", Offset = "0xBC8118", VA = "0xBC8118")]
		private static extern IntPtr Pvr_GetCameraData_Ext();

		[PreserveSig]
		[Token(Token = "0x6001268")]
		[Address(RVA = "0xBC818C", Offset = "0xBC818C", VA = "0xBC818C")]
		public static extern void Pvr_ResetVrModebyForce();

		[PreserveSig]
		[Token(Token = "0x6001269")]
		[Address(RVA = "0xBC81FC", Offset = "0xBC81FC", VA = "0xBC81FC")]
		private static extern bool Pvr_ResumeBoundaryForSTS();

		[PreserveSig]
		[Token(Token = "0x600126A")]
		[Address(RVA = "0xBC8278", Offset = "0xBC8278", VA = "0xBC8278")]
		private static extern void Pvr_PauseBoundaryForSTS();

		[Token(Token = "0x600126B")]
		[Address(RVA = "0xBC82E8", Offset = "0xBC82E8", VA = "0xBC82E8")]
		public static int UPvr_GetMainSensorStateExt(ref float x, ref float y, ref float z, ref float w, ref float px, ref float py, ref float pz, ref float vfov, ref float hfov, ref int viewNumber)
		{
			return default(int);
		}

		[Token(Token = "0x600126C")]
		[Address(RVA = "0xBC82F4", Offset = "0xBC82F4", VA = "0xBC82F4")]
		public static IntPtr UPvr_GetCameraData_Ext()
		{
			return default(IntPtr);
		}

		[Token(Token = "0x600126D")]
		[Address(RVA = "0xBC8330", Offset = "0xBC8330", VA = "0xBC8330")]
		public static bool UPvr_ResumeBoundaryForSTS()
		{
			return default(bool);
		}

		[Token(Token = "0x600126E")]
		[Address(RVA = "0xBC8334", Offset = "0xBC8334", VA = "0xBC8334")]
		public static void UPvr_PauseBoundaryForSTS()
		{
		}

		[Token(Token = "0x600126F")]
		public static IntPtr StructToIntPtr<T>(T info)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6001270")]
		public static T IntPtrToStruct<T>(IntPtr info)
		{
			return (T)null;
		}
	}
	[Token(Token = "0x20002B8")]
	internal static class Pvr_SafeAreaAlgoAPI
	{
		[Token(Token = "0x2000813")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x8B8C90", Offset = "0x8B8C90")]
		public delegate void SafeAreaCallback(IntPtr lineCollectionPtr, IntPtr safeAreaRectPtr);

		[Token(Token = "0x2000814")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x8B8CA4", Offset = "0x8B8CA4")]
		public delegate void SafeAreaCallbackShrink(IntPtr lineCollectionPtr, IntPtr safeAreaDetailRectPtr);

		[Token(Token = "0x2000815")]
		public struct GSAPoint3i
		{
			[Token(Token = "0x4002809")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int x;

			[Token(Token = "0x400280A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public int y;

			[Token(Token = "0x400280B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int z;
		}

		[Token(Token = "0x2000816")]
		public struct GSALine
		{
			[Token(Token = "0x400280C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public IntPtr pointArray;

			[Token(Token = "0x400280D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int pointCount;
		}

		[Token(Token = "0x2000817")]
		public struct GSALineCollection
		{
			[Token(Token = "0x400280E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public IntPtr lineArray;

			[Token(Token = "0x400280F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int lineCount;
		}

		[Token(Token = "0x2000818")]
		public struct GSALegalData
		{
			[Token(Token = "0x4002810")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int overMaxRange;

			[Token(Token = "0x4002811")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public int includeBigGrap;

			[Token(Token = "0x4002812")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int bigGapNum;

			[Token(Token = "0x4002813")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public int centerOut;

			[Token(Token = "0x4002814")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int removeNarrow;

			[Token(Token = "0x4002815")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public int overMaxRange_more;

			[Token(Token = "0x4002816")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int validShrinkArea;
		}

		[Token(Token = "0x2000819")]
		public struct GSARect
		{
			[Token(Token = "0x4002817")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public GSAPoint3i leftup;

			[Token(Token = "0x4002818")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public GSAPoint3i leftdown;

			[Token(Token = "0x4002819")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public GSAPoint3i rightup;

			[Token(Token = "0x400281A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public GSAPoint3i rightdown;

			[Token(Token = "0x400281B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public GSAPoint3i center;

			[Token(Token = "0x400281C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public uint width;

			[Token(Token = "0x400281D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public uint height;

			[Token(Token = "0x400281E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			public int isLegal;

			[Token(Token = "0x400281F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public GSALegalData legalData;
		}

		[Token(Token = "0x4001151")]
		private const string LibFileName = "SafetyArea";

		[PreserveSig]
		[Token(Token = "0x6001271")]
		[Address(RVA = "0xBC85CC", Offset = "0xBC85CC", VA = "0xBC85CC")]
		private static extern int GSAInit(int width, int height);

		[PreserveSig]
		[Token(Token = "0x6001272")]
		[Address(RVA = "0xBC865C", Offset = "0xBC865C", VA = "0xBC865C")]
		private static extern int GSAShutDown();

		[PreserveSig]
		[Token(Token = "0x6001273")]
		[Address(RVA = "0xBC86D0", Offset = "0xBC86D0", VA = "0xBC86D0")]
		private static extern int GSASetCallback(SafeAreaCallback cb);

		[PreserveSig]
		[Token(Token = "0x6001274")]
		[Address(RVA = "0xBC8754", Offset = "0xBC8754", VA = "0xBC8754")]
		private static extern int GSASetCallbackShrink(SafeAreaCallbackShrink cb);

		[PreserveSig]
		[Token(Token = "0x6001275")]
		[Address(RVA = "0xBC87D8", Offset = "0xBC87D8", VA = "0xBC87D8")]
		private static extern int GSAUpDateData(IntPtr lineCollectionPtr);

		[PreserveSig]
		[Token(Token = "0x6001276")]
		[Address(RVA = "0xBC8858", Offset = "0xBC8858", VA = "0xBC8858")]
		private static extern int GSASetConfigFilePath(IntPtr configPath);

		[PreserveSig]
		[Token(Token = "0x6001277")]
		[Address(RVA = "0xBC88D8", Offset = "0xBC88D8", VA = "0xBC88D8")]
		private static extern bool GSAGetClosedAreaUpdateFlag();

		[PreserveSig]
		[Token(Token = "0x6001278")]
		[Address(RVA = "0xBC8954", Offset = "0xBC8954", VA = "0xBC8954")]
		private static extern int GSALoadSafetyArea(IntPtr lineCollectionPtr);

		[PreserveSig]
		[Token(Token = "0x6001279")]
		[Address(RVA = "0xBC89D4", Offset = "0xBC89D4", VA = "0xBC89D4")]
		private static extern double GSABoundaryDetector(ref GSAPoint3i pointPtr);

		[PreserveSig]
		[Token(Token = "0x600127A")]
		[Address(RVA = "0xBC8A54", Offset = "0xBC8A54", VA = "0xBC8A54")]
		private static extern int GSALoadSafetyArea2(IntPtr lineCollectionPtr, bool isPlayArea);

		[PreserveSig]
		[Token(Token = "0x600127B")]
		[Address(RVA = "0xBC8AE4", Offset = "0xBC8AE4", VA = "0xBC8AE4")]
		private static extern double GSABoundaryDetector2(ref GSAPoint3i point, bool isPlayArea, ref GSAPoint3i closestPoint, ref GSAPoint3i normalDir);

		[Token(Token = "0x600127C")]
		[Address(RVA = "0xBC8B8C", Offset = "0xBC8B8C", VA = "0xBC8B8C")]
		public static int Pvr_GSAInit(int width, int height)
		{
			return default(int);
		}

		[Token(Token = "0x600127D")]
		[Address(RVA = "0xBC8B90", Offset = "0xBC8B90", VA = "0xBC8B90")]
		public static int Pvr_GSASetCallback(SafeAreaCallback cb)
		{
			return default(int);
		}

		[Token(Token = "0x600127E")]
		[Address(RVA = "0xBC8B94", Offset = "0xBC8B94", VA = "0xBC8B94")]
		public static int Pvr_GSASetCallbackShrink(SafeAreaCallbackShrink cb)
		{
			return default(int);
		}

		[Token(Token = "0x600127F")]
		[Address(RVA = "0xBC8B98", Offset = "0xBC8B98", VA = "0xBC8B98")]
		public static int Pvr_GSAUpDateData(IntPtr lineCollectionPtr)
		{
			return default(int);
		}

		[Token(Token = "0x6001280")]
		[Address(RVA = "0xBC8B9C", Offset = "0xBC8B9C", VA = "0xBC8B9C")]
		public static bool Pvr_GSAGetClosedAreaUpdateFlag()
		{
			return default(bool);
		}

		[Token(Token = "0x6001281")]
		[Address(RVA = "0xBC8BA0", Offset = "0xBC8BA0", VA = "0xBC8BA0")]
		public static int Pvr_GSASetConfigFilePath(string configPath)
		{
			return default(int);
		}

		[Token(Token = "0x6001282")]
		[Address(RVA = "0xBC8C28", Offset = "0xBC8C28", VA = "0xBC8C28")]
		public static int Pvr_GSALoadSafetyArea(IntPtr lineCollectionPtr)
		{
			return default(int);
		}

		[Token(Token = "0x6001283")]
		[Address(RVA = "0xBC8C2C", Offset = "0xBC8C2C", VA = "0xBC8C2C")]
		public static double Pvr_GSABoundaryDetector(ref GSAPoint3i point)
		{
			return default(double);
		}

		[Token(Token = "0x6001284")]
		[Address(RVA = "0xBC8C30", Offset = "0xBC8C30", VA = "0xBC8C30")]
		public static int Pvr_GSAShutDown()
		{
			return default(int);
		}

		[Token(Token = "0x6001285")]
		[Address(RVA = "0xBC8C34", Offset = "0xBC8C34", VA = "0xBC8C34")]
		public static int Pvr_GSALoadSafetyArea2(IntPtr lineCollectionPtr, bool isPlayArea)
		{
			return default(int);
		}

		[Token(Token = "0x6001286")]
		[Address(RVA = "0xBC8C3C", Offset = "0xBC8C3C", VA = "0xBC8C3C")]
		public static double Pvr_GSABoundaryDetector2(ref GSAPoint3i point, bool isPlayArea, ref GSAPoint3i closestPoint, ref GSAPoint3i normalDir)
		{
			return default(double);
		}
	}
	[Token(Token = "0x20002B9")]
	public class Pvr_BoundarySystem
	{
		[Token(Token = "0x4001152")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Pvr_BoundarySystem instance;

		[Token(Token = "0x4001153")]
		public const int CameraImageWidth = 1280;

		[Token(Token = "0x4001154")]
		public const int CameraImageHeight = 400;

		[Token(Token = "0x4001155")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public IntPtr CameraFramePtr;

		[Token(Token = "0x170001C7")]
		public static Pvr_BoundarySystem Instance
		{
			[Token(Token = "0x6001287")]
			[Address(RVA = "0xBC8338", Offset = "0xBC8338", VA = "0xBC8338")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001288")]
		[Address(RVA = "0xBC8400", Offset = "0xBC8400", VA = "0xBC8400")]
		public void OpenBoundary()
		{
		}

		[Token(Token = "0x6001289")]
		[Address(RVA = "0xBC8404", Offset = "0xBC8404", VA = "0xBC8404")]
		public void CloseBoundary()
		{
		}

		[Token(Token = "0x600128A")]
		[Address(RVA = "0xBC8408", Offset = "0xBC8408", VA = "0xBC8408")]
		public void Reset6Dof()
		{
		}

		[Token(Token = "0x600128B")]
		[Address(RVA = "0xBC840C", Offset = "0xBC840C", VA = "0xBC840C")]
		public float[] GetControllerFixedPoseData(int hand)
		{
			return null;
		}

		[Token(Token = "0x600128C")]
		[Address(RVA = "0xBC83B4", Offset = "0xBC83B4", VA = "0xBC83B4")]
		public Pvr_BoundarySystem()
		{
		}
	}
	[Token(Token = "0x20002BA")]
	public class Pvr_SafeAreaAlgoModule
	{
		[Token(Token = "0x200081A")]
		public struct ExtraInfo
		{
			[Token(Token = "0x4002820")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public bool overMaxRange;

			[Token(Token = "0x4002821")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
			public bool includeBigGap;

			[Token(Token = "0x4002822")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public int bigGapNum;

			[Token(Token = "0x4002823")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public bool centerOut;

			[Token(Token = "0x4002824")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x9")]
			public bool removeNarrow;

			[Token(Token = "0x4002825")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA")]
			public bool overMaxRange_more;

			[Token(Token = "0x4002826")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public int validShrinkArea;
		}

		[Token(Token = "0x200081B")]
		public struct BoundaryPlayerArea
		{
			[Token(Token = "0x4002827")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public UnityEngine.Vector3 lowerleft;

			[Token(Token = "0x4002828")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public UnityEngine.Vector3 upperleft;

			[Token(Token = "0x4002829")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public UnityEngine.Vector3 upperRight;

			[Token(Token = "0x400282A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public UnityEngine.Vector3 lowerRight;

			[Token(Token = "0x400282B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public UnityEngine.Vector3 center;

			[Token(Token = "0x400282C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public uint width;

			[Token(Token = "0x400282D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public uint height;

			[Token(Token = "0x400282E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			public bool isLegal;

			[Token(Token = "0x400282F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public ExtraInfo extraInfo;
		}

		[Token(Token = "0x200081C")]
		public delegate void BoundarySystemCallback(BoundaryPlayerArea playAreaInfo, List<UnityEngine.Vector3> boundaryPoints, List<List<UnityEngine.Vector3>> unusedLines);

		[Token(Token = "0x200081D")]
		public delegate void BoundarySystemCallbackShrink(List<UnityEngine.Vector3> rectPoints, List<UnityEngine.Vector3> boundaryPoints, List<List<UnityEngine.Vector3>> unusedLines);

		[Token(Token = "0x4001156")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Pvr_SafeAreaAlgoModule instance;

		[Token(Token = "0x4001157")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private BoundarySystemCallback boundarySystemCallback;

		[Token(Token = "0x4001158")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private BoundarySystemCallbackShrink boundarySystemCallbackShrink;

		[Token(Token = "0x170001C8")]
		public static Pvr_SafeAreaAlgoModule Instance
		{
			[Token(Token = "0x600128D")]
			[Address(RVA = "0xBCA08C", Offset = "0xBCA08C", VA = "0xBCA08C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600128E")]
		[Address(RVA = "0xBCA114", Offset = "0xBCA114", VA = "0xBCA114")]
		public void RegisterCallBack(BoundarySystemCallback callback)
		{
		}

		[Token(Token = "0x600128F")]
		[Address(RVA = "0xBCA11C", Offset = "0xBCA11C", VA = "0xBCA11C")]
		public void RegisterCallBackShrink(BoundarySystemCallbackShrink callback)
		{
		}

		[Token(Token = "0x6001290")]
		[Address(RVA = "0xBCA124", Offset = "0xBCA124", VA = "0xBCA124")]
		public bool Start()
		{
			return default(bool);
		}

		[Token(Token = "0x6001291")]
		[Address(RVA = "0xBCA244", Offset = "0xBCA244", VA = "0xBCA244")]
		public bool CommitNewLineData(bool isFistLine, UnityEngine.Vector3[] points)
		{
			return default(bool);
		}

		[Token(Token = "0x6001292")]
		[Address(RVA = "0xBCA4C4", Offset = "0xBCA4C4", VA = "0xBCA4C4")]
		public bool Shutdown()
		{
			return default(bool);
		}

		[Token(Token = "0x6001293")]
		[Address(RVA = "0xBCA548", Offset = "0xBCA548", VA = "0xBCA548")]
		public double QueryDistanceOfPoint(UnityEngine.Vector3 point)
		{
			return default(double);
		}

		[Token(Token = "0x6001294")]
		[Address(RVA = "0xBCA5A0", Offset = "0xBCA5A0", VA = "0xBCA5A0")]
		public double QueryDistanceOfPoint(UnityEngine.Vector3 point, bool isPlayArea, ref UnityEngine.Vector3 closestPoint, ref UnityEngine.Vector3 normalDir)
		{
			return default(double);
		}

		[Token(Token = "0x6001295")]
		[Address(RVA = "0xBC92B4", Offset = "0xBC92B4", VA = "0xBC92B4")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x8C9710", Offset = "0x8C9710")]
		private static void _SafeAreaCallback(IntPtr lineCollectionPtr, IntPtr safeAreaRectPtr)
		{
		}

		[Token(Token = "0x6001296")]
		[Address(RVA = "0xBC99D0", Offset = "0xBC99D0", VA = "0xBC99D0")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x8C9774", Offset = "0x8C9774")]
		private static void _SafeAreaCallbackShrink(IntPtr lineCollectionPtr, IntPtr safeAreaDetailRectPtr)
		{
		}

		[Token(Token = "0x6001297")]
		[Address(RVA = "0xBCA10C", Offset = "0xBCA10C", VA = "0xBCA10C")]
		public Pvr_SafeAreaAlgoModule()
		{
		}
	}
}
namespace Pvr_UnitySDKAPI
{
	[Token(Token = "0x20002BB")]
	public class PvrControllerKey
	{
		[Token(Token = "0x4001159")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool State;

		[Token(Token = "0x400115A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public bool PressedDown;

		[Token(Token = "0x400115B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
		public bool PressedUp;

		[Token(Token = "0x400115C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13")]
		public bool LongPressed;

		[Token(Token = "0x400115D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public bool Click;

		[Token(Token = "0x400115E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
		public bool Touch;

		[Token(Token = "0x400115F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16")]
		public bool TouchDown;

		[Token(Token = "0x4001160")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x17")]
		public bool TouchUp;

		[Token(Token = "0x6001298")]
		[Address(RVA = "0x10026DC", Offset = "0x10026DC", VA = "0x10026DC")]
		public PvrControllerKey()
		{
		}
	}
	[Token(Token = "0x20002BC")]
	public class ControllerHand
	{
		[Token(Token = "0x4001161")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public PvrControllerKey App;

		[Token(Token = "0x4001162")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PvrControllerKey Touch;

		[Token(Token = "0x4001163")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PvrControllerKey Home;

		[Token(Token = "0x4001164")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public PvrControllerKey VolumeDown;

		[Token(Token = "0x4001165")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public PvrControllerKey VolumeUp;

		[Token(Token = "0x4001166")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public PvrControllerKey Trigger;

		[Token(Token = "0x4001167")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public PvrControllerKey X;

		[Token(Token = "0x4001168")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public PvrControllerKey Y;

		[Token(Token = "0x4001169")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public PvrControllerKey A;

		[Token(Token = "0x400116A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public PvrControllerKey B;

		[Token(Token = "0x400116B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public PvrControllerKey Left;

		[Token(Token = "0x400116C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public PvrControllerKey Right;

		[Token(Token = "0x400116D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public PvrControllerKey Thumbrest;

		[Token(Token = "0x400116E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public UnityEngine.Vector2 TouchPadPosition;

		[Token(Token = "0x400116F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public int TriggerNum;

		[Token(Token = "0x4001170")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public int GripValue;

		[Token(Token = "0x4001171")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Quaternion Rotation;

		[Token(Token = "0x4001172")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public UnityEngine.Vector3 Position;

		[Token(Token = "0x4001173")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		public int Battery;

		[Token(Token = "0x4001174")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public ControllerState ConnectState;

		[Token(Token = "0x4001175")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		public SwipeDirection SwipeDirection;

		[Token(Token = "0x4001176")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public TouchPadClick TouchPadClick;

		[Token(Token = "0x4001177")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		public bool isShowBoundary;

		[Token(Token = "0x6001299")]
		[Address(RVA = "0x10024F8", Offset = "0x10024F8", VA = "0x10024F8")]
		public ControllerHand()
		{
		}
	}
	[Token(Token = "0x20002BD")]
	public enum ControllerState
	{
		[Token(Token = "0x4001179")]
		Error = -1,
		[Token(Token = "0x400117A")]
		DisConnected,
		[Token(Token = "0x400117B")]
		Connected
	}
	[Token(Token = "0x20002BE")]
	public enum Pvr_KeyCode
	{
		[Token(Token = "0x400117D")]
		APP = 1,
		[Token(Token = "0x400117E")]
		TOUCHPAD,
		[Token(Token = "0x400117F")]
		HOME,
		[Token(Token = "0x4001180")]
		VOLUMEUP,
		[Token(Token = "0x4001181")]
		VOLUMEDOWN,
		[Token(Token = "0x4001182")]
		TRIGGER,
		[Token(Token = "0x4001183")]
		A,
		[Token(Token = "0x4001184")]
		B,
		[Token(Token = "0x4001185")]
		X,
		[Token(Token = "0x4001186")]
		Y,
		[Token(Token = "0x4001187")]
		Left,
		[Token(Token = "0x4001188")]
		Right,
		[Token(Token = "0x4001189")]
		Thumbrest
	}
	[Token(Token = "0x20002BF")]
	public enum SwipeDirection
	{
		[Token(Token = "0x400118B")]
		No,
		[Token(Token = "0x400118C")]
		SwipeUp,
		[Token(Token = "0x400118D")]
		SwipeDown,
		[Token(Token = "0x400118E")]
		SwipeLeft,
		[Token(Token = "0x400118F")]
		SwipeRight
	}
	[Token(Token = "0x20002C0")]
	public enum TouchPadClick
	{
		[Token(Token = "0x4001191")]
		No,
		[Token(Token = "0x4001192")]
		ClickUp,
		[Token(Token = "0x4001193")]
		ClickDown,
		[Token(Token = "0x4001194")]
		ClickLeft,
		[Token(Token = "0x4001195")]
		ClickRight
	}
	[Token(Token = "0x20002C1")]
	public struct Controller
	{
		[Token(Token = "0x4001196")]
		public const string LibFileName = "Pvr_UnitySDK";

		[Token(Token = "0x600129A")]
		[Address(RVA = "0xFF1350", Offset = "0xFF1350", VA = "0xFF1350")]
		public static UnityEngine.Vector2 UPvr_GetTouchPadPosition(int hand)
		{
			return default(UnityEngine.Vector2);
		}

		[Token(Token = "0x600129B")]
		[Address(RVA = "0xFFEAB4", Offset = "0xFFEAB4", VA = "0xFFEAB4")]
		public static float UPvr_GetAxis1D(int hand, Pvr_KeyCode key)
		{
			return default(float);
		}

		[Token(Token = "0x600129C")]
		[Address(RVA = "0xFFEC38", Offset = "0xFFEC38", VA = "0xFFEC38")]
		public static UnityEngine.Vector2 UPvr_GetAxis2D(int hand)
		{
			return default(UnityEngine.Vector2);
		}

		[Token(Token = "0x600129D")]
		[Address(RVA = "0xFFEE68", Offset = "0xFFEE68", VA = "0xFFEE68")]
		public static ControllerState UPvr_GetControllerState(int hand)
		{
			return default(ControllerState);
		}

		[Token(Token = "0x600129E")]
		[Address(RVA = "0xFFEF6C", Offset = "0xFFEF6C", VA = "0xFFEF6C")]
		public static Quaternion UPvr_GetControllerQUA(int hand)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x600129F")]
		[Address(RVA = "0xFFF084", Offset = "0xFFF084", VA = "0xFFF084")]
		public static UnityEngine.Vector3 UPvr_GetControllerPOS(int hand)
		{
			return default(UnityEngine.Vector3);
		}

		[Token(Token = "0x60012A0")]
		[Address(RVA = "0xFFF198", Offset = "0xFFF198", VA = "0xFFF198")]
		public static int UPvr_GetControllerTriggerValue(int hand)
		{
			return default(int);
		}

		[Token(Token = "0x60012A1")]
		[Address(RVA = "0xFFF268", Offset = "0xFFF268", VA = "0xFFF268")]
		public static int UPvr_GetControllerPower(int hand)
		{
			return default(int);
		}

		[Token(Token = "0x60012A2")]
		[Address(RVA = "0xFFF338", Offset = "0xFFF338", VA = "0xFFF338")]
		public static SwipeDirection UPvr_GetSwipeDirection(int hand)
		{
			return default(SwipeDirection);
		}

		[Token(Token = "0x60012A3")]
		[Address(RVA = "0xFFF408", Offset = "0xFFF408", VA = "0xFFF408")]
		public static TouchPadClick UPvr_GetTouchPadClick(int hand)
		{
			return default(TouchPadClick);
		}

		[Token(Token = "0x60012A4")]
		[Address(RVA = "0xFF0120", Offset = "0xFF0120", VA = "0xFF0120")]
		public static bool UPvr_GetKey(int hand, Pvr_KeyCode key)
		{
			return default(bool);
		}

		[Token(Token = "0x60012A5")]
		[Address(RVA = "0xFF066C", Offset = "0xFF066C", VA = "0xFF066C")]
		public static bool UPvr_GetKeyDown(int hand, Pvr_KeyCode key)
		{
			return default(bool);
		}

		[Token(Token = "0x60012A6")]
		[Address(RVA = "0xFFF4D8", Offset = "0xFFF4D8", VA = "0xFFF4D8")]
		public static bool UPvr_GetKeyUp(int hand, Pvr_KeyCode key)
		{
			return default(bool);
		}

		[Token(Token = "0x60012A7")]
		[Address(RVA = "0xFFFA24", Offset = "0xFFFA24", VA = "0xFFFA24")]
		public static bool UPvr_GetTouch(int hand, Pvr_KeyCode key)
		{
			return default(bool);
		}

		[Token(Token = "0x60012A8")]
		[Address(RVA = "0xFFFD68", Offset = "0xFFFD68", VA = "0xFFFD68")]
		public static bool UPvr_GetTouchDown(int hand, Pvr_KeyCode key)
		{
			return default(bool);
		}

		[Token(Token = "0x60012A9")]
		[Address(RVA = "0x10000AC", Offset = "0x10000AC", VA = "0x10000AC")]
		public static bool UPvr_GetTouchUp(int hand, Pvr_KeyCode key)
		{
			return default(bool);
		}

		[Token(Token = "0x60012AA")]
		[Address(RVA = "0x10003F0", Offset = "0x10003F0", VA = "0x10003F0")]
		public static bool UPvr_GetKeyClick(int hand, Pvr_KeyCode key)
		{
			return default(bool);
		}

		[Token(Token = "0x60012AB")]
		[Address(RVA = "0x100093C", Offset = "0x100093C", VA = "0x100093C")]
		public static bool UPvr_GetKeyLongPressed(int hand, Pvr_KeyCode key)
		{
			return default(bool);
		}

		[Token(Token = "0x60012AC")]
		[Address(RVA = "0xFF19E8", Offset = "0xFF19E8", VA = "0xFF19E8")]
		public static bool UPvr_IsTouching(int hand)
		{
			return default(bool);
		}

		[Token(Token = "0x60012AD")]
		[Address(RVA = "0x1000E88", Offset = "0x1000E88", VA = "0x1000E88")]
		public static void UPvr_SetHandNess(Pvr_Controller.UserHandNess hand)
		{
		}

		[Token(Token = "0x60012AE")]
		[Address(RVA = "0x1000F48", Offset = "0x1000F48", VA = "0x1000F48")]
		public static Pvr_Controller.UserHandNess UPvr_GetHandNess()
		{
			return default(Pvr_Controller.UserHandNess);
		}

		[Token(Token = "0x60012AF")]
		[Address(RVA = "0x1000FBC", Offset = "0x1000FBC", VA = "0x1000FBC")]
		public static int UPvr_GetPreferenceDevice()
		{
			return default(int);
		}

		[Token(Token = "0x60012B0")]
		[Address(RVA = "0x1001078", Offset = "0x1001078", VA = "0x1001078")]
		public static bool UPvr_IsEnbleTrigger()
		{
			return default(bool);
		}

		[Token(Token = "0x60012B1")]
		[Address(RVA = "0x10010EC", Offset = "0x10010EC", VA = "0x10010EC")]
		public static int UPvr_GetDeviceType()
		{
			return default(int);
		}

		[Token(Token = "0x60012B2")]
		[Address(RVA = "0xFF00AC", Offset = "0xFF00AC", VA = "0xFF00AC")]
		public static int UPvr_GetMainHandNess()
		{
			return default(int);
		}

		[Token(Token = "0x60012B3")]
		[Address(RVA = "0x1001160", Offset = "0x1001160", VA = "0x1001160")]
		public static void UPvr_SetMainHandNess(int hand)
		{
		}

		[Token(Token = "0x60012B4")]
		[Address(RVA = "0x10011DC", Offset = "0x10011DC", VA = "0x10011DC")]
		public static int UPvr_GetControllerAbility(int hand)
		{
			return default(int);
		}

		[Token(Token = "0x60012B5")]
		[Address(RVA = "0x1001258", Offset = "0x1001258", VA = "0x1001258")]
		public static void UPvr_VibrateNeo2Controller(float strength, int time, int hand)
		{
		}

		[Token(Token = "0x60012B6")]
		[Address(RVA = "0x10012F4", Offset = "0x10012F4", VA = "0x10012F4")]
		public static int UPvr_GetControllerBindingState(int hand)
		{
			return default(int);
		}

		[Token(Token = "0x60012B7")]
		[Address(RVA = "0x1001370", Offset = "0x1001370", VA = "0x1001370")]
		public static UnityEngine.Vector3 UPvr_GetVelocity(int hand)
		{
			return default(UnityEngine.Vector3);
		}

		[Token(Token = "0x60012B8")]
		[Address(RVA = "0x10013EC", Offset = "0x10013EC", VA = "0x10013EC")]
		public static UnityEngine.Vector3 UPvr_GetAngularVelocity(int hand)
		{
			return default(UnityEngine.Vector3);
		}

		[Token(Token = "0x60012B9")]
		[Address(RVA = "0x1001468", Offset = "0x1001468", VA = "0x1001468")]
		public static UnityEngine.Vector3 UPvr_GetAcceleration(int hand)
		{
			return default(UnityEngine.Vector3);
		}

		[Token(Token = "0x60012BA")]
		[Address(RVA = "0x10014E4", Offset = "0x10014E4", VA = "0x10014E4")]
		public static void UPvr_ScanController()
		{
		}

		[Token(Token = "0x60012BB")]
		[Address(RVA = "0x1001558", Offset = "0x1001558", VA = "0x1001558")]
		public static void UPvr_StopScanController()
		{
		}

		[Token(Token = "0x60012BC")]
		[Address(RVA = "0x10015CC", Offset = "0x10015CC", VA = "0x10015CC")]
		public static void UPvr_ConnectController(string mac)
		{
		}

		[Token(Token = "0x60012BD")]
		[Address(RVA = "0x1001690", Offset = "0x1001690", VA = "0x1001690")]
		public static void UPvr_DisConnectController()
		{
		}

		[Token(Token = "0x60012BE")]
		[Address(RVA = "0x1001704", Offset = "0x1001704", VA = "0x1001704")]
		public static void UPvr_ResetController(int hand)
		{
		}

		[Token(Token = "0x60012BF")]
		[Address(RVA = "0x1001780", Offset = "0x1001780", VA = "0x1001780")]
		public static string UPvr_GetControllerVersion()
		{
			return null;
		}

		[Token(Token = "0x60012C0")]
		[Address(RVA = "0x10017F4", Offset = "0x10017F4", VA = "0x10017F4")]
		public static void UPvr_GetDeviceVersion(int deviceType)
		{
		}

		[Token(Token = "0x60012C1")]
		[Address(RVA = "0x1001870", Offset = "0x1001870", VA = "0x1001870")]
		public static void UPvr_GetControllerSnCode(int controllerSerialNum)
		{
		}

		[Token(Token = "0x60012C2")]
		[Address(RVA = "0x10018EC", Offset = "0x10018EC", VA = "0x10018EC")]
		public static void UPvr_SetControllerUnbind(int controllerSerialNum)
		{
		}

		[Token(Token = "0x60012C3")]
		[Address(RVA = "0x1001968", Offset = "0x1001968", VA = "0x1001968")]
		public static void UPvr_SetStationRestart()
		{
		}

		[Token(Token = "0x60012C4")]
		[Address(RVA = "0x10019DC", Offset = "0x10019DC", VA = "0x10019DC")]
		public static void UPvr_StartStationOtaUpdate()
		{
		}

		[Token(Token = "0x60012C5")]
		[Address(RVA = "0x1001A50", Offset = "0x1001A50", VA = "0x1001A50")]
		public static void UPvr_StartControllerOtaUpdate(int mode, int controllerSerialNum)
		{
		}

		[Token(Token = "0x60012C6")]
		[Address(RVA = "0x1001ADC", Offset = "0x1001ADC", VA = "0x1001ADC")]
		public static void UPvr_EnterPairMode(int controllerSerialNum)
		{
		}

		[Token(Token = "0x60012C7")]
		[Address(RVA = "0x1001B58", Offset = "0x1001B58", VA = "0x1001B58")]
		public static void UPvr_SetControllerShutdown(int controllerSerialNum)
		{
		}

		[Token(Token = "0x60012C8")]
		[Address(RVA = "0x1001BD4", Offset = "0x1001BD4", VA = "0x1001BD4")]
		public static int UPvr_GetStationPairState()
		{
			return default(int);
		}

		[Token(Token = "0x60012C9")]
		[Address(RVA = "0x1001C48", Offset = "0x1001C48", VA = "0x1001C48")]
		public static int UPvr_GetStationOtaUpdateProgress()
		{
			return default(int);
		}

		[Token(Token = "0x60012CA")]
		[Address(RVA = "0x1001CBC", Offset = "0x1001CBC", VA = "0x1001CBC")]
		public static int UPvr_GetControllerOtaUpdateProgress()
		{
			return default(int);
		}

		[Token(Token = "0x60012CB")]
		[Address(RVA = "0x1001D30", Offset = "0x1001D30", VA = "0x1001D30")]
		public static void UPvr_GetControllerVersionAndSN(int controllerSerialNum)
		{
		}

		[Token(Token = "0x60012CC")]
		[Address(RVA = "0x1001DAC", Offset = "0x1001DAC", VA = "0x1001DAC")]
		public static void UPvr_GetControllerUniqueID()
		{
		}

		[Token(Token = "0x60012CD")]
		[Address(RVA = "0x9894CC", Offset = "0x9894CC", VA = "0x9894CC")]
		public void UPvr_InterruptStationPairMode()
		{
		}

		[Token(Token = "0x60012CE")]
		[Address(RVA = "0x9894D0", Offset = "0x9894D0", VA = "0x9894D0")]
		public void UPvr_StartCV2PairingMode(int deviceType)
		{
		}

		[Token(Token = "0x60012CF")]
		[Address(RVA = "0x9894D4", Offset = "0x9894D4", VA = "0x9894D4")]
		public void UPvr_StopCV2PairingMode(int deviceType)
		{
		}

		[Token(Token = "0x60012D0")]
		[Address(RVA = "0x1001F8C", Offset = "0x1001F8C", VA = "0x1001F8C")]
		public static void UPvr_SetArmModelParameters(int hand, int gazeType, float elbowHeight, float elbowDepth, float pointerTiltAngle)
		{
		}

		[Token(Token = "0x60012D1")]
		[Address(RVA = "0x1002048", Offset = "0x1002048", VA = "0x1002048")]
		public static void UPvr_CalcArmModelParameters(float[] headOrientation, float[] controllerOrientation, float[] controllerPrimary)
		{
		}

		[Token(Token = "0x60012D2")]
		[Address(RVA = "0x10020FC", Offset = "0x10020FC", VA = "0x10020FC")]
		public static void UPvr_GetPointerPose(float[] rotation, float[] position)
		{
		}

		[Token(Token = "0x60012D3")]
		[Address(RVA = "0x10021A0", Offset = "0x10021A0", VA = "0x10021A0")]
		public static void UPvr_GetElbowPose(float[] rotation, float[] position)
		{
		}

		[Token(Token = "0x60012D4")]
		[Address(RVA = "0x1002240", Offset = "0x1002240", VA = "0x1002240")]
		public static void UPvr_GetWristPose(float[] rotation, float[] position)
		{
		}

		[Token(Token = "0x60012D5")]
		[Address(RVA = "0x10022E0", Offset = "0x10022E0", VA = "0x10022E0")]
		public static void UPvr_GetShoulderPose(float[] rotation, float[] position)
		{
		}

		[Token(Token = "0x60012D6")]
		[Address(RVA = "0x1002384", Offset = "0x1002384", VA = "0x1002384")]
		public static void UPvr_IsEnbleHomeKey(bool state)
		{
		}

		[Token(Token = "0x60012D7")]
		[Address(RVA = "0x1002400", Offset = "0x1002400", VA = "0x1002400")]
		public static void UPvr_SwitchHomeKey(bool state)
		{
		}

		[Token(Token = "0x60012D8")]
		[Address(RVA = "0x100247C", Offset = "0x100247C", VA = "0x100247C")]
		public static int UPvr_GetControllerSensorStatus(int id)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60012D9")]
		[Address(RVA = "0x100204C", Offset = "0x100204C", VA = "0x100204C")]
		private static extern void Pvr_CalcArmModelParameters(float[] headOrientation, float[] controllerOrientation, float[] gyro);

		[PreserveSig]
		[Token(Token = "0x60012DA")]
		[Address(RVA = "0x1002100", Offset = "0x1002100", VA = "0x1002100")]
		private static extern void Pvr_GetPointerPose(float[] rotation, float[] position);

		[PreserveSig]
		[Token(Token = "0x60012DB")]
		[Address(RVA = "0x10021A4", Offset = "0x10021A4", VA = "0x10021A4")]
		private static extern void Pvr_GetElbowPose(float[] rotation, float[] position);

		[PreserveSig]
		[Token(Token = "0x60012DC")]
		[Address(RVA = "0x1002244", Offset = "0x1002244", VA = "0x1002244")]
		private static extern void Pvr_GetWristPose(float[] rotation, float[] position);

		[PreserveSig]
		[Token(Token = "0x60012DD")]
		[Address(RVA = "0x10022E4", Offset = "0x10022E4", VA = "0x10022E4")]
		private static extern void Pvr_GetShoulderPose(float[] rotation, float[] position);

		[PreserveSig]
		[Token(Token = "0x60012DE")]
		[Address(RVA = "0x1001F90", Offset = "0x1001F90", VA = "0x1001F90")]
		private static extern void Pvr_SetArmModelParameters(int hand, int gazeType, float elbowHeight, float elbowDepth, float pointerTiltAngle);
	}
	[Token(Token = "0x20002C2")]
	public enum ControllerVariety
	{
		[Token(Token = "0x4001198")]
		Controller0,
		[Token(Token = "0x4001199")]
		Controller1
	}
	[Token(Token = "0x20002C3")]
	public enum ControllerDevice
	{
		[Token(Token = "0x400119B")]
		Goblin,
		[Token(Token = "0x400119C")]
		Neo,
		[Token(Token = "0x400119D")]
		G2,
		[Token(Token = "0x400119E")]
		Neo2,
		[Token(Token = "0x400119F")]
		Neo3,
		[Token(Token = "0x40011A0")]
		NewController
	}
	[Token(Token = "0x20002C4")]
	public enum PBS_SystemInfoEnum
	{
		[Token(Token = "0x40011A2")]
		ELECTRIC_QUANTITY,
		[Token(Token = "0x40011A3")]
		PUI_VERSION,
		[Token(Token = "0x40011A4")]
		EQUIPMENT_MODEL,
		[Token(Token = "0x40011A5")]
		EQUIPMENT_SN,
		[Token(Token = "0x40011A6")]
		CUSTOMER_SN,
		[Token(Token = "0x40011A7")]
		INTERNAL_STORAGE_SPACE_OF_THE_DEVICE,
		[Token(Token = "0x40011A8")]
		DEVICE_BLUETOOTH_STATUS,
		[Token(Token = "0x40011A9")]
		BLUETOOTH_NAME_CONNECTED,
		[Token(Token = "0x40011AA")]
		BLUETOOTH_MAC_ADDRESS,
		[Token(Token = "0x40011AB")]
		DEVICE_WIFI_STATUS,
		[Token(Token = "0x40011AC")]
		WIFI_NAME_CONNECTED,
		[Token(Token = "0x40011AD")]
		WLAN_MAC_ADDRESS,
		[Token(Token = "0x40011AE")]
		DEVICE_IP
	}
	[Token(Token = "0x20002C5")]
	public enum PBS_DeviceControlEnum
	{
		[Token(Token = "0x40011B0")]
		DEVICE_CONTROL_REBOOT,
		[Token(Token = "0x40011B1")]
		DEVICE_CONTROL_SHUTDOWN
	}
	[Token(Token = "0x20002C6")]
	public enum PBS_PackageControlEnum
	{
		[Token(Token = "0x40011B3")]
		PACKAGE_SILENCE_INSTALL,
		[Token(Token = "0x40011B4")]
		PACKAGE_SILENCE_UNINSTALL
	}
	[Token(Token = "0x20002C7")]
	public enum PBS_SwitchEnum
	{
		[Token(Token = "0x40011B6")]
		S_ON,
		[Token(Token = "0x40011B7")]
		S_OFF
	}
	[Token(Token = "0x20002C8")]
	public enum PBS_HomeEventEnum
	{
		[Token(Token = "0x40011B9")]
		SINGLE_CLICK,
		[Token(Token = "0x40011BA")]
		DOUBLE_CLICK,
		[Token(Token = "0x40011BB")]
		LONG_PRESS
	}
	[Token(Token = "0x20002C9")]
	public enum PBS_HomeFunctionEnum
	{
		[Token(Token = "0x40011BD")]
		VALUE_HOME_GO_TO_SETTING,
		[Token(Token = "0x40011BE")]
		VALUE_HOME_BACK,
		[Token(Token = "0x40011BF")]
		VALUE_HOME_RECENTER,
		[Token(Token = "0x40011C0")]
		VALUE_HOME_OPEN_APP,
		[Token(Token = "0x40011C1")]
		VALUE_HOME_DISABLE,
		[Token(Token = "0x40011C2")]
		VALUE_HOME_GO_TO_HOME,
		[Token(Token = "0x40011C3")]
		VALUE_HOME_SEND_BROADCAST,
		[Token(Token = "0x40011C4")]
		VALUE_HOME_CLEAN_MEMORY
	}
	[Token(Token = "0x20002CA")]
	public enum PBS_ScreenOffDelayTimeEnum
	{
		[Token(Token = "0x40011C6")]
		THREE = 3,
		[Token(Token = "0x40011C7")]
		TEN = 10,
		[Token(Token = "0x40011C8")]
		THIRTY = 30,
		[Token(Token = "0x40011C9")]
		SIXTY = 60,
		[Token(Token = "0x40011CA")]
		THREE_HUNDRED = 300,
		[Token(Token = "0x40011CB")]
		SIX_HUNDRED = 600,
		[Token(Token = "0x40011CC")]
		NEVER = -1
	}
	[Token(Token = "0x20002CB")]
	public enum PBS_SleepDelayTimeEnum
	{
		[Token(Token = "0x40011CE")]
		FIFTEEN = 15,
		[Token(Token = "0x40011CF")]
		THIRTY = 30,
		[Token(Token = "0x40011D0")]
		SIXTY = 60,
		[Token(Token = "0x40011D1")]
		THREE_HUNDRED = 300,
		[Token(Token = "0x40011D2")]
		SIX_HUNDRED = 600,
		[Token(Token = "0x40011D3")]
		ONE_THOUSAND_AND_EIGHT_HUNDRED = 1800,
		[Token(Token = "0x40011D4")]
		NEVER = -1
	}
	[Token(Token = "0x20002CC")]
	public enum PBS_SystemFunctionSwitchEnum
	{
		[Token(Token = "0x40011D6")]
		SFS_USB,
		[Token(Token = "0x40011D7")]
		SFS_AUTOSLEEP,
		[Token(Token = "0x40011D8")]
		SFS_SCREENON_CHARGING,
		[Token(Token = "0x40011D9")]
		SFS_OTG_CHARGING,
		[Token(Token = "0x40011DA")]
		SFS_RETURN_MENU_IN_2DMODE,
		[Token(Token = "0x40011DB")]
		SFS_COMBINATION_KEY,
		[Token(Token = "0x40011DC")]
		SFS_CALIBRATION_WITH_POWER_ON,
		[Token(Token = "0x40011DD")]
		SFS_SYSTEM_UPDATE,
		[Token(Token = "0x40011DE")]
		SFS_CAST_SERVICE,
		[Token(Token = "0x40011DF")]
		SFS_EYE_PROTECTION,
		[Token(Token = "0x40011E0")]
		SFS_SECURITY_ZONE_PERMANENTLY,
		[Token(Token = "0x40011E1")]
		SFS_GLOBAL_CALIBRATION,
		[Token(Token = "0x40011E2")]
		SFS_Auto_Calibration,
		[Token(Token = "0x40011E3")]
		SFS_USB_BOOT
	}
	[Token(Token = "0x20002CD")]
	public enum PBS_USBConfigModeEnum
	{
		[Token(Token = "0x40011E5")]
		MTP,
		[Token(Token = "0x40011E6")]
		CHARGE
	}
	[Token(Token = "0x20002CE")]
	public struct ToBService
	{
		[Token(Token = "0x40011E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Action<bool> BoolCallback;

		[Token(Token = "0x40011E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action<int> IntCallback;

		[Token(Token = "0x40011E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Action<long> LongCallback;

		[Token(Token = "0x40011EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static AndroidJavaClass unityPlayer;

		[Token(Token = "0x40011EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static AndroidJavaObject currentActivity;

		[Token(Token = "0x40011EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static AndroidJavaObject tobHelper;

		[Token(Token = "0x40011ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static AndroidJavaClass tobHelperClass;

		[Token(Token = "0x60012DF")]
		[Address(RVA = "0x12D99FC", Offset = "0x12D99FC", VA = "0x12D99FC")]
		public static void UPvr_InitToBService()
		{
		}

		[Token(Token = "0x60012E0")]
		[Address(RVA = "0x12D9BAC", Offset = "0x12D9BAC", VA = "0x12D9BAC")]
		public static void UPvr_SetUnityObjectName(string obj)
		{
		}

		[Token(Token = "0x60012E1")]
		[Address(RVA = "0x12D9C78", Offset = "0x12D9C78", VA = "0x12D9C78")]
		public static void UPvr_BindToBService()
		{
		}

		[Token(Token = "0x60012E2")]
		[Address(RVA = "0x12D9D4C", Offset = "0x12D9D4C", VA = "0x12D9D4C")]
		public static void UPvr_UnBindToBService()
		{
		}

		[Token(Token = "0x60012E3")]
		[Address(RVA = "0x12D9E20", Offset = "0x12D9E20", VA = "0x12D9E20")]
		private static AndroidJavaObject GetEnumType(Enum enumType)
		{
			return null;
		}

		[Token(Token = "0x60012E4")]
		[Address(RVA = "0x12D9F1C", Offset = "0x12D9F1C", VA = "0x12D9F1C")]
		public static string UPvr_StateGetDeviceInfo(PBS_SystemInfoEnum type)
		{
			return null;
		}

		[Token(Token = "0x60012E5")]
		[Address(RVA = "0x12DA078", Offset = "0x12DA078", VA = "0x12DA078")]
		public static void UPvr_ControlSetDeviceAction(PBS_DeviceControlEnum deviceControl, Action<int> callback)
		{
		}

		[Token(Token = "0x60012E6")]
		[Address(RVA = "0x12DA178", Offset = "0x12DA178", VA = "0x12DA178")]
		public static void UPvr_ControlAPPManger(PBS_PackageControlEnum packageControl, string path, Action<int> callback)
		{
		}

		[Token(Token = "0x60012E7")]
		[Address(RVA = "0x12DA2F0", Offset = "0x12DA2F0", VA = "0x12DA2F0")]
		public static void UPvr_ControlSetAutoConnectWIFI(string ssid, string pwd, Action<bool> callback)
		{
		}

		[Token(Token = "0x60012E8")]
		[Address(RVA = "0x12DA454", Offset = "0x12DA454", VA = "0x12DA454")]
		public static void UPvr_ControlClearAutoConnectWIFI(Action<bool> callback)
		{
		}

		[Token(Token = "0x60012E9")]
		[Address(RVA = "0x12DA4D0", Offset = "0x12DA4D0", VA = "0x12DA4D0")]
		public static void UPvr_PropertySetHomeKey(PBS_HomeEventEnum eventEnum, PBS_HomeFunctionEnum function, Action<bool> callback)
		{
		}

		[Token(Token = "0x60012EA")]
		[Address(RVA = "0x12DA630", Offset = "0x12DA630", VA = "0x12DA630")]
		public static void UPvr_PropertySetHomeKeyAll(PBS_HomeEventEnum eventEnum, PBS_HomeFunctionEnum function, int timesetup, string pkg, string className, Action<bool> callback)
		{
		}

		[Token(Token = "0x60012EB")]
		[Address(RVA = "0x12DA840", Offset = "0x12DA840", VA = "0x12DA840")]
		public static void UPvr_PropertyDisablePowerKey(bool isSingleTap, bool enable, Action<int> callback)
		{
		}

		[Token(Token = "0x60012EC")]
		[Address(RVA = "0x12DA988", Offset = "0x12DA988", VA = "0x12DA988")]
		public static void UPvr_PropertySetScreenOffDelay(PBS_ScreenOffDelayTimeEnum timeEnum, Action<int> callback)
		{
		}

		[Token(Token = "0x60012ED")]
		[Address(RVA = "0x12DAA88", Offset = "0x12DAA88", VA = "0x12DAA88")]
		public static void UPvr_PropertySetSleepDelay(PBS_SleepDelayTimeEnum timeEnum)
		{
		}

		[Token(Token = "0x60012EE")]
		[Address(RVA = "0x12DAB78", Offset = "0x12DAB78", VA = "0x12DAB78")]
		public static void UPvr_SwitchSystemFunction(PBS_SystemFunctionSwitchEnum systemFunction, PBS_SwitchEnum switchEnum)
		{
		}

		[Token(Token = "0x60012EF")]
		[Address(RVA = "0x12DAD00", Offset = "0x12DAD00", VA = "0x12DAD00")]
		public static void UPvr_SwitchSetUsbConfigurationOption(PBS_USBConfigModeEnum uSBConfigModeEnum)
		{
		}

		[Token(Token = "0x60012F0")]
		[Address(RVA = "0x12DAE34", Offset = "0x12DAE34", VA = "0x12DAE34")]
		public static void UPvr_ScreenOn()
		{
		}

		[Token(Token = "0x60012F1")]
		[Address(RVA = "0x12DAF28", Offset = "0x12DAF28", VA = "0x12DAF28")]
		public static void UPvr_ScreenOff()
		{
		}

		[Token(Token = "0x60012F2")]
		[Address(RVA = "0x12DB01C", Offset = "0x12DB01C", VA = "0x12DB01C")]
		public static void UPvr_AcquireWakeLock()
		{
		}

		[Token(Token = "0x60012F3")]
		[Address(RVA = "0x12DB110", Offset = "0x12DB110", VA = "0x12DB110")]
		public static void UPvr_ReleaseWakeLock()
		{
		}

		[Token(Token = "0x60012F4")]
		[Address(RVA = "0x12DB204", Offset = "0x12DB204", VA = "0x12DB204")]
		public static void UPvr_EnableEnterKey()
		{
		}

		[Token(Token = "0x60012F5")]
		[Address(RVA = "0x12DB2F8", Offset = "0x12DB2F8", VA = "0x12DB2F8")]
		public static void UPvr_DisableEnterKey()
		{
		}

		[Token(Token = "0x60012F6")]
		[Address(RVA = "0x12DB3EC", Offset = "0x12DB3EC", VA = "0x12DB3EC")]
		public static void UPvr_EnableVolumeKey()
		{
		}

		[Token(Token = "0x60012F7")]
		[Address(RVA = "0x12DB4E0", Offset = "0x12DB4E0", VA = "0x12DB4E0")]
		public static void UPvr_DisableVolumeKey()
		{
		}

		[Token(Token = "0x60012F8")]
		[Address(RVA = "0x12DB5D4", Offset = "0x12DB5D4", VA = "0x12DB5D4")]
		public static void UPvr_EnableBackKey()
		{
		}

		[Token(Token = "0x60012F9")]
		[Address(RVA = "0x12DB6C8", Offset = "0x12DB6C8", VA = "0x12DB6C8")]
		public static void UPvr_DisableBackKey()
		{
		}

		[Token(Token = "0x60012FA")]
		[Address(RVA = "0x12DB7BC", Offset = "0x12DB7BC", VA = "0x12DB7BC")]
		public static void UPvr_WriteConfigFileToDataLocal(string path, string content, Action<bool> callback)
		{
		}

		[Token(Token = "0x60012FB")]
		[Address(RVA = "0x12DB8D0", Offset = "0x12DB8D0", VA = "0x12DB8D0")]
		public static void UPvr_ResetAllKeyToDefault(Action<bool> callback)
		{
		}
	}
	[Token(Token = "0x20002CF")]
	public enum GlobalIntConfigs
	{
		[Token(Token = "0x40011EF")]
		EYE_TEXTURE_RESOLUTION0,
		[Token(Token = "0x40011F0")]
		EYE_TEXTURE_RESOLUTION1,
		[Token(Token = "0x40011F1")]
		SEENSOR_COUNT,
		[Token(Token = "0x40011F2")]
		ABILITY6DOF,
		[Token(Token = "0x40011F3")]
		PLATFORM_TYPE,
		[Token(Token = "0x40011F4")]
		TRACKING_MODE,
		[Token(Token = "0x40011F5")]
		LOG_LEVEL,
		[Token(Token = "0x40011F6")]
		ENBLE_HAND6DOF_BY_HEAD,
		[Token(Token = "0x40011F7")]
		ENBLE_6DOF_GLOBAL_TRACKING,
		[Token(Token = "0x40011F8")]
		TARGET_FRAME_RATE,
		[Token(Token = "0x40011F9")]
		iShowFPS,
		[Token(Token = "0x40011FA")]
		SensorMode,
		[Token(Token = "0x40011FB")]
		LOGICFLOW,
		[Token(Token = "0x40011FC")]
		EYE_TEXTURE_RES_HIGH,
		[Token(Token = "0x40011FD")]
		EYE_TEXTURE_RES_NORMAL,
		[Token(Token = "0x40011FE")]
		iCtrlModelLoadingPri,
		[Token(Token = "0x40011FF")]
		iPhoneHMDModeEnabled,
		[Token(Token = "0x4001200")]
		isEnableBoundary,
		[Token(Token = "0x4001201")]
		Enable_Activity_Rotation,
		[Token(Token = "0x4001202")]
		GetDisplay_Orientation,
		[Token(Token = "0x4001203")]
		GetWaitFrameNum,
		[Token(Token = "0x4001204")]
		GetResetFrameNum,
		[Token(Token = "0x4001205")]
		EnableFFRBYSYS,
		[Token(Token = "0x4001206")]
		RotControllerMode
	}
	[Token(Token = "0x20002D0")]
	public enum GlobalFloatConfigs
	{
		[Token(Token = "0x4001208")]
		IPD,
		[Token(Token = "0x4001209")]
		VFOV,
		[Token(Token = "0x400120A")]
		HFOV,
		[Token(Token = "0x400120B")]
		NECK_MODEL_X,
		[Token(Token = "0x400120C")]
		NECK_MODEL_Y,
		[Token(Token = "0x400120D")]
		NECK_MODEL_Z,
		[Token(Token = "0x400120E")]
		DISPLAY_REFRESH_RATE
	}
	[Token(Token = "0x20002D1")]
	public enum RenderTextureAntiAliasing
	{
		[Token(Token = "0x4001210")]
		X_1 = 1,
		[Token(Token = "0x4001211")]
		X_2 = 2,
		[Token(Token = "0x4001212")]
		X_4 = 4,
		[Token(Token = "0x4001213")]
		X_8 = 8
	}
	[Token(Token = "0x20002D2")]
	public enum PlatForm
	{
		[Token(Token = "0x4001215")]
		Android = 1,
		[Token(Token = "0x4001216")]
		IOS,
		[Token(Token = "0x4001217")]
		Win,
		[Token(Token = "0x4001218")]
		Notsupport
	}
	[Token(Token = "0x20002D3")]
	public enum RenderTextureDepth
	{
		[Token(Token = "0x400121A")]
		BD_0 = 0,
		[Token(Token = "0x400121B")]
		BD_16 = 16,
		[Token(Token = "0x400121C")]
		BD_24 = 24
	}
	[Token(Token = "0x20002D4")]
	public enum RenderTextureLevel
	{
		[Token(Token = "0x400121E")]
		Normal,
		[Token(Token = "0x400121F")]
		High
	}
	[Token(Token = "0x20002D5")]
	public enum Sensorindex
	{
		[Token(Token = "0x4001221")]
		Default,
		[Token(Token = "0x4001222")]
		FirstSensor,
		[Token(Token = "0x4001223")]
		SecondSensor
	}
	[Token(Token = "0x20002D6")]
	public enum Eye
	{
		[Token(Token = "0x4001225")]
		LeftEye,
		[Token(Token = "0x4001226")]
		RightEye,
		[Token(Token = "0x4001227")]
		BothEye
	}
	[Token(Token = "0x20002D7")]
	public enum ResUtilsType
	{
		[Token(Token = "0x4001229")]
		TYPE_TEXTSIZE,
		[Token(Token = "0x400122A")]
		TYPE_COLOR,
		[Token(Token = "0x400122B")]
		TYPE_TEXT,
		[Token(Token = "0x400122C")]
		TYPE_FONT,
		[Token(Token = "0x400122D")]
		TYPE_VALUE,
		[Token(Token = "0x400122E")]
		TYPE_DRAWABLE,
		[Token(Token = "0x400122F")]
		TYPE_OBJECT,
		[Token(Token = "0x4001230")]
		TYPR_OBJECTARRAY
	}
	[Token(Token = "0x20002D8")]
	public enum TrackingOrigin
	{
		[Token(Token = "0x4001232")]
		EyeLevel,
		[Token(Token = "0x4001233")]
		FloorLevel,
		[Token(Token = "0x4001234")]
		StageLevel
	}
	[Token(Token = "0x20002D9")]
	public enum EFoveationLevel
	{
		[Token(Token = "0x4001236")]
		Low,
		[Token(Token = "0x4001237")]
		Med,
		[Token(Token = "0x4001238")]
		High,
		[Token(Token = "0x4001239")]
		Top_High
	}
	[Token(Token = "0x20002DA")]
	public enum StereoRenderingPathPico
	{
		[Token(Token = "0x400123B")]
		MultiPass,
		[Token(Token = "0x400123C")]
		SinglePass
	}
	[Token(Token = "0x20002DB")]
	public enum pvrEyePoseStatus
	{
		[Token(Token = "0x400123E")]
		kGazePointValid = 1,
		[Token(Token = "0x400123F")]
		kGazeVectorValid = 2,
		[Token(Token = "0x4001240")]
		kEyeOpennessValid = 4,
		[Token(Token = "0x4001241")]
		kEyePupilDilationValid = 8,
		[Token(Token = "0x4001242")]
		kEyePositionGuideValid = 0x10
	}
	[Token(Token = "0x20002DC")]
	public enum TrackingMode
	{
		[Token(Token = "0x4001244")]
		PVR_TRACKING_MODE_ROTATION = 1,
		[Token(Token = "0x4001245")]
		PVR_TRACKING_MODE_POSITION = 2,
		[Token(Token = "0x4001246")]
		PVR_TRACKING_MODE_EYE = 4
	}
	[Token(Token = "0x20002DD")]
	public struct EyeTrackingData
	{
		[Token(Token = "0x4001247")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int leftEyePoseStatus;

		[Token(Token = "0x4001248")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int rightEyePoseStatus;

		[Token(Token = "0x4001249")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int combinedEyePoseStatus;

		[Token(Token = "0x400124A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public UnityEngine.Vector3 leftEyeGazePoint;

		[Token(Token = "0x400124B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UnityEngine.Vector3 rightEyeGazePoint;

		[Token(Token = "0x400124C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public UnityEngine.Vector3 combinedEyeGazePoint;

		[Token(Token = "0x400124D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public UnityEngine.Vector3 leftEyeGazeVector;

		[Token(Token = "0x400124E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public UnityEngine.Vector3 rightEyeGazeVector;

		[Token(Token = "0x400124F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public UnityEngine.Vector3 combinedEyeGazeVector;

		[Token(Token = "0x4001250")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float leftEyeOpenness;

		[Token(Token = "0x4001251")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float rightEyeOpenness;

		[Token(Token = "0x4001252")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float leftEyePupilDilation;

		[Token(Token = "0x4001253")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float rightEyePupilDilation;

		[Token(Token = "0x4001254")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public UnityEngine.Vector3 leftEyePositionGuide;

		[Token(Token = "0x4001255")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public UnityEngine.Vector3 rightEyePositionGuide;

		[Token(Token = "0x4001256")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public UnityEngine.Vector3 foveatedGazeDirection;

		[Token(Token = "0x4001257")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public int foveatedGazeTrackingState;

		[Token(Token = "0x4001258")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public byte[] reserved;
	}
	[Token(Token = "0x20002DE")]
	public struct EyeTrackingGazeRay
	{
		[Token(Token = "0x4001259")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public UnityEngine.Vector3 Direction;

		[Token(Token = "0x400125A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public bool IsValid;

		[Token(Token = "0x400125B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public UnityEngine.Vector3 Origin;
	}
	[Token(Token = "0x20002DF")]
	public struct EyeDeviceInfo
	{
		[Token(Token = "0x400125C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ViewFrustum targetFrustumLeft;

		[Token(Token = "0x400125D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ViewFrustum targetFrustumRight;
	}
	[Token(Token = "0x20002E0")]
	public struct ViewFrustum
	{
		[Token(Token = "0x400125E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float left;

		[Token(Token = "0x400125F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float right;

		[Token(Token = "0x4001260")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float top;

		[Token(Token = "0x4001261")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float bottom;

		[Token(Token = "0x4001262")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float near;

		[Token(Token = "0x4001263")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float far;
	}
	[Token(Token = "0x20002E1")]
	public struct EyeSetting
	{
		[Token(Token = "0x4001264")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Transform eyelocalPosition;

		[Token(Token = "0x4001265")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Rect eyeRect;

		[Token(Token = "0x4001266")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float eyeFov;

		[Token(Token = "0x4001267")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float eyeAspect;

		[Token(Token = "0x4001268")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Matrix4x4 eyeProjectionMatrix;

		[Token(Token = "0x4001269")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Shader eyeShader;
	}
	[Token(Token = "0x20002E2")]
	public struct Sensor
	{
		[Token(Token = "0x400126A")]
		public const string LibFileName = "Pvr_UnitySDK";

		[PreserveSig]
		[Token(Token = "0x60012FC")]
		[Address(RVA = "0x12D2F90", Offset = "0x12D2F90", VA = "0x12D2F90")]
		private static extern int Pvr_Enable6DofModule(bool enable);

		[PreserveSig]
		[Token(Token = "0x60012FD")]
		[Address(RVA = "0x12D3010", Offset = "0x12D3010", VA = "0x12D3010")]
		private static extern int Pvr_OptionalResetSensor(int index, int resetRot, int resetPos);

		[PreserveSig]
		[Token(Token = "0x60012FE")]
		[Address(RVA = "0x12D30A4", Offset = "0x12D30A4", VA = "0x12D30A4")]
		private static extern int Pvr_Init(int index);

		[PreserveSig]
		[Token(Token = "0x60012FF")]
		[Address(RVA = "0x12D3124", Offset = "0x12D3124", VA = "0x12D3124")]
		private static extern int Pvr_StartSensor(int index);

		[PreserveSig]
		[Token(Token = "0x6001300")]
		[Address(RVA = "0x12D31A4", Offset = "0x12D31A4", VA = "0x12D31A4")]
		private static extern int Pvr_StopSensor(int index);

		[PreserveSig]
		[Token(Token = "0x6001301")]
		[Address(RVA = "0x12D3224", Offset = "0x12D3224", VA = "0x12D3224")]
		private static extern int Pvr_ResetSensor(int index);

		[PreserveSig]
		[Token(Token = "0x6001302")]
		[Address(RVA = "0x12D32A4", Offset = "0x12D32A4", VA = "0x12D32A4")]
		private static extern int Pvr_ResetSensorAll(int index);

		[PreserveSig]
		[Token(Token = "0x6001303")]
		[Address(RVA = "0x12D3324", Offset = "0x12D3324", VA = "0x12D3324")]
		private static extern int Pvr_GetSensorState(int index, ref float x, ref float y, ref float z, ref float w, ref float px, ref float py, ref float pz);

		[PreserveSig]
		[Token(Token = "0x6001304")]
		[Address(RVA = "0x12D33FC", Offset = "0x12D33FC", VA = "0x12D33FC")]
		private static extern int Pvr_GetMainSensorState(ref float x, ref float y, ref float z, ref float w, ref float px, ref float py, ref float pz, ref float vfov, ref float hfov, ref int viewNumber);

		[PreserveSig]
		[Token(Token = "0x6001305")]
		[Address(RVA = "0x12D34E0", Offset = "0x12D34E0", VA = "0x12D34E0")]
		private static extern int Pvr_GetPsensorState();

		[PreserveSig]
		[Token(Token = "0x6001306")]
		[Address(RVA = "0x12D3554", Offset = "0x12D3554", VA = "0x12D3554")]
		private static extern int Pvr_GetHmdPSensorStatus();

		[PreserveSig]
		[Token(Token = "0x6001307")]
		[Address(RVA = "0x12D35C8", Offset = "0x12D35C8", VA = "0x12D35C8")]
		private static extern int Pvr_GetSensorGyroscope(int index, ref float x, ref float y, ref float z);

		[PreserveSig]
		[Token(Token = "0x6001308")]
		[Address(RVA = "0x12D3670", Offset = "0x12D3670", VA = "0x12D3670")]
		private static extern int Pvr_GetSensorMagnet(int index, ref float x, ref float y, ref float z);

		[PreserveSig]
		[Token(Token = "0x6001309")]
		[Address(RVA = "0x12D3718", Offset = "0x12D3718", VA = "0x12D3718")]
		private static extern int Pvr_Get6DofSensorQualityStatus();

		[PreserveSig]
		[Token(Token = "0x600130A")]
		[Address(RVA = "0x12D378C", Offset = "0x12D378C", VA = "0x12D378C")]
		private static extern bool Pvr_Get6DofSafePanelFlag();

		[PreserveSig]
		[Token(Token = "0x600130B")]
		[Address(RVA = "0x12D3808", Offset = "0x12D3808", VA = "0x12D3808")]
		private static extern void Pvr_SetReinPosition(float x, float y, float z, float w, float px, float py, float pz, int hand, bool valid, int key);

		[PreserveSig]
		[Token(Token = "0x600130C")]
		[Address(RVA = "0x12D38F8", Offset = "0x12D38F8", VA = "0x12D38F8")]
		private static extern bool Pvr_SetTrackingOriginType(TrackingOrigin trackingOriginType);

		[Token(Token = "0x600130D")]
		[Address(RVA = "0x12D3980", Offset = "0x12D3980", VA = "0x12D3980")]
		public static bool UPvr_Pvr_Get6DofSafePanelFlag()
		{
			return default(bool);
		}

		[Token(Token = "0x600130E")]
		[Address(RVA = "0x12D3984", Offset = "0x12D3984", VA = "0x12D3984")]
		public static int UPvr_Init(int index)
		{
			return default(int);
		}

		[Token(Token = "0x600130F")]
		[Address(RVA = "0x12D3988", Offset = "0x12D3988", VA = "0x12D3988")]
		public static void UPvr_InitPsensor()
		{
		}

		[Token(Token = "0x6001310")]
		[Address(RVA = "0x12D3B70", Offset = "0x12D3B70", VA = "0x12D3B70")]
		public static int UPvr_GetPsensorState()
		{
			return default(int);
		}

		[Token(Token = "0x6001311")]
		[Address(RVA = "0x12D3DD0", Offset = "0x12D3DD0", VA = "0x12D3DD0")]
		public static int UPvr_GetPSensorStatus()
		{
			return default(int);
		}

		[Token(Token = "0x6001312")]
		[Address(RVA = "0x12D3DD4", Offset = "0x12D3DD4", VA = "0x12D3DD4")]
		public static void UPvr_UnregisterPsensor()
		{
		}

		[Token(Token = "0x6001313")]
		[Address(RVA = "0x12D3FCC", Offset = "0x12D3FCC", VA = "0x12D3FCC")]
		public static int UPvr_StartSensor(int index)
		{
			return default(int);
		}

		[Token(Token = "0x6001314")]
		[Address(RVA = "0x12D3FD0", Offset = "0x12D3FD0", VA = "0x12D3FD0")]
		public static int UPvr_StopSensor(int index)
		{
			return default(int);
		}

		[Token(Token = "0x6001315")]
		[Address(RVA = "0x12D3FD4", Offset = "0x12D3FD4", VA = "0x12D3FD4")]
		public static int UPvr_ResetSensor(int index)
		{
			return default(int);
		}

		[Token(Token = "0x6001316")]
		[Address(RVA = "0x12D4174", Offset = "0x12D4174", VA = "0x12D4174")]
		public static int UPvr_OptionalResetSensor(int index, int resetRot, int resetPos)
		{
			return default(int);
		}

		[Token(Token = "0x6001317")]
		[Address(RVA = "0x12D4178", Offset = "0x12D4178", VA = "0x12D4178")]
		public static int UPvr_GetSensorState(int index, ref float x, ref float y, ref float z, ref float w, ref float px, ref float py, ref float pz)
		{
			return default(int);
		}

		[Token(Token = "0x6001318")]
		[Address(RVA = "0x12D417C", Offset = "0x12D417C", VA = "0x12D417C")]
		public static int UPvr_GetMainSensorState(ref float x, ref float y, ref float z, ref float w, ref float px, ref float py, ref float pz, ref float vfov, ref float hfov, ref int viewNumber)
		{
			return default(int);
		}

		[Token(Token = "0x6001319")]
		[Address(RVA = "0x12D4188", Offset = "0x12D4188", VA = "0x12D4188")]
		public static int UPvr_GetSensorGyroscope(int index, ref float x, ref float y, ref float z)
		{
			return default(int);
		}

		[Token(Token = "0x600131A")]
		[Address(RVA = "0x12D418C", Offset = "0x12D418C", VA = "0x12D418C")]
		public static int UPvr_GetSensorMagnet(int index, ref float x, ref float y, ref float z)
		{
			return default(int);
		}

		[Token(Token = "0x600131B")]
		[Address(RVA = "0x12D4190", Offset = "0x12D4190", VA = "0x12D4190")]
		public static int UPvr_Get6DofSensorQualityStatus()
		{
			return default(int);
		}

		[Token(Token = "0x600131C")]
		[Address(RVA = "0x12D4194", Offset = "0x12D4194", VA = "0x12D4194")]
		public static int UPvr_Enable6DofModule(bool enable)
		{
			return default(int);
		}

		[Token(Token = "0x600131D")]
		[Address(RVA = "0x12D398C", Offset = "0x12D398C", VA = "0x12D398C")]
		public static void Pvr_InitPsensor()
		{
		}

		[Token(Token = "0x600131E")]
		[Address(RVA = "0x12D43AC", Offset = "0x12D43AC", VA = "0x12D43AC")]
		public static bool Pvr_IsHead6dofReset()
		{
			return default(bool);
		}

		[Token(Token = "0x600131F")]
		[Address(RVA = "0x12D3BC8", Offset = "0x12D3BC8", VA = "0x12D3BC8")]
		public static int Pvr_GetAndroidPsensorState()
		{
			return default(int);
		}

		[Token(Token = "0x6001320")]
		[Address(RVA = "0x12D3DD8", Offset = "0x12D3DD8", VA = "0x12D3DD8")]
		public static void Pvr_UnregisterPsensor()
		{
		}

		[Token(Token = "0x6001321")]
		[Address(RVA = "0x12D45D0", Offset = "0x12D45D0", VA = "0x12D45D0")]
		public static int UPvr_ResetSensorAll(int index)
		{
			return default(int);
		}

		[Token(Token = "0x6001322")]
		[Address(RVA = "0x12D45D4", Offset = "0x12D45D4", VA = "0x12D45D4")]
		public static void UPvr_SetReinPosition(float x, float y, float z, float w, float px, float py, float pz, int hand, bool valid, int key)
		{
		}

		[Token(Token = "0x6001323")]
		[Address(RVA = "0x12D49E0", Offset = "0x12D49E0", VA = "0x12D49E0")]
		public static bool UPvr_SetTrackingOriginType(TrackingOrigin trackingOriginType)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20002E3")]
	public struct Render
	{
		[Token(Token = "0x400126B")]
		public const string LibFileName = "Pvr_UnitySDK";

		[PreserveSig]
		[Token(Token = "0x6001324")]
		[Address(RVA = "0x10034B0", Offset = "0x10034B0", VA = "0x10034B0")]
		private static extern void Pvr_ChangeScreenParameters(string model, int width, int height, double xppi, double yppi, double densityDpi);

		[PreserveSig]
		[Token(Token = "0x6001325")]
		[Address(RVA = "0x1003580", Offset = "0x1003580", VA = "0x1003580")]
		private static extern int Pvr_SetRatio(float midH, float midV);

		[PreserveSig]
		[Token(Token = "0x6001326")]
		[Address(RVA = "0x100360C", Offset = "0x100360C", VA = "0x100360C")]
		private static extern int Pvr_SetPupillaryPoint(bool enable);

		[PreserveSig]
		[Token(Token = "0x6001327")]
		[Address(RVA = "0x100368C", Offset = "0x100368C", VA = "0x100368C")]
		private static extern IntPtr Pvr_GetSupportHMDTypes();

		[PreserveSig]
		[Token(Token = "0x6001328")]
		[Address(RVA = "0x1003700", Offset = "0x1003700", VA = "0x1003700")]
		private static extern void Pvr_SetCurrentHMDType(string type);

		[PreserveSig]
		[Token(Token = "0x6001329")]
		[Address(RVA = "0x1003790", Offset = "0x1003790", VA = "0x1003790")]
		private static extern int Pvr_GetIntConfig(int configsenum, ref int res);

		[PreserveSig]
		[Token(Token = "0x600132A")]
		[Address(RVA = "0x100381C", Offset = "0x100381C", VA = "0x100381C")]
		private static extern int Pvr_GetFloatConfig(int configsenum, ref float res);

		[PreserveSig]
		[Token(Token = "0x600132B")]
		[Address(RVA = "0x10038A8", Offset = "0x10038A8", VA = "0x10038A8")]
		private static extern void Pvr_SetupLayerData(int layerIndex, int sideMask, int textureId, int textureType, int layerFlags, float[] colorScaleAndOffset);

		[PreserveSig]
		[Token(Token = "0x600132C")]
		[Address(RVA = "0x1003970", Offset = "0x1003970", VA = "0x1003970")]
		private static extern void Pvr_SetupLayerCoords(int layerIndex, int sideMask, float[] lowerLeft, float[] lowerRight, float[] upperLeft, float[] upperRight);

		[PreserveSig]
		[Token(Token = "0x600132D")]
		[Address(RVA = "0x1003A50", Offset = "0x1003A50", VA = "0x1003A50")]
		private static extern void Pvr_SetOverlayModelViewMatrix(int overlayType, int overlayShape, int texId, int eyeSide, int layerIndex, bool isHeadLocked, int layerFlags, float[] mvMatrix, float[] modelS, float[] modelR, float[] modelT, float[] cameraR, float[] cameraT, float[] colorScaleAndOffset);

		[PreserveSig]
		[Token(Token = "0x600132E")]
		[Address(RVA = "0x1003B8C", Offset = "0x1003B8C", VA = "0x1003B8C")]
		private static extern bool Pvr_EnableFoveation(bool enable);

		[PreserveSig]
		[Token(Token = "0x600132F")]
		[Address(RVA = "0x1003C14", Offset = "0x1003C14", VA = "0x1003C14")]
		private static extern void Pvr_SetFoveationParameters(int textureId, int previousId, float focalPointX, float focalPointY, float foveationGainX, float foveationGainY, float foveationArea, float foveationMinimum);

		[PreserveSig]
		[Token(Token = "0x6001330")]
		[Address(RVA = "0x1003CEC", Offset = "0x1003CEC", VA = "0x1003CEC")]
		private static extern void Pvr_SetFoveationResource(int textureId, int previousId, float focalPointX, float focalPointY);

		[PreserveSig]
		[Token(Token = "0x6001331")]
		[Address(RVA = "0x1003D94", Offset = "0x1003D94", VA = "0x1003D94")]
		private static extern void Pvr_SetFoveationParameters2(float foveationGainX, float foveationGainY, float foveationArea, float foveationMinimum);

		[PreserveSig]
		[Token(Token = "0x6001332")]
		[Address(RVA = "0x1003E38", Offset = "0x1003E38", VA = "0x1003E38")]
		private static extern void Pvr_SetFoveationLevel(EFoveationLevel level);

		[PreserveSig]
		[Token(Token = "0x6001333")]
		[Address(RVA = "0x1003EB8", Offset = "0x1003EB8", VA = "0x1003EB8")]
		private static extern EFoveationLevel Pvr_GetFoveationLevel();

		[PreserveSig]
		[Token(Token = "0x6001334")]
		[Address(RVA = "0x1003F2C", Offset = "0x1003F2C", VA = "0x1003F2C")]
		private static extern bool Pvr_GetIntSysProc(string property, ref int res);

		[PreserveSig]
		[Token(Token = "0x6001335")]
		[Address(RVA = "0x1003FD8", Offset = "0x1003FD8", VA = "0x1003FD8")]
		private static extern void Pvr_SetColorspaceType(int colorspaceType);

		[PreserveSig]
		[Token(Token = "0x6001336")]
		[Address(RVA = "0x1004058", Offset = "0x1004058", VA = "0x1004058")]
		private static extern void Pvr_SetCastingColorspaceType(int colorspaceType);

		[PreserveSig]
		[Token(Token = "0x6001337")]
		[Address(RVA = "0x10040D8", Offset = "0x10040D8", VA = "0x10040D8")]
		private static extern IntPtr Pvr_CreateLayerAndroidSurface(int layerType, int layerIndex);

		[PreserveSig]
		[Token(Token = "0x6001338")]
		[Address(RVA = "0x1004168", Offset = "0x1004168", VA = "0x1004168")]
		private static extern IntPtr Pvr_GetLayerAndroidSurface(int layerType, int layerIndex);

		[PreserveSig]
		[Token(Token = "0x6001339")]
		[Address(RVA = "0x10041F8", Offset = "0x10041F8", VA = "0x10041F8")]
		private static extern void Pvr_SetMonoMode(bool openMono);

		[PreserveSig]
		[Token(Token = "0x600133A")]
		[Address(RVA = "0x1004278", Offset = "0x1004278", VA = "0x1004278")]
		private static extern void Pvr_GetStencilMesh(int eye, ref int vertexCount, ref int triangleCount, ref IntPtr vertexData, ref IntPtr indexData);

		[Token(Token = "0x600133B")]
		[Address(RVA = "0x1004328", Offset = "0x1004328", VA = "0x1004328")]
		public static void UPvr_ChangeScreenParameters(string model, int width, int height, double xppi, double yppi, double densityDpi)
		{
		}

		[Token(Token = "0x600133C")]
		[Address(RVA = "0x100432C", Offset = "0x100432C", VA = "0x100432C")]
		public static int UPvr_SetRatio(float midH, float midV)
		{
			return default(int);
		}

		[Token(Token = "0x600133D")]
		[Address(RVA = "0x1004330", Offset = "0x1004330", VA = "0x1004330")]
		public static void UPvr_EnableFoveation(bool enable)
		{
		}

		[Token(Token = "0x600133E")]
		[Address(RVA = "0x10043E4", Offset = "0x10043E4", VA = "0x10043E4")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x8C97D8", Offset = "0x8C97D8")]
		public static void UPvr_SetFoveationParameters(int textureId, int previousId, float focalPointX, float focalPointY, float foveationGainX, float foveationGainY, float foveationArea, float foveationMinimum)
		{
		}

		[Token(Token = "0x600133F")]
		[Address(RVA = "0x10043E8", Offset = "0x10043E8", VA = "0x10043E8")]
		public static void UPvr_SetFoveationResource(int textureId, int previousId, float focalPointX, float focalPointY)
		{
		}

		[Token(Token = "0x6001340")]
		[Address(RVA = "0x10043EC", Offset = "0x10043EC", VA = "0x10043EC")]
		public static void SetFoveatedRenderingLevel(EFoveationLevel level)
		{
		}

		[Token(Token = "0x6001341")]
		[Address(RVA = "0x10044F0", Offset = "0x10044F0", VA = "0x10044F0")]
		public static EFoveationLevel GetFoveatedRenderingLevel()
		{
			return default(EFoveationLevel);
		}

		[Token(Token = "0x6001342")]
		[Address(RVA = "0x10044F4", Offset = "0x10044F4", VA = "0x10044F4")]
		public static void SetFoveatedRenderingParameters(UnityEngine.Vector2 ffrGainValue, float ffrAreaValue, float ffrMinimumValue)
		{
		}

		[Token(Token = "0x6001343")]
		[Address(RVA = "0x1004630", Offset = "0x1004630", VA = "0x1004630")]
		public static bool UPvr_GetIntSysProc(string property, ref int res)
		{
			return default(bool);
		}

		[Token(Token = "0x6001344")]
		[Address(RVA = "0x1004634", Offset = "0x1004634", VA = "0x1004634")]
		public static int UPvr_GetIntConfig(int configsenum, ref int res)
		{
			return default(int);
		}

		[Token(Token = "0x6001345")]
		[Address(RVA = "0x1004638", Offset = "0x1004638", VA = "0x1004638")]
		public static int UPvr_GetFloatConfig(int configsenum, ref float res)
		{
			return default(int);
		}

		[Token(Token = "0x6001346")]
		[Address(RVA = "0x100463C", Offset = "0x100463C", VA = "0x100463C")]
		public static string UPvr_GetSupportHMDTypes()
		{
			return null;
		}

		[Token(Token = "0x6001347")]
		[Address(RVA = "0x10046C8", Offset = "0x10046C8", VA = "0x10046C8")]
		public static void UPvr_SetCurrentHMDType(string type)
		{
		}

		[Token(Token = "0x6001348")]
		[Address(RVA = "0x10046CC", Offset = "0x10046CC", VA = "0x10046CC")]
		public static void UPvr_SetupLayerData(int layerIndex, int sideMask, int textureId, int textureType, int layerFlags, Vector4 colorScale, Vector4 colorOffset)
		{
		}

		[Token(Token = "0x6001349")]
		[Address(RVA = "0x100480C", Offset = "0x100480C", VA = "0x100480C")]
		public static void UPvr_SetupLayerCoords(int layerIndex, int sideMask, float[] lowerLeft, float[] lowerRight, float[] upperLeft, float[] upperRight)
		{
		}

		[Token(Token = "0x600134A")]
		[Address(RVA = "0x1004810", Offset = "0x1004810", VA = "0x1004810")]
		public static void UPvr_SetOverlayModelViewMatrix(int overlayType, int overlayShape, int texId, int eyeSide, int layerIndex, bool isHeadLocked, int layerFlags, Matrix4x4 mvMatrix, UnityEngine.Vector3 modelS, Quaternion modelR, UnityEngine.Vector3 modelT, Quaternion cameraR, UnityEngine.Vector3 cameraT, Vector4 colorScale, Vector4 colorOffset)
		{
		}

		[Token(Token = "0x600134B")]
		[Address(RVA = "0x1004CDC", Offset = "0x1004CDC", VA = "0x1004CDC")]
		public static void UPvr_SetColorspaceType(int colorspaceType)
		{
		}

		[Token(Token = "0x600134C")]
		[Address(RVA = "0x1004CE0", Offset = "0x1004CE0", VA = "0x1004CE0")]
		public static void UPvr_SetCastingColorspaceType(int colorspaceType)
		{
		}

		[Token(Token = "0x600134D")]
		[Address(RVA = "0x1004CE4", Offset = "0x1004CE4", VA = "0x1004CE4")]
		public static IntPtr UPvr_CreateLayerAndroidSurface(int layerType, int layerIndex)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x600134E")]
		[Address(RVA = "0x1004CE8", Offset = "0x1004CE8", VA = "0x1004CE8")]
		public static IntPtr UPvr_GetLayerAndroidSurface(int layerType, int layerIndex)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x600134F")]
		[Address(RVA = "0x1004CEC", Offset = "0x1004CEC", VA = "0x1004CEC")]
		public static void UPvr_SetMonoMode(bool openMono)
		{
		}

		[Token(Token = "0x6001350")]
		[Address(RVA = "0xFF6E04", Offset = "0xFF6E04", VA = "0xFF6E04")]
		public static void UPvr_GetStencilMesh(int eye, ref int vertexCount, ref int triangleCount, ref IntPtr vertexDataPtr, ref IntPtr indexDataPtr)
		{
		}
	}
	[Token(Token = "0x20002E4")]
	public struct System
	{
		[Token(Token = "0x400126C")]
		public const string LibFileName = "Pvr_UnitySDK";

		[Token(Token = "0x400126D")]
		public const string UnitySDKVersion = "2.8.9.12";

		[PreserveSig]
		[Token(Token = "0x6001351")]
		[Address(RVA = "0x12D49E4", Offset = "0x12D49E4", VA = "0x12D49E4")]
		public static extern void Pvr_SetInitActivity(IntPtr activity, IntPtr vrActivityClass);

		[PreserveSig]
		[Token(Token = "0x6001352")]
		[Address(RVA = "0x12D4A74", Offset = "0x12D4A74", VA = "0x12D4A74")]
		private static extern IntPtr Pvr_GetSDKVersion();

		[PreserveSig]
		[Token(Token = "0x6001353")]
		[Address(RVA = "0x12D4AE8", Offset = "0x12D4AE8", VA = "0x12D4AE8")]
		public static extern int Pvr_GetHmdHardwareVersion();

		[PreserveSig]
		[Token(Token = "0x6001354")]
		[Address(RVA = "0x12D4B5C", Offset = "0x12D4B5C", VA = "0x12D4B5C")]
		public static extern IntPtr Pvr_GetHmdFirmwareVersion();

		[PreserveSig]
		[Token(Token = "0x6001355")]
		[Address(RVA = "0x12D4BD0", Offset = "0x12D4BD0", VA = "0x12D4BD0")]
		public static extern IntPtr Pvr_GetHmdSerialNumber();

		[PreserveSig]
		[Token(Token = "0x6001356")]
		[Address(RVA = "0x12D4C44", Offset = "0x12D4C44", VA = "0x12D4C44")]
		public static extern int PVR_GetHmdBatteryStatus();

		[PreserveSig]
		[Token(Token = "0x6001357")]
		[Address(RVA = "0x12D4CB8", Offset = "0x12D4CB8", VA = "0x12D4CB8")]
		public static extern float PVR_GetHmdBatteryTemperature();

		[PreserveSig]
		[Token(Token = "0x6001358")]
		[Address(RVA = "0x12D4D28", Offset = "0x12D4D28", VA = "0x12D4D28")]
		public static extern int PVR_SetHmdAudioStatus(bool enable);

		[PreserveSig]
		[Token(Token = "0x6001359")]
		[Address(RVA = "0x12D4DA8", Offset = "0x12D4DA8", VA = "0x12D4DA8")]
		public static extern bool Pvr_GetEyeTrackingData(ref int leftEyePoseStatus, ref int rightEyePoseStatus, ref int combinedEyePoseStatus, ref float leftEyeGazePointX, ref float leftEyeGazePointY, ref float leftEyeGazePointZ, ref float rightEyeGazePointX, ref float rightEyeGazePointY, ref float rightEyeGazePointZ, ref float combinedEyeGazePointX, ref float combinedEyeGazePointY, ref float combinedEyeGazePointZ, ref float leftEyeGazeVectorX, ref float leftEyeGazeVectorY, ref float leftEyeGazeVectorZ, ref float rightEyeGazeVectorX, ref float rightEyeGazeVectorY, ref float rightEyeGazeVectorZ, ref float combinedEyeGazeVectorX, ref float combinedEyeGazeVectorY, ref float combinedEyeGazeVectorZ, ref float leftEyeOpenness, ref float rightEyeOpenness, ref float leftEyePupilDilation, ref float rightEyePupilDilation, ref float leftEyePositionGuideX, ref float leftEyePositionGuideY, ref float leftEyePositionGuideZ, ref float rightEyePositionGuideX, ref float rightEyePositionGuideY, ref float rightEyePositionGuideZ, ref float foveatedGazeDirectionX, ref float foveatedGazeDirectionY, ref float foveatedGazeDirectionZ, ref int foveatedGazeTrackingState);

		[PreserveSig]
		[Token(Token = "0x600135A")]
		[Address(RVA = "0x12D4F98", Offset = "0x12D4F98", VA = "0x12D4F98")]
		public static extern bool Pvr_SetTrackingMode(int trackingMode);

		[PreserveSig]
		[Token(Token = "0x600135B")]
		[Address(RVA = "0x12D5020", Offset = "0x12D5020", VA = "0x12D5020")]
		public static extern int Pvr_GetTrackingMode();

		[PreserveSig]
		[Token(Token = "0x600135C")]
		[Address(RVA = "0x12D5094", Offset = "0x12D5094", VA = "0x12D5094")]
		public static extern IntPtr GetRenderEventFunc();

		[PreserveSig]
		[Token(Token = "0x600135D")]
		[Address(RVA = "0x12D5108", Offset = "0x12D5108", VA = "0x12D5108")]
		public static extern void UnityEventData(long data);

		[PreserveSig]
		[Token(Token = "0x600135E")]
		[Address(RVA = "0x12D5188", Offset = "0x12D5188", VA = "0x12D5188")]
		public static extern bool Pvr_EnableSinglePass(bool enable);

		[PreserveSig]
		[Token(Token = "0x600135F")]
		[Address(RVA = "0x12D5210", Offset = "0x12D5210", VA = "0x12D5210")]
		public static extern void Pvr_SetAntiAliasing(int antiAliasing);

		[PreserveSig]
		[Token(Token = "0x6001360")]
		[Address(RVA = "0x12D5290", Offset = "0x12D5290", VA = "0x12D5290")]
		public static extern void Pvr_SinglePassBeforeForwardOpaque();

		[PreserveSig]
		[Token(Token = "0x6001361")]
		[Address(RVA = "0x12D5300", Offset = "0x12D5300", VA = "0x12D5300")]
		public static extern void Pvr_SetCurrentRenderTexture(uint textureId);

		[PreserveSig]
		[Token(Token = "0x6001362")]
		[Address(RVA = "0x12D5380", Offset = "0x12D5380", VA = "0x12D5380")]
		public static extern bool Pvr_SetSinglePassDepthBufferWidthHeight(int width, int height);

		[PreserveSig]
		[Token(Token = "0x6001363")]
		[Address(RVA = "0x12D5418", Offset = "0x12D5418", VA = "0x12D5418")]
		public static extern int PVR_setPerformanceLevels(int cpuLevel, int gpuLevel);

		[PreserveSig]
		[Token(Token = "0x6001364")]
		[Address(RVA = "0x12D54A8", Offset = "0x12D54A8", VA = "0x12D54A8")]
		public static extern bool Pvr_SetIPD(float distance);

		[PreserveSig]
		[Token(Token = "0x6001365")]
		[Address(RVA = "0x12D5538", Offset = "0x12D5538", VA = "0x12D5538")]
		public static extern float Pvr_GetIPD();

		[PreserveSig]
		[Token(Token = "0x6001366")]
		[Address(RVA = "0x12D55A8", Offset = "0x12D55A8", VA = "0x12D55A8")]
		public static extern bool Pvr_SetTrackingIPDEnabled(bool enable);

		[PreserveSig]
		[Token(Token = "0x6001367")]
		[Address(RVA = "0x12D5630", Offset = "0x12D5630", VA = "0x12D5630")]
		public static extern bool Pvr_GetTrackingIPDEnabled();

		[PreserveSig]
		[Token(Token = "0x6001368")]
		[Address(RVA = "0x12D56AC", Offset = "0x12D56AC", VA = "0x12D56AC")]
		public static extern bool Pvr_GetEyeTrackingAutoIPD(ref float autoIPD);

		[PreserveSig]
		[Token(Token = "0x6001369")]
		[Address(RVA = "0x12D5734", Offset = "0x12D5734", VA = "0x12D5734")]
		public static extern int PVR_GetHmdAudioStatus();

		[Token(Token = "0x600136A")]
		public static bool UPvr_CallStaticMethod<T>(ref T result, AndroidJavaClass jclass, string name, params object[] args)
		{
			return default(bool);
		}

		[Token(Token = "0x600136B")]
		[Address(RVA = "0x12D419C", Offset = "0x12D419C", VA = "0x12D419C")]
		public static bool UPvr_CallStaticMethod(AndroidJavaObject jobj, string name, params object[] args)
		{
			return default(bool);
		}

		[Token(Token = "0x600136C")]
		public static bool UPvr_CallMethod<T>(ref T result, AndroidJavaObject jobj, string name, params object[] args)
		{
			return default(bool);
		}

		[Token(Token = "0x600136D")]
		[Address(RVA = "0x12D57A8", Offset = "0x12D57A8", VA = "0x12D57A8")]
		public static bool UPvr_CallMethod(AndroidJavaObject jobj, string name, params object[] args)
		{
			return default(bool);
		}

		[Token(Token = "0x600136E")]
		[Address(RVA = "0x12D59B8", Offset = "0x12D59B8", VA = "0x12D59B8")]
		public static string UPvr_GetSDKVersion()
		{
			return null;
		}

		[Token(Token = "0x600136F")]
		[Address(RVA = "0x12D5A4C", Offset = "0x12D5A4C", VA = "0x12D5A4C")]
		public static string UPvr_GetUnitySDKVersion()
		{
			return null;
		}

		[Token(Token = "0x6001370")]
		[Address(RVA = "0x12D5A94", Offset = "0x12D5A94", VA = "0x12D5A94")]
		public static string UPvr_GetDeviceMode()
		{
			return null;
		}

		[Token(Token = "0x6001371")]
		[Address(RVA = "0x12D5A9C", Offset = "0x12D5A9C", VA = "0x12D5A9C")]
		public static string UPvr_GetDeviceModel()
		{
			return null;
		}

		[Token(Token = "0x6001372")]
		[Address(RVA = "0x12D5AA4", Offset = "0x12D5AA4", VA = "0x12D5AA4")]
		public static string UPvr_GetDeviceSN()
		{
			return null;
		}

		[Token(Token = "0x6001373")]
		[Address(RVA = "0x12D5BD8", Offset = "0x12D5BD8", VA = "0x12D5BD8")]
		public static AndroidJavaObject UPvr_GetCurrentActivity()
		{
			return null;
		}

		[Token(Token = "0x6001374")]
		[Address(RVA = "0x12D5C60", Offset = "0x12D5C60", VA = "0x12D5C60")]
		public static bool UPvr_SetMonoPresentation()
		{
			return default(bool);
		}

		[Token(Token = "0x6001375")]
		[Address(RVA = "0x12D5D48", Offset = "0x12D5D48", VA = "0x12D5D48")]
		public static bool UPvr_IsPresentationExisted()
		{
			return default(bool);
		}

		[Token(Token = "0x6001376")]
		[Address(RVA = "0x12D5E54", Offset = "0x12D5E54", VA = "0x12D5E54")]
		public static bool UPvr_GetMainActivityPauseStatus()
		{
			return default(bool);
		}

		[Token(Token = "0x6001377")]
		[Address(RVA = "0x12D5F60", Offset = "0x12D5F60", VA = "0x12D5F60")]
		public static void UPvr_Sleep()
		{
		}

		[Token(Token = "0x6001378")]
		[Address(RVA = "0x12D606C", Offset = "0x12D606C", VA = "0x12D606C")]
		public static bool UPvr_StartHomeKeyReceiver(string startreceivre)
		{
			return default(bool);
		}

		[Token(Token = "0x6001379")]
		[Address(RVA = "0x12D62F4", Offset = "0x12D62F4", VA = "0x12D62F4")]
		public static bool UPvr_StopHomeKeyReceiver()
		{
			return default(bool);
		}

		[Token(Token = "0x600137A")]
		[Address(RVA = "0x12D6534", Offset = "0x12D6534", VA = "0x12D6534")]
		public static void UPvr_StartVRModel()
		{
		}

		[Token(Token = "0x600137B")]
		[Address(RVA = "0x12D6640", Offset = "0x12D6640", VA = "0x12D6640")]
		public static void UPvr_RemovePlatformLogo()
		{
		}

		[Token(Token = "0x600137C")]
		[Address(RVA = "0x12D674C", Offset = "0x12D674C", VA = "0x12D674C")]
		public static void UPvr_ShowPlatformLogo()
		{
		}

		[Token(Token = "0x600137D")]
		[Address(RVA = "0x12D6858", Offset = "0x12D6858", VA = "0x12D6858")]
		public static bool UPvr_IsPicoActivity()
		{
			return default(bool);
		}

		[Token(Token = "0x600137E")]
		[Address(RVA = "0x12D6964", Offset = "0x12D6964", VA = "0x12D6964")]
		public static void UPvr_StopVRModel()
		{
		}

		[Token(Token = "0x600137F")]
		[Address(RVA = "0x12D6A70", Offset = "0x12D6A70", VA = "0x12D6A70")]
		public static string UPvr_GetCountryCode()
		{
			return null;
		}

		[Token(Token = "0x6001380")]
		[Address(RVA = "0x12D6B80", Offset = "0x12D6B80", VA = "0x12D6B80")]
		public static bool UPvr_SetIPD(float distance)
		{
			return default(bool);
		}

		[Token(Token = "0x6001381")]
		[Address(RVA = "0x12D6FB0", Offset = "0x12D6FB0", VA = "0x12D6FB0")]
		public static float UPvr_GetIPD()
		{
			return default(float);
		}

		[Token(Token = "0x6001382")]
		[Address(RVA = "0x12D7070", Offset = "0x12D7070", VA = "0x12D7070")]
		public static bool UPvr_SetTrackingIPDEnabled(bool enable)
		{
			return default(bool);
		}

		[Token(Token = "0x6001383")]
		[Address(RVA = "0x12D7078", Offset = "0x12D7078", VA = "0x12D7078")]
		public static bool UPvr_GetTrackingIPDEnabled()
		{
			return default(bool);
		}

		[Token(Token = "0x6001384")]
		[Address(RVA = "0x12D707C", Offset = "0x12D707C", VA = "0x12D707C")]
		public static bool UPvr_GetEyeTrackingAutoIPD(ref float autoipd)
		{
			return default(bool);
		}

		[Token(Token = "0x6001385")]
		[Address(RVA = "0x12D7080", Offset = "0x12D7080", VA = "0x12D7080")]
		public static void UPvr_UnityEventData(long data)
		{
		}

		[Token(Token = "0x6001386")]
		[Address(RVA = "0x12D7084", Offset = "0x12D7084", VA = "0x12D7084")]
		public static long UPvr_GetEyeBufferData(int id)
		{
			return default(long);
		}

		[Token(Token = "0x6001387")]
		[Address(RVA = "0x12D7100", Offset = "0x12D7100", VA = "0x12D7100")]
		public static bool UPvr_checkDevice(string packagename)
		{
			return default(bool);
		}

		[Token(Token = "0x6001388")]
		[Address(RVA = "0x12D7230", Offset = "0x12D7230", VA = "0x12D7230")]
		public static int UPvr_GetHmdHardwareVersion()
		{
			return default(int);
		}

		[Token(Token = "0x6001389")]
		[Address(RVA = "0x12D7234", Offset = "0x12D7234", VA = "0x12D7234")]
		public static string UPvr_GetHmdFirmwareVersion()
		{
			return null;
		}

		[Token(Token = "0x600138A")]
		[Address(RVA = "0x12D72C8", Offset = "0x12D72C8", VA = "0x12D72C8")]
		public static string UPvr_GetHmdSerialNumber()
		{
			return null;
		}

		[Token(Token = "0x600138B")]
		[Address(RVA = "0x12D735C", Offset = "0x12D735C", VA = "0x12D735C")]
		public static int UPvr_GetHmdBatteryStatus()
		{
			return default(int);
		}

		[Token(Token = "0x600138C")]
		[Address(RVA = "0x12D7360", Offset = "0x12D7360", VA = "0x12D7360")]
		public static float UPvr_GetHmdBatteryTemperature()
		{
			return default(float);
		}

		[Token(Token = "0x600138D")]
		[Address(RVA = "0x12D7364", Offset = "0x12D7364", VA = "0x12D7364")]
		public static int UPvr_SetHmdAudioStatus(bool enable)
		{
			return default(int);
		}

		[Token(Token = "0x600138E")]
		[Address(RVA = "0x12D736C", Offset = "0x12D736C", VA = "0x12D736C")]
		public static int UPvr_GetTrackingMode()
		{
			return default(int);
		}

		[Token(Token = "0x600138F")]
		[Address(RVA = "0x12D7370", Offset = "0x12D7370", VA = "0x12D7370")]
		public static bool UPvr_setTrackingMode(int trackingMode)
		{
			return default(bool);
		}

		[Token(Token = "0x6001390")]
		[Address(RVA = "0x12D7374", Offset = "0x12D7374", VA = "0x12D7374")]
		public static bool UPvr_getEyeTrackingData(ref EyeTrackingData trackingData)
		{
			return default(bool);
		}

		[Token(Token = "0x6001391")]
		[Address(RVA = "0x12D75DC", Offset = "0x12D75DC", VA = "0x12D75DC")]
		public static bool UPvr_getEyeTrackingGazeRay(ref EyeTrackingGazeRay gazeRay)
		{
			return default(bool);
		}

		[Token(Token = "0x6001392")]
		[Address(RVA = "0x12D7808", Offset = "0x12D7808", VA = "0x12D7808")]
		public static bool UPvr_getEyeTrackingGazeRayWorld(ref EyeTrackingGazeRay gazeRay)
		{
			return default(bool);
		}

		[Token(Token = "0x6001393")]
		[Address(RVA = "0x12D7AD8", Offset = "0x12D7AD8", VA = "0x12D7AD8")]
		public static UnityEngine.Vector3 UPvr_getEyeTrackingPos()
		{
			return default(UnityEngine.Vector3);
		}

		[Token(Token = "0x6001394")]
		[Address(RVA = "0x12D7E48", Offset = "0x12D7E48", VA = "0x12D7E48")]
		public static int UPvr_GetPhoneScreenBrightness()
		{
			return default(int);
		}

		[Token(Token = "0x6001395")]
		[Address(RVA = "0x12D7F4C", Offset = "0x12D7F4C", VA = "0x12D7F4C")]
		public static void UPvr_SetPhoneScreenBrightness(int level)
		{
		}

		[Token(Token = "0x6001396")]
		[Address(RVA = "0x12D8088", Offset = "0x12D8088", VA = "0x12D8088")]
		public static bool UPvr_IsPicoDefaultActivity()
		{
			return default(bool);
		}

		[Token(Token = "0x6001397")]
		[Address(RVA = "0x12D83A8", Offset = "0x12D83A8", VA = "0x12D83A8")]
		public static bool UPvr_EnableSinglePass(bool enable)
		{
			return default(bool);
		}

		[Token(Token = "0x6001398")]
		[Address(RVA = "0x12D83B0", Offset = "0x12D83B0", VA = "0x12D83B0")]
		public static void UPvr_SetAntiAliasing(int antiAliasing)
		{
		}

		[Token(Token = "0x6001399")]
		[Address(RVA = "0x12D83B4", Offset = "0x12D83B4", VA = "0x12D83B4")]
		public static void UPvr_SinglePassBeforeForwardOpaque()
		{
		}

		[Token(Token = "0x600139A")]
		[Address(RVA = "0x12D83B8", Offset = "0x12D83B8", VA = "0x12D83B8")]
		public static void UPvr_SetCurrentRenderTexture(uint textureId)
		{
		}

		[Token(Token = "0x600139B")]
		[Address(RVA = "0x12D83BC", Offset = "0x12D83BC", VA = "0x12D83BC")]
		public static bool UPvr_SetSinglePassDepthBufferWidthHeight(int width, int height)
		{
			return default(bool);
		}

		[Token(Token = "0x600139C")]
		[Address(RVA = "0x12D83C0", Offset = "0x12D83C0", VA = "0x12D83C0")]
		public static int UPVR_setPerformanceLevels(int cpuLevel, int gpuLevel)
		{
			return default(int);
		}

		[Token(Token = "0x600139D")]
		[Address(RVA = "0x12D83C4", Offset = "0x12D83C4", VA = "0x12D83C4")]
		public static int UPvr_GetColorRes(string name)
		{
			return default(int);
		}

		[Token(Token = "0x600139E")]
		[Address(RVA = "0x12D85A8", Offset = "0x12D85A8", VA = "0x12D85A8")]
		public static int UPvr_GetConfigInt(string name)
		{
			return default(int);
		}

		[Token(Token = "0x600139F")]
		[Address(RVA = "0x12D878C", Offset = "0x12D878C", VA = "0x12D878C")]
		public static string UPvr_GetConfigString(string name)
		{
			return null;
		}

		[Token(Token = "0x60013A0")]
		[Address(RVA = "0x12D8978", Offset = "0x12D8978", VA = "0x12D8978")]
		public static string UPvr_GetDrawableLocation(string name)
		{
			return null;
		}

		[Token(Token = "0x60013A1")]
		[Address(RVA = "0x12D8B64", Offset = "0x12D8B64", VA = "0x12D8B64")]
		public static int UPvr_GetTextSize(string name)
		{
			return default(int);
		}

		[Token(Token = "0x60013A2")]
		[Address(RVA = "0x12D8D48", Offset = "0x12D8D48", VA = "0x12D8D48")]
		public static string UPvr_GetLangString(string name)
		{
			return null;
		}

		[Token(Token = "0x60013A3")]
		[Address(RVA = "0x12D8F34", Offset = "0x12D8F34", VA = "0x12D8F34")]
		public static string UPvr_GetStringValue(string id, int type)
		{
			return null;
		}

		[Token(Token = "0x60013A4")]
		[Address(RVA = "0x12D918C", Offset = "0x12D918C", VA = "0x12D918C")]
		public static int UPvr_GetIntValue(string id, int type)
		{
			return default(int);
		}

		[Token(Token = "0x60013A5")]
		[Address(RVA = "0x12D93DC", Offset = "0x12D93DC", VA = "0x12D93DC")]
		public static float UPvr_GetFloatValue(string id)
		{
			return default(float);
		}

		[Token(Token = "0x60013A6")]
		[Address(RVA = "0x12D95C0", Offset = "0x12D95C0", VA = "0x12D95C0")]
		public static string UPvr_GetObjectOrArray(string id, int type)
		{
			return null;
		}

		[Token(Token = "0x60013A7")]
		[Address(RVA = "0x12D9818", Offset = "0x12D9818", VA = "0x12D9818")]
		public static int UPvr_GetCharSpace(string id)
		{
			return default(int);
		}
	}
	[Token(Token = "0x20002E5")]
	public struct BoundarySystem
	{
		[Token(Token = "0x200081E")]
		public enum BoundaryType
		{
			[Token(Token = "0x4002831")]
			OuterBoundary,
			[Token(Token = "0x4002832")]
			PlayArea
		}

		[Token(Token = "0x200081F")]
		public struct BoundaryTestResult
		{
			[Token(Token = "0x4002833")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public bool IsTriggering;

			[Token(Token = "0x4002834")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public float ClosestDistance;

			[Token(Token = "0x4002835")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public UnityEngine.Vector3 ClosestPoint;

			[Token(Token = "0x4002836")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public UnityEngine.Vector3 ClosestPointNormal;
		}

		[Token(Token = "0x2000820")]
		public enum BoundaryTrackingNode
		{
			[Token(Token = "0x4002838")]
			HandLeft,
			[Token(Token = "0x4002839")]
			HandRight,
			[Token(Token = "0x400283A")]
			Head
		}

		[Token(Token = "0x2000821")]
		public enum BoundaryTrackingState
		{
			[Token(Token = "0x400283C")]
			PVR_NOREASON,
			[Token(Token = "0x400283D")]
			PVRRELOCATION_IN_PROGRESS,
			[Token(Token = "0x400283E")]
			PVRLOW_FEATURE_COUNT_ERROR,
			[Token(Token = "0x400283F")]
			PVRLOW_LIGHT_ERROR,
			[Token(Token = "0x4002840")]
			PVRBRIGHT_LIGHT_ERROR,
			[Token(Token = "0x4002841")]
			PVRSTEREO_CAMERA_CALIBRATION_ERROR
		}

		[Token(Token = "0x400126E")]
		public const string LibFileName = "Pvr_UnitySDK";

		[PreserveSig]
		[Token(Token = "0x60013A8")]
		[Address(RVA = "0xFFD160", Offset = "0xFFD160", VA = "0xFFD160")]
		private static extern float Pvr_GetFloorHeight();

		[PreserveSig]
		[Token(Token = "0x60013A9")]
		[Address(RVA = "0xFFD1D0", Offset = "0xFFD1D0", VA = "0xFFD1D0")]
		private static extern int Pvr_GetSeeThroughState();

		[PreserveSig]
		[Token(Token = "0x60013AA")]
		[Address(RVA = "0xFFD244", Offset = "0xFFD244", VA = "0xFFD244")]
		private static extern void Pvr_BoundarySetSTBackground(bool value);

		[PreserveSig]
		[Token(Token = "0x60013AB")]
		[Address(RVA = "0xFFD2C4", Offset = "0xFFD2C4", VA = "0xFFD2C4")]
		private static extern int Pvr_GetTrackingState();

		[PreserveSig]
		[Token(Token = "0x60013AC")]
		[Address(RVA = "0xFFD338", Offset = "0xFFD338", VA = "0xFFD338")]
		private static extern bool Pvr_GetFrameRateLimit();

		[PreserveSig]
		[Token(Token = "0x60013AD")]
		[Address(RVA = "0xFFD3B4", Offset = "0xFFD3B4", VA = "0xFFD3B4")]
		private static extern bool Pvr_IsBoundaryEnable();

		[PreserveSig]
		[Token(Token = "0x60013AE")]
		[Address(RVA = "0xFFD430", Offset = "0xFFD430", VA = "0xFFD430")]
		private static extern bool Pvr_BoundaryGetConfigured();

		[PreserveSig]
		[Token(Token = "0x60013AF")]
		[Address(RVA = "0xFFD4AC", Offset = "0xFFD4AC", VA = "0xFFD4AC")]
		private static extern bool Pvr_BoundaryTestNode(int node, bool isPlayArea, ref bool isTriggering, ref float closestDistance, ref float px, ref float py, ref float pz, ref float nx, ref float ny, ref float nz);

		[PreserveSig]
		[Token(Token = "0x60013B0")]
		[Address(RVA = "0xFFD5B0", Offset = "0xFFD5B0", VA = "0xFFD5B0")]
		private static extern bool Pvr_BoundaryTestPoint(float x, float y, float z, bool isPlayArea, ref bool isTriggering, ref float closestDistance, ref float px, ref float py, ref float pz, ref float nx, ref float ny, ref float nz);

		[PreserveSig]
		[Token(Token = "0x60013B1")]
		[Address(RVA = "0xFFD6D8", Offset = "0xFFD6D8", VA = "0xFFD6D8")]
		private static extern int Pvr_BoundaryGetGeometry(out IntPtr handle, bool isPlayArea);

		[PreserveSig]
		[Token(Token = "0x60013B2")]
		[Address(RVA = "0xFFD764", Offset = "0xFFD764", VA = "0xFFD764")]
		private static extern int Pvr_BoundaryGetDimensions(ref float x, ref float y, ref float z, bool isPlayArea);

		[PreserveSig]
		[Token(Token = "0x60013B3")]
		[Address(RVA = "0xFFD80C", Offset = "0xFFD80C", VA = "0xFFD80C")]
		private static extern bool Pvr_BoundaryGetEnabled();

		[PreserveSig]
		[Token(Token = "0x60013B4")]
		[Address(RVA = "0xFFD888", Offset = "0xFFD888", VA = "0xFFD888")]
		private static extern void Pvr_BoundarySetVisible(bool value);

		[PreserveSig]
		[Token(Token = "0x60013B5")]
		[Address(RVA = "0xFFD908", Offset = "0xFFD908", VA = "0xFFD908")]
		private static extern bool Pvr_BoundaryGetVisible();

		[PreserveSig]
		[Token(Token = "0x60013B6")]
		[Address(RVA = "0xFFD984", Offset = "0xFFD984", VA = "0xFFD984")]
		private static extern bool Pvr_EnableLWRP(bool enable);

		[PreserveSig]
		[Token(Token = "0x60013B7")]
		[Address(RVA = "0xFFDA0C", Offset = "0xFFDA0C", VA = "0xFFDA0C")]
		private static extern bool Pvr_SetViewportSize(int w, int h);

		[PreserveSig]
		[Token(Token = "0x60013B8")]
		[Address(RVA = "0xFFDAA4", Offset = "0xFFDAA4", VA = "0xFFDAA4")]
		private static extern void Pvr_BoundarySetSeeThroughVisible(bool value);

		[PreserveSig]
		[Token(Token = "0x60013B9")]
		[Address(RVA = "0xFFDB24", Offset = "0xFFDB24", VA = "0xFFDB24")]
		private static extern void PVR_SetCameraImageRect(int width, int height);

		[PreserveSig]
		[Token(Token = "0x60013BA")]
		[Address(RVA = "0xFFDBB4", Offset = "0xFFDBB4", VA = "0xFFDBB4")]
		private static extern void Pvr_SetGuardianSystemDisable(bool value);

		[PreserveSig]
		[Token(Token = "0x60013BB")]
		[Address(RVA = "0xFFDC34", Offset = "0xFFDC34", VA = "0xFFDC34")]
		private static extern int Pvr_GetDialogState();

		[Token(Token = "0x60013BC")]
		[Address(RVA = "0xFFDCA8", Offset = "0xFFDCA8", VA = "0xFFDCA8")]
		public static float UPvr_GetFloorHeight()
		{
			return default(float);
		}

		[Token(Token = "0x60013BD")]
		[Address(RVA = "0xFFDCAC", Offset = "0xFFDCAC", VA = "0xFFDCAC")]
		public static int UPvr_GetSeeThroughState()
		{
			return default(int);
		}

		[Token(Token = "0x60013BE")]
		[Address(RVA = "0xFFDCB0", Offset = "0xFFDCB0", VA = "0xFFDCB0")]
		public static void UPvr_EnableSeeThroughManual(bool enable)
		{
		}

		[Token(Token = "0x60013BF")]
		[Address(RVA = "0xFFDCB8", Offset = "0xFFDCB8", VA = "0xFFDCB8")]
		public static BoundaryTrackingState UPvr_GetTrackingState()
		{
			return default(BoundaryTrackingState);
		}

		[Token(Token = "0x60013C0")]
		[Address(RVA = "0xFFDCBC", Offset = "0xFFDCBC", VA = "0xFFDCBC")]
		public static bool UPvr_GetFrameRateLimit()
		{
			return default(bool);
		}

		[Token(Token = "0x60013C1")]
		[Address(RVA = "0xFFDCC0", Offset = "0xFFDCC0", VA = "0xFFDCC0")]
		public static bool UPvr_IsBoundaryEnable()
		{
			return default(bool);
		}

		[Token(Token = "0x60013C2")]
		[Address(RVA = "0xFFDCC4", Offset = "0xFFDCC4", VA = "0xFFDCC4")]
		public static bool UPvr_BoundaryGetConfigured()
		{
			return default(bool);
		}

		[Token(Token = "0x60013C3")]
		[Address(RVA = "0xFFDCC8", Offset = "0xFFDCC8", VA = "0xFFDCC8")]
		public static BoundaryTestResult UPvr_BoundaryTestNode(BoundaryTrackingNode node, BoundaryType boundaryType)
		{
			return default(BoundaryTestResult);
		}

		[Token(Token = "0x60013C4")]
		[Address(RVA = "0xFFDE0C", Offset = "0xFFDE0C", VA = "0xFFDE0C")]
		public static BoundaryTestResult UPvr_BoundaryTestPoint(UnityEngine.Vector3 point, BoundaryType boundaryType)
		{
			return default(BoundaryTestResult);
		}

		[Token(Token = "0x60013C5")]
		[Address(RVA = "0xFFDF5C", Offset = "0xFFDF5C", VA = "0xFFDF5C")]
		public static UnityEngine.Vector3[] UPvr_BoundaryGetGeometry(BoundaryType boundaryType)
		{
			return null;
		}

		[Token(Token = "0x60013C6")]
		[Address(RVA = "0xFFE138", Offset = "0xFFE138", VA = "0xFFE138")]
		public static UnityEngine.Vector3 UPvr_BoundaryGetDimensions(BoundaryType boundaryType)
		{
			return default(UnityEngine.Vector3);
		}

		[Token(Token = "0x60013C7")]
		[Address(RVA = "0xFFE194", Offset = "0xFFE194", VA = "0xFFE194")]
		public static bool UPvr_BoundaryGetEnabled()
		{
			return default(bool);
		}

		[Token(Token = "0x60013C8")]
		[Address(RVA = "0xFFE198", Offset = "0xFFE198", VA = "0xFFE198")]
		public static void UPvr_BoundarySetVisible(bool value)
		{
		}

		[Token(Token = "0x60013C9")]
		[Address(RVA = "0xFFE1A0", Offset = "0xFFE1A0", VA = "0xFFE1A0")]
		public static bool UPvr_BoundaryGetVisible()
		{
			return default(bool);
		}

		[Token(Token = "0x60013CA")]
		[Address(RVA = "0xFFE1A4", Offset = "0xFFE1A4", VA = "0xFFE1A4")]
		public static bool UPvr_EnableLWRP(bool enable)
		{
			return default(bool);
		}

		[Token(Token = "0x60013CB")]
		[Address(RVA = "0xFFE1AC", Offset = "0xFFE1AC", VA = "0xFFE1AC")]
		public static bool UPvr_SetViewportSize(int width, int height)
		{
			return default(bool);
		}

		[Token(Token = "0x60013CC")]
		[Address(RVA = "0xFFE1B0", Offset = "0xFFE1B0", VA = "0xFFE1B0")]
		public static void UPvr_StartCameraFrame()
		{
		}

		[Token(Token = "0x60013CD")]
		[Address(RVA = "0xFFE2F4", Offset = "0xFFE2F4", VA = "0xFFE2F4")]
		public static void UPvr_StopCameraFrame()
		{
		}

		[Token(Token = "0x60013CE")]
		[Address(RVA = "0xFFE438", Offset = "0xFFE438", VA = "0xFFE438")]
		public static void UPvr_BoundaryGetSeeThroughData(int cameraIndex, RenderTexture renderTexture)
		{
		}

		[Token(Token = "0x60013CF")]
		[Address(RVA = "0xFFE618", Offset = "0xFFE618", VA = "0xFFE618")]
		public static void UPvr_BoundarySetCameraImageRect(int width, int height)
		{
		}

		[Token(Token = "0x60013D0")]
		[Address(RVA = "0xFFE750", Offset = "0xFFE750", VA = "0xFFE750")]
		public static void UPvr_BoundarySetSeeThroughVisible(bool value)
		{
		}

		[Token(Token = "0x60013D1")]
		[Address(RVA = "0xFFE874", Offset = "0xFFE874", VA = "0xFFE874")]
		public static void UPvr_SetGuardianSystemDisable(bool value)
		{
		}

		[Token(Token = "0x60013D2")]
		[Address(RVA = "0xFFE998", Offset = "0xFFE998", VA = "0xFFE998")]
		public static int UPvr_GetDialogState()
		{
			return default(int);
		}
	}
	[Token(Token = "0x20002E6")]
	public struct PlatformSettings
	{
		[Token(Token = "0x60013D3")]
		[Address(RVA = "0x1002704", Offset = "0x1002704", VA = "0x1002704")]
		public static Pvr_UnitySDKPlatformSetting.simulationType UPvr_IsCurrentDeviceValid()
		{
			return default(Pvr_UnitySDKPlatformSetting.simulationType);
		}

		[Token(Token = "0x60013D4")]
		[Address(RVA = "0x10028F0", Offset = "0x10028F0", VA = "0x10028F0")]
		public static bool UPvr_AppEntitlementCheck(string appid)
		{
			return default(bool);
		}

		[Token(Token = "0x60013D5")]
		[Address(RVA = "0x1002BD4", Offset = "0x1002BD4", VA = "0x1002BD4")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x8C9810", Offset = "0x8C9810")]
		public static bool UPvr_KeyEntitlementCheck(string publicKey)
		{
			return default(bool);
		}

		[Token(Token = "0x60013D6")]
		[Address(RVA = "0x1002EB8", Offset = "0x1002EB8", VA = "0x1002EB8")]
		public static int UPvr_AppEntitlementCheckExtra(string appid)
		{
			return default(int);
		}

		[Token(Token = "0x60013D7")]
		[Address(RVA = "0x10031B0", Offset = "0x10031B0", VA = "0x10031B0")]
		public static int UPvr_KeyEntitlementCheckExtra(string publicKey)
		{
			return default(int);
		}

		[Token(Token = "0x60013D8")]
		[Address(RVA = "0x10034A8", Offset = "0x10034A8", VA = "0x10034A8")]
		public static int UPvr_GetHmdAudioStatus()
		{
			return default(int);
		}
	}
	[Token(Token = "0x20002E7")]
	public enum DeviceCommand
	{
		[Token(Token = "0x4001270")]
		SET_PICO_NEO_HMD_BRIGHTNESS = 12,
		[Token(Token = "0x4001271")]
		SET_PICO_NEO_HMD_SLEEPDELAY
	}
	[Token(Token = "0x20002E8")]
	public enum BrightnessLevel
	{
		[Token(Token = "0x4001273")]
		VR_BRIGHTNESS_LEVEL_MIN = 1,
		[Token(Token = "0x4001274")]
		VR_BRIGHTNESS_LEVEL_MAX = 100,
		[Token(Token = "0x4001275")]
		VR_BRIGHTNESS_LEVEL_DOWN = 1000,
		[Token(Token = "0x4001276")]
		VR_BRIGHTNESS_LEVEL_UP = 1001,
		[Token(Token = "0x4001277")]
		VR_BRIGHTNESS_LEVEL_SCREEN_OFF = -100
	}
	[Token(Token = "0x20002E9")]
	public struct VolumePowerBrightness
	{
		[Token(Token = "0x4001278")]
		public const string LibFileName = "Pvr_UnitySDK";

		[Token(Token = "0x4001279")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public AndroidJavaObject activity;

		[Token(Token = "0x400127A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static AndroidJavaClass javaSysActivityClass;

		[Token(Token = "0x400127B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static AndroidJavaClass batteryjavaVrActivityClass;

		[Token(Token = "0x400127C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static AndroidJavaClass volumejavaVrActivityClass;

		[PreserveSig]
		[Token(Token = "0x60013D9")]
		[Address(RVA = "0x12DB94C", Offset = "0x12DB94C", VA = "0x12DB94C")]
		public static extern void Pvr_SetInitActivity(IntPtr activity, IntPtr vrActivityClass);

		[PreserveSig]
		[Token(Token = "0x60013DA")]
		[Address(RVA = "0x12DB9DC", Offset = "0x12DB9DC", VA = "0x12DB9DC")]
		private static extern bool Pvr_IsHmdExist();

		[PreserveSig]
		[Token(Token = "0x60013DB")]
		[Address(RVA = "0x12DBA58", Offset = "0x12DBA58", VA = "0x12DBA58")]
		private static extern int Pvr_GetHmdScreenBrightness();

		[PreserveSig]
		[Token(Token = "0x60013DC")]
		[Address(RVA = "0x12DBACC", Offset = "0x12DBACC", VA = "0x12DBACC")]
		private static extern bool Pvr_SetHmdScreenBrightness(int brightness);

		[Token(Token = "0x60013DD")]
		[Address(RVA = "0x12DBB54", Offset = "0x12DBB54", VA = "0x12DBB54")]
		public static bool UPvr_IsHmdExist()
		{
			return default(bool);
		}

		[Token(Token = "0x60013DE")]
		[Address(RVA = "0x12DBB58", Offset = "0x12DBB58", VA = "0x12DBB58")]
		public static int UPvr_GetHmdScreenBrightness()
		{
			return default(int);
		}

		[Token(Token = "0x60013DF")]
		[Address(RVA = "0x12DBB5C", Offset = "0x12DBB5C", VA = "0x12DBB5C")]
		public static bool UPvr_SetHmdScreenBrightness(int brightness)
		{
			return default(bool);
		}

		[Token(Token = "0x60013E0")]
		[Address(RVA = "0x12DBB60", Offset = "0x12DBB60", VA = "0x12DBB60")]
		public static bool UPvr_SetCommonBrightness(int brightness)
		{
			return default(bool);
		}

		[Token(Token = "0x60013E1")]
		[Address(RVA = "0x12DBDE8", Offset = "0x12DBDE8", VA = "0x12DBDE8")]
		public static int UPvr_GetCommonBrightness()
		{
			return default(int);
		}

		[Token(Token = "0x60013E2")]
		[Address(RVA = "0x12DC004", Offset = "0x12DC004", VA = "0x12DC004")]
		public static int[] UPvr_GetScreenBrightnessLevel()
		{
			return null;
		}

		[Token(Token = "0x60013E3")]
		[Address(RVA = "0x12DC204", Offset = "0x12DC204", VA = "0x12DC204")]
		public static void UPvr_SetScreenBrightnessLevel(int vrBrightness, int level)
		{
		}

		[Token(Token = "0x60013E4")]
		[Address(RVA = "0x12DC434", Offset = "0x12DC434", VA = "0x12DC434")]
		public static bool UPvr_SetDevicePropForUser(DeviceCommand deviceid, string number)
		{
			return default(bool);
		}

		[Token(Token = "0x60013E5")]
		[Address(RVA = "0x12DC588", Offset = "0x12DC588", VA = "0x12DC588")]
		public static string UPvr_GetDevicePropForUser(DeviceCommand deviceid)
		{
			return null;
		}

		[Token(Token = "0x60013E6")]
		[Address(RVA = "0x12DC6B8", Offset = "0x12DC6B8", VA = "0x12DC6B8")]
		public static bool UPvr_InitBatteryClass()
		{
			return default(bool);
		}

		[Token(Token = "0x60013E7")]
		[Address(RVA = "0x12DC8B8", Offset = "0x12DC8B8", VA = "0x12DC8B8")]
		public static bool UPvr_InitBatteryVolClass()
		{
			return default(bool);
		}

		[Token(Token = "0x60013E8")]
		[Address(RVA = "0x12DCB80", Offset = "0x12DCB80", VA = "0x12DCB80")]
		public static bool UPvr_StartBatteryReceiver(string startreceivre)
		{
			return default(bool);
		}

		[Token(Token = "0x60013E9")]
		[Address(RVA = "0x12DCDB4", Offset = "0x12DCDB4", VA = "0x12DCDB4")]
		public static bool UPvr_StopBatteryReceiver()
		{
			return default(bool);
		}

		[Token(Token = "0x60013EA")]
		[Address(RVA = "0x12DBB98", Offset = "0x12DBB98", VA = "0x12DBB98")]
		public static bool UPvr_SetBrightness(int brightness)
		{
			return default(bool);
		}

		[Token(Token = "0x60013EB")]
		[Address(RVA = "0x12DBE08", Offset = "0x12DBE08", VA = "0x12DBE08")]
		public static int UPvr_GetCurrentBrightness()
		{
			return default(int);
		}

		[Token(Token = "0x60013EC")]
		[Address(RVA = "0x12DC008", Offset = "0x12DC008", VA = "0x12DC008")]
		public static int[] Pvr_GetScreenBrightnessLevel()
		{
			return null;
		}

		[Token(Token = "0x60013ED")]
		[Address(RVA = "0x12DC208", Offset = "0x12DC208", VA = "0x12DC208")]
		public static void Pvr_SetScreenBrightnessLevel(int vrBrightness, int level)
		{
		}

		[Token(Token = "0x60013EE")]
		[Address(RVA = "0x12DCFA0", Offset = "0x12DCFA0", VA = "0x12DCFA0")]
		public static bool UPvr_StartAudioReceiver(string startreceivre)
		{
			return default(bool);
		}

		[Token(Token = "0x60013EF")]
		[Address(RVA = "0x12DD1D4", Offset = "0x12DD1D4", VA = "0x12DD1D4")]
		public static bool UPvr_StopAudioReceiver()
		{
			return default(bool);
		}

		[Token(Token = "0x60013F0")]
		[Address(RVA = "0x12DD3C0", Offset = "0x12DD3C0", VA = "0x12DD3C0")]
		public static int UPvr_GetMaxVolumeNumber()
		{
			return default(int);
		}

		[Token(Token = "0x60013F1")]
		[Address(RVA = "0x12DD5A8", Offset = "0x12DD5A8", VA = "0x12DD5A8")]
		public static int UPvr_GetCurrentVolumeNumber()
		{
			return default(int);
		}

		[Token(Token = "0x60013F2")]
		[Address(RVA = "0x12DD790", Offset = "0x12DD790", VA = "0x12DD790")]
		public static bool UPvr_VolumeUp()
		{
			return default(bool);
		}

		[Token(Token = "0x60013F3")]
		[Address(RVA = "0x12DD968", Offset = "0x12DD968", VA = "0x12DD968")]
		public static bool UPvr_VolumeDown()
		{
			return default(bool);
		}

		[Token(Token = "0x60013F4")]
		[Address(RVA = "0x12DDB40", Offset = "0x12DDB40", VA = "0x12DDB40")]
		public static bool UPvr_SetVolumeNum(int volume)
		{
			return default(bool);
		}

		[Token(Token = "0x60013F5")]
		[Address(RVA = "0x12DDD10", Offset = "0x12DDD10", VA = "0x12DDD10")]
		public static bool UPvr_SetAudio(string s)
		{
			return default(bool);
		}

		[Token(Token = "0x60013F6")]
		[Address(RVA = "0x12DDD18", Offset = "0x12DDD18", VA = "0x12DDD18")]
		public static bool UPvr_SetBattery(string s)
		{
			return default(bool);
		}

		[Token(Token = "0x60013F7")]
		[Address(RVA = "0x12DC58C", Offset = "0x12DC58C", VA = "0x12DC58C")]
		private static string getDevicePropForUser(DeviceCommand deviceid)
		{
			return null;
		}

		[Token(Token = "0x60013F8")]
		[Address(RVA = "0x12DC438", Offset = "0x12DC438", VA = "0x12DC438")]
		private static bool setDevicePropForUser(DeviceCommand deviceid, string number)
		{
			return default(bool);
		}
	}
}
namespace Pvr_UnitySDKAPI.Achievement
{
	[Token(Token = "0x20002EA")]
	public sealed class AchievementCore
	{
		[Token(Token = "0x400127D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool IsPlatformInitialized;

		[Token(Token = "0x400127E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		public static bool LogMessages;

		[Token(Token = "0x60013F9")]
		[Address(RVA = "0xFF6E98", Offset = "0xFF6E98", VA = "0xFF6E98")]
		public static bool IsInitialized()
		{
			return default(bool);
		}

		[Token(Token = "0x60013FA")]
		[Address(RVA = "0xFF6F00", Offset = "0xFF6F00", VA = "0xFF6F00")]
		public static void Initialize()
		{
		}

		[Token(Token = "0x60013FB")]
		[Address(RVA = "0xFF6F04", Offset = "0xFF6F04", VA = "0xFF6F04")]
		public static void RegisterNetwork()
		{
		}

		[Token(Token = "0x60013FC")]
		[Address(RVA = "0xFF709C", Offset = "0xFF709C", VA = "0xFF709C")]
		public static void UnRegisterNetwork()
		{
		}

		[Token(Token = "0x60013FD")]
		[Address(RVA = "0xFF7210", Offset = "0xFF7210", VA = "0xFF7210")]
		public AchievementCore()
		{
		}
	}
	[Token(Token = "0x20002EB")]
	public static class Achievements
	{
		[Token(Token = "0x60013FF")]
		[Address(RVA = "0xFF7278", Offset = "0xFF7278", VA = "0xFF7278")]
		public static Pvr_Request<Pvr_AchievementUpdate> Init()
		{
			return null;
		}

		[Token(Token = "0x6001400")]
		[Address(RVA = "0xFF7830", Offset = "0xFF7830", VA = "0xFF7830")]
		public static Pvr_Request<Pvr_AchievementUpdate> AddCount(string name, long count)
		{
			return null;
		}

		[Token(Token = "0x6001401")]
		[Address(RVA = "0xFF7ACC", Offset = "0xFF7ACC", VA = "0xFF7ACC")]
		public static Pvr_Request<Pvr_AchievementUpdate> AddFields(string name, string fields)
		{
			return null;
		}

		[Token(Token = "0x6001402")]
		[Address(RVA = "0xFF7D48", Offset = "0xFF7D48", VA = "0xFF7D48")]
		public static Pvr_Request<Pvr_AchievementDefinitionList> GetAllDefinitions()
		{
			return null;
		}

		[Token(Token = "0x6001403")]
		[Address(RVA = "0xFF7FC8", Offset = "0xFF7FC8", VA = "0xFF7FC8")]
		public static Pvr_Request<Pvr_AchievementProgressList> GetAllProgress()
		{
			return null;
		}

		[Token(Token = "0x6001404")]
		[Address(RVA = "0xFF81CC", Offset = "0xFF81CC", VA = "0xFF81CC")]
		public static Pvr_Request<Pvr_AchievementDefinitionList> GetDefinitionsByName(string[] names)
		{
			return null;
		}

		[Token(Token = "0x6001405")]
		[Address(RVA = "0xFF8454", Offset = "0xFF8454", VA = "0xFF8454")]
		public static Pvr_Request<Pvr_AchievementProgressList> GetProgressByName(string[] names)
		{
			return null;
		}

		[Token(Token = "0x6001406")]
		[Address(RVA = "0xFF8694", Offset = "0xFF8694", VA = "0xFF8694")]
		public static Pvr_Request<Pvr_AchievementUpdate> Unlock(string name)
		{
			return null;
		}

		[Token(Token = "0x6001407")]
		[Address(RVA = "0xFF88D4", Offset = "0xFF88D4", VA = "0xFF88D4")]
		public static Pvr_Request<Pvr_AchievementDefinitionList> GetNextAchievementDefinitionListPage(Pvr_AchievementDefinitionList list)
		{
			return null;
		}

		[Token(Token = "0x6001408")]
		[Address(RVA = "0xFF8C70", Offset = "0xFF8C70", VA = "0xFF8C70")]
		public static Pvr_Request<Pvr_AchievementProgressList> GetNextAchievementProgressListPage(Pvr_AchievementProgressList list)
		{
			return null;
		}
	}
	[Token(Token = "0x20002EC")]
	public enum AchievementType
	{
		[Token(Token = "0x4001280")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x8BD5A0", Offset = "0x8BD5A0")]
		Unknown,
		[Token(Token = "0x4001281")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x8BD5D8", Offset = "0x8BD5D8")]
		Simple,
		[Token(Token = "0x4001282")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x8BD610", Offset = "0x8BD610")]
		Bitfield,
		[Token(Token = "0x4001283")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x8BD648", Offset = "0x8BD648")]
		Count
	}
	[Token(Token = "0x20002ED")]
	public class Pvr_AchievementAPI
	{
		[Token(Token = "0x4001284")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static AndroidJavaClass achievementAPI;

		[Token(Token = "0x4001285")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static AndroidJavaClass definitionArrayHandle;

		[Token(Token = "0x4001286")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static AndroidJavaClass definitionHandle;

		[Token(Token = "0x4001287")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static AndroidJavaClass progressArrayHandle;

		[Token(Token = "0x4001288")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static AndroidJavaClass progressHandle;

		[Token(Token = "0x4001289")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static AndroidJavaClass updateHandle;

		[Token(Token = "0x400128A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static AndroidJavaObject errorHandle;

		[Token(Token = "0x400128B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static AndroidJavaObject unityInterface;

		[Token(Token = "0x400128C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private static string openId;

		[Token(Token = "0x400128D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private static string accessToken;

		[Token(Token = "0x400128E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private static string appId;

		[Token(Token = "0x6001409")]
		[Address(RVA = "0xFF7380", Offset = "0xFF7380", VA = "0xFF7380")]
		internal static long Init()
		{
			return default(long);
		}

		[Token(Token = "0x600140A")]
		[Address(RVA = "0xFF6F60", Offset = "0xFF6F60", VA = "0xFF6F60")]
		internal static void RegisterNetwork()
		{
		}

		[Token(Token = "0x600140B")]
		[Address(RVA = "0xFF70F8", Offset = "0xFF70F8", VA = "0xFF70F8")]
		internal static void UnRegisterNetwork()
		{
		}

		[Token(Token = "0x600140C")]
		[Address(RVA = "0xFF96C8", Offset = "0xFF96C8", VA = "0xFF96C8")]
		internal static AndroidJavaObject PopMessage()
		{
			return null;
		}

		[Token(Token = "0x600140D")]
		[Address(RVA = "0xFF97E8", Offset = "0xFF97E8", VA = "0xFF97E8")]
		internal static string pvr_Error_GetMessage(AndroidJavaObject popMessage)
		{
			return null;
		}

		[Token(Token = "0x600140E")]
		[Address(RVA = "0xFF98DC", Offset = "0xFF98DC", VA = "0xFF98DC")]
		internal static int pvr_Error_GetHttpCode(AndroidJavaObject popMessage)
		{
			return default(int);
		}

		[Token(Token = "0x600140F")]
		[Address(RVA = "0xFF99D0", Offset = "0xFF99D0", VA = "0xFF99D0")]
		internal static int pvr_Error_GetCode(AndroidJavaObject popMessage)
		{
			return default(int);
		}

		[Token(Token = "0x6001410")]
		[Address(RVA = "0xFF7950", Offset = "0xFF7950", VA = "0xFF7950")]
		internal static long pvr_Achievements_AddCount(string name, long count)
		{
			return default(long);
		}

		[Token(Token = "0x6001411")]
		[Address(RVA = "0xFF7BEC", Offset = "0xFF7BEC", VA = "0xFF7BEC")]
		internal static long pvr_Achievements_AddFields(string name, string fields)
		{
			return default(long);
		}

		[Token(Token = "0x6001412")]
		[Address(RVA = "0xFF7E50", Offset = "0xFF7E50", VA = "0xFF7E50")]
		internal static long pvr_Achievements_GetAllDefinitions()
		{
			return default(long);
		}

		[Token(Token = "0x6001413")]
		[Address(RVA = "0xFF80D0", Offset = "0xFF80D0", VA = "0xFF80D0")]
		internal static long pvr_Achievements_GetAllProgress()
		{
			return default(long);
		}

		[Token(Token = "0x6001414")]
		[Address(RVA = "0xFF82E4", Offset = "0xFF82E4", VA = "0xFF82E4")]
		internal static long pvr_Achievements_GetDefinitionsByName(string[] names, int v)
		{
			return default(long);
		}

		[Token(Token = "0x6001415")]
		[Address(RVA = "0xFF856C", Offset = "0xFF856C", VA = "0xFF856C")]
		internal static long pvr_Achievements_GetProgressByName(string[] names, int v)
		{
			return default(long);
		}

		[Token(Token = "0x6001416")]
		[Address(RVA = "0xFF87AC", Offset = "0xFF87AC", VA = "0xFF87AC")]
		internal static long pvr_Achievements_Unlock(string name)
		{
			return default(long);
		}

		[Token(Token = "0x6001417")]
		[Address(RVA = "0xFF8A4C", Offset = "0xFF8A4C", VA = "0xFF8A4C")]
		internal static long pvr_HTTP_GetWithMessageType(string nextUrl, Pvr_Message.MessageType messageType)
		{
			return default(long);
		}

		[Token(Token = "0x6001418")]
		[Address(RVA = "0xFF9AC4", Offset = "0xFF9AC4", VA = "0xFF9AC4")]
		internal static long pvr_Message_GetType(AndroidJavaObject popMessage)
		{
			return default(long);
		}

		[Token(Token = "0x6001419")]
		[Address(RVA = "0xFF9C68", Offset = "0xFF9C68", VA = "0xFF9C68")]
		internal static bool pvr_Message_IsError(AndroidJavaObject popMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x600141A")]
		[Address(RVA = "0xFF9D60", Offset = "0xFF9D60", VA = "0xFF9D60")]
		internal static long pvr_Message_GetRequestID(AndroidJavaObject popMessage)
		{
			return default(long);
		}

		[Token(Token = "0x600141B")]
		[Address(RVA = "0xFF95D0", Offset = "0xFF95D0", VA = "0xFF95D0")]
		internal static string pvr_Message_GetString(AndroidJavaObject popMessage)
		{
			return null;
		}

		[Token(Token = "0x600141C")]
		[Address(RVA = "0xFF9E58", Offset = "0xFF9E58", VA = "0xFF9E58")]
		internal static bool pvr_AchievementUpdate_GetJustUnlocked(AndroidJavaObject popMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x600141D")]
		[Address(RVA = "0xFF9F4C", Offset = "0xFF9F4C", VA = "0xFF9F4C")]
		internal static string pvr_AchievementUpdate_GetName(AndroidJavaObject popMessage)
		{
			return null;
		}

		[Token(Token = "0x600141E")]
		[Address(RVA = "0xFFA040", Offset = "0xFFA040", VA = "0xFFA040")]
		internal static int pvr_AchievementProgressArray_GetSize(AndroidJavaObject msg)
		{
			return default(int);
		}

		[Token(Token = "0x600141F")]
		[Address(RVA = "0xFFA134", Offset = "0xFFA134", VA = "0xFFA134")]
		internal static AndroidJavaObject pvr_AchievementProgressArray_GetElement(AndroidJavaObject msg, int index)
		{
			return null;
		}

		[Token(Token = "0x6001420")]
		[Address(RVA = "0xFFA27C", Offset = "0xFFA27C", VA = "0xFFA27C")]
		internal static string pvr_AchievementProgressArray_GetNextUrl(AndroidJavaObject msg)
		{
			return null;
		}

		[Token(Token = "0x6001421")]
		[Address(RVA = "0xFFA370", Offset = "0xFFA370", VA = "0xFFA370")]
		internal static string pvr_AchievementProgress_GetBitfield(AndroidJavaObject msg)
		{
			return null;
		}

		[Token(Token = "0x6001422")]
		[Address(RVA = "0xFFA464", Offset = "0xFFA464", VA = "0xFFA464")]
		internal static long pvr_AchievementProgress_GetCount(AndroidJavaObject msg)
		{
			return default(long);
		}

		[Token(Token = "0x6001423")]
		[Address(RVA = "0xFFA558", Offset = "0xFFA558", VA = "0xFFA558")]
		internal static bool pvr_AchievementProgress_GetIsUnlocked(AndroidJavaObject msg)
		{
			return default(bool);
		}

		[Token(Token = "0x6001424")]
		[Address(RVA = "0xFFA64C", Offset = "0xFFA64C", VA = "0xFFA64C")]
		internal static string pvr_AchievementProgress_GetName(AndroidJavaObject msg)
		{
			return null;
		}

		[Token(Token = "0x6001425")]
		[Address(RVA = "0xFFA740", Offset = "0xFFA740", VA = "0xFFA740")]
		internal static DateTime pvr_AchievementProgress_GetUnlockTime(AndroidJavaObject msg)
		{
			return default(DateTime);
		}

		[Token(Token = "0x6001426")]
		[Address(RVA = "0xFFA870", Offset = "0xFFA870", VA = "0xFFA870")]
		internal static DateTime DateTimeFromNative(long seconds_since_the_one_true_epoch)
		{
			return default(DateTime);
		}

		[Token(Token = "0x6001427")]
		[Address(RVA = "0xFFA8E0", Offset = "0xFFA8E0", VA = "0xFFA8E0")]
		internal static int pvr_AchievementDefinitionArray_GetSize(AndroidJavaObject msg)
		{
			return default(int);
		}

		[Token(Token = "0x6001428")]
		[Address(RVA = "0xFFA9D4", Offset = "0xFFA9D4", VA = "0xFFA9D4")]
		internal static AndroidJavaObject pvr_AchievementDefinitionArray_GetElement(AndroidJavaObject msg, int index)
		{
			return null;
		}

		[Token(Token = "0x6001429")]
		[Address(RVA = "0xFFAB1C", Offset = "0xFFAB1C", VA = "0xFFAB1C")]
		internal static string pvr_AchievementDefinitionArray_GetNextUrl(AndroidJavaObject msg)
		{
			return null;
		}

		[Token(Token = "0x600142A")]
		[Address(RVA = "0xFFAC10", Offset = "0xFFAC10", VA = "0xFFAC10")]
		internal static AchievementType pvr_AchievementDefinition_GetType(AndroidJavaObject msg)
		{
			return default(AchievementType);
		}

		[Token(Token = "0x600142B")]
		[Address(RVA = "0xFFADB8", Offset = "0xFFADB8", VA = "0xFFADB8")]
		internal static string pvr_AchievementDefinition_GetName(AndroidJavaObject msg)
		{
			return null;
		}

		[Token(Token = "0x600142C")]
		[Address(RVA = "0xFFAEAC", Offset = "0xFFAEAC", VA = "0xFFAEAC")]
		internal static int pvr_AchievementDefinition_GetBitfieldLength(AndroidJavaObject msg)
		{
			return default(int);
		}

		[Token(Token = "0x600142D")]
		[Address(RVA = "0xFFAFA0", Offset = "0xFFAFA0", VA = "0xFFAFA0")]
		internal static long pvr_AchievementDefinition_GetTarget(AndroidJavaObject msg)
		{
			return default(long);
		}

		[Token(Token = "0x600142E")]
		[Address(RVA = "0xFFB094", Offset = "0xFFB094", VA = "0xFFB094")]
		internal static string pvr_AchievementDefinition_GetTitle(AndroidJavaObject msg)
		{
			return null;
		}

		[Token(Token = "0x600142F")]
		[Address(RVA = "0xFFB188", Offset = "0xFFB188", VA = "0xFFB188")]
		internal static string pvr_AchievementDefinition_GetUnlockedDescription(AndroidJavaObject msg)
		{
			return null;
		}

		[Token(Token = "0x6001430")]
		[Address(RVA = "0xFFB27C", Offset = "0xFFB27C", VA = "0xFFB27C")]
		internal static string pvr_AchievementDefinition_GetLockedIcon(AndroidJavaObject msg)
		{
			return null;
		}

		[Token(Token = "0x6001431")]
		[Address(RVA = "0xFFB370", Offset = "0xFFB370", VA = "0xFFB370")]
		internal static bool pvr_AchievementDefinition_GetIsSecrect(AndroidJavaObject msg)
		{
			return default(bool);
		}

		[Token(Token = "0x6001432")]
		[Address(RVA = "0xFFB464", Offset = "0xFFB464", VA = "0xFFB464")]
		internal static string pvr_AchievementDefinition_GetUnlockedIcon(AndroidJavaObject msg)
		{
			return null;
		}

		[Token(Token = "0x6001433")]
		[Address(RVA = "0xFFB558", Offset = "0xFFB558", VA = "0xFFB558")]
		internal static string pvr_AchievementDefinition_GetDescription(AndroidJavaObject msg)
		{
			return null;
		}

		[Token(Token = "0x6001434")]
		[Address(RVA = "0xFFB64C", Offset = "0xFFB64C", VA = "0xFFB64C")]
		public Pvr_AchievementAPI()
		{
		}
	}
	[Token(Token = "0x20002EE")]
	public class Pvr_AchievementDefinition
	{
		[Token(Token = "0x400128F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly AchievementType Type;

		[Token(Token = "0x4001290")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string Name;

		[Token(Token = "0x4001291")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly int BitfieldLength;

		[Token(Token = "0x4001292")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly long Target;

		[Token(Token = "0x4001293")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly string Title;

		[Token(Token = "0x4001294")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public readonly string Description;

		[Token(Token = "0x4001295")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public readonly string UnlockedDescription;

		[Token(Token = "0x4001296")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public readonly string UnlockedIcon;

		[Token(Token = "0x4001297")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public readonly string LockedIcon;

		[Token(Token = "0x4001298")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public readonly bool IsSecrect;

		[Token(Token = "0x6001436")]
		[Address(RVA = "0xFFB950", Offset = "0xFFB950", VA = "0xFFB950")]
		public Pvr_AchievementDefinition(AndroidJavaObject msg)
		{
		}
	}
	[Token(Token = "0x20002EF")]
	public class Pvr_AchievementDefinitionList : Pvr_DeserializableList<Pvr_AchievementDefinition>
	{
		[Token(Token = "0x6001437")]
		[Address(RVA = "0xFF8F2C", Offset = "0xFF8F2C", VA = "0xFF8F2C")]
		public Pvr_AchievementDefinitionList(AndroidJavaObject msg)
		{
		}
	}
	[Token(Token = "0x20002F0")]
	public class Pvr_AchievementProgress
	{
		[Token(Token = "0x4001299")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string Bitfield;

		[Token(Token = "0x400129A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly long Count;

		[Token(Token = "0x400129B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly bool IsUnlocked;

		[Token(Token = "0x400129C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly string Name;

		[Token(Token = "0x400129D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly DateTime UnlockTime;

		[Token(Token = "0x6001438")]
		[Address(RVA = "0xFFBA44", Offset = "0xFFBA44", VA = "0xFFBA44")]
		public Pvr_AchievementProgress(AndroidJavaObject msg)
		{
		}
	}
	[Token(Token = "0x20002F1")]
	public class Pvr_AchievementProgressList : Pvr_DeserializableList<Pvr_AchievementProgress>
	{
		[Token(Token = "0x6001439")]
		[Address(RVA = "0xFF91B0", Offset = "0xFF91B0", VA = "0xFF91B0")]
		public Pvr_AchievementProgressList(AndroidJavaObject msg)
		{
		}
	}
	[Token(Token = "0x20002F2")]
	public class Pvr_AchievementUpdate
	{
		[Token(Token = "0x400129E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly bool JustUnlocked;

		[Token(Token = "0x400129F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string Name;

		[Token(Token = "0x600143A")]
		[Address(RVA = "0xFF9434", Offset = "0xFF9434", VA = "0xFF9434")]
		public Pvr_AchievementUpdate(AndroidJavaObject msg)
		{
		}
	}
	[Token(Token = "0x20002F3")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x8B6C74", Offset = "0x8B6C74")]
	public class Pvr_DeserializableList<T> : IList<T>, ICollection<T>, IEnumerable<T>, IEnumerable
	{
		[Token(Token = "0x40012A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected List<T> data;

		[Token(Token = "0x40012A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected string nextUrl;

		[Token(Token = "0x40012A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected string previousUrl;

		[Token(Token = "0x170001C9")]
		public int Count
		{
			[Token(Token = "0x600143B")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001CA")]
		private bool System.Collections.Generic.ICollection<T>.IsReadOnly
		{
			[Token(Token = "0x600143C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001CB")]
		public T Item
		{
			[Token(Token = "0x600143E")]
			get
			{
				return (T)null;
			}
			[Token(Token = "0x600143F")]
			set
			{
			}
		}

		[Token(Token = "0x170001CC")]
		public bool HasNextPage
		{
			[Token(Token = "0x600144A")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001CD")]
		public bool HasPreviousPage
		{
			[Token(Token = "0x600144B")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001CE")]
		public string NextUrl
		{
			[Token(Token = "0x600144C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001CF")]
		public string PreviousUrl
		{
			[Token(Token = "0x600144D")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600143D")]
		public int IndexOf(T obj)
		{
			return default(int);
		}

		[Token(Token = "0x6001440")]
		public void Add(T item)
		{
		}

		[Token(Token = "0x6001441")]
		public void Clear()
		{
		}

		[Token(Token = "0x6001442")]
		public bool Contains(T item)
		{
			return default(bool);
		}

		[Token(Token = "0x6001443")]
		public void CopyTo(T[] array, int arrayIndex)
		{
		}

		[Token(Token = "0x6001444")]
		public IEnumerator<T> GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6001445")]
		public void Insert(int index, T item)
		{
		}

		[Token(Token = "0x6001446")]
		public bool Remove(T item)
		{
			return default(bool);
		}

		[Token(Token = "0x6001447")]
		public void RemoveAt(int index)
		{
		}

		[Token(Token = "0x6001448")]
		private IEnumerator GetEnumerator1()
		{
			return null;
		}

		[Token(Token = "0x6001449")]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x600144E")]
		public Pvr_DeserializableList()
		{
		}
	}
	[Token(Token = "0x20002F4")]
	public static class Pvr_Callback
	{
		[Token(Token = "0x2000822")]
		private class RequestCallback
		{
			[Token(Token = "0x4002842")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private Pvr_Message.Callback messageCallback;

			[Token(Token = "0x6002F2A")]
			[Address(RVA = "0xFFC0C0", Offset = "0xFFC0C0", VA = "0xFFC0C0")]
			public RequestCallback()
			{
			}

			[Token(Token = "0x6002F2B")]
			[Address(RVA = "0xFFC0C8", Offset = "0xFFC0C8", VA = "0xFFC0C8")]
			public RequestCallback(Pvr_Message.Callback callback)
			{
			}

			[Token(Token = "0x6002F2C")]
			[Address(RVA = "0xFFC0F4", Offset = "0xFFC0F4", VA = "0xFFC0F4", Slot = "4")]
			public virtual void HandleMessage(Pvr_Message msg)
			{
			}
		}

		[Token(Token = "0x2000823")]
		private sealed class RequestCallback<T> : RequestCallback
		{
			[Token(Token = "0x4002843")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private Pvr_Message<T>.Callback callback;

			[Token(Token = "0x6002F2D")]
			public RequestCallback(Pvr_Message<T>.Callback callback)
			{
			}

			[Token(Token = "0x6002F2E")]
			public override void HandleMessage(Pvr_Message msg)
			{
			}
		}

		[Token(Token = "0x40012A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Dictionary<long, Request> requestIDsToRequests;

		[Token(Token = "0x40012A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Dictionary<Pvr_Message.MessageType, RequestCallback> notificationCallbacks;

		[Token(Token = "0x600144F")]
		[Address(RVA = "0xFFBAFC", Offset = "0xFFBAFC", VA = "0xFFBAFC")]
		internal static void AddRequest(Request request)
		{
		}

		[Token(Token = "0x6001450")]
		[Address(RVA = "0xFFBC6C", Offset = "0xFFBC6C", VA = "0xFFBC6C")]
		internal static void RunCallbacks()
		{
		}

		[Token(Token = "0x6001451")]
		[Address(RVA = "0xFFBEE8", Offset = "0xFFBEE8", VA = "0xFFBEE8")]
		internal static void RunLimitedCallbacks(uint limit)
		{
		}

		[Token(Token = "0x6001452")]
		[Address(RVA = "0xFFBF80", Offset = "0xFFBF80", VA = "0xFFBF80")]
		internal static void OnApplicationQuit()
		{
		}

		[Token(Token = "0x6001453")]
		[Address(RVA = "0xFFBD48", Offset = "0xFFBD48", VA = "0xFFBD48")]
		internal static void HandleMessage(Pvr_Message msg)
		{
		}
	}
	[Token(Token = "0x20002F5")]
	public class Pvr_CallbackRunner : MonoBehaviour
	{
		[Token(Token = "0x40012A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool IsPersistantBetweenSceneLoads;

		[Token(Token = "0x6001455")]
		[Address(RVA = "0xFFC498", Offset = "0xFFC498", VA = "0xFFC498")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001456")]
		[Address(RVA = "0xFFC594", Offset = "0xFFC594", VA = "0xFFC594")]
		private void Update()
		{
		}

		[Token(Token = "0x6001457")]
		[Address(RVA = "0xFFC620", Offset = "0xFFC620", VA = "0xFFC620")]
		private void OnApplicationQuit()
		{
		}

		[Token(Token = "0x6001458")]
		[Address(RVA = "0xFFC67C", Offset = "0xFFC67C", VA = "0xFFC67C")]
		public Pvr_CallbackRunner()
		{
		}
	}
	[Token(Token = "0x20002F6")]
	public abstract class Pvr_Message<T> : Pvr_Message
	{
		[Token(Token = "0x2000824")]
		public new delegate void Callback(Pvr_Message<T> message);

		[Token(Token = "0x40012A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T data;

		[Token(Token = "0x170001D0")]
		public T Data
		{
			[Token(Token = "0x600145A")]
			get
			{
				return (T)null;
			}
		}

		[Token(Token = "0x6001459")]
		public Pvr_Message(AndroidJavaObject msg)
		{
		}

		[Token(Token = "0x600145B")]
		protected abstract T GetDataFromMessage(AndroidJavaObject msg);
	}
	[Token(Token = "0x20002F7")]
	public class Pvr_Message
	{
		[Token(Token = "0x2000825")]
		public delegate void Callback(Pvr_Message message);

		[Token(Token = "0x2000826")]
		public enum MessageType : uint
		{
			[Token(Token = "0x4002845")]
			Unknown = 0u,
			[Token(Token = "0x4002846")]
			Achievements_AddCount = 65495601u,
			[Token(Token = "0x4002847")]
			Achievements_AddFields = 346693929u,
			[Token(Token = "0x4002848")]
			Achievements_GetAllDefinitions = 64177549u,
			[Token(Token = "0x4002849")]
			Achievements_GetAllProgress = 1335877149u,
			[Token(Token = "0x400284A")]
			Achievements_GetDefinitionsByName = 1653670332u,
			[Token(Token = "0x400284B")]
			Achievements_GetNextAchievementDefinitionArrayPage = 712888917u,
			[Token(Token = "0x400284C")]
			Achievements_GetNextAchievementProgressArrayPage = 792913703u,
			[Token(Token = "0x400284D")]
			Achievements_GetProgressByName = 354837425u,
			[Token(Token = "0x400284E")]
			Achievements_Unlock = 1497156573u,
			[Token(Token = "0x400284F")]
			Achievements_WriteAchievementProgress = 121027549u,
			[Token(Token = "0x4002850")]
			Achievements_VerifyAccessToken = 53284924u
		}

		[Token(Token = "0x2000827")]
		internal delegate Pvr_Message ExtraMessageTypesHandler(AndroidJavaObject messageHandle, MessageType message_type);

		[Token(Token = "0x40012A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private MessageType type;

		[Token(Token = "0x40012A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private long requestID;

		[Token(Token = "0x40012A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Error error;

		[Token(Token = "0x40012AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8BD680", Offset = "0x8BD680")]
		private static ExtraMessageTypesHandler <HandleExtraMessageTypes>k__BackingField;

		[Token(Token = "0x170001D1")]
		public MessageType Type
		{
			[Token(Token = "0x600145D")]
			[Address(RVA = "0xFFC87C", Offset = "0xFFC87C", VA = "0xFFC87C")]
			get
			{
				return default(MessageType);
			}
		}

		[Token(Token = "0x170001D2")]
		public bool IsError
		{
			[Token(Token = "0x600145E")]
			[Address(RVA = "0xFFC884", Offset = "0xFFC884", VA = "0xFFC884")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001D3")]
		public long RequestID
		{
			[Token(Token = "0x600145F")]
			[Address(RVA = "0xFFC894", Offset = "0xFFC894", VA = "0xFFC894")]
			get
			{
				return default(long);
			}
		}

		[Token(Token = "0x170001D4")]
		internal static ExtraMessageTypesHandler HandleExtraMessageTypes
		{
			[Token(Token = "0x6001468")]
			[Address(RVA = "0xFFCAB8", Offset = "0xFFCAB8", VA = "0xFFCAB8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C9858", Offset = "0x8C9858")]
			private get
			{
				return null;
			}
			[Token(Token = "0x6001467")]
			[Address(RVA = "0xFFCA64", Offset = "0xFFCA64", VA = "0xFFCA64")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C9848", Offset = "0x8C9848")]
			set
			{
			}
		}

		[Token(Token = "0x600145C")]
		[Address(RVA = "0xFFC68C", Offset = "0xFFC68C", VA = "0xFFC68C")]
		public Pvr_Message(AndroidJavaObject msg)
		{
		}

		[Token(Token = "0x6001460")]
		[Address(RVA = "0xFFC89C", Offset = "0xFFC89C", VA = "0xFFC89C", Slot = "4")]
		public virtual Error GetError()
		{
			return null;
		}

		[Token(Token = "0x6001461")]
		[Address(RVA = "0xFFC8A4", Offset = "0xFFC8A4", VA = "0xFFC8A4", Slot = "5")]
		public virtual Pvr_AchievementDefinitionList GetAchievementDefinitions()
		{
			return null;
		}

		[Token(Token = "0x6001462")]
		[Address(RVA = "0xFFC8AC", Offset = "0xFFC8AC", VA = "0xFFC8AC", Slot = "6")]
		public virtual Pvr_AchievementProgressList GetAchievementProgressList()
		{
			return null;
		}

		[Token(Token = "0x6001463")]
		[Address(RVA = "0xFFC8B4", Offset = "0xFFC8B4", VA = "0xFFC8B4", Slot = "7")]
		public virtual Pvr_AchievementUpdate GetAchievementUpdate()
		{
			return null;
		}

		[Token(Token = "0x6001464")]
		[Address(RVA = "0xFFC8BC", Offset = "0xFFC8BC", VA = "0xFFC8BC", Slot = "8")]
		public virtual string GetString()
		{
			return null;
		}

		[Token(Token = "0x6001465")]
		[Address(RVA = "0xFFC8C4", Offset = "0xFFC8C4", VA = "0xFFC8C4")]
		internal static Pvr_Message ParseMessageHandle(AndroidJavaObject messageHandle)
		{
			return null;
		}

		[Token(Token = "0x6001466")]
		[Address(RVA = "0xFFBCE8", Offset = "0xFFBCE8", VA = "0xFFBCE8")]
		public static Pvr_Message PopMessage()
		{
			return null;
		}
	}
	[Token(Token = "0x20002F8")]
	public class MessageWithAchievementDefinitions : Pvr_Message<Pvr_AchievementDefinitionList>
	{
		[Token(Token = "0x6001469")]
		[Address(RVA = "0xFF8E28", Offset = "0xFF8E28", VA = "0xFF8E28")]
		public MessageWithAchievementDefinitions(AndroidJavaObject msg)
		{
		}

		[Token(Token = "0x600146A")]
		[Address(RVA = "0xFF8E88", Offset = "0xFF8E88", VA = "0xFF8E88", Slot = "5")]
		public override Pvr_AchievementDefinitionList GetAchievementDefinitions()
		{
			return null;
		}

		[Token(Token = "0x600146B")]
		[Address(RVA = "0xFF8ECC", Offset = "0xFF8ECC", VA = "0xFF8ECC", Slot = "9")]
		protected override Pvr_AchievementDefinitionList GetDataFromMessage(AndroidJavaObject msg)
		{
			return null;
		}
	}
	[Token(Token = "0x20002F9")]
	public class MessageWithAchievementProgressList : Pvr_Message<Pvr_AchievementProgressList>
	{
		[Token(Token = "0x600146C")]
		[Address(RVA = "0xFF90AC", Offset = "0xFF90AC", VA = "0xFF90AC")]
		public MessageWithAchievementProgressList(AndroidJavaObject msg)
		{
		}

		[Token(Token = "0x600146D")]
		[Address(RVA = "0xFF910C", Offset = "0xFF910C", VA = "0xFF910C", Slot = "6")]
		public override Pvr_AchievementProgressList GetAchievementProgressList()
		{
			return null;
		}

		[Token(Token = "0x600146E")]
		[Address(RVA = "0xFF9150", Offset = "0xFF9150", VA = "0xFF9150", Slot = "9")]
		protected override Pvr_AchievementProgressList GetDataFromMessage(AndroidJavaObject msg)
		{
			return null;
		}
	}
	[Token(Token = "0x20002FA")]
	public class MessageWithAchievementUpdate : Pvr_Message<Pvr_AchievementUpdate>
	{
		[Token(Token = "0x600146F")]
		[Address(RVA = "0xFF9330", Offset = "0xFF9330", VA = "0xFF9330")]
		public MessageWithAchievementUpdate(AndroidJavaObject msg)
		{
		}

		[Token(Token = "0x6001470")]
		[Address(RVA = "0xFF9390", Offset = "0xFF9390", VA = "0xFF9390", Slot = "7")]
		public override Pvr_AchievementUpdate GetAchievementUpdate()
		{
			return null;
		}

		[Token(Token = "0x6001471")]
		[Address(RVA = "0xFF93D4", Offset = "0xFF93D4", VA = "0xFF93D4", Slot = "9")]
		protected override Pvr_AchievementUpdate GetDataFromMessage(AndroidJavaObject msg)
		{
			return null;
		}
	}
	[Token(Token = "0x20002FB")]
	public class MessageWithString : Pvr_Message<string>
	{
		[Token(Token = "0x6001472")]
		[Address(RVA = "0xFF94C8", Offset = "0xFF94C8", VA = "0xFF94C8")]
		public MessageWithString(AndroidJavaObject msg)
		{
		}

		[Token(Token = "0x6001473")]
		[Address(RVA = "0xFF9528", Offset = "0xFF9528", VA = "0xFF9528", Slot = "8")]
		public override string GetString()
		{
			return null;
		}

		[Token(Token = "0x6001474")]
		[Address(RVA = "0xFF956C", Offset = "0xFF956C", VA = "0xFF956C", Slot = "9")]
		protected override string GetDataFromMessage(AndroidJavaObject msg)
		{
			return null;
		}
	}
	[Token(Token = "0x20002FC")]
	public class Error
	{
		[Token(Token = "0x40012AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly int Code;

		[Token(Token = "0x40012AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public readonly int HttpCode;

		[Token(Token = "0x40012AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string Message;

		[Token(Token = "0x6001475")]
		[Address(RVA = "0xFF8DE8", Offset = "0xFF8DE8", VA = "0xFF8DE8")]
		public Error(int code, string message, int httpCode)
		{
		}
	}
	[Token(Token = "0x20002FD")]
	public sealed class Pvr_Request<T> : Request
	{
		[Token(Token = "0x40012AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Pvr_Message<T>.Callback callback_;

		[Token(Token = "0x6001476")]
		public Pvr_Request(long requestID)
		{
		}

		[Token(Token = "0x6001477")]
		public Pvr_Request<T> OnComplete(Pvr_Message<T>.Callback callback)
		{
			return null;
		}

		[Token(Token = "0x6001478")]
		public override void HandleMessage(Pvr_Message msg)
		{
		}
	}
	[Token(Token = "0x20002FE")]
	public class Request
	{
		[Token(Token = "0x40012AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Pvr_Message.Callback callback_;

		[Token(Token = "0x40012B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8BD690", Offset = "0x8BD690")]
		private long <RequestID>k__BackingField;

		[Token(Token = "0x170001D5")]
		public long RequestID
		{
			[Token(Token = "0x600147A")]
			[Address(RVA = "0xFFD040", Offset = "0xFFD040", VA = "0xFFD040")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C9868", Offset = "0x8C9868")]
			get
			{
				return default(long);
			}
			[Token(Token = "0x600147B")]
			[Address(RVA = "0xFFD048", Offset = "0xFFD048", VA = "0xFFD048")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C9878", Offset = "0x8C9878")]
			set
			{
			}
		}

		[Token(Token = "0x6001479")]
		[Address(RVA = "0xFFD014", Offset = "0xFFD014", VA = "0xFFD014")]
		public Request(long requestID)
		{
		}

		[Token(Token = "0x600147C")]
		[Address(RVA = "0xFFD050", Offset = "0xFFD050", VA = "0xFFD050")]
		public Request OnComplete(Pvr_Message.Callback callback)
		{
			return null;
		}

		[Token(Token = "0x600147D")]
		[Address(RVA = "0xFFD0CC", Offset = "0xFFD0CC", VA = "0xFFD0CC", Slot = "4")]
		public virtual void HandleMessage(Pvr_Message msg)
		{
		}

		[Token(Token = "0x600147E")]
		[Address(RVA = "0xFFC59C", Offset = "0xFFC59C", VA = "0xFFC59C")]
		public static void RunCallbacks(uint limit = 0u)
		{
		}
	}
}
namespace Rainbows
{
	[Token(Token = "0x20002FF")]
	public class RainbowSceneSelect : MonoBehaviour
	{
		[Token(Token = "0x40012B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool GUIHide;

		[Token(Token = "0x40012B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool GUIHide2;

		[Token(Token = "0x40012B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		public bool GUIHide3;

		[Token(Token = "0x600147F")]
		[Address(RVA = "0xC1CA4C", Offset = "0xC1CA4C", VA = "0xC1CA4C")]
		public void LoadSceneDemo1()
		{
		}

		[Token(Token = "0x6001480")]
		[Address(RVA = "0xC1CAB8", Offset = "0xC1CAB8", VA = "0xC1CAB8")]
		public void LoadSceneDemo2()
		{
		}

		[Token(Token = "0x6001481")]
		[Address(RVA = "0xC1CB24", Offset = "0xC1CB24", VA = "0xC1CB24")]
		public void LoadSceneDemo3()
		{
		}

		[Token(Token = "0x6001482")]
		[Address(RVA = "0xC1CB90", Offset = "0xC1CB90", VA = "0xC1CB90")]
		public void LoadSceneDemo4()
		{
		}

		[Token(Token = "0x6001483")]
		[Address(RVA = "0xC1CBFC", Offset = "0xC1CBFC", VA = "0xC1CBFC")]
		public void LoadSceneDemo5()
		{
		}

		[Token(Token = "0x6001484")]
		[Address(RVA = "0xC1CC68", Offset = "0xC1CC68", VA = "0xC1CC68")]
		public void LoadSceneDemo6()
		{
		}

		[Token(Token = "0x6001485")]
		[Address(RVA = "0xC1CCD4", Offset = "0xC1CCD4", VA = "0xC1CCD4")]
		private void Update()
		{
		}

		[Token(Token = "0x6001486")]
		[Address(RVA = "0xC1CE40", Offset = "0xC1CE40", VA = "0xC1CE40")]
		public RainbowSceneSelect()
		{
		}
	}
}
namespace RainbowMagic
{
	[Token(Token = "0x2000300")]
	public class RainbowButtonScript : MonoBehaviour
	{
		[Token(Token = "0x40012B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject Button;

		[Token(Token = "0x40012B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Text MyButtonText;

		[Token(Token = "0x40012B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private string projectileParticleName;

		[Token(Token = "0x40012B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private RainbowFireProjectile effectScript;

		[Token(Token = "0x40012B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private RainbowProjectileScript projectileScript;

		[Token(Token = "0x40012B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float buttonsX;

		[Token(Token = "0x40012BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float buttonsY;

		[Token(Token = "0x40012BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float buttonsSizeX;

		[Token(Token = "0x40012BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float buttonsSizeY;

		[Token(Token = "0x40012BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float buttonsDistance;

		[Token(Token = "0x6001487")]
		[Address(RVA = "0xC1B6BC", Offset = "0xC1B6BC", VA = "0xC1B6BC")]
		private void Start()
		{
		}

		[Token(Token = "0x6001488")]
		[Address(RVA = "0xC1B830", Offset = "0xC1B830", VA = "0xC1B830")]
		private void Update()
		{
		}

		[Token(Token = "0x6001489")]
		[Address(RVA = "0xC1B788", Offset = "0xC1B788", VA = "0xC1B788")]
		public void getProjectileNames()
		{
		}

		[Token(Token = "0x600148A")]
		[Address(RVA = "0xC1B85C", Offset = "0xC1B85C", VA = "0xC1B85C")]
		public bool overButton()
		{
			return default(bool);
		}

		[Token(Token = "0x600148B")]
		[Address(RVA = "0xC1B968", Offset = "0xC1B968", VA = "0xC1B968")]
		public RainbowButtonScript()
		{
		}
	}
	[Token(Token = "0x2000301")]
	public class RainbowFireProjectile : MonoBehaviour
	{
		[Token(Token = "0x40012BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private RaycastHit hit;

		[Token(Token = "0x40012BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public GameObject[] projectiles;

		[Token(Token = "0x40012C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Transform spawnPosition;

		[Token(Token = "0x40012C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[HideInInspector]
		public int currentProjectile;

		[Token(Token = "0x40012C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float speed;

		[Token(Token = "0x40012C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private RainbowButtonScript selectedProjectileButton;

		[Token(Token = "0x600148C")]
		[Address(RVA = "0xC1B970", Offset = "0xC1B970", VA = "0xC1B970")]
		private void Start()
		{
		}

		[Token(Token = "0x600148D")]
		[Address(RVA = "0xC1B9E0", Offset = "0xC1B9E0", VA = "0xC1B9E0")]
		private void Update()
		{
		}

		[Token(Token = "0x600148E")]
		[Address(RVA = "0xC1BE24", Offset = "0xC1BE24", VA = "0xC1BE24")]
		public void nextEffect()
		{
		}

		[Token(Token = "0x600148F")]
		[Address(RVA = "0xC1BE64", Offset = "0xC1BE64", VA = "0xC1BE64")]
		public void previousEffect()
		{
		}

		[Token(Token = "0x6001490")]
		[Address(RVA = "0xC1BEA4", Offset = "0xC1BEA4", VA = "0xC1BEA4")]
		public void AdjustSpeed(float newSpeed)
		{
		}

		[Token(Token = "0x6001491")]
		[Address(RVA = "0xC1BEAC", Offset = "0xC1BEAC", VA = "0xC1BEAC")]
		public RainbowFireProjectile()
		{
		}
	}
	[Token(Token = "0x2000302")]
	public class RainbowProjectileScript : MonoBehaviour
	{
		[Token(Token = "0x40012C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject impactParticle;

		[Token(Token = "0x40012C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject projectileParticle;

		[Token(Token = "0x40012C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject muzzleParticle;

		[Token(Token = "0x40012C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject[] trailParticles;

		[Token(Token = "0x40012C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BD6B0", Offset = "0x8BD6B0")]
		public float colliderRadius;

		[Token(Token = "0x40012C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8BD6E8", Offset = "0x8BD6E8")]
		public float collideOffset;

		[Token(Token = "0x6001492")]
		[Address(RVA = "0xC1C134", Offset = "0xC1C134", VA = "0xC1C134")]
		private void Start()
		{
		}

		[Token(Token = "0x6001493")]
		[Address(RVA = "0xC1C340", Offset = "0xC1C340", VA = "0xC1C340")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6001494")]
		[Address(RVA = "0xC1CA38", Offset = "0xC1CA38", VA = "0xC1CA38")]
		public RainbowProjectileScript()
		{
		}
	}
	[Token(Token = "0x2000303")]
	public class RainbowMagicSoundSpawn : MonoBehaviour
	{
		[Token(Token = "0x40012CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject prefabSound;

		[Token(Token = "0x40012CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool destroyWhenDone;

		[Token(Token = "0x40012CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		public bool soundPrefabIsChild;

		[Token(Token = "0x40012CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8BD700", Offset = "0x8BD700")]
		public float pitchRandomMultiplier;

		[Token(Token = "0x6001495")]
		[Address(RVA = "0xC1BEBC", Offset = "0xC1BEBC", VA = "0xC1BEBC")]
		private void Start()
		{
		}

		[Token(Token = "0x6001496")]
		[Address(RVA = "0xC1C11C", Offset = "0xC1C11C", VA = "0xC1C11C")]
		public RainbowMagicSoundSpawn()
		{
		}
	}
}
namespace MagicArsenal
{
	[Token(Token = "0x2000304")]
	public class MagicButtonScript : MonoBehaviour
	{
		[Token(Token = "0x40012CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject Button;

		[Token(Token = "0x40012CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Text MyButtonText;

		[Token(Token = "0x40012D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private string projectileParticleName;

		[Token(Token = "0x40012D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private MagicFireProjectile effectScript;

		[Token(Token = "0x40012D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private MagicProjectileScript projectileScript;

		[Token(Token = "0x40012D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float buttonsX;

		[Token(Token = "0x40012D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float buttonsY;

		[Token(Token = "0x40012D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float buttonsSizeX;

		[Token(Token = "0x40012D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float buttonsSizeY;

		[Token(Token = "0x40012D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float buttonsDistance;

		[Token(Token = "0x6001497")]
		[Address(RVA = "0xB7F538", Offset = "0xB7F538", VA = "0xB7F538")]
		private void Start()
		{
		}

		[Token(Token = "0x6001498")]
		[Address(RVA = "0xB7F6AC", Offset = "0xB7F6AC", VA = "0xB7F6AC")]
		private void Update()
		{
		}

		[Token(Token = "0x6001499")]
		[Address(RVA = "0xB7F604", Offset = "0xB7F604", VA = "0xB7F604")]
		public void getProjectileNames()
		{
		}

		[Token(Token = "0x600149A")]
		[Address(RVA = "0xB7F6D8", Offset = "0xB7F6D8", VA = "0xB7F6D8")]
		public bool overButton()
		{
			return default(bool);
		}

		[Token(Token = "0x600149B")]
		[Address(RVA = "0xB7F7E4", Offset = "0xB7F7E4", VA = "0xB7F7E4")]
		public MagicButtonScript()
		{
		}
	}
	[Token(Token = "0x2000305")]
	public class MagicDragMouseOrbit : MonoBehaviour
	{
		[Token(Token = "0x40012D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform target;

		[Token(Token = "0x40012D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float distance;

		[Token(Token = "0x40012DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float xSpeed;

		[Token(Token = "0x40012DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float ySpeed;

		[Token(Token = "0x40012DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float yMinLimit;

		[Token(Token = "0x40012DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float yMaxLimit;

		[Token(Token = "0x40012DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float distanceMin;

		[Token(Token = "0x40012DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float distanceMax;

		[Token(Token = "0x40012E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float smoothTime;

		[Token(Token = "0x40012E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float rotationYAxis;

		[Token(Token = "0x40012E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float rotationXAxis;

		[Token(Token = "0x40012E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float velocityX;

		[Token(Token = "0x40012E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float velocityY;

		[Token(Token = "0x600149C")]
		[Address(RVA = "0xB7F7EC", Offset = "0xB7F7EC", VA = "0xB7F7EC")]
		private void Start()
		{
		}

		[Token(Token = "0x600149D")]
		[Address(RVA = "0xB7F8C8", Offset = "0xB7F8C8", VA = "0xB7F8C8")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x600149E")]
		[Address(RVA = "0xB7FCC8", Offset = "0xB7FCC8", VA = "0xB7FCC8")]
		public static float ClampAngle(float angle, float min, float max)
		{
			return default(float);
		}

		[Token(Token = "0x600149F")]
		[Address(RVA = "0xB7FD78", Offset = "0xB7FD78", VA = "0xB7FD78")]
		public MagicDragMouseOrbit()
		{
		}
	}
	[Token(Token = "0x2000306")]
	public class MagicFireProjectile : MonoBehaviour
	{
		[Token(Token = "0x40012E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private RaycastHit hit;

		[Token(Token = "0x40012E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public GameObject[] projectiles;

		[Token(Token = "0x40012E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Transform spawnPosition;

		[Token(Token = "0x40012E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[HideInInspector]
		public int currentProjectile;

		[Token(Token = "0x40012E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float speed;

		[Token(Token = "0x40012EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private MagicButtonScript selectedProjectileButton;

		[Token(Token = "0x60014A0")]
		[Address(RVA = "0xB7FD94", Offset = "0xB7FD94", VA = "0xB7FD94")]
		private void Start()
		{
		}

		[Token(Token = "0x60014A1")]
		[Address(RVA = "0xB7FE04", Offset = "0xB7FE04", VA = "0xB7FE04")]
		private void Update()
		{
		}

		[Token(Token = "0x60014A2")]
		[Address(RVA = "0xB80278", Offset = "0xB80278", VA = "0xB80278")]
		public void nextEffect()
		{
		}

		[Token(Token = "0x60014A3")]
		[Address(RVA = "0xB802B8", Offset = "0xB802B8", VA = "0xB802B8")]
		public void previousEffect()
		{
		}

		[Token(Token = "0x60014A4")]
		[Address(RVA = "0xB802F8", Offset = "0xB802F8", VA = "0xB802F8")]
		public void AdjustSpeed(float newSpeed)
		{
		}

		[Token(Token = "0x60014A5")]
		[Address(RVA = "0xB80300", Offset = "0xB80300", VA = "0xB80300")]
		public MagicFireProjectile()
		{
		}
	}
	[Token(Token = "0x2000307")]
	public class MagicLoopScript : MonoBehaviour
	{
		[Token(Token = "0x2000828")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B8CB8", Offset = "0x8B8CB8")]
		private sealed class <EffectLoop>d__4 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002851")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002852")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002853")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MagicLoopScript <>4__this;

			[Token(Token = "0x4002854")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private GameObject <effectPlayer>5__2;

			[Token(Token = "0x17000661")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002F3E")]
				[Address(RVA = "0xB80840", Offset = "0xB80840", VA = "0xB80840", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000662")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002F40")]
				[Address(RVA = "0xB808A8", Offset = "0xB808A8", VA = "0xB808A8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002F3B")]
			[Address(RVA = "0xB80654", Offset = "0xB80654", VA = "0xB80654")]
			[DebuggerHidden]
			public <EffectLoop>d__4(int <>1__state)
			{
			}

			[Token(Token = "0x6002F3C")]
			[Address(RVA = "0xB80690", Offset = "0xB80690", VA = "0xB80690", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002F3D")]
			[Address(RVA = "0xB80694", Offset = "0xB80694", VA = "0xB80694", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002F3F")]
			[Address(RVA = "0xB80848", Offset = "0xB80848", VA = "0xB80848", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40012EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject chosenEffect;

		[Token(Token = "0x40012EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float loopTimeLimit;

		[Token(Token = "0x60014A6")]
		[Address(RVA = "0xB8058C", Offset = "0xB8058C", VA = "0xB8058C")]
		private void Start()
		{
		}

		[Token(Token = "0x60014A7")]
		[Address(RVA = "0xB80590", Offset = "0xB80590", VA = "0xB80590")]
		public void PlayEffect()
		{
		}

		[Token(Token = "0x60014A8")]
		[Address(RVA = "0xB805E4", Offset = "0xB805E4", VA = "0xB805E4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C9888", Offset = "0x8C9888")]
		private IEnumerator EffectLoop()
		{
			return null;
		}

		[Token(Token = "0x60014A9")]
		[Address(RVA = "0xB80680", Offset = "0xB80680", VA = "0xB80680")]
		public MagicLoopScript()
		{
		}
	}
	[Token(Token = "0x2000308")]
	public class MagicLightFade : MonoBehaviour
	{
		[Token(Token = "0x40012ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BD72C", Offset = "0x8BD72C")]
		public float life;

		[Token(Token = "0x40012EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool killAfterLife;

		[Token(Token = "0x40012EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Light li;

		[Token(Token = "0x40012F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float initIntensity;

		[Token(Token = "0x60014AA")]
		[Address(RVA = "0xB80310", Offset = "0xB80310", VA = "0xB80310")]
		private void Start()
		{
		}

		[Token(Token = "0x60014AB")]
		[Address(RVA = "0xB8041C", Offset = "0xB8041C", VA = "0xB8041C")]
		private void Update()
		{
		}

		[Token(Token = "0x60014AC")]
		[Address(RVA = "0xB80570", Offset = "0xB80570", VA = "0xB80570")]
		public MagicLightFade()
		{
		}
	}
	[Token(Token = "0x2000309")]
	public class MagicRotation : MonoBehaviour
	{
		[Token(Token = "0x2000829")]
		public enum spaceEnum
		{
			[Token(Token = "0x4002856")]
			Local,
			[Token(Token = "0x4002857")]
			World
		}

		[Token(Token = "0x40012F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BD764", Offset = "0x8BD764")]
		public UnityEngine.Vector3 rotateVector;

		[Token(Token = "0x40012F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public spaceEnum rotateSpace;

		[Token(Token = "0x60014AD")]
		[Address(RVA = "0xB808B0", Offset = "0xB808B0", VA = "0xB808B0")]
		private void Start()
		{
		}

		[Token(Token = "0x60014AE")]
		[Address(RVA = "0xB808B4", Offset = "0xB808B4", VA = "0xB808B4")]
		private void Update()
		{
		}

		[Token(Token = "0x60014AF")]
		[Address(RVA = "0xB80A08", Offset = "0xB80A08", VA = "0xB80A08")]
		public MagicRotation()
		{
		}
	}
}
namespace OculusSampleFramework
{
	[Token(Token = "0x200030A")]
	public class BoneCapsuleTriggerLogic : MonoBehaviour
	{
		[Token(Token = "0x40012F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InteractableToolTags ToolTags;

		[Token(Token = "0x40012F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HashSet<ColliderZone> CollidersTouchingUs;

		[Token(Token = "0x40012F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<ColliderZone> _elementsToCleanUp;

		[Token(Token = "0x60014B0")]
		[Address(RVA = "0xD2EC28", Offset = "0xD2EC28", VA = "0xD2EC28")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60014B1")]
		[Address(RVA = "0xD2EC80", Offset = "0xD2EC80", VA = "0xD2EC80")]
		private void Update()
		{
		}

		[Token(Token = "0x60014B2")]
		[Address(RVA = "0xD2EF24", Offset = "0xD2EF24", VA = "0xD2EF24")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x60014B3")]
		[Address(RVA = "0xD2F014", Offset = "0xD2F014", VA = "0xD2F014")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x60014B4")]
		[Address(RVA = "0xD2EC84", Offset = "0xD2EC84", VA = "0xD2EC84")]
		private void CleanUpDeadColliders()
		{
		}

		[Token(Token = "0x60014B5")]
		[Address(RVA = "0xD2F104", Offset = "0xD2F104", VA = "0xD2F104")]
		public BoneCapsuleTriggerLogic()
		{
		}
	}
	[Token(Token = "0x200030B")]
	public class ButtonController : Interactable
	{
		[Token(Token = "0x200082A")]
		public enum ContactTest
		{
			[Token(Token = "0x4002859")]
			PerpenTest,
			[Token(Token = "0x400285A")]
			BackwardsPress
		}

		[Token(Token = "0x40012F6")]
		private const float ENTRY_DOT_THRESHOLD = 0.8f;

		[Token(Token = "0x40012F7")]
		private const float PERP_DOT_THRESHOLD = 0.5f;

		[Token(Token = "0x40012F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private GameObject _proximityZone;

		[Token(Token = "0x40012F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject _contactZone;

		[Token(Token = "0x40012FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private GameObject _actionZone;

		[Token(Token = "0x40012FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private ContactTest[] _contactTests;

		[Token(Token = "0x40012FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Transform _buttonPlaneCenter;

		[Token(Token = "0x40012FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private bool _makeSureToolIsOnPositiveSide;

		[Token(Token = "0x40012FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[SerializeField]
		private UnityEngine.Vector3 _localButtonDirection;

		[Token(Token = "0x40012FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private InteractableToolTags[] _allValidToolsTags;

		[Token(Token = "0x4001300")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private int _toolTagsMask;

		[Token(Token = "0x4001301")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private InteractableState _currentButtonState;

		[Token(Token = "0x4001302")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Dictionary<InteractableTool, InteractableState> _toolToState;

		[Token(Token = "0x170001D6")]
		public override int ValidToolTagsMask
		{
			[Token(Token = "0x60014B6")]
			[Address(RVA = "0xD2F19C", Offset = "0xD2F19C", VA = "0xD2F19C", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001D7")]
		public UnityEngine.Vector3 LocalButtonDirection
		{
			[Token(Token = "0x60014B7")]
			[Address(RVA = "0xD2F1A4", Offset = "0xD2F1A4", VA = "0xD2F1A4")]
			get
			{
				return default(UnityEngine.Vector3);
			}
		}

		[Token(Token = "0x60014B8")]
		[Address(RVA = "0xD2F1B0", Offset = "0xD2F1B0", VA = "0xD2F1B0", Slot = "9")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x60014B9")]
		[Address(RVA = "0xD2F304", Offset = "0xD2F304", VA = "0xD2F304")]
		private void FireInteractionEventsOnDepth(InteractableCollisionDepth oldDepth, InteractableTool collidingTool, InteractionType interactionType)
		{
		}

		[Token(Token = "0x60014BA")]
		[Address(RVA = "0xD2F50C", Offset = "0xD2F50C", VA = "0xD2F50C", Slot = "8")]
		public override void UpdateCollisionDepth(InteractableTool interactableTool, InteractableCollisionDepth oldCollisionDepth, InteractableCollisionDepth newCollisionDepth)
		{
		}

		[Token(Token = "0x60014BB")]
		[Address(RVA = "0xD2FA54", Offset = "0xD2FA54", VA = "0xD2FA54")]
		private InteractableState GetUpcomingStateNearField(InteractableState oldState, InteractableCollisionDepth newCollisionDepth, bool toolIsInActionZone, bool toolIsInContactZone, bool toolIsInProximity, bool validContact, bool onPositiveSideOfInteractable)
		{
			return default(InteractableState);
		}

		[Token(Token = "0x60014BC")]
		[Address(RVA = "0xD2F96C", Offset = "0xD2F96C", VA = "0xD2F96C")]
		private bool IsValidContact(InteractableTool collidingTool, UnityEngine.Vector3 buttonDirection)
		{
			return default(bool);
		}

		[Token(Token = "0x60014BD")]
		[Address(RVA = "0xD2FB00", Offset = "0xD2FB00", VA = "0xD2FB00")]
		private bool PassEntryTest(InteractableTool collidingTool, UnityEngine.Vector3 buttonDirection)
		{
			return default(bool);
		}

		[Token(Token = "0x60014BE")]
		[Address(RVA = "0xD2FBF4", Offset = "0xD2FBF4", VA = "0xD2FBF4")]
		private bool PassPerpTest(InteractableTool collidingTool, UnityEngine.Vector3 buttonDirection)
		{
			return default(bool);
		}

		[Token(Token = "0x60014BF")]
		[Address(RVA = "0xD2FD18", Offset = "0xD2FD18", VA = "0xD2FD18")]
		public ButtonController()
		{
		}
	}
	[Token(Token = "0x200030C")]
	public class ButtonTriggerZone : MonoBehaviour, ColliderZone
	{
		[Token(Token = "0x4001303")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _parentInteractableObj;

		[Token(Token = "0x4001304")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8BD82C", Offset = "0x8BD82C")]
		private Collider <Collider>k__BackingField;

		[Token(Token = "0x4001305")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8BD83C", Offset = "0x8BD83C")]
		private Interactable <ParentInteractable>k__BackingField;

		[Token(Token = "0x170001D8")]
		public Collider Collider
		{
			[Token(Token = "0x60014C0")]
			[Address(RVA = "0xD2FE04", Offset = "0xD2FE04", VA = "0xD2FE04", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C98EC", Offset = "0x8C98EC")]
			get
			{
				return null;
			}
			[Token(Token = "0x60014C1")]
			[Address(RVA = "0xD2FE0C", Offset = "0xD2FE0C", VA = "0xD2FE0C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C98FC", Offset = "0x8C98FC")]
			private set
			{
			}
		}

		[Token(Token = "0x170001D9")]
		public Interactable ParentInteractable
		{
			[Token(Token = "0x60014C2")]
			[Address(RVA = "0xD2FE14", Offset = "0xD2FE14", VA = "0xD2FE14", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C990C", Offset = "0x8C990C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60014C3")]
			[Address(RVA = "0xD2FE1C", Offset = "0xD2FE1C", VA = "0xD2FE1C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C991C", Offset = "0x8C991C")]
			private set
			{
			}
		}

		[Token(Token = "0x170001DA")]
		public InteractableCollisionDepth CollisionDepth
		{
			[Token(Token = "0x60014C4")]
			[Address(RVA = "0xD2FE24", Offset = "0xD2FE24", VA = "0xD2FE24", Slot = "6")]
			get
			{
				return default(InteractableCollisionDepth);
			}
		}

		[Token(Token = "0x60014C5")]
		[Address(RVA = "0xD2FE74", Offset = "0xD2FE74", VA = "0xD2FE74")]
		private void Awake()
		{
		}

		[Token(Token = "0x60014C6")]
		[Address(RVA = "0xD2FEF0", Offset = "0xD2FEF0", VA = "0xD2FEF0")]
		public ButtonTriggerZone()
		{
		}
	}
	[Token(Token = "0x200030D")]
	public interface ColliderZone
	{
		[Token(Token = "0x170001DB")]
		Collider Collider
		{
			[Token(Token = "0x60014C7")]
			get;
		}

		[Token(Token = "0x170001DC")]
		Interactable ParentInteractable
		{
			[Token(Token = "0x60014C8")]
			get;
		}

		[Token(Token = "0x170001DD")]
		InteractableCollisionDepth CollisionDepth
		{
			[Token(Token = "0x60014C9")]
			get;
		}
	}
	[Token(Token = "0x200030E")]
	public class ColliderZoneArgs : EventArgs
	{
		[Token(Token = "0x4001306")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ColliderZone Collider;

		[Token(Token = "0x4001307")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly float FrameTime;

		[Token(Token = "0x4001308")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly InteractableTool CollidingTool;

		[Token(Token = "0x4001309")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly InteractionType InteractionT;

		[Token(Token = "0x60014CA")]
		[Address(RVA = "0xD2F468", Offset = "0xD2F468", VA = "0xD2F468")]
		public ColliderZoneArgs(ColliderZone collider, float frameTime, InteractableTool collidingTool, InteractionType interactionType)
		{
		}
	}
	[Token(Token = "0x200030F")]
	public enum InteractionType
	{
		[Token(Token = "0x400130B")]
		Enter,
		[Token(Token = "0x400130C")]
		Stay,
		[Token(Token = "0x400130D")]
		Exit
	}
	[Token(Token = "0x2000310")]
	public class HandsManager : MonoBehaviour
	{
		[Token(Token = "0x200082B")]
		public enum HandsVisualMode
		{
			[Token(Token = "0x400285C")]
			Mesh,
			[Token(Token = "0x400285D")]
			Skeleton,
			[Token(Token = "0x400285E")]
			Both
		}

		[Token(Token = "0x200082C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B8CC8", Offset = "0x8B8CC8")]
		private sealed class <FindSkeletonVisualGameObjects>d__52 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400285F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002860")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002861")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public HandsManager <>4__this;

			[Token(Token = "0x17000663")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002F44")]
				[Address(RVA = "0xD3259C", Offset = "0xD3259C", VA = "0xD3259C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000664")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002F46")]
				[Address(RVA = "0xD32604", Offset = "0xD32604", VA = "0xD32604", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002F41")]
			[Address(RVA = "0xD32090", Offset = "0xD32090", VA = "0xD32090")]
			[DebuggerHidden]
			public <FindSkeletonVisualGameObjects>d__52(int <>1__state)
			{
			}

			[Token(Token = "0x6002F42")]
			[Address(RVA = "0xD3237C", Offset = "0xD3237C", VA = "0xD3237C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002F43")]
			[Address(RVA = "0xD32380", Offset = "0xD32380", VA = "0xD32380", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002F45")]
			[Address(RVA = "0xD325A4", Offset = "0xD325A4", VA = "0xD325A4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400130E")]
		private const string SKELETON_VISUALIZER_NAME = "SkeletonRenderer";

		[Token(Token = "0x400130F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _leftHand;

		[Token(Token = "0x4001310")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject _rightHand;

		[Token(Token = "0x4001311")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public HandsVisualMode VisualMode;

		[Token(Token = "0x4001312")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private OVRHand[] _hand;

		[Token(Token = "0x4001313")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private OVRSkeleton[] _handSkeleton;

		[Token(Token = "0x4001314")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private OVRSkeletonRenderer[] _handSkeletonRenderer;

		[Token(Token = "0x4001315")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private OVRMesh[] _handMesh;

		[Token(Token = "0x4001316")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private OVRMeshRenderer[] _handMeshRenderer;

		[Token(Token = "0x4001317")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private SkinnedMeshRenderer _leftMeshRenderer;

		[Token(Token = "0x4001318")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private SkinnedMeshRenderer _rightMeshRenderer;

		[Token(Token = "0x4001319")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject _leftSkeletonVisual;

		[Token(Token = "0x400131A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private GameObject _rightSkeletonVisual;

		[Token(Token = "0x400131B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float _currentHandAlpha;

		[Token(Token = "0x400131C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private int HandAlphaId;

		[Token(Token = "0x400131D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8BD86C", Offset = "0x8BD86C")]
		private static HandsManager <Instance>k__BackingField;

		[Token(Token = "0x170001DE")]
		public OVRHand RightHand
		{
			[Token(Token = "0x60014CB")]
			[Address(RVA = "0xD30904", Offset = "0xD30904", VA = "0xD30904")]
			get
			{
				return null;
			}
			[Token(Token = "0x60014CC")]
			[Address(RVA = "0xD316B0", Offset = "0xD316B0", VA = "0xD316B0")]
			private set
			{
			}
		}

		[Token(Token = "0x170001DF")]
		public OVRSkeleton RightHandSkeleton
		{
			[Token(Token = "0x60014CD")]
			[Address(RVA = "0xD31334", Offset = "0xD31334", VA = "0xD31334")]
			get
			{
				return null;
			}
			[Token(Token = "0x60014CE")]
			[Address(RVA = "0xD31718", Offset = "0xD31718", VA = "0xD31718")]
			private set
			{
			}
		}

		[Token(Token = "0x170001E0")]
		public OVRSkeletonRenderer RightHandSkeletonRenderer
		{
			[Token(Token = "0x60014CF")]
			[Address(RVA = "0xD31780", Offset = "0xD31780", VA = "0xD31780")]
			get
			{
				return null;
			}
			[Token(Token = "0x60014D0")]
			[Address(RVA = "0xD317B8", Offset = "0xD317B8", VA = "0xD317B8")]
			private set
			{
			}
		}

		[Token(Token = "0x170001E1")]
		public OVRMesh RightHandMesh
		{
			[Token(Token = "0x60014D1")]
			[Address(RVA = "0xD31820", Offset = "0xD31820", VA = "0xD31820")]
			get
			{
				return null;
			}
			[Token(Token = "0x60014D2")]
			[Address(RVA = "0xD31858", Offset = "0xD31858", VA = "0xD31858")]
			private set
			{
			}
		}

		[Token(Token = "0x170001E2")]
		public OVRMeshRenderer RightHandMeshRenderer
		{
			[Token(Token = "0x60014D3")]
			[Address(RVA = "0xD318C0", Offset = "0xD318C0", VA = "0xD318C0")]
			get
			{
				return null;
			}
			[Token(Token = "0x60014D4")]
			[Address(RVA = "0xD318F8", Offset = "0xD318F8", VA = "0xD318F8")]
			private set
			{
			}
		}

		[Token(Token = "0x170001E3")]
		public OVRHand LeftHand
		{
			[Token(Token = "0x60014D5")]
			[Address(RVA = "0xD308D0", Offset = "0xD308D0", VA = "0xD308D0")]
			get
			{
				return null;
			}
			[Token(Token = "0x60014D6")]
			[Address(RVA = "0xD31960", Offset = "0xD31960", VA = "0xD31960")]
			private set
			{
			}
		}

		[Token(Token = "0x170001E4")]
		public OVRSkeleton LeftHandSkeleton
		{
			[Token(Token = "0x60014D7")]
			[Address(RVA = "0xD31300", Offset = "0xD31300", VA = "0xD31300")]
			get
			{
				return null;
			}
			[Token(Token = "0x60014D8")]
			[Address(RVA = "0xD319C4", Offset = "0xD319C4", VA = "0xD319C4")]
			private set
			{
			}
		}

		[Token(Token = "0x170001E5")]
		public OVRSkeletonRenderer LeftHandSkeletonRenderer
		{
			[Token(Token = "0x60014D9")]
			[Address(RVA = "0xD31A28", Offset = "0xD31A28", VA = "0xD31A28")]
			get
			{
				return null;
			}
			[Token(Token = "0x60014DA")]
			[Address(RVA = "0xD31A5C", Offset = "0xD31A5C", VA = "0xD31A5C")]
			private set
			{
			}
		}

		[Token(Token = "0x170001E6")]
		public OVRMesh LeftHandMesh
		{
			[Token(Token = "0x60014DB")]
			[Address(RVA = "0xD31AC0", Offset = "0xD31AC0", VA = "0xD31AC0")]
			get
			{
				return null;
			}
			[Token(Token = "0x60014DC")]
			[Address(RVA = "0xD31AF4", Offset = "0xD31AF4", VA = "0xD31AF4")]
			private set
			{
			}
		}

		[Token(Token = "0x170001E7")]
		public OVRMeshRenderer LeftHandMeshRenderer
		{
			[Token(Token = "0x60014DD")]
			[Address(RVA = "0xD31B58", Offset = "0xD31B58", VA = "0xD31B58")]
			get
			{
				return null;
			}
			[Token(Token = "0x60014DE")]
			[Address(RVA = "0xD31B8C", Offset = "0xD31B8C", VA = "0xD31B8C")]
			private set
			{
			}
		}

		[Token(Token = "0x170001E8")]
		public static HandsManager Instance
		{
			[Token(Token = "0x60014DF")]
			[Address(RVA = "0xD31BF0", Offset = "0xD31BF0", VA = "0xD31BF0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C992C", Offset = "0x8C992C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60014E0")]
			[Address(RVA = "0xD31C40", Offset = "0xD31C40", VA = "0xD31C40")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C993C", Offset = "0x8C993C")]
			private set
			{
			}
		}

		[Token(Token = "0x60014E1")]
		[Address(RVA = "0xD31C94", Offset = "0xD31C94", VA = "0xD31C94")]
		private void Awake()
		{
		}

		[Token(Token = "0x60014E2")]
		[Address(RVA = "0xD32008", Offset = "0xD32008", VA = "0xD32008")]
		private void Update()
		{
		}

		[Token(Token = "0x60014E3")]
		[Address(RVA = "0xD31F98", Offset = "0xD31F98", VA = "0xD31F98")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C994C", Offset = "0x8C994C")]
		private IEnumerator FindSkeletonVisualGameObjects()
		{
			return null;
		}

		[Token(Token = "0x60014E4")]
		[Address(RVA = "0xD300C0", Offset = "0xD300C0", VA = "0xD300C0")]
		public void SwitchVisualization()
		{
		}

		[Token(Token = "0x60014E5")]
		[Address(RVA = "0xD320BC", Offset = "0xD320BC", VA = "0xD320BC")]
		private void SetToCurrentVisualMode()
		{
		}

		[Token(Token = "0x60014E6")]
		[Address(RVA = "0xD3136C", Offset = "0xD3136C", VA = "0xD3136C")]
		public static List<OVRBoneCapsule> GetCapsulesPerBone(OVRSkeleton skeleton, OVRSkeleton.BoneId boneId)
		{
			return null;
		}

		[Token(Token = "0x60014E7")]
		[Address(RVA = "0xD30740", Offset = "0xD30740", VA = "0xD30740")]
		public bool IsInitialized()
		{
			return default(bool);
		}

		[Token(Token = "0x60014E8")]
		[Address(RVA = "0xD3229C", Offset = "0xD3229C", VA = "0xD3229C")]
		public HandsManager()
		{
		}
	}
	[Token(Token = "0x2000311")]
	public abstract class Interactable : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200082D")]
		public class InteractableStateArgsEvent : UnityEvent<InteractableStateArgs>
		{
			[Token(Token = "0x6002F47")]
			[Address(RVA = "0xAEB5E8", Offset = "0xAEB5E8", VA = "0xAEB5E8")]
			public InteractableStateArgsEvent()
			{
			}
		}

		[Token(Token = "0x400131E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected ColliderZone _proximityZoneCollider;

		[Token(Token = "0x400131F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected ColliderZone _contactZoneCollider;

		[Token(Token = "0x4001320")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected ColliderZone _actionZoneCollider;

		[Token(Token = "0x4001324")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public InteractableStateArgsEvent InteractableStateChanged;

		[Token(Token = "0x170001E9")]
		public ColliderZone ProximityCollider
		{
			[Token(Token = "0x60014E9")]
			[Address(RVA = "0xD3260C", Offset = "0xD3260C", VA = "0xD3260C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001EA")]
		public ColliderZone ContactCollider
		{
			[Token(Token = "0x60014EA")]
			[Address(RVA = "0xD32614", Offset = "0xD32614", VA = "0xD32614")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001EB")]
		public ColliderZone ActionCollider
		{
			[Token(Token = "0x60014EB")]
			[Address(RVA = "0xD3261C", Offset = "0xD3261C", VA = "0xD3261C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001EC")]
		public virtual int ValidToolTagsMask
		{
			[Token(Token = "0x60014EC")]
			[Address(RVA = "0xD32624", Offset = "0xD32624", VA = "0xD32624", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x14000034")]
		public event Action<ColliderZoneArgs> ProximityZoneEvent
		{
			[Token(Token = "0x60014ED")]
			[Address(RVA = "0xD3262C", Offset = "0xD3262C", VA = "0xD3262C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C99B0", Offset = "0x8C99B0")]
			add
			{
			}
			[Token(Token = "0x60014EE")]
			[Address(RVA = "0xD326D0", Offset = "0xD326D0", VA = "0xD326D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C99C0", Offset = "0x8C99C0")]
			remove
			{
			}
		}

		[Token(Token = "0x14000035")]
		public event Action<ColliderZoneArgs> ContactZoneEvent
		{
			[Token(Token = "0x60014F0")]
			[Address(RVA = "0xD327E8", Offset = "0xD327E8", VA = "0xD327E8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C99D0", Offset = "0x8C99D0")]
			add
			{
			}
			[Token(Token = "0x60014F1")]
			[Address(RVA = "0xD3288C", Offset = "0xD3288C", VA = "0xD3288C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C99E0", Offset = "0x8C99E0")]
			remove
			{
			}
		}

		[Token(Token = "0x14000036")]
		public event Action<ColliderZoneArgs> ActionZoneEvent
		{
			[Token(Token = "0x60014F3")]
			[Address(RVA = "0xD329A4", Offset = "0xD329A4", VA = "0xD329A4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C99F0", Offset = "0x8C99F0")]
			add
			{
			}
			[Token(Token = "0x60014F4")]
			[Address(RVA = "0xD32A48", Offset = "0xD32A48", VA = "0xD32A48")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C9A00", Offset = "0x8C9A00")]
			remove
			{
			}
		}

		[Token(Token = "0x60014EF")]
		[Address(RVA = "0xD32774", Offset = "0xD32774", VA = "0xD32774", Slot = "5")]
		protected virtual void OnProximityZoneEvent(ColliderZoneArgs args)
		{
		}

		[Token(Token = "0x60014F2")]
		[Address(RVA = "0xD32930", Offset = "0xD32930", VA = "0xD32930", Slot = "6")]
		protected virtual void OnContactZoneEvent(ColliderZoneArgs args)
		{
		}

		[Token(Token = "0x60014F5")]
		[Address(RVA = "0xD32AEC", Offset = "0xD32AEC", VA = "0xD32AEC", Slot = "7")]
		protected virtual void OnActionZoneEvent(ColliderZoneArgs args)
		{
		}

		[Token(Token = "0x60014F6")]
		public abstract void UpdateCollisionDepth(InteractableTool interactableTool, InteractableCollisionDepth oldCollisionDepth, InteractableCollisionDepth newCollisionDepth);

		[Token(Token = "0x60014F7")]
		[Address(RVA = "0xD2F29C", Offset = "0xD2F29C", VA = "0xD2F29C", Slot = "9")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x60014F8")]
		[Address(RVA = "0xD32B60", Offset = "0xD32B60", VA = "0xD32B60", Slot = "10")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x60014F9")]
		[Address(RVA = "0xD2FDFC", Offset = "0xD2FDFC", VA = "0xD2FDFC")]
		protected Interactable()
		{
		}
	}
	[Token(Token = "0x2000312")]
	public enum InteractableCollisionDepth
	{
		[Token(Token = "0x4001326")]
		None,
		[Token(Token = "0x4001327")]
		Proximity,
		[Token(Token = "0x4001328")]
		Contact,
		[Token(Token = "0x4001329")]
		Action
	}
	[Token(Token = "0x2000313")]
	public enum InteractableState
	{
		[Token(Token = "0x400132B")]
		Default,
		[Token(Token = "0x400132C")]
		ProximityState,
		[Token(Token = "0x400132D")]
		ContactState,
		[Token(Token = "0x400132E")]
		ActionState
	}
	[Token(Token = "0x2000314")]
	public class InteractableStateArgs : EventArgs
	{
		[Token(Token = "0x400132F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly Interactable Interactable;

		[Token(Token = "0x4001330")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly InteractableTool Tool;

		[Token(Token = "0x4001331")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly InteractableState OldInteractableState;

		[Token(Token = "0x4001332")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public readonly InteractableState NewInteractableState;

		[Token(Token = "0x4001333")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly ColliderZoneArgs ColliderArgs;

		[Token(Token = "0x60014FA")]
		[Address(RVA = "0xAEB8F0", Offset = "0xAEB8F0", VA = "0xAEB8F0")]
		public InteractableStateArgs(Interactable interactable, InteractableTool tool, InteractableState newInteractableState, InteractableState oldState, ColliderZoneArgs colliderArgs)
		{
		}
	}
	[Token(Token = "0x2000315")]
	public class InteractableRegistry : MonoBehaviour
	{
		[Token(Token = "0x4001334")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static HashSet<Interactable> _interactables;

		[Token(Token = "0x170001ED")]
		public static HashSet<Interactable> Interactables
		{
			[Token(Token = "0x60014FB")]
			[Address(RVA = "0xAEB67C", Offset = "0xAEB67C", VA = "0xAEB67C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60014FC")]
		[Address(RVA = "0xAEB6E4", Offset = "0xAEB6E4", VA = "0xAEB6E4")]
		public static void RegisterInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x60014FD")]
		[Address(RVA = "0xAEB7AC", Offset = "0xAEB7AC", VA = "0xAEB7AC")]
		public static void UnregisterInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x60014FE")]
		[Address(RVA = "0xAEB874", Offset = "0xAEB874", VA = "0xAEB874")]
		public InteractableRegistry()
		{
		}
	}
	[Token(Token = "0x2000316")]
	public class InteractableToolsCreator : MonoBehaviour
	{
		[Token(Token = "0x200082E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B8CD8", Offset = "0x8B8CD8")]
		private sealed class <AttachToolsToHands>d__3 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002862")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002863")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002864")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Transform[] toolObjects;

			[Token(Token = "0x4002865")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool isRightHand;

			[Token(Token = "0x4002866")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public InteractableToolsCreator <>4__this;

			[Token(Token = "0x4002867")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private HandsManager <handsManagerObj>5__2;

			[Token(Token = "0x4002868")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private HashSet<Transform>.Enumerator <>7__wrap2;

			[Token(Token = "0x4002869")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private Transform <toolObject>5__4;

			[Token(Token = "0x400286A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private OVRSkeleton <handSkeletonToAttachTo>5__5;

			[Token(Token = "0x17000665")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002F4C")]
				[Address(RVA = "0xAECA7C", Offset = "0xAECA7C", VA = "0xAECA7C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000666")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002F4E")]
				[Address(RVA = "0xAECAE4", Offset = "0xAECAE4", VA = "0xAECAE4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002F48")]
			[Address(RVA = "0xAEC534", Offset = "0xAEC534", VA = "0xAEC534")]
			[DebuggerHidden]
			public <AttachToolsToHands>d__3(int <>1__state)
			{
			}

			[Token(Token = "0x6002F49")]
			[Address(RVA = "0xAEC660", Offset = "0xAEC660", VA = "0xAEC660", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002F4A")]
			[Address(RVA = "0xAEC6D4", Offset = "0xAEC6D4", VA = "0xAEC6D4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002F4B")]
			[Address(RVA = "0xAEC67C", Offset = "0xAEC67C", VA = "0xAEC67C")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6002F4D")]
			[Address(RVA = "0xAECA84", Offset = "0xAECA84", VA = "0xAECA84", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001335")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform[] LeftHandTools;

		[Token(Token = "0x4001336")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform[] RightHandTools;

		[Token(Token = "0x6001500")]
		[Address(RVA = "0xAEC42C", Offset = "0xAEC42C", VA = "0xAEC42C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001501")]
		[Address(RVA = "0xAEC4A8", Offset = "0xAEC4A8", VA = "0xAEC4A8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C9A10", Offset = "0x8C9A10")]
		private IEnumerator AttachToolsToHands(Transform[] toolObjects, bool isRightHand)
		{
			return null;
		}

		[Token(Token = "0x6001502")]
		[Address(RVA = "0xAEC560", Offset = "0xAEC560", VA = "0xAEC560")]
		private void AttachToolToHandTransform(Transform tool, bool isRightHanded)
		{
		}

		[Token(Token = "0x6001503")]
		[Address(RVA = "0xAEC658", Offset = "0xAEC658", VA = "0xAEC658")]
		public InteractableToolsCreator()
		{
		}
	}
	[Token(Token = "0x2000317")]
	public class InteractableToolsInputRouter : MonoBehaviour
	{
		[Token(Token = "0x4001337")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static InteractableToolsInputRouter _instance;

		[Token(Token = "0x4001338")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool _leftPinch;

		[Token(Token = "0x4001339")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private bool _rightPinch;

		[Token(Token = "0x400133A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private HashSet<InteractableTool> _leftHandNearTools;

		[Token(Token = "0x400133B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private HashSet<InteractableTool> _leftHandFarTools;

		[Token(Token = "0x400133C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private HashSet<InteractableTool> _rightHandNearTools;

		[Token(Token = "0x400133D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private HashSet<InteractableTool> _rightHandFarTools;

		[Token(Token = "0x170001EE")]
		public static InteractableToolsInputRouter Instance
		{
			[Token(Token = "0x6001504")]
			[Address(RVA = "0xAECAEC", Offset = "0xAECAEC", VA = "0xAECAEC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001505")]
		[Address(RVA = "0xAECC54", Offset = "0xAECC54", VA = "0xAECC54")]
		public void RegisterInteractableTool(InteractableTool interactableTool)
		{
		}

		[Token(Token = "0x6001506")]
		[Address(RVA = "0xAECD00", Offset = "0xAECD00", VA = "0xAECD00")]
		public void UnregisterInteractableTool(InteractableTool interactableTool)
		{
		}

		[Token(Token = "0x6001507")]
		[Address(RVA = "0xAECDAC", Offset = "0xAECDAC", VA = "0xAECDAC")]
		private void Update()
		{
		}

		[Token(Token = "0x6001508")]
		[Address(RVA = "0xAED090", Offset = "0xAED090", VA = "0xAED090")]
		private bool UpdateToolsAndEnableState(HashSet<InteractableTool> tools, bool toolsAreEnabledThisFrame)
		{
			return default(bool);
		}

		[Token(Token = "0x6001509")]
		[Address(RVA = "0xAED0D8", Offset = "0xAED0D8", VA = "0xAED0D8")]
		private bool UpdateTools(HashSet<InteractableTool> tools, bool resetCollisionData = false)
		{
			return default(bool);
		}

		[Token(Token = "0x600150A")]
		[Address(RVA = "0xAED328", Offset = "0xAED328", VA = "0xAED328")]
		private void ToggleToolsEnableState(HashSet<InteractableTool> tools, bool enableState)
		{
		}

		[Token(Token = "0x600150B")]
		[Address(RVA = "0xAED454", Offset = "0xAED454", VA = "0xAED454")]
		public InteractableToolsInputRouter()
		{
		}
	}
	[Token(Token = "0x2000318")]
	public class FingerTipPokeTool : InteractableTool
	{
		[Token(Token = "0x200082F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B8CE8", Offset = "0x8B8CE8")]
		private sealed class <AttachTriggerLogic>d__21 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400286B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400286C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400286D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FingerTipPokeTool <>4__this;

			[Token(Token = "0x17000667")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002F52")]
				[Address(RVA = "0xD3157C", Offset = "0xD3157C", VA = "0xD3157C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000668")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002F54")]
				[Address(RVA = "0xD315E4", Offset = "0xD315E4", VA = "0xD315E4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002F4F")]
			[Address(RVA = "0xD30400", Offset = "0xD30400", VA = "0xD30400")]
			[DebuggerHidden]
			public <AttachTriggerLogic>d__21(int <>1__state)
			{
			}

			[Token(Token = "0x6002F50")]
			[Address(RVA = "0xD30F98", Offset = "0xD30F98", VA = "0xD30F98", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002F51")]
			[Address(RVA = "0xD30F9C", Offset = "0xD30F9C", VA = "0xD30F9C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002F53")]
			[Address(RVA = "0xD31584", Offset = "0xD31584", VA = "0xD31584", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400133E")]
		private const int NUM_VELOCITY_FRAMES = 10;

		[Token(Token = "0x400133F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private FingerTipPokeToolView _fingerTipPokeToolView;

		[Token(Token = "0x4001340")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private OVRPlugin.HandFinger _fingerToFollow;

		[Token(Token = "0x4001341")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private UnityEngine.Vector3[] _velocityFrames;

		[Token(Token = "0x4001342")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int _currVelocityFrame;

		[Token(Token = "0x4001343")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private bool _sampledMaxFramesAlready;

		[Token(Token = "0x4001344")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private UnityEngine.Vector3 _position;

		[Token(Token = "0x4001345")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private BoneCapsuleTriggerLogic[] _boneCapsuleTriggerLogic;

		[Token(Token = "0x4001346")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private float _lastScale;

		[Token(Token = "0x4001347")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private bool _isInitialized;

		[Token(Token = "0x4001348")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private OVRBoneCapsule _capsuleToTrack;

		[Token(Token = "0x170001EF")]
		public override InteractableToolTags ToolTags
		{
			[Token(Token = "0x600150C")]
			[Address(RVA = "0xD3026C", Offset = "0xD3026C", VA = "0xD3026C", Slot = "4")]
			get
			{
				return default(InteractableToolTags);
			}
		}

		[Token(Token = "0x170001F0")]
		public override ToolInputState ToolInputState
		{
			[Token(Token = "0x600150D")]
			[Address(RVA = "0xD30274", Offset = "0xD30274", VA = "0xD30274", Slot = "5")]
			get
			{
				return default(ToolInputState);
			}
		}

		[Token(Token = "0x170001F1")]
		public override bool IsFarFieldTool
		{
			[Token(Token = "0x600150E")]
			[Address(RVA = "0xD3027C", Offset = "0xD3027C", VA = "0xD3027C", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001F2")]
		public override bool EnableState
		{
			[Token(Token = "0x600150F")]
			[Address(RVA = "0xD30284", Offset = "0xD30284", VA = "0xD30284", Slot = "10")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001510")]
			[Address(RVA = "0xD302B0", Offset = "0xD302B0", VA = "0xD302B0", Slot = "11")]
			set
			{
			}
		}

		[Token(Token = "0x6001511")]
		[Address(RVA = "0xD302EC", Offset = "0xD302EC", VA = "0xD302EC", Slot = "12")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x6001512")]
		[Address(RVA = "0xD30390", Offset = "0xD30390", VA = "0xD30390")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C9A74", Offset = "0x8C9A74")]
		private IEnumerator AttachTriggerLogic()
		{
			return null;
		}

		[Token(Token = "0x6001513")]
		[Address(RVA = "0xD3042C", Offset = "0xD3042C", VA = "0xD3042C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001514")]
		[Address(RVA = "0xD3093C", Offset = "0xD3093C", VA = "0xD3093C")]
		private void UpdateAverageVelocity()
		{
		}

		[Token(Token = "0x6001515")]
		[Address(RVA = "0xD30BB4", Offset = "0xD30BB4", VA = "0xD30BB4")]
		private void CheckAndUpdateScale()
		{
		}

		[Token(Token = "0x6001516")]
		[Address(RVA = "0xD30CF4", Offset = "0xD30CF4", VA = "0xD30CF4", Slot = "7")]
		public override List<InteractableCollisionInfo> GetNextIntersectingObjects()
		{
			return null;
		}

		[Token(Token = "0x6001517")]
		[Address(RVA = "0xD30F78", Offset = "0xD30F78", VA = "0xD30F78", Slot = "8")]
		public override void FocusOnInteractable(Interactable focusedInteractable, ColliderZone colliderZone)
		{
		}

		[Token(Token = "0x6001518")]
		[Address(RVA = "0xD30F7C", Offset = "0xD30F7C", VA = "0xD30F7C", Slot = "9")]
		public override void DeFocus()
		{
		}

		[Token(Token = "0x6001519")]
		[Address(RVA = "0xD30F80", Offset = "0xD30F80", VA = "0xD30F80")]
		public FingerTipPokeTool()
		{
		}
	}
	[Token(Token = "0x2000319")]
	public class FingerTipPokeToolView : MonoBehaviour, InteractableToolView
	{
		[Token(Token = "0x4001349")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshRenderer _sphereMeshRenderer;

		[Token(Token = "0x400134A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8BD8FC", Offset = "0x8BD8FC")]
		private InteractableTool <InteractableTool>k__BackingField;

		[Token(Token = "0x400134B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8BD90C", Offset = "0x8BD90C")]
		private bool <ToolActivateState>k__BackingField;

		[Token(Token = "0x400134C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8BD91C", Offset = "0x8BD91C")]
		private float <SphereRadius>k__BackingField;

		[Token(Token = "0x170001F3")]
		public InteractableTool InteractableTool
		{
			[Token(Token = "0x600151A")]
			[Address(RVA = "0xD315EC", Offset = "0xD315EC", VA = "0xD315EC", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C9AD8", Offset = "0x8C9AD8")]
			get
			{
				return null;
			}
			[Token(Token = "0x600151B")]
			[Address(RVA = "0xD315F4", Offset = "0xD315F4", VA = "0xD315F4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C9AE8", Offset = "0x8C9AE8")]
			set
			{
			}
		}

		[Token(Token = "0x170001F4")]
		public bool EnableState
		{
			[Token(Token = "0x600151C")]
			[Address(RVA = "0xD315FC", Offset = "0xD315FC", VA = "0xD315FC", Slot = "6")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600151D")]
			[Address(RVA = "0xD31618", Offset = "0xD31618", VA = "0xD31618", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x170001F5")]
		public bool ToolActivateState
		{
			[Token(Token = "0x600151E")]
			[Address(RVA = "0xD31638", Offset = "0xD31638", VA = "0xD31638", Slot = "8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C9AF8", Offset = "0x8C9AF8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600151F")]
			[Address(RVA = "0xD31640", Offset = "0xD31640", VA = "0xD31640", Slot = "9")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C9B08", Offset = "0x8C9B08")]
			set
			{
			}
		}

		[Token(Token = "0x170001F6")]
		public float SphereRadius
		{
			[Token(Token = "0x6001520")]
			[Address(RVA = "0xD3164C", Offset = "0xD3164C", VA = "0xD3164C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C9B18", Offset = "0x8C9B18")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001521")]
			[Address(RVA = "0xD31654", Offset = "0xD31654", VA = "0xD31654")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C9B28", Offset = "0x8C9B28")]
			private set
			{
			}
		}

		[Token(Token = "0x6001522")]
		[Address(RVA = "0xD3165C", Offset = "0xD3165C", VA = "0xD3165C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001523")]
		[Address(RVA = "0xD316A4", Offset = "0xD316A4", VA = "0xD316A4", Slot = "5")]
		public void SetFocusedInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x6001524")]
		[Address(RVA = "0xD316A8", Offset = "0xD316A8", VA = "0xD316A8")]
		public FingerTipPokeToolView()
		{
		}
	}
	[Token(Token = "0x200031A")]
	[Flags]
	public enum InteractableToolTags
	{
		[Token(Token = "0x400134E")]
		None = 0,
		[Token(Token = "0x400134F")]
		Ray = 1,
		[Token(Token = "0x4001350")]
		Poke = 4,
		[Token(Token = "0x4001351")]
		All = -1
	}
	[Token(Token = "0x200031B")]
	public enum ToolInputState
	{
		[Token(Token = "0x4001353")]
		Inactive,
		[Token(Token = "0x4001354")]
		PrimaryInputDown,
		[Token(Token = "0x4001355")]
		PrimaryInputDownStay,
		[Token(Token = "0x4001356")]
		PrimaryInputUp
	}
	[Token(Token = "0x200031C")]
	public class InteractableCollisionInfo
	{
		[Token(Token = "0x4001357")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ColliderZone InteractableCollider;

		[Token(Token = "0x4001358")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InteractableCollisionDepth CollisionDepth;

		[Token(Token = "0x4001359")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public InteractableTool CollidingTool;

		[Token(Token = "0x6001525")]
		[Address(RVA = "0xAEB638", Offset = "0xAEB638", VA = "0xAEB638")]
		public InteractableCollisionInfo(ColliderZone collider, InteractableCollisionDepth collisionDepth, InteractableTool collidingTool)
		{
		}
	}
	[Token(Token = "0x200031D")]
	public abstract class InteractableTool : MonoBehaviour
	{
		[Token(Token = "0x400135A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8BD92C", Offset = "0x8BD92C")]
		private bool <IsRightHandedTool>k__BackingField;

		[Token(Token = "0x400135B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8BD93C", Offset = "0x8BD93C")]
		private UnityEngine.Vector3 <Velocity>k__BackingField;

		[Token(Token = "0x400135C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8BD94C", Offset = "0x8BD94C")]
		private UnityEngine.Vector3 <InteractionPosition>k__BackingField;

		[Token(Token = "0x400135D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected List<InteractableCollisionInfo> _currentIntersectingObjects;

		[Token(Token = "0x400135E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<Interactable> _addedInteractables;

		[Token(Token = "0x400135F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<Interactable> _removedInteractables;

		[Token(Token = "0x4001360")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private List<Interactable> _remainingInteractables;

		[Token(Token = "0x4001361")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Dictionary<Interactable, InteractableCollisionInfo> _currInteractableToCollisionInfos;

		[Token(Token = "0x4001362")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Dictionary<Interactable, InteractableCollisionInfo> _prevInteractableToCollisionInfos;

		[Token(Token = "0x170001F7")]
		public Transform ToolTransform
		{
			[Token(Token = "0x6001526")]
			[Address(RVA = "0xAEB994", Offset = "0xAEB994", VA = "0xAEB994")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001F8")]
		public bool IsRightHandedTool
		{
			[Token(Token = "0x6001527")]
			[Address(RVA = "0xAEB99C", Offset = "0xAEB99C", VA = "0xAEB99C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C9B38", Offset = "0x8C9B38")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001528")]
			[Address(RVA = "0xAEB9A4", Offset = "0xAEB9A4", VA = "0xAEB9A4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C9B48", Offset = "0x8C9B48")]
			set
			{
			}
		}

		[Token(Token = "0x170001F9")]
		public abstract InteractableToolTags ToolTags
		{
			[Token(Token = "0x6001529")]
			get;
		}

		[Token(Token = "0x170001FA")]
		public abstract ToolInputState ToolInputState
		{
			[Token(Token = "0x600152A")]
			get;
		}

		[Token(Token = "0x170001FB")]
		public abstract bool IsFarFieldTool
		{
			[Token(Token = "0x600152B")]
			get;
		}

		[Token(Token = "0x170001FC")]
		public UnityEngine.Vector3 Velocity
		{
			[Token(Token = "0x600152C")]
			[Address(RVA = "0xAEB9B0", Offset = "0xAEB9B0", VA = "0xAEB9B0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C9B58", Offset = "0x8C9B58")]
			get
			{
				return default(UnityEngine.Vector3);
			}
			[Token(Token = "0x600152D")]
			[Address(RVA = "0xAEB9BC", Offset = "0xAEB9BC", VA = "0xAEB9BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C9B68", Offset = "0x8C9B68")]
			protected set
			{
			}
		}

		[Token(Token = "0x170001FD")]
		public UnityEngine.Vector3 InteractionPosition
		{
			[Token(Token = "0x600152E")]
			[Address(RVA = "0xAEB9C8", Offset = "0xAEB9C8", VA = "0xAEB9C8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C9B78", Offset = "0x8C9B78")]
			get
			{
				return default(UnityEngine.Vector3);
			}
			[Token(Token = "0x600152F")]
			[Address(RVA = "0xAEB9D4", Offset = "0xAEB9D4", VA = "0xAEB9D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C9B88", Offset = "0x8C9B88")]
			protected set
			{
			}
		}

		[Token(Token = "0x170001FE")]
		public abstract bool EnableState
		{
			[Token(Token = "0x6001534")]
			get;
			[Token(Token = "0x6001535")]
			set;
		}

		[Token(Token = "0x6001530")]
		[Address(RVA = "0xAEB9E0", Offset = "0xAEB9E0", VA = "0xAEB9E0")]
		public List<InteractableCollisionInfo> GetCurrentIntersectingObjects()
		{
			return null;
		}

		[Token(Token = "0x6001531")]
		public abstract List<InteractableCollisionInfo> GetNextIntersectingObjects();

		[Token(Token = "0x6001532")]
		public abstract void FocusOnInteractable(Interactable focusedInteractable, ColliderZone colliderZone);

		[Token(Token = "0x6001533")]
		public abstract void DeFocus();

		[Token(Token = "0x6001536")]
		public abstract void Initialize();

		[Token(Token = "0x6001537")]
		[Address(RVA = "0xAEB9E8", Offset = "0xAEB9E8", VA = "0xAEB9E8")]
		public KeyValuePair<Interactable, InteractableCollisionInfo> GetFirstCurrentCollisionInfo()
		{
			return default(KeyValuePair<Interactable, InteractableCollisionInfo>);
		}

		[Token(Token = "0x6001538")]
		[Address(RVA = "0xAEBA38", Offset = "0xAEBA38", VA = "0xAEBA38")]
		public void ClearAllCurrentCollisionInfos()
		{
		}

		[Token(Token = "0x6001539")]
		[Address(RVA = "0xAEBA90", Offset = "0xAEBA90", VA = "0xAEBA90", Slot = "13")]
		public virtual void UpdateCurrentCollisionsBasedOnDepth()
		{
		}

		[Token(Token = "0x600153A")]
		[Address(RVA = "0xAEBCD4", Offset = "0xAEBCD4", VA = "0xAEBCD4", Slot = "14")]
		public virtual void UpdateLatestCollisionData()
		{
		}

		[Token(Token = "0x600153B")]
		[Address(RVA = "0xAEC31C", Offset = "0xAEC31C", VA = "0xAEC31C")]
		protected InteractableTool()
		{
		}
	}
	[Token(Token = "0x200031E")]
	public interface InteractableToolView
	{
		[Token(Token = "0x170001FF")]
		InteractableTool InteractableTool
		{
			[Token(Token = "0x600153C")]
			get;
		}

		[Token(Token = "0x17000200")]
		bool EnableState
		{
			[Token(Token = "0x600153E")]
			get;
			[Token(Token = "0x600153F")]
			set;
		}

		[Token(Token = "0x17000201")]
		bool ToolActivateState
		{
			[Token(Token = "0x6001540")]
			get;
			[Token(Token = "0x6001541")]
			set;
		}

		[Token(Token = "0x600153D")]
		void SetFocusedInteractable(Interactable interactable);
	}
	[Token(Token = "0x200031F")]
	public class PinchStateModule
	{
		[Token(Token = "0x2000830")]
		private enum PinchState
		{
			[Token(Token = "0x400286F")]
			None,
			[Token(Token = "0x4002870")]
			PinchDown,
			[Token(Token = "0x4002871")]
			PinchStay,
			[Token(Token = "0x4002872")]
			PinchUp
		}

		[Token(Token = "0x4001363")]
		private const float PINCH_STRENGTH_THRESHOLD = 1f;

		[Token(Token = "0x4001364")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private PinchState _currPinchState;

		[Token(Token = "0x4001365")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Interactable _firstFocusedInteractable;

		[Token(Token = "0x17000202")]
		public bool PinchUpAndDownOnFocusedObject
		{
			[Token(Token = "0x6001542")]
			[Address(RVA = "0xAEF2E4", Offset = "0xAEF2E4", VA = "0xAEF2E4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000203")]
		public bool PinchSteadyOnFocusedObject
		{
			[Token(Token = "0x6001543")]
			[Address(RVA = "0xAEF370", Offset = "0xAEF370", VA = "0xAEF370")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000204")]
		public bool PinchDownOnFocusedObject
		{
			[Token(Token = "0x6001544")]
			[Address(RVA = "0xAEF3FC", Offset = "0xAEF3FC", VA = "0xAEF3FC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001545")]
		[Address(RVA = "0xAEF488", Offset = "0xAEF488", VA = "0xAEF488")]
		public PinchStateModule()
		{
		}

		[Token(Token = "0x6001546")]
		[Address(RVA = "0xAEF4B4", Offset = "0xAEF4B4", VA = "0xAEF4B4")]
		public void UpdateState(OVRHand hand, Interactable currFocusedInteractable)
		{
		}
	}
	[Token(Token = "0x2000320")]
	public class RayTool : InteractableTool
	{
		[Token(Token = "0x4001366")]
		private const float MINIMUM_RAY_CAST_DISTANCE = 0.8f;

		[Token(Token = "0x4001367")]
		private const float COLLIDER_RADIUS = 0.01f;

		[Token(Token = "0x4001368")]
		private const int NUM_MAX_PRIMARY_HITS = 10;

		[Token(Token = "0x4001369")]
		private const int NUM_MAX_SECONDARY_HITS = 25;

		[Token(Token = "0x400136A")]
		private const int NUM_COLLIDERS_TO_TEST = 20;

		[Token(Token = "0x400136B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private RayToolView _rayToolView;

		[Token(Token = "0x400136C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8BD96C", Offset = "0x8BD96C")]
		[SerializeField]
		private float _coneAngleDegrees;

		[Token(Token = "0x400136D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[SerializeField]
		private float _farFieldMaxDistance;

		[Token(Token = "0x400136E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private PinchStateModule _pinchStateModule;

		[Token(Token = "0x400136F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Interactable _focusedInteractable;

		[Token(Token = "0x4001370")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Collider[] _collidersOverlapped;

		[Token(Token = "0x4001371")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Interactable _currInteractableCastedAgainst;

		[Token(Token = "0x4001372")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private float _coneAngleReleaseDegrees;

		[Token(Token = "0x4001373")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private RaycastHit[] _primaryHits;

		[Token(Token = "0x4001374")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Collider[] _secondaryOverlapResults;

		[Token(Token = "0x4001375")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private bool _initialized;

		[Token(Token = "0x17000205")]
		public override InteractableToolTags ToolTags
		{
			[Token(Token = "0x6001547")]
			[Address(RVA = "0xAEF754", Offset = "0xAEF754", VA = "0xAEF754", Slot = "4")]
			get
			{
				return default(InteractableToolTags);
			}
		}

		[Token(Token = "0x17000206")]
		public override ToolInputState ToolInputState
		{
			[Token(Token = "0x6001548")]
			[Address(RVA = "0xAEF75C", Offset = "0xAEF75C", VA = "0xAEF75C", Slot = "5")]
			get
			{
				return default(ToolInputState);
			}
		}

		[Token(Token = "0x17000207")]
		public override bool IsFarFieldTool
		{
			[Token(Token = "0x6001549")]
			[Address(RVA = "0xAEF7C4", Offset = "0xAEF7C4", VA = "0xAEF7C4", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000208")]
		public override bool EnableState
		{
			[Token(Token = "0x600154A")]
			[Address(RVA = "0xAEF7CC", Offset = "0xAEF7CC", VA = "0xAEF7CC", Slot = "10")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600154B")]
			[Address(RVA = "0xAEF810", Offset = "0xAEF810", VA = "0xAEF810", Slot = "11")]
			set
			{
			}
		}

		[Token(Token = "0x600154C")]
		[Address(RVA = "0xAEF884", Offset = "0xAEF884", VA = "0xAEF884", Slot = "12")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x600154D")]
		[Address(RVA = "0xAEF8DC", Offset = "0xAEF8DC", VA = "0xAEF8DC")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600154E")]
		[Address(RVA = "0xAEF978", Offset = "0xAEF978", VA = "0xAEF978")]
		private void Update()
		{
		}

		[Token(Token = "0x600154F")]
		[Address(RVA = "0xAEFC80", Offset = "0xAEFC80", VA = "0xAEFC80")]
		private UnityEngine.Vector3 GetRayCastOrigin()
		{
			return default(UnityEngine.Vector3);
		}

		[Token(Token = "0x6001550")]
		[Address(RVA = "0xAEFD7C", Offset = "0xAEFD7C", VA = "0xAEFD7C", Slot = "7")]
		public override List<InteractableCollisionInfo> GetNextIntersectingObjects()
		{
			return null;
		}

		[Token(Token = "0x6001551")]
		[Address(RVA = "0xAF00E0", Offset = "0xAF00E0", VA = "0xAF00E0")]
		private bool HasRayReleasedInteractable(Interactable focusedInteractable)
		{
			return default(bool);
		}

		[Token(Token = "0x6001552")]
		[Address(RVA = "0xAF0284", Offset = "0xAF0284", VA = "0xAF0284")]
		private Interactable FindTargetInteractable()
		{
			return null;
		}

		[Token(Token = "0x6001553")]
		[Address(RVA = "0xAF03AC", Offset = "0xAF03AC", VA = "0xAF03AC")]
		private Interactable FindPrimaryRaycastHit(UnityEngine.Vector3 rayOrigin, UnityEngine.Vector3 rayDirection)
		{
			return null;
		}

		[Token(Token = "0x6001554")]
		[Address(RVA = "0xAF06E4", Offset = "0xAF06E4", VA = "0xAF06E4")]
		private Interactable FindInteractableViaConeTest(UnityEngine.Vector3 rayOrigin, UnityEngine.Vector3 rayDirection)
		{
			return null;
		}

		[Token(Token = "0x6001555")]
		[Address(RVA = "0xAF0AF4", Offset = "0xAF0AF4", VA = "0xAF0AF4", Slot = "8")]
		public override void FocusOnInteractable(Interactable focusedInteractable, ColliderZone colliderZone)
		{
		}

		[Token(Token = "0x6001556")]
		[Address(RVA = "0xAF0BC8", Offset = "0xAF0BC8", VA = "0xAF0BC8", Slot = "9")]
		public override void DeFocus()
		{
		}

		[Token(Token = "0x6001557")]
		[Address(RVA = "0xAF0BFC", Offset = "0xAF0BFC", VA = "0xAF0BFC")]
		public RayTool()
		{
		}
	}
	[Token(Token = "0x2000321")]
	public class RayToolView : MonoBehaviour, InteractableToolView
	{
		[Token(Token = "0x4001376")]
		private const int NUM_RAY_LINE_POSITIONS = 25;

		[Token(Token = "0x4001377")]
		private const float DEFAULT_RAY_CAST_DISTANCE = 3f;

		[Token(Token = "0x4001378")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform _targetTransform;

		[Token(Token = "0x4001379")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private LineRenderer _lineRenderer;

		[Token(Token = "0x400137A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool _toolActivateState;

		[Token(Token = "0x400137B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Transform _focusedTransform;

		[Token(Token = "0x400137C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private UnityEngine.Vector3[] linePositions;

		[Token(Token = "0x400137D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Gradient _oldColorGradient;

		[Token(Token = "0x400137E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Gradient _highLightColorGradient;

		[Token(Token = "0x400137F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8BD9E0", Offset = "0x8BD9E0")]
		private InteractableTool <InteractableTool>k__BackingField;

		[Token(Token = "0x17000209")]
		public bool EnableState
		{
			[Token(Token = "0x6001558")]
			[Address(RVA = "0xAEF7F4", Offset = "0xAEF7F4", VA = "0xAEF7F4", Slot = "6")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001559")]
			[Address(RVA = "0xAEF82C", Offset = "0xAEF82C", VA = "0xAEF82C", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x1700020A")]
		public bool ToolActivateState
		{
			[Token(Token = "0x600155A")]
			[Address(RVA = "0xAF0CB4", Offset = "0xAF0CB4", VA = "0xAF0CB4", Slot = "8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600155B")]
			[Address(RVA = "0xAEFC44", Offset = "0xAEFC44", VA = "0xAEFC44", Slot = "9")]
			set
			{
			}
		}

		[Token(Token = "0x1700020B")]
		public InteractableTool InteractableTool
		{
			[Token(Token = "0x600155D")]
			[Address(RVA = "0xAF0EE4", Offset = "0xAF0EE4", VA = "0xAF0EE4", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C9B98", Offset = "0x8C9B98")]
			get
			{
				return null;
			}
			[Token(Token = "0x600155E")]
			[Address(RVA = "0xAF0EEC", Offset = "0xAF0EEC", VA = "0xAF0EEC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C9BA8", Offset = "0x8C9BA8")]
			set
			{
			}
		}

		[Token(Token = "0x600155C")]
		[Address(RVA = "0xAF0CBC", Offset = "0xAF0CBC", VA = "0xAF0CBC")]
		private void Awake()
		{
		}

		[Token(Token = "0x600155F")]
		[Address(RVA = "0xAF0B28", Offset = "0xAF0B28", VA = "0xAF0B28", Slot = "5")]
		public void SetFocusedInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x6001560")]
		[Address(RVA = "0xAF0EF4", Offset = "0xAF0EF4", VA = "0xAF0EF4")]
		private void Update()
		{
		}

		[Token(Token = "0x6001561")]
		[Address(RVA = "0xAF1220", Offset = "0xAF1220", VA = "0xAF1220")]
		public static UnityEngine.Vector3 GetPointOnBezierCurve(UnityEngine.Vector3 p0, UnityEngine.Vector3 p1, UnityEngine.Vector3 p2, UnityEngine.Vector3 p3, float t)
		{
			return default(UnityEngine.Vector3);
		}

		[Token(Token = "0x6001562")]
		[Address(RVA = "0xAF1410", Offset = "0xAF1410", VA = "0xAF1410")]
		public RayToolView()
		{
		}
	}
	[Token(Token = "0x2000322")]
	public class ControllerBoxController : MonoBehaviour
	{
		[Token(Token = "0x4001380")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TrainLocomotive _locomotive;

		[Token(Token = "0x4001381")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private CowController _cowController;

		[Token(Token = "0x6001563")]
		[Address(RVA = "0xD2FEF8", Offset = "0xD2FEF8", VA = "0xD2FEF8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001564")]
		[Address(RVA = "0xD2FEFC", Offset = "0xD2FEFC", VA = "0xD2FEFC")]
		public void StartStopStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6001565")]
		[Address(RVA = "0xD2FF34", Offset = "0xD2FF34", VA = "0xD2FF34")]
		public void DecreaseSpeedStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6001566")]
		[Address(RVA = "0xD2FF6C", Offset = "0xD2FF6C", VA = "0xD2FF6C")]
		public void IncreaseSpeedStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6001567")]
		[Address(RVA = "0xD2FFA4", Offset = "0xD2FFA4", VA = "0xD2FFA4")]
		public void SmokeButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6001568")]
		[Address(RVA = "0xD2FFDC", Offset = "0xD2FFDC", VA = "0xD2FFDC")]
		public void WhistleButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6001569")]
		[Address(RVA = "0xD30014", Offset = "0xD30014", VA = "0xD30014")]
		public void ReverseButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x600156A")]
		[Address(RVA = "0xD3004C", Offset = "0xD3004C", VA = "0xD3004C")]
		public void SwitchVisualization(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x600156B")]
		[Address(RVA = "0xD301A8", Offset = "0xD301A8", VA = "0xD301A8")]
		public void GoMoo(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x600156C")]
		[Address(RVA = "0xD30218", Offset = "0xD30218", VA = "0xD30218")]
		public ControllerBoxController()
		{
		}
	}
	[Token(Token = "0x2000323")]
	public class CowController : MonoBehaviour
	{
		[Token(Token = "0x4001382")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Animation _cowAnimation;

		[Token(Token = "0x4001383")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioSource _mooCowAudioSource;

		[Token(Token = "0x600156D")]
		[Address(RVA = "0xD30220", Offset = "0xD30220", VA = "0xD30220")]
		private void Start()
		{
		}

		[Token(Token = "0x600156E")]
		[Address(RVA = "0xD30224", Offset = "0xD30224", VA = "0xD30224")]
		public void PlayMooSound()
		{
		}

		[Token(Token = "0x600156F")]
		[Address(RVA = "0xD301DC", Offset = "0xD301DC", VA = "0xD301DC")]
		public void GoMooCowGo()
		{
		}

		[Token(Token = "0x6001570")]
		[Address(RVA = "0xD30264", Offset = "0xD30264", VA = "0xD30264")]
		public CowController()
		{
		}
	}
	[Token(Token = "0x2000324")]
	public class PanelHMDFollower : MonoBehaviour
	{
		[Token(Token = "0x2000831")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B8CF8", Offset = "0x8B8CF8")]
		private sealed class <LerpToHMD>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002873")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002874")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002875")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PanelHMDFollower <>4__this;

			[Token(Token = "0x4002876")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private UnityEngine.Vector3 <newPanelPosition>5__2;

			[Token(Token = "0x4002877")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <startTime>5__3;

			[Token(Token = "0x4002878")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <endTime>5__4;

			[Token(Token = "0x17000669")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002F58")]
				[Address(RVA = "0xAEF274", Offset = "0xAEF274", VA = "0xAEF274", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700066A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002F5A")]
				[Address(RVA = "0xAEF2DC", Offset = "0xAEF2DC", VA = "0xAEF2DC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002F55")]
			[Address(RVA = "0xAEEFA8", Offset = "0xAEEFA8", VA = "0xAEEFA8")]
			[DebuggerHidden]
			public <LerpToHMD>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x6002F56")]
			[Address(RVA = "0xAEF084", Offset = "0xAEF084", VA = "0xAEF084", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002F57")]
			[Address(RVA = "0xAEF088", Offset = "0xAEF088", VA = "0xAEF088", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002F59")]
			[Address(RVA = "0xAEF27C", Offset = "0xAEF27C", VA = "0xAEF27C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001384")]
		private const float TOTAL_DURATION = 3f;

		[Token(Token = "0x4001385")]
		private const float HMD_MOVEMENT_THRESHOLD = 0.3f;

		[Token(Token = "0x4001386")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float _maxDistance;

		[Token(Token = "0x4001387")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float _minDistance;

		[Token(Token = "0x4001388")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float _minZDistance;

		[Token(Token = "0x4001389")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private OVRCameraRig _cameraRig;

		[Token(Token = "0x400138A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private UnityEngine.Vector3 _panelInitialPosition;

		[Token(Token = "0x400138B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Coroutine _coroutine;

		[Token(Token = "0x400138C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private UnityEngine.Vector3 _prevPos;

		[Token(Token = "0x400138D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private UnityEngine.Vector3 _lastMovedToPos;

		[Token(Token = "0x6001571")]
		[Address(RVA = "0xAEEBC0", Offset = "0xAEEBC0", VA = "0xAEEBC0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001572")]
		[Address(RVA = "0xAEEC58", Offset = "0xAEEC58", VA = "0xAEEC58")]
		private void Update()
		{
		}

		[Token(Token = "0x6001573")]
		[Address(RVA = "0xAEEEE4", Offset = "0xAEEEE4", VA = "0xAEEEE4")]
		private UnityEngine.Vector3 CalculateIdealAnchorPosition()
		{
			return default(UnityEngine.Vector3);
		}

		[Token(Token = "0x6001574")]
		[Address(RVA = "0xAEEE74", Offset = "0xAEEE74", VA = "0xAEEE74")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C9BB8", Offset = "0x8C9BB8")]
		private IEnumerator LerpToHMD()
		{
			return null;
		}

		[Token(Token = "0x6001575")]
		[Address(RVA = "0xAEEFD4", Offset = "0xAEEFD4", VA = "0xAEEFD4")]
		public PanelHMDFollower()
		{
		}
	}
	[Token(Token = "0x2000325")]
	public class SelectionCylinder : MonoBehaviour
	{
		[Token(Token = "0x2000832")]
		public enum SelectionState
		{
			[Token(Token = "0x400287A")]
			Off,
			[Token(Token = "0x400287B")]
			Selected,
			[Token(Token = "0x400287C")]
			Highlighted
		}

		[Token(Token = "0x400138E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshRenderer _selectionMeshRenderer;

		[Token(Token = "0x400138F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int _colorId;

		[Token(Token = "0x4001390")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Material[] _selectionMaterials;

		[Token(Token = "0x4001391")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Color[] _defaultSelectionColors;

		[Token(Token = "0x4001392")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Color[] _highlightColors;

		[Token(Token = "0x4001393")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private SelectionState _currSelectionState;

		[Token(Token = "0x1700020C")]
		public SelectionState CurrSelectionState
		{
			[Token(Token = "0x6001576")]
			[Address(RVA = "0xAF1470", Offset = "0xAF1470", VA = "0xAF1470")]
			get
			{
				return default(SelectionState);
			}
			[Token(Token = "0x6001577")]
			[Address(RVA = "0xAF1478", Offset = "0xAF1478", VA = "0xAF1478")]
			set
			{
			}
		}

		[Token(Token = "0x6001578")]
		[Address(RVA = "0xAF1600", Offset = "0xAF1600", VA = "0xAF1600")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001579")]
		[Address(RVA = "0xAF17C0", Offset = "0xAF17C0", VA = "0xAF17C0")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600157A")]
		[Address(RVA = "0xAF1500", Offset = "0xAF1500", VA = "0xAF1500")]
		private void AffectSelectionColor(Color[] newColors)
		{
		}

		[Token(Token = "0x600157B")]
		[Address(RVA = "0xAF18B0", Offset = "0xAF18B0", VA = "0xAF18B0")]
		public SelectionCylinder()
		{
		}
	}
	[Token(Token = "0x2000326")]
	public class TrackSegment : MonoBehaviour
	{
		[Token(Token = "0x2000833")]
		public enum SegmentType
		{
			[Token(Token = "0x400287E")]
			Straight,
			[Token(Token = "0x400287F")]
			LeftTurn,
			[Token(Token = "0x4002880")]
			RightTurn,
			[Token(Token = "0x4002881")]
			Switch
		}

		[Token(Token = "0x4001394")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private SegmentType _segmentType;

		[Token(Token = "0x4001395")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private MeshFilter _straight;

		[Token(Token = "0x4001396")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private MeshFilter _leftTurn;

		[Token(Token = "0x4001397")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private MeshFilter _rightTurn;

		[Token(Token = "0x4001398")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float _gridSize;

		[Token(Token = "0x4001399")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int _subDivCount;

		[Token(Token = "0x400139A")]
		private const float _originalGridSize = 0.8f;

		[Token(Token = "0x400139B")]
		private const float _trackWidth = 0.15f;

		[Token(Token = "0x400139C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private GameObject _mesh;

		[Token(Token = "0x400139D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8BDAB0", Offset = "0x8BDAB0")]
		private float <StartDistance>k__BackingField;

		[Token(Token = "0x400139E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Pose _p1;

		[Token(Token = "0x400139F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Pose _p2;

		[Token(Token = "0x40013A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Pose _endPose;

		[Token(Token = "0x1700020D")]
		public float StartDistance
		{
			[Token(Token = "0x600157D")]
			[Address(RVA = "0xAF191C", Offset = "0xAF191C", VA = "0xAF191C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C9C1C", Offset = "0x8C9C1C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600157E")]
			[Address(RVA = "0xAF1924", Offset = "0xAF1924", VA = "0xAF1924")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C9C2C", Offset = "0x8C9C2C")]
			set
			{
			}
		}

		[Token(Token = "0x1700020E")]
		public float GridSize
		{
			[Token(Token = "0x600157F")]
			[Address(RVA = "0xAF192C", Offset = "0xAF192C", VA = "0xAF192C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001580")]
			[Address(RVA = "0xAF1934", Offset = "0xAF1934", VA = "0xAF1934")]
			private set
			{
			}
		}

		[Token(Token = "0x1700020F")]
		public int SubDivCount
		{
			[Token(Token = "0x6001581")]
			[Address(RVA = "0xAF193C", Offset = "0xAF193C", VA = "0xAF193C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001582")]
			[Address(RVA = "0xAF1944", Offset = "0xAF1944", VA = "0xAF1944")]
			set
			{
			}
		}

		[Token(Token = "0x17000210")]
		public SegmentType Type
		{
			[Token(Token = "0x6001583")]
			[Address(RVA = "0xAF194C", Offset = "0xAF194C", VA = "0xAF194C")]
			get
			{
				return default(SegmentType);
			}
		}

		[Token(Token = "0x17000211")]
		public Pose EndPose
		{
			[Token(Token = "0x6001584")]
			[Address(RVA = "0xAF1954", Offset = "0xAF1954", VA = "0xAF1954")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000212")]
		public float Radius
		{
			[Token(Token = "0x6001585")]
			[Address(RVA = "0xAF1DE8", Offset = "0xAF1DE8", VA = "0xAF1DE8")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000213")]
		public float SegmentLength
		{
			[Token(Token = "0x6001587")]
			[Address(RVA = "0xAF19BC", Offset = "0xAF19BC", VA = "0xAF19BC")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6001586")]
		[Address(RVA = "0xAF1DF8", Offset = "0xAF1DF8", VA = "0xAF1DF8")]
		public float setGridSize(float size)
		{
			return default(float);
		}

		[Token(Token = "0x6001588")]
		[Address(RVA = "0xAF1E10", Offset = "0xAF1E10", VA = "0xAF1E10")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001589")]
		[Address(RVA = "0xAF19FC", Offset = "0xAF19FC", VA = "0xAF19FC")]
		public void UpdatePose(float distanceIntoSegment, Pose pose)
		{
		}

		[Token(Token = "0x600158A")]
		[Address(RVA = "0xAF1E14", Offset = "0xAF1E14", VA = "0xAF1E14")]
		private void Update()
		{
		}

		[Token(Token = "0x600158B")]
		[Address(RVA = "0xAF1E18", Offset = "0xAF1E18", VA = "0xAF1E18")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600158C")]
		[Address(RVA = "0xAF1E84", Offset = "0xAF1E84", VA = "0xAF1E84")]
		private void DrawDebugLines()
		{
		}

		[Token(Token = "0x600158D")]
		[Address(RVA = "0xAF2A0C", Offset = "0xAF2A0C", VA = "0xAF2A0C")]
		public void RegenerateTrackAndMesh()
		{
		}

		[Token(Token = "0x600158E")]
		[Address(RVA = "0xAF2D18", Offset = "0xAF2D18", VA = "0xAF2D18")]
		public TrackSegment()
		{
		}
	}
	[Token(Token = "0x2000327")]
	public class TrainButtonVisualController : MonoBehaviour
	{
		[Token(Token = "0x2000834")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B8D08", Offset = "0x8B8D08")]
		private sealed class <ResetPosition>d__26 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002882")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002883")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002884")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TrainButtonVisualController <>4__this;

			[Token(Token = "0x4002885")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <startTime>5__2;

			[Token(Token = "0x4002886")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <endTime>5__3;

			[Token(Token = "0x1700066B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002F5E")]
				[Address(RVA = "0xAF3930", Offset = "0xAF3930", VA = "0xAF3930", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700066C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002F60")]
				[Address(RVA = "0xAF3998", Offset = "0xAF3998", VA = "0xAF3998", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002F5B")]
			[Address(RVA = "0xAF36A8", Offset = "0xAF36A8", VA = "0xAF36A8")]
			[DebuggerHidden]
			public <ResetPosition>d__26(int <>1__state)
			{
			}

			[Token(Token = "0x6002F5C")]
			[Address(RVA = "0xAF3784", Offset = "0xAF3784", VA = "0xAF3784", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002F5D")]
			[Address(RVA = "0xAF3788", Offset = "0xAF3788", VA = "0xAF3788", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002F5F")]
			[Address(RVA = "0xAF3938", Offset = "0xAF3938", VA = "0xAF3938", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40013A1")]
		private const float LERP_TO_OLD_POS_DURATION = 1f;

		[Token(Token = "0x40013A2")]
		private const float LOCAL_SIZE_HALVED = 0.5f;

		[Token(Token = "0x40013A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshRenderer _meshRenderer;

		[Token(Token = "0x40013A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private MeshRenderer _glowRenderer;

		[Token(Token = "0x40013A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private ButtonController _buttonController;

		[Token(Token = "0x40013A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Color _buttonContactColor;

		[Token(Token = "0x40013A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Color _buttonActionColor;

		[Token(Token = "0x40013A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x40013A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private AudioClip _actionSoundEffect;

		[Token(Token = "0x40013AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Transform _buttonContactTransform;

		[Token(Token = "0x40013AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private float _contactMaxDisplacementDistance;

		[Token(Token = "0x40013AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Material _buttonMaterial;

		[Token(Token = "0x40013AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Color _buttonDefaultColor;

		[Token(Token = "0x40013AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private int _materialColorId;

		[Token(Token = "0x40013AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private bool _buttonInContactOrActionStates;

		[Token(Token = "0x40013B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Coroutine _lerpToOldPositionCr;

		[Token(Token = "0x40013B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private UnityEngine.Vector3 _oldPosition;

		[Token(Token = "0x600158F")]
		[Address(RVA = "0xAF2DBC", Offset = "0xAF2DBC", VA = "0xAF2DBC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001590")]
		[Address(RVA = "0xAF2E68", Offset = "0xAF2E68", VA = "0xAF2E68")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001591")]
		[Address(RVA = "0xAF2F1C", Offset = "0xAF2F1C", VA = "0xAF2F1C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001592")]
		[Address(RVA = "0xAF3050", Offset = "0xAF3050", VA = "0xAF3050")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001593")]
		[Address(RVA = "0xAF31C8", Offset = "0xAF31C8", VA = "0xAF31C8")]
		private void ActionOrInContactZoneStayEvent(ColliderZoneArgs collisionArgs)
		{
		}

		[Token(Token = "0x6001594")]
		[Address(RVA = "0xAF3364", Offset = "0xAF3364", VA = "0xAF3364")]
		private void InteractableStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6001595")]
		[Address(RVA = "0xAF35E0", Offset = "0xAF35E0", VA = "0xAF35E0")]
		private void PlaySound(AudioClip clip)
		{
		}

		[Token(Token = "0x6001596")]
		[Address(RVA = "0xAF3478", Offset = "0xAF3478", VA = "0xAF3478")]
		private void StopResetLerping()
		{
		}

		[Token(Token = "0x6001597")]
		[Address(RVA = "0xAF348C", Offset = "0xAF348C", VA = "0xAF348C")]
		private void LerpToOldPosition()
		{
		}

		[Token(Token = "0x6001598")]
		[Address(RVA = "0xAF3638", Offset = "0xAF3638", VA = "0xAF3638")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C9C3C", Offset = "0x8C9C3C")]
		private IEnumerator ResetPosition()
		{
			return null;
		}

		[Token(Token = "0x6001599")]
		[Address(RVA = "0xAF36D4", Offset = "0xAF36D4", VA = "0xAF36D4")]
		public TrainButtonVisualController()
		{
		}
	}
	[Token(Token = "0x2000328")]
	public class TrainCar : TrainCarBase
	{
		[Token(Token = "0x40013B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private TrainCarBase _parentLocomotive;

		[Token(Token = "0x40013B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		protected float _distanceBehindParent;

		[Token(Token = "0x17000214")]
		public float DistanceBehindParentScaled
		{
			[Token(Token = "0x600159A")]
			[Address(RVA = "0xAF39A0", Offset = "0xAF39A0", VA = "0xAF39A0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x600159B")]
		[Address(RVA = "0xAF39B0", Offset = "0xAF39B0", VA = "0xAF39B0", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x600159C")]
		[Address(RVA = "0xAF39B8", Offset = "0xAF39B8", VA = "0xAF39B8", Slot = "5")]
		public override void UpdatePosition()
		{
		}

		[Token(Token = "0x600159D")]
		[Address(RVA = "0xAF3E24", Offset = "0xAF3E24", VA = "0xAF3E24")]
		public TrainCar()
		{
		}
	}
	[Token(Token = "0x2000329")]
	public abstract class TrainCarBase : MonoBehaviour
	{
		[Token(Token = "0x40013B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static UnityEngine.Vector3 OFFSET;

		[Token(Token = "0x40013B5")]
		private const float WHEEL_RADIUS = 0.027f;

		[Token(Token = "0x40013B6")]
		private const float TWO_PI = (float)Math.PI * 2f;

		[Token(Token = "0x40013B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		protected Transform _frontWheels;

		[Token(Token = "0x40013B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		protected Transform _rearWheels;

		[Token(Token = "0x40013B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		protected TrainTrack _trainTrack;

		[Token(Token = "0x40013BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		protected Transform[] _individualWheels;

		[Token(Token = "0x40013BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8BDBB0", Offset = "0x8BDBB0")]
		private float <Distance>k__BackingField;

		[Token(Token = "0x40013BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		protected float scale;

		[Token(Token = "0x40013BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Pose _frontPose;

		[Token(Token = "0x40013BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Pose _rearPose;

		[Token(Token = "0x17000215")]
		public float Distance
		{
			[Token(Token = "0x600159E")]
			[Address(RVA = "0xAF3F1C", Offset = "0xAF3F1C", VA = "0xAF3F1C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C9CA0", Offset = "0x8C9CA0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600159F")]
			[Address(RVA = "0xAF3F24", Offset = "0xAF3F24", VA = "0xAF3F24")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C9CB0", Offset = "0x8C9CB0")]
			protected set
			{
			}
		}

		[Token(Token = "0x17000216")]
		public float Scale
		{
			[Token(Token = "0x60015A0")]
			[Address(RVA = "0xAF3F2C", Offset = "0xAF3F2C", VA = "0xAF3F2C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60015A1")]
			[Address(RVA = "0xAF3F34", Offset = "0xAF3F34", VA = "0xAF3F34")]
			set
			{
			}
		}

		[Token(Token = "0x60015A2")]
		[Address(RVA = "0xAF39B4", Offset = "0xAF39B4", VA = "0xAF39B4", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x60015A3")]
		[Address(RVA = "0xAF3F3C", Offset = "0xAF3F3C", VA = "0xAF3F3C")]
		public void UpdatePose(float distance, TrainCarBase train, Pose pose)
		{
		}

		[Token(Token = "0x60015A4")]
		[Address(RVA = "0xAF3A00", Offset = "0xAF3A00", VA = "0xAF3A00")]
		protected void UpdateCarPosition()
		{
		}

		[Token(Token = "0x60015A5")]
		[Address(RVA = "0xAF3CD8", Offset = "0xAF3CD8", VA = "0xAF3CD8")]
		protected void RotateCarWheels()
		{
		}

		[Token(Token = "0x60015A6")]
		public abstract void UpdatePosition();

		[Token(Token = "0x60015A7")]
		[Address(RVA = "0xAF3E94", Offset = "0xAF3E94", VA = "0xAF3E94")]
		protected TrainCarBase()
		{
		}
	}
	[Token(Token = "0x200032A")]
	public class TrainCrossingController : MonoBehaviour
	{
		[Token(Token = "0x2000835")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B8D18", Offset = "0x8B8D18")]
		private sealed class <AnimateCrossing>d__15 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002887")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002888")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002889")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TrainCrossingController <>4__this;

			[Token(Token = "0x400288A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float animationLength;

			[Token(Token = "0x400288B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <animationEndTime>5__2;

			[Token(Token = "0x400288C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <lightBlinkDuration>5__3;

			[Token(Token = "0x400288D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <lightBlinkStartTime>5__4;

			[Token(Token = "0x400288E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <lightBlinkEndTime>5__5;

			[Token(Token = "0x400288F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private Material <lightToBlinkOn>5__6;

			[Token(Token = "0x4002890")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private Material <lightToBlinkOff>5__7;

			[Token(Token = "0x4002891")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private Color <onColor>5__8;

			[Token(Token = "0x4002892")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private Color <offColor>5__9;

			[Token(Token = "0x1700066D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002F64")]
				[Address(RVA = "0xAF48C4", Offset = "0xAF48C4", VA = "0xAF48C4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700066E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002F66")]
				[Address(RVA = "0xAF492C", Offset = "0xAF492C", VA = "0xAF492C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002F61")]
			[Address(RVA = "0xAF4508", Offset = "0xAF4508", VA = "0xAF4508")]
			[DebuggerHidden]
			public <AnimateCrossing>d__15(int <>1__state)
			{
			}

			[Token(Token = "0x6002F62")]
			[Address(RVA = "0xAF46A0", Offset = "0xAF46A0", VA = "0xAF46A0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002F63")]
			[Address(RVA = "0xAF46A4", Offset = "0xAF46A4", VA = "0xAF46A4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002F65")]
			[Address(RVA = "0xAF48CC", Offset = "0xAF48CC", VA = "0xAF48CC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40013BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x40013C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioClip[] _crossingSounds;

		[Token(Token = "0x40013C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private MeshRenderer _lightSide1Renderer;

		[Token(Token = "0x40013C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private MeshRenderer _lightSide2Renderer;

		[Token(Token = "0x40013C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private SelectionCylinder _selectionCylinder;

		[Token(Token = "0x40013C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Material _lightsSide1Mat;

		[Token(Token = "0x40013C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Material _lightsSide2Mat;

		[Token(Token = "0x40013C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int _colorId;

		[Token(Token = "0x40013C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Coroutine _xingAnimationCr;

		[Token(Token = "0x40013C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private InteractableTool _toolInteractingWithMe;

		[Token(Token = "0x60015A9")]
		[Address(RVA = "0xAF410C", Offset = "0xAF410C", VA = "0xAF410C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60015AA")]
		[Address(RVA = "0xAF4158", Offset = "0xAF4158", VA = "0xAF4158")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60015AB")]
		[Address(RVA = "0xAF4264", Offset = "0xAF4264", VA = "0xAF4264")]
		public void CrossingButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x60015AC")]
		[Address(RVA = "0xAF43AC", Offset = "0xAF43AC", VA = "0xAF43AC")]
		private void Update()
		{
		}

		[Token(Token = "0x60015AD")]
		[Address(RVA = "0xAF42C0", Offset = "0xAF42C0", VA = "0xAF42C0")]
		private void ActivateTrainCrossing()
		{
		}

		[Token(Token = "0x60015AE")]
		[Address(RVA = "0xAF4488", Offset = "0xAF4488", VA = "0xAF4488")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C9CC0", Offset = "0x8C9CC0")]
		private IEnumerator AnimateCrossing(float animationLength)
		{
			return null;
		}

		[Token(Token = "0x60015AF")]
		[Address(RVA = "0xAF4534", Offset = "0xAF4534", VA = "0xAF4534")]
		private void AffectMaterials(Material[] materials, Color newColor)
		{
		}

		[Token(Token = "0x60015B0")]
		[Address(RVA = "0xAF45E0", Offset = "0xAF45E0", VA = "0xAF45E0")]
		private void ToggleLightObjects(bool enableState)
		{
		}

		[Token(Token = "0x60015B1")]
		[Address(RVA = "0xAF4640", Offset = "0xAF4640", VA = "0xAF4640")]
		public TrainCrossingController()
		{
		}
	}
	[Token(Token = "0x200032B")]
	public class TrainLocomotive : TrainCarBase
	{
		[Token(Token = "0x2000836")]
		private enum EngineSoundState
		{
			[Token(Token = "0x4002894")]
			Start,
			[Token(Token = "0x4002895")]
			AccelerateOrSetProperSpeed,
			[Token(Token = "0x4002896")]
			Stop
		}

		[Token(Token = "0x2000837")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B8D28", Offset = "0x8B8D28")]
		private sealed class <StartStopTrain>d__34 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002897")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002898")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002899")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool startTrain;

			[Token(Token = "0x400289A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public TrainLocomotive <>4__this;

			[Token(Token = "0x400289B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <endSpeed>5__2;

			[Token(Token = "0x400289C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <timePeriodForSpeedChange>5__3;

			[Token(Token = "0x400289D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <startTime>5__4;

			[Token(Token = "0x400289E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <endTime>5__5;

			[Token(Token = "0x400289F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private float <startSpeed>5__6;

			[Token(Token = "0x1700066F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002F6A")]
				[Address(RVA = "0xAF556C", Offset = "0xAF556C", VA = "0xAF556C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000670")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002F6C")]
				[Address(RVA = "0xAF55D4", Offset = "0xAF55D4", VA = "0xAF55D4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002F67")]
			[Address(RVA = "0xAF4C38", Offset = "0xAF4C38", VA = "0xAF4C38")]
			[DebuggerHidden]
			public <StartStopTrain>d__34(int <>1__state)
			{
			}

			[Token(Token = "0x6002F68")]
			[Address(RVA = "0xAF534C", Offset = "0xAF534C", VA = "0xAF534C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002F69")]
			[Address(RVA = "0xAF5350", Offset = "0xAF5350", VA = "0xAF5350", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002F6B")]
			[Address(RVA = "0xAF5574", Offset = "0xAF5574", VA = "0xAF5574", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40013C9")]
		private const float MIN_SPEED = 0.2f;

		[Token(Token = "0x40013CA")]
		private const float MAX_SPEED = 2.7f;

		[Token(Token = "0x40013CB")]
		private const float SMOKE_SPEED_MULTIPLIER = 8f;

		[Token(Token = "0x40013CC")]
		private const int MAX_PARTICLES_MULTIPLIER = 3;

		[Token(Token = "0x40013CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8BDC10", Offset = "0x8BDC10")]
		protected float _initialSpeed;

		[Token(Token = "0x40013CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject _startStopButton;

		[Token(Token = "0x40013CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private GameObject _decreaseSpeedButton;

		[Token(Token = "0x40013D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private GameObject _increaseSpeedButton;

		[Token(Token = "0x40013D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private GameObject _smokeButton;

		[Token(Token = "0x40013D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private GameObject _whistleButton;

		[Token(Token = "0x40013D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private GameObject _reverseButton;

		[Token(Token = "0x40013D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private AudioSource _whistleAudioSource;

		[Token(Token = "0x40013D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private AudioClip _whistleSound;

		[Token(Token = "0x40013D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private AudioSource _engineAudioSource;

		[Token(Token = "0x40013D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private AudioClip[] _accelerationSounds;

		[Token(Token = "0x40013D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private AudioClip[] _decelerationSounds;

		[Token(Token = "0x40013D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private AudioClip _startUpSound;

		[Token(Token = "0x40013DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private AudioSource _smokeStackAudioSource;

		[Token(Token = "0x40013DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private AudioClip _smokeSound;

		[Token(Token = "0x40013DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private ParticleSystem _smoke1;

		[Token(Token = "0x40013DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private ParticleSystem _smoke2;

		[Token(Token = "0x40013DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private TrainCarBase[] _childCars;

		[Token(Token = "0x40013DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private bool _isMoving;

		[Token(Token = "0x40013E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE1")]
		private bool _reverse;

		[Token(Token = "0x40013E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		private float _currentSpeed;

		[Token(Token = "0x40013E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private float _speedDiv;

		[Token(Token = "0x40013E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		private float _standardRateOverTimeMultiplier;

		[Token(Token = "0x40013E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private int _standardMaxParticles;

		[Token(Token = "0x40013E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private Coroutine _startStopTrainCr;

		[Token(Token = "0x60015B2")]
		[Address(RVA = "0xAF4934", Offset = "0xAF4934", VA = "0xAF4934")]
		private void Start()
		{
		}

		[Token(Token = "0x60015B3")]
		[Address(RVA = "0xAF4A8C", Offset = "0xAF4A8C", VA = "0xAF4A8C")]
		private void Update()
		{
		}

		[Token(Token = "0x60015B4")]
		[Address(RVA = "0xAF4A98", Offset = "0xAF4A98", VA = "0xAF4A98", Slot = "5")]
		public override void UpdatePosition()
		{
		}

		[Token(Token = "0x60015B5")]
		[Address(RVA = "0xAF4BEC", Offset = "0xAF4BEC", VA = "0xAF4BEC")]
		public void StartStopStateChanged()
		{
		}

		[Token(Token = "0x60015B6")]
		[Address(RVA = "0xAF4A08", Offset = "0xAF4A08", VA = "0xAF4A08")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C9D24", Offset = "0x8C9D24")]
		private IEnumerator StartStopTrain(bool startTrain)
		{
			return null;
		}

		[Token(Token = "0x60015B7")]
		[Address(RVA = "0xAF4C64", Offset = "0xAF4C64", VA = "0xAF4C64")]
		private float PlayEngineSound(EngineSoundState engineSoundState)
		{
			return default(float);
		}

		[Token(Token = "0x60015B8")]
		[Address(RVA = "0xAF4B88", Offset = "0xAF4B88", VA = "0xAF4B88")]
		private void UpdateDistance()
		{
		}

		[Token(Token = "0x60015B9")]
		[Address(RVA = "0xAF4E98", Offset = "0xAF4E98", VA = "0xAF4E98")]
		public void DecreaseSpeedStateChanged()
		{
		}

		[Token(Token = "0x60015BA")]
		[Address(RVA = "0xAF5044", Offset = "0xAF5044", VA = "0xAF5044")]
		public void IncreaseSpeedStateChanged()
		{
		}

		[Token(Token = "0x60015BB")]
		[Address(RVA = "0xAF4F54", Offset = "0xAF4F54", VA = "0xAF4F54")]
		private void UpdateSmokeEmissionBasedOnSpeed()
		{
		}

		[Token(Token = "0x60015BC")]
		[Address(RVA = "0xAF5100", Offset = "0xAF5100", VA = "0xAF5100")]
		private float GetCurrentSmokeEmission()
		{
			return default(float);
		}

		[Token(Token = "0x60015BD")]
		[Address(RVA = "0xAF5188", Offset = "0xAF5188", VA = "0xAF5188")]
		public void SmokeButtonStateChanged()
		{
		}

		[Token(Token = "0x60015BE")]
		[Address(RVA = "0xAF5214", Offset = "0xAF5214", VA = "0xAF5214")]
		public void WhistleButtonStateChanged()
		{
		}

		[Token(Token = "0x60015BF")]
		[Address(RVA = "0xAF52D0", Offset = "0xAF52D0", VA = "0xAF52D0")]
		public void ReverseButtonStateChanged()
		{
		}

		[Token(Token = "0x60015C0")]
		[Address(RVA = "0xAF52E0", Offset = "0xAF52E0", VA = "0xAF52E0")]
		public TrainLocomotive()
		{
		}
	}
	[Token(Token = "0x200032C")]
	public class TrainTrack : MonoBehaviour
	{
		[Token(Token = "0x40013E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float _gridSize;

		[Token(Token = "0x40013E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private int _subDivCount;

		[Token(Token = "0x40013E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform _segmentParent;

		[Token(Token = "0x40013E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform _trainParent;

		[Token(Token = "0x40013EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private bool _regnerateTrackMeshOnAwake;

		[Token(Token = "0x40013EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float _trainLength;

		[Token(Token = "0x40013EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private TrackSegment[] _trackSegments;

		[Token(Token = "0x17000217")]
		public float TrackLength
		{
			[Token(Token = "0x60015C1")]
			[Address(RVA = "0xAF55DC", Offset = "0xAF55DC", VA = "0xAF55DC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60015C2")]
			[Address(RVA = "0xAF55E4", Offset = "0xAF55E4", VA = "0xAF55E4")]
			private set
			{
			}
		}

		[Token(Token = "0x60015C3")]
		[Address(RVA = "0xAF55EC", Offset = "0xAF55EC", VA = "0xAF55EC")]
		private void Awake()
		{
		}

		[Token(Token = "0x60015C4")]
		[Address(RVA = "0xAF3FBC", Offset = "0xAF3FBC", VA = "0xAF3FBC")]
		public TrackSegment GetSegment(float distance)
		{
			return null;
		}

		[Token(Token = "0x60015C5")]
		[Address(RVA = "0xAF55F0", Offset = "0xAF55F0", VA = "0xAF55F0")]
		public void Regenerate()
		{
		}

		[Token(Token = "0x60015C6")]
		[Address(RVA = "0xAF57E8", Offset = "0xAF57E8", VA = "0xAF57E8")]
		private void SetScale(float ratio)
		{
		}

		[Token(Token = "0x60015C7")]
		[Address(RVA = "0xAF5904", Offset = "0xAF5904", VA = "0xAF5904")]
		public TrainTrack()
		{
		}
	}
	[Token(Token = "0x200032D")]
	public class Pose
	{
		[Token(Token = "0x40013ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public UnityEngine.Vector3 Position;

		[Token(Token = "0x40013EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Quaternion Rotation;

		[Token(Token = "0x60015C8")]
		[Address(RVA = "0xAEF638", Offset = "0xAEF638", VA = "0xAEF638")]
		public Pose()
		{
		}

		[Token(Token = "0x60015C9")]
		[Address(RVA = "0xAEF6E4", Offset = "0xAEF6E4", VA = "0xAEF6E4")]
		public Pose(UnityEngine.Vector3 position, Quaternion rotation)
		{
		}
	}
	[Token(Token = "0x200032E")]
	public class WindmillBladesController : MonoBehaviour
	{
		[Token(Token = "0x2000838")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B8D38", Offset = "0x8B8D38")]
		private sealed class <LerpToSpeed>d__17 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40028A0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40028A1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40028A2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public WindmillBladesController <>4__this;

			[Token(Token = "0x40028A3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float goalSpeed;

			[Token(Token = "0x40028A4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <totalTime>5__2;

			[Token(Token = "0x40028A5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <startSpeed>5__3;

			[Token(Token = "0x17000671")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002F70")]
				[Address(RVA = "0xAF5EE8", Offset = "0xAF5EE8", VA = "0xAF5EE8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000672")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002F72")]
				[Address(RVA = "0xAF5F50", Offset = "0xAF5F50", VA = "0xAF5F50", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002F6D")]
			[Address(RVA = "0xAF5BAC", Offset = "0xAF5BAC", VA = "0xAF5BAC")]
			[DebuggerHidden]
			public <LerpToSpeed>d__17(int <>1__state)
			{
			}

			[Token(Token = "0x6002F6E")]
			[Address(RVA = "0xAF5D0C", Offset = "0xAF5D0C", VA = "0xAF5D0C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002F6F")]
			[Address(RVA = "0xAF5D10", Offset = "0xAF5D10", VA = "0xAF5D10", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002F71")]
			[Address(RVA = "0xAF5EF0", Offset = "0xAF5EF0", VA = "0xAF5EF0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000839")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B8D48", Offset = "0x8B8D48")]
		private sealed class <PlaySoundDelayed>d__18 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40028A6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40028A7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40028A8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public WindmillBladesController <>4__this;

			[Token(Token = "0x40028A9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public AudioClip initial;

			[Token(Token = "0x40028AA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float timeDelayAfterInitial;

			[Token(Token = "0x40028AB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public AudioClip clip;

			[Token(Token = "0x17000673")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002F76")]
				[Address(RVA = "0xAF6024", Offset = "0xAF6024", VA = "0xAF6024", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000674")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002F78")]
				[Address(RVA = "0xAF608C", Offset = "0xAF608C", VA = "0xAF608C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002F73")]
			[Address(RVA = "0xAF5C6C", Offset = "0xAF5C6C", VA = "0xAF5C6C")]
			[DebuggerHidden]
			public <PlaySoundDelayed>d__18(int <>1__state)
			{
			}

			[Token(Token = "0x6002F74")]
			[Address(RVA = "0xAF5F58", Offset = "0xAF5F58", VA = "0xAF5F58", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002F75")]
			[Address(RVA = "0xAF5F5C", Offset = "0xAF5F5C", VA = "0xAF5F5C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002F77")]
			[Address(RVA = "0xAF602C", Offset = "0xAF602C", VA = "0xAF602C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40013EF")]
		private const float MAX_TIME = 1f;

		[Token(Token = "0x40013F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x40013F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioClip _windMillRotationSound;

		[Token(Token = "0x40013F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AudioClip _windMillStartSound;

		[Token(Token = "0x40013F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private AudioClip _windMillStopSound;

		[Token(Token = "0x40013F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8BDDF8", Offset = "0x8BDDF8")]
		private bool <IsMoving>k__BackingField;

		[Token(Token = "0x40013F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float _currentSpeed;

		[Token(Token = "0x40013F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Coroutine _lerpSpeedCoroutine;

		[Token(Token = "0x40013F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Coroutine _audioChangeCr;

		[Token(Token = "0x40013F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Quaternion _originalRotation;

		[Token(Token = "0x40013F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float _rotAngle;

		[Token(Token = "0x17000218")]
		public bool IsMoving
		{
			[Token(Token = "0x60015CA")]
			[Address(RVA = "0xAF5920", Offset = "0xAF5920", VA = "0xAF5920")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C9D88", Offset = "0x8C9D88")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60015CB")]
			[Address(RVA = "0xAF5928", Offset = "0xAF5928", VA = "0xAF5928")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C9D98", Offset = "0x8C9D98")]
			private set
			{
			}
		}

		[Token(Token = "0x60015CC")]
		[Address(RVA = "0xAF5934", Offset = "0xAF5934", VA = "0xAF5934")]
		private void Start()
		{
		}

		[Token(Token = "0x60015CD")]
		[Address(RVA = "0xAF5970", Offset = "0xAF5970", VA = "0xAF5970")]
		private void Update()
		{
		}

		[Token(Token = "0x60015CE")]
		[Address(RVA = "0xAF5AC4", Offset = "0xAF5AC4", VA = "0xAF5AC4")]
		public void SetMoveState(bool newMoveState, float goalSpeed)
		{
		}

		[Token(Token = "0x60015CF")]
		[Address(RVA = "0xAF5B2C", Offset = "0xAF5B2C", VA = "0xAF5B2C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C9DA8", Offset = "0x8C9DA8")]
		private IEnumerator LerpToSpeed(float goalSpeed)
		{
			return null;
		}

		[Token(Token = "0x60015D0")]
		[Address(RVA = "0xAF5BD8", Offset = "0xAF5BD8", VA = "0xAF5BD8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C9E0C", Offset = "0x8C9E0C")]
		private IEnumerator PlaySoundDelayed(AudioClip initial, AudioClip clip, float timeDelayAfterInitial)
		{
			return null;
		}

		[Token(Token = "0x60015D1")]
		[Address(RVA = "0xAF5C98", Offset = "0xAF5C98", VA = "0xAF5C98")]
		private void PlaySound(AudioClip clip, bool loop = false)
		{
		}

		[Token(Token = "0x60015D2")]
		[Address(RVA = "0xAF5D04", Offset = "0xAF5D04", VA = "0xAF5D04")]
		public WindmillBladesController()
		{
		}
	}
	[Token(Token = "0x200032F")]
	public class WindmillController : MonoBehaviour
	{
		[Token(Token = "0x40013FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _startStopButton;

		[Token(Token = "0x40013FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float _maxSpeed;

		[Token(Token = "0x40013FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private SelectionCylinder _selectionCylinder;

		[Token(Token = "0x40013FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private WindmillBladesController _bladesRotation;

		[Token(Token = "0x40013FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private InteractableTool _toolInteractingWithMe;

		[Token(Token = "0x60015D3")]
		[Address(RVA = "0xAF6094", Offset = "0xAF6094", VA = "0xAF6094")]
		private void Awake()
		{
		}

		[Token(Token = "0x60015D4")]
		[Address(RVA = "0xAF60FC", Offset = "0xAF60FC", VA = "0xAF60FC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60015D5")]
		[Address(RVA = "0xAF61B4", Offset = "0xAF61B4", VA = "0xAF61B4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60015D6")]
		[Address(RVA = "0xAF62B4", Offset = "0xAF62B4", VA = "0xAF62B4")]
		private void StartStopStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x60015D7")]
		[Address(RVA = "0xAF6330", Offset = "0xAF6330", VA = "0xAF6330")]
		private void Update()
		{
		}

		[Token(Token = "0x60015D8")]
		[Address(RVA = "0xAF640C", Offset = "0xAF640C", VA = "0xAF640C")]
		public WindmillController()
		{
		}
	}
	[Token(Token = "0x2000330")]
	public enum EUiDisplayType
	{
		[Token(Token = "0x4001400")]
		EUDT_WorldGeoQuad,
		[Token(Token = "0x4001401")]
		EUDT_OverlayQuad,
		[Token(Token = "0x4001402")]
		EUDT_None,
		[Token(Token = "0x4001403")]
		EUDT_MaxDislayTypes
	}
	[Token(Token = "0x2000331")]
	public class OVROverlaySample : MonoBehaviour
	{
		[Token(Token = "0x200083A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B8D58", Offset = "0x8B8D58")]
		private sealed class <WaitforOVROverlay>d__30 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40028AC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40028AD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40028AE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public OVROverlaySample <>4__this;

			[Token(Token = "0x17000675")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002F7C")]
				[Address(RVA = "0xAEEB50", Offset = "0xAEEB50", VA = "0xAEEB50", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000676")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002F7E")]
				[Address(RVA = "0xAEEBB8", Offset = "0xAEEBB8", VA = "0xAEEBB8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002F79")]
			[Address(RVA = "0xAEE1CC", Offset = "0xAEE1CC", VA = "0xAEE1CC")]
			[DebuggerHidden]
			public <WaitforOVROverlay>d__30(int <>1__state)
			{
			}

			[Token(Token = "0x6002F7A")]
			[Address(RVA = "0xAEE904", Offset = "0xAEE904", VA = "0xAEE904", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002F7B")]
			[Address(RVA = "0xAEE908", Offset = "0xAEE908", VA = "0xAEE908", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002F7D")]
			[Address(RVA = "0xAEEB58", Offset = "0xAEEB58", VA = "0xAEEB58", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001404")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool inMenu;

		[Token(Token = "0x4001405")]
		private const string ovrOverlayID = "OVROverlayID";

		[Token(Token = "0x4001406")]
		private const string applicationID = "ApplicationID";

		[Token(Token = "0x4001407")]
		private const string noneID = "NoneID";

		[Token(Token = "0x4001408")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Toggle applicationRadioButton;

		[Token(Token = "0x4001409")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Toggle noneRadioButton;

		[Token(Token = "0x400140A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BDE38", Offset = "0x8BDE38")]
		public GameObject mainCamera;

		[Token(Token = "0x400140B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject uiCamera;

		[Token(Token = "0x400140C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GameObject uiGeoParent;

		[Token(Token = "0x400140D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public GameObject worldspaceGeoParent;

		[Token(Token = "0x400140E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public OVROverlay cameraRenderOverlay;

		[Token(Token = "0x400140F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public OVROverlay renderingLabelOverlay;

		[Token(Token = "0x4001410")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Texture applicationLabelTexture;

		[Token(Token = "0x4001411")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Texture compositorLabelTexture;

		[Token(Token = "0x4001412")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BDE70", Offset = "0x8BDE70")]
		public GameObject prefabForLevelLoadSim;

		[Token(Token = "0x4001413")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public OVROverlay cubemapOverlay;

		[Token(Token = "0x4001414")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public OVROverlay loadingTextQuadOverlay;

		[Token(Token = "0x4001415")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public float distanceFromCamToLoadText;

		[Token(Token = "0x4001416")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public float cubeSpawnRadius;

		[Token(Token = "0x4001417")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public float heightBetweenItems;

		[Token(Token = "0x4001418")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public int numObjectsPerLevel;

		[Token(Token = "0x4001419")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public int numLevels;

		[Token(Token = "0x400141A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public int numLoopsTrigger;

		[Token(Token = "0x400141B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private List<GameObject> spawnedCubes;

		[Token(Token = "0x60015D9")]
		[Address(RVA = "0xAED514", Offset = "0xAED514", VA = "0xAED514")]
		private void Start()
		{
		}

		[Token(Token = "0x60015DA")]
		[Address(RVA = "0xAEDCF4", Offset = "0xAEDCF4", VA = "0xAEDCF4")]
		private void Update()
		{
		}

		[Token(Token = "0x60015DB")]
		[Address(RVA = "0xAEDE34", Offset = "0xAEDE34", VA = "0xAEDE34")]
		private void ActivateWorldGeo()
		{
		}

		[Token(Token = "0x60015DC")]
		[Address(RVA = "0xAEDF5C", Offset = "0xAEDF5C", VA = "0xAEDF5C")]
		private void ActivateOVROverlay()
		{
		}

		[Token(Token = "0x60015DD")]
		[Address(RVA = "0xAEE084", Offset = "0xAEE084", VA = "0xAEE084")]
		private void ActivateNone()
		{
		}

		[Token(Token = "0x60015DE")]
		[Address(RVA = "0xAEDE08", Offset = "0xAEDE08", VA = "0xAEDE08")]
		private void TriggerLoad()
		{
		}

		[Token(Token = "0x60015DF")]
		[Address(RVA = "0xAEE15C", Offset = "0xAEE15C", VA = "0xAEE15C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C9E70", Offset = "0x8C9E70")]
		private IEnumerator WaitforOVROverlay()
		{
			return null;
		}

		[Token(Token = "0x60015E0")]
		[Address(RVA = "0xAEE1F8", Offset = "0xAEE1F8", VA = "0xAEE1F8")]
		private void TriggerUnload()
		{
		}

		[Token(Token = "0x60015E1")]
		[Address(RVA = "0xAED880", Offset = "0xAED880", VA = "0xAED880")]
		private void CameraAndRenderTargetSetup()
		{
		}

		[Token(Token = "0x60015E2")]
		[Address(RVA = "0xAEE320", Offset = "0xAEE320", VA = "0xAEE320")]
		private void SimulateLevelLoad()
		{
		}

		[Token(Token = "0x60015E3")]
		[Address(RVA = "0xAEE22C", Offset = "0xAEE22C", VA = "0xAEE22C")]
		private void ClearObjects()
		{
		}

		[Token(Token = "0x60015E4")]
		[Address(RVA = "0xAEE6BC", Offset = "0xAEE6BC", VA = "0xAEE6BC")]
		public void RadioPressed(string radioLabel, string group, Toggle t)
		{
		}

		[Token(Token = "0x60015E5")]
		[Address(RVA = "0xAEE798", Offset = "0xAEE798", VA = "0xAEE798")]
		public OVROverlaySample()
		{
		}

		[Token(Token = "0x60015E6")]
		[Address(RVA = "0xAEE814", Offset = "0xAEE814", VA = "0xAEE814")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C9ED4", Offset = "0x8C9ED4")]
		private void <Start>b__24_0(Toggle t)
		{
		}

		[Token(Token = "0x60015E7")]
		[Address(RVA = "0xAEE864", Offset = "0xAEE864", VA = "0xAEE864")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C9EE4", Offset = "0x8C9EE4")]
		private void <Start>b__24_1(Toggle t)
		{
		}

		[Token(Token = "0x60015E8")]
		[Address(RVA = "0xAEE8B4", Offset = "0xAEE8B4", VA = "0xAEE8B4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C9EF4", Offset = "0x8C9EF4")]
		private void <Start>b__24_2(Toggle t)
		{
		}
	}
}
namespace OVRTouchSample
{
	[Token(Token = "0x2000332")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x8B6CBC", Offset = "0x8B6CBC")]
	public class Hand : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200083B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B8D68", Offset = "0x8B8D68")]
		private sealed class <>c
		{
			[Token(Token = "0x40028AF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40028B0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Collider, bool> <>9__28_0;

			[Token(Token = "0x6002F80")]
			[Address(RVA = "0xD23674", Offset = "0xD23674", VA = "0xD23674")]
			public <>c()
			{
			}

			[Token(Token = "0x6002F81")]
			[Address(RVA = "0xD2367C", Offset = "0xD2367C", VA = "0xD2367C")]
			internal bool <Start>b__28_0(Collider childCollider)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x400141C")]
		public const string ANIM_LAYER_NAME_POINT = "Point Layer";

		[Token(Token = "0x400141D")]
		public const string ANIM_LAYER_NAME_THUMB = "Thumb Layer";

		[Token(Token = "0x400141E")]
		public const string ANIM_PARAM_NAME_FLEX = "Flex";

		[Token(Token = "0x400141F")]
		public const string ANIM_PARAM_NAME_POSE = "Pose";

		[Token(Token = "0x4001420")]
		public const float THRESH_COLLISION_FLEX = 0.9f;

		[Token(Token = "0x4001421")]
		public const float INPUT_RATE_CHANGE = 20f;

		[Token(Token = "0x4001422")]
		public const float COLLIDER_SCALE_MIN = 0.01f;

		[Token(Token = "0x4001423")]
		public const float COLLIDER_SCALE_MAX = 1f;

		[Token(Token = "0x4001424")]
		public const float COLLIDER_SCALE_PER_SECOND = 1f;

		[Token(Token = "0x4001425")]
		public const float TRIGGER_DEBOUNCE_TIME = 0.05f;

		[Token(Token = "0x4001426")]
		public const float THUMB_DEBOUNCE_TIME = 0.15f;

		[Token(Token = "0x4001427")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool rightHand;

		[Token(Token = "0x4001428")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Animator m_animator;

		[Token(Token = "0x4001429")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private HandPose m_defaultGrabPose;

		[Token(Token = "0x400142A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Collider[] m_colliders;

		[Token(Token = "0x400142B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool m_collisionEnabled;

		[Token(Token = "0x400142C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private OVRGrabber m_grabber;

		[Token(Token = "0x400142D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<Renderer> m_showAfterInputFocusAcquired;

		[Token(Token = "0x400142E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int m_animLayerIndexThumb;

		[Token(Token = "0x400142F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private int m_animLayerIndexPoint;

		[Token(Token = "0x4001430")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int m_animParamIndexFlex;

		[Token(Token = "0x4001431")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private int m_animParamIndexPose;

		[Token(Token = "0x4001432")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool m_isPointing;

		[Token(Token = "0x4001433")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		private bool m_isGivingThumbsUp;

		[Token(Token = "0x4001434")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float m_pointBlend;

		[Token(Token = "0x4001435")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float m_thumbsUpBlend;

		[Token(Token = "0x4001436")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private bool m_restoreOnInputAcquired;

		[Token(Token = "0x4001437")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float m_collisionScaleCurrent;

		[Token(Token = "0x60015E9")]
		[Address(RVA = "0xD22780", Offset = "0xD22780", VA = "0xD22780")]
		private void Awake()
		{
		}

		[Token(Token = "0x60015EA")]
		[Address(RVA = "0xD227D8", Offset = "0xD227D8", VA = "0xD227D8")]
		private void Start()
		{
		}

		[Token(Token = "0x60015EB")]
		[Address(RVA = "0xD22CF8", Offset = "0xD22CF8", VA = "0xD22CF8")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60015EC")]
		[Address(RVA = "0xD22CFC", Offset = "0xD22CFC", VA = "0xD22CFC")]
		private void Update()
		{
		}

		[Token(Token = "0x60015ED")]
		[Address(RVA = "0xD22E44", Offset = "0xD22E44", VA = "0xD22E44")]
		private void UpdateCapTouchStates()
		{
		}

		[Token(Token = "0x60015EE")]
		[Address(RVA = "0xD23204", Offset = "0xD23204", VA = "0xD23204")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60015EF")]
		[Address(RVA = "0xD2336C", Offset = "0xD2336C", VA = "0xD2336C")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x60015F0")]
		[Address(RVA = "0xD234D8", Offset = "0xD234D8", VA = "0xD234D8")]
		private void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x60015F1")]
		[Address(RVA = "0xD22EF8", Offset = "0xD22EF8", VA = "0xD22EF8")]
		private float InputValueRateChange(bool isDown, float value)
		{
			return default(float);
		}

		[Token(Token = "0x60015F2")]
		[Address(RVA = "0xD22F98", Offset = "0xD22F98", VA = "0xD22F98")]
		private void UpdateAnimStates()
		{
		}

		[Token(Token = "0x60015F3")]
		[Address(RVA = "0xD22B4C", Offset = "0xD22B4C", VA = "0xD22B4C")]
		private void CollisionEnable(bool enabled)
		{
		}

		[Token(Token = "0x60015F4")]
		[Address(RVA = "0xD235F4", Offset = "0xD235F4", VA = "0xD235F4")]
		public Hand()
		{
		}
	}
	[Token(Token = "0x2000333")]
	public enum HandPoseId
	{
		[Token(Token = "0x4001439")]
		Default,
		[Token(Token = "0x400143A")]
		Generic,
		[Token(Token = "0x400143B")]
		PingPongBall,
		[Token(Token = "0x400143C")]
		Controller
	}
	[Token(Token = "0x2000334")]
	public class HandPose : MonoBehaviour
	{
		[Token(Token = "0x400143D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool m_allowPointing;

		[Token(Token = "0x400143E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[SerializeField]
		private bool m_allowThumbsUp;

		[Token(Token = "0x400143F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private HandPoseId m_poseId;

		[Token(Token = "0x17000219")]
		public bool AllowPointing
		{
			[Token(Token = "0x60015F5")]
			[Address(RVA = "0xD236A8", Offset = "0xD236A8", VA = "0xD236A8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700021A")]
		public bool AllowThumbsUp
		{
			[Token(Token = "0x60015F6")]
			[Address(RVA = "0xD236B0", Offset = "0xD236B0", VA = "0xD236B0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700021B")]
		public HandPoseId PoseId
		{
			[Token(Token = "0x60015F7")]
			[Address(RVA = "0xD236B8", Offset = "0xD236B8", VA = "0xD236B8")]
			get
			{
				return default(HandPoseId);
			}
		}

		[Token(Token = "0x60015F8")]
		[Address(RVA = "0xD236C0", Offset = "0xD236C0", VA = "0xD236C0")]
		public HandPose()
		{
		}
	}
	[Token(Token = "0x2000335")]
	public class TouchController : MonoBehaviour
	{
		[Token(Token = "0x4001440")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private OVRInput.Controller m_controller;

		[Token(Token = "0x4001441")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Animator m_animator;

		[Token(Token = "0x4001442")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool m_restoreOnInputAcquired;

		[Token(Token = "0x60015F9")]
		[Address(RVA = "0xD236C8", Offset = "0xD236C8", VA = "0xD236C8")]
		private void Update()
		{
		}

		[Token(Token = "0x60015FA")]
		[Address(RVA = "0xD2393C", Offset = "0xD2393C", VA = "0xD2393C")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x60015FB")]
		[Address(RVA = "0xD23998", Offset = "0xD23998", VA = "0xD23998")]
		private void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x60015FC")]
		[Address(RVA = "0xD239DC", Offset = "0xD239DC", VA = "0xD239DC")]
		public TouchController()
		{
		}
	}
}
namespace Oculus.Spatializer.Propagation
{
	[Token(Token = "0x2000336")]
	public enum FaceType : uint
	{
		[Token(Token = "0x4001444")]
		TRIANGLES,
		[Token(Token = "0x4001445")]
		QUADS
	}
	[Token(Token = "0x2000337")]
	public enum MaterialProperty : uint
	{
		[Token(Token = "0x4001447")]
		ABSORPTION,
		[Token(Token = "0x4001448")]
		TRANSMISSION,
		[Token(Token = "0x4001449")]
		SCATTERING
	}
	[Token(Token = "0x2000338")]
	public struct MeshGroup
	{
		[Token(Token = "0x400144A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public UIntPtr indexOffset;

		[Token(Token = "0x400144B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public UIntPtr faceCount;

		[Token(Token = "0x400144C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public FaceType faceType;

		[Token(Token = "0x400144D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public IntPtr material;
	}
}
namespace Oculus.Avatar
{
	[Token(Token = "0x2000339")]
	public static class AvatarLogger
	{
		[Token(Token = "0x400144E")]
		public const string LogAvatar = "[Avatars] - ";

		[Token(Token = "0x400144F")]
		public const string Tab = "    ";

		[Token(Token = "0x60015FD")]
		[Address(RVA = "0xD26940", Offset = "0xD26940", VA = "0xD26940")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x8C9F04", Offset = "0x8C9F04")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x8C9F04", Offset = "0x8C9F04")]
		public static void Log(string logMsg)
		{
		}

		[Token(Token = "0x60015FE")]
		[Address(RVA = "0xD269C8", Offset = "0xD269C8", VA = "0xD269C8")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x8C9F64", Offset = "0x8C9F64")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x8C9F64", Offset = "0x8C9F64")]
		public static void Log(string logMsg, UnityEngine.Object context)
		{
		}

		[Token(Token = "0x60015FF")]
		[Address(RVA = "0xD26A60", Offset = "0xD26A60", VA = "0xD26A60")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x8C9FC4", Offset = "0x8C9FC4")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x8C9FC4", Offset = "0x8C9FC4")]
		public static void LogWarning(string logMsg)
		{
		}

		[Token(Token = "0x6001600")]
		[Address(RVA = "0xD26AE8", Offset = "0xD26AE8", VA = "0xD26AE8")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x8CA024", Offset = "0x8CA024")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x8CA024", Offset = "0x8CA024")]
		public static void LogError(string logMsg)
		{
		}

		[Token(Token = "0x6001601")]
		[Address(RVA = "0xD26B70", Offset = "0xD26B70", VA = "0xD26B70")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x8CA084", Offset = "0x8CA084")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x8CA084", Offset = "0x8CA084")]
		public static void LogError(string logMsg, UnityEngine.Object context)
		{
		}
	}
	[Token(Token = "0x200033A")]
	public class CAPI
	{
		[Token(Token = "0x200083C")]
		public delegate void LoggingDelegate(IntPtr str);

		[Token(Token = "0x200083D")]
		public enum Result
		{
			[Token(Token = "0x40028B2")]
			Success = 0,
			[Token(Token = "0x40028B3")]
			Failure = -1000,
			[Token(Token = "0x40028B4")]
			Failure_InvalidParameter = -1001,
			[Token(Token = "0x40028B5")]
			Failure_NotInitialized = -1002,
			[Token(Token = "0x40028B6")]
			Failure_InvalidOperation = -1003,
			[Token(Token = "0x40028B7")]
			Failure_Unsupported = -1004,
			[Token(Token = "0x40028B8")]
			Failure_NotYetImplemented = -1005,
			[Token(Token = "0x40028B9")]
			Failure_OperationFailed = -1006,
			[Token(Token = "0x40028BA")]
			Failure_InsufficientSize = -1007
		}

		[Token(Token = "0x200083E")]
		private static class OVRP_1_30_0
		{
			[Token(Token = "0x40028BB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly Version version;

			[PreserveSig]
			[Token(Token = "0x6002F86")]
			[Address(RVA = "0xD2E3A8", Offset = "0xD2E3A8", VA = "0xD2E3A8")]
			public static extern Result ovrp_SendEvent2(string name, string param, string source);
		}

		[Token(Token = "0x4001450")]
		private const string LibFile = "ovravatarloader";

		[Token(Token = "0x4001451")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static IntPtr nativeVisemeData;

		[Token(Token = "0x4001452")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static IntPtr nativeGazeTargetsData;

		[Token(Token = "0x4001453")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static IntPtr nativeAvatarLightsData;

		[Token(Token = "0x4001454")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static IntPtr DebugLineCountData;

		[Token(Token = "0x4001455")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static float[] scratchBufferFloat;

		[Token(Token = "0x4001456")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static GameObject debugLineGo;

		[Token(Token = "0x4001457")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static string SDKRuntimePrefix;

		[Token(Token = "0x4001458")]
		private const string ovrPluginDLL = "OVRPlugin";

		[Token(Token = "0x4001459")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static Version ovrPluginVersion;

		[PreserveSig]
		[Token(Token = "0x6001602")]
		[Address(RVA = "0xD26C70", Offset = "0xD26C70", VA = "0xD26C70")]
		public static extern void ovrAvatar_InitializeAndroidUnity(string appID);

		[Token(Token = "0x6001603")]
		[Address(RVA = "0xD26D00", Offset = "0xD26D00", VA = "0xD26D00")]
		public static void Initialize()
		{
		}

		[Token(Token = "0x6001604")]
		[Address(RVA = "0xD26EBC", Offset = "0xD26EBC", VA = "0xD26EBC")]
		public static void Shutdown()
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001605")]
		[Address(RVA = "0xD26F9C", Offset = "0xD26F9C", VA = "0xD26F9C")]
		public static extern void ovrAvatar_Shutdown();

		[PreserveSig]
		[Token(Token = "0x6001606")]
		[Address(RVA = "0xD2700C", Offset = "0xD2700C", VA = "0xD2700C")]
		public static extern IntPtr ovrAvatarMessage_Pop();

		[PreserveSig]
		[Token(Token = "0x6001607")]
		[Address(RVA = "0xD27080", Offset = "0xD27080", VA = "0xD27080")]
		public static extern ovrAvatarMessageType ovrAvatarMessage_GetType(IntPtr msg);

		[Token(Token = "0x6001608")]
		[Address(RVA = "0xD27100", Offset = "0xD27100", VA = "0xD27100")]
		public static ovrAvatarMessage_AvatarSpecification ovrAvatarMessage_GetAvatarSpecification(IntPtr msg)
		{
			return default(ovrAvatarMessage_AvatarSpecification);
		}

		[PreserveSig]
		[Token(Token = "0x6001609")]
		[Address(RVA = "0xD27218", Offset = "0xD27218", VA = "0xD27218")]
		private static extern IntPtr ovrAvatarMessage_GetAvatarSpecification_Native(IntPtr msg);

		[Token(Token = "0x600160A")]
		[Address(RVA = "0xD27298", Offset = "0xD27298", VA = "0xD27298")]
		public static ovrAvatarMessage_AssetLoaded ovrAvatarMessage_GetAssetLoaded(IntPtr msg)
		{
			return default(ovrAvatarMessage_AssetLoaded);
		}

		[PreserveSig]
		[Token(Token = "0x600160B")]
		[Address(RVA = "0xD273B0", Offset = "0xD273B0", VA = "0xD273B0")]
		private static extern IntPtr ovrAvatarMessage_GetAssetLoaded_Native(IntPtr msg);

		[PreserveSig]
		[Token(Token = "0x600160C")]
		[Address(RVA = "0xD27430", Offset = "0xD27430", VA = "0xD27430")]
		public static extern void ovrAvatarMessage_Free(IntPtr msg);

		[PreserveSig]
		[Token(Token = "0x600160D")]
		[Address(RVA = "0xD274B0", Offset = "0xD274B0", VA = "0xD274B0")]
		public static extern IntPtr ovrAvatarSpecificationRequest_Create(ulong userID);

		[PreserveSig]
		[Token(Token = "0x600160E")]
		[Address(RVA = "0xD27530", Offset = "0xD27530", VA = "0xD27530")]
		public static extern void ovrAvatarSpecificationRequest_Destroy(IntPtr specificationRequest);

		[PreserveSig]
		[Token(Token = "0x600160F")]
		[Address(RVA = "0xD275B0", Offset = "0xD275B0", VA = "0xD275B0")]
		public static extern void ovrAvatarSpecificationRequest_SetCombineMeshes(IntPtr specificationRequest, bool useCombinedMesh);

		[PreserveSig]
		[Token(Token = "0x6001610")]
		[Address(RVA = "0xD27640", Offset = "0xD27640", VA = "0xD27640")]
		public static extern void ovrAvatarSpecificationRequest_SetLookAndFeelVersion(IntPtr specificationRequest, ovrAvatarLookAndFeelVersion version);

		[PreserveSig]
		[Token(Token = "0x6001611")]
		[Address(RVA = "0xD276D0", Offset = "0xD276D0", VA = "0xD276D0")]
		public static extern void ovrAvatarSpecificationRequest_SetLevelOfDetail(IntPtr specificationRequest, ovrAvatarAssetLevelOfDetail lod);

		[PreserveSig]
		[Token(Token = "0x6001612")]
		[Address(RVA = "0xD27760", Offset = "0xD27760", VA = "0xD27760")]
		public static extern void ovrAvatar_RequestAvatarSpecification(ulong userID);

		[PreserveSig]
		[Token(Token = "0x6001613")]
		[Address(RVA = "0xD277E0", Offset = "0xD277E0", VA = "0xD277E0")]
		public static extern void ovrAvatar_RequestAvatarSpecificationFromSpecRequest(IntPtr specificationRequest);

		[PreserveSig]
		[Token(Token = "0x6001614")]
		[Address(RVA = "0xD27860", Offset = "0xD27860", VA = "0xD27860")]
		public static extern void ovrAvatarSpecificationRequest_SetFallbackLookAndFeelVersion(IntPtr specificationRequest, ovrAvatarLookAndFeelVersion version);

		[PreserveSig]
		[Token(Token = "0x6001615")]
		[Address(RVA = "0xD278F0", Offset = "0xD278F0", VA = "0xD278F0")]
		public static extern void ovrAvatarSpecificationRequest_SetExpressiveFlag(IntPtr specificationRequest, bool enable);

		[PreserveSig]
		[Token(Token = "0x6001616")]
		[Address(RVA = "0xD27980", Offset = "0xD27980", VA = "0xD27980")]
		public static extern IntPtr ovrAvatar_Create(IntPtr avatarSpecification, ovrAvatarCapabilities capabilities);

		[PreserveSig]
		[Token(Token = "0x6001617")]
		[Address(RVA = "0xD27A10", Offset = "0xD27A10", VA = "0xD27A10")]
		public static extern void ovrAvatar_Destroy(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x6001618")]
		[Address(RVA = "0xD27A90", Offset = "0xD27A90", VA = "0xD27A90")]
		public static extern void ovrAvatarPose_UpdateBody(IntPtr avatar, ovrAvatarTransform headPose);

		[Token(Token = "0x6001619")]
		[Address(RVA = "0xD27B30", Offset = "0xD27B30", VA = "0xD27B30")]
		public static void ovrAvatarPose_UpdateVoiceVisualization(IntPtr avatar, float[] pcmData)
		{
		}

		[PreserveSig]
		[Token(Token = "0x600161A")]
		[Address(RVA = "0xD27BB0", Offset = "0xD27BB0", VA = "0xD27BB0")]
		private static extern void ovrAvatarPose_UpdateVoiceVisualization_Native(IntPtr avatar, uint pcmDataSize, [In] float[] pcmData);

		[PreserveSig]
		[Token(Token = "0x600161B")]
		[Address(RVA = "0xD27C50", Offset = "0xD27C50", VA = "0xD27C50")]
		public static extern void ovrAvatarPose_UpdateHands(IntPtr avatar, ovrAvatarHandInputState inputStateLeft, ovrAvatarHandInputState inputStateRight);

		[PreserveSig]
		[Token(Token = "0x600161C")]
		[Address(RVA = "0xD27D10", Offset = "0xD27D10", VA = "0xD27D10")]
		public static extern void ovrAvatarPose_UpdateHandsWithType(IntPtr avatar, ovrAvatarHandInputState inputStateLeft, ovrAvatarHandInputState inputStateRight, ovrAvatarControllerType type);

		[PreserveSig]
		[Token(Token = "0x600161D")]
		[Address(RVA = "0xD27DE0", Offset = "0xD27DE0", VA = "0xD27DE0")]
		public static extern void ovrAvatarPose_Finalize(IntPtr avatar, float elapsedSeconds);

		[PreserveSig]
		[Token(Token = "0x600161E")]
		[Address(RVA = "0xD27E70", Offset = "0xD27E70", VA = "0xD27E70")]
		public static extern void ovrAvatar_SetLeftControllerVisibility(IntPtr avatar, bool show);

		[PreserveSig]
		[Token(Token = "0x600161F")]
		[Address(RVA = "0xD27F00", Offset = "0xD27F00", VA = "0xD27F00")]
		public static extern void ovrAvatar_SetRightControllerVisibility(IntPtr avatar, bool show);

		[PreserveSig]
		[Token(Token = "0x6001620")]
		[Address(RVA = "0xD27F90", Offset = "0xD27F90", VA = "0xD27F90")]
		public static extern void ovrAvatar_SetLeftHandVisibility(IntPtr avatar, bool show);

		[PreserveSig]
		[Token(Token = "0x6001621")]
		[Address(RVA = "0xD28020", Offset = "0xD28020", VA = "0xD28020")]
		public static extern void ovrAvatar_SetRightHandVisibility(IntPtr avatar, bool show);

		[PreserveSig]
		[Token(Token = "0x6001622")]
		[Address(RVA = "0xD280B0", Offset = "0xD280B0", VA = "0xD280B0")]
		public static extern uint ovrAvatarComponent_Count(IntPtr avatar);

		[Token(Token = "0x6001623")]
		[Address(RVA = "0xD28130", Offset = "0xD28130", VA = "0xD28130")]
		public static void ovrAvatarComponent_Get(IntPtr avatar, uint index, bool includeName, ref ovrAvatarComponent component)
		{
		}

		[Token(Token = "0x6001624")]
		[Address(RVA = "0xD28250", Offset = "0xD28250", VA = "0xD28250")]
		public static void ovrAvatarComponent_Get(IntPtr componentPtr, bool includeName, ref ovrAvatarComponent component)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001625")]
		[Address(RVA = "0xD281C0", Offset = "0xD281C0", VA = "0xD281C0")]
		public static extern IntPtr ovrAvatarComponent_Get_Native(IntPtr avatar, uint index);

		[Token(Token = "0x6001626")]
		[Address(RVA = "0xD28444", Offset = "0xD28444", VA = "0xD28444")]
		public static bool ovrAvatarPose_GetBaseComponent(IntPtr avatar, ref ovrAvatarBaseComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6001627")]
		[Address(RVA = "0xD2857C", Offset = "0xD2857C", VA = "0xD2857C")]
		private static extern IntPtr ovrAvatarPose_GetBaseComponent_Native(IntPtr avatar);

		[Token(Token = "0x6001628")]
		public static IntPtr MarshalRenderComponent<T>(IntPtr ptr) where T : struct
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6001629")]
		[Address(RVA = "0xD285FC", Offset = "0xD285FC", VA = "0xD285FC")]
		public static bool ovrAvatarPose_GetBodyComponent(IntPtr avatar, ref ovrAvatarBodyComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x600162A")]
		[Address(RVA = "0xD2886C", Offset = "0xD2886C", VA = "0xD2886C")]
		private static extern IntPtr ovrAvatarPose_GetBodyComponent_Native(IntPtr avatar);

		[Token(Token = "0x600162B")]
		[Address(RVA = "0xD288EC", Offset = "0xD288EC", VA = "0xD288EC")]
		public static bool ovrAvatarPose_GetLeftControllerComponent(IntPtr avatar, ref ovrAvatarControllerComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x600162C")]
		[Address(RVA = "0xD28A24", Offset = "0xD28A24", VA = "0xD28A24")]
		private static extern IntPtr ovrAvatarPose_GetLeftControllerComponent_Native(IntPtr avatar);

		[Token(Token = "0x600162D")]
		[Address(RVA = "0xD28AA4", Offset = "0xD28AA4", VA = "0xD28AA4")]
		public static bool ovrAvatarPose_GetRightControllerComponent(IntPtr avatar, ref ovrAvatarControllerComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x600162E")]
		[Address(RVA = "0xD28BDC", Offset = "0xD28BDC", VA = "0xD28BDC")]
		private static extern IntPtr ovrAvatarPose_GetRightControllerComponent_Native(IntPtr avatar);

		[Token(Token = "0x600162F")]
		[Address(RVA = "0xD28C5C", Offset = "0xD28C5C", VA = "0xD28C5C")]
		public static bool ovrAvatarPose_GetLeftHandComponent(IntPtr avatar, ref ovrAvatarHandComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6001630")]
		[Address(RVA = "0xD28D94", Offset = "0xD28D94", VA = "0xD28D94")]
		private static extern IntPtr ovrAvatarPose_GetLeftHandComponent_Native(IntPtr avatar);

		[Token(Token = "0x6001631")]
		[Address(RVA = "0xD28E14", Offset = "0xD28E14", VA = "0xD28E14")]
		public static bool ovrAvatarPose_GetRightHandComponent(IntPtr avatar, ref ovrAvatarHandComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6001632")]
		[Address(RVA = "0xD28F4C", Offset = "0xD28F4C", VA = "0xD28F4C")]
		private static extern IntPtr ovrAvatarPose_GetRightHandComponent_Native(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x6001633")]
		[Address(RVA = "0xD28FCC", Offset = "0xD28FCC", VA = "0xD28FCC")]
		public static extern void ovrAvatarAsset_BeginLoading(ulong assetID);

		[PreserveSig]
		[Token(Token = "0x6001634")]
		[Address(RVA = "0xD2904C", Offset = "0xD2904C", VA = "0xD2904C")]
		public static extern bool ovrAvatarAsset_BeginLoadingLOD(ulong assetId, ovrAvatarAssetLevelOfDetail lod);

		[PreserveSig]
		[Token(Token = "0x6001635")]
		[Address(RVA = "0xD290E4", Offset = "0xD290E4", VA = "0xD290E4")]
		public static extern ovrAvatarAssetType ovrAvatarAsset_GetType(IntPtr assetHandle);

		[Token(Token = "0x6001636")]
		[Address(RVA = "0xD29164", Offset = "0xD29164", VA = "0xD29164")]
		public static ovrAvatarMeshAssetData ovrAvatarAsset_GetMeshData(IntPtr assetPtr)
		{
			return default(ovrAvatarMeshAssetData);
		}

		[Token(Token = "0x6001637")]
		[Address(RVA = "0xD29310", Offset = "0xD29310", VA = "0xD29310")]
		public static ovrAvatarMeshAssetDataV2 ovrAvatarAsset_GetCombinedMeshData(IntPtr assetPtr)
		{
			return default(ovrAvatarMeshAssetDataV2);
		}

		[PreserveSig]
		[Token(Token = "0x6001638")]
		[Address(RVA = "0xD2943C", Offset = "0xD2943C", VA = "0xD2943C")]
		private static extern IntPtr ovrAvatarAsset_GetCombinedMeshData_Native(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x6001639")]
		[Address(RVA = "0xD29290", Offset = "0xD29290", VA = "0xD29290")]
		private static extern IntPtr ovrAvatarAsset_GetMeshData_Native(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x600163A")]
		[Address(RVA = "0xD294BC", Offset = "0xD294BC", VA = "0xD294BC")]
		public static extern uint ovrAvatarAsset_GetMeshBlendShapeCount(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x600163B")]
		[Address(RVA = "0xD2953C", Offset = "0xD2953C", VA = "0xD2953C")]
		public static extern IntPtr ovrAvatarAsset_GetMeshBlendShapeName(IntPtr assetPtr, uint index);

		[PreserveSig]
		[Token(Token = "0x600163C")]
		[Address(RVA = "0xD295CC", Offset = "0xD295CC", VA = "0xD295CC")]
		public static extern uint ovrAvatarAsset_GetSubmeshCount(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x600163D")]
		[Address(RVA = "0xD2964C", Offset = "0xD2964C", VA = "0xD2964C")]
		public static extern uint ovrAvatarAsset_GetSubmeshLastIndex(IntPtr assetPtr, uint index);

		[PreserveSig]
		[Token(Token = "0x600163E")]
		[Address(RVA = "0xD296DC", Offset = "0xD296DC", VA = "0xD296DC")]
		public static extern IntPtr ovrAvatarAsset_GetMeshBlendShapeVertices(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x600163F")]
		[Address(RVA = "0xD2975C", Offset = "0xD2975C", VA = "0xD2975C")]
		public static extern IntPtr ovrAvatarAsset_GetAvatar(IntPtr assetHandle);

		[Token(Token = "0x6001640")]
		[Address(RVA = "0xD297DC", Offset = "0xD297DC", VA = "0xD297DC")]
		public static ulong[] ovrAvatarAsset_GetCombinedMeshIDs(IntPtr assetHandle)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001641")]
		[Address(RVA = "0xD29A18", Offset = "0xD29A18", VA = "0xD29A18")]
		public static extern IntPtr ovrAvatarAsset_GetCombinedMeshIDs_Native(IntPtr assetHandle, IntPtr count);

		[Token(Token = "0x6001642")]
		[Address(RVA = "0xD29AA8", Offset = "0xD29AA8", VA = "0xD29AA8")]
		public static void ovrAvatar_GetCombinedMeshAlphaData(IntPtr avatar, ref ulong textureID, ref Vector4 offset)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001643")]
		[Address(RVA = "0xD29C94", Offset = "0xD29C94", VA = "0xD29C94")]
		public static extern IntPtr ovrAvatar_GetCombinedMeshAlphaData_Native(IntPtr avatar, IntPtr textureIDPtr, IntPtr offsetPtr);

		[Token(Token = "0x6001644")]
		[Address(RVA = "0xD29D2C", Offset = "0xD29D2C", VA = "0xD29D2C")]
		public static ovrAvatarTextureAssetData ovrAvatarAsset_GetTextureData(IntPtr assetPtr)
		{
			return default(ovrAvatarTextureAssetData);
		}

		[PreserveSig]
		[Token(Token = "0x6001645")]
		[Address(RVA = "0xD29E50", Offset = "0xD29E50", VA = "0xD29E50")]
		private static extern IntPtr ovrAvatarAsset_GetTextureData_Native(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x6001646")]
		[Address(RVA = "0xD29ED0", Offset = "0xD29ED0", VA = "0xD29ED0")]
		private static extern IntPtr ovrAvatarAsset_GetMaterialData_Native(IntPtr assetPtr);

		[Token(Token = "0x6001647")]
		[Address(RVA = "0xD29F50", Offset = "0xD29F50", VA = "0xD29F50")]
		public static ovrAvatarMaterialState ovrAvatarAsset_GetMaterialState(IntPtr assetPtr)
		{
			return default(ovrAvatarMaterialState);
		}

		[PreserveSig]
		[Token(Token = "0x6001648")]
		[Address(RVA = "0xD2A078", Offset = "0xD2A078", VA = "0xD2A078")]
		public static extern ovrAvatarRenderPartType ovrAvatarRenderPart_GetType(IntPtr renderPart);

		[Token(Token = "0x6001649")]
		[Address(RVA = "0xD2A0F8", Offset = "0xD2A0F8", VA = "0xD2A0F8")]
		public static ovrAvatarRenderPart_SkinnedMeshRender ovrAvatarRenderPart_GetSkinnedMeshRender(IntPtr renderPart)
		{
			return default(ovrAvatarRenderPart_SkinnedMeshRender);
		}

		[PreserveSig]
		[Token(Token = "0x600164A")]
		[Address(RVA = "0xD2A220", Offset = "0xD2A220", VA = "0xD2A220")]
		private static extern IntPtr ovrAvatarRenderPart_GetSkinnedMeshRender_Native(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x600164B")]
		[Address(RVA = "0xD2A2A0", Offset = "0xD2A2A0", VA = "0xD2A2A0")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRender_GetTransform(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x600164C")]
		[Address(RVA = "0xD2A330", Offset = "0xD2A330", VA = "0xD2A330")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBS_GetTransform(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x600164D")]
		[Address(RVA = "0xD2A3C0", Offset = "0xD2A3C0", VA = "0xD2A3C0")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBSV2_GetTransform(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x600164E")]
		[Address(RVA = "0xD2A450", Offset = "0xD2A450", VA = "0xD2A450")]
		public static extern ovrAvatarVisibilityFlags ovrAvatarSkinnedMeshRender_GetVisibilityMask(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x600164F")]
		[Address(RVA = "0xD2A4D0", Offset = "0xD2A4D0", VA = "0xD2A4D0")]
		public static extern bool ovrAvatarSkinnedMeshRender_MaterialStateChanged(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001650")]
		[Address(RVA = "0xD2A558", Offset = "0xD2A558", VA = "0xD2A558")]
		public static extern bool ovrAvatarSkinnedMeshRenderPBSV2_MaterialStateChanged(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001651")]
		[Address(RVA = "0xD2A5E0", Offset = "0xD2A5E0", VA = "0xD2A5E0")]
		public static extern ovrAvatarVisibilityFlags ovrAvatarSkinnedMeshRenderPBS_GetVisibilityMask(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001652")]
		[Address(RVA = "0xD2A660", Offset = "0xD2A660", VA = "0xD2A660")]
		public static extern ovrAvatarVisibilityFlags ovrAvatarSkinnedMeshRenderPBSV2_GetVisibilityMask(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001653")]
		[Address(RVA = "0xD2A6E0", Offset = "0xD2A6E0", VA = "0xD2A6E0")]
		public static extern ovrAvatarMaterialState ovrAvatarSkinnedMeshRender_GetMaterialState(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001654")]
		[Address(RVA = "0xD2A794", Offset = "0xD2A794", VA = "0xD2A794")]
		public static extern ovrAvatarPBSMaterialState ovrAvatarSkinnedMeshRenderPBSV2_GetPBSMaterialState(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001655")]
		[Address(RVA = "0xD2A824", Offset = "0xD2A824", VA = "0xD2A824")]
		public static extern ovrAvatarExpressiveParameters ovrAvatar_GetExpressiveParameters(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x6001656")]
		[Address(RVA = "0xD2A8B4", Offset = "0xD2A8B4", VA = "0xD2A8B4")]
		public static extern ulong ovrAvatarSkinnedMeshRender_GetDirtyJoints(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001657")]
		[Address(RVA = "0xD2A934", Offset = "0xD2A934", VA = "0xD2A934")]
		public static extern ulong ovrAvatarSkinnedMeshRenderPBS_GetDirtyJoints(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001658")]
		[Address(RVA = "0xD2A9B4", Offset = "0xD2A9B4", VA = "0xD2A9B4")]
		public static extern ulong ovrAvatarSkinnedMeshRenderPBSV2_GetDirtyJoints(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001659")]
		[Address(RVA = "0xD2AA34", Offset = "0xD2AA34", VA = "0xD2AA34")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRender_GetJointTransform(IntPtr renderPart, uint jointIndex);

		[PreserveSig]
		[Token(Token = "0x600165A")]
		[Address(RVA = "0xD2AACC", Offset = "0xD2AACC", VA = "0xD2AACC")]
		public static extern void ovrAvatar_SetActionUnitOnsetSpeed(IntPtr avatar, float onsetSpeed);

		[PreserveSig]
		[Token(Token = "0x600165B")]
		[Address(RVA = "0xD2AB5C", Offset = "0xD2AB5C", VA = "0xD2AB5C")]
		public static extern void ovrAvatar_SetActionUnitFalloffSpeed(IntPtr avatar, float falloffSpeed);

		[PreserveSig]
		[Token(Token = "0x600165C")]
		[Address(RVA = "0xD2ABEC", Offset = "0xD2ABEC", VA = "0xD2ABEC")]
		public static extern void ovrAvatar_SetVisemeMultiplier(IntPtr avatar, float visemeMultiplier);

		[PreserveSig]
		[Token(Token = "0x600165D")]
		[Address(RVA = "0xD2AC7C", Offset = "0xD2AC7C", VA = "0xD2AC7C")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBS_GetJointTransform(IntPtr renderPart, uint jointIndex);

		[PreserveSig]
		[Token(Token = "0x600165E")]
		[Address(RVA = "0xD2AD14", Offset = "0xD2AD14", VA = "0xD2AD14")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBSV2_GetJointTransform(IntPtr renderPart, uint jointIndex);

		[PreserveSig]
		[Token(Token = "0x600165F")]
		[Address(RVA = "0xD2ADAC", Offset = "0xD2ADAC", VA = "0xD2ADAC")]
		public static extern ulong ovrAvatarSkinnedMeshRenderPBS_GetAlbedoTextureAssetID(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001660")]
		[Address(RVA = "0xD2AE2C", Offset = "0xD2AE2C", VA = "0xD2AE2C")]
		public static extern ulong ovrAvatarSkinnedMeshRenderPBS_GetSurfaceTextureAssetID(IntPtr renderPart);

		[Token(Token = "0x6001661")]
		[Address(RVA = "0xD2AEAC", Offset = "0xD2AEAC", VA = "0xD2AEAC")]
		public static ovrAvatarRenderPart_SkinnedMeshRenderPBS ovrAvatarRenderPart_GetSkinnedMeshRenderPBS(IntPtr renderPart)
		{
			return default(ovrAvatarRenderPart_SkinnedMeshRenderPBS);
		}

		[PreserveSig]
		[Token(Token = "0x6001662")]
		[Address(RVA = "0xD2AFD4", Offset = "0xD2AFD4", VA = "0xD2AFD4")]
		private static extern IntPtr ovrAvatarRenderPart_GetSkinnedMeshRenderPBS_Native(IntPtr renderPart);

		[Token(Token = "0x6001663")]
		[Address(RVA = "0xD2B054", Offset = "0xD2B054", VA = "0xD2B054")]
		public static ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2 ovrAvatarRenderPart_GetSkinnedMeshRenderPBSV2(IntPtr renderPart)
		{
			return default(ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2);
		}

		[PreserveSig]
		[Token(Token = "0x6001664")]
		[Address(RVA = "0xD2B17C", Offset = "0xD2B17C", VA = "0xD2B17C")]
		private static extern IntPtr ovrAvatarRenderPart_GetSkinnedMeshRenderPBSV2_Native(IntPtr renderPart);

		[Token(Token = "0x6001665")]
		[Address(RVA = "0xD2B1FC", Offset = "0xD2B1FC", VA = "0xD2B1FC")]
		public static void ovrAvatarSkinnedMeshRender_GetBlendShapeParams(IntPtr renderPart, ref ovrAvatarBlendShapeParams blendParams)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001666")]
		[Address(RVA = "0xD2B324", Offset = "0xD2B324", VA = "0xD2B324")]
		private static extern IntPtr ovrAvatarSkinnedMeshRender_GetBlendShapeParams_Native(IntPtr renderPart);

		[Token(Token = "0x6001667")]
		[Address(RVA = "0xD2B3A4", Offset = "0xD2B3A4", VA = "0xD2B3A4")]
		public static ovrAvatarRenderPart_ProjectorRender ovrAvatarRenderPart_GetProjectorRender(IntPtr renderPart)
		{
			return default(ovrAvatarRenderPart_ProjectorRender);
		}

		[Token(Token = "0x6001668")]
		[Address(RVA = "0xD2B54C", Offset = "0xD2B54C", VA = "0xD2B54C")]
		public static ovrAvatarPBSMaterialState[] ovrAvatar_GetBodyPBSMaterialStates(IntPtr renderPart)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001669")]
		[Address(RVA = "0xD2B7E8", Offset = "0xD2B7E8", VA = "0xD2B7E8")]
		private static extern IntPtr ovrAvatar_GetBodyPBSMaterialStates_Native(IntPtr avatar, IntPtr count);

		[PreserveSig]
		[Token(Token = "0x600166A")]
		[Address(RVA = "0xD2B4CC", Offset = "0xD2B4CC", VA = "0xD2B4CC")]
		private static extern IntPtr ovrAvatarRenderPart_GetProjectorRender_Native(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x600166B")]
		[Address(RVA = "0xD2B878", Offset = "0xD2B878", VA = "0xD2B878")]
		public static extern uint ovrAvatar_GetReferencedAssetCount(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x600166C")]
		[Address(RVA = "0xD2B8F8", Offset = "0xD2B8F8", VA = "0xD2B8F8")]
		public static extern ulong ovrAvatar_GetReferencedAsset(IntPtr avatar, uint index);

		[PreserveSig]
		[Token(Token = "0x600166D")]
		[Address(RVA = "0xD2B988", Offset = "0xD2B988", VA = "0xD2B988")]
		public static extern void ovrAvatar_SetLeftHandGesture(IntPtr avatar, ovrAvatarHandGesture gesture);

		[PreserveSig]
		[Token(Token = "0x600166E")]
		[Address(RVA = "0xD2BA18", Offset = "0xD2BA18", VA = "0xD2BA18")]
		public static extern void ovrAvatar_SetRightHandGesture(IntPtr avatar, ovrAvatarHandGesture gesture);

		[PreserveSig]
		[Token(Token = "0x600166F")]
		[Address(RVA = "0xD2BAA8", Offset = "0xD2BAA8", VA = "0xD2BAA8")]
		public static extern void ovrAvatar_SetLeftHandCustomGesture(IntPtr avatar, uint jointCount, [In] ovrAvatarTransform[] customJointTransforms);

		[PreserveSig]
		[Token(Token = "0x6001670")]
		[Address(RVA = "0xD2BB48", Offset = "0xD2BB48", VA = "0xD2BB48")]
		public static extern void ovrAvatar_SetRightHandCustomGesture(IntPtr avatar, uint jointCount, [In] ovrAvatarTransform[] customJointTransforms);

		[PreserveSig]
		[Token(Token = "0x6001671")]
		[Address(RVA = "0xD2BBE8", Offset = "0xD2BBE8", VA = "0xD2BBE8")]
		public static extern void ovrAvatar_UpdatePoseFromPacket(IntPtr avatar, IntPtr packet, float secondsFromStart);

		[PreserveSig]
		[Token(Token = "0x6001672")]
		[Address(RVA = "0xD2BC88", Offset = "0xD2BC88", VA = "0xD2BC88")]
		public static extern void ovrAvatarPacket_BeginRecording(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x6001673")]
		[Address(RVA = "0xD2BD08", Offset = "0xD2BD08", VA = "0xD2BD08")]
		public static extern IntPtr ovrAvatarPacket_EndRecording(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x6001674")]
		[Address(RVA = "0xD2BD88", Offset = "0xD2BD88", VA = "0xD2BD88")]
		public static extern uint ovrAvatarPacket_GetSize(IntPtr packet);

		[PreserveSig]
		[Token(Token = "0x6001675")]
		[Address(RVA = "0xD2BE08", Offset = "0xD2BE08", VA = "0xD2BE08")]
		public static extern float ovrAvatarPacket_GetDurationSeconds(IntPtr packet);

		[PreserveSig]
		[Token(Token = "0x6001676")]
		[Address(RVA = "0xD2BE88", Offset = "0xD2BE88", VA = "0xD2BE88")]
		public static extern void ovrAvatarPacket_Free(IntPtr packet);

		[PreserveSig]
		[Token(Token = "0x6001677")]
		[Address(RVA = "0xD2BF08", Offset = "0xD2BF08", VA = "0xD2BF08")]
		public static extern bool ovrAvatarPacket_Write(IntPtr packet, uint bufferSize, [Out] byte[] buffer);

		[PreserveSig]
		[Token(Token = "0x6001678")]
		[Address(RVA = "0xD2C030", Offset = "0xD2C030", VA = "0xD2C030")]
		public static extern IntPtr ovrAvatarPacket_Read(uint bufferSize, [In] byte[] buffer);

		[PreserveSig]
		[Token(Token = "0x6001679")]
		[Address(RVA = "0xD2C0C8", Offset = "0xD2C0C8", VA = "0xD2C0C8")]
		private static extern void ovrAvatar_SetInternalForceASTCTextures(bool value);

		[Token(Token = "0x600167A")]
		[Address(RVA = "0xD2C148", Offset = "0xD2C148", VA = "0xD2C148")]
		public static void ovrAvatar_SetForceASTCTextures(bool value)
		{
		}

		[Token(Token = "0x600167B")]
		[Address(RVA = "0xD2C1AC", Offset = "0xD2C1AC", VA = "0xD2C1AC")]
		public static void ovrAvatar_OverrideExpressiveLogic(IntPtr avatar, ovrAvatarBlendShapeParams blendParams)
		{
		}

		[PreserveSig]
		[Token(Token = "0x600167C")]
		[Address(RVA = "0xD2C2C8", Offset = "0xD2C2C8", VA = "0xD2C2C8")]
		private static extern void ovrAvatar_OverrideExpressiveLogic_Native(IntPtr avatar, IntPtr state);

		[Token(Token = "0x600167D")]
		[Address(RVA = "0xD2C358", Offset = "0xD2C358", VA = "0xD2C358")]
		public static void ovrAvatar_SetVisemes(IntPtr avatar, ovrAvatarVisemes visemes)
		{
		}

		[PreserveSig]
		[Token(Token = "0x600167E")]
		[Address(RVA = "0xD2C49C", Offset = "0xD2C49C", VA = "0xD2C49C")]
		private static extern void ovrAvatar_SetVisemes_Native(IntPtr avatar, IntPtr visemes);

		[PreserveSig]
		[Token(Token = "0x600167F")]
		[Address(RVA = "0xD2C52C", Offset = "0xD2C52C", VA = "0xD2C52C")]
		public static extern void ovrAvatar_UpdateWorldTransform(IntPtr avatar, ovrAvatarTransform transform);

		[Token(Token = "0x6001680")]
		[Address(RVA = "0xD2C5CC", Offset = "0xD2C5CC", VA = "0xD2C5CC")]
		public static void ovrAvatar_UpdateGazeTargets(ovrAvatarGazeTargets targets)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001681")]
		[Address(RVA = "0xD2C964", Offset = "0xD2C964", VA = "0xD2C964")]
		private static extern void ovrAvatar_UpdateGazeTargets_Native(IntPtr targets);

		[PreserveSig]
		[Token(Token = "0x6001682")]
		[Address(RVA = "0xD2C9E4", Offset = "0xD2C9E4", VA = "0xD2C9E4")]
		public static extern void ovrAvatar_RemoveGazeTargets(uint targetCount, uint[] ids);

		[Token(Token = "0x6001683")]
		[Address(RVA = "0xD2CA7C", Offset = "0xD2CA7C", VA = "0xD2CA7C")]
		public static void ovrAvatar_UpdateLights(ovrAvatarLights lights)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001684")]
		[Address(RVA = "0xD2D244", Offset = "0xD2D244", VA = "0xD2D244")]
		private static extern void ovrAvatar_UpdateLights_Native(IntPtr lights);

		[PreserveSig]
		[Token(Token = "0x6001685")]
		[Address(RVA = "0xD2D2C4", Offset = "0xD2D2C4", VA = "0xD2D2C4")]
		public static extern void ovrAvatar_RemoveLights(uint lightCount, uint[] ids);

		[Token(Token = "0x6001686")]
		[Address(RVA = "0xD26C08", Offset = "0xD26C08", VA = "0xD26C08")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x8CA0E4", Offset = "0x8CA0E4")]
		public static void LoggingCallback(IntPtr str)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001687")]
		[Address(RVA = "0xD2D35C", Offset = "0xD2D35C", VA = "0xD2D35C")]
		public static extern void ovrAvatar_RegisterLoggingCallback(LoggingDelegate callback);

		[PreserveSig]
		[Token(Token = "0x6001688")]
		[Address(RVA = "0xD2D3E0", Offset = "0xD2D3E0", VA = "0xD2D3E0")]
		public static extern void ovrAvatar_SetLoggingLevel(ovrAvatarLogLevel level);

		[PreserveSig]
		[Token(Token = "0x6001689")]
		[Address(RVA = "0xD2D460", Offset = "0xD2D460", VA = "0xD2D460")]
		public static extern IntPtr ovrAvatar_GetDebugTransforms_Native(IntPtr count);

		[PreserveSig]
		[Token(Token = "0x600168A")]
		[Address(RVA = "0xD2D4E0", Offset = "0xD2D4E0", VA = "0xD2D4E0")]
		public static extern IntPtr ovrAvatar_GetDebugLines_Native(IntPtr count);

		[Token(Token = "0x600168B")]
		[Address(RVA = "0xD2D560", Offset = "0xD2D560", VA = "0xD2D560")]
		public static void ovrAvatar_DrawDebugLines()
		{
		}

		[PreserveSig]
		[Token(Token = "0x600168C")]
		[Address(RVA = "0xD2DF40", Offset = "0xD2DF40", VA = "0xD2DF40")]
		public static extern void ovrAvatar_SetDebugDrawContext(uint context);

		[Token(Token = "0x600168D")]
		[Address(RVA = "0xD2DFC0", Offset = "0xD2DFC0", VA = "0xD2DFC0")]
		public static bool SendEvent(string name, string param = "", string source = "")
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x600168E")]
		[Address(RVA = "0xD2E484", Offset = "0xD2E484", VA = "0xD2E484")]
		private static extern IntPtr _ovrp_GetVersion();

		[Token(Token = "0x600168F")]
		[Address(RVA = "0xD2E318", Offset = "0xD2E318", VA = "0xD2E318")]
		public static string ovrp_GetVersion()
		{
			return null;
		}

		[Token(Token = "0x6001690")]
		[Address(RVA = "0xD2E4F8", Offset = "0xD2E4F8", VA = "0xD2E4F8")]
		public CAPI()
		{
		}
	}
}
namespace OVR
{
	[Token(Token = "0x200033B")]
	public class TestScript : MonoBehaviour
	{
		[Token(Token = "0x400145A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "InspectorNoteAttribute", RVA = "0x8BDF28", Offset = "0x8BDF28")]
		public SoundFXRef testSound1;

		[Token(Token = "0x400145B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SoundFXRef testSound2;

		[Token(Token = "0x6001692")]
		[Address(RVA = "0x154A650", Offset = "0x154A650", VA = "0x154A650")]
		private void Start()
		{
		}

		[Token(Token = "0x6001693")]
		[Address(RVA = "0x154A654", Offset = "0x154A654", VA = "0x154A654")]
		private void Update()
		{
		}

		[Token(Token = "0x6001694")]
		[Address(RVA = "0x154A714", Offset = "0x154A714", VA = "0x154A714")]
		public TestScript()
		{
		}
	}
	[Token(Token = "0x200033C")]
	public class AmbienceEmitter : MonoBehaviour
	{
		[Token(Token = "0x400145C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SoundFXRef[] ambientSounds;

		[Token(Token = "0x400145D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool autoActivate;

		[Token(Token = "0x400145E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BDF74", Offset = "0x8BDF74")]
		public bool autoRetrigger;

		[Token(Token = "0x400145F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x8BDFAC", Offset = "0x8BDFAC")]
		public UnityEngine.Vector2 randomRetriggerDelaySecs;

		[Token(Token = "0x4001460")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BDFD0", Offset = "0x8BDFD0")]
		public Transform[] playPositions;

		[Token(Token = "0x4001461")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool activated;

		[Token(Token = "0x4001462")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int playingIdx;

		[Token(Token = "0x4001463")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float nextPlayTime;

		[Token(Token = "0x4001464")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float fadeTime;

		[Token(Token = "0x4001465")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int lastPosIdx;

		[Token(Token = "0x6001695")]
		[Address(RVA = "0x1541994", Offset = "0x1541994", VA = "0x1541994")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001696")]
		[Address(RVA = "0x1541B18", Offset = "0x1541B18", VA = "0x1541B18")]
		private void Update()
		{
		}

		[Token(Token = "0x6001697")]
		[Address(RVA = "0x1541CF4", Offset = "0x1541CF4", VA = "0x1541CF4")]
		public void OnTriggerEnter(Collider col)
		{
		}

		[Token(Token = "0x6001698")]
		[Address(RVA = "0x1541B78", Offset = "0x1541B78", VA = "0x1541B78")]
		public void Play()
		{
		}

		[Token(Token = "0x6001699")]
		[Address(RVA = "0x1541E34", Offset = "0x1541E34", VA = "0x1541E34")]
		public void EnableEmitter(bool enable)
		{
		}

		[Token(Token = "0x600169A")]
		[Address(RVA = "0x1541FA8", Offset = "0x1541FA8", VA = "0x1541FA8")]
		public AmbienceEmitter()
		{
		}
	}
	[Token(Token = "0x200033D")]
	public enum PreloadSounds
	{
		[Token(Token = "0x4001467")]
		Default,
		[Token(Token = "0x4001468")]
		Preload,
		[Token(Token = "0x4001469")]
		ManualPreload
	}
	[Token(Token = "0x200033E")]
	public enum Fade
	{
		[Token(Token = "0x400146B")]
		In,
		[Token(Token = "0x400146C")]
		Out
	}
	[Serializable]
	[Token(Token = "0x200033F")]
	public class SoundGroup
	{
		[Token(Token = "0x400146D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x400146E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SoundFX[] soundList;

		[Token(Token = "0x400146F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioMixerGroup mixerGroup;

		[Token(Token = "0x4001470")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8BE008", Offset = "0x8BE008")]
		public int maxPlayingSounds;

		[Token(Token = "0x4001471")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public PreloadSounds preloadAudio;

		[Token(Token = "0x4001472")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float volumeOverride;

		[Token(Token = "0x4001473")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[HideInInspector]
		public int playingSoundCount;

		[Token(Token = "0x600169B")]
		[Address(RVA = "0x154A530", Offset = "0x154A530", VA = "0x154A530")]
		public SoundGroup(string name)
		{
		}

		[Token(Token = "0x600169C")]
		[Address(RVA = "0x154A5C4", Offset = "0x154A5C4", VA = "0x154A5C4")]
		public SoundGroup()
		{
		}

		[Token(Token = "0x600169D")]
		[Address(RVA = "0x1548F9C", Offset = "0x1548F9C", VA = "0x1548F9C")]
		public void IncrementPlayCount()
		{
		}

		[Token(Token = "0x600169E")]
		[Address(RVA = "0x15490DC", Offset = "0x15490DC", VA = "0x15490DC")]
		public void DecrementPlayCount()
		{
		}

		[Token(Token = "0x600169F")]
		[Address(RVA = "0x1549B94", Offset = "0x1549B94", VA = "0x1549B94")]
		public bool CanPlaySound()
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000340")]
	public class AudioManager : MonoBehaviour
	{
		[Token(Token = "0x200083F")]
		public enum Fade
		{
			[Token(Token = "0x40028BD")]
			In,
			[Token(Token = "0x40028BE")]
			Out
		}

		[Token(Token = "0x2000840")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B8D78", Offset = "0x8B8D78")]
		private sealed class <>c__DisplayClass75_0
		{
			[Token(Token = "0x40028BF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SoundPriority priority;

			[Token(Token = "0x6002F88")]
			[Address(RVA = "0x15460BC", Offset = "0x15460BC", VA = "0x15460BC")]
			public <>c__DisplayClass75_0()
			{
			}

			[Token(Token = "0x6002F89")]
			[Address(RVA = "0x1548A58", Offset = "0x1548A58", VA = "0x1548A58")]
			internal bool <FindFreeEmitter>b__0(SoundEmitter item)
			{
				return default(bool);
			}
		}

		[Serializable]
		[Token(Token = "0x2000841")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B8D88", Offset = "0x8B8D88")]
		private sealed class <>c
		{
			[Token(Token = "0x40028C0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40028C1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Predicate<SoundEmitter> <>9__75_1;

			[Token(Token = "0x6002F8B")]
			[Address(RVA = "0x15489C0", Offset = "0x15489C0", VA = "0x15489C0")]
			public <>c()
			{
			}

			[Token(Token = "0x6002F8C")]
			[Address(RVA = "0x15489C8", Offset = "0x15489C8", VA = "0x15489C8")]
			internal bool <FindFreeEmitter>b__75_1(SoundEmitter item)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4001474")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BE034", Offset = "0x8BE034")]
		public bool makePersistent;

		[Token(Token = "0x4001475")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BE06C", Offset = "0x8BE06C")]
		public bool enableSpatializedAudio;

		[Token(Token = "0x4001476")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BE0A4", Offset = "0x8BE0A4")]
		public bool enableSpatializedFastOverride;

		[Token(Token = "0x4001477")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BE0DC", Offset = "0x8BE0DC")]
		public AudioMixer audioMixer;

		[Token(Token = "0x4001478")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BE114", Offset = "0x8BE114")]
		public AudioMixerGroup defaultMixerGroup;

		[Token(Token = "0x4001479")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BE14C", Offset = "0x8BE14C")]
		public AudioMixerGroup reservedMixerGroup;

		[Token(Token = "0x400147A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BE184", Offset = "0x8BE184")]
		public AudioMixerGroup voiceChatMixerGroup;

		[Token(Token = "0x400147B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BE1BC", Offset = "0x8BE1BC")]
		public bool verboseLogging;

		[Token(Token = "0x400147C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BE1F4", Offset = "0x8BE1F4")]
		public int maxSoundEmitters;

		[Token(Token = "0x400147D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BE22C", Offset = "0x8BE22C")]
		public float volumeSoundFX;

		[Token(Token = "0x400147E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BE264", Offset = "0x8BE264")]
		public float soundFxFadeSecs;

		[Token(Token = "0x400147F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float audioMinFallOffDistance;

		[Token(Token = "0x4001480")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float audioMaxFallOffDistance;

		[Token(Token = "0x4001481")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public SoundGroup[] soundGroupings;

		[Token(Token = "0x4001482")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Dictionary<string, SoundFX> soundFXCache;

		[Token(Token = "0x4001483")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static AudioManager theAudioManager;

		[Token(Token = "0x4001484")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static FastList<string> names;

		[Token(Token = "0x4001485")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static string[] defaultSound;

		[Token(Token = "0x4001486")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static SoundFX nullSound;

		[Token(Token = "0x4001487")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static bool hideWarnings;

		[Token(Token = "0x4001488")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float audioMaxFallOffDistanceSqr;

		[Token(Token = "0x4001489")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private SoundEmitter[] soundEmitters;

		[Token(Token = "0x400148A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private FastList<SoundEmitter> playingEmitters;

		[Token(Token = "0x400148B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private FastList<SoundEmitter> nextFreeEmitters;

		[Token(Token = "0x400148C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private MixerSnapshot currentSnapshot;

		[Token(Token = "0x400148D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static GameObject soundEmitterParent;

		[Token(Token = "0x400148E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static Transform staticListenerPosition;

		[Token(Token = "0x400148F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static bool showPlayingEmitterCount;

		[Token(Token = "0x4001490")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		private static bool forceShowEmitterCount;

		[Token(Token = "0x4001491")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
		private static bool soundEnabled;

		[Token(Token = "0x4001492")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private static readonly AnimationCurve defaultReverbZoneMix;

		[Token(Token = "0x1700021C")]
		public static bool enableSpatialization
		{
			[Token(Token = "0x60016A0")]
			[Address(RVA = "0x1542068", Offset = "0x1542068", VA = "0x1542068")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700021D")]
		public static AudioManager Instance
		{
			[Token(Token = "0x60016A1")]
			[Address(RVA = "0x1542148", Offset = "0x1542148", VA = "0x1542148")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700021E")]
		public static float NearFallOff
		{
			[Token(Token = "0x60016A2")]
			[Address(RVA = "0x15421B0", Offset = "0x15421B0", VA = "0x15421B0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700021F")]
		public static float FarFallOff
		{
			[Token(Token = "0x60016A3")]
			[Address(RVA = "0x1542224", Offset = "0x1542224", VA = "0x1542224")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000220")]
		public static AudioMixerGroup EmitterGroup
		{
			[Token(Token = "0x60016A4")]
			[Address(RVA = "0x1542298", Offset = "0x1542298", VA = "0x1542298")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000221")]
		public static AudioMixerGroup ReservedGroup
		{
			[Token(Token = "0x60016A5")]
			[Address(RVA = "0x154230C", Offset = "0x154230C", VA = "0x154230C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000222")]
		public static AudioMixerGroup VoipGroup
		{
			[Token(Token = "0x60016A6")]
			[Address(RVA = "0x1542380", Offset = "0x1542380", VA = "0x1542380")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000223")]
		public static bool SoundEnabled
		{
			[Token(Token = "0x60016B1")]
			[Address(RVA = "0x15440D0", Offset = "0x15440D0", VA = "0x15440D0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60016A7")]
		[Address(RVA = "0x15423F4", Offset = "0x15423F4", VA = "0x15423F4")]
		private void Awake()
		{
		}

		[Token(Token = "0x60016A8")]
		[Address(RVA = "0x154261C", Offset = "0x154261C", VA = "0x154261C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60016A9")]
		[Address(RVA = "0x15423F8", Offset = "0x15423F8", VA = "0x15423F8")]
		private void Init()
		{
		}

		[Token(Token = "0x60016AA")]
		[Address(RVA = "0x1543248", Offset = "0x1543248", VA = "0x1543248")]
		private void Update()
		{
		}

		[Token(Token = "0x60016AB")]
		[Address(RVA = "0x1542774", Offset = "0x1542774", VA = "0x1542774")]
		private void RebuildSoundFXCache()
		{
		}

		[Token(Token = "0x60016AC")]
		[Address(RVA = "0x154386C", Offset = "0x154386C", VA = "0x154386C")]
		public static SoundFX FindSoundFX(string name, bool rebuildCache = false)
		{
			return null;
		}

		[Token(Token = "0x60016AD")]
		[Address(RVA = "0x15439EC", Offset = "0x15439EC", VA = "0x15439EC")]
		private static bool FindAudioManager()
		{
			return default(bool);
		}

		[Token(Token = "0x60016AE")]
		[Address(RVA = "0x1543B88", Offset = "0x1543B88", VA = "0x1543B88")]
		public static GameObject GetGameObject()
		{
			return null;
		}

		[Token(Token = "0x60016AF")]
		[Address(RVA = "0x1543C88", Offset = "0x1543C88", VA = "0x1543C88")]
		public static string NameMinusGroup(string name)
		{
			return null;
		}

		[Token(Token = "0x60016B0")]
		[Address(RVA = "0x1543D18", Offset = "0x1543D18", VA = "0x1543D18")]
		public static string[] GetSoundFXNames(string currentValue, out int currentIdx)
		{
			return null;
		}

		[Token(Token = "0x60016B2")]
		[Address(RVA = "0x1542BC0", Offset = "0x1542BC0", VA = "0x1542BC0")]
		private void InitializeSoundSystem()
		{
		}

		[Token(Token = "0x60016B3")]
		[Address(RVA = "0x154324C", Offset = "0x154324C", VA = "0x154324C")]
		private void UpdateFreeEmitters()
		{
		}

		[Token(Token = "0x60016B4")]
		[Address(RVA = "0x1544350", Offset = "0x1544350", VA = "0x1544350")]
		private string Fmt(int count)
		{
			return null;
		}

		[Token(Token = "0x60016B5")]
		[Address(RVA = "0x1544454", Offset = "0x1544454", VA = "0x1544454")]
		private string FmtFree(int count)
		{
			return null;
		}

		[Token(Token = "0x60016B6")]
		[Address(RVA = "0x154455C", Offset = "0x154455C", VA = "0x154455C")]
		private void OnPreSceneLoad()
		{
		}

		[Token(Token = "0x60016B7")]
		[Address(RVA = "0x1544218", Offset = "0x1544218", VA = "0x1544218")]
		private void ResetFreeEmitters()
		{
		}

		[Token(Token = "0x60016B8")]
		[Address(RVA = "0x15446C8", Offset = "0x15446C8", VA = "0x15446C8")]
		public static void FadeOutSoundChannel(int channel, float delaySecs, float fadeTime)
		{
		}

		[Token(Token = "0x60016B9")]
		[Address(RVA = "0x154481C", Offset = "0x154481C", VA = "0x154481C")]
		public static bool StopSound(int idx, bool fadeOut = true, bool stopReserved = false)
		{
			return default(bool);
		}

		[Token(Token = "0x60016BA")]
		[Address(RVA = "0x15449CC", Offset = "0x15449CC", VA = "0x15449CC")]
		public static void FadeInSound(int idx, float fadeTime, float volume)
		{
		}

		[Token(Token = "0x60016BB")]
		[Address(RVA = "0x1541D84", Offset = "0x1541D84", VA = "0x1541D84")]
		public static void FadeInSound(int idx, float fadeTime)
		{
		}

		[Token(Token = "0x60016BC")]
		[Address(RVA = "0x1541EF8", Offset = "0x1541EF8", VA = "0x1541EF8")]
		public static void FadeOutSound(int idx, float fadeTime)
		{
		}

		[Token(Token = "0x60016BD")]
		[Address(RVA = "0x1544B78", Offset = "0x1544B78", VA = "0x1544B78")]
		public static void StopAllSounds(bool fadeOut, bool stopReserved = false)
		{
		}

		[Token(Token = "0x60016BE")]
		[Address(RVA = "0x1544C44", Offset = "0x1544C44", VA = "0x1544C44")]
		public void MuteAllSounds(bool mute, bool muteReserved = false)
		{
		}

		[Token(Token = "0x60016BF")]
		[Address(RVA = "0x1544CD8", Offset = "0x1544CD8", VA = "0x1544CD8")]
		public void UnMuteAllSounds(bool unmute, bool unmuteReserved = false)
		{
		}

		[Token(Token = "0x60016C0")]
		[Address(RVA = "0x1544D9C", Offset = "0x1544D9C", VA = "0x1544D9C")]
		public static float GetEmitterEndTime(int idx)
		{
			return default(float);
		}

		[Token(Token = "0x60016C1")]
		[Address(RVA = "0x1544E40", Offset = "0x1544E40", VA = "0x1544E40")]
		public static float SetEmitterTime(int idx, float time)
		{
			return default(float);
		}

		[Token(Token = "0x60016C2")]
		[Address(RVA = "0x1544F20", Offset = "0x1544F20", VA = "0x1544F20")]
		public static int PlaySound(AudioClip clip, float volume, EmitterChannel src = EmitterChannel.Any, float delay = 0f, float pitchVariance = 1f, bool loop = false)
		{
			return default(int);
		}

		[Token(Token = "0x60016C3")]
		[Address(RVA = "0x1545A04", Offset = "0x1545A04", VA = "0x1545A04")]
		private static int FindFreeEmitter(EmitterChannel src, SoundPriority priority)
		{
			return default(int);
		}

		[Token(Token = "0x60016C4")]
		[Address(RVA = "0x15460C4", Offset = "0x15460C4", VA = "0x15460C4")]
		public static int PlaySound(SoundFX soundFX, EmitterChannel src = EmitterChannel.Any, float delay = 0f)
		{
			return default(int);
		}

		[Token(Token = "0x60016C5")]
		[Address(RVA = "0x15462A4", Offset = "0x15462A4", VA = "0x15462A4")]
		public static int PlaySoundAt(UnityEngine.Vector3 position, SoundFX soundFX, EmitterChannel src = EmitterChannel.Any, float delay = 0f, float volumeOverride = 1f, float pitchMultiplier = 1f)
		{
			return default(int);
		}

		[Token(Token = "0x60016C6")]
		[Address(RVA = "0x1546FE8", Offset = "0x1546FE8", VA = "0x1546FE8")]
		public static int PlayRandomSoundAt(UnityEngine.Vector3 position, AudioClip[] clips, float volume, EmitterChannel src = EmitterChannel.Any, float delay = 0f, float pitch = 1f, bool loop = false)
		{
			return default(int);
		}

		[Token(Token = "0x60016C7")]
		[Address(RVA = "0x1545128", Offset = "0x1545128", VA = "0x1545128")]
		public static int PlaySoundAt(UnityEngine.Vector3 position, AudioClip clip, float volume = 1f, EmitterChannel src = EmitterChannel.Any, float delay = 0f, float pitch = 1f, bool loop = false)
		{
			return default(int);
		}

		[Token(Token = "0x60016C8")]
		[Address(RVA = "0x1547108", Offset = "0x1547108", VA = "0x1547108")]
		public static void SetOnFinished(int emitterIdx, Action onFinished)
		{
		}

		[Token(Token = "0x60016C9")]
		[Address(RVA = "0x15471EC", Offset = "0x15471EC", VA = "0x15471EC")]
		public static void SetOnFinished(int emitterIdx, Action<object> onFinished, object obj)
		{
		}

		[Token(Token = "0x60016CA")]
		[Address(RVA = "0x15472DC", Offset = "0x15472DC", VA = "0x15472DC")]
		public static void AttachSoundToParent(int idx, Transform parent)
		{
		}

		[Token(Token = "0x60016CB")]
		[Address(RVA = "0x1547694", Offset = "0x1547694", VA = "0x1547694")]
		public static void DetachSoundFromParent(int idx)
		{
		}

		[Token(Token = "0x60016CC")]
		[Address(RVA = "0x1547890", Offset = "0x1547890", VA = "0x1547890")]
		public static void DetachSoundsFromParent(SoundEmitter[] emitters, bool stopSounds = true)
		{
		}

		[Token(Token = "0x60016CD")]
		[Address(RVA = "0x15479AC", Offset = "0x15479AC", VA = "0x15479AC")]
		public static void SetEmitterMixerGroup(int idx, AudioMixerGroup mixerGroup)
		{
		}

		[Token(Token = "0x60016CE")]
		[Address(RVA = "0x1547B74", Offset = "0x1547B74", VA = "0x1547B74")]
		public static MixerSnapshot GetActiveSnapshot()
		{
			return null;
		}

		[Token(Token = "0x60016CF")]
		[Address(RVA = "0x1547C4C", Offset = "0x1547C4C", VA = "0x1547C4C")]
		public static void SetCurrentSnapshot(MixerSnapshot mixerSnapshot)
		{
		}

		[Token(Token = "0x60016D0")]
		[Address(RVA = "0x1547D80", Offset = "0x1547D80", VA = "0x1547D80")]
		public static void BlendWithCurrentSnapshot(MixerSnapshot blendSnapshot, float weight, float blendTime = 0f)
		{
		}

		[Token(Token = "0x60016D1")]
		[Address(RVA = "0x154816C", Offset = "0x154816C", VA = "0x154816C")]
		public AudioManager()
		{
		}
	}
	[Token(Token = "0x2000341")]
	public enum EmitterChannel
	{
		[Token(Token = "0x4001494")]
		None = -1,
		[Token(Token = "0x4001495")]
		Reserved,
		[Token(Token = "0x4001496")]
		Any
	}
	[Serializable]
	[Token(Token = "0x2000342")]
	public class MixerSnapshot
	{
		[Token(Token = "0x4001497")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AudioMixerSnapshot snapshot;

		[Token(Token = "0x4001498")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float transitionTime;

		[Token(Token = "0x60016D3")]
		[Address(RVA = "0x1548B54", Offset = "0x1548B54", VA = "0x1548B54")]
		public MixerSnapshot()
		{
		}
	}
	[Token(Token = "0x2000343")]
	public class MinMaxAttribute : PropertyAttribute
	{
		[Token(Token = "0x4001499")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float minDefaultVal;

		[Token(Token = "0x400149A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float maxDefaultVal;

		[Token(Token = "0x400149B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float min;

		[Token(Token = "0x400149C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float max;

		[Token(Token = "0x60016D4")]
		[Address(RVA = "0x1548AF8", Offset = "0x1548AF8", VA = "0x1548AF8")]
		public MinMaxAttribute(float minDefaultVal, float maxDefaultVal, float min, float max)
		{
		}
	}
	[Token(Token = "0x2000344")]
	public class SoundEmitter : MonoBehaviour
	{
		[Token(Token = "0x2000842")]
		public enum FadeState
		{
			[Token(Token = "0x40028C3")]
			Null,
			[Token(Token = "0x40028C4")]
			FadingIn,
			[Token(Token = "0x40028C5")]
			FadingOut,
			[Token(Token = "0x40028C6")]
			Ducking
		}

		[Token(Token = "0x2000843")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B8D98", Offset = "0x8B8D98")]
		private sealed class <DelayedSyncTo>d__57 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40028C7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40028C8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40028C9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SoundEmitter <>4__this;

			[Token(Token = "0x40028CA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public SoundEmitter other;

			[Token(Token = "0x40028CB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float fadeTime;

			[Token(Token = "0x40028CC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public float toVolume;

			[Token(Token = "0x17000677")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002F90")]
				[Address(RVA = "0x15495A0", Offset = "0x15495A0", VA = "0x15495A0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000678")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002F92")]
				[Address(RVA = "0x1549608", Offset = "0x1549608", VA = "0x1549608", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002F8D")]
			[Address(RVA = "0x1549280", Offset = "0x1549280", VA = "0x1549280")]
			[DebuggerHidden]
			public <DelayedSyncTo>d__57(int <>1__state)
			{
			}

			[Token(Token = "0x6002F8E")]
			[Address(RVA = "0x15494B0", Offset = "0x15494B0", VA = "0x15494B0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002F8F")]
			[Address(RVA = "0x15494B4", Offset = "0x15494B4", VA = "0x15494B4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002F91")]
			[Address(RVA = "0x15495A8", Offset = "0x15495A8", VA = "0x15495A8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000844")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B8DA8", Offset = "0x8B8DA8")]
		private sealed class <FadeSoundChannelTo>d__63 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40028CD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40028CE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40028CF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SoundEmitter <>4__this;

			[Token(Token = "0x40028D0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float toVolume;

			[Token(Token = "0x40028D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float fadeTime;

			[Token(Token = "0x40028D2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <start>5__2;

			[Token(Token = "0x40028D3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <end>5__3;

			[Token(Token = "0x40028D4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <startTime>5__4;

			[Token(Token = "0x40028D5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <elapsedTime>5__5;

			[Token(Token = "0x17000679")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002F96")]
				[Address(RVA = "0x1549A54", Offset = "0x1549A54", VA = "0x1549A54", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700067A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002F98")]
				[Address(RVA = "0x1549ABC", Offset = "0x1549ABC", VA = "0x1549ABC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002F93")]
			[Address(RVA = "0x1549440", Offset = "0x1549440", VA = "0x1549440")]
			[DebuggerHidden]
			public <FadeSoundChannelTo>d__63(int <>1__state)
			{
			}

			[Token(Token = "0x6002F94")]
			[Address(RVA = "0x15498E8", Offset = "0x15498E8", VA = "0x15498E8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002F95")]
			[Address(RVA = "0x15498EC", Offset = "0x15498EC", VA = "0x15498EC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002F97")]
			[Address(RVA = "0x1549A5C", Offset = "0x1549A5C", VA = "0x1549A5C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000845")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B8DB8", Offset = "0x8B8DB8")]
		private sealed class <FadeSoundChannel>d__64 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40028D6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40028D7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40028D8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float delaySecs;

			[Token(Token = "0x40028D9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public Fade fadeType;

			[Token(Token = "0x40028DA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float defaultVolume;

			[Token(Token = "0x40028DB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public SoundEmitter <>4__this;

			[Token(Token = "0x40028DC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public float fadeTime;

			[Token(Token = "0x40028DD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <start>5__2;

			[Token(Token = "0x40028DE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private float <end>5__3;

			[Token(Token = "0x40028DF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			private bool <restartPlay>5__4;

			[Token(Token = "0x40028E0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private float <startTime>5__5;

			[Token(Token = "0x40028E1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			private float <elapsedTime>5__6;

			[Token(Token = "0x1700067B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002F9C")]
				[Address(RVA = "0x1549878", Offset = "0x1549878", VA = "0x1549878", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700067C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002F9E")]
				[Address(RVA = "0x15498E0", Offset = "0x15498E0", VA = "0x15498E0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002F99")]
			[Address(RVA = "0x154946C", Offset = "0x154946C", VA = "0x154946C")]
			[DebuggerHidden]
			public <FadeSoundChannel>d__64(int <>1__state)
			{
			}

			[Token(Token = "0x6002F9A")]
			[Address(RVA = "0x1549610", Offset = "0x1549610", VA = "0x1549610", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002F9B")]
			[Address(RVA = "0x1549614", Offset = "0x1549614", VA = "0x1549614", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002F9D")]
			[Address(RVA = "0x1549880", Offset = "0x1549880", VA = "0x1549880", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400149D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public EmitterChannel channel;

		[Token(Token = "0x400149E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool disableSpatialization;

		[Token(Token = "0x400149F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private FadeState state;

		[NonSerialized]
		[Token(Token = "0x40014A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public AudioSource audioSource;

		[NonSerialized]
		[Token(Token = "0x40014A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public SoundPriority priority;

		[NonSerialized]
		[Token(Token = "0x40014A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		public ONSPAudioSource osp;

		[NonSerialized]
		[Token(Token = "0x40014A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		public float endPlayTime;

		[Token(Token = "0x40014A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Transform lastParentTransform;

		[NonSerialized]
		[Token(Token = "0x40014A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[HideInInspector]
		public float defaultVolume;

		[NonSerialized]
		[Token(Token = "0x40014A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[HideInInspector]
		public Transform defaultParent;

		[NonSerialized]
		[Token(Token = "0x40014A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[HideInInspector]
		public int originalIdx;

		[NonSerialized]
		[Token(Token = "0x40014A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[HideInInspector]
		public Action onFinished;

		[NonSerialized]
		[Token(Token = "0x40014A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[HideInInspector]
		public Action<object> onFinishedObject;

		[NonSerialized]
		[Token(Token = "0x40014AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[HideInInspector]
		public object onFinishedParam;

		[NonSerialized]
		[Token(Token = "0x40014AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[HideInInspector]
		public SoundGroup playingSoundGroup;

		[Token(Token = "0x17000224")]
		public float volume
		{
			[Token(Token = "0x60016D5")]
			[Address(RVA = "0x1546FCC", Offset = "0x1546FCC", VA = "0x1546FCC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60016D6")]
			[Address(RVA = "0x1548BF4", Offset = "0x1548BF4", VA = "0x1548BF4")]
			set
			{
			}
		}

		[Token(Token = "0x17000225")]
		public float pitch
		{
			[Token(Token = "0x60016D7")]
			[Address(RVA = "0x1548C10", Offset = "0x1548C10", VA = "0x1548C10")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60016D8")]
			[Address(RVA = "0x1548C2C", Offset = "0x1548C2C", VA = "0x1548C2C")]
			set
			{
			}
		}

		[Token(Token = "0x17000226")]
		public AudioClip clip
		{
			[Token(Token = "0x60016D9")]
			[Address(RVA = "0x1548C48", Offset = "0x1548C48", VA = "0x1548C48")]
			get
			{
				return null;
			}
			[Token(Token = "0x60016DA")]
			[Address(RVA = "0x1548C64", Offset = "0x1548C64", VA = "0x1548C64")]
			set
			{
			}
		}

		[Token(Token = "0x17000227")]
		public float time
		{
			[Token(Token = "0x60016DB")]
			[Address(RVA = "0x1548C80", Offset = "0x1548C80", VA = "0x1548C80")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60016DC")]
			[Address(RVA = "0x1544F04", Offset = "0x1544F04", VA = "0x1544F04")]
			set
			{
			}
		}

		[Token(Token = "0x17000228")]
		public float length
		{
			[Token(Token = "0x60016DD")]
			[Address(RVA = "0x1548C9C", Offset = "0x1548C9C", VA = "0x1548C9C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000229")]
		public bool loop
		{
			[Token(Token = "0x60016DE")]
			[Address(RVA = "0x1548D54", Offset = "0x1548D54", VA = "0x1548D54")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60016DF")]
			[Address(RVA = "0x1548D70", Offset = "0x1548D70", VA = "0x1548D70")]
			set
			{
			}
		}

		[Token(Token = "0x1700022A")]
		public bool mute
		{
			[Token(Token = "0x60016E0")]
			[Address(RVA = "0x1548D90", Offset = "0x1548D90", VA = "0x1548D90")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60016E1")]
			[Address(RVA = "0x1548DAC", Offset = "0x1548DAC", VA = "0x1548DAC")]
			set
			{
			}
		}

		[Token(Token = "0x1700022B")]
		public AudioVelocityUpdateMode velocityUpdateMode
		{
			[Token(Token = "0x60016E2")]
			[Address(RVA = "0x1548DCC", Offset = "0x1548DCC", VA = "0x1548DCC")]
			get
			{
				return default(AudioVelocityUpdateMode);
			}
			[Token(Token = "0x60016E3")]
			[Address(RVA = "0x1548DE8", Offset = "0x1548DE8", VA = "0x1548DE8")]
			set
			{
			}
		}

		[Token(Token = "0x1700022C")]
		public bool isPlaying
		{
			[Token(Token = "0x60016E4")]
			[Address(RVA = "0x1548E04", Offset = "0x1548E04", VA = "0x1548E04")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60016E5")]
		[Address(RVA = "0x1548E20", Offset = "0x1548E20", VA = "0x1548E20")]
		private void Awake()
		{
		}

		[Token(Token = "0x60016E6")]
		[Address(RVA = "0x1546FB8", Offset = "0x1546FB8", VA = "0x1546FB8")]
		public void SetPlayingSoundGroup(SoundGroup soundGroup)
		{
		}

		[Token(Token = "0x60016E7")]
		[Address(RVA = "0x154902C", Offset = "0x154902C", VA = "0x154902C")]
		public void SetOnFinished(Action onFinished)
		{
		}

		[Token(Token = "0x60016E8")]
		[Address(RVA = "0x15472D4", Offset = "0x15472D4", VA = "0x15472D4")]
		public void SetOnFinished(Action<object> onFinished, object obj)
		{
		}

		[Token(Token = "0x60016E9")]
		[Address(RVA = "0x1549034", Offset = "0x1549034", VA = "0x1549034")]
		public void SetChannel(int _channel)
		{
		}

		[Token(Token = "0x60016EA")]
		[Address(RVA = "0x154903C", Offset = "0x154903C", VA = "0x154903C")]
		public void SetDefaultParent(Transform parent)
		{
		}

		[Token(Token = "0x60016EB")]
		[Address(RVA = "0x1547ACC", Offset = "0x1547ACC", VA = "0x1547ACC")]
		public void SetAudioMixer(AudioMixerGroup _mixer)
		{
		}

		[Token(Token = "0x60016EC")]
		[Address(RVA = "0x15442E4", Offset = "0x15442E4", VA = "0x15442E4")]
		public bool IsPlaying()
		{
			return default(bool);
		}

		[Token(Token = "0x60016ED")]
		[Address(RVA = "0x1549044", Offset = "0x1549044", VA = "0x1549044")]
		public void Play()
		{
		}

		[Token(Token = "0x60016EE")]
		[Address(RVA = "0x15490A4", Offset = "0x15490A4", VA = "0x15490A4")]
		public void Pause()
		{
		}

		[Token(Token = "0x60016EF")]
		[Address(RVA = "0x1544138", Offset = "0x1544138", VA = "0x1544138")]
		public void Stop()
		{
		}

		[Token(Token = "0x60016F0")]
		[Address(RVA = "0x154916C", Offset = "0x154916C", VA = "0x154916C")]
		private int GetSampleTime()
		{
			return default(int);
		}

		[Token(Token = "0x60016F1")]
		[Address(RVA = "0x1547598", Offset = "0x1547598", VA = "0x1547598")]
		public void ParentTo(Transform parent)
		{
		}

		[Token(Token = "0x60016F2")]
		[Address(RVA = "0x15477D8", Offset = "0x15477D8", VA = "0x15477D8")]
		public void DetachFromParent()
		{
		}

		[Token(Token = "0x60016F3")]
		[Address(RVA = "0x1544688", Offset = "0x1544688", VA = "0x1544688")]
		public void ResetParent(Transform parent)
		{
		}

		[Token(Token = "0x60016F4")]
		[Address(RVA = "0x15491C4", Offset = "0x15491C4", VA = "0x15491C4")]
		public void SyncTo(SoundEmitter other, float fadeTime, float toVolume)
		{
		}

		[Token(Token = "0x60016F5")]
		[Address(RVA = "0x15491F0", Offset = "0x15491F0", VA = "0x15491F0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8CA148", Offset = "0x8CA148")]
		private IEnumerator DelayedSyncTo(SoundEmitter other, float fadeTime, float toVolume)
		{
			return null;
		}

		[Token(Token = "0x60016F6")]
		[Address(RVA = "0x15492AC", Offset = "0x15492AC", VA = "0x15492AC")]
		public void FadeTo(float fadeTime, float toVolume)
		{
		}

		[Token(Token = "0x60016F7")]
		[Address(RVA = "0x1544A84", Offset = "0x1544A84", VA = "0x1544A84")]
		public void FadeIn(float fadeTime, float defaultVolume)
		{
		}

		[Token(Token = "0x60016F8")]
		[Address(RVA = "0x1544B00", Offset = "0x1544B00", VA = "0x1544B00")]
		public void FadeIn(float fadeTime)
		{
		}

		[Token(Token = "0x60016F9")]
		[Address(RVA = "0x1544934", Offset = "0x1544934", VA = "0x1544934")]
		public void FadeOut(float fadeTime)
		{
		}

		[Token(Token = "0x60016FA")]
		[Address(RVA = "0x1544780", Offset = "0x1544780", VA = "0x1544780")]
		public void FadeOutDelayed(float delayedSecs, float fadeTime)
		{
		}

		[Token(Token = "0x60016FB")]
		[Address(RVA = "0x1549314", Offset = "0x1549314", VA = "0x1549314")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8CA1AC", Offset = "0x8CA1AC")]
		private IEnumerator FadeSoundChannelTo(float fadeTime, float toVolume)
		{
			return null;
		}

		[Token(Token = "0x60016FC")]
		[Address(RVA = "0x1549398", Offset = "0x1549398", VA = "0x1549398")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8CA210", Offset = "0x8CA210")]
		private IEnumerator FadeSoundChannel(float delaySecs, float fadeTime, Fade fadeType, float defaultVolume)
		{
			return null;
		}

		[Token(Token = "0x60016FD")]
		[Address(RVA = "0x1549498", Offset = "0x1549498", VA = "0x1549498")]
		public SoundEmitter()
		{
		}
	}
	[Token(Token = "0x2000345")]
	public enum SoundFXNext
	{
		[Token(Token = "0x40014AD")]
		Random,
		[Token(Token = "0x40014AE")]
		Sequential
	}
	[Token(Token = "0x2000346")]
	public enum FreqHint
	{
		[Token(Token = "0x40014B0")]
		None,
		[Token(Token = "0x40014B1")]
		Wide,
		[Token(Token = "0x40014B2")]
		Narrow
	}
	[Token(Token = "0x2000347")]
	public enum SoundPriority
	{
		[Token(Token = "0x40014B4")]
		VeryLow = -2,
		[Token(Token = "0x40014B5")]
		Low,
		[Token(Token = "0x40014B6")]
		Default,
		[Token(Token = "0x40014B7")]
		High,
		[Token(Token = "0x40014B8")]
		VeryHigh
	}
	[Serializable]
	[Token(Token = "0x2000348")]
	public class OSPProps
	{
		[Token(Token = "0x40014B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BE34C", Offset = "0x8BE34C")]
		public bool enableSpatialization;

		[Token(Token = "0x40014BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BE384", Offset = "0x8BE384")]
		public bool useFastOverride;

		[Token(Token = "0x40014BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BE3BC", Offset = "0x8BE3BC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8BE3BC", Offset = "0x8BE3BC")]
		public float gain;

		[Token(Token = "0x40014BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BE410", Offset = "0x8BE410")]
		public bool enableInvSquare;

		[Token(Token = "0x40014BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BE448", Offset = "0x8BE448")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8BE448", Offset = "0x8BE448")]
		public float volumetric;

		[Token(Token = "0x40014BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BE4A0", Offset = "0x8BE4A0")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x8BE4A0", Offset = "0x8BE4A0")]
		public UnityEngine.Vector2 invSquareFalloff;

		[Token(Token = "0x60016FE")]
		[Address(RVA = "0x1548B64", Offset = "0x1548B64", VA = "0x1548B64")]
		public OSPProps()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000349")]
	public class SoundFX
	{
		[Token(Token = "0x40014BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BE500", Offset = "0x8BE500")]
		public string name;

		[Token(Token = "0x40014C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BE538", Offset = "0x8BE538")]
		public SoundFXNext playback;

		[Token(Token = "0x40014C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BE570", Offset = "0x8BE570")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8BE570", Offset = "0x8BE570")]
		public float volume;

		[Token(Token = "0x40014C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BE5C4", Offset = "0x8BE5C4")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x8BE5C4", Offset = "0x8BE5C4")]
		public UnityEngine.Vector2 pitchVariance;

		[Token(Token = "0x40014C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BE620", Offset = "0x8BE620")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x8BE620", Offset = "0x8BE620")]
		public UnityEngine.Vector2 falloffDistance;

		[Token(Token = "0x40014C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BE680", Offset = "0x8BE680")]
		public AudioRolloffMode falloffCurve;

		[Token(Token = "0x40014C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BE6B8", Offset = "0x8BE6B8")]
		public AnimationCurve volumeFalloffCurve;

		[Token(Token = "0x40014C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BE6F0", Offset = "0x8BE6F0")]
		public AnimationCurve reverbZoneMix;

		[Token(Token = "0x40014C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BE728", Offset = "0x8BE728")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8BE728", Offset = "0x8BE728")]
		public float spread;

		[Token(Token = "0x40014C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BE780", Offset = "0x8BE780")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8BE780", Offset = "0x8BE780")]
		public float pctChanceToPlay;

		[Token(Token = "0x40014C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BE7D4", Offset = "0x8BE7D4")]
		public SoundPriority priority;

		[Token(Token = "0x40014CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BE80C", Offset = "0x8BE80C")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x8BE80C", Offset = "0x8BE80C")]
		public UnityEngine.Vector2 delay;

		[Token(Token = "0x40014CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BE868", Offset = "0x8BE868")]
		public bool looping;

		[Token(Token = "0x40014CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public OSPProps ospProps;

		[Token(Token = "0x40014CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BE8A0", Offset = "0x8BE8A0")]
		public AudioClip[] soundClips;

		[Token(Token = "0x40014CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public bool visibilityToggle;

		[NonSerialized]
		[Token(Token = "0x40014CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private SoundGroup soundGroup;

		[Token(Token = "0x40014D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int lastIdx;

		[Token(Token = "0x40014D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private int playingIdx;

		[Token(Token = "0x1700022D")]
		public int Length
		{
			[Token(Token = "0x6001700")]
			[Address(RVA = "0x1549AC4", Offset = "0x1549AC4", VA = "0x1549AC4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700022E")]
		public bool IsValid
		{
			[Token(Token = "0x6001701")]
			[Address(RVA = "0x1549AE0", Offset = "0x1549AE0", VA = "0x1549AE0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700022F")]
		public SoundGroup Group
		{
			[Token(Token = "0x6001702")]
			[Address(RVA = "0x1549B84", Offset = "0x1549B84", VA = "0x1549B84")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001703")]
			[Address(RVA = "0x1549B8C", Offset = "0x1549B8C", VA = "0x1549B8C")]
			set
			{
			}
		}

		[Token(Token = "0x17000230")]
		public float MaxFalloffDistSquared
		{
			[Token(Token = "0x6001704")]
			[Address(RVA = "0x1546EC0", Offset = "0x1546EC0", VA = "0x1546EC0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000231")]
		public float GroupVolumeOverride
		{
			[Token(Token = "0x6001705")]
			[Address(RVA = "0x1546EF4", Offset = "0x1546EF4", VA = "0x1546EF4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x60016FF")]
		[Address(RVA = "0x1548474", Offset = "0x1548474", VA = "0x1548474")]
		public SoundFX()
		{
		}

		[Token(Token = "0x6001706")]
		[Address(RVA = "0x1546DF0", Offset = "0x1546DF0", VA = "0x1546DF0")]
		public AudioClip GetClip()
		{
			return null;
		}

		[Token(Token = "0x6001707")]
		[Address(RVA = "0x1546F18", Offset = "0x1546F18", VA = "0x1546F18")]
		public AudioMixerGroup GetMixerGroup(AudioMixerGroup defaultMixerGroup)
		{
			return null;
		}

		[Token(Token = "0x6001708")]
		[Address(RVA = "0x1546ECC", Offset = "0x1546ECC", VA = "0x1546ECC")]
		public bool ReachedGroupPlayLimit()
		{
			return default(bool);
		}

		[Token(Token = "0x6001709")]
		[Address(RVA = "0x1549BB4", Offset = "0x1549BB4", VA = "0x1549BB4")]
		public float GetClipLength(int idx)
		{
			return default(float);
		}

		[Token(Token = "0x600170A")]
		[Address(RVA = "0x1546F0C", Offset = "0x1546F0C", VA = "0x1546F0C")]
		public float GetPitch()
		{
			return default(float);
		}

		[Token(Token = "0x600170B")]
		[Address(RVA = "0x1549CB0", Offset = "0x1549CB0", VA = "0x1549CB0")]
		public int PlaySound(float delaySecs = 0f)
		{
			return default(int);
		}

		[Token(Token = "0x600170C")]
		[Address(RVA = "0x1549D8C", Offset = "0x1549D8C", VA = "0x1549D8C")]
		public int PlaySoundAt(UnityEngine.Vector3 pos, float delaySecs = 0f, float volumeOverride = 1f, float pitchMultiplier = 1f)
		{
			return default(int);
		}

		[Token(Token = "0x600170D")]
		[Address(RVA = "0x1549EA0", Offset = "0x1549EA0", VA = "0x1549EA0")]
		public void SetOnFinished(Action onFinished)
		{
		}

		[Token(Token = "0x600170E")]
		[Address(RVA = "0x1549F2C", Offset = "0x1549F2C", VA = "0x1549F2C")]
		public void SetOnFinished(Action<object> onFinished, object obj)
		{
		}

		[Token(Token = "0x600170F")]
		[Address(RVA = "0x1549FC0", Offset = "0x1549FC0", VA = "0x1549FC0")]
		public bool StopSound()
		{
			return default(bool);
		}

		[Token(Token = "0x6001710")]
		[Address(RVA = "0x154A04C", Offset = "0x154A04C", VA = "0x154A04C")]
		public void AttachToParent(Transform parent)
		{
		}

		[Token(Token = "0x6001711")]
		[Address(RVA = "0x154A0D8", Offset = "0x154A0D8", VA = "0x154A0D8")]
		public void DetachFromParent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200034A")]
	public class SoundFXRef
	{
		[Token(Token = "0x40014D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string soundFXName;

		[Token(Token = "0x40014D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool initialized;

		[Token(Token = "0x40014D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private SoundFX soundFXCached;

		[Token(Token = "0x17000232")]
		public SoundFX soundFX
		{
			[Token(Token = "0x6001712")]
			[Address(RVA = "0x154A150", Offset = "0x154A150", VA = "0x154A150")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000233")]
		public string name
		{
			[Token(Token = "0x6001713")]
			[Address(RVA = "0x154A244", Offset = "0x154A244", VA = "0x154A244")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001714")]
			[Address(RVA = "0x154A24C", Offset = "0x154A24C", VA = "0x154A24C")]
			set
			{
			}
		}

		[Token(Token = "0x17000234")]
		public int Length
		{
			[Token(Token = "0x6001716")]
			[Address(RVA = "0x154A254", Offset = "0x154A254", VA = "0x154A254")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000235")]
		public bool IsValid
		{
			[Token(Token = "0x6001717")]
			[Address(RVA = "0x154A298", Offset = "0x154A298", VA = "0x154A298")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001715")]
		[Address(RVA = "0x154A180", Offset = "0x154A180", VA = "0x154A180")]
		private void Init()
		{
		}

		[Token(Token = "0x6001718")]
		[Address(RVA = "0x154A2D0", Offset = "0x154A2D0", VA = "0x154A2D0")]
		public AudioClip GetClip()
		{
			return null;
		}

		[Token(Token = "0x6001719")]
		[Address(RVA = "0x154A308", Offset = "0x154A308", VA = "0x154A308")]
		public float GetClipLength(int idx)
		{
			return default(float);
		}

		[Token(Token = "0x600171A")]
		[Address(RVA = "0x154A348", Offset = "0x154A348", VA = "0x154A348")]
		public int PlaySound(float delaySecs = 0f)
		{
			return default(int);
		}

		[Token(Token = "0x600171B")]
		[Address(RVA = "0x1541D04", Offset = "0x1541D04", VA = "0x1541D04")]
		public int PlaySoundAt(UnityEngine.Vector3 pos, float delaySecs = 0f, float volume = 1f, float pitchMultiplier = 1f)
		{
			return default(int);
		}

		[Token(Token = "0x600171C")]
		[Address(RVA = "0x154A390", Offset = "0x154A390", VA = "0x154A390")]
		public void SetOnFinished(Action onFinished)
		{
		}

		[Token(Token = "0x600171D")]
		[Address(RVA = "0x154A3D0", Offset = "0x154A3D0", VA = "0x154A3D0")]
		public void SetOnFinished(Action<object> onFinished, object obj)
		{
		}

		[Token(Token = "0x600171E")]
		[Address(RVA = "0x154A420", Offset = "0x154A420", VA = "0x154A420")]
		public bool StopSound()
		{
			return default(bool);
		}

		[Token(Token = "0x600171F")]
		[Address(RVA = "0x154A458", Offset = "0x154A458", VA = "0x154A458")]
		public void AttachToParent(Transform parent)
		{
		}

		[Token(Token = "0x6001720")]
		[Address(RVA = "0x154A498", Offset = "0x154A498", VA = "0x154A498")]
		public void DetachFromParent()
		{
		}

		[Token(Token = "0x6001721")]
		[Address(RVA = "0x154A4D0", Offset = "0x154A4D0", VA = "0x154A4D0")]
		public SoundFXRef()
		{
		}
	}
}
namespace Eppy
{
	[Token(Token = "0x200034B")]
	public sealed class Tuple<T1, T2>
	{
		[Token(Token = "0x40014D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly T1 item1;

		[Token(Token = "0x40014D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly T2 item2;

		[Token(Token = "0x17000236")]
		public T1 Item1
		{
			[Token(Token = "0x6001722")]
			get
			{
				return (T1)null;
			}
		}

		[Token(Token = "0x17000237")]
		public T2 Item2
		{
			[Token(Token = "0x6001723")]
			get
			{
				return (T2)null;
			}
		}

		[Token(Token = "0x6001724")]
		public Tuple(T1 item1, T2 item2)
		{
		}

		[Token(Token = "0x6001725")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6001726")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x6001727")]
		public override bool Equals(object o)
		{
			return default(bool);
		}

		[Token(Token = "0x6001728")]
		public bool Equals(Tuple<T1, T2> other)
		{
			return default(bool);
		}

		[Token(Token = "0x6001729")]
		public static bool operator ==(Tuple<T1, T2> a, Tuple<T1, T2> b)
		{
			return default(bool);
		}

		[Token(Token = "0x600172A")]
		public static bool operator !=(Tuple<T1, T2> a, Tuple<T1, T2> b)
		{
			return default(bool);
		}

		[Token(Token = "0x600172B")]
		public void Unpack(Action<T1, T2> unpackerDelegate)
		{
		}
	}
}
namespace SharpNav
{
	[Serializable]
	[Token(Token = "0x200034C")]
	public struct Area : IEquatable<Area>, IEquatable<byte>
	{
		[Token(Token = "0x40014D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly Area Null;

		[Token(Token = "0x40014D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		public static readonly Area Default;

		[Token(Token = "0x40014D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public readonly byte Id;

		[Token(Token = "0x17000238")]
		public bool IsWalkable
		{
			[Token(Token = "0x600172D")]
			[Address(RVA = "0x978578", Offset = "0x978578", VA = "0x978578")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600172C")]
		[Address(RVA = "0x978570", Offset = "0x978570", VA = "0x978570")]
		public Area(byte id)
		{
		}

		[Token(Token = "0x600172E")]
		[Address(RVA = "0xC21CC0", Offset = "0xC21CC0", VA = "0xC21CC0")]
		public static implicit operator Area(byte value)
		{
			return default(Area);
		}

		[Token(Token = "0x600172F")]
		[Address(RVA = "0xC21CC8", Offset = "0xC21CC8", VA = "0xC21CC8")]
		public static bool operator ==(Area left, Area right)
		{
			return default(bool);
		}

		[Token(Token = "0x6001730")]
		[Address(RVA = "0xC21CE8", Offset = "0xC21CE8", VA = "0xC21CE8")]
		public static bool operator !=(Area left, Area right)
		{
			return default(bool);
		}

		[Token(Token = "0x6001731")]
		[Address(RVA = "0x978588", Offset = "0x978588", VA = "0x978588", Slot = "4")]
		public bool Equals(Area other)
		{
			return default(bool);
		}

		[Token(Token = "0x6001732")]
		[Address(RVA = "0x978598", Offset = "0x978598", VA = "0x978598", Slot = "5")]
		public bool Equals(byte other)
		{
			return default(bool);
		}

		[Token(Token = "0x6001733")]
		[Address(RVA = "0x9785A8", Offset = "0x9785A8", VA = "0x9785A8", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6001734")]
		[Address(RVA = "0x9785B0", Offset = "0x9785B0", VA = "0x9785B0", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x6001735")]
		[Address(RVA = "0x9785DC", Offset = "0x9785DC", VA = "0x9785DC", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x200034D")]
	public class AreaGenerator
	{
		[Token(Token = "0x2000846")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B8DC8", Offset = "0x8B8DC8")]
		private sealed class <>c__DisplayClass18_0
		{
			[Token(Token = "0x40028E2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float angle;

			[Token(Token = "0x6002F9F")]
			[Address(RVA = "0xC22E5C", Offset = "0xC22E5C", VA = "0xC22E5C")]
			public <>c__DisplayClass18_0()
			{
			}

			[Token(Token = "0x6002FA0")]
			[Address(RVA = "0xC233C4", Offset = "0xC233C4", VA = "0xC233C4")]
			internal bool <MarkAboveSlope>b__0(Triangle3 tri)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000847")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B8DD8", Offset = "0x8B8DD8")]
		private sealed class <>c__DisplayClass19_0
		{
			[Token(Token = "0x40028E3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float angle;

			[Token(Token = "0x6002FA1")]
			[Address(RVA = "0xC22F70", Offset = "0xC22F70", VA = "0xC22F70")]
			public <>c__DisplayClass19_0()
			{
			}

			[Token(Token = "0x6002FA2")]
			[Address(RVA = "0xC23420", Offset = "0xC23420", VA = "0xC23420")]
			internal bool <MarkBelowSlope>b__0(Triangle3 tri)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000848")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B8DE8", Offset = "0x8B8DE8")]
		private sealed class <>c__DisplayClass20_0
		{
			[Token(Token = "0x40028E4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float angle;

			[Token(Token = "0x40028E5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float range;

			[Token(Token = "0x6002FA3")]
			[Address(RVA = "0xC23088", Offset = "0xC23088", VA = "0xC23088")]
			public <>c__DisplayClass20_0()
			{
			}

			[Token(Token = "0x6002FA4")]
			[Address(RVA = "0xC2347C", Offset = "0xC2347C", VA = "0xC2347C")]
			internal bool <MarkAtSlope>b__0(Triangle3 tri)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000849")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B8DF8", Offset = "0x8B8DF8")]
		private sealed class <>c__DisplayClass21_0
		{
			[Token(Token = "0x40028E6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float y;

			[Token(Token = "0x6002FA5")]
			[Address(RVA = "0xC2319C", Offset = "0xC2319C", VA = "0xC2319C")]
			public <>c__DisplayClass21_0()
			{
			}

			[Token(Token = "0x6002FA6")]
			[Address(RVA = "0xC234EC", Offset = "0xC234EC", VA = "0xC234EC")]
			internal bool <MarkBelowHeight>b__0(Triangle3 tri)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x200084A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B8E08", Offset = "0x8B8E08")]
		private sealed class <>c__DisplayClass23_0
		{
			[Token(Token = "0x40028E7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float y;

			[Token(Token = "0x6002FA7")]
			[Address(RVA = "0xC23310", Offset = "0xC23310", VA = "0xC23310")]
			public <>c__DisplayClass23_0()
			{
			}

			[Token(Token = "0x6002FA8")]
			[Address(RVA = "0xC23520", Offset = "0xC23520", VA = "0xC23520")]
			internal bool <MarkAboveHeight>b__0(Triangle3 tri)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x40014DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IEnumerable<Triangle3> tris;

		[Token(Token = "0x40014DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int triCount;

		[Token(Token = "0x40014DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<Eppy.Tuple<Func<Triangle3, bool>, Area>> conditions;

		[Token(Token = "0x40014DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Area defaultArea;

		[Token(Token = "0x6001737")]
		[Address(RVA = "0xC21FC0", Offset = "0xC21FC0", VA = "0xC21FC0")]
		private AreaGenerator(IEnumerable<Triangle3> verts, int triCount, Area defaultArea)
		{
		}

		[Token(Token = "0x6001738")]
		[Address(RVA = "0xC2205C", Offset = "0xC2205C", VA = "0xC2205C")]
		public static AreaGenerator From(IEnumerable<Triangle3> tris, Area area)
		{
			return null;
		}

		[Token(Token = "0x6001739")]
		[Address(RVA = "0xC220EC", Offset = "0xC220EC", VA = "0xC220EC")]
		public static AreaGenerator From(IEnumerable<Triangle3> tris, int triCount, Area area)
		{
			return null;
		}

		[Token(Token = "0x600173A")]
		[Address(RVA = "0xC22164", Offset = "0xC22164", VA = "0xC22164")]
		public static AreaGenerator From(Triangle3[] tris, Area area)
		{
			return null;
		}

		[Token(Token = "0x600173B")]
		[Address(RVA = "0xC221FC", Offset = "0xC221FC", VA = "0xC221FC")]
		public static AreaGenerator From(Triangle3[] tris, int triOffset, int triCount, Area area)
		{
			return null;
		}

		[Token(Token = "0x600173C")]
		[Address(RVA = "0xC2229C", Offset = "0xC2229C", VA = "0xC2229C")]
		public static AreaGenerator From(SharpNav.Geometry.Vector3[] verts, Area area)
		{
			return null;
		}

		[Token(Token = "0x600173D")]
		[Address(RVA = "0xC22368", Offset = "0xC22368", VA = "0xC22368")]
		public static AreaGenerator From(SharpNav.Geometry.Vector3[] verts, int vertOffset, int vertStride, int triCount, Area area)
		{
			return null;
		}

		[Token(Token = "0x600173E")]
		[Address(RVA = "0xC22410", Offset = "0xC22410", VA = "0xC22410")]
		public static AreaGenerator From(float[] verts, Area area)
		{
			return null;
		}

		[Token(Token = "0x600173F")]
		[Address(RVA = "0xC224DC", Offset = "0xC224DC", VA = "0xC224DC")]
		public static AreaGenerator From(float[] verts, int floatOffset, int floatStride, int triCount, Area area)
		{
			return null;
		}

		[Token(Token = "0x6001740")]
		[Address(RVA = "0xC22584", Offset = "0xC22584", VA = "0xC22584")]
		public static AreaGenerator From(SharpNav.Geometry.Vector3[] verts, int[] inds, Area area)
		{
			return null;
		}

		[Token(Token = "0x6001741")]
		[Address(RVA = "0xC2265C", Offset = "0xC2265C", VA = "0xC2265C")]
		public static AreaGenerator From(SharpNav.Geometry.Vector3[] verts, int[] inds, int vertOffset, int vertStride, int indexOffset, int triCount, Area area)
		{
			return null;
		}

		[Token(Token = "0x6001742")]
		[Address(RVA = "0xC2271C", Offset = "0xC2271C", VA = "0xC2271C")]
		public static AreaGenerator From(float[] verts, int[] inds, Area area)
		{
			return null;
		}

		[Token(Token = "0x6001743")]
		[Address(RVA = "0xC227F4", Offset = "0xC227F4", VA = "0xC227F4")]
		public static AreaGenerator From(float[] verts, int[] inds, int floatOffset, int floatStride, int indexOffset, int triCount, Area area)
		{
			return null;
		}

		[Token(Token = "0x6001744")]
		[Address(RVA = "0xC228B4", Offset = "0xC228B4", VA = "0xC228B4")]
		public Area[] ToArray()
		{
			return null;
		}

		[Token(Token = "0x6001745")]
		[Address(RVA = "0xC22D50", Offset = "0xC22D50", VA = "0xC22D50")]
		public AreaGenerator MarkAboveSlope(float angle, Area area)
		{
			return null;
		}

		[Token(Token = "0x6001746")]
		[Address(RVA = "0xC22E64", Offset = "0xC22E64", VA = "0xC22E64")]
		public AreaGenerator MarkBelowSlope(float angle, Area area)
		{
			return null;
		}

		[Token(Token = "0x6001747")]
		[Address(RVA = "0xC22F78", Offset = "0xC22F78", VA = "0xC22F78")]
		public AreaGenerator MarkAtSlope(float angle, float range, Area area)
		{
			return null;
		}

		[Token(Token = "0x6001748")]
		[Address(RVA = "0xC23090", Offset = "0xC23090", VA = "0xC23090")]
		public AreaGenerator MarkBelowHeight(float y, Area area)
		{
			return null;
		}

		[Token(Token = "0x6001749")]
		[Address(RVA = "0xC231A4", Offset = "0xC231A4", VA = "0xC231A4")]
		public AreaGenerator MarkAtHeight(float y, float radius, Area area)
		{
			return null;
		}

		[Token(Token = "0x600174A")]
		[Address(RVA = "0xC23204", Offset = "0xC23204", VA = "0xC23204")]
		public AreaGenerator MarkAboveHeight(float y, Area area)
		{
			return null;
		}

		[Token(Token = "0x600174B")]
		[Address(RVA = "0xC23318", Offset = "0xC23318", VA = "0xC23318")]
		public AreaGenerator MarkCustomFilter(Func<Triangle3, bool> func, Area area)
		{
			return null;
		}
	}
	[Token(Token = "0x200034E")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x8B6D20", Offset = "0x8B6D20")]
	public class Cell
	{
		[Token(Token = "0x40014DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private List<Span> spans;

		[Token(Token = "0x40014DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int height;

		[Token(Token = "0x17000239")]
		public int Height
		{
			[Token(Token = "0x600174D")]
			[Address(RVA = "0xC235D8", Offset = "0xC235D8", VA = "0xC235D8")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700023A")]
		public int SpanCount
		{
			[Token(Token = "0x600174E")]
			[Address(RVA = "0xC235E0", Offset = "0xC235E0", VA = "0xC235E0")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700023B")]
		public int WalkableSpanCount
		{
			[Token(Token = "0x600174F")]
			[Address(RVA = "0xC23630", Offset = "0xC23630", VA = "0xC23630")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700023C")]
		public ReadOnlyCollection<Span> Spans
		{
			[Token(Token = "0x6001750")]
			[Address(RVA = "0xC236E4", Offset = "0xC236E4", VA = "0xC236E4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700023D")]
		internal List<Span> MutableSpans
		{
			[Token(Token = "0x6001751")]
			[Address(RVA = "0xC2373C", Offset = "0xC2373C", VA = "0xC2373C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700023E")]
		public Span? Item
		{
			[Token(Token = "0x6001752")]
			[Address(RVA = "0xC23744", Offset = "0xC23744", VA = "0xC23744")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600174C")]
		[Address(RVA = "0xC23554", Offset = "0xC23554", VA = "0xC23554")]
		public Cell(int height)
		{
		}

		[Token(Token = "0x6001753")]
		[Address(RVA = "0xC23920", Offset = "0xC23920", VA = "0xC23920")]
		public void AddSpan(Span span)
		{
		}
	}
	[Token(Token = "0x200034F")]
	public struct CompactCell
	{
		[Token(Token = "0x40014E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int StartIndex;

		[Token(Token = "0x40014E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int Count;

		[Token(Token = "0x6001754")]
		[Address(RVA = "0x9785E4", Offset = "0x9785E4", VA = "0x9785E4")]
		public CompactCell(int start, int count)
		{
		}
	}
	[Token(Token = "0x2000350")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x8B6D58", Offset = "0x8B6D58")]
	public class CompactHeightfield
	{
		[Token(Token = "0x200084B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B8E18", Offset = "0x8B8E18")]
		private sealed class <get_Item>d__42 : IEnumerable<CompactSpan>, IEnumerable, IEnumerator<CompactSpan>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40028E8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40028E9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private CompactSpan <>2__current;

			[Token(Token = "0x40028EA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			private int <>l__initialThreadId;

			[Token(Token = "0x40028EB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int x;

			[Token(Token = "0x40028EC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public int <>3__x;

			[Token(Token = "0x40028ED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public CompactHeightfield <>4__this;

			[Token(Token = "0x40028EE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private int y;

			[Token(Token = "0x40028EF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public int <>3__y;

			[Token(Token = "0x40028F0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private int <end>5__2;

			[Token(Token = "0x40028F1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			private int <i>5__3;

			[Token(Token = "0x1700067D")]
			private CompactSpan System.Collections.Generic.IEnumerator<SharpNav.CompactSpan>.Current
			{
				[Token(Token = "0x6002FAC")]
				[Address(RVA = "0x162ADE0", Offset = "0x162ADE0", VA = "0x162ADE0", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return default(CompactSpan);
				}
			}

			[Token(Token = "0x1700067E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002FAE")]
				[Address(RVA = "0x162AE50", Offset = "0x162AE50", VA = "0x162AE50", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002FA9")]
			[Address(RVA = "0x162AC60", Offset = "0x162AC60", VA = "0x162AC60")]
			[DebuggerHidden]
			public <get_Item>d__42(int <>1__state)
			{
			}

			[Token(Token = "0x6002FAA")]
			[Address(RVA = "0x162AC98", Offset = "0x162AC98", VA = "0x162AC98", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002FAB")]
			[Address(RVA = "0x162AC9C", Offset = "0x162AC9C", VA = "0x162AC9C", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002FAD")]
			[Address(RVA = "0x162ADF0", Offset = "0x162ADF0", VA = "0x162ADF0", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6002FAF")]
			[Address(RVA = "0x162AEB8", Offset = "0x162AEB8", VA = "0x162AEB8", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<CompactSpan> System.Collections.Generic.IEnumerable<SharpNav.CompactSpan>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6002FB0")]
			[Address(RVA = "0x162AF74", Offset = "0x162AF74", VA = "0x162AF74", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x200084C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B8E28", Offset = "0x8B8E28")]
		private sealed class <get_Item>d__44 : IEnumerable<CompactSpan>, IEnumerable, IEnumerator<CompactSpan>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40028F2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40028F3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private CompactSpan <>2__current;

			[Token(Token = "0x40028F4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			private int <>l__initialThreadId;

			[Token(Token = "0x40028F5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public CompactHeightfield <>4__this;

			[Token(Token = "0x40028F6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int i;

			[Token(Token = "0x40028F7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public int <>3__i;

			[Token(Token = "0x40028F8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private int <end>5__2;

			[Token(Token = "0x40028F9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private int <j>5__3;

			[Token(Token = "0x1700067F")]
			private CompactSpan System.Collections.Generic.IEnumerator<SharpNav.CompactSpan>.Current
			{
				[Token(Token = "0x6002FB4")]
				[Address(RVA = "0x162B074", Offset = "0x162B074", VA = "0x162B074", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return default(CompactSpan);
				}
			}

			[Token(Token = "0x17000680")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002FB6")]
				[Address(RVA = "0x162B0E4", Offset = "0x162B0E4", VA = "0x162B0E4", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002FB1")]
			[Address(RVA = "0x162AF78", Offset = "0x162AF78", VA = "0x162AF78")]
			[DebuggerHidden]
			public <get_Item>d__44(int <>1__state)
			{
			}

			[Token(Token = "0x6002FB2")]
			[Address(RVA = "0x162AFB0", Offset = "0x162AFB0", VA = "0x162AFB0", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002FB3")]
			[Address(RVA = "0x162AFB4", Offset = "0x162AFB4", VA = "0x162AFB4", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002FB5")]
			[Address(RVA = "0x162B084", Offset = "0x162B084", VA = "0x162B084", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6002FB7")]
			[Address(RVA = "0x162B14C", Offset = "0x162B14C", VA = "0x162B14C", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<CompactSpan> System.Collections.Generic.IEnumerable<SharpNav.CompactSpan>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6002FB8")]
			[Address(RVA = "0x162B200", Offset = "0x162B200", VA = "0x162B200", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x40014E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private BBox3 bounds;

		[Token(Token = "0x40014E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int width;

		[Token(Token = "0x40014E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int height;

		[Token(Token = "0x40014E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int length;

		[Token(Token = "0x40014E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float cellSize;

		[Token(Token = "0x40014E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float cellHeight;

		[Token(Token = "0x40014E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private CompactCell[] cells;

		[Token(Token = "0x40014E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private CompactSpan[] spans;

		[Token(Token = "0x40014EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Area[] areas;

		[Token(Token = "0x40014EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int[] distances;

		[Token(Token = "0x40014EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private int maxDistance;

		[Token(Token = "0x40014ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private int maxRegions;

		[Token(Token = "0x40014EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private int borderSize;

		[Token(Token = "0x1700023F")]
		public int Width
		{
			[Token(Token = "0x6001757")]
			[Address(RVA = "0xC249F8", Offset = "0xC249F8", VA = "0xC249F8")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000240")]
		public int Height
		{
			[Token(Token = "0x6001758")]
			[Address(RVA = "0xC24A00", Offset = "0xC24A00", VA = "0xC24A00")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000241")]
		public int Length
		{
			[Token(Token = "0x6001759")]
			[Address(RVA = "0xC24A08", Offset = "0xC24A08", VA = "0xC24A08")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000242")]
		public BBox3 Bounds
		{
			[Token(Token = "0x600175A")]
			[Address(RVA = "0xC24A10", Offset = "0xC24A10", VA = "0xC24A10")]
			get
			{
				return default(BBox3);
			}
		}

		[Token(Token = "0x17000243")]
		public float CellSize
		{
			[Token(Token = "0x600175B")]
			[Address(RVA = "0xC24A24", Offset = "0xC24A24", VA = "0xC24A24")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000244")]
		public float CellHeight
		{
			[Token(Token = "0x600175C")]
			[Address(RVA = "0xC24A2C", Offset = "0xC24A2C", VA = "0xC24A2C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000245")]
		public int MaxDistance
		{
			[Token(Token = "0x600175D")]
			[Address(RVA = "0xC24A34", Offset = "0xC24A34", VA = "0xC24A34")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000246")]
		public int[] Distances
		{
			[Token(Token = "0x600175E")]
			[Address(RVA = "0xC24A3C", Offset = "0xC24A3C", VA = "0xC24A3C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000247")]
		public int BorderSize
		{
			[Token(Token = "0x600175F")]
			[Address(RVA = "0xC24A44", Offset = "0xC24A44", VA = "0xC24A44")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000248")]
		public int MaxRegions
		{
			[Token(Token = "0x6001760")]
			[Address(RVA = "0xC24A4C", Offset = "0xC24A4C", VA = "0xC24A4C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000249")]
		public CompactCell[] Cells
		{
			[Token(Token = "0x6001761")]
			[Address(RVA = "0xC24A54", Offset = "0xC24A54", VA = "0xC24A54")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700024A")]
		public CompactSpan[] Spans
		{
			[Token(Token = "0x6001762")]
			[Address(RVA = "0xC24A5C", Offset = "0xC24A5C", VA = "0xC24A5C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700024B")]
		public Area[] Areas
		{
			[Token(Token = "0x6001763")]
			[Address(RVA = "0xC24A64", Offset = "0xC24A64", VA = "0xC24A64")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700024C")]
		public IEnumerable<CompactSpan> Item
		{
			[Token(Token = "0x6001764")]
			[Address(RVA = "0xC24A6C", Offset = "0xC24A6C", VA = "0xC24A6C")]
			[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8CA274", Offset = "0x8CA274")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700024D")]
		public IEnumerable<CompactSpan> Item
		{
			[Token(Token = "0x6001765")]
			[Address(RVA = "0xC24AF4", Offset = "0xC24AF4", VA = "0xC24AF4")]
			[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8CA2D8", Offset = "0x8CA2D8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700024E")]
		public CompactSpan Item
		{
			[Token(Token = "0x6001766")]
			[Address(RVA = "0xC24B74", Offset = "0xC24B74", VA = "0xC24B74")]
			get
			{
				return default(CompactSpan);
			}
		}

		[Token(Token = "0x6001755")]
		[Address(RVA = "0xC24400", Offset = "0xC24400", VA = "0xC24400")]
		public CompactHeightfield(Heightfield field, NavMeshGenerationSettings settings)
		{
		}

		[Token(Token = "0x6001756")]
		[Address(RVA = "0xC24460", Offset = "0xC24460", VA = "0xC24460")]
		public CompactHeightfield(Heightfield field, int walkableHeight, int walkableClimb)
		{
		}

		[Token(Token = "0x6001767")]
		[Address(RVA = "0xC24BB4", Offset = "0xC24BB4", VA = "0xC24BB4")]
		public void BuildDistanceField()
		{
		}

		[Token(Token = "0x6001768")]
		[Address(RVA = "0xC25B20", Offset = "0xC25B20", VA = "0xC25B20")]
		public void Erode(int radius)
		{
		}

		[Token(Token = "0x6001769")]
		[Address(RVA = "0xC25C6C", Offset = "0xC25C6C", VA = "0xC25C6C")]
		public void BuildRegions(int borderSize, int minRegionArea, int mergeRegionArea)
		{
		}

		[Token(Token = "0x600176A")]
		[Address(RVA = "0xC264B4", Offset = "0xC264B4", VA = "0xC264B4")]
		private static void AppendStacks(List<CompactSpanReference> source, List<CompactSpanReference> destination, RegionId[] regions)
		{
		}

		[Token(Token = "0x600176B")]
		[Address(RVA = "0xC2753C", Offset = "0xC2753C", VA = "0xC2753C")]
		private int FilterSmallRegions(RegionId[] regionIds, int minRegionArea, int mergeRegionSize, int maxRegionId)
		{
			return default(int);
		}

		[Token(Token = "0x600176C")]
		[Address(RVA = "0xC24CD0", Offset = "0xC24CD0", VA = "0xC24CD0")]
		private void CalculateDistanceField(int[] src)
		{
		}

		[Token(Token = "0x600176D")]
		[Address(RVA = "0xC2575C", Offset = "0xC2575C", VA = "0xC2575C")]
		private void BoxBlur(int[] distances, int threshold, int[] buffer)
		{
		}

		[Token(Token = "0x600176E")]
		[Address(RVA = "0xC265E8", Offset = "0xC265E8", VA = "0xC265E8")]
		private void ExpandRegions(RegionId[] regions, int[] floodDistances, int maxIterations, int level, List<CompactSpanReference> stack, RegionId[] regionBuffer, int[] distanceBuffer)
		{
		}

		[Token(Token = "0x600176F")]
		[Address(RVA = "0xC26D48", Offset = "0xC26D48", VA = "0xC26D48")]
		private bool FloodRegion(RegionId[] regions, int[] floodDistances, int regionIndex, int level, ref CompactSpanReference start)
		{
			return default(bool);
		}

		[Token(Token = "0x6001770")]
		[Address(RVA = "0xC281D4", Offset = "0xC281D4", VA = "0xC281D4")]
		private bool IsSolidEdge(RegionId[] regions, ref CompactSpanReference spanRef, Direction dir)
		{
			return default(bool);
		}

		[Token(Token = "0x6001771")]
		[Address(RVA = "0xC283A8", Offset = "0xC283A8", VA = "0xC283A8")]
		private void WalkContour(RegionId[] regions, CompactSpanReference spanRef, Direction dir, List<RegionId> cont)
		{
		}

		[Token(Token = "0x6001772")]
		[Address(RVA = "0xC2618C", Offset = "0xC2618C", VA = "0xC2618C")]
		private void FillRectangleRegion(RegionId[] regions, RegionId newRegionId, int left, int right, int bottom, int top)
		{
		}

		[Token(Token = "0x6001773")]
		[Address(RVA = "0xC26254", Offset = "0xC26254", VA = "0xC26254")]
		private void SortCellsByLevel(RegionId[] regions, List<CompactSpanReference>[] stacks, int startlevel, int numStacks, int logLevelsPerStack)
		{
		}

		[Token(Token = "0x6001774")]
		[Address(RVA = "0xC28914", Offset = "0xC28914", VA = "0xC28914")]
		public ContourSet BuildContourSet(NavMeshGenerationSettings settings)
		{
			return null;
		}

		[Token(Token = "0x6001775")]
		[Address(RVA = "0xC28938", Offset = "0xC28938", VA = "0xC28938")]
		public ContourSet BuildContourSet(float maxError, int maxEdgeLength, ContourBuildFlags buildFlags)
		{
			return null;
		}

		[Token(Token = "0x6001776")]
		[Address(RVA = "0xC291A4", Offset = "0xC291A4", VA = "0xC291A4")]
		private void WalkContour(CompactSpanReference spanReference, EdgeFlags[] flags, List<ContourVertex> points)
		{
		}

		[Token(Token = "0x6001777")]
		[Address(RVA = "0xC29704", Offset = "0xC29704", VA = "0xC29704")]
		private int GetCornerHeight(CompactSpanReference sr, Direction dir, out bool isBorderVertex)
		{
			return default(int);
		}
	}
	[Token(Token = "0x2000351")]
	public struct CompactSpan
	{
		[Token(Token = "0x40014EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int Minimum;

		[Token(Token = "0x40014F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int Height;

		[Token(Token = "0x40014F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public byte ConnectionWest;

		[Token(Token = "0x40014F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9")]
		public byte ConnectionNorth;

		[Token(Token = "0x40014F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA")]
		public byte ConnectionEast;

		[Token(Token = "0x40014F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB")]
		public byte ConnectionSouth;

		[Token(Token = "0x40014F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public RegionId Region;

		[Token(Token = "0x40014F6")]
		private const byte NotConnected = byte.MaxValue;

		[Token(Token = "0x1700024F")]
		public bool HasUpperBound
		{
			[Token(Token = "0x6001779")]
			[Address(RVA = "0x99D054", Offset = "0x99D054", VA = "0x99D054")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000250")]
		public int Maximum
		{
			[Token(Token = "0x600177A")]
			[Address(RVA = "0x99D068", Offset = "0x99D068", VA = "0x99D068")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000251")]
		public int ConnectionCount
		{
			[Token(Token = "0x600177B")]
			[Address(RVA = "0x99D074", Offset = "0x99D074", VA = "0x99D074")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6001778")]
		[Address(RVA = "0x99D04C", Offset = "0x99D04C", VA = "0x99D04C")]
		public CompactSpan(int minimum, int height)
		{
		}

		[Token(Token = "0x600177C")]
		[Address(RVA = "0x162B2EC", Offset = "0x162B2EC", VA = "0x162B2EC")]
		public static void OverlapMin(ref CompactSpan left, ref CompactSpan right, out int min)
		{
		}

		[Token(Token = "0x600177D")]
		[Address(RVA = "0x162B378", Offset = "0x162B378", VA = "0x162B378")]
		public static void OverlapMax(ref CompactSpan left, ref CompactSpan right, out int max)
		{
		}

		[Token(Token = "0x600177E")]
		[Address(RVA = "0x162B444", Offset = "0x162B444", VA = "0x162B444")]
		public static CompactSpan FromMinMax(int min, int max)
		{
			return default(CompactSpan);
		}

		[Token(Token = "0x600177F")]
		[Address(RVA = "0x162B46C", Offset = "0x162B46C", VA = "0x162B46C")]
		public static void FromMinMax(int min, int max, out CompactSpan span)
		{
		}

		[Token(Token = "0x6001780")]
		[Address(RVA = "0x162B4FC", Offset = "0x162B4FC", VA = "0x162B4FC")]
		public static void SetConnection(Direction dir, int i, ref CompactSpan s)
		{
		}

		[Token(Token = "0x6001781")]
		[Address(RVA = "0x162B604", Offset = "0x162B604", VA = "0x162B604")]
		public static void UnsetConnection(Direction dir, ref CompactSpan s)
		{
		}

		[Token(Token = "0x6001782")]
		[Address(RVA = "0x162B6D8", Offset = "0x162B6D8", VA = "0x162B6D8")]
		public static int GetConnection(ref CompactSpan s, Direction dir)
		{
			return default(int);
		}

		[Token(Token = "0x6001783")]
		[Address(RVA = "0x99D0B0", Offset = "0x99D0B0", VA = "0x99D0B0")]
		public int GetConnection(Direction dir)
		{
			return default(int);
		}

		[Token(Token = "0x6001784")]
		[Address(RVA = "0x99D0B8", Offset = "0x99D0B8", VA = "0x99D0B8")]
		public bool IsConnected(Direction dir)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000352")]
	public struct CompactSpanReference : IEquatable<CompactSpanReference>
	{
		[Token(Token = "0x40014F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly CompactSpanReference Null;

		[Token(Token = "0x40014F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public readonly int X;

		[Token(Token = "0x40014F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public readonly int Y;

		[Token(Token = "0x40014FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly int Index;

		[Token(Token = "0x6001785")]
		[Address(RVA = "0x99D0C0", Offset = "0x99D0C0", VA = "0x99D0C0")]
		public CompactSpanReference(int x, int y, int i)
		{
		}

		[Token(Token = "0x6001786")]
		[Address(RVA = "0x162B880", Offset = "0x162B880", VA = "0x162B880")]
		public static bool operator ==(CompactSpanReference left, CompactSpanReference right)
		{
			return default(bool);
		}

		[Token(Token = "0x6001787")]
		[Address(RVA = "0x162B8CC", Offset = "0x162B8CC", VA = "0x162B8CC")]
		public static bool operator !=(CompactSpanReference left, CompactSpanReference right)
		{
			return default(bool);
		}

		[Token(Token = "0x6001788")]
		[Address(RVA = "0x99D0CC", Offset = "0x99D0CC", VA = "0x99D0CC", Slot = "4")]
		public bool Equals(CompactSpanReference other)
		{
			return default(bool);
		}

		[Token(Token = "0x6001789")]
		[Address(RVA = "0x99D0D8", Offset = "0x99D0D8", VA = "0x99D0D8", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x600178A")]
		[Address(RVA = "0x99D0E0", Offset = "0x99D0E0", VA = "0x99D0E0", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}
	}
	[Token(Token = "0x2000353")]
	public class Contour
	{
		[Token(Token = "0x40014FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private ContourVertex[] vertices;

		[Token(Token = "0x40014FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private RegionId regionId;

		[Token(Token = "0x40014FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private Area area;

		[Token(Token = "0x17000252")]
		public ContourVertex[] Vertices
		{
			[Token(Token = "0x600178D")]
			[Address(RVA = "0x162BCC8", Offset = "0x162BCC8", VA = "0x162BCC8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000253")]
		public bool IsNull
		{
			[Token(Token = "0x600178E")]
			[Address(RVA = "0x162BCD0", Offset = "0x162BCD0", VA = "0x162BCD0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000254")]
		public Area Area
		{
			[Token(Token = "0x600178F")]
			[Address(RVA = "0x162BCF0", Offset = "0x162BCF0", VA = "0x162BCF0")]
			get
			{
				return default(Area);
			}
		}

		[Token(Token = "0x17000255")]
		public RegionId RegionId
		{
			[Token(Token = "0x6001790")]
			[Address(RVA = "0x162BCF8", Offset = "0x162BCF8", VA = "0x162BCF8")]
			get
			{
				return default(RegionId);
			}
		}

		[Token(Token = "0x17000256")]
		public int Area2D
		{
			[Token(Token = "0x6001791")]
			[Address(RVA = "0x162BD00", Offset = "0x162BD00", VA = "0x162BD00")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x600178C")]
		[Address(RVA = "0x162BBBC", Offset = "0x162BBBC", VA = "0x162BBBC")]
		public Contour(List<ContourVertex> verts, RegionId region, Area area, int borderSize)
		{
		}

		[Token(Token = "0x6001792")]
		[Address(RVA = "0x162BD98", Offset = "0x162BD98", VA = "0x162BD98")]
		public void MergeWith(Contour contour)
		{
		}

		[Token(Token = "0x6001793")]
		[Address(RVA = "0x162BF60", Offset = "0x162BF60", VA = "0x162BF60")]
		private static void GetClosestIndices(Contour a, Contour b, out int indexA, out int indexB)
		{
		}

		[Token(Token = "0x6001794")]
		[Address(RVA = "0x162C144", Offset = "0x162C144", VA = "0x162C144")]
		public static void Simplify(List<ContourVertex> rawVerts, List<ContourVertex> simplified, float maxError, int maxEdgeLen, ContourBuildFlags buildFlags)
		{
		}

		[Token(Token = "0x6001795")]
		[Address(RVA = "0x162CE9C", Offset = "0x162CE9C", VA = "0x162CE9C")]
		public static void RemoveDegenerateSegments(List<ContourVertex> simplified)
		{
		}
	}
	[Token(Token = "0x2000354")]
	[Flags]
	public enum ContourBuildFlags
	{
		[Token(Token = "0x40014FF")]
		None = 0,
		[Token(Token = "0x4001500")]
		TessellateWallEdges = 1,
		[Token(Token = "0x4001501")]
		TessellateAreaEdges = 2
	}
	[Token(Token = "0x2000355")]
	public class ContourSet : ICollection<Contour>, IEnumerable<Contour>, IEnumerable
	{
		[Token(Token = "0x4001502")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private List<Contour> contours;

		[Token(Token = "0x4001503")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private BBox3 bounds;

		[Token(Token = "0x4001504")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int width;

		[Token(Token = "0x4001505")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int height;

		[Token(Token = "0x17000257")]
		public int Count
		{
			[Token(Token = "0x6001797")]
			[Address(RVA = "0x162D068", Offset = "0x162D068", VA = "0x162D068", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000258")]
		public BBox3 Bounds
		{
			[Token(Token = "0x6001798")]
			[Address(RVA = "0x162D0B8", Offset = "0x162D0B8", VA = "0x162D0B8")]
			get
			{
				return default(BBox3);
			}
		}

		[Token(Token = "0x17000259")]
		public int Width
		{
			[Token(Token = "0x6001799")]
			[Address(RVA = "0x162D0CC", Offset = "0x162D0CC", VA = "0x162D0CC")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700025A")]
		public int Height
		{
			[Token(Token = "0x600179A")]
			[Address(RVA = "0x162D0D4", Offset = "0x162D0D4", VA = "0x162D0D4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700025B")]
		private bool System.Collections.Generic.ICollection<SharpNav.Contour>.IsReadOnly
		{
			[Token(Token = "0x600179B")]
			[Address(RVA = "0x162D0DC", Offset = "0x162D0DC", VA = "0x162D0DC", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001796")]
		[Address(RVA = "0x162CFD0", Offset = "0x162CFD0", VA = "0x162CFD0")]
		public ContourSet(IEnumerable<Contour> contours, BBox3 bounds, int width, int height)
		{
		}

		[Token(Token = "0x600179C")]
		[Address(RVA = "0x162D0E4", Offset = "0x162D0E4", VA = "0x162D0E4", Slot = "8")]
		public bool Contains(Contour item)
		{
			return default(bool);
		}

		[Token(Token = "0x600179D")]
		[Address(RVA = "0x162D14C", Offset = "0x162D14C", VA = "0x162D14C", Slot = "9")]
		public void CopyTo(Contour[] array, int arrayIndex)
		{
		}

		[Token(Token = "0x600179E")]
		[Address(RVA = "0x162D1BC", Offset = "0x162D1BC", VA = "0x162D1BC", Slot = "11")]
		public IEnumerator<Contour> GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x600179F")]
		[Address(RVA = "0x162D248", Offset = "0x162D248", VA = "0x162D248", Slot = "6")]
		private void System.Collections.Generic.ICollection<SharpNav.Contour>.Add(Contour item)
		{
		}

		[Token(Token = "0x60017A0")]
		[Address(RVA = "0x162D2A8", Offset = "0x162D2A8", VA = "0x162D2A8", Slot = "7")]
		private void System.Collections.Generic.ICollection<SharpNav.Contour>.Clear()
		{
		}

		[Token(Token = "0x60017A1")]
		[Address(RVA = "0x162D308", Offset = "0x162D308", VA = "0x162D308", Slot = "10")]
		private bool System.Collections.Generic.ICollection<SharpNav.Contour>.Remove(Contour item)
		{
			return default(bool);
		}

		[Token(Token = "0x60017A2")]
		[Address(RVA = "0x162D368", Offset = "0x162D368", VA = "0x162D368", Slot = "12")]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}
	}
	[Token(Token = "0x2000356")]
	public struct ContourVertex
	{
		[Token(Token = "0x4001506")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int X;

		[Token(Token = "0x4001507")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int Y;

		[Token(Token = "0x4001508")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int Z;

		[Token(Token = "0x4001509")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public RegionId RegionId;

		[Token(Token = "0x60017A3")]
		[Address(RVA = "0x99D0E8", Offset = "0x99D0E8", VA = "0x99D0E8")]
		public ContourVertex(int x, int y, int z, RegionId region)
		{
		}

		[Token(Token = "0x60017A4")]
		[Address(RVA = "0x99D0F4", Offset = "0x99D0F4", VA = "0x99D0F4")]
		public ContourVertex(SharpNav.Geometry.Vector3 vec, RegionId region)
		{
		}

		[Token(Token = "0x60017A5")]
		[Address(RVA = "0x99D10C", Offset = "0x99D10C", VA = "0x99D10C")]
		public ContourVertex(ContourVertex vert, int index)
		{
		}

		[Token(Token = "0x60017A6")]
		[Address(RVA = "0x99D150", Offset = "0x99D150", VA = "0x99D150")]
		public ContourVertex(ContourVertex vert, RegionId region)
		{
		}

		[Token(Token = "0x60017A7")]
		[Address(RVA = "0x162C108", Offset = "0x162C108", VA = "0x162C108")]
		public static bool IsLeft(ref ContourVertex a, ref ContourVertex b, ref ContourVertex c)
		{
			return default(bool);
		}

		[Token(Token = "0x60017A8")]
		[Address(RVA = "0x162D394", Offset = "0x162D394", VA = "0x162D394")]
		public static void Area2D(ref ContourVertex a, ref ContourVertex b, ref ContourVertex c, out int area)
		{
		}
	}
	[Token(Token = "0x2000357")]
	public enum Direction
	{
		[Token(Token = "0x400150B")]
		West,
		[Token(Token = "0x400150C")]
		North,
		[Token(Token = "0x400150D")]
		East,
		[Token(Token = "0x400150E")]
		South
	}
	[Token(Token = "0x2000358")]
	public static class DirectionExtensions
	{
		[Token(Token = "0x400150F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly int[] OffsetsX;

		[Token(Token = "0x4001510")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly int[] OffsetsY;

		[Token(Token = "0x60017A9")]
		[Address(RVA = "0x163448C", Offset = "0x163448C", VA = "0x163448C")]
		public static int GetHorizontalOffset(this Direction dir)
		{
			return default(int);
		}

		[Token(Token = "0x60017AA")]
		[Address(RVA = "0x1634520", Offset = "0x1634520", VA = "0x1634520")]
		public static int GetVerticalOffset(this Direction dir)
		{
			return default(int);
		}

		[Token(Token = "0x60017AB")]
		[Address(RVA = "0x16345B4", Offset = "0x16345B4", VA = "0x16345B4")]
		public static Direction NextClockwise(this Direction dir)
		{
			return default(Direction);
		}

		[Token(Token = "0x60017AC")]
		[Address(RVA = "0x1634644", Offset = "0x1634644", VA = "0x1634644")]
		public static Direction NextCounterClockwise(this Direction dir)
		{
			return default(Direction);
		}
	}
	[Token(Token = "0x2000359")]
	[Flags]
	public enum EdgeFlags : byte
	{
		[Token(Token = "0x4001512")]
		None = 0,
		[Token(Token = "0x4001513")]
		West = 1,
		[Token(Token = "0x4001514")]
		North = 2,
		[Token(Token = "0x4001515")]
		East = 4,
		[Token(Token = "0x4001516")]
		South = 8,
		[Token(Token = "0x4001517")]
		All = 0xF
	}
	[Token(Token = "0x200035A")]
	public static class EdgeFlagsHelper
	{
		[Token(Token = "0x60017AE")]
		[Address(RVA = "0x16347AC", Offset = "0x16347AC", VA = "0x16347AC")]
		public static void AddEdge(ref EdgeFlags edges, Direction dir)
		{
		}

		[Token(Token = "0x60017AF")]
		[Address(RVA = "0x16347C4", Offset = "0x16347C4", VA = "0x16347C4")]
		public static void FlipEdges(ref EdgeFlags edges)
		{
		}

		[Token(Token = "0x60017B0")]
		[Address(RVA = "0x16347D4", Offset = "0x16347D4", VA = "0x16347D4")]
		public static bool IsConnected(ref EdgeFlags edges, Direction dir)
		{
			return default(bool);
		}

		[Token(Token = "0x60017B1")]
		[Address(RVA = "0x16347EC", Offset = "0x16347EC", VA = "0x16347EC")]
		public static void RemoveEdge(ref EdgeFlags edges, Direction dir)
		{
		}
	}
	[Token(Token = "0x200035B")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x8B6DC0", Offset = "0x8B6DC0")]
	public class HeightPatch
	{
		[Token(Token = "0x4001518")]
		public const int UnsetHeight = -1;

		[Token(Token = "0x4001519")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int xmin;

		[Token(Token = "0x400151A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private int ymin;

		[Token(Token = "0x400151B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int width;

		[Token(Token = "0x400151C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private int length;

		[Token(Token = "0x400151D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int[] data;

		[Token(Token = "0x1700025C")]
		public int X
		{
			[Token(Token = "0x60017B3")]
			[Address(RVA = "0x15C8D10", Offset = "0x15C8D10", VA = "0x15C8D10")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700025D")]
		public int Y
		{
			[Token(Token = "0x60017B4")]
			[Address(RVA = "0x15C8D18", Offset = "0x15C8D18", VA = "0x15C8D18")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700025E")]
		public int Width
		{
			[Token(Token = "0x60017B5")]
			[Address(RVA = "0x15C8D20", Offset = "0x15C8D20", VA = "0x15C8D20")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700025F")]
		public int Length
		{
			[Token(Token = "0x60017B6")]
			[Address(RVA = "0x15C8D28", Offset = "0x15C8D28", VA = "0x15C8D28")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000260")]
		public int Item
		{
			[Token(Token = "0x60017B7")]
			[Address(RVA = "0x15C8D30", Offset = "0x15C8D30", VA = "0x15C8D30")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60017B8")]
			[Address(RVA = "0x15C8D6C", Offset = "0x15C8D6C", VA = "0x15C8D6C")]
			set
			{
			}
		}

		[Token(Token = "0x17000261")]
		public int Item
		{
			[Token(Token = "0x60017B9")]
			[Address(RVA = "0x15C8DA8", Offset = "0x15C8DA8", VA = "0x15C8DA8")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60017BA")]
			[Address(RVA = "0x15C8DEC", Offset = "0x15C8DEC", VA = "0x15C8DEC")]
			set
			{
			}
		}

		[Token(Token = "0x60017B2")]
		[Address(RVA = "0x15C8BD4", Offset = "0x15C8BD4", VA = "0x15C8BD4")]
		public HeightPatch(int x, int y, int width, int length)
		{
		}

		[Token(Token = "0x60017BB")]
		[Address(RVA = "0x15C8E30", Offset = "0x15C8E30", VA = "0x15C8E30")]
		public bool IsSet(int index)
		{
			return default(bool);
		}

		[Token(Token = "0x60017BC")]
		[Address(RVA = "0x15C8E74", Offset = "0x15C8E74", VA = "0x15C8E74")]
		public bool TryGetHeight(int index, out int value)
		{
			return default(bool);
		}

		[Token(Token = "0x60017BD")]
		[Address(RVA = "0x15C8EA4", Offset = "0x15C8EA4", VA = "0x15C8EA4")]
		public bool TryGetHeight(int x, int y, out int value)
		{
			return default(bool);
		}

		[Token(Token = "0x60017BE")]
		[Address(RVA = "0x15C8ED4", Offset = "0x15C8ED4", VA = "0x15C8ED4")]
		public void Resize(int x, int y, int width, int length)
		{
		}

		[Token(Token = "0x60017BF")]
		[Address(RVA = "0x15C8CB8", Offset = "0x15C8CB8", VA = "0x15C8CB8")]
		public void Clear()
		{
		}

		[Token(Token = "0x60017C0")]
		[Address(RVA = "0x15C8F94", Offset = "0x15C8F94", VA = "0x15C8F94")]
		public void SetAll(int h)
		{
		}
	}
	[Token(Token = "0x200035C")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x8B6DF8", Offset = "0x8B6DF8")]
	public class Heightfield
	{
		[Token(Token = "0x400151E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private BBox3 bounds;

		[Token(Token = "0x400151F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int width;

		[Token(Token = "0x4001520")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int height;

		[Token(Token = "0x4001521")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int length;

		[Token(Token = "0x4001522")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float cellSize;

		[Token(Token = "0x4001523")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float cellHeight;

		[Token(Token = "0x4001524")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Cell[] cells;

		[Token(Token = "0x17000262")]
		public BBox3 Bounds
		{
			[Token(Token = "0x60017E9")]
			[Address(RVA = "0x15CC33C", Offset = "0x15CC33C", VA = "0x15CC33C")]
			get
			{
				return default(BBox3);
			}
		}

		[Token(Token = "0x17000263")]
		public SharpNav.Geometry.Vector3 Minimum
		{
			[Token(Token = "0x60017EA")]
			[Address(RVA = "0x15CC350", Offset = "0x15CC350", VA = "0x15CC350")]
			get
			{
				return default(SharpNav.Geometry.Vector3);
			}
		}

		[Token(Token = "0x17000264")]
		public SharpNav.Geometry.Vector3 Maximum
		{
			[Token(Token = "0x60017EB")]
			[Address(RVA = "0x15CC35C", Offset = "0x15CC35C", VA = "0x15CC35C")]
			get
			{
				return default(SharpNav.Geometry.Vector3);
			}
		}

		[Token(Token = "0x17000265")]
		public int Width
		{
			[Token(Token = "0x60017EC")]
			[Address(RVA = "0x15CC368", Offset = "0x15CC368", VA = "0x15CC368")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000266")]
		public int Height
		{
			[Token(Token = "0x60017ED")]
			[Address(RVA = "0x15CC370", Offset = "0x15CC370", VA = "0x15CC370")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000267")]
		public int Length
		{
			[Token(Token = "0x60017EE")]
			[Address(RVA = "0x15CC378", Offset = "0x15CC378", VA = "0x15CC378")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000268")]
		public SharpNav.Geometry.Vector3 CellSize
		{
			[Token(Token = "0x60017EF")]
			[Address(RVA = "0x15CC380", Offset = "0x15CC380", VA = "0x15CC380")]
			get
			{
				return default(SharpNav.Geometry.Vector3);
			}
		}

		[Token(Token = "0x17000269")]
		public float CellSizeXZ
		{
			[Token(Token = "0x60017F0")]
			[Address(RVA = "0x15CC3BC", Offset = "0x15CC3BC", VA = "0x15CC3BC")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700026A")]
		public float CellHeight
		{
			[Token(Token = "0x60017F1")]
			[Address(RVA = "0x15CC3C4", Offset = "0x15CC3C4", VA = "0x15CC3C4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700026B")]
		public int SpanCount
		{
			[Token(Token = "0x60017F2")]
			[Address(RVA = "0x15CC3CC", Offset = "0x15CC3CC", VA = "0x15CC3CC")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700026C")]
		public Cell Item
		{
			[Token(Token = "0x60017F3")]
			[Address(RVA = "0x15CC44C", Offset = "0x15CC44C", VA = "0x15CC44C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700026D")]
		public Cell Item
		{
			[Token(Token = "0x60017F4")]
			[Address(RVA = "0x15CC51C", Offset = "0x15CC51C", VA = "0x15CC51C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700026E")]
		public Span Item
		{
			[Token(Token = "0x60017F5")]
			[Address(RVA = "0x15CC5CC", Offset = "0x15CC5CC", VA = "0x15CC5CC")]
			get
			{
				return default(Span);
			}
		}

		[Token(Token = "0x60017C1")]
		[Address(RVA = "0x15C8FE8", Offset = "0x15C8FE8", VA = "0x15C8FE8")]
		public void RasterizeTrianglesIndexedWithAreas(SharpNav.Geometry.Vector3[] verts, int[] inds, Area[] areas)
		{
		}

		[Token(Token = "0x60017C2")]
		[Address(RVA = "0x15C9038", Offset = "0x15C9038", VA = "0x15C9038")]
		public void RasterizeTrianglesIndexedWithAreas(SharpNav.Geometry.Vector3[] verts, int[] inds, int vertOffset, int vertStride, int indexOffset, int triCount, Area[] areas)
		{
		}

		[Token(Token = "0x60017C3")]
		[Address(RVA = "0x15C9804", Offset = "0x15C9804", VA = "0x15C9804")]
		public void RasterizeTrianglesIndexedWithAreas(float[] verts, int[] inds, Area[] areas)
		{
		}

		[Token(Token = "0x60017C4")]
		[Address(RVA = "0x15C9854", Offset = "0x15C9854", VA = "0x15C9854")]
		public void RasterizeTrianglesIndexedWithAreas(float[] verts, int[] inds, int floatOffset, int floatStride, int indexOffset, int triCount, Area[] areas)
		{
		}

		[Token(Token = "0x60017C5")]
		[Address(RVA = "0x15C9BB4", Offset = "0x15C9BB4", VA = "0x15C9BB4")]
		public void RasterizeTrianglesWithAreas(Triangle3[] tris, Area[] areas)
		{
		}

		[Token(Token = "0x60017C6")]
		[Address(RVA = "0x15C9BD4", Offset = "0x15C9BD4", VA = "0x15C9BD4")]
		public void RasterizeTrianglesWithAreas(Triangle3[] tris, int triOffset, int triCount, Area[] areas)
		{
		}

		[Token(Token = "0x60017C7")]
		[Address(RVA = "0x15C9DE8", Offset = "0x15C9DE8", VA = "0x15C9DE8")]
		public void RasterizeTrianglesWithAreas(SharpNav.Geometry.Vector3[] verts, Area[] areas)
		{
		}

		[Token(Token = "0x60017C8")]
		[Address(RVA = "0x15C9E24", Offset = "0x15C9E24", VA = "0x15C9E24")]
		public void RasterizeTrianglesWithAreas(SharpNav.Geometry.Vector3[] verts, int vertOffset, int vertStride, int triCount, Area[] areas)
		{
		}

		[Token(Token = "0x60017C9")]
		[Address(RVA = "0x15CA07C", Offset = "0x15CA07C", VA = "0x15CA07C")]
		public void RasterizeTrianglesWithAreas(float[] verts, Area[] areas)
		{
		}

		[Token(Token = "0x60017CA")]
		[Address(RVA = "0x15CA0B8", Offset = "0x15CA0B8", VA = "0x15CA0B8")]
		public void RasterizeTrianglesWithAreas(float[] verts, int floatOffset, int floatStride, int triCount, Area[] areas)
		{
		}

		[Token(Token = "0x60017CB")]
		[Address(RVA = "0x15CA3E4", Offset = "0x15CA3E4", VA = "0x15CA3E4")]
		public void RasterizeTrianglesIndexed(SharpNav.Geometry.Vector3[] verts, int[] inds)
		{
		}

		[Token(Token = "0x60017CC")]
		[Address(RVA = "0x15CA6DC", Offset = "0x15CA6DC", VA = "0x15CA6DC")]
		public void RasterizeTrianglesIndexed(SharpNav.Geometry.Vector3[] verts, int[] inds, Area area)
		{
		}

		[Token(Token = "0x60017CD")]
		[Address(RVA = "0x15CA72C", Offset = "0x15CA72C", VA = "0x15CA72C")]
		public void RasterizeTrianglesIndexed(SharpNav.Geometry.Vector3[] verts, int[] inds, int vertOffset, int vertStride, int indexOffset, int triCount)
		{
		}

		[Token(Token = "0x60017CE")]
		[Address(RVA = "0x15CA4A8", Offset = "0x15CA4A8", VA = "0x15CA4A8")]
		public void RasterizeTrianglesIndexed(SharpNav.Geometry.Vector3[] verts, int[] inds, int vertOffset, int vertStride, int indexOffset, int triCount, Area area)
		{
		}

		[Token(Token = "0x60017CF")]
		[Address(RVA = "0x15CA7F0", Offset = "0x15CA7F0", VA = "0x15CA7F0")]
		public void RasterizeTrianglesIndexed(float[] verts, int[] inds)
		{
		}

		[Token(Token = "0x60017D0")]
		[Address(RVA = "0x15CABB4", Offset = "0x15CABB4", VA = "0x15CABB4")]
		public void RasterizeTrianglesIndexed(float[] verts, int[] inds, Area area)
		{
		}

		[Token(Token = "0x60017D1")]
		[Address(RVA = "0x15CAC04", Offset = "0x15CAC04", VA = "0x15CAC04")]
		public void RasterizeTrianglesIndexed(float[] verts, int[] inds, int floatOffset, int floatStride, int indexOffset, int triCount)
		{
		}

		[Token(Token = "0x60017D2")]
		[Address(RVA = "0x15CA8B4", Offset = "0x15CA8B4", VA = "0x15CA8B4")]
		public void RasterizeTrianglesIndexed(float[] verts, int[] inds, int floatOffset, int floatStride, int indexOffset, int triCount, Area area)
		{
		}

		[Token(Token = "0x60017D3")]
		[Address(RVA = "0x15CACC8", Offset = "0x15CACC8", VA = "0x15CACC8")]
		public void RasterizeTriangles(IEnumerable<Triangle3> tris)
		{
		}

		[Token(Token = "0x60017D4")]
		[Address(RVA = "0x15CAD48", Offset = "0x15CAD48", VA = "0x15CAD48")]
		public void RasterizeTriangles(IEnumerable<Triangle3> tris, Area area)
		{
		}

		[Token(Token = "0x60017D5")]
		[Address(RVA = "0x15CB018", Offset = "0x15CB018", VA = "0x15CB018")]
		public void RasterizeTriangles(Triangle3[] tris)
		{
		}

		[Token(Token = "0x60017D6")]
		[Address(RVA = "0x15CB2C8", Offset = "0x15CB2C8", VA = "0x15CB2C8")]
		public void RasterizeTriangles(Triangle3[] tris, Area area)
		{
		}

		[Token(Token = "0x60017D7")]
		[Address(RVA = "0x15CB2E8", Offset = "0x15CB2E8", VA = "0x15CB2E8")]
		public void RasterizeTriangles(Triangle3[] tris, int triOffset, int triCount)
		{
		}

		[Token(Token = "0x60017D8")]
		[Address(RVA = "0x15CB0A8", Offset = "0x15CB0A8", VA = "0x15CB0A8")]
		public void RasterizeTriangles(Triangle3[] tris, int triOffset, int triCount, Area area)
		{
		}

		[Token(Token = "0x60017D9")]
		[Address(RVA = "0x15CB380", Offset = "0x15CB380", VA = "0x15CB380")]
		public void RasterizeTriangles(SharpNav.Geometry.Vector3[] verts)
		{
		}

		[Token(Token = "0x60017DA")]
		[Address(RVA = "0x15CB62C", Offset = "0x15CB62C", VA = "0x15CB62C")]
		public void RasterizeTriangles(SharpNav.Geometry.Vector3[] verts, Area area)
		{
		}

		[Token(Token = "0x60017DB")]
		[Address(RVA = "0x15CB668", Offset = "0x15CB668", VA = "0x15CB668")]
		public void RasterizeTriangles(SharpNav.Geometry.Vector3[] verts, int vertOffset, int vertStride, int triCount)
		{
		}

		[Token(Token = "0x60017DC")]
		[Address(RVA = "0x15CB42C", Offset = "0x15CB42C", VA = "0x15CB42C")]
		public void RasterizeTriangles(SharpNav.Geometry.Vector3[] verts, int vertOffset, int vertStride, int triCount, Area area)
		{
		}

		[Token(Token = "0x60017DD")]
		[Address(RVA = "0x15CB708", Offset = "0x15CB708", VA = "0x15CB708")]
		public void RasterizeTriangles(float[] verts)
		{
		}

		[Token(Token = "0x60017DE")]
		[Address(RVA = "0x15CBA84", Offset = "0x15CBA84", VA = "0x15CBA84")]
		public void RasterizeTriangles(float[] verts, Area area)
		{
		}

		[Token(Token = "0x60017DF")]
		[Address(RVA = "0x15CBAC0", Offset = "0x15CBAC0", VA = "0x15CBAC0")]
		public void RasterizeTriangles(float[] verts, int floatOffset, int floatStride, int triCount)
		{
		}

		[Token(Token = "0x60017E0")]
		[Address(RVA = "0x15CB7B4", Offset = "0x15CB7B4", VA = "0x15CB7B4")]
		public void RasterizeTriangles(float[] verts, int floatOffset, int floatStride, int triCount, Area area)
		{
		}

		[Token(Token = "0x60017E1")]
		[Address(RVA = "0x15CBB60", Offset = "0x15CBB60", VA = "0x15CBB60")]
		public void RasterizeTriangle(ref Triangle3 tri)
		{
		}

		[Token(Token = "0x60017E2")]
		[Address(RVA = "0x15CB004", Offset = "0x15CB004", VA = "0x15CB004")]
		public void RasterizeTriangle(ref Triangle3 tri, Area area)
		{
		}

		[Token(Token = "0x60017E3")]
		[Address(RVA = "0x15CBBF8", Offset = "0x15CBBF8", VA = "0x15CBBF8")]
		public void RasterizeTriangle(float ax, float ay, float az, float bx, float by, float bz, float cx, float cy, float cz)
		{
		}

		[Token(Token = "0x60017E4")]
		[Address(RVA = "0x15CBCE8", Offset = "0x15CBCE8", VA = "0x15CBCE8")]
		public void RasterizeTriangle(float ax, float ay, float az, float bx, float by, float bz, float cx, float cy, float cz, Area area)
		{
		}

		[Token(Token = "0x60017E5")]
		[Address(RVA = "0x15CBD30", Offset = "0x15CBD30", VA = "0x15CBD30")]
		public void RasterizeTriangle(ref SharpNav.Geometry.Vector3 a, ref SharpNav.Geometry.Vector3 b, ref SharpNav.Geometry.Vector3 c)
		{
		}

		[Token(Token = "0x60017E6")]
		[Address(RVA = "0x15C92D0", Offset = "0x15C92D0", VA = "0x15C92D0")]
		public void RasterizeTriangle(ref SharpNav.Geometry.Vector3 a, ref SharpNav.Geometry.Vector3 b, ref SharpNav.Geometry.Vector3 c, Area area)
		{
		}

		[Token(Token = "0x60017E7")]
		[Address(RVA = "0x15CC058", Offset = "0x15CC058", VA = "0x15CC058")]
		public Heightfield(BBox3 b, NavMeshGenerationSettings settings)
		{
		}

		[Token(Token = "0x60017E8")]
		[Address(RVA = "0x15CC0A4", Offset = "0x15CC0A4", VA = "0x15CC0A4")]
		public Heightfield(BBox3 b, float cellSize, float cellHeight)
		{
		}

		[Token(Token = "0x60017F6")]
		[Address(RVA = "0x15CC67C", Offset = "0x15CC67C", VA = "0x15CC67C")]
		public void FilterLowHangingWalkableObstacles(int walkableClimb)
		{
		}

		[Token(Token = "0x60017F7")]
		[Address(RVA = "0x15CC88C", Offset = "0x15CC88C", VA = "0x15CC88C")]
		public void FilterWalkableLowHeightSpans(int walkableHeight)
		{
		}

		[Token(Token = "0x60017F8")]
		[Address(RVA = "0x15CCA28", Offset = "0x15CCA28", VA = "0x15CCA28")]
		public void FilterLedgeSpans(int walkableHeight, int walkableClimb)
		{
		}
	}
	[Token(Token = "0x200035D")]
	internal static class MathHelper
	{
		[Token(Token = "0x60017F9")]
		[Address(RVA = "0x15CCF98", Offset = "0x15CCF98", VA = "0x15CCF98")]
		internal static int Clamp(int val, int min, int max)
		{
			return default(int);
		}

		[Token(Token = "0x60017FA")]
		[Address(RVA = "0x15CBDC8", Offset = "0x15CBDC8", VA = "0x15CBDC8")]
		internal static void Clamp(ref int val, int min, int max)
		{
		}

		[Token(Token = "0x60017FB")]
		[Address(RVA = "0x15CCFB4", Offset = "0x15CCFB4", VA = "0x15CCFB4")]
		internal static uint Clamp(uint val, uint min, uint max)
		{
			return default(uint);
		}

		[Token(Token = "0x60017FC")]
		[Address(RVA = "0x15CCFD0", Offset = "0x15CCFD0", VA = "0x15CCFD0")]
		internal static void Clamp(ref uint val, uint min, uint max)
		{
		}

		[Token(Token = "0x60017FD")]
		[Address(RVA = "0x15CCFEC", Offset = "0x15CCFEC", VA = "0x15CCFEC")]
		internal static float Clamp(float val, float min, float max)
		{
			return default(float);
		}

		[Token(Token = "0x60017FE")]
		[Address(RVA = "0x15CD008", Offset = "0x15CD008", VA = "0x15CD008")]
		internal static void Clamp(ref float val, float min, float max)
		{
		}

		[Token(Token = "0x60017FF")]
		[Address(RVA = "0x15CD02C", Offset = "0x15CD02C", VA = "0x15CD02C")]
		public static float Normalize(float t, float t0, float t1)
		{
			return default(float);
		}

		[Token(Token = "0x6001800")]
		[Address(RVA = "0x15CD050", Offset = "0x15CD050", VA = "0x15CD050")]
		internal static int NextPowerOfTwo(int v)
		{
			return default(int);
		}

		[Token(Token = "0x6001801")]
		[Address(RVA = "0x15CD070", Offset = "0x15CD070", VA = "0x15CD070")]
		internal static uint NextPowerOfTwo(uint v)
		{
			return default(uint);
		}

		[Token(Token = "0x6001802")]
		[Address(RVA = "0x15CD090", Offset = "0x15CD090", VA = "0x15CD090")]
		internal static int Log2(int v)
		{
			return default(int);
		}

		[Token(Token = "0x6001803")]
		[Address(RVA = "0x15CD0E4", Offset = "0x15CD0E4", VA = "0x15CD0E4")]
		internal static uint Log2(uint v)
		{
			return default(uint);
		}

		[Token(Token = "0x6001804")]
		[Address(RVA = "0x15CD138", Offset = "0x15CD138", VA = "0x15CD138")]
		internal static int ClipPolygonToPlane(SharpNav.Geometry.Vector3[] inVertices, SharpNav.Geometry.Vector3[] outVertices, int numVerts, float planeX, float planeZ, float planeD)
		{
			return default(int);
		}

		[Token(Token = "0x6001805")]
		[Address(RVA = "0x15CBDE4", Offset = "0x15CBDE4", VA = "0x15CBDE4")]
		internal static int ClipPolygonToPlane(SharpNav.Geometry.Vector3[] inVertices, SharpNav.Geometry.Vector3[] outVertices, float[] distances, int numVerts, float planeX, float planeZ, float planeD)
		{
			return default(int);
		}
	}
	[Token(Token = "0x200035E")]
	public class NavMesh : TiledNavMesh
	{
		[Token(Token = "0x6001806")]
		[Address(RVA = "0x15CD1D4", Offset = "0x15CD1D4", VA = "0x15CD1D4")]
		public NavMesh(NavMeshBuilder builder)
		{
		}

		[Token(Token = "0x6001807")]
		[Address(RVA = "0x15CD1DC", Offset = "0x15CD1DC", VA = "0x15CD1DC")]
		public static NavMesh Generate(IEnumerable<Triangle3> triangles, NavMeshGenerationSettings settings, out PolyMesh polyMesh, out PolyMeshDetail polyMeshDetail)
		{
			return null;
		}
	}
	[Token(Token = "0x200035F")]
	public class NavMeshBuilder
	{
		[Token(Token = "0x4001525")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private PathfindingCommon.NavMeshInfo header;

		[Token(Token = "0x4001526")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private SharpNav.Geometry.Vector3[] navVerts;

		[Token(Token = "0x4001527")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Poly[] navPolys;

		[Token(Token = "0x4001528")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private PolyMeshDetail.MeshData[] navDMeshes;

		[Token(Token = "0x4001529")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private SharpNav.Geometry.Vector3[] navDVerts;

		[Token(Token = "0x400152A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private PolyMeshDetail.TriangleData[] navDTris;

		[Token(Token = "0x400152B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private BVTree navBvTree;

		[Token(Token = "0x400152C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private OffMeshConnection[] offMeshConnections;

		[Token(Token = "0x1700026F")]
		public PathfindingCommon.NavMeshInfo Header
		{
			[Token(Token = "0x6001809")]
			[Address(RVA = "0x15CED78", Offset = "0x15CED78", VA = "0x15CED78")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000270")]
		public SharpNav.Geometry.Vector3[] NavVerts
		{
			[Token(Token = "0x600180A")]
			[Address(RVA = "0x15CED80", Offset = "0x15CED80", VA = "0x15CED80")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000271")]
		public Poly[] NavPolys
		{
			[Token(Token = "0x600180B")]
			[Address(RVA = "0x15CED88", Offset = "0x15CED88", VA = "0x15CED88")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000272")]
		public PolyMeshDetail.MeshData[] NavDMeshes
		{
			[Token(Token = "0x600180C")]
			[Address(RVA = "0x15CED90", Offset = "0x15CED90", VA = "0x15CED90")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000273")]
		public SharpNav.Geometry.Vector3[] NavDVerts
		{
			[Token(Token = "0x600180D")]
			[Address(RVA = "0x15CED98", Offset = "0x15CED98", VA = "0x15CED98")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000274")]
		public PolyMeshDetail.TriangleData[] NavDTris
		{
			[Token(Token = "0x600180E")]
			[Address(RVA = "0x15CEDA0", Offset = "0x15CEDA0", VA = "0x15CEDA0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000275")]
		public BVTree NavBvTree
		{
			[Token(Token = "0x600180F")]
			[Address(RVA = "0x15CEDA8", Offset = "0x15CEDA8", VA = "0x15CEDA8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000276")]
		public OffMeshConnection[] OffMeshCons
		{
			[Token(Token = "0x6001810")]
			[Address(RVA = "0x15CEDB0", Offset = "0x15CEDB0", VA = "0x15CEDB0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001808")]
		[Address(RVA = "0x15CD478", Offset = "0x15CD478", VA = "0x15CD478")]
		public NavMeshBuilder(PolyMesh polyMesh, PolyMeshDetail polyMeshDetail, OffMeshConnection[] offMeshCons, NavMeshGenerationSettings settings)
		{
		}
	}
	[Token(Token = "0x2000360")]
	public class NavMeshGenerationSettings
	{
		[Token(Token = "0x400152D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8BE8D8", Offset = "0x8BE8D8")]
		private float <CellSize>k__BackingField;

		[Token(Token = "0x400152E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8BE8E8", Offset = "0x8BE8E8")]
		private float <CellHeight>k__BackingField;

		[Token(Token = "0x400152F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8BE8F8", Offset = "0x8BE8F8")]
		private float <MaxClimb>k__BackingField;

		[Token(Token = "0x4001530")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8BE908", Offset = "0x8BE908")]
		private float <AgentHeight>k__BackingField;

		[Token(Token = "0x4001531")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8BE918", Offset = "0x8BE918")]
		private float <AgentRadius>k__BackingField;

		[Token(Token = "0x4001532")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8BE928", Offset = "0x8BE928")]
		private int <MinRegionSize>k__BackingField;

		[Token(Token = "0x4001533")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8BE938", Offset = "0x8BE938")]
		private int <MergedRegionSize>k__BackingField;

		[Token(Token = "0x4001534")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8BE948", Offset = "0x8BE948")]
		private int <MaxEdgeLength>k__BackingField;

		[Token(Token = "0x4001535")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8BE958", Offset = "0x8BE958")]
		private float <MaxEdgeError>k__BackingField;

		[Token(Token = "0x4001536")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8BE968", Offset = "0x8BE968")]
		private ContourBuildFlags <ContourFlags>k__BackingField;

		[Token(Token = "0x4001537")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8BE978", Offset = "0x8BE978")]
		private int <VertsPerPoly>k__BackingField;

		[Token(Token = "0x4001538")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8BE988", Offset = "0x8BE988")]
		private int <SampleDistance>k__BackingField;

		[Token(Token = "0x4001539")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8BE998", Offset = "0x8BE998")]
		private int <MaxSampleError>k__BackingField;

		[Token(Token = "0x400153A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8BE9A8", Offset = "0x8BE9A8")]
		private bool <BuildBoundingVolumeTree>k__BackingField;

		[Token(Token = "0x17000277")]
		public static NavMeshGenerationSettings Default
		{
			[Token(Token = "0x6001812")]
			[Address(RVA = "0x15CEDC0", Offset = "0x15CEDC0", VA = "0x15CEDC0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000278")]
		public float CellSize
		{
			[Token(Token = "0x6001813")]
			[Address(RVA = "0x15CEE6C", Offset = "0x15CEE6C", VA = "0x15CEE6C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CA37C", Offset = "0x8CA37C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001814")]
			[Address(RVA = "0x15CEE74", Offset = "0x15CEE74", VA = "0x15CEE74")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CA38C", Offset = "0x8CA38C")]
			set
			{
			}
		}

		[Token(Token = "0x17000279")]
		public float CellHeight
		{
			[Token(Token = "0x6001815")]
			[Address(RVA = "0x15CEE7C", Offset = "0x15CEE7C", VA = "0x15CEE7C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CA39C", Offset = "0x8CA39C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001816")]
			[Address(RVA = "0x15CEE84", Offset = "0x15CEE84", VA = "0x15CEE84")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CA3AC", Offset = "0x8CA3AC")]
			set
			{
			}
		}

		[Token(Token = "0x1700027A")]
		public float MaxClimb
		{
			[Token(Token = "0x6001817")]
			[Address(RVA = "0x15CEE8C", Offset = "0x15CEE8C", VA = "0x15CEE8C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CA3BC", Offset = "0x8CA3BC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001818")]
			[Address(RVA = "0x15CEE94", Offset = "0x15CEE94", VA = "0x15CEE94")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CA3CC", Offset = "0x8CA3CC")]
			set
			{
			}
		}

		[Token(Token = "0x1700027B")]
		public float AgentHeight
		{
			[Token(Token = "0x6001819")]
			[Address(RVA = "0x15CEE9C", Offset = "0x15CEE9C", VA = "0x15CEE9C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CA3DC", Offset = "0x8CA3DC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600181A")]
			[Address(RVA = "0x15CEEA4", Offset = "0x15CEEA4", VA = "0x15CEEA4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CA3EC", Offset = "0x8CA3EC")]
			set
			{
			}
		}

		[Token(Token = "0x1700027C")]
		public float AgentRadius
		{
			[Token(Token = "0x600181B")]
			[Address(RVA = "0x15CEEAC", Offset = "0x15CEEAC", VA = "0x15CEEAC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CA3FC", Offset = "0x8CA3FC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600181C")]
			[Address(RVA = "0x15CEEB4", Offset = "0x15CEEB4", VA = "0x15CEEB4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CA40C", Offset = "0x8CA40C")]
			set
			{
			}
		}

		[Token(Token = "0x1700027D")]
		public int MinRegionSize
		{
			[Token(Token = "0x600181D")]
			[Address(RVA = "0x15CEEBC", Offset = "0x15CEEBC", VA = "0x15CEEBC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CA41C", Offset = "0x8CA41C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600181E")]
			[Address(RVA = "0x15CEEC4", Offset = "0x15CEEC4", VA = "0x15CEEC4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CA42C", Offset = "0x8CA42C")]
			set
			{
			}
		}

		[Token(Token = "0x1700027E")]
		public int MergedRegionSize
		{
			[Token(Token = "0x600181F")]
			[Address(RVA = "0x15CEECC", Offset = "0x15CEECC", VA = "0x15CEECC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CA43C", Offset = "0x8CA43C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001820")]
			[Address(RVA = "0x15CEED4", Offset = "0x15CEED4", VA = "0x15CEED4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CA44C", Offset = "0x8CA44C")]
			set
			{
			}
		}

		[Token(Token = "0x1700027F")]
		public int MaxEdgeLength
		{
			[Token(Token = "0x6001821")]
			[Address(RVA = "0x15CEEDC", Offset = "0x15CEEDC", VA = "0x15CEEDC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CA45C", Offset = "0x8CA45C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001822")]
			[Address(RVA = "0x15CEEE4", Offset = "0x15CEEE4", VA = "0x15CEEE4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CA46C", Offset = "0x8CA46C")]
			set
			{
			}
		}

		[Token(Token = "0x17000280")]
		public float MaxEdgeError
		{
			[Token(Token = "0x6001823")]
			[Address(RVA = "0x15CEEEC", Offset = "0x15CEEEC", VA = "0x15CEEEC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CA47C", Offset = "0x8CA47C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001824")]
			[Address(RVA = "0x15CEEF4", Offset = "0x15CEEF4", VA = "0x15CEEF4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CA48C", Offset = "0x8CA48C")]
			set
			{
			}
		}

		[Token(Token = "0x17000281")]
		public ContourBuildFlags ContourFlags
		{
			[Token(Token = "0x6001825")]
			[Address(RVA = "0x15CEEFC", Offset = "0x15CEEFC", VA = "0x15CEEFC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CA49C", Offset = "0x8CA49C")]
			get
			{
				return default(ContourBuildFlags);
			}
			[Token(Token = "0x6001826")]
			[Address(RVA = "0x15CEF04", Offset = "0x15CEF04", VA = "0x15CEF04")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CA4AC", Offset = "0x8CA4AC")]
			set
			{
			}
		}

		[Token(Token = "0x17000282")]
		public int VertsPerPoly
		{
			[Token(Token = "0x6001827")]
			[Address(RVA = "0x15CEF0C", Offset = "0x15CEF0C", VA = "0x15CEF0C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CA4BC", Offset = "0x8CA4BC")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001828")]
			[Address(RVA = "0x15CEF14", Offset = "0x15CEF14", VA = "0x15CEF14")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CA4CC", Offset = "0x8CA4CC")]
			set
			{
			}
		}

		[Token(Token = "0x17000283")]
		public int SampleDistance
		{
			[Token(Token = "0x6001829")]
			[Address(RVA = "0x15CEF1C", Offset = "0x15CEF1C", VA = "0x15CEF1C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CA4DC", Offset = "0x8CA4DC")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600182A")]
			[Address(RVA = "0x15CEF24", Offset = "0x15CEF24", VA = "0x15CEF24")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CA4EC", Offset = "0x8CA4EC")]
			set
			{
			}
		}

		[Token(Token = "0x17000284")]
		public int MaxSampleError
		{
			[Token(Token = "0x600182B")]
			[Address(RVA = "0x15CEF2C", Offset = "0x15CEF2C", VA = "0x15CEF2C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CA4FC", Offset = "0x8CA4FC")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600182C")]
			[Address(RVA = "0x15CEF34", Offset = "0x15CEF34", VA = "0x15CEF34")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CA50C", Offset = "0x8CA50C")]
			set
			{
			}
		}

		[Token(Token = "0x17000285")]
		public bool BuildBoundingVolumeTree
		{
			[Token(Token = "0x600182D")]
			[Address(RVA = "0x15CEF3C", Offset = "0x15CEF3C", VA = "0x15CEF3C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CA51C", Offset = "0x8CA51C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600182E")]
			[Address(RVA = "0x15CEF44", Offset = "0x15CEF44", VA = "0x15CEF44")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CA52C", Offset = "0x8CA52C")]
			set
			{
			}
		}

		[Token(Token = "0x17000286")]
		public int VoxelAgentHeight
		{
			[Token(Token = "0x600182F")]
			[Address(RVA = "0x15CD420", Offset = "0x15CD420", VA = "0x15CD420")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000287")]
		public int VoxelMaxClimb
		{
			[Token(Token = "0x6001830")]
			[Address(RVA = "0x15CD434", Offset = "0x15CD434", VA = "0x15CD434")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000288")]
		public int VoxelAgentRadius
		{
			[Token(Token = "0x6001831")]
			[Address(RVA = "0x15CD444", Offset = "0x15CD444", VA = "0x15CD444")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6001811")]
		[Address(RVA = "0x15CEDB8", Offset = "0x15CEDB8", VA = "0x15CEDB8")]
		public NavMeshGenerationSettings()
		{
		}
	}
	[Token(Token = "0x2000361")]
	public class NavMeshQuery
	{
		[Token(Token = "0x200084D")]
		private struct QueryData
		{
			[Token(Token = "0x40028FA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public bool Status;

			[Token(Token = "0x40028FB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Node LastBestNode;

			[Token(Token = "0x40028FC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float LastBestNodeCost;

			[Token(Token = "0x40028FD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public int StartRef;

			[Token(Token = "0x40028FE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int EndRef;

			[Token(Token = "0x40028FF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public SharpNav.Geometry.Vector3 StartPos;

			[Token(Token = "0x4002900")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public SharpNav.Geometry.Vector3 EndPos;
		}

		[Token(Token = "0x200084E")]
		public struct SegInterval
		{
			[Token(Token = "0x4002901")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int Reference;

			[Token(Token = "0x4002902")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public int TMin;

			[Token(Token = "0x4002903")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int TMax;
		}

		[Token(Token = "0x400153B")]
		private const float H_SCALE = 0.999f;

		[Token(Token = "0x400153C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private TiledNavMesh nav;

		[Token(Token = "0x400153D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float[] areaCost;

		[Token(Token = "0x400153E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private NodePool tinyNodePool;

		[Token(Token = "0x400153F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private NodePool nodePool;

		[Token(Token = "0x4001540")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private PriorityQueue<Node> openList;

		[Token(Token = "0x4001541")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private QueryData query;

		[Token(Token = "0x4001542")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private System.Random rand;

		[Token(Token = "0x17000289")]
		public TiledNavMesh NavMesh
		{
			[Token(Token = "0x6001835")]
			[Address(RVA = "0x15CF320", Offset = "0x15CF320", VA = "0x15CF320")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001832")]
		[Address(RVA = "0x15CEF50", Offset = "0x15CEF50", VA = "0x15CEF50")]
		public NavMeshQuery(TiledNavMesh nav, int maxNodes)
		{
		}

		[Token(Token = "0x6001833")]
		[Address(RVA = "0x15CEFCC", Offset = "0x15CEFCC", VA = "0x15CEFCC")]
		public NavMeshQuery(TiledNavMesh nav, int maxNodes, System.Random rand)
		{
		}

		[Token(Token = "0x6001834")]
		[Address(RVA = "0x15CF208", Offset = "0x15CF208", VA = "0x15CF208")]
		public float GetCost(SharpNav.Geometry.Vector3 pa, SharpNav.Geometry.Vector3 pb, Poly curPoly)
		{
			return default(float);
		}

		[Token(Token = "0x6001836")]
		[Address(RVA = "0x15CF328", Offset = "0x15CF328", VA = "0x15CF328")]
		public SharpNav.Geometry.Vector3 FindRandomPointOnPoly(MeshTile tile, Poly poly, int polyRef)
		{
			return default(SharpNav.Geometry.Vector3);
		}

		[Token(Token = "0x6001837")]
		[Address(RVA = "0x15CF358", Offset = "0x15CF358", VA = "0x15CF358")]
		public void FindRandomPointOnPoly(MeshTile tile, Poly poly, int polyRef, out SharpNav.Geometry.Vector3 randomPt)
		{
		}

		[Token(Token = "0x6001838")]
		[Address(RVA = "0x15CF9D4", Offset = "0x15CF9D4", VA = "0x15CF9D4")]
		public NavPoint FindRandomPoint()
		{
			return default(NavPoint);
		}

		[Token(Token = "0x6001839")]
		[Address(RVA = "0x15CF9FC", Offset = "0x15CF9FC", VA = "0x15CF9FC")]
		public void FindRandomPoint(out NavPoint randomPoint)
		{
		}

		[Token(Token = "0x600183A")]
		[Address(RVA = "0x15CFD1C", Offset = "0x15CFD1C", VA = "0x15CFD1C")]
		public NavPoint FindRandomPointAroundCircle(NavPoint center, float radius)
		{
			return default(NavPoint);
		}

		[Token(Token = "0x600183B")]
		[Address(RVA = "0x15CFD44", Offset = "0x15CFD44", VA = "0x15CFD44")]
		public void FindRandomPointAroundCircle(NavPoint center, float radius, out NavPoint randomPoint)
		{
		}

		[Token(Token = "0x600183C")]
		[Address(RVA = "0x15D0BB8", Offset = "0x15D0BB8", VA = "0x15D0BB8")]
		public bool FindPath(ref NavPoint startPt, ref NavPoint endPt, List<int> path)
		{
			return default(bool);
		}

		[Token(Token = "0x600183D")]
		[Address(RVA = "0x15D12E0", Offset = "0x15D12E0", VA = "0x15D12E0")]
		public bool FindStraightPath(SharpNav.Geometry.Vector3 startPos, SharpNav.Geometry.Vector3 endPos, int[] path, int pathSize, SharpNav.Geometry.Vector3[] straightPath, int[] straightPathFlags, int[] straightPathRefs, ref int straightPathCount, int maxStraightPath, PathBuildFlags options)
		{
			return default(bool);
		}

		[Token(Token = "0x600183E")]
		[Address(RVA = "0x15D20A8", Offset = "0x15D20A8", VA = "0x15D20A8")]
		public bool MoveAlongSurface(NavPoint startPoint, SharpNav.Geometry.Vector3 endPos, ref SharpNav.Geometry.Vector3 resultPos, List<int> visited)
		{
			return default(bool);
		}

		[Token(Token = "0x600183F")]
		[Address(RVA = "0x15D2894", Offset = "0x15D2894", VA = "0x15D2894")]
		public bool InitSlicedFindPath(NavPoint startPoint, NavPoint endPoint)
		{
			return default(bool);
		}

		[Token(Token = "0x6001840")]
		[Address(RVA = "0x15D2ACC", Offset = "0x15D2ACC", VA = "0x15D2ACC")]
		public bool UpdateSlicedFindPath(int maxIter, ref int doneIters)
		{
			return default(bool);
		}

		[Token(Token = "0x6001841")]
		[Address(RVA = "0x15D2F60", Offset = "0x15D2F60", VA = "0x15D2F60")]
		public bool FinalizeSlicedFindPath(int[] path, ref int pathCount, int maxPath)
		{
			return default(bool);
		}

		[Token(Token = "0x6001842")]
		[Address(RVA = "0x15D30B0", Offset = "0x15D30B0", VA = "0x15D30B0")]
		public bool FinalizedSlicedPathPartial(int[] existing, int existingSize, int[] path, ref int pathCount, int maxPath)
		{
			return default(bool);
		}

		[Token(Token = "0x6001843")]
		[Address(RVA = "0x15D32D0", Offset = "0x15D32D0", VA = "0x15D32D0")]
		public bool Raycast(NavPoint startPoint, SharpNav.Geometry.Vector3 endPos, ref float t, ref SharpNav.Geometry.Vector3 hitNormal, int[] path, ref int pathCount, int maxPath)
		{
			return default(bool);
		}

		[Token(Token = "0x6001844")]
		[Address(RVA = "0x15D3838", Offset = "0x15D3838", VA = "0x15D3838")]
		public bool FindLocalNeighbourhood(NavPoint centerPoint, float radius, int[] resultRef, int[] resultParent, ref int resultCount, int maxResult)
		{
			return default(bool);
		}

		[Token(Token = "0x6001845")]
		[Address(RVA = "0x15D3F10", Offset = "0x15D3F10", VA = "0x15D3F10")]
		public bool GetPolyWallSegments(int reference, LocalBoundary.Segment[] segmentVerts, int[] segmentRefs, ref int segmentCount, int maxSegments)
		{
			return default(bool);
		}

		[Token(Token = "0x6001846")]
		[Address(RVA = "0x15D458C", Offset = "0x15D458C", VA = "0x15D458C")]
		public void InsertInterval(SegInterval[] ints, ref int nints, int maxInts, int tmin, int tmax, int reference)
		{
		}

		[Token(Token = "0x6001847")]
		[Address(RVA = "0x15D1180", Offset = "0x15D1180", VA = "0x15D1180")]
		public bool GetEdgeMidPoint(int from, Poly fromPoly, MeshTile fromTile, int to, Poly toPoly, MeshTile toTile, ref SharpNav.Geometry.Vector3 mid)
		{
			return default(bool);
		}

		[Token(Token = "0x6001848")]
		[Address(RVA = "0x15D1CD0", Offset = "0x15D1CD0", VA = "0x15D1CD0")]
		public bool GetPortalPoints(int from, int to, ref SharpNav.Geometry.Vector3 left, ref SharpNav.Geometry.Vector3 right, ref PolygonType fromType, ref PolygonType toType)
		{
			return default(bool);
		}

		[Token(Token = "0x6001849")]
		[Address(RVA = "0x15D067C", Offset = "0x15D067C", VA = "0x15D067C")]
		public bool GetPortalPoints(int from, Poly fromPoly, MeshTile fromTile, int to, Poly toPoly, MeshTile toTile, ref SharpNav.Geometry.Vector3 left, ref SharpNav.Geometry.Vector3 right)
		{
			return default(bool);
		}

		[Token(Token = "0x600184A")]
		[Address(RVA = "0x15D46E0", Offset = "0x15D46E0", VA = "0x15D46E0")]
		public bool ClosestPointOnPoly(int reference, SharpNav.Geometry.Vector3 pos, ref SharpNav.Geometry.Vector3 closest)
		{
			return default(bool);
		}

		[Token(Token = "0x600184B")]
		[Address(RVA = "0x15D47D0", Offset = "0x15D47D0", VA = "0x15D47D0")]
		public bool ClosestPointOnPoly(int reference, SharpNav.Geometry.Vector3 pos, out SharpNav.Geometry.Vector3 closest, out bool posOverPoly)
		{
			return default(bool);
		}

		[Token(Token = "0x600184C")]
		[Address(RVA = "0x15D1A4C", Offset = "0x15D1A4C", VA = "0x15D1A4C")]
		public bool ClosestPointOnPolyBoundary(int reference, SharpNav.Geometry.Vector3 pos, ref SharpNav.Geometry.Vector3 closest)
		{
			return default(bool);
		}

		[Token(Token = "0x600184D")]
		[Address(RVA = "0x15D1ADC", Offset = "0x15D1ADC", VA = "0x15D1ADC")]
		public bool AppendVertex(SharpNav.Geometry.Vector3 pos, int flags, int reference, SharpNav.Geometry.Vector3[] straightPath, int[] straightPathFlags, int[] straightPathRefs, ref int straightPathCount, int maxStraightPath)
		{
			return default(bool);
		}

		[Token(Token = "0x600184E")]
		[Address(RVA = "0x15D1DB4", Offset = "0x15D1DB4", VA = "0x15D1DB4")]
		public bool AppendPortals(int startIdx, int endIdx, SharpNav.Geometry.Vector3 endPos, int[] path, SharpNav.Geometry.Vector3[] straightPath, int[] straightPathFlags, int[] straightPathRefs, ref int straightPathCount, int maxStraightPath, PathBuildFlags options)
		{
			return default(bool);
		}

		[Token(Token = "0x600184F")]
		[Address(RVA = "0x15CF8A8", Offset = "0x15CF8A8", VA = "0x15CF8A8")]
		public bool GetPolyHeight(int reference, SharpNav.Geometry.Vector3 pos, ref float height)
		{
			return default(bool);
		}

		[Token(Token = "0x6001850")]
		[Address(RVA = "0x15D5604", Offset = "0x15D5604", VA = "0x15D5604")]
		public NavPoint FindNearestPoly(SharpNav.Geometry.Vector3 center, SharpNav.Geometry.Vector3 extents)
		{
			return default(NavPoint);
		}

		[Token(Token = "0x6001851")]
		[Address(RVA = "0x15D5644", Offset = "0x15D5644", VA = "0x15D5644")]
		public void FindNearestPoly(ref SharpNav.Geometry.Vector3 center, ref SharpNav.Geometry.Vector3 extents, out NavPoint nearestPt)
		{
		}

		[Token(Token = "0x6001852")]
		[Address(RVA = "0x15D5918", Offset = "0x15D5918", VA = "0x15D5918")]
		public bool QueryPolygons(ref SharpNav.Geometry.Vector3 center, ref SharpNav.Geometry.Vector3 extent, List<int> polys)
		{
			return default(bool);
		}

		[Token(Token = "0x6001853")]
		[Address(RVA = "0x15D5BC4", Offset = "0x15D5BC4", VA = "0x15D5BC4")]
		public bool IsValidPolyRef(int reference)
		{
			return default(bool);
		}

		[Token(Token = "0x6001854")]
		[Address(RVA = "0x15D0AE0", Offset = "0x15D0AE0", VA = "0x15D0AE0")]
		public bool IsInOpenList(Node node)
		{
			return default(bool);
		}

		[Token(Token = "0x6001855")]
		[Address(RVA = "0x15D0AC4", Offset = "0x15D0AC4", VA = "0x15D0AC4")]
		public bool IsInClosedList(Node node)
		{
			return default(bool);
		}

		[Token(Token = "0x6001856")]
		[Address(RVA = "0x15D12BC", Offset = "0x15D12BC", VA = "0x15D12BC")]
		public void SetNodeFlagOpen(ref Node node)
		{
		}

		[Token(Token = "0x6001857")]
		[Address(RVA = "0x15D05B0", Offset = "0x15D05B0", VA = "0x15D05B0")]
		public void SetNodeFlagClosed(ref Node node)
		{
		}

		[Token(Token = "0x6001858")]
		[Address(RVA = "0x15D0AFC", Offset = "0x15D0AFC", VA = "0x15D0AFC")]
		public NodeFlags RemoveNodeFlagClosed(Node node)
		{
			return default(NodeFlags);
		}
	}
	[Token(Token = "0x2000362")]
	public class Node : IValueWithCost
	{
		[Token(Token = "0x4001543")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SharpNav.Geometry.Vector3 Pos;

		[Token(Token = "0x4001544")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float cost;

		[Token(Token = "0x4001545")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float total;

		[Token(Token = "0x4001546")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int ParentIdx;

		[Token(Token = "0x4001547")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public NodeFlags Flags;

		[Token(Token = "0x4001548")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int Id;

		[Token(Token = "0x1700028A")]
		public float Cost
		{
			[Token(Token = "0x6001859")]
			[Address(RVA = "0x15D5C00", Offset = "0x15D5C00", VA = "0x15D5C00", Slot = "4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x600185A")]
		[Address(RVA = "0x15D5C08", Offset = "0x15D5C08", VA = "0x15D5C08")]
		public Node()
		{
		}
	}
	[Token(Token = "0x2000363")]
	[Flags]
	public enum NodeFlags
	{
		[Token(Token = "0x400154A")]
		Open = 1,
		[Token(Token = "0x400154B")]
		Closed = 2
	}
	[Token(Token = "0x2000364")]
	public class NodePool
	{
		[Token(Token = "0x200084F")]
		private class IntNodeIdComparer : IEqualityComparer<int>
		{
			[Token(Token = "0x4002904")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int hashSize;

			[Token(Token = "0x6002FB9")]
			[Address(RVA = "0x15D5C18", Offset = "0x15D5C18", VA = "0x15D5C18")]
			public IntNodeIdComparer(int hashSize)
			{
			}

			[Token(Token = "0x6002FBA")]
			[Address(RVA = "0x15D5C44", Offset = "0x15D5C44", VA = "0x15D5C44", Slot = "4")]
			public bool Equals(int left, int right)
			{
				return default(bool);
			}

			[Token(Token = "0x6002FBB")]
			[Address(RVA = "0x15D5C50", Offset = "0x15D5C50", VA = "0x15D5C50", Slot = "5")]
			public int GetHashCode(int obj)
			{
				return default(int);
			}
		}

		[Token(Token = "0x400154C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private List<Node> nodes;

		[Token(Token = "0x400154D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Dictionary<int, Node> nodeDict;

		[Token(Token = "0x400154E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int maxNodes;

		[Token(Token = "0x600185B")]
		[Address(RVA = "0x15CF130", Offset = "0x15CF130", VA = "0x15CF130")]
		public NodePool(int maxNodes, int hashSize)
		{
		}

		[Token(Token = "0x600185C")]
		[Address(RVA = "0x15D042C", Offset = "0x15D042C", VA = "0x15D042C")]
		public void Clear()
		{
		}

		[Token(Token = "0x600185D")]
		[Address(RVA = "0x15D3250", Offset = "0x15D3250", VA = "0x15D3250")]
		public Node FindNode(int id)
		{
			return null;
		}

		[Token(Token = "0x600185E")]
		[Address(RVA = "0x15D049C", Offset = "0x15D049C", VA = "0x15D049C")]
		public Node GetNode(int id)
		{
			return null;
		}

		[Token(Token = "0x600185F")]
		[Address(RVA = "0x15D0B18", Offset = "0x15D0B18", VA = "0x15D0B18")]
		public int GetNodeIdx(Node node)
		{
			return default(int);
		}

		[Token(Token = "0x6001860")]
		[Address(RVA = "0x15D05EC", Offset = "0x15D05EC", VA = "0x15D05EC")]
		public Node GetNodeAtIdx(int idx)
		{
			return null;
		}
	}
	[Token(Token = "0x2000365")]
	public struct PolyBounds : IEquatable<PolyBounds>
	{
		[Token(Token = "0x400154F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public PolyVertex Min;

		[Token(Token = "0x4001550")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public PolyVertex Max;

		[Token(Token = "0x6001861")]
		[Address(RVA = "0x99C8F0", Offset = "0x99C8F0", VA = "0x99C8F0")]
		public PolyBounds(PolyVertex min, PolyVertex max)
		{
		}

		[Token(Token = "0x6001862")]
		[Address(RVA = "0x15D6060", Offset = "0x15D6060", VA = "0x15D6060")]
		public static bool Overlapping(ref PolyBounds a, ref PolyBounds b)
		{
			return default(bool);
		}

		[Token(Token = "0x6001863")]
		[Address(RVA = "0x15D60CC", Offset = "0x15D60CC", VA = "0x15D60CC")]
		public static bool operator ==(PolyBounds left, PolyBounds right)
		{
			return default(bool);
		}

		[Token(Token = "0x6001864")]
		[Address(RVA = "0x15D6160", Offset = "0x15D6160", VA = "0x15D6160")]
		public static bool operator !=(PolyBounds left, PolyBounds right)
		{
			return default(bool);
		}

		[Token(Token = "0x6001865")]
		[Address(RVA = "0x99C904", Offset = "0x99C904", VA = "0x99C904", Slot = "4")]
		public bool Equals(PolyBounds other)
		{
			return default(bool);
		}

		[Token(Token = "0x6001866")]
		[Address(RVA = "0x99C93C", Offset = "0x99C93C", VA = "0x99C93C", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6001867")]
		[Address(RVA = "0x99C944", Offset = "0x99C944", VA = "0x99C944", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x6001868")]
		[Address(RVA = "0x99C980", Offset = "0x99C980", VA = "0x99C980", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x2000366")]
	public class PolyMesh
	{
		[Token(Token = "0x2000850")]
		private struct Triangle
		{
			[Token(Token = "0x4002905")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int Index0;

			[Token(Token = "0x4002906")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public int Index1;

			[Token(Token = "0x4002907")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int Index2;
		}

		[Token(Token = "0x2000851")]
		private struct AdjacencyEdge
		{
			[Token(Token = "0x4002908")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int Vert0;

			[Token(Token = "0x4002909")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public int Vert1;

			[Token(Token = "0x400290A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int PolyEdge0;

			[Token(Token = "0x400290B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public int PolyEdge1;

			[Token(Token = "0x400290C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int Poly0;

			[Token(Token = "0x400290D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public int Poly1;
		}

		[Token(Token = "0x2000852")]
		private struct Edge
		{
			[Token(Token = "0x400290E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int Vert0;

			[Token(Token = "0x400290F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public int Vert1;

			[Token(Token = "0x4002910")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public RegionId Region;

			[Token(Token = "0x4002911")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public Area Area;

			[Token(Token = "0x6002FBC")]
			[Address(RVA = "0x97CC54", Offset = "0x97CC54", VA = "0x97CC54")]
			public Edge(int vert0, int vert1, RegionId region, Area area)
			{
			}
		}

		[Token(Token = "0x2000853")]
		public class Polygon
		{
			[Token(Token = "0x4002912")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int[] vertices;

			[Token(Token = "0x4002913")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private int[] neighborEdges;

			[Token(Token = "0x4002914")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private Area area;

			[Token(Token = "0x4002915")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			private RegionId regionId;

			[Token(Token = "0x4002916")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int flags;

			[Token(Token = "0x17000681")]
			public int[] Vertices
			{
				[Token(Token = "0x6002FBE")]
				[Address(RVA = "0xD33CE0", Offset = "0xD33CE0", VA = "0xD33CE0")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000682")]
			public int[] NeighborEdges
			{
				[Token(Token = "0x6002FBF")]
				[Address(RVA = "0xD33CE8", Offset = "0xD33CE8", VA = "0xD33CE8")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000683")]
			public Area Area
			{
				[Token(Token = "0x6002FC0")]
				[Address(RVA = "0xD33CF0", Offset = "0xD33CF0", VA = "0xD33CF0")]
				get
				{
					return default(Area);
				}
				[Token(Token = "0x6002FC1")]
				[Address(RVA = "0xD33CF8", Offset = "0xD33CF8", VA = "0xD33CF8")]
				set
				{
				}
			}

			[Token(Token = "0x17000684")]
			public RegionId RegionId
			{
				[Token(Token = "0x6002FC2")]
				[Address(RVA = "0xD33D00", Offset = "0xD33D00", VA = "0xD33D00")]
				get
				{
					return default(RegionId);
				}
				[Token(Token = "0x6002FC3")]
				[Address(RVA = "0xD33D08", Offset = "0xD33D08", VA = "0xD33D08")]
				set
				{
				}
			}

			[Token(Token = "0x17000685")]
			public int Flags
			{
				[Token(Token = "0x6002FC4")]
				[Address(RVA = "0xD33D10", Offset = "0xD33D10", VA = "0xD33D10")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x6002FC5")]
				[Address(RVA = "0xD33D18", Offset = "0xD33D18", VA = "0xD33D18")]
				set
				{
				}
			}

			[Token(Token = "0x17000686")]
			public int VertexCount
			{
				[Token(Token = "0x6002FC6")]
				[Address(RVA = "0xD33D20", Offset = "0xD33D20", VA = "0xD33D20")]
				get
				{
					return default(int);
				}
			}

			[Token(Token = "0x6002FBD")]
			[Address(RVA = "0xD33BD8", Offset = "0xD33BD8", VA = "0xD33BD8")]
			public Polygon(int numVertsPerPoly, Area area, RegionId regionId, int flags)
			{
			}

			[Token(Token = "0x6002FC7")]
			[Address(RVA = "0xD33D80", Offset = "0xD33D80", VA = "0xD33D80")]
			public bool ContainsVertex(int vertex)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4001551")]
		public const int NullId = -1;

		[Token(Token = "0x4001552")]
		private const int DiagonalFlag = int.MinValue;

		[Token(Token = "0x4001553")]
		private const int NeighborEdgeFlag = int.MinValue;

		[Token(Token = "0x4001554")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private PolyVertex[] vertices;

		[Token(Token = "0x4001555")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Polygon[] polygons;

		[Token(Token = "0x4001556")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int numVertsPerPoly;

		[Token(Token = "0x4001557")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private BBox3 bounds;

		[Token(Token = "0x4001558")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float cellSize;

		[Token(Token = "0x4001559")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float cellHeight;

		[Token(Token = "0x400155A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private int borderSize;

		[Token(Token = "0x1700028B")]
		public int VertCount
		{
			[Token(Token = "0x600186B")]
			[Address(RVA = "0x15CEC88", Offset = "0x15CEC88", VA = "0x15CEC88")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700028C")]
		public int PolyCount
		{
			[Token(Token = "0x600186C")]
			[Address(RVA = "0x15CECA4", Offset = "0x15CECA4", VA = "0x15CECA4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700028D")]
		public int NumVertsPerPoly
		{
			[Token(Token = "0x600186D")]
			[Address(RVA = "0x15D99C0", Offset = "0x15D99C0", VA = "0x15D99C0")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700028E")]
		public PolyVertex[] Verts
		{
			[Token(Token = "0x600186E")]
			[Address(RVA = "0x15D99C8", Offset = "0x15D99C8", VA = "0x15D99C8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700028F")]
		public Polygon[] Polys
		{
			[Token(Token = "0x600186F")]
			[Address(RVA = "0x15D99D0", Offset = "0x15D99D0", VA = "0x15D99D0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000290")]
		public BBox3 Bounds
		{
			[Token(Token = "0x6001870")]
			[Address(RVA = "0x15D99D8", Offset = "0x15D99D8", VA = "0x15D99D8")]
			get
			{
				return default(BBox3);
			}
		}

		[Token(Token = "0x17000291")]
		public float CellSize
		{
			[Token(Token = "0x6001871")]
			[Address(RVA = "0x15D99EC", Offset = "0x15D99EC", VA = "0x15D99EC")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000292")]
		public float CellHeight
		{
			[Token(Token = "0x6001872")]
			[Address(RVA = "0x15D99F4", Offset = "0x15D99F4", VA = "0x15D99F4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000293")]
		public int BorderSize
		{
			[Token(Token = "0x6001873")]
			[Address(RVA = "0x15D99FC", Offset = "0x15D99FC", VA = "0x15D99FC")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6001869")]
		[Address(RVA = "0x15CD458", Offset = "0x15CD458", VA = "0x15CD458")]
		public PolyMesh(ContourSet contSet, NavMeshGenerationSettings settings)
		{
		}

		[Token(Token = "0x600186A")]
		[Address(RVA = "0x15D6464", Offset = "0x15D6464", VA = "0x15D6464")]
		public PolyMesh(ContourSet contSet, float cellSize, float cellHeight, int borderSize, int numVertsPerPoly)
		{
		}

		[Token(Token = "0x6001874")]
		[Address(RVA = "0x15CED60", Offset = "0x15CED60", VA = "0x15CED60")]
		public static bool IsBoundaryEdge(int flag)
		{
			return default(bool);
		}

		[Token(Token = "0x6001875")]
		[Address(RVA = "0x15D9A04", Offset = "0x15D9A04", VA = "0x15D9A04")]
		public static bool IsInteriorEdge(int flag)
		{
			return default(bool);
		}

		[Token(Token = "0x6001876")]
		[Address(RVA = "0x15D9A10", Offset = "0x15D9A10", VA = "0x15D9A10")]
		public static bool HasDiagonalFlag(int index)
		{
			return default(bool);
		}

		[Token(Token = "0x6001877")]
		[Address(RVA = "0x15D9A18", Offset = "0x15D9A18", VA = "0x15D9A18")]
		public static bool Diagonal(int i, int j, PolyVertex[] verts, int[] indices)
		{
			return default(bool);
		}

		[Token(Token = "0x6001878")]
		[Address(RVA = "0x15D9A74", Offset = "0x15D9A74", VA = "0x15D9A74")]
		public static bool InCone(int i, int j, PolyVertex[] verts, int[] indices)
		{
			return default(bool);
		}

		[Token(Token = "0x6001879")]
		[Address(RVA = "0x15D9C84", Offset = "0x15D9C84", VA = "0x15D9C84")]
		public static bool Diagonalie(int i, int j, PolyVertex[] verts, int[] indices)
		{
			return default(bool);
		}

		[Token(Token = "0x600187A")]
		[Address(RVA = "0x15D9ED8", Offset = "0x15D9ED8", VA = "0x15D9ED8")]
		private static int Prev(int i, int n)
		{
			return default(int);
		}

		[Token(Token = "0x600187B")]
		[Address(RVA = "0x15D9EC8", Offset = "0x15D9EC8", VA = "0x15D9EC8")]
		private static int Next(int i, int n)
		{
			return default(int);
		}

		[Token(Token = "0x600187C")]
		[Address(RVA = "0x15D9EEC", Offset = "0x15D9EEC", VA = "0x15D9EEC")]
		private static bool ULeft(PolyVertex a, PolyVertex b, PolyVertex c)
		{
			return default(bool);
		}

		[Token(Token = "0x600187D")]
		[Address(RVA = "0x15D9F10", Offset = "0x15D9F10", VA = "0x15D9F10")]
		private static void SetDiagonalFlag(ref int index)
		{
		}

		[Token(Token = "0x600187E")]
		[Address(RVA = "0x15D7C68", Offset = "0x15D7C68", VA = "0x15D7C68")]
		private static int RemoveDiagonalFlag(int index)
		{
			return default(int);
		}

		[Token(Token = "0x600187F")]
		[Address(RVA = "0x15D9F20", Offset = "0x15D9F20", VA = "0x15D9F20")]
		private static void RemoveDiagonalFlag(ref int index)
		{
		}

		[Token(Token = "0x6001880")]
		[Address(RVA = "0x15D7690", Offset = "0x15D7690", VA = "0x15D7690")]
		private static int Triangulate(PolyVertex[] verts, int[] indices, Triangle[] tris)
		{
			return default(int);
		}

		[Token(Token = "0x6001881")]
		[Address(RVA = "0x15D9F8C", Offset = "0x15D9F8C", VA = "0x15D9F8C")]
		private static bool IsInConeLoose(int i, int j, PolyVertex[] verts, int[] indices)
		{
			return default(bool);
		}

		[Token(Token = "0x6001882")]
		[Address(RVA = "0x15D9F30", Offset = "0x15D9F30", VA = "0x15D9F30")]
		private static bool IsDiagonalLoose(int i, int j, PolyVertex[] verts, int[] indices)
		{
			return default(bool);
		}

		[Token(Token = "0x6001883")]
		[Address(RVA = "0x15DA15C", Offset = "0x15DA15C", VA = "0x15DA15C")]
		private static bool IsDiagonalieLoose(int i, int j, PolyVertex[] verts, int[] indices)
		{
			return default(bool);
		}

		[Token(Token = "0x6001884")]
		[Address(RVA = "0x15DA480", Offset = "0x15DA480", VA = "0x15DA480")]
		private static bool xorb(bool x, bool y)
		{
			return default(bool);
		}

		[Token(Token = "0x6001885")]
		[Address(RVA = "0x15DA384", Offset = "0x15DA384", VA = "0x15DA384")]
		private static bool IsIntersectProp(ref PolyVertex a, ref PolyVertex b, ref PolyVertex c, ref PolyVertex d)
		{
			return default(bool);
		}

		[Token(Token = "0x6001886")]
		[Address(RVA = "0x15D7B8C", Offset = "0x15D7B8C", VA = "0x15D7B8C")]
		private static int AddVertex(Dictionary<PolyVertex, int> vertDict, PolyVertex v, List<PolyVertex> verts)
		{
			return default(int);
		}

		[Token(Token = "0x6001887")]
		[Address(RVA = "0x15D7C70", Offset = "0x15D7C70", VA = "0x15D7C70")]
		private static int GetPolyMergeValue(List<Polygon> polys, int polyA, int polyB, List<PolyVertex> verts, out int edgeA, out int edgeB)
		{
			return default(int);
		}

		[Token(Token = "0x6001888")]
		[Address(RVA = "0x15D872C", Offset = "0x15D872C", VA = "0x15D872C")]
		private static bool CanRemoveVertex(List<Polygon> polys, int remove)
		{
			return default(bool);
		}

		[Token(Token = "0x6001889")]
		[Address(RVA = "0x15D9550", Offset = "0x15D9550", VA = "0x15D9550")]
		private static void BuildMeshAdjacency(List<PolyVertex> vertices, List<Polygon> polys, int numVertsPerPoly)
		{
		}

		[Token(Token = "0x600188A")]
		[Address(RVA = "0x15D8414", Offset = "0x15D8414", VA = "0x15D8414")]
		private void MergePolys(List<Polygon> polys, int polyA, int polyB, int edgeA, int edgeB)
		{
		}

		[Token(Token = "0x600188B")]
		[Address(RVA = "0x15D8A80", Offset = "0x15D8A80", VA = "0x15D8A80")]
		private void RemoveVertex(List<PolyVertex> verts, List<Polygon> polys, int vertex)
		{
		}
	}
	[Token(Token = "0x2000367")]
	public class PolyMeshDetail
	{
		[Token(Token = "0x2000854")]
		private enum EdgeValues
		{
			[Token(Token = "0x4002918")]
			Undefined = -1,
			[Token(Token = "0x4002919")]
			Hull = -2
		}

		[Token(Token = "0x2000855")]
		public struct MeshData
		{
			[Token(Token = "0x400291A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int VertexIndex;

			[Token(Token = "0x400291B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public int VertexCount;

			[Token(Token = "0x400291C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int TriangleIndex;

			[Token(Token = "0x400291D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public int TriangleCount;
		}

		[Token(Token = "0x2000856")]
		[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x8B8E38", Offset = "0x8B8E38")]
		public struct TriangleData
		{
			[Token(Token = "0x400291E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int VertexHash0;

			[Token(Token = "0x400291F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public int VertexHash1;

			[Token(Token = "0x4002920")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int VertexHash2;

			[Token(Token = "0x4002921")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public int Flags;

			[Token(Token = "0x17000687")]
			public int Item
			{
				[Token(Token = "0x6002FCB")]
				[Address(RVA = "0x97CD3C", Offset = "0x97CD3C", VA = "0x97CD3C")]
				get
				{
					return default(int);
				}
			}

			[Token(Token = "0x6002FC8")]
			[Address(RVA = "0x97CCD8", Offset = "0x97CCD8", VA = "0x97CCD8")]
			public TriangleData(int hash0, int hash1, int hash2)
			{
			}

			[Token(Token = "0x6002FC9")]
			[Address(RVA = "0x97CCE4", Offset = "0x97CCE4", VA = "0x97CCE4")]
			public TriangleData(int hash0, int hash1, int hash2, int flags)
			{
			}

			[Token(Token = "0x6002FCA")]
			[Address(RVA = "0x97CCF0", Offset = "0x97CCF0", VA = "0x97CCF0")]
			public TriangleData(TriangleData data, List<SharpNav.Geometry.Vector3> verts, SharpNav.Geometry.Vector3[] vpoly, int npoly)
			{
			}

			[Token(Token = "0x6002FCC")]
			[Address(RVA = "0xD38270", Offset = "0xD38270", VA = "0xD38270")]
			public static int GetTriFlags(ref TriangleData t, List<SharpNav.Geometry.Vector3> verts, SharpNav.Geometry.Vector3[] vpoly, int npoly)
			{
				return default(int);
			}
		}

		[Token(Token = "0x2000857")]
		private struct EdgeInfo
		{
			[Token(Token = "0x4002922")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int EndPt0;

			[Token(Token = "0x4002923")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public int EndPt1;

			[Token(Token = "0x4002924")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int RightFace;

			[Token(Token = "0x4002925")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public int LeftFace;

			[Token(Token = "0x6002FCD")]
			[Address(RVA = "0x97CC64", Offset = "0x97CC64", VA = "0x97CC64")]
			public EdgeInfo(int endPt0, int endPt1, int rightFace, int leftFace)
			{
			}

			[Token(Token = "0x6002FCE")]
			[Address(RVA = "0xD380CC", Offset = "0xD380CC", VA = "0xD380CC")]
			public static void UpdateLeftFace(ref EdgeInfo e, int s, int t, int f)
			{
			}
		}

		[Token(Token = "0x2000858")]
		private struct SamplingData
		{
			[Token(Token = "0x4002926")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int X;

			[Token(Token = "0x4002927")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public int Y;

			[Token(Token = "0x4002928")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int Z;

			[Token(Token = "0x4002929")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public bool IsSampled;

			[Token(Token = "0x6002FCF")]
			[Address(RVA = "0x97CCC4", Offset = "0x97CCC4", VA = "0x97CCC4")]
			public SamplingData(int x, int y, int z, bool isSampled)
			{
			}
		}

		[Token(Token = "0x400155B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly int[] VertexOffset;

		[Token(Token = "0x400155C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private MeshData[] meshes;

		[Token(Token = "0x400155D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private SharpNav.Geometry.Vector3[] verts;

		[Token(Token = "0x400155E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private TriangleData[] tris;

		[Token(Token = "0x17000294")]
		public int MeshCount
		{
			[Token(Token = "0x600188E")]
			[Address(RVA = "0xD35A08", Offset = "0xD35A08", VA = "0xD35A08")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000295")]
		public int VertCount
		{
			[Token(Token = "0x600188F")]
			[Address(RVA = "0xD35A20", Offset = "0xD35A20", VA = "0xD35A20")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000296")]
		public int TrisCount
		{
			[Token(Token = "0x6001890")]
			[Address(RVA = "0xD35A38", Offset = "0xD35A38", VA = "0xD35A38")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000297")]
		public MeshData[] Meshes
		{
			[Token(Token = "0x6001891")]
			[Address(RVA = "0xD35A50", Offset = "0xD35A50", VA = "0xD35A50")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000298")]
		public SharpNav.Geometry.Vector3[] Verts
		{
			[Token(Token = "0x6001892")]
			[Address(RVA = "0xD35A58", Offset = "0xD35A58", VA = "0xD35A58")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000299")]
		public TriangleData[] Tris
		{
			[Token(Token = "0x6001893")]
			[Address(RVA = "0xD35A60", Offset = "0xD35A60", VA = "0xD35A60")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600188C")]
		[Address(RVA = "0xD33DFC", Offset = "0xD33DFC", VA = "0xD33DFC")]
		public PolyMeshDetail(PolyMesh mesh, CompactHeightfield compactField, NavMeshGenerationSettings settings)
		{
		}

		[Token(Token = "0x600188D")]
		[Address(RVA = "0xD33E1C", Offset = "0xD33E1C", VA = "0xD33E1C")]
		public PolyMeshDetail(PolyMesh mesh, CompactHeightfield compactField, float sampleDist, float sampleMaxError)
		{
		}

		[Token(Token = "0x6001894")]
		[Address(RVA = "0xD35A68", Offset = "0xD35A68", VA = "0xD35A68")]
		private static float GetJitterX(int i)
		{
			return default(float);
		}

		[Token(Token = "0x6001895")]
		[Address(RVA = "0xD35A98", Offset = "0xD35A98", VA = "0xD35A98")]
		private static float GetJitterY(int i)
		{
			return default(float);
		}

		[Token(Token = "0x6001896")]
		[Address(RVA = "0xD35AC8", Offset = "0xD35AC8", VA = "0xD35AC8")]
		private static int GetEdgeFlags(SharpNav.Geometry.Vector3 va, SharpNav.Geometry.Vector3 vb, SharpNav.Geometry.Vector3[] vpoly, int npoly)
		{
			return default(int);
		}

		[Token(Token = "0x6001897")]
		[Address(RVA = "0xD346D8", Offset = "0xD346D8", VA = "0xD346D8")]
		private void GetHeightData(CompactHeightfield compactField, PolyMesh.Polygon poly, int polyCount, PolyVertex[] verts, int borderSize, HeightPatch hp)
		{
		}

		[Token(Token = "0x6001898")]
		[Address(RVA = "0xD35CFC", Offset = "0xD35CFC", VA = "0xD35CFC")]
		private void GetHeightDataSeedsFromVertices(CompactHeightfield compactField, PolyMesh.Polygon poly, int polyCount, PolyVertex[] verts, int borderSize, HeightPatch hp, List<CompactSpanReference> stack)
		{
		}

		[Token(Token = "0x6001899")]
		[Address(RVA = "0xD364CC", Offset = "0xD364CC", VA = "0xD364CC")]
		private static float PolyMinExtent(SharpNav.Geometry.Vector3[] verts)
		{
			return default(float);
		}

		[Token(Token = "0x600189A")]
		[Address(RVA = "0xD34D1C", Offset = "0xD34D1C", VA = "0xD34D1C")]
		private void BuildPolyDetail(SharpNav.Geometry.Vector3[] polyMeshVerts, int numMeshVerts, float sampleDist, float sampleMaxError, CompactHeightfield compactField, HeightPatch hp, List<SharpNav.Geometry.Vector3> verts, List<TriangleData> tris, List<EdgeInfo> edges, List<SamplingData> samples)
		{
		}

		[Token(Token = "0x600189B")]
		[Address(RVA = "0xD366E4", Offset = "0xD366E4", VA = "0xD366E4")]
		private int GetHeight(SharpNav.Geometry.Vector3 loc, float invCellSize, float cellHeight, HeightPatch hp)
		{
			return default(int);
		}

		[Token(Token = "0x600189C")]
		[Address(RVA = "0xD3758C", Offset = "0xD3758C", VA = "0xD3758C")]
		private static int Prev(int i, int n)
		{
			return default(int);
		}

		[Token(Token = "0x600189D")]
		[Address(RVA = "0xD375A0", Offset = "0xD375A0", VA = "0xD375A0")]
		private static int Next(int i, int n)
		{
			return default(int);
		}

		[Token(Token = "0x600189E")]
		[Address(RVA = "0xD36908", Offset = "0xD36908", VA = "0xD36908")]
		private void TriangulateHull(List<SharpNav.Geometry.Vector3> pts, List<int> hull, List<TriangleData> tris)
		{
		}

		[Token(Token = "0x600189F")]
		[Address(RVA = "0xD37158", Offset = "0xD37158", VA = "0xD37158")]
		private void DelaunayHull(List<SharpNav.Geometry.Vector3> pts, List<int> hull, List<TriangleData> tris, List<EdgeInfo> edges)
		{
		}

		[Token(Token = "0x60018A0")]
		[Address(RVA = "0xD37668", Offset = "0xD37668", VA = "0xD37668")]
		private void CompleteFacet(List<SharpNav.Geometry.Vector3> pts, List<EdgeInfo> edges, ref int nfaces, int curEdge)
		{
		}

		[Token(Token = "0x60018A1")]
		[Address(RVA = "0xD375BC", Offset = "0xD375BC", VA = "0xD375BC")]
		private int AddEdge(List<EdgeInfo> edges, int s, int t, int leftFace, int rightFace)
		{
			return default(int);
		}

		[Token(Token = "0x60018A2")]
		[Address(RVA = "0xD38120", Offset = "0xD38120", VA = "0xD38120")]
		private int FindEdge(List<EdgeInfo> edges, int s, int t)
		{
			return default(int);
		}

		[Token(Token = "0x60018A3")]
		[Address(RVA = "0xD37EB8", Offset = "0xD37EB8", VA = "0xD37EB8")]
		private bool OverlapEdges(List<SharpNav.Geometry.Vector3> pts, List<EdgeInfo> edges, int s1, int t1)
		{
			return default(bool);
		}

		[Token(Token = "0x60018A4")]
		[Address(RVA = "0xD37CD0", Offset = "0xD37CD0", VA = "0xD37CD0")]
		private bool CircumCircle(SharpNav.Geometry.Vector3 p1, SharpNav.Geometry.Vector3 p2, SharpNav.Geometry.Vector3 p3, ref SharpNav.Geometry.Vector3 c, out float r)
		{
			return default(bool);
		}

		[Token(Token = "0x60018A5")]
		[Address(RVA = "0xD36F70", Offset = "0xD36F70", VA = "0xD36F70")]
		private float DistanceToTriMesh(SharpNav.Geometry.Vector3 p, List<SharpNav.Geometry.Vector3> verts, List<TriangleData> tris)
		{
			return default(float);
		}
	}
	[Token(Token = "0x2000368")]
	public struct PolyVertex : IEquatable<PolyVertex>
	{
		[Token(Token = "0x2000859")]
		internal class RoughYEqualityComparer : IEqualityComparer<PolyVertex>
		{
			[Token(Token = "0x400292A")]
			private const int HashConstX = -1918454973;

			[Token(Token = "0x400292B")]
			private const int HashConstZ = -887442657;

			[Token(Token = "0x400292C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int epsilonY;

			[Token(Token = "0x6002FD0")]
			[Address(RVA = "0xD38CC8", Offset = "0xD38CC8", VA = "0xD38CC8")]
			public RoughYEqualityComparer(int epsilonY)
			{
			}

			[Token(Token = "0x6002FD1")]
			[Address(RVA = "0xD38CF4", Offset = "0xD38CF4", VA = "0xD38CF4", Slot = "4")]
			public bool Equals(PolyVertex left, PolyVertex right)
			{
				return default(bool);
			}

			[Token(Token = "0x6002FD2")]
			[Address(RVA = "0xD38DAC", Offset = "0xD38DAC", VA = "0xD38DAC", Slot = "5")]
			public int GetHashCode(PolyVertex obj)
			{
				return default(int);
			}
		}

		[Token(Token = "0x400155F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int X;

		[Token(Token = "0x4001560")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int Y;

		[Token(Token = "0x4001561")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int Z;

		[Token(Token = "0x60018A7")]
		[Address(RVA = "0x97CD64", Offset = "0x97CD64", VA = "0x97CD64")]
		public PolyVertex(int x, int y, int z)
		{
		}

		[Token(Token = "0x60018A8")]
		[Address(RVA = "0xD384BC", Offset = "0xD384BC", VA = "0xD384BC")]
		public static PolyVertex ComponentMin(PolyVertex a, PolyVertex b)
		{
			return default(PolyVertex);
		}

		[Token(Token = "0x60018A9")]
		[Address(RVA = "0xD384E8", Offset = "0xD384E8", VA = "0xD384E8")]
		public static void ComponentMin(ref PolyVertex a, ref PolyVertex b, out PolyVertex result)
		{
		}

		[Token(Token = "0x60018AA")]
		[Address(RVA = "0xD38528", Offset = "0xD38528", VA = "0xD38528")]
		public static PolyVertex ComponentMax(PolyVertex a, PolyVertex b)
		{
			return default(PolyVertex);
		}

		[Token(Token = "0x60018AB")]
		[Address(RVA = "0xD38554", Offset = "0xD38554", VA = "0xD38554")]
		public static void ComponentMax(ref PolyVertex a, ref PolyVertex b, out PolyVertex result)
		{
		}

		[Token(Token = "0x60018AC")]
		[Address(RVA = "0xD38594", Offset = "0xD38594", VA = "0xD38594")]
		public static bool IsLeft(ref PolyVertex a, ref PolyVertex b, ref PolyVertex c)
		{
			return default(bool);
		}

		[Token(Token = "0x60018AD")]
		[Address(RVA = "0xD3860C", Offset = "0xD3860C", VA = "0xD3860C")]
		public static bool IsLeftOn(ref PolyVertex a, ref PolyVertex b, ref PolyVertex c)
		{
			return default(bool);
		}

		[Token(Token = "0x60018AE")]
		[Address(RVA = "0xD3864C", Offset = "0xD3864C", VA = "0xD3864C")]
		public static bool Equal2D(ref PolyVertex a, ref PolyVertex b)
		{
			return default(bool);
		}

		[Token(Token = "0x60018AF")]
		[Address(RVA = "0xD38678", Offset = "0xD38678", VA = "0xD38678")]
		public static bool Intersect(ref PolyVertex a, ref PolyVertex b, ref PolyVertex c, ref PolyVertex d)
		{
			return default(bool);
		}

		[Token(Token = "0x60018B0")]
		[Address(RVA = "0xD3870C", Offset = "0xD3870C", VA = "0xD3870C")]
		public static bool IntersectProp(ref PolyVertex a, ref PolyVertex b, ref PolyVertex c, ref PolyVertex d)
		{
			return default(bool);
		}

		[Token(Token = "0x60018B1")]
		[Address(RVA = "0xD387B8", Offset = "0xD387B8", VA = "0xD387B8")]
		public static bool IsBetween(ref PolyVertex a, ref PolyVertex b, ref PolyVertex c)
		{
			return default(bool);
		}

		[Token(Token = "0x60018B2")]
		[Address(RVA = "0xD38858", Offset = "0xD38858", VA = "0xD38858")]
		public static bool IsCollinear(ref PolyVertex a, ref PolyVertex b, ref PolyVertex c)
		{
			return default(bool);
		}

		[Token(Token = "0x60018B3")]
		[Address(RVA = "0xD385D0", Offset = "0xD385D0", VA = "0xD385D0")]
		public static void Area2D(ref PolyVertex a, ref PolyVertex b, ref PolyVertex c, out int area)
		{
		}

		[Token(Token = "0x60018B4")]
		[Address(RVA = "0xD38894", Offset = "0xD38894", VA = "0xD38894")]
		public static void Area2D(ref ContourVertex a, ref ContourVertex b, ref ContourVertex c, out int area)
		{
		}

		[Token(Token = "0x60018B5")]
		[Address(RVA = "0xD388D0", Offset = "0xD388D0", VA = "0xD388D0")]
		public static bool operator ==(PolyVertex left, PolyVertex right)
		{
			return default(bool);
		}

		[Token(Token = "0x60018B6")]
		[Address(RVA = "0xD38934", Offset = "0xD38934", VA = "0xD38934")]
		public static bool operator !=(PolyVertex left, PolyVertex right)
		{
			return default(bool);
		}

		[Token(Token = "0x60018B7")]
		[Address(RVA = "0x97CD70", Offset = "0x97CD70", VA = "0x97CD70", Slot = "4")]
		public bool Equals(PolyVertex other)
		{
			return default(bool);
		}

		[Token(Token = "0x60018B8")]
		[Address(RVA = "0x97CDA4", Offset = "0x97CDA4", VA = "0x97CDA4", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x60018B9")]
		[Address(RVA = "0x97CDAC", Offset = "0x97CDAC", VA = "0x97CDAC", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x60018BA")]
		[Address(RVA = "0x97CDB4", Offset = "0x97CDB4", VA = "0x97CDB4", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x2000369")]
	[Flags]
	public enum RegionFlags
	{
		[Token(Token = "0x4001563")]
		Border = 0x20000000,
		[Token(Token = "0x4001564")]
		VertexBorder = 0x40000000,
		[Token(Token = "0x4001565")]
		AreaBorder = int.MinValue
	}
	[Serializable]
	[Token(Token = "0x200036A")]
	public struct RegionId : IEquatable<RegionId>, IEquatable<int>
	{
		[Token(Token = "0x4001566")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly RegionId Null;

		[Token(Token = "0x4001567")]
		public const int MaskId = 536870911;

		[Token(Token = "0x4001568")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int bits;

		[Token(Token = "0x1700029A")]
		public int Id
		{
			[Token(Token = "0x60018BD")]
			[Address(RVA = "0x97CDD0", Offset = "0x97CDD0", VA = "0x97CDD0")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700029B")]
		public RegionFlags Flags
		{
			[Token(Token = "0x60018BE")]
			[Address(RVA = "0x97CDDC", Offset = "0x97CDDC", VA = "0x97CDDC")]
			get
			{
				return default(RegionFlags);
			}
		}

		[Token(Token = "0x1700029C")]
		public bool IsNull
		{
			[Token(Token = "0x60018BF")]
			[Address(RVA = "0x97CDE8", Offset = "0x97CDE8", VA = "0x97CDE8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60018BB")]
		[Address(RVA = "0x97CDBC", Offset = "0x97CDBC", VA = "0x97CDBC")]
		public RegionId(int id)
		{
		}

		[Token(Token = "0x60018BC")]
		[Address(RVA = "0x97CDC8", Offset = "0x97CDC8", VA = "0x97CDC8")]
		public RegionId(int id, RegionFlags flags)
		{
		}

		[Token(Token = "0x60018C0")]
		[Address(RVA = "0xD39AF0", Offset = "0xD39AF0", VA = "0xD39AF0")]
		public static RegionId FromRawBits(int bits)
		{
			return default(RegionId);
		}

		[Token(Token = "0x60018C1")]
		[Address(RVA = "0xD39AF8", Offset = "0xD39AF8", VA = "0xD39AF8")]
		public static RegionId WithFlags(RegionId region, RegionFlags flags)
		{
			return default(RegionId);
		}

		[Token(Token = "0x60018C2")]
		[Address(RVA = "0xD39BC4", Offset = "0xD39BC4", VA = "0xD39BC4")]
		public static RegionId WithoutFlags(RegionId region)
		{
			return default(RegionId);
		}

		[Token(Token = "0x60018C3")]
		[Address(RVA = "0xD39BF4", Offset = "0xD39BF4", VA = "0xD39BF4")]
		public static RegionId WithoutFlags(RegionId region, RegionFlags flags)
		{
			return default(RegionId);
		}

		[Token(Token = "0x60018C4")]
		[Address(RVA = "0xD38F94", Offset = "0xD38F94", VA = "0xD38F94")]
		public static bool HasFlags(RegionId region, RegionFlags flags)
		{
			return default(bool);
		}

		[Token(Token = "0x60018C5")]
		[Address(RVA = "0xD399B4", Offset = "0xD399B4", VA = "0xD399B4")]
		public static bool operator ==(RegionId left, int right)
		{
			return default(bool);
		}

		[Token(Token = "0x60018C6")]
		[Address(RVA = "0xD39CFC", Offset = "0xD39CFC", VA = "0xD39CFC")]
		public static bool operator !=(RegionId left, int right)
		{
			return default(bool);
		}

		[Token(Token = "0x60018C7")]
		[Address(RVA = "0xD35C20", Offset = "0xD35C20", VA = "0xD35C20")]
		public static bool operator ==(RegionId left, RegionId right)
		{
			return default(bool);
		}

		[Token(Token = "0x60018C8")]
		[Address(RVA = "0xD35C58", Offset = "0xD35C58", VA = "0xD35C58")]
		public static bool operator !=(RegionId left, RegionId right)
		{
			return default(bool);
		}

		[Token(Token = "0x60018C9")]
		[Address(RVA = "0xD39DDC", Offset = "0xD39DDC", VA = "0xD39DDC")]
		public static explicit operator int(RegionId id)
		{
			return default(int);
		}

		[Token(Token = "0x60018CA")]
		[Address(RVA = "0x97CDF8", Offset = "0x97CDF8", VA = "0x97CDF8", Slot = "4")]
		public bool Equals(RegionId other)
		{
			return default(bool);
		}

		[Token(Token = "0x60018CB")]
		[Address(RVA = "0x97CE34", Offset = "0x97CE34", VA = "0x97CE34", Slot = "5")]
		public bool Equals(int other)
		{
			return default(bool);
		}

		[Token(Token = "0x60018CC")]
		[Address(RVA = "0x97CE70", Offset = "0x97CE70", VA = "0x97CE70", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x60018CD")]
		[Address(RVA = "0x97CE78", Offset = "0x97CE78", VA = "0x97CE78", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x60018CE")]
		[Address(RVA = "0x97CE94", Offset = "0x97CE94", VA = "0x97CE94", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x200036B")]
	public class Region
	{
		[Token(Token = "0x4001569")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int spanCount;

		[Token(Token = "0x400156A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private RegionId id;

		[Token(Token = "0x400156B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Area areaType;

		[Token(Token = "0x400156C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private bool remap;

		[Token(Token = "0x400156D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		private bool visited;

		[Token(Token = "0x400156E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<RegionId> connections;

		[Token(Token = "0x400156F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<RegionId> floors;

		[Token(Token = "0x1700029D")]
		public int SpanCount
		{
			[Token(Token = "0x60018D1")]
			[Address(RVA = "0xD38EC4", Offset = "0xD38EC4", VA = "0xD38EC4")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60018D2")]
			[Address(RVA = "0xD38ECC", Offset = "0xD38ECC", VA = "0xD38ECC")]
			set
			{
			}
		}

		[Token(Token = "0x1700029E")]
		public RegionId Id
		{
			[Token(Token = "0x60018D3")]
			[Address(RVA = "0xD38ED4", Offset = "0xD38ED4", VA = "0xD38ED4")]
			get
			{
				return default(RegionId);
			}
			[Token(Token = "0x60018D4")]
			[Address(RVA = "0xD38EDC", Offset = "0xD38EDC", VA = "0xD38EDC")]
			set
			{
			}
		}

		[Token(Token = "0x1700029F")]
		public Area AreaType
		{
			[Token(Token = "0x60018D5")]
			[Address(RVA = "0xD38EE4", Offset = "0xD38EE4", VA = "0xD38EE4")]
			get
			{
				return default(Area);
			}
			[Token(Token = "0x60018D6")]
			[Address(RVA = "0xD38EEC", Offset = "0xD38EEC", VA = "0xD38EEC")]
			set
			{
			}
		}

		[Token(Token = "0x170002A0")]
		public bool Remap
		{
			[Token(Token = "0x60018D7")]
			[Address(RVA = "0xD38EF4", Offset = "0xD38EF4", VA = "0xD38EF4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60018D8")]
			[Address(RVA = "0xD38EFC", Offset = "0xD38EFC", VA = "0xD38EFC")]
			set
			{
			}
		}

		[Token(Token = "0x170002A1")]
		public bool Visited
		{
			[Token(Token = "0x60018D9")]
			[Address(RVA = "0xD38F08", Offset = "0xD38F08", VA = "0xD38F08")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60018DA")]
			[Address(RVA = "0xD38F10", Offset = "0xD38F10", VA = "0xD38F10")]
			set
			{
			}
		}

		[Token(Token = "0x170002A2")]
		public List<RegionId> FloorRegions
		{
			[Token(Token = "0x60018DB")]
			[Address(RVA = "0xD38F1C", Offset = "0xD38F1C", VA = "0xD38F1C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002A3")]
		public List<RegionId> Connections
		{
			[Token(Token = "0x60018DC")]
			[Address(RVA = "0xD38F24", Offset = "0xD38F24", VA = "0xD38F24")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002A4")]
		public bool IsBorder
		{
			[Token(Token = "0x60018DD")]
			[Address(RVA = "0xD38F2C", Offset = "0xD38F2C", VA = "0xD38F2C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002A5")]
		public bool IsBorderOrNull
		{
			[Token(Token = "0x60018DE")]
			[Address(RVA = "0xD38FA4", Offset = "0xD38FA4", VA = "0xD38FA4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60018D0")]
		[Address(RVA = "0xD38DC8", Offset = "0xD38DC8", VA = "0xD38DC8")]
		public Region(int idNum)
		{
		}

		[Token(Token = "0x60018DF")]
		[Address(RVA = "0xD38FCC", Offset = "0xD38FCC", VA = "0xD38FCC")]
		public void RemoveAdjacentNeighbours()
		{
		}

		[Token(Token = "0x60018E0")]
		[Address(RVA = "0xD39128", Offset = "0xD39128", VA = "0xD39128")]
		public void ReplaceNeighbour(RegionId oldId, RegionId newId)
		{
		}

		[Token(Token = "0x60018E1")]
		[Address(RVA = "0xD3931C", Offset = "0xD3931C", VA = "0xD3931C")]
		public bool CanMergeWith(Region otherRegion)
		{
			return default(bool);
		}

		[Token(Token = "0x60018E2")]
		[Address(RVA = "0xD3948C", Offset = "0xD3948C", VA = "0xD3948C")]
		public void AddUniqueFloorRegion(RegionId n)
		{
		}

		[Token(Token = "0x60018E3")]
		[Address(RVA = "0xD39528", Offset = "0xD39528", VA = "0xD39528")]
		public bool MergeWithRegion(Region otherRegion)
		{
			return default(bool);
		}

		[Token(Token = "0x60018E4")]
		[Address(RVA = "0xD398F4", Offset = "0xD398F4", VA = "0xD398F4")]
		public bool IsConnectedToBorder()
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200036C")]
	public struct Span
	{
		[Token(Token = "0x4001570")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int Minimum;

		[Token(Token = "0x4001571")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int Maximum;

		[Token(Token = "0x4001572")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Area Area;

		[Token(Token = "0x170002A6")]
		public int Height
		{
			[Token(Token = "0x60018E7")]
			[Address(RVA = "0x97CEB0", Offset = "0x97CEB0", VA = "0x97CEB0")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x60018E5")]
		[Address(RVA = "0x97CE9C", Offset = "0x97CE9C", VA = "0x97CE9C")]
		public Span(int min, int max)
		{
		}

		[Token(Token = "0x60018E6")]
		[Address(RVA = "0x97CEA4", Offset = "0x97CEA4", VA = "0x97CEA4")]
		public Span(int min, int max, Area area)
		{
		}
	}
	[Token(Token = "0x200036D")]
	public struct SpanReference
	{
		[Token(Token = "0x4001573")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int x;

		[Token(Token = "0x4001574")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private int y;

		[Token(Token = "0x4001575")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int index;

		[Token(Token = "0x170002A7")]
		public int X
		{
			[Token(Token = "0x60018E9")]
			[Address(RVA = "0x97CEC8", Offset = "0x97CEC8", VA = "0x97CEC8")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170002A8")]
		public int Y
		{
			[Token(Token = "0x60018EA")]
			[Address(RVA = "0x97CED0", Offset = "0x97CED0", VA = "0x97CED0")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170002A9")]
		public int Index
		{
			[Token(Token = "0x60018EB")]
			[Address(RVA = "0x97CED8", Offset = "0x97CED8", VA = "0x97CED8")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x60018E8")]
		[Address(RVA = "0x97CEBC", Offset = "0x97CEBC", VA = "0x97CEBC")]
		public SpanReference(int x, int y, int i)
		{
		}
	}
	[Token(Token = "0x200036E")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x8B6E50", Offset = "0x8B6E50")]
	public class TiledNavMesh
	{
		[Token(Token = "0x200085A")]
		public struct TiledNavMeshParams
		{
			[Token(Token = "0x400292D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public SharpNav.Geometry.Vector3 Origin;

			[Token(Token = "0x400292E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public float TileWidth;

			[Token(Token = "0x400292F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float TileHeight;

			[Token(Token = "0x4002930")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public int MaxTiles;

			[Token(Token = "0x4002931")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int MaxPolys;
		}

		[Token(Token = "0x4001576")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private TiledNavMeshParams parameters;

		[Token(Token = "0x4001577")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private SharpNav.Geometry.Vector3 origin;

		[Token(Token = "0x4001578")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float tileWidth;

		[Token(Token = "0x4001579")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float tileHeight;

		[Token(Token = "0x400157A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int maxTiles;

		[Token(Token = "0x400157B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private int tileLookupTableSize;

		[Token(Token = "0x400157C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int tileLookupTableMask;

		[Token(Token = "0x400157D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private MeshTile[] posLookup;

		[Token(Token = "0x400157E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private MeshTile nextFree;

		[Token(Token = "0x400157F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private MeshTile[] tiles;

		[Token(Token = "0x4001580")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private int saltBits;

		[Token(Token = "0x4001581")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private int tileBits;

		[Token(Token = "0x4001582")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private int polyBits;

		[Token(Token = "0x4001583")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8BE9B8", Offset = "0x8BE9B8")]
		private object <Tag>k__BackingField;

		[Token(Token = "0x170002AA")]
		public int TileCount
		{
			[Token(Token = "0x60018ED")]
			[Address(RVA = "0xD3AB64", Offset = "0xD3AB64", VA = "0xD3AB64")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170002AB")]
		public MeshTile Item
		{
			[Token(Token = "0x60018EE")]
			[Address(RVA = "0xD3AB6C", Offset = "0xD3AB6C", VA = "0xD3AB6C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002AC")]
		public object Tag
		{
			[Token(Token = "0x60018EF")]
			[Address(RVA = "0xD3ABA8", Offset = "0xD3ABA8", VA = "0xD3ABA8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CA53C", Offset = "0x8CA53C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60018F0")]
			[Address(RVA = "0xD3ABB0", Offset = "0xD3ABB0", VA = "0xD3ABB0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CA54C", Offset = "0x8CA54C")]
			set
			{
			}
		}

		[Token(Token = "0x60018EC")]
		[Address(RVA = "0xD3A288", Offset = "0xD3A288", VA = "0xD3A288")]
		public TiledNavMesh(NavMeshBuilder data)
		{
		}

		[Token(Token = "0x60018F1")]
		[Address(RVA = "0xD3A328", Offset = "0xD3A328", VA = "0xD3A328")]
		public bool InitTileNavMesh(TiledNavMeshParams parameters)
		{
			return default(bool);
		}

		[Token(Token = "0x60018F2")]
		[Address(RVA = "0xD3A5E4", Offset = "0xD3A5E4", VA = "0xD3A5E4")]
		public void AddTile(NavMeshBuilder data, int lastRef, ref int result)
		{
		}

		[Token(Token = "0x60018F3")]
		[Address(RVA = "0xD3ACA4", Offset = "0xD3ACA4", VA = "0xD3ACA4")]
		public void ConnectIntLinks(ref MeshTile tile)
		{
		}

		[Token(Token = "0x60018F4")]
		[Address(RVA = "0xD3AF8C", Offset = "0xD3AF8C", VA = "0xD3AF8C")]
		public void BaseOffMeshLinks(ref MeshTile tile)
		{
		}

		[Token(Token = "0x60018F5")]
		[Address(RVA = "0xD3B54C", Offset = "0xD3B54C", VA = "0xD3B54C")]
		public void ConnectExtLinks(ref MeshTile tile, ref MeshTile target, BoundarySide side)
		{
		}

		[Token(Token = "0x60018F6")]
		[Address(RVA = "0xD3BB30", Offset = "0xD3BB30", VA = "0xD3BB30")]
		public void ConnectExtOffMeshLinks(ref MeshTile tile, ref MeshTile target, BoundarySide side)
		{
		}

		[Token(Token = "0x60018F7")]
		[Address(RVA = "0xD3C7D8", Offset = "0xD3C7D8", VA = "0xD3C7D8")]
		public bool GetOffMeshConnectionPolyEndPoints(int prevRef, int polyRef, ref SharpNav.Geometry.Vector3 startPos, ref SharpNav.Geometry.Vector3 endPos)
		{
			return default(bool);
		}

		[Token(Token = "0x60018F8")]
		[Address(RVA = "0xD3C450", Offset = "0xD3C450", VA = "0xD3C450")]
		public void FindConnectingPolys(SharpNav.Geometry.Vector3 va, SharpNav.Geometry.Vector3 vb, MeshTile tile, BoundarySide side, List<int> con, List<float> conarea)
		{
		}

		[Token(Token = "0x60018F9")]
		[Address(RVA = "0xD3C9EC", Offset = "0xD3C9EC", VA = "0xD3C9EC")]
		public void CalcSlabEndPoints(SharpNav.Geometry.Vector3 va, SharpNav.Geometry.Vector3 vb, SharpNav.Geometry.Vector2 bmin, SharpNav.Geometry.Vector2 bmax, BoundarySide side)
		{
		}

		[Token(Token = "0x60018FA")]
		[Address(RVA = "0xD3C9F0", Offset = "0xD3C9F0", VA = "0xD3C9F0")]
		public float GetSlabCoord(SharpNav.Geometry.Vector3 va, BoundarySide side)
		{
			return default(float);
		}

		[Token(Token = "0x60018FB")]
		[Address(RVA = "0xD3CA24", Offset = "0xD3CA24", VA = "0xD3CA24")]
		public bool OverlapSlabs(SharpNav.Geometry.Vector2 amin, SharpNav.Geometry.Vector2 amax, SharpNav.Geometry.Vector2 bmin, SharpNav.Geometry.Vector2 bmax, float px, float py)
		{
			return default(bool);
		}

		[Token(Token = "0x60018FC")]
		[Address(RVA = "0xD3C1B8", Offset = "0xD3C1B8", VA = "0xD3C1B8")]
		public int FindNearestPolyInTile(MeshTile tile, SharpNav.Geometry.Vector3 center, SharpNav.Geometry.Vector3 extents, ref SharpNav.Geometry.Vector3 nearestPt)
		{
			return default(int);
		}

		[Token(Token = "0x60018FD")]
		[Address(RVA = "0xD3CB80", Offset = "0xD3CB80", VA = "0xD3CB80")]
		public int QueryPolygonsInTile(MeshTile tile, BBox3 qbounds, List<int> polys)
		{
			return default(int);
		}

		[Token(Token = "0x60018FE")]
		[Address(RVA = "0xD3C14C", Offset = "0xD3C14C", VA = "0xD3C14C")]
		public int AllocLink(MeshTile tile)
		{
			return default(int);
		}

		[Token(Token = "0x60018FF")]
		[Address(RVA = "0xD3C03C", Offset = "0xD3C03C", VA = "0xD3C03C")]
		public int GetTileRef(MeshTile tile)
		{
			return default(int);
		}

		[Token(Token = "0x6001900")]
		[Address(RVA = "0xD3ABB8", Offset = "0xD3ABB8", VA = "0xD3ABB8")]
		public MeshTile GetTileAt(int x, int y, int layer)
		{
			return null;
		}

		[Token(Token = "0x6001901")]
		[Address(RVA = "0xD3B448", Offset = "0xD3B448", VA = "0xD3B448")]
		public int GetTilesAt(int x, int y, MeshTile[] tiles)
		{
			return default(int);
		}

		[Token(Token = "0x6001902")]
		[Address(RVA = "0xD3BFDC", Offset = "0xD3BFDC", VA = "0xD3BFDC")]
		public int GetNeighbourTilesAt(int x, int y, BoundarySide side, MeshTile[] tiles)
		{
			return default(int);
		}

		[Token(Token = "0x6001903")]
		[Address(RVA = "0xD3AC84", Offset = "0xD3AC84", VA = "0xD3AC84")]
		public int ComputeTileHash(int x, int y, int mask)
		{
			return default(int);
		}

		[Token(Token = "0x6001904")]
		[Address(RVA = "0xD3C1B0", Offset = "0xD3C1B0", VA = "0xD3C1B0")]
		public int GetReference(int polyBase, int poly)
		{
			return default(int);
		}

		[Token(Token = "0x6001905")]
		[Address(RVA = "0xD3C1A4", Offset = "0xD3C1A4", VA = "0xD3C1A4")]
		public bool IsLinkAllocated(int index)
		{
			return default(bool);
		}

		[Token(Token = "0x6001906")]
		[Address(RVA = "0xD3C144", Offset = "0xD3C144", VA = "0xD3C144")]
		public bool IsExternalLink(int neighbor)
		{
			return default(bool);
		}

		[Token(Token = "0x6001907")]
		[Address(RVA = "0xD3C0C0", Offset = "0xD3C0C0", VA = "0xD3C0C0")]
		public int GetPolyRefBase(MeshTile tile)
		{
			return default(int);
		}

		[Token(Token = "0x6001908")]
		[Address(RVA = "0xD3D02C", Offset = "0xD3D02C", VA = "0xD3D02C")]
		public bool TryGetTileAndPolyByRef(int reference, out MeshTile tile, out Poly poly)
		{
			return default(bool);
		}

		[Token(Token = "0x6001909")]
		[Address(RVA = "0xD3D128", Offset = "0xD3D128", VA = "0xD3D128")]
		public void TryGetTileAndPolyByRefUnsafe(int reference, out MeshTile tile, out Poly poly)
		{
		}

		[Token(Token = "0x600190A")]
		[Address(RVA = "0xD3D1C8", Offset = "0xD3D1C8", VA = "0xD3D1C8")]
		public bool IsValidPolyRef(int reference)
		{
			return default(bool);
		}

		[Token(Token = "0x600190B")]
		[Address(RVA = "0xD3C9A8", Offset = "0xD3C9A8", VA = "0xD3C9A8")]
		public void DecodePolyId(int reference, ref int salt, ref int indexTile, ref int indexPoly)
		{
		}

		[Token(Token = "0x600190C")]
		[Address(RVA = "0xD3AC64", Offset = "0xD3AC64", VA = "0xD3AC64")]
		public int DecodePolyIdSalt(int reference)
		{
			return default(int);
		}

		[Token(Token = "0x600190D")]
		[Address(RVA = "0xD3AC4C", Offset = "0xD3AC4C", VA = "0xD3AC4C")]
		public int DecodePolyIdTile(int reference)
		{
			return default(int);
		}

		[Token(Token = "0x600190E")]
		[Address(RVA = "0xD3C43C", Offset = "0xD3C43C", VA = "0xD3C43C")]
		public int DecodePolyIdPoly(int reference)
		{
			return default(int);
		}

		[Token(Token = "0x600190F")]
		[Address(RVA = "0xD3D010", Offset = "0xD3D010", VA = "0xD3D010")]
		public int EncodePolyId(int salt, int indexTile, int indexPoly)
		{
			return default(int);
		}

		[Token(Token = "0x6001910")]
		[Address(RVA = "0xD3D270", Offset = "0xD3D270", VA = "0xD3D270")]
		public void CalcTileLoc(ref SharpNav.Geometry.Vector3 pos, out int tx, out int ty)
		{
		}
	}
}
namespace SharpNav.Pathfinding
{
	[Token(Token = "0x200036F")]
	public enum BoundarySide : byte
	{
		[Token(Token = "0x4001585")]
		Internal = byte.MaxValue,
		[Token(Token = "0x4001586")]
		PlusX = 0,
		[Token(Token = "0x4001587")]
		PlusXPlusZ = 1,
		[Token(Token = "0x4001588")]
		PlusZ = 2,
		[Token(Token = "0x4001589")]
		MinusXPlusZ = 3,
		[Token(Token = "0x400158A")]
		MinusX = 4,
		[Token(Token = "0x400158B")]
		MinusXMinusZ = 5,
		[Token(Token = "0x400158C")]
		MinusZ = 6,
		[Token(Token = "0x400158D")]
		PlusXMinusZ = 7
	}
	[Token(Token = "0x2000370")]
	public static class BoundarySideExtensions
	{
		[Token(Token = "0x6001911")]
		[Address(RVA = "0x15D5C84", Offset = "0x15D5C84", VA = "0x15D5C84")]
		public static BoundarySide GetOpposite(this BoundarySide side)
		{
			return default(BoundarySide);
		}

		[Token(Token = "0x6001912")]
		[Address(RVA = "0x15CECC0", Offset = "0x15CECC0", VA = "0x15CECC0")]
		public static BoundarySide FromPoint(SharpNav.Geometry.Vector3 pt, BBox3 bounds)
		{
			return default(BoundarySide);
		}
	}
	[Token(Token = "0x2000371")]
	public class Link
	{
		[Token(Token = "0x400158E")]
		public const int External = int.MinValue;

		[Token(Token = "0x400158F")]
		public const int Null = -1;

		[Token(Token = "0x4001590")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8BE9C8", Offset = "0x8BE9C8")]
		private int <Reference>k__BackingField;

		[Token(Token = "0x4001591")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8BE9D8", Offset = "0x8BE9D8")]
		private int <Next>k__BackingField;

		[Token(Token = "0x4001592")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8BE9E8", Offset = "0x8BE9E8")]
		private int <Edge>k__BackingField;

		[Token(Token = "0x4001593")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8BE9F8", Offset = "0x8BE9F8")]
		private BoundarySide <Side>k__BackingField;

		[Token(Token = "0x4001594")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8BEA08", Offset = "0x8BEA08")]
		private int <BMin>k__BackingField;

		[Token(Token = "0x4001595")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8BEA18", Offset = "0x8BEA18")]
		private int <BMax>k__BackingField;

		[Token(Token = "0x170002AD")]
		public int Reference
		{
			[Token(Token = "0x6001913")]
			[Address(RVA = "0x15D5C9C", Offset = "0x15D5C9C", VA = "0x15D5C9C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CA56C", Offset = "0x8CA56C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001914")]
			[Address(RVA = "0x15D5CA4", Offset = "0x15D5CA4", VA = "0x15D5CA4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CA57C", Offset = "0x8CA57C")]
			set
			{
			}
		}

		[Token(Token = "0x170002AE")]
		public int Next
		{
			[Token(Token = "0x6001915")]
			[Address(RVA = "0x15D5CAC", Offset = "0x15D5CAC", VA = "0x15D5CAC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CA58C", Offset = "0x8CA58C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001916")]
			[Address(RVA = "0x15D5CB4", Offset = "0x15D5CB4", VA = "0x15D5CB4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CA59C", Offset = "0x8CA59C")]
			set
			{
			}
		}

		[Token(Token = "0x170002AF")]
		public int Edge
		{
			[Token(Token = "0x6001917")]
			[Address(RVA = "0x15D5CBC", Offset = "0x15D5CBC", VA = "0x15D5CBC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CA5AC", Offset = "0x8CA5AC")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001918")]
			[Address(RVA = "0x15D5CC4", Offset = "0x15D5CC4", VA = "0x15D5CC4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CA5BC", Offset = "0x8CA5BC")]
			set
			{
			}
		}

		[Token(Token = "0x170002B0")]
		public BoundarySide Side
		{
			[Token(Token = "0x6001919")]
			[Address(RVA = "0x15D5CCC", Offset = "0x15D5CCC", VA = "0x15D5CCC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CA5CC", Offset = "0x8CA5CC")]
			get
			{
				return default(BoundarySide);
			}
			[Token(Token = "0x600191A")]
			[Address(RVA = "0x15D5CD4", Offset = "0x15D5CD4", VA = "0x15D5CD4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CA5DC", Offset = "0x8CA5DC")]
			set
			{
			}
		}

		[Token(Token = "0x170002B1")]
		public int BMin
		{
			[Token(Token = "0x600191B")]
			[Address(RVA = "0x15D5CDC", Offset = "0x15D5CDC", VA = "0x15D5CDC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CA5EC", Offset = "0x8CA5EC")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600191C")]
			[Address(RVA = "0x15D5CE4", Offset = "0x15D5CE4", VA = "0x15D5CE4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CA5FC", Offset = "0x8CA5FC")]
			set
			{
			}
		}

		[Token(Token = "0x170002B2")]
		public int BMax
		{
			[Token(Token = "0x600191D")]
			[Address(RVA = "0x15D5CEC", Offset = "0x15D5CEC", VA = "0x15D5CEC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CA60C", Offset = "0x8CA60C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600191E")]
			[Address(RVA = "0x15D5CF4", Offset = "0x15D5CF4", VA = "0x15D5CF4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CA61C", Offset = "0x8CA61C")]
			set
			{
			}
		}

		[Token(Token = "0x600191F")]
		[Address(RVA = "0x15D5CFC", Offset = "0x15D5CFC", VA = "0x15D5CFC")]
		public Link()
		{
		}
	}
	[Token(Token = "0x2000372")]
	public class MeshTile
	{
		[Token(Token = "0x4001596")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8BEA28", Offset = "0x8BEA28")]
		private int <Salt>k__BackingField;

		[Token(Token = "0x4001597")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8BEA38", Offset = "0x8BEA38")]
		private int <LinksFreeList>k__BackingField;

		[Token(Token = "0x4001598")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8BEA48", Offset = "0x8BEA48")]
		private PathfindingCommon.NavMeshInfo <Header>k__BackingField;

		[Token(Token = "0x4001599")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8BEA58", Offset = "0x8BEA58")]
		private Poly[] <Polys>k__BackingField;

		[Token(Token = "0x400159A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8BEA68", Offset = "0x8BEA68")]
		private SharpNav.Geometry.Vector3[] <Verts>k__BackingField;

		[Token(Token = "0x400159B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8BEA78", Offset = "0x8BEA78")]
		private Link[] <Links>k__BackingField;

		[Token(Token = "0x400159C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8BEA88", Offset = "0x8BEA88")]
		private PolyMeshDetail.MeshData[] <DetailMeshes>k__BackingField;

		[Token(Token = "0x400159D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8BEA98", Offset = "0x8BEA98")]
		private SharpNav.Geometry.Vector3[] <DetailVerts>k__BackingField;

		[Token(Token = "0x400159E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8BEAA8", Offset = "0x8BEAA8")]
		private PolyMeshDetail.TriangleData[] <DetailTris>k__BackingField;

		[Token(Token = "0x400159F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8BEAB8", Offset = "0x8BEAB8")]
		private OffMeshConnection[] <OffMeshConnections>k__BackingField;

		[Token(Token = "0x40015A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8BEAC8", Offset = "0x8BEAC8")]
		private BVTree <BVTree>k__BackingField;

		[Token(Token = "0x40015A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8BEAD8", Offset = "0x8BEAD8")]
		private NavMeshBuilder <Data>k__BackingField;

		[Token(Token = "0x40015A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8BEAE8", Offset = "0x8BEAE8")]
		private MeshTile <Next>k__BackingField;

		[Token(Token = "0x170002B3")]
		public int Salt
		{
			[Token(Token = "0x6001920")]
			[Address(RVA = "0x15D5D04", Offset = "0x15D5D04", VA = "0x15D5D04")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CA62C", Offset = "0x8CA62C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001921")]
			[Address(RVA = "0x15D5D0C", Offset = "0x15D5D0C", VA = "0x15D5D0C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CA63C", Offset = "0x8CA63C")]
			set
			{
			}
		}

		[Token(Token = "0x170002B4")]
		public int LinksFreeList
		{
			[Token(Token = "0x6001922")]
			[Address(RVA = "0x15D5D14", Offset = "0x15D5D14", VA = "0x15D5D14")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CA64C", Offset = "0x8CA64C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001923")]
			[Address(RVA = "0x15D5D1C", Offset = "0x15D5D1C", VA = "0x15D5D1C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CA65C", Offset = "0x8CA65C")]
			set
			{
			}
		}

		[Token(Token = "0x170002B5")]
		public PathfindingCommon.NavMeshInfo Header
		{
			[Token(Token = "0x6001924")]
			[Address(RVA = "0x15D5D24", Offset = "0x15D5D24", VA = "0x15D5D24")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CA66C", Offset = "0x8CA66C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001925")]
			[Address(RVA = "0x15D5D2C", Offset = "0x15D5D2C", VA = "0x15D5D2C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CA67C", Offset = "0x8CA67C")]
			set
			{
			}
		}

		[Token(Token = "0x170002B6")]
		public Poly[] Polys
		{
			[Token(Token = "0x6001926")]
			[Address(RVA = "0x15D5D34", Offset = "0x15D5D34", VA = "0x15D5D34")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CA68C", Offset = "0x8CA68C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001927")]
			[Address(RVA = "0x15D5D3C", Offset = "0x15D5D3C", VA = "0x15D5D3C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CA69C", Offset = "0x8CA69C")]
			set
			{
			}
		}

		[Token(Token = "0x170002B7")]
		public SharpNav.Geometry.Vector3[] Verts
		{
			[Token(Token = "0x6001928")]
			[Address(RVA = "0x15D5D44", Offset = "0x15D5D44", VA = "0x15D5D44")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CA6AC", Offset = "0x8CA6AC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001929")]
			[Address(RVA = "0x15D5D4C", Offset = "0x15D5D4C", VA = "0x15D5D4C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CA6BC", Offset = "0x8CA6BC")]
			set
			{
			}
		}

		[Token(Token = "0x170002B8")]
		public Link[] Links
		{
			[Token(Token = "0x600192A")]
			[Address(RVA = "0x15D5D54", Offset = "0x15D5D54", VA = "0x15D5D54")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CA6CC", Offset = "0x8CA6CC")]
			get
			{
				return null;
			}
			[Token(Token = "0x600192B")]
			[Address(RVA = "0x15D5D5C", Offset = "0x15D5D5C", VA = "0x15D5D5C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CA6DC", Offset = "0x8CA6DC")]
			set
			{
			}
		}

		[Token(Token = "0x170002B9")]
		public PolyMeshDetail.MeshData[] DetailMeshes
		{
			[Token(Token = "0x600192C")]
			[Address(RVA = "0x15D5D64", Offset = "0x15D5D64", VA = "0x15D5D64")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CA6EC", Offset = "0x8CA6EC")]
			get
			{
				return null;
			}
			[Token(Token = "0x600192D")]
			[Address(RVA = "0x15D5D6C", Offset = "0x15D5D6C", VA = "0x15D5D6C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CA6FC", Offset = "0x8CA6FC")]
			set
			{
			}
		}

		[Token(Token = "0x170002BA")]
		public SharpNav.Geometry.Vector3[] DetailVerts
		{
			[Token(Token = "0x600192E")]
			[Address(RVA = "0x15D5D74", Offset = "0x15D5D74", VA = "0x15D5D74")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CA70C", Offset = "0x8CA70C")]
			get
			{
				return null;
			}
			[Token(Token = "0x600192F")]
			[Address(RVA = "0x15D5D7C", Offset = "0x15D5D7C", VA = "0x15D5D7C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CA71C", Offset = "0x8CA71C")]
			set
			{
			}
		}

		[Token(Token = "0x170002BB")]
		public PolyMeshDetail.TriangleData[] DetailTris
		{
			[Token(Token = "0x6001930")]
			[Address(RVA = "0x15D5D84", Offset = "0x15D5D84", VA = "0x15D5D84")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CA72C", Offset = "0x8CA72C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001931")]
			[Address(RVA = "0x15D5D8C", Offset = "0x15D5D8C", VA = "0x15D5D8C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CA73C", Offset = "0x8CA73C")]
			set
			{
			}
		}

		[Token(Token = "0x170002BC")]
		public OffMeshConnection[] OffMeshConnections
		{
			[Token(Token = "0x6001932")]
			[Address(RVA = "0x15D5D94", Offset = "0x15D5D94", VA = "0x15D5D94")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CA74C", Offset = "0x8CA74C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001933")]
			[Address(RVA = "0x15D5D9C", Offset = "0x15D5D9C", VA = "0x15D5D9C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CA75C", Offset = "0x8CA75C")]
			set
			{
			}
		}

		[Token(Token = "0x170002BD")]
		public BVTree BVTree
		{
			[Token(Token = "0x6001934")]
			[Address(RVA = "0x15D5DA4", Offset = "0x15D5DA4", VA = "0x15D5DA4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CA76C", Offset = "0x8CA76C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001935")]
			[Address(RVA = "0x15D5DAC", Offset = "0x15D5DAC", VA = "0x15D5DAC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CA77C", Offset = "0x8CA77C")]
			set
			{
			}
		}

		[Token(Token = "0x170002BE")]
		public NavMeshBuilder Data
		{
			[Token(Token = "0x6001936")]
			[Address(RVA = "0x15D5DB4", Offset = "0x15D5DB4", VA = "0x15D5DB4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CA78C", Offset = "0x8CA78C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001937")]
			[Address(RVA = "0x15D5DBC", Offset = "0x15D5DBC", VA = "0x15D5DBC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CA79C", Offset = "0x8CA79C")]
			set
			{
			}
		}

		[Token(Token = "0x170002BF")]
		public MeshTile Next
		{
			[Token(Token = "0x6001938")]
			[Address(RVA = "0x15D5DC4", Offset = "0x15D5DC4", VA = "0x15D5DC4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CA7AC", Offset = "0x8CA7AC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001939")]
			[Address(RVA = "0x15D5DCC", Offset = "0x15D5DCC", VA = "0x15D5DCC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CA7BC", Offset = "0x8CA7BC")]
			set
			{
			}
		}

		[Token(Token = "0x600193A")]
		[Address(RVA = "0x15D476C", Offset = "0x15D476C", VA = "0x15D476C")]
		public void ClosestPointOnPoly(Poly poly, SharpNav.Geometry.Vector3 pos, ref SharpNav.Geometry.Vector3 closest)
		{
		}

		[Token(Token = "0x600193B")]
		[Address(RVA = "0x15D5DD4", Offset = "0x15D5DD4", VA = "0x15D5DD4")]
		public void ClosestPointOnPoly(int indexPoly, SharpNav.Geometry.Vector3 pos, ref SharpNav.Geometry.Vector3 closest)
		{
		}

		[Token(Token = "0x600193C")]
		[Address(RVA = "0x15D4EDC", Offset = "0x15D4EDC", VA = "0x15D4EDC")]
		public void ClosestPointOnPolyBoundary(Poly poly, SharpNav.Geometry.Vector3 pos, out SharpNav.Geometry.Vector3 closest)
		{
		}

		[Token(Token = "0x600193D")]
		[Address(RVA = "0x15D5340", Offset = "0x15D5340", VA = "0x15D5340")]
		public bool ClosestHeight(int indexPoly, SharpNav.Geometry.Vector3 pos, out float h)
		{
			return default(bool);
		}

		[Token(Token = "0x600193E")]
		[Address(RVA = "0x15D5178", Offset = "0x15D5178", VA = "0x15D5178")]
		public void ClosestPointOnPolyOffMeshConnection(Poly poly, SharpNav.Geometry.Vector3 pos, out SharpNav.Geometry.Vector3 closest)
		{
		}

		[Token(Token = "0x600193F")]
		[Address(RVA = "0x15D5EC0", Offset = "0x15D5EC0", VA = "0x15D5EC0")]
		public MeshTile()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000373")]
	public struct NavPoint
	{
		[Token(Token = "0x40015A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly NavPoint Null;

		[Token(Token = "0x40015A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int Polygon;

		[Token(Token = "0x40015A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public SharpNav.Geometry.Vector3 Position;

		[Token(Token = "0x6001940")]
		[Address(RVA = "0x99C8E0", Offset = "0x99C8E0", VA = "0x99C8E0")]
		public NavPoint(int poly, SharpNav.Geometry.Vector3 pos)
		{
		}
	}
	[Token(Token = "0x2000374")]
	[Flags]
	public enum OffMeshConnectionFlags : byte
	{
		[Token(Token = "0x40015A7")]
		None = 0,
		[Token(Token = "0x40015A8")]
		Bidirectional = 1
	}
	[Token(Token = "0x2000375")]
	public class OffMeshConnection
	{
		[Token(Token = "0x40015A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8BEAF8", Offset = "0x8BEAF8")]
		private SharpNav.Geometry.Vector3 <Pos0>k__BackingField;

		[Token(Token = "0x40015AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8BEB08", Offset = "0x8BEB08")]
		private SharpNav.Geometry.Vector3 <Pos1>k__BackingField;

		[Token(Token = "0x40015AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8BEB18", Offset = "0x8BEB18")]
		private float <Radius>k__BackingField;

		[Token(Token = "0x40015AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8BEB28", Offset = "0x8BEB28")]
		private int <Poly>k__BackingField;

		[Token(Token = "0x40015AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8BEB38", Offset = "0x8BEB38")]
		private OffMeshConnectionFlags <Flags>k__BackingField;

		[Token(Token = "0x40015AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8BEB48", Offset = "0x8BEB48")]
		private BoundarySide <Side>k__BackingField;

		[Token(Token = "0x40015AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8BEB58", Offset = "0x8BEB58")]
		private object <Tag>k__BackingField;

		[Token(Token = "0x170002C0")]
		public SharpNav.Geometry.Vector3 Pos0
		{
			[Token(Token = "0x6001942")]
			[Address(RVA = "0x15D5F4C", Offset = "0x15D5F4C", VA = "0x15D5F4C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CA7CC", Offset = "0x8CA7CC")]
			get
			{
				return default(SharpNav.Geometry.Vector3);
			}
			[Token(Token = "0x6001943")]
			[Address(RVA = "0x15D5F58", Offset = "0x15D5F58", VA = "0x15D5F58")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CA7DC", Offset = "0x8CA7DC")]
			set
			{
			}
		}

		[Token(Token = "0x170002C1")]
		public SharpNav.Geometry.Vector3 Pos1
		{
			[Token(Token = "0x6001944")]
			[Address(RVA = "0x15D5F64", Offset = "0x15D5F64", VA = "0x15D5F64")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CA7EC", Offset = "0x8CA7EC")]
			get
			{
				return default(SharpNav.Geometry.Vector3);
			}
			[Token(Token = "0x6001945")]
			[Address(RVA = "0x15D5F70", Offset = "0x15D5F70", VA = "0x15D5F70")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CA7FC", Offset = "0x8CA7FC")]
			set
			{
			}
		}

		[Token(Token = "0x170002C2")]
		public float Radius
		{
			[Token(Token = "0x6001946")]
			[Address(RVA = "0x15D5F7C", Offset = "0x15D5F7C", VA = "0x15D5F7C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CA80C", Offset = "0x8CA80C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001947")]
			[Address(RVA = "0x15D5F84", Offset = "0x15D5F84", VA = "0x15D5F84")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CA81C", Offset = "0x8CA81C")]
			set
			{
			}
		}

		[Token(Token = "0x170002C3")]
		public int Poly
		{
			[Token(Token = "0x6001948")]
			[Address(RVA = "0x15D5F8C", Offset = "0x15D5F8C", VA = "0x15D5F8C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CA82C", Offset = "0x8CA82C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001949")]
			[Address(RVA = "0x15D5F94", Offset = "0x15D5F94", VA = "0x15D5F94")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CA83C", Offset = "0x8CA83C")]
			set
			{
			}
		}

		[Token(Token = "0x170002C4")]
		public OffMeshConnectionFlags Flags
		{
			[Token(Token = "0x600194A")]
			[Address(RVA = "0x15D5F9C", Offset = "0x15D5F9C", VA = "0x15D5F9C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CA84C", Offset = "0x8CA84C")]
			get
			{
				return default(OffMeshConnectionFlags);
			}
			[Token(Token = "0x600194B")]
			[Address(RVA = "0x15D5FA4", Offset = "0x15D5FA4", VA = "0x15D5FA4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CA85C", Offset = "0x8CA85C")]
			set
			{
			}
		}

		[Token(Token = "0x170002C5")]
		public BoundarySide Side
		{
			[Token(Token = "0x600194C")]
			[Address(RVA = "0x15D5FAC", Offset = "0x15D5FAC", VA = "0x15D5FAC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CA86C", Offset = "0x8CA86C")]
			get
			{
				return default(BoundarySide);
			}
			[Token(Token = "0x600194D")]
			[Address(RVA = "0x15D5FB4", Offset = "0x15D5FB4", VA = "0x15D5FB4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CA87C", Offset = "0x8CA87C")]
			set
			{
			}
		}

		[Token(Token = "0x170002C6")]
		public object Tag
		{
			[Token(Token = "0x600194E")]
			[Address(RVA = "0x15D5FBC", Offset = "0x15D5FBC", VA = "0x15D5FBC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CA88C", Offset = "0x8CA88C")]
			get
			{
				return null;
			}
			[Token(Token = "0x600194F")]
			[Address(RVA = "0x15D5FC4", Offset = "0x15D5FC4", VA = "0x15D5FC4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CA89C", Offset = "0x8CA89C")]
			set
			{
			}
		}

		[Token(Token = "0x6001950")]
		[Address(RVA = "0x15D5FCC", Offset = "0x15D5FCC", VA = "0x15D5FCC")]
		public OffMeshConnection()
		{
		}
	}
	[Token(Token = "0x2000376")]
	[Flags]
	public enum PathBuildFlags
	{
		[Token(Token = "0x40015B1")]
		None = 0,
		[Token(Token = "0x40015B2")]
		AreaCrossingVertices = 1,
		[Token(Token = "0x40015B3")]
		AllCrossingVertices = 2
	}
	[Token(Token = "0x2000377")]
	public class PathfindingCommon
	{
		[Token(Token = "0x200085B")]
		public class NavMeshInfo
		{
			[Token(Token = "0x4002932")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int X;

			[Token(Token = "0x4002933")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public int Y;

			[Token(Token = "0x4002934")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int Layer;

			[Token(Token = "0x4002935")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public int PolyCount;

			[Token(Token = "0x4002936")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int VertCount;

			[Token(Token = "0x4002937")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public int MaxLinkCount;

			[Token(Token = "0x4002938")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public int DetailMeshCount;

			[Token(Token = "0x4002939")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public int DetailVertCount;

			[Token(Token = "0x400293A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public int DetailTriCount;

			[Token(Token = "0x400293B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public int BvNodeCount;

			[Token(Token = "0x400293C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public int OffMeshConCount;

			[Token(Token = "0x400293D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public int OffMeshBase;

			[Token(Token = "0x400293E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public float WalkableHeight;

			[Token(Token = "0x400293F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			public float WalkableRadius;

			[Token(Token = "0x4002940")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public float WalkableClimb;

			[Token(Token = "0x4002941")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			public BBox3 Bounds;

			[Token(Token = "0x4002942")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
			public float BvQuantFactor;

			[Token(Token = "0x6002FD3")]
			[Address(RVA = "0x15CED68", Offset = "0x15CED68", VA = "0x15CED68")]
			public NavMeshInfo()
			{
			}
		}

		[Token(Token = "0x40015B4")]
		public const int VERTS_PER_POLYGON = 6;

		[Token(Token = "0x40015B5")]
		public const int STRAIGHTPATH_START = 1;

		[Token(Token = "0x40015B6")]
		public const int STRAIGHTPATH_END = 2;

		[Token(Token = "0x40015B7")]
		public const int STRAIGHTPATH_OFFMESH_CONNECTION = 4;

		[Token(Token = "0x6001951")]
		[Address(RVA = "0x15CF550", Offset = "0x15CF550", VA = "0x15CF550")]
		public static void RandomPointInConvexPoly(SharpNav.Geometry.Vector3[] pts, int npts, float[] areas, float s, float t, out SharpNav.Geometry.Vector3 pt)
		{
		}

		[Token(Token = "0x6001952")]
		[Address(RVA = "0x15D5FD4", Offset = "0x15D5FD4", VA = "0x15D5FD4")]
		public PathfindingCommon()
		{
		}
	}
	[Token(Token = "0x2000378")]
	public class Poly
	{
		[Token(Token = "0x40015B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private PolygonType polyType;

		[Token(Token = "0x40015B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8BEB68", Offset = "0x8BEB68")]
		private int <FirstLink>k__BackingField;

		[Token(Token = "0x40015BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8BEB78", Offset = "0x8BEB78")]
		private int[] <Verts>k__BackingField;

		[Token(Token = "0x40015BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8BEB88", Offset = "0x8BEB88")]
		private int[] <Neis>k__BackingField;

		[Token(Token = "0x40015BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8BEB98", Offset = "0x8BEB98")]
		private int <Flags>k__BackingField;

		[Token(Token = "0x40015BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8BEBA8", Offset = "0x8BEBA8")]
		private int <VertCount>k__BackingField;

		[Token(Token = "0x40015BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8BEBB8", Offset = "0x8BEBB8")]
		private Area <Area>k__BackingField;

		[Token(Token = "0x170002C7")]
		public int FirstLink
		{
			[Token(Token = "0x6001953")]
			[Address(RVA = "0x15D5FDC", Offset = "0x15D5FDC", VA = "0x15D5FDC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CA8AC", Offset = "0x8CA8AC")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001954")]
			[Address(RVA = "0x15D5FE4", Offset = "0x15D5FE4", VA = "0x15D5FE4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CA8BC", Offset = "0x8CA8BC")]
			set
			{
			}
		}

		[Token(Token = "0x170002C8")]
		public int[] Verts
		{
			[Token(Token = "0x6001955")]
			[Address(RVA = "0x15D5FEC", Offset = "0x15D5FEC", VA = "0x15D5FEC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CA8CC", Offset = "0x8CA8CC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001956")]
			[Address(RVA = "0x15D5FF4", Offset = "0x15D5FF4", VA = "0x15D5FF4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CA8DC", Offset = "0x8CA8DC")]
			set
			{
			}
		}

		[Token(Token = "0x170002C9")]
		public int[] Neis
		{
			[Token(Token = "0x6001957")]
			[Address(RVA = "0x15D5FFC", Offset = "0x15D5FFC", VA = "0x15D5FFC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CA8EC", Offset = "0x8CA8EC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001958")]
			[Address(RVA = "0x15D6004", Offset = "0x15D6004", VA = "0x15D6004")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CA8FC", Offset = "0x8CA8FC")]
			set
			{
			}
		}

		[Token(Token = "0x170002CA")]
		public int Flags
		{
			[Token(Token = "0x6001959")]
			[Address(RVA = "0x15D600C", Offset = "0x15D600C", VA = "0x15D600C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CA90C", Offset = "0x8CA90C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600195A")]
			[Address(RVA = "0x15D6014", Offset = "0x15D6014", VA = "0x15D6014")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CA91C", Offset = "0x8CA91C")]
			set
			{
			}
		}

		[Token(Token = "0x170002CB")]
		public int VertCount
		{
			[Token(Token = "0x600195B")]
			[Address(RVA = "0x15D601C", Offset = "0x15D601C", VA = "0x15D601C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CA92C", Offset = "0x8CA92C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600195C")]
			[Address(RVA = "0x15D6024", Offset = "0x15D6024", VA = "0x15D6024")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CA93C", Offset = "0x8CA93C")]
			set
			{
			}
		}

		[Token(Token = "0x170002CC")]
		public Area Area
		{
			[Token(Token = "0x600195D")]
			[Address(RVA = "0x15D602C", Offset = "0x15D602C", VA = "0x15D602C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CA94C", Offset = "0x8CA94C")]
			get
			{
				return default(Area);
			}
			[Token(Token = "0x600195E")]
			[Address(RVA = "0x15D6034", Offset = "0x15D6034", VA = "0x15D6034")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CA95C", Offset = "0x8CA95C")]
			set
			{
			}
		}

		[Token(Token = "0x170002CD")]
		public PolygonType PolyType
		{
			[Token(Token = "0x600195F")]
			[Address(RVA = "0x15D603C", Offset = "0x15D603C", VA = "0x15D603C")]
			get
			{
				return default(PolygonType);
			}
			[Token(Token = "0x6001960")]
			[Address(RVA = "0x15D6044", Offset = "0x15D6044", VA = "0x15D6044")]
			set
			{
			}
		}

		[Token(Token = "0x6001961")]
		[Address(RVA = "0x15CED70", Offset = "0x15CED70", VA = "0x15CED70")]
		public Poly()
		{
		}
	}
	[Token(Token = "0x2000379")]
	[Flags]
	public enum PolygonType : byte
	{
		[Token(Token = "0x40015C0")]
		Ground = 0,
		[Token(Token = "0x40015C1")]
		OffMeshConnection = 1
	}
}
namespace SharpNav.Geometry
{
	[Serializable]
	[Token(Token = "0x200037A")]
	public struct BBox2i : IEquatable<BBox2i>
	{
		[Token(Token = "0x40015C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector2i Min;

		[Token(Token = "0x40015C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Vector2i Max;

		[Token(Token = "0x6001962")]
		[Address(RVA = "0x99D3EC", Offset = "0x99D3EC", VA = "0x99D3EC")]
		public BBox2i(Vector2i min, Vector2i max)
		{
		}

		[Token(Token = "0x6001963")]
		[Address(RVA = "0x99D3F4", Offset = "0x99D3F4", VA = "0x99D3F4")]
		public BBox2i(int minX, int minY, int maxX, int maxY)
		{
		}

		[Token(Token = "0x6001964")]
		[Address(RVA = "0x1634818", Offset = "0x1634818", VA = "0x1634818")]
		public static bool operator ==(BBox2i left, BBox2i right)
		{
			return default(bool);
		}

		[Token(Token = "0x6001965")]
		[Address(RVA = "0x1634918", Offset = "0x1634918", VA = "0x1634918")]
		public static bool operator !=(BBox2i left, BBox2i right)
		{
			return default(bool);
		}

		[Token(Token = "0x6001966")]
		[Address(RVA = "0x99D400", Offset = "0x99D400", VA = "0x99D400", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6001967")]
		[Address(RVA = "0x99D408", Offset = "0x99D408", VA = "0x99D408", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x6001968")]
		[Address(RVA = "0x99D43C", Offset = "0x99D43C", VA = "0x99D43C", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6001969")]
		[Address(RVA = "0x99D458", Offset = "0x99D458", VA = "0x99D458", Slot = "4")]
		public bool Equals(BBox2i other)
		{
			return default(bool);
		}
	}
	[Serializable]
	[Token(Token = "0x200037B")]
	public struct BBox3 : IEquatable<BBox3>
	{
		[Token(Token = "0x40015C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 Min;

		[Token(Token = "0x40015C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Vector3 Max;

		[Token(Token = "0x170002CE")]
		public Vector3 Center
		{
			[Token(Token = "0x600196C")]
			[Address(RVA = "0x99D480", Offset = "0x99D480", VA = "0x99D480")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170002CF")]
		public Vector3 Size
		{
			[Token(Token = "0x600196D")]
			[Address(RVA = "0x99D488", Offset = "0x99D488", VA = "0x99D488")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x600196A")]
		[Address(RVA = "0x99D460", Offset = "0x99D460", VA = "0x99D460")]
		public BBox3(Vector3 min, Vector3 max)
		{
		}

		[Token(Token = "0x600196B")]
		[Address(RVA = "0x99D470", Offset = "0x99D470", VA = "0x99D470")]
		public BBox3(float minX, float minY, float minZ, float maxX, float maxY, float maxZ)
		{
		}

		[Token(Token = "0x600196E")]
		[Address(RVA = "0x1634F74", Offset = "0x1634F74", VA = "0x1634F74")]
		public static bool Overlapping(ref BBox3 a, ref BBox3 b)
		{
			return default(bool);
		}

		[Token(Token = "0x600196F")]
		[Address(RVA = "0x1634FE0", Offset = "0x1634FE0", VA = "0x1634FE0")]
		public static bool IsValid(ref BBox3 b)
		{
			return default(bool);
		}

		[Token(Token = "0x6001970")]
		[Address(RVA = "0x1635094", Offset = "0x1635094", VA = "0x1635094")]
		public static bool operator ==(BBox3 left, BBox3 right)
		{
			return default(bool);
		}

		[Token(Token = "0x6001971")]
		[Address(RVA = "0x16351C0", Offset = "0x16351C0", VA = "0x16351C0")]
		public static bool operator !=(BBox3 left, BBox3 right)
		{
			return default(bool);
		}

		[Token(Token = "0x6001972")]
		[Address(RVA = "0x99D490", Offset = "0x99D490", VA = "0x99D490", Slot = "4")]
		public bool Equals(BBox3 other)
		{
			return default(bool);
		}

		[Token(Token = "0x6001973")]
		[Address(RVA = "0x99D4C8", Offset = "0x99D4C8", VA = "0x99D4C8", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6001974")]
		[Address(RVA = "0x99D4D0", Offset = "0x99D4D0", VA = "0x99D4D0", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x6001975")]
		[Address(RVA = "0x99D504", Offset = "0x99D504", VA = "0x99D504", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x200037C")]
	internal static class Containment
	{
		[Token(Token = "0x6001976")]
		[Address(RVA = "0x1635690", Offset = "0x1635690", VA = "0x1635690")]
		internal static bool PointInPoly(Vector3 pt, Vector3[] verts, int nverts)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200037D")]
	internal static class Distance
	{
		[Token(Token = "0x6001977")]
		[Address(RVA = "0x1635764", Offset = "0x1635764", VA = "0x1635764")]
		internal static float PointToSegmentSquared(ref Vector3 pt, ref Vector3 p, ref Vector3 q)
		{
			return default(float);
		}

		[Token(Token = "0x6001978")]
		[Address(RVA = "0x162CE00", Offset = "0x162CE00", VA = "0x162CE00")]
		internal static float PointToSegment2DSquared(int x, int z, int px, int pz, int qx, int qz)
		{
			return default(float);
		}

		[Token(Token = "0x6001979")]
		[Address(RVA = "0x16358C8", Offset = "0x16358C8", VA = "0x16358C8")]
		internal static float PointToSegment2DSquared(ref Vector3 pt, ref Vector3 p, ref Vector3 q)
		{
			return default(float);
		}

		[Token(Token = "0x600197A")]
		[Address(RVA = "0x1633558", Offset = "0x1633558", VA = "0x1633558")]
		internal static float PointToSegment2DSquared(ref Vector3 pt, ref Vector3 p, ref Vector3 q, out float t)
		{
			return default(float);
		}

		[Token(Token = "0x600197B")]
		[Address(RVA = "0x16358EC", Offset = "0x16358EC", VA = "0x16358EC")]
		internal static float PointToPolygonSquared(Vector3 point, Vector3[] verts, int vertCount)
		{
			return default(float);
		}

		[Token(Token = "0x600197C")]
		[Address(RVA = "0x1635AB8", Offset = "0x1635AB8", VA = "0x1635AB8")]
		internal static float PointToPolygonEdgeSquared(Vector3 pt, Vector3[] verts, int nverts)
		{
			return default(float);
		}

		[Token(Token = "0x600197D")]
		[Address(RVA = "0x1635C28", Offset = "0x1635C28", VA = "0x1635C28")]
		internal static bool PointToPolygonEdgeSquared(Vector3 pt, Vector3[] verts, int nverts, float[] edgeDist, float[] edgeT)
		{
			return default(bool);
		}

		[Token(Token = "0x600197E")]
		[Address(RVA = "0x1635D50", Offset = "0x1635D50", VA = "0x1635D50")]
		internal static float PointToTriangle(Vector3 p, Vector3 a, Vector3 b, Vector3 c)
		{
			return default(float);
		}

		[Token(Token = "0x600197F")]
		[Address(RVA = "0x1635E58", Offset = "0x1635E58", VA = "0x1635E58")]
		internal static bool PointToTriangle(Vector3 p, Vector3 a, Vector3 b, Vector3 c, out float height)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200037E")]
	internal static class Intersection
	{
		[Token(Token = "0x6001980")]
		[Address(RVA = "0x1636084", Offset = "0x1636084", VA = "0x1636084")]
		internal static bool SegmentSegment2D(ref Vector3 a, ref Vector3 b, ref Vector3 c, ref Vector3 d)
		{
			return default(bool);
		}

		[Token(Token = "0x6001981")]
		[Address(RVA = "0x163613C", Offset = "0x163613C", VA = "0x163613C")]
		internal static bool SegmentSegment2D(ref Vector3 a, ref Vector3 b, ref Vector3 c, ref Vector3 d, out float s, out float t)
		{
			return default(bool);
		}

		[Token(Token = "0x6001982")]
		[Address(RVA = "0x1636310", Offset = "0x1636310", VA = "0x1636310")]
		internal static bool PolyPoly2D(Vector3[] polya, int npolya, Vector3[] polyb, int npolyb)
		{
			return default(bool);
		}

		[Token(Token = "0x6001983")]
		[Address(RVA = "0x16366C8", Offset = "0x16366C8", VA = "0x16366C8")]
		internal static bool SegmentPoly2D(Vector3 p0, Vector3 p1, Vector3[] verts, int nverts, out float tmin, out float tmax, out int segMin, out int segMax)
		{
			return default(bool);
		}

		[Token(Token = "0x6001984")]
		[Address(RVA = "0x1636544", Offset = "0x1636544", VA = "0x1636544")]
		internal static void ProjectPoly(Vector3 axis, Vector3[] poly, int npoly, out float rmin, out float rmax)
		{
		}

		[Token(Token = "0x6001985")]
		[Address(RVA = "0x16366A8", Offset = "0x16366A8", VA = "0x16366A8")]
		internal static bool OverlapRange(float amin, float amax, float bmin, float bmax, float eps)
		{
			return default(bool);
		}
	}
	[Serializable]
	[Token(Token = "0x200037F")]
	public struct Triangle3 : IEquatable<Triangle3>
	{
		[Token(Token = "0x40015C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 A;

		[Token(Token = "0x40015C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Vector3 B;

		[Token(Token = "0x40015C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 C;

		[Token(Token = "0x170002D0")]
		public Vector3 AB
		{
			[Token(Token = "0x6001987")]
			[Address(RVA = "0x99D52C", Offset = "0x99D52C", VA = "0x99D52C")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170002D1")]
		public Vector3 AC
		{
			[Token(Token = "0x6001988")]
			[Address(RVA = "0x99D534", Offset = "0x99D534", VA = "0x99D534")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170002D2")]
		public Vector3 BA
		{
			[Token(Token = "0x6001989")]
			[Address(RVA = "0x99D53C", Offset = "0x99D53C", VA = "0x99D53C")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170002D3")]
		public Vector3 BC
		{
			[Token(Token = "0x600198A")]
			[Address(RVA = "0x99D544", Offset = "0x99D544", VA = "0x99D544")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170002D4")]
		public Vector3 CA
		{
			[Token(Token = "0x600198B")]
			[Address(RVA = "0x99D54C", Offset = "0x99D54C", VA = "0x99D54C")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170002D5")]
		public Vector3 CB
		{
			[Token(Token = "0x600198C")]
			[Address(RVA = "0x99D554", Offset = "0x99D554", VA = "0x99D554")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170002D6")]
		public float Area
		{
			[Token(Token = "0x600198D")]
			[Address(RVA = "0x99D55C", Offset = "0x99D55C", VA = "0x99D55C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170002D7")]
		public float Perimeter
		{
			[Token(Token = "0x600198E")]
			[Address(RVA = "0x99D564", Offset = "0x99D564", VA = "0x99D564")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170002D8")]
		public Vector3 Centroid
		{
			[Token(Token = "0x600198F")]
			[Address(RVA = "0x99D56C", Offset = "0x99D56C", VA = "0x99D56C")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170002D9")]
		public Vector3 Normal
		{
			[Token(Token = "0x6001990")]
			[Address(RVA = "0x99D574", Offset = "0x99D574", VA = "0x99D574")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x6001986")]
		[Address(RVA = "0x99D50C", Offset = "0x99D50C", VA = "0x99D50C")]
		public Triangle3(Vector3 a, Vector3 b, Vector3 c)
		{
		}

		[Token(Token = "0x6001991")]
		[Address(RVA = "0x16370A4", Offset = "0x16370A4", VA = "0x16370A4")]
		public static bool operator ==(Triangle3 left, Triangle3 right)
		{
			return default(bool);
		}

		[Token(Token = "0x6001992")]
		[Address(RVA = "0x1637174", Offset = "0x1637174", VA = "0x1637174")]
		public static bool operator !=(Triangle3 left, Triangle3 right)
		{
			return default(bool);
		}

		[Token(Token = "0x6001993")]
		[Address(RVA = "0x16371AC", Offset = "0x16371AC", VA = "0x16371AC")]
		public static BBox3 GetBoundingBox(Triangle3 tri)
		{
			return default(BBox3);
		}

		[Token(Token = "0x6001994")]
		[Address(RVA = "0x16371F4", Offset = "0x16371F4", VA = "0x16371F4")]
		public static void GetBoundingBox(ref Triangle3 tri, out BBox3 bbox)
		{
		}

		[Token(Token = "0x6001995")]
		[Address(RVA = "0x1637208", Offset = "0x1637208", VA = "0x1637208")]
		public static void GetBoundingBox(ref Vector3 a, ref Vector3 b, ref Vector3 c, out BBox3 bbox)
		{
		}

		[Token(Token = "0x6001996")]
		[Address(RVA = "0x1637284", Offset = "0x1637284", VA = "0x1637284")]
		public static void Area2D(ref Vector3 a, ref Vector3 b, ref Vector3 c, out float area)
		{
		}

		[Token(Token = "0x6001997")]
		[Address(RVA = "0x1631A7C", Offset = "0x1631A7C", VA = "0x1631A7C")]
		public static float Area2D(Vector3 a, Vector3 b, Vector3 c)
		{
			return default(float);
		}

		[Token(Token = "0x6001998")]
		[Address(RVA = "0x99D57C", Offset = "0x99D57C", VA = "0x99D57C", Slot = "4")]
		public bool Equals(Triangle3 other)
		{
			return default(bool);
		}

		[Token(Token = "0x6001999")]
		[Address(RVA = "0x99D5B4", Offset = "0x99D5B4", VA = "0x99D5B4", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x600199A")]
		[Address(RVA = "0x99D5BC", Offset = "0x99D5BC", VA = "0x99D5BC", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x600199B")]
		[Address(RVA = "0x99D5C4", Offset = "0x99D5C4", VA = "0x99D5C4", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x2000380")]
	public static class TriangleEnumerable
	{
		[Token(Token = "0x200085C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B8E70", Offset = "0x8B8E70")]
		private sealed class <FromTriangle>d__0 : IEnumerable<Triangle3>, IEnumerable, IEnumerator<Triangle3>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002943")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002944")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private Triangle3 <>2__current;

			[Token(Token = "0x4002945")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4002946")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private Triangle3[] triangles;

			[Token(Token = "0x4002947")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public Triangle3[] <>3__triangles;

			[Token(Token = "0x4002948")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private int triOffset;

			[Token(Token = "0x4002949")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			public int <>3__triOffset;

			[Token(Token = "0x400294A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private int triCount;

			[Token(Token = "0x400294B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			public int <>3__triCount;

			[Token(Token = "0x400294C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private int <i>5__2;

			[Token(Token = "0x17000688")]
			private Triangle3 System.Collections.Generic.IEnumerator<SharpNav.Geometry.Triangle3>.Current
			{
				[Token(Token = "0x6002FD7")]
				[Address(RVA = "0x1638BEC", Offset = "0x1638BEC", VA = "0x1638BEC", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return default(Triangle3);
				}
			}

			[Token(Token = "0x17000689")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002FD9")]
				[Address(RVA = "0x1638C64", Offset = "0x1638C64", VA = "0x1638C64", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002FD4")]
			[Address(RVA = "0x16376B8", Offset = "0x16376B8", VA = "0x16376B8")]
			[DebuggerHidden]
			public <FromTriangle>d__0(int <>1__state)
			{
			}

			[Token(Token = "0x6002FD5")]
			[Address(RVA = "0x1638B3C", Offset = "0x1638B3C", VA = "0x1638B3C", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002FD6")]
			[Address(RVA = "0x1638B40", Offset = "0x1638B40", VA = "0x1638B40", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002FD8")]
			[Address(RVA = "0x1638C04", Offset = "0x1638C04", VA = "0x1638C04", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6002FDA")]
			[Address(RVA = "0x1638CD4", Offset = "0x1638CD4", VA = "0x1638CD4", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<Triangle3> System.Collections.Generic.IEnumerable<SharpNav.Geometry.Triangle3>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6002FDB")]
			[Address(RVA = "0x1638D90", Offset = "0x1638D90", VA = "0x1638D90", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x200085D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B8E80", Offset = "0x8B8E80")]
		private sealed class <FromVector3>d__1 : IEnumerable<Triangle3>, IEnumerable, IEnumerator<Triangle3>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400294D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400294E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private Triangle3 <>2__current;

			[Token(Token = "0x400294F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4002950")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private int vertStride;

			[Token(Token = "0x4002951")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public int <>3__vertStride;

			[Token(Token = "0x4002952")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private Vector3[] vertices;

			[Token(Token = "0x4002953")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public Vector3[] <>3__vertices;

			[Token(Token = "0x4002954")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private int vertOffset;

			[Token(Token = "0x4002955")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			public int <>3__vertOffset;

			[Token(Token = "0x4002956")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private int triCount;

			[Token(Token = "0x4002957")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
			public int <>3__triCount;

			[Token(Token = "0x4002958")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			private int <i>5__2;

			[Token(Token = "0x1700068A")]
			private Triangle3 System.Collections.Generic.IEnumerator<SharpNav.Geometry.Triangle3>.Current
			{
				[Token(Token = "0x6002FDF")]
				[Address(RVA = "0x1638EAC", Offset = "0x1638EAC", VA = "0x1638EAC", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return default(Triangle3);
				}
			}

			[Token(Token = "0x1700068B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002FE1")]
				[Address(RVA = "0x1638F24", Offset = "0x1638F24", VA = "0x1638F24", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002FDC")]
			[Address(RVA = "0x1637798", Offset = "0x1637798", VA = "0x1637798")]
			[DebuggerHidden]
			public <FromVector3>d__1(int <>1__state)
			{
			}

			[Token(Token = "0x6002FDD")]
			[Address(RVA = "0x1638D94", Offset = "0x1638D94", VA = "0x1638D94", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002FDE")]
			[Address(RVA = "0x1638D98", Offset = "0x1638D98", VA = "0x1638D98", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002FE0")]
			[Address(RVA = "0x1638EC4", Offset = "0x1638EC4", VA = "0x1638EC4", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6002FE2")]
			[Address(RVA = "0x1638F94", Offset = "0x1638F94", VA = "0x1638F94", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<Triangle3> System.Collections.Generic.IEnumerable<SharpNav.Geometry.Triangle3>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6002FE3")]
			[Address(RVA = "0x1639058", Offset = "0x1639058", VA = "0x1639058", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x200085E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B8E90", Offset = "0x8B8E90")]
		private sealed class <FromFloat>d__2 : IEnumerable<Triangle3>, IEnumerable, IEnumerator<Triangle3>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002959")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400295A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private Triangle3 <>2__current;

			[Token(Token = "0x400295B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private int <>l__initialThreadId;

			[Token(Token = "0x400295C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private int floatStride;

			[Token(Token = "0x400295D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public int <>3__floatStride;

			[Token(Token = "0x400295E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			private int floatOffset;

			[Token(Token = "0x400295F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public int <>3__floatOffset;

			[Token(Token = "0x4002960")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private float[] vertices;

			[Token(Token = "0x4002961")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public float[] <>3__vertices;

			[Token(Token = "0x4002962")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private int triCount;

			[Token(Token = "0x4002963")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
			public int <>3__triCount;

			[Token(Token = "0x4002964")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			private int <i>5__2;

			[Token(Token = "0x1700068C")]
			private Triangle3 System.Collections.Generic.IEnumerator<SharpNav.Geometry.Triangle3>.Current
			{
				[Token(Token = "0x6002FE7")]
				[Address(RVA = "0x1638318", Offset = "0x1638318", VA = "0x1638318", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return default(Triangle3);
				}
			}

			[Token(Token = "0x1700068D")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002FE9")]
				[Address(RVA = "0x1638390", Offset = "0x1638390", VA = "0x1638390", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002FE4")]
			[Address(RVA = "0x1637878", Offset = "0x1637878", VA = "0x1637878")]
			[DebuggerHidden]
			public <FromFloat>d__2(int <>1__state)
			{
			}

			[Token(Token = "0x6002FE5")]
			[Address(RVA = "0x16381B0", Offset = "0x16381B0", VA = "0x16381B0", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002FE6")]
			[Address(RVA = "0x16381B4", Offset = "0x16381B4", VA = "0x16381B4", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002FE8")]
			[Address(RVA = "0x1638330", Offset = "0x1638330", VA = "0x1638330", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6002FEA")]
			[Address(RVA = "0x1638400", Offset = "0x1638400", VA = "0x1638400", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<Triangle3> System.Collections.Generic.IEnumerable<SharpNav.Geometry.Triangle3>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6002FEB")]
			[Address(RVA = "0x16384C4", Offset = "0x16384C4", VA = "0x16384C4", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x200085F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B8EA0", Offset = "0x8B8EA0")]
		private sealed class <FromIndexedVector3>d__3 : IEnumerable<Triangle3>, IEnumerable, IEnumerator<Triangle3>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002965")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002966")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private Triangle3 <>2__current;

			[Token(Token = "0x4002967")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4002968")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private int vertOffset;

			[Token(Token = "0x4002969")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public int <>3__vertOffset;

			[Token(Token = "0x400296A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private int[] indices;

			[Token(Token = "0x400296B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public int[] <>3__indices;

			[Token(Token = "0x400296C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private int indexOffset;

			[Token(Token = "0x400296D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			public int <>3__indexOffset;

			[Token(Token = "0x400296E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private int vertStride;

			[Token(Token = "0x400296F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
			public int <>3__vertStride;

			[Token(Token = "0x4002970")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			private Vector3[] vertices;

			[Token(Token = "0x4002971")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			public Vector3[] <>3__vertices;

			[Token(Token = "0x4002972")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			private int triCount;

			[Token(Token = "0x4002973")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
			public int <>3__triCount;

			[Token(Token = "0x4002974")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			private int <i>5__2;

			[Token(Token = "0x1700068E")]
			private Triangle3 System.Collections.Generic.IEnumerator<SharpNav.Geometry.Triangle3>.Current
			{
				[Token(Token = "0x6002FEF")]
				[Address(RVA = "0x163897C", Offset = "0x163897C", VA = "0x163897C", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return default(Triangle3);
				}
			}

			[Token(Token = "0x1700068F")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002FF1")]
				[Address(RVA = "0x16389F4", Offset = "0x16389F4", VA = "0x16389F4", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002FEC")]
			[Address(RVA = "0x1637970", Offset = "0x1637970", VA = "0x1637970")]
			[DebuggerHidden]
			public <FromIndexedVector3>d__3(int <>1__state)
			{
			}

			[Token(Token = "0x6002FED")]
			[Address(RVA = "0x1638824", Offset = "0x1638824", VA = "0x1638824", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002FEE")]
			[Address(RVA = "0x1638828", Offset = "0x1638828", VA = "0x1638828", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002FF0")]
			[Address(RVA = "0x1638994", Offset = "0x1638994", VA = "0x1638994", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6002FF2")]
			[Address(RVA = "0x1638A64", Offset = "0x1638A64", VA = "0x1638A64", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<Triangle3> System.Collections.Generic.IEnumerable<SharpNav.Geometry.Triangle3>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6002FF3")]
			[Address(RVA = "0x1638B38", Offset = "0x1638B38", VA = "0x1638B38", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x2000860")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B8EB0", Offset = "0x8B8EB0")]
		private sealed class <FromIndexedFloat>d__4 : IEnumerable<Triangle3>, IEnumerable, IEnumerator<Triangle3>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002975")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002976")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private Triangle3 <>2__current;

			[Token(Token = "0x4002977")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4002978")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private int floatOffset;

			[Token(Token = "0x4002979")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public int <>3__floatOffset;

			[Token(Token = "0x400297A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private int[] indices;

			[Token(Token = "0x400297B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public int[] <>3__indices;

			[Token(Token = "0x400297C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private int indexOffset;

			[Token(Token = "0x400297D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			public int <>3__indexOffset;

			[Token(Token = "0x400297E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private int floatStride;

			[Token(Token = "0x400297F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
			public int <>3__floatStride;

			[Token(Token = "0x4002980")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			private float[] vertices;

			[Token(Token = "0x4002981")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			public float[] <>3__vertices;

			[Token(Token = "0x4002982")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			private int triCount;

			[Token(Token = "0x4002983")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
			public int <>3__triCount;

			[Token(Token = "0x4002984")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			private int <i>5__2;

			[Token(Token = "0x17000690")]
			private Triangle3 System.Collections.Generic.IEnumerator<SharpNav.Geometry.Triangle3>.Current
			{
				[Token(Token = "0x6002FF7")]
				[Address(RVA = "0x1638664", Offset = "0x1638664", VA = "0x1638664", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return default(Triangle3);
				}
			}

			[Token(Token = "0x17000691")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002FF9")]
				[Address(RVA = "0x16386DC", Offset = "0x16386DC", VA = "0x16386DC", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002FF4")]
			[Address(RVA = "0x1637A68", Offset = "0x1637A68", VA = "0x1637A68")]
			[DebuggerHidden]
			public <FromIndexedFloat>d__4(int <>1__state)
			{
			}

			[Token(Token = "0x6002FF5")]
			[Address(RVA = "0x16384C8", Offset = "0x16384C8", VA = "0x16384C8", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002FF6")]
			[Address(RVA = "0x16384CC", Offset = "0x16384CC", VA = "0x16384CC", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002FF8")]
			[Address(RVA = "0x163867C", Offset = "0x163867C", VA = "0x163867C", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6002FFA")]
			[Address(RVA = "0x163874C", Offset = "0x163874C", VA = "0x163874C", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<Triangle3> System.Collections.Generic.IEnumerable<SharpNav.Geometry.Triangle3>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6002FFB")]
			[Address(RVA = "0x1638820", Offset = "0x1638820", VA = "0x1638820", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x600199C")]
		[Address(RVA = "0x1637620", Offset = "0x1637620", VA = "0x1637620")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8CA96C", Offset = "0x8CA96C")]
		public static IEnumerable<Triangle3> FromTriangle(Triangle3[] triangles, int triOffset, int triCount)
		{
			return null;
		}

		[Token(Token = "0x600199D")]
		[Address(RVA = "0x16376F0", Offset = "0x16376F0", VA = "0x16376F0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8CA9D0", Offset = "0x8CA9D0")]
		public static IEnumerable<Triangle3> FromVector3(Vector3[] vertices, int vertOffset, int vertStride, int triCount)
		{
			return null;
		}

		[Token(Token = "0x600199E")]
		[Address(RVA = "0x16377D0", Offset = "0x16377D0", VA = "0x16377D0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8CAA34", Offset = "0x8CAA34")]
		public static IEnumerable<Triangle3> FromFloat(float[] vertices, int floatOffset, int floatStride, int triCount)
		{
			return null;
		}

		[Token(Token = "0x600199F")]
		[Address(RVA = "0x16378B0", Offset = "0x16378B0", VA = "0x16378B0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8CAA98", Offset = "0x8CAA98")]
		public static IEnumerable<Triangle3> FromIndexedVector3(Vector3[] vertices, int[] indices, int vertOffset, int vertStride, int indexOffset, int triCount)
		{
			return null;
		}

		[Token(Token = "0x60019A0")]
		[Address(RVA = "0x16379A8", Offset = "0x16379A8", VA = "0x16379A8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8CAAFC", Offset = "0x8CAAFC")]
		public static IEnumerable<Triangle3> FromIndexedFloat(float[] vertices, int[] indices, int floatOffset, int floatStride, int indexOffset, int triCount)
		{
			return null;
		}

		[Token(Token = "0x60019A1")]
		[Address(RVA = "0x1637AA0", Offset = "0x1637AA0", VA = "0x1637AA0")]
		public static BBox3 GetBoundingBox(this IEnumerable<Triangle3> tris)
		{
			return default(BBox3);
		}

		[Token(Token = "0x60019A2")]
		[Address(RVA = "0x1637AAC", Offset = "0x1637AAC", VA = "0x1637AAC")]
		public static BBox3 GetBoundingBox(this IEnumerable<Triangle3> tris, float padding)
		{
			return default(BBox3);
		}

		[Token(Token = "0x60019A3")]
		[Address(RVA = "0x1637EC4", Offset = "0x1637EC4", VA = "0x1637EC4")]
		public static BBox3 GetBoundingBox(this IEnumerable<Vector3> vecs)
		{
			return default(BBox3);
		}

		[Token(Token = "0x60019A4")]
		[Address(RVA = "0x1637E1C", Offset = "0x1637E1C", VA = "0x1637E1C")]
		private static void ApplyVertexToBounds(ref Vector3 v, ref BBox3 b)
		{
		}

		[Token(Token = "0x60019A5")]
		[Address(RVA = "0x1637E98", Offset = "0x1637E98", VA = "0x1637E98")]
		private static void ApplyPaddingToBounds(float pad, ref BBox3 b)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000381")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x8B6ED8", Offset = "0x8B6ED8")]
	public struct Vector2 : IEquatable<Vector2>
	{
		[Token(Token = "0x40015C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static string listSeparator;

		[Token(Token = "0x40015CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float X;

		[Token(Token = "0x40015CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float Y;

		[Token(Token = "0x40015CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static readonly Vector2 UnitX;

		[Token(Token = "0x40015CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static readonly Vector2 UnitY;

		[Token(Token = "0x40015CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static readonly Vector2 Zero;

		[Token(Token = "0x40015CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static readonly Vector2 One;

		[Token(Token = "0x170002DA")]
		public float Length
		{
			[Token(Token = "0x60019AA")]
			[Address(RVA = "0x99D5EC", Offset = "0x99D5EC", VA = "0x99D5EC")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170002DB")]
		public float LengthSquared
		{
			[Token(Token = "0x60019AB")]
			[Address(RVA = "0x99D5F4", Offset = "0x99D5F4", VA = "0x99D5F4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170002DC")]
		public Vector2 PerpendicularRight
		{
			[Token(Token = "0x60019AC")]
			[Address(RVA = "0x99D608", Offset = "0x99D608", VA = "0x99D608")]
			get
			{
				return default(Vector2);
			}
		}

		[Token(Token = "0x170002DD")]
		public Vector2 PerpendicularLeft
		{
			[Token(Token = "0x60019AD")]
			[Address(RVA = "0x99D614", Offset = "0x99D614", VA = "0x99D614")]
			get
			{
				return default(Vector2);
			}
		}

		[Token(Token = "0x170002DE")]
		public float Item
		{
			[Token(Token = "0x60019AE")]
			[Address(RVA = "0x99D620", Offset = "0x99D620", VA = "0x99D620")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60019AF")]
			[Address(RVA = "0x99D628", Offset = "0x99D628", VA = "0x99D628")]
			set
			{
			}
		}

		[Token(Token = "0x170002DF")]
		public Vector2 Yx
		{
			[Token(Token = "0x60019D0")]
			[Address(RVA = "0x99D6AC", Offset = "0x99D6AC", VA = "0x99D6AC")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x60019D1")]
			[Address(RVA = "0x99D6B4", Offset = "0x99D6B4", VA = "0x99D6B4")]
			set
			{
			}
		}

		[Token(Token = "0x60019A6")]
		[Address(RVA = "0x99D5CC", Offset = "0x99D5CC", VA = "0x99D5CC")]
		public Vector2(float value)
		{
		}

		[Token(Token = "0x60019A7")]
		[Address(RVA = "0x99D5D4", Offset = "0x99D5D4", VA = "0x99D5D4")]
		public Vector2(float x, float y)
		{
		}

		[Token(Token = "0x60019A8")]
		[Address(RVA = "0x99D5DC", Offset = "0x99D5DC", VA = "0x99D5DC")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x8CAB90", Offset = "0x8CAB90")]
		public Vector2(Vector2 v)
		{
		}

		[Token(Token = "0x60019A9")]
		[Address(RVA = "0x99D5E4", Offset = "0x99D5E4", VA = "0x99D5E4")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x8CABA0", Offset = "0x8CABA0")]
		public Vector2(Vector3 v)
		{
		}

		[Token(Token = "0x60019B0")]
		[Address(RVA = "0x99D630", Offset = "0x99D630", VA = "0x99D630")]
		public Vector2 Normalized()
		{
			return default(Vector2);
		}

		[Token(Token = "0x60019B1")]
		[Address(RVA = "0x99D674", Offset = "0x99D674", VA = "0x99D674")]
		public void Normalize()
		{
		}

		[Token(Token = "0x60019B2")]
		[Address(RVA = "0x163936C", Offset = "0x163936C", VA = "0x163936C")]
		public static Vector2 Add(Vector2 a, Vector2 b)
		{
			return default(Vector2);
		}

		[Token(Token = "0x60019B3")]
		[Address(RVA = "0x16393F0", Offset = "0x16393F0", VA = "0x16393F0")]
		public static void Add(ref Vector2 a, ref Vector2 b, out Vector2 result)
		{
		}

		[Token(Token = "0x60019B4")]
		[Address(RVA = "0x1639404", Offset = "0x1639404", VA = "0x1639404")]
		public static Vector2 Subtract(Vector2 a, Vector2 b)
		{
			return default(Vector2);
		}

		[Token(Token = "0x60019B5")]
		[Address(RVA = "0x1639488", Offset = "0x1639488", VA = "0x1639488")]
		public static void Subtract(ref Vector2 a, ref Vector2 b, out Vector2 result)
		{
		}

		[Token(Token = "0x60019B6")]
		[Address(RVA = "0x163949C", Offset = "0x163949C", VA = "0x163949C")]
		public static Vector2 Multiply(Vector2 vector, float scale)
		{
			return default(Vector2);
		}

		[Token(Token = "0x60019B7")]
		[Address(RVA = "0x163951C", Offset = "0x163951C", VA = "0x163951C")]
		public static void Multiply(ref Vector2 vector, float scale, out Vector2 result)
		{
		}

		[Token(Token = "0x60019B8")]
		[Address(RVA = "0x163952C", Offset = "0x163952C", VA = "0x163952C")]
		public static Vector2 Multiply(Vector2 vector, Vector2 scale)
		{
			return default(Vector2);
		}

		[Token(Token = "0x60019B9")]
		[Address(RVA = "0x16395B0", Offset = "0x16395B0", VA = "0x16395B0")]
		public static void Multiply(ref Vector2 vector, ref Vector2 scale, out Vector2 result)
		{
		}

		[Token(Token = "0x60019BA")]
		[Address(RVA = "0x16395C4", Offset = "0x16395C4", VA = "0x16395C4")]
		public static Vector2 Divide(Vector2 vector, float scale)
		{
			return default(Vector2);
		}

		[Token(Token = "0x60019BB")]
		[Address(RVA = "0x163964C", Offset = "0x163964C", VA = "0x163964C")]
		public static void Divide(ref Vector2 vector, float scale, out Vector2 result)
		{
		}

		[Token(Token = "0x60019BC")]
		[Address(RVA = "0x16396D8", Offset = "0x16396D8", VA = "0x16396D8")]
		public static Vector2 Divide(Vector2 vector, Vector2 scale)
		{
			return default(Vector2);
		}

		[Token(Token = "0x60019BD")]
		[Address(RVA = "0x163975C", Offset = "0x163975C", VA = "0x163975C")]
		public static void Divide(ref Vector2 vector, ref Vector2 scale, out Vector2 result)
		{
		}

		[Token(Token = "0x60019BE")]
		[Address(RVA = "0x1639770", Offset = "0x1639770", VA = "0x1639770")]
		public static Vector2 ComponentMin(Vector2 a, Vector2 b)
		{
			return default(Vector2);
		}

		[Token(Token = "0x60019BF")]
		[Address(RVA = "0x1639784", Offset = "0x1639784", VA = "0x1639784")]
		public static void ComponentMin(ref Vector2 a, ref Vector2 b, out Vector2 result)
		{
		}

		[Token(Token = "0x60019C0")]
		[Address(RVA = "0x16397B0", Offset = "0x16397B0", VA = "0x16397B0")]
		public static Vector2 ComponentMax(Vector2 a, Vector2 b)
		{
			return default(Vector2);
		}

		[Token(Token = "0x60019C1")]
		[Address(RVA = "0x16397C4", Offset = "0x16397C4", VA = "0x16397C4")]
		public static void ComponentMax(ref Vector2 a, ref Vector2 b, out Vector2 result)
		{
		}

		[Token(Token = "0x60019C2")]
		[Address(RVA = "0x16397F0", Offset = "0x16397F0", VA = "0x16397F0")]
		public static Vector2 Min(Vector2 left, Vector2 right)
		{
			return default(Vector2);
		}

		[Token(Token = "0x60019C3")]
		[Address(RVA = "0x1639818", Offset = "0x1639818", VA = "0x1639818")]
		public static Vector2 Max(Vector2 left, Vector2 right)
		{
			return default(Vector2);
		}

		[Token(Token = "0x60019C4")]
		[Address(RVA = "0x1639840", Offset = "0x1639840", VA = "0x1639840")]
		public static Vector2 Clamp(Vector2 vec, Vector2 min, Vector2 max)
		{
			return default(Vector2);
		}

		[Token(Token = "0x60019C5")]
		[Address(RVA = "0x163987C", Offset = "0x163987C", VA = "0x163987C")]
		public static void Clamp(ref Vector2 vec, ref Vector2 min, ref Vector2 max, out Vector2 result)
		{
		}

		[Token(Token = "0x60019C6")]
		[Address(RVA = "0x16398D0", Offset = "0x16398D0", VA = "0x16398D0")]
		public static Vector2 Normalize(Vector2 vec)
		{
			return default(Vector2);
		}

		[Token(Token = "0x60019C7")]
		[Address(RVA = "0x1639914", Offset = "0x1639914", VA = "0x1639914")]
		public static void Normalize(ref Vector2 vec, out Vector2 result)
		{
		}

		[Token(Token = "0x60019C8")]
		[Address(RVA = "0x1639958", Offset = "0x1639958", VA = "0x1639958")]
		public static float Dot(Vector2 left, Vector2 right)
		{
			return default(float);
		}

		[Token(Token = "0x60019C9")]
		[Address(RVA = "0x1639968", Offset = "0x1639968", VA = "0x1639968")]
		public static void Dot(ref Vector2 left, ref Vector2 right, out float result)
		{
		}

		[Token(Token = "0x60019CA")]
		[Address(RVA = "0x1639984", Offset = "0x1639984", VA = "0x1639984")]
		public static float PerpDot(Vector2 left, Vector2 right)
		{
			return default(float);
		}

		[Token(Token = "0x60019CB")]
		[Address(RVA = "0x1639994", Offset = "0x1639994", VA = "0x1639994")]
		public static void PerpDot(ref Vector2 left, ref Vector2 right, out float result)
		{
		}

		[Token(Token = "0x60019CC")]
		[Address(RVA = "0x16399B0", Offset = "0x16399B0", VA = "0x16399B0")]
		public static Vector2 Lerp(Vector2 a, Vector2 b, float blend)
		{
			return default(Vector2);
		}

		[Token(Token = "0x60019CD")]
		[Address(RVA = "0x16399CC", Offset = "0x16399CC", VA = "0x16399CC")]
		public static void Lerp(ref Vector2 a, ref Vector2 b, float blend, out Vector2 result)
		{
		}

		[Token(Token = "0x60019CE")]
		[Address(RVA = "0x1639A00", Offset = "0x1639A00", VA = "0x1639A00")]
		public static Vector2 BaryCentric(Vector2 a, Vector2 b, Vector2 c, float u, float v)
		{
			return default(Vector2);
		}

		[Token(Token = "0x60019CF")]
		[Address(RVA = "0x1639AF4", Offset = "0x1639AF4", VA = "0x1639AF4")]
		public static void BaryCentric(ref Vector2 a, ref Vector2 b, ref Vector2 c, float u, float v, out Vector2 result)
		{
		}

		[Token(Token = "0x60019D2")]
		[Address(RVA = "0x1639AE8", Offset = "0x1639AE8", VA = "0x1639AE8")]
		public static Vector2 operator +(Vector2 left, Vector2 right)
		{
			return default(Vector2);
		}

		[Token(Token = "0x60019D3")]
		[Address(RVA = "0x1639ACC", Offset = "0x1639ACC", VA = "0x1639ACC")]
		public static Vector2 operator -(Vector2 left, Vector2 right)
		{
			return default(Vector2);
		}

		[Token(Token = "0x60019D4")]
		[Address(RVA = "0x1639BEC", Offset = "0x1639BEC", VA = "0x1639BEC")]
		public static Vector2 operator -(Vector2 vec)
		{
			return default(Vector2);
		}

		[Token(Token = "0x60019D5")]
		[Address(RVA = "0x1639BF8", Offset = "0x1639BF8", VA = "0x1639BF8")]
		public static Vector2 operator *(Vector2 vec, float scale)
		{
			return default(Vector2);
		}

		[Token(Token = "0x60019D6")]
		[Address(RVA = "0x1639AD8", Offset = "0x1639AD8", VA = "0x1639AD8")]
		public static Vector2 operator *(float scale, Vector2 vec)
		{
			return default(Vector2);
		}

		[Token(Token = "0x60019D7")]
		[Address(RVA = "0x1639C04", Offset = "0x1639C04", VA = "0x1639C04")]
		public static Vector2 operator *(Vector2 vec, Vector2 scale)
		{
			return default(Vector2);
		}

		[Token(Token = "0x60019D8")]
		[Address(RVA = "0x1639C10", Offset = "0x1639C10", VA = "0x1639C10")]
		public static Vector2 operator /(Vector2 vec, float scale)
		{
			return default(Vector2);
		}

		[Token(Token = "0x60019D9")]
		[Address(RVA = "0x1639C24", Offset = "0x1639C24", VA = "0x1639C24")]
		public static bool operator ==(Vector2 left, Vector2 right)
		{
			return default(bool);
		}

		[Token(Token = "0x60019DA")]
		[Address(RVA = "0x1639C60", Offset = "0x1639C60", VA = "0x1639C60")]
		public static bool operator !=(Vector2 left, Vector2 right)
		{
			return default(bool);
		}

		[Token(Token = "0x60019DB")]
		[Address(RVA = "0x99D6BC", Offset = "0x99D6BC", VA = "0x99D6BC", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x60019DC")]
		[Address(RVA = "0x99D6C4", Offset = "0x99D6C4", VA = "0x99D6C4", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x60019DD")]
		[Address(RVA = "0x99D700", Offset = "0x99D700", VA = "0x99D700", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x60019DE")]
		[Address(RVA = "0x99D708", Offset = "0x99D708", VA = "0x99D708", Slot = "4")]
		public bool Equals(Vector2 other)
		{
			return default(bool);
		}
	}
	[Serializable]
	[Token(Token = "0x2000382")]
	public struct Vector2i : IEquatable<Vector2i>
	{
		[Token(Token = "0x40015D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly Vector2i Min;

		[Token(Token = "0x40015D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static readonly Vector2i Max;

		[Token(Token = "0x40015D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static readonly Vector2i Zero;

		[Token(Token = "0x40015D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int X;

		[Token(Token = "0x40015D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int Y;

		[Token(Token = "0x60019E0")]
		[Address(RVA = "0x99D72C", Offset = "0x99D72C", VA = "0x99D72C")]
		public Vector2i(int x, int y)
		{
		}

		[Token(Token = "0x60019E1")]
		[Address(RVA = "0x1634E0C", Offset = "0x1634E0C", VA = "0x1634E0C")]
		public static bool operator ==(Vector2i left, Vector2i right)
		{
			return default(bool);
		}

		[Token(Token = "0x60019E2")]
		[Address(RVA = "0x1639F18", Offset = "0x1639F18", VA = "0x1639F18")]
		public static bool operator !=(Vector2i left, Vector2i right)
		{
			return default(bool);
		}

		[Token(Token = "0x60019E3")]
		[Address(RVA = "0x99D734", Offset = "0x99D734", VA = "0x99D734", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x60019E4")]
		[Address(RVA = "0x99D73C", Offset = "0x99D73C", VA = "0x99D73C", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x60019E5")]
		[Address(RVA = "0x99D744", Offset = "0x99D744", VA = "0x99D744", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x60019E6")]
		[Address(RVA = "0x99D760", Offset = "0x99D760", VA = "0x99D760", Slot = "4")]
		public bool Equals(Vector2i other)
		{
			return default(bool);
		}
	}
	[Serializable]
	[Token(Token = "0x2000383")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x8B6F10", Offset = "0x8B6F10")]
	public struct Vector3 : IEquatable<Vector3>
	{
		[Token(Token = "0x40015D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float X;

		[Token(Token = "0x40015D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float Y;

		[Token(Token = "0x40015D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float Z;

		[Token(Token = "0x40015D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly Vector3 UnitX;

		[Token(Token = "0x40015D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public static readonly Vector3 UnitY;

		[Token(Token = "0x40015DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static readonly Vector3 UnitZ;

		[Token(Token = "0x40015DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public static readonly Vector3 Zero;

		[Token(Token = "0x40015DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public static readonly Vector3 One;

		[Token(Token = "0x40015DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private static string listSeparator;

		[Token(Token = "0x170002E0")]
		public float Item
		{
			[Token(Token = "0x60019EC")]
			[Address(RVA = "0x99D7B8", Offset = "0x99D7B8", VA = "0x99D7B8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60019ED")]
			[Address(RVA = "0x99D7C0", Offset = "0x99D7C0", VA = "0x99D7C0")]
			set
			{
			}
		}

		[Token(Token = "0x170002E1")]
		public Vector3 Xzy
		{
			[Token(Token = "0x6001A21")]
			[Address(RVA = "0x99D9D4", Offset = "0x99D9D4", VA = "0x99D9D4")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001A22")]
			[Address(RVA = "0x99D9E0", Offset = "0x99D9E0", VA = "0x99D9E0")]
			set
			{
			}
		}

		[Token(Token = "0x170002E2")]
		public Vector3 Yxz
		{
			[Token(Token = "0x6001A23")]
			[Address(RVA = "0x99D9EC", Offset = "0x99D9EC", VA = "0x99D9EC")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001A24")]
			[Address(RVA = "0x99D9F8", Offset = "0x99D9F8", VA = "0x99D9F8")]
			set
			{
			}
		}

		[Token(Token = "0x170002E3")]
		public Vector3 Yzx
		{
			[Token(Token = "0x6001A25")]
			[Address(RVA = "0x99DA04", Offset = "0x99DA04", VA = "0x99DA04")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001A26")]
			[Address(RVA = "0x99DA10", Offset = "0x99DA10", VA = "0x99DA10")]
			set
			{
			}
		}

		[Token(Token = "0x170002E4")]
		public Vector3 Zxy
		{
			[Token(Token = "0x6001A27")]
			[Address(RVA = "0x99DA1C", Offset = "0x99DA1C", VA = "0x99DA1C")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001A28")]
			[Address(RVA = "0x99DA28", Offset = "0x99DA28", VA = "0x99DA28")]
			set
			{
			}
		}

		[Token(Token = "0x170002E5")]
		public Vector3 Zyx
		{
			[Token(Token = "0x6001A29")]
			[Address(RVA = "0x99DA34", Offset = "0x99DA34", VA = "0x99DA34")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001A2A")]
			[Address(RVA = "0x99DA40", Offset = "0x99DA40", VA = "0x99DA40")]
			set
			{
			}
		}

		[Token(Token = "0x60019E8")]
		[Address(RVA = "0x99D788", Offset = "0x99D788", VA = "0x99D788")]
		public Vector3(float value)
		{
		}

		[Token(Token = "0x60019E9")]
		[Address(RVA = "0x99D794", Offset = "0x99D794", VA = "0x99D794")]
		public Vector3(float x, float y, float z)
		{
		}

		[Token(Token = "0x60019EA")]
		[Address(RVA = "0x99D7A0", Offset = "0x99D7A0", VA = "0x99D7A0")]
		public Vector3(Vector3 v)
		{
		}

		[Token(Token = "0x60019EB")]
		[Address(RVA = "0x99D7AC", Offset = "0x99D7AC", VA = "0x99D7AC")]
		public void Set(float x, float y, float z)
		{
		}

		[Token(Token = "0x60019EE")]
		[Address(RVA = "0x99D7C8", Offset = "0x99D7C8", VA = "0x99D7C8")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x8CABB0", Offset = "0x8CABB0")]
		public void Add(Vector3 right)
		{
		}

		[Token(Token = "0x60019EF")]
		[Address(RVA = "0x99D7E8", Offset = "0x99D7E8", VA = "0x99D7E8")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x8CABE8", Offset = "0x8CABE8")]
		public void Add(ref Vector3 right)
		{
		}

		[Token(Token = "0x60019F0")]
		[Address(RVA = "0x99D818", Offset = "0x99D818", VA = "0x99D818")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x8CAC20", Offset = "0x8CAC20")]
		public void Sub(Vector3 right)
		{
		}

		[Token(Token = "0x60019F1")]
		[Address(RVA = "0x99D838", Offset = "0x99D838", VA = "0x99D838")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x8CAC58", Offset = "0x8CAC58")]
		public void Sub(ref Vector3 right)
		{
		}

		[Token(Token = "0x60019F2")]
		[Address(RVA = "0x99D868", Offset = "0x99D868", VA = "0x99D868")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x8CAC90", Offset = "0x8CAC90")]
		public void Mult(float f)
		{
		}

		[Token(Token = "0x60019F3")]
		[Address(RVA = "0x99D884", Offset = "0x99D884", VA = "0x99D884")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x8CACC8", Offset = "0x8CACC8")]
		public void Div(float f)
		{
		}

		[Token(Token = "0x60019F4")]
		[Address(RVA = "0x99D8A8", Offset = "0x99D8A8", VA = "0x99D8A8")]
		public float Length()
		{
			return default(float);
		}

		[Token(Token = "0x60019F5")]
		[Address(RVA = "0x99D8B0", Offset = "0x99D8B0", VA = "0x99D8B0")]
		public float LengthSquared()
		{
			return default(float);
		}

		[Token(Token = "0x60019F6")]
		[Address(RVA = "0x99D8D0", Offset = "0x99D8D0", VA = "0x99D8D0")]
		public Vector3 Normalized()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60019F7")]
		[Address(RVA = "0x99D920", Offset = "0x99D920", VA = "0x99D920")]
		public void Normalize()
		{
		}

		[Token(Token = "0x60019F8")]
		[Address(RVA = "0x99D964", Offset = "0x99D964", VA = "0x99D964")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x8CAD00", Offset = "0x8CAD00")]
		public void Scale(float sx, float sy, float sz)
		{
		}

		[Token(Token = "0x60019F9")]
		[Address(RVA = "0x99D984", Offset = "0x99D984", VA = "0x99D984")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x8CAD38", Offset = "0x8CAD38")]
		public void Scale(Vector3 scale)
		{
		}

		[Token(Token = "0x60019FA")]
		[Address(RVA = "0x99D9A4", Offset = "0x99D9A4", VA = "0x99D9A4")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x8CAD70", Offset = "0x8CAD70")]
		public void Scale(ref Vector3 scale)
		{
		}

		[Token(Token = "0x60019FB")]
		[Address(RVA = "0x163A49C", Offset = "0x163A49C", VA = "0x163A49C")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x8CADA8", Offset = "0x8CADA8")]
		public static Vector3 Sub(Vector3 a, Vector3 b)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60019FC")]
		[Address(RVA = "0x163A4AC", Offset = "0x163A4AC", VA = "0x163A4AC")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x8CADE0", Offset = "0x8CADE0")]
		public static void Sub(ref Vector3 a, ref Vector3 b, out Vector3 result)
		{
		}

		[Token(Token = "0x60019FD")]
		[Address(RVA = "0x163A4E0", Offset = "0x163A4E0", VA = "0x163A4E0")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x8CAE18", Offset = "0x8CAE18")]
		public static Vector3 Mult(Vector3 a, float f)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60019FE")]
		[Address(RVA = "0x163A4F0", Offset = "0x163A4F0", VA = "0x163A4F0")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x8CAE50", Offset = "0x8CAE50")]
		public static void Mult(ref Vector3 a, float f, out Vector3 result)
		{
		}

		[Token(Token = "0x60019FF")]
		[Address(RVA = "0x163A518", Offset = "0x163A518", VA = "0x163A518")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x8CAE88", Offset = "0x8CAE88")]
		public static Vector3 Div(Vector3 a, float f)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001A00")]
		[Address(RVA = "0x163A530", Offset = "0x163A530", VA = "0x163A530")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x8CAEC0", Offset = "0x8CAEC0")]
		public static void Div(ref Vector3 a, float f, out Vector3 result)
		{
		}

		[Token(Token = "0x6001A01")]
		[Address(RVA = "0x163A560", Offset = "0x163A560", VA = "0x163A560")]
		public static Vector3 Add(Vector3 a, Vector3 b)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001A02")]
		[Address(RVA = "0x163A5F8", Offset = "0x163A5F8", VA = "0x163A5F8")]
		public static void Add(ref Vector3 a, ref Vector3 b, out Vector3 result)
		{
		}

		[Token(Token = "0x6001A03")]
		[Address(RVA = "0x163A61C", Offset = "0x163A61C", VA = "0x163A61C")]
		public static Vector3 Subtract(Vector3 a, Vector3 b)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001A04")]
		[Address(RVA = "0x16369F4", Offset = "0x16369F4", VA = "0x16369F4")]
		public static void Subtract(ref Vector3 a, ref Vector3 b, out Vector3 result)
		{
		}

		[Token(Token = "0x6001A05")]
		[Address(RVA = "0x163A6B4", Offset = "0x163A6B4", VA = "0x163A6B4")]
		public static Vector3 Multiply(Vector3 vector, float scale)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001A06")]
		[Address(RVA = "0x163A73C", Offset = "0x163A73C", VA = "0x163A73C")]
		public static void Multiply(ref Vector3 vector, float scale, out Vector3 result)
		{
		}

		[Token(Token = "0x6001A07")]
		[Address(RVA = "0x163A758", Offset = "0x163A758", VA = "0x163A758")]
		public static Vector3 Multiply(Vector3 vector, Vector3 scale)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001A08")]
		[Address(RVA = "0x163A7F0", Offset = "0x163A7F0", VA = "0x163A7F0")]
		public static void Multiply(ref Vector3 vector, ref Vector3 scale, out Vector3 result)
		{
		}

		[Token(Token = "0x6001A09")]
		[Address(RVA = "0x163A814", Offset = "0x163A814", VA = "0x163A814")]
		public static Vector3 Divide(Vector3 vector, float scale)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001A0A")]
		[Address(RVA = "0x163A8A4", Offset = "0x163A8A4", VA = "0x163A8A4")]
		public static void Divide(ref Vector3 vector, float scale, out Vector3 result)
		{
		}

		[Token(Token = "0x6001A0B")]
		[Address(RVA = "0x163A93C", Offset = "0x163A93C", VA = "0x163A93C")]
		public static Vector3 Divide(Vector3 vector, Vector3 scale)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001A0C")]
		[Address(RVA = "0x163A9D4", Offset = "0x163A9D4", VA = "0x163A9D4")]
		public static void Divide(ref Vector3 vector, ref Vector3 scale, out Vector3 result)
		{
		}

		[Token(Token = "0x6001A0D")]
		[Address(RVA = "0x163A9F8", Offset = "0x163A9F8", VA = "0x163A9F8")]
		public static Vector3 ComponentMin(Vector3 a, Vector3 b)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001A0E")]
		[Address(RVA = "0x163AA14", Offset = "0x163AA14", VA = "0x163AA14")]
		public static void ComponentMin(ref Vector3 a, ref Vector3 b, out Vector3 result)
		{
		}

		[Token(Token = "0x6001A0F")]
		[Address(RVA = "0x163AA54", Offset = "0x163AA54", VA = "0x163AA54")]
		public static Vector3 ComponentMax(Vector3 a, Vector3 b)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001A10")]
		[Address(RVA = "0x163AA70", Offset = "0x163AA70", VA = "0x163AA70")]
		public static void ComponentMax(ref Vector3 a, ref Vector3 b, out Vector3 result)
		{
		}

		[Token(Token = "0x6001A11")]
		[Address(RVA = "0x163AAB0", Offset = "0x163AAB0", VA = "0x163AAB0")]
		public static Vector3 Min(Vector3 left, Vector3 right)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001A12")]
		[Address(RVA = "0x163AAEC", Offset = "0x163AAEC", VA = "0x163AAEC")]
		public static Vector3 Max(Vector3 left, Vector3 right)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001A13")]
		[Address(RVA = "0x163AB28", Offset = "0x163AB28", VA = "0x163AB28")]
		public static Vector3 Clamp(Vector3 vec, Vector3 min, Vector3 max)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001A14")]
		[Address(RVA = "0x163AB84", Offset = "0x163AB84", VA = "0x163AB84")]
		public static void Clamp(ref Vector3 vec, ref Vector3 min, ref Vector3 max, out Vector3 result)
		{
		}

		[Token(Token = "0x6001A15")]
		[Address(RVA = "0x163704C", Offset = "0x163704C", VA = "0x163704C")]
		public static Vector3 Normalize(Vector3 vec)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001A16")]
		[Address(RVA = "0x163AC00", Offset = "0x163AC00", VA = "0x163AC00")]
		public static void Normalize(ref Vector3 vec, out Vector3 result)
		{
		}

		[Token(Token = "0x6001A17")]
		[Address(RVA = "0x163AC50", Offset = "0x163AC50", VA = "0x163AC50")]
		public static float Dot(Vector3 left, Vector3 right)
		{
			return default(float);
		}

		[Token(Token = "0x6001A18")]
		[Address(RVA = "0x163AC68", Offset = "0x163AC68", VA = "0x163AC68")]
		public static void Dot(ref Vector3 left, ref Vector3 right, out float result)
		{
		}

		[Token(Token = "0x6001A19")]
		[Address(RVA = "0x1636D68", Offset = "0x1636D68", VA = "0x1636D68")]
		public static Vector3 Cross(Vector3 left, Vector3 right)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001A1A")]
		[Address(RVA = "0x163AC94", Offset = "0x163AC94", VA = "0x163AC94")]
		public static void Cross(ref Vector3 left, ref Vector3 right, out Vector3 result)
		{
		}

		[Token(Token = "0x6001A1B")]
		[Address(RVA = "0x163ACD4", Offset = "0x163ACD4", VA = "0x163ACD4")]
		public static Vector3 Lerp(Vector3 a, Vector3 b, float blend)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001A1C")]
		[Address(RVA = "0x1632320", Offset = "0x1632320", VA = "0x1632320")]
		public static void Lerp(ref Vector3 a, ref Vector3 b, float blend, out Vector3 result)
		{
		}

		[Token(Token = "0x6001A1D")]
		[Address(RVA = "0x163ACFC", Offset = "0x163ACFC", VA = "0x163ACFC")]
		public static Vector3 BaryCentric(Vector3 a, Vector3 b, Vector3 c, float u, float v)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001A1E")]
		[Address(RVA = "0x163AE20", Offset = "0x163AE20", VA = "0x163AE20")]
		public static void BaryCentric(ref Vector3 a, ref Vector3 b, ref Vector3 c, float u, float v, out Vector3 result)
		{
		}

		[Token(Token = "0x6001A1F")]
		[Address(RVA = "0x163AF34", Offset = "0x163AF34", VA = "0x163AF34")]
		public static float CalculateAngle(Vector3 first, Vector3 second)
		{
			return default(float);
		}

		[Token(Token = "0x6001A20")]
		[Address(RVA = "0x163B038", Offset = "0x163B038", VA = "0x163B038")]
		public static void CalculateAngle(ref Vector3 first, ref Vector3 second, out float result)
		{
		}

		[Token(Token = "0x6001A2B")]
		[Address(RVA = "0x162D8E8", Offset = "0x162D8E8", VA = "0x162D8E8")]
		public static Vector3 operator +(Vector3 left, Vector3 right)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001A2C")]
		[Address(RVA = "0x162D818", Offset = "0x162D818", VA = "0x162D818")]
		public static Vector3 operator -(Vector3 left, Vector3 right)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001A2D")]
		[Address(RVA = "0x163B1A4", Offset = "0x163B1A4", VA = "0x163B1A4")]
		public static Vector3 operator -(Vector3 vec)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001A2E")]
		[Address(RVA = "0x162D8D8", Offset = "0x162D8D8", VA = "0x162D8D8")]
		public static Vector3 operator *(Vector3 vec, float scale)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001A2F")]
		[Address(RVA = "0x163AE0C", Offset = "0x163AE0C", VA = "0x163AE0C")]
		public static Vector3 operator *(float scale, Vector3 vec)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001A30")]
		[Address(RVA = "0x163B1B4", Offset = "0x163B1B4", VA = "0x163B1B4")]
		public static Vector3 operator *(Vector3 vec, Vector3 scale)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001A31")]
		[Address(RVA = "0x1632FE4", Offset = "0x1632FE4", VA = "0x1632FE4")]
		public static Vector3 operator /(Vector3 vec, float scale)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001A32")]
		[Address(RVA = "0x163520C", Offset = "0x163520C", VA = "0x163520C")]
		public static bool operator ==(Vector3 left, Vector3 right)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A33")]
		[Address(RVA = "0x163B1C4", Offset = "0x163B1C4", VA = "0x163B1C4")]
		public static bool operator !=(Vector3 left, Vector3 right)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A34")]
		[Address(RVA = "0x99DA4C", Offset = "0x99DA4C", VA = "0x99DA4C", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6001A35")]
		[Address(RVA = "0x99DA54", Offset = "0x99DA54", VA = "0x99DA54", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x6001A36")]
		[Address(RVA = "0x99DA5C", Offset = "0x99DA5C", VA = "0x99DA5C", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A37")]
		[Address(RVA = "0x99DA64", Offset = "0x99DA64", VA = "0x99DA64", Slot = "4")]
		public bool Equals(Vector3 other)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000384")]
	internal static class Vector3Extensions
	{
		[Token(Token = "0x6001A39")]
		[Address(RVA = "0x15C87AC", Offset = "0x15C87AC", VA = "0x15C87AC")]
		internal static void ComponentMin(ref Vector3 left, ref Vector3 right, out Vector3 result)
		{
		}

		[Token(Token = "0x6001A3A")]
		[Address(RVA = "0x15C886C", Offset = "0x15C886C", VA = "0x15C886C")]
		internal static void ComponentMax(ref Vector3 left, ref Vector3 right, out Vector3 result)
		{
		}

		[Token(Token = "0x6001A3B")]
		[Address(RVA = "0x15C892C", Offset = "0x15C892C", VA = "0x15C892C")]
		internal static float Distance2D(Vector3 a, Vector3 b)
		{
			return default(float);
		}

		[Token(Token = "0x6001A3C")]
		[Address(RVA = "0x15C896C", Offset = "0x15C896C", VA = "0x15C896C")]
		internal static void Distance2D(ref Vector3 a, ref Vector3 b, out float dist)
		{
		}

		[Token(Token = "0x6001A3D")]
		[Address(RVA = "0x15C8A20", Offset = "0x15C8A20", VA = "0x15C8A20")]
		internal static void Dot2D(ref Vector3 left, ref Vector3 right, out float result)
		{
		}

		[Token(Token = "0x6001A3E")]
		[Address(RVA = "0x15C8A44", Offset = "0x15C8A44", VA = "0x15C8A44")]
		internal static float Dot2D(ref Vector3 left, ref Vector3 right)
		{
			return default(float);
		}

		[Token(Token = "0x6001A3F")]
		[Address(RVA = "0x15C8A64", Offset = "0x15C8A64", VA = "0x15C8A64")]
		internal static float Cross2D(Vector3 p1, Vector3 p2, Vector3 p3)
		{
			return default(float);
		}

		[Token(Token = "0x6001A40")]
		[Address(RVA = "0x15C8A8C", Offset = "0x15C8A8C", VA = "0x15C8A8C")]
		internal static void Cross2D(ref Vector3 p1, ref Vector3 p2, ref Vector3 p3, out float result)
		{
		}

		[Token(Token = "0x6001A41")]
		[Address(RVA = "0x15C8AC8", Offset = "0x15C8AC8", VA = "0x15C8AC8")]
		internal static void PerpDotXZ(ref Vector3 a, ref Vector3 b, out float result)
		{
		}

		[Token(Token = "0x6001A42")]
		[Address(RVA = "0x15C8AEC", Offset = "0x15C8AEC", VA = "0x15C8AEC")]
		internal static void CalculateSlopeAngle(ref Vector3 vec, out float angle)
		{
		}
	}
}
namespace SharpNav.Crowds
{
	[Token(Token = "0x2000385")]
	public class Agent : IEquatable<Agent>
	{
		[Token(Token = "0x40015DE")]
		private const int AgentMaxCorners = 4;

		[Token(Token = "0x40015DF")]
		public const int AgentMaxNeighbors = 6;

		[Token(Token = "0x40015E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private bool active;

		[Token(Token = "0x40015E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private AgentState state;

		[Token(Token = "0x40015E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool partial;

		[Token(Token = "0x40015E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private PathCorridor corridor;

		[Token(Token = "0x40015E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private LocalBoundary boundary;

		[Token(Token = "0x40015E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float topologyOptTime;

		[Token(Token = "0x40015E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private CrowdNeighbor[] neighbors;

		[Token(Token = "0x40015E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int numNeis;

		[Token(Token = "0x40015E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float DesiredSpeed;

		[Token(Token = "0x40015E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private SharpNav.Geometry.Vector3 currentPos;

		[Token(Token = "0x40015EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public SharpNav.Geometry.Vector3 Disp;

		[Token(Token = "0x40015EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public SharpNav.Geometry.Vector3 DesiredVel;

		[Token(Token = "0x40015EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public SharpNav.Geometry.Vector3 NVel;

		[Token(Token = "0x40015ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public SharpNav.Geometry.Vector3 Vel;

		[Token(Token = "0x40015EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public AgentParams Parameters;

		[Token(Token = "0x40015EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public SharpNav.Geometry.Vector3[] CornerVerts;

		[Token(Token = "0x40015F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public int[] CornerFlags;

		[Token(Token = "0x40015F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public int[] CornerPolys;

		[Token(Token = "0x40015F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private int numCorners;

		[Token(Token = "0x40015F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private TargetState targetState;

		[Token(Token = "0x40015F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public int TargetRef;

		[Token(Token = "0x40015F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		private SharpNav.Geometry.Vector3 targetPos;

		[Token(Token = "0x40015F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public int TargetPathqRef;

		[Token(Token = "0x40015F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		public bool TargetReplan;

		[Token(Token = "0x40015F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public float TargetReplanTime;

		[Token(Token = "0x40015F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		private int agentIndex;

		[Token(Token = "0x170002E6")]
		public int AgentIndex
		{
			[Token(Token = "0x6001A43")]
			[Address(RVA = "0x162D3D0", Offset = "0x162D3D0", VA = "0x162D3D0")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170002E7")]
		public bool IsActive
		{
			[Token(Token = "0x6001A45")]
			[Address(RVA = "0x162D5D8", Offset = "0x162D5D8", VA = "0x162D5D8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001A46")]
			[Address(RVA = "0x162D5E0", Offset = "0x162D5E0", VA = "0x162D5E0")]
			set
			{
			}
		}

		[Token(Token = "0x170002E8")]
		public bool IsPartial
		{
			[Token(Token = "0x6001A47")]
			[Address(RVA = "0x162D5EC", Offset = "0x162D5EC", VA = "0x162D5EC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001A48")]
			[Address(RVA = "0x162D5F4", Offset = "0x162D5F4", VA = "0x162D5F4")]
			set
			{
			}
		}

		[Token(Token = "0x170002E9")]
		public AgentState State
		{
			[Token(Token = "0x6001A49")]
			[Address(RVA = "0x162D600", Offset = "0x162D600", VA = "0x162D600")]
			get
			{
				return default(AgentState);
			}
			[Token(Token = "0x6001A4A")]
			[Address(RVA = "0x162D608", Offset = "0x162D608", VA = "0x162D608")]
			set
			{
			}
		}

		[Token(Token = "0x170002EA")]
		public SharpNav.Geometry.Vector3 Position
		{
			[Token(Token = "0x6001A4B")]
			[Address(RVA = "0x162D610", Offset = "0x162D610", VA = "0x162D610")]
			get
			{
				return default(SharpNav.Geometry.Vector3);
			}
			[Token(Token = "0x6001A4C")]
			[Address(RVA = "0x162D61C", Offset = "0x162D61C", VA = "0x162D61C")]
			set
			{
			}
		}

		[Token(Token = "0x170002EB")]
		public LocalBoundary Boundary
		{
			[Token(Token = "0x6001A4D")]
			[Address(RVA = "0x162D628", Offset = "0x162D628", VA = "0x162D628")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002EC")]
		public PathCorridor Corridor
		{
			[Token(Token = "0x6001A4E")]
			[Address(RVA = "0x162D630", Offset = "0x162D630", VA = "0x162D630")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002ED")]
		public CrowdNeighbor[] Neighbors
		{
			[Token(Token = "0x6001A4F")]
			[Address(RVA = "0x162D638", Offset = "0x162D638", VA = "0x162D638")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002EE")]
		public int NeighborCount
		{
			[Token(Token = "0x6001A50")]
			[Address(RVA = "0x162D640", Offset = "0x162D640", VA = "0x162D640")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001A51")]
			[Address(RVA = "0x162D648", Offset = "0x162D648", VA = "0x162D648")]
			set
			{
			}
		}

		[Token(Token = "0x170002EF")]
		public TargetState TargetState
		{
			[Token(Token = "0x6001A52")]
			[Address(RVA = "0x162D650", Offset = "0x162D650", VA = "0x162D650")]
			get
			{
				return default(TargetState);
			}
			[Token(Token = "0x6001A53")]
			[Address(RVA = "0x162D658", Offset = "0x162D658", VA = "0x162D658")]
			set
			{
			}
		}

		[Token(Token = "0x170002F0")]
		public SharpNav.Geometry.Vector3 TargetPosition
		{
			[Token(Token = "0x6001A54")]
			[Address(RVA = "0x162D660", Offset = "0x162D660", VA = "0x162D660")]
			get
			{
				return default(SharpNav.Geometry.Vector3);
			}
			[Token(Token = "0x6001A55")]
			[Address(RVA = "0x162D66C", Offset = "0x162D66C", VA = "0x162D66C")]
			set
			{
			}
		}

		[Token(Token = "0x170002F1")]
		public int CornerCount
		{
			[Token(Token = "0x6001A56")]
			[Address(RVA = "0x162D678", Offset = "0x162D678", VA = "0x162D678")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001A57")]
			[Address(RVA = "0x162D680", Offset = "0x162D680", VA = "0x162D680")]
			set
			{
			}
		}

		[Token(Token = "0x6001A44")]
		[Address(RVA = "0x162D3D8", Offset = "0x162D3D8", VA = "0x162D3D8")]
		public Agent(int maxPath, int agentIndex)
		{
		}

		[Token(Token = "0x6001A58")]
		[Address(RVA = "0x162D688", Offset = "0x162D688", VA = "0x162D688")]
		public void Integrate(float dt)
		{
		}

		[Token(Token = "0x6001A59")]
		[Address(RVA = "0x162D904", Offset = "0x162D904", VA = "0x162D904")]
		public void Reset(int reference, SharpNav.Geometry.Vector3 nearest)
		{
		}

		[Token(Token = "0x6001A5A")]
		[Address(RVA = "0x162DA08", Offset = "0x162DA08", VA = "0x162DA08")]
		public void RequestMoveTargetReplan(int reference, SharpNav.Geometry.Vector3 pos)
		{
		}

		[Token(Token = "0x6001A5B")]
		[Address(RVA = "0x162DA30", Offset = "0x162DA30", VA = "0x162DA30")]
		public bool RequestMoveTarget(int reference, SharpNav.Geometry.Vector3 pos)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A5C")]
		[Address(RVA = "0x162DA5C", Offset = "0x162DA5C", VA = "0x162DA5C")]
		public void RequestMoveVelocity(SharpNav.Geometry.Vector3 vel)
		{
		}

		[Token(Token = "0x6001A5D")]
		[Address(RVA = "0x162DA7C", Offset = "0x162DA7C", VA = "0x162DA7C")]
		public void ResetMoveTarget()
		{
		}

		[Token(Token = "0x6001A5E")]
		[Address(RVA = "0x162DA90", Offset = "0x162DA90", VA = "0x162DA90")]
		public void UpdateAgentParameters(AgentParams parameters)
		{
		}

		[Token(Token = "0x6001A5F")]
		[Address(RVA = "0x162DAA8", Offset = "0x162DAA8", VA = "0x162DAA8")]
		public static bool operator ==(Agent left, Agent right)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A60")]
		[Address(RVA = "0x162DAF4", Offset = "0x162DAF4", VA = "0x162DAF4")]
		public static bool operator !=(Agent left, Agent right)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A61")]
		[Address(RVA = "0x162DAD4", Offset = "0x162DAD4", VA = "0x162DAD4", Slot = "4")]
		public bool Equals(Agent other)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A62")]
		[Address(RVA = "0x162DB20", Offset = "0x162DB20", VA = "0x162DB20", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A63")]
		[Address(RVA = "0x162DBBC", Offset = "0x162DBBC", VA = "0x162DBBC", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x6001A64")]
		[Address(RVA = "0x162DBC4", Offset = "0x162DBC4", VA = "0x162DBC4", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x2000386")]
	public class Crowd
	{
		[Token(Token = "0x40015FA")]
		private const int AgentMaxObstacleAvoidanceParams = 8;

		[Token(Token = "0x40015FB")]
		private const int AgentMaxNeighbours = 6;

		[Token(Token = "0x40015FC")]
		private const int AgentMaxCorners = 4;

		[Token(Token = "0x40015FD")]
		private const int MaxItersPerUpdate = 100;

		[Token(Token = "0x40015FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int maxAgents;

		[Token(Token = "0x40015FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Agent[] agents;

		[Token(Token = "0x4001600")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private AgentAnimation[] agentAnims;

		[Token(Token = "0x4001601")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private PathQueue pathq;

		[Token(Token = "0x4001602")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private ObstacleAvoidanceQuery.ObstacleAvoidanceParams[] obstacleQueryParams;

		[Token(Token = "0x4001603")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private ObstacleAvoidanceQuery obstacleQuery;

		[Token(Token = "0x4001604")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private ProximityGrid<Agent> grid;

		[Token(Token = "0x4001605")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int[] pathResult;

		[Token(Token = "0x4001606")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int maxPathResult;

		[Token(Token = "0x4001607")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private SharpNav.Geometry.Vector3 ext;

		[Token(Token = "0x4001608")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private int velocitySampleCount;

		[Token(Token = "0x4001609")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private NavMeshQuery navQuery;

		[Token(Token = "0x6001A65")]
		[Address(RVA = "0x162DBE0", Offset = "0x162DBE0", VA = "0x162DBE0")]
		public Crowd(int maxAgents, float maxAgentRadius, ref TiledNavMesh navMesh)
		{
		}

		[Token(Token = "0x6001A66")]
		[Address(RVA = "0x162E18C", Offset = "0x162E18C", VA = "0x162E18C")]
		public ObstacleAvoidanceQuery.ObstacleAvoidanceParams GetObstacleAvoidanceParams(int idx)
		{
			return default(ObstacleAvoidanceQuery.ObstacleAvoidanceParams);
		}

		[Token(Token = "0x6001A67")]
		[Address(RVA = "0x162E1F4", Offset = "0x162E1F4", VA = "0x162E1F4")]
		public void SetObstacleAvoidanceParams(int idx, ObstacleAvoidanceQuery.ObstacleAvoidanceParams parameters)
		{
		}

		[Token(Token = "0x6001A68")]
		[Address(RVA = "0x162E270", Offset = "0x162E270", VA = "0x162E270")]
		public int GetAgentCount()
		{
			return default(int);
		}

		[Token(Token = "0x6001A69")]
		[Address(RVA = "0x162E278", Offset = "0x162E278", VA = "0x162E278")]
		public Agent GetAgent(int idx)
		{
			return null;
		}

		[Token(Token = "0x6001A6A")]
		[Address(RVA = "0x162E2CC", Offset = "0x162E2CC", VA = "0x162E2CC")]
		public int AddAgent(SharpNav.Geometry.Vector3 pos, AgentParams parameters)
		{
			return default(int);
		}

		[Token(Token = "0x6001A6B")]
		[Address(RVA = "0x162E3FC", Offset = "0x162E3FC", VA = "0x162E3FC")]
		public bool RemoveAgent(int index)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A6C")]
		[Address(RVA = "0x162E45C", Offset = "0x162E45C", VA = "0x162E45C")]
		public int GetActiveAgents(Agent[] agents)
		{
			return default(int);
		}

		[Token(Token = "0x6001A6D")]
		[Address(RVA = "0x162E530", Offset = "0x162E530", VA = "0x162E530")]
		public int GetAgentIndex(Agent agent)
		{
			return default(int);
		}

		[Token(Token = "0x6001A6E")]
		[Address(RVA = "0x162E5B4", Offset = "0x162E5B4", VA = "0x162E5B4")]
		public void Update(float dt)
		{
		}

		[Token(Token = "0x6001A6F")]
		[Address(RVA = "0x162FE10", Offset = "0x162FE10", VA = "0x162FE10")]
		public void UpdateMoveRequest()
		{
		}

		[Token(Token = "0x6001A70")]
		[Address(RVA = "0x1630874", Offset = "0x1630874", VA = "0x1630874")]
		public void UpdateTopologyOptimization(Agent[] agents, int numAgents, float dt)
		{
		}

		[Token(Token = "0x6001A71")]
		[Address(RVA = "0x162FAF8", Offset = "0x162FAF8", VA = "0x162FAF8")]
		public void CheckPathValidity(Agent[] agents, int agentCount, float dt)
		{
		}

		[Token(Token = "0x6001A72")]
		[Address(RVA = "0x163134C", Offset = "0x163134C", VA = "0x163134C")]
		public bool OverOffmeshConnection(Agent ag, float radius)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A73")]
		[Address(RVA = "0x1631544", Offset = "0x1631544", VA = "0x1631544")]
		public void CalcSmoothSteerDirection(Agent ag, ref SharpNav.Geometry.Vector3 dir)
		{
		}

		[Token(Token = "0x6001A74")]
		[Address(RVA = "0x163176C", Offset = "0x163176C", VA = "0x163176C")]
		public void CalcStraightSteerDirection(Agent ag, ref SharpNav.Geometry.Vector3 dir)
		{
		}

		[Token(Token = "0x6001A75")]
		[Address(RVA = "0x1631870", Offset = "0x1631870", VA = "0x1631870")]
		public float GetDistanceToGoal(Agent ag, float range)
		{
			return default(float);
		}

		[Token(Token = "0x6001A76")]
		[Address(RVA = "0x1630D2C", Offset = "0x1630D2C", VA = "0x1630D2C")]
		public int GetNeighbours(SharpNav.Geometry.Vector3 pos, float height, float range, Agent skip, CrowdNeighbor[] result, int maxResult, Agent[] agents, ProximityGrid<Agent> grid)
		{
			return default(int);
		}

		[Token(Token = "0x6001A77")]
		[Address(RVA = "0x163303C", Offset = "0x163303C", VA = "0x163303C")]
		public int AddNeighbour(Agent agent, float dist, CrowdNeighbor[] neis, int nneis, int maxNeis)
		{
			return default(int);
		}

		[Token(Token = "0x6001A78")]
		[Address(RVA = "0x16323C0", Offset = "0x16323C0", VA = "0x16323C0")]
		public int AddToPathQueue(Agent newag, Agent[] agents, int numAgents, int maxAgents)
		{
			return default(int);
		}

		[Token(Token = "0x6001A79")]
		[Address(RVA = "0x1632A64", Offset = "0x1632A64", VA = "0x1632A64")]
		public int AddToOptQueue(Agent newag, Agent[] agents, int numAgents, int maxAgents)
		{
			return default(int);
		}
	}
	[Token(Token = "0x2000387")]
	public struct CrowdNeighbor
	{
		[Token(Token = "0x400160A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int Index;

		[Token(Token = "0x400160B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float Distance;
	}
	[Token(Token = "0x2000388")]
	public struct AgentParams
	{
		[Token(Token = "0x400160C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float Radius;

		[Token(Token = "0x400160D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float Height;

		[Token(Token = "0x400160E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float MaxAcceleration;

		[Token(Token = "0x400160F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float MaxSpeed;

		[Token(Token = "0x4001610")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float CollisionQueryRange;

		[Token(Token = "0x4001611")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float PathOptimizationRange;

		[Token(Token = "0x4001612")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float SeparationWeight;

		[Token(Token = "0x4001613")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public UpdateFlags UpdateFlags;

		[Token(Token = "0x4001614")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public byte ObstacleAvoidanceType;

		[Token(Token = "0x4001615")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		public byte QueryFilterType;
	}
	[Token(Token = "0x2000389")]
	public struct AgentAnimation
	{
		[Token(Token = "0x4001616")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8BEBC8", Offset = "0x8BEBC8")]
		private bool <Active>k__BackingField;

		[Token(Token = "0x4001617")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public SharpNav.Geometry.Vector3 InitPos;

		[Token(Token = "0x4001618")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SharpNav.Geometry.Vector3 StartPos;

		[Token(Token = "0x4001619")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public SharpNav.Geometry.Vector3 EndPos;

		[Token(Token = "0x400161A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int PolyRef;

		[Token(Token = "0x400161B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float T;

		[Token(Token = "0x400161C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float TMax;

		[Token(Token = "0x170002F2")]
		public bool Active
		{
			[Token(Token = "0x6001A7A")]
			[Address(RVA = "0x99D214", Offset = "0x99D214", VA = "0x99D214")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CAEF8", Offset = "0x8CAEF8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001A7B")]
			[Address(RVA = "0x99D21C", Offset = "0x99D21C", VA = "0x99D21C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CAF08", Offset = "0x8CAF08")]
			set
			{
			}
		}
	}
	[Token(Token = "0x200038A")]
	[Flags]
	public enum AgentState
	{
		[Token(Token = "0x400161E")]
		Invalid = 0,
		[Token(Token = "0x400161F")]
		Walking = 1,
		[Token(Token = "0x4001620")]
		Offmesh = 2
	}
	[Token(Token = "0x200038B")]
	public class LocalBoundary
	{
		[Token(Token = "0x2000861")]
		public struct Segment
		{
			[Token(Token = "0x4002985")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public SharpNav.Geometry.Vector3 Start;

			[Token(Token = "0x4002986")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public SharpNav.Geometry.Vector3 End;

			[Token(Token = "0x4002987")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float Dist;
		}

		[Token(Token = "0x4001621")]
		private const int MaxLocalSegs = 8;

		[Token(Token = "0x4001622")]
		private const int MaxLocalPolys = 16;

		[Token(Token = "0x4001623")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private SharpNav.Geometry.Vector3 center;

		[Token(Token = "0x4001624")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Segment[] segs;

		[Token(Token = "0x4001625")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int segCount;

		[Token(Token = "0x4001626")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int[] polys;

		[Token(Token = "0x4001627")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int numPolys;

		[Token(Token = "0x170002F3")]
		public SharpNav.Geometry.Vector3 Center
		{
			[Token(Token = "0x6001A7D")]
			[Address(RVA = "0x16332E4", Offset = "0x16332E4", VA = "0x16332E4")]
			get
			{
				return default(SharpNav.Geometry.Vector3);
			}
		}

		[Token(Token = "0x170002F4")]
		public Segment[] Segs
		{
			[Token(Token = "0x6001A7E")]
			[Address(RVA = "0x16332F0", Offset = "0x16332F0", VA = "0x16332F0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002F5")]
		public int SegCount
		{
			[Token(Token = "0x6001A7F")]
			[Address(RVA = "0x16332F8", Offset = "0x16332F8", VA = "0x16332F8")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6001A7C")]
		[Address(RVA = "0x162D544", Offset = "0x162D544", VA = "0x162D544")]
		public LocalBoundary()
		{
		}

		[Token(Token = "0x6001A80")]
		[Address(RVA = "0x162D9EC", Offset = "0x162D9EC", VA = "0x162D9EC")]
		public void Reset()
		{
		}

		[Token(Token = "0x6001A81")]
		[Address(RVA = "0x1633300", Offset = "0x1633300", VA = "0x1633300")]
		public void AddSegment(float dist, Segment s)
		{
		}

		[Token(Token = "0x6001A82")]
		[Address(RVA = "0x1630AE4", Offset = "0x1630AE4", VA = "0x1630AE4")]
		public void Update(int reference, SharpNav.Geometry.Vector3 pos, float collisionQueryRange, NavMeshQuery navquery)
		{
		}

		[Token(Token = "0x6001A83")]
		[Address(RVA = "0x1630A08", Offset = "0x1630A08", VA = "0x1630A08")]
		public bool IsValid(NavMeshQuery navquery)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200038C")]
	public class ObstacleAvoidanceQuery
	{
		[Token(Token = "0x2000862")]
		private struct ObstacleCircle
		{
			[Token(Token = "0x4002988")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public SharpNav.Geometry.Vector3 Position;

			[Token(Token = "0x4002989")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public SharpNav.Geometry.Vector3 Vel;

			[Token(Token = "0x400298A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public SharpNav.Geometry.Vector3 DesiredVel;

			[Token(Token = "0x400298B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public float Radius;

			[Token(Token = "0x400298C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public SharpNav.Geometry.Vector3 Dp;

			[Token(Token = "0x400298D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public SharpNav.Geometry.Vector3 Np;
		}

		[Token(Token = "0x2000863")]
		private struct ObstacleSegment
		{
			[Token(Token = "0x400298E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public SharpNav.Geometry.Vector3 P;

			[Token(Token = "0x400298F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public SharpNav.Geometry.Vector3 Q;

			[Token(Token = "0x4002990")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public bool Touch;
		}

		[Token(Token = "0x2000864")]
		public struct ObstacleAvoidanceParams
		{
			[Token(Token = "0x4002991")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float VelBias;

			[Token(Token = "0x4002992")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public float WeightDesVel;

			[Token(Token = "0x4002993")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public float WeightCurVel;

			[Token(Token = "0x4002994")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public float WeightSide;

			[Token(Token = "0x4002995")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float WeightToi;

			[Token(Token = "0x4002996")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float HorizTime;

			[Token(Token = "0x4002997")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int GridSize;

			[Token(Token = "0x4002998")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public int AdaptiveDivs;

			[Token(Token = "0x4002999")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int AdaptiveRings;

			[Token(Token = "0x400299A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public int AdaptiveDepth;
		}

		[Token(Token = "0x4001628")]
		private const int MaxPatternDivs = 32;

		[Token(Token = "0x4001629")]
		private const int MaxPatternRings = 4;

		[Token(Token = "0x400162A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private ObstacleAvoidanceParams parameters;

		[Token(Token = "0x400162B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float invHorizTime;

		[Token(Token = "0x400162C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float invVmax;

		[Token(Token = "0x400162D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int maxCircles;

		[Token(Token = "0x400162E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private ObstacleCircle[] circles;

		[Token(Token = "0x400162F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int numCircles;

		[Token(Token = "0x4001630")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private int maxSegments;

		[Token(Token = "0x4001631")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private ObstacleSegment[] segments;

		[Token(Token = "0x4001632")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private int numSegments;

		[Token(Token = "0x6001A84")]
		[Address(RVA = "0x162DFBC", Offset = "0x162DFBC", VA = "0x162DFBC")]
		public ObstacleAvoidanceQuery(int maxCircles, int maxSegments)
		{
		}

		[Token(Token = "0x6001A85")]
		[Address(RVA = "0x16319A4", Offset = "0x16319A4", VA = "0x16319A4")]
		public void Reset()
		{
		}

		[Token(Token = "0x6001A86")]
		[Address(RVA = "0x16319B0", Offset = "0x16319B0", VA = "0x16319B0")]
		public void AddCircle(SharpNav.Geometry.Vector3 pos, float rad, SharpNav.Geometry.Vector3 vel, SharpNav.Geometry.Vector3 dvel)
		{
		}

		[Token(Token = "0x6001A87")]
		[Address(RVA = "0x1631AA4", Offset = "0x1631AA4", VA = "0x1631AA4")]
		public void AddSegment(SharpNav.Geometry.Vector3 p, SharpNav.Geometry.Vector3 q)
		{
		}

		[Token(Token = "0x6001A88")]
		[Address(RVA = "0x1633600", Offset = "0x1633600", VA = "0x1633600")]
		public void Prepare(SharpNav.Geometry.Vector3 position, SharpNav.Geometry.Vector3 desiredVel)
		{
		}

		[Token(Token = "0x6001A89")]
		[Address(RVA = "0x1633898", Offset = "0x1633898", VA = "0x1633898")]
		public float ProcessSample(SharpNav.Geometry.Vector3 vcand, float cs, SharpNav.Geometry.Vector3 position, float radius, SharpNav.Geometry.Vector3 vel, SharpNav.Geometry.Vector3 desiredVel)
		{
			return default(float);
		}

		[Token(Token = "0x6001A8A")]
		[Address(RVA = "0x1633CC0", Offset = "0x1633CC0", VA = "0x1633CC0")]
		public bool SweepCircleCircle(SharpNav.Geometry.Vector3 center0, float radius0, SharpNav.Geometry.Vector3 v, SharpNav.Geometry.Vector3 center1, float radius1, ref float tmin, ref float tmax)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A8B")]
		[Address(RVA = "0x1633E60", Offset = "0x1633E60", VA = "0x1633E60")]
		public bool IntersectRaySegment(SharpNav.Geometry.Vector3 ap, SharpNav.Geometry.Vector3 u, SharpNav.Geometry.Vector3 bp, SharpNav.Geometry.Vector3 bq, ref float t)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A8C")]
		[Address(RVA = "0x1631F9C", Offset = "0x1631F9C", VA = "0x1631F9C")]
		public int SampleVelocityGrid(SharpNav.Geometry.Vector3 pos, float rad, float vmax, SharpNav.Geometry.Vector3 vel, SharpNav.Geometry.Vector3 desiredVel, ref SharpNav.Geometry.Vector3 nvel, ObstacleAvoidanceParams parameters)
		{
			return default(int);
		}

		[Token(Token = "0x6001A8D")]
		[Address(RVA = "0x1631B2C", Offset = "0x1631B2C", VA = "0x1631B2C")]
		public int SampleVelocityAdaptive(SharpNav.Geometry.Vector3 position, float radius, float vmax, SharpNav.Geometry.Vector3 vel, SharpNav.Geometry.Vector3 desiredVel, ref SharpNav.Geometry.Vector3 nvel, ObstacleAvoidanceParams parameters)
		{
			return default(int);
		}
	}
	[Token(Token = "0x200038D")]
	public class PathCorridor
	{
		[Token(Token = "0x4001633")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private SharpNav.Geometry.Vector3 pos;

		[Token(Token = "0x4001634")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private SharpNav.Geometry.Vector3 target;

		[Token(Token = "0x4001635")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int[] path;

		[Token(Token = "0x4001636")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int pathCount;

		[Token(Token = "0x4001637")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int maxPath;

		[Token(Token = "0x170002F6")]
		public SharpNav.Geometry.Vector3 Pos
		{
			[Token(Token = "0x6001A8F")]
			[Address(RVA = "0x1634038", Offset = "0x1634038", VA = "0x1634038")]
			get
			{
				return default(SharpNav.Geometry.Vector3);
			}
		}

		[Token(Token = "0x170002F7")]
		public SharpNav.Geometry.Vector3 Target
		{
			[Token(Token = "0x6001A90")]
			[Address(RVA = "0x1634044", Offset = "0x1634044", VA = "0x1634044")]
			get
			{
				return default(SharpNav.Geometry.Vector3);
			}
		}

		[Token(Token = "0x170002F8")]
		public int[] Path
		{
			[Token(Token = "0x6001A91")]
			[Address(RVA = "0x1634050", Offset = "0x1634050", VA = "0x1634050")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002F9")]
		public int PathCount
		{
			[Token(Token = "0x6001A92")]
			[Address(RVA = "0x1634058", Offset = "0x1634058", VA = "0x1634058")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6001A8E")]
		[Address(RVA = "0x162D4D0", Offset = "0x162D4D0", VA = "0x162D4D0")]
		public PathCorridor(int maxPath)
		{
		}

		[Token(Token = "0x6001A93")]
		[Address(RVA = "0x162D9A4", Offset = "0x162D9A4", VA = "0x162D9A4")]
		public void Reset(int reference, SharpNav.Geometry.Vector3 pos)
		{
		}

		[Token(Token = "0x6001A94")]
		[Address(RVA = "0x1632374", Offset = "0x1632374", VA = "0x1632374")]
		public void SetCorridor(SharpNav.Geometry.Vector3 target, int[] path, int npath)
		{
		}

		[Token(Token = "0x6001A95")]
		[Address(RVA = "0x1632174", Offset = "0x1632174", VA = "0x1632174")]
		public bool MovePosition(SharpNav.Geometry.Vector3 npos, NavMeshQuery navquery)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A96")]
		[Address(RVA = "0x1630F5C", Offset = "0x1630F5C", VA = "0x1630F5C")]
		public int FindCorners(SharpNav.Geometry.Vector3[] cornerVerts, int[] cornerFlags, int[] cornerPolys, int maxCorners, NavMeshQuery navquery)
		{
			return default(int);
		}

		[Token(Token = "0x6001A97")]
		[Address(RVA = "0x1632CBC", Offset = "0x1632CBC", VA = "0x1632CBC")]
		public bool OptimizePathTopology(NavMeshQuery navquery)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A98")]
		[Address(RVA = "0x1631130", Offset = "0x1631130", VA = "0x1631130")]
		public void OptimizePathVisibility(SharpNav.Geometry.Vector3 next, float pathOptimizationRange, NavMeshQuery navquery)
		{
		}

		[Token(Token = "0x6001A99")]
		[Address(RVA = "0x1634060", Offset = "0x1634060", VA = "0x1634060")]
		public int MergeCorridorStartMoved(int[] path, int npath, int maxPath, int[] visited, int nvisited)
		{
			return default(int);
		}

		[Token(Token = "0x6001A9A")]
		[Address(RVA = "0x163428C", Offset = "0x163428C", VA = "0x163428C")]
		public int MergeCorridorStartShortcut(int[] path, int npath, int maxPath, int[] visited, int nvisited)
		{
			return default(int);
		}

		[Token(Token = "0x6001A9B")]
		[Address(RVA = "0x16313FC", Offset = "0x16313FC", VA = "0x16313FC")]
		public bool MoveOverOffmeshConnection(int offMeshConRef, int[] refs, ref SharpNav.Geometry.Vector3 startPos, ref SharpNav.Geometry.Vector3 endPos, NavMeshQuery navquery)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A9C")]
		[Address(RVA = "0x1632E34", Offset = "0x1632E34", VA = "0x1632E34")]
		public bool FixPathStart(int safeRef, SharpNav.Geometry.Vector3 safePos)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A9D")]
		[Address(RVA = "0x1632EF8", Offset = "0x1632EF8", VA = "0x1632EF8")]
		public bool IsValid(int maxLookAhead, NavMeshQuery navquery)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A9E")]
		[Address(RVA = "0x1630AA0", Offset = "0x1630AA0", VA = "0x1630AA0")]
		public int GetFirstPoly()
		{
			return default(int);
		}

		[Token(Token = "0x6001A9F")]
		[Address(RVA = "0x1632618", Offset = "0x1632618", VA = "0x1632618")]
		public int GetLastPoly()
		{
			return default(int);
		}
	}
	[Token(Token = "0x200038E")]
	public class PathQueue
	{
		[Token(Token = "0x2000865")]
		private struct PathQuery
		{
			[Token(Token = "0x400299B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int Reference;

			[Token(Token = "0x400299C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public SharpNav.Geometry.Vector3 StartPos;

			[Token(Token = "0x400299D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SharpNav.Geometry.Vector3 EndPos;

			[Token(Token = "0x400299E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public int StartRef;

			[Token(Token = "0x400299F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int EndRef;

			[Token(Token = "0x40029A0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public int[] Path;

			[Token(Token = "0x40029A1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public int PathCount;

			[Token(Token = "0x40029A2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public Status status;

			[Token(Token = "0x40029A3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public int KeepAlive;
		}

		[Token(Token = "0x4001638")]
		public const byte Invalid = 0;

		[Token(Token = "0x4001639")]
		private const int MaxQueue = 8;

		[Token(Token = "0x400163A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private PathQuery[] queue;

		[Token(Token = "0x400163B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int nextHandle;

		[Token(Token = "0x400163C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private int maxPathSize;

		[Token(Token = "0x400163D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int queueHead;

		[Token(Token = "0x400163E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private NavMeshQuery navquery;

		[Token(Token = "0x6001AA0")]
		[Address(RVA = "0x162E058", Offset = "0x162E058", VA = "0x162E058")]
		public PathQueue(int maxPathSize, int maxSearchNodeCount, ref TiledNavMesh nav)
		{
		}

		[Token(Token = "0x6001AA1")]
		[Address(RVA = "0x1632704", Offset = "0x1632704", VA = "0x1632704")]
		public void Update(int maxIters)
		{
		}

		[Token(Token = "0x6001AA2")]
		[Address(RVA = "0x1632668", Offset = "0x1632668", VA = "0x1632668")]
		public int Request(int startRef, int endRef, SharpNav.Geometry.Vector3 startPos, SharpNav.Geometry.Vector3 endPos)
		{
			return default(int);
		}

		[Token(Token = "0x6001AA3")]
		[Address(RVA = "0x1632854", Offset = "0x1632854", VA = "0x1632854")]
		public Status GetRequestStatus(int reference)
		{
			return default(Status);
		}

		[Token(Token = "0x6001AA4")]
		[Address(RVA = "0x16328BC", Offset = "0x16328BC", VA = "0x16328BC")]
		public bool GetPathResult(int reference, int[] path, ref int pathSize, int maxPath)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200038F")]
	public enum Status
	{
		[Token(Token = "0x4001640")]
		Failure,
		[Token(Token = "0x4001641")]
		Success,
		[Token(Token = "0x4001642")]
		InProgress
	}
	[Token(Token = "0x2000390")]
	public static class StatusExtensions
	{
		[Token(Token = "0x6001AA5")]
		[Address(RVA = "0x163236C", Offset = "0x163236C", VA = "0x163236C")]
		public static Status ToStatus(this bool variable)
		{
			return default(Status);
		}
	}
	[Token(Token = "0x2000391")]
	public enum TargetState
	{
		[Token(Token = "0x4001644")]
		None,
		[Token(Token = "0x4001645")]
		Failed,
		[Token(Token = "0x4001646")]
		Valid,
		[Token(Token = "0x4001647")]
		Requesting,
		[Token(Token = "0x4001648")]
		WaitingForQueue,
		[Token(Token = "0x4001649")]
		WaitingForPath,
		[Token(Token = "0x400164A")]
		Velocity
	}
	[Token(Token = "0x2000392")]
	[Flags]
	public enum UpdateFlags
	{
		[Token(Token = "0x400164C")]
		AnticipateTurns = 1,
		[Token(Token = "0x400164D")]
		ObstacleAvoidance = 2,
		[Token(Token = "0x400164E")]
		Separation = 4,
		[Token(Token = "0x400164F")]
		OptimizeVis = 8,
		[Token(Token = "0x4001650")]
		OptimizeTopo = 0x10
	}
}
namespace SharpNav.Collections
{
	[Token(Token = "0x2000393")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x8B6F78", Offset = "0x8B6F78")]
	public class BVTree
	{
		[Token(Token = "0x2000866")]
		public struct Node
		{
			[Token(Token = "0x20008D1")]
			public class CompareX : IComparer<Node>
			{
				[Token(Token = "0x60030FF")]
				[Address(RVA = "0xC24398", Offset = "0xC24398", VA = "0xC24398", Slot = "4")]
				public int Compare(Node x, Node y)
				{
					return default(int);
				}

				[Token(Token = "0x6003100")]
				[Address(RVA = "0xC24380", Offset = "0xC24380", VA = "0xC24380")]
				public CompareX()
				{
				}
			}

			[Token(Token = "0x20008D2")]
			public class CompareY : IComparer<Node>
			{
				[Token(Token = "0x6003101")]
				[Address(RVA = "0xC243B8", Offset = "0xC243B8", VA = "0xC243B8", Slot = "4")]
				public int Compare(Node x, Node y)
				{
					return default(int);
				}

				[Token(Token = "0x6003102")]
				[Address(RVA = "0xC24388", Offset = "0xC24388", VA = "0xC24388")]
				public CompareY()
				{
				}
			}

			[Token(Token = "0x20008D3")]
			public class CompareZ : IComparer<Node>
			{
				[Token(Token = "0x6003103")]
				[Address(RVA = "0xC243D8", Offset = "0xC243D8", VA = "0xC243D8", Slot = "4")]
				public int Compare(Node x, Node y)
				{
					return default(int);
				}

				[Token(Token = "0x6003104")]
				[Address(RVA = "0xC24390", Offset = "0xC24390", VA = "0xC24390")]
				public CompareZ()
				{
				}
			}

			[Token(Token = "0x40029A4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public PolyBounds Bounds;

			[Token(Token = "0x40029A5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int Index;
		}

		[Token(Token = "0x4001651")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Node.CompareX XComparer;

		[Token(Token = "0x4001652")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly Node.CompareY YComparer;

		[Token(Token = "0x4001653")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static readonly Node.CompareZ ZComparer;

		[Token(Token = "0x4001654")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Node[] nodes;

		[Token(Token = "0x170002FA")]
		public int Count
		{
			[Token(Token = "0x6001AA7")]
			[Address(RVA = "0xC24104", Offset = "0xC24104", VA = "0xC24104")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170002FB")]
		public Node Item
		{
			[Token(Token = "0x6001AA8")]
			[Address(RVA = "0xC24120", Offset = "0xC24120", VA = "0xC24120")]
			get
			{
				return default(Node);
			}
		}

		[Token(Token = "0x6001AA6")]
		[Address(RVA = "0xC23B48", Offset = "0xC23B48", VA = "0xC23B48")]
		public BVTree(PolyVertex[] verts, PolyMesh.Polygon[] polys, int nvp, float cellSize, float cellHeight)
		{
		}

		[Token(Token = "0x6001AA9")]
		[Address(RVA = "0xC2416C", Offset = "0xC2416C", VA = "0xC2416C")]
		private static void CalcExtends(List<Node> items, int minIndex, int maxIndex, out PolyBounds bounds)
		{
		}

		[Token(Token = "0x6001AAA")]
		[Address(RVA = "0xC242A8", Offset = "0xC242A8", VA = "0xC242A8")]
		private static int LongestAxis(int x, int y, int z)
		{
			return default(int);
		}

		[Token(Token = "0x6001AAB")]
		[Address(RVA = "0xC23E20", Offset = "0xC23E20", VA = "0xC23E20")]
		private int Subdivide(List<Node> items, int minIndex, int maxIndex, int curNode)
		{
			return default(int);
		}
	}
}
namespace SharpNav.Collections.Generic
{
	[Token(Token = "0x2000394")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x8B6FB0", Offset = "0x8B6FB0")]
	public class BufferedQueue<T> : ICollection<T>, IEnumerable<T>, IEnumerable
	{
		[Token(Token = "0x2000867")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B8EC0", Offset = "0x8B8EC0")]
		private sealed class <GetEnumerator>d__18 : IEnumerator<T>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40029A6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>1__state;

			[Token(Token = "0x40029A7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private T <>2__current;

			[Token(Token = "0x40029A8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public BufferedQueue<T> <>4__this;

			[Token(Token = "0x40029A9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <i>5__2;

			[Token(Token = "0x17000692")]
			private T System.Collections.Generic.IEnumerator<T>.Current
			{
				[Token(Token = "0x6002FFF")]
				[DebuggerHidden]
				get
				{
					return (T)null;
				}
			}

			[Token(Token = "0x17000693")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003001")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002FFC")]
			[DebuggerHidden]
			public <GetEnumerator>d__18(int <>1__state)
			{
			}

			[Token(Token = "0x6002FFD")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002FFE")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003000")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001655")]
		private const int SIZE = 100;

		[Token(Token = "0x4001656")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T[] data;

		[Token(Token = "0x4001657")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int first;

		[Token(Token = "0x4001658")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int last;

		[Token(Token = "0x170002FC")]
		public int Count
		{
			[Token(Token = "0x6001AAF")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170002FD")]
		private bool System.Collections.Generic.ICollection<T>.IsReadOnly
		{
			[Token(Token = "0x6001AB0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002FE")]
		public T Item
		{
			[Token(Token = "0x6001AB1")]
			get
			{
				return (T)null;
			}
		}

		[Token(Token = "0x6001AAD")]
		public BufferedQueue(int size)
		{
		}

		[Token(Token = "0x6001AAE")]
		public BufferedQueue(ICollection<T> items)
		{
		}

		[Token(Token = "0x6001AB2")]
		public bool Enqueue(T item)
		{
			return default(bool);
		}

		[Token(Token = "0x6001AB3")]
		public T Dequeue()
		{
			return (T)null;
		}

		[Token(Token = "0x6001AB4")]
		public T Peek()
		{
			return (T)null;
		}

		[Token(Token = "0x6001AB5")]
		public void Clear()
		{
		}

		[Token(Token = "0x6001AB6")]
		public bool Contains(T item)
		{
			return default(bool);
		}

		[Token(Token = "0x6001AB7")]
		public void CopyTo(T[] array, int arrayIndex)
		{
		}

		[Token(Token = "0x6001AB8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8CAF28", Offset = "0x8CAF28")]
		public IEnumerator<T> GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6001AB9")]
		private void System.Collections.Generic.ICollection<T>.Add(T item)
		{
		}

		[Token(Token = "0x6001ABA")]
		private bool System.Collections.Generic.ICollection<T>.Remove(T item)
		{
			return default(bool);
		}

		[Token(Token = "0x6001ABB")]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}
	}
	[Token(Token = "0x2000395")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x8B6FE8", Offset = "0x8B6FE8")]
	public class BufferedStack<T> : ICollection<T>, IEnumerable<T>, IEnumerable
	{
		[Token(Token = "0x2000868")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B8ED0", Offset = "0x8B8ED0")]
		private sealed class <GetEnumerator>d__16 : IEnumerator<T>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40029AA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>1__state;

			[Token(Token = "0x40029AB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private T <>2__current;

			[Token(Token = "0x40029AC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public BufferedStack<T> <>4__this;

			[Token(Token = "0x40029AD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <i>5__2;

			[Token(Token = "0x17000694")]
			private T System.Collections.Generic.IEnumerator<T>.Current
			{
				[Token(Token = "0x6003005")]
				[DebuggerHidden]
				get
				{
					return (T)null;
				}
			}

			[Token(Token = "0x17000695")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003007")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003002")]
			[DebuggerHidden]
			public <GetEnumerator>d__16(int <>1__state)
			{
			}

			[Token(Token = "0x6003003")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003004")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003006")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001659")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T[] data;

		[Token(Token = "0x400165A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int top;

		[Token(Token = "0x170002FF")]
		public int Count
		{
			[Token(Token = "0x6001ABE")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000300")]
		private bool System.Collections.Generic.ICollection<T>.IsReadOnly
		{
			[Token(Token = "0x6001ABF")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000301")]
		public T Item
		{
			[Token(Token = "0x6001AC0")]
			get
			{
				return (T)null;
			}
		}

		[Token(Token = "0x6001ABC")]
		public BufferedStack(int size)
		{
		}

		[Token(Token = "0x6001ABD")]
		public BufferedStack(int size, ICollection<T> items)
		{
		}

		[Token(Token = "0x6001AC1")]
		public bool Push(T item)
		{
			return default(bool);
		}

		[Token(Token = "0x6001AC2")]
		public T Pop()
		{
			return (T)null;
		}

		[Token(Token = "0x6001AC3")]
		public T Peek()
		{
			return (T)null;
		}

		[Token(Token = "0x6001AC4")]
		public void Clear()
		{
		}

		[Token(Token = "0x6001AC5")]
		public bool Contains(T item)
		{
			return default(bool);
		}

		[Token(Token = "0x6001AC6")]
		public void CopyTo(T[] array, int arrayIndex)
		{
		}

		[Token(Token = "0x6001AC7")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8CAF8C", Offset = "0x8CAF8C")]
		public IEnumerator<T> GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6001AC8")]
		private void System.Collections.Generic.ICollection<T>.Add(T item)
		{
		}

		[Token(Token = "0x6001AC9")]
		private bool System.Collections.Generic.ICollection<T>.Remove(T item)
		{
			return default(bool);
		}

		[Token(Token = "0x6001ACA")]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}
	}
	[Token(Token = "0x2000396")]
	public interface IValueWithCost
	{
		[Token(Token = "0x17000302")]
		float Cost
		{
			[Token(Token = "0x6001ACB")]
			get;
		}
	}
	[Token(Token = "0x2000397")]
	public class PriorityQueue<T> : ICollection<T>, IEnumerable<T>, IEnumerable where T : class, IValueWithCost
	{
		[Token(Token = "0x400165B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T[] heap;

		[Token(Token = "0x400165C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int capacity;

		[Token(Token = "0x400165D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int size;

		[Token(Token = "0x17000303")]
		public int Count
		{
			[Token(Token = "0x6001ACD")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000304")]
		private bool System.Collections.Generic.ICollection<T>.IsReadOnly
		{
			[Token(Token = "0x6001ACE")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001ACC")]
		public PriorityQueue(int n)
		{
		}

		[Token(Token = "0x6001ACF")]
		public void Clear()
		{
		}

		[Token(Token = "0x6001AD0")]
		public bool Empty()
		{
			return default(bool);
		}

		[Token(Token = "0x6001AD1")]
		public T Top()
		{
			return null;
		}

		[Token(Token = "0x6001AD2")]
		public T Pop()
		{
			return null;
		}

		[Token(Token = "0x6001AD3")]
		public void Push(T node)
		{
		}

		[Token(Token = "0x6001AD4")]
		public bool Contains(T item)
		{
			return default(bool);
		}

		[Token(Token = "0x6001AD5")]
		public void Modify(T node)
		{
		}

		[Token(Token = "0x6001AD6")]
		public void CopyTo(T[] array, int arrayIndex)
		{
		}

		[Token(Token = "0x6001AD7")]
		public IEnumerator<T> GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6001AD8")]
		private void System.Collections.Generic.ICollection<T>.Add(T item)
		{
		}

		[Token(Token = "0x6001AD9")]
		private bool System.Collections.Generic.ICollection<T>.Remove(T item)
		{
			return default(bool);
		}

		[Token(Token = "0x6001ADA")]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6001ADB")]
		private void BubbleUp(int i, T node)
		{
		}

		[Token(Token = "0x6001ADC")]
		private void TrickleDown(int i, T node)
		{
		}
	}
	[Token(Token = "0x2000398")]
	public class ProximityGrid<T> where T : IEquatable<T>
	{
		[Token(Token = "0x2000869")]
		private class Item
		{
			[Token(Token = "0x40029AE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C1FC0", Offset = "0x8C1FC0")]
			private T <Value>k__BackingField;

			[Token(Token = "0x40029AF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C1FD0", Offset = "0x8C1FD0")]
			private int <X>k__BackingField;

			[Token(Token = "0x40029B0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C1FE0", Offset = "0x8C1FE0")]
			private int <Y>k__BackingField;

			[Token(Token = "0x40029B1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C1FF0", Offset = "0x8C1FF0")]
			private int <Next>k__BackingField;

			[Token(Token = "0x17000696")]
			public T Value
			{
				[Token(Token = "0x6003008")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D1600", Offset = "0x8D1600")]
				get
				{
					return (T)null;
				}
				[Token(Token = "0x6003009")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D1610", Offset = "0x8D1610")]
				set
				{
				}
			}

			[Token(Token = "0x17000697")]
			public int X
			{
				[Token(Token = "0x600300A")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D1620", Offset = "0x8D1620")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x600300B")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D1630", Offset = "0x8D1630")]
				set
				{
				}
			}

			[Token(Token = "0x17000698")]
			public int Y
			{
				[Token(Token = "0x600300C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D1640", Offset = "0x8D1640")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x600300D")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D1650", Offset = "0x8D1650")]
				set
				{
				}
			}

			[Token(Token = "0x17000699")]
			public int Next
			{
				[Token(Token = "0x600300E")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D1660", Offset = "0x8D1660")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x600300F")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D1670", Offset = "0x8D1670")]
				set
				{
				}
			}

			[Token(Token = "0x6003010")]
			public Item()
			{
			}
		}

		[Token(Token = "0x400165E")]
		private const int Invalid = -1;

		[Token(Token = "0x400165F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float invCellSize;

		[Token(Token = "0x4001660")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Item[] pool;

		[Token(Token = "0x4001661")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int poolHead;

		[Token(Token = "0x4001662")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int[] buckets;

		[Token(Token = "0x4001663")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private BBox2i bounds;

		[Token(Token = "0x6001ADD")]
		public ProximityGrid(int poolSize, float cellSize)
		{
		}

		[Token(Token = "0x6001ADE")]
		public void Clear()
		{
		}

		[Token(Token = "0x6001ADF")]
		public void AddItem(T value, float minX, float minY, float maxX, float maxY)
		{
		}

		[Token(Token = "0x6001AE0")]
		public int QueryItems(float minX, float minY, float maxX, float maxY, T[] values, int maxVals)
		{
			return default(int);
		}

		[Token(Token = "0x6001AE1")]
		public int GetItemCountAtLocation(int x, int y)
		{
			return default(int);
		}

		[Token(Token = "0x6001AE2")]
		public static int HashPos2(int x, int y, int n)
		{
			return default(int);
		}
	}
}
namespace Sigtrap.VrTunnellingPro
{
	[Token(Token = "0x2000399")]
	public class Tunnelling : TunnellingImageBase
	{
		[Token(Token = "0x17000305")]
		protected override CameraEvent _maskCmdEvt
		{
			[Token(Token = "0x6001AE3")]
			[Address(RVA = "0xD3FD28", Offset = "0xD3FD28", VA = "0xD3FD28", Slot = "9")]
			get
			{
				return default(CameraEvent);
			}
		}

		[Token(Token = "0x6001AE4")]
		[Address(RVA = "0xD3FD30", Offset = "0xD3FD30", VA = "0xD3FD30")]
		private void OnRenderImage(RenderTexture src, RenderTexture dest)
		{
		}

		[Token(Token = "0x6001AE5")]
		[Address(RVA = "0xD40200", Offset = "0xD40200", VA = "0xD40200")]
		public Tunnelling()
		{
		}
	}
	[Token(Token = "0x200039A")]
	public abstract class TunnellingBase : MonoBehaviour
	{
		[Token(Token = "0x200086A")]
		public enum BackgroundMode
		{
			[Token(Token = "0x40029B3")]
			COLOR,
			[Token(Token = "0x40029B4")]
			SKYBOX,
			[Token(Token = "0x40029B5")]
			CAGE_COLOR,
			[Token(Token = "0x40029B6")]
			CAGE_SKYBOX,
			[Token(Token = "0x40029B7")]
			CAGE_ONLY,
			[Token(Token = "0x40029B8")]
			BLUR
		}

		[Token(Token = "0x200086B")]
		public enum MaskMode
		{
			[Token(Token = "0x40029BA")]
			OFF,
			[Token(Token = "0x40029BB")]
			MASK,
			[Token(Token = "0x40029BC")]
			WINDOW,
			[Token(Token = "0x40029BD")]
			PORTAL
		}

		[Token(Token = "0x200086C")]
		public enum MSAA
		{
			[Token(Token = "0x40029BF")]
			AUTO,
			[Token(Token = "0x40029C0")]
			OFF,
			[Token(Token = "0x40029C1")]
			X2,
			[Token(Token = "0x40029C2")]
			X4,
			[Token(Token = "0x40029C3")]
			X8
		}

		[Token(Token = "0x4001664")]
		public const string VRTP_VERSION = "1.2.1";

		[Token(Token = "0x4001665")]
		public const int VRTP_VERSION_MAJOR = 1;

		[Token(Token = "0x4001666")]
		public const int VRTP_VERSION_MINOR = 2;

		[Token(Token = "0x4001667")]
		public const int VRTP_VERSION_PATCH = 1;

		[Token(Token = "0x4001668")]
		public const string VRTP_VERSION_BETA = "";

		[Token(Token = "0x4001669")]
		public const string GLOBAL_PROP_FOGCOLOR = "_VRTP_Cage_FogColor";

		[Token(Token = "0x400166A")]
		public const string GLOBAL_PROP_FOGDENSITY = "_VRTP_Cage_FogDensity";

		[Token(Token = "0x400166B")]
		public const string GLOBAL_PROP_FOGPOWER = "_VRTP_Cage_FogPower";

		[Token(Token = "0x400166C")]
		public const string GLOBAL_PROP_FOGBLEND = "_VRTP_Cage_FogBlend";

		[Token(Token = "0x400166D")]
		protected const string PATH_SHADERS = "Hidden/VrTunnellingPro/";

		[Token(Token = "0x400166E")]
		protected const string PATH_MESHES = "Meshes/";

		[Token(Token = "0x400166F")]
		protected const string PATH_IRISMESH = "Iris";

		[Token(Token = "0x4001670")]
		protected const string PROP_OUTER = "_FxOuter";

		[Token(Token = "0x4001671")]
		protected const string PROP_INNER = "_FxInner";

		[Token(Token = "0x4001672")]
		protected const string PROP_COLOR = "_Color";

		[Token(Token = "0x4001673")]
		protected const string PROP_SKYBOX = "_Skybox";

		[Token(Token = "0x4001674")]
		protected const string PROP_EYEPRJ = "_EyeProjection";

		[Token(Token = "0x4001675")]
		protected const string PROP_EYEMAT = "_EyeToWorld";

		[Token(Token = "0x4001676")]
		protected const string KEYWORD_BKG = "TUNNEL_BKG";

		[Token(Token = "0x4001677")]
		protected const string KEYWORD_SKYBOX = "TUNNEL_SKYBOX";

		[Token(Token = "0x4001678")]
		protected const string KEYWORD_OVERLAY = "TUNNEL_OVERLAY";

		[Token(Token = "0x4001679")]
		public const float FEATHER_MAX = 0.5f;

		[Token(Token = "0x400167A")]
		public const float MOTION_STRENGTH_MAX = 2f;

		[Token(Token = "0x400167B")]
		public const float COUNTER_STRENGTH_MAX = 2f;

		[Token(Token = "0x400167C")]
		public const int FPSDIV_MAX = 60;

		[Token(Token = "0x400167D")]
		private const float COVERAGE_MIN = 0.65f;

		[Token(Token = "0x400167E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected int _propFxInner;

		[Token(Token = "0x400167F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		protected int _propFxOuter;

		[Token(Token = "0x4001680")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int _propEyeProjection;

		[Token(Token = "0x4001681")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private int _propEyeToWorld;

		[Token(Token = "0x4001682")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected int _globPropFogColor;

		[Token(Token = "0x4001683")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		protected int _globPropFogDensity;

		[Token(Token = "0x4001684")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected int _globPropFogPower;

		[Token(Token = "0x4001685")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		protected int _globPropFogBlend;

		[Token(Token = "0x4001686")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Matrix4x4[] _eyeToWorld;

		[Token(Token = "0x4001687")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Matrix4x4[] _eyeProjection;

		[Token(Token = "0x4001688")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BEBD8", Offset = "0x8BEBD8")]
		public Transform motionTarget;

		[Token(Token = "0x4001689")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BEC10", Offset = "0x8BEC10")]
		public Color effectColor;

		[Token(Token = "0x400168A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8BEC48", Offset = "0x8BEC48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BEC48", Offset = "0x8BEC48")]
		public float effectCoverage;

		[Token(Token = "0x400168B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8BEC9C", Offset = "0x8BEC9C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BEC9C", Offset = "0x8BEC9C")]
		public float effectFeather;

		[Token(Token = "0x400168C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Cubemap effectSkybox;

		[Token(Token = "0x400168D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public bool applyColorToBackground;

		[Token(Token = "0x400168E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BECF0", Offset = "0x8BECF0")]
		public bool useAngularVelocity;

		[Token(Token = "0x400168F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8BED28", Offset = "0x8BED28")]
		public float angularVelocityStrength;

		[Token(Token = "0x4001690")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public float angularVelocityMin;

		[Token(Token = "0x4001691")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public float angularVelocityMax;

		[Token(Token = "0x4001692")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public float angularVelocitySmoothing;

		[Token(Token = "0x4001693")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BED40", Offset = "0x8BED40")]
		public bool useAcceleration;

		[Token(Token = "0x4001694")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8BED78", Offset = "0x8BED78")]
		public float accelerationStrength;

		[Token(Token = "0x4001695")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public float accelerationMin;

		[Token(Token = "0x4001696")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public float accelerationMax;

		[Token(Token = "0x4001697")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public float accelerationSmoothing;

		[Token(Token = "0x4001698")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BED90", Offset = "0x8BED90")]
		public bool useVelocity;

		[Token(Token = "0x4001699")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8BEDC8", Offset = "0x8BEDC8")]
		public float velocityStrength;

		[Token(Token = "0x400169A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public float velocityMin;

		[Token(Token = "0x400169B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		public float velocityMax;

		[Token(Token = "0x400169C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public float velocitySmoothing;

		[Token(Token = "0x400169D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BEDE0", Offset = "0x8BEDE0")]
		public Transform motionEffectTarget;

		[Token(Token = "0x400169E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BEE18", Offset = "0x8BEE18")]
		public bool useCounterMotion;

		[Token(Token = "0x400169F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8BEE50", Offset = "0x8BEE50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BEE50", Offset = "0x8BEE50")]
		public float counterRotationStrength;

		[Token(Token = "0x40016A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BEEA4", Offset = "0x8BEEA4")]
		public UnityEngine.Vector3 counterRotationPerAxis;

		[Token(Token = "0x40016A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BEEDC", Offset = "0x8BEEDC")]
		public bool useArtificialTilt;

		[Token(Token = "0x40016A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BEF14", Offset = "0x8BEF14")]
		public float tiltStrength;

		[Token(Token = "0x40016A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BEF4C", Offset = "0x8BEF4C")]
		public UnityEngine.Vector2 tiltMaxAngles;

		[Token(Token = "0x40016A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8BEF84", Offset = "0x8BEF84")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BEF84", Offset = "0x8BEF84")]
		public float tiltSmoothTime;

		[Token(Token = "0x40016A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8BEFD8", Offset = "0x8BEFD8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BEFD8", Offset = "0x8BEFD8")]
		public int framerateDivision;

		[Token(Token = "0x40016A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		public bool divideTranslation;

		[Token(Token = "0x40016A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE5")]
		public bool divideRotation;

		[Token(Token = "0x40016A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private Quaternion _lastRot;

		[Token(Token = "0x40016A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private UnityEngine.Vector3 _lastFwd;

		[Token(Token = "0x40016AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		private UnityEngine.Vector3 _lastPos;

		[Token(Token = "0x40016AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private float _lastSpeed;

		[Token(Token = "0x40016AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		private UnityEngine.Vector3 _lastVel;

		[Token(Token = "0x40016AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		protected Quaternion _cmRot;

		[Token(Token = "0x40016AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private float _avSmoothed;

		[Token(Token = "0x40016AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
		private float _avSlew;

		[Token(Token = "0x40016B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private float _speedSmoothed;

		[Token(Token = "0x40016B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
		private float _speedSlew;

		[Token(Token = "0x40016B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private float _accelSmoothed;

		[Token(Token = "0x40016B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
		private float _accelSlew;

		[Token(Token = "0x40016B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private Transform _prevMotionEffectTarget;

		[Token(Token = "0x40016B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private bool _prevUseTilt;

		[Token(Token = "0x40016B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
		private UnityEngine.Vector3 _tiltAccelSmoothed;

		[Token(Token = "0x40016B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		private UnityEngine.Vector3 _tiltAccelSlew;

		[Token(Token = "0x40016B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
		private Angle3 _tiltInit;

		[Token(Token = "0x40016B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		private int _lastFpsDivision;

		[Token(Token = "0x40016BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
		private UnityEngine.Vector3 _mfxTgtLocalPosInit;

		[Token(Token = "0x40016BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		private Quaternion _mfxTgtLocalRotInit;

		[Token(Token = "0x40016BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		protected Camera _cam;

		[Token(Token = "0x40016BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		protected bool _hasDrawnThisFrame;

		[Token(Token = "0x40016BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A4")]
		private UnityEngine.Vector3 _fpsPosition;

		[Token(Token = "0x40016BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		private Quaternion _fpsRotation;

		[Token(Token = "0x17000306")]
		public bool usingMotionEffectTarget
		{
			[Token(Token = "0x6001AE6")]
			[Address(RVA = "0xD40380", Offset = "0xD40380", VA = "0xD40380")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001AE7")]
		[Address(RVA = "0xD403A0", Offset = "0xD403A0", VA = "0xD403A0", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6001AE8")]
		[Address(RVA = "0xD404B8", Offset = "0xD404B8", VA = "0xD404B8", Slot = "5")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6001AE9")]
		[Address(RVA = "0xD40528", Offset = "0xD40528", VA = "0xD40528")]
		protected void ApplyPresetBase(TunnellingPresetBase p)
		{
		}

		[Token(Token = "0x6001AEA")]
		[Address(RVA = "0xD40780", Offset = "0xD40780", VA = "0xD40780")]
		protected void FillMaskBuffer(CommandBuffer cb, List<Renderer> rs, Material m)
		{
		}

		[Token(Token = "0x6001AEB")]
		[Address(RVA = "0xD404BC", Offset = "0xD404BC", VA = "0xD404BC")]
		protected void ResetMotion()
		{
		}

		[Token(Token = "0x6001AEC")]
		[Address(RVA = "0xD40924", Offset = "0xD40924", VA = "0xD40924", Slot = "6")]
		public virtual void ResetCounterMotion()
		{
		}

		[Token(Token = "0x6001AED")]
		[Address(RVA = "0xD409B8", Offset = "0xD409B8", VA = "0xD409B8")]
		private float RemapRadius(float radius)
		{
			return default(float);
		}

		[Token(Token = "0x6001AEE")]
		[Address(RVA = "0xD40A34", Offset = "0xD40A34", VA = "0xD40A34")]
		protected float CalculateMotion(float dT)
		{
			return default(float);
		}

		[Token(Token = "0x6001AEF")]
		[Address(RVA = "0xD41568", Offset = "0xD41568", VA = "0xD41568")]
		public static UnityEngine.Vector3 SmoothDampAngle(UnityEngine.Vector3 current, UnityEngine.Vector3 target, ref UnityEngine.Vector3 vel, float smoothTime, float maxSpeed, float dT)
		{
			return default(UnityEngine.Vector3);
		}

		[Token(Token = "0x6001AF0")]
		[Address(RVA = "0xD416B8", Offset = "0xD416B8", VA = "0xD416B8", Slot = "7")]
		protected virtual void UpdateCounterMotion(UnityEngine.Vector3 deltaPos, Quaternion deltaRot)
		{
		}

		[Token(Token = "0x6001AF1")]
		[Address(RVA = "0xD417C4", Offset = "0xD417C4", VA = "0xD417C4")]
		protected Quaternion GetCounterRotationDelta(Quaternion deltaRot)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6001AF2")]
		[Address(RVA = "0xD418F0", Offset = "0xD418F0", VA = "0xD418F0")]
		protected void UpdateEyeMatrices()
		{
		}

		[Token(Token = "0x6001AF3")]
		[Address(RVA = "0xD41E68", Offset = "0xD41E68", VA = "0xD41E68", Slot = "8")]
		protected virtual void CorrectEyeMatrices(Matrix4x4[] eyePrj, Matrix4x4[] eyeToWorld)
		{
		}

		[Token(Token = "0x6001AF4")]
		[Address(RVA = "0xD41E6C", Offset = "0xD41E6C", VA = "0xD41E6C")]
		protected void ApplyEyeMatrices(Material m)
		{
		}

		[Token(Token = "0x6001AF5")]
		[Address(RVA = "0xD41EB8", Offset = "0xD41EB8", VA = "0xD41EB8")]
		protected TunnellingBase()
		{
		}
	}
	[Token(Token = "0x200039B")]
	public struct Angle
	{
		[Token(Token = "0x200086D")]
		public enum AngleType
		{
			[Token(Token = "0x40029C5")]
			ANGLE,
			[Token(Token = "0x40029C6")]
			ACUTE,
			[Token(Token = "0x40029C7")]
			REFLEX
		}

		[Token(Token = "0x40016C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float _angle;

		[Token(Token = "0x17000307")]
		public float angle
		{
			[Token(Token = "0x6001AF6")]
			[Address(RVA = "0x97CEE0", Offset = "0x97CEE0", VA = "0x97CEE0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000308")]
		public float acute
		{
			[Token(Token = "0x6001AF7")]
			[Address(RVA = "0x97CEE8", Offset = "0x97CEE8", VA = "0x97CEE8")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000309")]
		public float reflex
		{
			[Token(Token = "0x6001AF8")]
			[Address(RVA = "0x97CEF4", Offset = "0x97CEF4", VA = "0x97CEF4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6001AF9")]
		[Address(RVA = "0x97CF00", Offset = "0x97CF00", VA = "0x97CF00")]
		public Angle(float a)
		{
		}

		[Token(Token = "0x6001AFA")]
		[Address(RVA = "0x97CF28", Offset = "0x97CF28", VA = "0x97CF28")]
		public Angle(Angle a)
		{
		}

		[Token(Token = "0x6001AFB")]
		[Address(RVA = "0x97CF50", Offset = "0x97CF50", VA = "0x97CF50")]
		public float ToFloat(AngleType type)
		{
			return default(float);
		}

		[Token(Token = "0x6001AFC")]
		[Address(RVA = "0xD3E7A0", Offset = "0xD3E7A0", VA = "0xD3E7A0")]
		public static float ToAngle(float a, AngleType type)
		{
			return default(float);
		}

		[Token(Token = "0x6001AFD")]
		[Address(RVA = "0x97CF5C", Offset = "0x97CF5C", VA = "0x97CF5C", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6001AFE")]
		[Address(RVA = "0xD3E954", Offset = "0xD3E954", VA = "0xD3E954")]
		public static bool operator <(Angle a, Angle b)
		{
			return default(bool);
		}

		[Token(Token = "0x6001AFF")]
		[Address(RVA = "0xD3E960", Offset = "0xD3E960", VA = "0xD3E960")]
		public static bool operator >(Angle a, Angle b)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B00")]
		[Address(RVA = "0xD3E96C", Offset = "0xD3E96C", VA = "0xD3E96C")]
		public static bool operator <=(Angle a, Angle b)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B01")]
		[Address(RVA = "0xD3E978", Offset = "0xD3E978", VA = "0xD3E978")]
		public static bool operator >=(Angle a, Angle b)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B02")]
		[Address(RVA = "0xD3E984", Offset = "0xD3E984", VA = "0xD3E984")]
		public static Angle operator +(Angle a, Angle b)
		{
			return default(Angle);
		}

		[Token(Token = "0x6001B03")]
		[Address(RVA = "0xD3E990", Offset = "0xD3E990", VA = "0xD3E990")]
		public static Angle operator -(Angle a, Angle b)
		{
			return default(Angle);
		}

		[Token(Token = "0x6001B04")]
		[Address(RVA = "0xD3E99C", Offset = "0xD3E99C", VA = "0xD3E99C")]
		public static bool operator ==(Angle a, Angle b)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B05")]
		[Address(RVA = "0xD3E9A8", Offset = "0xD3E9A8", VA = "0xD3E9A8")]
		public static bool operator !=(Angle a, Angle b)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B06")]
		[Address(RVA = "0x97CF64", Offset = "0x97CF64", VA = "0x97CF64", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B07")]
		[Address(RVA = "0x97CF6C", Offset = "0x97CF6C", VA = "0x97CF6C", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x6001B08")]
		[Address(RVA = "0xD3EA78", Offset = "0xD3EA78", VA = "0xD3EA78")]
		public static bool operator <(Angle a, float b)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B09")]
		[Address(RVA = "0xD3EAA8", Offset = "0xD3EAA8", VA = "0xD3EAA8")]
		public static bool operator >(Angle a, float b)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B0A")]
		[Address(RVA = "0xD3EAD8", Offset = "0xD3EAD8", VA = "0xD3EAD8")]
		public static bool operator <=(Angle a, float b)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B0B")]
		[Address(RVA = "0xD3EB08", Offset = "0xD3EB08", VA = "0xD3EB08")]
		public static bool operator >=(Angle a, float b)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B0C")]
		[Address(RVA = "0xD3EB38", Offset = "0xD3EB38", VA = "0xD3EB38")]
		public static Angle operator +(Angle a, float b)
		{
			return default(Angle);
		}

		[Token(Token = "0x6001B0D")]
		[Address(RVA = "0xD3EB68", Offset = "0xD3EB68", VA = "0xD3EB68")]
		public static Angle operator -(Angle a, float b)
		{
			return default(Angle);
		}

		[Token(Token = "0x6001B0E")]
		[Address(RVA = "0xD3EB98", Offset = "0xD3EB98", VA = "0xD3EB98")]
		public static Angle operator *(Angle a, float b)
		{
			return default(Angle);
		}

		[Token(Token = "0x6001B0F")]
		[Address(RVA = "0xD3EBA4", Offset = "0xD3EBA4", VA = "0xD3EBA4")]
		public static Angle operator /(Angle a, float b)
		{
			return default(Angle);
		}

		[Token(Token = "0x6001B10")]
		[Address(RVA = "0xD3EBB0", Offset = "0xD3EBB0", VA = "0xD3EBB0")]
		public static bool operator <(float a, Angle b)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B11")]
		[Address(RVA = "0xD3EBC4", Offset = "0xD3EBC4", VA = "0xD3EBC4")]
		public static bool operator >(float a, Angle b)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B12")]
		[Address(RVA = "0xD3EBD8", Offset = "0xD3EBD8", VA = "0xD3EBD8")]
		public static bool operator <=(float a, Angle b)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B13")]
		[Address(RVA = "0xD3EBEC", Offset = "0xD3EBEC", VA = "0xD3EBEC")]
		public static bool operator >=(float a, Angle b)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B14")]
		[Address(RVA = "0xD3EC00", Offset = "0xD3EC00", VA = "0xD3EC00")]
		public static Angle operator +(float a, Angle b)
		{
			return default(Angle);
		}

		[Token(Token = "0x6001B15")]
		[Address(RVA = "0xD3EC2C", Offset = "0xD3EC2C", VA = "0xD3EC2C")]
		public static Angle operator -(float a, Angle b)
		{
			return default(Angle);
		}

		[Token(Token = "0x6001B16")]
		[Address(RVA = "0xD3EC58", Offset = "0xD3EC58", VA = "0xD3EC58")]
		public static implicit operator Angle(float f)
		{
			return default(Angle);
		}
	}
	[Token(Token = "0x200039C")]
	public struct Angle3
	{
		[Token(Token = "0x40016C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Angle x;

		[Token(Token = "0x40016C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public Angle y;

		[Token(Token = "0x40016C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Angle z;

		[Token(Token = "0x1700030A")]
		public UnityEngine.Vector3 eulerAngles
		{
			[Token(Token = "0x6001B17")]
			[Address(RVA = "0x97CF78", Offset = "0x97CF78", VA = "0x97CF78")]
			get
			{
				return default(UnityEngine.Vector3);
			}
		}

		[Token(Token = "0x1700030B")]
		public UnityEngine.Vector3 eulerAcute
		{
			[Token(Token = "0x6001B18")]
			[Address(RVA = "0x97CFB4", Offset = "0x97CFB4", VA = "0x97CFB4")]
			get
			{
				return default(UnityEngine.Vector3);
			}
		}

		[Token(Token = "0x1700030C")]
		public UnityEngine.Vector3 eulerReflex
		{
			[Token(Token = "0x6001B19")]
			[Address(RVA = "0x97CFBC", Offset = "0x97CFBC", VA = "0x97CFBC")]
			get
			{
				return default(UnityEngine.Vector3);
			}
		}

		[Token(Token = "0x1700030D")]
		public Angle angle
		{
			[Token(Token = "0x6001B1A")]
			[Address(RVA = "0x97CFC4", Offset = "0x97CFC4", VA = "0x97CFC4")]
			get
			{
				return default(Angle);
			}
		}

		[Token(Token = "0x1700030E")]
		public UnityEngine.Vector3 axis
		{
			[Token(Token = "0x6001B1B")]
			[Address(RVA = "0x97CFFC", Offset = "0x97CFFC", VA = "0x97CFFC")]
			get
			{
				return default(UnityEngine.Vector3);
			}
		}

		[Token(Token = "0x6001B1C")]
		[Address(RVA = "0x97D038", Offset = "0x97D038", VA = "0x97D038")]
		public Angle3(float x, float y, float z)
		{
		}

		[Token(Token = "0x6001B1D")]
		[Address(RVA = "0x97D040", Offset = "0x97D040", VA = "0x97D040")]
		public Angle3(Angle x, Angle y, Angle z)
		{
		}

		[Token(Token = "0x6001B1E")]
		[Address(RVA = "0x97D048", Offset = "0x97D048", VA = "0x97D048")]
		public Angle3(UnityEngine.Vector3 euler)
		{
		}

		[Token(Token = "0x6001B1F")]
		[Address(RVA = "0x97D050", Offset = "0x97D050", VA = "0x97D050")]
		public Angle3(Quaternion rotation)
		{
		}

		[Token(Token = "0x6001B20")]
		[Address(RVA = "0x97D058", Offset = "0x97D058", VA = "0x97D058")]
		public void ToAxisAngle(out UnityEngine.Vector3 axis, out Angle angle)
		{
		}

		[Token(Token = "0x6001B21")]
		[Address(RVA = "0x97D060", Offset = "0x97D060", VA = "0x97D060")]
		public UnityEngine.Vector3 ToEuler(Angle.AngleType type)
		{
			return default(UnityEngine.Vector3);
		}

		[Token(Token = "0x6001B22")]
		[Address(RVA = "0x97D068", Offset = "0x97D068", VA = "0x97D068", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6001B23")]
		[Address(RVA = "0xD3F0F8", Offset = "0xD3F0F8", VA = "0xD3F0F8")]
		public static Angle3 operator +(Angle3 a, Angle3 b)
		{
			return default(Angle3);
		}

		[Token(Token = "0x6001B24")]
		[Address(RVA = "0xD3F188", Offset = "0xD3F188", VA = "0xD3F188")]
		public static Angle3 operator -(Angle3 a, Angle3 b)
		{
			return default(Angle3);
		}

		[Token(Token = "0x6001B25")]
		[Address(RVA = "0xD3F218", Offset = "0xD3F218", VA = "0xD3F218")]
		public static Angle3 operator *(Angle3 a, float b)
		{
			return default(Angle3);
		}

		[Token(Token = "0x6001B26")]
		[Address(RVA = "0xD3F29C", Offset = "0xD3F29C", VA = "0xD3F29C")]
		public static bool operator ==(Angle3 a, Angle3 b)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B27")]
		[Address(RVA = "0xD3F2C0", Offset = "0xD3F2C0", VA = "0xD3F2C0")]
		public static bool operator !=(Angle3 a, Angle3 b)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B28")]
		[Address(RVA = "0x97D070", Offset = "0x97D070", VA = "0x97D070", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B29")]
		[Address(RVA = "0x97D078", Offset = "0x97D078", VA = "0x97D078", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x6001B2A")]
		[Address(RVA = "0xD3F41C", Offset = "0xD3F41C", VA = "0xD3F41C")]
		public static implicit operator Angle3(UnityEngine.Vector3 v)
		{
			return default(Angle3);
		}
	}
	[Token(Token = "0x200039D")]
	public abstract class TunnellingImageBase : TunnellingBase
	{
		[Token(Token = "0x200086E")]
		public enum BlurKernel
		{
			[Token(Token = "0x40029C9")]
			FIVE,
			[Token(Token = "0x40029CA")]
			NINE,
			[Token(Token = "0x40029CB")]
			THIRTEEN
		}

		[Token(Token = "0x200086F")]
		public enum CounterVelocityMode
		{
			[Token(Token = "0x40029CD")]
			OFF,
			[Token(Token = "0x40029CE")]
			SHADER,
			[Token(Token = "0x40029CF")]
			REAL
		}

		[Token(Token = "0x40016C4")]
		private const string KEYWORD_MASK = "TUNNEL_MASK";

		[Token(Token = "0x40016C5")]
		private const string KEYWORD_CONSTANT = "TUNNEL_CONSTANT";

		[Token(Token = "0x40016C6")]
		private const string KEYWORD_INVERT = "TUNNEL_INVERT_MASK";

		[Token(Token = "0x40016C7")]
		private const string KEYWORD_BLUR = "TUNNEL_BLUR";

		[Token(Token = "0x40016C8")]
		private const string PATH_TUNNELSHADER = "Tunnelling";

		[Token(Token = "0x40016C9")]
		private const string PATH_MASKSHADER = "Mask";

		[Token(Token = "0x40016CA")]
		private const string PATH_WINDOWSHADER = "Window";

		[Token(Token = "0x40016CB")]
		private const string PATH_COPYSHADER = "BlitA";

		[Token(Token = "0x40016CC")]
		private const string PATH_BLURSHADER = "SeparableBlur";

		[Token(Token = "0x40016CD")]
		private const string PATH_IRISSHADER = "TunnellingVertexZ";

		[Token(Token = "0x40016CE")]
		private const string PATH_SKYSPHERESHADER = "Skysphere";

		[Token(Token = "0x40016CF")]
		private const string PATH_SKYSPHEREMESH = "Skysphere";

		[Token(Token = "0x40016D0")]
		private const string PROP_FEATHER = "_Feather";

		[Token(Token = "0x40016D1")]
		private const string PROP_BKGRT = "_BkgTex";

		[Token(Token = "0x40016D2")]
		private const string PROP_MASKRT = "_MaskTex";

		[Token(Token = "0x40016D3")]
		private const string PROP_BLUR = "_Blur";

		[Token(Token = "0x40016D4")]
		private const string PROP_OVERLAY = "_Overlay";

		[Token(Token = "0x40016D5")]
		private const string PROP_BLUR_OFFSETS = "_Offsets";

		[Token(Token = "0x40016D6")]
		private const float BLUR_OFFSET_1 = 1.3333334f;

		[Token(Token = "0x40016D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly float[] BLUR_OFFSETS_9;

		[Token(Token = "0x40016D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly float[] BLUR_OFFSETS_13;

		[Token(Token = "0x40016D9")]
		public const string GLOBAL_PROP_WORLD2CAGE = "_VRTP_WorldToCage";

		[Token(Token = "0x40016DA")]
		public const string GLOBAL_PROP_WORLD2CAGE_NORMAL = "_VRTP_WorldToCageNormal";

		[Token(Token = "0x40016DB")]
		public const string GLOBAL_PROP_CAGEPOS = "_VRTP_CagePos";

		[Token(Token = "0x40016DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8BF030", Offset = "0x8BF030")]
		private static TunnellingImageBase <instance>k__BackingField;

		[Token(Token = "0x40016DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BF040", Offset = "0x8BF040")]
		public BackgroundMode backgroundMode;

		[Token(Token = "0x40016DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8BF078", Offset = "0x8BF078")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BF078", Offset = "0x8BF078")]
		public float effectOverlay;

		[Token(Token = "0x40016DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BF0CC", Offset = "0x8BF0CC")]
		private GameObject _cageParent;

		[Token(Token = "0x40016E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8BF118", Offset = "0x8BF118")]
		public int cageDownsample;

		[Token(Token = "0x40016E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D4")]
		public MSAA cageAntiAliasing;

		[Token(Token = "0x40016E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		public bool cageUpdateEveryFrame;

		[Token(Token = "0x40016E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1DC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8BF130", Offset = "0x8BF130")]
		public float cageFogDensity;

		[Token(Token = "0x40016E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8BF150", Offset = "0x8BF150")]
		public float cageFogPower;

		[Token(Token = "0x40016E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8BF168", Offset = "0x8BF168")]
		public float cageFogBlend;

		[Token(Token = "0x40016E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		public MaskMode maskMode;

		[Token(Token = "0x40016E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1EC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8BF180", Offset = "0x8BF180")]
		public int blurDownsample;

		[Token(Token = "0x40016E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8BF198", Offset = "0x8BF198")]
		public float blurDistance;

		[Token(Token = "0x40016E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8BF1B0", Offset = "0x8BF1B0")]
		public int blurPasses;

		[Token(Token = "0x40016EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		public BlurKernel blurSamples;

		[Token(Token = "0x40016EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1FC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BF1C8", Offset = "0x8BF1C8")]
		public bool irisZRejection;

		[Token(Token = "0x40016EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		public CounterVelocityMode counterVelocityMode;

		[Token(Token = "0x40016ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x204")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BF200", Offset = "0x8BF200")]
		public float counterVelocityResetDistance;

		[Token(Token = "0x40016EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BF238", Offset = "0x8BF238")]
		public float counterVelocityResetTime;

		[Token(Token = "0x40016EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8BF270", Offset = "0x8BF270")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BF270", Offset = "0x8BF270")]
		public float counterVelocityStrength;

		[Token(Token = "0x40016F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BF2C4", Offset = "0x8BF2C4")]
		public UnityEngine.Vector3 counterVelocityPerAxis;

		[Token(Token = "0x40016F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
		private CommandBuffer _maskCmd;

		[Token(Token = "0x40016F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
		private Material _matTunnel;

		[Token(Token = "0x40016F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
		private Material _matMask;

		[Token(Token = "0x40016F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
		private Material _matWindow;

		[Token(Token = "0x40016F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
		private Material _matCopyAlpha;

		[Token(Token = "0x40016F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
		private Material _matBlur;

		[Token(Token = "0x40016F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
		private Material _matSkysphere;

		[Token(Token = "0x40016F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
		private Mesh _meshSkysphere;

		[Token(Token = "0x40016F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
		private MeshRenderer[] _cageMrs;

		[Token(Token = "0x40016FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
		private List<MeshFilter> _cageMfs;

		[Token(Token = "0x40016FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
		private List<Renderer> _maskObjects;

		[Token(Token = "0x40016FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
		private RenderTexture _cageRt;

		[Token(Token = "0x40016FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
		private RenderTexture _maskRt;

		[Token(Token = "0x40016FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
		private RenderTexture _blurRt0;

		[Token(Token = "0x40016FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
		private RenderTexture _blurRt1;

		[Token(Token = "0x4001700")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
		private int _rtX;

		[Token(Token = "0x4001701")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29C")]
		private int _rtY;

		[Token(Token = "0x4001702")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
		private int _rtA;

		[Token(Token = "0x4001703")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
		private CommandBuffer _irisCmd;

		[Token(Token = "0x4001704")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B0")]
		private Material _matIris;

		[Token(Token = "0x4001705")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B8")]
		private Mesh _meshIris;

		[Token(Token = "0x4001706")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C0")]
		private Vector4[] _blurOffsets;

		[Token(Token = "0x4001707")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C8")]
		private MaskMode _lastMaskMode;

		[Token(Token = "0x4001708")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2CC")]
		private MSAA _lastCageMsaa;

		[Token(Token = "0x4001709")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D0")]
		private bool _camHasMaskBuffer;

		[Token(Token = "0x400170A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D4")]
		private int _lastCageDownsample;

		[Token(Token = "0x400170B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D8")]
		private int _lastBlurDownsample;

		[Token(Token = "0x400170C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2DC")]
		private float _lastBlurRadius;

		[Token(Token = "0x400170D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E0")]
		private BlurKernel _lastBlurKernel;

		[Token(Token = "0x400170E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E4")]
		private bool _wasDrawingIrisEarly;

		[Token(Token = "0x400170F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E5")]
		private bool _camHasIrisBuffer;

		[Token(Token = "0x4001710")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E8")]
		private CounterVelocityMode _lastCvMode;

		[Token(Token = "0x4001711")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2EC")]
		private UnityEngine.Vector3 _cmPos;

		[Token(Token = "0x4001712")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2F8")]
		private UnityEngine.Vector3 _cageInitialPosLocal;

		[Token(Token = "0x4001713")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x304")]
		private float _timeToResetCounterVelocity;

		[Token(Token = "0x4001714")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x308")]
		private int _propColor;

		[Token(Token = "0x4001715")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30C")]
		private int _propBkgRt;

		[Token(Token = "0x4001716")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x310")]
		private int _propMaskRt;

		[Token(Token = "0x4001717")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x314")]
		private int _propSkybox;

		[Token(Token = "0x4001718")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x318")]
		private int _propOverlay;

		[Token(Token = "0x4001719")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31C")]
		private int _propBlur;

		[Token(Token = "0x400171A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x320")]
		private int _propBlurOffsets;

		[Token(Token = "0x400171B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x324")]
		private int _globPropWorld2Cage;

		[Token(Token = "0x400171C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x328")]
		private int _globPropWorld2CageNormal;

		[Token(Token = "0x400171D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32C")]
		private int _globPropCagePos;

		[Token(Token = "0x1700030F")]
		public static TunnellingImageBase instance
		{
			[Token(Token = "0x6001B2B")]
			[Address(RVA = "0xD42008", Offset = "0xD42008", VA = "0xD42008")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CAFF0", Offset = "0x8CAFF0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001B2C")]
			[Address(RVA = "0xD42070", Offset = "0xD42070", VA = "0xD42070")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CB000", Offset = "0x8CB000")]
			private set
			{
			}
		}

		[Token(Token = "0x17000310")]
		public bool usingMask
		{
			[Token(Token = "0x6001B2D")]
			[Address(RVA = "0xD420DC", Offset = "0xD420DC", VA = "0xD420DC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000311")]
		public bool usingCage
		{
			[Token(Token = "0x6001B2E")]
			[Address(RVA = "0xD420EC", Offset = "0xD420EC", VA = "0xD420EC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000312")]
		private bool _usingCageRt
		{
			[Token(Token = "0x6001B2F")]
			[Address(RVA = "0xD42110", Offset = "0xD42110", VA = "0xD42110")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000313")]
		private bool _canDrawIris
		{
			[Token(Token = "0x6001B30")]
			[Address(RVA = "0xD42124", Offset = "0xD42124", VA = "0xD42124")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000314")]
		private bool _drawIris
		{
			[Token(Token = "0x6001B31")]
			[Address(RVA = "0xD42158", Offset = "0xD42158", VA = "0xD42158")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000315")]
		protected abstract CameraEvent _maskCmdEvt
		{
			[Token(Token = "0x6001B32")]
			get;
		}

		[Token(Token = "0x6001B33")]
		[Address(RVA = "0xD42194", Offset = "0xD42194", VA = "0xD42194", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6001B34")]
		[Address(RVA = "0xD4299C", Offset = "0xD4299C", VA = "0xD4299C", Slot = "5")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6001B35")]
		[Address(RVA = "0xD42D00", Offset = "0xD42D00", VA = "0xD42D00")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001B36")]
		[Address(RVA = "0xD42D84", Offset = "0xD42D84", VA = "0xD42D84")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001B37")]
		[Address(RVA = "0xD42F90", Offset = "0xD42F90", VA = "0xD42F90")]
		private void ReleaseRT(ref RenderTexture rt)
		{
		}

		[Token(Token = "0x6001B38")]
		[Address(RVA = "0xD43020", Offset = "0xD43020", VA = "0xD43020")]
		public void AddObjectToMask(Renderer r, bool includeChildren = false)
		{
		}

		[Token(Token = "0x6001B39")]
		[Address(RVA = "0xD432E4", Offset = "0xD432E4", VA = "0xD432E4")]
		public void RemoveObjectFromMask(Renderer r, bool includeChildren = false)
		{
		}

		[Token(Token = "0x6001B3A")]
		[Address(RVA = "0xD42A2C", Offset = "0xD42A2C", VA = "0xD42A2C")]
		public void UpdateCage()
		{
		}

		[Token(Token = "0x6001B3B")]
		[Address(RVA = "0xD433D4", Offset = "0xD433D4", VA = "0xD433D4", Slot = "6")]
		public override void ResetCounterMotion()
		{
		}

		[Token(Token = "0x6001B3C")]
		[Address(RVA = "0xD3FB20", Offset = "0xD3FB20", VA = "0xD3FB20")]
		public void ApplyPreset(TunnellingPreset p)
		{
		}

		[Token(Token = "0x6001B3D")]
		[Address(RVA = "0xD434BC", Offset = "0xD434BC", VA = "0xD434BC")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001B3E")]
		[Address(RVA = "0xD43B54", Offset = "0xD43B54", VA = "0xD43B54")]
		private void OnPreRender()
		{
		}

		[Token(Token = "0x6001B3F")]
		[Address(RVA = "0xD3FD34", Offset = "0xD3FD34", VA = "0xD3FD34")]
		protected void Draw(RenderTexture src, RenderTexture dest)
		{
		}

		[Token(Token = "0x6001B40")]
		[Address(RVA = "0xD4436C", Offset = "0xD4436C", VA = "0xD4436C", Slot = "8")]
		protected override void CorrectEyeMatrices(Matrix4x4[] eyePrj, Matrix4x4[] eyeToWorld)
		{
		}

		[Token(Token = "0x6001B41")]
		[Address(RVA = "0xD443EC", Offset = "0xD443EC", VA = "0xD443EC", Slot = "7")]
		protected override void UpdateCounterMotion(UnityEngine.Vector3 deltaPos, Quaternion deltaRot)
		{
		}

		[Token(Token = "0x6001B42")]
		[Address(RVA = "0xD426FC", Offset = "0xD426FC", VA = "0xD426FC")]
		private void UpdateKeywords()
		{
		}

		[Token(Token = "0x6001B43")]
		[Address(RVA = "0xD43870", Offset = "0xD43870", VA = "0xD43870")]
		private void UpdateBlurKernel()
		{
		}

		[Token(Token = "0x6001B44")]
		[Address(RVA = "0xD446E8", Offset = "0xD446E8", VA = "0xD446E8")]
		private int GetMsaa(MSAA m, int srcMsaa)
		{
			return default(int);
		}

		[Token(Token = "0x6001B45")]
		[Address(RVA = "0xD43D8C", Offset = "0xD43D8C", VA = "0xD43D8C")]
		private void UpdateRenderTextures(int srcX, int srcY, int srcMsaa)
		{
		}

		[Token(Token = "0x6001B46")]
		[Address(RVA = "0xD43110", Offset = "0xD43110", VA = "0xD43110")]
		private void ResetMaskCommandBuffer()
		{
		}

		[Token(Token = "0x6001B47")]
		[Address(RVA = "0xD42C38", Offset = "0xD42C38", VA = "0xD42C38")]
		private void ToggleMaskCommandBuffer(bool on)
		{
		}

		[Token(Token = "0x6001B48")]
		[Address(RVA = "0xD42CA8", Offset = "0xD42CA8", VA = "0xD42CA8")]
		private void ToggleIrisCommandBuffer(bool on)
		{
		}

		[Token(Token = "0x6001B49")]
		[Address(RVA = "0xD40264", Offset = "0xD40264", VA = "0xD40264")]
		protected TunnellingImageBase()
		{
		}
	}
	[Token(Token = "0x200039E")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x8B7020", Offset = "0x8B7020")]
	public class TunnellingMaskObject : MonoBehaviour
	{
		[Token(Token = "0x400171E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool autoAddChildren;

		[Token(Token = "0x400171F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Renderer _r;

		[Token(Token = "0x4001720")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool _started;

		[Token(Token = "0x6001B4B")]
		[Address(RVA = "0xD447DC", Offset = "0xD447DC", VA = "0xD447DC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001B4C")]
		[Address(RVA = "0xD44834", Offset = "0xD44834", VA = "0xD44834")]
		private void Start()
		{
		}

		[Token(Token = "0x6001B4D")]
		[Address(RVA = "0xD44840", Offset = "0xD44840", VA = "0xD44840")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001B4E")]
		[Address(RVA = "0xD449E8", Offset = "0xD449E8", VA = "0xD449E8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001B4F")]
		[Address(RVA = "0xD44B78", Offset = "0xD44B78", VA = "0xD44B78")]
		public TunnellingMaskObject()
		{
		}
	}
	[Token(Token = "0x200039F")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x8B7084", Offset = "0x8B7084")]
	public class TunnellingMaskObjectMobile : MonoBehaviour
	{
		[Token(Token = "0x4001721")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool autoAddChildren;

		[Token(Token = "0x4001722")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Renderer _r;

		[Token(Token = "0x4001723")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool _started;

		[Token(Token = "0x6001B50")]
		[Address(RVA = "0xD44B80", Offset = "0xD44B80", VA = "0xD44B80")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001B51")]
		[Address(RVA = "0xD44BD8", Offset = "0xD44BD8", VA = "0xD44BD8")]
		private void Start()
		{
		}

		[Token(Token = "0x6001B52")]
		[Address(RVA = "0xD44BE4", Offset = "0xD44BE4", VA = "0xD44BE4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001B53")]
		[Address(RVA = "0xD450AC", Offset = "0xD450AC", VA = "0xD450AC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001B54")]
		[Address(RVA = "0xD45344", Offset = "0xD45344", VA = "0xD45344")]
		public TunnellingMaskObjectMobile()
		{
		}
	}
	[Token(Token = "0x20003A0")]
	public class TunnellingMobile : TunnellingBase
	{
		[Token(Token = "0x4001724")]
		public const string GLOBAL_PROP_STENCILREF = "_VRTP_Stencil_Ref";

		[Token(Token = "0x4001725")]
		public const string GLOBAL_PROP_STENCILMASK = "_VRTP_Stencil_Mask";

		[Token(Token = "0x4001726")]
		public const string GLOBAL_PROP_STENCILBIAS = "_VRTP_Stencil_Bias";

		[Token(Token = "0x4001727")]
		private const string PROP_WRITEZ = "_WriteZ";

		[Token(Token = "0x4001728")]
		private const string PATH_SHADER = "TunnellingVertex";

		[Token(Token = "0x4001729")]
		private const string PATH_STENCILSHADER = "TunnellingMobileStencil";

		[Token(Token = "0x400172A")]
		private const CameraEvent CEVENT_FX = CameraEvent.BeforeImageEffects;

		[Token(Token = "0x400172B")]
		private const CameraEvent CEVENT_Z = CameraEvent.BeforeForwardOpaque;

		[Token(Token = "0x400172C")]
		private const int RQUEUE_FIRST = 1;

		[Token(Token = "0x400172D")]
		private const int RQUEUE_MASK = 2499;

		[Token(Token = "0x400172E")]
		private const int RQUEUE_OPAQUE = 2501;

		[Token(Token = "0x400172F")]
		private const int RQUEUE_LAST = 5000;

		[Token(Token = "0x4001730")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8BF2FC", Offset = "0x8BF2FC")]
		private static TunnellingMobile <instance>k__BackingField;

		[Token(Token = "0x4001731")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Material _stencilMat;

		[Token(Token = "0x4001732")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BF30C", Offset = "0x8BF30C")]
		public bool drawSkybox;

		[Token(Token = "0x4001733")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C1")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BF344", Offset = "0x8BF344")]
		public bool useMask;

		[Token(Token = "0x4001734")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C2")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BF37C", Offset = "0x8BF37C")]
		public bool drawBeforeTransparent;

		[Token(Token = "0x4001735")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BF3B4", Offset = "0x8BF3B4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8BF3B4", Offset = "0x8BF3B4")]
		public int stencilReference;

		[Token(Token = "0x4001736")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BF40C", Offset = "0x8BF40C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8BF40C", Offset = "0x8BF40C")]
		public int stencilMask;

		[Token(Token = "0x4001737")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1CC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BF464", Offset = "0x8BF464")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8BF464", Offset = "0x8BF464")]
		public float stencilBias;

		[Token(Token = "0x4001738")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		private int _propColor;

		[Token(Token = "0x4001739")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D4")]
		private int _propSkybox;

		[Token(Token = "0x400173A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		private int _propWriteZ;

		[Token(Token = "0x400173B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1DC")]
		private int _globPropStencilRef;

		[Token(Token = "0x400173C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		private int _globPropStencilMask;

		[Token(Token = "0x400173D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E4")]
		private int _globPropStencilBias;

		[Token(Token = "0x400173E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		private Material _irisMatOuter;

		[Token(Token = "0x400173F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		private Material _irisMatInner;

		[Token(Token = "0x4001740")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		private Mesh _irisMesh;

		[Token(Token = "0x4001741")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		private Dictionary<Renderer, MeshFilter> _maskObjects;

		[Token(Token = "0x4001742")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		private Stack<Mesh> _skinnedMeshPool;

		[Token(Token = "0x4001743")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		private Stack<Mesh> _skinnedMeshesRendering;

		[Token(Token = "0x4001744")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
		private List<UnityEngine.Object> _toDestroy;

		[Token(Token = "0x4001745")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
		private List<MeshRenderer> _tempMeshChildren;

		[Token(Token = "0x4001746")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
		private List<SkinnedMeshRenderer> _tempSkinnedMeshChildren;

		[Token(Token = "0x17000316")]
		public static TunnellingMobile instance
		{
			[Token(Token = "0x6001B55")]
			[Address(RVA = "0xD4534C", Offset = "0xD4534C", VA = "0xD4534C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CB010", Offset = "0x8CB010")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001B56")]
			[Address(RVA = "0xD4539C", Offset = "0xD4539C", VA = "0xD4539C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CB020", Offset = "0x8CB020")]
			private set
			{
			}
		}

		[Token(Token = "0x17000317")]
		public static Material stencilMat
		{
			[Token(Token = "0x6001B57")]
			[Address(RVA = "0xD453F0", Offset = "0xD453F0", VA = "0xD453F0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000318")]
		public bool irisZRejectionEnabled
		{
			[Token(Token = "0x6001B58")]
			[Address(RVA = "0xD454D8", Offset = "0xD454D8", VA = "0xD454D8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001B59")]
		[Address(RVA = "0xD454F8", Offset = "0xD454F8", VA = "0xD454F8")]
		public void ApplyPreset(TunnellingPresetMobile p)
		{
		}

		[Token(Token = "0x6001B5A")]
		[Address(RVA = "0xD44D28", Offset = "0xD44D28", VA = "0xD44D28")]
		public void AddObjectToMask(Renderer r, bool includeChildren = false)
		{
		}

		[Token(Token = "0x6001B5B")]
		[Address(RVA = "0xD451D8", Offset = "0xD451D8", VA = "0xD451D8")]
		public void RemoveObjectFromMask(Renderer r, bool includeChildren = false)
		{
		}

		[Token(Token = "0x6001B5C")]
		[Address(RVA = "0xD45590", Offset = "0xD45590", VA = "0xD45590", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6001B5D")]
		[Address(RVA = "0xD4586C", Offset = "0xD4586C", VA = "0xD4586C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001B5E")]
		[Address(RVA = "0xD45B6C", Offset = "0xD45B6C", VA = "0xD45B6C")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001B5F")]
		[Address(RVA = "0xD462B4", Offset = "0xD462B4", VA = "0xD462B4")]
		private void DrawIris(Material m, int submesh, int opaqueQueue, int camLayer)
		{
		}

		[Token(Token = "0x6001B60")]
		[Address(RVA = "0xD46590", Offset = "0xD46590", VA = "0xD46590")]
		private void OnPreRender()
		{
		}

		[Token(Token = "0x6001B61")]
		[Address(RVA = "0xD465C4", Offset = "0xD465C4", VA = "0xD465C4")]
		public TunnellingMobile()
		{
		}
	}
	[Token(Token = "0x20003A1")]
	public class TunnellingOpaque : TunnellingImageBase
	{
		[Token(Token = "0x17000319")]
		protected override CameraEvent _maskCmdEvt
		{
			[Token(Token = "0x6001B62")]
			[Address(RVA = "0xB1CD4C", Offset = "0xB1CD4C", VA = "0xB1CD4C", Slot = "9")]
			get
			{
				return default(CameraEvent);
			}
		}

		[Token(Token = "0x6001B63")]
		[Address(RVA = "0xB1CD54", Offset = "0xB1CD54", VA = "0xB1CD54")]
		[ImageEffectOpaque]
		private void OnRenderImage(RenderTexture src, RenderTexture dest)
		{
		}

		[Token(Token = "0x6001B64")]
		[Address(RVA = "0xB1CD5C", Offset = "0xB1CD5C", VA = "0xB1CD5C")]
		public TunnellingOpaque()
		{
		}
	}
	[Token(Token = "0x20003A2")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8B70E8", Offset = "0x8B70E8")]
	public class TunnellingPreset : TunnellingPresetBase
	{
		[Token(Token = "0x4001747")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8BF4B8", Offset = "0x8BF4B8")]
		private float _effectOverlay;

		[Token(Token = "0x4001748")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		[SerializeField]
		private bool _overrideEffectOverlay;

		[Token(Token = "0x4001749")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private TunnellingBase.BackgroundMode _backgroundMode;

		[Token(Token = "0x400174A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		[SerializeField]
		private bool _overrideBackgroundMode;

		[Token(Token = "0x400174B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8BF528", Offset = "0x8BF528")]
		private int _cageDownsample;

		[Token(Token = "0x400174C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		[SerializeField]
		private bool _overrideCageDownsample;

		[Token(Token = "0x400174D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private TunnellingBase.MSAA _cageAntiAliasing;

		[Token(Token = "0x400174E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		[SerializeField]
		private bool _overrideCageAntiAliasing;

		[Token(Token = "0x400174F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBD")]
		[SerializeField]
		private bool _cageUpdateEveryFrame;

		[Token(Token = "0x4001750")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBE")]
		[SerializeField]
		private bool _overrideCageUpdateEveryFrame;

		[Token(Token = "0x4001751")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8BF5B8", Offset = "0x8BF5B8")]
		private float _cageFogDensity;

		[Token(Token = "0x4001752")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		[SerializeField]
		private bool _overrideCageFogDensity;

		[Token(Token = "0x4001753")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8BF610", Offset = "0x8BF610")]
		private float _cageFogPower;

		[Token(Token = "0x4001754")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		[SerializeField]
		private bool _overrideCageFogPower;

		[Token(Token = "0x4001755")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8BF660", Offset = "0x8BF660")]
		private float _cageFogBlend;

		[Token(Token = "0x4001756")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		[SerializeField]
		private bool _overrideCageFogBlend;

		[Token(Token = "0x4001757")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private TunnellingBase.MaskMode _maskMode;

		[Token(Token = "0x4001758")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		[SerializeField]
		private bool _overrideMaskMode;

		[Token(Token = "0x4001759")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8BF6D0", Offset = "0x8BF6D0")]
		private int _blurDownsample;

		[Token(Token = "0x400175A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		[SerializeField]
		private bool _overrideBlurDownsample;

		[Token(Token = "0x400175B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8BF720", Offset = "0x8BF720")]
		private float _blurDistance;

		[Token(Token = "0x400175C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		[SerializeField]
		private bool _overrideBlurDistance;

		[Token(Token = "0x400175D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8BF770", Offset = "0x8BF770")]
		private int _blurPasses;

		[Token(Token = "0x400175E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		[SerializeField]
		private bool _overrideBlurPasses;

		[Token(Token = "0x400175F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[SerializeField]
		private TunnellingImageBase.BlurKernel _blurSamples;

		[Token(Token = "0x4001760")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		[SerializeField]
		private bool _overrideBlurSamples;

		[Token(Token = "0x4001761")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[SerializeField]
		private TunnellingImageBase.CounterVelocityMode _counterVelocityMode;

		[Token(Token = "0x4001762")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		[SerializeField]
		private bool _overrideCounterVelocityMode;

		[Token(Token = "0x4001763")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[SerializeField]
		private float _counterVelocityResetDistance;

		[Token(Token = "0x4001764")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		[SerializeField]
		private bool _overrideCounterVelocityResetDistance;

		[Token(Token = "0x4001765")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[SerializeField]
		private float _counterVelocityResetTime;

		[Token(Token = "0x4001766")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		[SerializeField]
		private bool _overrideCounterVelocityResetTime;

		[Token(Token = "0x4001767")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8BF840", Offset = "0x8BF840")]
		private float _counterVelocityStrength;

		[Token(Token = "0x4001768")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		[SerializeField]
		private bool _overrideCounterVelocityStrength;

		[Token(Token = "0x4001769")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[SerializeField]
		private UnityEngine.Vector3 _counterVelocityPerAxis;

		[Token(Token = "0x400176A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
		[SerializeField]
		private bool _overrideCounterVelocityPerAxis;

		[Token(Token = "0x400176B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12D")]
		[SerializeField]
		private bool _irisZRejection;

		[Token(Token = "0x400176C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12E")]
		[SerializeField]
		private bool _overrideIrisZRejection;

		[Token(Token = "0x1700031A")]
		public float effectOverlay
		{
			[Token(Token = "0x6001B65")]
			[Address(RVA = "0xB1CDC4", Offset = "0xB1CDC4", VA = "0xB1CDC4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700031B")]
		public bool overrideEffectOverlay
		{
			[Token(Token = "0x6001B66")]
			[Address(RVA = "0xB1CDCC", Offset = "0xB1CDCC", VA = "0xB1CDCC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700031C")]
		public TunnellingBase.BackgroundMode backgroundMode
		{
			[Token(Token = "0x6001B67")]
			[Address(RVA = "0xB1CDD4", Offset = "0xB1CDD4", VA = "0xB1CDD4")]
			get
			{
				return default(TunnellingBase.BackgroundMode);
			}
		}

		[Token(Token = "0x1700031D")]
		public bool overrideBackgroundMode
		{
			[Token(Token = "0x6001B68")]
			[Address(RVA = "0xB1CDDC", Offset = "0xB1CDDC", VA = "0xB1CDDC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700031E")]
		public int cageDownsample
		{
			[Token(Token = "0x6001B69")]
			[Address(RVA = "0xB1CDFC", Offset = "0xB1CDFC", VA = "0xB1CDFC")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700031F")]
		public bool overrideCageDownsample
		{
			[Token(Token = "0x6001B6A")]
			[Address(RVA = "0xB1CE04", Offset = "0xB1CE04", VA = "0xB1CE04")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000320")]
		public TunnellingBase.MSAA cageAntiAliasing
		{
			[Token(Token = "0x6001B6B")]
			[Address(RVA = "0xB1CE24", Offset = "0xB1CE24", VA = "0xB1CE24")]
			get
			{
				return default(TunnellingBase.MSAA);
			}
		}

		[Token(Token = "0x17000321")]
		public bool overrideCageAntiAliasing
		{
			[Token(Token = "0x6001B6C")]
			[Address(RVA = "0xB1CE2C", Offset = "0xB1CE2C", VA = "0xB1CE2C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000322")]
		public bool cageUpdateEveryFrame
		{
			[Token(Token = "0x6001B6D")]
			[Address(RVA = "0xB1CE4C", Offset = "0xB1CE4C", VA = "0xB1CE4C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000323")]
		public bool overrideCageUpdateEveryFrame
		{
			[Token(Token = "0x6001B6E")]
			[Address(RVA = "0xB1CE54", Offset = "0xB1CE54", VA = "0xB1CE54")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000324")]
		public float cageFogDensity
		{
			[Token(Token = "0x6001B6F")]
			[Address(RVA = "0xB1CE74", Offset = "0xB1CE74", VA = "0xB1CE74")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000325")]
		public bool overrideCageFogDensity
		{
			[Token(Token = "0x6001B70")]
			[Address(RVA = "0xB1CE7C", Offset = "0xB1CE7C", VA = "0xB1CE7C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000326")]
		public float cageFogPower
		{
			[Token(Token = "0x6001B71")]
			[Address(RVA = "0xB1CE9C", Offset = "0xB1CE9C", VA = "0xB1CE9C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000327")]
		public bool overrideCageFogPower
		{
			[Token(Token = "0x6001B72")]
			[Address(RVA = "0xB1CEA4", Offset = "0xB1CEA4", VA = "0xB1CEA4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000328")]
		public float cageFogBlend
		{
			[Token(Token = "0x6001B73")]
			[Address(RVA = "0xB1CEC4", Offset = "0xB1CEC4", VA = "0xB1CEC4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000329")]
		public bool overrideCageFogBlend
		{
			[Token(Token = "0x6001B74")]
			[Address(RVA = "0xB1CECC", Offset = "0xB1CECC", VA = "0xB1CECC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700032A")]
		public TunnellingBase.MaskMode maskMode
		{
			[Token(Token = "0x6001B75")]
			[Address(RVA = "0xB1CEEC", Offset = "0xB1CEEC", VA = "0xB1CEEC")]
			get
			{
				return default(TunnellingBase.MaskMode);
			}
		}

		[Token(Token = "0x1700032B")]
		public bool overrideMaskMode
		{
			[Token(Token = "0x6001B76")]
			[Address(RVA = "0xB1CEF4", Offset = "0xB1CEF4", VA = "0xB1CEF4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700032C")]
		public int blurDownsample
		{
			[Token(Token = "0x6001B77")]
			[Address(RVA = "0xB1CF14", Offset = "0xB1CF14", VA = "0xB1CF14")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700032D")]
		public bool overrideBlurDownsample
		{
			[Token(Token = "0x6001B78")]
			[Address(RVA = "0xB1CF1C", Offset = "0xB1CF1C", VA = "0xB1CF1C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700032E")]
		public float blurDistance
		{
			[Token(Token = "0x6001B79")]
			[Address(RVA = "0xB1CF3C", Offset = "0xB1CF3C", VA = "0xB1CF3C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700032F")]
		public bool overrideBlurDistance
		{
			[Token(Token = "0x6001B7A")]
			[Address(RVA = "0xB1CF44", Offset = "0xB1CF44", VA = "0xB1CF44")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000330")]
		public int blurPasses
		{
			[Token(Token = "0x6001B7B")]
			[Address(RVA = "0xB1CF64", Offset = "0xB1CF64", VA = "0xB1CF64")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000331")]
		public bool overrideBlurPasses
		{
			[Token(Token = "0x6001B7C")]
			[Address(RVA = "0xB1CF6C", Offset = "0xB1CF6C", VA = "0xB1CF6C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000332")]
		public TunnellingImageBase.BlurKernel blurSamples
		{
			[Token(Token = "0x6001B7D")]
			[Address(RVA = "0xB1CF8C", Offset = "0xB1CF8C", VA = "0xB1CF8C")]
			get
			{
				return default(TunnellingImageBase.BlurKernel);
			}
		}

		[Token(Token = "0x17000333")]
		public bool overrideBlurSamples
		{
			[Token(Token = "0x6001B7E")]
			[Address(RVA = "0xB1CF94", Offset = "0xB1CF94", VA = "0xB1CF94")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000334")]
		public TunnellingImageBase.CounterVelocityMode counterVelocityMode
		{
			[Token(Token = "0x6001B7F")]
			[Address(RVA = "0xB1CFB4", Offset = "0xB1CFB4", VA = "0xB1CFB4")]
			get
			{
				return default(TunnellingImageBase.CounterVelocityMode);
			}
		}

		[Token(Token = "0x17000335")]
		public bool overrideCounterVelocityMode
		{
			[Token(Token = "0x6001B80")]
			[Address(RVA = "0xB1CFBC", Offset = "0xB1CFBC", VA = "0xB1CFBC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000336")]
		public float counterVelocityResetDistance
		{
			[Token(Token = "0x6001B81")]
			[Address(RVA = "0xB1CFDC", Offset = "0xB1CFDC", VA = "0xB1CFDC")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000337")]
		public bool overrideCounterVelocityResetDistance
		{
			[Token(Token = "0x6001B82")]
			[Address(RVA = "0xB1CFE4", Offset = "0xB1CFE4", VA = "0xB1CFE4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000338")]
		public float counterVelocityResetTime
		{
			[Token(Token = "0x6001B83")]
			[Address(RVA = "0xB1D004", Offset = "0xB1D004", VA = "0xB1D004")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000339")]
		public bool overrideCounterVelocityResetTime
		{
			[Token(Token = "0x6001B84")]
			[Address(RVA = "0xB1D00C", Offset = "0xB1D00C", VA = "0xB1D00C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700033A")]
		public float counterVelocityStrength
		{
			[Token(Token = "0x6001B85")]
			[Address(RVA = "0xB1D02C", Offset = "0xB1D02C", VA = "0xB1D02C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700033B")]
		public bool overrideCounterVelocityStrength
		{
			[Token(Token = "0x6001B86")]
			[Address(RVA = "0xB1D034", Offset = "0xB1D034", VA = "0xB1D034")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700033C")]
		public UnityEngine.Vector3 counterVelocityPerAxis
		{
			[Token(Token = "0x6001B87")]
			[Address(RVA = "0xB1D054", Offset = "0xB1D054", VA = "0xB1D054")]
			get
			{
				return default(UnityEngine.Vector3);
			}
		}

		[Token(Token = "0x1700033D")]
		public bool overrideCounterVelocityPerAxis
		{
			[Token(Token = "0x6001B88")]
			[Address(RVA = "0xB1D064", Offset = "0xB1D064", VA = "0xB1D064")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700033E")]
		public bool irisZRejection
		{
			[Token(Token = "0x6001B89")]
			[Address(RVA = "0xB1D084", Offset = "0xB1D084", VA = "0xB1D084")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700033F")]
		public bool overrideIrisZRejection
		{
			[Token(Token = "0x6001B8A")]
			[Address(RVA = "0xB1D08C", Offset = "0xB1D08C", VA = "0xB1D08C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001B8B")]
		[Address(RVA = "0xB1D0AC", Offset = "0xB1D0AC", VA = "0xB1D0AC")]
		public TunnellingPreset()
		{
		}
	}
	[Token(Token = "0x20003A3")]
	public abstract class TunnellingPresetBase : ScriptableObject
	{
		[Serializable]
		[Token(Token = "0x2000870")]
		public class MotionSettings
		{
			[Token(Token = "0x40029D0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[SerializeField]
			private bool _use;

			[Token(Token = "0x40029D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[SerializeField]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8C2010", Offset = "0x8C2010")]
			private float _strength;

			[Token(Token = "0x40029D2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[SerializeField]
			private float _min;

			[Token(Token = "0x40029D3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[SerializeField]
			private float _max;

			[Token(Token = "0x40029D4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[SerializeField]
			private float _smoothing;

			[Token(Token = "0x1700069A")]
			public bool use
			{
				[Token(Token = "0x6003011")]
				[Address(RVA = "0xB1D4FC", Offset = "0xB1D4FC", VA = "0xB1D4FC")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x1700069B")]
			public float strength
			{
				[Token(Token = "0x6003012")]
				[Address(RVA = "0xB1D504", Offset = "0xB1D504", VA = "0xB1D504")]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x1700069C")]
			public float min
			{
				[Token(Token = "0x6003013")]
				[Address(RVA = "0xB1D50C", Offset = "0xB1D50C", VA = "0xB1D50C")]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x1700069D")]
			public float max
			{
				[Token(Token = "0x6003014")]
				[Address(RVA = "0xB1D514", Offset = "0xB1D514", VA = "0xB1D514")]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x1700069E")]
			public float smoothing
			{
				[Token(Token = "0x6003015")]
				[Address(RVA = "0xB1D51C", Offset = "0xB1D51C", VA = "0xB1D51C")]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x6003016")]
			[Address(RVA = "0xB1D524", Offset = "0xB1D524", VA = "0xB1D524")]
			public MotionSettings()
			{
			}
		}

		[Token(Token = "0x400176D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool _overrideAll;

		[Token(Token = "0x400176E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8BF8E0", Offset = "0x8BF8E0")]
		private float _effectCoverage;

		[Token(Token = "0x400176F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private bool _overrideEffectCoverage;

		[Token(Token = "0x4001770")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private Color _effectColor;

		[Token(Token = "0x4001771")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private bool _overrideEffectColor;

		[Token(Token = "0x4001772")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8BF950", Offset = "0x8BF950")]
		private float _effectFeather;

		[Token(Token = "0x4001773")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private bool _overrideEffectFeather;

		[Token(Token = "0x4001774")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
		[SerializeField]
		private bool _applyColorToBackground;

		[Token(Token = "0x4001775")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3E")]
		[SerializeField]
		private bool _overrideApplyColorToBackground;

		[Token(Token = "0x4001776")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Cubemap _skybox;

		[Token(Token = "0x4001777")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private bool _overrideSkybox;

		[Token(Token = "0x4001778")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private MotionSettings _angularVelocity;

		[Token(Token = "0x4001779")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private bool _overrideAngularVelocity;

		[Token(Token = "0x400177A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private MotionSettings _acceleration;

		[Token(Token = "0x400177B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private bool _overrideAcceleration;

		[Token(Token = "0x400177C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private MotionSettings _velocity;

		[Token(Token = "0x400177D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private bool _overrideVelocity;

		[Token(Token = "0x400177E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
		[SerializeField]
		private bool _useCounterMotion;

		[Token(Token = "0x400177F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7A")]
		[SerializeField]
		private bool _overrideUseCounterMotion;

		[Token(Token = "0x4001780")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8BFA60", Offset = "0x8BFA60")]
		private float _counterRotationStrength;

		[Token(Token = "0x4001781")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private bool _overrideCounterRotationStrength;

		[Token(Token = "0x4001782")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[SerializeField]
		private UnityEngine.Vector3 _counterRotationPerAxis;

		[Token(Token = "0x4001783")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private bool _overrideCounterRotationPerAxis;

		[Token(Token = "0x4001784")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x91")]
		[SerializeField]
		private bool _useArtificialTilt;

		[Token(Token = "0x4001785")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x92")]
		[SerializeField]
		private bool _overrideUseArtificialTilt;

		[Token(Token = "0x4001786")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8BFAF0", Offset = "0x8BFAF0")]
		private int _framerateDivision;

		[Token(Token = "0x4001787")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private bool _overrideFramerateDivision;

		[Token(Token = "0x4001788")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x99")]
		[SerializeField]
		private bool _divideTranslation;

		[Token(Token = "0x4001789")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9A")]
		[SerializeField]
		private bool _overrideDivideTranslation;

		[Token(Token = "0x400178A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9B")]
		[SerializeField]
		private bool _divideRotation;

		[Token(Token = "0x400178B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		[SerializeField]
		private bool _overrideDivideRotation;

		[Token(Token = "0x17000340")]
		protected bool overrideAll
		{
			[Token(Token = "0x6001B8C")]
			[Address(RVA = "0xB1D294", Offset = "0xB1D294", VA = "0xB1D294")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000341")]
		public float effectCoverage
		{
			[Token(Token = "0x6001B8D")]
			[Address(RVA = "0xB1D29C", Offset = "0xB1D29C", VA = "0xB1D29C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000342")]
		public bool overrideEffectCoverage
		{
			[Token(Token = "0x6001B8E")]
			[Address(RVA = "0xB1D2A4", Offset = "0xB1D2A4", VA = "0xB1D2A4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000343")]
		public Color effectColor
		{
			[Token(Token = "0x6001B8F")]
			[Address(RVA = "0xB1D2C4", Offset = "0xB1D2C4", VA = "0xB1D2C4")]
			get
			{
				return default(Color);
			}
		}

		[Token(Token = "0x17000344")]
		public bool overrideEffectColor
		{
			[Token(Token = "0x6001B90")]
			[Address(RVA = "0xB1D2D0", Offset = "0xB1D2D0", VA = "0xB1D2D0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000345")]
		public float effectFeather
		{
			[Token(Token = "0x6001B91")]
			[Address(RVA = "0xB1D2F0", Offset = "0xB1D2F0", VA = "0xB1D2F0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000346")]
		public bool overrideEffectFeather
		{
			[Token(Token = "0x6001B92")]
			[Address(RVA = "0xB1D2F8", Offset = "0xB1D2F8", VA = "0xB1D2F8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000347")]
		public bool applyColorToBackground
		{
			[Token(Token = "0x6001B93")]
			[Address(RVA = "0xB1D318", Offset = "0xB1D318", VA = "0xB1D318")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000348")]
		public bool overrideApplyColorToBackground
		{
			[Token(Token = "0x6001B94")]
			[Address(RVA = "0xB1D320", Offset = "0xB1D320", VA = "0xB1D320")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000349")]
		public Cubemap skybox
		{
			[Token(Token = "0x6001B95")]
			[Address(RVA = "0xB1D340", Offset = "0xB1D340", VA = "0xB1D340")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700034A")]
		public bool overrideSkybox
		{
			[Token(Token = "0x6001B96")]
			[Address(RVA = "0xB1D348", Offset = "0xB1D348", VA = "0xB1D348")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700034B")]
		public MotionSettings angularVelocity
		{
			[Token(Token = "0x6001B97")]
			[Address(RVA = "0xB1D368", Offset = "0xB1D368", VA = "0xB1D368")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700034C")]
		public bool overrideAngularVelocity
		{
			[Token(Token = "0x6001B98")]
			[Address(RVA = "0xB1D370", Offset = "0xB1D370", VA = "0xB1D370")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700034D")]
		public MotionSettings acceleration
		{
			[Token(Token = "0x6001B99")]
			[Address(RVA = "0xB1D390", Offset = "0xB1D390", VA = "0xB1D390")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700034E")]
		public bool overrideAcceleration
		{
			[Token(Token = "0x6001B9A")]
			[Address(RVA = "0xB1D398", Offset = "0xB1D398", VA = "0xB1D398")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700034F")]
		public MotionSettings velocity
		{
			[Token(Token = "0x6001B9B")]
			[Address(RVA = "0xB1D3B8", Offset = "0xB1D3B8", VA = "0xB1D3B8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000350")]
		public bool overrideVelocity
		{
			[Token(Token = "0x6001B9C")]
			[Address(RVA = "0xB1D3C0", Offset = "0xB1D3C0", VA = "0xB1D3C0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000351")]
		public bool useCounterMotion
		{
			[Token(Token = "0x6001B9D")]
			[Address(RVA = "0xB1D3E0", Offset = "0xB1D3E0", VA = "0xB1D3E0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000352")]
		public bool overrideUseCounterMotion
		{
			[Token(Token = "0x6001B9E")]
			[Address(RVA = "0xB1D3E8", Offset = "0xB1D3E8", VA = "0xB1D3E8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000353")]
		public float counterRotationStrength
		{
			[Token(Token = "0x6001B9F")]
			[Address(RVA = "0xB1D408", Offset = "0xB1D408", VA = "0xB1D408")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000354")]
		public bool overrideCounterRotationStrength
		{
			[Token(Token = "0x6001BA0")]
			[Address(RVA = "0xB1D410", Offset = "0xB1D410", VA = "0xB1D410")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000355")]
		public UnityEngine.Vector3 counterRotationPerAxis
		{
			[Token(Token = "0x6001BA1")]
			[Address(RVA = "0xB1D430", Offset = "0xB1D430", VA = "0xB1D430")]
			get
			{
				return default(UnityEngine.Vector3);
			}
		}

		[Token(Token = "0x17000356")]
		public bool overrideCounterRotationPerAxis
		{
			[Token(Token = "0x6001BA2")]
			[Address(RVA = "0xB1D43C", Offset = "0xB1D43C", VA = "0xB1D43C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000357")]
		public bool useArtificialTilt
		{
			[Token(Token = "0x6001BA3")]
			[Address(RVA = "0xB1D45C", Offset = "0xB1D45C", VA = "0xB1D45C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000358")]
		public bool overrideUseArtificialTilt
		{
			[Token(Token = "0x6001BA4")]
			[Address(RVA = "0xB1D464", Offset = "0xB1D464", VA = "0xB1D464")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000359")]
		public int framerateDivision
		{
			[Token(Token = "0x6001BA5")]
			[Address(RVA = "0xB1D484", Offset = "0xB1D484", VA = "0xB1D484")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700035A")]
		public bool overrideFramerateDivision
		{
			[Token(Token = "0x6001BA6")]
			[Address(RVA = "0xB1D48C", Offset = "0xB1D48C", VA = "0xB1D48C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700035B")]
		public bool divideTranslation
		{
			[Token(Token = "0x6001BA7")]
			[Address(RVA = "0xB1D4AC", Offset = "0xB1D4AC", VA = "0xB1D4AC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700035C")]
		public bool overrideDivideTranslation
		{
			[Token(Token = "0x6001BA8")]
			[Address(RVA = "0xB1D4B4", Offset = "0xB1D4B4", VA = "0xB1D4B4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700035D")]
		public bool divideRotation
		{
			[Token(Token = "0x6001BA9")]
			[Address(RVA = "0xB1D4D4", Offset = "0xB1D4D4", VA = "0xB1D4D4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700035E")]
		public bool overrideDividerotation
		{
			[Token(Token = "0x6001BAA")]
			[Address(RVA = "0xB1D4DC", Offset = "0xB1D4DC", VA = "0xB1D4DC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001BAB")]
		[Address(RVA = "0xB1D1A8", Offset = "0xB1D1A8", VA = "0xB1D1A8")]
		protected TunnellingPresetBase()
		{
		}
	}
	[Token(Token = "0x20003A4")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8B7128", Offset = "0x8B7128")]
	public class TunnellingPresetMobile : TunnellingPresetBase
	{
		[Token(Token = "0x400178C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9D")]
		[SerializeField]
		private bool _drawSkybox;

		[Token(Token = "0x400178D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9E")]
		[SerializeField]
		private bool _overrideDrawSkybox;

		[Token(Token = "0x400178E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9F")]
		[SerializeField]
		private bool _drawBeforeTransparent;

		[Token(Token = "0x400178F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private bool _overrideDrawBeforeTransparent;

		[Token(Token = "0x4001790")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA1")]
		[SerializeField]
		private bool _useMask;

		[Token(Token = "0x4001791")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA2")]
		[SerializeField]
		private bool _overrideUseMask;

		[Token(Token = "0x4001792")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8BFBE4", Offset = "0x8BFBE4")]
		private int _stencilReference;

		[Token(Token = "0x4001793")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private bool _overrideStencilReference;

		[Token(Token = "0x4001794")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8BFC38", Offset = "0x8BFC38")]
		private int _stencilMask;

		[Token(Token = "0x4001795")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private bool _overrideStencilMask;

		[Token(Token = "0x4001796")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8BFC8C", Offset = "0x8BFC8C")]
		private int _stencilBias;

		[Token(Token = "0x4001797")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private bool _overrideStencilBias;

		[Token(Token = "0x1700035F")]
		public bool drawSkybox
		{
			[Token(Token = "0x6001BAC")]
			[Address(RVA = "0xB1D534", Offset = "0xB1D534", VA = "0xB1D534")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000360")]
		public bool overrideDrawSkybox
		{
			[Token(Token = "0x6001BAD")]
			[Address(RVA = "0xB1D53C", Offset = "0xB1D53C", VA = "0xB1D53C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000361")]
		public bool drawBeforeTransparent
		{
			[Token(Token = "0x6001BAE")]
			[Address(RVA = "0xB1D55C", Offset = "0xB1D55C", VA = "0xB1D55C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000362")]
		public bool overrideDrawBeforeTransparent
		{
			[Token(Token = "0x6001BAF")]
			[Address(RVA = "0xB1D564", Offset = "0xB1D564", VA = "0xB1D564")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000363")]
		public bool useMask
		{
			[Token(Token = "0x6001BB0")]
			[Address(RVA = "0xB1D56C", Offset = "0xB1D56C", VA = "0xB1D56C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000364")]
		public bool overrideUseMask
		{
			[Token(Token = "0x6001BB1")]
			[Address(RVA = "0xB1D574", Offset = "0xB1D574", VA = "0xB1D574")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000365")]
		public int stencilReference
		{
			[Token(Token = "0x6001BB2")]
			[Address(RVA = "0xB1D57C", Offset = "0xB1D57C", VA = "0xB1D57C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000366")]
		public bool overrideStencilReference
		{
			[Token(Token = "0x6001BB3")]
			[Address(RVA = "0xB1D584", Offset = "0xB1D584", VA = "0xB1D584")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000367")]
		public int stencilMask
		{
			[Token(Token = "0x6001BB4")]
			[Address(RVA = "0xB1D58C", Offset = "0xB1D58C", VA = "0xB1D58C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000368")]
		public bool overrideStencilMask
		{
			[Token(Token = "0x6001BB5")]
			[Address(RVA = "0xB1D594", Offset = "0xB1D594", VA = "0xB1D594")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000369")]
		public int stencilBias
		{
			[Token(Token = "0x6001BB6")]
			[Address(RVA = "0xB1D59C", Offset = "0xB1D59C", VA = "0xB1D59C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700036A")]
		public bool overrideStencilBias
		{
			[Token(Token = "0x6001BB7")]
			[Address(RVA = "0xB1D5A4", Offset = "0xB1D5A4", VA = "0xB1D5A4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001BB8")]
		[Address(RVA = "0xB1D5AC", Offset = "0xB1D5AC", VA = "0xB1D5AC")]
		public TunnellingPresetMobile()
		{
		}
	}
}
namespace Sigtrap.VrTunnellingPro.Examples
{
	[Token(Token = "0x20003A5")]
	public class VRTP_ExampleMovement : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000871")]
		private struct Preset
		{
			[Token(Token = "0x40029D5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public KeyCode key;

			[Token(Token = "0x40029D6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public GameObject[] worldObjects;

			[Token(Token = "0x40029D7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public TunnellingPreset postPreset;
		}

		[Token(Token = "0x4001798")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool _disableModes;

		[Token(Token = "0x4001799")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float _rotSensitivity;

		[Token(Token = "0x400179A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float _movSensitivity;

		[Token(Token = "0x400179B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Cubemap[] _skyboxes;

		[Token(Token = "0x400179C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject[] _cages;

		[Token(Token = "0x400179D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Preset[] _modePresets;

		[Token(Token = "0x400179E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int _currentMode;

		[Token(Token = "0x400179F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private bool _hasWarnedInput;

		[Token(Token = "0x40017A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Tunnelling _tunnelling;

		[Token(Token = "0x40017A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private CharacterController _char;

		[Token(Token = "0x40017A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int _currentSkybox;

		[Token(Token = "0x40017A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private int _currentCage;

		[Token(Token = "0x40017A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private UnityEngine.Vector3 _speedCurrent;

		[Token(Token = "0x40017A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private UnityEngine.Vector3 _speedSlew;

		[Token(Token = "0x40017A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private float _speedSmoothing;

		[Token(Token = "0x40017A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private float _rotCurrent;

		[Token(Token = "0x40017A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private float _rotSlew;

		[Token(Token = "0x40017A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[SerializeField]
		private float _rotSmoothing;

		[Token(Token = "0x6001BB9")]
		[Address(RVA = "0xD3F44C", Offset = "0xD3F44C", VA = "0xD3F44C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001BBA")]
		[Address(RVA = "0xD3F4BC", Offset = "0xD3F4BC", VA = "0xD3F4BC")]
		private void Update()
		{
		}

		[Token(Token = "0x6001BBB")]
		[Address(RVA = "0xD3F9CC", Offset = "0xD3F9CC", VA = "0xD3F9CC")]
		private void SetPreset(int i)
		{
		}

		[Token(Token = "0x6001BBC")]
		[Address(RVA = "0xD3FD14", Offset = "0xD3FD14", VA = "0xD3FD14")]
		public VRTP_ExampleMovement()
		{
		}
	}
}
namespace StylizedWaterShader
{
	[Token(Token = "0x20003A6")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x8B716C", Offset = "0x8B716C")]
	[ExecuteInEditMode]
	public class EnableDepthBuffer : MonoBehaviour
	{
		[Token(Token = "0x40017AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Camera cam;

		[Token(Token = "0x6001BBD")]
		[Address(RVA = "0xB23A38", Offset = "0xB23A38", VA = "0xB23A38")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6001BBE")]
		[Address(RVA = "0xB23AC4", Offset = "0xB23AC4", VA = "0xB23AC4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001BBF")]
		[Address(RVA = "0xB23BC0", Offset = "0xB23BC0", VA = "0xB23BC0")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001BC0")]
		[Address(RVA = "0xB23C54", Offset = "0xB23C54", VA = "0xB23C54")]
		public EnableDepthBuffer()
		{
		}
	}
	[Token(Token = "0x20003A7")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x8B71E0", Offset = "0x8B71E0")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x8B71E0", Offset = "0x8B71E0")]
	public class StylizedWater : MonoBehaviour
	{
		[Token(Token = "0x40017AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string[] shaderNames;

		[Token(Token = "0x40017AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int shaderIndex;

		[Token(Token = "0x40017AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Shader shader;

		[Token(Token = "0x40017AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Shader DesktopShader;

		[Token(Token = "0x40017AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Shader MobileAdvancedShader;

		[Token(Token = "0x40017B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8BFD5C", Offset = "0x8BFD5C")]
		public int renderQueue;

		[Token(Token = "0x40017B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public bool enableVertexColors;

		[Token(Token = "0x40017B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
		public bool enableDepthTex;

		[Token(Token = "0x40017B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x46")]
		public bool isUnlit;

		[Token(Token = "0x40017B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x47")]
		public bool enableGradient;

		[Token(Token = "0x40017B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Gradient colorGradient;

		[Token(Token = "0x40017B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "ColorUsageAttribute", RVA = "0x8BFD7C", Offset = "0x8BFD7C")]
		public Color waterShallowColor;

		[Token(Token = "0x40017B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8BFD94", Offset = "0x8BFD94")]
		public float depth;

		[Token(Token = "0x40017B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[AttributeAttribute(Name = "ColorUsageAttribute", RVA = "0x8BFDB0", Offset = "0x8BFDB0")]
		public Color waterColor;

		[Token(Token = "0x40017B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[AttributeAttribute(Name = "ColorUsageAttribute", RVA = "0x8BFDC8", Offset = "0x8BFDC8")]
		public Color fresnelColor;

		[Token(Token = "0x40017BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public float fresnel;

		[Token(Token = "0x40017BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "ColorUsageAttribute", RVA = "0x8BFDE0", Offset = "0x8BFDE0")]
		public Color rimColor;

		[Token(Token = "0x40017BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8BFDF8", Offset = "0x8BFDF8")]
		public float waveTint;

		[Token(Token = "0x40017BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8BFE10", Offset = "0x8BFE10")]
		public float transparency;

		[Token(Token = "0x40017BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8BFE28", Offset = "0x8BFE28")]
		public float glossiness;

		[Token(Token = "0x40017BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8BFE44", Offset = "0x8BFE44")]
		public float metallicness;

		[Token(Token = "0x40017C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8BFE5C", Offset = "0x8BFE5C")]
		public float edgeFade;

		[Token(Token = "0x40017C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public string[] tilingMethodNames;

		[Token(Token = "0x40017C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public float worldSpaceTiling;

		[Token(Token = "0x40017C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8BFE74", Offset = "0x8BFE74")]
		public float refractionAmount;

		[Token(Token = "0x40017C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public bool enableNormalMap;

		[Token(Token = "0x40017C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8BFE90", Offset = "0x8BFE90")]
		public float normalStrength;

		[Token(Token = "0x40017C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public bool enableMacroNormals;

		[Token(Token = "0x40017C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8BFEA8", Offset = "0x8BFEA8")]
		public float macroNormalsDistance;

		[Token(Token = "0x40017C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8BFEC8", Offset = "0x8BFEC8")]
		public float normalTiling;

		[Token(Token = "0x40017C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		public int intersectionSolver;

		[Token(Token = "0x40017CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public string[] intersectionSolverNames;

		[Token(Token = "0x40017CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8BFEE4", Offset = "0x8BFEE4")]
		public float rimSize;

		[Token(Token = "0x40017CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8BFEFC", Offset = "0x8BFEFC")]
		public float rimFalloff;

		[Token(Token = "0x40017CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public float rimTiling;

		[Token(Token = "0x40017CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8BFF18", Offset = "0x8BFF18")]
		public float rimDistortion;

		[Token(Token = "0x40017CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public bool enableVCIntersection;

		[Token(Token = "0x40017D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		public int foamSolver;

		[Token(Token = "0x40017D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public string[] foamSolverNames;

		[Token(Token = "0x40017D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8BFF30", Offset = "0x8BFF30")]
		public float foamOpacity;

		[Token(Token = "0x40017D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		public float foamTiling;

		[Token(Token = "0x40017D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8BFF48", Offset = "0x8BFF48")]
		public float foamSize;

		[Token(Token = "0x40017D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8BFF60", Offset = "0x8BFF60")]
		public float foamDistortion;

		[Token(Token = "0x40017D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8BFF78", Offset = "0x8BFF78")]
		public float foamSpeed;

		[Token(Token = "0x40017D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8BFF90", Offset = "0x8BFF90")]
		public float waveFoam;

		[Token(Token = "0x40017D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8BFFA8", Offset = "0x8BFFA8")]
		public float reflectionStrength;

		[Token(Token = "0x40017D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8BFFC0", Offset = "0x8BFFC0")]
		public float reflectionFresnel;

		[Token(Token = "0x40017DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		public bool showReflection;

		[Token(Token = "0x40017DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8BFFDC", Offset = "0x8BFFDC")]
		public float reflectionRefraction;

		[Token(Token = "0x40017DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8BFFF8", Offset = "0x8BFFF8")]
		public float waveSpeed;

		[Token(Token = "0x40017DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8C0014", Offset = "0x8C0014")]
		public float waveStrength;

		[Token(Token = "0x40017DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8C002C", Offset = "0x8C002C")]
		public Vector4 waveDirectionXZ;

		[Token(Token = "0x40017DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		public bool enableSecondaryWaves;

		[Token(Token = "0x40017E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		public Texture2D customIntersection;

		[Token(Token = "0x40017E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		public Texture2D customNormal;

		[Token(Token = "0x40017E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		public Texture2D customHeightmap;

		[Token(Token = "0x40017E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		public string[] intersectionStyleNames;

		[Token(Token = "0x40017E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		public int intersectionStyle;

		[Token(Token = "0x40017E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		public string[] waveStyleNames;

		[Token(Token = "0x40017E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		public int waveStyle;

		[Token(Token = "0x40017E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		public string[] waveHeightmapNames;

		[Token(Token = "0x40017E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		public int waveHeightmapStyle;

		[Token(Token = "0x40017E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
		public float waveSize;

		[Token(Token = "0x40017EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		public bool useCustomIntersection;

		[Token(Token = "0x40017EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x191")]
		public bool useCustomNormals;

		[Token(Token = "0x40017EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x192")]
		public bool useCustomHeightmap;

		[Token(Token = "0x40017ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		public Texture2D normals;

		[Token(Token = "0x40017EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		public Texture2D shadermap;

		[Token(Token = "0x40017EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		public Texture2D colorGradientTex;

		[Token(Token = "0x40017F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		public bool useCompression;

		[Token(Token = "0x40017F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static bool EnableReflections;

		[Token(Token = "0x40017F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		private Camera reflectionCamera;

		[Token(Token = "0x40017F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		private Camera refractCamera;

		[Token(Token = "0x40017F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		public bool useReflection;

		[Token(Token = "0x40017F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C9")]
		public bool useRefractionCam;

		[Token(Token = "0x40017F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1CA")]
		public bool enableReflectionBlur;

		[Token(Token = "0x40017F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1CC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8C0044", Offset = "0x8C0044")]
		public float reflectionBlurLength;

		[Token(Token = "0x40017F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8C005C", Offset = "0x8C005C")]
		public int reflectionBlurPasses;

		[Token(Token = "0x40017F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		private StylizedWaterBlur reflectionBlurRenderer;

		[Token(Token = "0x40017FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		public string[] refractionSolverNames;

		[Token(Token = "0x40017FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		public int refractionSolver;

		[Token(Token = "0x40017FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		public string[] resolutionNames;

		[Token(Token = "0x40017FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		public int reflectionRes;

		[Token(Token = "0x40017FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1FC")]
		public int refractRes;

		[Token(Token = "0x40017FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		public int reflectionTextureSize;

		[Token(Token = "0x4001800")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x204")]
		public int refractTextureSize;

		[Token(Token = "0x4001801")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8C0074", Offset = "0x8C0074")]
		public float clipPlaneOffset;

		[Token(Token = "0x4001802")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20C")]
		public LayerMask reflectLayers;

		[Token(Token = "0x4001803")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		public LayerMask refractLayers;

		[Token(Token = "0x4001804")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
		private Dictionary<Camera, Camera> m_ReflectionCameras;

		[Token(Token = "0x4001805")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
		private Dictionary<Camera, StylizedWaterBlur> m_BlurRenderers;

		[Token(Token = "0x4001806")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
		private Dictionary<Camera, Camera> m_RefractCameras;

		[Token(Token = "0x4001807")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
		private RenderTexture m_ReflectionTexture;

		[Token(Token = "0x4001808")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
		private RenderTexture m_RefractTexture;

		[Token(Token = "0x4001809")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
		private int m_OldReflectionTextureSize;

		[Token(Token = "0x400180A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x244")]
		private int m_OldRefractTextureSize;

		[Token(Token = "0x400180B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
		private bool s_InsideRendering;

		[Token(Token = "0x400180C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24C")]
		public int lightingMethod;

		[Token(Token = "0x400180D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
		public string[] lightingMethodNames;

		[Token(Token = "0x400180E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
		public bool enableShadows;

		[Token(Token = "0x400180F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
		private StylizedWaterShadowCaster shadowRenderer;

		[Token(Token = "0x4001810")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
		public Light shadowCaster;

		[NonSerialized]
		[Token(Token = "0x4001811")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
		private MeshRenderer meshRenderer;

		[Token(Token = "0x4001812")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
		public Material material;

		[Token(Token = "0x4001813")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
		public bool isMobileAdvanced;

		[Token(Token = "0x4001814")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x281")]
		public bool isMobilePlatform;

		[Token(Token = "0x4001815")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
		public string shaderName;

		[Token(Token = "0x4001816")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
		public bool isWaterLayer;

		[Token(Token = "0x4001817")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x291")]
		public bool hasShaderParams;

		[Token(Token = "0x4001818")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x292")]
		public bool hasMaterial;

		[Token(Token = "0x4001819")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x293")]
		public bool usingSinglePassRendering;

		[Token(Token = "0x400181A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x294")]
		public bool hideMeshRenderer;

		[Token(Token = "0x6001BC1")]
		[Address(RVA = "0xB240FC", Offset = "0xB240FC", VA = "0xB240FC")]
		public void OnEnable()
		{
		}

		[Token(Token = "0x6001BC2")]
		[Address(RVA = "0xB24224", Offset = "0xB24224", VA = "0xB24224")]
		public void Init()
		{
		}

		[Token(Token = "0x6001BC3")]
		[Address(RVA = "0xB2418C", Offset = "0xB2418C", VA = "0xB2418C")]
		public void GetProperties()
		{
		}

		[Token(Token = "0x6001BC4")]
		[Address(RVA = "0xB24228", Offset = "0xB24228", VA = "0xB24228")]
		private void GetShaderProperties()
		{
		}

		[Token(Token = "0x6001BC5")]
		[Address(RVA = "0xB24A00", Offset = "0xB24A00", VA = "0xB24A00")]
		private void GetShaderType()
		{
		}

		[Token(Token = "0x6001BC6")]
		[Address(RVA = "0xB24A04", Offset = "0xB24A04", VA = "0xB24A04")]
		private void SetShaderType()
		{
		}

		[Token(Token = "0x6001BC7")]
		[Address(RVA = "0xB24190", Offset = "0xB24190", VA = "0xB24190")]
		public void SetProperties()
		{
		}

		[Token(Token = "0x6001BC8")]
		[Address(RVA = "0xB24CB8", Offset = "0xB24CB8", VA = "0xB24CB8")]
		private void SetShaderProperties()
		{
		}

		[Token(Token = "0x6001BC9")]
		[Address(RVA = "0xB25748", Offset = "0xB25748", VA = "0xB25748")]
		public void DisableReflectionCam()
		{
		}

		[Token(Token = "0x6001BCA")]
		[Address(RVA = "0xB255A0", Offset = "0xB255A0", VA = "0xB255A0")]
		public void DisableRefractionCam()
		{
		}

		[Token(Token = "0x6001BCB")]
		[Address(RVA = "0xB24A08", Offset = "0xB24A08", VA = "0xB24A08")]
		private void EnableShadowRendering()
		{
		}

		[Token(Token = "0x6001BCC")]
		[Address(RVA = "0xB24AC8", Offset = "0xB24AC8", VA = "0xB24AC8")]
		private void DisableShadowRendering()
		{
		}

		[Token(Token = "0x6001BCD")]
		[Address(RVA = "0xB25944", Offset = "0xB25944", VA = "0xB25944")]
		public void SetVegetationStudioWaterLevel()
		{
		}

		[Token(Token = "0x6001BCE")]
		[Address(RVA = "0xB25948", Offset = "0xB25948", VA = "0xB25948")]
		public void OnWillRenderObject()
		{
		}

		[Token(Token = "0x6001BCF")]
		[Address(RVA = "0xB27268", Offset = "0xB27268", VA = "0xB27268")]
		public void CreateReflectionTexture()
		{
		}

		[Token(Token = "0x6001BD0")]
		[Address(RVA = "0xB2738C", Offset = "0xB2738C", VA = "0xB2738C")]
		public void CreateRefractionTexture()
		{
		}

		[Token(Token = "0x6001BD1")]
		[Address(RVA = "0xB260DC", Offset = "0xB260DC", VA = "0xB260DC")]
		private void CreateWaterObjects(Camera currentCamera, out Camera reflectionCamera, out Camera refractCamera)
		{
		}

		[Token(Token = "0x6001BD2")]
		[Address(RVA = "0xB27524", Offset = "0xB27524", VA = "0xB27524")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001BD3")]
		[Address(RVA = "0xB275E4", Offset = "0xB275E4", VA = "0xB275E4")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001BD4")]
		[Address(RVA = "0xB275E8", Offset = "0xB275E8", VA = "0xB275E8")]
		public StylizedWater()
		{
		}
	}
	[Token(Token = "0x20003A8")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x8B7278", Offset = "0x8B7278")]
	[ExecuteInEditMode]
	public class StylizedWaterBlur : MonoBehaviour
	{
		[Token(Token = "0x400181B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Camera cam;

		[Token(Token = "0x400181C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float length;

		[Token(Token = "0x400181D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int passes;

		[Token(Token = "0x400181E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Shader m_BlurRenderShader;

		[Token(Token = "0x400181F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Material m_BlurRenderMat;

		[Token(Token = "0x4001820")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private CommandBuffer cmd;

		[Token(Token = "0x1700036B")]
		private static Shader BlurRenderShader
		{
			[Token(Token = "0x6001BD5")]
			[Address(RVA = "0xB27720", Offset = "0xB27720", VA = "0xB27720")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700036C")]
		private static Material BlurRenderMat
		{
			[Token(Token = "0x6001BD6")]
			[Address(RVA = "0xB277D0", Offset = "0xB277D0", VA = "0xB277D0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001BD7")]
		[Address(RVA = "0xB278BC", Offset = "0xB278BC", VA = "0xB278BC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001BD8")]
		[Address(RVA = "0xB2794C", Offset = "0xB2794C", VA = "0xB2794C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001BD9")]
		[Address(RVA = "0xB26EE8", Offset = "0xB26EE8", VA = "0xB26EE8")]
		public void Render()
		{
		}

		[Token(Token = "0x6001BDA")]
		[Address(RVA = "0xB279F8", Offset = "0xB279F8", VA = "0xB279F8")]
		public StylizedWaterBlur()
		{
		}
	}
	[Token(Token = "0x20003A9")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x8B72EC", Offset = "0x8B72EC")]
	[ExecuteInEditMode]
	public class StylizedWaterShadowCaster : MonoBehaviour
	{
		[Token(Token = "0x4001821")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private CommandBuffer cmd;

		[Token(Token = "0x4001822")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Light dirLight;

		[Token(Token = "0x6001BDB")]
		[Address(RVA = "0xB27A0C", Offset = "0xB27A0C", VA = "0xB27A0C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001BDC")]
		[Address(RVA = "0xB27BB0", Offset = "0xB27BB0", VA = "0xB27BB0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001BDD")]
		[Address(RVA = "0xB27C40", Offset = "0xB27C40", VA = "0xB27C40")]
		public StylizedWaterShadowCaster()
		{
		}
	}
	[Token(Token = "0x20003AA")]
	public static class StylizedWaterUtilities
	{
		[Token(Token = "0x2000872")]
		public static class CameraUtils
		{
			[Token(Token = "0x6003017")]
			[Address(RVA = "0xB26D08", Offset = "0xB26D08", VA = "0xB26D08")]
			public static Vector4 CameraSpacePlane(Camera cam, UnityEngine.Vector3 pos, UnityEngine.Vector3 normal, float sideSign, float clipPlaneOffset)
			{
				return default(Vector4);
			}

			[Token(Token = "0x6003018")]
			[Address(RVA = "0xB26A64", Offset = "0xB26A64", VA = "0xB26A64")]
			public static void CalculateReflectionMatrix(ref Matrix4x4 reflectionMat, Vector4 plane)
			{
			}

			[Token(Token = "0x6003019")]
			[Address(RVA = "0xB268CC", Offset = "0xB268CC", VA = "0xB268CC")]
			public static void CopyCameraSettings(Camera src, Camera dest)
			{
			}
		}

		[Token(Token = "0x4001823")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static bool DEBUG;

		[Token(Token = "0x6001BDE")]
		[Address(RVA = "0xB27C48", Offset = "0xB27C48", VA = "0xB27C48")]
		public static string[] ComposeDropdown(Texture2D[] resource, string replaceFilter)
		{
			return null;
		}

		[Token(Token = "0x6001BDF")]
		[Address(RVA = "0xB27E50", Offset = "0xB27E50", VA = "0xB27E50")]
		public static bool IsApproximatelyEqual(float a, float b)
		{
			return default(bool);
		}

		[Token(Token = "0x6001BE0")]
		[Address(RVA = "0xB27ED0", Offset = "0xB27ED0", VA = "0xB27ED0")]
		public static bool HasVertexColors(Mesh mesh)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20003AB")]
	public class OrbitCamera : MonoBehaviour
	{
		[Token(Token = "0x4001824")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C008C", Offset = "0x8C008C")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x8C008C", Offset = "0x8C008C")]
		public Transform pivot;

		[Token(Token = "0x4001825")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x8C00D8", Offset = "0x8C00D8")]
		public bool enableMouse;

		[Token(Token = "0x4001826")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float idleRotationSpeed;

		[Token(Token = "0x4001827")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Transform cam;

		[Token(Token = "0x4001828")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float cameraRotSide;

		[Token(Token = "0x4001829")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float cameraRotUp;

		[Token(Token = "0x400182A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float cameraRotSideCur;

		[Token(Token = "0x400182B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float cameraRotUpCur;

		[Token(Token = "0x400182C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float distance;

		[Token(Token = "0x6001BE2")]
		[Address(RVA = "0xB23C5C", Offset = "0xB23C5C", VA = "0xB23C5C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001BE3")]
		[Address(RVA = "0xB23D1C", Offset = "0xB23D1C", VA = "0xB23D1C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001BE4")]
		[Address(RVA = "0xB240E0", Offset = "0xB240E0", VA = "0xB240E0")]
		public OrbitCamera()
		{
		}
	}
}
namespace DADemo_Sample_Utils
{
	[Token(Token = "0x20003AC")]
	public class AADisableChecker : MonoBehaviour
	{
		[Token(Token = "0x6001BE5")]
		[Address(RVA = "0xB0B874", Offset = "0xB0B874", VA = "0xB0B874")]
		private void Start()
		{
		}

		[Token(Token = "0x6001BE6")]
		[Address(RVA = "0xB0B8BC", Offset = "0xB0B8BC", VA = "0xB0B8BC")]
		private void Update()
		{
		}

		[Token(Token = "0x6001BE7")]
		[Address(RVA = "0xB0B8C0", Offset = "0xB0B8C0", VA = "0xB0B8C0")]
		public AADisableChecker()
		{
		}
	}
}
namespace DAShooter
{
	[Token(Token = "0x20003AD")]
	public class SpecialRoomFinder : DungeonEventListener
	{
		[Token(Token = "0x400182D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject levelEndGoalTemplate;

		[Token(Token = "0x400182E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject levelStartTemplate;

		[Token(Token = "0x6001BE8")]
		[Address(RVA = "0xB0B8C8", Offset = "0xB0B8C8", VA = "0xB0B8C8", Slot = "7")]
		public override void OnPostDungeonBuild(Dungeon dungeon, DungeonModel model)
		{
		}

		[Token(Token = "0x6001BE9")]
		[Address(RVA = "0xB0BF5C", Offset = "0xB0BF5C", VA = "0xB0BF5C", Slot = "9")]
		public override void OnDungeonDestroyed(Dungeon dungeon)
		{
		}

		[Token(Token = "0x6001BEA")]
		[Address(RVA = "0xB0BB74", Offset = "0xB0BB74", VA = "0xB0BB74")]
		private void SetStartingCell(GridDungeonModel model, DungeonArchitect.Builders.Grid.Cell cell)
		{
		}

		[Token(Token = "0x6001BEB")]
		[Address(RVA = "0xB0BD3C", Offset = "0xB0BD3C", VA = "0xB0BD3C")]
		private void SetStartingCell(SimpleCityDungeonModel model, SimpleCityCell cell)
		{
		}

		[Token(Token = "0x6001BEC")]
		[Address(RVA = "0xB0BE4C", Offset = "0xB0BE4C", VA = "0xB0BE4C")]
		private void SetEndingCell(SimpleCityDungeonModel model, SimpleCityCell cell)
		{
		}

		[Token(Token = "0x6001BED")]
		[Address(RVA = "0xB0BC58", Offset = "0xB0BC58", VA = "0xB0BC58")]
		private void SetEndingCell(GridDungeonModel model, DungeonArchitect.Builders.Grid.Cell cell)
		{
		}

		[Token(Token = "0x6001BEE")]
		[Address(RVA = "0xB0C1A4", Offset = "0xB0C1A4", VA = "0xB0C1A4")]
		private void CreateLevelGoalAt(UnityEngine.Vector3 position, bool up)
		{
		}

		[Token(Token = "0x6001BEF")]
		[Address(RVA = "0xB0C0B4", Offset = "0xB0C0B4", VA = "0xB0C0B4")]
		private void CreateLevelStartAt(UnityEngine.Vector3 position, bool up)
		{
		}

		[Token(Token = "0x6001BF0")]
		[Address(RVA = "0xB0BF60", Offset = "0xB0BF60", VA = "0xB0BF60")]
		private void DestroyAllLevelGoals()
		{
		}

		[Token(Token = "0x6001BF1")]
		[Address(RVA = "0xB0C290", Offset = "0xB0C290", VA = "0xB0C290")]
		public SpecialRoomFinder()
		{
		}
	}
}
namespace JackRabbit
{
	[Token(Token = "0x20003AE")]
	public class EnemyController : MonoBehaviour
	{
		[Token(Token = "0x400182F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Animator animator;

		[Token(Token = "0x4001830")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float maxHealth;

		[Token(Token = "0x4001831")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private bool facingRight;

		[Token(Token = "0x4001832")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float currentHealth;

		[Token(Token = "0x4001833")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Rigidbody2D rigidBody2D;

		[Token(Token = "0x1700036D")]
		public bool Alive
		{
			[Token(Token = "0x6001BF5")]
			[Address(RVA = "0xADF930", Offset = "0xADF930", VA = "0xADF930")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001BF2")]
		[Address(RVA = "0xADF78C", Offset = "0xADF78C", VA = "0xADF78C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001BF3")]
		[Address(RVA = "0xADF7EC", Offset = "0xADF7EC", VA = "0xADF7EC")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6001BF4")]
		[Address(RVA = "0xADF8B4", Offset = "0xADF8B4", VA = "0xADF8B4")]
		private void Flip()
		{
		}

		[Token(Token = "0x6001BF6")]
		[Address(RVA = "0xADF940", Offset = "0xADF940", VA = "0xADF940")]
		public void ApplyDamage(float amount)
		{
		}

		[Token(Token = "0x6001BF7")]
		[Address(RVA = "0xADF964", Offset = "0xADF964", VA = "0xADF964")]
		private void OnDead()
		{
		}

		[Token(Token = "0x6001BF8")]
		[Address(RVA = "0xADFAC8", Offset = "0xADFAC8", VA = "0xADFAC8")]
		public EnemyController()
		{
		}
	}
	[Token(Token = "0x20003AF")]
	public class FollowPlayer : MonoBehaviour
	{
		[Token(Token = "0x4001834")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private DungeonNavAgent agent;

		[Token(Token = "0x6001BF9")]
		[Address(RVA = "0xADFAD8", Offset = "0xADFAD8", VA = "0xADFAD8")]
		private void Start()
		{
		}

		[Token(Token = "0x6001BFA")]
		[Address(RVA = "0xADFB30", Offset = "0xADFB30", VA = "0xADFB30")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6001BFB")]
		[Address(RVA = "0xADFBD4", Offset = "0xADFBD4", VA = "0xADFBD4")]
		public FollowPlayer()
		{
		}
	}
	[Token(Token = "0x20003B0")]
	public class FollowTarget : MonoBehaviour
	{
		[Token(Token = "0x4001835")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform target;

		[Token(Token = "0x4001836")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float sensitivity;

		[Token(Token = "0x6001BFC")]
		[Address(RVA = "0xADFBDC", Offset = "0xADFBDC", VA = "0xADFBDC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001BFD")]
		[Address(RVA = "0xADFC98", Offset = "0xADFC98", VA = "0xADFC98")]
		private void Update()
		{
		}

		[Token(Token = "0x6001BFE")]
		[Address(RVA = "0xADFC10", Offset = "0xADFC10", VA = "0xADFC10")]
		private void SetTarget(UnityEngine.Vector3 position3D)
		{
		}

		[Token(Token = "0x6001BFF")]
		[Address(RVA = "0xADFDD8", Offset = "0xADFDD8", VA = "0xADFDD8")]
		public FollowTarget()
		{
		}
	}
	[Token(Token = "0x20003B1")]
	public class GameControllerJackRabbit : MonoBehaviour
	{
		[Token(Token = "0x2000873")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B8EE0", Offset = "0x8B8EE0")]
		private sealed class <RebuildLevelRoutine>d__14 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40029D8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40029D9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40029DA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GameControllerJackRabbit <>4__this;

			[Token(Token = "0x1700069F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600301D")]
				[Address(RVA = "0xAE05E4", Offset = "0xAE05E4", VA = "0xAE05E4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170006A0")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600301F")]
				[Address(RVA = "0xAE064C", Offset = "0xAE064C", VA = "0xAE064C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600301A")]
			[Address(RVA = "0xAE025C", Offset = "0xAE025C", VA = "0xAE025C")]
			[DebuggerHidden]
			public <RebuildLevelRoutine>d__14(int <>1__state)
			{
			}

			[Token(Token = "0x600301B")]
			[Address(RVA = "0xAE0344", Offset = "0xAE0344", VA = "0xAE0344", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600301C")]
			[Address(RVA = "0xAE0348", Offset = "0xAE0348", VA = "0xAE0348", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600301E")]
			[Address(RVA = "0xAE05EC", Offset = "0xAE05EC", VA = "0xAE05EC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001837")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Dungeon dungeon;

		[Token(Token = "0x4001838")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DungeonNavMesh navMesh;

		[Token(Token = "0x4001839")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Text loadingText;

		[Token(Token = "0x400183A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static GameControllerJackRabbit instance;

		[Token(Token = "0x400183B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private LevelNpcSpawner npcSpawner;

		[Token(Token = "0x400183C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private WaypointGenerator waypointGenerator;

		[Token(Token = "0x400183D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private SpecialRoomFinder2D specialRoomFinder;

		[Token(Token = "0x1700036E")]
		public static GameControllerJackRabbit Instance
		{
			[Token(Token = "0x6001C00")]
			[Address(RVA = "0xADFDE8", Offset = "0xADFDE8", VA = "0xADFDE8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001C01")]
		[Address(RVA = "0xADFE38", Offset = "0xADFE38", VA = "0xADFE38")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001C02")]
		[Address(RVA = "0xADFF40", Offset = "0xADFF40", VA = "0xADFF40")]
		public void CreateNewLevel()
		{
		}

		[Token(Token = "0x6001C03")]
		[Address(RVA = "0xAE0024", Offset = "0xAE0024", VA = "0xAE0024")]
		private void SetLoadingTextVisible(bool visible)
		{
		}

		[Token(Token = "0x6001C04")]
		[Address(RVA = "0xAE0084", Offset = "0xAE0084", VA = "0xAE0084")]
		private void NotifyBuild()
		{
		}

		[Token(Token = "0x6001C05")]
		[Address(RVA = "0xAE0210", Offset = "0xAE0210", VA = "0xAE0210")]
		private void NotifyDestroyed()
		{
		}

		[Token(Token = "0x6001C06")]
		[Address(RVA = "0xADFFB4", Offset = "0xADFFB4", VA = "0xADFFB4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8CB040", Offset = "0x8CB040")]
		private IEnumerator RebuildLevelRoutine()
		{
			return null;
		}

		[Token(Token = "0x6001C07")]
		[Address(RVA = "0xAE0288", Offset = "0xAE0288", VA = "0xAE0288")]
		private void AppendLoadingText(string text)
		{
		}

		[Token(Token = "0x6001C08")]
		[Address(RVA = "0xAE02E4", Offset = "0xAE02E4", VA = "0xAE02E4")]
		private void Update()
		{
		}

		[Token(Token = "0x6001C09")]
		[Address(RVA = "0xAE0320", Offset = "0xAE0320", VA = "0xAE0320")]
		private void RebuildNavigation()
		{
		}

		[Token(Token = "0x6001C0A")]
		[Address(RVA = "0xAE033C", Offset = "0xAE033C", VA = "0xAE033C")]
		public GameControllerJackRabbit()
		{
		}
	}
	[Token(Token = "0x20003B2")]
	public class LevelEndGoal2D : MonoBehaviour
	{
		[Token(Token = "0x6001C0B")]
		[Address(RVA = "0xAE0654", Offset = "0xAE0654", VA = "0xAE0654")]
		private void OnTriggerEnter2D(Collider2D other)
		{
		}

		[Token(Token = "0x6001C0C")]
		[Address(RVA = "0xAE0748", Offset = "0xAE0748", VA = "0xAE0748")]
		public LevelEndGoal2D()
		{
		}
	}
	[Token(Token = "0x20003B3")]
	public class PlayerController : MonoBehaviour
	{
		[Token(Token = "0x400183E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float maxSpeed;

		[Token(Token = "0x400183F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float attackMoveSpeedMultiplier;

		[Token(Token = "0x4001840")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float sprintMultiplier;

		[Token(Token = "0x4001841")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float movementSensitivity;

		[Token(Token = "0x4001842")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float attackStength;

		[Token(Token = "0x4001843")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private bool facingRight;

		[Token(Token = "0x4001844")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Rigidbody2D rigidBody2D;

		[Token(Token = "0x4001845")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Animator animator;

		[Token(Token = "0x4001846")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool attacking;

		[Token(Token = "0x6001C0D")]
		[Address(RVA = "0xAE0750", Offset = "0xAE0750", VA = "0xAE0750")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001C0E")]
		[Address(RVA = "0xAE07C0", Offset = "0xAE07C0", VA = "0xAE07C0")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6001C0F")]
		[Address(RVA = "0xAE0ADC", Offset = "0xAE0ADC", VA = "0xAE0ADC")]
		private void OnAttack()
		{
		}

		[Token(Token = "0x6001C10")]
		[Address(RVA = "0xAE0DF8", Offset = "0xAE0DF8", VA = "0xAE0DF8")]
		private void Update()
		{
		}

		[Token(Token = "0x6001C11")]
		[Address(RVA = "0xAE0A60", Offset = "0xAE0A60", VA = "0xAE0A60")]
		private void Flip()
		{
		}

		[Token(Token = "0x6001C12")]
		[Address(RVA = "0xAE0DFC", Offset = "0xAE0DFC", VA = "0xAE0DFC")]
		public PlayerController()
		{
		}
	}
	[Token(Token = "0x20003B4")]
	public class SpecialRoomFinder2D : DungeonEventListener
	{
		[Token(Token = "0x4001847")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject levelEndGoalTemplate;

		[Token(Token = "0x6001C13")]
		[Address(RVA = "0xAE0E20", Offset = "0xAE0E20", VA = "0xAE0E20", Slot = "4")]
		public override void OnPostDungeonLayoutBuild(Dungeon dungeon, DungeonModel model)
		{
		}

		[Token(Token = "0x6001C14")]
		[Address(RVA = "0xAE00F8", Offset = "0xAE00F8", VA = "0xAE00F8")]
		public void FindSpecialRooms(DungeonModel model)
		{
		}

		[Token(Token = "0x6001C15")]
		[Address(RVA = "0xAE12A8", Offset = "0xAE12A8", VA = "0xAE12A8", Slot = "9")]
		public override void OnDungeonDestroyed(Dungeon dungeon)
		{
		}

		[Token(Token = "0x6001C16")]
		[Address(RVA = "0xAE0E28", Offset = "0xAE0E28", VA = "0xAE0E28")]
		private void SetStartingCell(GridDungeonModel model, DungeonArchitect.Builders.Grid.Cell cell)
		{
		}

		[Token(Token = "0x6001C17")]
		[Address(RVA = "0xAE0FD0", Offset = "0xAE0FD0", VA = "0xAE0FD0")]
		private void SetEndingCell(GridDungeonModel model, DungeonArchitect.Builders.Grid.Cell cell)
		{
		}

		[Token(Token = "0x6001C18")]
		[Address(RVA = "0xAE12AC", Offset = "0xAE12AC", VA = "0xAE12AC")]
		private UnityEngine.Vector3 FlipYZ(UnityEngine.Vector3 v)
		{
			return default(UnityEngine.Vector3);
		}

		[Token(Token = "0x6001C19")]
		[Address(RVA = "0xAE12EC", Offset = "0xAE12EC", VA = "0xAE12EC")]
		public SpecialRoomFinder2D()
		{
		}
	}
}
namespace DASideScroller
{
	[Token(Token = "0x20003B5")]
	public class SSCamera : MonoBehaviour
	{
		[Token(Token = "0x4001848")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform target;

		[Token(Token = "0x4001849")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float positionSmoothing;

		[Token(Token = "0x400184A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float lookAtSmoothing;

		[Token(Token = "0x400184B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UnityEngine.Vector3 offset;

		[Token(Token = "0x400184C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private UnityEngine.Vector3 currentLookAt;

		[Token(Token = "0x6001C1A")]
		[Address(RVA = "0xB0C298", Offset = "0xB0C298", VA = "0xB0C298")]
		private void Start()
		{
		}

		[Token(Token = "0x6001C1B")]
		[Address(RVA = "0xB0C2D0", Offset = "0xB0C2D0", VA = "0xB0C2D0")]
		private void Update()
		{
		}

		[Token(Token = "0x6001C1C")]
		[Address(RVA = "0xB0C490", Offset = "0xB0C490", VA = "0xB0C490")]
		public SSCamera()
		{
		}
	}
	[Token(Token = "0x20003B6")]
	public class SSGame : MonoBehaviour
	{
		[Token(Token = "0x6001C1D")]
		[Address(RVA = "0xB0C4A0", Offset = "0xB0C4A0", VA = "0xB0C4A0")]
		private void Start()
		{
		}

		[Token(Token = "0x6001C1E")]
		[Address(RVA = "0xB0C4A4", Offset = "0xB0C4A4", VA = "0xB0C4A4")]
		private void Update()
		{
		}

		[Token(Token = "0x6001C1F")]
		[Address(RVA = "0xB0C4A8", Offset = "0xB0C4A8", VA = "0xB0C4A8")]
		public SSGame()
		{
		}
	}
	[Token(Token = "0x20003B7")]
	public class SSPlayerMovement : MonoBehaviour
	{
		[Token(Token = "0x400184D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float speed;

		[Token(Token = "0x400184E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float gravity;

		[Token(Token = "0x400184F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float jumpSpeed;

		[Token(Token = "0x4001850")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int maxJumps;

		[Token(Token = "0x4001851")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float interJumpDelay;

		[Token(Token = "0x4001852")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private bool facingLeft;

		[Token(Token = "0x4001853")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private CharacterController character;

		[Token(Token = "0x4001854")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private UnityEngine.Vector3 movement;

		[Token(Token = "0x4001855")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Animator anim;

		[Token(Token = "0x4001856")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int numJumpsPerformed;

		[Token(Token = "0x4001857")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float lastJumpTimestamp;

		[Token(Token = "0x6001C20")]
		[Address(RVA = "0xB0C4B0", Offset = "0xB0C4B0", VA = "0xB0C4B0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001C21")]
		[Address(RVA = "0xB0C520", Offset = "0xB0C520", VA = "0xB0C520")]
		public void OnTeleportered()
		{
		}

		[Token(Token = "0x6001C22")]
		[Address(RVA = "0xB0C540", Offset = "0xB0C540", VA = "0xB0C540")]
		private void Update()
		{
		}

		[Token(Token = "0x6001C23")]
		[Address(RVA = "0xB0C8BC", Offset = "0xB0C8BC", VA = "0xB0C8BC")]
		private void PerformJump()
		{
		}

		[Token(Token = "0x6001C24")]
		[Address(RVA = "0xB0C5BC", Offset = "0xB0C5BC", VA = "0xB0C5BC")]
		private void Move(float h)
		{
		}

		[Token(Token = "0x6001C25")]
		[Address(RVA = "0xB0C77C", Offset = "0xB0C77C", VA = "0xB0C77C")]
		private void Turning(float h)
		{
		}

		[Token(Token = "0x6001C26")]
		[Address(RVA = "0xB0C84C", Offset = "0xB0C84C", VA = "0xB0C84C")]
		private void Animating(float h)
		{
		}

		[Token(Token = "0x6001C27")]
		[Address(RVA = "0xB0C924", Offset = "0xB0C924", VA = "0xB0C924")]
		public SSPlayerMovement()
		{
		}
	}
}
namespace DungeonArchitect
{
	[Token(Token = "0x20003B8")]
	[ExecuteInEditMode]
	public class Dungeon : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000874")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B8EF0", Offset = "0x8B8EF0")]
		private sealed class <>c
		{
			[Token(Token = "0x40029DB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40029DC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<DungeonEventListener, bool> <>9__24_0;

			[Token(Token = "0x6003021")]
			[Address(RVA = "0xC8CE00", Offset = "0xC8CE00", VA = "0xC8CE00")]
			public <>c()
			{
			}

			[Token(Token = "0x6003022")]
			[Address(RVA = "0xC8CE08", Offset = "0xC8CE08", VA = "0xC8CE08")]
			internal bool <GetListeners>b__24_0(DungeonEventListener listener)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4001858")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<Graph> dungeonThemes;

		[Token(Token = "0x4001859")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool debugDraw;

		[Token(Token = "0x400185A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private DungeonConfig config;

		[Token(Token = "0x400185B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private PooledDungeonSceneProvider sceneProvider;

		[Token(Token = "0x400185C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private DungeonBuilder dungeonBuilder;

		[Token(Token = "0x400185D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private DungeonModel dungeonModel;

		[Token(Token = "0x400185E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private DungeonSceneObjectSpawner objectSpawner;

		[Token(Token = "0x400185F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private LevelMarkerList markers;

		[Token(Token = "0x4001860")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool requestedRebuild;

		[Token(Token = "0x1700036F")]
		public DungeonModel ActiveModel
		{
			[Token(Token = "0x6001C28")]
			[Address(RVA = "0xC8A078", Offset = "0xC8A078", VA = "0xC8A078")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000370")]
		public bool IsLayoutBuilt
		{
			[Token(Token = "0x6001C29")]
			[Address(RVA = "0xC8A110", Offset = "0xC8A110", VA = "0xC8A110")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000371")]
		public LevelMarkerList Markers
		{
			[Token(Token = "0x6001C2A")]
			[Address(RVA = "0xC8A1D0", Offset = "0xC8A1D0", VA = "0xC8A1D0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000372")]
		public DungeonConfig Config
		{
			[Token(Token = "0x6001C2B")]
			[Address(RVA = "0xC8A1D8", Offset = "0xC8A1D8", VA = "0xC8A1D8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001C2C")]
		[Address(RVA = "0xC8A270", Offset = "0xC8A270", VA = "0xC8A270")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001C2D")]
		[Address(RVA = "0xC8A274", Offset = "0xC8A274", VA = "0xC8A274")]
		private void Initialize()
		{
		}

		[Token(Token = "0x6001C2E")]
		[Address(RVA = "0xC8A3E4", Offset = "0xC8A3E4", VA = "0xC8A3E4")]
		private List<DungeonPropDataAsset> GetThemeAssets()
		{
			return null;
		}

		[Token(Token = "0x6001C2F")]
		[Address(RVA = "0xC8AC74", Offset = "0xC8AC74", VA = "0xC8AC74")]
		public void Build()
		{
		}

		[Token(Token = "0x6001C30")]
		[Address(RVA = "0xC8ACD8", Offset = "0xC8ACD8", VA = "0xC8ACD8")]
		public void Build(IDungeonSceneObjectInstantiator objectInstantiator)
		{
		}

		[Token(Token = "0x6001C31")]
		[Address(RVA = "0xC8AF4C", Offset = "0xC8AF4C", VA = "0xC8AF4C")]
		public void ReapplyTheme(IDungeonSceneObjectInstantiator objectInstantiator)
		{
		}

		[Token(Token = "0x6001C32")]
		[Address(RVA = "0xC8B460", Offset = "0xC8B460", VA = "0xC8B460")]
		private DungeonThemeExecutionContext CreateThemeExecutionContext(IDungeonSceneObjectInstantiator objectInstantiator)
		{
			return default(DungeonThemeExecutionContext);
		}

		[Token(Token = "0x6001C33")]
		[Address(RVA = "0xC8C1BC", Offset = "0xC8C1BC", VA = "0xC8C1BC")]
		private DungeonEventListener[] GetListeners()
		{
			return null;
		}

		[Token(Token = "0x6001C34")]
		[Address(RVA = "0xC8AEB8", Offset = "0xC8AEB8", VA = "0xC8AEB8")]
		private void NotifyPostLayoutBuild()
		{
		}

		[Token(Token = "0x6001C35")]
		[Address(RVA = "0xC8AE24", Offset = "0xC8AE24", VA = "0xC8AE24")]
		private void NotifyPreBuild()
		{
		}

		[Token(Token = "0x6001C36")]
		[Address(RVA = "0xC8B208", Offset = "0xC8B208", VA = "0xC8B208")]
		private void NotifyPostBuild()
		{
		}

		[Token(Token = "0x6001C37")]
		[Address(RVA = "0xC8B354", Offset = "0xC8B354", VA = "0xC8B354")]
		private void NotifyMarkersEmitted(LevelMarkerList markers)
		{
		}

		[Token(Token = "0x6001C38")]
		[Address(RVA = "0xC8C2D8", Offset = "0xC8C2D8", VA = "0xC8C2D8")]
		private void NotifyPreDungeonDestroy()
		{
		}

		[Token(Token = "0x6001C39")]
		[Address(RVA = "0xC8C35C", Offset = "0xC8C35C", VA = "0xC8C35C")]
		private void NotifyDungeonDestroyed()
		{
		}

		[Token(Token = "0x6001C3A")]
		[Address(RVA = "0xC8C3E0", Offset = "0xC8C3E0", VA = "0xC8C3E0")]
		public void DestroyDungeon()
		{
		}

		[Token(Token = "0x6001C3B")]
		[Address(RVA = "0xC8C77C", Offset = "0xC8C77C", VA = "0xC8C77C")]
		public void RequestRebuild()
		{
		}

		[Token(Token = "0x6001C3C")]
		[Address(RVA = "0xC8C788", Offset = "0xC8C788", VA = "0xC8C788", Slot = "4")]
		public virtual void Update()
		{
		}

		[Token(Token = "0x6001C3D")]
		[Address(RVA = "0xC8C8D8", Offset = "0xC8C8D8", VA = "0xC8C8D8")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x6001C3E")]
		[Address(RVA = "0xC8C840", Offset = "0xC8C840", VA = "0xC8C840")]
		private void DebugDraw()
		{
		}

		[Token(Token = "0x6001C3F")]
		[Address(RVA = "0xC8C8DC", Offset = "0xC8C8DC", VA = "0xC8C8DC")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x6001C40")]
		[Address(RVA = "0xC8C97C", Offset = "0xC8C97C", VA = "0xC8C97C")]
		public void AddPaintCell(IntVector location, bool automaticRebuild)
		{
		}

		[Token(Token = "0x6001C41")]
		[Address(RVA = "0xC8CB58", Offset = "0xC8CB58", VA = "0xC8CB58")]
		public void RemovePaintCell(IntVector location, bool automaticRebuild)
		{
		}

		[Token(Token = "0x6001C42")]
		[Address(RVA = "0xC8CC68", Offset = "0xC8CC68", VA = "0xC8CC68")]
		public void ClearToolOverlayData(bool automaticRebuild)
		{
		}

		[Token(Token = "0x6001C43")]
		[Address(RVA = "0xC8CD34", Offset = "0xC8CD34", VA = "0xC8CD34")]
		public Dungeon()
		{
		}
	}
	[Token(Token = "0x20003B9")]
	[ExecuteInEditMode]
	public abstract class DungeonBuilder : MonoBehaviour
	{
		[Token(Token = "0x4001861")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected DungeonConfig config;

		[Token(Token = "0x4001862")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected PMRandom nrandom;

		[Token(Token = "0x4001863")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected PMRandom random;

		[Token(Token = "0x4001864")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected DungeonModel model;

		[Token(Token = "0x4001865")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected LevelMarkerList markers;

		[Token(Token = "0x4001866")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected Blackboard blackboard;

		[Token(Token = "0x4001867")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool asyncBuild;

		[Token(Token = "0x4001868")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public long maxBuildTimePerFrame;

		[Token(Token = "0x4001869")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Transform asyncBuildStartPosition;

		[Token(Token = "0x400186A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool isLayoutBuilt;

		[Token(Token = "0x17000373")]
		public bool IsLayoutBuilt
		{
			[Token(Token = "0x6001C44")]
			[Address(RVA = "0xC8A1B0", Offset = "0xC8A1B0", VA = "0xC8A1B0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000374")]
		public LevelMarkerList Markers
		{
			[Token(Token = "0x6001C45")]
			[Address(RVA = "0xC8CE24", Offset = "0xC8CE24", VA = "0xC8CE24")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000375")]
		public DungeonModel Model
		{
			[Token(Token = "0x6001C46")]
			[Address(RVA = "0xC8CE2C", Offset = "0xC8CE2C", VA = "0xC8CE2C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000376")]
		public Blackboard Blackboard
		{
			[Token(Token = "0x6001C47")]
			[Address(RVA = "0xC8CE34", Offset = "0xC8CE34", VA = "0xC8CE34")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001C48")]
		[Address(RVA = "0xC814C0", Offset = "0xC814C0", VA = "0xC814C0", Slot = "4")]
		public virtual void BuildDungeon(DungeonConfig config, DungeonModel model)
		{
		}

		[Token(Token = "0x6001C49")]
		[Address(RVA = "0xC8CE3C", Offset = "0xC8CE3C", VA = "0xC8CE3C", Slot = "5")]
		protected virtual LevelMarkerList CreateMarkerListObject(DungeonConfig config)
		{
			return null;
		}

		[Token(Token = "0x6001C4A")]
		[Address(RVA = "0xC8CE9C", Offset = "0xC8CE9C", VA = "0xC8CE9C", Slot = "6")]
		public virtual void OnDestroyed()
		{
		}

		[Token(Token = "0x6001C4B")]
		[Address(RVA = "0xC8CEF4", Offset = "0xC8CEF4", VA = "0xC8CEF4", Slot = "7")]
		public virtual bool IsThemingSupported()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C4C")]
		[Address(RVA = "0xC8CEFC", Offset = "0xC8CEFC", VA = "0xC8CEFC", Slot = "8")]
		public virtual void BuildNonThemedDungeon(DungeonSceneProvider sceneProvider, IDungeonSceneObjectInstantiator objectInstantiator)
		{
		}

		[Token(Token = "0x6001C4D")]
		[Address(RVA = "0xC8CF00", Offset = "0xC8CF00", VA = "0xC8CF00", Slot = "9")]
		public virtual void DebugDraw()
		{
		}

		[Token(Token = "0x6001C4E")]
		[Address(RVA = "0xC8CF04", Offset = "0xC8CF04", VA = "0xC8CF04", Slot = "10")]
		public virtual void DebugDrawGizmos()
		{
		}

		[Token(Token = "0x6001C4F")]
		[Address(RVA = "0xC8CED4", Offset = "0xC8CED4", VA = "0xC8CED4")]
		protected void ClearSockets()
		{
		}

		[Token(Token = "0x6001C50")]
		[Address(RVA = "0xC81D30", Offset = "0xC81D30", VA = "0xC81D30", Slot = "11")]
		public virtual void EmitMarkers()
		{
		}

		[Token(Token = "0x6001C51")]
		[Address(RVA = "0xC8B29C", Offset = "0xC8B29C", VA = "0xC8B29C")]
		public void EmitCustomMarkers()
		{
		}

		[Token(Token = "0x6001C52")]
		[Address(RVA = "0xC83E60", Offset = "0xC83E60", VA = "0xC83E60")]
		public PropSocket EmitMarker(string SocketType, Matrix4x4 transform, IntVector gridPosition, int cellId)
		{
			return null;
		}

		[Token(Token = "0x6001C53")]
		[Address(RVA = "0xC8CF08", Offset = "0xC8CF08", VA = "0xC8CF08")]
		public PropSocket EmitMarker(string SocketType, Matrix4x4 transform, IntVector gridPosition, int cellId, object metadata)
		{
			return null;
		}

		[Token(Token = "0x6001C54")]
		[Address(RVA = "0xC8CF5C", Offset = "0xC8CF5C", VA = "0xC8CF5C")]
		public void EmitMarker(string SocketType, Matrix4x4 _transform, int count, UnityEngine.Vector3 InterOffset, IntVector gridPosition, int cellId, UnityEngine.Vector3 LogicalToWorldScale)
		{
		}

		[Token(Token = "0x6001C55")]
		[Address(RVA = "0xC8CF94", Offset = "0xC8CF94", VA = "0xC8CF94")]
		public void EmitMarker(string SocketType, Matrix4x4 _transform, int count, UnityEngine.Vector3 InterOffset, IntVector gridPosition, int cellId, UnityEngine.Vector3 LogicalToWorldScale, object metadata)
		{
		}

		[Token(Token = "0x6001C56")]
		[Address(RVA = "0xC8CFE8", Offset = "0xC8CFE8", VA = "0xC8CFE8", Slot = "12")]
		public virtual void OnVolumePositionModified(Volume volume, out IntVector newPositionOnGrid, out IntVector newSizeOnGrid)
		{
		}

		[Token(Token = "0x6001C57")]
		[Address(RVA = "0xC827F8", Offset = "0xC827F8", VA = "0xC827F8")]
		protected void ProcessMarkerOverrideVolumes()
		{
		}

		[Token(Token = "0x6001C58")]
		[Address(RVA = "0xC84508", Offset = "0xC84508", VA = "0xC84508")]
		protected DungeonBuilder()
		{
		}
	}
	[Token(Token = "0x20003BA")]
	public class DungeonConfig : MonoBehaviour
	{
		[Token(Token = "0x400186B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C00E8", Offset = "0x8C00E8")]
		public uint Seed;

		[Token(Token = "0x400186C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool Mode2D;

		[Token(Token = "0x6001C59")]
		[Address(RVA = "0xC8D0D8", Offset = "0xC8D0D8", VA = "0xC8D0D8", Slot = "4")]
		public virtual bool HasValidConfig(ref string errorMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C5A")]
		[Address(RVA = "0xC7EFE8", Offset = "0xC7EFE8", VA = "0xC7EFE8")]
		public DungeonConfig()
		{
		}
	}
	[Token(Token = "0x20003BB")]
	public class DungeonEventListener : MonoBehaviour
	{
		[Token(Token = "0x6001C5B")]
		[Address(RVA = "0xC8D0E0", Offset = "0xC8D0E0", VA = "0xC8D0E0", Slot = "4")]
		public virtual void OnPostDungeonLayoutBuild(Dungeon dungeon, DungeonModel model)
		{
		}

		[Token(Token = "0x6001C5C")]
		[Address(RVA = "0xC8D0E4", Offset = "0xC8D0E4", VA = "0xC8D0E4", Slot = "5")]
		public virtual void OnDungeonMarkersEmitted(Dungeon dungeon, DungeonModel model, LevelMarkerList markers)
		{
		}

		[Token(Token = "0x6001C5D")]
		[Address(RVA = "0xC8D0E8", Offset = "0xC8D0E8", VA = "0xC8D0E8", Slot = "6")]
		public virtual void OnPreDungeonBuild(Dungeon dungeon, DungeonModel model)
		{
		}

		[Token(Token = "0x6001C5E")]
		[Address(RVA = "0xC8D0EC", Offset = "0xC8D0EC", VA = "0xC8D0EC", Slot = "7")]
		public virtual void OnPostDungeonBuild(Dungeon dungeon, DungeonModel model)
		{
		}

		[Token(Token = "0x6001C5F")]
		[Address(RVA = "0xC8D0F0", Offset = "0xC8D0F0", VA = "0xC8D0F0", Slot = "8")]
		public virtual void OnPreDungeonDestroy(Dungeon dungeon)
		{
		}

		[Token(Token = "0x6001C60")]
		[Address(RVA = "0xC8D0F4", Offset = "0xC8D0F4", VA = "0xC8D0F4", Slot = "9")]
		public virtual void OnDungeonDestroyed(Dungeon dungeon)
		{
		}

		[Token(Token = "0x6001C61")]
		[Address(RVA = "0xC8D0F8", Offset = "0xC8D0F8", VA = "0xC8D0F8")]
		public DungeonEventListener()
		{
		}
	}
	[Token(Token = "0x20003BC")]
	public class DungeonMarkerEmitter : MonoBehaviour
	{
		[Token(Token = "0x6001C62")]
		[Address(RVA = "0xC84FE0", Offset = "0xC84FE0", VA = "0xC84FE0", Slot = "4")]
		public virtual void EmitMarkers(DungeonBuilder builder)
		{
		}

		[Token(Token = "0x6001C63")]
		[Address(RVA = "0xC85574", Offset = "0xC85574", VA = "0xC85574")]
		public DungeonMarkerEmitter()
		{
		}
	}
	[Token(Token = "0x20003BD")]
	public abstract class DungeonModel : MonoBehaviour
	{
		[Token(Token = "0x400186D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public DungeonToolData ToolData;

		[Token(Token = "0x6001C64")]
		[Address(RVA = "0xC8D114", Offset = "0xC8D114", VA = "0xC8D114")]
		private void Reset()
		{
		}

		[Token(Token = "0x6001C65")]
		[Address(RVA = "0xC8D120", Offset = "0xC8D120", VA = "0xC8D120", Slot = "4")]
		public virtual void ResetModel()
		{
		}

		[Token(Token = "0x6001C66")]
		[Address(RVA = "0xC8D124", Offset = "0xC8D124", VA = "0xC8D124", Slot = "5")]
		public virtual DungeonToolData CreateToolDataInstance()
		{
			return null;
		}

		[Token(Token = "0x6001C67")]
		[Address(RVA = "0xC7F074", Offset = "0xC7F074", VA = "0xC7F074")]
		protected DungeonModel()
		{
		}
	}
	[Token(Token = "0x20003BE")]
	public abstract class DungeonPaintMode : MonoBehaviour
	{
		[Token(Token = "0x400186E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected Dungeon dungeon;

		[Token(Token = "0x400186F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected DungeonModel dungeonModel;

		[Token(Token = "0x4001870")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected DungeonConfig dungeonConfig;

		[Token(Token = "0x6001C68")]
		[Address(RVA = "0xC8D79C", Offset = "0xC8D79C", VA = "0xC8D79C")]
		public DungeonConfig GetDungeonConfig()
		{
			return null;
		}

		[Token(Token = "0x6001C69")]
		[Address(RVA = "0xC8D834", Offset = "0xC8D834", VA = "0xC8D834")]
		public DungeonModel GetDungeonModel()
		{
			return null;
		}

		[Token(Token = "0x6001C6A")]
		[Address(RVA = "0xC8D8CC", Offset = "0xC8D8CC", VA = "0xC8D8CC")]
		public Dungeon GetDungeon()
		{
			return null;
		}

		[Token(Token = "0x6001C6B")]
		public T GetSiblingComponent<T>()
		{
			return (T)null;
		}

		[Token(Token = "0x6001C6C")]
		[Address(RVA = "0xC8D964", Offset = "0xC8D964", VA = "0xC8D964")]
		protected DungeonPaintMode()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003BF")]
	public class PropSocket
	{
		[Token(Token = "0x4001871")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int Id;

		[Token(Token = "0x4001872")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string SocketType;

		[Token(Token = "0x4001873")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Matrix4x4 Transform;

		[Token(Token = "0x4001874")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public IntVector gridPosition;

		[Token(Token = "0x4001875")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public int cellId;

		[Token(Token = "0x4001876")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public bool markForDeletion;

		[Token(Token = "0x4001877")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public List<PropSocket> childMarkers;

		[Token(Token = "0x4001878")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public object metadata;

		[Token(Token = "0x6001C6D")]
		[Address(RVA = "0xD59718", Offset = "0xD59718", VA = "0xD59718", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6001C6E")]
		[Address(RVA = "0xD52994", Offset = "0xD52994", VA = "0xD52994")]
		public PropSocket()
		{
		}
	}
	[Token(Token = "0x20003C0")]
	public class PropChildSocketData
	{
		[Token(Token = "0x4001879")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string SocketType;

		[Token(Token = "0x400187A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Matrix4x4 Offset;

		[Token(Token = "0x6001C6F")]
		[Address(RVA = "0xD59710", Offset = "0xD59710", VA = "0xD59710")]
		public PropChildSocketData()
		{
		}
	}
	[Token(Token = "0x20003C1")]
	public abstract class PropTypeData
	{
		[Token(Token = "0x400187B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string NodeId;

		[Token(Token = "0x400187C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string AttachToSocket;

		[Token(Token = "0x400187D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float Affinity;

		[Token(Token = "0x400187E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool ConsumeOnAttach;

		[Token(Token = "0x400187F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Matrix4x4 Offset;

		[Token(Token = "0x4001880")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public List<PropChildSocketData> ChildSockets;

		[Token(Token = "0x4001881")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public bool IsStaticObject;

		[Token(Token = "0x4001882")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		public bool affectsNavigation;

		[Token(Token = "0x4001883")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x72")]
		public bool UseSelectionRule;

		[Token(Token = "0x4001884")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public string SelectorRuleClassName;

		[Token(Token = "0x4001885")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public bool UseTransformRule;

		[Token(Token = "0x4001886")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public string TransformRuleClassName;

		[Token(Token = "0x4001887")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public bool useSpatialConstraint;

		[Token(Token = "0x4001888")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public SpatialConstraintAsset spatialConstraint;

		[Token(Token = "0x6001C70")]
		[Address(RVA = "0xD59720", Offset = "0xD59720", VA = "0xD59720")]
		protected PropTypeData()
		{
		}
	}
	[Token(Token = "0x20003C2")]
	public class GameObjectPropTypeData : PropTypeData
	{
		[Token(Token = "0x4001889")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public GameObject Template;

		[Token(Token = "0x6001C71")]
		[Address(RVA = "0xC891E4", Offset = "0xC891E4", VA = "0xC891E4")]
		public GameObjectPropTypeData()
		{
		}
	}
	[Token(Token = "0x20003C3")]
	public class GameObjectArrayPropTypeData : PropTypeData
	{
		[Token(Token = "0x400188A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public GameObject[] Templates;

		[Token(Token = "0x6001C72")]
		[Address(RVA = "0xC8D96C", Offset = "0xC8D96C", VA = "0xC8D96C")]
		public GameObjectArrayPropTypeData()
		{
		}
	}
	[Token(Token = "0x20003C4")]
	public class SpritePropTypeData : PropTypeData
	{
		[Token(Token = "0x400188B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public Sprite sprite;

		[Token(Token = "0x400188C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public Color color;

		[Token(Token = "0x400188D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public Material materialOverride;

		[Token(Token = "0x400188E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public string sortingLayerName;

		[Token(Token = "0x400188F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public int orderInLayer;

		[Token(Token = "0x4001890")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		public DungeonSpriteCollisionType collisionType;

		[Token(Token = "0x4001891")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public PhysicsMaterial2D physicsMaterial;

		[Token(Token = "0x4001892")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public UnityEngine.Vector2 physicsOffset;

		[Token(Token = "0x4001893")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public UnityEngine.Vector2 physicsSize;

		[Token(Token = "0x4001894")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public float physicsRadius;

		[Token(Token = "0x6001C73")]
		[Address(RVA = "0xE03A68", Offset = "0xE03A68", VA = "0xE03A68")]
		public SpritePropTypeData()
		{
		}
	}
	[Token(Token = "0x20003C5")]
	public class DungeonPropDataAsset
	{
		[Token(Token = "0x4001895")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<PropTypeData> Props;

		[Token(Token = "0x6001C74")]
		[Address(RVA = "0xC8A5CC", Offset = "0xC8A5CC", VA = "0xC8A5CC")]
		public void BuildFromGraph(Graph graph)
		{
		}

		[Token(Token = "0x6001C75")]
		[Address(RVA = "0xC8A55C", Offset = "0xC8A55C", VA = "0xC8A55C")]
		public DungeonPropDataAsset()
		{
		}
	}
	[Token(Token = "0x20003C6")]
	public class LeftToRightNodeComparer : IComparer<GraphNode>
	{
		[Token(Token = "0x6001C76")]
		[Address(RVA = "0xD5244C", Offset = "0xD5244C", VA = "0xD5244C", Slot = "4")]
		public int Compare(GraphNode a, GraphNode b)
		{
			return default(int);
		}

		[Token(Token = "0x6001C77")]
		[Address(RVA = "0xD52500", Offset = "0xD52500", VA = "0xD52500")]
		public LeftToRightNodeComparer()
		{
		}
	}
	[Token(Token = "0x20003C7")]
	public interface IDungeonSceneObjectInstantiator
	{
		[Token(Token = "0x6001C78")]
		GameObject Instantiate(GameObject template, UnityEngine.Vector3 position, Quaternion rotation, UnityEngine.Vector3 scale, Transform parent);
	}
	[Token(Token = "0x20003C8")]
	public class RuntimeDungeonSceneObjectInstantiator : IDungeonSceneObjectInstantiator
	{
		[Token(Token = "0x6001C79")]
		[Address(RVA = "0xDF36F8", Offset = "0xDF36F8", VA = "0xDF36F8", Slot = "4")]
		public GameObject Instantiate(GameObject template, UnityEngine.Vector3 position, Quaternion rotation, UnityEngine.Vector3 scale, Transform parent)
		{
			return null;
		}

		[Token(Token = "0x6001C7A")]
		[Address(RVA = "0xDF3848", Offset = "0xDF3848", VA = "0xDF3848")]
		public RuntimeDungeonSceneObjectInstantiator()
		{
		}
	}
	[Token(Token = "0x20003C9")]
	public struct DungeonNodeSpawnData
	{
		[Token(Token = "0x4001896")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public PropTypeData nodeData;

		[Token(Token = "0x4001897")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Matrix4x4 transform;

		[Token(Token = "0x4001898")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public PropSocket socket;

		[Token(Token = "0x4001899")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float _sortDistance;
	}
	[Token(Token = "0x20003CA")]
	public abstract class DungeonSceneObjectSpawner
	{
		[Token(Token = "0x2000875")]
		protected class SpawnInfo
		{
			[Token(Token = "0x40029DD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public DungeonNodeSpawnData spawnData;

			[Token(Token = "0x40029DE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public GameObject spawnedItem;

			[Token(Token = "0x6003023")]
			[Address(RVA = "0xC8E4B8", Offset = "0xC8E4B8", VA = "0xC8E4B8")]
			public SpawnInfo()
			{
			}
		}

		[Token(Token = "0x6001C7B")]
		public abstract void Spawn(DungeonNodeSpawnData[] spawnDataList, DungeonSceneProvider sceneProvider, PMRandom random, IDungeonSceneObjectInstantiator objectInstantiator, DungeonItemSpawnListener[] spawnListeners);

		[Token(Token = "0x6001C7C")]
		[Address(RVA = "0xC8DF48", Offset = "0xC8DF48", VA = "0xC8DF48", Slot = "5")]
		public virtual void Tick()
		{
		}

		[Token(Token = "0x6001C7D")]
		[Address(RVA = "0xC8DF4C", Offset = "0xC8DF4C", VA = "0xC8DF4C", Slot = "6")]
		public virtual void Destroy()
		{
		}

		[Token(Token = "0x6001C7E")]
		[Address(RVA = "0xC8DF50", Offset = "0xC8DF50", VA = "0xC8DF50")]
		protected GameObject SpawnNodeItem(DungeonNodeSpawnData data, DungeonSceneProvider sceneProvider, PMRandom random, IDungeonSceneObjectInstantiator objectInstantiator)
		{
			return null;
		}

		[Token(Token = "0x6001C7F")]
		[Address(RVA = "0xC8E1FC", Offset = "0xC8E1FC", VA = "0xC8E1FC")]
		protected void TagDungeonItemUserData(GameObject dungeonItem, int cellID)
		{
		}

		[Token(Token = "0x6001C80")]
		[Address(RVA = "0xC8E2D4", Offset = "0xC8E2D4", VA = "0xC8E2D4")]
		protected void NotifySpawnListeners(DungeonItemSpawnListener[] spawnListeners, List<SpawnInfo> spawnList)
		{
		}

		[Token(Token = "0x6001C81")]
		[Address(RVA = "0xC8E4B0", Offset = "0xC8E4B0", VA = "0xC8E4B0")]
		protected DungeonSceneObjectSpawner()
		{
		}
	}
	[Token(Token = "0x20003CB")]
	public class SyncDungeonSceneObjectSpawner : DungeonSceneObjectSpawner
	{
		[Token(Token = "0x6001C82")]
		[Address(RVA = "0xE03A70", Offset = "0xE03A70", VA = "0xE03A70", Slot = "4")]
		public override void Spawn(DungeonNodeSpawnData[] spawnDataList, DungeonSceneProvider sceneProvider, PMRandom random, IDungeonSceneObjectInstantiator objectInstantiator, DungeonItemSpawnListener[] spawnListeners)
		{
		}

		[Token(Token = "0x6001C83")]
		[Address(RVA = "0xE03C40", Offset = "0xE03C40", VA = "0xE03C40")]
		public SyncDungeonSceneObjectSpawner()
		{
		}
	}
	[Token(Token = "0x20003CC")]
	public class AsyncDungeonSceneObjectSpawner : DungeonSceneObjectSpawner
	{
		[Token(Token = "0x2000876")]
		public class SpawnListSorter : IComparer<DungeonNodeSpawnData>
		{
			[Token(Token = "0x6003024")]
			[Address(RVA = "0xB16644", Offset = "0xB16644", VA = "0xB16644", Slot = "4")]
			public int Compare(DungeonNodeSpawnData a, DungeonNodeSpawnData b)
			{
				return default(int);
			}

			[Token(Token = "0x6003025")]
			[Address(RVA = "0xB16398", Offset = "0xB16398", VA = "0xB16398")]
			public SpawnListSorter()
			{
			}
		}

		[Token(Token = "0x400189A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private long maxMilliPerFrame;

		[Token(Token = "0x400189B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private UnityEngine.Vector3 buildOrigin;

		[Token(Token = "0x400189C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private DungeonSceneProvider sceneProvider;

		[Token(Token = "0x400189D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private PMRandom random;

		[Token(Token = "0x400189E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private IDungeonSceneObjectInstantiator objectInstantiator;

		[Token(Token = "0x400189F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private DungeonItemSpawnListener[] spawnListeners;

		[Token(Token = "0x40018A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Queue<DungeonNodeSpawnData> buildQueue;

		[Token(Token = "0x40018A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private List<SpawnInfo> spawnList;

		[Token(Token = "0x6001C84")]
		[Address(RVA = "0xB16104", Offset = "0xB16104", VA = "0xB16104")]
		public AsyncDungeonSceneObjectSpawner(long maxMilliPerFrame, UnityEngine.Vector3 buildOrigin)
		{
		}

		[Token(Token = "0x6001C85")]
		[Address(RVA = "0xB161AC", Offset = "0xB161AC", VA = "0xB161AC", Slot = "4")]
		public override void Spawn(DungeonNodeSpawnData[] spawnDataList, DungeonSceneProvider sceneProvider, PMRandom random, IDungeonSceneObjectInstantiator objectInstantiator, DungeonItemSpawnListener[] spawnListeners)
		{
		}

		[Token(Token = "0x6001C86")]
		[Address(RVA = "0xB163A0", Offset = "0xB163A0", VA = "0xB163A0", Slot = "5")]
		public override void Tick()
		{
		}

		[Token(Token = "0x6001C87")]
		[Address(RVA = "0xB16590", Offset = "0xB16590", VA = "0xB16590", Slot = "6")]
		public override void Destroy()
		{
		}
	}
	[Token(Token = "0x20003CD")]
	public class DungeonSceneProvider : MonoBehaviour
	{
		[Token(Token = "0x40018A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected DungeonConfig config;

		[Token(Token = "0x40018A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected Dungeon dungeon;

		[Token(Token = "0x40018A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject itemParent;

		[Token(Token = "0x40018A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected UnityEngine.Vector3 _position;

		[Token(Token = "0x40018A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		protected Quaternion _rotation;

		[Token(Token = "0x40018A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		protected UnityEngine.Vector3 _scale;

		[Token(Token = "0x6001C88")]
		[Address(RVA = "0xC8E4C0", Offset = "0xC8E4C0", VA = "0xC8E4C0", Slot = "4")]
		public virtual void OnDungeonBuildStart()
		{
		}

		[Token(Token = "0x6001C89")]
		[Address(RVA = "0xC8E5F8", Offset = "0xC8E5F8", VA = "0xC8E5F8", Slot = "5")]
		public virtual void OnDungeonBuildStop()
		{
		}

		[Token(Token = "0x6001C8A")]
		[Address(RVA = "0xC8E5FC", Offset = "0xC8E5FC", VA = "0xC8E5FC", Slot = "6")]
		public virtual GameObject AddGameObject(GameObjectPropTypeData gameObjectProp, Matrix4x4 transform, IDungeonSceneObjectInstantiator objectInstantiator)
		{
			return null;
		}

		[Token(Token = "0x6001C8B")]
		[Address(RVA = "0xC8E604", Offset = "0xC8E604", VA = "0xC8E604", Slot = "7")]
		public virtual GameObject AddGameObjectFromArray(GameObjectArrayPropTypeData gameObjectArrayProp, int index, Matrix4x4 transform, IDungeonSceneObjectInstantiator objectInstantiator)
		{
			return null;
		}

		[Token(Token = "0x6001C8C")]
		[Address(RVA = "0xC8E60C", Offset = "0xC8E60C", VA = "0xC8E60C", Slot = "8")]
		public virtual GameObject AddSprite(SpritePropTypeData spriteProp, Matrix4x4 transform, IDungeonSceneObjectInstantiator objectInstantiator)
		{
			return null;
		}

		[Token(Token = "0x6001C8D")]
		[Address(RVA = "0xC8E614", Offset = "0xC8E614", VA = "0xC8E614")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001C8E")]
		[Address(RVA = "0xC8E4C4", Offset = "0xC8E4C4", VA = "0xC8E4C4")]
		protected void Initialize()
		{
		}

		[Token(Token = "0x6001C8F")]
		[Address(RVA = "0xC8E618", Offset = "0xC8E618", VA = "0xC8E618")]
		protected GameObject BuildGameObject(GameObjectPropTypeData gameObjectProp, Matrix4x4 transform, IDungeonSceneObjectInstantiator objectInstantiator)
		{
			return null;
		}

		[Token(Token = "0x6001C90")]
		[Address(RVA = "0xC8E848", Offset = "0xC8E848", VA = "0xC8E848")]
		protected GameObject BuildGameObjectFromArray(GameObjectArrayPropTypeData gameObjectArrayProp, int index, Matrix4x4 transform, IDungeonSceneObjectInstantiator objectInstantiator)
		{
			return null;
		}

		[Token(Token = "0x6001C91")]
		[Address(RVA = "0xC8E668", Offset = "0xC8E668", VA = "0xC8E668")]
		protected GameObject BuildGameObject(GameObject template, string nodeId, bool affectsNavigation, Matrix4x4 transform, IDungeonSceneObjectInstantiator objectInstantiator)
		{
			return null;
		}

		[Token(Token = "0x6001C92")]
		[Address(RVA = "0xC8E958", Offset = "0xC8E958", VA = "0xC8E958")]
		protected void FlipSpriteTransform(ref Matrix4x4 transform, Sprite sprite)
		{
		}

		[Token(Token = "0x6001C93")]
		[Address(RVA = "0xC8EA8C", Offset = "0xC8EA8C", VA = "0xC8EA8C")]
		protected void FlipSpritePosition(ref Matrix4x4 transform)
		{
		}

		[Token(Token = "0x6001C94")]
		[Address(RVA = "0xC8EA7C", Offset = "0xC8EA7C", VA = "0xC8EA7C")]
		protected void FlipSpritePosition(ref UnityEngine.Vector3 position)
		{
		}

		[Token(Token = "0x6001C95")]
		[Address(RVA = "0xC8EACC", Offset = "0xC8EACC", VA = "0xC8EACC", Slot = "9")]
		public virtual void InvalidateNodeCache(string NodeId)
		{
		}

		[Token(Token = "0x6001C96")]
		[Address(RVA = "0xC8EAD0", Offset = "0xC8EAD0", VA = "0xC8EAD0")]
		protected GameObject BuildSpriteObject(SpritePropTypeData spriteData, Matrix4x4 transform, string NodeId)
		{
			return null;
		}

		[Token(Token = "0x6001C97")]
		[Address(RVA = "0xC8F050", Offset = "0xC8F050", VA = "0xC8F050")]
		protected void SetTransform(Transform transform, Matrix4x4 matrix)
		{
		}

		[Token(Token = "0x6001C98")]
		[Address(RVA = "0xC8F0CC", Offset = "0xC8F0CC", VA = "0xC8F0CC")]
		public DungeonSceneProvider()
		{
		}
	}
	[Token(Token = "0x20003CE")]
	public class DungeonSceneProviderData : MonoBehaviour
	{
		[Token(Token = "0x40018A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string NodeId;

		[Token(Token = "0x40018A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Dungeon dungeon;

		[Token(Token = "0x40018AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool affectsNavigation;

		[Token(Token = "0x40018AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int userData;

		[Token(Token = "0x6001C99")]
		[Address(RVA = "0xC8F0D4", Offset = "0xC8F0D4", VA = "0xC8F0D4")]
		public DungeonSceneProviderData()
		{
		}
	}
	[Token(Token = "0x20003CF")]
	public struct DungeonThemeExecutionContext
	{
		[Token(Token = "0x40018AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public DungeonBuilder builder;

		[Token(Token = "0x40018AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public DungeonConfig config;

		[Token(Token = "0x40018AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public DungeonModel model;

		[Token(Token = "0x40018AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SpatialConstraintProcessor spatialConstraintProcessor;

		[Token(Token = "0x40018B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ThemeOverrideVolume[] themeOverrideVolumes;

		[Token(Token = "0x40018B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public DungeonSceneProvider sceneProvider;

		[Token(Token = "0x40018B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public DungeonSceneObjectSpawner objectSpawner;

		[Token(Token = "0x40018B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public DungeonItemSpawnListener[] spawnListeners;

		[Token(Token = "0x40018B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public IDungeonSceneObjectInstantiator objectInstantiator;
	}
	[Token(Token = "0x20003D0")]
	public class DungeonThemeEngine
	{
		[Token(Token = "0x2000877")]
		private struct NodeListExecutionData
		{
			[Token(Token = "0x40029DF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public List<PropTypeData> nodeDataList;

			[Token(Token = "0x40029E0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public PropSocket socket;
		}

		[Token(Token = "0x2000878")]
		private struct NodeListExecutionContext
		{
			[Token(Token = "0x40029E1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public InstanceCache instanceCache;

			[Token(Token = "0x40029E2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public SpatialConstraintProcessor constraintProcessor;

			[Token(Token = "0x40029E3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public PMRandom srandom;

			[Token(Token = "0x40029E4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public DungeonSceneProvider SceneProvider;

			[Token(Token = "0x40029E5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public IDungeonSceneObjectInstantiator objectInstantiator;
		}

		[Token(Token = "0x40018B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private DungeonThemeExecutionContext context;

		[Token(Token = "0x40018B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private PMRandom random;

		[Token(Token = "0x6001C9A")]
		[Address(RVA = "0xC8B7A4", Offset = "0xC8B7A4", VA = "0xC8B7A4")]
		public DungeonThemeEngine(DungeonThemeExecutionContext context)
		{
		}

		[Token(Token = "0x6001C9B")]
		[Address(RVA = "0xC8B840", Offset = "0xC8B840", VA = "0xC8B840")]
		public void ApplyTheme(LevelMarkerList markers, List<DungeonPropDataAsset> Themes)
		{
		}

		[Token(Token = "0x6001C9C")]
		[Address(RVA = "0xC8F31C", Offset = "0xC8F31C", VA = "0xC8F31C")]
		private DungeonPropDataAsset GetBestMatchedTheme(List<DungeonPropDataAsset> Themes, PropSocket socket, Dictionary<DungeonPropDataAsset, Dictionary<string, List<PropTypeData>>> PropBySocketTypeByTheme)
		{
			return null;
		}

		[Token(Token = "0x6001C9D")]
		[Address(RVA = "0xC90540", Offset = "0xC90540", VA = "0xC90540")]
		private bool ProcessSpatialConstraint(SpatialConstraintProcessor constraintProcessor, SpatialConstraintAsset constraint, PropSocket marker, LevelMarkerList markers, out Matrix4x4 OutOffset, out PropSocket[] outMarkersToRemove)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C9E")]
		[Address(RVA = "0xC906B8", Offset = "0xC906B8", VA = "0xC906B8")]
		private void RecursivelyTagMarkerForDeletion(PropSocket marker, HashSet<int> visited)
		{
		}

		[Token(Token = "0x6001C9F")]
		[Address(RVA = "0xC902C8", Offset = "0xC902C8", VA = "0xC902C8")]
		private void RecursivelyTagMarkersForDeletion(LevelMarkerList markers)
		{
		}

		[Token(Token = "0x6001CA0")]
		[Address(RVA = "0xC8F5EC", Offset = "0xC8F5EC", VA = "0xC8F5EC")]
		private bool ShouldDelayExecution(List<PropTypeData> nodeDataList)
		{
			return default(bool);
		}

		[Token(Token = "0x6001CA1")]
		[Address(RVA = "0xC8F0E4", Offset = "0xC8F0E4", VA = "0xC8F0E4")]
		private void CreatePropLookup(DungeonPropDataAsset PropAsset, Dictionary<DungeonPropDataAsset, Dictionary<string, List<PropTypeData>>> PropBySocketTypeByTheme)
		{
		}

		[Token(Token = "0x6001CA2")]
		[Address(RVA = "0xC8F734", Offset = "0xC8F734", VA = "0xC8F734")]
		private void ExecuteNodesUnderMarker(NodeListExecutionData data, NodeListExecutionContext nodeContext, LevelMarkerList markers, List<DungeonNodeSpawnData> spawnDataList)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003D1")]
	public class DungeonToolData : ScriptableObject
	{
		[Token(Token = "0x40018B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private List<IntVector> paintedCells;

		[Token(Token = "0x17000377")]
		public List<IntVector> PaintedCells
		{
			[Token(Token = "0x6001CA3")]
			[Address(RVA = "0xC90818", Offset = "0xC90818", VA = "0xC90818")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001CA4")]
		[Address(RVA = "0xC90820", Offset = "0xC90820", VA = "0xC90820")]
		public DungeonToolData()
		{
		}
	}
	[Token(Token = "0x20003D2")]
	public class SelectorRule : ScriptableObject
	{
		[Token(Token = "0x6001CA5")]
		[Address(RVA = "0xE00348", Offset = "0xE00348", VA = "0xE00348", Slot = "4")]
		public virtual bool CanSelect(PropSocket socket, Matrix4x4 propTransform, DungeonModel model, System.Random random)
		{
			return default(bool);
		}

		[Token(Token = "0x6001CA6")]
		[Address(RVA = "0xDF9E30", Offset = "0xDF9E30", VA = "0xDF9E30")]
		public SelectorRule()
		{
		}
	}
	[Token(Token = "0x20003D3")]
	public class TransformationRule : ScriptableObject
	{
		[Token(Token = "0x6001CA7")]
		[Address(RVA = "0xDF4D1C", Offset = "0xDF4D1C", VA = "0xDF4D1C", Slot = "4")]
		public virtual void GetTransform(PropSocket socket, DungeonModel model, Matrix4x4 propTransform, System.Random random, out UnityEngine.Vector3 outPosition, out Quaternion outRotation, out UnityEngine.Vector3 outScale)
		{
		}

		[Token(Token = "0x6001CA8")]
		[Address(RVA = "0xDF4DE4", Offset = "0xDF4DE4", VA = "0xDF4DE4")]
		public TransformationRule()
		{
		}
	}
	[Token(Token = "0x20003D4")]
	public class DungeonItemSpawnListener : MonoBehaviour
	{
		[Token(Token = "0x6001CA9")]
		[Address(RVA = "0xC8D108", Offset = "0xC8D108", VA = "0xC8D108", Slot = "4")]
		public virtual void SetMetadata(GameObject dungeonItem, DungeonNodeSpawnData spawnData)
		{
		}

		[Token(Token = "0x6001CAA")]
		[Address(RVA = "0xC8D10C", Offset = "0xC8D10C", VA = "0xC8D10C")]
		public DungeonItemSpawnListener()
		{
		}
	}
	[Token(Token = "0x20003D5")]
	public class PooledDungeonSceneProvider : DungeonSceneProvider
	{
		[Token(Token = "0x40018B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Dictionary<string, Queue<GameObject>> pooledObjects;

		[Token(Token = "0x6001CAB")]
		[Address(RVA = "0xD58840", Offset = "0xD58840", VA = "0xD58840", Slot = "4")]
		public override void OnDungeonBuildStart()
		{
		}

		[Token(Token = "0x6001CAC")]
		[Address(RVA = "0xD58A8C", Offset = "0xD58A8C", VA = "0xD58A8C", Slot = "5")]
		public override void OnDungeonBuildStop()
		{
		}

		[Token(Token = "0x6001CAD")]
		[Address(RVA = "0xD58D48", Offset = "0xD58D48", VA = "0xD58D48", Slot = "8")]
		public override GameObject AddSprite(SpritePropTypeData spriteProp, Matrix4x4 transform, IDungeonSceneObjectInstantiator objectInstantiator)
		{
			return null;
		}

		[Token(Token = "0x6001CAE")]
		[Address(RVA = "0xD58F00", Offset = "0xD58F00", VA = "0xD58F00", Slot = "9")]
		public override void InvalidateNodeCache(string NodeId)
		{
		}

		[Token(Token = "0x6001CAF")]
		[Address(RVA = "0xD590DC", Offset = "0xD590DC", VA = "0xD590DC", Slot = "6")]
		public override GameObject AddGameObject(GameObjectPropTypeData gameObjectProp, Matrix4x4 transform, IDungeonSceneObjectInstantiator objectInstantiator)
		{
			return null;
		}

		[Token(Token = "0x6001CB0")]
		[Address(RVA = "0xD59424", Offset = "0xD59424", VA = "0xD59424", Slot = "7")]
		public override GameObject AddGameObjectFromArray(GameObjectArrayPropTypeData gameObjectArrayProp, int index, Matrix4x4 transform, IDungeonSceneObjectInstantiator objectInstantiator)
		{
			return null;
		}

		[Token(Token = "0x6001CB1")]
		[Address(RVA = "0xD5938C", Offset = "0xD5938C", VA = "0xD5938C")]
		private void RecursivelySetStatic(Transform trans)
		{
		}

		[Token(Token = "0x6001CB2")]
		[Address(RVA = "0xD596A0", Offset = "0xD596A0", VA = "0xD596A0")]
		public PooledDungeonSceneProvider()
		{
		}
	}
	[Token(Token = "0x20003D6")]
	public class BlurFilter : Filter
	{
		[Token(Token = "0x40018B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int radius;

		[Token(Token = "0x40018BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private int w;

		[Token(Token = "0x40018BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int h;

		[Token(Token = "0x6001CB3")]
		[Address(RVA = "0xB16668", Offset = "0xB16668", VA = "0xB16668")]
		public BlurFilter(int radius)
		{
		}

		[Token(Token = "0x6001CB4")]
		[Address(RVA = "0xB16694", Offset = "0xB16694", VA = "0xB16694", Slot = "4")]
		public float[,] ApplyFilter(float[,] data)
		{
			return null;
		}

		[Token(Token = "0x6001CB5")]
		[Address(RVA = "0xB16758", Offset = "0xB16758", VA = "0xB16758")]
		private void gaussBlur_4(float[,] scl, float[,] tcl, int r)
		{
		}

		[Token(Token = "0x6001CB6")]
		[Address(RVA = "0xB16A74", Offset = "0xB16A74", VA = "0xB16A74")]
		private void boxBlur_4(float[,] scl, float[,] tcl, int r)
		{
		}

		[Token(Token = "0x6001CB7")]
		[Address(RVA = "0xB17014", Offset = "0xB17014", VA = "0xB17014")]
		private float Get(float[,] data, int index)
		{
			return default(float);
		}

		[Token(Token = "0x6001CB8")]
		[Address(RVA = "0xB17074", Offset = "0xB17074", VA = "0xB17074")]
		private void Set(float[,] data, int index, float value)
		{
		}

		[Token(Token = "0x6001CB9")]
		[Address(RVA = "0xB16BAC", Offset = "0xB16BAC", VA = "0xB16BAC")]
		private void boxBlurH_4(float[,] scl, float[,] tcl, int r)
		{
		}

		[Token(Token = "0x6001CBA")]
		[Address(RVA = "0xB16DEC", Offset = "0xB16DEC", VA = "0xB16DEC")]
		private void boxBlurT_4(float[,] scl, float[,] tcl, int r)
		{
		}

		[Token(Token = "0x6001CBB")]
		[Address(RVA = "0xB16860", Offset = "0xB16860", VA = "0xB16860")]
		private int[] boxesForGauss(float sigma, int n)
		{
			return null;
		}

		[Token(Token = "0x6001CBC")]
		[Address(RVA = "0xB170D4", Offset = "0xB170D4", VA = "0xB170D4")]
		private float Round(float a)
		{
			return default(float);
		}
	}
	[Token(Token = "0x20003D7")]
	public interface Filter
	{
		[Token(Token = "0x6001CBD")]
		float[,] ApplyFilter(float[,] data);
	}
	[Serializable]
	[Token(Token = "0x20003D8")]
	public class MarkerReplacementEntry
	{
		[Token(Token = "0x40018BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string fromMarker;

		[Token(Token = "0x40018BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string toMarker;

		[Token(Token = "0x6001CBE")]
		[Address(RVA = "0xD52DE8", Offset = "0xD52DE8", VA = "0xD52DE8")]
		public MarkerReplacementEntry()
		{
		}
	}
	[Token(Token = "0x20003D9")]
	[ExecuteInEditMode]
	public class MarkerReplaceVolume : Volume
	{
		[Token(Token = "0x40018BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public MarkerReplacementEntry[] replacements;

		[Token(Token = "0x6001CBF")]
		[Address(RVA = "0xD52D24", Offset = "0xD52D24", VA = "0xD52D24")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001CC0")]
		[Address(RVA = "0xD52DE0", Offset = "0xD52DE0", VA = "0xD52DE0")]
		public MarkerReplaceVolume()
		{
		}
	}
	[Token(Token = "0x20003DA")]
	[ExecuteInEditMode]
	public class NegationVolume : Volume
	{
		[Token(Token = "0x40018BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public bool inverse;

		[Token(Token = "0x6001CC1")]
		[Address(RVA = "0xD58788", Offset = "0xD58788", VA = "0xD58788")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001CC2")]
		[Address(RVA = "0xD58838", Offset = "0xD58838", VA = "0xD58838")]
		public NegationVolume()
		{
		}
	}
	[Token(Token = "0x20003DB")]
	public class ThemeOverrideVolume : Volume
	{
		[Token(Token = "0x40018C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Graph overrideTheme;

		[Token(Token = "0x40018C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public bool useBaseThemeForMissingMarkers;

		[Token(Token = "0x6001CC3")]
		[Address(RVA = "0xE03C48", Offset = "0xE03C48", VA = "0xE03C48")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001CC4")]
		[Address(RVA = "0xE03D04", Offset = "0xE03D04", VA = "0xE03D04")]
		public ThemeOverrideVolume()
		{
		}
	}
	[Token(Token = "0x20003DC")]
	public class Volume : MonoBehaviour
	{
		[Token(Token = "0x40018C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Dungeon dungeon;

		[Token(Token = "0x40018C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool mode2D;

		[Token(Token = "0x40018C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		protected Color COLOR_WIRE;

		[Token(Token = "0x40018C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		protected Color COLOR_SOLID_DESELECTED;

		[Token(Token = "0x40018C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		protected Color COLOR_SOLID;

		[Token(Token = "0x6001CC5")]
		[Address(RVA = "0xBED1C8", Offset = "0xBED1C8", VA = "0xBED1C8")]
		public Bounds GetBounds()
		{
			return default(Bounds);
		}

		[Token(Token = "0x6001CC6")]
		[Address(RVA = "0xBED378", Offset = "0xBED378", VA = "0xBED378")]
		public void GetVolumeGridTransform(out IntVector positionGrid, out IntVector scaleGrid, UnityEngine.Vector3 LogicalGridSize)
		{
		}

		[Token(Token = "0x6001CC7")]
		[Address(RVA = "0xBED630", Offset = "0xBED630", VA = "0xBED630")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x6001CC8")]
		[Address(RVA = "0xBED7F0", Offset = "0xBED7F0", VA = "0xBED7F0")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x6001CC9")]
		[Address(RVA = "0xBED638", Offset = "0xBED638", VA = "0xBED638")]
		private void DrawGizmo(bool selected)
		{
		}

		[Token(Token = "0x6001CCA")]
		[Address(RVA = "0xBED7F8", Offset = "0xBED7F8", VA = "0xBED7F8")]
		public Volume()
		{
		}
	}
	[Token(Token = "0x20003DD")]
	[ExecuteInEditMode]
	public class InfinityDungeon : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000879")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B8F00", Offset = "0x8B8F00")]
		private sealed class <>c
		{
			[Token(Token = "0x40029E6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40029E7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Predicate<InfinityDungeonConfig> <>9__9_0;

			[Token(Token = "0x6003027")]
			[Address(RVA = "0xD4F3A8", Offset = "0xD4F3A8", VA = "0xD4F3A8")]
			public <>c()
			{
			}

			[Token(Token = "0x6003028")]
			[Address(RVA = "0xD4F3B0", Offset = "0xD4F3B0", VA = "0xD4F3B0")]
			internal bool <EditorUpdate>b__9_0(InfinityDungeonConfig c)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x40018C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform buildPositionTracker;

		[Token(Token = "0x40018C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float buildDistance;

		[Token(Token = "0x40018C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<Graph> dungeonThemes;

		[Token(Token = "0x40018CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform parentGameObject;

		[Token(Token = "0x40018CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject chunkDungeonTemplate;

		[Token(Token = "0x40018CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private List<InfinityDungeonConfig> spawnedChunks;

		[Token(Token = "0x40018CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		[HideInInspector]
		private bool dungeonBuilt;

		[Token(Token = "0x40018CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private InfinityDungeonConfig config;

		[Token(Token = "0x6001CCB")]
		[Address(RVA = "0xD4E0F4", Offset = "0xD4E0F4", VA = "0xD4E0F4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001CCC")]
		[Address(RVA = "0xD4E14C", Offset = "0xD4E14C", VA = "0xD4E14C")]
		public void EditorUpdate()
		{
		}

		[Token(Token = "0x6001CCD")]
		[Address(RVA = "0xD4E33C", Offset = "0xD4E33C", VA = "0xD4E33C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001CCE")]
		[Address(RVA = "0xD4E408", Offset = "0xD4E408", VA = "0xD4E408")]
		public void BuildDungeon()
		{
		}

		[Token(Token = "0x6001CCF")]
		[Address(RVA = "0xD4E34C", Offset = "0xD4E34C", VA = "0xD4E34C")]
		private void UpdateChunks()
		{
		}

		[Token(Token = "0x6001CD0")]
		[Address(RVA = "0xD4E6B8", Offset = "0xD4E6B8", VA = "0xD4E6B8")]
		private void UpdateChunks(UnityEngine.Vector3 buildPosition)
		{
		}

		[Token(Token = "0x6001CD1")]
		[Address(RVA = "0xD4EECC", Offset = "0xD4EECC", VA = "0xD4EECC")]
		private UnityEngine.Vector3 ClampOnBuildAxis(UnityEngine.Vector3 p)
		{
			return default(UnityEngine.Vector3);
		}

		[Token(Token = "0x6001CD2")]
		[Address(RVA = "0xD4F020", Offset = "0xD4F020", VA = "0xD4F020")]
		public Dungeon BuildDungeonChunk(UnityEngine.Vector3 chunkPosition)
		{
			return null;
		}

		[Token(Token = "0x6001CD3")]
		[Address(RVA = "0xD4E474", Offset = "0xD4E474", VA = "0xD4E474")]
		public void DestroyDungeon()
		{
		}

		[Token(Token = "0x6001CD4")]
		[Address(RVA = "0xD4F1D0", Offset = "0xD4F1D0", VA = "0xD4F1D0")]
		public void CopyDungeonConfig(InfinityDungeonConfig targetConfig)
		{
		}

		[Token(Token = "0x6001CD5")]
		[Address(RVA = "0xD4F2CC", Offset = "0xD4F2CC", VA = "0xD4F2CC")]
		public InfinityDungeon()
		{
		}
	}
	[Token(Token = "0x20003DE")]
	public abstract class InfinityDungeonConfig : DungeonConfig
	{
		[Token(Token = "0x40018CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public UnityEngine.Vector3 chunkPosition;

		[Token(Token = "0x40018D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public UnityEngine.Vector3 chunkSize;

		[Token(Token = "0x6001CD6")]
		public abstract UnityEngine.Vector3 GetLogicalCoord(UnityEngine.Vector3 p);

		[Token(Token = "0x6001CD7")]
		public abstract bool BuildAlongX();

		[Token(Token = "0x6001CD8")]
		public abstract bool BuildAlongY();

		[Token(Token = "0x6001CD9")]
		public abstract bool BuildAlongZ();

		[Token(Token = "0x6001CDA")]
		[Address(RVA = "0xD4F474", Offset = "0xD4F474", VA = "0xD4F474")]
		protected InfinityDungeonConfig()
		{
		}
	}
	[Token(Token = "0x20003DF")]
	public class InfinityDungeonEditorUpdate : MonoBehaviour
	{
		[Token(Token = "0x40018D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InfinityDungeon infinityDungeon;

		[Token(Token = "0x6001CDB")]
		[Address(RVA = "0xD4F47C", Offset = "0xD4F47C", VA = "0xD4F47C")]
		public void EditorUpdate()
		{
		}

		[Token(Token = "0x6001CDC")]
		[Address(RVA = "0xD4F50C", Offset = "0xD4F50C", VA = "0xD4F50C")]
		public InfinityDungeonEditorUpdate()
		{
		}
	}
	[Token(Token = "0x20003E0")]
	public class DungeonItemGroupInfo : MonoBehaviour
	{
		[Token(Token = "0x40018D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Dungeon dungeon;

		[Token(Token = "0x40018D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int groupId;

		[Token(Token = "0x40018D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string groupType;

		[Token(Token = "0x6001CDD")]
		[Address(RVA = "0xC8D100", Offset = "0xC8D100", VA = "0xC8D100")]
		public DungeonItemGroupInfo()
		{
		}
	}
	[Token(Token = "0x20003E1")]
	public class DungeonNavMeshSourceCollector
	{
		[Token(Token = "0x6001CDE")]
		[Address(RVA = "0xC8D16C", Offset = "0xC8D16C", VA = "0xC8D16C")]
		private static NavMeshBuildSource CreateMeshSource(Mesh mesh, Matrix4x4 transform)
		{
			return default(NavMeshBuildSource);
		}

		[Token(Token = "0x6001CDF")]
		[Address(RVA = "0xC8D210", Offset = "0xC8D210", VA = "0xC8D210")]
		public static void CollectSources(Dungeon dungeon, DungeonNavMeshSourceType MeshSourceType, ref List<NavMeshBuildSource> sources)
		{
		}

		[Token(Token = "0x6001CE0")]
		[Address(RVA = "0xC8D794", Offset = "0xC8D794", VA = "0xC8D794")]
		public DungeonNavMeshSourceCollector()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003E2")]
	public enum DungeonNavMeshSourceType
	{
		[Token(Token = "0x40018D6")]
		MeshData,
		[Token(Token = "0x40018D7")]
		Collision
	}
	[Token(Token = "0x20003E3")]
	public class DungeonRuntimeNavigation : MonoBehaviour
	{
		[Token(Token = "0x40018D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool enableRuntimeNavigation;

		[Token(Token = "0x40018D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public UnityEngine.Vector3 boundsPadding;

		[Token(Token = "0x40018DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool bakeTerrain;

		[Token(Token = "0x40018DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Terrain terrain;

		[Token(Token = "0x40018DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private DungeonNavMeshSourceType meshSourceType;

		[Token(Token = "0x40018DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Bounds dungeonBounds;

		[Token(Token = "0x40018DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private NavMeshData m_NavMesh;

		[Token(Token = "0x40018DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private NavMeshDataInstance m_Instance;

		[Token(Token = "0x40018E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private List<NavMeshBuildSource> meshSources;

		[Token(Token = "0x6001CE1")]
		[Address(RVA = "0xC8B028", Offset = "0xC8B028", VA = "0xC8B028")]
		public void BuildNavMesh()
		{
		}

		[Token(Token = "0x6001CE2")]
		[Address(RVA = "0xC8D974", Offset = "0xC8D974", VA = "0xC8D974")]
		private void DestroyNavMesh()
		{
		}

		[Token(Token = "0x6001CE3")]
		[Address(RVA = "0xC8DAE0", Offset = "0xC8DAE0", VA = "0xC8DAE0")]
		private void CollectMeshSources()
		{
		}

		[Token(Token = "0x6001CE4")]
		[Address(RVA = "0xC8D9EC", Offset = "0xC8D9EC", VA = "0xC8D9EC")]
		private void UpdateNavMesh(bool asyncUpdate = false)
		{
		}

		[Token(Token = "0x6001CE5")]
		[Address(RVA = "0xC8DD08", Offset = "0xC8DD08", VA = "0xC8DD08")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x6001CE6")]
		[Address(RVA = "0xC8DE9C", Offset = "0xC8DE9C", VA = "0xC8DE9C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001CE7")]
		[Address(RVA = "0xC8DEA0", Offset = "0xC8DEA0", VA = "0xC8DEA0")]
		public DungeonRuntimeNavigation()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003E4")]
	public struct DebugTextItem
	{
		[Token(Token = "0x40018E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string message;

		[Token(Token = "0x40018E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public UnityEngine.Vector3 position;

		[Token(Token = "0x40018E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public Color color;
	}
	[Token(Token = "0x20003E5")]
	public class DebugText3D : MonoBehaviour
	{
		[Token(Token = "0x40018E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public DebugTextItem[] items;

		[Token(Token = "0x6001CE8")]
		[Address(RVA = "0xC8A070", Offset = "0xC8A070", VA = "0xC8A070")]
		public DebugText3D()
		{
		}
	}
	[Token(Token = "0x20003E6")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x8B73B0", Offset = "0x8B73B0")]
	public class LevelMarkerList : IEnumerable<PropSocket>, IEnumerable
	{
		[Token(Token = "0x40018E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected List<PropSocket> markers;

		[Token(Token = "0x40018E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected int _SocketIdCounter;

		[Token(Token = "0x17000378")]
		public PropSocket Item
		{
			[Token(Token = "0x6001CEF")]
			[Address(RVA = "0xD527B4", Offset = "0xD527B4", VA = "0xD527B4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000379")]
		public int Count
		{
			[Token(Token = "0x6001CF0")]
			[Address(RVA = "0xD5282C", Offset = "0xD5282C", VA = "0xD5282C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6001CE9")]
		[Address(RVA = "0xD52508", Offset = "0xD52508", VA = "0xD52508", Slot = "4")]
		public IEnumerator<PropSocket> GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6001CEA")]
		[Address(RVA = "0xD52594", Offset = "0xD52594", VA = "0xD52594", Slot = "5")]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6001CEB")]
		[Address(RVA = "0xD52620", Offset = "0xD52620", VA = "0xD52620", Slot = "6")]
		public virtual void Add(PropSocket marker)
		{
		}

		[Token(Token = "0x6001CEC")]
		[Address(RVA = "0xD52688", Offset = "0xD52688", VA = "0xD52688", Slot = "7")]
		public virtual void AddRange(PropSocket[] markerList)
		{
		}

		[Token(Token = "0x6001CED")]
		[Address(RVA = "0xD526F0", Offset = "0xD526F0", VA = "0xD526F0", Slot = "8")]
		public virtual void Remove(PropSocket marker)
		{
		}

		[Token(Token = "0x6001CEE")]
		[Address(RVA = "0xD52758", Offset = "0xD52758", VA = "0xD52758", Slot = "9")]
		public virtual void Clear()
		{
		}

		[Token(Token = "0x6001CF1")]
		[Address(RVA = "0xD5287C", Offset = "0xD5287C", VA = "0xD5287C", Slot = "10")]
		public virtual IEnumerable<PropSocket> GetMarkersInSearchArea(UnityEngine.Vector2 center, float radius)
		{
			return null;
		}

		[Token(Token = "0x6001CF2")]
		[Address(RVA = "0xD52884", Offset = "0xD52884", VA = "0xD52884")]
		public PropSocket EmitMarker(string SocketType, Matrix4x4 transform, IntVector gridPosition, int cellId)
		{
			return null;
		}

		[Token(Token = "0x6001CF3")]
		[Address(RVA = "0xD528BC", Offset = "0xD528BC", VA = "0xD528BC")]
		public PropSocket EmitMarker(string SocketType, Matrix4x4 transform, IntVector gridPosition, int cellId, object metadata)
		{
			return null;
		}

		[Token(Token = "0x6001CF4")]
		[Address(RVA = "0xD52A04", Offset = "0xD52A04", VA = "0xD52A04")]
		public void EmitMarker(string SocketType, Matrix4x4 _transform, int count, UnityEngine.Vector3 InterOffset, IntVector gridPosition, int cellId, UnityEngine.Vector3 LogicalToWorldScale)
		{
		}

		[Token(Token = "0x6001CF5")]
		[Address(RVA = "0xD52A3C", Offset = "0xD52A3C", VA = "0xD52A3C")]
		public void EmitMarker(string SocketType, Matrix4x4 _transform, int count, UnityEngine.Vector3 InterOffset, IntVector gridPosition, int cellId, UnityEngine.Vector3 LogicalToWorldScale, object metadata)
		{
		}

		[Token(Token = "0x6001CF6")]
		[Address(RVA = "0xD52CB4", Offset = "0xD52CB4", VA = "0xD52CB4")]
		public LevelMarkerList()
		{
		}
	}
	[Token(Token = "0x20003E7")]
	public class SpatialPartionedLevelMarkerList : LevelMarkerList
	{
		[Token(Token = "0x40018E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float partitionCellSize;

		[Token(Token = "0x40018E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Dictionary<IntVector2, List<PropSocket>> buckets;

		[Token(Token = "0x6001CF7")]
		[Address(RVA = "0xE0221C", Offset = "0xE0221C", VA = "0xE0221C")]
		public SpatialPartionedLevelMarkerList(float partitionCellSize)
		{
		}

		[Token(Token = "0x6001CF8")]
		[Address(RVA = "0xE022A8", Offset = "0xE022A8", VA = "0xE022A8")]
		private IntVector2 GetBucketCoord(PropSocket marker)
		{
			return default(IntVector2);
		}

		[Token(Token = "0x6001CF9")]
		[Address(RVA = "0xE02398", Offset = "0xE02398", VA = "0xE02398")]
		private IntVector2 GetBucketCoord(UnityEngine.Vector2 position)
		{
			return default(IntVector2);
		}

		[Token(Token = "0x6001CFA")]
		[Address(RVA = "0xE022E0", Offset = "0xE022E0", VA = "0xE022E0")]
		private IntVector2 GetBucketCoord(float x, float z)
		{
			return default(IntVector2);
		}

		[Token(Token = "0x6001CFB")]
		[Address(RVA = "0xE0239C", Offset = "0xE0239C", VA = "0xE0239C", Slot = "6")]
		public override void Add(PropSocket marker)
		{
		}

		[Token(Token = "0x6001CFC")]
		[Address(RVA = "0xE024B0", Offset = "0xE024B0", VA = "0xE024B0", Slot = "8")]
		public override void Remove(PropSocket marker)
		{
		}

		[Token(Token = "0x6001CFD")]
		[Address(RVA = "0xE02584", Offset = "0xE02584", VA = "0xE02584", Slot = "10")]
		public override IEnumerable<PropSocket> GetMarkersInSearchArea(UnityEngine.Vector2 center, float radius)
		{
			return null;
		}

		[Token(Token = "0x6001CFE")]
		[Address(RVA = "0xE02758", Offset = "0xE02758", VA = "0xE02758", Slot = "9")]
		public override void Clear()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003E8")]
	public struct IntVector
	{
		[Token(Token = "0x40018E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		public int x;

		[Token(Token = "0x40018EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		[SerializeField]
		public int y;

		[Token(Token = "0x40018EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[SerializeField]
		public int z;

		[Token(Token = "0x40018EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly IntVector Zero;

		[Token(Token = "0x6001CFF")]
		[Address(RVA = "0x97D0E8", Offset = "0x97D0E8", VA = "0x97D0E8")]
		public IntVector(UnityEngine.Vector3 v)
		{
		}

		[Token(Token = "0x6001D00")]
		[Address(RVA = "0x97D0F0", Offset = "0x97D0F0", VA = "0x97D0F0")]
		public IntVector(int x, int y, int z)
		{
		}

		[Token(Token = "0x6001D01")]
		[Address(RVA = "0x97D0FC", Offset = "0x97D0FC", VA = "0x97D0FC")]
		public void Set(int x, int y, int z)
		{
		}

		[Token(Token = "0x6001D02")]
		[Address(RVA = "0x97D108", Offset = "0x97D108", VA = "0x97D108")]
		public float DistanceSq()
		{
			return default(float);
		}

		[Token(Token = "0x6001D03")]
		[Address(RVA = "0x97D124", Offset = "0x97D124", VA = "0x97D124")]
		public float Distance()
		{
			return default(float);
		}

		[Token(Token = "0x6001D04")]
		[Address(RVA = "0x97D12C", Offset = "0x97D12C", VA = "0x97D12C")]
		public UnityEngine.Vector3 ToVector3()
		{
			return default(UnityEngine.Vector3);
		}

		[Token(Token = "0x6001D05")]
		[Address(RVA = "0xD4F630", Offset = "0xD4F630", VA = "0xD4F630")]
		public static IntVector operator +(IntVector a, IntVector b)
		{
			return default(IntVector);
		}

		[Token(Token = "0x6001D06")]
		[Address(RVA = "0xD4F64C", Offset = "0xD4F64C", VA = "0xD4F64C")]
		public static IntVector operator -(IntVector a, IntVector b)
		{
			return default(IntVector);
		}

		[Token(Token = "0x6001D07")]
		[Address(RVA = "0xD4F668", Offset = "0xD4F668", VA = "0xD4F668")]
		public static IntVector operator *(IntVector a, IntVector b)
		{
			return default(IntVector);
		}

		[Token(Token = "0x6001D08")]
		[Address(RVA = "0xD4F684", Offset = "0xD4F684", VA = "0xD4F684")]
		public static UnityEngine.Vector3 operator *(IntVector a, UnityEngine.Vector3 b)
		{
			return default(UnityEngine.Vector3);
		}

		[Token(Token = "0x6001D09")]
		[Address(RVA = "0xD4F6A4", Offset = "0xD4F6A4", VA = "0xD4F6A4")]
		public static IntVector operator /(IntVector a, IntVector b)
		{
			return default(IntVector);
		}

		[Token(Token = "0x6001D0A")]
		[Address(RVA = "0xD4F6C0", Offset = "0xD4F6C0", VA = "0xD4F6C0")]
		public static IntVector operator +(IntVector a, int b)
		{
			return default(IntVector);
		}

		[Token(Token = "0x6001D0B")]
		[Address(RVA = "0xD4F6D8", Offset = "0xD4F6D8", VA = "0xD4F6D8")]
		public static IntVector operator -(IntVector a, int b)
		{
			return default(IntVector);
		}

		[Token(Token = "0x6001D0C")]
		[Address(RVA = "0xD4F6F0", Offset = "0xD4F6F0", VA = "0xD4F6F0")]
		public static IntVector operator *(IntVector a, int b)
		{
			return default(IntVector);
		}

		[Token(Token = "0x6001D0D")]
		[Address(RVA = "0xD4F708", Offset = "0xD4F708", VA = "0xD4F708")]
		public static IntVector operator /(IntVector a, int b)
		{
			return default(IntVector);
		}

		[Token(Token = "0x6001D0E")]
		[Address(RVA = "0xD4F720", Offset = "0xD4F720", VA = "0xD4F720")]
		public static bool operator ==(IntVector a, IntVector b)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D0F")]
		[Address(RVA = "0xD4F750", Offset = "0xD4F750", VA = "0xD4F750")]
		public static bool operator !=(IntVector a, IntVector b)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D10")]
		[Address(RVA = "0x97D134", Offset = "0x97D134", VA = "0x97D134", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D11")]
		[Address(RVA = "0x97D13C", Offset = "0x97D13C", VA = "0x97D13C", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x6001D12")]
		[Address(RVA = "0xD4F8B4", Offset = "0xD4F8B4", VA = "0xD4F8B4")]
		public static UnityEngine.Vector3 ToV3(IntVector iv)
		{
			return default(UnityEngine.Vector3);
		}

		[Token(Token = "0x6001D13")]
		[Address(RVA = "0x97D150", Offset = "0x97D150", VA = "0x97D150", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x20003E9")]
	public struct IntVector2
	{
		[Token(Token = "0x40018ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		public int x;

		[Token(Token = "0x40018EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		[SerializeField]
		public int y;

		[Token(Token = "0x40018EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly IntVector2 Zero;

		[Token(Token = "0x6001D15")]
		[Address(RVA = "0x97D158", Offset = "0x97D158", VA = "0x97D158")]
		public IntVector2(UnityEngine.Vector3 v)
		{
		}

		[Token(Token = "0x6001D16")]
		[Address(RVA = "0x97D160", Offset = "0x97D160", VA = "0x97D160")]
		public IntVector2(int x, int y)
		{
		}

		[Token(Token = "0x6001D17")]
		[Address(RVA = "0x97D168", Offset = "0x97D168", VA = "0x97D168")]
		public void Set(int x, int y)
		{
		}

		[Token(Token = "0x6001D18")]
		[Address(RVA = "0x97D170", Offset = "0x97D170", VA = "0x97D170")]
		public int ManhattanDistance()
		{
			return default(int);
		}

		[Token(Token = "0x6001D19")]
		[Address(RVA = "0x97D17C", Offset = "0x97D17C", VA = "0x97D17C")]
		public float DistanceSq()
		{
			return default(float);
		}

		[Token(Token = "0x6001D1A")]
		[Address(RVA = "0x97D190", Offset = "0x97D190", VA = "0x97D190")]
		public IntVector2 Abs()
		{
			return default(IntVector2);
		}

		[Token(Token = "0x6001D1B")]
		[Address(RVA = "0x97D198", Offset = "0x97D198", VA = "0x97D198")]
		public float Distance()
		{
			return default(float);
		}

		[Token(Token = "0x6001D1C")]
		[Address(RVA = "0x97D1A0", Offset = "0x97D1A0", VA = "0x97D1A0")]
		public UnityEngine.Vector2 ToVector2()
		{
			return default(UnityEngine.Vector2);
		}

		[Token(Token = "0x6001D1D")]
		[Address(RVA = "0xD4FC20", Offset = "0xD4FC20", VA = "0xD4FC20")]
		public static IntVector2 operator +(IntVector2 a, IntVector2 b)
		{
			return default(IntVector2);
		}

		[Token(Token = "0x6001D1E")]
		[Address(RVA = "0xD4FC38", Offset = "0xD4FC38", VA = "0xD4FC38")]
		public static IntVector2 operator -(IntVector2 a, IntVector2 b)
		{
			return default(IntVector2);
		}

		[Token(Token = "0x6001D1F")]
		[Address(RVA = "0xD4FC50", Offset = "0xD4FC50", VA = "0xD4FC50")]
		public static IntVector2 operator *(IntVector2 a, IntVector2 b)
		{
			return default(IntVector2);
		}

		[Token(Token = "0x6001D20")]
		[Address(RVA = "0xD4FC68", Offset = "0xD4FC68", VA = "0xD4FC68")]
		public static UnityEngine.Vector3 operator *(IntVector2 a, UnityEngine.Vector3 b)
		{
			return default(UnityEngine.Vector3);
		}

		[Token(Token = "0x6001D21")]
		[Address(RVA = "0xD4FC84", Offset = "0xD4FC84", VA = "0xD4FC84")]
		public static IntVector2 operator /(IntVector2 a, IntVector2 b)
		{
			return default(IntVector2);
		}

		[Token(Token = "0x6001D22")]
		[Address(RVA = "0xD4FC9C", Offset = "0xD4FC9C", VA = "0xD4FC9C")]
		public static IntVector2 operator +(IntVector2 a, int b)
		{
			return default(IntVector2);
		}

		[Token(Token = "0x6001D23")]
		[Address(RVA = "0xD4FCB0", Offset = "0xD4FCB0", VA = "0xD4FCB0")]
		public static IntVector2 operator -(IntVector2 a, int b)
		{
			return default(IntVector2);
		}

		[Token(Token = "0x6001D24")]
		[Address(RVA = "0xD4FCC4", Offset = "0xD4FCC4", VA = "0xD4FCC4")]
		public static IntVector2 operator *(IntVector2 a, int b)
		{
			return default(IntVector2);
		}

		[Token(Token = "0x6001D25")]
		[Address(RVA = "0xD4FCD8", Offset = "0xD4FCD8", VA = "0xD4FCD8")]
		public static IntVector2 operator /(IntVector2 a, int b)
		{
			return default(IntVector2);
		}

		[Token(Token = "0x6001D26")]
		[Address(RVA = "0x97D1D8", Offset = "0x97D1D8", VA = "0x97D1D8", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D27")]
		[Address(RVA = "0x97D1E0", Offset = "0x97D1E0", VA = "0x97D1E0", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x6001D28")]
		[Address(RVA = "0xD4FD90", Offset = "0xD4FD90", VA = "0xD4FD90")]
		public static UnityEngine.Vector2 ToV2(IntVector2 iv)
		{
			return default(UnityEngine.Vector2);
		}
	}
	[Serializable]
	[Token(Token = "0x20003EA")]
	public struct Rectangle
	{
		[Token(Token = "0x40018F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private IntVector location;

		[Token(Token = "0x40018F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[SerializeField]
		private IntVector size;

		[Token(Token = "0x1700037A")]
		public IntVector Location
		{
			[Token(Token = "0x6001D2C")]
			[Address(RVA = "0x97D21C", Offset = "0x97D21C", VA = "0x97D21C")]
			get
			{
				return default(IntVector);
			}
			[Token(Token = "0x6001D2D")]
			[Address(RVA = "0x97D22C", Offset = "0x97D22C", VA = "0x97D22C")]
			set
			{
			}
		}

		[Token(Token = "0x1700037B")]
		public IntVector Size
		{
			[Token(Token = "0x6001D2E")]
			[Address(RVA = "0x97D238", Offset = "0x97D238", VA = "0x97D238")]
			get
			{
				return default(IntVector);
			}
			[Token(Token = "0x6001D2F")]
			[Address(RVA = "0x97D248", Offset = "0x97D248", VA = "0x97D248")]
			set
			{
			}
		}

		[Token(Token = "0x1700037C")]
		public int X
		{
			[Token(Token = "0x6001D30")]
			[Address(RVA = "0x97D254", Offset = "0x97D254", VA = "0x97D254")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700037D")]
		public int Z
		{
			[Token(Token = "0x6001D31")]
			[Address(RVA = "0x97D25C", Offset = "0x97D25C", VA = "0x97D25C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700037E")]
		public int Width
		{
			[Token(Token = "0x6001D32")]
			[Address(RVA = "0x97D264", Offset = "0x97D264", VA = "0x97D264")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700037F")]
		public int Length
		{
			[Token(Token = "0x6001D33")]
			[Address(RVA = "0x97D26C", Offset = "0x97D26C", VA = "0x97D26C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000380")]
		public int Left
		{
			[Token(Token = "0x6001D34")]
			[Address(RVA = "0x97D274", Offset = "0x97D274", VA = "0x97D274")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000381")]
		public int Right
		{
			[Token(Token = "0x6001D35")]
			[Address(RVA = "0x97D27C", Offset = "0x97D27C", VA = "0x97D27C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000382")]
		public int Back
		{
			[Token(Token = "0x6001D36")]
			[Address(RVA = "0x97D28C", Offset = "0x97D28C", VA = "0x97D28C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000383")]
		public int Front
		{
			[Token(Token = "0x6001D37")]
			[Address(RVA = "0x97D294", Offset = "0x97D294", VA = "0x97D294")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6001D2A")]
		[Address(RVA = "0x97D1EC", Offset = "0x97D1EC", VA = "0x97D1EC")]
		public Rectangle(int x, int z, int width, int length)
		{
		}

		[Token(Token = "0x6001D2B")]
		[Address(RVA = "0x97D208", Offset = "0x97D208", VA = "0x97D208")]
		public Rectangle(IntVector location, IntVector size)
		{
		}

		[Token(Token = "0x6001D38")]
		[Address(RVA = "0x97D2A4", Offset = "0x97D2A4", VA = "0x97D2A4")]
		public void SetY(int y)
		{
		}

		[Token(Token = "0x6001D39")]
		[Address(RVA = "0x97D2AC", Offset = "0x97D2AC", VA = "0x97D2AC")]
		public IntVector Center()
		{
			return default(IntVector);
		}

		[Token(Token = "0x6001D3A")]
		[Address(RVA = "0xD598E0", Offset = "0xD598E0", VA = "0xD598E0")]
		private static UnityEngine.Vector3 ToVector3(IntVector iv)
		{
			return default(UnityEngine.Vector3);
		}

		[Token(Token = "0x6001D3B")]
		[Address(RVA = "0x97D2C8", Offset = "0x97D2C8", VA = "0x97D2C8")]
		public UnityEngine.Vector3 CenterF()
		{
			return default(UnityEngine.Vector3);
		}

		[Token(Token = "0x6001D3C")]
		[Address(RVA = "0x97D2D0", Offset = "0x97D2D0", VA = "0x97D2D0")]
		public bool Contains(Rectangle rect)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D3D")]
		[Address(RVA = "0x97D32C", Offset = "0x97D32C", VA = "0x97D32C")]
		public bool Contains(IntVector Point)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D3E")]
		[Address(RVA = "0x97D370", Offset = "0x97D370", VA = "0x97D370")]
		public bool Contains(int x, int z)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D3F")]
		[Address(RVA = "0xD59AE4", Offset = "0xD59AE4", VA = "0xD59AE4")]
		public static Rectangle Intersect(Rectangle a, Rectangle b)
		{
			return default(Rectangle);
		}

		[Token(Token = "0x6001D40")]
		[Address(RVA = "0x97D3B4", Offset = "0x97D3B4", VA = "0x97D3B4")]
		public bool IntersectsWith(Rectangle rect)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D41")]
		[Address(RVA = "0xD51EAC", Offset = "0xD51EAC", VA = "0xD51EAC")]
		public static Rectangle ExpandBounds(Rectangle rect, int distance)
		{
			return default(Rectangle);
		}

		[Token(Token = "0x6001D42")]
		[Address(RVA = "0x97D410", Offset = "0x97D410", VA = "0x97D410")]
		public IntVector[] GetBorderPoints()
		{
			return null;
		}
	}
	[Token(Token = "0x20003EB")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0x8B73E8", Offset = "0x8B73E8")]
	public class MetaAttribute : Attribute
	{
		[Token(Token = "0x40018F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string displayText;

		[Token(Token = "0x6001D43")]
		[Address(RVA = "0xD52DF0", Offset = "0xD52DF0", VA = "0xD52DF0")]
		public MetaAttribute(string displayText)
		{
		}
	}
}
namespace DungeonArchitect.Utils
{
	[Token(Token = "0x20003EC")]
	public class Blackboard
	{
		[Token(Token = "0x40018F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private BlackboardDatabase<int> intEntries;

		[Token(Token = "0x40018F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private BlackboardDatabase<float> floatEntries;

		[Token(Token = "0x40018F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private BlackboardDatabase<string> stringEntries;

		[Token(Token = "0x40018F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private BlackboardDatabase<UnityEngine.Vector3> vectorEntries;

		[Token(Token = "0x40018F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private BlackboardDatabase<IntVector> intVectorEntries;

		[Token(Token = "0x17000384")]
		public BlackboardDatabase<int> IntEntries
		{
			[Token(Token = "0x6001D44")]
			[Address(RVA = "0xBE8C50", Offset = "0xBE8C50", VA = "0xBE8C50")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000385")]
		public BlackboardDatabase<float> FloatEntries
		{
			[Token(Token = "0x6001D45")]
			[Address(RVA = "0xBE8C58", Offset = "0xBE8C58", VA = "0xBE8C58")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000386")]
		public BlackboardDatabase<string> StringEntries
		{
			[Token(Token = "0x6001D46")]
			[Address(RVA = "0xBE8C60", Offset = "0xBE8C60", VA = "0xBE8C60")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000387")]
		public BlackboardDatabase<UnityEngine.Vector3> VectorEntries
		{
			[Token(Token = "0x6001D47")]
			[Address(RVA = "0xBE8C68", Offset = "0xBE8C68", VA = "0xBE8C68")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000388")]
		public BlackboardDatabase<IntVector> IntVectorEntries
		{
			[Token(Token = "0x6001D48")]
			[Address(RVA = "0xBE8C70", Offset = "0xBE8C70", VA = "0xBE8C70")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001D49")]
		[Address(RVA = "0xBE8C78", Offset = "0xBE8C78", VA = "0xBE8C78")]
		public Blackboard()
		{
		}
	}
	[Token(Token = "0x20003ED")]
	public class BlackboardDatabase<T>
	{
		[Token(Token = "0x40018F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T defaultValue;

		[Token(Token = "0x40018F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Dictionary<string, T> database;

		[Token(Token = "0x6001D4A")]
		public BlackboardDatabase(T defaultValue)
		{
		}

		[Token(Token = "0x6001D4B")]
		public void SetValue(string key, T value)
		{
		}

		[Token(Token = "0x6001D4C")]
		public T GetValue(string key)
		{
			return (T)null;
		}
	}
	[Token(Token = "0x20003EE")]
	public class ColorUtils
	{
		[Token(Token = "0x6001D4D")]
		[Address(RVA = "0xBE8E2C", Offset = "0xBE8E2C", VA = "0xBE8E2C")]
		public static Color BrightenColor(Color color, float saturationMultiplier, float brightnessMultiplier)
		{
			return default(Color);
		}

		[Token(Token = "0x6001D4E")]
		[Address(RVA = "0xBE8F24", Offset = "0xBE8F24", VA = "0xBE8F24")]
		public ColorUtils()
		{
		}
	}
	[Token(Token = "0x20003EF")]
	public class DebugDrawUtils
	{
		[Token(Token = "0x6001D4F")]
		[Address(RVA = "0xBE8F2C", Offset = "0xBE8F2C", VA = "0xBE8F2C")]
		public static void DrawBounds(Rectangle bounds, Color color, UnityEngine.Vector3 gridScale, bool mode2D)
		{
		}

		[Token(Token = "0x6001D50")]
		[Address(RVA = "0xBE930C", Offset = "0xBE930C", VA = "0xBE930C")]
		public static void DrawMarker(PropSocket marker, Color color, bool mode2D)
		{
		}

		[Token(Token = "0x6001D51")]
		[Address(RVA = "0xBE943C", Offset = "0xBE943C", VA = "0xBE943C")]
		public static void DrawPoint(UnityEngine.Vector3 position, Color color, bool mode2D)
		{
		}

		[Token(Token = "0x6001D52")]
		[Address(RVA = "0xBE9550", Offset = "0xBE9550", VA = "0xBE9550")]
		private static UnityEngine.Vector3 FlipFor2D(UnityEngine.Vector3 v)
		{
			return default(UnityEngine.Vector3);
		}

		[Token(Token = "0x6001D53")]
		[Address(RVA = "0xBE91B8", Offset = "0xBE91B8", VA = "0xBE91B8")]
		public static void DrawLine(UnityEngine.Vector3 start, UnityEngine.Vector3 end, Color color, float duration, bool depthTest, bool mode2D)
		{
		}

		[Token(Token = "0x6001D54")]
		[Address(RVA = "0xBE9590", Offset = "0xBE9590", VA = "0xBE9590")]
		private static UnityEngine.Vector3 GetPointOnCircle(float angle)
		{
			return default(UnityEngine.Vector3);
		}

		[Token(Token = "0x6001D55")]
		[Address(RVA = "0xBE9648", Offset = "0xBE9648", VA = "0xBE9648")]
		public static void DrawCircle(UnityEngine.Vector3 center, float radius, Color color)
		{
		}

		[Token(Token = "0x6001D56")]
		[Address(RVA = "0xBE966C", Offset = "0xBE966C", VA = "0xBE966C")]
		public static void DrawCircle(UnityEngine.Vector3 center, float radius, Color color, float segmentMultiplier)
		{
		}

		[Token(Token = "0x6001D57")]
		[Address(RVA = "0xBE98A8", Offset = "0xBE98A8", VA = "0xBE98A8")]
		public DebugDrawUtils()
		{
		}
	}
	[Token(Token = "0x20003F0")]
	public class DungeonConstants
	{
		[Token(Token = "0x40018FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly string ST_FENCE;

		[Token(Token = "0x40018FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static readonly string ST_FENCESEPARATOR;

		[Token(Token = "0x40018FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static readonly string ST_DOOR;

		[Token(Token = "0x40018FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static readonly string ST_DOOR2D;

		[Token(Token = "0x40018FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static readonly string ST_DOOR2D_90;

		[Token(Token = "0x40018FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static readonly string ST_WALL;

		[Token(Token = "0x4001900")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public static readonly string ST_WALL2D;

		[Token(Token = "0x4001901")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public static readonly string ST_WALLSEPARATOR;

		[Token(Token = "0x4001902")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public static readonly string ST_GROUND;

		[Token(Token = "0x4001903")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public static readonly string ST_GROUND2D;

		[Token(Token = "0x4001904")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public static readonly string ST_STAIR;

		[Token(Token = "0x4001905")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public static readonly string ST_STAIR2X;

		[Token(Token = "0x4001906")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public static readonly string ST_WALLHALF;

		[Token(Token = "0x4001907")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public static readonly string ST_WALLHALFSEPARATOR;

		[Token(Token = "0x4001908")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public static readonly string ST_NONE;

		[Token(Token = "0x4001909")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public static readonly string ST_ROOMWALL;

		[Token(Token = "0x400190A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public static readonly string ST_ROOMWALLSEPARATOR;

		[Token(Token = "0x400190B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public static readonly string ST_ROOMOPENSPACE;

		[Token(Token = "0x400190C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public static readonly string ST_LIGHT;

		[Token(Token = "0x6001D58")]
		[Address(RVA = "0xBE98B0", Offset = "0xBE98B0", VA = "0xBE98B0")]
		public DungeonConstants()
		{
		}
	}
	[Token(Token = "0x20003F1")]
	public class GraphUtils
	{
		[Token(Token = "0x6001D5A")]
		[Address(RVA = "0xBE9A80", Offset = "0xBE9A80", VA = "0xBE9A80")]
		private static GraphNode[] GetDirectionalNodes(GraphPin pin, bool isIncoming)
		{
			return null;
		}

		[Token(Token = "0x6001D5B")]
		[Address(RVA = "0xBE9D30", Offset = "0xBE9D30", VA = "0xBE9D30")]
		private static GraphNode[] GetDirectionalNodes(GraphNode hostNode, bool isIncoming)
		{
			return null;
		}

		[Token(Token = "0x6001D5C")]
		[Address(RVA = "0xBE9FF8", Offset = "0xBE9FF8", VA = "0xBE9FF8")]
		public static GraphNode[] GetIncomingNodes(GraphPin pin)
		{
			return null;
		}

		[Token(Token = "0x6001D5D")]
		[Address(RVA = "0xBEA000", Offset = "0xBEA000", VA = "0xBEA000")]
		public static GraphNode[] GetOutgoingNodes(GraphPin pin)
		{
			return null;
		}

		[Token(Token = "0x6001D5E")]
		[Address(RVA = "0xBEA008", Offset = "0xBEA008", VA = "0xBEA008")]
		public static GraphNode[] GetIncomingNodes(GraphNode node)
		{
			return null;
		}

		[Token(Token = "0x6001D5F")]
		[Address(RVA = "0xBEA010", Offset = "0xBEA010", VA = "0xBEA010")]
		public static GraphNode[] GetOutgoingNodes(GraphNode node)
		{
			return null;
		}

		[Token(Token = "0x6001D60")]
		[Address(RVA = "0xBEA018", Offset = "0xBEA018", VA = "0xBEA018")]
		public GraphUtils()
		{
		}
	}
	[Token(Token = "0x20003F2")]
	public class InstanceCache
	{
		[Token(Token = "0x400190D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Dictionary<string, object> InstanceByType;

		[Token(Token = "0x6001D61")]
		[Address(RVA = "0xBEA020", Offset = "0xBEA020", VA = "0xBEA020")]
		public object GetInstance(string typeName)
		{
			return null;
		}

		[Token(Token = "0x6001D62")]
		[Address(RVA = "0xBEA11C", Offset = "0xBEA11C", VA = "0xBEA11C")]
		public InstanceCache()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003F3")]
	public class KeyValueDataEntryBase
	{
		[Token(Token = "0x400190E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		public string key;

		[Token(Token = "0x6001D63")]
		[Address(RVA = "0xBEA79C", Offset = "0xBEA79C", VA = "0xBEA79C", Slot = "4")]
		public virtual object GetValue()
		{
			return null;
		}

		[Token(Token = "0x6001D64")]
		[Address(RVA = "0xBEA7A4", Offset = "0xBEA7A4", VA = "0xBEA7A4", Slot = "5")]
		public virtual void SetValue(object value)
		{
		}

		[Token(Token = "0x6001D65")]
		[Address(RVA = "0xBEA7A8", Offset = "0xBEA7A8", VA = "0xBEA7A8")]
		public KeyValueDataEntryBase()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003F4")]
	public class KeyValueDataEntryTyped<T> : KeyValueDataEntryBase
	{
		[Token(Token = "0x400190F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		public T value;

		[Token(Token = "0x6001D66")]
		public override object GetValue()
		{
			return null;
		}

		[Token(Token = "0x6001D67")]
		public override void SetValue(object value)
		{
		}

		[Token(Token = "0x6001D68")]
		public KeyValueDataEntryTyped()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003F5")]
	public class KeyValueDataEntryFloat : KeyValueDataEntryTyped<float>
	{
		[Token(Token = "0x6001D69")]
		[Address(RVA = "0xBEA7B0", Offset = "0xBEA7B0", VA = "0xBEA7B0")]
		public KeyValueDataEntryFloat()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003F6")]
	public class KeyValueDataEntryInt : KeyValueDataEntryTyped<int>
	{
		[Token(Token = "0x6001D6A")]
		[Address(RVA = "0xBEA800", Offset = "0xBEA800", VA = "0xBEA800")]
		public KeyValueDataEntryInt()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003F7")]
	public class KeyValueDataEntryString : KeyValueDataEntryTyped<string>
	{
		[Token(Token = "0x6001D6B")]
		[Address(RVA = "0xBEA850", Offset = "0xBEA850", VA = "0xBEA850")]
		public KeyValueDataEntryString()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003F8")]
	public class KeyValueDataEntryVector3 : KeyValueDataEntryTyped<UnityEngine.Vector3>
	{
		[Token(Token = "0x6001D6C")]
		[Address(RVA = "0xBEA8F0", Offset = "0xBEA8F0", VA = "0xBEA8F0")]
		public KeyValueDataEntryVector3()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003F9")]
	public class KeyValueDataEntryVector2 : KeyValueDataEntryTyped<UnityEngine.Vector2>
	{
		[Token(Token = "0x6001D6D")]
		[Address(RVA = "0xBEA8A0", Offset = "0xBEA8A0", VA = "0xBEA8A0")]
		public KeyValueDataEntryVector2()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003FA")]
	public class KeyValueData
	{
		[Token(Token = "0x4001910")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private List<KeyValueDataEntryFloat> dataFloat;

		[Token(Token = "0x4001911")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private List<KeyValueDataEntryInt> dataInt;

		[Token(Token = "0x4001912")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private List<KeyValueDataEntryString> dataString;

		[Token(Token = "0x4001913")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private List<KeyValueDataEntryVector3> dataVector3;

		[Token(Token = "0x4001914")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private List<KeyValueDataEntryVector2> dataVector2;

		[Token(Token = "0x6001D6E")]
		[Address(RVA = "0xBEA18C", Offset = "0xBEA18C", VA = "0xBEA18C")]
		public bool GetFloat(string key, ref float value)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D6F")]
		[Address(RVA = "0xBEA1F8", Offset = "0xBEA1F8", VA = "0xBEA1F8")]
		public bool GetInt(string key, ref int value)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D70")]
		[Address(RVA = "0xBEA264", Offset = "0xBEA264", VA = "0xBEA264")]
		public bool GetString(string key, ref string value)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D71")]
		[Address(RVA = "0xBEA2D0", Offset = "0xBEA2D0", VA = "0xBEA2D0")]
		public bool GetVector3(string key, ref UnityEngine.Vector3 value)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D72")]
		[Address(RVA = "0xBEA33C", Offset = "0xBEA33C", VA = "0xBEA33C")]
		public bool GetVector2(string key, ref UnityEngine.Vector2 value)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D73")]
		[Address(RVA = "0xBEA3A8", Offset = "0xBEA3A8", VA = "0xBEA3A8")]
		public void Set(string key, float value)
		{
		}

		[Token(Token = "0x6001D74")]
		[Address(RVA = "0xBEA444", Offset = "0xBEA444", VA = "0xBEA444")]
		public void Set(string key, int value)
		{
		}

		[Token(Token = "0x6001D75")]
		[Address(RVA = "0xBEA4D8", Offset = "0xBEA4D8", VA = "0xBEA4D8")]
		public void Set(string key, string value)
		{
		}

		[Token(Token = "0x6001D76")]
		[Address(RVA = "0xBEA544", Offset = "0xBEA544", VA = "0xBEA544")]
		public void Set(string key, UnityEngine.Vector3 value)
		{
		}

		[Token(Token = "0x6001D77")]
		[Address(RVA = "0xBEA5F4", Offset = "0xBEA5F4", VA = "0xBEA5F4")]
		public void Set(string key, UnityEngine.Vector2 value)
		{
		}

		[Token(Token = "0x6001D78")]
		private void SetValue<T>(List<T> data, string key, object value) where T : KeyValueDataEntryBase, new()
		{
		}

		[Token(Token = "0x6001D79")]
		private bool GetValue<TEntry, TValue>(List<TEntry> data, string key, ref TValue value) where TEntry : KeyValueDataEntryBase
		{
			return default(bool);
		}

		[Token(Token = "0x6001D7A")]
		[Address(RVA = "0xBEA68C", Offset = "0xBEA68C", VA = "0xBEA68C")]
		public KeyValueData()
		{
		}
	}
	[Token(Token = "0x20003FB")]
	public class MathUtils
	{
		[Token(Token = "0x4001915")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly int INVALID_LOCATION;

		[Token(Token = "0x6001D7B")]
		[Address(RVA = "0xBEA940", Offset = "0xBEA940", VA = "0xBEA940")]
		public static Rectangle Copy(Rectangle other)
		{
			return default(Rectangle);
		}

		[Token(Token = "0x6001D7C")]
		[Address(RVA = "0xBEA9C8", Offset = "0xBEA9C8", VA = "0xBEA9C8")]
		public static UnityEngine.Vector3 Divide(UnityEngine.Vector3 a, UnityEngine.Vector3 b)
		{
			return default(UnityEngine.Vector3);
		}

		[Token(Token = "0x6001D7D")]
		[Address(RVA = "0xBEAA08", Offset = "0xBEAA08", VA = "0xBEAA08")]
		public static UnityEngine.Vector3 ToVector3(IntVector v)
		{
			return default(UnityEngine.Vector3);
		}

		[Token(Token = "0x6001D7E")]
		[Address(RVA = "0xBEAA4C", Offset = "0xBEAA4C", VA = "0xBEAA4C")]
		public static IntVector WorldToGrid(UnityEngine.Vector3 WorldCoord, UnityEngine.Vector3 GridCellSize)
		{
			return default(IntVector);
		}

		[Token(Token = "0x6001D7F")]
		[Address(RVA = "0xBEABD0", Offset = "0xBEABD0", VA = "0xBEABD0")]
		public static UnityEngine.Vector3 GridToWorld(UnityEngine.Vector3 GridCellSize, IntVector v)
		{
			return default(UnityEngine.Vector3);
		}

		[Token(Token = "0x6001D80")]
		[Address(RVA = "0xBEAC7C", Offset = "0xBEAC7C", VA = "0xBEAC7C")]
		public static UnityEngine.Vector3 GridToWorld(UnityEngine.Vector3 GridCellSize, UnityEngine.Vector3 v)
		{
			return default(UnityEngine.Vector3);
		}

		[Token(Token = "0x6001D81")]
		[Address(RVA = "0xBEAAFC", Offset = "0xBEAAFC", VA = "0xBEAAFC")]
		public static IntVector ToIntVector(UnityEngine.Vector3 v)
		{
			return default(IntVector);
		}

		[Token(Token = "0x6001D82")]
		[Address(RVA = "0xBEAD24", Offset = "0xBEAD24", VA = "0xBEAD24")]
		public static UnityEngine.Vector3 V3FloorToInt(UnityEngine.Vector3 v)
		{
			return default(UnityEngine.Vector3);
		}

		[Token(Token = "0x6001D83")]
		[Address(RVA = "0xBEADF8", Offset = "0xBEADF8", VA = "0xBEADF8")]
		public static UnityEngine.Vector3 V3RoundToInt(UnityEngine.Vector3 v)
		{
			return default(UnityEngine.Vector3);
		}

		[Token(Token = "0x6001D84")]
		[Address(RVA = "0xBEAECC", Offset = "0xBEAECC", VA = "0xBEAECC")]
		public static IntVector RoundToIntVector(UnityEngine.Vector3 v)
		{
			return default(IntVector);
		}

		[Token(Token = "0x6001D85")]
		[Address(RVA = "0xBEAFA0", Offset = "0xBEAFA0", VA = "0xBEAFA0")]
		public static UnityEngine.Vector3 SnapToGrid(UnityEngine.Vector3 position, UnityEngine.Vector3 gridCellSize)
		{
			return default(UnityEngine.Vector3);
		}

		[Token(Token = "0x6001D86")]
		[Address(RVA = "0xBEB048", Offset = "0xBEB048", VA = "0xBEB048")]
		public static UnityEngine.Vector3 SnapToGrid(UnityEngine.Vector3 position, UnityEngine.Vector3 gridCellSize, bool useRounding)
		{
			return default(UnityEngine.Vector3);
		}

		[Token(Token = "0x6001D87")]
		[Address(RVA = "0xBEB1B8", Offset = "0xBEB1B8", VA = "0xBEB1B8")]
		public static bool Intersects(Rect a, Rect b)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D88")]
		[Address(RVA = "0xBEB280", Offset = "0xBEB280", VA = "0xBEB280")]
		public static bool Intersects(Rect outer, GraphLink link)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D89")]
		[Address(RVA = "0xBEB4AC", Offset = "0xBEB4AC", VA = "0xBEB4AC")]
		public static UnityEngine.Vector2 ClosestPointOnRect(Rect rect, UnityEngine.Vector2 p)
		{
			return default(UnityEngine.Vector2);
		}

		[Token(Token = "0x6001D8A")]
		[Address(RVA = "0xBEB5A0", Offset = "0xBEB5A0", VA = "0xBEB5A0")]
		public static Rect ExpandRect(Rect bounds, float amount)
		{
			return default(Rect);
		}

		[Token(Token = "0x6001D8B")]
		[Address(RVA = "0xBEB650", Offset = "0xBEB650", VA = "0xBEB650")]
		public static UnityEngine.Vector2 ClampToRect(UnityEngine.Vector2 position, Rect bounds)
		{
			return default(UnityEngine.Vector2);
		}

		[Token(Token = "0x6001D8C")]
		[Address(RVA = "0xBEB76C", Offset = "0xBEB76C", VA = "0xBEB76C")]
		public static void FlipYZ(ref Bounds bounds)
		{
		}

		[Token(Token = "0x6001D8D")]
		[Address(RVA = "0xBEB828", Offset = "0xBEB828", VA = "0xBEB828")]
		public static UnityEngine.Vector3 FlipYZ(UnityEngine.Vector3 bounds)
		{
			return default(UnityEngine.Vector3);
		}

		[Token(Token = "0x6001D8E")]
		[Address(RVA = "0xBEB838", Offset = "0xBEB838", VA = "0xBEB838")]
		public static IntVector FlipYZ(IntVector bounds)
		{
			return default(IntVector);
		}

		[Token(Token = "0x6001D8F")]
		[Address(RVA = "0xBEB848", Offset = "0xBEB848", VA = "0xBEB848")]
		public static void Abs(ref UnityEngine.Vector3 v)
		{
		}

		[Token(Token = "0x6001D90")]
		public static void Shuffle<T>(List<T> Array, System.Random Random)
		{
		}

		[Token(Token = "0x6001D91")]
		public static void Shuffle<T>(T[] Array, System.Random Random)
		{
		}

		[Token(Token = "0x6001D92")]
		[Address(RVA = "0xBEB8C8", Offset = "0xBEB8C8", VA = "0xBEB8C8")]
		public static int[] GetShuffledIndices(int Count, System.Random Random)
		{
			return null;
		}

		[Token(Token = "0x6001D93")]
		[Address(RVA = "0xBEB9C4", Offset = "0xBEB9C4", VA = "0xBEB9C4")]
		public static Bounds TransformBounds(Matrix4x4 transform, Bounds bounds)
		{
			return default(Bounds);
		}

		[Token(Token = "0x6001D94")]
		[Address(RVA = "0xBEBE2C", Offset = "0xBEBE2C", VA = "0xBEBE2C")]
		public static Bounds TransformBoundsX(Matrix4x4 transform, Bounds localBounds)
		{
			return default(Bounds);
		}

		[Token(Token = "0x6001D95")]
		[Address(RVA = "0xBEC16C", Offset = "0xBEC16C", VA = "0xBEC16C")]
		public static bool V3Equals(UnityEngine.Vector3 a, UnityEngine.Vector3 b)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D96")]
		[Address(RVA = "0xBEC218", Offset = "0xBEC218", VA = "0xBEC218")]
		public static bool V3Equals(UnityEngine.Vector3 a, UnityEngine.Vector3 b, float threshold)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D97")]
		[Address(RVA = "0xBEC2E0", Offset = "0xBEC2E0", VA = "0xBEC2E0")]
		public static byte ToByte(float value01)
		{
			return default(byte);
		}

		[Token(Token = "0x6001D98")]
		[Address(RVA = "0xBEC368", Offset = "0xBEC368", VA = "0xBEC368")]
		public MathUtils()
		{
		}
	}
	[Token(Token = "0x20003FC")]
	public class Matrix
	{
		[Token(Token = "0x6001D9A")]
		[Address(RVA = "0xBE9430", Offset = "0xBE9430", VA = "0xBE9430")]
		public static UnityEngine.Vector3 GetTranslation(ref Matrix4x4 matrix)
		{
			return default(UnityEngine.Vector3);
		}

		[Token(Token = "0x6001D9B")]
		[Address(RVA = "0xBEC3C8", Offset = "0xBEC3C8", VA = "0xBEC3C8")]
		public static void SetTranslation(ref Matrix4x4 matrix, UnityEngine.Vector3 translate)
		{
		}

		[Token(Token = "0x6001D9C")]
		[Address(RVA = "0xBEC3D4", Offset = "0xBEC3D4", VA = "0xBEC3D4")]
		public static void SetTransform(out Matrix4x4 transform, UnityEngine.Vector3 position, Quaternion rotation, UnityEngine.Vector3 scale)
		{
		}

		[Token(Token = "0x6001D9D")]
		[Address(RVA = "0xBEC4C8", Offset = "0xBEC4C8", VA = "0xBEC4C8")]
		public static Quaternion GetRotation(ref Matrix4x4 matrix)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6001D9E")]
		[Address(RVA = "0xBEC5EC", Offset = "0xBEC5EC", VA = "0xBEC5EC")]
		public static UnityEngine.Vector3 GetScale(ref Matrix4x4 matrix)
		{
			return default(UnityEngine.Vector3);
		}

		[Token(Token = "0x6001D9F")]
		[Address(RVA = "0xBEC5F4", Offset = "0xBEC5F4", VA = "0xBEC5F4")]
		public static void DecomposeMatrix(ref Matrix4x4 matrix, out UnityEngine.Vector3 localPosition, out Quaternion localRotation, out UnityEngine.Vector3 localScale)
		{
		}

		[Token(Token = "0x6001DA0")]
		[Address(RVA = "0xBEC650", Offset = "0xBEC650", VA = "0xBEC650")]
		public static void SetTransformFromMatrix(Transform transform, ref Matrix4x4 matrix)
		{
		}

		[Token(Token = "0x6001DA1")]
		[Address(RVA = "0xBEC6B0", Offset = "0xBEC6B0", VA = "0xBEC6B0")]
		public static Matrix4x4 Copy(Matrix4x4 In)
		{
			return default(Matrix4x4);
		}

		[Token(Token = "0x6001DA2")]
		[Address(RVA = "0xBEC774", Offset = "0xBEC774", VA = "0xBEC774")]
		public static Matrix4x4 FromGameTransform(Transform t)
		{
			return default(Matrix4x4);
		}

		[Token(Token = "0x6001DA3")]
		[Address(RVA = "0xBEC884", Offset = "0xBEC884", VA = "0xBEC884")]
		public Matrix()
		{
		}
	}
	[Token(Token = "0x20003FD")]
	public class PMRandom
	{
		[Token(Token = "0x4001916")]
		private const int A = 16807;

		[Token(Token = "0x4001917")]
		private const int M = int.MaxValue;

		[Token(Token = "0x4001918")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private uint seed;

		[Token(Token = "0x4001919")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private System.Random random;

		[Token(Token = "0x17000389")]
		public System.Random UniformRandom
		{
			[Token(Token = "0x6001DA4")]
			[Address(RVA = "0xBECCF8", Offset = "0xBECCF8", VA = "0xBECCF8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001DA5")]
		[Address(RVA = "0xBECD00", Offset = "0xBECD00", VA = "0xBECD00")]
		public PMRandom()
		{
		}

		[Token(Token = "0x6001DA6")]
		[Address(RVA = "0xBECDE8", Offset = "0xBECDE8", VA = "0xBECDE8")]
		public PMRandom(uint seed)
		{
		}

		[Token(Token = "0x6001DA7")]
		[Address(RVA = "0xBECD74", Offset = "0xBECD74", VA = "0xBECD74")]
		public void Initialize(uint seed)
		{
		}

		[Token(Token = "0x6001DA8")]
		[Address(RVA = "0xBECE68", Offset = "0xBECE68", VA = "0xBECE68")]
		public float NextGaussianFloat()
		{
			return default(float);
		}

		[Token(Token = "0x6001DA9")]
		[Address(RVA = "0xBECF40", Offset = "0xBECF40", VA = "0xBECF40")]
		public float NextGaussianFloat(float mean, float stdDev)
		{
			return default(float);
		}

		[Token(Token = "0x6001DAA")]
		[Address(RVA = "0xBECF6C", Offset = "0xBECF6C", VA = "0xBECF6C")]
		public UnityEngine.Vector2 RandomPointOnCircle()
		{
			return default(UnityEngine.Vector2);
		}

		[Token(Token = "0x6001DAB")]
		[Address(RVA = "0xBED038", Offset = "0xBED038", VA = "0xBED038")]
		public float GetNextUniformFloat()
		{
			return default(float);
		}
	}
	[Token(Token = "0x20003FE")]
	public class TexturedMaterialInstances
	{
		[Token(Token = "0x400191A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Shader shader;

		[Token(Token = "0x400191B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Dictionary<Texture2D, Material> materialsByTexture;

		[Token(Token = "0x6001DAC")]
		[Address(RVA = "0xBED064", Offset = "0xBED064", VA = "0xBED064")]
		public TexturedMaterialInstances(Shader shader)
		{
		}

		[Token(Token = "0x6001DAD")]
		[Address(RVA = "0xBED0E8", Offset = "0xBED0E8", VA = "0xBED0E8")]
		public Material GetMaterial(Texture2D texture)
		{
			return null;
		}
	}
}
namespace DungeonArchitect.Utils.Noise
{
	[Token(Token = "0x20003FF")]
	public interface INoiseTable<T>
	{
		[Token(Token = "0x6001DAE")]
		void Init(int InSize, System.Random random);

		[Token(Token = "0x6001DAF")]
		float GetNoise(float u, float v);

		[Token(Token = "0x6001DB0")]
		NoiseTableCell<T> GetCell(float x, float y);
	}
	[Token(Token = "0x2000400")]
	public interface INoisePolicy<T>
	{
		[Token(Token = "0x6001DB1")]
		float Sample(float x, float y, INoiseTable<T> NoiseTable);

		[Token(Token = "0x6001DB2")]
		T GetRandom(System.Random random);
	}
	[Token(Token = "0x2000401")]
	public struct NoiseTableCell<T>
	{
		[Token(Token = "0x400191C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public T N00;

		[Token(Token = "0x400191D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public T N10;

		[Token(Token = "0x400191E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public T N01;

		[Token(Token = "0x400191F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public T N11;
	}
	[Token(Token = "0x2000402")]
	public abstract class NoiseTable<T> : INoiseTable<T>
	{
		[Token(Token = "0x4001920")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int size;

		[Token(Token = "0x4001921")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private List<T> data;

		[Token(Token = "0x4001922")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected INoisePolicy<T> noisePolicy;

		[Token(Token = "0x6001DB3")]
		protected abstract INoisePolicy<T> CreateNoisePolicy();

		[Token(Token = "0x6001DB4")]
		public void Init(int size, System.Random random)
		{
		}

		[Token(Token = "0x6001DB5")]
		public NoiseTableCell<T> GetCell(float x, float y)
		{
			return default(NoiseTableCell<T>);
		}

		[Token(Token = "0x6001DB6")]
		public float GetNoise(float u, float v)
		{
			return default(float);
		}

		[Token(Token = "0x6001DB7")]
		public float GetNoiseFBM(UnityEngine.Vector2 p, int octaves)
		{
			return default(float);
		}

		[Token(Token = "0x6001DB8")]
		private T GetTableData(int x, int y)
		{
			return (T)null;
		}

		[Token(Token = "0x6001DB9")]
		private int GetSize()
		{
			return default(int);
		}

		[Token(Token = "0x6001DBA")]
		private int IDX(int x, int y)
		{
			return default(int);
		}

		[Token(Token = "0x6001DBB")]
		protected NoiseTable()
		{
		}
	}
	[Token(Token = "0x2000403")]
	public class GradientNoisePolicy : INoisePolicy<UnityEngine.Vector2>
	{
		[Token(Token = "0x6001DBC")]
		[Address(RVA = "0xBEC88C", Offset = "0xBEC88C", VA = "0xBEC88C", Slot = "4")]
		public float Sample(float x, float y, INoiseTable<UnityEngine.Vector2> NoiseTable)
		{
			return default(float);
		}

		[Token(Token = "0x6001DBD")]
		[Address(RVA = "0xBECB88", Offset = "0xBECB88", VA = "0xBECB88", Slot = "5")]
		public UnityEngine.Vector2 GetRandom(System.Random random)
		{
			return default(UnityEngine.Vector2);
		}

		[Token(Token = "0x6001DBE")]
		[Address(RVA = "0xBECC44", Offset = "0xBECC44", VA = "0xBECC44")]
		public GradientNoisePolicy()
		{
		}
	}
	[Token(Token = "0x2000404")]
	public class GradientNoiseTable : NoiseTable<UnityEngine.Vector2>
	{
		[Token(Token = "0x6001DBF")]
		[Address(RVA = "0xBECC4C", Offset = "0xBECC4C", VA = "0xBECC4C", Slot = "7")]
		protected override INoisePolicy<UnityEngine.Vector2> CreateNoisePolicy()
		{
			return null;
		}

		[Token(Token = "0x6001DC0")]
		[Address(RVA = "0xBECCA8", Offset = "0xBECCA8", VA = "0xBECCA8")]
		public GradientNoiseTable()
		{
		}
	}
}
namespace DungeonArchitect.UI
{
	[Token(Token = "0x2000405")]
	public interface UIPlatform
	{
		[Token(Token = "0x1700038A")]
		UIDragDrop DragDrop
		{
			[Token(Token = "0x6001DC7")]
			get;
		}

		[Token(Token = "0x1700038B")]
		double timeSinceStartup
		{
			[Token(Token = "0x6001DC8")]
			get;
		}

		[Token(Token = "0x1700038C")]
		string clipboardText
		{
			[Token(Token = "0x6001DC9")]
			get;
			[Token(Token = "0x6001DCA")]
			set;
		}

		[Token(Token = "0x6001DC1")]
		void ShowObjectProperty(object obj);

		[Token(Token = "0x6001DC2")]
		void ShowObjectProperties(object[] obj);

		[Token(Token = "0x6001DC3")]
		string GetAssetPath(object obj);

		[Token(Token = "0x6001DC4")]
		void MarkAssetDirty(object obj);

		[Token(Token = "0x6001DC5")]
		void AddObjectToAsset(UnityEngine.Object objectToAdd, UnityEngine.Object assetObject);

		[Token(Token = "0x6001DC6")]
		IContextMenu CreateContextMenu();
	}
	[Token(Token = "0x2000406")]
	public interface IContextMenu
	{
		[Token(Token = "0x6001DCB")]
		void AddItem(string path, ContextMenuFunction func);

		[Token(Token = "0x6001DCC")]
		void AddItem(string path, ContextMenuFunctionUserData func, object userData);

		[Token(Token = "0x6001DCD")]
		void AddSeparator(string path);

		[Token(Token = "0x6001DCE")]
		void Show();
	}
	[Token(Token = "0x2000407")]
	public enum UIDragDropVisualMode
	{
		[Token(Token = "0x4001924")]
		None,
		[Token(Token = "0x4001925")]
		Copy,
		[Token(Token = "0x4001926")]
		Generic,
		[Token(Token = "0x4001927")]
		Move,
		[Token(Token = "0x4001928")]
		Reject
	}
	[Token(Token = "0x2000408")]
	public interface UIDragDrop
	{
		[Token(Token = "0x6001DCF")]
		void PrepareStartDrag();

		[Token(Token = "0x6001DD0")]
		void StartDrag(string title);

		[Token(Token = "0x6001DD1")]
		void SetVisualMode(UIDragDropVisualMode visualMode);

		[Token(Token = "0x6001DD2")]
		void AcceptDrag();
	}
	[Token(Token = "0x2000409")]
	public delegate void ContextMenuFunction();
	[Token(Token = "0x200040A")]
	public delegate void ContextMenuFunctionUserData(object userData);
	[Token(Token = "0x200040B")]
	public class NullPlatform : UIPlatform
	{
		[Token(Token = "0x1700038D")]
		public UIDragDrop DragDrop
		{
			[Token(Token = "0x6001DE1")]
			[Address(RVA = "0x134E7E0", Offset = "0x134E7E0", VA = "0x134E7E0", Slot = "10")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700038E")]
		public double timeSinceStartup
		{
			[Token(Token = "0x6001DE2")]
			[Address(RVA = "0x134E7E8", Offset = "0x134E7E8", VA = "0x134E7E8", Slot = "11")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x1700038F")]
		public string clipboardText
		{
			[Token(Token = "0x6001DE3")]
			[Address(RVA = "0x134E7F0", Offset = "0x134E7F0", VA = "0x134E7F0", Slot = "12")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001DE4")]
			[Address(RVA = "0x134E838", Offset = "0x134E838", VA = "0x134E838", Slot = "13")]
			set
			{
			}
		}

		[Token(Token = "0x6001DDB")]
		[Address(RVA = "0x134E780", Offset = "0x134E780", VA = "0x134E780", Slot = "4")]
		public void ShowObjectProperty(object obj)
		{
		}

		[Token(Token = "0x6001DDC")]
		[Address(RVA = "0x134E784", Offset = "0x134E784", VA = "0x134E784", Slot = "5")]
		public void ShowObjectProperties(object[] obj)
		{
		}

		[Token(Token = "0x6001DDD")]
		[Address(RVA = "0x134E788", Offset = "0x134E788", VA = "0x134E788", Slot = "6")]
		public string GetAssetPath(object obj)
		{
			return null;
		}

		[Token(Token = "0x6001DDE")]
		[Address(RVA = "0x134E7D0", Offset = "0x134E7D0", VA = "0x134E7D0", Slot = "7")]
		public void MarkAssetDirty(object obj)
		{
		}

		[Token(Token = "0x6001DDF")]
		[Address(RVA = "0x134E7D4", Offset = "0x134E7D4", VA = "0x134E7D4", Slot = "8")]
		public void AddObjectToAsset(UnityEngine.Object objectToAdd, UnityEngine.Object assetObject)
		{
		}

		[Token(Token = "0x6001DE0")]
		[Address(RVA = "0x134E7D8", Offset = "0x134E7D8", VA = "0x134E7D8", Slot = "9")]
		public IContextMenu CreateContextMenu()
		{
			return null;
		}

		[Token(Token = "0x6001DE5")]
		[Address(RVA = "0x134E83C", Offset = "0x134E83C", VA = "0x134E83C")]
		public NullPlatform()
		{
		}
	}
	[Token(Token = "0x200040C")]
	public interface UIRenderer
	{
		[Token(Token = "0x17000390")]
		Color color
		{
			[Token(Token = "0x6001E04")]
			get;
			[Token(Token = "0x6001E05")]
			set;
		}

		[Token(Token = "0x17000391")]
		Color backgroundColor
		{
			[Token(Token = "0x6001E06")]
			get;
			[Token(Token = "0x6001E07")]
			set;
		}

		[Token(Token = "0x17000392")]
		UIStyleManager StyleManager
		{
			[Token(Token = "0x6001E08")]
			get;
		}

		[Token(Token = "0x6001DE6")]
		void BeginGroup(Rect bounds);

		[Token(Token = "0x6001DE7")]
		void EndGroup();

		[Token(Token = "0x6001DE8")]
		bool Button(Rect bounds, GUIContent content, GUIStyle style);

		[Token(Token = "0x6001DE9")]
		bool Button(Rect bounds, string text, GUIStyle style);

		[Token(Token = "0x6001DEA")]
		bool Button(Rect bounds, string text);

		[Token(Token = "0x6001DEB")]
		void Box(Rect bounds, string text);

		[Token(Token = "0x6001DEC")]
		void Box(Rect bounds, GUIContent content);

		[Token(Token = "0x6001DED")]
		void Box(Rect bounds, GUIContent content, GUIStyle style);

		[Token(Token = "0x6001DEE")]
		void Label(Rect bounds, string text, GUIStyle style);

		[Token(Token = "0x6001DEF")]
		void Label(Rect bounds, GUIContent content, GUIStyle style);

		[Token(Token = "0x6001DF0")]
		UnityEngine.Vector2 BeginScrollView(Rect bounds, UnityEngine.Vector2 scrollPosition, Rect viewRect);

		[Token(Token = "0x6001DF1")]
		void DrawTexture(Rect bounds, Texture texture);

		[Token(Token = "0x6001DF2")]
		void DrawTexture(Rect bounds, Texture texture, ScaleMode scaleMode, bool alphaBlend, Color color);

		[Token(Token = "0x6001DF3")]
		void EndScrollView(bool handleScrollWheel);

		[Token(Token = "0x6001DF4")]
		void BeginGUI();

		[Token(Token = "0x6001DF5")]
		void EndGUI();

		[Token(Token = "0x6001DF6")]
		void DrawLine(UnityEngine.Vector3 v0, UnityEngine.Vector3 v1);

		[Token(Token = "0x6001DF7")]
		void DrawLine(Color color, UnityEngine.Vector3 v0, UnityEngine.Vector3 v1);

		[Token(Token = "0x6001DF8")]
		void DrawPolyLine(params UnityEngine.Vector3[] points);

		[Token(Token = "0x6001DF9")]
		void DrawPolyLine(Color color, params UnityEngine.Vector3[] points);

		[Token(Token = "0x6001DFA")]
		void DrawAAPolyLine(float thickness, params UnityEngine.Vector3[] points);

		[Token(Token = "0x6001DFB")]
		void DrawAAPolyLine(float thickness, Color color, params UnityEngine.Vector3[] points);

		[Token(Token = "0x6001DFC")]
		void DrawAAPolyLine(Texture2D texture, float thickness, params UnityEngine.Vector3[] points);

		[Token(Token = "0x6001DFD")]
		void DrawAAPolyLine(Texture2D texture, float thickness, Color color, params UnityEngine.Vector3[] points);

		[Token(Token = "0x6001DFE")]
		void DrawBezier(UnityEngine.Vector3 startPos, UnityEngine.Vector3 endPos, UnityEngine.Vector3 startTangent, UnityEngine.Vector3 endTangent, Color lineColor, Texture2D texture, float lineThickness);

		[Token(Token = "0x6001DFF")]
		void DrawAAConvexPolygon(params UnityEngine.Vector3[] points);

		[Token(Token = "0x6001E00")]
		void DrawAAConvexPolygon(Color color, params UnityEngine.Vector3[] points);

		[Token(Token = "0x6001E01")]
		void DrawRect(Rect bounds, Color color);

		[Token(Token = "0x6001E02")]
		void AddCursorRect(Rect bounds, UICursorType cursorType);

		[Token(Token = "0x6001E03")]
		object GetResource<T>(string path);
	}
	[Token(Token = "0x200040D")]
	public interface UIStyleManager
	{
		[Token(Token = "0x6001E09")]
		GUIStyle GetToolbarButtonStyle();

		[Token(Token = "0x6001E0A")]
		GUIStyle GetButtonStyle();

		[Token(Token = "0x6001E0B")]
		GUIStyle GetBoxStyle();

		[Token(Token = "0x6001E0C")]
		GUIStyle GetLabelStyle();

		[Token(Token = "0x6001E0D")]
		GUIStyle GetBoldLabelStyle();

		[Token(Token = "0x6001E0E")]
		Font GetFontStandard();

		[Token(Token = "0x6001E0F")]
		Font GetFontBold();

		[Token(Token = "0x6001E10")]
		Font GetFontMini();
	}
	[Token(Token = "0x200040E")]
	public delegate void OnWidgetFocus(IWidget widget);
	[Token(Token = "0x200040F")]
	public delegate void OnWidgetLostFocus(IWidget widget);
	[Token(Token = "0x2000410")]
	public delegate void OnDragEvent();
	[Token(Token = "0x2000411")]
	public abstract class UISystem
	{
		[Token(Token = "0x4001929")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C0288", Offset = "0x8C0288")]
		private IWidget <FocusedWidget>k__BackingField;

		[Token(Token = "0x400192A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C0298", Offset = "0x8C0298")]
		private bool <IsDragDrop>k__BackingField;

		[Token(Token = "0x400192B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C02A8", Offset = "0x8C02A8")]
		private IWidget <Layout>k__BackingField;

		[Token(Token = "0x400192C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C02B8", Offset = "0x8C02B8")]
		private UIPlatform <Platform>k__BackingField;

		[Token(Token = "0x400192D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C02C8", Offset = "0x8C02C8")]
		private UIStyleManager <StyleManager>k__BackingField;

		[Token(Token = "0x400192E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C02D8", Offset = "0x8C02D8")]
		private UIUndoSystem <Undo>k__BackingField;

		[Token(Token = "0x17000393")]
		public IWidget FocusedWidget
		{
			[Token(Token = "0x6001E1D")]
			[Address(RVA = "0x134F49C", Offset = "0x134F49C", VA = "0x134F49C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CB0A4", Offset = "0x8CB0A4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001E1E")]
			[Address(RVA = "0x134F4A4", Offset = "0x134F4A4", VA = "0x134F4A4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CB0B4", Offset = "0x8CB0B4")]
			private set
			{
			}
		}

		[Token(Token = "0x17000394")]
		public bool IsDragDrop
		{
			[Token(Token = "0x6001E1F")]
			[Address(RVA = "0x134F4AC", Offset = "0x134F4AC", VA = "0x134F4AC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CB0C4", Offset = "0x8CB0C4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001E20")]
			[Address(RVA = "0x134F4B4", Offset = "0x134F4B4", VA = "0x134F4B4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CB0D4", Offset = "0x8CB0D4")]
			private set
			{
			}
		}

		[Token(Token = "0x17000395")]
		public IWidget Layout
		{
			[Token(Token = "0x6001E21")]
			[Address(RVA = "0x134F4C0", Offset = "0x134F4C0", VA = "0x134F4C0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CB0E4", Offset = "0x8CB0E4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001E22")]
			[Address(RVA = "0x134F4C8", Offset = "0x134F4C8", VA = "0x134F4C8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CB0F4", Offset = "0x8CB0F4")]
			private set
			{
			}
		}

		[Token(Token = "0x17000396")]
		public UIPlatform Platform
		{
			[Token(Token = "0x6001E23")]
			[Address(RVA = "0x134F4D0", Offset = "0x134F4D0", VA = "0x134F4D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CB104", Offset = "0x8CB104")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001E24")]
			[Address(RVA = "0x134F4D8", Offset = "0x134F4D8", VA = "0x134F4D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CB114", Offset = "0x8CB114")]
			private set
			{
			}
		}

		[Token(Token = "0x17000397")]
		public UIStyleManager StyleManager
		{
			[Token(Token = "0x6001E25")]
			[Address(RVA = "0x134F4E0", Offset = "0x134F4E0", VA = "0x134F4E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CB124", Offset = "0x8CB124")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001E26")]
			[Address(RVA = "0x134F4E8", Offset = "0x134F4E8", VA = "0x134F4E8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CB134", Offset = "0x8CB134")]
			private set
			{
			}
		}

		[Token(Token = "0x17000398")]
		public UIUndoSystem Undo
		{
			[Token(Token = "0x6001E27")]
			[Address(RVA = "0x134F4F0", Offset = "0x134F4F0", VA = "0x134F4F0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CB144", Offset = "0x8CB144")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001E28")]
			[Address(RVA = "0x134F4F8", Offset = "0x134F4F8", VA = "0x134F4F8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CB154", Offset = "0x8CB154")]
			private set
			{
			}
		}

		[Token(Token = "0x14000037")]
		public event OnWidgetFocus WidgetFocused
		{
			[Token(Token = "0x6001E33")]
			[Address(RVA = "0x134F8DC", Offset = "0x134F8DC", VA = "0x134F8DC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CB164", Offset = "0x8CB164")]
			add
			{
			}
			[Token(Token = "0x6001E34")]
			[Address(RVA = "0x134F980", Offset = "0x134F980", VA = "0x134F980")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CB174", Offset = "0x8CB174")]
			remove
			{
			}
		}

		[Token(Token = "0x14000038")]
		public event OnWidgetLostFocus WidgetLostFocus
		{
			[Token(Token = "0x6001E35")]
			[Address(RVA = "0x134FA24", Offset = "0x134FA24", VA = "0x134FA24")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CB184", Offset = "0x8CB184")]
			add
			{
			}
			[Token(Token = "0x6001E36")]
			[Address(RVA = "0x134FAC8", Offset = "0x134FAC8", VA = "0x134FAC8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CB194", Offset = "0x8CB194")]
			remove
			{
			}
		}

		[Token(Token = "0x14000039")]
		public event OnDragEvent DragStart
		{
			[Token(Token = "0x6001E37")]
			[Address(RVA = "0x134FB6C", Offset = "0x134FB6C", VA = "0x134FB6C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CB1A4", Offset = "0x8CB1A4")]
			add
			{
			}
			[Token(Token = "0x6001E38")]
			[Address(RVA = "0x134FC10", Offset = "0x134FC10", VA = "0x134FC10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CB1B4", Offset = "0x8CB1B4")]
			remove
			{
			}
		}

		[Token(Token = "0x1400003A")]
		public event OnDragEvent DragEnd
		{
			[Token(Token = "0x6001E39")]
			[Address(RVA = "0x134FCB4", Offset = "0x134FCB4", VA = "0x134FCB4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CB1C4", Offset = "0x8CB1C4")]
			add
			{
			}
			[Token(Token = "0x6001E3A")]
			[Address(RVA = "0x134FD58", Offset = "0x134FD58", VA = "0x134FD58")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CB1D4", Offset = "0x8CB1D4")]
			remove
			{
			}
		}

		[Token(Token = "0x6001E29")]
		[Address(RVA = "0x134F500", Offset = "0x134F500", VA = "0x134F500")]
		public UISystem()
		{
		}

		[Token(Token = "0x6001E2A")]
		protected abstract UIPlatform CreatePlatformInstance();

		[Token(Token = "0x6001E2B")]
		protected abstract UIStyleManager CreateStyleManagerInstance();

		[Token(Token = "0x6001E2C")]
		protected abstract UIUndoSystem CreateUndoSystemInstance();

		[Token(Token = "0x6001E2D")]
		[Address(RVA = "0x134F5B8", Offset = "0x134F5B8", VA = "0x134F5B8")]
		public void Draw(UIRenderer uiRenderer)
		{
		}

		[Token(Token = "0x6001E2E")]
		[Address(RVA = "0x134F68C", Offset = "0x134F68C", VA = "0x134F68C")]
		public void Update(Rect bounds)
		{
		}

		[Token(Token = "0x6001E2F")]
		[Address(RVA = "0x134F780", Offset = "0x134F780", VA = "0x134F780")]
		public void SetLayout(IWidget layout)
		{
		}

		[Token(Token = "0x6001E30")]
		[Address(RVA = "0x134F788", Offset = "0x134F788", VA = "0x134F788")]
		public void ClearLayout()
		{
		}

		[Token(Token = "0x6001E31")]
		[Address(RVA = "0x134F7E8", Offset = "0x134F7E8", VA = "0x134F7E8")]
		public void RequestFocus(IWidget widget)
		{
		}

		[Token(Token = "0x6001E32")]
		[Address(RVA = "0x134F8A0", Offset = "0x134F8A0", VA = "0x134F8A0")]
		public void SetDragging(bool dragging)
		{
		}
	}
	[Token(Token = "0x2000412")]
	public enum UICursorType
	{
		[Token(Token = "0x4001934")]
		Normal,
		[Token(Token = "0x4001935")]
		ResizeHorizontal,
		[Token(Token = "0x4001936")]
		ResizeVertical,
		[Token(Token = "0x4001937")]
		Link
	}
	[Token(Token = "0x2000413")]
	public delegate void UIUndoRedoDelegate(UISystem uiSystem);
	[Token(Token = "0x2000414")]
	public interface UIUndoSystem
	{
		[Token(Token = "0x1400003B")]
		event UIUndoRedoDelegate UndoRedoPerformed;

		[Token(Token = "0x6001E3F")]
		void RecordObject(object obj, string name);

		[Token(Token = "0x6001E40")]
		void RegisterCreatedObjectUndo(object obj, string name);

		[Token(Token = "0x6001E41")]
		void DestroyObjectImmediate(object obj);

		[Token(Token = "0x6001E42")]
		void RegisterCompleteObjectUndo(object obj, string name);
	}
	[Token(Token = "0x2000415")]
	public interface IDeferredUICommand
	{
		[Token(Token = "0x6001E45")]
		void Execute(UISystem uiSystem);
	}
	[Token(Token = "0x2000416")]
	public abstract class DeferredUICommandBase : IDeferredUICommand
	{
		[Token(Token = "0x6001E46")]
		public abstract void Execute(UISystem uiSystem);

		[Token(Token = "0x6001E47")]
		[Address(RVA = "0x134DD84", Offset = "0x134DD84", VA = "0x134DD84")]
		protected DeferredUICommandBase()
		{
		}
	}
	[Token(Token = "0x2000417")]
	public class EditorCommand_InitializeGraphCameras : DeferredUICommandBase
	{
		[Token(Token = "0x4001938")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IWidget host;

		[Token(Token = "0x6001E48")]
		[Address(RVA = "0x134E0EC", Offset = "0x134E0EC", VA = "0x134E0EC")]
		public EditorCommand_InitializeGraphCameras(IWidget host)
		{
		}

		[Token(Token = "0x6001E49")]
		[Address(RVA = "0x134E118", Offset = "0x134E118", VA = "0x134E118", Slot = "5")]
		public override void Execute(UISystem uiSystem)
		{
		}
	}
	[Token(Token = "0x2000418")]
	public class EditorCommand_FocusOnGraphNode : DeferredUICommandBase
	{
		[Token(Token = "0x4001939")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private GraphEditor graphEditor;

		[Token(Token = "0x400193A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private GraphNode graphNode;

		[Token(Token = "0x6001E4A")]
		[Address(RVA = "0x134DD8C", Offset = "0x134DD8C", VA = "0x134DD8C")]
		public EditorCommand_FocusOnGraphNode(GraphEditor graphEditor, GraphNode graphNode)
		{
		}

		[Token(Token = "0x6001E4B")]
		[Address(RVA = "0x134DDC4", Offset = "0x134DDC4", VA = "0x134DDC4", Slot = "5")]
		public override void Execute(UISystem uiSystem)
		{
		}
	}
	[Token(Token = "0x2000419")]
	public class EditorCommand_SetBorderContent : DeferredUICommandBase
	{
		[Token(Token = "0x400193B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private BorderWidget border;

		[Token(Token = "0x400193C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private IWidget content;

		[Token(Token = "0x6001E4C")]
		[Address(RVA = "0x134E2F8", Offset = "0x134E2F8", VA = "0x134E2F8")]
		public EditorCommand_SetBorderContent(BorderWidget border, IWidget content)
		{
		}

		[Token(Token = "0x6001E4D")]
		[Address(RVA = "0x134E330", Offset = "0x134E330", VA = "0x134E330", Slot = "5")]
		public override void Execute(UISystem uiSystem)
		{
		}
	}
	[Token(Token = "0x200041A")]
	public class EditorCommand_UpdateWidget : DeferredUICommandBase
	{
		[Token(Token = "0x400193D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IWidget content;

		[Token(Token = "0x400193E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Rect bounds;

		[Token(Token = "0x6001E4E")]
		[Address(RVA = "0x134E358", Offset = "0x134E358", VA = "0x134E358")]
		public EditorCommand_UpdateWidget(IWidget content, Rect bounds)
		{
		}

		[Token(Token = "0x6001E4F")]
		[Address(RVA = "0x134E3AC", Offset = "0x134E3AC", VA = "0x134E3AC", Slot = "5")]
		public override void Execute(UISystem uiSystem)
		{
		}
	}
	[Token(Token = "0x200041B")]
	public class GUIState
	{
		[Token(Token = "0x400193F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Color color;

		[Token(Token = "0x4001940")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Color backgroundColor;

		[Token(Token = "0x4001941")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private UIRenderer renderer;

		[Token(Token = "0x6001E50")]
		[Address(RVA = "0x134E494", Offset = "0x134E494", VA = "0x134E494")]
		public GUIState(UIRenderer renderer)
		{
		}

		[Token(Token = "0x6001E51")]
		[Address(RVA = "0x134E4C4", Offset = "0x134E4C4", VA = "0x134E4C4")]
		public void Save()
		{
		}

		[Token(Token = "0x6001E52")]
		[Address(RVA = "0x134E600", Offset = "0x134E600", VA = "0x134E600")]
		public void Restore()
		{
		}
	}
	[Token(Token = "0x200041C")]
	public class UIResourceLookup
	{
		[Token(Token = "0x4001942")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly string TEXTURE_GO_NODE_SELECTION;

		[Token(Token = "0x4001943")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static readonly string TEXTURE_GO_NODE_FRAME;

		[Token(Token = "0x4001944")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static readonly string TEXTURE_GO_NODE_BG;

		[Token(Token = "0x4001945")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static readonly string TEXTURE_PIN_GLOW;

		[Token(Token = "0x4001946")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static readonly string TEXTURE_MULTI_GO_NODE_FRAME;

		[Token(Token = "0x4001947")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static readonly string TEXTURE_MARKER_NODE_SELECTION;

		[Token(Token = "0x4001948")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public static readonly string TEXTURE_MARKER_NODE_FRAME;

		[Token(Token = "0x4001949")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public static readonly string TEXTURE_MARKER_EMITTER_NODE_FRAME;

		[Token(Token = "0x400194A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public static readonly string TEXTURE_MARKER_NODE_BG;

		[Token(Token = "0x400194B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public static readonly string TEXTURE_CURSOR_RING;

		[Token(Token = "0x400194C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public static readonly string TEXTURE_CURSOR_RING_SOLID;

		[Token(Token = "0x400194D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public static readonly string TEXTURE_REFRESH_16;

		[Token(Token = "0x400194E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public static readonly string GUI_STYLE_BANNER;

		[Token(Token = "0x400194F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public static readonly string ICON_CLOSE_16x;

		[Token(Token = "0x4001950")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public static readonly string ICON_PLUS_16x;

		[Token(Token = "0x4001951")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public static readonly string ICON_MOVEUP_16x;

		[Token(Token = "0x4001952")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public static readonly string ICON_MOVEDOWN_16x;

		[Token(Token = "0x4001953")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public static readonly string ICON_ZOOMFIT_16x;

		[Token(Token = "0x4001954")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public static readonly string ICON_ERROR_16x;

		[Token(Token = "0x4001955")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public static readonly string ICON_WARNING_16x;

		[Token(Token = "0x4001956")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public static readonly string ICON_INFO_16x;

		[Token(Token = "0x4001957")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public static readonly string ICON_SUCCESS_16x;

		[Token(Token = "0x4001958")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public static readonly string ICON_WHITE_16x;

		[Token(Token = "0x4001959")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public static readonly string ICON_PLAY_16x;

		[Token(Token = "0x400195A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public static readonly string ICON_SETTINGS_16x;

		[Token(Token = "0x400195B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public static readonly string SKIN_TOOLBAR_BUTTONS;

		[Token(Token = "0x6001E53")]
		[Address(RVA = "0x134F240", Offset = "0x134F240", VA = "0x134F240")]
		public UIResourceLookup()
		{
		}
	}
}
namespace DungeonArchitect.UI.Widgets
{
	[Token(Token = "0x200041D")]
	public class WidgetClickEvent
	{
		[Token(Token = "0x400195C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Event e;

		[Token(Token = "0x400195D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UISystem uiSystem;

		[Token(Token = "0x400195E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public object userdata;

		[Token(Token = "0x6001E55")]
		[Address(RVA = "0xBE70E8", Offset = "0xBE70E8", VA = "0xBE70E8")]
		public WidgetClickEvent()
		{
		}
	}
	[Token(Token = "0x200041E")]
	public delegate void OnWidgetClicked(WidgetClickEvent clickEvent);
	[Token(Token = "0x200041F")]
	public class BorderWidget : WidgetBase
	{
		[Token(Token = "0x400195F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private IWidget Content;

		[Token(Token = "0x4001960")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float paddingLeft;

		[Token(Token = "0x4001961")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float paddingTop;

		[Token(Token = "0x4001962")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float paddingRight;

		[Token(Token = "0x4001963")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private float paddingBottom;

		[Token(Token = "0x4001964")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Color color;

		[Token(Token = "0x4001965")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Color borderColor;

		[Token(Token = "0x4001966")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private string title;

		[Token(Token = "0x4001967")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private int titleFontSize;

		[Token(Token = "0x4001968")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private Color titleColor;

		[Token(Token = "0x4001969")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private UnityEngine.Vector2 titleOffset;

		[Token(Token = "0x400196A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private bool drawOutline;

		[Token(Token = "0x400196B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private IWidget titleWidget;

		[Token(Token = "0x400196C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Func<string> TitleGetter;

		[Token(Token = "0x6001E5A")]
		[Address(RVA = "0x13501D0", Offset = "0x13501D0", VA = "0x13501D0")]
		public BorderWidget()
		{
		}

		[Token(Token = "0x6001E5B")]
		[Address(RVA = "0x13502D0", Offset = "0x13502D0", VA = "0x13502D0")]
		public BorderWidget(IWidget content)
		{
		}

		[Token(Token = "0x6001E5C")]
		[Address(RVA = "0x134E350", Offset = "0x134E350", VA = "0x134E350")]
		public BorderWidget SetContent(IWidget content)
		{
			return null;
		}

		[Token(Token = "0x6001E5D")]
		[Address(RVA = "0x13503E0", Offset = "0x13503E0", VA = "0x13503E0")]
		public BorderWidget SetPadding(float left, float top, float right, float bottom)
		{
			return null;
		}

		[Token(Token = "0x6001E5E")]
		[Address(RVA = "0x13503EC", Offset = "0x13503EC", VA = "0x13503EC")]
		public BorderWidget SetColor(Color color)
		{
			return null;
		}

		[Token(Token = "0x6001E5F")]
		[Address(RVA = "0x13503F8", Offset = "0x13503F8", VA = "0x13503F8")]
		public BorderWidget SetBorderColor(Color borderColor)
		{
			return null;
		}

		[Token(Token = "0x6001E60")]
		[Address(RVA = "0x1350404", Offset = "0x1350404", VA = "0x1350404")]
		public BorderWidget SetTransparent()
		{
			return null;
		}

		[Token(Token = "0x6001E61")]
		[Address(RVA = "0x135047C", Offset = "0x135047C", VA = "0x135047C")]
		public BorderWidget SetTitle(string title)
		{
			return null;
		}

		[Token(Token = "0x6001E62")]
		[Address(RVA = "0x1350484", Offset = "0x1350484", VA = "0x1350484")]
		public BorderWidget SetTitleGetter(Func<string> getter)
		{
			return null;
		}

		[Token(Token = "0x6001E63")]
		[Address(RVA = "0x135050C", Offset = "0x135050C", VA = "0x135050C")]
		public BorderWidget SetTitleFontSize(int size)
		{
			return null;
		}

		[Token(Token = "0x6001E64")]
		[Address(RVA = "0x1350514", Offset = "0x1350514", VA = "0x1350514")]
		public BorderWidget SetTitleColor(Color color)
		{
			return null;
		}

		[Token(Token = "0x6001E65")]
		[Address(RVA = "0x1350520", Offset = "0x1350520", VA = "0x1350520")]
		public BorderWidget SetTitleOffset(UnityEngine.Vector2 offset)
		{
			return null;
		}

		[Token(Token = "0x6001E66")]
		[Address(RVA = "0x1350528", Offset = "0x1350528", VA = "0x1350528")]
		public BorderWidget SetTitleWidget(IWidget widget)
		{
			return null;
		}

		[Token(Token = "0x6001E67")]
		[Address(RVA = "0x1350530", Offset = "0x1350530", VA = "0x1350530")]
		public BorderWidget SetDrawOutline(bool drawOutline)
		{
			return null;
		}

		[Token(Token = "0x6001E68")]
		[Address(RVA = "0x135053C", Offset = "0x135053C", VA = "0x135053C", Slot = "25")]
		public override void UpdateWidget(UISystem uiSystem, Rect bounds)
		{
		}

		[Token(Token = "0x6001E69")]
		[Address(RVA = "0x13507E4", Offset = "0x13507E4", VA = "0x13507E4", Slot = "24")]
		public override void Draw(UISystem uiSystem, UIRenderer renderer)
		{
		}

		[Token(Token = "0x6001E6A")]
		[Address(RVA = "0x1350C60", Offset = "0x1350C60", VA = "0x1350C60", Slot = "29")]
		public override bool IsCompositeWidget()
		{
			return default(bool);
		}

		[Token(Token = "0x6001E6B")]
		[Address(RVA = "0x1350C68", Offset = "0x1350C68", VA = "0x1350C68", Slot = "30")]
		public override IWidget[] GetChildWidgets()
		{
			return null;
		}

		[Token(Token = "0x6001E6C")]
		[Address(RVA = "0x1350D0C", Offset = "0x1350D0C", VA = "0x1350D0C", Slot = "23")]
		public override UnityEngine.Vector2 GetDesiredSize(UnityEngine.Vector2 size, UISystem uiSystem)
		{
			return default(UnityEngine.Vector2);
		}
	}
	[Token(Token = "0x2000420")]
	public class ButtonWidget : WidgetBase
	{
		[Token(Token = "0x200087A")]
		public delegate void OnButtonPressed(UISystem uiSystem);

		[Token(Token = "0x400196D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private GUIContent content;

		[Token(Token = "0x400196E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Color color;

		[Token(Token = "0x1400003C")]
		public event OnButtonPressed ButtonPressed
		{
			[Token(Token = "0x6001E6D")]
			[Address(RVA = "0x1351F7C", Offset = "0x1351F7C", VA = "0x1351F7C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CB204", Offset = "0x8CB204")]
			add
			{
			}
			[Token(Token = "0x6001E6E")]
			[Address(RVA = "0x1352020", Offset = "0x1352020", VA = "0x1352020")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CB214", Offset = "0x8CB214")]
			remove
			{
			}
		}

		[Token(Token = "0x6001E6F")]
		[Address(RVA = "0x13520C4", Offset = "0x13520C4", VA = "0x13520C4")]
		public ButtonWidget(GUIContent content)
		{
		}

		[Token(Token = "0x6001E70")]
		[Address(RVA = "0x1352124", Offset = "0x1352124", VA = "0x1352124")]
		public ButtonWidget SetColor(Color color)
		{
			return null;
		}

		[Token(Token = "0x6001E71")]
		[Address(RVA = "0x1352130", Offset = "0x1352130", VA = "0x1352130", Slot = "24")]
		public override void Draw(UISystem uiSystem, UIRenderer renderer)
		{
		}
	}
	[Token(Token = "0x2000421")]
	public enum ImageWidgetDrawMode
	{
		[Token(Token = "0x4001971")]
		Streach,
		[Token(Token = "0x4001972")]
		Fit,
		[Token(Token = "0x4001973")]
		Fill,
		[Token(Token = "0x4001974")]
		Fixed
	}
	[Token(Token = "0x2000422")]
	public class ImageWidget : WidgetBase
	{
		[Token(Token = "0x4001975")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Texture2D texture;

		[Token(Token = "0x4001976")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private ImageWidgetDrawMode drawMode;

		[Token(Token = "0x4001977")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Color tint;

		[Token(Token = "0x6001E72")]
		[Address(RVA = "0x13605C4", Offset = "0x13605C4", VA = "0x13605C4")]
		public ImageWidget()
		{
		}

		[Token(Token = "0x6001E73")]
		[Address(RVA = "0x13605F8", Offset = "0x13605F8", VA = "0x13605F8")]
		public ImageWidget(Texture2D texture)
		{
		}

		[Token(Token = "0x6001E74")]
		[Address(RVA = "0x1360638", Offset = "0x1360638", VA = "0x1360638")]
		public ImageWidget SetImage(Texture2D texture)
		{
			return null;
		}

		[Token(Token = "0x6001E75")]
		[Address(RVA = "0x1360640", Offset = "0x1360640", VA = "0x1360640")]
		public ImageWidget SetDrawMode(ImageWidgetDrawMode drawMode)
		{
			return null;
		}

		[Token(Token = "0x6001E76")]
		[Address(RVA = "0x1360648", Offset = "0x1360648", VA = "0x1360648")]
		public ImageWidget SetTint(Color tint)
		{
			return null;
		}

		[Token(Token = "0x6001E77")]
		[Address(RVA = "0x1360654", Offset = "0x1360654", VA = "0x1360654")]
		private UnityEngine.Vector2 CalculateFitSize(UnityEngine.Vector2 size)
		{
			return default(UnityEngine.Vector2);
		}

		[Token(Token = "0x6001E78")]
		[Address(RVA = "0x13607A0", Offset = "0x13607A0", VA = "0x13607A0")]
		private UnityEngine.Vector2 CalculateFillSize(UnityEngine.Vector2 size)
		{
			return default(UnityEngine.Vector2);
		}

		[Token(Token = "0x6001E79")]
		[Address(RVA = "0x136090C", Offset = "0x136090C", VA = "0x136090C", Slot = "23")]
		public override UnityEngine.Vector2 GetDesiredSize(UnityEngine.Vector2 size, UISystem uiSystem)
		{
			return default(UnityEngine.Vector2);
		}

		[Token(Token = "0x6001E7A")]
		[Address(RVA = "0x1360A44", Offset = "0x1360A44", VA = "0x1360A44", Slot = "24")]
		public override void Draw(UISystem uiSystem, UIRenderer renderer)
		{
		}
	}
	[Token(Token = "0x2000423")]
	public class LabelWidget : WidgetBase
	{
		[Token(Token = "0x4001978")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private GUIStyle style;

		[Token(Token = "0x4001979")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C0338", Offset = "0x8C0338")]
		private string <Text>k__BackingField;

		[Token(Token = "0x400197A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C0348", Offset = "0x8C0348")]
		private Color <Color>k__BackingField;

		[Token(Token = "0x400197B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C0358", Offset = "0x8C0358")]
		private int <FontSize>k__BackingField;

		[Token(Token = "0x400197C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C0368", Offset = "0x8C0368")]
		private bool <WordWrap>k__BackingField;

		[Token(Token = "0x400197D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C0378", Offset = "0x8C0378")]
		private TextAnchor <TextAlign>k__BackingField;

		[Token(Token = "0x17000399")]
		public string Text
		{
			[Token(Token = "0x6001E7B")]
			[Address(RVA = "0x1360DBC", Offset = "0x1360DBC", VA = "0x1360DBC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CB224", Offset = "0x8CB224")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001E7C")]
			[Address(RVA = "0x1360DC4", Offset = "0x1360DC4", VA = "0x1360DC4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CB234", Offset = "0x8CB234")]
			private set
			{
			}
		}

		[Token(Token = "0x1700039A")]
		public Color Color
		{
			[Token(Token = "0x6001E7D")]
			[Address(RVA = "0x1360DCC", Offset = "0x1360DCC", VA = "0x1360DCC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CB244", Offset = "0x8CB244")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6001E7E")]
			[Address(RVA = "0x1360DD8", Offset = "0x1360DD8", VA = "0x1360DD8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CB254", Offset = "0x8CB254")]
			private set
			{
			}
		}

		[Token(Token = "0x1700039B")]
		public int FontSize
		{
			[Token(Token = "0x6001E7F")]
			[Address(RVA = "0x1360DE4", Offset = "0x1360DE4", VA = "0x1360DE4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CB264", Offset = "0x8CB264")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001E80")]
			[Address(RVA = "0x1360DEC", Offset = "0x1360DEC", VA = "0x1360DEC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CB274", Offset = "0x8CB274")]
			private set
			{
			}
		}

		[Token(Token = "0x1700039C")]
		public bool WordWrap
		{
			[Token(Token = "0x6001E81")]
			[Address(RVA = "0x1360DF4", Offset = "0x1360DF4", VA = "0x1360DF4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CB284", Offset = "0x8CB284")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001E82")]
			[Address(RVA = "0x1360DFC", Offset = "0x1360DFC", VA = "0x1360DFC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CB294", Offset = "0x8CB294")]
			set
			{
			}
		}

		[Token(Token = "0x1700039D")]
		public TextAnchor TextAlign
		{
			[Token(Token = "0x6001E83")]
			[Address(RVA = "0x1360E08", Offset = "0x1360E08", VA = "0x1360E08")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CB2A4", Offset = "0x8CB2A4")]
			get
			{
				return default(TextAnchor);
			}
			[Token(Token = "0x6001E84")]
			[Address(RVA = "0x1360E10", Offset = "0x1360E10", VA = "0x1360E10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CB2B4", Offset = "0x8CB2B4")]
			private set
			{
			}
		}

		[Token(Token = "0x6001E85")]
		[Address(RVA = "0x1351730", Offset = "0x1351730", VA = "0x1351730")]
		public LabelWidget(string text)
		{
		}

		[Token(Token = "0x6001E86")]
		[Address(RVA = "0x1351780", Offset = "0x1351780", VA = "0x1351780")]
		public LabelWidget SetColor(Color color)
		{
			return null;
		}

		[Token(Token = "0x6001E87")]
		[Address(RVA = "0x1351774", Offset = "0x1351774", VA = "0x1351774")]
		public LabelWidget SetFontSize(int size)
		{
			return null;
		}

		[Token(Token = "0x6001E88")]
		[Address(RVA = "0x1360E18", Offset = "0x1360E18", VA = "0x1360E18")]
		public LabelWidget SetTextAlign(TextAnchor align)
		{
			return null;
		}

		[Token(Token = "0x6001E89")]
		[Address(RVA = "0x1360E24", Offset = "0x1360E24", VA = "0x1360E24")]
		public LabelWidget SetWordWrap(bool wordWrap)
		{
			return null;
		}

		[Token(Token = "0x6001E8A")]
		[Address(RVA = "0x1360E34", Offset = "0x1360E34", VA = "0x1360E34")]
		private GUIStyle CreateStyle(UIStyleManager styleManager)
		{
			return null;
		}

		[Token(Token = "0x6001E8B")]
		[Address(RVA = "0x1360F4C", Offset = "0x1360F4C", VA = "0x1360F4C")]
		public float CalcHeight(UIStyleManager styleManager, string text, float width)
		{
			return default(float);
		}

		[Token(Token = "0x6001E8C")]
		[Address(RVA = "0x1360FFC", Offset = "0x1360FFC", VA = "0x1360FFC")]
		public UnityEngine.Vector2 CalcSize(UISystem uiSystem, string text)
		{
			return default(UnityEngine.Vector2);
		}

		[Token(Token = "0x6001E8D")]
		[Address(RVA = "0x13610A0", Offset = "0x13610A0", VA = "0x13610A0", Slot = "23")]
		public override UnityEngine.Vector2 GetDesiredSize(UnityEngine.Vector2 size, UISystem uiSystem)
		{
			return default(UnityEngine.Vector2);
		}

		[Token(Token = "0x6001E8E")]
		[Address(RVA = "0x1361104", Offset = "0x1361104", VA = "0x1361104", Slot = "24")]
		public override void Draw(UISystem uiSystem, UIRenderer renderer)
		{
		}
	}
	[Token(Token = "0x2000424")]
	public class LinkWidget : WidgetBase
	{
		[Token(Token = "0x400197E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private IWidget content;

		[Token(Token = "0x400197F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool drawLinkOutline;

		[Token(Token = "0x4001980")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		private bool hovered;

		[Token(Token = "0x4001981")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private object userdata;

		[Token(Token = "0x4001982")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Color highlightColor;

		[Token(Token = "0x1400003D")]
		public event OnWidgetClicked LinkClicked
		{
			[Token(Token = "0x6001E8F")]
			[Address(RVA = "0x1351848", Offset = "0x1351848", VA = "0x1351848")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CB2C4", Offset = "0x8CB2C4")]
			add
			{
			}
			[Token(Token = "0x6001E90")]
			[Address(RVA = "0x1361290", Offset = "0x1361290", VA = "0x1361290")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CB2D4", Offset = "0x8CB2D4")]
			remove
			{
			}
		}

		[Token(Token = "0x6001E91")]
		[Address(RVA = "0x1361334", Offset = "0x1361334", VA = "0x1361334")]
		public LinkWidget()
		{
		}

		[Token(Token = "0x6001E92")]
		[Address(RVA = "0x1351790", Offset = "0x1351790", VA = "0x1351790")]
		public LinkWidget(IWidget content)
		{
		}

		[Token(Token = "0x6001E93")]
		[Address(RVA = "0x136133C", Offset = "0x136133C", VA = "0x136133C")]
		public LinkWidget SetContent(IWidget content)
		{
			return null;
		}

		[Token(Token = "0x6001E94")]
		[Address(RVA = "0x1361344", Offset = "0x1361344", VA = "0x1361344")]
		public LinkWidget SetHighlightColor(Color color)
		{
			return null;
		}

		[Token(Token = "0x6001E95")]
		[Address(RVA = "0x1351824", Offset = "0x1351824", VA = "0x1351824")]
		public LinkWidget SetUserData(object userdata)
		{
			return null;
		}

		[Token(Token = "0x6001E96")]
		[Address(RVA = "0x135182C", Offset = "0x135182C", VA = "0x135182C")]
		public LinkWidget SetDrawLinkOutline(bool drawLinkOutline)
		{
			return null;
		}

		[Token(Token = "0x6001E97")]
		[Address(RVA = "0x1361350", Offset = "0x1361350", VA = "0x1361350", Slot = "25")]
		public override void UpdateWidget(UISystem uiSystem, Rect bounds)
		{
		}

		[Token(Token = "0x6001E98")]
		[Address(RVA = "0x13614DC", Offset = "0x13614DC", VA = "0x13614DC", Slot = "24")]
		public override void Draw(UISystem uiSystem, UIRenderer renderer)
		{
		}

		[Token(Token = "0x6001E99")]
		[Address(RVA = "0x1361708", Offset = "0x1361708", VA = "0x1361708", Slot = "22")]
		public override bool RequiresInputEveryFrame()
		{
			return default(bool);
		}

		[Token(Token = "0x6001E9A")]
		[Address(RVA = "0x1361710", Offset = "0x1361710", VA = "0x1361710", Slot = "29")]
		public override bool IsCompositeWidget()
		{
			return default(bool);
		}

		[Token(Token = "0x6001E9B")]
		[Address(RVA = "0x1361718", Offset = "0x1361718", VA = "0x1361718", Slot = "30")]
		public override IWidget[] GetChildWidgets()
		{
			return null;
		}

		[Token(Token = "0x6001E9C")]
		[Address(RVA = "0x13617BC", Offset = "0x13617BC", VA = "0x13617BC", Slot = "23")]
		public override UnityEngine.Vector2 GetDesiredSize(UnityEngine.Vector2 size, UISystem uiSystem)
		{
			return default(UnityEngine.Vector2);
		}

		[Token(Token = "0x6001E9D")]
		[Address(RVA = "0x1361898", Offset = "0x1361898", VA = "0x1361898", Slot = "28")]
		public override void HandleInput(Event e, UISystem uiSystem)
		{
		}
	}
	[Token(Token = "0x2000425")]
	public abstract class ListViewSource<T>
	{
		[Token(Token = "0x6001E9E")]
		public abstract T[] GetItems();

		[Token(Token = "0x6001E9F")]
		public abstract IWidget CreateWidget(T item);

		[Token(Token = "0x6001EA0")]
		protected ListViewSource()
		{
		}
	}
	[Token(Token = "0x2000426")]
	public delegate void OnListViewItemSelected(object data);
	[Token(Token = "0x2000427")]
	public interface IListViewItemWidget
	{
		[Token(Token = "0x1700039E")]
		bool Selected
		{
			[Token(Token = "0x6001EA9")]
			get;
			[Token(Token = "0x6001EAA")]
			set;
		}

		[Token(Token = "0x1700039F")]
		object ItemData
		{
			[Token(Token = "0x6001EAB")]
			get;
			[Token(Token = "0x6001EAC")]
			set;
		}

		[Token(Token = "0x1400003E")]
		event OnListViewItemSelected ItemSelected;

		[Token(Token = "0x1400003F")]
		event OnListViewItemSelected ItemDoubleClicked;

		[Token(Token = "0x6001EAD")]
		string GetCaption();
	}
	[Token(Token = "0x2000428")]
	public class ListViewWidget<T> : WidgetBase
	{
		[Token(Token = "0x200087B")]
		public delegate void OnSelectionChanged(T Item);

		[Token(Token = "0x4001984")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private ListViewSource<T> dataSource;

		[Token(Token = "0x4001985")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T selectedItem;

		[Token(Token = "0x4001989")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ScrollPanelWidget ScrollView;

		[Token(Token = "0x400198A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int ItemHeight;

		[Token(Token = "0x400198B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Color backgroundColor;

		[Token(Token = "0x400198C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private StackPanelWidget panel;

		[Token(Token = "0x400198D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private IWidget layout;

		[Token(Token = "0x14000040")]
		public event OnSelectionChanged SelectionChanged
		{
			[Token(Token = "0x6001EAE")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CB324", Offset = "0x8CB324")]
			add
			{
			}
			[Token(Token = "0x6001EAF")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CB334", Offset = "0x8CB334")]
			remove
			{
			}
		}

		[Token(Token = "0x14000041")]
		public event OnSelectionChanged ItemClicked
		{
			[Token(Token = "0x6001EB0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CB344", Offset = "0x8CB344")]
			add
			{
			}
			[Token(Token = "0x6001EB1")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CB354", Offset = "0x8CB354")]
			remove
			{
			}
		}

		[Token(Token = "0x14000042")]
		public event OnSelectionChanged ItemDoubleClicked
		{
			[Token(Token = "0x6001EB2")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CB364", Offset = "0x8CB364")]
			add
			{
			}
			[Token(Token = "0x6001EB3")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CB374", Offset = "0x8CB374")]
			remove
			{
			}
		}

		[Token(Token = "0x6001EB4")]
		public void Bind(ListViewSource<T> dataSource)
		{
		}

		[Token(Token = "0x6001EB5")]
		private bool IsEqual(T a, T b)
		{
			return default(bool);
		}

		[Token(Token = "0x6001EB6")]
		private void BuildLayout()
		{
		}

		[Token(Token = "0x6001EB7")]
		private void ListViewItemWidget_ItemDoubleClicked(object data)
		{
		}

		[Token(Token = "0x6001EB8")]
		private void ListViewItemWidget_ItemSelected(object data)
		{
		}

		[Token(Token = "0x6001EB9")]
		public override UnityEngine.Vector2 GetDesiredSize(UnityEngine.Vector2 size, UISystem uiSystem)
		{
			return default(UnityEngine.Vector2);
		}

		[Token(Token = "0x6001EBA")]
		public override bool IsCompositeWidget()
		{
			return default(bool);
		}

		[Token(Token = "0x6001EBB")]
		public override IWidget[] GetChildWidgets()
		{
			return null;
		}

		[Token(Token = "0x6001EBC")]
		public void NotifyDataChanged()
		{
		}

		[Token(Token = "0x6001EBD")]
		public override void UpdateWidget(UISystem uiSystem, Rect bounds)
		{
		}

		[Token(Token = "0x6001EBE")]
		public override void Draw(UISystem uiSystem, UIRenderer renderer)
		{
		}

		[Token(Token = "0x6001EBF")]
		public override bool CanAcquireFocus()
		{
			return default(bool);
		}

		[Token(Token = "0x6001EC0")]
		public int GetSelectedIndex()
		{
			return default(int);
		}

		[Token(Token = "0x6001EC1")]
		public T GetSelectedItem()
		{
			return (T)null;
		}

		[Token(Token = "0x6001EC2")]
		public T GetItem(int index)
		{
			return (T)null;
		}

		[Token(Token = "0x6001EC3")]
		public void SetSelectedItem(UISystem uiSystem, T item)
		{
		}

		[Token(Token = "0x6001EC4")]
		public void SetSelectedItem(UISystem uiSystem, T item, bool selectOnInspector)
		{
		}

		[Token(Token = "0x6001EC5")]
		private bool IsNull(T item)
		{
			return default(bool);
		}

		[Token(Token = "0x6001EC6")]
		public void SetSelectedIndex(int index)
		{
		}

		[Token(Token = "0x6001EC7")]
		public ListViewWidget()
		{
		}
	}
	[Token(Token = "0x2000429")]
	public class ListViewTextItemWidget : WidgetBase, IListViewItemWidget
	{
		[Token(Token = "0x400198E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C03C8", Offset = "0x8C03C8")]
		private bool <Selected>k__BackingField;

		[Token(Token = "0x400198F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C03D8", Offset = "0x8C03D8")]
		private object <ItemData>k__BackingField;

		[Token(Token = "0x4001990")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public GUIStyle TextStyle;

		[Token(Token = "0x4001991")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public GUIStyle SelectedTextStyle;

		[Token(Token = "0x4001992")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Color SelectedColor;

		[Token(Token = "0x4001993")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public float OffsetX;

		[Token(Token = "0x4001994")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Func<string> captionGetter;

		[Token(Token = "0x170003A0")]
		public bool Selected
		{
			[Token(Token = "0x6001EC8")]
			[Address(RVA = "0x1361D8C", Offset = "0x1361D8C", VA = "0x1361D8C", Slot = "37")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CB384", Offset = "0x8CB384")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001EC9")]
			[Address(RVA = "0x1361D94", Offset = "0x1361D94", VA = "0x1361D94", Slot = "38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CB394", Offset = "0x8CB394")]
			set
			{
			}
		}

		[Token(Token = "0x170003A1")]
		public object ItemData
		{
			[Token(Token = "0x6001ECA")]
			[Address(RVA = "0x1361DA0", Offset = "0x1361DA0", VA = "0x1361DA0", Slot = "39")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CB3A4", Offset = "0x8CB3A4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001ECB")]
			[Address(RVA = "0x1361DA8", Offset = "0x1361DA8", VA = "0x1361DA8", Slot = "40")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CB3B4", Offset = "0x8CB3B4")]
			set
			{
			}
		}

		[Token(Token = "0x14000043")]
		public event OnListViewItemSelected ItemSelected
		{
			[Token(Token = "0x6001ECC")]
			[Address(RVA = "0x1361DB0", Offset = "0x1361DB0", VA = "0x1361DB0", Slot = "33")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CB3C4", Offset = "0x8CB3C4")]
			add
			{
			}
			[Token(Token = "0x6001ECD")]
			[Address(RVA = "0x1361E54", Offset = "0x1361E54", VA = "0x1361E54", Slot = "34")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CB3D4", Offset = "0x8CB3D4")]
			remove
			{
			}
		}

		[Token(Token = "0x14000044")]
		public event OnListViewItemSelected ItemDoubleClicked
		{
			[Token(Token = "0x6001ECE")]
			[Address(RVA = "0x1361EF8", Offset = "0x1361EF8", VA = "0x1361EF8", Slot = "35")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CB3E4", Offset = "0x8CB3E4")]
			add
			{
			}
			[Token(Token = "0x6001ECF")]
			[Address(RVA = "0x1361F9C", Offset = "0x1361F9C", VA = "0x1361F9C", Slot = "36")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CB3F4", Offset = "0x8CB3F4")]
			remove
			{
			}
		}

		[Token(Token = "0x6001ED0")]
		[Address(RVA = "0x1362040", Offset = "0x1362040", VA = "0x1362040")]
		public ListViewTextItemWidget(object itemData, Func<string> captionGetter)
		{
		}

		[Token(Token = "0x6001ED1")]
		[Address(RVA = "0x1362168", Offset = "0x1362168", VA = "0x1362168", Slot = "24")]
		public override void Draw(UISystem uiSystem, UIRenderer renderer)
		{
		}

		[Token(Token = "0x6001ED2")]
		[Address(RVA = "0x1362348", Offset = "0x1362348", VA = "0x1362348", Slot = "42")]
		public virtual void DrawText(UIRenderer renderer, Rect bounds)
		{
		}

		[Token(Token = "0x6001ED3")]
		[Address(RVA = "0x136250C", Offset = "0x136250C", VA = "0x136250C", Slot = "41")]
		public string GetCaption()
		{
			return null;
		}

		[Token(Token = "0x6001ED4")]
		[Address(RVA = "0x1362574", Offset = "0x1362574", VA = "0x1362574", Slot = "28")]
		public override void HandleInput(Event e, UISystem uiSystem)
		{
		}

		[Token(Token = "0x6001ED5")]
		[Address(RVA = "0x1362A5C", Offset = "0x1362A5C", VA = "0x1362A5C", Slot = "32")]
		protected override void HandleDragStart(Event e, UISystem uiSystem)
		{
		}

		[Token(Token = "0x6001ED6")]
		[Address(RVA = "0x1362B60", Offset = "0x1362B60", VA = "0x1362B60", Slot = "21")]
		public override bool CanAcquireFocus()
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200042A")]
	public enum SplitterDirection
	{
		[Token(Token = "0x4001998")]
		Horizontal,
		[Token(Token = "0x4001999")]
		Vertical
	}
	[Token(Token = "0x200042B")]
	public class SplitterNode
	{
		[Token(Token = "0x400199A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public IWidget Content;

		[Token(Token = "0x400199B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float Weight;

		[Token(Token = "0x400199C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool IsSplitBar;

		[Token(Token = "0x6001ED7")]
		[Address(RVA = "0xBE33EC", Offset = "0xBE33EC", VA = "0xBE33EC")]
		public SplitterNode()
		{
		}
	}
	[Token(Token = "0x200042C")]
	public delegate void OnSplitBarResized(SplitterNode prev, SplitterNode next);
	[Token(Token = "0x200042D")]
	public class Splitter : WidgetBase
	{
		[Token(Token = "0x400199D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private SplitterDirection direction;

		[Token(Token = "0x400199E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public bool freeSize;

		[Token(Token = "0x400199F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float minWindowSize;

		[Token(Token = "0x40019A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float barSize;

		[Token(Token = "0x40019A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Color barColor;

		[Token(Token = "0x40019A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Color barHighlightColor;

		[Token(Token = "0x40019A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private List<SplitterNode> nodes;

		[Token(Token = "0x170003A2")]
		public SplitterDirection Direction
		{
			[Token(Token = "0x6001EDC")]
			[Address(RVA = "0xBE3058", Offset = "0xBE3058", VA = "0xBE3058")]
			get
			{
				return default(SplitterDirection);
			}
		}

		[Token(Token = "0x14000045")]
		public event OnSplitBarResized SplitBarDragged
		{
			[Token(Token = "0x6001EDD")]
			[Address(RVA = "0xBE3060", Offset = "0xBE3060", VA = "0xBE3060")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CB404", Offset = "0x8CB404")]
			add
			{
			}
			[Token(Token = "0x6001EDE")]
			[Address(RVA = "0xBE3104", Offset = "0xBE3104", VA = "0xBE3104")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CB414", Offset = "0x8CB414")]
			remove
			{
			}
		}

		[Token(Token = "0x6001EDF")]
		[Address(RVA = "0xBE31A8", Offset = "0xBE31A8", VA = "0xBE31A8")]
		public Splitter(SplitterDirection direction)
		{
		}

		[Token(Token = "0x6001EE0")]
		[Address(RVA = "0xBE328C", Offset = "0xBE328C", VA = "0xBE328C")]
		public Splitter SetMinWindowSize(float minWindowSize)
		{
			return null;
		}

		[Token(Token = "0x6001EE1")]
		[Address(RVA = "0xBE3294", Offset = "0xBE3294", VA = "0xBE3294")]
		public Splitter SetBarSize(float barSize)
		{
			return null;
		}

		[Token(Token = "0x6001EE2")]
		[Address(RVA = "0xBE329C", Offset = "0xBE329C", VA = "0xBE329C")]
		public Splitter SetFreeSize(bool freeSize)
		{
			return null;
		}

		[Token(Token = "0x6001EE3")]
		[Address(RVA = "0xBE32A8", Offset = "0xBE32A8", VA = "0xBE32A8")]
		public Splitter AddWidget(IWidget widget)
		{
			return null;
		}

		[Token(Token = "0x6001EE4")]
		[Address(RVA = "0xBE32B0", Offset = "0xBE32B0", VA = "0xBE32B0")]
		public Splitter AddWidget(IWidget widget, float weight)
		{
			return null;
		}

		[Token(Token = "0x6001EE5")]
		[Address(RVA = "0xBE3424", Offset = "0xBE3424", VA = "0xBE3424", Slot = "29")]
		public override bool IsCompositeWidget()
		{
			return default(bool);
		}

		[Token(Token = "0x6001EE6")]
		[Address(RVA = "0xBE342C", Offset = "0xBE342C", VA = "0xBE342C", Slot = "30")]
		public override IWidget[] GetChildWidgets()
		{
			return null;
		}

		[Token(Token = "0x6001EE7")]
		[Address(RVA = "0xBE3588", Offset = "0xBE3588", VA = "0xBE3588")]
		public void OnSplitBarDragged(SplitterDragBarWidget barWidget, UnityEngine.Vector2 delta)
		{
		}

		[Token(Token = "0x6001EE8")]
		[Address(RVA = "0xBE3AE4", Offset = "0xBE3AE4", VA = "0xBE3AE4", Slot = "25")]
		public override void UpdateWidget(UISystem uiSystem, Rect bounds)
		{
		}

		[Token(Token = "0x6001EE9")]
		[Address(RVA = "0xBE3DE8", Offset = "0xBE3DE8", VA = "0xBE3DE8", Slot = "24")]
		public override void Draw(UISystem uiSystem, UIRenderer renderer)
		{
		}

		[Token(Token = "0x6001EEA")]
		[Address(RVA = "0xBE3ED8", Offset = "0xBE3ED8", VA = "0xBE3ED8", Slot = "28")]
		public override void HandleInput(Event e, UISystem uiSystem)
		{
		}

		[Token(Token = "0x6001EEB")]
		[Address(RVA = "0xBE3CD4", Offset = "0xBE3CD4", VA = "0xBE3CD4")]
		private Rect GetWidgetBounds(UnityEngine.Vector2 hostSize, float offset, float size)
		{
			return default(Rect);
		}

		[Token(Token = "0x6001EEC")]
		[Address(RVA = "0xBE3858", Offset = "0xBE3858", VA = "0xBE3858")]
		private float[] GetLayoutSizes(UnityEngine.Vector2 windowSize)
		{
			return null;
		}

		[Token(Token = "0x6001EED")]
		[Address(RVA = "0xBE3FEC", Offset = "0xBE3FEC", VA = "0xBE3FEC", Slot = "23")]
		public override UnityEngine.Vector2 GetDesiredSize(UnityEngine.Vector2 size, UISystem uiSystem)
		{
			return default(UnityEngine.Vector2);
		}
	}
	[Token(Token = "0x200042E")]
	public class SplitterDragBarWidget : WidgetBase
	{
		[Token(Token = "0x40019A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Splitter parent;

		[Token(Token = "0x6001EEE")]
		[Address(RVA = "0xBE33F4", Offset = "0xBE33F4", VA = "0xBE33F4")]
		public SplitterDragBarWidget(Splitter parent)
		{
		}

		[Token(Token = "0x6001EEF")]
		[Address(RVA = "0xBE4134", Offset = "0xBE4134", VA = "0xBE4134", Slot = "21")]
		public override bool CanAcquireFocus()
		{
			return default(bool);
		}

		[Token(Token = "0x6001EF0")]
		[Address(RVA = "0xBE413C", Offset = "0xBE413C", VA = "0xBE413C", Slot = "24")]
		public override void Draw(UISystem uiSystem, UIRenderer renderer)
		{
		}

		[Token(Token = "0x6001EF1")]
		[Address(RVA = "0xBE4264", Offset = "0xBE4264", VA = "0xBE4264")]
		private void DrawBar(UIRenderer renderer, Rect bounds, Color barColor)
		{
		}

		[Token(Token = "0x6001EF2")]
		[Address(RVA = "0xBE44A4", Offset = "0xBE44A4", VA = "0xBE44A4", Slot = "28")]
		public override void HandleInput(Event e, UISystem uiSystem)
		{
		}

		[Token(Token = "0x6001EF3")]
		[Address(RVA = "0xBE4550", Offset = "0xBE4550", VA = "0xBE4550", Slot = "27")]
		protected override void DrawFocusHighlight(UISystem uiSystem, UIRenderer renderer)
		{
		}
	}
	[Token(Token = "0x200042F")]
	public class DebugWidget : WidgetBase
	{
		[Token(Token = "0x40019A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Color debugColor;

		[Token(Token = "0x40019A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private string caption;

		[Token(Token = "0x6001EF4")]
		[Address(RVA = "0x13527CC", Offset = "0x13527CC", VA = "0x13527CC")]
		public DebugWidget()
		{
		}

		[Token(Token = "0x6001EF5")]
		[Address(RVA = "0x1352850", Offset = "0x1352850", VA = "0x1352850")]
		public DebugWidget(string caption, Color color)
		{
		}

		[Token(Token = "0x6001EF6")]
		[Address(RVA = "0x13528FC", Offset = "0x13528FC", VA = "0x13528FC", Slot = "24")]
		public override void Draw(UISystem uiSystem, UIRenderer renderer)
		{
		}
	}
	[Token(Token = "0x2000430")]
	public class BreadCrumbWidgetNode
	{
		[Token(Token = "0x40019A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string displayText;

		[Token(Token = "0x40019A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public object userdata;

		[Token(Token = "0x6001EF7")]
		[Address(RVA = "0x13512D8", Offset = "0x13512D8", VA = "0x13512D8")]
		public BreadCrumbWidgetNode(string displayText, object userdata)
		{
		}
	}
	[Token(Token = "0x2000431")]
	public delegate void OnBreadCrumbLinkClicked(object userdata);
	[Token(Token = "0x2000432")]
	public class BreadCrumbWidget : WidgetBase
	{
		[Token(Token = "0x40019AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private IWidget content;

		[Token(Token = "0x40019AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int padding;

		[Token(Token = "0x40019AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private bool requestRebuild;

		[Token(Token = "0x40019AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private List<BreadCrumbWidgetNode> items;

		[Token(Token = "0x40019AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C0428", Offset = "0x8C0428")]
		private int <FontSize>k__BackingField;

		[Token(Token = "0x40019B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C0438", Offset = "0x8C0438")]
		private Color <TextColor>k__BackingField;

		[Token(Token = "0x170003A3")]
		public int FontSize
		{
			[Token(Token = "0x6001EFE")]
			[Address(RVA = "0x1350F64", Offset = "0x1350F64", VA = "0x1350F64")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CB444", Offset = "0x8CB444")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001EFF")]
			[Address(RVA = "0x1350F6C", Offset = "0x1350F6C", VA = "0x1350F6C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CB454", Offset = "0x8CB454")]
			set
			{
			}
		}

		[Token(Token = "0x170003A4")]
		public Color TextColor
		{
			[Token(Token = "0x6001F00")]
			[Address(RVA = "0x1350F74", Offset = "0x1350F74", VA = "0x1350F74")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CB464", Offset = "0x8CB464")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6001F01")]
			[Address(RVA = "0x1350F80", Offset = "0x1350F80", VA = "0x1350F80")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CB474", Offset = "0x8CB474")]
			set
			{
			}
		}

		[Token(Token = "0x14000046")]
		public event OnBreadCrumbLinkClicked LinkClicked
		{
			[Token(Token = "0x6001EFC")]
			[Address(RVA = "0x1350E1C", Offset = "0x1350E1C", VA = "0x1350E1C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CB424", Offset = "0x8CB424")]
			add
			{
			}
			[Token(Token = "0x6001EFD")]
			[Address(RVA = "0x1350EC0", Offset = "0x1350EC0", VA = "0x1350EC0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CB434", Offset = "0x8CB434")]
			remove
			{
			}
		}

		[Token(Token = "0x6001F02")]
		[Address(RVA = "0x1350F8C", Offset = "0x1350F8C", VA = "0x1350F8C")]
		public BreadCrumbWidget()
		{
		}

		[Token(Token = "0x6001F03")]
		[Address(RVA = "0x1351028", Offset = "0x1351028", VA = "0x1351028")]
		public BreadCrumbWidget SetPadding(int padding)
		{
			return null;
		}

		[Token(Token = "0x6001F04")]
		[Address(RVA = "0x1351038", Offset = "0x1351038", VA = "0x1351038")]
		public object GetTopItemUserData()
		{
			return null;
		}

		[Token(Token = "0x6001F05")]
		[Address(RVA = "0x13510AC", Offset = "0x13510AC", VA = "0x13510AC", Slot = "29")]
		public override bool IsCompositeWidget()
		{
			return default(bool);
		}

		[Token(Token = "0x6001F06")]
		[Address(RVA = "0x13510B4", Offset = "0x13510B4", VA = "0x13510B4", Slot = "30")]
		public override IWidget[] GetChildWidgets()
		{
			return null;
		}

		[Token(Token = "0x6001F07")]
		[Address(RVA = "0x1351158", Offset = "0x1351158", VA = "0x1351158", Slot = "23")]
		public override UnityEngine.Vector2 GetDesiredSize(UnityEngine.Vector2 size, UISystem uiSystem)
		{
			return default(UnityEngine.Vector2);
		}

		[Token(Token = "0x6001F08")]
		[Address(RVA = "0x1351234", Offset = "0x1351234", VA = "0x1351234")]
		public void PushPage(string displayName, object userdata)
		{
		}

		[Token(Token = "0x6001F09")]
		[Address(RVA = "0x1351310", Offset = "0x1351310", VA = "0x1351310")]
		public void MoveToPage(BreadCrumbWidgetNode node)
		{
		}

		[Token(Token = "0x6001F0A")]
		[Address(RVA = "0x13513AC", Offset = "0x13513AC", VA = "0x13513AC")]
		public void Clear()
		{
		}

		[Token(Token = "0x6001F0B")]
		[Address(RVA = "0x1351410", Offset = "0x1351410", VA = "0x1351410")]
		private void Rebuild(UISystem uiSystem)
		{
		}

		[Token(Token = "0x6001F0C")]
		[Address(RVA = "0x13518EC", Offset = "0x13518EC", VA = "0x13518EC")]
		private void OnCrumbItemClicked(WidgetClickEvent clickEvent)
		{
		}

		[Token(Token = "0x6001F0D")]
		[Address(RVA = "0x1351D40", Offset = "0x1351D40", VA = "0x1351D40", Slot = "25")]
		public override void UpdateWidget(UISystem uiSystem, Rect bounds)
		{
		}

		[Token(Token = "0x6001F0E")]
		[Address(RVA = "0x1351EE4", Offset = "0x1351EE4", VA = "0x1351EE4", Slot = "24")]
		public override void Draw(UISystem uiSystem, UIRenderer renderer)
		{
		}
	}
	[Token(Token = "0x2000433")]
	public class GraphPanel<TGraphEditor> : WidgetBase where TGraphEditor : GraphEditor
	{
		[Token(Token = "0x40019B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private IWidget host;

		[Token(Token = "0x40019B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public BorderWidget Border;

		[Token(Token = "0x40019B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ToolbarWidget FloatingToolbar;

		[Token(Token = "0x40019B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ToolbarWidget Toolbar;

		[Token(Token = "0x40019B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public TGraphEditor GraphEditor;

		[Token(Token = "0x40019B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly string BTN_FOCUS_ON_GRAPH;

		[Token(Token = "0x6001F0F")]
		public GraphPanel(Graph graph, UnityEngine.Object assetObject, UISystem uiSystem)
		{
		}

		[Token(Token = "0x6001F10")]
		public GraphPanel(Graph graph, UnityEngine.Object assetObject, UISystem uiSystem, ToolbarWidget toolbar)
		{
		}

		[Token(Token = "0x6001F11")]
		private void Toolbar_ButtonPressed(UISystem uiSystem, string id)
		{
		}

		[Token(Token = "0x6001F12")]
		public void ResetCamera()
		{
		}

		[Token(Token = "0x6001F13")]
		public override void UpdateWidget(UISystem uiSystem, Rect bounds)
		{
		}

		[Token(Token = "0x6001F14")]
		public override void Draw(UISystem uiSystem, UIRenderer renderer)
		{
		}

		[Token(Token = "0x6001F15")]
		public override bool IsCompositeWidget()
		{
			return default(bool);
		}

		[Token(Token = "0x6001F16")]
		public override IWidget[] GetChildWidgets()
		{
			return null;
		}
	}
	[Token(Token = "0x2000434")]
	public enum GridPanelArrangementType
	{
		[Token(Token = "0x40019B8")]
		VerticalScroll
	}
	[Token(Token = "0x2000435")]
	internal class GridPanelNode
	{
		[Token(Token = "0x40019B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public IWidget Widget;

		[Token(Token = "0x6001F18")]
		[Address(RVA = "0x135F3D0", Offset = "0x135F3D0", VA = "0x135F3D0")]
		public GridPanelNode()
		{
		}
	}
	[Token(Token = "0x2000436")]
	public class GridPanelWidget : WidgetBase
	{
		[Token(Token = "0x40019BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<GridPanelNode> nodes;

		[Token(Token = "0x40019BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private GridPanelArrangementType arrangement;

		[Token(Token = "0x40019BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private IntVector2 padding;

		[Token(Token = "0x40019BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public UnityEngine.Vector2 cellSize;

		[Token(Token = "0x40019BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public UnityEngine.Vector2 desiredCellSize;

		[Token(Token = "0x40019BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public bool autoSize;

		[Token(Token = "0x40019C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private IntVector2 renderedCells;

		[Token(Token = "0x6001F19")]
		[Address(RVA = "0x135F3D8", Offset = "0x135F3D8", VA = "0x135F3D8")]
		public GridPanelWidget(GridPanelArrangementType arrangement)
		{
		}

		[Token(Token = "0x6001F1A")]
		[Address(RVA = "0x135F4F4", Offset = "0x135F4F4", VA = "0x135F4F4")]
		public GridPanelWidget AddWidget(IWidget Widget)
		{
			return null;
		}

		[Token(Token = "0x6001F1B")]
		[Address(RVA = "0x135F588", Offset = "0x135F588", VA = "0x135F588")]
		public GridPanelWidget SetArrangementType(GridPanelArrangementType arrangement)
		{
			return null;
		}

		[Token(Token = "0x6001F1C")]
		[Address(RVA = "0x135F590", Offset = "0x135F590", VA = "0x135F590")]
		public GridPanelArrangementType GetArrangementType()
		{
			return default(GridPanelArrangementType);
		}

		[Token(Token = "0x6001F1D")]
		[Address(RVA = "0x135F598", Offset = "0x135F598", VA = "0x135F598")]
		public GridPanelWidget SetPadding(int x, int y)
		{
			return null;
		}

		[Token(Token = "0x6001F1E")]
		[Address(RVA = "0x135F5D0", Offset = "0x135F5D0", VA = "0x135F5D0")]
		public GridPanelWidget SetAutoSize(bool autoSize)
		{
			return null;
		}

		[Token(Token = "0x6001F1F")]
		[Address(RVA = "0x135F5DC", Offset = "0x135F5DC", VA = "0x135F5DC")]
		public GridPanelWidget SetCellSize(float width, float height)
		{
			return null;
		}

		[Token(Token = "0x6001F20")]
		[Address(RVA = "0x135F614", Offset = "0x135F614", VA = "0x135F614", Slot = "23")]
		public override UnityEngine.Vector2 GetDesiredSize(UnityEngine.Vector2 size, UISystem uiSystem)
		{
			return default(UnityEngine.Vector2);
		}

		[Token(Token = "0x6001F21")]
		[Address(RVA = "0x135F680", Offset = "0x135F680", VA = "0x135F680")]
		private void UpdateDesiredCellSize(UISystem uiSystem)
		{
		}

		[Token(Token = "0x6001F22")]
		[Address(RVA = "0x135F91C", Offset = "0x135F91C", VA = "0x135F91C", Slot = "25")]
		public override void UpdateWidget(UISystem uiSystem, Rect bounds)
		{
		}

		[Token(Token = "0x6001F23")]
		[Address(RVA = "0x135FBA8", Offset = "0x135FBA8", VA = "0x135FBA8", Slot = "24")]
		public override void Draw(UISystem uiSystem, UIRenderer renderer)
		{
		}

		[Token(Token = "0x6001F24")]
		[Address(RVA = "0x135FC9C", Offset = "0x135FC9C", VA = "0x135FC9C", Slot = "29")]
		public override bool IsCompositeWidget()
		{
			return default(bool);
		}

		[Token(Token = "0x6001F25")]
		[Address(RVA = "0x135FCA4", Offset = "0x135FCA4", VA = "0x135FCA4", Slot = "30")]
		public override IWidget[] GetChildWidgets()
		{
			return null;
		}
	}
	[Token(Token = "0x2000437")]
	public enum OverlayPanelVAlign
	{
		[Token(Token = "0x40019C2")]
		Fill,
		[Token(Token = "0x40019C3")]
		Top,
		[Token(Token = "0x40019C4")]
		Center,
		[Token(Token = "0x40019C5")]
		Bottom
	}
	[Token(Token = "0x2000438")]
	public enum OverlayPanelHAlign
	{
		[Token(Token = "0x40019C7")]
		Fill,
		[Token(Token = "0x40019C8")]
		Left,
		[Token(Token = "0x40019C9")]
		Center,
		[Token(Token = "0x40019CA")]
		Right
	}
	[Token(Token = "0x2000439")]
	internal class OverlayPanelNode
	{
		[Token(Token = "0x40019CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public IWidget Widget;

		[Token(Token = "0x40019CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UnityEngine.Vector2 Size;

		[Token(Token = "0x40019CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UnityEngine.Vector2 Offset;

		[Token(Token = "0x40019CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public OverlayPanelVAlign VAlign;

		[Token(Token = "0x40019CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public OverlayPanelHAlign HAlign;

		[Token(Token = "0x40019D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Rect Bounds;

		[Token(Token = "0x6001F26")]
		[Address(RVA = "0x1363050", Offset = "0x1363050", VA = "0x1363050")]
		public OverlayPanelNode()
		{
		}
	}
	[Token(Token = "0x200043A")]
	public class OverlayPanelWidget : WidgetBase
	{
		[Token(Token = "0x40019D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<OverlayPanelNode> nodes;

		[Token(Token = "0x6001F27")]
		[Address(RVA = "0x1363104", Offset = "0x1363104", VA = "0x1363104")]
		public OverlayPanelWidget AddWidget(IWidget widget, OverlayPanelHAlign HAlign, OverlayPanelVAlign VAlign, UnityEngine.Vector2 size, UnityEngine.Vector2 offset)
		{
			return null;
		}

		[Token(Token = "0x6001F28")]
		[Address(RVA = "0x13631D0", Offset = "0x13631D0", VA = "0x13631D0")]
		public OverlayPanelWidget AddWidget(IWidget widget)
		{
			return null;
		}

		[Token(Token = "0x6001F29")]
		[Address(RVA = "0x136327C", Offset = "0x136327C", VA = "0x136327C", Slot = "25")]
		public override void UpdateWidget(UISystem uiSystem, Rect bounds)
		{
		}

		[Token(Token = "0x6001F2A")]
		[Address(RVA = "0x1363584", Offset = "0x1363584", VA = "0x1363584", Slot = "24")]
		public override void Draw(UISystem uiSystem, UIRenderer renderer)
		{
		}

		[Token(Token = "0x6001F2B")]
		[Address(RVA = "0x13636C4", Offset = "0x13636C4", VA = "0x13636C4")]
		private OverlayPanelNode FindIntersectingNode(UnityEngine.Vector2 position)
		{
			return null;
		}

		[Token(Token = "0x6001F2C")]
		[Address(RVA = "0x13632AC", Offset = "0x13632AC", VA = "0x13632AC")]
		public void UpdateNodeBounds(UISystem uiSystem)
		{
		}

		[Token(Token = "0x6001F2D")]
		[Address(RVA = "0x13637E4", Offset = "0x13637E4", VA = "0x13637E4", Slot = "29")]
		public override bool IsCompositeWidget()
		{
			return default(bool);
		}

		[Token(Token = "0x6001F2E")]
		[Address(RVA = "0x13637EC", Offset = "0x13637EC", VA = "0x13637EC", Slot = "30")]
		public override IWidget[] GetChildWidgets()
		{
			return null;
		}

		[Token(Token = "0x6001F2F")]
		[Address(RVA = "0x1363948", Offset = "0x1363948", VA = "0x1363948")]
		public OverlayPanelWidget()
		{
		}
	}
	[Token(Token = "0x200043B")]
	public class PanelWidget : WidgetBase
	{
		[Token(Token = "0x40019D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected IWidget Content;

		[Token(Token = "0x6001F30")]
		[Address(RVA = "0xBE224C", Offset = "0xBE224C", VA = "0xBE224C")]
		public PanelWidget()
		{
		}

		[Token(Token = "0x6001F31")]
		[Address(RVA = "0xBE22D4", Offset = "0xBE22D4", VA = "0xBE22D4")]
		public PanelWidget(IWidget content)
		{
		}

		[Token(Token = "0x6001F32")]
		[Address(RVA = "0xBE22FC", Offset = "0xBE22FC", VA = "0xBE22FC")]
		public PanelWidget SetContent(IWidget content)
		{
			return null;
		}

		[Token(Token = "0x6001F33")]
		[Address(RVA = "0xBE2304", Offset = "0xBE2304", VA = "0xBE2304", Slot = "25")]
		public override void UpdateWidget(UISystem uiSystem, Rect bounds)
		{
		}

		[Token(Token = "0x6001F34")]
		[Address(RVA = "0xBE248C", Offset = "0xBE248C", VA = "0xBE248C", Slot = "24")]
		public override void Draw(UISystem uiSystem, UIRenderer renderer)
		{
		}

		[Token(Token = "0x6001F35")]
		[Address(RVA = "0xBE2754", Offset = "0xBE2754", VA = "0xBE2754", Slot = "29")]
		public override bool IsCompositeWidget()
		{
			return default(bool);
		}

		[Token(Token = "0x6001F36")]
		[Address(RVA = "0xBE275C", Offset = "0xBE275C", VA = "0xBE275C", Slot = "30")]
		public override IWidget[] GetChildWidgets()
		{
			return null;
		}

		[Token(Token = "0x6001F37")]
		[Address(RVA = "0xBE2800", Offset = "0xBE2800", VA = "0xBE2800", Slot = "23")]
		public override UnityEngine.Vector2 GetDesiredSize(UnityEngine.Vector2 size, UISystem uiSystem)
		{
			return default(UnityEngine.Vector2);
		}
	}
	[Token(Token = "0x200043C")]
	public class ScrollPanelWidget : WidgetBase
	{
		[Token(Token = "0x40019D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private IWidget content;

		[Token(Token = "0x40019D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool MouseScrollingEnabled;

		[Token(Token = "0x6001F38")]
		[Address(RVA = "0xBE28F0", Offset = "0xBE28F0", VA = "0xBE28F0")]
		public ScrollPanelWidget(IWidget content)
		{
		}

		[Token(Token = "0x6001F39")]
		[Address(RVA = "0xBE292C", Offset = "0xBE292C", VA = "0xBE292C")]
		public ScrollPanelWidget(IWidget content, bool mouseScrollingEnabled)
		{
		}

		[Token(Token = "0x6001F3A")]
		[Address(RVA = "0xBE2970", Offset = "0xBE2970", VA = "0xBE2970", Slot = "24")]
		public override void Draw(UISystem uiSystem, UIRenderer renderer)
		{
		}

		[Token(Token = "0x6001F3B")]
		[Address(RVA = "0xBE2C88", Offset = "0xBE2C88", VA = "0xBE2C88", Slot = "25")]
		public override void UpdateWidget(UISystem uiSystem, Rect bounds)
		{
		}

		[Token(Token = "0x6001F3C")]
		[Address(RVA = "0xBE2ED0", Offset = "0xBE2ED0", VA = "0xBE2ED0", Slot = "23")]
		public override UnityEngine.Vector2 GetDesiredSize(UnityEngine.Vector2 size, UISystem uiSystem)
		{
			return default(UnityEngine.Vector2);
		}

		[Token(Token = "0x6001F3D")]
		[Address(RVA = "0xBE2FAC", Offset = "0xBE2FAC", VA = "0xBE2FAC", Slot = "29")]
		public override bool IsCompositeWidget()
		{
			return default(bool);
		}

		[Token(Token = "0x6001F3E")]
		[Address(RVA = "0xBE2FB4", Offset = "0xBE2FB4", VA = "0xBE2FB4", Slot = "30")]
		public override IWidget[] GetChildWidgets()
		{
			return null;
		}
	}
	[Token(Token = "0x200043D")]
	internal class StackPanelNode
	{
		[Token(Token = "0x40019D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public IWidget Widget;

		[Token(Token = "0x40019D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool AutoSize;

		[Token(Token = "0x40019D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool AdjustToDynamicDesiredSize;

		[Token(Token = "0x40019D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float Size;

		[Token(Token = "0x6001F3F")]
		[Address(RVA = "0xBE4640", Offset = "0xBE4640", VA = "0xBE4640")]
		public StackPanelNode()
		{
		}
	}
	[Token(Token = "0x200043E")]
	public enum StackPanelOrientation
	{
		[Token(Token = "0x40019DA")]
		Horizontal,
		[Token(Token = "0x40019DB")]
		Vertical
	}
	[Token(Token = "0x200043F")]
	public class StackPanelWidget : WidgetBase
	{
		[Token(Token = "0x40019DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<StackPanelNode> nodes;

		[Token(Token = "0x40019DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private StackPanelOrientation Orientation;

		[Token(Token = "0x6001F40")]
		[Address(RVA = "0xBE4650", Offset = "0xBE4650", VA = "0xBE4650")]
		public StackPanelWidget(StackPanelOrientation orientation)
		{
		}

		[Token(Token = "0x6001F41")]
		[Address(RVA = "0xBE46D8", Offset = "0xBE46D8", VA = "0xBE46D8")]
		public StackPanelWidget AddWidget(IWidget Widget)
		{
			return null;
		}

		[Token(Token = "0x6001F42")]
		[Address(RVA = "0xBE477C", Offset = "0xBE477C", VA = "0xBE477C")]
		public StackPanelWidget AddWidget(IWidget Widget, float size)
		{
			return null;
		}

		[Token(Token = "0x6001F43")]
		[Address(RVA = "0xBE4784", Offset = "0xBE4784", VA = "0xBE4784")]
		public StackPanelWidget AddWidget(IWidget Widget, float size, bool adjustToDynamicDesiredSize)
		{
			return null;
		}

		[Token(Token = "0x6001F44")]
		[Address(RVA = "0xBE483C", Offset = "0xBE483C", VA = "0xBE483C", Slot = "23")]
		public override UnityEngine.Vector2 GetDesiredSize(UnityEngine.Vector2 size, UISystem uiSystem)
		{
			return default(UnityEngine.Vector2);
		}

		[Token(Token = "0x6001F45")]
		[Address(RVA = "0xBE4BE4", Offset = "0xBE4BE4", VA = "0xBE4BE4", Slot = "25")]
		public override void UpdateWidget(UISystem uiSystem, Rect bounds)
		{
		}

		[Token(Token = "0x6001F46")]
		[Address(RVA = "0xBE50E4", Offset = "0xBE50E4", VA = "0xBE50E4", Slot = "24")]
		public override void Draw(UISystem uiSystem, UIRenderer renderer)
		{
		}

		[Token(Token = "0x6001F47")]
		[Address(RVA = "0xBE51D4", Offset = "0xBE51D4", VA = "0xBE51D4", Slot = "29")]
		public override bool IsCompositeWidget()
		{
			return default(bool);
		}

		[Token(Token = "0x6001F48")]
		[Address(RVA = "0xBE51DC", Offset = "0xBE51DC", VA = "0xBE51DC", Slot = "30")]
		public override IWidget[] GetChildWidgets()
		{
			return null;
		}
	}
	[Token(Token = "0x2000440")]
	public delegate void WidgetDragEvent(Event e, UISystem uiSystem);
	[Token(Token = "0x2000441")]
	public enum WidgetMessage
	{
		[Token(Token = "0x40019DF")]
		DrawHighlight
	}
	[Token(Token = "0x2000442")]
	public interface IWidget
	{
		[Token(Token = "0x170003A5")]
		Rect WidgetBounds
		{
			[Token(Token = "0x6001F56")]
			get;
			[Token(Token = "0x6001F57")]
			set;
		}

		[Token(Token = "0x170003A6")]
		bool ShowFocusHighlight
		{
			[Token(Token = "0x6001F58")]
			get;
			[Token(Token = "0x6001F59")]
			set;
		}

		[Token(Token = "0x170003A7")]
		UnityEngine.Vector2 ScrollPosition
		{
			[Token(Token = "0x6001F5A")]
			get;
			[Token(Token = "0x6001F5B")]
			set;
		}

		[Token(Token = "0x6001F4D")]
		void UpdateWidget(UISystem uiSystem, Rect bounds);

		[Token(Token = "0x6001F4E")]
		void Draw(UISystem uiSystem, UIRenderer renderer);

		[Token(Token = "0x6001F4F")]
		void HandleInput(Event e, UISystem uiSystem);

		[Token(Token = "0x6001F50")]
		void HandleMessage(UISystem uiSystem, WidgetMessage message);

		[Token(Token = "0x6001F51")]
		bool IsCompositeWidget();

		[Token(Token = "0x6001F52")]
		bool CanAcquireFocus();

		[Token(Token = "0x6001F53")]
		bool RequiresInputEveryFrame();

		[Token(Token = "0x6001F54")]
		IWidget[] GetChildWidgets();

		[Token(Token = "0x6001F55")]
		UnityEngine.Vector2 GetDesiredSize(UnityEngine.Vector2 size, UISystem uiSystem);
	}
	[Token(Token = "0x2000443")]
	public abstract class WidgetBase : IWidget
	{
		[Token(Token = "0x40019E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private bool showFocusHighlight;

		[Token(Token = "0x40019E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private Rect widgetBounds;

		[Token(Token = "0x40019E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private UnityEngine.Vector2 scrollPosition;

		[Token(Token = "0x40019E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool DragDropEnabled;

		[Token(Token = "0x170003A8")]
		public bool ShowFocusHighlight
		{
			[Token(Token = "0x6001F5C")]
			[Address(RVA = "0xBE6174", Offset = "0xBE6174", VA = "0xBE6174", Slot = "15")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001F5D")]
			[Address(RVA = "0xBE617C", Offset = "0xBE617C", VA = "0xBE617C", Slot = "16")]
			set
			{
			}
		}

		[Token(Token = "0x170003A9")]
		public Rect WidgetBounds
		{
			[Token(Token = "0x6001F5E")]
			[Address(RVA = "0xBE6188", Offset = "0xBE6188", VA = "0xBE6188", Slot = "13")]
			get
			{
				return default(Rect);
			}
			[Token(Token = "0x6001F5F")]
			[Address(RVA = "0xBE6194", Offset = "0xBE6194", VA = "0xBE6194", Slot = "14")]
			set
			{
			}
		}

		[Token(Token = "0x170003AA")]
		public virtual UnityEngine.Vector2 ScrollPosition
		{
			[Token(Token = "0x6001F60")]
			[Address(RVA = "0xBE61A0", Offset = "0xBE61A0", VA = "0xBE61A0", Slot = "19")]
			get
			{
				return default(UnityEngine.Vector2);
			}
			[Token(Token = "0x6001F61")]
			[Address(RVA = "0xBE61A8", Offset = "0xBE61A8", VA = "0xBE61A8", Slot = "20")]
			set
			{
			}
		}

		[Token(Token = "0x14000047")]
		public event WidgetDragEvent DragStart
		{
			[Token(Token = "0x6001F6D")]
			[Address(RVA = "0xBE66C4", Offset = "0xBE66C4", VA = "0xBE66C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CB484", Offset = "0x8CB484")]
			add
			{
			}
			[Token(Token = "0x6001F6E")]
			[Address(RVA = "0xBE6768", Offset = "0xBE6768", VA = "0xBE6768")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CB494", Offset = "0x8CB494")]
			remove
			{
			}
		}

		[Token(Token = "0x14000048")]
		public event WidgetDragEvent DragUpdate
		{
			[Token(Token = "0x6001F6F")]
			[Address(RVA = "0xBE680C", Offset = "0xBE680C", VA = "0xBE680C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CB4A4", Offset = "0x8CB4A4")]
			add
			{
			}
			[Token(Token = "0x6001F70")]
			[Address(RVA = "0xBE68B0", Offset = "0xBE68B0", VA = "0xBE68B0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CB4B4", Offset = "0x8CB4B4")]
			remove
			{
			}
		}

		[Token(Token = "0x14000049")]
		public event WidgetDragEvent DragPerform
		{
			[Token(Token = "0x6001F71")]
			[Address(RVA = "0xBE6954", Offset = "0xBE6954", VA = "0xBE6954")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CB4C4", Offset = "0x8CB4C4")]
			add
			{
			}
			[Token(Token = "0x6001F72")]
			[Address(RVA = "0xBE69F8", Offset = "0xBE69F8", VA = "0xBE69F8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CB4D4", Offset = "0x8CB4D4")]
			remove
			{
			}
		}

		[Token(Token = "0x6001F62")]
		[Address(RVA = "0xBE61B0", Offset = "0xBE61B0", VA = "0xBE61B0", Slot = "21")]
		public virtual bool CanAcquireFocus()
		{
			return default(bool);
		}

		[Token(Token = "0x6001F63")]
		[Address(RVA = "0xBE61B8", Offset = "0xBE61B8", VA = "0xBE61B8", Slot = "22")]
		public virtual bool RequiresInputEveryFrame()
		{
			return default(bool);
		}

		[Token(Token = "0x6001F64")]
		[Address(RVA = "0xBE28EC", Offset = "0xBE28EC", VA = "0xBE28EC", Slot = "23")]
		public virtual UnityEngine.Vector2 GetDesiredSize(UnityEngine.Vector2 size, UISystem uiSystem)
		{
			return default(UnityEngine.Vector2);
		}

		[Token(Token = "0x6001F65")]
		public abstract void Draw(UISystem uiSystem, UIRenderer renderer);

		[Token(Token = "0x6001F66")]
		[Address(RVA = "0xBE2480", Offset = "0xBE2480", VA = "0xBE2480", Slot = "25")]
		public virtual void UpdateWidget(UISystem uiSystem, Rect bounds)
		{
		}

		[Token(Token = "0x6001F67")]
		[Address(RVA = "0xBE61C0", Offset = "0xBE61C0", VA = "0xBE61C0", Slot = "26")]
		public virtual void HandleMessage(UISystem uiSystem, WidgetMessage message)
		{
		}

		[Token(Token = "0x6001F68")]
		[Address(RVA = "0xBE61C4", Offset = "0xBE61C4", VA = "0xBE61C4", Slot = "27")]
		protected virtual void DrawFocusHighlight(UISystem uiSystem, UIRenderer renderer)
		{
		}

		[Token(Token = "0x6001F69")]
		[Address(RVA = "0xBE3EDC", Offset = "0xBE3EDC", VA = "0xBE3EDC", Slot = "28")]
		public virtual void HandleInput(Event e, UISystem uiSystem)
		{
		}

		[Token(Token = "0x6001F6A")]
		[Address(RVA = "0xBE66AC", Offset = "0xBE66AC", VA = "0xBE66AC", Slot = "29")]
		public virtual bool IsCompositeWidget()
		{
			return default(bool);
		}

		[Token(Token = "0x6001F6B")]
		[Address(RVA = "0xBE66B4", Offset = "0xBE66B4", VA = "0xBE66B4", Slot = "30")]
		public virtual IWidget[] GetChildWidgets()
		{
			return null;
		}

		[Token(Token = "0x6001F6C")]
		[Address(RVA = "0xBE66BC", Offset = "0xBE66BC", VA = "0xBE66BC", Slot = "31")]
		protected virtual bool IsDragDataSupported(Event e, UISystem uiSystem)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F73")]
		[Address(RVA = "0xBE6A9C", Offset = "0xBE6A9C", VA = "0xBE6A9C", Slot = "32")]
		protected virtual void HandleDragStart(Event e, UISystem uiSystem)
		{
		}

		[Token(Token = "0x6001F74")]
		[Address(RVA = "0xBE63E8", Offset = "0xBE63E8", VA = "0xBE63E8")]
		private void HandleDragUpdate(Event e, UISystem uiSystem)
		{
		}

		[Token(Token = "0x6001F75")]
		[Address(RVA = "0xBE654C", Offset = "0xBE654C", VA = "0xBE654C")]
		private void HandleDragPerform(Event e, UISystem uiSystem)
		{
		}

		[Token(Token = "0x6001F76")]
		[Address(RVA = "0xBE2250", Offset = "0xBE2250", VA = "0xBE2250")]
		protected WidgetBase()
		{
		}
	}
	[Token(Token = "0x2000444")]
	public class NullWidget : WidgetBase
	{
		[Token(Token = "0x6001F77")]
		[Address(RVA = "0x1362B68", Offset = "0x1362B68", VA = "0x1362B68", Slot = "24")]
		public override void Draw(UISystem uiSystem, UIRenderer renderer)
		{
		}

		[Token(Token = "0x6001F78")]
		[Address(RVA = "0x134F5B0", Offset = "0x134F5B0", VA = "0x134F5B0")]
		public NullWidget()
		{
		}
	}
	[Token(Token = "0x2000445")]
	public class WidgetUtils
	{
		[Token(Token = "0x40019E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly Color FOCUS_HIGHLITE_COLOR;

		[Token(Token = "0x6001F79")]
		[Address(RVA = "0xBE713C", Offset = "0xBE713C", VA = "0xBE713C")]
		public static void GetWidgets(IWidget widget, ref List<IWidget> result)
		{
		}

		[Token(Token = "0x6001F7A")]
		public static List<T> GetWidgetsOfType<T>(IWidget root) where T : IWidget
		{
			return null;
		}

		[Token(Token = "0x6001F7B")]
		[Address(RVA = "0xBE7294", Offset = "0xBE7294", VA = "0xBE7294")]
		public static void HandleWidgetInput(UISystem uiSystem, Event e, UnityEngine.Vector2 mousePosition, IWidget widget)
		{
		}

		[Token(Token = "0x6001F7C")]
		[Address(RVA = "0xBE7768", Offset = "0xBE7768", VA = "0xBE7768")]
		public static bool BuildWidgetEvent(UnityEngine.Vector2 mousePosition, IWidget root, IWidget widgetToFind, ref UnityEngine.Vector2 widgetMousePosition)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F7D")]
		[Address(RVA = "0xBE7A68", Offset = "0xBE7A68", VA = "0xBE7A68")]
		public static bool FindWidgetOnCursor(Event e, IWidget widget, out Event outEvent, out IWidget outWidget)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F7E")]
		[Address(RVA = "0xBE7ED4", Offset = "0xBE7ED4", VA = "0xBE7ED4")]
		public static void ProcessDragOperation(Event e, IWidget widget, UISystem uiSystem)
		{
		}

		[Token(Token = "0x6001F7F")]
		[Address(RVA = "0xBE8054", Offset = "0xBE8054", VA = "0xBE8054")]
		public static bool ProcessInputFocus(UnityEngine.Vector2 mousePosition, UISystem uiSystem, IWidget widget)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F80")]
		[Address(RVA = "0xBE6310", Offset = "0xBE6310", VA = "0xBE6310")]
		public static void DrawWidgetFocusHighlight(UIRenderer renderer, Rect bounds, Color color)
		{
		}

		[Token(Token = "0x6001F81")]
		[Address(RVA = "0xBE8498", Offset = "0xBE8498", VA = "0xBE8498")]
		public static void DrawWidgetFocusHighlight(UIRenderer renderer, Rect bounds, Color color, float thickness)
		{
		}

		[Token(Token = "0x6001F82")]
		[Address(RVA = "0xBE85C0", Offset = "0xBE85C0", VA = "0xBE85C0")]
		public static void DrawWidgetFocusHighlight(UIRenderer renderer, Rect bounds, Color color, float thickness, Texture2D texture)
		{
		}

		[Token(Token = "0x6001F83")]
		[Address(RVA = "0xBE2520", Offset = "0xBE2520", VA = "0xBE2520")]
		public static void DrawWidgetGroup(UISystem uiSystem, UIRenderer renderer, IWidget widget)
		{
		}

		[Token(Token = "0x6001F84")]
		[Address(RVA = "0xBE8B54", Offset = "0xBE8B54", VA = "0xBE8B54")]
		public static bool IsDragEvent(Event e)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F85")]
		[Address(RVA = "0xBE8BCC", Offset = "0xBE8BCC", VA = "0xBE8BCC")]
		public WidgetUtils()
		{
		}
	}
	[Token(Token = "0x2000446")]
	public class HighlightWidget : WidgetBase
	{
		[Token(Token = "0x40019E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public IWidget Widget;

		[Token(Token = "0x40019E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public object ObjectOfInterest;

		[Token(Token = "0x40019EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Color HighlightColor;

		[Token(Token = "0x40019EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public float HighlightThickness;

		[Token(Token = "0x40019EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public float HighlightTime;

		[Token(Token = "0x40019ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private double lastUpdateTime;

		[Token(Token = "0x40019EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float remainingTime;

		[Token(Token = "0x40019EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Texture2D lineTexture;

		[Token(Token = "0x6001F87")]
		[Address(RVA = "0x135FE00", Offset = "0x135FE00", VA = "0x135FE00")]
		public HighlightWidget()
		{
		}

		[Token(Token = "0x6001F88")]
		[Address(RVA = "0x135FE48", Offset = "0x135FE48", VA = "0x135FE48")]
		public HighlightWidget SetContent(IWidget widget)
		{
			return null;
		}

		[Token(Token = "0x6001F89")]
		[Address(RVA = "0x135FE50", Offset = "0x135FE50", VA = "0x135FE50")]
		public HighlightWidget SetHighlightColor(Color highlightColor)
		{
			return null;
		}

		[Token(Token = "0x6001F8A")]
		[Address(RVA = "0x135FE5C", Offset = "0x135FE5C", VA = "0x135FE5C")]
		public HighlightWidget SetHighlightThickness(float highlightThickness)
		{
			return null;
		}

		[Token(Token = "0x6001F8B")]
		[Address(RVA = "0x135FE64", Offset = "0x135FE64", VA = "0x135FE64")]
		public HighlightWidget SetHighlightTime(float highlightTime)
		{
			return null;
		}

		[Token(Token = "0x6001F8C")]
		[Address(RVA = "0x135FE6C", Offset = "0x135FE6C", VA = "0x135FE6C")]
		public HighlightWidget SetObjectOfInterest(object objectOfInterest)
		{
			return null;
		}

		[Token(Token = "0x6001F8D")]
		[Address(RVA = "0x135FE74", Offset = "0x135FE74", VA = "0x135FE74", Slot = "24")]
		public override void Draw(UISystem uiSystem, UIRenderer renderer)
		{
		}

		[Token(Token = "0x6001F8E")]
		[Address(RVA = "0x13601C8", Offset = "0x13601C8", VA = "0x13601C8")]
		public void Activate(UISystem uiSystem)
		{
		}

		[Token(Token = "0x6001F8F")]
		[Address(RVA = "0x136029C", Offset = "0x136029C", VA = "0x136029C", Slot = "25")]
		public override void UpdateWidget(UISystem uiSystem, Rect bounds)
		{
		}

		[Token(Token = "0x6001F90")]
		[Address(RVA = "0x1360508", Offset = "0x1360508", VA = "0x1360508", Slot = "29")]
		public override bool IsCompositeWidget()
		{
			return default(bool);
		}

		[Token(Token = "0x6001F91")]
		[Address(RVA = "0x1360510", Offset = "0x1360510", VA = "0x1360510", Slot = "30")]
		public override IWidget[] GetChildWidgets()
		{
			return null;
		}
	}
	[Token(Token = "0x2000447")]
	public class ToolbarWidget : WidgetBase
	{
		[Token(Token = "0x200087C")]
		public delegate void OnButtonPressed(UISystem uiSystem, string id);

		[Token(Token = "0x200087D")]
		public class ButtonInfo
		{
			[Token(Token = "0x40029E8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string ButtonId;

			[Token(Token = "0x40029E9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string IconId;

			[Token(Token = "0x40029EA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Rect Bounds;

			[Token(Token = "0x6003035")]
			[Address(RVA = "0xBE6060", Offset = "0xBE6060", VA = "0xBE6060")]
			public ButtonInfo()
			{
			}
		}

		[Token(Token = "0x40019F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float ButtonSize;

		[Token(Token = "0x40019F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float Padding;

		[Token(Token = "0x40019F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Color Background;

		[Token(Token = "0x40019F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public List<ButtonInfo> buttons;

		[Token(Token = "0x40019F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private GUIStyle buttonStyle;

		[Token(Token = "0x1400004A")]
		public event OnButtonPressed ButtonPressed
		{
			[Token(Token = "0x6001F92")]
			[Address(RVA = "0xBE5338", Offset = "0xBE5338", VA = "0xBE5338")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CB4E4", Offset = "0x8CB4E4")]
			add
			{
			}
			[Token(Token = "0x6001F93")]
			[Address(RVA = "0xBE53DC", Offset = "0xBE53DC", VA = "0xBE53DC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CB4F4", Offset = "0x8CB4F4")]
			remove
			{
			}
		}

		[Token(Token = "0x6001F94")]
		[Address(RVA = "0xBE5480", Offset = "0xBE5480", VA = "0xBE5480", Slot = "25")]
		public override void UpdateWidget(UISystem uiSystem, Rect bounds)
		{
		}

		[Token(Token = "0x6001F95")]
		[Address(RVA = "0xBE56A4", Offset = "0xBE56A4", VA = "0xBE56A4", Slot = "24")]
		public override void Draw(UISystem uiSystem, UIRenderer renderer)
		{
		}

		[Token(Token = "0x6001F96")]
		[Address(RVA = "0xBE5FD0", Offset = "0xBE5FD0", VA = "0xBE5FD0")]
		public void AddButton(string buttonId, string iconId)
		{
		}

		[Token(Token = "0x6001F97")]
		[Address(RVA = "0xBE5564", Offset = "0xBE5564", VA = "0xBE5564")]
		private void UpdateButtonBounds()
		{
		}

		[Token(Token = "0x6001F98")]
		[Address(RVA = "0xBE6068", Offset = "0xBE6068", VA = "0xBE6068")]
		public ToolbarWidget SetBackground(Color background)
		{
			return null;
		}

		[Token(Token = "0x6001F99")]
		[Address(RVA = "0xBE6074", Offset = "0xBE6074", VA = "0xBE6074")]
		public ToolbarWidget SetButtonSize(int buttonSize)
		{
			return null;
		}

		[Token(Token = "0x6001F9A")]
		[Address(RVA = "0xBE6080", Offset = "0xBE6080", VA = "0xBE6080")]
		public ToolbarWidget()
		{
		}
	}
}
namespace DungeonArchitect.UI.Widgets.GraphEditors
{
	[Token(Token = "0x2000448")]
	public class EditorGraphBuilder : GraphBuilder
	{
		[Token(Token = "0x40019F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private UnityEngine.Object assetObject;

		[Token(Token = "0x40019F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private UIPlatform platform;

		[Token(Token = "0x6001F9B")]
		[Address(RVA = "0x13537E0", Offset = "0x13537E0", VA = "0x13537E0")]
		public EditorGraphBuilder(Graph graph, UnityEngine.Object assetObject, UIPlatform platform)
		{
		}

		[Token(Token = "0x6001F9C")]
		[Address(RVA = "0x1353818", Offset = "0x1353818", VA = "0x1353818", Slot = "5")]
		public override GraphNode CreateNode(Type nodeType, UIUndoSystem undo)
		{
			return null;
		}

		[Token(Token = "0x6001F9D")]
		[Address(RVA = "0x1353C98", Offset = "0x1353C98", VA = "0x1353C98", Slot = "4")]
		public override void DestroyNode(GraphNode node, UIUndoSystem undo)
		{
		}

		[Token(Token = "0x6001F9E")]
		public override TLink LinkNodes<TLink>(GraphPin outputPin, GraphPin inputPin)
		{
			return null;
		}
	}
	[Token(Token = "0x2000449")]
	public class GraphContextMenuEvent
	{
		[Token(Token = "0x40019F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GraphPin sourcePin;

		[Token(Token = "0x40019F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UnityEngine.Vector2 mouseWorldPosition;

		[Token(Token = "0x40019FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public object userdata;

		[Token(Token = "0x40019FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UISystem uiSystem;

		[Token(Token = "0x6001F9F")]
		[Address(RVA = "0x135486C", Offset = "0x135486C", VA = "0x135486C")]
		public GraphContextMenuEvent()
		{
		}
	}
	[Token(Token = "0x200044A")]
	public abstract class GraphContextMenu
	{
		[Token(Token = "0x200087E")]
		public delegate void OnRequestContextMenuCreation(Event e, UISystem uiSystem);

		[Token(Token = "0x200087F")]
		public delegate void OnMenuItemClicked(object userdata, GraphContextMenuEvent e);

		[Token(Token = "0x40019FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected bool dragged;

		[Token(Token = "0x40019FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		protected int dragButtonId;

		[Token(Token = "0x40019FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected GraphPin sourcePin;

		[Token(Token = "0x40019FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected UnityEngine.Vector2 mouseWorldPosition;

		[Token(Token = "0x1400004B")]
		public event OnRequestContextMenuCreation RequestContextMenuCreation
		{
			[Token(Token = "0x6001FA0")]
			[Address(RVA = "0x1354090", Offset = "0x1354090", VA = "0x1354090")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CB504", Offset = "0x8CB504")]
			add
			{
			}
			[Token(Token = "0x6001FA1")]
			[Address(RVA = "0x1354134", Offset = "0x1354134", VA = "0x1354134")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CB514", Offset = "0x8CB514")]
			remove
			{
			}
		}

		[Token(Token = "0x1400004C")]
		public event OnMenuItemClicked MenuItemClicked
		{
			[Token(Token = "0x6001FA2")]
			[Address(RVA = "0x13541D8", Offset = "0x13541D8", VA = "0x13541D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CB524", Offset = "0x8CB524")]
			add
			{
			}
			[Token(Token = "0x6001FA3")]
			[Address(RVA = "0x135427C", Offset = "0x135427C", VA = "0x135427C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CB534", Offset = "0x8CB534")]
			remove
			{
			}
		}

		[Token(Token = "0x6001FA4")]
		[Address(RVA = "0x1354320", Offset = "0x1354320", VA = "0x1354320")]
		public void HandleInput(Event e, UISystem uiSystem)
		{
		}

		[Token(Token = "0x6001FA5")]
		[Address(RVA = "0x13547DC", Offset = "0x13547DC", VA = "0x13547DC")]
		protected GraphContextMenuEvent BuildEvent(object userdata, UISystem uiSystem)
		{
			return null;
		}

		[Token(Token = "0x6001FA6")]
		public abstract void Show(GraphEditor graphEditor, GraphPin sourcePin, UnityEngine.Vector2 mouseWorld, UISystem uiSystem);

		[Token(Token = "0x6001FA7")]
		[Address(RVA = "0x1354874", Offset = "0x1354874", VA = "0x1354874")]
		protected void DispatchMenuItemEvent(object action, GraphContextMenuEvent e)
		{
		}

		[Token(Token = "0x6001FA8")]
		[Address(RVA = "0x1354C6C", Offset = "0x1354C6C", VA = "0x1354C6C")]
		protected GraphContextMenu()
		{
		}
	}
	[Token(Token = "0x200044B")]
	public class NullGraphContextMenu : GraphContextMenu
	{
		[Token(Token = "0x6001FA9")]
		[Address(RVA = "0x135E218", Offset = "0x135E218", VA = "0x135E218", Slot = "4")]
		public override void Show(GraphEditor graphEditor, GraphPin sourcePin, UnityEngine.Vector2 mouseWorld, UISystem uiSystem)
		{
		}

		[Token(Token = "0x6001FAA")]
		[Address(RVA = "0x135E21C", Offset = "0x135E21C", VA = "0x135E21C")]
		public NullGraphContextMenu()
		{
		}
	}
	[Token(Token = "0x200044C")]
	public class GraphRendererContext
	{
		[Token(Token = "0x4001A02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public UIResourceLookup Resources;

		[Token(Token = "0x4001A03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GraphEditor GraphEditor;

		[Token(Token = "0x6001FAB")]
		[Address(RVA = "0x135B8DC", Offset = "0x135B8DC", VA = "0x135B8DC")]
		public GraphRendererContext()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200044D")]
	public class GraphEditorStyle
	{
		[Token(Token = "0x4001A04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Color backgroundColor;

		[Token(Token = "0x4001A05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Color gridLineColorThick;

		[Token(Token = "0x4001A06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Color gridLineColorThin;

		[Token(Token = "0x4001A07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float gridCellSpacing;

		[Token(Token = "0x4001A08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public bool gridScaling;

		[Token(Token = "0x4001A09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public int gridNumCells;

		[Token(Token = "0x4001A0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public string branding;

		[Token(Token = "0x4001A0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Color brandingColor;

		[Token(Token = "0x4001A0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public int brandingSize;

		[Token(Token = "0x4001A0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public string readonlyText;

		[Token(Token = "0x4001A0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Color readonlyColor;

		[Token(Token = "0x4001A0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public int readonlySize;

		[Token(Token = "0x4001A10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public Color overlayTextColorLo;

		[Token(Token = "0x4001A11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public Color overlayTextColorHi;

		[Token(Token = "0x4001A12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		public Color selectionBoxColor;

		[Token(Token = "0x4001A13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		public Color commentTextColor;

		[Token(Token = "0x4001A14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		public bool displayAssetFilename;

		[Token(Token = "0x6001FAC")]
		[Address(RVA = "0x1354E24", Offset = "0x1354E24", VA = "0x1354E24")]
		public GraphEditorStyle()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200044E")]
	public abstract class GraphEditor : ScriptableObject, IWidget
	{
		[Serializable]
		[Token(Token = "0x2000880")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B8F10", Offset = "0x8B8F10")]
		private sealed class <>c
		{
			[Token(Token = "0x40029EB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40029EC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<GraphNode, bool> <>9__78_0;

			[Token(Token = "0x40029ED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<GraphNode, string> <>9__78_1;

			[Token(Token = "0x40029EE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Func<GraphNode, bool> <>9__82_0;

			[Token(Token = "0x600303F")]
			[Address(RVA = "0x135B9A8", Offset = "0x135B9A8", VA = "0x135B9A8")]
			public <>c()
			{
			}

			[Token(Token = "0x6003040")]
			[Address(RVA = "0x135B9B0", Offset = "0x135B9B0", VA = "0x135B9B0")]
			internal bool <PerformCopy>b__78_0(GraphNode node)
			{
				return default(bool);
			}

			[Token(Token = "0x6003041")]
			[Address(RVA = "0x135B9C8", Offset = "0x135B9C8", VA = "0x135B9C8")]
			internal string <PerformCopy>b__78_1(GraphNode node)
			{
				return null;
			}

			[Token(Token = "0x6003042")]
			[Address(RVA = "0x135B9E0", Offset = "0x135B9E0", VA = "0x135B9E0")]
			internal bool <OnNodeSelectionChanged>b__82_0(GraphNode node)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4001A15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		protected Graph graph;

		[Token(Token = "0x4001A16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		protected GraphCamera camera;

		[Token(Token = "0x4001A17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GraphEditorStyle editorStyle;

		[Token(Token = "0x4001A18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		protected UnityEngine.Object assetObject;

		[Token(Token = "0x4001A19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		protected GraphEditorEvents events;

		[Token(Token = "0x4001A1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		protected float renderCullingBias;

		[Token(Token = "0x4001A1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private bool showFocusHighlight;

		[Token(Token = "0x4001A1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Rect widgetBounds;

		[Token(Token = "0x4001A1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private UnityEngine.Vector2 scrollPosition;

		[Token(Token = "0x4001A1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C0508", Offset = "0x8C0508")]
		private IGraphLinkRenderer <GraphLinkRenderer>k__BackingField;

		[Token(Token = "0x4001A1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		protected GraphSelectionBox selectionBox;

		[Token(Token = "0x4001A20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private KeyboardState keyboardState;

		[Token(Token = "0x4001A21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private CursorDragLink cursorDragLink;

		[Token(Token = "0x4001A22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		protected GraphContextMenu contextMenu;

		[Token(Token = "0x4001A23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		protected GraphNodeRendererFactory nodeRenderers;

		[Token(Token = "0x4001A24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		protected GraphRendererContext rendererContext;

		[Token(Token = "0x4001A25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		protected UnityEngine.Vector2 lastMousePosition;

		[Token(Token = "0x4001A26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		protected Rect lastDrawBounds;

		[Token(Token = "0x4001A27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private bool graphReadOnly;

		[Token(Token = "0x4001A28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB1")]
		protected bool draggingNodes;

		[Token(Token = "0x170003AB")]
		public GraphCamera Camera
		{
			[Token(Token = "0x6001FAD")]
			[Address(RVA = "0x1354D14", Offset = "0x1354D14", VA = "0x1354D14")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003AC")]
		public GraphEditorStyle EditorStyle
		{
			[Token(Token = "0x6001FAE")]
			[Address(RVA = "0x1354D1C", Offset = "0x1354D1C", VA = "0x1354D1C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003AD")]
		public GraphEditorEvents Events
		{
			[Token(Token = "0x6001FAF")]
			[Address(RVA = "0x1354D58", Offset = "0x1354D58", VA = "0x1354D58")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003AE")]
		public bool ShowFocusHighlight
		{
			[Token(Token = "0x6001FB0")]
			[Address(RVA = "0x1354D60", Offset = "0x1354D60", VA = "0x1354D60", Slot = "15")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001FB1")]
			[Address(RVA = "0x1354D68", Offset = "0x1354D68", VA = "0x1354D68", Slot = "16")]
			set
			{
			}
		}

		[Token(Token = "0x170003AF")]
		public Rect WidgetBounds
		{
			[Token(Token = "0x6001FB2")]
			[Address(RVA = "0x1354D74", Offset = "0x1354D74", VA = "0x1354D74", Slot = "13")]
			get
			{
				return default(Rect);
			}
			[Token(Token = "0x6001FB3")]
			[Address(RVA = "0x1354D80", Offset = "0x1354D80", VA = "0x1354D80", Slot = "14")]
			set
			{
			}
		}

		[Token(Token = "0x170003B0")]
		public virtual UnityEngine.Vector2 ScrollPosition
		{
			[Token(Token = "0x6001FB4")]
			[Address(RVA = "0x1354D8C", Offset = "0x1354D8C", VA = "0x1354D8C", Slot = "19")]
			get
			{
				return default(UnityEngine.Vector2);
			}
			[Token(Token = "0x6001FB5")]
			[Address(RVA = "0x1354D94", Offset = "0x1354D94", VA = "0x1354D94", Slot = "20")]
			set
			{
			}
		}

		[Token(Token = "0x170003B1")]
		public IGraphLinkRenderer GraphLinkRenderer
		{
			[Token(Token = "0x6001FB6")]
			[Address(RVA = "0x1354D9C", Offset = "0x1354D9C", VA = "0x1354D9C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CB544", Offset = "0x8CB544")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001FB7")]
			[Address(RVA = "0x1354DA4", Offset = "0x1354DA4", VA = "0x1354DA4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CB554", Offset = "0x8CB554")]
			private set
			{
			}
		}

		[Token(Token = "0x170003B2")]
		public UnityEngine.Vector2 LastMousePosition
		{
			[Token(Token = "0x6001FB8")]
			[Address(RVA = "0x1354DAC", Offset = "0x1354DAC", VA = "0x1354DAC")]
			get
			{
				return default(UnityEngine.Vector2);
			}
		}

		[Token(Token = "0x170003B3")]
		public Graph Graph
		{
			[Token(Token = "0x6001FB9")]
			[Address(RVA = "0x1354DB4", Offset = "0x1354DB4", VA = "0x1354DB4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001FBA")]
		[Address(RVA = "0x1354DBC", Offset = "0x1354DBC", VA = "0x1354DBC", Slot = "9")]
		public bool CanAcquireFocus()
		{
			return default(bool);
		}

		[Token(Token = "0x6001FBB")]
		protected abstract GraphContextMenu CreateContextMenu();

		[Token(Token = "0x6001FBC")]
		protected abstract void InitializeNodeRenderers(GraphNodeRendererFactory nodeRenderers);

		[Token(Token = "0x6001FBD")]
		protected abstract IGraphLinkRenderer CreateGraphLinkRenderer();

		[Token(Token = "0x6001FBE")]
		protected abstract void OnMenuItemClicked(object userdata, GraphContextMenuEvent e);

		[Token(Token = "0x6001FBF")]
		[Address(RVA = "0x1354DC4", Offset = "0x1354DC4", VA = "0x1354DC4", Slot = "25")]
		protected virtual void SortNodesForDeletion(GraphNode[] nodesToDelete)
		{
		}

		[Token(Token = "0x6001FC0")]
		[Address(RVA = "0x1354DC8", Offset = "0x1354DC8", VA = "0x1354DC8", Slot = "26")]
		public virtual void SortPinsForDrawing(GraphPin[] pins)
		{
		}

		[Token(Token = "0x6001FC1")]
		[Address(RVA = "0x1354DCC", Offset = "0x1354DCC", VA = "0x1354DCC", Slot = "27")]
		protected virtual GraphEditorStyle CreateEditorStyle()
		{
			return null;
		}

		[Token(Token = "0x6001FC2")]
		[Address(RVA = "0x1355048", Offset = "0x1355048", VA = "0x1355048", Slot = "12")]
		public UnityEngine.Vector2 GetDesiredSize(UnityEngine.Vector2 size, UISystem uiSystem)
		{
			return default(UnityEngine.Vector2);
		}

		[Token(Token = "0x6001FC3")]
		[Address(RVA = "0x135504C", Offset = "0x135504C", VA = "0x135504C", Slot = "28")]
		public virtual void HandleMessage(UISystem uiSystem, WidgetMessage message)
		{
		}

		[Token(Token = "0x6001FC4")]
		[Address(RVA = "0x1355050", Offset = "0x1355050", VA = "0x1355050", Slot = "29")]
		protected virtual void DrawHighlight(UIRenderer renderer)
		{
		}

		[Token(Token = "0x6001FC5")]
		[Address(RVA = "0x13551A0", Offset = "0x13551A0", VA = "0x13551A0", Slot = "30")]
		public virtual void Init(Graph graph, Rect editorBounds, UnityEngine.Object assetObject, UISystem uiSystem)
		{
		}

		[Token(Token = "0x6001FC6")]
		[Address(RVA = "0x1355454", Offset = "0x1355454", VA = "0x1355454")]
		public void SetReadOnly(bool graphReadOnly)
		{
		}

		[Token(Token = "0x6001FC7")]
		[Address(RVA = "0x1355460", Offset = "0x1355460", VA = "0x1355460", Slot = "31")]
		public virtual void Release(UISystem uiSystem)
		{
		}

		[Token(Token = "0x6001FC8")]
		[Address(RVA = "0x1355554", Offset = "0x1355554", VA = "0x1355554")]
		protected void SetGraph(Graph graph)
		{
		}

		[Token(Token = "0x6001FC9")]
		[Address(RVA = "0x135555C", Offset = "0x135555C", VA = "0x135555C")]
		public void FocusCameraOnMarker(string markerName, Rect editorBounds)
		{
		}

		[Token(Token = "0x6001FCA")]
		[Address(RVA = "0x134DEB0", Offset = "0x134DEB0", VA = "0x134DEB0")]
		public void FocusCameraOnNode(GraphNode node)
		{
		}

		[Token(Token = "0x6001FCB")]
		[Address(RVA = "0x13556F8", Offset = "0x13556F8", VA = "0x13556F8", Slot = "32")]
		public virtual bool RequiresInputEveryFrame()
		{
			return default(bool);
		}

		[Token(Token = "0x6001FCC")]
		[Address(RVA = "0x134E2D4", Offset = "0x134E2D4", VA = "0x134E2D4")]
		public void FocusCameraOnBestFit(Rect editorBounds)
		{
		}

		[Token(Token = "0x6001FCD")]
		[Address(RVA = "0x1355700", Offset = "0x1355700", VA = "0x1355700")]
		public void FocusCameraOnBestFit()
		{
		}

		[Token(Token = "0x6001FCE")]
		[Address(RVA = "0x135572C", Offset = "0x135572C", VA = "0x135572C", Slot = "33")]
		public virtual void OnEnable()
		{
		}

		[Token(Token = "0x6001FCF")]
		[Address(RVA = "0x1355B1C", Offset = "0x1355B1C", VA = "0x1355B1C")]
		public void OnDisable()
		{
		}

		[Token(Token = "0x6001FD0")]
		[Address(RVA = "0x1355D44", Offset = "0x1355D44", VA = "0x1355D44")]
		public void OnDestroy()
		{
		}

		[Token(Token = "0x6001FD1")]
		[Address(RVA = "0x1355EAC", Offset = "0x1355EAC", VA = "0x1355EAC")]
		private void OnUndoRedoPerformed(UISystem uiSystem)
		{
		}

		[Token(Token = "0x6001FD2")]
		[Address(RVA = "0x1355EBC", Offset = "0x1355EBC", VA = "0x1355EBC", Slot = "34")]
		public virtual void HandleMarkedDirty(UISystem uiSystem)
		{
		}

		[Token(Token = "0x6001FD3")]
		[Address(RVA = "0x1355F88", Offset = "0x1355F88", VA = "0x1355F88", Slot = "35")]
		public virtual void UpdateWidget(UISystem uiSystem, Rect bounds)
		{
		}

		[Token(Token = "0x6001FD4")]
		[Address(RVA = "0x1355F94", Offset = "0x1355F94", VA = "0x1355F94", Slot = "36")]
		public virtual void Update()
		{
		}

		[Token(Token = "0x6001FD5")]
		[Address(RVA = "0x1355F98", Offset = "0x1355F98", VA = "0x1355F98", Slot = "37")]
		public virtual void HandleGraphStateChanged(UISystem uiSystem)
		{
		}

		[Token(Token = "0x6001FD6")]
		[Address(RVA = "0x1355F9C", Offset = "0x1355F9C", VA = "0x1355F9C", Slot = "38")]
		public virtual void HandleNodePropertyChanged(GraphNode node)
		{
		}

		[Token(Token = "0x6001FD7")]
		[Address(RVA = "0x1355FA0", Offset = "0x1355FA0", VA = "0x1355FA0")]
		private void HandleBoxSelection(Rect boundsScreenSpace, UISystem uiSystem)
		{
		}

		[Token(Token = "0x6001FD8")]
		[Address(RVA = "0x1356238", Offset = "0x1356238", VA = "0x1356238")]
		private bool SetSelectedState(GraphNode node, bool selected)
		{
			return default(bool);
		}

		[Token(Token = "0x6001FD9")]
		[Address(RVA = "0x1356280", Offset = "0x1356280", VA = "0x1356280")]
		private void HandleSelect(Event e, UISystem uiSystem)
		{
		}

		[Token(Token = "0x6001FDA")]
		[Address(RVA = "0x13566D8", Offset = "0x13566D8", VA = "0x13566D8")]
		protected GraphNode[] GetSelectedNodes()
		{
			return null;
		}

		[Token(Token = "0x6001FDB")]
		[Address(RVA = "0x1356840", Offset = "0x1356840", VA = "0x1356840")]
		private void HandleDrag(Event e, UISystem uiSystem)
		{
		}

		[Token(Token = "0x6001FDC")]
		[Address(RVA = "0x1356FC8", Offset = "0x1356FC8", VA = "0x1356FC8")]
		private void HandleDragPin(GraphPin pin, UISystem uiSystem)
		{
		}

		[Token(Token = "0x6001FDD")]
		[Address(RVA = "0x1356FE0", Offset = "0x1356FE0", VA = "0x1356FE0", Slot = "39")]
		public virtual void HandleInput(Event _e, UISystem uiSystem)
		{
		}

		[Token(Token = "0x6001FDE")]
		[Address(RVA = "0x1357814", Offset = "0x1357814", VA = "0x1357814")]
		private void PerformCopy(Event e, UISystem uiSystem)
		{
		}

		[Token(Token = "0x6001FDF")]
		[Address(RVA = "0x1357B20", Offset = "0x1357B20", VA = "0x1357B20", Slot = "40")]
		protected virtual GraphNode DuplicateNode(GraphNode sourceNode, UISystem uiSystem)
		{
			return null;
		}

		[Token(Token = "0x6001FE0")]
		[Address(RVA = "0x1357BFC", Offset = "0x1357BFC", VA = "0x1357BFC")]
		private void PerformPaste(Event e, UISystem uiSystem)
		{
		}

		[Token(Token = "0x6001FE1")]
		[Address(RVA = "0x135733C", Offset = "0x135733C", VA = "0x135733C")]
		private void HandleKeyboard(Event e, UISystem uiSystem)
		{
		}

		[Token(Token = "0x6001FE2")]
		[Address(RVA = "0x1357FF8", Offset = "0x1357FF8", VA = "0x1357FF8", Slot = "41")]
		public virtual void OnNodeSelectionChanged(UISystem uiSystem)
		{
		}

		[Token(Token = "0x6001FE3")]
		[Address(RVA = "0x13581F0", Offset = "0x13581F0", VA = "0x13581F0", Slot = "42")]
		public virtual void OnNodeDoubleClicked(UISystem uiSystem, GraphNode node)
		{
		}

		[Token(Token = "0x6001FE4")]
		[Address(RVA = "0x13582E0", Offset = "0x13582E0", VA = "0x13582E0")]
		private void OnRequestContextMenuCreation(Event e, UISystem uiSystem)
		{
		}

		[Token(Token = "0x6001FE5")]
		[Address(RVA = "0x135743C", Offset = "0x135743C", VA = "0x135743C")]
		private void HandleDelete(Event e, UISystem uiSystem)
		{
		}

		[Token(Token = "0x6001FE6")]
		[Address(RVA = "0x13586C8", Offset = "0x13586C8", VA = "0x13586C8")]
		public void DeleteNodes(GraphNode[] nodesToDelete, UISystem uiSystem)
		{
		}

		[Token(Token = "0x6001FE7")]
		[Address(RVA = "0x13587B8", Offset = "0x13587B8", VA = "0x13587B8", Slot = "43")]
		protected virtual void DestroyNode(GraphNode node, UISystem uiSystem)
		{
		}

		[Token(Token = "0x6001FE8")]
		[Address(RVA = "0x1358484", Offset = "0x1358484", VA = "0x1358484")]
		private void PerformDelete(Event e, UISystem uiSystem)
		{
		}

		[Token(Token = "0x6001FE9")]
		[Address(RVA = "0x1358804", Offset = "0x1358804", VA = "0x1358804", Slot = "44")]
		protected virtual void DrawOverlay(UIRenderer renderer, Rect bounds)
		{
		}

		[Token(Token = "0x6001FEA")]
		[Address(RVA = "0x1358808", Offset = "0x1358808", VA = "0x1358808", Slot = "45")]
		public virtual bool IsCompositeWidget()
		{
			return default(bool);
		}

		[Token(Token = "0x6001FEB")]
		[Address(RVA = "0x1358810", Offset = "0x1358810", VA = "0x1358810", Slot = "11")]
		public IWidget[] GetChildWidgets()
		{
			return null;
		}

		[Token(Token = "0x6001FEC")]
		[Address(RVA = "0x1358818", Offset = "0x1358818", VA = "0x1358818", Slot = "46")]
		public virtual void Draw(UISystem uiSystem, UIRenderer renderer)
		{
		}

		[Token(Token = "0x6001FED")]
		[Address(RVA = "0x1359FF0", Offset = "0x1359FF0", VA = "0x1359FF0")]
		private void DrawEditorStats(UIRenderer renderer, Rect bounds)
		{
		}

		[Token(Token = "0x6001FEE")]
		[Address(RVA = "0x1359A2C", Offset = "0x1359A2C", VA = "0x1359A2C")]
		private void DrawBranding(UIRenderer renderer, Rect bounds)
		{
		}

		[Token(Token = "0x6001FEF")]
		[Address(RVA = "0x1359CFC", Offset = "0x1359CFC", VA = "0x1359CFC")]
		private void DrawReadOnly(UIRenderer renderer, Rect bounds)
		{
		}

		[Token(Token = "0x6001FF0")]
		[Address(RVA = "0x135AC04", Offset = "0x135AC04", VA = "0x135AC04", Slot = "47")]
		protected virtual void DrawHUD(UISystem uiSystem, UIRenderer renderer, Rect bounds)
		{
		}

		[Token(Token = "0x6001FF1")]
		public virtual T CreateNode<T>(UnityEngine.Vector2 screenCoord, UISystem uiSystem) where T : GraphNode, new()
		{
			return null;
		}

		[Token(Token = "0x6001FF2")]
		[Address(RVA = "0x135AED4", Offset = "0x135AED4", VA = "0x135AED4", Slot = "49")]
		public virtual GraphNode CreateNode(UnityEngine.Vector2 screenCoord, Type nodeType, UISystem uiSystem)
		{
			return null;
		}

		[Token(Token = "0x6001FF3")]
		[Address(RVA = "0x1356698", Offset = "0x1356698", VA = "0x1356698")]
		protected void BringToFront(GraphNode node)
		{
		}

		[Token(Token = "0x6001FF4")]
		[Address(RVA = "0x1359204", Offset = "0x1359204", VA = "0x1359204")]
		private void DrawGrid(UIRenderer renderer, Rect bounds, UnityEngine.Vector2 worldSize)
		{
		}

		[Token(Token = "0x6001FF5")]
		[Address(RVA = "0x134DF80", Offset = "0x134DF80", VA = "0x134DF80")]
		public void SelectNode(GraphNode nodeToSelect, UISystem uiSystem)
		{
		}

		[Token(Token = "0x6001FF6")]
		[Address(RVA = "0x135343C", Offset = "0x135343C", VA = "0x135343C")]
		public GraphPin GetPinUnderPosition(UnityEngine.Vector2 worldPosition)
		{
			return null;
		}

		[Token(Token = "0x6001FF7")]
		[Address(RVA = "0x135B130", Offset = "0x135B130", VA = "0x135B130")]
		private void HandleMouseDraggedLinkReleased(UnityEngine.Vector2 mousePositionScreen, UISystem uiSystem)
		{
		}

		[Token(Token = "0x6001FF8")]
		[Address(RVA = "0x135B4E8", Offset = "0x135B4E8", VA = "0x135B4E8", Slot = "50")]
		protected virtual void CreateLinkBetweenPins(GraphPin outputPin, GraphPin inputPin, UISystem uiSystem)
		{
		}

		[Token(Token = "0x6001FF9")]
		[Address(RVA = "0x135B7B4", Offset = "0x135B7B4", VA = "0x135B7B4", Slot = "51")]
		public virtual GraphSchema GetGraphSchema()
		{
			return null;
		}

		[Token(Token = "0x6001FFA")]
		public virtual T CreateLink<T>(Graph graph, GraphPin output, GraphPin input, UISystem uiSystem) where T : GraphLink
		{
			return null;
		}

		[Token(Token = "0x6001FFB")]
		protected abstract string GetGraphNotInitializedMessage();

		[Token(Token = "0x6001FFC")]
		[Address(RVA = "0x1358EBC", Offset = "0x1358EBC", VA = "0x1358EBC")]
		private void DrawGraphNotInitializedMessage(UIRenderer renderer, Rect bounds)
		{
		}

		[Token(Token = "0x6001FFD")]
		[Address(RVA = "0x135B810", Offset = "0x135B810", VA = "0x135B810")]
		protected GraphEditor()
		{
		}
	}
	[Token(Token = "0x200044F")]
	public class GraphSelectionBox
	{
		[Token(Token = "0x2000881")]
		public delegate void OnSelectionPerformed(Rect boundsScreenSpace, UISystem uiSystem);

		[Token(Token = "0x4001A2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Rect bounds;

		[Token(Token = "0x4001A2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private UnityEngine.Vector2 dragStart;

		[Token(Token = "0x4001A2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int dragButton;

		[Token(Token = "0x4001A2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private bool dragging;

		[Token(Token = "0x170003B4")]
		public Rect Bounds
		{
			[Token(Token = "0x6002000")]
			[Address(RVA = "0x135D7C0", Offset = "0x135D7C0", VA = "0x135D7C0")]
			get
			{
				return default(Rect);
			}
			[Token(Token = "0x6002001")]
			[Address(RVA = "0x135D7CC", Offset = "0x135D7CC", VA = "0x135D7CC")]
			set
			{
			}
		}

		[Token(Token = "0x170003B5")]
		public bool Dragging
		{
			[Token(Token = "0x6002002")]
			[Address(RVA = "0x135D7D8", Offset = "0x135D7D8", VA = "0x135D7D8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1400004D")]
		public event OnSelectionPerformed SelectionPerformed
		{
			[Token(Token = "0x6001FFE")]
			[Address(RVA = "0x1355978", Offset = "0x1355978", VA = "0x1355978")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CB564", Offset = "0x8CB564")]
			add
			{
			}
			[Token(Token = "0x6001FFF")]
			[Address(RVA = "0x1355CA0", Offset = "0x1355CA0", VA = "0x1355CA0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CB574", Offset = "0x8CB574")]
			remove
			{
			}
		}

		[Token(Token = "0x6002003")]
		[Address(RVA = "0x1357710", Offset = "0x1357710", VA = "0x1357710")]
		public void HandleInput(Event e, UISystem uiSystem)
		{
		}

		[Token(Token = "0x6002004")]
		[Address(RVA = "0x135D870", Offset = "0x135D870", VA = "0x135D870")]
		private void ProcessMouseDrag(Event e, UISystem uiSystem)
		{
		}

		[Token(Token = "0x6002005")]
		[Address(RVA = "0x135D7E0", Offset = "0x135D7E0", VA = "0x135D7E0")]
		private void ProcessMouseDown(Event e)
		{
		}

		[Token(Token = "0x6002006")]
		[Address(RVA = "0x135D91C", Offset = "0x135D91C", VA = "0x135D91C")]
		private void ProcessMouseUp(Event e, UISystem uiSystem)
		{
		}

		[Token(Token = "0x6002007")]
		[Address(RVA = "0x135D9A0", Offset = "0x135D9A0", VA = "0x135D9A0")]
		private void ProcessLayoutEvent(Event e)
		{
		}

		[Token(Token = "0x6002008")]
		[Address(RVA = "0x135DAD4", Offset = "0x135DAD4", VA = "0x135DAD4")]
		public bool IsSelectionValid()
		{
			return default(bool);
		}

		[Token(Token = "0x6002009")]
		[Address(RVA = "0x135A3B8", Offset = "0x135A3B8", VA = "0x135A3B8")]
		public void Draw(UIRenderer renderer, GraphEditorStyle style)
		{
		}

		[Token(Token = "0x600200A")]
		[Address(RVA = "0x135D9E8", Offset = "0x135D9E8", VA = "0x135D9E8")]
		private void UpdateBounds(UnityEngine.Vector2 start, UnityEngine.Vector2 end)
		{
		}

		[Token(Token = "0x600200B")]
		[Address(RVA = "0x1355960", Offset = "0x1355960", VA = "0x1355960")]
		public GraphSelectionBox()
		{
		}
	}
	[Token(Token = "0x2000450")]
	internal class KeyboardState
	{
		[Token(Token = "0x4001A2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Dictionary<KeyCode, bool> state;

		[Token(Token = "0x4001A2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool shift;

		[Token(Token = "0x4001A30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private bool control;

		[Token(Token = "0x4001A31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		private bool alt;

		[Token(Token = "0x170003B6")]
		public bool ControlPressed
		{
			[Token(Token = "0x600200F")]
			[Address(RVA = "0x135E050", Offset = "0x135E050", VA = "0x135E050")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170003B7")]
		public bool ShiftPressed
		{
			[Token(Token = "0x6002010")]
			[Address(RVA = "0x135E058", Offset = "0x135E058", VA = "0x135E058")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170003B8")]
		public bool AltPressed
		{
			[Token(Token = "0x6002011")]
			[Address(RVA = "0x135E060", Offset = "0x135E060", VA = "0x135E060")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600200C")]
		[Address(RVA = "0x135DF04", Offset = "0x135DF04", VA = "0x135DF04")]
		public void SetState(KeyCode keyCode, bool pressed)
		{
		}

		[Token(Token = "0x600200D")]
		[Address(RVA = "0x1357260", Offset = "0x1357260", VA = "0x1357260")]
		public void HandleInput(Event e)
		{
		}

		[Token(Token = "0x600200E")]
		[Address(RVA = "0x135DFB4", Offset = "0x135DFB4", VA = "0x135DFB4")]
		public bool GetSate(KeyCode keyCode)
		{
			return default(bool);
		}

		[Token(Token = "0x6002012")]
		[Address(RVA = "0x1355A1C", Offset = "0x1355A1C", VA = "0x1355A1C")]
		public KeyboardState()
		{
		}
	}
	[Token(Token = "0x2000451")]
	internal class CursorDragLink
	{
		[Token(Token = "0x2000882")]
		public delegate void OnDraggedLinkReleased(UnityEngine.Vector2 mousePositionScreen, UISystem uiSystem);

		[Token(Token = "0x4001A32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private GraphLink link;

		[Token(Token = "0x4001A33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private GraphPin attachedPin;

		[Token(Token = "0x4001A34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private GraphPin mousePin;

		[Token(Token = "0x4001A35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool active;

		[Token(Token = "0x4001A36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private UnityEngine.Vector2 mouseScreenPosition;

		[Token(Token = "0x170003B9")]
		public GraphPin AttachedPin
		{
			[Token(Token = "0x6002013")]
			[Address(RVA = "0x1352B24", Offset = "0x1352B24", VA = "0x1352B24")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1400004E")]
		public event OnDraggedLinkReleased DraggedLinkReleased
		{
			[Token(Token = "0x6002014")]
			[Address(RVA = "0x1352B2C", Offset = "0x1352B2C", VA = "0x1352B2C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CB584", Offset = "0x8CB584")]
			add
			{
			}
			[Token(Token = "0x6002015")]
			[Address(RVA = "0x1352BD0", Offset = "0x1352BD0", VA = "0x1352BD0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CB594", Offset = "0x8CB594")]
			remove
			{
			}
		}

		[Token(Token = "0x6002016")]
		[Address(RVA = "0x1352C74", Offset = "0x1352C74", VA = "0x1352C74")]
		public CursorDragLink()
		{
		}

		[Token(Token = "0x6002017")]
		[Address(RVA = "0x1352D4C", Offset = "0x1352D4C", VA = "0x1352D4C")]
		public void Destroy()
		{
		}

		[Token(Token = "0x6002018")]
		[Address(RVA = "0x1352DD0", Offset = "0x1352DD0", VA = "0x1352DD0")]
		public void Activate(GraphPin fromPin, UISystem uiSystem)
		{
		}

		[Token(Token = "0x6002019")]
		[Address(RVA = "0x1352EFC", Offset = "0x1352EFC", VA = "0x1352EFC")]
		public void Deactivate(UISystem uiSystem)
		{
		}

		[Token(Token = "0x600201A")]
		[Address(RVA = "0x13531B0", Offset = "0x13531B0", VA = "0x13531B0")]
		public void Draw(UIRenderer renderer, GraphRendererContext rendererContext, GraphCamera camera)
		{
		}

		[Token(Token = "0x600201B")]
		[Address(RVA = "0x1353698", Offset = "0x1353698", VA = "0x1353698")]
		public void HandleInput(Event e, UISystem uiSystem)
		{
		}

		[Token(Token = "0x600201C")]
		[Address(RVA = "0x1352EC4", Offset = "0x1352EC4", VA = "0x1352EC4")]
		private void AttachPinToLink(GraphPin pin)
		{
		}
	}
	[Token(Token = "0x2000452")]
	internal class NodeZIndexComparer : IComparer<GraphNode>
	{
		[Token(Token = "0x600201D")]
		[Address(RVA = "0x135E140", Offset = "0x135E140", VA = "0x135E140", Slot = "4")]
		public int Compare(GraphNode x, GraphNode y)
		{
			return default(int);
		}

		[Token(Token = "0x600201E")]
		[Address(RVA = "0x135A31C", Offset = "0x135A31C", VA = "0x135A31C")]
		public NodeZIndexComparer()
		{
		}
	}
	[Token(Token = "0x2000453")]
	internal class NodeReversedZIndexComparer : IComparer<GraphNode>
	{
		[Token(Token = "0x600201F")]
		[Address(RVA = "0x135E068", Offset = "0x135E068", VA = "0x135E068", Slot = "4")]
		public int Compare(GraphNode x, GraphNode y)
		{
			return default(int);
		}

		[Token(Token = "0x6002020")]
		[Address(RVA = "0x1356690", Offset = "0x1356690", VA = "0x1356690")]
		public NodeReversedZIndexComparer()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000454")]
	public class GraphEvent<T> where T : EventArgs
	{
		[Token(Token = "0x4001A39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private List<EventHandler<T>> delegates;

		[Token(Token = "0x1400004F")]
		[SerializeField]
		private event EventHandler<T> _Event
		{
			[Token(Token = "0x6002021")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CB5A4", Offset = "0x8CB5A4")]
			add
			{
			}
			[Token(Token = "0x6002022")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CB5B4", Offset = "0x8CB5B4")]
			remove
			{
			}
		}

		[Token(Token = "0x14000050")]
		public event EventHandler<T> Event
		{
			[Token(Token = "0x6002023")]
			add
			{
			}
			[Token(Token = "0x6002024")]
			remove
			{
			}
		}

		[Token(Token = "0x6002025")]
		public void Notify(T args)
		{
		}

		[Token(Token = "0x6002026")]
		public void Clear()
		{
		}

		[Token(Token = "0x6002027")]
		public GraphEvent()
		{
		}
	}
	[Token(Token = "0x2000455")]
	public class GraphNodeEventArgs : EventArgs
	{
		[Token(Token = "0x4001A3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C0558", Offset = "0x8C0558")]
		private UISystem <uiSystem>k__BackingField;

		[Token(Token = "0x4001A3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C0568", Offset = "0x8C0568")]
		private GraphNode[] <Nodes>k__BackingField;

		[Token(Token = "0x170003BA")]
		public UISystem uiSystem
		{
			[Token(Token = "0x600202A")]
			[Address(RVA = "0x135C030", Offset = "0x135C030", VA = "0x135C030")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CB5C4", Offset = "0x8CB5C4")]
			get
			{
				return null;
			}
			[Token(Token = "0x600202B")]
			[Address(RVA = "0x135C038", Offset = "0x135C038", VA = "0x135C038")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CB5D4", Offset = "0x8CB5D4")]
			private set
			{
			}
		}

		[Token(Token = "0x170003BB")]
		public GraphNode[] Nodes
		{
			[Token(Token = "0x600202C")]
			[Address(RVA = "0x135C040", Offset = "0x135C040", VA = "0x135C040")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CB5E4", Offset = "0x8CB5E4")]
			get
			{
				return null;
			}
			[Token(Token = "0x600202D")]
			[Address(RVA = "0x135C048", Offset = "0x135C048", VA = "0x135C048")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CB5F4", Offset = "0x8CB5F4")]
			private set
			{
			}
		}

		[Token(Token = "0x6002028")]
		[Address(RVA = "0x1356F48", Offset = "0x1356F48", VA = "0x1356F48")]
		public GraphNodeEventArgs(UISystem uiSystem, GraphNode[] nodes)
		{
		}

		[Token(Token = "0x6002029")]
		[Address(RVA = "0x135B078", Offset = "0x135B078", VA = "0x135B078")]
		public GraphNodeEventArgs(UISystem uiSystem, GraphNode node)
		{
		}
	}
	[Token(Token = "0x2000456")]
	public class GraphEventArgs : EventArgs
	{
		[Token(Token = "0x4001A3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Graph graph;

		[Token(Token = "0x170003BC")]
		public Graph Graph
		{
			[Token(Token = "0x600202F")]
			[Address(RVA = "0x135BC10", Offset = "0x135BC10", VA = "0x135BC10")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600202E")]
		[Address(RVA = "0x135BB94", Offset = "0x135BB94", VA = "0x135BB94")]
		public GraphEventArgs(Graph graph)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000457")]
	public class GraphEditorEvents
	{
		[Token(Token = "0x4001A3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GraphEvent<GraphNodeEventArgs> OnNodeDragStart;

		[Token(Token = "0x4001A3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GraphEvent<GraphNodeEventArgs> OnNodeDragEnd;

		[Token(Token = "0x4001A3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GraphEvent<GraphNodeEventArgs> OnNodeDragged;

		[Token(Token = "0x4001A40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GraphEvent<GraphNodeEventArgs> OnNodeCreated;

		[Token(Token = "0x4001A41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GraphEvent<GraphNodeEventArgs> OnNodeSelectionChanged;

		[Token(Token = "0x4001A42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GraphEvent<GraphNodeEventArgs> OnNodeDoubleClicked;

		[Token(Token = "0x6002030")]
		[Address(RVA = "0x1355364", Offset = "0x1355364", VA = "0x1355364")]
		public GraphEditorEvents()
		{
		}
	}
	[Token(Token = "0x2000458")]
	public class GraphEditorUtils
	{
		[Token(Token = "0x6002031")]
		[Address(RVA = "0x135B6EC", Offset = "0x135B6EC", VA = "0x135B6EC")]
		public static void AddToAsset(UIPlatform platform, UnityEngine.Object assetObject, GraphLink link)
		{
		}

		[Token(Token = "0x6002032")]
		[Address(RVA = "0x13539B4", Offset = "0x13539B4", VA = "0x13539B4")]
		public static void AddToAsset(UIPlatform platform, UnityEngine.Object assetObject, GraphNode node)
		{
		}

		[Token(Token = "0x6002033")]
		[Address(RVA = "0x135BB8C", Offset = "0x135BB8C", VA = "0x135BB8C")]
		public GraphEditorUtils()
		{
		}
	}
	[Token(Token = "0x2000459")]
	public class GraphEditorConstants
	{
		[Token(Token = "0x4001A43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly Color PIN_COLOR;

		[Token(Token = "0x4001A44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static readonly Color PIN_COLOR_HOVER;

		[Token(Token = "0x4001A45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static readonly Color PIN_COLOR_CLICK;

		[Token(Token = "0x4001A46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public static readonly Color NODE_COLOR;

		[Token(Token = "0x4001A47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public static readonly Color NODE_COLOR_SELECTED;

		[Token(Token = "0x4001A48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public static readonly Color TEXT_COLOR;

		[Token(Token = "0x4001A49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public static readonly Color TEXT_COLOR_SELECTED;

		[Token(Token = "0x6002034")]
		[Address(RVA = "0x135B9F8", Offset = "0x135B9F8", VA = "0x135B9F8")]
		public GraphEditorConstants()
		{
		}
	}
	[Token(Token = "0x200045A")]
	public class GraphOperations
	{
		[Token(Token = "0x6002036")]
		public static T CreateNode<T>(Graph graph, UIUndoSystem undo) where T : GraphNode
		{
			return null;
		}

		[Token(Token = "0x6002037")]
		[Address(RVA = "0x1353904", Offset = "0x1353904", VA = "0x1353904")]
		public static GraphNode CreateNode(Graph graph, Type t, UIUndoSystem undo)
		{
			return null;
		}

		[Token(Token = "0x6002038")]
		[Address(RVA = "0x135CF78", Offset = "0x135CF78", VA = "0x135CF78")]
		private static void InitializeCreatedNode(Graph graph, GraphNode node, UIUndoSystem undo)
		{
		}

		[Token(Token = "0x6002039")]
		[Address(RVA = "0x135D2E4", Offset = "0x135D2E4", VA = "0x135D2E4")]
		private static void DestroyEmitterNodes(Graph graph, MarkerNode markerNode, UIUndoSystem undo)
		{
		}

		[Token(Token = "0x600203A")]
		public static T DuplicateNode<T>(Graph graph, T originalNode, UIUndoSystem undo) where T : GraphNode
		{
			return null;
		}

		[Token(Token = "0x600203B")]
		[Address(RVA = "0x1353CA4", Offset = "0x1353CA4", VA = "0x1353CA4")]
		public static void DestroyNode(GraphNode node, UIUndoSystem undo)
		{
		}

		[Token(Token = "0x600203C")]
		[Address(RVA = "0x135BEB0", Offset = "0x135BEB0", VA = "0x135BEB0")]
		public static void DestroyLink(GraphLink link, UIUndoSystem undo)
		{
		}

		[Token(Token = "0x600203D")]
		[Address(RVA = "0x135D558", Offset = "0x135D558", VA = "0x135D558")]
		public static void BreakInputLinks(GraphNode node, UIUndoSystem undo)
		{
		}

		[Token(Token = "0x600203E")]
		[Address(RVA = "0x135D588", Offset = "0x135D588", VA = "0x135D588")]
		public static void BreakOutputLinks(GraphNode node, UIUndoSystem undo)
		{
		}

		[Token(Token = "0x600203F")]
		[Address(RVA = "0x135D5B8", Offset = "0x135D5B8", VA = "0x135D5B8")]
		private static void BreakLinks(GraphPin[] pins, UIUndoSystem undo)
		{
		}

		[Token(Token = "0x6002040")]
		[Address(RVA = "0x135D630", Offset = "0x135D630", VA = "0x135D630")]
		private static void BreakLinks(GraphPin pin, UIUndoSystem undo)
		{
		}

		[Token(Token = "0x6002041")]
		public static T CreateLink<T>(Graph graph) where T : GraphLink
		{
			return null;
		}

		[Token(Token = "0x6002042")]
		[Address(RVA = "0x135D6B4", Offset = "0x135D6B4", VA = "0x135D6B4")]
		public GraphOperations()
		{
		}
	}
	[Token(Token = "0x200045B")]
	internal class GraphInputHandler
	{
		[Token(Token = "0x6002043")]
		[Address(RVA = "0x13574E8", Offset = "0x13574E8", VA = "0x13574E8")]
		public static bool HandleNodeInput(GraphNode node, Event e, GraphEditor graphEditor, UISystem uiSystem)
		{
			return default(bool);
		}

		[Token(Token = "0x6002044")]
		[Address(RVA = "0x135BC18", Offset = "0x135BC18", VA = "0x135BC18")]
		public static bool HandlePinInput(GraphPin pin, Event e, GraphEditor graphEditor, UISystem uiSystem)
		{
			return default(bool);
		}

		[Token(Token = "0x6002045")]
		[Address(RVA = "0x135BE18", Offset = "0x135BE18", VA = "0x135BE18")]
		private static void DestroyPinLinks(GraphPin pin, UIUndoSystem undo)
		{
		}

		[Token(Token = "0x6002046")]
		[Address(RVA = "0x135C028", Offset = "0x135C028", VA = "0x135C028")]
		public GraphInputHandler()
		{
		}
	}
	[Token(Token = "0x200045C")]
	public interface IGraphLinkRenderer
	{
		[Token(Token = "0x6002047")]
		void DrawGraphLink(UIRenderer renderer, GraphRendererContext rendererContext, GraphLink link, GraphCamera camera);
	}
	[Token(Token = "0x200045D")]
	public class SplineGraphLinkRenderer : IGraphLinkRenderer
	{
		[Token(Token = "0x6002048")]
		[Address(RVA = "0x135E22C", Offset = "0x135E22C", VA = "0x135E22C", Slot = "4")]
		public void DrawGraphLink(UIRenderer renderer, GraphRendererContext rendererContext, GraphLink link, GraphCamera camera)
		{
		}

		[Token(Token = "0x6002049")]
		[Address(RVA = "0x135E9F8", Offset = "0x135E9F8", VA = "0x135E9F8")]
		public SplineGraphLinkRenderer()
		{
		}
	}
	[Token(Token = "0x200045E")]
	public class StraightLineGraphLinkRenderer : IGraphLinkRenderer
	{
		[Token(Token = "0x600204A")]
		[Address(RVA = "0x135EA00", Offset = "0x135EA00", VA = "0x135EA00")]
		private UnityEngine.Vector2 GetPointOnNodeBounds(UnityEngine.Vector2 position, GraphPin pin, float distanceBias)
		{
			return default(UnityEngine.Vector2);
		}

		[Token(Token = "0x600204B")]
		[Address(RVA = "0x135ED0C", Offset = "0x135ED0C", VA = "0x135ED0C", Slot = "4")]
		public void DrawGraphLink(UIRenderer renderer, GraphRendererContext rendererContext, GraphLink link, GraphCamera camera)
		{
		}

		[Token(Token = "0x600204C")]
		[Address(RVA = "0x135EEBC", Offset = "0x135EEBC", VA = "0x135EEBC")]
		public static void DrawLine(UIRenderer renderer, UnityEngine.Vector2 startPos, UnityEngine.Vector2 endPos, GraphCamera camera, Color lineColor, float lineThickness)
		{
		}

		[Token(Token = "0x600204D")]
		[Address(RVA = "0x135F3C8", Offset = "0x135F3C8", VA = "0x135F3C8")]
		public StraightLineGraphLinkRenderer()
		{
		}
	}
	[Token(Token = "0x200045F")]
	public class GraphNodeRenderer
	{
		[Token(Token = "0x600204E")]
		[Address(RVA = "0x135C050", Offset = "0x135C050", VA = "0x135C050", Slot = "4")]
		protected virtual Color getBackgroundColor(GraphNode node)
		{
			return default(Color);
		}

		[Token(Token = "0x600204F")]
		[Address(RVA = "0x135C114", Offset = "0x135C114", VA = "0x135C114", Slot = "5")]
		public virtual void Draw(UIRenderer renderer, GraphRendererContext rendererContext, GraphNode node, GraphCamera camera)
		{
		}

		[Token(Token = "0x6002050")]
		[Address(RVA = "0x135C690", Offset = "0x135C690", VA = "0x135C690", Slot = "6")]
		public virtual void Release()
		{
		}

		[Token(Token = "0x6002051")]
		[Address(RVA = "0x135C694", Offset = "0x135C694", VA = "0x135C694", Slot = "7")]
		protected virtual void DrawTextCentered(UIRenderer renderer, GraphRendererContext rendererContext, GraphNode node, GraphCamera camera, string text)
		{
		}

		[Token(Token = "0x6002052")]
		[Address(RVA = "0x135C748", Offset = "0x135C748", VA = "0x135C748", Slot = "8")]
		protected virtual void DrawTextCentered(UIRenderer renderer, GraphRendererContext rendererContext, GraphNode node, GraphCamera camera, string text, UnityEngine.Vector2 offset)
		{
		}

		[Token(Token = "0x6002053")]
		[Address(RVA = "0x135CBFC", Offset = "0x135CBFC", VA = "0x135CBFC")]
		protected void DrawNodeTexture(UIRenderer renderer, GraphRendererContext rendererContext, GraphNode node, GraphCamera camera, string textureName)
		{
		}

		[Token(Token = "0x6002054")]
		[Address(RVA = "0x135CED0", Offset = "0x135CED0", VA = "0x135CED0")]
		public GraphNodeRenderer()
		{
		}
	}
	[Token(Token = "0x2000460")]
	public class GraphNodeRendererFactory
	{
		[Token(Token = "0x4001A4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private GraphNodeRenderer defaultRenderer;

		[Token(Token = "0x4001A4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Dictionary<Type, GraphNodeRenderer> renderers;

		[Token(Token = "0x6002055")]
		[Address(RVA = "0x135CED8", Offset = "0x135CED8", VA = "0x135CED8")]
		public void RegisterNodeRenderer(Type nodeType, GraphNodeRenderer renderer)
		{
		}

		[Token(Token = "0x6002056")]
		[Address(RVA = "0x135A324", Offset = "0x135A324", VA = "0x135A324")]
		public GraphNodeRenderer GetRenderer(Type nodeType)
		{
			return null;
		}

		[Token(Token = "0x6002057")]
		[Address(RVA = "0x1355D84", Offset = "0x1355D84", VA = "0x1355D84")]
		public void Release()
		{
		}

		[Token(Token = "0x6002058")]
		[Address(RVA = "0x1355A8C", Offset = "0x1355A8C", VA = "0x1355A8C")]
		public GraphNodeRendererFactory()
		{
		}
	}
	[Token(Token = "0x2000461")]
	public class GraphPinRenderer
	{
		[Token(Token = "0x6002059")]
		[Address(RVA = "0x135C280", Offset = "0x135C280", VA = "0x135C280")]
		public static void Draw(UIRenderer renderer, GraphRendererContext rendererContext, GraphPin pin, GraphCamera camera)
		{
		}

		[Token(Token = "0x600205A")]
		[Address(RVA = "0x135D6BC", Offset = "0x135D6BC", VA = "0x135D6BC")]
		private static Color GetPinColor(GraphPin pin)
		{
			return default(Color);
		}

		[Token(Token = "0x600205B")]
		[Address(RVA = "0x135D7B8", Offset = "0x135D7B8", VA = "0x135D7B8")]
		public GraphPinRenderer()
		{
		}
	}
	[Token(Token = "0x2000462")]
	public class GraphTooltip
	{
		[Token(Token = "0x4001A4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static string message;

		[Token(Token = "0x600205C")]
		[Address(RVA = "0x135AB90", Offset = "0x135AB90", VA = "0x135AB90")]
		public static void Clear()
		{
		}

		[Token(Token = "0x600205D")]
		[Address(RVA = "0x135DE98", Offset = "0x135DE98", VA = "0x135DE98")]
		public GraphTooltip()
		{
		}
	}
	[Token(Token = "0x2000463")]
	public class GraphTooltipRenderer
	{
		[Token(Token = "0x600205F")]
		[Address(RVA = "0x135A590", Offset = "0x135A590", VA = "0x135A590")]
		public static void Draw(UIRenderer renderer, GraphRendererContext rendererContext, UnityEngine.Vector2 mousePosition)
		{
		}

		[Token(Token = "0x6002060")]
		[Address(RVA = "0x135DEFC", Offset = "0x135DEFC", VA = "0x135DEFC")]
		public GraphTooltipRenderer()
		{
		}
	}
}
namespace DungeonArchitect.Triangulator
{
	[Token(Token = "0x2000464")]
	public class Delauney
	{
		[Token(Token = "0x6002061")]
		[Address(RVA = "0xE03D0C", Offset = "0xE03D0C", VA = "0xE03D0C")]
		public static List<Triangle> Triangulate(List<Point> Vertex)
		{
			return null;
		}

		[Token(Token = "0x6002062")]
		[Address(RVA = "0xE046B8", Offset = "0xE046B8", VA = "0xE046B8")]
		private static bool InCircle(Point p, Point p1, Point p2, Point p3)
		{
			return default(bool);
		}

		[Token(Token = "0x6002063")]
		[Address(RVA = "0xE04928", Offset = "0xE04928", VA = "0xE04928")]
		public Delauney()
		{
		}
	}
	[Token(Token = "0x2000465")]
	public struct DelauneyTriangle
	{
		[Token(Token = "0x4001A4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int p1;

		[Token(Token = "0x4001A4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int p2;

		[Token(Token = "0x4001A4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int p3;
	}
	[Token(Token = "0x2000466")]
	internal struct IEDGE
	{
		[Token(Token = "0x4001A50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int p1;

		[Token(Token = "0x4001A51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int p2;
	}
	[Token(Token = "0x2000467")]
	public class DelauneyV2
	{
		[Token(Token = "0x4001A52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static float EPSILON;

		[Token(Token = "0x6002064")]
		[Address(RVA = "0x134C8F8", Offset = "0x134C8F8", VA = "0x134C8F8")]
		public static DelauneyTriangle[] Triangulate(UnityEngine.Vector2[] vertices)
		{
			return null;
		}

		[Token(Token = "0x6002065")]
		[Address(RVA = "0x134D27C", Offset = "0x134D27C", VA = "0x134D27C")]
		private static bool CircumCircle(float xp, float yp, float x1, float y1, float x2, float y2, float x3, float y3, ref float xc, ref float yc, ref float r)
		{
			return default(bool);
		}

		[Token(Token = "0x6002066")]
		[Address(RVA = "0x134D5A0", Offset = "0x134D5A0", VA = "0x134D5A0")]
		public DelauneyV2()
		{
		}
	}
}
namespace DungeonArchitect.Triangulator.Geometry
{
	[Token(Token = "0x2000468")]
	public class Edge : IEquatable<Edge>
	{
		[Token(Token = "0x4001A53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int p1;

		[Token(Token = "0x4001A54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int p2;

		[Token(Token = "0x6002068")]
		[Address(RVA = "0x134D600", Offset = "0x134D600", VA = "0x134D600")]
		public Edge(int point1, int point2)
		{
		}

		[Token(Token = "0x6002069")]
		[Address(RVA = "0x134D638", Offset = "0x134D638", VA = "0x134D638")]
		public Edge()
		{
		}

		[Token(Token = "0x600206A")]
		[Address(RVA = "0x134D660", Offset = "0x134D660", VA = "0x134D660", Slot = "4")]
		public bool Equals(Edge other)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000469")]
	public class Point
	{
		[Token(Token = "0x4001A55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected double _X;

		[Token(Token = "0x4001A56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected double _Y;

		[Token(Token = "0x170003BD")]
		public double X
		{
			[Token(Token = "0x600206C")]
			[Address(RVA = "0x134D6F4", Offset = "0x134D6F4", VA = "0x134D6F4")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x600206D")]
			[Address(RVA = "0x134D6FC", Offset = "0x134D6FC", VA = "0x134D6FC")]
			set
			{
			}
		}

		[Token(Token = "0x170003BE")]
		public double Y
		{
			[Token(Token = "0x600206E")]
			[Address(RVA = "0x134D704", Offset = "0x134D704", VA = "0x134D704")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x600206F")]
			[Address(RVA = "0x134D70C", Offset = "0x134D70C", VA = "0x134D70C")]
			set
			{
			}
		}

		[Token(Token = "0x600206B")]
		[Address(RVA = "0x134D6BC", Offset = "0x134D6BC", VA = "0x134D6BC")]
		public Point(double x, double y)
		{
		}

		[Token(Token = "0x6002070")]
		[Address(RVA = "0x134D714", Offset = "0x134D714", VA = "0x134D714")]
		public bool Equals2D(Point other)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200046A")]
	public class Point<T> : Point
	{
		[Token(Token = "0x4001A57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T _attr;

		[Token(Token = "0x170003BF")]
		public T Attribute
		{
			[Token(Token = "0x6002073")]
			get
			{
				return (T)null;
			}
			[Token(Token = "0x6002074")]
			set
			{
			}
		}

		[Token(Token = "0x6002071")]
		public Point(double x, double y, T attribute)
		{
		}

		[Token(Token = "0x6002072")]
		public Point(double x, double y)
		{
		}
	}
	[Token(Token = "0x200046B")]
	public struct Triangle
	{
		[Token(Token = "0x4001A58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int p1;

		[Token(Token = "0x4001A59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int p2;

		[Token(Token = "0x4001A5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int p3;

		[Token(Token = "0x6002075")]
		[Address(RVA = "0x9923E4", Offset = "0x9923E4", VA = "0x9923E4")]
		public Triangle(int point1, int point2, int point3)
		{
		}
	}
}
namespace DungeonArchitect.Splatmap
{
	[Token(Token = "0x200046C")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x8B73FC", Offset = "0x8B73FC")]
	public class SplatData
	{
		[Token(Token = "0x4001A5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private float[,] data;

		[Token(Token = "0x170003C0")]
		public float Item
		{
			[Token(Token = "0x6002076")]
			[Address(RVA = "0xE0298C", Offset = "0xE0298C", VA = "0xE0298C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002077")]
			[Address(RVA = "0xE029E8", Offset = "0xE029E8", VA = "0xE029E8")]
			set
			{
			}
		}

		[Token(Token = "0x170003C1")]
		public float[,] Data
		{
			[Token(Token = "0x6002078")]
			[Address(RVA = "0xE02A44", Offset = "0xE02A44", VA = "0xE02A44")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002079")]
		[Address(RVA = "0xE02A4C", Offset = "0xE02A4C", VA = "0xE02A4C")]
		public SplatData(int textureSize)
		{
		}

		[Token(Token = "0x600207A")]
		[Address(RVA = "0xE02ACC", Offset = "0xE02ACC", VA = "0xE02ACC")]
		public void Write(Texture2D texture)
		{
		}
	}
	[Token(Token = "0x200046D")]
	public class SplatRasterizer
	{
		[Token(Token = "0x2000883")]
		private struct FloodFillPixelInfo
		{
			[Token(Token = "0x40029EF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public IntVector2 currentPixel;

			[Token(Token = "0x40029F0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public IntVector2 sourcePixel;

			[Token(Token = "0x40029F1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float startValue;

			[Token(Token = "0x600304B")]
			[Address(RVA = "0x97F148", Offset = "0x97F148", VA = "0x97F148")]
			public FloodFillPixelInfo(IntVector2 currentPixel, IntVector2 sourcePixel, float startValue)
			{
			}

			[Token(Token = "0x600304C")]
			[Address(RVA = "0x97F154", Offset = "0x97F154", VA = "0x97F154")]
			public float DistanceToSource()
			{
				return default(float);
			}
		}

		[Token(Token = "0x4001A5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private SplatData splatData;

		[Token(Token = "0x600207B")]
		[Address(RVA = "0xE02CC0", Offset = "0xE02CC0", VA = "0xE02CC0")]
		public SplatRasterizer(SplatData splatData)
		{
		}

		[Token(Token = "0x600207C")]
		[Address(RVA = "0xE02CEC", Offset = "0xE02CEC", VA = "0xE02CEC")]
		public void DecayFloodFill(float decayMultiplier)
		{
		}

		[Token(Token = "0x600207D")]
		[Address(RVA = "0xE0302C", Offset = "0xE0302C", VA = "0xE0302C")]
		private void AddNeighbor(Queue<FloodFillPixelInfo> queue, ref FloodFillPixelInfo info, int textureSize, int dx, int dy, float decayMultiplier)
		{
		}

		[Token(Token = "0x600207E")]
		[Address(RVA = "0xE03268", Offset = "0xE03268", VA = "0xE03268")]
		private int MapToTextureCoord(float value01, int lastIndex)
		{
			return default(int);
		}

		[Token(Token = "0x600207F")]
		[Address(RVA = "0xE032E0", Offset = "0xE032E0", VA = "0xE032E0")]
		private void Swap(ref UnityEngine.Vector2 a, ref UnityEngine.Vector2 b)
		{
		}

		[Token(Token = "0x6002080")]
		[Address(RVA = "0xE032F4", Offset = "0xE032F4", VA = "0xE032F4")]
		public void ApplyCurve(AnimationCurve curve)
		{
		}

		[Token(Token = "0x6002081")]
		[Address(RVA = "0xE033EC", Offset = "0xE033EC", VA = "0xE033EC")]
		public void DrawLine(UnityEngine.Vector2 start, UnityEngine.Vector2 end, float value)
		{
		}

		[Token(Token = "0x6002082")]
		[Address(RVA = "0xE03724", Offset = "0xE03724", VA = "0xE03724")]
		public void DrawCircle(UnityEngine.Vector2 center, float radius01, float value)
		{
		}

		[Token(Token = "0x6002083")]
		[Address(RVA = "0xE0399C", Offset = "0xE0399C", VA = "0xE0399C")]
		private void SetPixel(int x, int y, float value)
		{
		}

		[Token(Token = "0x6002084")]
		[Address(RVA = "0xE03898", Offset = "0xE03898", VA = "0xE03898")]
		private void _DrawCircleOctants(int xc, int yc, int x, int y, float value)
		{
		}
	}
	[Token(Token = "0x200046E")]
	public class DungeonSplatmapVisualizer : DungeonEventListener
	{
		[Token(Token = "0x4001A5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Renderer debugRenderer;

		[Token(Token = "0x6002085")]
		[Address(RVA = "0xE02824", Offset = "0xE02824", VA = "0xE02824", Slot = "7")]
		public override void OnPostDungeonBuild(Dungeon dungeon, DungeonModel model)
		{
		}

		[Token(Token = "0x6002086")]
		[Address(RVA = "0xE02984", Offset = "0xE02984", VA = "0xE02984")]
		public DungeonSplatmapVisualizer()
		{
		}
	}
	[Token(Token = "0x200046F")]
	public class DungeonSplatAsset : ScriptableObject
	{
		[Token(Token = "0x4001A5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public Texture2D[] splatTextures;

		[Token(Token = "0x6002087")]
		[Address(RVA = "0xE027BC", Offset = "0xE027BC", VA = "0xE027BC")]
		public DungeonSplatAsset()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000470")]
	public struct DungeonSplatmapTextureInfo
	{
		[Token(Token = "0x4001A5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		public string id;

		[Token(Token = "0x4001A60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[SerializeField]
		public TextureFormat textureFormat;

		[Token(Token = "0x4001A61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[SerializeField]
		public int textureSize;
	}
	[Token(Token = "0x2000471")]
	public class DungeonSplatmap : MonoBehaviour
	{
		[Token(Token = "0x4001A62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public DungeonSplatmapTextureInfo[] textures;

		[Token(Token = "0x4001A63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DungeonSplatAsset splatmap;

		[Token(Token = "0x6002088")]
		[Address(RVA = "0xE0281C", Offset = "0xE0281C", VA = "0xE0281C")]
		public DungeonSplatmap()
		{
		}
	}
}
namespace DungeonArchitect.RuntimeGraphs
{
	[Token(Token = "0x2000472")]
	public class RuntimeGraph<T>
	{
		[Token(Token = "0x4001A64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public List<RuntimeGraphNode<T>> Nodes;

		[Token(Token = "0x6002089")]
		public void RemoveNode(RuntimeGraphNode<T> node)
		{
		}

		[Token(Token = "0x600208A")]
		public RuntimeGraph()
		{
		}
	}
	[Token(Token = "0x2000473")]
	public class RuntimeGraphNode<T>
	{
		[Token(Token = "0x4001A65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public T Payload;

		[Token(Token = "0x4001A66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public RuntimeGraph<T> Graph;

		[Token(Token = "0x4001A67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public UnityEngine.Vector2 Position;

		[Token(Token = "0x4001A68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public List<RuntimeGraphNode<T>> Outgoing;

		[Token(Token = "0x4001A69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public List<RuntimeGraphNode<T>> Incoming;

		[Token(Token = "0x600208B")]
		public RuntimeGraphNode(RuntimeGraph<T> graph)
		{
		}

		[Token(Token = "0x600208C")]
		public void MakeLinkTo(RuntimeGraphNode<T> destNode)
		{
		}

		[Token(Token = "0x600208D")]
		public void BreakLinkTo(RuntimeGraphNode<T> destNode)
		{
		}

		[Token(Token = "0x600208E")]
		public void BreakAllOutgoingLinks()
		{
		}

		[Token(Token = "0x600208F")]
		public void BreakAllIncomingLinks()
		{
		}

		[Token(Token = "0x6002090")]
		public void BreakAllLinks()
		{
		}

		[Token(Token = "0x6002091")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x2000474")]
	public class RuntimeGraphBuilderHandlers<T>
	{
		[Token(Token = "0x4001A6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Func<GraphNode, bool> CanCreateNode;

		[Token(Token = "0x4001A6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Action<GraphNode, RuntimeGraphNode<T>> NodeCreated;

		[Token(Token = "0x4001A6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Func<GraphNode, T> GetPayload;

		[Token(Token = "0x6002092")]
		public RuntimeGraphBuilderHandlers()
		{
		}
	}
	[Token(Token = "0x2000475")]
	public class RuntimeGraphBuilder
	{
		[Token(Token = "0x6002093")]
		public static RuntimeGraphNode<T> AddNode<T>(GraphNode graphNode, RuntimeGraph<T> runtimeGraph, RuntimeGraphBuilderHandlers<T> handlers)
		{
			return null;
		}

		[Token(Token = "0x6002094")]
		public static RuntimeGraphNode<T> AddNode<T>(T payload, RuntimeGraph<T> runtimeGraph)
		{
			return null;
		}

		[Token(Token = "0x6002095")]
		public static void Build<T>(Graph graph, RuntimeGraph<T> runtimeGraph, RuntimeGraphBuilderHandlers<T> handlers)
		{
		}

		[Token(Token = "0x6002096")]
		[Address(RVA = "0xDF3850", Offset = "0xDF3850", VA = "0xDF3850")]
		public RuntimeGraphBuilder()
		{
		}
	}
}
namespace DungeonArchitect.RoomDesigner
{
	[Serializable]
	[Token(Token = "0x2000476")]
	public struct DungeonRoomDoorDesigner
	{
		[Token(Token = "0x4001A6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		public UnityEngine.Vector3 logicalCursorPosition;

		[Token(Token = "0x4001A6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[SerializeField]
		public UnityEngine.Vector3 logicalPosition;

		[Token(Token = "0x4001A6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public Quaternion rotation;

		[Token(Token = "0x4001A70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		public IntVector logicalSize;

		[Token(Token = "0x4001A71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		public string markerName;
	}
	[Token(Token = "0x2000477")]
	public class DungeonRoomDesigner : MonoBehaviour
	{
		[Token(Token = "0x4001A72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UnityEngine.Vector3 gridSize;

		[Token(Token = "0x4001A73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public IntVector roomPosition;

		[Token(Token = "0x4001A74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public IntVector roomSize;

		[Token(Token = "0x4001A75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Dungeon dungeon;

		[Token(Token = "0x4001A76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool realtimeUpdate;

		[Token(Token = "0x4001A77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		public bool generateBoundaryMarkers;

		[Token(Token = "0x4001A78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public DungeonRoomDoorDesigner[] doors;

		[Token(Token = "0x4001A79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private DungeonRoomVoxel voxelWorld;

		[Token(Token = "0x4001A7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private List<FloorIsland> islands;

		[Token(Token = "0x6002097")]
		[Address(RVA = "0xDEFE60", Offset = "0xDEFE60", VA = "0xDEFE60")]
		public void GenerateLayout()
		{
		}

		[Token(Token = "0x6002098")]
		[Address(RVA = "0xDF0B24", Offset = "0xDF0B24", VA = "0xDF0B24")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x6002099")]
		[Address(RVA = "0xDF0108", Offset = "0xDF0108", VA = "0xDF0108")]
		public void CreateDoorPlatforms()
		{
		}

		[Token(Token = "0x600209A")]
		[Address(RVA = "0xDF0544", Offset = "0xDF0544", VA = "0xDF0544")]
		public void FillSmallGaps()
		{
		}

		[Token(Token = "0x600209B")]
		[Address(RVA = "0xDF124C", Offset = "0xDF124C", VA = "0xDF124C")]
		public void EmitMarkers(LevelMarkerList markerList)
		{
		}

		[Token(Token = "0x600209C")]
		[Address(RVA = "0xDF0B28", Offset = "0xDF0B28", VA = "0xDF0B28")]
		private void DebugDrawGizmos()
		{
		}

		[Token(Token = "0x600209D")]
		[Address(RVA = "0xDF18C4", Offset = "0xDF18C4", VA = "0xDF18C4")]
		public DungeonRoomDesigner()
		{
		}

		[Token(Token = "0x600209E")]
		[Address(RVA = "0xDF19E0", Offset = "0xDF19E0", VA = "0xDF19E0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CB604", Offset = "0x8CB604")]
		private void <FillSmallGaps>b__12_0(DungeonRoomVoxelCell cell, IntVector coord)
		{
		}
	}
	[Token(Token = "0x2000478")]
	internal struct CarvingCommand
	{
		[Token(Token = "0x4001A7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public UnityEngine.Vector3 localPosition;

		[Token(Token = "0x4001A7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public DungeonRoomVoxelCellType cellType;

		[Token(Token = "0x4001A7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool stateLocked;

		[Token(Token = "0x600209F")]
		[Address(RVA = "0x97EFA8", Offset = "0x97EFA8", VA = "0x97EFA8")]
		public CarvingCommand(UnityEngine.Vector3 localPosition, DungeonRoomVoxelCellType cellType, bool stateLocked)
		{
		}
	}
	[Token(Token = "0x2000479")]
	internal class FloorIsland
	{
		[Token(Token = "0x4001A7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private List<IntVector> islandCells;

		[Token(Token = "0x170003C2")]
		public List<IntVector> IslandCells
		{
			[Token(Token = "0x60020A0")]
			[Address(RVA = "0xDF3678", Offset = "0xDF3678", VA = "0xDF3678")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60020A1")]
		[Address(RVA = "0xDF3680", Offset = "0xDF3680", VA = "0xDF3680")]
		public static FloorIsland MergeIslands(FloorIsland[] islands)
		{
			return null;
		}

		[Token(Token = "0x60020A2")]
		[Address(RVA = "0xDF05D4", Offset = "0xDF05D4", VA = "0xDF05D4")]
		public static FloorIsland[] FindIslands(DungeonRoomVoxel voxelWorld, int y)
		{
			return null;
		}

		[Token(Token = "0x60020A3")]
		[Address(RVA = "0xDF3688", Offset = "0xDF3688", VA = "0xDF3688")]
		public FloorIsland()
		{
		}
	}
	[Token(Token = "0x200047A")]
	public class DungeonRoomDesignerHook : DungeonEventListener
	{
		[Token(Token = "0x2000884")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B8F20", Offset = "0x8B8F20")]
		private sealed class <>c__DisplayClass0_0
		{
			[Token(Token = "0x40029F2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Dungeon dungeon;

			[Token(Token = "0x600304D")]
			[Address(RVA = "0xDF1D98", Offset = "0xDF1D98", VA = "0xDF1D98")]
			public <>c__DisplayClass0_0()
			{
			}

			[Token(Token = "0x600304E")]
			[Address(RVA = "0xDF1F90", Offset = "0xDF1F90", VA = "0xDF1F90")]
			internal bool <OnPostDungeonLayoutBuild>b__0(DungeonRoomDesigner p)
			{
				return default(bool);
			}
		}

		[Serializable]
		[Token(Token = "0x2000885")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B8F30", Offset = "0x8B8F30")]
		private sealed class <>c
		{
			[Token(Token = "0x40029F3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40029F4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Action<DungeonRoomDesigner> <>9__0_1;

			[Token(Token = "0x6003050")]
			[Address(RVA = "0xDF1F70", Offset = "0xDF1F70", VA = "0xDF1F70")]
			public <>c()
			{
			}

			[Token(Token = "0x6003051")]
			[Address(RVA = "0xDF1F78", Offset = "0xDF1F78", VA = "0xDF1F78")]
			internal void <OnPostDungeonLayoutBuild>b__0_1(DungeonRoomDesigner r)
			{
			}
		}

		[Token(Token = "0x2000886")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B8F40", Offset = "0x8B8F40")]
		private sealed class <>c__DisplayClass1_0
		{
			[Token(Token = "0x40029F5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Dungeon dungeon;

			[Token(Token = "0x40029F6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public LevelMarkerList markers;

			[Token(Token = "0x6003052")]
			[Address(RVA = "0xDF1EFC", Offset = "0xDF1EFC", VA = "0xDF1EFC")]
			public <>c__DisplayClass1_0()
			{
			}

			[Token(Token = "0x6003053")]
			[Address(RVA = "0xDF2018", Offset = "0xDF2018", VA = "0xDF2018")]
			internal bool <OnDungeonMarkersEmitted>b__0(DungeonRoomDesigner p)
			{
				return default(bool);
			}

			[Token(Token = "0x6003054")]
			[Address(RVA = "0xDF20A0", Offset = "0xDF20A0", VA = "0xDF20A0")]
			internal void <OnDungeonMarkersEmitted>b__1(DungeonRoomDesigner r)
			{
			}
		}

		[Token(Token = "0x60020A4")]
		[Address(RVA = "0xDF1BE0", Offset = "0xDF1BE0", VA = "0xDF1BE0", Slot = "4")]
		public override void OnPostDungeonLayoutBuild(Dungeon dungeon, DungeonModel model)
		{
		}

		[Token(Token = "0x60020A5")]
		[Address(RVA = "0xDF1DA0", Offset = "0xDF1DA0", VA = "0xDF1DA0", Slot = "5")]
		public override void OnDungeonMarkersEmitted(Dungeon dungeon, DungeonModel model, LevelMarkerList markers)
		{
		}

		[Token(Token = "0x60020A6")]
		[Address(RVA = "0xDF1F04", Offset = "0xDF1F04", VA = "0xDF1F04")]
		public DungeonRoomDesignerHook()
		{
		}
	}
	[Token(Token = "0x200047B")]
	public class DungeonRoomMarkerEmitter
	{
		[Token(Token = "0x60020A7")]
		[Address(RVA = "0xDF20C0", Offset = "0xDF20C0", VA = "0xDF20C0")]
		public static void EmitMarkers(DungeonRoomDesigner room, LevelMarkerList markerList)
		{
		}

		[Token(Token = "0x60020A8")]
		[Address(RVA = "0xDF2314", Offset = "0xDF2314", VA = "0xDF2314")]
		private static PropSocket[] RectFillMarkers(IntVector min, IntVector max, int y, string markerName, UnityEngine.Vector3 gridSize)
		{
			return null;
		}

		[Token(Token = "0x60020A9")]
		[Address(RVA = "0xDF2520", Offset = "0xDF2520", VA = "0xDF2520")]
		private static PropSocket[] RectBoundaryMarkers(IntVector min, IntVector max, int y, string markerName, UnityEngine.Vector3 gridSize)
		{
			return null;
		}

		[Token(Token = "0x60020AA")]
		[Address(RVA = "0xDF2984", Offset = "0xDF2984", VA = "0xDF2984")]
		private static PropSocket CreateMarker(UnityEngine.Vector3 position, Quaternion rotation, string name)
		{
			return null;
		}

		[Token(Token = "0x60020AB")]
		[Address(RVA = "0xDF2ACC", Offset = "0xDF2ACC", VA = "0xDF2ACC")]
		public DungeonRoomMarkerEmitter()
		{
		}
	}
	[Token(Token = "0x200047C")]
	internal class DungeonRoomDesignerConstants
	{
		[Token(Token = "0x4001A7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly string Ground;

		[Token(Token = "0x4001A80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static readonly string Wall;

		[Token(Token = "0x4001A81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static readonly string WallHalf;

		[Token(Token = "0x4001A82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static readonly string Door;

		[Token(Token = "0x4001A83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static readonly string Ceiling;

		[Token(Token = "0x60020AC")]
		[Address(RVA = "0xDF1B28", Offset = "0xDF1B28", VA = "0xDF1B28")]
		public DungeonRoomDesignerConstants()
		{
		}
	}
	[Token(Token = "0x200047D")]
	public enum DungeonRoomVoxelCellData
	{
		[Token(Token = "0x4001A85")]
		None,
		[Token(Token = "0x4001A86")]
		Door,
		[Token(Token = "0x4001A87")]
		Stair
	}
	[Token(Token = "0x200047E")]
	public enum DungeonRoomVoxelCellType
	{
		[Token(Token = "0x4001A89")]
		Empty,
		[Token(Token = "0x4001A8A")]
		Occupied
	}
	[Serializable]
	[Token(Token = "0x200047F")]
	public class DungeonRoomVoxelCell
	{
		[Token(Token = "0x4001A8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		public DungeonRoomVoxelCellType cellType;

		[Token(Token = "0x4001A8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		public bool stateLocked;

		[Token(Token = "0x4001A8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public int cellData;

		[Token(Token = "0x60020AE")]
		[Address(RVA = "0xDF2ADC", Offset = "0xDF2ADC", VA = "0xDF2ADC")]
		public DungeonRoomVoxelCell()
		{
		}
	}
	[Token(Token = "0x2000480")]
	public class DungeonRoomVoxel
	{
		[Token(Token = "0x2000887")]
		private class MarkerEmitCommand
		{
			[Token(Token = "0x40029F7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string markerName;

			[Token(Token = "0x40029F8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public UnityEngine.Vector3 position;

			[Token(Token = "0x40029F9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public Quaternion rotation;

			[Token(Token = "0x6003055")]
			[Address(RVA = "0xDF3578", Offset = "0xDF3578", VA = "0xDF3578")]
			public MarkerEmitCommand()
			{
			}
		}

		[Token(Token = "0x2000888")]
		private class MarkerEmitCommandList
		{
			[Token(Token = "0x40029FA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Dictionary<UnityEngine.Vector3, MarkerEmitCommand> Map;

			[Token(Token = "0x6003056")]
			[Address(RVA = "0xDF3580", Offset = "0xDF3580", VA = "0xDF3580")]
			public void Add(MarkerEmitCommand command)
			{
			}

			[Token(Token = "0x6003057")]
			[Address(RVA = "0xDF34F8", Offset = "0xDF34F8", VA = "0xDF34F8")]
			public void Remove(UnityEngine.Vector3 position)
			{
			}

			[Token(Token = "0x6003058")]
			[Address(RVA = "0xDF3414", Offset = "0xDF3414", VA = "0xDF3414")]
			public bool Contains(UnityEngine.Vector3 position, string markerName)
			{
				return default(bool);
			}

			[Token(Token = "0x6003059")]
			[Address(RVA = "0xDF2CE4", Offset = "0xDF2CE4", VA = "0xDF2CE4")]
			public MarkerEmitCommandList()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000889")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B8F50", Offset = "0x8B8F50")]
		private sealed class <>c
		{
			[Token(Token = "0x40029FB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40029FC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<MarkerEmitCommand, float> <>9__16_0;

			[Token(Token = "0x600305B")]
			[Address(RVA = "0xDF3658", Offset = "0xDF3658", VA = "0xDF3658")]
			public <>c()
			{
			}

			[Token(Token = "0x600305C")]
			[Address(RVA = "0xDF3660", Offset = "0xDF3660", VA = "0xDF3660")]
			internal float <Pass_UpgradeWalls>b__16_0(MarkerEmitCommand c)
			{
				return default(float);
			}
		}

		[Token(Token = "0x4001A8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private DungeonRoomVoxelCell[,,] cells;

		[Token(Token = "0x170003C3")]
		public DungeonRoomVoxelCell[,,] Cells
		{
			[Token(Token = "0x60020AF")]
			[Address(RVA = "0xDF2AD4", Offset = "0xDF2AD4", VA = "0xDF2AD4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60020B0")]
		[Address(RVA = "0xDEFF6C", Offset = "0xDEFF6C", VA = "0xDEFF6C")]
		public DungeonRoomVoxel(int sizeX, int sizeY, int sizeZ)
		{
		}

		[Token(Token = "0x60020B1")]
		[Address(RVA = "0xDF2AE4", Offset = "0xDF2AE4", VA = "0xDF2AE4")]
		public void TagDoorCells(UnityEngine.Vector3 logicalPosition)
		{
		}

		[Token(Token = "0x60020B2")]
		[Address(RVA = "0xDF2AE8", Offset = "0xDF2AE8", VA = "0xDF2AE8")]
		public bool IsValidCoord(IntVector coord)
		{
			return default(bool);
		}

		[Token(Token = "0x60020B3")]
		[Address(RVA = "0xDF2AF4", Offset = "0xDF2AF4", VA = "0xDF2AF4")]
		public bool IsValidCoord(int x, int y, int z)
		{
			return default(bool);
		}

		[Token(Token = "0x60020B4")]
		[Address(RVA = "0xDF2B94", Offset = "0xDF2B94", VA = "0xDF2B94")]
		public void SetState(IntVector coord, DungeonRoomVoxelCellType cellType)
		{
		}

		[Token(Token = "0x60020B5")]
		[Address(RVA = "0xDF1010", Offset = "0xDF1010", VA = "0xDF1010")]
		public void SetData(IntVector coord, DungeonRoomVoxelCellData cellData)
		{
		}

		[Token(Token = "0x60020B6")]
		[Address(RVA = "0xDF2BA0", Offset = "0xDF2BA0", VA = "0xDF2BA0")]
		public bool IsValidPlatform(IntVector p)
		{
			return default(bool);
		}

		[Token(Token = "0x60020B7")]
		[Address(RVA = "0xDF2C1C", Offset = "0xDF2C1C", VA = "0xDF2C1C")]
		public bool ContainsData(IntVector coord, DungeonRoomVoxelCellData cellData)
		{
			return default(bool);
		}

		[Token(Token = "0x60020B8")]
		[Address(RVA = "0xDF0F4C", Offset = "0xDF0F4C", VA = "0xDF0F4C")]
		public void SetState(IntVector coord, DungeonRoomVoxelCellType cellType, bool lockState)
		{
		}

		[Token(Token = "0x60020B9")]
		[Address(RVA = "0xDF1A7C", Offset = "0xDF1A7C", VA = "0xDF1A7C")]
		public bool IsEmpty(int x, int y, int z)
		{
			return default(bool);
		}

		[Token(Token = "0x60020BA")]
		[Address(RVA = "0xDF1274", Offset = "0xDF1274", VA = "0xDF1274")]
		public void EmitMarkers(LevelMarkerList markerList, IntVector roomPosition, DungeonRoomDoorDesigner[] doors, UnityEngine.Vector3 gridSize)
		{
		}

		[Token(Token = "0x60020BB")]
		[Address(RVA = "0xDF30E0", Offset = "0xDF30E0", VA = "0xDF30E0")]
		private void Pass_UpgradeWalls(MarkerEmitCommandList commands)
		{
		}

		[Token(Token = "0x60020BC")]
		[Address(RVA = "0xDF2F28", Offset = "0xDF2F28", VA = "0xDF2F28")]
		private void Pass_AddDoorMarkers(MarkerEmitCommandList commands, DungeonRoomDoorDesigner[] doors)
		{
		}

		[Token(Token = "0x60020BD")]
		[Address(RVA = "0xDF2D54", Offset = "0xDF2D54", VA = "0xDF2D54")]
		private void EmitMarker(string markerName, float x, float y, float z, float angleY, MarkerEmitCommandList commands)
		{
		}

		[Token(Token = "0x60020BE")]
		[Address(RVA = "0xDF2E28", Offset = "0xDF2E28", VA = "0xDF2E28")]
		private void EmitMarker(string markerName, float x, float y, float z, Quaternion rotation, MarkerEmitCommandList commands)
		{
		}

		[Token(Token = "0x60020BF")]
		[Address(RVA = "0xDF10C8", Offset = "0xDF10C8", VA = "0xDF10C8")]
		public void IterateCells(Action<DungeonRoomVoxelCell, IntVector> callback)
		{
		}
	}
}
namespace DungeonArchitect.RoadNetworks
{
	[Token(Token = "0x2000481")]
	public class RoadGraphEdge
	{
		[Token(Token = "0x4001A8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int edgeId;

		[Token(Token = "0x4001A90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int ownerNodeId;

		[Token(Token = "0x4001A91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int otherNodeId;

		[Token(Token = "0x4001A92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float thickness;

		[Token(Token = "0x4001A93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float angleToXAxis;

		[Token(Token = "0x60020C0")]
		[Address(RVA = "0xD5B36C", Offset = "0xD5B36C", VA = "0xD5B36C")]
		public RoadGraphEdge()
		{
		}
	}
	[Token(Token = "0x2000482")]
	public class RoadGraphNode
	{
		[Token(Token = "0x4001A94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int nodeId;

		[Token(Token = "0x4001A95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public UnityEngine.Vector3 position;

		[Token(Token = "0x4001A96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RoadGraphEdge[] adjacentEdges;

		[Token(Token = "0x60020C1")]
		[Address(RVA = "0xD5B364", Offset = "0xD5B364", VA = "0xD5B364")]
		public RoadGraphNode()
		{
		}
	}
	[Token(Token = "0x2000483")]
	public class RoadGraph
	{
		[Token(Token = "0x4001A97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public RoadGraphNode[] nodes;

		[Token(Token = "0x60020C2")]
		[Address(RVA = "0xD59F10", Offset = "0xD59F10", VA = "0xD59F10")]
		public RoadGraph()
		{
		}
	}
	[Token(Token = "0x2000484")]
	public class RoadGraphBuilderSettings
	{
		[Token(Token = "0x4001A98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float interNodeDistance;

		[Token(Token = "0x60020C3")]
		[Address(RVA = "0xD5A1A4", Offset = "0xD5A1A4", VA = "0xD5A1A4")]
		public RoadGraphBuilderSettings()
		{
		}
	}
	[Token(Token = "0x2000485")]
	public class RoadGraphBuilder
	{
		[Token(Token = "0x4001A99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private RoadGraphBuilderSettings settings;

		[Token(Token = "0x4001A9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Dictionary<int, RoadGraphBuildNode> nodes;

		[Token(Token = "0x4001A9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int _nodeIdCounter;

		[Token(Token = "0x60020C4")]
		[Address(RVA = "0xD5A108", Offset = "0xD5A108", VA = "0xD5A108")]
		public RoadGraphBuilder()
		{
		}

		[Token(Token = "0x60020C5")]
		[Address(RVA = "0xD5A1B4", Offset = "0xD5A1B4", VA = "0xD5A1B4")]
		public RoadGraphBuilder(RoadGraphBuilderSettings settings)
		{
		}

		[Token(Token = "0x60020C6")]
		[Address(RVA = "0xD5A238", Offset = "0xD5A238", VA = "0xD5A238")]
		public void Initialize(RoadGraph graph)
		{
		}

		[Token(Token = "0x60020C7")]
		[Address(RVA = "0xD5A44C", Offset = "0xD5A44C", VA = "0xD5A44C")]
		private RoadGraphBuildNode FindNearestNode(UnityEngine.Vector3 position, float searchRadius)
		{
			return null;
		}

		[Token(Token = "0x60020C8")]
		[Address(RVA = "0xD5A610", Offset = "0xD5A610", VA = "0xD5A610")]
		public void CreateLine(UnityEngine.Vector3 start, UnityEngine.Vector3 end, float thickness)
		{
		}

		[Token(Token = "0x60020C9")]
		[Address(RVA = "0xD5AADC", Offset = "0xD5AADC", VA = "0xD5AADC")]
		public void CreateCircle(UnityEngine.Vector3 center, float radius, float thickness)
		{
		}

		[Token(Token = "0x60020CA")]
		[Address(RVA = "0xD5ACC0", Offset = "0xD5ACC0", VA = "0xD5ACC0")]
		public RoadGraph BakeRoadGraph()
		{
			return null;
		}

		[Token(Token = "0x60020CB")]
		[Address(RVA = "0xD5A8FC", Offset = "0xD5A8FC", VA = "0xD5A8FC")]
		public RoadGraphBuildNode CreateNode(UnityEngine.Vector3 position)
		{
			return null;
		}

		[Token(Token = "0x60020CC")]
		[Address(RVA = "0xD5A9C0", Offset = "0xD5A9C0", VA = "0xD5A9C0")]
		public void ConnectNodes(RoadGraphBuildNode a, RoadGraphBuildNode b, float thickness)
		{
		}
	}
	[Token(Token = "0x2000486")]
	public class RoadGraphBuildNode
	{
		[Token(Token = "0x4001A9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int nodeId;

		[Token(Token = "0x4001A9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public UnityEngine.Vector3 position;

		[Token(Token = "0x4001A9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<RoadGraphBuildNode> connectedNodes;

		[Token(Token = "0x4001A9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<float> edgeThickness;

		[Token(Token = "0x60020CD")]
		[Address(RVA = "0xD59F70", Offset = "0xD59F70", VA = "0xD59F70")]
		public RoadGraphBuildNode(int nodeId, UnityEngine.Vector3 position)
		{
		}

		[Token(Token = "0x60020CE")]
		[Address(RVA = "0xD5A040", Offset = "0xD5A040", VA = "0xD5A040")]
		public RoadGraphBuildNode(RoadGraphNode graphNode)
		{
		}
	}
	[Token(Token = "0x2000487")]
	internal class RoadGraphBuilderUtils
	{
		[Token(Token = "0x60020CF")]
		[Address(RVA = "0xD5AD1C", Offset = "0xD5AD1C", VA = "0xD5AD1C")]
		public static RoadGraph BakeRoadGraph(IEnumerable<RoadGraphBuildNode> buildNodes)
		{
			return null;
		}

		[Token(Token = "0x60020D0")]
		[Address(RVA = "0xD5B374", Offset = "0xD5B374", VA = "0xD5B374")]
		private static int SortEdgesByAngle(RoadGraphEdge a, RoadGraphEdge b)
		{
			return default(int);
		}

		[Token(Token = "0x60020D1")]
		[Address(RVA = "0xD5B3B4", Offset = "0xD5B3B4", VA = "0xD5B3B4")]
		public RoadGraphBuilderUtils()
		{
		}
	}
	[Token(Token = "0x2000488")]
	public delegate void RoadBlockLayoutBuiltDelegate(ref UnityEngine.Vector3[] layout);
	[Token(Token = "0x2000489")]
	public class RoadLayoutBuilder
	{
		[Token(Token = "0x4001AA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Dictionary<int, RoadGraphNode> graphNodes;

		[Token(Token = "0x4001AA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private MeshFilter meshFilter;

		[Token(Token = "0x14000051")]
		public event RoadBlockLayoutBuiltDelegate RoadBlockLayoutBuilt
		{
			[Token(Token = "0x60020D6")]
			[Address(RVA = "0xD5B3BC", Offset = "0xD5B3BC", VA = "0xD5B3BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CB614", Offset = "0x8CB614")]
			add
			{
			}
			[Token(Token = "0x60020D7")]
			[Address(RVA = "0xD5B460", Offset = "0xD5B460", VA = "0xD5B460")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CB624", Offset = "0x8CB624")]
			remove
			{
			}
		}

		[Token(Token = "0x60020D8")]
		[Address(RVA = "0xD5B504", Offset = "0xD5B504", VA = "0xD5B504")]
		public RoadLayoutBuilder(RoadGraph roadGraph, MeshFilter meshFilter)
		{
		}

		[Token(Token = "0x60020D9")]
		[Address(RVA = "0xD5B628", Offset = "0xD5B628", VA = "0xD5B628")]
		private void GenerateBoundaryMesh(RoadGraphEdge[] edges, UnityEngine.Vector3[] boundaryPoints, List<UnityEngine.Vector3> vertices, List<UnityEngine.Vector2> uv)
		{
		}

		[Token(Token = "0x60020DA")]
		[Address(RVA = "0xD5B948", Offset = "0xD5B948", VA = "0xD5B948")]
		private UnityEngine.Vector3[] GenerateBlockBoundary(RoadGraphEdge[] edges)
		{
			return null;
		}

		[Token(Token = "0x60020DB")]
		[Address(RVA = "0xD5BD90", Offset = "0xD5BD90", VA = "0xD5BD90")]
		public RoadGraph BakeLayoutGraph()
		{
			return null;
		}

		[Token(Token = "0x60020DC")]
		[Address(RVA = "0xD5C2A4", Offset = "0xD5C2A4", VA = "0xD5C2A4")]
		private RoadGraphEdge[] TraverseEdgeBlock(RoadGraphEdge startEdge, HashSet<int> edgeVisited)
		{
			return null;
		}
	}
}
namespace DungeonArchitect.Navigation
{
	[Token(Token = "0x200048A")]
	public abstract class DungeonNavAgent : MonoBehaviour
	{
		[Token(Token = "0x170003C4")]
		public abstract UnityEngine.Vector3 Destination
		{
			[Token(Token = "0x60020E0")]
			get;
			[Token(Token = "0x60020E1")]
			set;
		}

		[Token(Token = "0x170003C5")]
		public abstract UnityEngine.Vector3 Velocity
		{
			[Token(Token = "0x60020E2")]
			get;
			[Token(Token = "0x60020E3")]
			set;
		}

		[Token(Token = "0x170003C6")]
		public abstract UnityEngine.Vector3 Direction
		{
			[Token(Token = "0x60020E4")]
			get;
		}

		[Token(Token = "0x60020DD")]
		public abstract void Resume();

		[Token(Token = "0x60020DE")]
		public abstract void Stop();

		[Token(Token = "0x60020DF")]
		public abstract float GetRemainingDistance();

		[Token(Token = "0x60020E5")]
		[Address(RVA = "0xD54B30", Offset = "0xD54B30", VA = "0xD54B30")]
		protected DungeonNavAgent()
		{
		}
	}
	[Token(Token = "0x200048B")]
	public class DungeonNavAgent2D : DungeonNavAgent
	{
		[Token(Token = "0x4001AA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float radius;

		[Token(Token = "0x4001AA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float height;

		[Token(Token = "0x4001AA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float maxAcceleration;

		[Token(Token = "0x4001AA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float maxSpeed;

		[Token(Token = "0x4001AA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float collisionQueryRange;

		[Token(Token = "0x4001AA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float pathOptimizationRange;

		[Token(Token = "0x4001AA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float separationWeight;

		[Token(Token = "0x4001AAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public UnityEngine.Vector2 navAgentCollisionOffset;

		[Token(Token = "0x4001AAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float updateFrequency;

		[Token(Token = "0x4001AAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int agentId;

		[Token(Token = "0x4001AAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private DungeonNavMesh navMesh;

		[Token(Token = "0x4001AAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Rigidbody2D rigidBody2D;

		[Token(Token = "0x4001AAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool running;

		[Token(Token = "0x4001AB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private UnityEngine.Vector3 previousDirection;

		[Token(Token = "0x4001AB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private UnityEngine.Vector3 destination;

		[Token(Token = "0x4001AB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Agent agent;

		[Token(Token = "0x4001AB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private UnityEngine.Vector3 _debugNavDest;

		[Token(Token = "0x170003C7")]
		public DungeonNavMesh NavMesh
		{
			[Token(Token = "0x60020E6")]
			[Address(RVA = "0xD54B38", Offset = "0xD54B38", VA = "0xD54B38")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003C8")]
		public override UnityEngine.Vector3 Destination
		{
			[Token(Token = "0x60020E7")]
			[Address(RVA = "0xD54B40", Offset = "0xD54B40", VA = "0xD54B40", Slot = "7")]
			get
			{
				return default(UnityEngine.Vector3);
			}
			[Token(Token = "0x60020E8")]
			[Address(RVA = "0xD54B4C", Offset = "0xD54B4C", VA = "0xD54B4C", Slot = "8")]
			set
			{
			}
		}

		[Token(Token = "0x170003C9")]
		public override UnityEngine.Vector3 Velocity
		{
			[Token(Token = "0x60020E9")]
			[Address(RVA = "0xD54B58", Offset = "0xD54B58", VA = "0xD54B58", Slot = "9")]
			get
			{
				return default(UnityEngine.Vector3);
			}
			[Token(Token = "0x60020EA")]
			[Address(RVA = "0xD54C44", Offset = "0xD54C44", VA = "0xD54C44", Slot = "10")]
			set
			{
			}
		}

		[Token(Token = "0x170003CA")]
		public override UnityEngine.Vector3 Direction
		{
			[Token(Token = "0x60020EB")]
			[Address(RVA = "0xD54CC8", Offset = "0xD54CC8", VA = "0xD54CC8", Slot = "11")]
			get
			{
				return default(UnityEngine.Vector3);
			}
		}

		[Token(Token = "0x170003CB")]
		public float DesiredSpeed
		{
			[Token(Token = "0x60020EC")]
			[Address(RVA = "0xD54CD4", Offset = "0xD54CD4", VA = "0xD54CD4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170003CC")]
		private UnityEngine.Vector3 ActorPosition3DX
		{
			[Token(Token = "0x60020F1")]
			[Address(RVA = "0xD5532C", Offset = "0xD5532C", VA = "0xD5532C")]
			get
			{
				return default(UnityEngine.Vector3);
			}
			[Token(Token = "0x60020F2")]
			[Address(RVA = "0xD55350", Offset = "0xD55350", VA = "0xD55350")]
			set
			{
			}
		}

		[Token(Token = "0x170003CD")]
		private UnityEngine.Vector3 ActorPosition3D
		{
			[Token(Token = "0x60020F3")]
			[Address(RVA = "0xD552D4", Offset = "0xD552D4", VA = "0xD552D4")]
			get
			{
				return default(UnityEngine.Vector3);
			}
			[Token(Token = "0x60020F4")]
			[Address(RVA = "0xD5539C", Offset = "0xD5539C", VA = "0xD5539C")]
			set
			{
			}
		}

		[Token(Token = "0x60020ED")]
		[Address(RVA = "0xD54D18", Offset = "0xD54D18", VA = "0xD54D18")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x60020EE")]
		[Address(RVA = "0xD54E2C", Offset = "0xD54E2C", VA = "0xD54E2C")]
		private UnityEngine.Vector3 FlipYZ(UnityEngine.Vector3 v)
		{
			return default(UnityEngine.Vector3);
		}

		[Token(Token = "0x60020EF")]
		[Address(RVA = "0xD54E6C", Offset = "0xD54E6C", VA = "0xD54E6C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60020F0")]
		[Address(RVA = "0xD54F38", Offset = "0xD54F38", VA = "0xD54F38")]
		private void Start()
		{
		}

		[Token(Token = "0x60020F5")]
		[Address(RVA = "0xD551A4", Offset = "0xD551A4", VA = "0xD551A4")]
		private void PositionOnNearestNavMesh()
		{
		}

		[Token(Token = "0x60020F6")]
		[Address(RVA = "0xD54C94", Offset = "0xD54C94", VA = "0xD54C94")]
		public static SharpNav.Geometry.Vector3 ToSV3(UnityEngine.Vector3 v)
		{
			return default(SharpNav.Geometry.Vector3);
		}

		[Token(Token = "0x60020F7")]
		[Address(RVA = "0xD54C10", Offset = "0xD54C10", VA = "0xD54C10")]
		public static UnityEngine.Vector3 ToV3(SharpNav.Geometry.Vector3 v)
		{
			return default(UnityEngine.Vector3);
		}

		[Token(Token = "0x60020F8")]
		[Address(RVA = "0xD55414", Offset = "0xD55414", VA = "0xD55414", Slot = "5")]
		public override void Stop()
		{
		}

		[Token(Token = "0x60020F9")]
		[Address(RVA = "0xD55578", Offset = "0xD55578", VA = "0xD55578", Slot = "4")]
		public override void Resume()
		{
		}

		[Token(Token = "0x60020FA")]
		[Address(RVA = "0xD55584", Offset = "0xD55584", VA = "0xD55584")]
		private void Update()
		{
		}

		[Token(Token = "0x60020FB")]
		[Address(RVA = "0xD55588", Offset = "0xD55588", VA = "0xD55588", Slot = "6")]
		public override float GetRemainingDistance()
		{
			return default(float);
		}

		[Token(Token = "0x60020FC")]
		[Address(RVA = "0xD556A4", Offset = "0xD556A4", VA = "0xD556A4")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x60020FD")]
		[Address(RVA = "0xD55B4C", Offset = "0xD55B4C", VA = "0xD55B4C")]
		public DungeonNavAgent2D()
		{
		}
	}
	[Token(Token = "0x200048C")]
	public class DungeonNavAgent3D : DungeonNavAgent
	{
		[Token(Token = "0x4001AB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float radius;

		[Token(Token = "0x4001AB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float height;

		[Token(Token = "0x4001AB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float maxAcceleration;

		[Token(Token = "0x4001AB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float maxSpeed;

		[Token(Token = "0x4001AB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float collisionQueryRange;

		[Token(Token = "0x4001AB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float pathOptimizationRange;

		[Token(Token = "0x4001ABA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float separationWeight;

		[Token(Token = "0x4001ABB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float gravity;

		[Token(Token = "0x4001ABC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float updateFrequency;

		[Token(Token = "0x4001ABD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float timeSinceLastNavUpdate;

		[Token(Token = "0x4001ABE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private CharacterController character;

		[Token(Token = "0x4001ABF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int agentId;

		[Token(Token = "0x4001AC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private DungeonNavMesh navMesh;

		[Token(Token = "0x4001AC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool running;

		[Token(Token = "0x4001AC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private UnityEngine.Vector3 destination;

		[Token(Token = "0x4001AC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Agent agent;

		[Token(Token = "0x170003CE")]
		public DungeonNavMesh NavMesh
		{
			[Token(Token = "0x60020FE")]
			[Address(RVA = "0xD55C04", Offset = "0xD55C04", VA = "0xD55C04")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003CF")]
		public override UnityEngine.Vector3 Destination
		{
			[Token(Token = "0x60020FF")]
			[Address(RVA = "0xD55C0C", Offset = "0xD55C0C", VA = "0xD55C0C", Slot = "7")]
			get
			{
				return default(UnityEngine.Vector3);
			}
			[Token(Token = "0x6002100")]
			[Address(RVA = "0xD55C18", Offset = "0xD55C18", VA = "0xD55C18", Slot = "8")]
			set
			{
			}
		}

		[Token(Token = "0x170003D0")]
		public override UnityEngine.Vector3 Velocity
		{
			[Token(Token = "0x6002101")]
			[Address(RVA = "0xD55C24", Offset = "0xD55C24", VA = "0xD55C24", Slot = "9")]
			get
			{
				return default(UnityEngine.Vector3);
			}
			[Token(Token = "0x6002102")]
			[Address(RVA = "0xD55D10", Offset = "0xD55D10", VA = "0xD55D10", Slot = "10")]
			set
			{
			}
		}

		[Token(Token = "0x170003D1")]
		public override UnityEngine.Vector3 Direction
		{
			[Token(Token = "0x6002103")]
			[Address(RVA = "0xD55D94", Offset = "0xD55D94", VA = "0xD55D94", Slot = "11")]
			get
			{
				return default(UnityEngine.Vector3);
			}
		}

		[Token(Token = "0x170003D2")]
		public float DesiredSpeed
		{
			[Token(Token = "0x6002104")]
			[Address(RVA = "0xD55DD4", Offset = "0xD55DD4", VA = "0xD55DD4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6002105")]
		[Address(RVA = "0xD55E18", Offset = "0xD55E18", VA = "0xD55E18")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x6002106")]
		[Address(RVA = "0xD55E8C", Offset = "0xD55E8C", VA = "0xD55E8C")]
		private void Start()
		{
		}

		[Token(Token = "0x6002107")]
		[Address(RVA = "0xD5608C", Offset = "0xD5608C", VA = "0xD5608C")]
		private void PositionOnNearestNavMesh()
		{
		}

		[Token(Token = "0x6002108")]
		[Address(RVA = "0xD55D60", Offset = "0xD55D60", VA = "0xD55D60")]
		public static SharpNav.Geometry.Vector3 ToSV3(UnityEngine.Vector3 v)
		{
			return default(SharpNav.Geometry.Vector3);
		}

		[Token(Token = "0x6002109")]
		[Address(RVA = "0xD55CDC", Offset = "0xD55CDC", VA = "0xD55CDC")]
		public static UnityEngine.Vector3 ToV3(SharpNav.Geometry.Vector3 v)
		{
			return default(UnityEngine.Vector3);
		}

		[Token(Token = "0x600210A")]
		[Address(RVA = "0xD561F4", Offset = "0xD561F4", VA = "0xD561F4", Slot = "5")]
		public override void Stop()
		{
		}

		[Token(Token = "0x600210B")]
		[Address(RVA = "0xD5631C", Offset = "0xD5631C", VA = "0xD5631C", Slot = "4")]
		public override void Resume()
		{
		}

		[Token(Token = "0x600210C")]
		[Address(RVA = "0xD56328", Offset = "0xD56328", VA = "0xD56328")]
		private void Update()
		{
		}

		[Token(Token = "0x600210D")]
		[Address(RVA = "0xD5632C", Offset = "0xD5632C", VA = "0xD5632C", Slot = "6")]
		public override float GetRemainingDistance()
		{
			return default(float);
		}

		[Token(Token = "0x600210E")]
		[Address(RVA = "0xD56458", Offset = "0xD56458", VA = "0xD56458")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x600210F")]
		[Address(RVA = "0xD56518", Offset = "0xD56518", VA = "0xD56518")]
		private void ProcessMove(bool recalculatePath)
		{
		}

		[Token(Token = "0x6002110")]
		[Address(RVA = "0xD56A98", Offset = "0xD56A98", VA = "0xD56A98")]
		public DungeonNavAgent3D()
		{
		}
	}
	[Token(Token = "0x200048D")]
	public class NavigationEvent
	{
		[Token(Token = "0x4001AC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public DungeonNavMesh navMesh;

		[Token(Token = "0x6002111")]
		[Address(RVA = "0xD57394", Offset = "0xD57394", VA = "0xD57394")]
		public NavigationEvent()
		{
		}
	}
	[Token(Token = "0x200048E")]
	public delegate void OnNavmeshBuiltDelegate(NavigationEvent e);
	[Token(Token = "0x200048F")]
	public class DungeonNavMesh : MonoBehaviour
	{
		[Token(Token = "0x4001AC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float agentHeight;

		[Token(Token = "0x4001AC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float agentRadius;

		[Token(Token = "0x4001AC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float agentClimbHeight;

		[Token(Token = "0x4001AC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float cellSize;

		[Token(Token = "0x4001AC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int maxCrowdAgents;

		[Token(Token = "0x4001ACA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Mesh visualization;

		[Token(Token = "0x4001ACB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Color visualizationColor;

		[Token(Token = "0x4001ACC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool visualize2D;

		[Token(Token = "0x4001ACE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private SharpNav.NavMesh navMesh;

		[Token(Token = "0x4001ACF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private NavMeshQuery navMeshQuery;

		[Token(Token = "0x4001AD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Crowd crowd;

		[Token(Token = "0x4001AD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private PolyMesh polyMesh;

		[Token(Token = "0x4001AD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private PolyMeshDetail polyMeshDetail;

		[Token(Token = "0x170003D3")]
		public SharpNav.NavMesh NavMesh
		{
			[Token(Token = "0x6002118")]
			[Address(RVA = "0xD56C10", Offset = "0xD56C10", VA = "0xD56C10")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003D4")]
		public NavMeshQuery NavMeshQuery
		{
			[Token(Token = "0x6002119")]
			[Address(RVA = "0xD56C18", Offset = "0xD56C18", VA = "0xD56C18")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003D5")]
		public Crowd Crowd
		{
			[Token(Token = "0x600211A")]
			[Address(RVA = "0xD56C20", Offset = "0xD56C20", VA = "0xD56C20")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003D6")]
		public PolyMesh PolyMesh
		{
			[Token(Token = "0x600211B")]
			[Address(RVA = "0xD56C28", Offset = "0xD56C28", VA = "0xD56C28")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003D7")]
		public PolyMeshDetail PolyMeshDetail
		{
			[Token(Token = "0x600211C")]
			[Address(RVA = "0xD56C30", Offset = "0xD56C30", VA = "0xD56C30")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x14000052")]
		public event OnNavmeshBuiltDelegate OnNavmeshBuilt
		{
			[Token(Token = "0x6002116")]
			[Address(RVA = "0xD56AC8", Offset = "0xD56AC8", VA = "0xD56AC8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CB634", Offset = "0x8CB634")]
			add
			{
			}
			[Token(Token = "0x6002117")]
			[Address(RVA = "0xD56B6C", Offset = "0xD56B6C", VA = "0xD56B6C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CB644", Offset = "0x8CB644")]
			remove
			{
			}
		}

		[Token(Token = "0x600211D")]
		[Address(RVA = "0xD56C38", Offset = "0xD56C38", VA = "0xD56C38")]
		private void Awake()
		{
		}

		[Token(Token = "0x600211E")]
		[Address(RVA = "0xD56D00", Offset = "0xD56D00", VA = "0xD56D00")]
		private void Update()
		{
		}

		[Token(Token = "0x600211F")]
		[Address(RVA = "0xD56C40", Offset = "0xD56C40", VA = "0xD56C40")]
		public void SetNavMeshVisible(bool show)
		{
		}

		[Token(Token = "0x6002120")]
		[Address(RVA = "0xD56D3C", Offset = "0xD56D3C", VA = "0xD56D3C")]
		public void Build()
		{
		}

		[Token(Token = "0x6002121")]
		[Address(RVA = "0xD57730", Offset = "0xD57730", VA = "0xD57730")]
		public static UnityEngine.Vector3 ToV3(SharpNav.Geometry.Vector3 v)
		{
			return default(UnityEngine.Vector3);
		}

		[Token(Token = "0x6002122")]
		[Address(RVA = "0xD56F58", Offset = "0xD56F58", VA = "0xD56F58")]
		private void BuildVisualization()
		{
		}

		[Token(Token = "0x6002123")]
		[Address(RVA = "0xD57764", Offset = "0xD57764", VA = "0xD57764")]
		public DungeonNavMesh()
		{
		}
	}
	[Token(Token = "0x2000490")]
	public class NavigationBuildInvoker : DungeonEventListener
	{
		[Token(Token = "0x4001AD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public DungeonNavMesh navMesh;

		[Token(Token = "0x6002124")]
		[Address(RVA = "0xD57D8C", Offset = "0xD57D8C", VA = "0xD57D8C", Slot = "7")]
		public override void OnPostDungeonBuild(Dungeon dungeon, DungeonModel model)
		{
		}

		[Token(Token = "0x6002125")]
		[Address(RVA = "0xD57E4C", Offset = "0xD57E4C", VA = "0xD57E4C")]
		public NavigationBuildInvoker()
		{
		}
	}
	[Token(Token = "0x2000491")]
	public class NavigationTriangleProvider : MonoBehaviour
	{
		[Token(Token = "0x6002126")]
		[Address(RVA = "0xD57E54", Offset = "0xD57E54", VA = "0xD57E54", Slot = "4")]
		public virtual void AddNavTriangles(List<Triangle3> triangles)
		{
		}

		[Token(Token = "0x6002127")]
		[Address(RVA = "0xD538C0", Offset = "0xD538C0", VA = "0xD538C0")]
		public NavigationTriangleProvider()
		{
		}
	}
	[Token(Token = "0x2000492")]
	public class CityLayoutTriangleProvider : NavigationTriangleProvider
	{
		[Token(Token = "0x4001AD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Dungeon dungeon;

		[Token(Token = "0x6002128")]
		[Address(RVA = "0xD533F4", Offset = "0xD533F4", VA = "0xD533F4", Slot = "4")]
		public override void AddNavTriangles(List<Triangle3> triangles)
		{
		}

		[Token(Token = "0x6002129")]
		[Address(RVA = "0xD538B8", Offset = "0xD538B8", VA = "0xD538B8")]
		public CityLayoutTriangleProvider()
		{
		}
	}
	[Token(Token = "0x2000493")]
	public class Collision2DTriangleProvider : NavigationTriangleProvider
	{
		[Token(Token = "0x4001AD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly UnityEngine.Vector3[] cubeVertices;

		[Token(Token = "0x4001AD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly int[] cubeIndices;

		[Token(Token = "0x600212A")]
		[Address(RVA = "0xD538C8", Offset = "0xD538C8", VA = "0xD538C8", Slot = "4")]
		public override void AddNavTriangles(List<Triangle3> triangles)
		{
		}

		[Token(Token = "0x600212B")]
		[Address(RVA = "0xD539E4", Offset = "0xD539E4", VA = "0xD539E4")]
		private void AddTriangles(List<Triangle3> triangles, GameObject gameObject)
		{
		}

		[Token(Token = "0x600212C")]
		[Address(RVA = "0xD54064", Offset = "0xD54064", VA = "0xD54064")]
		public Collision2DTriangleProvider()
		{
		}
	}
	[Token(Token = "0x2000494")]
	public class CollisionTriangleProvider : NavigationTriangleProvider
	{
		[Token(Token = "0x4001AD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly UnityEngine.Vector3[] cubeVertices;

		[Token(Token = "0x4001AD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly int[] cubeIndices;

		[Token(Token = "0x600212E")]
		[Address(RVA = "0xD54304", Offset = "0xD54304", VA = "0xD54304", Slot = "4")]
		public override void AddNavTriangles(List<Triangle3> triangles)
		{
		}

		[Token(Token = "0x600212F")]
		[Address(RVA = "0xD54420", Offset = "0xD54420", VA = "0xD54420")]
		private void AddTriangles(List<Triangle3> triangles, GameObject gameObject)
		{
		}

		[Token(Token = "0x6002130")]
		[Address(RVA = "0xD54890", Offset = "0xD54890", VA = "0xD54890")]
		public CollisionTriangleProvider()
		{
		}
	}
	[Token(Token = "0x2000495")]
	public class LayoutFloorTriangleProvider : NavigationTriangleProvider
	{
		[Token(Token = "0x4001AD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Dungeon dungeon;

		[Token(Token = "0x6002132")]
		[Address(RVA = "0xD577D0", Offset = "0xD577D0", VA = "0xD577D0", Slot = "4")]
		public override void AddNavTriangles(List<Triangle3> triangles)
		{
		}

		[Token(Token = "0x6002133")]
		[Address(RVA = "0xD57D84", Offset = "0xD57D84", VA = "0xD57D84")]
		public LayoutFloorTriangleProvider()
		{
		}
	}
	[Token(Token = "0x2000496")]
	public class StaticMeshTriangleProvider : NavigationTriangleProvider
	{
		[Token(Token = "0x6002134")]
		[Address(RVA = "0xD57E98", Offset = "0xD57E98", VA = "0xD57E98", Slot = "4")]
		public override void AddNavTriangles(List<Triangle3> triangles)
		{
		}

		[Token(Token = "0x6002135")]
		[Address(RVA = "0xD57FB4", Offset = "0xD57FB4", VA = "0xD57FB4")]
		private void AddTriangles(List<Triangle3> triangles, GameObject gameObject)
		{
		}

		[Token(Token = "0x6002136")]
		[Address(RVA = "0xD54814", Offset = "0xD54814", VA = "0xD54814")]
		public static void AddMeshTriangles(List<Triangle3> triangles, Mesh mesh, Matrix4x4 transform)
		{
		}

		[Token(Token = "0x6002137")]
		[Address(RVA = "0xD53DC8", Offset = "0xD53DC8", VA = "0xD53DC8")]
		public static void AddMeshTriangles(List<Triangle3> triangles, UnityEngine.Vector3[] vertices, int[] indices, Matrix4x4 transform)
		{
		}

		[Token(Token = "0x6002138")]
		[Address(RVA = "0xD580D8", Offset = "0xD580D8", VA = "0xD580D8")]
		public StaticMeshTriangleProvider()
		{
		}
	}
	[Token(Token = "0x2000497")]
	public class TerrainTriangleProvider : NavigationTriangleProvider
	{
		[Token(Token = "0x4001ADA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float terrainCellSize;

		[Token(Token = "0x6002139")]
		[Address(RVA = "0xD580E0", Offset = "0xD580E0", VA = "0xD580E0", Slot = "4")]
		public override void AddNavTriangles(List<Triangle3> triangles)
		{
		}

		[Token(Token = "0x600213A")]
		[Address(RVA = "0xD581D4", Offset = "0xD581D4", VA = "0xD581D4")]
		private void AddTerrainTriangles(List<Triangle3> triangles, Terrain terrain)
		{
		}

		[Token(Token = "0x600213B")]
		[Address(RVA = "0xD58778", Offset = "0xD58778", VA = "0xD58778")]
		public TerrainTriangleProvider()
		{
		}
	}
}
namespace DungeonArchitect.MiniMaps
{
	[Token(Token = "0x2000498")]
	public abstract class DungeonMiniMap : MonoBehaviour
	{
		[Token(Token = "0x4001ADB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float updateFrequency;

		[Token(Token = "0x4001ADC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool enableFogOfWar;

		[Token(Token = "0x4001ADD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RenderTexture minimapTexture;

		[Token(Token = "0x4001ADE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Shader compositeShader;

		[Token(Token = "0x4001ADF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private IntVector2 textureSize;

		[Token(Token = "0x4001AE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Texture staticImage;

		[Token(Token = "0x4001AE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Texture fogOfWar;

		[Token(Token = "0x4001AE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Texture overlayImage;

		[Token(Token = "0x4001AE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float timeSinceLastUpdate;

		[Token(Token = "0x4001AE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private bool initialized;

		[Token(Token = "0x4001AE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		protected Vector4 uvTransform;

		[Token(Token = "0x170003D8")]
		protected abstract bool SupportsFogOfWar
		{
			[Token(Token = "0x600213C")]
			get;
		}

		[Token(Token = "0x600213D")]
		protected abstract void CreateTextures(IntVector2 desiredSize, out Texture staticImage, out Texture fogOfWar, out Texture overlayImage, out IntVector2 targetTextureSize);

		[Token(Token = "0x600213E")]
		protected abstract void UpdateStaticTexture(Texture texture);

		[Token(Token = "0x600213F")]
		protected abstract void UpdateFogOfWarTexture(Texture texture);

		[Token(Token = "0x6002140")]
		protected abstract void UpdateOverlayTexture(Texture texture);

		[Token(Token = "0x6002141")]
		[Address(RVA = "0xD52E1C", Offset = "0xD52E1C", VA = "0xD52E1C")]
		public void Initialize()
		{
		}

		[Token(Token = "0x6002142")]
		[Address(RVA = "0xD52F30", Offset = "0xD52F30", VA = "0xD52F30")]
		private void UpdateDynamicTextures()
		{
		}

		[Token(Token = "0x6002143")]
		[Address(RVA = "0xD5333C", Offset = "0xD5333C", VA = "0xD5333C")]
		private bool RequiresUpdate()
		{
			return default(bool);
		}

		[Token(Token = "0x6002144")]
		[Address(RVA = "0xD53384", Offset = "0xD53384", VA = "0xD53384")]
		private void Update()
		{
		}

		[Token(Token = "0x6002145")]
		[Address(RVA = "0xD53270", Offset = "0xD53270", VA = "0xD53270")]
		private Vector4 GetCompositeUVTransform()
		{
			return default(Vector4);
		}

		[Token(Token = "0x6002146")]
		[Address(RVA = "0xD52F80", Offset = "0xD52F80", VA = "0xD52F80")]
		private void RenderFinalImage()
		{
		}

		[Token(Token = "0x6002147")]
		[Address(RVA = "0xD533E0", Offset = "0xD533E0", VA = "0xD533E0")]
		protected DungeonMiniMap()
		{
		}
	}
}
namespace DungeonArchitect.Graphs
{
	[Token(Token = "0x2000499")]
	public class CommentNode : GraphNode
	{
		[Token(Token = "0x4001AE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public string message;

		[Token(Token = "0x4001AE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Color background;

		[Token(Token = "0x4001AE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public int fontSize;

		[Token(Token = "0x6002148")]
		[Address(RVA = "0xD485B0", Offset = "0xD485B0", VA = "0xD485B0", Slot = "6")]
		public override void CopyFrom(GraphNode node)
		{
		}

		[Token(Token = "0x6002149")]
		[Address(RVA = "0xD4872C", Offset = "0xD4872C", VA = "0xD4872C")]
		public CommentNode()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200049A")]
	public class IndexCounter
	{
		[Token(Token = "0x4001AE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private int index;

		[Token(Token = "0x600214A")]
		[Address(RVA = "0xD4C40C", Offset = "0xD4C40C", VA = "0xD4C40C")]
		public int GetNext()
		{
			return default(int);
		}

		[Token(Token = "0x600214B")]
		[Address(RVA = "0xD4909C", Offset = "0xD4909C", VA = "0xD4909C")]
		public IndexCounter()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200049B")]
	public class Graph : ScriptableObject
	{
		[Token(Token = "0x200088A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B8F60", Offset = "0x8B8F60")]
		private sealed class <>c__DisplayClass13_0
		{
			[Token(Token = "0x40029FD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string id;

			[Token(Token = "0x600305D")]
			[Address(RVA = "0xD491A0", Offset = "0xD491A0", VA = "0xD491A0")]
			public <>c__DisplayClass13_0()
			{
			}

			[Token(Token = "0x600305E")]
			[Address(RVA = "0xD491B0", Offset = "0xD491B0", VA = "0xD491B0")]
			internal bool <GetNode>b__0(GraphNode node)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4001AEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private IndexCounter indexCounter;

		[Token(Token = "0x4001AEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private IndexCounter topZIndex;

		[Token(Token = "0x4001AEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private List<GraphNode> nodes;

		[Token(Token = "0x4001AED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private List<GraphLink> links;

		[Token(Token = "0x170003D9")]
		public IndexCounter IndexCounter
		{
			[Token(Token = "0x600214C")]
			[Address(RVA = "0xD48ED8", Offset = "0xD48ED8", VA = "0xD48ED8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003DA")]
		public List<GraphNode> Nodes
		{
			[Token(Token = "0x600214D")]
			[Address(RVA = "0xD48EE0", Offset = "0xD48EE0", VA = "0xD48EE0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003DB")]
		public List<GraphLink> Links
		{
			[Token(Token = "0x600214E")]
			[Address(RVA = "0xD48EE8", Offset = "0xD48EE8", VA = "0xD48EE8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003DC")]
		public IndexCounter TopZIndex
		{
			[Token(Token = "0x600214F")]
			[Address(RVA = "0xD48EF0", Offset = "0xD48EF0", VA = "0xD48EF0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002150")]
		[Address(RVA = "0xD48EF8", Offset = "0xD48EF8", VA = "0xD48EF8", Slot = "4")]
		public virtual void OnEnable()
		{
		}

		[Token(Token = "0x6002151")]
		[Address(RVA = "0xD490A4", Offset = "0xD490A4", VA = "0xD490A4")]
		public GraphNode GetNode(string id)
		{
			return null;
		}

		[Token(Token = "0x6002152")]
		public T[] GetNodes<T>() where T : GraphNode
		{
			return null;
		}

		[Token(Token = "0x6002153")]
		[Address(RVA = "0xD491A8", Offset = "0xD491A8", VA = "0xD491A8")]
		public Graph()
		{
		}
	}
	[Token(Token = "0x200049C")]
	public abstract class GraphBuilder
	{
		[Token(Token = "0x4001AEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected Graph graph;

		[Token(Token = "0x170003DD")]
		public Graph Graph
		{
			[Token(Token = "0x6002154")]
			[Address(RVA = "0xD491D4", Offset = "0xD491D4", VA = "0xD491D4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002155")]
		[Address(RVA = "0xD491DC", Offset = "0xD491DC", VA = "0xD491DC")]
		public GraphBuilder(Graph graph)
		{
		}

		[Token(Token = "0x6002156")]
		public abstract void DestroyNode(GraphNode node, UIUndoSystem undo);

		[Token(Token = "0x6002157")]
		public abstract GraphNode CreateNode(Type nodeType, UIUndoSystem undo);

		[Token(Token = "0x6002158")]
		public abstract TLink LinkNodes<TLink>(GraphPin outputPin, GraphPin inputPin) where TLink : GraphLink;

		[Token(Token = "0x6002159")]
		public T CreateNode<T>(UIUndoSystem undo) where T : GraphNode
		{
			return null;
		}

		[Token(Token = "0x600215A")]
		[Address(RVA = "0xD49208", Offset = "0xD49208", VA = "0xD49208")]
		public void DestroyAllNodes(UIUndoSystem undo)
		{
		}
	}
	[Token(Token = "0x200049D")]
	public class NonEditorGraphBuilder : GraphBuilder
	{
		[Token(Token = "0x600215B")]
		[Address(RVA = "0xD4CDB0", Offset = "0xD4CDB0", VA = "0xD4CDB0")]
		public NonEditorGraphBuilder(Graph graph)
		{
		}

		[Token(Token = "0x600215C")]
		[Address(RVA = "0xD4CDDC", Offset = "0xD4CDDC", VA = "0xD4CDDC", Slot = "5")]
		public override GraphNode CreateNode(Type nodeType, UIUndoSystem undo)
		{
			return null;
		}

		[Token(Token = "0x600215D")]
		public override TLink LinkNodes<TLink>(GraphPin outputPin, GraphPin inputPin)
		{
			return null;
		}

		[Token(Token = "0x600215E")]
		[Address(RVA = "0xD4CF34", Offset = "0xD4CF34", VA = "0xD4CF34", Slot = "4")]
		public override void DestroyNode(GraphNode node, UIUndoSystem undo)
		{
		}

		[Token(Token = "0x600215F")]
		[Address(RVA = "0xD4D3E4", Offset = "0xD4D3E4", VA = "0xD4D3E4")]
		private void DestroyObject(UnityEngine.Object obj)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200049E")]
	public class GraphCamera
	{
		[Token(Token = "0x4001AEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private float maxAllowedZoom;

		[Token(Token = "0x4001AF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private UnityEngine.Vector2 position;

		[Token(Token = "0x4001AF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public UnityEngine.Vector2 ScreenOffset;

		[Token(Token = "0x4001AF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private float zoomLevel;

		[Token(Token = "0x170003DE")]
		public float MaxAllowedZoom
		{
			[Token(Token = "0x6002160")]
			[Address(RVA = "0xD492DC", Offset = "0xD492DC", VA = "0xD492DC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002161")]
			[Address(RVA = "0xD492E4", Offset = "0xD492E4", VA = "0xD492E4")]
			set
			{
			}
		}

		[Token(Token = "0x170003DF")]
		public UnityEngine.Vector2 Position
		{
			[Token(Token = "0x6002162")]
			[Address(RVA = "0xD492EC", Offset = "0xD492EC", VA = "0xD492EC")]
			get
			{
				return default(UnityEngine.Vector2);
			}
			[Token(Token = "0x6002163")]
			[Address(RVA = "0xD492F4", Offset = "0xD492F4", VA = "0xD492F4")]
			set
			{
			}
		}

		[Token(Token = "0x170003E0")]
		public float ZoomLevel
		{
			[Token(Token = "0x6002164")]
			[Address(RVA = "0xD492FC", Offset = "0xD492FC", VA = "0xD492FC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002165")]
			[Address(RVA = "0xD49304", Offset = "0xD49304", VA = "0xD49304")]
			set
			{
			}
		}

		[Token(Token = "0x6002166")]
		[Address(RVA = "0xD4930C", Offset = "0xD4930C", VA = "0xD4930C")]
		public void Pan(int x, int y)
		{
		}

		[Token(Token = "0x6002167")]
		[Address(RVA = "0xD4934C", Offset = "0xD4934C", VA = "0xD4934C")]
		public void Pan(UnityEngine.Vector2 delta)
		{
		}

		[Token(Token = "0x6002168")]
		[Address(RVA = "0xD49404", Offset = "0xD49404", VA = "0xD49404")]
		public void HandleInput(Event e)
		{
		}

		[Token(Token = "0x6002169")]
		[Address(RVA = "0xD496DC", Offset = "0xD496DC", VA = "0xD496DC")]
		public UnityEngine.Vector2 WorldToScreen(UnityEngine.Vector2 worldCoord)
		{
			return default(UnityEngine.Vector2);
		}

		[Token(Token = "0x600216A")]
		[Address(RVA = "0xD49634", Offset = "0xD49634", VA = "0xD49634")]
		public UnityEngine.Vector2 ScreenToWorld(UnityEngine.Vector2 screenCoord)
		{
			return default(UnityEngine.Vector2);
		}

		[Token(Token = "0x600216B")]
		[Address(RVA = "0xD49784", Offset = "0xD49784", VA = "0xD49784")]
		public Rect WorldToScreen(Rect worldCoord)
		{
			return default(Rect);
		}

		[Token(Token = "0x600216C")]
		[Address(RVA = "0xD4986C", Offset = "0xD4986C", VA = "0xD4986C")]
		public Rect ScreenToWorld(Rect screenCoord)
		{
			return default(Rect);
		}

		[Token(Token = "0x600216D")]
		[Address(RVA = "0xD49954", Offset = "0xD49954", VA = "0xD49954")]
		public void FocusOnBestFit(Graph graph, Rect editorBounds)
		{
		}

		[Token(Token = "0x600216E")]
		[Address(RVA = "0xD49CB0", Offset = "0xD49CB0", VA = "0xD49CB0")]
		public void FocusOnNode(GraphNode node, Rect editorBounds)
		{
		}

		[Token(Token = "0x600216F")]
		[Address(RVA = "0xD49DC8", Offset = "0xD49DC8", VA = "0xD49DC8")]
		public GraphCamera()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200049F")]
	public class GraphLink : ScriptableObject
	{
		[Token(Token = "0x4001AF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private int id;

		[Token(Token = "0x4001AF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GraphPin input;

		[Token(Token = "0x4001AF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GraphPin output;

		[Token(Token = "0x4001AF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Graph graph;

		[Token(Token = "0x170003E1")]
		public int Id
		{
			[Token(Token = "0x6002170")]
			[Address(RVA = "0xD49E58", Offset = "0xD49E58", VA = "0xD49E58")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6002171")]
			[Address(RVA = "0xD49E60", Offset = "0xD49E60", VA = "0xD49E60")]
			set
			{
			}
		}

		[Token(Token = "0x170003E2")]
		public GraphPin Input
		{
			[Token(Token = "0x6002172")]
			[Address(RVA = "0xD49EF8", Offset = "0xD49EF8", VA = "0xD49EF8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002173")]
			[Address(RVA = "0xD49F00", Offset = "0xD49F00", VA = "0xD49F00")]
			set
			{
			}
		}

		[Token(Token = "0x170003E3")]
		public GraphPin Output
		{
			[Token(Token = "0x6002174")]
			[Address(RVA = "0xD49F08", Offset = "0xD49F08", VA = "0xD49F08")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002175")]
			[Address(RVA = "0xD49F10", Offset = "0xD49F10", VA = "0xD49F10")]
			set
			{
			}
		}

		[Token(Token = "0x170003E4")]
		public Graph Graph
		{
			[Token(Token = "0x6002176")]
			[Address(RVA = "0xD49F18", Offset = "0xD49F18", VA = "0xD49F18")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002177")]
			[Address(RVA = "0xD49F20", Offset = "0xD49F20", VA = "0xD49F20")]
			set
			{
			}
		}

		[Token(Token = "0x6002178")]
		[Address(RVA = "0xD49F28", Offset = "0xD49F28", VA = "0xD49F28")]
		public void OnEnable()
		{
		}

		[Token(Token = "0x6002179")]
		[Address(RVA = "0xD49E68", Offset = "0xD49E68", VA = "0xD49E68")]
		private void UpdateName()
		{
		}

		[Token(Token = "0x600217A")]
		[Address(RVA = "0xD49F54", Offset = "0xD49F54", VA = "0xD49F54")]
		public float GetTangentStrength()
		{
			return default(float);
		}

		[Token(Token = "0x600217B")]
		[Address(RVA = "0xD4A15C", Offset = "0xD4A15C", VA = "0xD4A15C")]
		public GraphLink()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20004A0")]
	public class GraphNode : ScriptableObject
	{
		[Token(Token = "0x4001AF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[HideInInspector]
		protected string id;

		[Token(Token = "0x4001AF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[HideInInspector]
		protected string caption;

		[Token(Token = "0x4001AF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		[HideInInspector]
		protected Rect bounds;

		[Token(Token = "0x4001AFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		[HideInInspector]
		protected bool canBeDeleted;

		[Token(Token = "0x4001AFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		[SerializeField]
		[HideInInspector]
		protected bool canBeSelected;

		[Token(Token = "0x4001AFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
		[SerializeField]
		[HideInInspector]
		protected bool canBeMoved;

		[Token(Token = "0x4001AFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3B")]
		[SerializeField]
		[HideInInspector]
		protected bool selected;

		[Token(Token = "0x4001AFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		[HideInInspector]
		protected int zIndex;

		[Token(Token = "0x4001AFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		[HideInInspector]
		protected List<GraphPin> inputPins;

		[Token(Token = "0x4001B00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		[HideInInspector]
		protected List<GraphPin> outputPins;

		[Token(Token = "0x4001B01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		[HideInInspector]
		protected Graph graph;

		[Token(Token = "0x4001B02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool dragging;

		[Token(Token = "0x170003E5")]
		public string Id
		{
			[Token(Token = "0x600217C")]
			[Address(RVA = "0xD4A164", Offset = "0xD4A164", VA = "0xD4A164")]
			get
			{
				return null;
			}
			[Token(Token = "0x600217D")]
			[Address(RVA = "0xD4A16C", Offset = "0xD4A16C", VA = "0xD4A16C")]
			set
			{
			}
		}

		[Token(Token = "0x170003E6")]
		public string Caption
		{
			[Token(Token = "0x600217E")]
			[Address(RVA = "0xD4A174", Offset = "0xD4A174", VA = "0xD4A174")]
			get
			{
				return null;
			}
			[Token(Token = "0x600217F")]
			[Address(RVA = "0xD4A17C", Offset = "0xD4A17C", VA = "0xD4A17C")]
			set
			{
			}
		}

		[Token(Token = "0x170003E7")]
		public Rect Bounds
		{
			[Token(Token = "0x6002180")]
			[Address(RVA = "0xD4A184", Offset = "0xD4A184", VA = "0xD4A184")]
			get
			{
				return default(Rect);
			}
			[Token(Token = "0x6002181")]
			[Address(RVA = "0xD4A190", Offset = "0xD4A190", VA = "0xD4A190")]
			set
			{
			}
		}

		[Token(Token = "0x170003E8")]
		public bool CanBeDeleted
		{
			[Token(Token = "0x6002182")]
			[Address(RVA = "0xD4A19C", Offset = "0xD4A19C", VA = "0xD4A19C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170003E9")]
		public bool CanBeSelected
		{
			[Token(Token = "0x6002183")]
			[Address(RVA = "0xD4A1A4", Offset = "0xD4A1A4", VA = "0xD4A1A4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170003EA")]
		public bool CanBeMoved
		{
			[Token(Token = "0x6002184")]
			[Address(RVA = "0xD4A1AC", Offset = "0xD4A1AC", VA = "0xD4A1AC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170003EB")]
		public bool Selected
		{
			[Token(Token = "0x6002185")]
			[Address(RVA = "0xD4A1B4", Offset = "0xD4A1B4", VA = "0xD4A1B4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002186")]
			[Address(RVA = "0xD4A1BC", Offset = "0xD4A1BC", VA = "0xD4A1BC")]
			set
			{
			}
		}

		[Token(Token = "0x170003EC")]
		public UnityEngine.Vector2 Size
		{
			[Token(Token = "0x6002187")]
			[Address(RVA = "0xD4A1D4", Offset = "0xD4A1D4", VA = "0xD4A1D4")]
			get
			{
				return default(UnityEngine.Vector2);
			}
			[Token(Token = "0x6002188")]
			[Address(RVA = "0xD4A1E0", Offset = "0xD4A1E0", VA = "0xD4A1E0")]
			set
			{
			}
		}

		[Token(Token = "0x170003ED")]
		public UnityEngine.Vector2 Position
		{
			[Token(Token = "0x6002189")]
			[Address(RVA = "0xD4A1EC", Offset = "0xD4A1EC", VA = "0xD4A1EC")]
			get
			{
				return default(UnityEngine.Vector2);
			}
			[Token(Token = "0x600218A")]
			[Address(RVA = "0xD4A1F8", Offset = "0xD4A1F8", VA = "0xD4A1F8")]
			set
			{
			}
		}

		[Token(Token = "0x170003EE")]
		public int ZIndex
		{
			[Token(Token = "0x600218B")]
			[Address(RVA = "0xD4A204", Offset = "0xD4A204", VA = "0xD4A204")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600218C")]
			[Address(RVA = "0xD4A20C", Offset = "0xD4A20C", VA = "0xD4A20C")]
			set
			{
			}
		}

		[Token(Token = "0x170003EF")]
		public GraphPin[] InputPins
		{
			[Token(Token = "0x600218D")]
			[Address(RVA = "0xD4A214", Offset = "0xD4A214", VA = "0xD4A214")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003F0")]
		public GraphPin[] OutputPins
		{
			[Token(Token = "0x600218E")]
			[Address(RVA = "0xD4A284", Offset = "0xD4A284", VA = "0xD4A284")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003F1")]
		public GraphPin OutputPin
		{
			[Token(Token = "0x600218F")]
			[Address(RVA = "0xD4A2F4", Offset = "0xD4A2F4", VA = "0xD4A2F4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003F2")]
		public GraphPin InputPin
		{
			[Token(Token = "0x6002190")]
			[Address(RVA = "0xD4A354", Offset = "0xD4A354", VA = "0xD4A354")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003F3")]
		public Graph Graph
		{
			[Token(Token = "0x6002191")]
			[Address(RVA = "0xD4A3B4", Offset = "0xD4A3B4", VA = "0xD4A3B4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003F4")]
		public bool Dragging
		{
			[Token(Token = "0x6002196")]
			[Address(RVA = "0xD4A3D4", Offset = "0xD4A3D4", VA = "0xD4A3D4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002197")]
			[Address(RVA = "0xD4A3DC", Offset = "0xD4A3DC", VA = "0xD4A3DC")]
			set
			{
			}
		}

		[Token(Token = "0x6002192")]
		[Address(RVA = "0xD4A3BC", Offset = "0xD4A3BC", VA = "0xD4A3BC", Slot = "4")]
		public virtual void OnEnable()
		{
		}

		[Token(Token = "0x6002193")]
		[Address(RVA = "0xD4A3C8", Offset = "0xD4A3C8", VA = "0xD4A3C8", Slot = "5")]
		public virtual void Initialize(string id, Graph graph)
		{
		}

		[Token(Token = "0x6002194")]
		[Address(RVA = "0xD48694", Offset = "0xD48694", VA = "0xD48694", Slot = "6")]
		public virtual void CopyFrom(GraphNode node)
		{
		}

		[Token(Token = "0x6002195")]
		[Address(RVA = "0xD48AE0", Offset = "0xD48AE0", VA = "0xD48AE0")]
		protected void UpdateName(string prefix)
		{
		}

		[Token(Token = "0x6002198")]
		[Address(RVA = "0xD4A3E8", Offset = "0xD4A3E8", VA = "0xD4A3E8")]
		protected GraphPin CreatePin(GraphPinType pinType, UnityEngine.Vector2 position, Rect boundsOffset, UnityEngine.Vector2 tangent)
		{
			return null;
		}

		[Token(Token = "0x6002199")]
		protected T CreatePinOfType<T>(GraphPinType pinType, UnityEngine.Vector2 position, Rect boundsOffset, UnityEngine.Vector2 tangent) where T : GraphPin
		{
			return null;
		}

		[Token(Token = "0x600219A")]
		[Address(RVA = "0xD4A4A8", Offset = "0xD4A4A8", VA = "0xD4A4A8")]
		public GraphNode[] GetParentNodes()
		{
			return null;
		}

		[Token(Token = "0x600219B")]
		[Address(RVA = "0xD4A918", Offset = "0xD4A918", VA = "0xD4A918")]
		public GraphNode[] GetChildNodes()
		{
			return null;
		}

		[Token(Token = "0x600219C")]
		[Address(RVA = "0xD4AAEC", Offset = "0xD4AAEC", VA = "0xD4AAEC")]
		public void DragNode(UnityEngine.Vector2 delta)
		{
		}

		[Token(Token = "0x600219D")]
		[Address(RVA = "0xD487C8", Offset = "0xD487C8", VA = "0xD487C8")]
		public GraphNode()
		{
		}
	}
	[Token(Token = "0x20004A1")]
	public enum GraphPinType
	{
		[Token(Token = "0x4001B04")]
		Input,
		[Token(Token = "0x4001B05")]
		Output,
		[Token(Token = "0x4001B06")]
		Unknown
	}
	[Token(Token = "0x20004A2")]
	public enum GraphPinMouseState
	{
		[Token(Token = "0x4001B08")]
		Hover,
		[Token(Token = "0x4001B09")]
		Clicked,
		[Token(Token = "0x4001B0A")]
		None
	}
	[Serializable]
	[Token(Token = "0x20004A3")]
	public class GraphPin : ScriptableObject
	{
		[Token(Token = "0x200088B")]
		public delegate void OnPinLinksDestroyed(GraphPin pin);

		[Token(Token = "0x4001B0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private GraphPinMouseState clickState;

		[Token(Token = "0x4001B0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private GraphPinType pinType;

		[Token(Token = "0x4001B0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GraphNode node;

		[Token(Token = "0x4001B0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private UnityEngine.Vector2 position;

		[Token(Token = "0x4001B10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Rect boundsOffset;

		[Token(Token = "0x4001B11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private UnityEngine.Vector2 tangent;

		[Token(Token = "0x4001B12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private float tangentStrength;

		[Token(Token = "0x4001B13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private bool requestLinkDeletionInitiated;

		[Token(Token = "0x170003F5")]
		public GraphPinMouseState ClickState
		{
			[Token(Token = "0x600219E")]
			[Address(RVA = "0xD4AB9C", Offset = "0xD4AB9C", VA = "0xD4AB9C")]
			get
			{
				return default(GraphPinMouseState);
			}
			[Token(Token = "0x600219F")]
			[Address(RVA = "0xD4ABA4", Offset = "0xD4ABA4", VA = "0xD4ABA4")]
			set
			{
			}
		}

		[Token(Token = "0x170003F6")]
		public GraphPinType PinType
		{
			[Token(Token = "0x60021A0")]
			[Address(RVA = "0xD4ABAC", Offset = "0xD4ABAC", VA = "0xD4ABAC")]
			get
			{
				return default(GraphPinType);
			}
			[Token(Token = "0x60021A1")]
			[Address(RVA = "0xD4ABB4", Offset = "0xD4ABB4", VA = "0xD4ABB4")]
			set
			{
			}
		}

		[Token(Token = "0x170003F7")]
		public GraphNode Node
		{
			[Token(Token = "0x60021A4")]
			[Address(RVA = "0xD4AD04", Offset = "0xD4AD04", VA = "0xD4AD04")]
			get
			{
				return null;
			}
			[Token(Token = "0x60021A5")]
			[Address(RVA = "0xD4AD0C", Offset = "0xD4AD0C", VA = "0xD4AD0C")]
			set
			{
			}
		}

		[Token(Token = "0x170003F8")]
		public UnityEngine.Vector2 Position
		{
			[Token(Token = "0x60021A6")]
			[Address(RVA = "0xD4AD14", Offset = "0xD4AD14", VA = "0xD4AD14")]
			get
			{
				return default(UnityEngine.Vector2);
			}
			[Token(Token = "0x60021A7")]
			[Address(RVA = "0xD4AD1C", Offset = "0xD4AD1C", VA = "0xD4AD1C")]
			set
			{
			}
		}

		[Token(Token = "0x170003F9")]
		public UnityEngine.Vector2 WorldPosition
		{
			[Token(Token = "0x60021A8")]
			[Address(RVA = "0xD4A068", Offset = "0xD4A068", VA = "0xD4A068")]
			get
			{
				return default(UnityEngine.Vector2);
			}
		}

		[Token(Token = "0x170003FA")]
		public Rect BoundsOffset
		{
			[Token(Token = "0x60021A9")]
			[Address(RVA = "0xD4AD24", Offset = "0xD4AD24", VA = "0xD4AD24")]
			get
			{
				return default(Rect);
			}
			[Token(Token = "0x60021AA")]
			[Address(RVA = "0xD4AD30", Offset = "0xD4AD30", VA = "0xD4AD30")]
			set
			{
			}
		}

		[Token(Token = "0x170003FB")]
		public UnityEngine.Vector2 Tangent
		{
			[Token(Token = "0x60021AB")]
			[Address(RVA = "0xD4AD3C", Offset = "0xD4AD3C", VA = "0xD4AD3C")]
			get
			{
				return default(UnityEngine.Vector2);
			}
			[Token(Token = "0x60021AC")]
			[Address(RVA = "0xD4AD44", Offset = "0xD4AD44", VA = "0xD4AD44")]
			set
			{
			}
		}

		[Token(Token = "0x170003FC")]
		public float TangentStrength
		{
			[Token(Token = "0x60021AD")]
			[Address(RVA = "0xD4AD4C", Offset = "0xD4AD4C", VA = "0xD4AD4C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60021AE")]
			[Address(RVA = "0xD4AD54", Offset = "0xD4AD54", VA = "0xD4AD54")]
			set
			{
			}
		}

		[Token(Token = "0x170003FD")]
		public bool RequestLinkDeletionInitiated
		{
			[Token(Token = "0x60021B5")]
			[Address(RVA = "0xD4B358", Offset = "0xD4B358", VA = "0xD4B358")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60021B6")]
			[Address(RVA = "0xD4B360", Offset = "0xD4B360", VA = "0xD4B360")]
			set
			{
			}
		}

		[Token(Token = "0x14000053")]
		public event OnPinLinksDestroyed PinLinksDestroyed
		{
			[Token(Token = "0x60021A2")]
			[Address(RVA = "0xD4ABBC", Offset = "0xD4ABBC", VA = "0xD4ABBC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CB654", Offset = "0x8CB654")]
			add
			{
			}
			[Token(Token = "0x60021A3")]
			[Address(RVA = "0xD4AC60", Offset = "0xD4AC60", VA = "0xD4AC60")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CB664", Offset = "0x8CB664")]
			remove
			{
			}
		}

		[Token(Token = "0x60021AF")]
		[Address(RVA = "0xD4AD5C", Offset = "0xD4AD5C", VA = "0xD4AD5C")]
		public void OnEnable()
		{
		}

		[Token(Token = "0x60021B0")]
		[Address(RVA = "0xD4A67C", Offset = "0xD4A67C", VA = "0xD4A67C")]
		public GraphLink[] GetConntectedLinks()
		{
			return null;
		}

		[Token(Token = "0x60021B1")]
		[Address(RVA = "0xD4AD68", Offset = "0xD4AD68", VA = "0xD4AD68", Slot = "4")]
		public virtual bool ContainsPoint(UnityEngine.Vector2 worldPoint)
		{
			return default(bool);
		}

		[Token(Token = "0x60021B2")]
		[Address(RVA = "0xD4ADB4", Offset = "0xD4ADB4", VA = "0xD4ADB4")]
		private Rect GetWorldBounds()
		{
			return default(Rect);
		}

		[Token(Token = "0x60021B3")]
		[Address(RVA = "0xD4AEB8", Offset = "0xD4AEB8", VA = "0xD4AEB8")]
		public Rect GetBounds()
		{
			return default(Rect);
		}

		[Token(Token = "0x60021B4")]
		[Address(RVA = "0xD4AFB0", Offset = "0xD4AFB0", VA = "0xD4AFB0")]
		public void NotifyPinLinksDestroyed()
		{
		}

		[Token(Token = "0x60021B7")]
		[Address(RVA = "0xD4B36C", Offset = "0xD4B36C", VA = "0xD4B36C")]
		public GraphPin()
		{
		}
	}
	[Token(Token = "0x20004A4")]
	public class GraphSchema
	{
		[Token(Token = "0x60021B8")]
		[Address(RVA = "0xD4B414", Offset = "0xD4B414", VA = "0xD4B414", Slot = "4")]
		public virtual bool CanCreateLink(GraphPin output, GraphPin input)
		{
			return default(bool);
		}

		[Token(Token = "0x60021B9")]
		[Address(RVA = "0xD4B444", Offset = "0xD4B444", VA = "0xD4B444", Slot = "5")]
		public virtual bool CanCreateLink(GraphPin output, GraphPin input, out string errorMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x60021BA")]
		[Address(RVA = "0xD4B9C4", Offset = "0xD4B9C4", VA = "0xD4B9C4")]
		private static string CombineMarkerNames(List<MarkerNode> markerNodes)
		{
			return null;
		}

		[Token(Token = "0x60021BB")]
		[Address(RVA = "0xD4B738", Offset = "0xD4B738", VA = "0xD4B738")]
		private static bool ContainsLoops(GraphPin a, GraphPin b, ref List<MarkerNode> cyclePath)
		{
			return default(bool);
		}

		[Token(Token = "0x60021BC")]
		[Address(RVA = "0xD4BCD0", Offset = "0xD4BCD0", VA = "0xD4BCD0")]
		private static bool FindCycles(ref Dictionary<MarkerNode, List<MarkerNode>> markerChildMap, ref List<MarkerNode> cyclePath)
		{
			return default(bool);
		}

		[Token(Token = "0x60021BD")]
		[Address(RVA = "0xD4BEC8", Offset = "0xD4BEC8", VA = "0xD4BEC8")]
		private static bool CheckCycleDFS(ref Dictionary<MarkerNode, List<MarkerNode>> markerChildMap, ref List<MarkerNode> traversePath)
		{
			return default(bool);
		}

		[Token(Token = "0x60021BE")]
		[Address(RVA = "0xD4C0F0", Offset = "0xD4C0F0", VA = "0xD4C0F0")]
		private static GraphNode[] GetOutgoingNodes(GraphNode node, GraphPin a, GraphPin b)
		{
			return null;
		}

		[Token(Token = "0x60021BF")]
		[Address(RVA = "0xD4BB3C", Offset = "0xD4BB3C", VA = "0xD4BB3C")]
		private static MarkerEmitterNode[] GetEmitters(MarkerNode markerNode, GraphPin a, GraphPin b)
		{
			return null;
		}

		[Token(Token = "0x60021C0")]
		[Address(RVA = "0xD4C404", Offset = "0xD4C404", VA = "0xD4C404")]
		public GraphSchema()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20004A5")]
	public class GameObjectArrayNode : VisualNode
	{
		[Token(Token = "0x4001B14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public GameObject[] Templates;

		[Token(Token = "0x60021C1")]
		[Address(RVA = "0xD48834", Offset = "0xD48834", VA = "0xD48834", Slot = "5")]
		public override void Initialize(string id, Graph graph)
		{
		}

		[Token(Token = "0x60021C2")]
		[Address(RVA = "0xD48B1C", Offset = "0xD48B1C", VA = "0xD48B1C", Slot = "6")]
		public override void CopyFrom(GraphNode node)
		{
		}

		[Token(Token = "0x60021C3")]
		[Address(RVA = "0xD48D38", Offset = "0xD48D38", VA = "0xD48D38")]
		public GameObjectArrayNode()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20004A6")]
	public class GameObjectNode : VisualNode
	{
		[Token(Token = "0x4001B15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public GameObject Template;

		[Token(Token = "0x60021C4")]
		[Address(RVA = "0xD48D50", Offset = "0xD48D50", VA = "0xD48D50", Slot = "5")]
		public override void Initialize(string id, Graph graph)
		{
		}

		[Token(Token = "0x60021C5")]
		[Address(RVA = "0xD48DF0", Offset = "0xD48DF0", VA = "0xD48DF0", Slot = "6")]
		public override void CopyFrom(GraphNode node)
		{
		}

		[Token(Token = "0x60021C6")]
		[Address(RVA = "0xD48ECC", Offset = "0xD48ECC", VA = "0xD48ECC")]
		public GameObjectNode()
		{
		}
	}
	[Token(Token = "0x20004A7")]
	public class MarkerEmitterNode : PlaceableNode
	{
		[Token(Token = "0x4001B16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private MarkerNode marker;

		[Token(Token = "0x170003FE")]
		public MarkerNode Marker
		{
			[Token(Token = "0x60021C7")]
			[Address(RVA = "0xD4C9A0", Offset = "0xD4C9A0", VA = "0xD4C9A0")]
			get
			{
				return null;
			}
			[Token(Token = "0x60021C8")]
			[Address(RVA = "0xD4C9A8", Offset = "0xD4C9A8", VA = "0xD4C9A8")]
			set
			{
			}
		}

		[Token(Token = "0x60021C9")]
		[Address(RVA = "0xD4C9B0", Offset = "0xD4C9B0", VA = "0xD4C9B0", Slot = "5")]
		public override void Initialize(string id, Graph graph)
		{
		}

		[Token(Token = "0x60021CA")]
		[Address(RVA = "0xD4CB58", Offset = "0xD4CB58", VA = "0xD4CB58")]
		public MarkerEmitterNode()
		{
		}
	}
	[Token(Token = "0x20004A8")]
	public class MarkerNode : GraphNode
	{
		[Token(Token = "0x60021CB")]
		[Address(RVA = "0xD4CC00", Offset = "0xD4CC00", VA = "0xD4CC00", Slot = "5")]
		public override void Initialize(string id, Graph graph)
		{
		}

		[Token(Token = "0x60021CC")]
		[Address(RVA = "0xD4CDAC", Offset = "0xD4CDAC", VA = "0xD4CDAC")]
		public MarkerNode()
		{
		}
	}
	[Token(Token = "0x20004A9")]
	public class PlaceableNode : GraphNode
	{
		[Token(Token = "0x4001B17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public Matrix4x4 offset;

		[Token(Token = "0x4001B18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public bool consumeOnAttach;

		[Token(Token = "0x4001B19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public float attachmentProbability;

		[Token(Token = "0x60021CD")]
		[Address(RVA = "0xD4D484", Offset = "0xD4D484", VA = "0xD4D484", Slot = "6")]
		public override void CopyFrom(GraphNode node)
		{
		}

		[Token(Token = "0x60021CE")]
		[Address(RVA = "0xD4CB5C", Offset = "0xD4CB5C", VA = "0xD4CB5C")]
		public PlaceableNode()
		{
		}
	}
	[Token(Token = "0x20004AA")]
	public enum DungeonSpriteCollisionType
	{
		[Token(Token = "0x4001B1B")]
		None,
		[Token(Token = "0x4001B1C")]
		Box,
		[Token(Token = "0x4001B1D")]
		Circle,
		[Token(Token = "0x4001B1E")]
		Polygon
	}
	[Serializable]
	[Token(Token = "0x20004AB")]
	public class SpriteNode : VisualNode
	{
		[Token(Token = "0x4001B1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public Sprite sprite;

		[Token(Token = "0x4001B20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public Color color;

		[Token(Token = "0x4001B21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public Material materialOverride;

		[Token(Token = "0x4001B22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public string sortingLayerName;

		[Token(Token = "0x4001B23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public int orderInLayer;

		[Token(Token = "0x4001B24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		public DungeonSpriteCollisionType collisionType;

		[Token(Token = "0x4001B25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public PhysicsMaterial2D physicsMaterial;

		[Token(Token = "0x4001B26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public UnityEngine.Vector2 physicsOffset;

		[Token(Token = "0x4001B27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public UnityEngine.Vector2 physicsSize;

		[Token(Token = "0x4001B28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		public float physicsRadius;

		[Token(Token = "0x60021CF")]
		[Address(RVA = "0xD4DE90", Offset = "0xD4DE90", VA = "0xD4DE90", Slot = "5")]
		public override void Initialize(string id, Graph graph)
		{
		}

		[Token(Token = "0x60021D0")]
		[Address(RVA = "0xD4DF30", Offset = "0xD4DF30", VA = "0xD4DF30", Slot = "6")]
		public override void CopyFrom(GraphNode node)
		{
		}

		[Token(Token = "0x60021D1")]
		[Address(RVA = "0xD4E02C", Offset = "0xD4E02C", VA = "0xD4E02C")]
		public SpriteNode()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20004AC")]
	public class VisualNode : PlaceableNode
	{
		[Token(Token = "0x4001B29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		public bool IsStatic;

		[Token(Token = "0x4001B2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA5")]
		public bool affectsNavigation;

		[Token(Token = "0x4001B2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA6")]
		public bool selectionRuleEnabled;

		[Token(Token = "0x4001B2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public string selectionRuleClassName;

		[Token(Token = "0x4001B2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public bool transformRuleEnabled;

		[Token(Token = "0x4001B2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public string transformRuleClassName;

		[Token(Token = "0x4001B2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public bool useSpatialConstraint;

		[Token(Token = "0x4001B30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		public SpatialConstraintAsset spatialConstraint;

		[Token(Token = "0x60021D2")]
		[Address(RVA = "0xD488D4", Offset = "0xD488D4", VA = "0xD488D4", Slot = "5")]
		public override void Initialize(string id, Graph graph)
		{
		}

		[Token(Token = "0x60021D3")]
		[Address(RVA = "0xD48C34", Offset = "0xD48C34", VA = "0xD48C34", Slot = "6")]
		public override void CopyFrom(GraphNode node)
		{
		}

		[Token(Token = "0x60021D4")]
		[Address(RVA = "0xD48D44", Offset = "0xD48D44", VA = "0xD48D44")]
		public VisualNode()
		{
		}
	}
}
namespace DungeonArchitect.Graphs.SpatialConstraints
{
	[Token(Token = "0x20004AD")]
	public class SCBaseDomainNode : GraphNode
	{
		[Token(Token = "0x4001B31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly float TileSize;

		[Token(Token = "0x4001B32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[SerializeField]
		protected SCRuleNodeDomain ruleDomain;

		[Token(Token = "0x4001B33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		protected bool isSnapped;

		[Token(Token = "0x170003FF")]
		public SCRuleNodeDomain RuleDomain
		{
			[Token(Token = "0x60021D5")]
			[Address(RVA = "0xD4D588", Offset = "0xD4D588", VA = "0xD4D588")]
			get
			{
				return default(SCRuleNodeDomain);
			}
		}

		[Token(Token = "0x17000400")]
		public bool IsSnapped
		{
			[Token(Token = "0x60021D6")]
			[Address(RVA = "0xD4D590", Offset = "0xD4D590", VA = "0xD4D590")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60021D7")]
			[Address(RVA = "0xD4D598", Offset = "0xD4D598", VA = "0xD4D598")]
			set
			{
			}
		}

		[Token(Token = "0x60021D8")]
		[Address(RVA = "0xD4D5A4", Offset = "0xD4D5A4", VA = "0xD4D5A4", Slot = "7")]
		public virtual Color GetColor()
		{
			return default(Color);
		}

		[Token(Token = "0x60021D9")]
		[Address(RVA = "0xD4D5AC", Offset = "0xD4D5AC", VA = "0xD4D5AC", Slot = "5")]
		public override void Initialize(string id, Graph graph)
		{
		}

		[Token(Token = "0x60021DA")]
		[Address(RVA = "0xD4D668", Offset = "0xD4D668", VA = "0xD4D668")]
		public static UnityEngine.Vector2 GetSnapPosition(UnityEngine.Vector2 position)
		{
			return default(UnityEngine.Vector2);
		}

		[Token(Token = "0x60021DB")]
		[Address(RVA = "0xD4D73C", Offset = "0xD4D73C", VA = "0xD4D73C")]
		public bool ContainsOtherNodeAt(UnityEngine.Vector2 snappedPosition)
		{
			return default(bool);
		}

		[Token(Token = "0x60021DC")]
		[Address(RVA = "0xD4D908", Offset = "0xD4D908", VA = "0xD4D908")]
		public IntVector2 GetHalfGridLogicalCoords()
		{
			return default(IntVector2);
		}

		[Token(Token = "0x60021DD")]
		[Address(RVA = "0xD4DA18", Offset = "0xD4DA18", VA = "0xD4DA18")]
		private void UpdateRuleDomain()
		{
		}

		[Token(Token = "0x60021DE")]
		[Address(RVA = "0xD4DA80", Offset = "0xD4DA80", VA = "0xD4DA80", Slot = "8")]
		public virtual bool SnapNode()
		{
			return default(bool);
		}

		[Token(Token = "0x60021DF")]
		[Address(RVA = "0xD4DB50", Offset = "0xD4DB50", VA = "0xD4DB50")]
		public SCBaseDomainNode()
		{
		}
	}
	[Token(Token = "0x20004AE")]
	public class SCReferenceNode : SCRuleNode
	{
		[Token(Token = "0x60021E1")]
		[Address(RVA = "0xD4DBB0", Offset = "0xD4DBB0", VA = "0xD4DBB0", Slot = "5")]
		public override void Initialize(string id, Graph graph)
		{
		}

		[Token(Token = "0x60021E2")]
		[Address(RVA = "0xD4DBD8", Offset = "0xD4DBD8", VA = "0xD4DBD8", Slot = "7")]
		public override Color GetColor()
		{
			return default(Color);
		}

		[Token(Token = "0x60021E3")]
		[Address(RVA = "0xD4DC18", Offset = "0xD4DC18", VA = "0xD4DC18")]
		public SCReferenceNode()
		{
		}
	}
	[Token(Token = "0x20004AF")]
	public enum SCRuleNodeDomain
	{
		[Token(Token = "0x4001B35")]
		Tile,
		[Token(Token = "0x4001B36")]
		Edge,
		[Token(Token = "0x4001B37")]
		Corner,
		[Token(Token = "0x4001B38")]
		Invalid
	}
	[Token(Token = "0x20004B0")]
	public enum SCRuleNodeEvaluationMode
	{
		[Token(Token = "0x4001B3A")]
		AllRulesMustPass,
		[Token(Token = "0x4001B3B")]
		AtleastOneRuleShouldPass
	}
	[Token(Token = "0x20004B1")]
	public class SCRuleNode : SCBaseDomainNode
	{
		[Token(Token = "0x4001B3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		public ConstraintRule[] constraints;

		[Token(Token = "0x4001B3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		public SCRuleNodeEvaluationMode constraintEvaluationMode;

		[Token(Token = "0x4001B3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[SerializeField]
		public float exclusionRuleSearchRadius;

		[Token(Token = "0x4001B3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		public string[] exclusionRuleMarkersToRemove;

		[Token(Token = "0x60021E4")]
		[Address(RVA = "0xD4DBD4", Offset = "0xD4DBD4", VA = "0xD4DBD4", Slot = "5")]
		public override void Initialize(string id, Graph graph)
		{
		}

		[Token(Token = "0x60021E5")]
		[Address(RVA = "0xD4DCC4", Offset = "0xD4DCC4", VA = "0xD4DCC4", Slot = "7")]
		public override Color GetColor()
		{
			return default(Color);
		}

		[Token(Token = "0x60021E6")]
		[Address(RVA = "0xD4DCCC", Offset = "0xD4DCCC", VA = "0xD4DCCC", Slot = "6")]
		public override void CopyFrom(GraphNode node)
		{
		}

		[Token(Token = "0x60021E7")]
		[Address(RVA = "0xD4DC1C", Offset = "0xD4DC1C", VA = "0xD4DC1C")]
		public SCRuleNode()
		{
		}
	}
}
namespace DungeonArchitect.Graphs.Layouts
{
	[Token(Token = "0x20004B2")]
	public interface IGraphLayout<T>
	{
		[Token(Token = "0x60021E8")]
		void Layout(T[] nodes, IGraphLayoutNodeActions<T> nodeActions);
	}
	[Token(Token = "0x20004B3")]
	public interface IGraphLayoutNodeActions<T>
	{
		[Token(Token = "0x60021E9")]
		void SetNodePosition(T node, UnityEngine.Vector2 position);

		[Token(Token = "0x60021EA")]
		UnityEngine.Vector2 GetNodePosition(T node);

		[Token(Token = "0x60021EB")]
		T[] GetOutgoingNodes(T node);
	}
	[Token(Token = "0x20004B4")]
	public enum GraphLayoutType
	{
		[Token(Token = "0x4001B41")]
		Layered,
		[Token(Token = "0x4001B42")]
		Spring
	}
	[Token(Token = "0x20004B5")]
	public class GraphLayoutNode<T>
	{
		[Token(Token = "0x4001B43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C0A60", Offset = "0x8C0A60")]
		private T <Payload>k__BackingField;

		[Token(Token = "0x4001B44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C0A70", Offset = "0x8C0A70")]
		private UnityEngine.Vector2 <Position>k__BackingField;

		[Token(Token = "0x4001B45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C0A80", Offset = "0x8C0A80")]
		private List<GraphLayoutNode<T>> <Outgoing>k__BackingField;

		[Token(Token = "0x4001B46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C0A90", Offset = "0x8C0A90")]
		private List<GraphLayoutNode<T>> <Incoming>k__BackingField;

		[Token(Token = "0x17000401")]
		public T Payload
		{
			[Token(Token = "0x60021EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CB674", Offset = "0x8CB674")]
			get
			{
				return (T)null;
			}
			[Token(Token = "0x60021ED")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CB684", Offset = "0x8CB684")]
			set
			{
			}
		}

		[Token(Token = "0x17000402")]
		public UnityEngine.Vector2 Position
		{
			[Token(Token = "0x60021EE")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CB694", Offset = "0x8CB694")]
			get
			{
				return default(UnityEngine.Vector2);
			}
			[Token(Token = "0x60021EF")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CB6A4", Offset = "0x8CB6A4")]
			set
			{
			}
		}

		[Token(Token = "0x17000403")]
		public List<GraphLayoutNode<T>> Outgoing
		{
			[Token(Token = "0x60021F0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CB6B4", Offset = "0x8CB6B4")]
			get
			{
				return null;
			}
			[Token(Token = "0x60021F1")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CB6C4", Offset = "0x8CB6C4")]
			private set
			{
			}
		}

		[Token(Token = "0x17000404")]
		public List<GraphLayoutNode<T>> Incoming
		{
			[Token(Token = "0x60021F2")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CB6D4", Offset = "0x8CB6D4")]
			get
			{
				return null;
			}
			[Token(Token = "0x60021F3")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CB6E4", Offset = "0x8CB6E4")]
			private set
			{
			}
		}

		[Token(Token = "0x60021F4")]
		public GraphLayoutNode(T payload, UnityEngine.Vector2 position)
		{
		}
	}
	[Token(Token = "0x20004B6")]
	public abstract class GraphLayoutBase<T> : IGraphLayout<T>
	{
		[Token(Token = "0x60021F5")]
		public void Layout(T[] nodes, IGraphLayoutNodeActions<T> nodeActions)
		{
		}

		[Token(Token = "0x60021F6")]
		protected abstract void LayoutImpl(GraphLayoutNode<T>[] nodes);

		[Token(Token = "0x60021F7")]
		protected GraphLayoutBase()
		{
		}
	}
	[Token(Token = "0x20004B7")]
	public class DefaultGraphLayoutNodeActions : IGraphLayoutNodeActions<GraphNode>
	{
		[Token(Token = "0x4001B47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Dictionary<GraphNode, List<GraphNode>> outgoingNodes;

		[Token(Token = "0x60021F8")]
		[Address(RVA = "0xD4C420", Offset = "0xD4C420", VA = "0xD4C420")]
		public DefaultGraphLayoutNodeActions(Graph graph)
		{
		}

		[Token(Token = "0x60021F9")]
		[Address(RVA = "0xD4C7AC", Offset = "0xD4C7AC", VA = "0xD4C7AC", Slot = "4")]
		public void SetNodePosition(GraphNode node, UnityEngine.Vector2 position)
		{
		}

		[Token(Token = "0x60021FA")]
		[Address(RVA = "0xD4C7C8", Offset = "0xD4C7C8", VA = "0xD4C7C8", Slot = "5")]
		public UnityEngine.Vector2 GetNodePosition(GraphNode node)
		{
			return default(UnityEngine.Vector2);
		}

		[Token(Token = "0x60021FB")]
		[Address(RVA = "0xD4C7E4", Offset = "0xD4C7E4", VA = "0xD4C7E4", Slot = "6")]
		public GraphNode[] GetOutgoingNodes(GraphNode node)
		{
			return null;
		}
	}
	[Token(Token = "0x20004B8")]
	public class RuntimeGraphLayoutNodeActions : IGraphLayoutNodeActions<RuntimeGraphNode<GrammarRuntimeGraphNodeData>>
	{
		[Token(Token = "0x60021FC")]
		[Address(RVA = "0xD4C8EC", Offset = "0xD4C8EC", VA = "0xD4C8EC", Slot = "4")]
		public void SetNodePosition(RuntimeGraphNode<GrammarRuntimeGraphNodeData> node, UnityEngine.Vector2 position)
		{
		}

		[Token(Token = "0x60021FD")]
		[Address(RVA = "0xD4C904", Offset = "0xD4C904", VA = "0xD4C904", Slot = "5")]
		public UnityEngine.Vector2 GetNodePosition(RuntimeGraphNode<GrammarRuntimeGraphNodeData> node)
		{
			return default(UnityEngine.Vector2);
		}

		[Token(Token = "0x60021FE")]
		[Address(RVA = "0xD4C91C", Offset = "0xD4C91C", VA = "0xD4C91C", Slot = "6")]
		public RuntimeGraphNode<GrammarRuntimeGraphNodeData>[] GetOutgoingNodes(RuntimeGraphNode<GrammarRuntimeGraphNodeData> node)
		{
			return null;
		}

		[Token(Token = "0x60021FF")]
		[Address(RVA = "0xD4C978", Offset = "0xD4C978", VA = "0xD4C978")]
		public RuntimeGraphLayoutNodeActions()
		{
		}
	}
}
namespace DungeonArchitect.Graphs.Layouts.Spring
{
	[Serializable]
	[Token(Token = "0x20004B9")]
	public class GraphLayoutSpringConfig
	{
		[Token(Token = "0x4001B48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		public float interNodeDistance;

		[Token(Token = "0x4001B49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		public float interNodeTension;

		[Token(Token = "0x4001B4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public float springDistance;

		[Token(Token = "0x4001B4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		public float springTension;

		[Token(Token = "0x4001B4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		public int iterations;

		[Token(Token = "0x4001B4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		public float timeStep;

		[Token(Token = "0x6002200")]
		[Address(RVA = "0xD4C980", Offset = "0xD4C980", VA = "0xD4C980")]
		public GraphLayoutSpringConfig()
		{
		}
	}
	[Token(Token = "0x20004BA")]
	internal class SpatialGrid<T>
	{
		[Token(Token = "0x4001B4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Dictionary<IntVector2, List<GraphLayoutNode<T>>> grid;

		[Token(Token = "0x4001B4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float cellSize;

		[Token(Token = "0x6002201")]
		public SpatialGrid(float cellSize)
		{
		}

		[Token(Token = "0x6002202")]
		public void Refresh(GraphLayoutNode<T>[] nodes)
		{
		}

		[Token(Token = "0x6002203")]
		private IntVector2 GetKey(GraphLayoutNode<T> node)
		{
			return default(IntVector2);
		}

		[Token(Token = "0x6002204")]
		public GraphLayoutNode<T>[] GetNearbyNodes(GraphLayoutNode<T> node)
		{
			return null;
		}
	}
	[Token(Token = "0x20004BB")]
	public class GraphLayoutSpring<T> : GraphLayoutBase<T>
	{
		[Token(Token = "0x4001B50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private GraphLayoutSpringConfig config;

		[Token(Token = "0x6002205")]
		public GraphLayoutSpring(GraphLayoutSpringConfig config)
		{
		}

		[Token(Token = "0x6002206")]
		protected override void LayoutImpl(GraphLayoutNode<T>[] nodes)
		{
		}
	}
}
namespace DungeonArchitect.Graphs.Layouts.Layered
{
	[Token(Token = "0x20004BC")]
	internal class LayoutTreeNode<T>
	{
		[Token(Token = "0x4001B51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public GraphLayoutNode<T> GraphNode;

		[Token(Token = "0x4001B52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float X;

		[Token(Token = "0x4001B53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int Depth;

		[Token(Token = "0x4001B54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float Mod;

		[Token(Token = "0x4001B55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public LayoutTreeNode<T> Parent;

		[Token(Token = "0x4001B56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public List<LayoutTreeNode<T>> Children;

		[Token(Token = "0x6002207")]
		public LayoutTreeNode()
		{
		}
	}
	[Token(Token = "0x20004BD")]
	internal class LayoutTree<T>
	{
		[Token(Token = "0x4001B57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public LayoutTreeNode<T> root;

		[Token(Token = "0x4001B58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public List<LayoutTreeNode<T>> nodes;

		[Token(Token = "0x6002208")]
		public LayoutTree()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20004BE")]
	public class GraphLayoutLayeredConfig
	{
		[Token(Token = "0x4001B59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		public UnityEngine.Vector2 separation;

		[Token(Token = "0x6002209")]
		[Address(RVA = "0xD4C89C", Offset = "0xD4C89C", VA = "0xD4C89C")]
		public GraphLayoutLayeredConfig()
		{
		}
	}
	[Token(Token = "0x20004BF")]
	public class GraphLayoutLayered<T> : GraphLayoutBase<T>
	{
		[Token(Token = "0x4001B5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private GraphLayoutLayeredConfig config;

		[Token(Token = "0x600220A")]
		public GraphLayoutLayered(GraphLayoutLayeredConfig config)
		{
		}

		[Token(Token = "0x600220B")]
		private LayoutTreeNode<T> BuildTreeNode(LayoutTree<T> tree, LayoutTreeNode<T> parent, GraphLayoutNode<T> graphNode, HashSet<GraphLayoutNode<T>> visited)
		{
			return null;
		}

		[Token(Token = "0x600220C")]
		private LayoutTree<T> BuildTree(GraphLayoutNode<T>[] nodes)
		{
			return null;
		}

		[Token(Token = "0x600220D")]
		private void TagNodeLevels(LayoutTreeNode<T> node, int depth)
		{
		}

		[Token(Token = "0x600220E")]
		private void CalculateInitialX(LayoutTreeNode<T> Node, LayoutTreeNode<T> LeftSibling)
		{
		}

		[Token(Token = "0x600220F")]
		private void ResolveConflicts(LayoutTreeNode<T> Node)
		{
		}

		[Token(Token = "0x6002210")]
		private void GetLeftContour(LayoutTreeNode<T> Node, float ModSum, Dictionary<int, float> ContourMap)
		{
		}

		[Token(Token = "0x6002211")]
		private void GetRightContour(LayoutTreeNode<T> Node, float ModSum, Dictionary<int, float> ContourMap)
		{
		}

		[Token(Token = "0x6002212")]
		private LayoutTreeNode<T> GetLeftMostSibling(LayoutTreeNode<T> Node)
		{
			return null;
		}

		[Token(Token = "0x6002213")]
		private LayoutTreeNode<T> GetNextSibling(LayoutTreeNode<T> Node)
		{
			return null;
		}

		[Token(Token = "0x6002214")]
		private void CalculateFinalX(LayoutTreeNode<T> Node, float TotalMod)
		{
		}

		[Token(Token = "0x6002215")]
		protected override void LayoutImpl(GraphLayoutNode<T>[] nodes)
		{
		}
	}
}
namespace DungeonArchitect.Landscape
{
	[Token(Token = "0x20004C0")]
	public enum RasterizerTextureSpace
	{
		[Token(Token = "0x4001B5C")]
		HeightMap,
		[Token(Token = "0x4001B5D")]
		AlphaMap,
		[Token(Token = "0x4001B5E")]
		DetailMap
	}
	[Token(Token = "0x20004C1")]
	public class LandscapeDataRasterizer
	{
		[Token(Token = "0x4001B5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Terrain terrain;

		[Token(Token = "0x4001B60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float[,] heights;

		[Token(Token = "0x4001B61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool[,] lockedCells;

		[Token(Token = "0x4001B62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Rect worldBounds;

		[Token(Token = "0x4001B63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector2Int heightmapFrameStart;

		[Token(Token = "0x4001B64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Vector2Int heightmapFrameSize;

		[Token(Token = "0x6002216")]
		[Address(RVA = "0xD50F04", Offset = "0xD50F04", VA = "0xD50F04")]
		public LandscapeDataRasterizer(Terrain terrain, Rect worldBounds)
		{
		}

		[Token(Token = "0x6002217")]
		[Address(RVA = "0xD5103C", Offset = "0xD5103C", VA = "0xD5103C")]
		public void LoadData()
		{
		}

		[Token(Token = "0x6002218")]
		[Address(RVA = "0xD511A8", Offset = "0xD511A8", VA = "0xD511A8")]
		private float GetElevation(float worldElevation)
		{
			return default(float);
		}

		[Token(Token = "0x6002219")]
		[Address(RVA = "0xD51218", Offset = "0xD51218", VA = "0xD51218")]
		public static float GetHeight(Terrain terrain, float worldX, float worldZ)
		{
			return default(float);
		}

		[Token(Token = "0x600221A")]
		[Address(RVA = "0xD5129C", Offset = "0xD5129C", VA = "0xD5129C")]
		public static void WorldToTerrainDistance(Terrain terrain, float worldDistX, float worldDistZ, out int terrainDistX, out int terrainDistZ)
		{
		}

		[Token(Token = "0x600221B")]
		[Address(RVA = "0xD513B4", Offset = "0xD513B4", VA = "0xD513B4")]
		public static void TerrainToWorldDistance(Terrain terrain, int terrainDistX, int terrainDistZ, out float worldDistX, out float worldDistZ)
		{
		}

		[Token(Token = "0x600221C")]
		[Address(RVA = "0xD50884", Offset = "0xD50884", VA = "0xD50884")]
		public static void WorldToTerrainCoord(Terrain terrain, float x, float y, out int gx, out int gy)
		{
		}

		[Token(Token = "0x600221D")]
		[Address(RVA = "0xD5088C", Offset = "0xD5088C", VA = "0xD5088C")]
		public static void WorldToTerrainCoord(Terrain terrain, float x, float y, out int gx, out int gy, RasterizerTextureSpace textureSpace)
		{
		}

		[Token(Token = "0x600221E")]
		[Address(RVA = "0xD514E0", Offset = "0xD514E0", VA = "0xD514E0")]
		public static void WorldToTerrainTextureCoord(Terrain terrain, float x, float y, out int tx, out int ty)
		{
		}

		[Token(Token = "0x600221F")]
		[Address(RVA = "0xD5164C", Offset = "0xD5164C", VA = "0xD5164C")]
		public static void WorldToTerrainDetailCoord(Terrain terrain, float x, float y, out int tx, out int ty)
		{
		}

		[Token(Token = "0x6002220")]
		[Address(RVA = "0xD517B8", Offset = "0xD517B8", VA = "0xD517B8")]
		public void DrawCell(float x, float y, float w, float h, float elevation)
		{
		}

		[Token(Token = "0x6002221")]
		[Address(RVA = "0xD517C0", Offset = "0xD517C0", VA = "0xD517C0")]
		public void DrawCell(float x, float y, float w, float h, float elevation, float flatten)
		{
		}

		[Token(Token = "0x6002222")]
		[Address(RVA = "0xD51AE4", Offset = "0xD51AE4", VA = "0xD51AE4")]
		public void SmoothCell(float x, float y, float w, float h, float elevation, int smoothingDistance, AnimationCurve smoothingCurve)
		{
		}

		[Token(Token = "0x6002223")]
		[Address(RVA = "0xD51AEC", Offset = "0xD51AEC", VA = "0xD51AEC")]
		public void SmoothCell(float x, float y, float w, float h, float elevation, int smoothingDistance, AnimationCurve smoothingCurve, float flatten)
		{
		}

		[Token(Token = "0x6002224")]
		[Address(RVA = "0xD52074", Offset = "0xD52074", VA = "0xD52074")]
		private float Remap(float value, float oldMin, float oldMax, float newMin, float newMax, bool clamp)
		{
			return default(float);
		}

		[Token(Token = "0x6002225")]
		[Address(RVA = "0xD5212C", Offset = "0xD5212C", VA = "0xD5212C")]
		public void SaveData()
		{
		}
	}
	[Token(Token = "0x20004C2")]
	public enum LandscapeTextureType
	{
		[Token(Token = "0x4001B66")]
		Room,
		[Token(Token = "0x4001B67")]
		Corridor,
		[Token(Token = "0x4001B68")]
		Cliff
	}
	[Serializable]
	[Token(Token = "0x20004C3")]
	public class LandscapeTexture
	{
		[Token(Token = "0x4001B69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public LandscapeTextureType textureType;

		[Token(Token = "0x4001B6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TerrainLayer terrainLayer;

		[Token(Token = "0x6002226")]
		[Address(RVA = "0xD521A0", Offset = "0xD521A0", VA = "0xD521A0")]
		public LandscapeTexture()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20004C4")]
	public class DLCacheBounds
	{
		[Token(Token = "0x4001B6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[HideInInspector]
		[SerializeField]
		public int x1;

		[Token(Token = "0x4001B6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[HideInInspector]
		[SerializeField]
		public int x2;

		[Token(Token = "0x4001B6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		[SerializeField]
		public int y1;

		[Token(Token = "0x4001B6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[HideInInspector]
		[SerializeField]
		public int y2;

		[Token(Token = "0x6002227")]
		[Address(RVA = "0xD4FE18", Offset = "0xD4FE18", VA = "0xD4FE18")]
		public DLCacheBounds()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20004C5")]
	public class DungeonLandscapeRestorationCache : ScriptableObject
	{
		[Token(Token = "0x4001B6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		[SerializeField]
		private float[] dataHeights;

		[Token(Token = "0x4001B70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		[SerializeField]
		private DLCacheBounds boundsHeight;

		[Token(Token = "0x4001B71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		[SerializeField]
		private float[] dataAlphamap;

		[Token(Token = "0x4001B72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		[SerializeField]
		private int numAlphaMaps;

		[Token(Token = "0x4001B73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		[SerializeField]
		private DLCacheBounds boundsAlpha;

		[Token(Token = "0x4001B74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		[SerializeField]
		private int[] dataDetails;

		[Token(Token = "0x4001B75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[HideInInspector]
		[SerializeField]
		private int numDetailMaps;

		[Token(Token = "0x4001B76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[HideInInspector]
		[SerializeField]
		private DLCacheBounds boundsDetails;

		[Token(Token = "0x6002228")]
		[Address(RVA = "0xD4FE20", Offset = "0xD4FE20", VA = "0xD4FE20")]
		private static void SerializeArray(float[,] array, out float[] result)
		{
		}

		[Token(Token = "0x6002229")]
		[Address(RVA = "0xD4FF5C", Offset = "0xD4FF5C", VA = "0xD4FF5C")]
		private static void SerializeArray(float[,,] array, int numAlphaMaps, out float[] result)
		{
		}

		[Token(Token = "0x600222A")]
		[Address(RVA = "0xD500DC", Offset = "0xD500DC", VA = "0xD500DC")]
		private static void DeserializeArray(float[] array, int sx, int sy, out float[,] result)
		{
		}

		[Token(Token = "0x600222B")]
		[Address(RVA = "0xD50248", Offset = "0xD50248", VA = "0xD50248")]
		private static void DeserializeArray(float[] array, int sx, int sy, int sm, int desiredSM, out float[,,] result)
		{
		}

		[Token(Token = "0x600222C")]
		[Address(RVA = "0xD50458", Offset = "0xD50458", VA = "0xD50458")]
		public void SaveLandscapeData(Terrain terrain, Rect worldBounds)
		{
		}

		[Token(Token = "0x600222D")]
		[Address(RVA = "0xD50A68", Offset = "0xD50A68", VA = "0xD50A68")]
		public void RestoreLandscapeData(Terrain terrain, Rect worldBounds)
		{
		}

		[Token(Token = "0x600222E")]
		[Address(RVA = "0xD50E64", Offset = "0xD50E64", VA = "0xD50E64")]
		public DungeonLandscapeRestorationCache()
		{
		}
	}
	[Token(Token = "0x20004C6")]
	public class LandscapeTransformerBase : DungeonEventListener
	{
		[Token(Token = "0x4001B77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Terrain terrain;

		[Token(Token = "0x4001B78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		[SerializeField]
		private bool cachedTerrainDataRestored;

		[Token(Token = "0x4001B79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[HideInInspector]
		[SerializeField]
		private Rect worldBounds;

		[Token(Token = "0x4001B7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public DungeonLandscapeRestorationCache landscapeRestorationCache;

		[Token(Token = "0x600222F")]
		[Address(RVA = "0xD521A8", Offset = "0xD521A8", VA = "0xD521A8", Slot = "4")]
		public override void OnPostDungeonLayoutBuild(Dungeon dungeon, DungeonModel model)
		{
		}

		[Token(Token = "0x6002230")]
		[Address(RVA = "0xD523F8", Offset = "0xD523F8", VA = "0xD523F8", Slot = "9")]
		public override void OnDungeonDestroyed(Dungeon dungeon)
		{
		}

		[Token(Token = "0x6002231")]
		[Address(RVA = "0xD52438", Offset = "0xD52438", VA = "0xD52438", Slot = "10")]
		protected virtual void BuildTerrain(DungeonModel model)
		{
		}

		[Token(Token = "0x6002232")]
		[Address(RVA = "0xD5243C", Offset = "0xD5243C", VA = "0xD5243C", Slot = "11")]
		protected virtual Rect GetDungeonBounds(DungeonModel model)
		{
			return default(Rect);
		}

		[Token(Token = "0x6002233")]
		[Address(RVA = "0xD5233C", Offset = "0xD5233C", VA = "0xD5233C")]
		private void SaveLandscapeData(DungeonModel model)
		{
		}

		[Token(Token = "0x6002234")]
		[Address(RVA = "0xD522A4", Offset = "0xD522A4", VA = "0xD522A4")]
		private void RestoreLandscapeData(DungeonModel model)
		{
		}

		[Token(Token = "0x6002235")]
		[Address(RVA = "0xD52444", Offset = "0xD52444", VA = "0xD52444")]
		public LandscapeTransformerBase()
		{
		}
	}
}
namespace DungeonArchitect.Grammar
{
	[Serializable]
	[Token(Token = "0x20004C7")]
	public class DungeonFlowAsset : ScriptableObject
	{
		[Token(Token = "0x4001B7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		[SerializeField]
		public GrammarExecGraph executionGraph;

		[Token(Token = "0x4001B7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		[SerializeField]
		public GrammarProductionRule[] productionRules;

		[Token(Token = "0x4001B7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		[SerializeField]
		public GrammarNodeType[] nodeTypes;

		[Token(Token = "0x4001B7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		[SerializeField]
		public GrammarNodeType wildcardNodeType;

		[Token(Token = "0x4001B7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		[SerializeField]
		public GrammarGraph resultGraph;

		[Token(Token = "0x6002236")]
		[Address(RVA = "0xC90890", Offset = "0xC90890", VA = "0xC90890")]
		public DungeonFlowAsset()
		{
		}
	}
	[Token(Token = "0x20004C8")]
	public class GrammarNodeType : ScriptableObject
	{
		[Token(Token = "0x4001B80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public string nodeName;

		[Token(Token = "0x4001B81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		public string description;

		[Token(Token = "0x4001B82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		public Color nodeColor;

		[Token(Token = "0x4001B83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		[HideInInspector]
		public bool wildcard;

		[Token(Token = "0x6002237")]
		[Address(RVA = "0xC91944", Offset = "0xC91944", VA = "0xC91944")]
		public GrammarNodeType()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20004C9")]
	public class GrammarProductionRule : ScriptableObject
	{
		[Token(Token = "0x4001B84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public string ruleName;

		[Token(Token = "0x4001B85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		[SerializeField]
		public GrammarGraph LHSGraph;

		[Token(Token = "0x4001B86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		[SerializeField]
		public List<WeightedGrammarGraph> RHSGraphs;

		[Token(Token = "0x6002238")]
		[Address(RVA = "0xC919A0", Offset = "0xC919A0", VA = "0xC919A0")]
		public GrammarProductionRule()
		{
		}
	}
	[Token(Token = "0x20004CA")]
	public class GrammarExecGraph : Graph
	{
		[Token(Token = "0x4001B87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		public GrammarExecEntryNode entryNode;

		[Token(Token = "0x6002239")]
		[Address(RVA = "0xC91128", Offset = "0xC91128", VA = "0xC91128", Slot = "4")]
		public override void OnEnable()
		{
		}

		[Token(Token = "0x600223A")]
		[Address(RVA = "0xC91158", Offset = "0xC91158", VA = "0xC91158")]
		public GrammarExecGraph()
		{
		}
	}
	[Token(Token = "0x20004CB")]
	public class GrammarExecEntryNode : GrammarExecNodeBase
	{
		[Token(Token = "0x600223B")]
		[Address(RVA = "0xC90EE8", Offset = "0xC90EE8", VA = "0xC90EE8", Slot = "5")]
		public override void Initialize(string id, Graph graph)
		{
		}

		[Token(Token = "0x600223C")]
		[Address(RVA = "0xC91118", Offset = "0xC91118", VA = "0xC91118")]
		public GrammarExecEntryNode()
		{
		}
	}
	[Token(Token = "0x20004CC")]
	public class GrammarExecNodeBase : GraphNode
	{
		[Token(Token = "0x600223D")]
		[Address(RVA = "0xC90F5C", Offset = "0xC90F5C", VA = "0xC90F5C", Slot = "5")]
		public override void Initialize(string id, Graph graph)
		{
		}

		[Token(Token = "0x600223E")]
		[Address(RVA = "0xC91120", Offset = "0xC91120", VA = "0xC91120")]
		public GrammarExecNodeBase()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20004CD")]
	public enum GrammarExecRuleRunMode
	{
		[Token(Token = "0x4001B89")]
		RunOnce,
		[Token(Token = "0x4001B8A")]
		RunWithProbability,
		[Token(Token = "0x4001B8B")]
		Iterate,
		[Token(Token = "0x4001B8C")]
		IterateRange
	}
	[Token(Token = "0x20004CE")]
	public class GrammarExecRuleNode : GrammarExecNodeBase
	{
		[Token(Token = "0x4001B8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		[HideInInspector]
		public GrammarProductionRule rule;

		[Token(Token = "0x4001B8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		public GrammarExecRuleRunMode runMode;

		[Token(Token = "0x4001B8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public float runProbability;

		[Token(Token = "0x4001B90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public int iterateCount;

		[Token(Token = "0x4001B91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public int minIterateCount;

		[Token(Token = "0x4001B92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public int maxIterateCount;

		[Token(Token = "0x600223F")]
		[Address(RVA = "0xC91160", Offset = "0xC91160", VA = "0xC91160")]
		public GrammarExecRuleNode()
		{
		}
	}
	[Token(Token = "0x20004CF")]
	public class GrammarGraph : Graph
	{
		[Token(Token = "0x4001B93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool useProceduralScript;

		[Token(Token = "0x4001B94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string generatorScriptClass;

		[Token(Token = "0x4001B95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public KeyValueData editorData;

		[Token(Token = "0x6002240")]
		[Address(RVA = "0xC91180", Offset = "0xC91180", VA = "0xC91180", Slot = "4")]
		public override void OnEnable()
		{
		}

		[Token(Token = "0x6002241")]
		[Address(RVA = "0xC911B0", Offset = "0xC911B0", VA = "0xC911B0")]
		public GrammarGraph()
		{
		}
	}
	[Token(Token = "0x20004D0")]
	public interface IGrammarGraphBuildScript
	{
		[Token(Token = "0x6002242")]
		void Generate(IGrammarGraphBuilder grammarBuilder);
	}
	[Token(Token = "0x20004D1")]
	public interface IGrammarGraphBuilder
	{
		[Token(Token = "0x6002243")]
		int CreateNode(string nodeName, int executionIndex);

		[Token(Token = "0x6002244")]
		bool LinkNodes(int nodeAId, int nodeBId);
	}
	[Token(Token = "0x20004D2")]
	public class GrammarGraphBuilder : IGrammarGraphBuilder
	{
		[Token(Token = "0x4001B96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private GrammarNodeType[] nodeTypes;

		[Token(Token = "0x4001B97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private GraphBuilder graphBuilder;

		[Token(Token = "0x4001B98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int nodeIdCounter;

		[Token(Token = "0x4001B99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GrammarGraph grammarGraph;

		[Token(Token = "0x4001B9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Dictionary<int, GraphNode> generatedNodes;

		[Token(Token = "0x6002245")]
		[Address(RVA = "0xC91218", Offset = "0xC91218", VA = "0xC91218")]
		public GrammarGraphBuilder(GrammarGraph grammarGraph, GrammarNodeType[] nodeTypes, GraphBuilder graphBuilder)
		{
		}

		[Token(Token = "0x6002246")]
		[Address(RVA = "0xC912B0", Offset = "0xC912B0", VA = "0xC912B0", Slot = "4")]
		public int CreateNode(string nodeName, int executionIndex)
		{
			return default(int);
		}

		[Token(Token = "0x6002247")]
		[Address(RVA = "0xC91470", Offset = "0xC91470", VA = "0xC91470", Slot = "5")]
		public bool LinkNodes(int nodeAId, int nodeBId)
		{
			return default(bool);
		}

		[Token(Token = "0x6002248")]
		[Address(RVA = "0xC9167C", Offset = "0xC9167C", VA = "0xC9167C")]
		public void ClearGraph()
		{
		}
	}
	[Token(Token = "0x20004D3")]
	public class GrammarNodeBase : GraphNode
	{
		[Token(Token = "0x6002249")]
		[Address(RVA = "0xC91788", Offset = "0xC91788", VA = "0xC91788")]
		public GrammarNodeBase()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20004D4")]
	public class GrammarNodePin : GraphPin
	{
		[Token(Token = "0x4001B9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public UnityEngine.Vector2 Padding;

		[Token(Token = "0x600224A")]
		[Address(RVA = "0xC91790", Offset = "0xC91790", VA = "0xC91790", Slot = "4")]
		public override bool ContainsPoint(UnityEngine.Vector2 worldPoint)
		{
			return default(bool);
		}

		[Token(Token = "0x600224B")]
		[Address(RVA = "0xC918FC", Offset = "0xC918FC", VA = "0xC918FC")]
		public GrammarNodePin()
		{
		}
	}
	[Token(Token = "0x20004D5")]
	public class GrammarRuleNode : GrammarNodeBase
	{
		[Token(Token = "0x600224C")]
		[Address(RVA = "0xC91A10", Offset = "0xC91A10", VA = "0xC91A10")]
		public GrammarRuleNode()
		{
		}
	}
	[Token(Token = "0x20004D6")]
	public class GrammarTaskNode : GrammarNodeBase
	{
		[Token(Token = "0x4001B9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public GrammarNodeType NodeType;

		[Token(Token = "0x4001B9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public int executionIndex;

		[Token(Token = "0x4001B9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public bool DisplayExecutionIndex;

		[Token(Token = "0x600224D")]
		[Address(RVA = "0xC9205C", Offset = "0xC9205C", VA = "0xC9205C", Slot = "5")]
		public override void Initialize(string id, Graph graph)
		{
		}

		[Token(Token = "0x600224E")]
		[Address(RVA = "0xC92218", Offset = "0xC92218", VA = "0xC92218", Slot = "6")]
		public override void CopyFrom(GraphNode otherNode)
		{
		}

		[Token(Token = "0x600224F")]
		[Address(RVA = "0xC922C4", Offset = "0xC922C4", VA = "0xC922C4")]
		public GrammarTaskNode()
		{
		}
	}
	[Token(Token = "0x20004D7")]
	public class GrammarRuntimeGraphNodeData
	{
		[Token(Token = "0x4001B9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GrammarNodeType nodeType;

		[Token(Token = "0x4001BA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int index;

		[Token(Token = "0x6002250")]
		[Address(RVA = "0xC91F7C", Offset = "0xC91F7C", VA = "0xC91F7C", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6002251")]
		[Address(RVA = "0xC91EF0", Offset = "0xC91EF0", VA = "0xC91EF0")]
		public GrammarRuntimeGraphNodeData()
		{
		}
	}
	[Token(Token = "0x20004D8")]
	public class GrammarRuntimeGraph : RuntimeGraph<GrammarRuntimeGraphNodeData>
	{
		[Token(Token = "0x6002252")]
		[Address(RVA = "0xC91A18", Offset = "0xC91A18", VA = "0xC91A18")]
		public static GrammarRuntimeGraph BuildFrom(GrammarGraph graph)
		{
			return null;
		}

		[Token(Token = "0x6002253")]
		[Address(RVA = "0xC91AD0", Offset = "0xC91AD0", VA = "0xC91AD0")]
		public static void BuildFrom(GrammarGraph graph, GrammarRuntimeGraph runtimeGraph)
		{
		}

		[Token(Token = "0x6002254")]
		[Address(RVA = "0xC91A80", Offset = "0xC91A80", VA = "0xC91A80")]
		public GrammarRuntimeGraph()
		{
		}
	}
	[Token(Token = "0x20004D9")]
	public class GrammarRuntimeGraphUtils
	{
		[Token(Token = "0x6002255")]
		[Address(RVA = "0xC869AC", Offset = "0xC869AC", VA = "0xC869AC")]
		public static RuntimeGraphNode<GrammarRuntimeGraphNodeData> FindStartNode(GrammarRuntimeGraph graph)
		{
			return null;
		}

		[Token(Token = "0x6002256")]
		[Address(RVA = "0xC92054", Offset = "0xC92054", VA = "0xC92054")]
		public GrammarRuntimeGraphUtils()
		{
		}
	}
	[Token(Token = "0x20004DA")]
	public class GrammarRuntimeGraphHandlers : RuntimeGraphBuilderHandlers<GrammarRuntimeGraphNodeData>
	{
		[Serializable]
		[Token(Token = "0x200088C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B8F70", Offset = "0x8B8F70")]
		private sealed class <>c
		{
			[Token(Token = "0x40029FE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40029FF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<GraphNode, GrammarRuntimeGraphNodeData> <>9__0_0;

			[Token(Token = "0x4002A00")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<GraphNode, bool> <>9__0_1;

			[Token(Token = "0x4002A01")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Action<GraphNode, RuntimeGraphNode<GrammarRuntimeGraphNodeData>> <>9__0_2;

			[Token(Token = "0x6003064")]
			[Address(RVA = "0xC91E18", Offset = "0xC91E18", VA = "0xC91E18")]
			public <>c()
			{
			}

			[Token(Token = "0x6003065")]
			[Address(RVA = "0xC91E20", Offset = "0xC91E20", VA = "0xC91E20")]
			internal GrammarRuntimeGraphNodeData <Create>b__0_0(GraphNode graphNode)
			{
				return null;
			}

			[Token(Token = "0x6003066")]
			[Address(RVA = "0xC91EF8", Offset = "0xC91EF8", VA = "0xC91EF8")]
			internal bool <Create>b__0_1(GraphNode graphNode)
			{
				return default(bool);
			}

			[Token(Token = "0x6003067")]
			[Address(RVA = "0xC91F78", Offset = "0xC91F78", VA = "0xC91F78")]
			internal void <Create>b__0_2(GraphNode graphNode, RuntimeGraphNode<GrammarRuntimeGraphNodeData> runtimeNode)
			{
			}
		}

		[Token(Token = "0x6002257")]
		[Address(RVA = "0xC91B58", Offset = "0xC91B58", VA = "0xC91B58")]
		public static GrammarRuntimeGraphHandlers Create()
		{
			return null;
		}

		[Token(Token = "0x6002258")]
		[Address(RVA = "0xC91D64", Offset = "0xC91D64", VA = "0xC91D64")]
		public GrammarRuntimeGraphHandlers()
		{
		}
	}
	[Token(Token = "0x20004DB")]
	public class ExecutionRuntimeGraphNodeData
	{
		[Token(Token = "0x4001BA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public RuntimeGrammarProduction rule;

		[Token(Token = "0x4001BA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GrammarExecRuleRunMode runMode;

		[Token(Token = "0x4001BA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float runProbability;

		[Token(Token = "0x4001BA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int iterateCount;

		[Token(Token = "0x4001BA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int minIterateCount;

		[Token(Token = "0x4001BA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int maxIterateCount;

		[Token(Token = "0x6002259")]
		[Address(RVA = "0xC90EE0", Offset = "0xC90EE0", VA = "0xC90EE0")]
		public ExecutionRuntimeGraphNodeData()
		{
		}
	}
	[Token(Token = "0x20004DC")]
	public class ExecutionRuntimeGraph : RuntimeGraph<ExecutionRuntimeGraphNodeData>
	{
		[Token(Token = "0x4001BA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C1078", Offset = "0x8C1078")]
		private RuntimeGraphNode<ExecutionRuntimeGraphNodeData> <EntryNode>k__BackingField;

		[Token(Token = "0x17000405")]
		public RuntimeGraphNode<ExecutionRuntimeGraphNodeData> EntryNode
		{
			[Token(Token = "0x600225A")]
			[Address(RVA = "0xC90898", Offset = "0xC90898", VA = "0xC90898")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CB6F4", Offset = "0x8CB6F4")]
			get
			{
				return null;
			}
			[Token(Token = "0x600225B")]
			[Address(RVA = "0xC908A0", Offset = "0xC908A0", VA = "0xC908A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CB704", Offset = "0x8CB704")]
			set
			{
			}
		}

		[Token(Token = "0x600225C")]
		[Address(RVA = "0xC908A8", Offset = "0xC908A8", VA = "0xC908A8")]
		public static ExecutionRuntimeGraph BuildFrom(GrammarExecGraph graph, Dictionary<GrammarProductionRule, RuntimeGrammarProduction> mapping)
		{
			return null;
		}

		[Token(Token = "0x600225D")]
		[Address(RVA = "0xC90934", Offset = "0xC90934", VA = "0xC90934")]
		public ExecutionRuntimeGraph()
		{
		}
	}
	[Token(Token = "0x20004DD")]
	public class ExecutionRuntimeGraphHandlers : RuntimeGraphBuilderHandlers<ExecutionRuntimeGraphNodeData>
	{
		[Token(Token = "0x200088D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B8F80", Offset = "0x8B8F80")]
		private sealed class <>c__DisplayClass0_0
		{
			[Token(Token = "0x4002A02")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Dictionary<GrammarProductionRule, RuntimeGrammarProduction> mapping;

			[Token(Token = "0x6003068")]
			[Address(RVA = "0xC90B68", Offset = "0xC90B68", VA = "0xC90B68")]
			public <>c__DisplayClass0_0()
			{
			}

			[Token(Token = "0x6003069")]
			[Address(RVA = "0xC90DAC", Offset = "0xC90DAC", VA = "0xC90DAC")]
			internal ExecutionRuntimeGraphNodeData <Create>b__0(GraphNode graphNode)
			{
				return null;
			}
		}

		[Serializable]
		[Token(Token = "0x200088E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B8F90", Offset = "0x8B8F90")]
		private sealed class <>c
		{
			[Token(Token = "0x4002A03")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002A04")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<GraphNode, bool> <>9__0_1;

			[Token(Token = "0x4002A05")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Action<GraphNode, RuntimeGraphNode<ExecutionRuntimeGraphNodeData>> <>9__0_2;

			[Token(Token = "0x600306B")]
			[Address(RVA = "0xC90C24", Offset = "0xC90C24", VA = "0xC90C24")]
			public <>c()
			{
			}

			[Token(Token = "0x600306C")]
			[Address(RVA = "0xC90C2C", Offset = "0xC90C2C", VA = "0xC90C2C")]
			internal bool <Create>b__0_1(GraphNode graphNode)
			{
				return default(bool);
			}

			[Token(Token = "0x600306D")]
			[Address(RVA = "0xC90CE0", Offset = "0xC90CE0", VA = "0xC90CE0")]
			internal void <Create>b__0_2(GraphNode graphNode, RuntimeGraphNode<ExecutionRuntimeGraphNodeData> runtimeNode)
			{
			}
		}

		[Token(Token = "0x600225E")]
		[Address(RVA = "0xC90984", Offset = "0xC90984", VA = "0xC90984")]
		public static ExecutionRuntimeGraphHandlers Create(Dictionary<GrammarProductionRule, RuntimeGrammarProduction> mapping)
		{
			return null;
		}

		[Token(Token = "0x600225F")]
		[Address(RVA = "0xC90B70", Offset = "0xC90B70", VA = "0xC90B70")]
		public ExecutionRuntimeGraphHandlers()
		{
		}
	}
	[Token(Token = "0x20004DE")]
	public class WeightedGrammarRuntimeGraph : GrammarRuntimeGraph
	{
		[Token(Token = "0x4001BA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float Weight;

		[Token(Token = "0x6002260")]
		[Address(RVA = "0xD48598", Offset = "0xD48598", VA = "0xD48598")]
		public WeightedGrammarRuntimeGraph()
		{
		}
	}
	[Token(Token = "0x20004DF")]
	public class RuntimeGrammarProduction
	{
		[Token(Token = "0x4001BA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GrammarProductionRule rule;

		[Token(Token = "0x4001BAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GrammarRuntimeGraph LHS;

		[Token(Token = "0x4001BAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WeightedGrammarRuntimeGraph[] RHSList;

		[Token(Token = "0x6002261")]
		[Address(RVA = "0xD48590", Offset = "0xD48590", VA = "0xD48590")]
		public RuntimeGrammarProduction()
		{
		}
	}
	[Token(Token = "0x20004E0")]
	public class RuntimeGrammar
	{
		[Token(Token = "0x4001BAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GrammarRuntimeGraph ResultGraph;

		[Token(Token = "0x4001BAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ExecutionRuntimeGraph ExecutionGraph;

		[Token(Token = "0x4001BAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RuntimeGrammarProduction[] Rules;

		[Token(Token = "0x4001BAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GrammarNodeType[] NodeTypes;

		[Token(Token = "0x6002262")]
		[Address(RVA = "0xD48274", Offset = "0xD48274", VA = "0xD48274")]
		public static RuntimeGrammar Build(DungeonFlowAsset flowAsset)
		{
			return null;
		}

		[Token(Token = "0x6002263")]
		[Address(RVA = "0xD48588", Offset = "0xD48588", VA = "0xD48588")]
		public RuntimeGrammar()
		{
		}
	}
	[Token(Token = "0x20004E1")]
	public class GraphGrammarProcessorSettings
	{
		[Token(Token = "0x4001BB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int seed;

		[Token(Token = "0x4001BB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public bool runGraphGenerationScripts;

		[Token(Token = "0x6002264")]
		[Address(RVA = "0xD477F4", Offset = "0xD477F4", VA = "0xD477F4")]
		public GraphGrammarProcessorSettings()
		{
		}
	}
	[Token(Token = "0x20004E2")]
	public class GraphGrammarProcessor
	{
		[Serializable]
		[Token(Token = "0x200088F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B8FA0", Offset = "0x8B8FA0")]
		private sealed class <>c
		{
			[Token(Token = "0x4002A06")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002A07")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<GraphNode, bool> <>9__8_0;

			[Token(Token = "0x600306F")]
			[Address(RVA = "0xD4776C", Offset = "0xD4776C", VA = "0xD4776C")]
			public <>c()
			{
			}

			[Token(Token = "0x6003070")]
			[Address(RVA = "0xD47774", Offset = "0xD47774", VA = "0xD47774")]
			internal bool <RunGraphGenerationScript>b__8_0(GraphNode n)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4001BB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C1088", Offset = "0x8C1088")]
		private RuntimeGrammar <Grammar>k__BackingField;

		[Token(Token = "0x4001BB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private System.Random random;

		[Token(Token = "0x4001BB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GraphGrammarProcessorSettings settings;

		[Token(Token = "0x17000406")]
		public RuntimeGrammar Grammar
		{
			[Token(Token = "0x6002265")]
			[Address(RVA = "0xC922D4", Offset = "0xC922D4", VA = "0xC922D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CB714", Offset = "0x8CB714")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002266")]
			[Address(RVA = "0xC922DC", Offset = "0xC922DC", VA = "0xC922DC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CB724", Offset = "0x8CB724")]
			set
			{
			}
		}

		[Token(Token = "0x6002267")]
		[Address(RVA = "0xC86654", Offset = "0xC86654", VA = "0xC86654")]
		public GraphGrammarProcessor(DungeonFlowAsset asset, GraphGrammarProcessorSettings settings)
		{
		}

		[Token(Token = "0x6002268")]
		[Address(RVA = "0xC922E4", Offset = "0xC922E4", VA = "0xC922E4")]
		private void RunGraphGenerationScripts(DungeonFlowAsset asset)
		{
		}

		[Token(Token = "0x6002269")]
		[Address(RVA = "0xC924AC", Offset = "0xC924AC", VA = "0xC924AC")]
		private void RunGraphGenerationScript(GrammarGraph graph, GrammarNodeType[] nodeTypes)
		{
		}

		[Token(Token = "0x600226A")]
		[Address(RVA = "0xC86808", Offset = "0xC86808", VA = "0xC86808")]
		public void Build()
		{
		}

		[Token(Token = "0x600226B")]
		[Address(RVA = "0xC927C0", Offset = "0xC927C0", VA = "0xC927C0")]
		private int GetExecutionCount(ExecutionRuntimeGraphNodeData data)
		{
			return default(int);
		}

		[Token(Token = "0x600226C")]
		[Address(RVA = "0xC9290C", Offset = "0xC9290C", VA = "0xC9290C")]
		private WeightedGrammarRuntimeGraph GetRandomGraph(WeightedGrammarRuntimeGraph[] graphs)
		{
			return null;
		}

		[Token(Token = "0x600226D")]
		[Address(RVA = "0xC92840", Offset = "0xC92840", VA = "0xC92840")]
		private void ApplyRule(RuntimeGraph<GrammarRuntimeGraphNodeData> dataGraph, RuntimeGrammarProduction rule)
		{
		}

		[Token(Token = "0x600226E")]
		[Address(RVA = "0xC934F4", Offset = "0xC934F4", VA = "0xC934F4")]
		private Dictionary<int, RuntimeGraphNode<GrammarRuntimeGraphNodeData>> CreateNodeByIndexMap(RuntimeGraph<GrammarRuntimeGraphNodeData> graph)
		{
			return null;
		}

		[Token(Token = "0x600226F")]
		[Address(RVA = "0xC929DC", Offset = "0xC929DC", VA = "0xC929DC")]
		private void ApplyMatch(RuntimeGraph<GrammarRuntimeGraphNodeData> dataGraph, RuntimeGraph<GrammarRuntimeGraphNodeData> lhs, RuntimeGraph<GrammarRuntimeGraphNodeData> rhs, Dictionary<RuntimeGraphNode<GrammarRuntimeGraphNodeData>, RuntimeGraphNode<GrammarRuntimeGraphNodeData>> LHSToDataNode)
		{
		}
	}
	[Token(Token = "0x20004E3")]
	internal class GraphPatternMatch
	{
		[Token(Token = "0x4001BB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Dictionary<RuntimeGraphNode<GrammarRuntimeGraphNodeData>, RuntimeGraphNode<GrammarRuntimeGraphNodeData>> PatternToDataNode;

		[Token(Token = "0x6002270")]
		[Address(RVA = "0xD477FC", Offset = "0xD477FC", VA = "0xD477FC")]
		public GraphPatternMatch()
		{
		}
	}
	[Token(Token = "0x20004E4")]
	internal class GraphPatternMatcher
	{
		[Token(Token = "0x6002271")]
		[Address(RVA = "0xD4786C", Offset = "0xD4786C", VA = "0xD4786C")]
		public static GraphPatternMatch[] Match(RuntimeGraph<GrammarRuntimeGraphNodeData> dataGraph, RuntimeGraph<GrammarRuntimeGraphNodeData> patternGraph)
		{
			return null;
		}

		[Token(Token = "0x6002272")]
		[Address(RVA = "0xD47E50", Offset = "0xD47E50", VA = "0xD47E50")]
		private static bool IsNodeDataEqual(RuntimeGraphNode<GrammarRuntimeGraphNodeData> a, RuntimeGraphNode<GrammarRuntimeGraphNodeData> b)
		{
			return default(bool);
		}

		[Token(Token = "0x6002273")]
		[Address(RVA = "0xD47F90", Offset = "0xD47F90", VA = "0xD47F90")]
		private static bool TraverseChildren(List<RuntimeGraphNode<GrammarRuntimeGraphNodeData>> dataChildNodes, List<RuntimeGraphNode<GrammarRuntimeGraphNodeData>> patternChildNodes, HashSet<RuntimeGraphNode<GrammarRuntimeGraphNodeData>> unmatchedNodes, GraphPatternMatch match, HashSet<RuntimeGraphNode<GrammarRuntimeGraphNodeData>> visited)
		{
			return default(bool);
		}

		[Token(Token = "0x6002274")]
		[Address(RVA = "0xD47CD8", Offset = "0xD47CD8", VA = "0xD47CD8")]
		private static bool MatchRecursive(RuntimeGraphNode<GrammarRuntimeGraphNodeData> dataNode, RuntimeGraphNode<GrammarRuntimeGraphNodeData> patternNode, HashSet<RuntimeGraphNode<GrammarRuntimeGraphNodeData>> unmatchedNodes, GraphPatternMatch match, HashSet<RuntimeGraphNode<GrammarRuntimeGraphNodeData>> visited)
		{
			return default(bool);
		}

		[Token(Token = "0x6002275")]
		[Address(RVA = "0xD4826C", Offset = "0xD4826C", VA = "0xD4826C")]
		public GraphPatternMatcher()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20004E5")]
	public class WeightedGrammarGraph : ScriptableObject
	{
		[Token(Token = "0x4001BB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public float weight;

		[Token(Token = "0x4001BB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[HideInInspector]
		public GrammarGraph graph;

		[Token(Token = "0x6002276")]
		[Address(RVA = "0xD485A8", Offset = "0xD485A8", VA = "0xD485A8")]
		public WeightedGrammarGraph()
		{
		}
	}
}
namespace DungeonArchitect.SpatialConstraints
{
	[Token(Token = "0x20004E6")]
	public class SpatialConstraintRuleDomain
	{
		[Token(Token = "0x4001BB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SCReferenceNode referenceNode;

		[Token(Token = "0x4001BB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UnityEngine.Vector3 gridSize;

		[Token(Token = "0x6002277")]
		[Address(RVA = "0xE00820", Offset = "0xE00820", VA = "0xE00820")]
		public SpatialConstraintRuleDomain()
		{
		}
	}
	[Token(Token = "0x20004E7")]
	public class RuleMetaAttribute : Attribute
	{
		[Token(Token = "0x4001BBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x6002278")]
		[Address(RVA = "0xE005D4", Offset = "0xE005D4", VA = "0xE005D4")]
		public RuleMetaAttribute()
		{
		}
	}
	[Token(Token = "0x20004E8")]
	public class ConstraintRuleContext
	{
		[Token(Token = "0x4001BBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SpatialConstraintProcessorContext processorContext;

		[Token(Token = "0x4001BBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SpatialConstraintRuleDomain domain;

		[Token(Token = "0x4001BBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SCRuleNode ruleNode;

		[Token(Token = "0x4001BBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UnityEngine.Vector3 ruleNodeWorldPosition;

		[Token(Token = "0x4001BBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Matrix4x4 rotationFrame;

		[Token(Token = "0x6002279")]
		[Address(RVA = "0xE005B4", Offset = "0xE005B4", VA = "0xE005B4")]
		public ConstraintRuleContext()
		{
		}
	}
	[Token(Token = "0x20004E9")]
	public abstract class ConstraintRule : ScriptableObject
	{
		[Token(Token = "0x4001BC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[HideInInspector]
		public bool enabled;

		[Token(Token = "0x4001BC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[HideInInspector]
		public string ruleName;

		[Token(Token = "0x4001BC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		public bool inverseRule;

		[Token(Token = "0x600227A")]
		[Address(RVA = "0xE00350", Offset = "0xE00350", VA = "0xE00350", Slot = "4")]
		public virtual void OnEnable()
		{
		}

		[Token(Token = "0x600227B")]
		public abstract bool Process(ConstraintRuleContext context);

		[Token(Token = "0x600227C")]
		[Address(RVA = "0xE003A4", Offset = "0xE003A4", VA = "0xE003A4")]
		public static string GetFullMenuPath(Type type)
		{
			return null;
		}

		[Token(Token = "0x600227D")]
		[Address(RVA = "0xE004A0", Offset = "0xE004A0", VA = "0xE004A0")]
		public static string GetScriptName(Type type)
		{
			return null;
		}

		[Token(Token = "0x600227E")]
		[Address(RVA = "0xE00524", Offset = "0xE00524", VA = "0xE00524")]
		public string GetFullMenuPath()
		{
			return null;
		}

		[Token(Token = "0x600227F")]
		[Address(RVA = "0xE0038C", Offset = "0xE0038C", VA = "0xE0038C")]
		public string GetScriptName()
		{
			return null;
		}

		[Token(Token = "0x6002280")]
		[Address(RVA = "0xE0053C", Offset = "0xE0053C", VA = "0xE0053C", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6002281")]
		[Address(RVA = "0xE005A4", Offset = "0xE005A4", VA = "0xE005A4")]
		protected ConstraintRule()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20004EA")]
	public class SpatialConstraintAsset : ScriptableObject
	{
		[Token(Token = "0x4001BC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public bool rotateToFit;

		[Token(Token = "0x4001BC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[SerializeField]
		public bool applyFitRotation;

		[Token(Token = "0x4001BC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		[SerializeField]
		public bool applyMarkerRotation;

		[Token(Token = "0x4001BC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
		[SerializeField]
		public bool checkRelativeToMarkerRotation;

		[Token(Token = "0x4001BC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		public GraphNode hostThemeNode;

		[Token(Token = "0x4001BC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		[SerializeField]
		private SpatialConstraintGraph graph;

		[Token(Token = "0x17000407")]
		public SpatialConstraintGraph Graph
		{
			[Token(Token = "0x6002282")]
			[Address(RVA = "0xE005DC", Offset = "0xE005DC", VA = "0xE005DC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002283")]
		[Address(RVA = "0xE005E4", Offset = "0xE005E4", VA = "0xE005E4")]
		public void Init(GraphNode hostThemeNode)
		{
		}

		[Token(Token = "0x6002284")]
		[Address(RVA = "0xE00664", Offset = "0xE00664", VA = "0xE00664")]
		public void OnEnable()
		{
		}

		[Token(Token = "0x6002285")]
		[Address(RVA = "0xE00670", Offset = "0xE00670", VA = "0xE00670")]
		public SpatialConstraintAsset()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20004EB")]
	public class SpatialConstraintGraph : Graph
	{
		[Token(Token = "0x4001BC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		public SpatialConstraintAsset asset;

		[Token(Token = "0x6002286")]
		[Address(RVA = "0xE00688", Offset = "0xE00688", VA = "0xE00688", Slot = "4")]
		public override void OnEnable()
		{
		}

		[Token(Token = "0x6002287")]
		[Address(RVA = "0xE00690", Offset = "0xE00690", VA = "0xE00690")]
		public SpatialConstraintGraph()
		{
		}
	}
	[Token(Token = "0x20004EC")]
	public class SpatialConstraintProcessorUtils
	{
		[Token(Token = "0x6002288")]
		[Address(RVA = "0xE01B48", Offset = "0xE01B48", VA = "0xE01B48")]
		public static UnityEngine.Vector2 GetPosition2D(UnityEngine.Vector3 position)
		{
			return default(UnityEngine.Vector2);
		}

		[Token(Token = "0x6002289")]
		[Address(RVA = "0xE0214C", Offset = "0xE0214C", VA = "0xE0214C")]
		public static UnityEngine.Vector3 RotateVector(UnityEngine.Vector3 position, Matrix4x4 matrix)
		{
			return default(UnityEngine.Vector3);
		}

		[Token(Token = "0x600228A")]
		[Address(RVA = "0xE0189C", Offset = "0xE0189C", VA = "0xE0189C")]
		public static UnityEngine.Vector3 GetRuleNodeWorldPosition(SCRuleNode ruleNode, SCReferenceNode referenceNode, PropSocket marker, UnityEngine.Vector3 gridSize, ref Matrix4x4 rotationFrame)
		{
			return default(UnityEngine.Vector3);
		}

		[Token(Token = "0x600228B")]
		[Address(RVA = "0xE02214", Offset = "0xE02214", VA = "0xE02214")]
		public SpatialConstraintProcessorUtils()
		{
		}
	}
	[Token(Token = "0x20004ED")]
	public class SpatialConstraintProcessorContext
	{
		[Token(Token = "0x4001BCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SpatialConstraintAsset constraintAsset;

		[Token(Token = "0x4001BCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PropSocket marker;

		[Token(Token = "0x4001BCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DungeonModel model;

		[Token(Token = "0x4001BCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public DungeonConfig config;

		[Token(Token = "0x4001BCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public DungeonBuilder builder;

		[Token(Token = "0x4001BCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public LevelMarkerList levelMarkers;

		[Token(Token = "0x600228C")]
		[Address(RVA = "0xE02144", Offset = "0xE02144", VA = "0xE02144")]
		public SpatialConstraintProcessorContext()
		{
		}
	}
	[Token(Token = "0x20004EE")]
	public abstract class SpatialConstraintProcessor : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000890")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B8FB0", Offset = "0x8B8FB0")]
		private sealed class <>c
		{
			[Token(Token = "0x4002A08")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002A09")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<GraphNode, bool> <>9__0_0;

			[Token(Token = "0x4002A0A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<GraphNode, bool> <>9__1_0;

			[Token(Token = "0x4002A0B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Func<ConstraintRule, bool> <>9__1_1;

			[Token(Token = "0x6003072")]
			[Address(RVA = "0xE01FD0", Offset = "0xE01FD0", VA = "0xE01FD0")]
			public <>c()
			{
			}

			[Token(Token = "0x6003073")]
			[Address(RVA = "0xE01FD8", Offset = "0xE01FD8", VA = "0xE01FD8")]
			internal bool <GetDomain>b__0_0(GraphNode node)
			{
				return default(bool);
			}

			[Token(Token = "0x6003074")]
			[Address(RVA = "0xE02058", Offset = "0xE02058", VA = "0xE02058")]
			internal bool <ProcessSpatialConstraintFrame>b__1_0(GraphNode node)
			{
				return default(bool);
			}

			[Token(Token = "0x6003075")]
			[Address(RVA = "0xE020D8", Offset = "0xE020D8", VA = "0xE020D8")]
			internal bool <ProcessSpatialConstraintFrame>b__1_1(ConstraintRule c)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600228D")]
		[Address(RVA = "0xE00698", Offset = "0xE00698", VA = "0xE00698", Slot = "4")]
		public virtual SpatialConstraintRuleDomain GetDomain(SpatialConstraintProcessorContext context)
		{
			return null;
		}

		[Token(Token = "0x600228E")]
		[Address(RVA = "0xE00898", Offset = "0xE00898", VA = "0xE00898")]
		private bool ProcessSpatialConstraintFrame(SpatialConstraintProcessorContext context, SpatialConstraintRuleDomain domain, Matrix4x4 rotationFrame, out PropSocket[] outMarkersToRemove)
		{
			return default(bool);
		}

		[Token(Token = "0x600228F")]
		[Address(RVA = "0xE01B78", Offset = "0xE01B78", VA = "0xE01B78")]
		public bool ProcessSpatialConstraint(SpatialConstraintProcessorContext context, out Matrix4x4 outOffset, out PropSocket[] outMarkersToRemove)
		{
			return default(bool);
		}

		[Token(Token = "0x6002290")]
		[Address(RVA = "0xE005CC", Offset = "0xE005CC", VA = "0xE005CC")]
		protected SpatialConstraintProcessor()
		{
		}
	}
}
namespace DungeonArchitect.SpatialConstraints.Isaac
{
	[Token(Token = "0x20004EF")]
	public class SpatialConstraintProcessorIsaac : SpatialConstraintProcessor
	{
		[Token(Token = "0x6002291")]
		[Address(RVA = "0xE005BC", Offset = "0xE005BC", VA = "0xE005BC", Slot = "4")]
		public override SpatialConstraintRuleDomain GetDomain(SpatialConstraintProcessorContext context)
		{
			return null;
		}

		[Token(Token = "0x6002292")]
		[Address(RVA = "0xE005C4", Offset = "0xE005C4", VA = "0xE005C4")]
		public SpatialConstraintProcessorIsaac()
		{
		}
	}
}
namespace DungeonArchitect.Builders
{
	[Token(Token = "0x20004F0")]
	public class DungeonBuilderDefaultMarkers
	{
		[Token(Token = "0x4001BD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Dictionary<Type, string[]> DefaultMarkersByBuilder;

		[Token(Token = "0x6002293")]
		[Address(RVA = "0xD73F50", Offset = "0xD73F50", VA = "0xD73F50")]
		public DungeonBuilderDefaultMarkers()
		{
		}

		[Token(Token = "0x6002294")]
		[Address(RVA = "0xD75188", Offset = "0xD75188", VA = "0xD75188")]
		public string[] GetDefaultMarkers(Type builderClass)
		{
			return null;
		}
	}
}
namespace DungeonArchitect.Builders.BSP
{
	[Token(Token = "0x20004F1")]
	internal class BSPDungeonConstants
	{
		[Token(Token = "0x4001BD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly string GroundRoom;

		[Token(Token = "0x4001BD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static readonly string GroundCorridor;

		[Token(Token = "0x4001BD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static readonly string Door;

		[Token(Token = "0x4001BD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static readonly string WallRoom;

		[Token(Token = "0x4001BD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static readonly string WallCorridor;

		[Token(Token = "0x4001BD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static readonly string WallSeparator;

		[Token(Token = "0x6002295")]
		[Address(RVA = "0xD711B4", Offset = "0xD711B4", VA = "0xD711B4")]
		public BSPDungeonConstants()
		{
		}
	}
	[Token(Token = "0x20004F2")]
	internal class BSPNodeObject
	{
		[Token(Token = "0x4001BD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Rectangle bounds;

		[Token(Token = "0x4001BD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public BSPNodeObject[] children;

		[Token(Token = "0x4001BD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public BSPNodeObject parent;

		[Token(Token = "0x4001BDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Guid id;

		[Token(Token = "0x4001BDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public int depthFromRoot;

		[Token(Token = "0x4001BDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public int padding;

		[Token(Token = "0x4001BDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public bool horizontalSplit;

		[Token(Token = "0x4001BDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public Color debugColor;

		[Token(Token = "0x4001BDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public bool discarded;

		[Token(Token = "0x4001BE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public List<BSPNodeObject> connectedRooms;

		[Token(Token = "0x4001BE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public NodeConnection[] subtreeLeafConnections;

		[Token(Token = "0x17000408")]
		public Rectangle PaddedBounds
		{
			[Token(Token = "0x6002297")]
			[Address(RVA = "0xD7171C", Offset = "0xD7171C", VA = "0xD7171C")]
			get
			{
				return default(Rectangle);
			}
		}

		[Token(Token = "0x6002298")]
		[Address(RVA = "0xD71758", Offset = "0xD71758", VA = "0xD71758")]
		public void Split(float splitRatio, System.Random random)
		{
		}

		[Token(Token = "0x6002299")]
		[Address(RVA = "0xD71B10", Offset = "0xD71B10", VA = "0xD71B10")]
		public bool MustSplit(int maxSize)
		{
			return default(bool);
		}

		[Token(Token = "0x600229A")]
		[Address(RVA = "0xD71BC4", Offset = "0xD71BC4", VA = "0xD71BC4")]
		public bool CanSplit(int minSize)
		{
			return default(bool);
		}

		[Token(Token = "0x600229B")]
		[Address(RVA = "0xD71A34", Offset = "0xD71A34", VA = "0xD71A34")]
		public BSPNodeObject()
		{
		}
	}
	[Token(Token = "0x20004F3")]
	internal enum BSPNodeDirection
	{
		[Token(Token = "0x4001BE3")]
		Left,
		[Token(Token = "0x4001BE4")]
		Right,
		[Token(Token = "0x4001BE5")]
		Top,
		[Token(Token = "0x4001BE6")]
		Bottom
	}
	[Token(Token = "0x20004F4")]
	public class BSPDungeonBuilder : DungeonBuilder
	{
		[Token(Token = "0x2000891")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B8FC0", Offset = "0x8B8FC0")]
		private sealed class <>c__DisplayClass10_0
		{
			[Token(Token = "0x4002A0C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int numNodes;

			[Token(Token = "0x6003076")]
			[Address(RVA = "0xD710CC", Offset = "0xD710CC", VA = "0xD710CC")]
			public <>c__DisplayClass10_0()
			{
			}

			[Token(Token = "0x6003077")]
			[Address(RVA = "0xD710D4", Offset = "0xD710D4", VA = "0xD710D4")]
			internal void <DiscardExtraRooms>b__1(BSPNodeObject n)
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000892")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B8FD0", Offset = "0x8B8FD0")]
		private sealed class <>c
		{
			[Token(Token = "0x4002A0D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002A0E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Action<BSPNodeObject> <>9__10_0;

			[Token(Token = "0x4002A0F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Action<BSPNodeObject> <>9__11_0;

			[Token(Token = "0x4002A10")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Action<BSPNodeObject> <>9__11_1;

			[Token(Token = "0x4002A11")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static Action<BSPNodeObject> <>9__13_0;

			[Token(Token = "0x6003079")]
			[Address(RVA = "0xD7105C", Offset = "0xD7105C", VA = "0xD7105C")]
			public <>c()
			{
			}

			[Token(Token = "0x600307A")]
			[Address(RVA = "0xD71064", Offset = "0xD71064", VA = "0xD71064")]
			internal void <DiscardExtraRooms>b__10_0(BSPNodeObject n)
			{
			}

			[Token(Token = "0x600307B")]
			[Address(RVA = "0xD71080", Offset = "0xD71080", VA = "0xD71080")]
			internal void <FlagConnectedLeafNodes>b__11_0(BSPNodeObject n)
			{
			}

			[Token(Token = "0x600307C")]
			[Address(RVA = "0xD71098", Offset = "0xD71098", VA = "0xD71098")]
			internal void <FlagConnectedLeafNodes>b__11_1(BSPNodeObject n)
			{
			}

			[Token(Token = "0x600307D")]
			[Address(RVA = "0xD710B0", Offset = "0xD710B0", VA = "0xD710B0")]
			internal void <DiscardSubtree>b__13_0(BSPNodeObject n)
			{
			}
		}

		[Token(Token = "0x2000893")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B8FE0", Offset = "0x8B8FE0")]
		private sealed class <>c__DisplayClass12_0
		{
			[Token(Token = "0x4002A12")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool stateModified;

			[Token(Token = "0x4002A13")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Action<BSPNodeObject> <>9__0;

			[Token(Token = "0x4002A14")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Action<BSPNodeObject> <>9__1;

			[Token(Token = "0x600307E")]
			[Address(RVA = "0xD710E4", Offset = "0xD710E4", VA = "0xD710E4")]
			public <>c__DisplayClass12_0()
			{
			}

			[Token(Token = "0x600307F")]
			[Address(RVA = "0xD710EC", Offset = "0xD710EC", VA = "0xD710EC")]
			internal void <ConnectActiveSubtrees>b__0(BSPNodeObject n)
			{
			}

			[Token(Token = "0x6003080")]
			[Address(RVA = "0xD71114", Offset = "0xD71114", VA = "0xD71114")]
			internal void <ConnectActiveSubtrees>b__1(BSPNodeObject n)
			{
			}
		}

		[Token(Token = "0x4001BE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private BSPDungeonConfig bspConfig;

		[Token(Token = "0x4001BE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private BSPDungeonModel bspModel;

		[Token(Token = "0x4001BE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private new System.Random random;

		[Token(Token = "0x600229C")]
		[Address(RVA = "0xB170D8", Offset = "0xB170D8", VA = "0xB170D8", Slot = "4")]
		public override void BuildDungeon(DungeonConfig config, DungeonModel model)
		{
		}

		[Token(Token = "0x600229D")]
		[Address(RVA = "0xB172E0", Offset = "0xB172E0", VA = "0xB172E0", Slot = "6")]
		public override void OnDestroyed()
		{
		}

		[Token(Token = "0x600229E")]
		[Address(RVA = "0xB17384", Offset = "0xB17384", VA = "0xB17384", Slot = "11")]
		public override void EmitMarkers()
		{
		}

		[Token(Token = "0x600229F")]
		[Address(RVA = "0xB171FC", Offset = "0xB171FC", VA = "0xB171FC")]
		private void GenerateLevelLayout()
		{
		}

		[Token(Token = "0x60022A0")]
		[Address(RVA = "0xB19A58", Offset = "0xB19A58", VA = "0xB19A58")]
		private void DebugRoomLayout(BSPNodeObject rootNode)
		{
		}

		[Token(Token = "0x60022A1")]
		[Address(RVA = "0xB19CE4", Offset = "0xB19CE4", VA = "0xB19CE4")]
		private BSPNodeObject GetCornerSubtreeNode(BSPNodeObject node, bool left)
		{
			return null;
		}

		[Token(Token = "0x60022A2")]
		[Address(RVA = "0xB197B0", Offset = "0xB197B0", VA = "0xB197B0")]
		private void GenerateCustomRooms(BSPNodeObject rootNode)
		{
		}

		[Token(Token = "0x60022A3")]
		[Address(RVA = "0xB197B4", Offset = "0xB197B4", VA = "0xB197B4")]
		private void DiscardExtraRooms(BSPNodeObject rootNode)
		{
		}

		[Token(Token = "0x60022A4")]
		[Address(RVA = "0xB19E0C", Offset = "0xB19E0C", VA = "0xB19E0C")]
		private void FlagConnectedLeafNodes(BSPNodeObject node)
		{
		}

		[Token(Token = "0x60022A5")]
		[Address(RVA = "0xB1A05C", Offset = "0xB1A05C", VA = "0xB1A05C")]
		private bool ConnectActiveSubtrees(BSPNodeObject node)
		{
			return default(bool);
		}

		[Token(Token = "0x60022A6")]
		[Address(RVA = "0xB1A300", Offset = "0xB1A300", VA = "0xB1A300")]
		private void DiscardSubtree(BSPNodeObject node)
		{
		}

		[Token(Token = "0x60022A7")]
		[Address(RVA = "0xB19D40", Offset = "0xB19D40", VA = "0xB19D40")]
		private void TraverseTree(BSPNodeObject node, Action<BSPNodeObject> visit)
		{
		}

		[Token(Token = "0x60022A8")]
		[Address(RVA = "0xB1A27C", Offset = "0xB1A27C", VA = "0xB1A27C")]
		private void TraverseParentBranch(BSPNodeObject node, Action<BSPNodeObject> visit)
		{
		}

		[Token(Token = "0x60022A9")]
		[Address(RVA = "0xB196F4", Offset = "0xB196F4", VA = "0xB196F4")]
		private void ConnectDoors(BSPNodeObject node)
		{
		}

		[Token(Token = "0x60022AA")]
		[Address(RVA = "0xB1AA68", Offset = "0xB1AA68", VA = "0xB1AA68")]
		private NodeConnection[] GetConnectionCandidates(BSPNodeObject[] leftRooms, BSPNodeObject[] rightRooms)
		{
			return null;
		}

		[Token(Token = "0x60022AB")]
		[Address(RVA = "0xB1AC64", Offset = "0xB1AC64", VA = "0xB1AC64")]
		private void Shuffle(List<BSPNodeObject> nodes)
		{
		}

		[Token(Token = "0x60022AC")]
		[Address(RVA = "0xB1A3F8", Offset = "0xB1A3F8", VA = "0xB1A3F8")]
		private NodeConnection[] ConnectPartitions(BSPNodeObject leftPartition, BSPNodeObject rightPartition, bool horizontalSplit)
		{
			return null;
		}

		[Token(Token = "0x60022AD")]
		[Address(RVA = "0xB19BC0", Offset = "0xB19BC0", VA = "0xB19BC0")]
		private void FindBoundaryEdgeRooms(BSPNodeObject node, BSPNodeDirection direction, List<BSPNodeObject> result)
		{
		}

		[Token(Token = "0x60022AE")]
		[Address(RVA = "0xB19510", Offset = "0xB19510", VA = "0xB19510")]
		private void BuildDungeonGraph(BSPNodeObject node)
		{
		}

		[Token(Token = "0x60022AF")]
		[Address(RVA = "0xB173B8", Offset = "0xB173B8", VA = "0xB173B8")]
		private void EmitLevelMarkers()
		{
		}

		[Token(Token = "0x60022B0")]
		[Address(RVA = "0xB19948", Offset = "0xB19948", VA = "0xB19948")]
		private void SerializeGraph(BSPNodeObject rootNode)
		{
		}

		[Token(Token = "0x60022B1")]
		[Address(RVA = "0xB1AD68", Offset = "0xB1AD68", VA = "0xB1AD68")]
		private void SerializeGraph(BSPNodeObject node, List<BSPNode> serializedNodes, List<BSPNodeConnection> serializedConnections)
		{
		}

		[Token(Token = "0x60022B2")]
		[Address(RVA = "0xB1B374", Offset = "0xB1B374", VA = "0xB1B374", Slot = "9")]
		public override void DebugDraw()
		{
		}

		[Token(Token = "0x60022B3")]
		[Address(RVA = "0xB1BD44", Offset = "0xB1BD44", VA = "0xB1BD44")]
		public BSPDungeonBuilder()
		{
		}
	}
	[Token(Token = "0x20004F5")]
	internal class NodeConnection
	{
		[Token(Token = "0x4001BEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private BSPNodeObject room0;

		[Token(Token = "0x4001BEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private BSPNodeObject room1;

		[Token(Token = "0x4001BEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool doorFacingX;

		[Token(Token = "0x4001BED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private IntVector doorPosition0;

		[Token(Token = "0x4001BEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private IntVector doorPosition1;

		[Token(Token = "0x17000409")]
		public BSPNodeObject Room0
		{
			[Token(Token = "0x60022B4")]
			[Address(RVA = "0xD71C80", Offset = "0xD71C80", VA = "0xD71C80")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700040A")]
		public BSPNodeObject Room1
		{
			[Token(Token = "0x60022B5")]
			[Address(RVA = "0xD71C88", Offset = "0xD71C88", VA = "0xD71C88")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700040B")]
		public bool DoorFacingX
		{
			[Token(Token = "0x60022B6")]
			[Address(RVA = "0xD71C90", Offset = "0xD71C90", VA = "0xD71C90")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700040C")]
		public IntVector DoorPosition0
		{
			[Token(Token = "0x60022B7")]
			[Address(RVA = "0xD71C98", Offset = "0xD71C98", VA = "0xD71C98")]
			get
			{
				return default(IntVector);
			}
			[Token(Token = "0x60022B8")]
			[Address(RVA = "0xD71CA8", Offset = "0xD71CA8", VA = "0xD71CA8")]
			set
			{
			}
		}

		[Token(Token = "0x1700040D")]
		public IntVector DoorPosition1
		{
			[Token(Token = "0x60022B9")]
			[Address(RVA = "0xD71CB4", Offset = "0xD71CB4", VA = "0xD71CB4")]
			get
			{
				return default(IntVector);
			}
			[Token(Token = "0x60022BA")]
			[Address(RVA = "0xD71CC4", Offset = "0xD71CC4", VA = "0xD71CC4")]
			set
			{
			}
		}

		[Token(Token = "0x60022BB")]
		[Address(RVA = "0xD71CD0", Offset = "0xD71CD0", VA = "0xD71CD0")]
		public NodeConnection(BSPNodeObject room0, BSPNodeObject room1, int padding)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20004F6")]
	public struct BSPRoomCategory
	{
		[Token(Token = "0x4001BEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string category;

		[Token(Token = "0x4001BF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int width;

		[Token(Token = "0x4001BF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public int length;

		[Token(Token = "0x4001BF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int minOccurance;

		[Token(Token = "0x4001BF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int maxOccurance;

		[Token(Token = "0x4001BF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Color debugColor;
	}
	[Token(Token = "0x20004F7")]
	public class BSPDungeonConfig : DungeonConfig
	{
		[Token(Token = "0x4001BF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UnityEngine.Vector2 gridSize;

		[Token(Token = "0x4001BF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int dungeonWidth;

		[Token(Token = "0x4001BF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int dungeonLength;

		[Token(Token = "0x4001BF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int minRoomSize;

		[Token(Token = "0x4001BF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public int maxRoomSize;

		[Token(Token = "0x4001BFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float smallerRoomProbability;

		[Token(Token = "0x4001BFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float unevenSplitProbability;

		[Token(Token = "0x4001BFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public int roomPadding;

		[Token(Token = "0x4001BFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float loopingProbability;

		[Token(Token = "0x4001BFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public int randomKillDepthStart;

		[Token(Token = "0x4001BFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float randomKillProbability;

		[Token(Token = "0x4001C00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float minAspectRatio;

		[Token(Token = "0x4001C01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public BSPRoomCategory[] customRooms;

		[Token(Token = "0x60022BC")]
		[Address(RVA = "0xD7113C", Offset = "0xD7113C", VA = "0xD7113C")]
		public BSPDungeonConfig()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20004F8")]
	public struct BSPNode
	{
		[Token(Token = "0x4001C02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Guid id;

		[Token(Token = "0x4001C03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Rectangle bounds;

		[Token(Token = "0x4001C04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Rectangle paddedBounds;

		[Token(Token = "0x4001C05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public int depthFromRoot;

		[Token(Token = "0x4001C06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string roomCategory;

		[Token(Token = "0x4001C07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Guid parent;

		[Token(Token = "0x4001C08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Guid[] children;

		[Token(Token = "0x4001C09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Guid[] connectedRooms;

		[Token(Token = "0x4001C0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public BSPNodeConnection[] subtreeLeafConnections;

		[Token(Token = "0x4001C0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Color debugColor;

		[Token(Token = "0x4001C0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public bool discarded;
	}
	[Serializable]
	[Token(Token = "0x20004F9")]
	public struct BSPNodeConnection
	{
		[Token(Token = "0x4001C0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Guid room0;

		[Token(Token = "0x4001C0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Guid room1;

		[Token(Token = "0x4001C0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public IntVector doorPosition0;

		[Token(Token = "0x4001C10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public IntVector doorPosition1;

		[Token(Token = "0x4001C11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool doorFacingX;
	}
	[Token(Token = "0x20004FA")]
	public class BSPDungeonGraphQuery
	{
		[Token(Token = "0x4001C12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Guid rootNode;

		[Token(Token = "0x4001C13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Dictionary<Guid, BSPNode> nodeMap;

		[Token(Token = "0x1700040E")]
		public BSPNode RootNode
		{
			[Token(Token = "0x60022BE")]
			[Address(RVA = "0xD713F0", Offset = "0xD713F0", VA = "0xD713F0")]
			get
			{
				return default(BSPNode);
			}
		}

		[Token(Token = "0x60022BD")]
		[Address(RVA = "0xD71280", Offset = "0xD71280", VA = "0xD71280")]
		public BSPDungeonGraphQuery(Guid rootNode, BSPNode[] nodes)
		{
		}

		[Token(Token = "0x60022BF")]
		[Address(RVA = "0xD713F8", Offset = "0xD713F8", VA = "0xD713F8")]
		public BSPNode GetNode(Guid nodeId)
		{
			return default(BSPNode);
		}

		[Token(Token = "0x60022C0")]
		[Address(RVA = "0xD71478", Offset = "0xD71478", VA = "0xD71478")]
		public BSPNode[] GetChildren(Guid nodeId)
		{
			return null;
		}

		[Token(Token = "0x60022C1")]
		[Address(RVA = "0xD715BC", Offset = "0xD715BC", VA = "0xD715BC")]
		public BSPNode GetParent(Guid nodeId)
		{
			return default(BSPNode);
		}
	}
	[Token(Token = "0x20004FB")]
	public class BSPDungeonModel : DungeonModel
	{
		[Token(Token = "0x4001C14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public BSPDungeonConfig Config;

		[Token(Token = "0x4001C15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public Guid rootNode;

		[Token(Token = "0x4001C16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		public BSPNode[] nodes;

		[Token(Token = "0x4001C17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		public BSPNodeConnection[] connections;

		[Token(Token = "0x60022C2")]
		[Address(RVA = "0xD715FC", Offset = "0xD715FC", VA = "0xD715FC")]
		public BSPDungeonGraphQuery CreateGraphQuery()
		{
			return null;
		}

		[Token(Token = "0x60022C3")]
		[Address(RVA = "0xD71674", Offset = "0xD71674", VA = "0xD71674", Slot = "4")]
		public override void ResetModel()
		{
		}

		[Token(Token = "0x60022C4")]
		[Address(RVA = "0xD71714", Offset = "0xD71714", VA = "0xD71714")]
		public BSPDungeonModel()
		{
		}
	}
}
namespace DungeonArchitect.Builders.Snap
{
	[Token(Token = "0x20004FC")]
	public class CellMarkerState
	{
		[Token(Token = "0x4001C18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public HashSet<string> GroundTiles;

		[Token(Token = "0x4001C19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public HashSet<string> EdgeTileX;

		[Token(Token = "0x4001C1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HashSet<string> EdgeTileY;

		[Token(Token = "0x4001C1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public HashSet<string> EdgeTileZ;

		[Token(Token = "0x4001C1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public HashSet<string> CornerTiles;

		[Token(Token = "0x60022C5")]
		[Address(RVA = "0xC8557C", Offset = "0xC8557C", VA = "0xC8557C")]
		public CellMarkerState()
		{
		}
	}
	[Token(Token = "0x20004FD")]
	public class ModuleMarkerRegsitry
	{
		[Token(Token = "0x4001C1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Dictionary<IntVector, CellMarkerState> MarkerStates;

		[Token(Token = "0x60022C6")]
		[Address(RVA = "0xC858A4", Offset = "0xC858A4", VA = "0xC858A4")]
		public CellMarkerState GetState(IntVector position)
		{
			return null;
		}

		[Token(Token = "0x60022C7")]
		[Address(RVA = "0xC85988", Offset = "0xC85988", VA = "0xC85988")]
		public ModuleMarkerRegsitry()
		{
		}
	}
	[Token(Token = "0x20004FE")]
	public class SnapModuleEditorData
	{
		[Token(Token = "0x4001C1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public IntVector cursorPosition;

		[Token(Token = "0x4001C1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int brushSize;

		[Token(Token = "0x4001C20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Matrix4x4 worldToCamera;

		[Token(Token = "0x60022C8")]
		[Address(RVA = "0xC89EC8", Offset = "0xC89EC8", VA = "0xC89EC8")]
		public SnapModuleEditorData()
		{
		}
	}
	[Token(Token = "0x20004FF")]
	public class SnapModule : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000894")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B8FF0", Offset = "0x8B8FF0")]
		private sealed class <>c
		{
			[Token(Token = "0x4002A15")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002A16")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<SnapGizmoRenderCommand, float> <>9__4_0;

			[Token(Token = "0x6003082")]
			[Address(RVA = "0xC89FF8", Offset = "0xC89FF8", VA = "0xC89FF8")]
			public <>c()
			{
			}

			[Token(Token = "0x6003083")]
			[Address(RVA = "0xC8A000", Offset = "0xC8A000", VA = "0xC8A000")]
			internal float <RenderScene>b__4_0(SnapGizmoRenderCommand o)
			{
				return default(float);
			}
		}

		[Token(Token = "0x4001C21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C1238", Offset = "0x8C1238")]
		public UnityEngine.Vector3 GridCellSize;

		[Token(Token = "0x4001C22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SnapModuleEditorData EditorData;

		[Token(Token = "0x4001C23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public ModuleMarkerRegsitry MarkerRegistry;

		[Token(Token = "0x60022C9")]
		[Address(RVA = "0xC89650", Offset = "0xC89650", VA = "0xC89650")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x60022CA")]
		[Address(RVA = "0xC89654", Offset = "0xC89654", VA = "0xC89654")]
		private void RenderScene()
		{
		}

		[Token(Token = "0x60022CB")]
		[Address(RVA = "0xC89B40", Offset = "0xC89B40", VA = "0xC89B40")]
		private SnapGizmoRenderCommandTile CreateTileRenderCommand(UnityEngine.Vector3 worldPosition)
		{
			return null;
		}

		[Token(Token = "0x60022CC")]
		[Address(RVA = "0xC89C08", Offset = "0xC89C08", VA = "0xC89C08")]
		private void DrawCursor()
		{
		}

		[Token(Token = "0x60022CD")]
		[Address(RVA = "0xC89C54", Offset = "0xC89C54", VA = "0xC89C54")]
		private void DrawTile(IntVector position, Color color)
		{
		}

		[Token(Token = "0x60022CE")]
		[Address(RVA = "0xC89E0C", Offset = "0xC89E0C", VA = "0xC89E0C")]
		public SnapModule()
		{
		}
	}
	[Token(Token = "0x2000500")]
	internal abstract class SnapGizmoRenderCommand
	{
		[Token(Token = "0x4001C24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float DistanceToCamera;

		[Token(Token = "0x4001C25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public UnityEngine.Vector3 worldPosition;

		[Token(Token = "0x60022CF")]
		public abstract void Draw(SnapModule module);

		[Token(Token = "0x60022D0")]
		[Address(RVA = "0xC893DC", Offset = "0xC893DC", VA = "0xC893DC")]
		public void CalculateDistanceToCamera(Matrix4x4 worldToCamera)
		{
		}

		[Token(Token = "0x60022D1")]
		[Address(RVA = "0xC8942C", Offset = "0xC8942C", VA = "0xC8942C")]
		protected SnapGizmoRenderCommand()
		{
		}
	}
	[Token(Token = "0x2000501")]
	internal class SnapGizmoRenderCommandTile : SnapGizmoRenderCommand
	{
		[Token(Token = "0x4001C26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Color drawColor;

		[Token(Token = "0x4001C27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool drawWireframe;

		[Token(Token = "0x60022D2")]
		[Address(RVA = "0xC89434", Offset = "0xC89434", VA = "0xC89434", Slot = "4")]
		public override void Draw(SnapModule module)
		{
		}

		[Token(Token = "0x60022D3")]
		[Address(RVA = "0xC895A4", Offset = "0xC895A4", VA = "0xC895A4")]
		public SnapGizmoRenderCommandTile()
		{
		}
	}
	[Token(Token = "0x2000502")]
	public class SnapBuilder : DungeonBuilder
	{
		[Token(Token = "0x2000895")]
		private delegate void VisitTreeNodeDelegate(ModuleBuildNode Node);

		[Token(Token = "0x2000896")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B9000", Offset = "0x8B9000")]
		private sealed class <>c__DisplayClass6_0
		{
			[Token(Token = "0x4002A17")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public DungeonSceneProvider sceneProvider;

			[Token(Token = "0x4002A18")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public IDungeonSceneObjectInstantiator objectInstantiator;

			[Token(Token = "0x6003088")]
			[Address(RVA = "0xC8657C", Offset = "0xC8657C", VA = "0xC8657C")]
			public <>c__DisplayClass6_0()
			{
			}
		}

		[Token(Token = "0x2000897")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B9010", Offset = "0x8B9010")]
		private sealed class <>c__DisplayClass6_1
		{
			[Token(Token = "0x4002A19")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public List<SnapModuleInstance> spawnedModuleList;

			[Token(Token = "0x4002A1A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public <>c__DisplayClass6_0 CS$<>8__locals1;

			[Token(Token = "0x6003089")]
			[Address(RVA = "0xC86F68", Offset = "0xC86F68", VA = "0xC86F68")]
			public <>c__DisplayClass6_1()
			{
			}

			[Token(Token = "0x600308A")]
			[Address(RVA = "0xC89010", Offset = "0xC89010", VA = "0xC89010")]
			internal void <BuildNonThemedDungeon>b__0(ModuleBuildNode Node)
			{
			}
		}

		[Token(Token = "0x2000898")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B9020", Offset = "0x8B9020")]
		private sealed class <>c__DisplayClass6_2
		{
			[Token(Token = "0x4002A1B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public List<SnapModuleConnection> connectionList;

			[Token(Token = "0x600308B")]
			[Address(RVA = "0xC8713C", Offset = "0xC8713C", VA = "0xC8713C")]
			public <>c__DisplayClass6_2()
			{
			}

			[Token(Token = "0x600308C")]
			[Address(RVA = "0xC891F4", Offset = "0xC891F4", VA = "0xC891F4")]
			internal void <BuildNonThemedDungeon>b__1(ModuleBuildNode Node)
			{
			}
		}

		[Token(Token = "0x2000899")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B9030", Offset = "0x8B9030")]
		private sealed class <>c__DisplayClass8_0
		{
			[Token(Token = "0x4002A1C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Dictionary<GameObject, SnapConnection[]> moduleConnections;

			[Token(Token = "0x600308D")]
			[Address(RVA = "0xC87664", Offset = "0xC87664", VA = "0xC87664")]
			public <>c__DisplayClass8_0()
			{
			}

			[Token(Token = "0x600308E")]
			[Address(RVA = "0xC892D0", Offset = "0xC892D0", VA = "0xC892D0")]
			internal void <FixupDoorStates>b__0(ModuleBuildNode node)
			{
			}
		}

		[Token(Token = "0x4001C28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private SnapConfig snapConfig;

		[Token(Token = "0x4001C29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private SnapModel snapModel;

		[Token(Token = "0x4001C2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private new System.Random random;

		[Token(Token = "0x60022D4")]
		[Address(RVA = "0xC85CF0", Offset = "0xC85CF0", VA = "0xC85CF0", Slot = "4")]
		public override void BuildDungeon(DungeonConfig config, DungeonModel model)
		{
		}

		[Token(Token = "0x60022D5")]
		[Address(RVA = "0xC85D24", Offset = "0xC85D24", VA = "0xC85D24", Slot = "11")]
		public override void EmitMarkers()
		{
		}

		[Token(Token = "0x60022D6")]
		[Address(RVA = "0xC85D44", Offset = "0xC85D44", VA = "0xC85D44", Slot = "7")]
		public override bool IsThemingSupported()
		{
			return default(bool);
		}

		[Token(Token = "0x60022D7")]
		[Address(RVA = "0xC85D4C", Offset = "0xC85D4C", VA = "0xC85D4C", Slot = "8")]
		public override void BuildNonThemedDungeon(DungeonSceneProvider sceneProvider, IDungeonSceneObjectInstantiator objectInstantiator)
		{
		}

		[Token(Token = "0x60022D8")]
		private T GetArrayEntry<T>(int index, T[] array) where T : class
		{
			return null;
		}

		[Token(Token = "0x60022D9")]
		[Address(RVA = "0xC87144", Offset = "0xC87144", VA = "0xC87144")]
		private void FixupDoorStates(ModuleBuildNode rootNode)
		{
		}

		[Token(Token = "0x60022DA")]
		[Address(RVA = "0xC86F80", Offset = "0xC86F80", VA = "0xC86F80")]
		private void TraverseTree(ModuleBuildNode RootNode, VisitTreeNodeDelegate VisitTreeNode)
		{
		}

		[Token(Token = "0x60022DB")]
		[Address(RVA = "0xC87A00", Offset = "0xC87A00", VA = "0xC87A00")]
		private static void CalculateOccupiedBounds(ModuleBuildNode Node, List<Bounds> OccupiedBounds)
		{
		}

		[Token(Token = "0x60022DC")]
		[Address(RVA = "0xC87B40", Offset = "0xC87B40", VA = "0xC87B40")]
		private static Bounds GetBounds(GameObject target)
		{
			return default(Bounds);
		}

		[Token(Token = "0x60022DD")]
		[Address(RVA = "0xC87C70", Offset = "0xC87C70", VA = "0xC87C70")]
		private void FindConnectionTransforms(SnapModuleEntry moduleEntry, out Matrix4x4[] outTransforms, out string[] outCategories)
		{
		}

		[Token(Token = "0x60022DE")]
		[Address(RVA = "0xC86584", Offset = "0xC86584", VA = "0xC86584")]
		private ModuleInfo GenerateModuleInfo(SnapModuleEntry modulePrefab)
		{
			return null;
		}

		[Token(Token = "0x60022DF")]
		[Address(RVA = "0xC87F58", Offset = "0xC87F58", VA = "0xC87F58")]
		private void DebugLog(string name, ref Matrix4x4 Transform)
		{
		}

		[Token(Token = "0x60022E0")]
		[Address(RVA = "0xC88158", Offset = "0xC88158", VA = "0xC88158", Slot = "13")]
		protected virtual Matrix4x4[] FindAttachmentTransforms(ref Matrix4x4 ParentModuleTransform, ref Matrix4x4 IncomingDoorTransform, ref Matrix4x4 AttachmentDoorTransform)
		{
			return null;
		}

		[Token(Token = "0x60022E1")]
		[Address(RVA = "0xC885D8", Offset = "0xC885D8", VA = "0xC885D8")]
		private bool FindAttachmentConfiguration(ModuleInfo TargetModule, ModuleInfo IncomingModule, ref Matrix4x4 IncomingModuleTransform, int IncomingDoorIndex, HashSet<Bounds> OccupiedBounds, ref SnapAttachmentConfiguration OutAttachmentConfig)
		{
			return default(bool);
		}

		[Token(Token = "0x60022E2")]
		[Address(RVA = "0xC88BFC", Offset = "0xC88BFC", VA = "0xC88BFC")]
		private int[] FindFilteredModuleList(List<ModuleInfo> ModuleInfoList, string category)
		{
			return null;
		}

		[Token(Token = "0x60022E3")]
		[Address(RVA = "0xC88D08", Offset = "0xC88D08", VA = "0xC88D08", Slot = "9")]
		public override void DebugDraw()
		{
		}

		[Token(Token = "0x60022E4")]
		[Address(RVA = "0xC86ABC", Offset = "0xC86ABC", VA = "0xC86ABC")]
		private ModuleBuildNode BuildLayoutRecursive(ModuleGrowthNode GrowthNode, ref HashSet<Bounds> _OccupiedBounds, RuntimeGraphNode<GrammarRuntimeGraphNodeData> graphNode, SnapLayoutBuildState RecursiveState)
		{
			return null;
		}

		[Token(Token = "0x60022E5")]
		[Address(RVA = "0xC85CEC", Offset = "0xC85CEC", VA = "0xC85CEC")]
		public SnapBuilder()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000503")]
	public class SnapModuleEntry
	{
		[Token(Token = "0x4001C2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		public GameObject module;

		[Token(Token = "0x4001C2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public string category;

		[Token(Token = "0x60022E6")]
		[Address(RVA = "0xC8A018", Offset = "0xC8A018", VA = "0xC8A018")]
		public SnapModuleEntry()
		{
		}
	}
	[Token(Token = "0x2000504")]
	public class SnapConfig : DungeonConfig
	{
		[Token(Token = "0x4001C2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C1290", Offset = "0x8C1290")]
		public SnapModuleEntry[] Modules;

		[Token(Token = "0x4001C2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C12C8", Offset = "0x8C12C8")]
		public DungeonFlowAsset dungeonFlow;

		[Token(Token = "0x4001C2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C1300", Offset = "0x8C1300")]
		public bool runGraphGenerationScripts;

		[Token(Token = "0x4001C30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C1338", Offset = "0x8C1338")]
		public bool RotateModulesToFit;

		[Token(Token = "0x4001C31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C1370", Offset = "0x8C1370")]
		public float CollisionTestContraction;

		[Token(Token = "0x4001C32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C13A8", Offset = "0x8C13A8")]
		public int MaxProcessingPower;

		[Token(Token = "0x60022E7")]
		[Address(RVA = "0xC893BC", Offset = "0xC893BC", VA = "0xC893BC")]
		public SnapConfig()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000505")]
	public class SnapModuleInstance
	{
		[Token(Token = "0x4001C33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string InstanceID;

		[Token(Token = "0x4001C34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Matrix4x4 WorldTransform;

		[Token(Token = "0x4001C35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Bounds WorldBounds;

		[Token(Token = "0x60022E8")]
		[Address(RVA = "0xC891EC", Offset = "0xC891EC", VA = "0xC891EC")]
		public SnapModuleInstance()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000506")]
	public class SnapModuleConnection
	{
		[Token(Token = "0x4001C36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string ModuleAInstanceID;

		[Token(Token = "0x4001C37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int DoorAIndex;

		[Token(Token = "0x4001C38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string ModuleBInstanceID;

		[Token(Token = "0x4001C39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int DoorBIndex;

		[Token(Token = "0x60022E9")]
		[Address(RVA = "0xC892C8", Offset = "0xC892C8", VA = "0xC892C8")]
		public SnapModuleConnection()
		{
		}
	}
	[Token(Token = "0x2000507")]
	public class SnapModel : DungeonModel
	{
		[Token(Token = "0x4001C3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public SnapModuleInstance[] modules;

		[Token(Token = "0x4001C3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public SnapModuleConnection[] connections;

		[Token(Token = "0x60022EA")]
		[Address(RVA = "0xC895D8", Offset = "0xC895D8", VA = "0xC895D8", Slot = "4")]
		public override void ResetModel()
		{
		}

		[Token(Token = "0x60022EB")]
		[Address(RVA = "0xC89648", Offset = "0xC89648", VA = "0xC89648")]
		public SnapModel()
		{
		}
	}
}
namespace DungeonArchitect.Builders.Snap.SideScroller
{
	[Token(Token = "0x2000508")]
	public class SnapSideScrollerBuilder : SnapBuilder
	{
		[Token(Token = "0x60022EC")]
		[Address(RVA = "0xC859F8", Offset = "0xC859F8", VA = "0xC859F8", Slot = "13")]
		protected override Matrix4x4[] FindAttachmentTransforms(ref Matrix4x4 ParentModuleTransform, ref Matrix4x4 IncomingDoorTransform, ref Matrix4x4 AttachmentDoorTransform)
		{
			return null;
		}

		[Token(Token = "0x60022ED")]
		[Address(RVA = "0xC85CE8", Offset = "0xC85CE8", VA = "0xC85CE8")]
		public SnapSideScrollerBuilder()
		{
		}
	}
}
namespace DungeonArchitect.Builders.Snap.Impl
{
	[Token(Token = "0x2000509")]
	internal class ModuleInfo
	{
		[Token(Token = "0x4001C3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SnapModuleEntry ModuleTemplate;

		[Token(Token = "0x4001C3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Guid ModuleGuid;

		[Token(Token = "0x4001C3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Bounds Bounds;

		[Token(Token = "0x4001C3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Matrix4x4[] ConnectionTransforms;

		[Token(Token = "0x4001C40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string[] ConnectionCategory;

		[Token(Token = "0x60022EE")]
		[Address(RVA = "0xC85814", Offset = "0xC85814", VA = "0xC85814")]
		public ModuleInfo()
		{
		}
	}
	[Token(Token = "0x200050A")]
	internal class SnapAttachmentConfiguration
	{
		[Token(Token = "0x4001C41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ModuleInfo AttachedModule;

		[Token(Token = "0x4001C42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int AttachedModuleDoorIndex;

		[Token(Token = "0x4001C43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Bounds AttachedModuleWorldBounds;

		[Token(Token = "0x4001C44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Matrix4x4 AttachedModuleTransform;

		[Token(Token = "0x60022EF")]
		[Address(RVA = "0xC8581C", Offset = "0xC8581C", VA = "0xC8581C")]
		public SnapAttachmentConfiguration()
		{
		}
	}
	[Token(Token = "0x200050B")]
	internal class ModuleGrowthNode
	{
		[Token(Token = "0x4001C45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Matrix4x4 ModuleTransform;

		[Token(Token = "0x4001C46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public ModuleInfo IncomingModule;

		[Token(Token = "0x4001C47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public int IncomingModuleDoorIndex;

		[Token(Token = "0x4001C48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public bool startNode;

		[Token(Token = "0x60022F0")]
		[Address(RVA = "0xC85778", Offset = "0xC85778", VA = "0xC85778")]
		public ModuleGrowthNode()
		{
		}
	}
	[Token(Token = "0x200050C")]
	internal class ModuleBuildNode
	{
		[Token(Token = "0x4001C49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string ModuleInstanceID;

		[Token(Token = "0x4001C4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ModuleInfo Module;

		[Token(Token = "0x4001C4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int IncomingDoorIndex;

		[Token(Token = "0x4001C4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SnapAttachmentConfiguration AttachmentConfig;

		[Token(Token = "0x4001C4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int DepthFromLeaf;

		[Token(Token = "0x4001C4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public List<ModuleBuildNode> Extensions;

		[Token(Token = "0x4001C4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public ModuleBuildNode Parent;

		[Token(Token = "0x4001C50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public GameObject spawnedModule;

		[Token(Token = "0x60022F1")]
		[Address(RVA = "0xC85654", Offset = "0xC85654", VA = "0xC85654")]
		public static string GenerateModuleInstanceID(Guid ModuleGuid)
		{
			return null;
		}

		[Token(Token = "0x60022F2")]
		[Address(RVA = "0xC856C4", Offset = "0xC856C4", VA = "0xC856C4")]
		public ModuleBuildNode()
		{
		}
	}
	[Token(Token = "0x200050D")]
	internal class SnapLayoutBuildState
	{
		[Token(Token = "0x4001C51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool bSafetyBailOut;

		[Token(Token = "0x4001C52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int NumTries;

		[Token(Token = "0x4001C53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool bFoundBestBuild;

		[Token(Token = "0x4001C54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<ModuleInfo> ModuleInfoList;

		[Token(Token = "0x60022F3")]
		[Address(RVA = "0xC85824", Offset = "0xC85824", VA = "0xC85824")]
		public SnapLayoutBuildState()
		{
		}
	}
}
namespace DungeonArchitect.Builders.SimpleCity
{
	[Token(Token = "0x200050E")]
	public enum SimpleCityLandscapeTextureType
	{
		[Token(Token = "0x4001C56")]
		Road,
		[Token(Token = "0x4001C57")]
		Park,
		[Token(Token = "0x4001C58")]
		CityWallPadding
	}
	[Serializable]
	[Token(Token = "0x200050F")]
	public class SimpleCityLandscapeTexture
	{
		[Token(Token = "0x4001C59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SimpleCityLandscapeTextureType textureType;

		[Token(Token = "0x4001C5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TerrainLayer terrainLayer;

		[Token(Token = "0x4001C5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AnimationCurve curve;

		[Token(Token = "0x60022F4")]
		[Address(RVA = "0xC849C0", Offset = "0xC849C0", VA = "0xC849C0")]
		public SimpleCityLandscapeTexture()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000510")]
	public class SimpleCityFoliageEntry
	{
		[Token(Token = "0x4001C5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int grassIndex;

		[Token(Token = "0x4001C5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float density;

		[Token(Token = "0x60022F5")]
		[Address(RVA = "0xC849A8", Offset = "0xC849A8", VA = "0xC849A8")]
		public SimpleCityFoliageEntry()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000511")]
	public class SimpleCityFoliageTheme
	{
		[Token(Token = "0x4001C5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SimpleCityLandscapeTextureType textureType;

		[Token(Token = "0x4001C5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SimpleCityFoliageEntry[] foliageEntries;

		[Token(Token = "0x4001C60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AnimationCurve curve;

		[Token(Token = "0x4001C61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float density;

		[Token(Token = "0x60022F6")]
		[Address(RVA = "0xC849B0", Offset = "0xC849B0", VA = "0xC849B0")]
		public SimpleCityFoliageTheme()
		{
		}
	}
	[Token(Token = "0x2000512")]
	public class LandscapeTransformerCity : LandscapeTransformerBase
	{
		[Token(Token = "0x4001C62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public SimpleCityLandscapeTexture[] textures;

		[Token(Token = "0x4001C63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public SimpleCityFoliageTheme[] foliage;

		[Token(Token = "0x4001C64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public int roadBlurDistance;

		[Token(Token = "0x4001C65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float corridorBlurThreshold;

		[Token(Token = "0x4001C66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float roomBlurThreshold;

		[Token(Token = "0x4001C67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float flatten;

		[Token(Token = "0x4001C68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public int blendingUnits;

		[Token(Token = "0x4001C69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public AnimationCurve smoothingCurve;

		[Token(Token = "0x60022F7")]
		[Address(RVA = "0xC7F07C", Offset = "0xC7F07C", VA = "0xC7F07C", Slot = "10")]
		protected override void BuildTerrain(DungeonModel model)
		{
		}

		[Token(Token = "0x60022F8")]
		[Address(RVA = "0xC7F37C", Offset = "0xC7F37C", VA = "0xC7F37C")]
		private void UpdateHeights(SimpleCityDungeonModel model)
		{
		}

		[Token(Token = "0x60022F9")]
		[Address(RVA = "0xC7F97C", Offset = "0xC7F97C", VA = "0xC7F97C")]
		private void RemoveFoliageFromBaseLayout(SimpleCityDungeonModel model)
		{
		}

		[Token(Token = "0x60022FA")]
		[Address(RVA = "0xC7FBA0", Offset = "0xC7FBA0", VA = "0xC7FBA0", Slot = "11")]
		protected override Rect GetDungeonBounds(DungeonModel model)
		{
			return default(Rect);
		}

		[Token(Token = "0x60022FB")]
		[Address(RVA = "0xC7F73C", Offset = "0xC7F73C", VA = "0xC7F73C")]
		private Rect GetDungeonBounds(DungeonModel model, int extraPadding)
		{
			return default(Rect);
		}

		[Token(Token = "0x60022FC")]
		[Address(RVA = "0xC7F198", Offset = "0xC7F198", VA = "0xC7F198")]
		private void SetupTextures()
		{
		}

		[Token(Token = "0x60022FD")]
		[Address(RVA = "0xC7F5EC", Offset = "0xC7F5EC", VA = "0xC7F5EC")]
		private void UpdateTerrainTextures(SimpleCityDungeonModel model)
		{
		}

		[Token(Token = "0x60022FE")]
		[Address(RVA = "0xC7FBA8", Offset = "0xC7FBA8", VA = "0xC7FBA8")]
		private void UpdateBaseTexture(SimpleCityDungeonModel model, float[,,] map)
		{
		}

		[Token(Token = "0x60022FF")]
		[Address(RVA = "0xC80C24", Offset = "0xC80C24", VA = "0xC80C24")]
		private int GetTextureIndex(SimpleCityLandscapeTextureType textureType)
		{
			return default(int);
		}

		[Token(Token = "0x6002300")]
		[Address(RVA = "0xC80DA4", Offset = "0xC80DA4", VA = "0xC80DA4")]
		public LandscapeTransformerCity()
		{
		}
	}
	[Token(Token = "0x2000513")]
	internal class SimpleCityDungeonConstants
	{
		[Token(Token = "0x4001C6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly string House;

		[Token(Token = "0x4001C6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static readonly string Park;

		[Token(Token = "0x4001C6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static readonly string Road_X;

		[Token(Token = "0x4001C6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static readonly string Road_T;

		[Token(Token = "0x4001C6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static readonly string Road_Corner;

		[Token(Token = "0x4001C6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static readonly string Road_S;

		[Token(Token = "0x4001C70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public static readonly string Road_E;

		[Token(Token = "0x4001C71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public static readonly string Road;

		[Token(Token = "0x4001C72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public static readonly string WallMarkerName;

		[Token(Token = "0x4001C73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public static readonly string DoorMarkerName;

		[Token(Token = "0x4001C74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public static readonly string GroundMarkerName;

		[Token(Token = "0x4001C75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public static readonly string CornerTowerMarkerName;

		[Token(Token = "0x4001C76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public static readonly string WallPaddingMarkerName;

		[Token(Token = "0x6002301")]
		[Address(RVA = "0xC847E0", Offset = "0xC847E0", VA = "0xC847E0")]
		public SimpleCityDungeonConstants()
		{
		}
	}
	[Token(Token = "0x2000514")]
	public class SimpleCityDungeonBuilder : DungeonBuilder
	{
		[Token(Token = "0x200089A")]
		private delegate void InsertHouseDelegate();

		[Token(Token = "0x200089B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B9040", Offset = "0x8B9040")]
		private sealed class <>c__DisplayClass6_0
		{
			[Token(Token = "0x4002A1D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int x;

			[Token(Token = "0x4002A1E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public SimpleCityDungeonBuilder <>4__this;

			[Token(Token = "0x6003093")]
			[Address(RVA = "0xC82D4C", Offset = "0xC82D4C", VA = "0xC82D4C")]
			public <>c__DisplayClass6_0()
			{
			}
		}

		[Token(Token = "0x200089C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B9050", Offset = "0x8B9050")]
		private sealed class <>c__DisplayClass6_1
		{
			[Token(Token = "0x4002A1F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int z;

			[Token(Token = "0x4002A20")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public <>c__DisplayClass6_0 CS$<>8__locals1;

			[Token(Token = "0x6003094")]
			[Address(RVA = "0xC82D54", Offset = "0xC82D54", VA = "0xC82D54")]
			public <>c__DisplayClass6_1()
			{
			}
		}

		[Token(Token = "0x200089D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B9060", Offset = "0x8B9060")]
		private sealed class <>c__DisplayClass6_2
		{
			[Token(Token = "0x4002A21")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public CityBlockDimension blockDimension;

			[Token(Token = "0x4002A22")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public <>c__DisplayClass6_1 CS$<>8__locals2;

			[Token(Token = "0x6003095")]
			[Address(RVA = "0xC82D5C", Offset = "0xC82D5C", VA = "0xC82D5C")]
			public <>c__DisplayClass6_2()
			{
			}
		}

		[Token(Token = "0x200089E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B9070", Offset = "0x8B9070")]
		private sealed class <>c__DisplayClass6_3
		{
			[Token(Token = "0x4002A23")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int BlockWidth;

			[Token(Token = "0x4002A24")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public int BlockHeight;

			[Token(Token = "0x4002A25")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public <>c__DisplayClass6_2 CS$<>8__locals3;

			[Token(Token = "0x6003096")]
			[Address(RVA = "0xC82D64", Offset = "0xC82D64", VA = "0xC82D64")]
			public <>c__DisplayClass6_3()
			{
			}

			[Token(Token = "0x6003097")]
			[Address(RVA = "0xC84598", Offset = "0xC84598", VA = "0xC84598")]
			internal void <GenerateCityLayout>b__0()
			{
			}

			[Token(Token = "0x6003098")]
			[Address(RVA = "0xC8466C", Offset = "0xC8466C", VA = "0xC8466C")]
			internal void <GenerateCityLayout>b__1()
			{
			}
		}

		[Token(Token = "0x4001C77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private SimpleCityDungeonConfig cityConfig;

		[Token(Token = "0x4001C78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private SimpleCityDungeonModel cityModel;

		[Token(Token = "0x4001C79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private new System.Random random;

		[Token(Token = "0x6002303")]
		[Address(RVA = "0xC813A0", Offset = "0xC813A0", VA = "0xC813A0", Slot = "4")]
		public override void BuildDungeon(DungeonConfig config, DungeonModel model)
		{
		}

		[Token(Token = "0x6002304")]
		[Address(RVA = "0xC81CE8", Offset = "0xC81CE8", VA = "0xC81CE8", Slot = "11")]
		public override void EmitMarkers()
		{
		}

		[Token(Token = "0x6002305")]
		[Address(RVA = "0xC81590", Offset = "0xC81590", VA = "0xC81590")]
		private void GenerateCityLayout()
		{
		}

		[Token(Token = "0x6002306")]
		[Address(RVA = "0xC83228", Offset = "0xC83228", VA = "0xC83228")]
		private void RemoveRoadEdge(int x, int z)
		{
		}

		[Token(Token = "0x6002307")]
		[Address(RVA = "0xC835A8", Offset = "0xC835A8", VA = "0xC835A8")]
		private bool IsStraightRoad(int x, int z)
		{
			return default(bool);
		}

		[Token(Token = "0x6002308")]
		[Address(RVA = "0xC82C98", Offset = "0xC82C98", VA = "0xC82C98")]
		private void RemoveRoadEdges()
		{
		}

		[Token(Token = "0x6002309")]
		[Address(RVA = "0xC8314C", Offset = "0xC8314C", VA = "0xC8314C")]
		private SimpleCityCell CreateCell(int x, int z, SimpleCityCellType cellType)
		{
			return null;
		}

		[Token(Token = "0x600230A")]
		[Address(RVA = "0xC83688", Offset = "0xC83688", VA = "0xC83688")]
		private SimpleCityCellType GetCellType(int x, int z)
		{
			return default(SimpleCityCellType);
		}

		[Token(Token = "0x600230B")]
		[Address(RVA = "0xC82F88", Offset = "0xC82F88", VA = "0xC82F88")]
		private void FaceHouseTowardsRoad(SimpleCityCell cell)
		{
		}

		[Token(Token = "0x600230C")]
		[Address(RVA = "0xC8376C", Offset = "0xC8376C", VA = "0xC8376C")]
		private bool CanContainBiggerHouse(int x, int z, int w, int h)
		{
			return default(bool);
		}

		[Token(Token = "0x600230D")]
		[Address(RVA = "0xC838D0", Offset = "0xC838D0", VA = "0xC838D0")]
		private bool IsConnectedToRoad(int x, int z, int w, int h)
		{
			return default(bool);
		}

		[Token(Token = "0x600230E")]
		[Address(RVA = "0xC83C90", Offset = "0xC83C90", VA = "0xC83C90")]
		private void InsertBiggerHouse(int x, int z, int w, int h, float Angle, string markerName)
		{
		}

		[Token(Token = "0x600230F")]
		[Address(RVA = "0xC82AD8", Offset = "0xC82AD8", VA = "0xC82AD8")]
		private void MakeRoad(int x, int z, bool horizontal)
		{
		}

		[Token(Token = "0x6002310")]
		[Address(RVA = "0xC81D50", Offset = "0xC81D50", VA = "0xC81D50")]
		private void EmitCityMarkers()
		{
		}

		[Token(Token = "0x6002311")]
		[Address(RVA = "0xC822EC", Offset = "0xC822EC", VA = "0xC822EC")]
		private void EmitBoundaryMarkers()
		{
		}

		[Token(Token = "0x6002312")]
		[Address(RVA = "0xC83F50", Offset = "0xC83F50", VA = "0xC83F50")]
		private void EmitWallMarker(UnityEngine.Vector3 cellSize, float x, float z, float angle)
		{
		}

		[Token(Token = "0x6002313")]
		[Address(RVA = "0xC83E98", Offset = "0xC83E98", VA = "0xC83E98")]
		private void EmitDoorMarker(UnityEngine.Vector3 cellSize, float x, float z, float angle)
		{
		}

		[Token(Token = "0x6002314")]
		[Address(RVA = "0xC8425C", Offset = "0xC8425C", VA = "0xC8425C")]
		private void EmitGroundMarker(int sizeX, int sizeZ, UnityEngine.Vector3 cellSize)
		{
		}

		[Token(Token = "0x6002315")]
		[Address(RVA = "0xC84008", Offset = "0xC84008", VA = "0xC84008")]
		private void EmitMarkerAt(UnityEngine.Vector3 cellSize, string markerName, float x, float z, float angle)
		{
		}

		[Token(Token = "0x6002316")]
		[Address(RVA = "0xC82A3C", Offset = "0xC82A3C", VA = "0xC82A3C")]
		private Quaternion GetRandomRotation()
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6002317")]
		[Address(RVA = "0xC82C64", Offset = "0xC82C64", VA = "0xC82C64")]
		private int GetRandomBlockSize()
		{
			return default(int);
		}

		[Token(Token = "0x6002318")]
		[Address(RVA = "0xC84504", Offset = "0xC84504", VA = "0xC84504")]
		public SimpleCityDungeonBuilder()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000515")]
	public struct CityBlockDimension
	{
		[Token(Token = "0x4001C7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C1400", Offset = "0x8C1400")]
		public string markerName;

		[Token(Token = "0x4001C7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C1438", Offset = "0x8C1438")]
		public int sizeX;

		[Token(Token = "0x4001C7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C1470", Offset = "0x8C1470")]
		public int sizeZ;

		[Token(Token = "0x4001C7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C14A8", Offset = "0x8C14A8")]
		public float probability;
	}
	[Token(Token = "0x2000516")]
	public class SimpleCityDungeonConfig : DungeonConfig
	{
		[Token(Token = "0x4001C7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UnityEngine.Vector2 CellSize;

		[Token(Token = "0x4001C7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int minSize;

		[Token(Token = "0x4001C80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int maxSize;

		[Token(Token = "0x4001C81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int minBlockSize;

		[Token(Token = "0x4001C82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public int maxBlockSize;

		[Token(Token = "0x4001C83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float biggerHouseProbability;

		[Token(Token = "0x4001C84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public int cityWallPadding;

		[Token(Token = "0x4001C85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public int cityDoorSize;

		[Token(Token = "0x4001C86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float roadEdgeRemovalProbability;

		[Token(Token = "0x4001C87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public CityBlockDimension[] customBlockDimensions;

		[Token(Token = "0x4001C88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public int roadWidth;

		[Token(Token = "0x6002319")]
		[Address(RVA = "0xC8477C", Offset = "0xC8477C", VA = "0xC8477C")]
		public SimpleCityDungeonConfig()
		{
		}
	}
	[Token(Token = "0x2000517")]
	public enum SimpleCityCellType
	{
		[Token(Token = "0x4001C8A")]
		Road,
		[Token(Token = "0x4001C8B")]
		House,
		[Token(Token = "0x4001C8C")]
		Park,
		[Token(Token = "0x4001C8D")]
		CityWallPadding,
		[Token(Token = "0x4001C8E")]
		UserDefined,
		[Token(Token = "0x4001C8F")]
		Empty
	}
	[Token(Token = "0x2000518")]
	public class SimpleCityCell
	{
		[Token(Token = "0x4001C90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public IntVector Position;

		[Token(Token = "0x4001C91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public SimpleCityCellType CellType;

		[Token(Token = "0x4001C92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Quaternion Rotation;

		[Token(Token = "0x4001C93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public UnityEngine.Vector3 BlockSize;

		[Token(Token = "0x4001C94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string MarkerNameOverride;

		[Token(Token = "0x600231A")]
		[Address(RVA = "0xC81340", Offset = "0xC81340", VA = "0xC81340")]
		public SimpleCityCell()
		{
		}
	}
	[Token(Token = "0x2000519")]
	public class SimpleCityDungeonModel : DungeonModel
	{
		[Token(Token = "0x4001C95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public SimpleCityCell[,] Cells;

		[Token(Token = "0x4001C96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public SimpleCityCell[] WallPaddingCells;

		[Token(Token = "0x4001C97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public SimpleCityDungeonConfig Config;

		[Token(Token = "0x4001C98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		public int CityWidth;

		[Token(Token = "0x4001C99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[HideInInspector]
		public int CityHeight;

		[Token(Token = "0x600231B")]
		[Address(RVA = "0xC84938", Offset = "0xC84938", VA = "0xC84938")]
		public SimpleCityDungeonModel()
		{
		}
	}
	[Token(Token = "0x200051A")]
	public class RoadBeautifier
	{
		[Token(Token = "0x600231C")]
		[Address(RVA = "0xC80DC8", Offset = "0xC80DC8", VA = "0xC80DC8")]
		public static string GetRoadMarkerName(int x, int z, SimpleCityCell[,] cells, out float angle)
		{
			return null;
		}

		[Token(Token = "0x600231D")]
		[Address(RVA = "0xC810A8", Offset = "0xC810A8", VA = "0xC810A8")]
		private static bool MatchesConfig(int x, int z, SimpleCityCell[,] cells, out float angle, params int[] neighbors)
		{
			return default(bool);
		}

		[Token(Token = "0x600231E")]
		[Address(RVA = "0xC81274", Offset = "0xC81274", VA = "0xC81274")]
		private static bool ContainsRoad(int x, int z, SimpleCityCell[,] cells)
		{
			return default(bool);
		}

		[Token(Token = "0x600231F")]
		[Address(RVA = "0xC81338", Offset = "0xC81338", VA = "0xC81338")]
		public RoadBeautifier()
		{
		}
	}
	[Token(Token = "0x200051B")]
	public class StrongholdWallEmitter : DungeonMarkerEmitter
	{
		[Token(Token = "0x4001C9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int padding;

		[Token(Token = "0x4001C9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int doorSize;

		[Token(Token = "0x4001C9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string WallMarkerName;

		[Token(Token = "0x4001C9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string DoorMarkerName;

		[Token(Token = "0x4001C9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string GroundMarkerName;

		[Token(Token = "0x4001C9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string CornerTowerMarkerName;

		[Token(Token = "0x4001CA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string WallPaddingMarkerName;

		[Token(Token = "0x6002320")]
		[Address(RVA = "0xC84AC0", Offset = "0xC84AC0", VA = "0xC84AC0", Slot = "4")]
		public override void EmitMarkers(DungeonBuilder builder)
		{
		}

		[Token(Token = "0x6002321")]
		[Address(RVA = "0xC84FEC", Offset = "0xC84FEC", VA = "0xC84FEC")]
		private void EmitWallMarker(DungeonBuilder builder, UnityEngine.Vector3 cellSize, float x, float z, float angle)
		{
		}

		[Token(Token = "0x6002322")]
		[Address(RVA = "0xC84FE4", Offset = "0xC84FE4", VA = "0xC84FE4")]
		private void EmitDoorMarker(DungeonBuilder builder, UnityEngine.Vector3 cellSize, float x, float z, float angle)
		{
		}

		[Token(Token = "0x6002323")]
		[Address(RVA = "0xC85268", Offset = "0xC85268", VA = "0xC85268")]
		private void EmitGroundMarker(DungeonBuilder builder, int sizeX, int sizeZ, UnityEngine.Vector3 cellSize)
		{
		}

		[Token(Token = "0x6002324")]
		[Address(RVA = "0xC84FF4", Offset = "0xC84FF4", VA = "0xC84FF4")]
		private void EmitMarkerAt(DungeonBuilder builder, UnityEngine.Vector3 cellSize, string markerName, float x, float z, float angle)
		{
		}

		[Token(Token = "0x6002325")]
		[Address(RVA = "0xC854D4", Offset = "0xC854D4", VA = "0xC854D4")]
		public StrongholdWallEmitter()
		{
		}
	}
}
namespace DungeonArchitect.Builders.SimpleCity.SpatialConstraints
{
	[Token(Token = "0x200051C")]
	public class SpatialConstraintProcessorSimpleCity3D : SpatialConstraintProcessor
	{
		[Token(Token = "0x6002326")]
		[Address(RVA = "0xC849C8", Offset = "0xC849C8", VA = "0xC849C8", Slot = "4")]
		public override SpatialConstraintRuleDomain GetDomain(SpatialConstraintProcessorContext context)
		{
			return null;
		}

		[Token(Token = "0x6002327")]
		[Address(RVA = "0xC84AB8", Offset = "0xC84AB8", VA = "0xC84AB8")]
		public SpatialConstraintProcessorSimpleCity3D()
		{
		}
	}
}
namespace DungeonArchitect.Builders.Maze
{
	[Token(Token = "0x200051D")]
	public class MazeDungeonConstants
	{
		[Token(Token = "0x4001CA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly string GroundBlock;

		[Token(Token = "0x4001CA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static readonly string WallBlock;

		[Token(Token = "0x6002328")]
		[Address(RVA = "0xC7EFF0", Offset = "0xC7EFF0", VA = "0xC7EFF0")]
		public MazeDungeonConstants()
		{
		}
	}
	[Token(Token = "0x200051E")]
	public class MazeDungeonBuilder : DungeonBuilder
	{
		[Token(Token = "0x4001CA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private MazeDungeonConfig MazeConfig;

		[Token(Token = "0x4001CA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private MazeDungeonModel MazeModel;

		[Token(Token = "0x4001CA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private new System.Random random;

		[Token(Token = "0x600232A")]
		[Address(RVA = "0xE4044C", Offset = "0xE4044C", VA = "0xE4044C", Slot = "4")]
		public override void BuildDungeon(DungeonConfig config, DungeonModel model)
		{
		}

		[Token(Token = "0x600232B")]
		[Address(RVA = "0xE408F0", Offset = "0xE408F0", VA = "0xE408F0", Slot = "11")]
		public override void EmitMarkers()
		{
		}

		[Token(Token = "0x600232C")]
		[Address(RVA = "0xE40C4C", Offset = "0xE40C4C", VA = "0xE40C4C")]
		private bool IsVisited(bool[,] visited, int x, int y)
		{
			return default(bool);
		}

		[Token(Token = "0x600232D")]
		[Address(RVA = "0xE40D0C", Offset = "0xE40D0C", VA = "0xE40D0C")]
		private bool CanDigToPoint(IntVector2 point, bool[,] visited)
		{
			return default(bool);
		}

		[Token(Token = "0x600232E")]
		[Address(RVA = "0xE40DC0", Offset = "0xE40DC0", VA = "0xE40DC0")]
		private bool GetNextNeighbor(IntVector2 currentPoint, out IntVector2 nextPoint, bool[,] visited)
		{
			return default(bool);
		}

		[Token(Token = "0x600232F")]
		[Address(RVA = "0xE40570", Offset = "0xE40570", VA = "0xE40570")]
		private void GenerateLevelLayout()
		{
		}

		[Token(Token = "0x6002330")]
		[Address(RVA = "0xE40924", Offset = "0xE40924", VA = "0xE40924")]
		private void EmitLevelMarkers()
		{
		}

		[Token(Token = "0x6002331")]
		[Address(RVA = "0xE40FE4", Offset = "0xE40FE4", VA = "0xE40FE4")]
		public MazeDungeonBuilder()
		{
		}
	}
	[Token(Token = "0x200051F")]
	public class MazeDungeonConfig : DungeonConfig
	{
		[Token(Token = "0x4001CA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int mazeWidth;

		[Token(Token = "0x4001CA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int mazeHeight;

		[Token(Token = "0x4001CA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UnityEngine.Vector2 gridSize;

		[Token(Token = "0x6002332")]
		[Address(RVA = "0xC7EF94", Offset = "0xC7EF94", VA = "0xC7EF94")]
		public MazeDungeonConfig()
		{
		}
	}
	[Token(Token = "0x2000520")]
	public enum MazeTileState
	{
		[Token(Token = "0x4001CAA")]
		Empty,
		[Token(Token = "0x4001CAB")]
		Blocked
	}
	[Token(Token = "0x2000521")]
	public class MazeDungeonModel : DungeonModel
	{
		[Token(Token = "0x4001CAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public MazeDungeonConfig Config;

		[Token(Token = "0x4001CAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public MazeTileState[,] tileStates;

		[Token(Token = "0x6002333")]
		[Address(RVA = "0xC7F06C", Offset = "0xC7F06C", VA = "0xC7F06C")]
		public MazeDungeonModel()
		{
		}
	}
}
namespace DungeonArchitect.Builders.Mario
{
	[Token(Token = "0x2000522")]
	internal class MarioDungeonConstants
	{
		[Token(Token = "0x4001CAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly string Ground;

		[Token(Token = "0x4001CAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static readonly string WallFront;

		[Token(Token = "0x4001CB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static readonly string WallBack;

		[Token(Token = "0x4001CB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static readonly string WallSide;

		[Token(Token = "0x4001CB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static readonly string BackgroundGround;

		[Token(Token = "0x4001CB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static readonly string BackgroundCeiling;

		[Token(Token = "0x4001CB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public static readonly string BackgroundWall;

		[Token(Token = "0x4001CB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public static readonly string Stair;

		[Token(Token = "0x4001CB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public static readonly string Corridor;

		[Token(Token = "0x6002334")]
		[Address(RVA = "0xE402D4", Offset = "0xE402D4", VA = "0xE402D4")]
		public MarioDungeonConstants()
		{
		}
	}
	[Token(Token = "0x2000523")]
	public class MarioDungeonBuilder : DungeonBuilder
	{
		[Token(Token = "0x4001CB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private MarioDungeonConfig marioConfig;

		[Token(Token = "0x4001CB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private MarioDungeonModel marioModel;

		[Token(Token = "0x4001CB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private new System.Random random;

		[Token(Token = "0x6002336")]
		[Address(RVA = "0xE3E244", Offset = "0xE3E244", VA = "0xE3E244", Slot = "4")]
		public override void BuildDungeon(DungeonConfig config, DungeonModel model)
		{
		}

		[Token(Token = "0x6002337")]
		[Address(RVA = "0xE3EA14", Offset = "0xE3EA14", VA = "0xE3EA14", Slot = "11")]
		public override void EmitMarkers()
		{
		}

		[Token(Token = "0x6002338")]
		[Address(RVA = "0xE3E368", Offset = "0xE3E368", VA = "0xE3E368")]
		private void GenerateLevelLayout()
		{
		}

		[Token(Token = "0x6002339")]
		[Address(RVA = "0xE3EA48", Offset = "0xE3EA48", VA = "0xE3EA48")]
		private void EmitLevelMarkers()
		{
		}

		[Token(Token = "0x600233A")]
		[Address(RVA = "0xE40234", Offset = "0xE40234", VA = "0xE40234")]
		public MarioDungeonBuilder()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000524")]
	public class MarioDungeonLevelChunkRule
	{
		[Token(Token = "0x4001CBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int numTiles;

		[Token(Token = "0x4001CBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string markerName;

		[Token(Token = "0x4001CBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float probablity;

		[Token(Token = "0x600233B")]
		[Address(RVA = "0xE403DC", Offset = "0xE403DC", VA = "0xE403DC")]
		public MarioDungeonLevelChunkRule()
		{
		}
	}
	[Token(Token = "0x2000525")]
	public class MarioDungeonConfig : DungeonConfig
	{
		[Token(Token = "0x4001CBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int minLength;

		[Token(Token = "0x4001CBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int maxLength;

		[Token(Token = "0x4001CBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int minY;

		[Token(Token = "0x4001CC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int maxY;

		[Token(Token = "0x4001CC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int minDepth;

		[Token(Token = "0x4001CC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public int maxDepth;

		[Token(Token = "0x4001CC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int minGap;

		[Token(Token = "0x4001CC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public int maxGap;

		[Token(Token = "0x4001CC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public int minNonGap;

		[Token(Token = "0x4001CC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public int maxStairHeight;

		[Token(Token = "0x4001CC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float heightVariationProbablity;

		[Token(Token = "0x4001CC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float gapProbability;

		[Token(Token = "0x4001CC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public int maxJumpTileDistance;

		[Token(Token = "0x4001CCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public UnityEngine.Vector3 gridSize;

		[Token(Token = "0x4001CCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public MarioDungeonLevelChunkRule[] chunkMarkers;

		[Token(Token = "0x600233C")]
		[Address(RVA = "0xE4023C", Offset = "0xE4023C", VA = "0xE4023C")]
		public MarioDungeonConfig()
		{
		}
	}
	[Token(Token = "0x2000526")]
	public enum MarioTileType
	{
		[Token(Token = "0x4001CCD")]
		Ground,
		[Token(Token = "0x4001CCE")]
		Corridor,
		[Token(Token = "0x4001CCF")]
		Gap
	}
	[Token(Token = "0x2000527")]
	public class MarioTile
	{
		[Token(Token = "0x4001CD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public IntVector position;

		[Token(Token = "0x4001CD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public MarioTileType tileType;

		[Token(Token = "0x4001CD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string[] chunkMarkers;

		[Token(Token = "0x600233D")]
		[Address(RVA = "0xE4022C", Offset = "0xE4022C", VA = "0xE4022C")]
		public MarioTile()
		{
		}
	}
	[Token(Token = "0x2000528")]
	public class MarioDungeonModel : DungeonModel
	{
		[Token(Token = "0x4001CD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public MarioDungeonConfig Config;

		[Token(Token = "0x4001CD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public MarioTile[] tiles;

		[Token(Token = "0x4001CD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public int levelWidth;

		[Token(Token = "0x600233E")]
		[Address(RVA = "0xE40444", Offset = "0xE40444", VA = "0xE40444")]
		public MarioDungeonModel()
		{
		}
	}
}
namespace DungeonArchitect.Builders.Isaac
{
	[Token(Token = "0x2000529")]
	public class IsaacDungeonBuilder : DungeonBuilder
	{
		[Token(Token = "0x200089F")]
		private struct LevelGrowthNode
		{
			[Token(Token = "0x4002A26")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public IsaacRoom room;

			[Token(Token = "0x4002A27")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int moveDirection;
		}

		[Token(Token = "0x4001CD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private IsaacDungeonConfig isaacConfig;

		[Token(Token = "0x4001CD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private IsaacDungeonModel isaacModel;

		[Token(Token = "0x4001CD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private new System.Random random;

		[Token(Token = "0x4001CD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private List<IsaacRoom> rooms;

		[Token(Token = "0x4001CDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private List<IsaacDoor> doors;

		[Token(Token = "0x4001CDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private IntVector[] directions;

		[Token(Token = "0x600233F")]
		[Address(RVA = "0xE3C1E4", Offset = "0xE3C1E4", VA = "0xE3C1E4", Slot = "4")]
		public override void BuildDungeon(DungeonConfig config, DungeonModel model)
		{
		}

		[Token(Token = "0x6002340")]
		[Address(RVA = "0xE3C72C", Offset = "0xE3C72C", VA = "0xE3C72C", Slot = "11")]
		public override void EmitMarkers()
		{
		}

		[Token(Token = "0x6002341")]
		[Address(RVA = "0xE3C308", Offset = "0xE3C308", VA = "0xE3C308")]
		private void GenerateLevelLayout()
		{
		}

		[Token(Token = "0x6002342")]
		[Address(RVA = "0xE3CDCC", Offset = "0xE3CDCC", VA = "0xE3CDCC")]
		private void AddNextRoomNode(IsaacRoomFactory roomFactory, Queue<LevelGrowthNode> queue, HashSet<IntVector> visited, int maxRooms, IsaacRoom parentRoom, int direction, float probability)
		{
		}

		[Token(Token = "0x6002343")]
		[Address(RVA = "0xE3D0E4", Offset = "0xE3D0E4", VA = "0xE3D0E4")]
		private void ConnectRoomsWithDoors(IsaacRoom roomA, IsaacRoom roomB)
		{
		}

		[Token(Token = "0x6002344")]
		[Address(RVA = "0xE3D188", Offset = "0xE3D188", VA = "0xE3D188")]
		private IsaacRoom GetRoomAt(IntVector position)
		{
			return null;
		}

		[Token(Token = "0x6002345")]
		[Address(RVA = "0xE3D2D4", Offset = "0xE3D2D4", VA = "0xE3D2D4")]
		private bool ContainsDoorBetween(int roomA, int roomB)
		{
			return default(bool);
		}

		[Token(Token = "0x6002346")]
		[Address(RVA = "0xE3D408", Offset = "0xE3D408", VA = "0xE3D408")]
		private void CreateDoor(IsaacRoom roomA, IsaacRoom roomB, float ratio)
		{
		}

		[Token(Token = "0x6002347")]
		[Address(RVA = "0xE3D608", Offset = "0xE3D608", VA = "0xE3D608")]
		private bool IsWall(int x, int z, IsaacRoomLayout layout)
		{
			return default(bool);
		}

		[Token(Token = "0x6002348")]
		[Address(RVA = "0xE3D01C", Offset = "0xE3D01C", VA = "0xE3D01C")]
		private void GenerateRoomLayout(IsaacRoomLayoutBuilder layoutBuilder, IsaacRoom room)
		{
		}

		[Token(Token = "0x6002349")]
		[Address(RVA = "0xE3D6B0", Offset = "0xE3D6B0", VA = "0xE3D6B0")]
		private IsaacRoomLayout GenerateEmptyRoomLayout()
		{
			return null;
		}

		[Token(Token = "0x600234A")]
		[Address(RVA = "0xE3C760", Offset = "0xE3C760", VA = "0xE3C760")]
		private void EmitLevelMarkers()
		{
		}

		[Token(Token = "0x600234B")]
		[Address(RVA = "0xE3D8C8", Offset = "0xE3D8C8", VA = "0xE3D8C8")]
		public IsaacDungeonBuilder()
		{
		}
	}
	[Token(Token = "0x200052A")]
	internal class IsaacRoomFactory
	{
		[Token(Token = "0x4001CDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int idCounter;

		[Token(Token = "0x600234C")]
		[Address(RVA = "0xE3CD40", Offset = "0xE3CD40", VA = "0xE3CD40")]
		public IsaacRoom CreateRoom(IntVector position)
		{
			return null;
		}

		[Token(Token = "0x600234D")]
		[Address(RVA = "0xE3CD38", Offset = "0xE3CD38", VA = "0xE3CD38")]
		public IsaacRoomFactory()
		{
		}
	}
	[Token(Token = "0x200052B")]
	public class IsaacDungeonConfig : DungeonConfig
	{
		[Token(Token = "0x4001CDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int minRooms;

		[Token(Token = "0x4001CDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int maxRooms;

		[Token(Token = "0x4001CDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int roomWidth;

		[Token(Token = "0x4001CE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int roomHeight;

		[Token(Token = "0x4001CE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public UnityEngine.Vector2 tileSize;

		[Token(Token = "0x4001CE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public UnityEngine.Vector2 roomPadding;

		[Token(Token = "0x4001CE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float growForwardProbablity;

		[Token(Token = "0x4001CE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float growSidewaysProbablity;

		[Token(Token = "0x4001CE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float spawnRoomBranchProbablity;

		[Token(Token = "0x4001CE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float cycleProbability;

		[Token(Token = "0x600234E")]
		[Address(RVA = "0xE3DA88", Offset = "0xE3DA88", VA = "0xE3DA88")]
		public IsaacDungeonConfig()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200052C")]
	public class IsaacRoom
	{
		[Token(Token = "0x4001CE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[HideInInspector]
		public int roomId;

		[Token(Token = "0x4001CE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[HideInInspector]
		public IntVector position;

		[Token(Token = "0x4001CE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public IsaacRoomLayout layout;

		[Token(Token = "0x4001CEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public List<int> adjacentRooms;

		[Token(Token = "0x4001CEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public List<IntVector> doorPositions;

		[Token(Token = "0x600234F")]
		[Address(RVA = "0xE3DB24", Offset = "0xE3DB24", VA = "0xE3DB24")]
		public IsaacRoom()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200052D")]
	public class IsaacDoor
	{
		[Token(Token = "0x4001CEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[HideInInspector]
		public int roomA;

		[Token(Token = "0x4001CED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[HideInInspector]
		public int roomB;

		[Token(Token = "0x4001CEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public float ratio;

		[Token(Token = "0x6002350")]
		[Address(RVA = "0xE3C1D4", Offset = "0xE3C1D4", VA = "0xE3C1D4")]
		public IsaacDoor()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200052E")]
	public class IsaacRoomLayout
	{
		[Token(Token = "0x4001CEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[HideInInspector]
		public IsaacRoomTile[,] Tiles;

		[Token(Token = "0x6002351")]
		[Address(RVA = "0xE3D79C", Offset = "0xE3D79C", VA = "0xE3D79C")]
		public void InitializeTiles(int width, int height, IsaacRoomTileType tileType)
		{
		}

		[Token(Token = "0x6002352")]
		[Address(RVA = "0xE3D72C", Offset = "0xE3D72C", VA = "0xE3D72C")]
		public IsaacRoomLayout()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200052F")]
	public class IsaacRoomTile
	{
		[Token(Token = "0x4001CF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public IsaacRoomTileType tileType;

		[Token(Token = "0x6002353")]
		[Address(RVA = "0xE3C0B0", Offset = "0xE3C0B0", VA = "0xE3C0B0")]
		public IsaacRoomTile()
		{
		}
	}
	[Token(Token = "0x2000530")]
	public enum IsaacRoomTileType
	{
		[Token(Token = "0x4001CF2")]
		Floor,
		[Token(Token = "0x4001CF3")]
		Door,
		[Token(Token = "0x4001CF4")]
		Empty
	}
	[Token(Token = "0x2000531")]
	public class IsaacDungeonModel : DungeonModel
	{
		[Token(Token = "0x4001CF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public IsaacDungeonConfig config;

		[Token(Token = "0x4001CF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public IsaacRoom[] rooms;

		[Token(Token = "0x4001CF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public IsaacDoor[] doors;

		[Token(Token = "0x6002354")]
		[Address(RVA = "0xE3DB1C", Offset = "0xE3DB1C", VA = "0xE3DB1C")]
		public IsaacDungeonModel()
		{
		}
	}
	[Token(Token = "0x2000532")]
	public abstract class IsaacRoomLayoutBuilder : MonoBehaviour
	{
		[Token(Token = "0x6002355")]
		public abstract IsaacRoomLayout GenerateLayout(IsaacRoom room, System.Random random, int roomWidth, int roomHeight);

		[Token(Token = "0x6002356")]
		[Address(RVA = "0xE3DBBC", Offset = "0xE3DBBC", VA = "0xE3DBBC")]
		protected IsaacRoomLayoutBuilder()
		{
		}
	}
	[Token(Token = "0x2000533")]
	public class StylizedIsaacRoomLayoutBuilder : IsaacRoomLayoutBuilder
	{
		[Token(Token = "0x4001CF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int minBrushSize;

		[Token(Token = "0x4001CF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int maxBrushSize;

		[Token(Token = "0x6002357")]
		[Address(RVA = "0xE3DBC4", Offset = "0xE3DBC4", VA = "0xE3DBC4", Slot = "4")]
		public override IsaacRoomLayout GenerateLayout(IsaacRoom room, System.Random random, int roomWidth, int roomHeight)
		{
			return null;
		}

		[Token(Token = "0x6002358")]
		[Address(RVA = "0xE3DDF4", Offset = "0xE3DDF4", VA = "0xE3DDF4")]
		private void ConnectDoors(IsaacRoomLayout layout, IntVector doorA, IntVector doorB, int brushSize)
		{
		}

		[Token(Token = "0x6002359")]
		[Address(RVA = "0xE3E054", Offset = "0xE3E054", VA = "0xE3E054")]
		private void PaintTile(IsaacRoomLayout layout, int x, int z, int brushSize, IsaacRoomTileType tileType)
		{
		}

		[Token(Token = "0x600235A")]
		[Address(RVA = "0xE3E1B4", Offset = "0xE3E1B4", VA = "0xE3E1B4")]
		private void SetTile(IsaacRoomLayout layout, int x, int z, int width, int height, IsaacRoomTileType tileType)
		{
		}

		[Token(Token = "0x600235B")]
		[Address(RVA = "0xE3E230", Offset = "0xE3E230", VA = "0xE3E230")]
		public StylizedIsaacRoomLayoutBuilder()
		{
		}
	}
	[Token(Token = "0x2000534")]
	public class IsaacBuilderUtils
	{
		[Token(Token = "0x600235C")]
		[Address(RVA = "0xE3BFA4", Offset = "0xE3BFA4", VA = "0xE3BFA4")]
		public static IsaacRoomTile GetTileAt(int x, int z, IsaacRoomLayout layout)
		{
			return null;
		}

		[Token(Token = "0x600235D")]
		[Address(RVA = "0xE3C0B8", Offset = "0xE3C0B8", VA = "0xE3C0B8")]
		public static bool ContainsDoorAt(int x, int z, IsaacRoom room)
		{
			return default(bool);
		}

		[Token(Token = "0x600235E")]
		[Address(RVA = "0xE3C160", Offset = "0xE3C160", VA = "0xE3C160")]
		public static IsaacRoom GetRoom(IsaacDungeonModel model, int roomId)
		{
			return null;
		}

		[Token(Token = "0x600235F")]
		[Address(RVA = "0xE3C1CC", Offset = "0xE3C1CC", VA = "0xE3C1CC")]
		public IsaacBuilderUtils()
		{
		}
	}
}
namespace DungeonArchitect.Builders.Infinity.Caves
{
	[Token(Token = "0x2000535")]
	public class InfinityCaveChunkConstants
	{
		[Token(Token = "0x4001CFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly string GroundBlock;

		[Token(Token = "0x4001CFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static readonly string WallBlock;

		[Token(Token = "0x4001CFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static readonly string RockBlock;

		[Token(Token = "0x6002360")]
		[Address(RVA = "0xE3BF0C", Offset = "0xE3BF0C", VA = "0xE3BF0C")]
		public InfinityCaveChunkConstants()
		{
		}
	}
	[Token(Token = "0x2000536")]
	public class InfinityCaveChunkBuilder : DungeonBuilder
	{
		[Token(Token = "0x4001CFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private InfinityCaveChunkConfig chunkConfig;

		[Token(Token = "0x4001CFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private InfinityCaveChunkModel chunkModel;

		[Token(Token = "0x6002362")]
		[Address(RVA = "0xE3B1C8", Offset = "0xE3B1C8", VA = "0xE3B1C8", Slot = "4")]
		public override void BuildDungeon(DungeonConfig config, DungeonModel model)
		{
		}

		[Token(Token = "0x6002363")]
		[Address(RVA = "0xE3B774", Offset = "0xE3B774", VA = "0xE3B774", Slot = "11")]
		public override void EmitMarkers()
		{
		}

		[Token(Token = "0x6002364")]
		[Address(RVA = "0xE3B2BC", Offset = "0xE3B2BC", VA = "0xE3B2BC")]
		private void GenerateLevelLayout()
		{
		}

		[Token(Token = "0x6002365")]
		[Address(RVA = "0xE3BBCC", Offset = "0xE3BBCC", VA = "0xE3BBCC")]
		private bool[,] ApplyAutomata(bool[,] world)
		{
			return null;
		}

		[Token(Token = "0x6002366")]
		[Address(RVA = "0xE3B7A8", Offset = "0xE3B7A8", VA = "0xE3B7A8")]
		private void EmitLevelMarkers()
		{
		}

		[Token(Token = "0x6002367")]
		[Address(RVA = "0xE3BDDC", Offset = "0xE3BDDC", VA = "0xE3BDDC")]
		public InfinityCaveChunkBuilder()
		{
		}
	}
	[Token(Token = "0x2000537")]
	public class InfinityCaveChunkConfig : InfinityDungeonConfig
	{
		[Token(Token = "0x4001CFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public UnityEngine.Vector2 gridSize;

		[Token(Token = "0x4001D00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public int iterations;

		[Token(Token = "0x4001D01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public int neighborRocks;

		[Token(Token = "0x6002368")]
		[Address(RVA = "0xE3BDE4", Offset = "0xE3BDE4", VA = "0xE3BDE4", Slot = "5")]
		public override UnityEngine.Vector3 GetLogicalCoord(UnityEngine.Vector3 p)
		{
			return default(UnityEngine.Vector3);
		}

		[Token(Token = "0x6002369")]
		[Address(RVA = "0xE3BEA0", Offset = "0xE3BEA0", VA = "0xE3BEA0", Slot = "6")]
		public override bool BuildAlongX()
		{
			return default(bool);
		}

		[Token(Token = "0x600236A")]
		[Address(RVA = "0xE3BEA8", Offset = "0xE3BEA8", VA = "0xE3BEA8", Slot = "7")]
		public override bool BuildAlongY()
		{
			return default(bool);
		}

		[Token(Token = "0x600236B")]
		[Address(RVA = "0xE3BEB0", Offset = "0xE3BEB0", VA = "0xE3BEB0", Slot = "8")]
		public override bool BuildAlongZ()
		{
			return default(bool);
		}

		[Token(Token = "0x600236C")]
		[Address(RVA = "0xE3BEB8", Offset = "0xE3BEB8", VA = "0xE3BEB8")]
		public InfinityCaveChunkConfig()
		{
		}
	}
	[Token(Token = "0x2000538")]
	public enum MazeTileState
	{
		[Token(Token = "0x4001D03")]
		Empty,
		[Token(Token = "0x4001D04")]
		Rock,
		[Token(Token = "0x4001D05")]
		Wall
	}
	[Token(Token = "0x2000539")]
	public class InfinityCaveChunkModel : DungeonModel
	{
		[Token(Token = "0x4001D06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public InfinityCaveChunkConfig Config;

		[Token(Token = "0x4001D07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public MazeTileState[,] tileStates;

		[Token(Token = "0x600236D")]
		[Address(RVA = "0xE3BF9C", Offset = "0xE3BF9C", VA = "0xE3BF9C")]
		public InfinityCaveChunkModel()
		{
		}
	}
}
namespace DungeonArchitect.Builders.GridFlow
{
	[Token(Token = "0x200053A")]
	public class GridFlowDungeonBuilder : DungeonBuilder
	{
		[Token(Token = "0x4001D08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GridFlowDungeonConfig gridFlowConfig;

		[Token(Token = "0x4001D09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private GridFlowDungeonModel gridFlowModel;

		[Token(Token = "0x4001D0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private GridFlowExecNodeStates execNodeStates;

		[Token(Token = "0x1700040F")]
		public GridFlowExecNodeStates ExecNodeStates
		{
			[Token(Token = "0x600236E")]
			[Address(RVA = "0xE33070", Offset = "0xE33070", VA = "0xE33070")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600236F")]
		[Address(RVA = "0xE33078", Offset = "0xE33078", VA = "0xE33078", Slot = "4")]
		public override void BuildDungeon(DungeonConfig config, DungeonModel model)
		{
		}

		[Token(Token = "0x6002370")]
		[Address(RVA = "0xE334CC", Offset = "0xE334CC", VA = "0xE334CC", Slot = "11")]
		public override void EmitMarkers()
		{
		}

		[Token(Token = "0x6002371")]
		[Address(RVA = "0xE33268", Offset = "0xE33268", VA = "0xE33268")]
		private void GenerateLevelLayout()
		{
		}

		[Token(Token = "0x6002372")]
		[Address(RVA = "0xE35794", Offset = "0xE35794", VA = "0xE35794")]
		private bool IsCellOfType(GridFlowTilemap tilemap, int x, int y, GridFlowTilemapCellType[] types)
		{
			return default(bool);
		}

		[Token(Token = "0x6002373")]
		[Address(RVA = "0xE35888", Offset = "0xE35888", VA = "0xE35888")]
		private Quaternion GetBaseTransform(GridFlowTilemap tilemap, int x, int y)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6002374")]
		[Address(RVA = "0xE35A94", Offset = "0xE35A94", VA = "0xE35A94")]
		private string GetEdgeMarkerName(GridFlowTilemapEdgeType edgeType)
		{
			return null;
		}

		[Token(Token = "0x6002375")]
		[Address(RVA = "0xE35B88", Offset = "0xE35B88", VA = "0xE35B88")]
		private bool CreateLockItemMetadata(GridFlowItem item, ref string doorMarker, out GridFlowItemMetadata lockItemData)
		{
			return default(bool);
		}

		[Token(Token = "0x6002376")]
		[Address(RVA = "0xE33500", Offset = "0xE33500", VA = "0xE33500")]
		private void EmitLevelMarkers()
		{
		}

		[Token(Token = "0x6002377")]
		[Address(RVA = "0xE35D1C", Offset = "0xE35D1C", VA = "0xE35D1C", Slot = "9")]
		public override void DebugDraw()
		{
		}

		[Token(Token = "0x6002378")]
		[Address(RVA = "0xE35D20", Offset = "0xE35D20", VA = "0xE35D20")]
		public GridFlowDungeonBuilder()
		{
		}
	}
	[Token(Token = "0x200053B")]
	public class GridFlowDungeonConstants
	{
		[Token(Token = "0x4001D0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly string MarkerGround;

		[Token(Token = "0x4001D0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static readonly string MarkerWall;

		[Token(Token = "0x4001D0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static readonly string MarkerWallSeparator;

		[Token(Token = "0x4001D0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static readonly string MarkerFence;

		[Token(Token = "0x4001D0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static readonly string MarkerFenceSeparator;

		[Token(Token = "0x4001D10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static readonly string MarkerDoor;

		[Token(Token = "0x4001D11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public static readonly string MarkerDoorOneWay;

		[Token(Token = "0x6002379")]
		[Address(RVA = "0xE35E28", Offset = "0xE35E28", VA = "0xE35E28")]
		public GridFlowDungeonConstants()
		{
		}
	}
	[Token(Token = "0x200053C")]
	public class GridFlowDungeonConfig : DungeonConfig
	{
		[Token(Token = "0x4001D12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DungeonGridFlowAsset flowAsset;

		[Token(Token = "0x4001D13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UnityEngine.Vector3 gridSize;

		[Token(Token = "0x600237B")]
		[Address(RVA = "0xE35D28", Offset = "0xE35D28", VA = "0xE35D28", Slot = "4")]
		public override bool HasValidConfig(ref string errorMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x600237C")]
		[Address(RVA = "0xE35DC8", Offset = "0xE35DC8", VA = "0xE35DC8")]
		public GridFlowDungeonConfig()
		{
		}
	}
	[Token(Token = "0x200053D")]
	public class GridFlowDungeonModel : DungeonModel
	{
		[Token(Token = "0x4001D14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public GridFlowAbstractGraph abstractGraph;

		[Token(Token = "0x4001D15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public GridFlowTilemap tilemap;

		[Token(Token = "0x600237D")]
		[Address(RVA = "0xE35F08", Offset = "0xE35F08", VA = "0xE35F08")]
		public GridFlowDungeonModel()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200053E")]
	public class DungeonGridFlowAsset : ScriptableObject
	{
		[Token(Token = "0x4001D16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		[SerializeField]
		public GridFlowExecGraph execGraph;

		[Token(Token = "0x600237E")]
		[Address(RVA = "0xCD5D88", Offset = "0xCD5D88", VA = "0xCD5D88")]
		public DungeonGridFlowAsset()
		{
		}
	}
	[Token(Token = "0x200053F")]
	public class GridFlowExecutionContext
	{
		[Token(Token = "0x4001D17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C16B8", Offset = "0x8C16B8")]
		private System.Random <Random>k__BackingField;

		[Token(Token = "0x4001D18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C16C8", Offset = "0x8C16C8")]
		private GridFlowExecGraph <ExecGraph>k__BackingField;

		[Token(Token = "0x4001D19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C16D8", Offset = "0x8C16D8")]
		private GridFlowExecNodeStates <NodeStates>k__BackingField;

		[Token(Token = "0x4001D1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C16E8", Offset = "0x8C16E8")]
		private HashSet<GridFlowExecRuleGraphNode> <Visited>k__BackingField;

		[Token(Token = "0x17000410")]
		public System.Random Random
		{
			[Token(Token = "0x600237F")]
			[Address(RVA = "0xE35F10", Offset = "0xE35F10", VA = "0xE35F10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CB734", Offset = "0x8CB734")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002380")]
			[Address(RVA = "0xE35F18", Offset = "0xE35F18", VA = "0xE35F18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CB744", Offset = "0x8CB744")]
			set
			{
			}
		}

		[Token(Token = "0x17000411")]
		public GridFlowExecGraph ExecGraph
		{
			[Token(Token = "0x6002381")]
			[Address(RVA = "0xE35F20", Offset = "0xE35F20", VA = "0xE35F20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CB754", Offset = "0x8CB754")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002382")]
			[Address(RVA = "0xE35F28", Offset = "0xE35F28", VA = "0xE35F28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CB764", Offset = "0x8CB764")]
			set
			{
			}
		}

		[Token(Token = "0x17000412")]
		public GridFlowExecNodeStates NodeStates
		{
			[Token(Token = "0x6002383")]
			[Address(RVA = "0xE35F30", Offset = "0xE35F30", VA = "0xE35F30")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CB774", Offset = "0x8CB774")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002384")]
			[Address(RVA = "0xE35F38", Offset = "0xE35F38", VA = "0xE35F38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CB784", Offset = "0x8CB784")]
			set
			{
			}
		}

		[Token(Token = "0x17000413")]
		public HashSet<GridFlowExecRuleGraphNode> Visited
		{
			[Token(Token = "0x6002385")]
			[Address(RVA = "0xE35F40", Offset = "0xE35F40", VA = "0xE35F40")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CB794", Offset = "0x8CB794")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002386")]
			[Address(RVA = "0xE35F48", Offset = "0xE35F48", VA = "0xE35F48")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CB7A4", Offset = "0x8CB7A4")]
			private set
			{
			}
		}

		[Token(Token = "0x6002387")]
		[Address(RVA = "0xE35F50", Offset = "0xE35F50", VA = "0xE35F50")]
		public GridFlowExecutionContext()
		{
		}
	}
	[Token(Token = "0x2000540")]
	public class GridFlowExecutor
	{
		[Token(Token = "0x6002388")]
		[Address(RVA = "0xE355D8", Offset = "0xE355D8", VA = "0xE355D8")]
		public bool Execute(GridFlowExecGraph execGraph, System.Random random, int numTries, out GridFlowExecNodeStates nodeStates)
		{
			return default(bool);
		}

		[Token(Token = "0x6002389")]
		[Address(RVA = "0xE35FC4", Offset = "0xE35FC4", VA = "0xE35FC4")]
		private GridFlowExecNodeHandlerResultType ExecuteGraph(GridFlowExecutionContext context)
		{
			return default(GridFlowExecNodeHandlerResultType);
		}

		[Token(Token = "0x600238A")]
		[Address(RVA = "0xE36190", Offset = "0xE36190", VA = "0xE36190")]
		private GridFlowExecNodeHandlerResultType ExecuteNode(GridFlowExecutionContext context, GridFlowExecRuleGraphNode execNode)
		{
			return default(GridFlowExecNodeHandlerResultType);
		}

		[Token(Token = "0x600238B")]
		[Address(RVA = "0xE355D0", Offset = "0xE355D0", VA = "0xE355D0")]
		public GridFlowExecutor()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000541")]
	public enum GridFlowGraphItemType
	{
		[Token(Token = "0x4001D1C")]
		Key,
		[Token(Token = "0x4001D1D")]
		Lock,
		[Token(Token = "0x4001D1E")]
		Enemy,
		[Token(Token = "0x4001D1F")]
		Bonus,
		[Token(Token = "0x4001D20")]
		Entrace,
		[Token(Token = "0x4001D21")]
		Exit,
		[Token(Token = "0x4001D22")]
		Custom
	}
	[Serializable]
	[Token(Token = "0x2000542")]
	public class GridFlowItem
	{
		[Token(Token = "0x4001D23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Guid itemId;

		[Token(Token = "0x4001D24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GridFlowGraphItemType type;

		[Token(Token = "0x4001D25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string markerName;

		[Token(Token = "0x4001D26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public List<Guid> referencedItemIds;

		[Token(Token = "0x4001D27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool editorSelected;

		[Token(Token = "0x4001D28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GridFlowGraphItemCustomInfo customInfo;

		[Token(Token = "0x4001D29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public GridFlowItemPlacementSettings placementSettings;

		[Token(Token = "0x600238C")]
		[Address(RVA = "0xE36400", Offset = "0xE36400", VA = "0xE36400")]
		public GridFlowItem Clone()
		{
			return null;
		}

		[Token(Token = "0x600238D")]
		[Address(RVA = "0xE30898", Offset = "0xE30898", VA = "0xE30898")]
		public GridFlowItem()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000543")]
	public struct GridFlowGraphItemCustomInfo
	{
		[Token(Token = "0x4001D2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string itemType;

		[Token(Token = "0x4001D2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string text;

		[Token(Token = "0x4001D2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Color textColor;

		[Token(Token = "0x4001D2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Color backgroundColor;

		[Token(Token = "0x4001D2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly GridFlowGraphItemCustomInfo Default;

		[Token(Token = "0x600238E")]
		[Address(RVA = "0x980E60", Offset = "0x980E60", VA = "0x980E60")]
		public GridFlowGraphItemCustomInfo(string itemType, string text, Color textColor, Color backgroundColor)
		{
		}
	}
	[Token(Token = "0x2000544")]
	public class GridFlowItemMetadataComponent : MonoBehaviour
	{
		[Token(Token = "0x4001D2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GridFlowGraphItemType itemType;

		[Token(Token = "0x4001D30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string itemId;

		[Token(Token = "0x4001D31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string[] referencedItemIds;

		[Token(Token = "0x6002390")]
		[Address(RVA = "0xE364D4", Offset = "0xE364D4", VA = "0xE364D4")]
		public GridFlowItemMetadataComponent()
		{
		}
	}
	[Token(Token = "0x2000545")]
	[SerializeField]
	public class GridFlowItemMetadata
	{
		[Token(Token = "0x4001D32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GridFlowGraphItemType itemType;

		[Token(Token = "0x4001D33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public Guid itemId;

		[Token(Token = "0x4001D34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Guid[] referencedItems;

		[Token(Token = "0x6002391")]
		[Address(RVA = "0xE35C8C", Offset = "0xE35C8C", VA = "0xE35C8C")]
		public GridFlowItemMetadata()
		{
		}
	}
	[Token(Token = "0x2000546")]
	public class GridFlowItemMetadataHandler : DungeonItemSpawnListener
	{
		[Token(Token = "0x6002392")]
		private T FindOrAddComponent<T>(GameObject gameObject) where T : Component
		{
			return null;
		}

		[Token(Token = "0x6002393")]
		[Address(RVA = "0xE36534", Offset = "0xE36534", VA = "0xE36534", Slot = "4")]
		public override void SetMetadata(GameObject dungeonItem, DungeonNodeSpawnData spawnData)
		{
		}

		[Token(Token = "0x6002394")]
		[Address(RVA = "0xE366CC", Offset = "0xE366CC", VA = "0xE366CC")]
		public GridFlowItemMetadataHandler()
		{
		}
	}
	[Token(Token = "0x2000547")]
	public class GridFlowItemPlacementStrategyContext
	{
		[Token(Token = "0x4001D35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GridFlowTilemap tilemap;

		[Token(Token = "0x4001D36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GridFlowTilemapDistanceField distanceField;

		[Token(Token = "0x4001D37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public System.Random random;

		[Token(Token = "0x6002395")]
		[Address(RVA = "0xE366D4", Offset = "0xE366D4", VA = "0xE366D4")]
		public GridFlowItemPlacementStrategyContext()
		{
		}
	}
	[Token(Token = "0x2000548")]
	public interface IGridFlowItemPlacementStrategy
	{
		[Token(Token = "0x6002396")]
		bool PlaceItems(GridFlowItem item, GridFlowTilemapCell[] freeCells, GridFlowItemPlacementSettings settings, GridFlowItemPlacementStrategyContext context, ref int outFreeTileIndex, ref string errorMessage);
	}
	[Serializable]
	[Token(Token = "0x2000549")]
	public enum GridFlowItemPlacementMethod
	{
		[Token(Token = "0x4001D39")]
		RandomTile,
		[Token(Token = "0x4001D3A")]
		NearEdges,
		[Token(Token = "0x4001D3B")]
		Script
	}
	[Serializable]
	[Token(Token = "0x200054A")]
	public class GridFlowItemPlacementSettings
	{
		[Token(Token = "0x4001D3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GridFlowItemPlacementMethod placementMethod;

		[Token(Token = "0x4001D3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public bool avoidPlacingNextToDoors;

		[Token(Token = "0x4001D3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string placementScriptClass;

		[Token(Token = "0x4001D3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool fallbackToRandomPlacement;

		[Token(Token = "0x6002397")]
		[Address(RVA = "0xE30A28", Offset = "0xE30A28", VA = "0xE30A28")]
		public GridFlowItemPlacementSettings Clone()
		{
			return null;
		}

		[Token(Token = "0x6002398")]
		[Address(RVA = "0xE30D68", Offset = "0xE30D68", VA = "0xE30D68")]
		public GridFlowItemPlacementSettings()
		{
		}
	}
	[Token(Token = "0x200054B")]
	public class GridFlowItemPlacementStrategyFactory
	{
		[Token(Token = "0x6002399")]
		[Address(RVA = "0xE366DC", Offset = "0xE366DC", VA = "0xE366DC")]
		public static IGridFlowItemPlacementStrategy Create(GridFlowItemPlacementMethod method)
		{
			return null;
		}

		[Token(Token = "0x600239A")]
		[Address(RVA = "0xE3677C", Offset = "0xE3677C", VA = "0xE3677C")]
		public GridFlowItemPlacementStrategyFactory()
		{
		}
	}
	[Token(Token = "0x200054C")]
	public class GridFlowItemPlacementStrategyUtils
	{
		[Token(Token = "0x600239B")]
		[Address(RVA = "0xE3099C", Offset = "0xE3099C", VA = "0xE3099C")]
		public static bool Validate(GridFlowItemPlacementSettings settings, ref string errorMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x600239C")]
		[Address(RVA = "0xE36784", Offset = "0xE36784", VA = "0xE36784")]
		public GridFlowItemPlacementStrategyUtils()
		{
		}
	}
	[Token(Token = "0x200054D")]
	public class GridFlowItemPlacementStrategy_NearEdge : IGridFlowItemPlacementStrategy
	{
		[Token(Token = "0x600239D")]
		[Address(RVA = "0xE3678C", Offset = "0xE3678C", VA = "0xE3678C", Slot = "4")]
		public bool PlaceItems(GridFlowItem item, GridFlowTilemapCell[] freeCells, GridFlowItemPlacementSettings settings, GridFlowItemPlacementStrategyContext context, ref int outFreeTileIndex, ref string errorMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x600239E")]
		[Address(RVA = "0xE36764", Offset = "0xE36764", VA = "0xE36764")]
		public GridFlowItemPlacementStrategy_NearEdge()
		{
		}
	}
	[Token(Token = "0x200054E")]
	public class GridFlowItemPlacementStrategy_Random : IGridFlowItemPlacementStrategy
	{
		[Token(Token = "0x600239F")]
		[Address(RVA = "0xE369C8", Offset = "0xE369C8", VA = "0xE369C8", Slot = "4")]
		public bool PlaceItems(GridFlowItem item, GridFlowTilemapCell[] freeCells, GridFlowItemPlacementSettings settings, GridFlowItemPlacementStrategyContext context, ref int outFreeTileIndex, ref string errorMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x60023A0")]
		[Address(RVA = "0xE36774", Offset = "0xE36774", VA = "0xE36774")]
		public GridFlowItemPlacementStrategy_Random()
		{
		}
	}
	[Token(Token = "0x200054F")]
	public class GridFlowItemPlacementStrategy_Script : IGridFlowItemPlacementStrategy
	{
		[Token(Token = "0x60023A1")]
		[Address(RVA = "0xE36B84", Offset = "0xE36B84", VA = "0xE36B84", Slot = "4")]
		public bool PlaceItems(GridFlowItem item, GridFlowTilemapCell[] freeCells, GridFlowItemPlacementSettings settings, GridFlowItemPlacementStrategyContext context, ref int outFreeTileIndex, ref string errorMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x60023A2")]
		[Address(RVA = "0xE3676C", Offset = "0xE3676C", VA = "0xE3676C")]
		public GridFlowItemPlacementStrategy_Script()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000550")]
	public enum GridFlowMinimapInitMode
	{
		[Token(Token = "0x4001D41")]
		OnDungeonRebuild,
		[Token(Token = "0x4001D42")]
		OnPlay,
		[Token(Token = "0x4001D43")]
		Manual
	}
	[Serializable]
	[Token(Token = "0x2000551")]
	public struct GridFlowMinimapIcons
	{
		[Token(Token = "0x4001D44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Texture2D iconOneWayDoor;
	}
	[Token(Token = "0x2000552")]
	public class GridFlowMinimap : DungeonMiniMap
	{
		[Token(Token = "0x20008A0")]
		private struct FogOfWarItem
		{
			[Token(Token = "0x4002A28")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public UnityEngine.Vector2 position;

			[Token(Token = "0x4002A29")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public float radius;

			[Token(Token = "0x4002A2A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public float falloffStart;
		}

		[Serializable]
		[Token(Token = "0x20008A1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B9080", Offset = "0x8B9080")]
		private sealed class <>c
		{
			[Token(Token = "0x4002A2B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002A2C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<GridFlowTilemapCell, bool> <>9__17_0;

			[Token(Token = "0x4002A2D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<GridFlowMinimapTrackedObject, bool> <>9__21_0;

			[Token(Token = "0x600309A")]
			[Address(RVA = "0xE38C50", Offset = "0xE38C50", VA = "0xE38C50")]
			public <>c()
			{
			}

			[Token(Token = "0x600309B")]
			[Address(RVA = "0xE38C58", Offset = "0xE38C58", VA = "0xE38C58")]
			internal bool <UpdateStaticTexture>b__17_0(GridFlowTilemapCell cell)
			{
				return default(bool);
			}

			[Token(Token = "0x600309C")]
			[Address(RVA = "0xE38C60", Offset = "0xE38C60", VA = "0xE38C60")]
			internal bool <UpdateOverlayTexture>b__21_0(GridFlowMinimapTrackedObject trackedObject)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4001D45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Shader tileShader;

		[Token(Token = "0x4001D46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public GridFlowMinimapInitMode initMode;

		[Token(Token = "0x4001D47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public GridFlowMinimapIcons icons;

		[Token(Token = "0x4001D48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public bool seeThroughWalls;

		[Token(Token = "0x4001D49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private GridFlowTilemapRenderResources resources;

		[Token(Token = "0x4001D4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private GridFlowDungeonModel model;

		[Token(Token = "0x4001D4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private GridFlowDungeonConfig config;

		[Token(Token = "0x4001D4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private int tileSize;

		[Token(Token = "0x4001D4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private List<GridFlowMinimapTrackedObject> trackedObjects;

		[Token(Token = "0x4001D4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Color[] fogMask;

		[Token(Token = "0x17000414")]
		protected override bool SupportsFogOfWar
		{
			[Token(Token = "0x60023A3")]
			[Address(RVA = "0xE36D34", Offset = "0xE36D34", VA = "0xE36D34", Slot = "4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60023A4")]
		[Address(RVA = "0xE36D3C", Offset = "0xE36D3C", VA = "0xE36D3C")]
		private void Reset()
		{
		}

		[Token(Token = "0x60023A5")]
		[Address(RVA = "0xE36DB0", Offset = "0xE36DB0", VA = "0xE36DB0")]
		private void Awake()
		{
		}

		[Token(Token = "0x60023A6")]
		[Address(RVA = "0xE36DB4", Offset = "0xE36DB4", VA = "0xE36DB4")]
		private void Start()
		{
		}

		[Token(Token = "0x60023A7")]
		[Address(RVA = "0xE36DCC", Offset = "0xE36DCC", VA = "0xE36DCC")]
		public void AddTrackedObject(GridFlowMinimapTrackedObject trackedObject)
		{
		}

		[Token(Token = "0x60023A8")]
		[Address(RVA = "0xE36E34", Offset = "0xE36E34", VA = "0xE36E34", Slot = "5")]
		protected override void CreateTextures(IntVector2 desiredSize, out Texture staticImage, out Texture fogOfWar, out Texture overlayImage, out IntVector2 targetTextureSize)
		{
		}

		[Token(Token = "0x60023A9")]
		[Address(RVA = "0xE371F0", Offset = "0xE371F0", VA = "0xE371F0", Slot = "6")]
		protected override void UpdateStaticTexture(Texture texture)
		{
		}

		[Token(Token = "0x60023AA")]
		[Address(RVA = "0xE3772C", Offset = "0xE3772C", VA = "0xE3772C")]
		private IntVector2[] FogOfWarFilterVisibility(IntVector2[] tiles, IntVector2 player)
		{
			return null;
		}

		[Token(Token = "0x60023AB")]
		[Address(RVA = "0xE37A0C", Offset = "0xE37A0C", VA = "0xE37A0C", Slot = "7")]
		protected override void UpdateFogOfWarTexture(Texture texture)
		{
		}

		[Token(Token = "0x60023AC")]
		[Address(RVA = "0xE381D0", Offset = "0xE381D0", VA = "0xE381D0", Slot = "8")]
		protected override void UpdateOverlayTexture(Texture texture)
		{
		}

		[Token(Token = "0x60023AD")]
		[Address(RVA = "0xE388F4", Offset = "0xE388F4", VA = "0xE388F4")]
		private UnityEngine.Vector2 WorldToUVCoord(UnityEngine.Vector3 position, int tilemapWidth, int tilemapHeight, int textureWidth, int textureHeight)
		{
			return default(UnityEngine.Vector2);
		}

		[Token(Token = "0x60023AE")]
		[Address(RVA = "0xE38A10", Offset = "0xE38A10", VA = "0xE38A10")]
		private void EmitVertex(float cx, float cy, float x, float y, float u, float v, Color color, Quaternion rotation)
		{
		}

		[Token(Token = "0x60023AF")]
		[Address(RVA = "0xE38B6C", Offset = "0xE38B6C", VA = "0xE38B6C")]
		public GridFlowMinimap()
		{
		}
	}
	[Token(Token = "0x2000553")]
	public class GridFlowMinimapTrackedObject : MonoBehaviour
	{
		[Token(Token = "0x4001D4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Texture2D icon;

		[Token(Token = "0x4001D50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float iconScale;

		[Token(Token = "0x4001D51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool rotateIcon;

		[Token(Token = "0x4001D52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Color tint;

		[Token(Token = "0x4001D53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool exploresFogOfWar;

		[Token(Token = "0x4001D54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float fogOfWarNumTileRadius;

		[Token(Token = "0x4001D55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float fogOfWarLightFalloffStart;

		[Token(Token = "0x60023B0")]
		[Address(RVA = "0xE38CCC", Offset = "0xE38CCC", VA = "0xE38CCC")]
		private void Start()
		{
		}

		[Token(Token = "0x60023B1")]
		[Address(RVA = "0xE38D6C", Offset = "0xE38D6C", VA = "0xE38D6C")]
		public GridFlowMinimapTrackedObject()
		{
		}
	}
	[Token(Token = "0x2000554")]
	public class GridFlowDoorKeyComponent : MonoBehaviour
	{
		[Token(Token = "0x4001D56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string keyId;

		[Token(Token = "0x4001D57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string[] validLockIds;

		[Token(Token = "0x4001D58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GridFlowDoorLockComponent[] lockRefs;

		[Token(Token = "0x60023B2")]
		[Address(RVA = "0xE32F98", Offset = "0xE32F98", VA = "0xE32F98")]
		public GridFlowDoorKeyComponent()
		{
		}
	}
	[Token(Token = "0x2000555")]
	public class GridFlowDoorLockComponent : MonoBehaviour
	{
		[Token(Token = "0x4001D59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string lockId;

		[Token(Token = "0x4001D5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string[] validKeyIds;

		[Token(Token = "0x4001D5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GridFlowDoorKeyComponent[] validKeyRefs;

		[Token(Token = "0x60023B3")]
		[Address(RVA = "0xE32FF8", Offset = "0xE32FF8", VA = "0xE32FF8")]
		public GridFlowDoorLockComponent()
		{
		}
	}
}
namespace DungeonArchitect.Builders.GridFlow.Tilemap
{
	[Serializable]
	[Token(Token = "0x2000556")]
	public enum GridFlowTilemapCellType
	{
		[Token(Token = "0x4001D5D")]
		Empty,
		[Token(Token = "0x4001D5E")]
		Floor,
		[Token(Token = "0x4001D5F")]
		Wall,
		[Token(Token = "0x4001D60")]
		Door,
		[Token(Token = "0x4001D61")]
		Custom
	}
	[Serializable]
	[Token(Token = "0x2000557")]
	public enum GridFlowTilemapEdgeType
	{
		[Token(Token = "0x4001D63")]
		Empty,
		[Token(Token = "0x4001D64")]
		Wall,
		[Token(Token = "0x4001D65")]
		Fence,
		[Token(Token = "0x4001D66")]
		Door
	}
	[Serializable]
	[Token(Token = "0x2000558")]
	public class GridFlowTilemapCustomCellInfo
	{
		[Token(Token = "0x4001D67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x4001D68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Color defaultColor;

		[Token(Token = "0x60023B4")]
		[Address(RVA = "0xE3955C", Offset = "0xE3955C", VA = "0xE3955C", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x60023B5")]
		[Address(RVA = "0xE39588", Offset = "0xE39588", VA = "0xE39588")]
		public GridFlowTilemapCustomCellInfo()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000559")]
	public enum GridFlowTilemapCellCategory
	{
		[Token(Token = "0x4001D6A")]
		Layout,
		[Token(Token = "0x4001D6B")]
		Biome,
		[Token(Token = "0x4001D6C")]
		Elevation
	}
	[Serializable]
	[Token(Token = "0x200055A")]
	public class GridFlowTilemapCellOverlay
	{
		[Token(Token = "0x4001D6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string markerName;

		[Token(Token = "0x4001D6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Color color;

		[Token(Token = "0x4001D6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C16F8", Offset = "0x8C16F8")]
		private float <noiseValue>k__BackingField;

		[Token(Token = "0x4001D70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool tileBlockingOverlay;

		[Token(Token = "0x4001D71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GridFlowTilemapCellOverlayMergeConfig mergeConfig;

		[Token(Token = "0x17000415")]
		public float noiseValue
		{
			[Token(Token = "0x60023B6")]
			[Address(RVA = "0xE39390", Offset = "0xE39390", VA = "0xE39390")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CB7B4", Offset = "0x8CB7B4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60023B7")]
			[Address(RVA = "0xE39398", Offset = "0xE39398", VA = "0xE39398")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CB7C4", Offset = "0x8CB7C4")]
			set
			{
			}
		}

		[Token(Token = "0x60023B8")]
		[Address(RVA = "0xE2E9EC", Offset = "0xE2E9EC", VA = "0xE2E9EC")]
		public GridFlowTilemapCellOverlay Clone()
		{
			return null;
		}

		[Token(Token = "0x60023B9")]
		[Address(RVA = "0xE393A0", Offset = "0xE393A0", VA = "0xE393A0")]
		public GridFlowTilemapCellOverlay()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200055B")]
	public enum GridFlowTilemapCellOverlayMergeWallOverlayRule
	{
		[Token(Token = "0x4001D73")]
		KeepWallAndOverlay,
		[Token(Token = "0x4001D74")]
		KeepWallRemoveOverlay,
		[Token(Token = "0x4001D75")]
		KeepOverlayRemoveWall
	}
	[Serializable]
	[Token(Token = "0x200055C")]
	public class GridFlowTilemapCellOverlayMergeConfig
	{
		[Token(Token = "0x4001D76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float minHeight;

		[Token(Token = "0x4001D77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float maxHeight;

		[Token(Token = "0x4001D78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GridFlowTilemapCellOverlayMergeWallOverlayRule wallOverlayRule;

		[Token(Token = "0x4001D79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float markerHeightOffsetForLayoutTiles;

		[Token(Token = "0x4001D7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float markerHeightOffsetForNonLayoutTiles;

		[Token(Token = "0x4001D7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool removeElevationMarker;

		[Token(Token = "0x60023BA")]
		[Address(RVA = "0xE393B0", Offset = "0xE393B0", VA = "0xE393B0")]
		public GridFlowTilemapCellOverlayMergeConfig Clone()
		{
			return null;
		}

		[Token(Token = "0x60023BB")]
		[Address(RVA = "0xE39448", Offset = "0xE39448", VA = "0xE39448")]
		public GridFlowTilemapCellOverlayMergeConfig()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200055D")]
	public class GridFlowTilemapEdge
	{
		[Token(Token = "0x4001D7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GridFlowTilemapEdgeType EdgeType;

		[Token(Token = "0x4001D7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public Guid Item;

		[Token(Token = "0x4001D7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public IntVector2 EdgeCoord;

		[Token(Token = "0x4001D7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool HorizontalEdge;

		[Token(Token = "0x4001D80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public object Userdata;

		[Token(Token = "0x60023BC")]
		[Address(RVA = "0xE2EB5C", Offset = "0xE2EB5C", VA = "0xE2EB5C")]
		public GridFlowTilemapEdge Clone()
		{
			return null;
		}

		[Token(Token = "0x60023BD")]
		[Address(RVA = "0xE39EC0", Offset = "0xE39EC0", VA = "0xE39EC0")]
		public GridFlowTilemapEdge()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200055E")]
	public class GridFlowTilemapCell
	{
		[Token(Token = "0x4001D81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GridFlowTilemapCellType CellType;

		[Token(Token = "0x4001D82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GridFlowTilemapCustomCellInfo CustomCellInfo;

		[Token(Token = "0x4001D83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Guid Item;

		[Token(Token = "0x4001D84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string[] Tags;

		[Token(Token = "0x4001D85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GridFlowTilemapCellOverlay Overlay;

		[Token(Token = "0x4001D86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public IntVector2 NodeCoord;

		[Token(Token = "0x4001D87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public IntVector2 TileCoord;

		[Token(Token = "0x4001D88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public bool UseCustomColor;

		[Token(Token = "0x4001D89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public Color CustomColor;

		[Token(Token = "0x4001D8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public bool MainPath;

		[Token(Token = "0x4001D8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
		public bool LayoutCell;

		[Token(Token = "0x4001D8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public int DistanceFromMainPath;

		[Token(Token = "0x4001D8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public float Height;

		[Token(Token = "0x4001D8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public object Userdata;

		[Token(Token = "0x60023BE")]
		[Address(RVA = "0xE2E79C", Offset = "0xE2E79C", VA = "0xE2E79C")]
		public GridFlowTilemapCell Clone()
		{
			return null;
		}

		[Token(Token = "0x60023BF")]
		[Address(RVA = "0xE2F6BC", Offset = "0xE2F6BC", VA = "0xE2F6BC")]
		public void Clear()
		{
		}

		[Token(Token = "0x60023C0")]
		[Address(RVA = "0xE390B4", Offset = "0xE390B4", VA = "0xE390B4")]
		public GridFlowTilemapCell()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200055F")]
	public class GridFlowTilemapCellDoorInfo : ICloneable
	{
		[Token(Token = "0x4001D8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool locked;

		[Token(Token = "0x4001D90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public bool oneWay;

		[Token(Token = "0x4001D91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public IntVector2 nodeA;

		[Token(Token = "0x4001D92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public IntVector2 nodeB;

		[Token(Token = "0x60023C1")]
		[Address(RVA = "0xE39300", Offset = "0xE39300", VA = "0xE39300", Slot = "4")]
		public object Clone()
		{
			return null;
		}

		[Token(Token = "0x60023C2")]
		[Address(RVA = "0xE39388", Offset = "0xE39388", VA = "0xE39388")]
		public GridFlowTilemapCellDoorInfo()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000560")]
	public class GridFlowTilemapCellWallInfo : ICloneable
	{
		[Token(Token = "0x4001D93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<IntVector2> owningNodes;

		[Token(Token = "0x60023C3")]
		[Address(RVA = "0xE39450", Offset = "0xE39450", VA = "0xE39450", Slot = "4")]
		public object Clone()
		{
			return null;
		}

		[Token(Token = "0x60023C4")]
		[Address(RVA = "0xE394EC", Offset = "0xE394EC", VA = "0xE394EC")]
		public GridFlowTilemapCellWallInfo()
		{
		}
	}
	[Token(Token = "0x2000561")]
	public class GridFlowTilemap
	{
		[Token(Token = "0x4001D94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int Width;

		[Token(Token = "0x4001D95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int Height;

		[Token(Token = "0x4001D96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[HideInInspector]
		public GridFlowTilemapCellDatabase Cells;

		[Token(Token = "0x4001D97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[HideInInspector]
		public GridFlowTilemapEdgeDatabase Edges;

		[Token(Token = "0x60023C5")]
		[Address(RVA = "0xE2E620", Offset = "0xE2E620", VA = "0xE2E620")]
		public GridFlowTilemap(int width, int height)
		{
		}

		[Token(Token = "0x60023C6")]
		[Address(RVA = "0xE312C0", Offset = "0xE312C0", VA = "0xE312C0")]
		public GridFlowTilemap Clone()
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x2000562")]
	public class GridFlowTilemapEdgeDatabase : IEnumerable<GridFlowTilemapEdge>, IEnumerable
	{
		[Token(Token = "0x4001D98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private GridFlowTilemapEdge[] edgesHorizontal;

		[Token(Token = "0x4001D99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GridFlowTilemapEdge[] edgesVertical;

		[Token(Token = "0x4001D9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private int width;

		[Token(Token = "0x4001D9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private int height;

		[Token(Token = "0x60023C7")]
		[Address(RVA = "0xE38EC0", Offset = "0xE38EC0", VA = "0xE38EC0")]
		public GridFlowTilemapEdgeDatabase(int tilemapWidth, int tilemapHeight)
		{
		}

		[Token(Token = "0x60023C8")]
		[Address(RVA = "0xE2EA8C", Offset = "0xE2EA8C", VA = "0xE2EA8C")]
		public GridFlowTilemapEdge GetHorizontal(int x, int y)
		{
			return null;
		}

		[Token(Token = "0x60023C9")]
		[Address(RVA = "0xE2EAF4", Offset = "0xE2EAF4", VA = "0xE2EAF4")]
		public GridFlowTilemapEdge GetVertical(int x, int y)
		{
			return null;
		}

		[Token(Token = "0x60023CA")]
		[Address(RVA = "0xE2EC90", Offset = "0xE2EC90", VA = "0xE2EC90")]
		public void SetHorizontal(int x, int y, GridFlowTilemapEdge edge)
		{
		}

		[Token(Token = "0x60023CB")]
		[Address(RVA = "0xE2ED1C", Offset = "0xE2ED1C", VA = "0xE2ED1C")]
		public void SetVertical(int x, int y, GridFlowTilemapEdge edge)
		{
		}

		[Token(Token = "0x60023CC")]
		[Address(RVA = "0xE39F40", Offset = "0xE39F40", VA = "0xE39F40")]
		private int Index(int x, int y)
		{
			return default(int);
		}

		[Token(Token = "0x60023CD")]
		[Address(RVA = "0xE39F4C", Offset = "0xE39F4C", VA = "0xE39F4C", Slot = "4")]
		private IEnumerator<GridFlowTilemapEdge> System.Collections.Generic.IEnumerable<DungeonArchitect.Builders.GridFlow.Tilemap.GridFlowTilemapEdge>.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x60023CE")]
		[Address(RVA = "0xE3A004", Offset = "0xE3A004", VA = "0xE3A004", Slot = "5")]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x2000563")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x8B7444", Offset = "0x8B7444")]
	public class GridFlowTilemapCellDatabase : IEnumerable<GridFlowTilemapCell>, IEnumerable
	{
		[Token(Token = "0x4001D9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private GridFlowTilemapCell[] cells;

		[Token(Token = "0x4001D9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private int width;

		[Token(Token = "0x4001D9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private int height;

		[Token(Token = "0x17000416")]
		public GridFlowTilemapCell Item
		{
			[Token(Token = "0x60023D0")]
			[Address(RVA = "0xE2E758", Offset = "0xE2E758", VA = "0xE2E758")]
			get
			{
				return null;
			}
			[Token(Token = "0x60023D1")]
			[Address(RVA = "0xE2E960", Offset = "0xE2E960", VA = "0xE2E960")]
			set
			{
			}
		}

		[Token(Token = "0x60023CF")]
		[Address(RVA = "0xE38DB4", Offset = "0xE38DB4", VA = "0xE38DB4")]
		public GridFlowTilemapCellDatabase(int width, int height)
		{
		}

		[Token(Token = "0x60023D2")]
		[Address(RVA = "0xE3585C", Offset = "0xE3585C", VA = "0xE3585C")]
		public GridFlowTilemapCell GetCell(int x, int y)
		{
			return null;
		}

		[Token(Token = "0x60023D3")]
		[Address(RVA = "0xE3915C", Offset = "0xE3915C", VA = "0xE3915C")]
		private int Index(int x, int y)
		{
			return default(int);
		}

		[Token(Token = "0x60023D4")]
		[Address(RVA = "0xE39168", Offset = "0xE39168", VA = "0xE39168", Slot = "4")]
		private IEnumerator<GridFlowTilemapCell> System.Collections.Generic.IEnumerable<DungeonArchitect.Builders.GridFlow.Tilemap.GridFlowTilemapCell>.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x60023D5")]
		[Address(RVA = "0xE3920C", Offset = "0xE3920C", VA = "0xE3920C", Slot = "5")]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}
	}
	[Token(Token = "0x2000564")]
	public class GridFlowTilemapCellDatabaseEnumerator : IEnumerator<GridFlowTilemapCell>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001D9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int position;

		[Token(Token = "0x4001DA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private GridFlowTilemapCell[] cells;

		[Token(Token = "0x4001DA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private GridFlowTilemapCell current;

		[Token(Token = "0x17000417")]
		public GridFlowTilemapCell Current
		{
			[Token(Token = "0x60023DA")]
			[Address(RVA = "0xE392F0", Offset = "0xE392F0", VA = "0xE392F0", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000418")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60023DB")]
			[Address(RVA = "0xE392F8", Offset = "0xE392F8", VA = "0xE392F8", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60023D6")]
		[Address(RVA = "0xE391D8", Offset = "0xE391D8", VA = "0xE391D8")]
		public GridFlowTilemapCellDatabaseEnumerator(GridFlowTilemapCell[] cells)
		{
		}

		[Token(Token = "0x60023D7")]
		[Address(RVA = "0xE3927C", Offset = "0xE3927C", VA = "0xE3927C", Slot = "5")]
		public void Dispose()
		{
		}

		[Token(Token = "0x60023D8")]
		[Address(RVA = "0xE39284", Offset = "0xE39284", VA = "0xE39284", Slot = "6")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60023D9")]
		[Address(RVA = "0xE392E0", Offset = "0xE392E0", VA = "0xE392E0", Slot = "8")]
		public void Reset()
		{
		}
	}
	[Token(Token = "0x2000565")]
	public class GridFlowTilemapEdgeDatabaseEnumerator : IEnumerator<GridFlowTilemapEdge>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001DA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int position;

		[Token(Token = "0x4001DA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private GridFlowTilemapEdge[] edgesH;

		[Token(Token = "0x4001DA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private GridFlowTilemapEdge[] edgesV;

		[Token(Token = "0x4001DA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GridFlowTilemapEdge current;

		[Token(Token = "0x17000419")]
		public GridFlowTilemapEdge Current
		{
			[Token(Token = "0x60023E0")]
			[Address(RVA = "0xE3A11C", Offset = "0xE3A11C", VA = "0xE3A11C", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700041A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60023E1")]
			[Address(RVA = "0xE3A124", Offset = "0xE3A124", VA = "0xE3A124", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60023DC")]
		[Address(RVA = "0xE39FC4", Offset = "0xE39FC4", VA = "0xE39FC4")]
		public GridFlowTilemapEdgeDatabaseEnumerator(GridFlowTilemapEdge[] edgesH, GridFlowTilemapEdge[] edgesV)
		{
		}

		[Token(Token = "0x60023DD")]
		[Address(RVA = "0xE3A07C", Offset = "0xE3A07C", VA = "0xE3A07C", Slot = "5")]
		public void Dispose()
		{
		}

		[Token(Token = "0x60023DE")]
		[Address(RVA = "0xE3A088", Offset = "0xE3A088", VA = "0xE3A088", Slot = "6")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60023DF")]
		[Address(RVA = "0xE3A10C", Offset = "0xE3A10C", VA = "0xE3A10C", Slot = "8")]
		public void Reset()
		{
		}
	}
	[Token(Token = "0x2000566")]
	public class GridFlowTilemapDistanceFieldCell
	{
		[Token(Token = "0x4001DA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int DistanceFromEdge;

		[Token(Token = "0x4001DA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int DistanceFromDoor;

		[Token(Token = "0x60023E2")]
		[Address(RVA = "0xE39714", Offset = "0xE39714", VA = "0xE39714")]
		public GridFlowTilemapDistanceFieldCell()
		{
		}
	}
	[Token(Token = "0x2000567")]
	public class GridFlowTilemapDistanceField
	{
		[Token(Token = "0x4001DA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private GridFlowTilemap tilemap;

		[Token(Token = "0x4001DA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GridFlowTilemapDistanceFieldCell[,] distanceCells;

		[Token(Token = "0x4001DAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int[] childOffsets;

		[Token(Token = "0x60023E3")]
		[Address(RVA = "0xE395BC", Offset = "0xE395BC", VA = "0xE395BC")]
		public GridFlowTilemapDistanceField(GridFlowTilemap tilemap)
		{
		}

		[Token(Token = "0x60023E4")]
		[Address(RVA = "0xE39724", Offset = "0xE39724", VA = "0xE39724")]
		private void Build()
		{
		}

		[Token(Token = "0x60023E5")]
		[Address(RVA = "0xE39748", Offset = "0xE39748", VA = "0xE39748")]
		private void FindDistanceFromEdge()
		{
		}

		[Token(Token = "0x60023E6")]
		[Address(RVA = "0xE39B2C", Offset = "0xE39B2C", VA = "0xE39B2C")]
		private void FindDistanceFromDoor()
		{
		}
	}
	[Token(Token = "0x2000568")]
	public class GridFlowTilemapRenderResources
	{
		[Token(Token = "0x4001DAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Texture2D iconOneWayDoor;

		[Token(Token = "0x4001DAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TexturedMaterialInstances materials;

		[Token(Token = "0x60023E8")]
		[Address(RVA = "0xE371C0", Offset = "0xE371C0", VA = "0xE371C0")]
		public GridFlowTilemapRenderResources()
		{
		}
	}
	[Token(Token = "0x2000569")]
	public class GridFlowTilemapRenderer
	{
		[Token(Token = "0x20008A2")]
		private struct TilemapRenderVert
		{
			[Token(Token = "0x4002A2E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public UnityEngine.Vector2 position;

			[Token(Token = "0x4002A2F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public UnityEngine.Vector2 uv;

			[Token(Token = "0x600309D")]
			[Address(RVA = "0x9810A4", Offset = "0x9810A4", VA = "0x9810A4")]
			public TilemapRenderVert(UnityEngine.Vector2 position, UnityEngine.Vector2 uv)
			{
			}

			[Token(Token = "0x600309E")]
			[Address(RVA = "0x9810B0", Offset = "0x9810B0", VA = "0x9810B0")]
			public TilemapRenderVert Clone()
			{
				return default(TilemapRenderVert);
			}
		}

		[Token(Token = "0x20008A3")]
		private struct TilemapRenderQuad
		{
			[Token(Token = "0x4002A30")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public TilemapRenderVert[] verts;

			[Token(Token = "0x4002A31")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Color color;

			[Token(Token = "0x4002A32")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float z;

			[Token(Token = "0x4002A33")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public int rotateUV;

			[Token(Token = "0x600309F")]
			[Address(RVA = "0x98107C", Offset = "0x98107C", VA = "0x98107C")]
			public TilemapRenderQuad(TilemapRenderVert v0, TilemapRenderVert v1, TilemapRenderVert v2, TilemapRenderVert v3, Color color, float z)
			{
			}

			[Token(Token = "0x60030A0")]
			[Address(RVA = "0x98109C", Offset = "0x98109C", VA = "0x98109C")]
			public TilemapRenderQuad Clone()
			{
				return default(TilemapRenderQuad);
			}
		}

		[Token(Token = "0x20008A4")]
		private struct TilemapLayerRenderData
		{
			[Token(Token = "0x4002A34")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Material material;

			[Token(Token = "0x4002A35")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public TilemapRenderQuad[] quads;
		}

		[Token(Token = "0x60023E9")]
		[Address(RVA = "0xE373C8", Offset = "0xE373C8", VA = "0xE373C8")]
		public static void Render(RenderTexture tilemapTexture, GridFlowTilemap tilemap, int tileSize, GridFlowTilemapRenderResources resources, Func<GridFlowTilemapCell, bool> FuncCellSelected)
		{
		}

		[Token(Token = "0x60023EA")]
		[Address(RVA = "0xE3A9E4", Offset = "0xE3A9E4", VA = "0xE3A9E4")]
		private static Color GetEdgeColor(GridFlowTilemapEdgeType edgeType)
		{
			return default(Color);
		}

		[Token(Token = "0x60023EB")]
		[Address(RVA = "0xE3A12C", Offset = "0xE3A12C", VA = "0xE3A12C")]
		private static TilemapLayerRenderData[] BuildQuadData(GridFlowTilemap tilemap, int tileSize, GridFlowTilemapRenderResources resources, Func<GridFlowTilemapCell, bool> FuncCellSelected)
		{
			return null;
		}

		[Token(Token = "0x60023EC")]
		[Address(RVA = "0xE3AEA4", Offset = "0xE3AEA4", VA = "0xE3AEA4")]
		private static void DrawTileEdge(float x0, float y0, float x1, float y1, GridFlowTilemapEdge edge, GridFlowTilemapRenderResources resources, Color color, Material material, Dictionary<Material, List<TilemapRenderQuad>> quadsByMaterial)
		{
		}

		[Token(Token = "0x60023ED")]
		[Address(RVA = "0xE3ACD8", Offset = "0xE3ACD8", VA = "0xE3ACD8")]
		private static void AddLayerQuad(Dictionary<Material, List<TilemapRenderQuad>> quadsByMaterial, TilemapRenderQuad quad, Material material)
		{
		}

		[Token(Token = "0x60023EE")]
		[Address(RVA = "0xE3AA14", Offset = "0xE3AA14", VA = "0xE3AA14")]
		private static Color GetSelectedCellColor(Color color)
		{
			return default(Color);
		}

		[Token(Token = "0x60023EF")]
		[Address(RVA = "0xE3AAF4", Offset = "0xE3AAF4", VA = "0xE3AAF4")]
		private static Color GetCellColor(GridFlowTilemapCell cell)
		{
			return default(Color);
		}

		[Token(Token = "0x60023F0")]
		[Address(RVA = "0xE3B1B4", Offset = "0xE3B1B4", VA = "0xE3B1B4")]
		public GridFlowTilemapRenderer()
		{
		}
	}
}
namespace DungeonArchitect.Builders.GridFlow.Graphs
{
	[Serializable]
	[Token(Token = "0x200056A")]
	public class GridFlowExecGraphNodePin : GraphPin
	{
		[Token(Token = "0x4001DAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public UnityEngine.Vector2 Padding;

		[Token(Token = "0x60023F1")]
		[Address(RVA = "0xE31D6C", Offset = "0xE31D6C", VA = "0xE31D6C", Slot = "4")]
		public override bool ContainsPoint(UnityEngine.Vector2 worldPoint)
		{
			return default(bool);
		}

		[Token(Token = "0x60023F2")]
		[Address(RVA = "0xE31ED8", Offset = "0xE31ED8", VA = "0xE31ED8")]
		public GridFlowExecGraphNodePin()
		{
		}
	}
}
namespace DungeonArchitect.Builders.GridFlow.Graphs.Preview.Tilemap
{
	[Token(Token = "0x200056B")]
	public class GridFlowPreviewTilemapGraph : Graph
	{
		[Token(Token = "0x60023F3")]
		[Address(RVA = "0xE32D04", Offset = "0xE32D04", VA = "0xE32D04", Slot = "4")]
		public override void OnEnable()
		{
		}

		[Token(Token = "0x60023F4")]
		[Address(RVA = "0xE32D34", Offset = "0xE32D34", VA = "0xE32D34")]
		public GridFlowPreviewTilemapGraph()
		{
		}
	}
	[Token(Token = "0x200056C")]
	public struct GridFlowPreviewTilemapBuildContext
	{
		[Token(Token = "0x4001DAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public GridFlowTilemap tilemap;

		[Token(Token = "0x4001DAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public GridFlowAbstractGraph abstractGraph;

		[Token(Token = "0x4001DB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GraphBuilder graphBuilder;

		[Token(Token = "0x4001DB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GridFlowAbstractNodeState selectedNodeState;

		[Token(Token = "0x4001DB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GridFlowItem selectedItem;
	}
	[Token(Token = "0x200056D")]
	public class GridFlowPreviewTilemapGraphBuilder
	{
		[Token(Token = "0x60023F5")]
		[Address(RVA = "0xE32D3C", Offset = "0xE32D3C", VA = "0xE32D3C")]
		public static void Build(GridFlowPreviewTilemapBuildContext context)
		{
		}

		[Token(Token = "0x60023F6")]
		[Address(RVA = "0xE32F04", Offset = "0xE32F04", VA = "0xE32F04")]
		public GridFlowPreviewTilemapGraphBuilder()
		{
		}
	}
	[Token(Token = "0x200056E")]
	public class GridFlowPreviewTilemapGraphNode : GraphNode
	{
		[Token(Token = "0x4001DB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public int tileRenderSize;

		[Token(Token = "0x4001DB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C17E8", Offset = "0x8C17E8")]
		private GridFlowTilemap <Tilemap>k__BackingField;

		[Token(Token = "0x4001DB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C17F8", Offset = "0x8C17F8")]
		private GridFlowAbstractGraph <AbstractGraph>k__BackingField;

		[Token(Token = "0x4001DB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C1808", Offset = "0x8C1808")]
		private GridFlowAbstractNodeState <SelectedNodeState>k__BackingField;

		[Token(Token = "0x4001DB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C1818", Offset = "0x8C1818")]
		private GridFlowItem <SelectedItem>k__BackingField;

		[Token(Token = "0x4001DB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C1828", Offset = "0x8C1828")]
		private bool <RequestRecreatePreview>k__BackingField;

		[Token(Token = "0x1700041B")]
		public GridFlowTilemap Tilemap
		{
			[Token(Token = "0x60023F7")]
			[Address(RVA = "0xE32F0C", Offset = "0xE32F0C", VA = "0xE32F0C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CB7D4", Offset = "0x8CB7D4")]
			get
			{
				return null;
			}
			[Token(Token = "0x60023F8")]
			[Address(RVA = "0xE32F14", Offset = "0xE32F14", VA = "0xE32F14")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CB7E4", Offset = "0x8CB7E4")]
			private set
			{
			}
		}

		[Token(Token = "0x1700041C")]
		public GridFlowAbstractGraph AbstractGraph
		{
			[Token(Token = "0x60023F9")]
			[Address(RVA = "0xE32F1C", Offset = "0xE32F1C", VA = "0xE32F1C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CB7F4", Offset = "0x8CB7F4")]
			get
			{
				return null;
			}
			[Token(Token = "0x60023FA")]
			[Address(RVA = "0xE32F24", Offset = "0xE32F24", VA = "0xE32F24")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CB804", Offset = "0x8CB804")]
			set
			{
			}
		}

		[Token(Token = "0x1700041D")]
		public GridFlowAbstractNodeState SelectedNodeState
		{
			[Token(Token = "0x60023FB")]
			[Address(RVA = "0xE32F2C", Offset = "0xE32F2C", VA = "0xE32F2C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CB814", Offset = "0x8CB814")]
			get
			{
				return null;
			}
			[Token(Token = "0x60023FC")]
			[Address(RVA = "0xE32F34", Offset = "0xE32F34", VA = "0xE32F34")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CB824", Offset = "0x8CB824")]
			set
			{
			}
		}

		[Token(Token = "0x1700041E")]
		public GridFlowItem SelectedItem
		{
			[Token(Token = "0x60023FD")]
			[Address(RVA = "0xE32F3C", Offset = "0xE32F3C", VA = "0xE32F3C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CB834", Offset = "0x8CB834")]
			get
			{
				return null;
			}
			[Token(Token = "0x60023FE")]
			[Address(RVA = "0xE32F44", Offset = "0xE32F44", VA = "0xE32F44")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CB844", Offset = "0x8CB844")]
			set
			{
			}
		}

		[Token(Token = "0x1700041F")]
		public bool RequestRecreatePreview
		{
			[Token(Token = "0x60023FF")]
			[Address(RVA = "0xE32F4C", Offset = "0xE32F4C", VA = "0xE32F4C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CB854", Offset = "0x8CB854")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002400")]
			[Address(RVA = "0xE32F54", Offset = "0xE32F54", VA = "0xE32F54")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CB864", Offset = "0x8CB864")]
			set
			{
			}
		}

		[Token(Token = "0x6002401")]
		[Address(RVA = "0xE32F60", Offset = "0xE32F60", VA = "0xE32F60")]
		public GridFlowPreviewTilemapGraphNode()
		{
		}

		[Token(Token = "0x6002402")]
		[Address(RVA = "0xE32F90", Offset = "0xE32F90", VA = "0xE32F90", Slot = "5")]
		public override void Initialize(string id, Graph graph)
		{
		}

		[Token(Token = "0x6002403")]
		[Address(RVA = "0xE32E1C", Offset = "0xE32E1C", VA = "0xE32E1C")]
		public void SetTilemap(GridFlowTilemap tilemap)
		{
		}
	}
}
namespace DungeonArchitect.Builders.GridFlow.Graphs.Preview.Abstract
{
	[Token(Token = "0x200056F")]
	public class GridFlowPreviewAbstractGraph : Graph
	{
		[Token(Token = "0x6002404")]
		[Address(RVA = "0xE31F20", Offset = "0xE31F20", VA = "0xE31F20", Slot = "4")]
		public override void OnEnable()
		{
		}

		[Token(Token = "0x6002405")]
		[Address(RVA = "0xE31F50", Offset = "0xE31F50", VA = "0xE31F50")]
		public GridFlowPreviewAbstractGraph()
		{
		}
	}
	[Token(Token = "0x2000570")]
	public class GridFlowPreviewAbstractGraphBuilder
	{
		[Token(Token = "0x6002406")]
		[Address(RVA = "0xE31F58", Offset = "0xE31F58", VA = "0xE31F58")]
		public static void Build(GridFlowAbstractGraph abstractGraph, GraphBuilder graphBuilder)
		{
		}

		[Token(Token = "0x6002407")]
		[Address(RVA = "0xE323D8", Offset = "0xE323D8", VA = "0xE323D8")]
		public GridFlowPreviewAbstractGraphBuilder()
		{
		}
	}
	[Token(Token = "0x2000571")]
	public class GridFlowPreviewAbstractGraphUtils
	{
		[Token(Token = "0x6002408")]
		[Address(RVA = "0xE32780", Offset = "0xE32780", VA = "0xE32780")]
		public static GridFlowItem[] GetAllItems(GridFlowPreviewAbstractGraph previewGraph)
		{
			return null;
		}

		[Token(Token = "0x6002409")]
		[Address(RVA = "0xE32CFC", Offset = "0xE32CFC", VA = "0xE32CFC")]
		public GridFlowPreviewAbstractGraphUtils()
		{
		}
	}
	[Token(Token = "0x2000572")]
	public class GridFlowPreviewAbstractGraphLink : GraphLink
	{
		[Token(Token = "0x4001DB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GridFlowAbstractGraphLinkState AbstractLinkState;

		[Token(Token = "0x600240A")]
		[Address(RVA = "0xE323E0", Offset = "0xE323E0", VA = "0xE323E0")]
		public GridFlowPreviewAbstractGraphLink()
		{
		}
	}
	[Token(Token = "0x2000573")]
	public class GridFlowPreviewAbstractGraphNode : GraphNode
	{
		[Token(Token = "0x4001DBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C1838", Offset = "0x8C1838")]
		private GridFlowAbstractNodeState <AbstractNodeState>k__BackingField;

		[Token(Token = "0x17000420")]
		public GridFlowAbstractNodeState AbstractNodeState
		{
			[Token(Token = "0x600240B")]
			[Address(RVA = "0xE323E8", Offset = "0xE323E8", VA = "0xE323E8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CB874", Offset = "0x8CB874")]
			get
			{
				return null;
			}
			[Token(Token = "0x600240C")]
			[Address(RVA = "0xE323F0", Offset = "0xE323F0", VA = "0xE323F0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CB884", Offset = "0x8CB884")]
			set
			{
			}
		}

		[Token(Token = "0x600240D")]
		[Address(RVA = "0xE323F8", Offset = "0xE323F8", VA = "0xE323F8", Slot = "5")]
		public override void Initialize(string id, Graph graph)
		{
		}

		[Token(Token = "0x600240E")]
		[Address(RVA = "0xE325C4", Offset = "0xE325C4", VA = "0xE325C4")]
		public GridFlowPreviewAbstractGraphNode()
		{
		}
	}
	[Token(Token = "0x2000574")]
	public class GridFlowPreviewAbstractGraphNodePin : GraphPin
	{
		[Token(Token = "0x4001DBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public UnityEngine.Vector2 Padding;

		[Token(Token = "0x600240F")]
		[Address(RVA = "0xE325CC", Offset = "0xE325CC", VA = "0xE325CC", Slot = "4")]
		public override bool ContainsPoint(UnityEngine.Vector2 worldPoint)
		{
			return default(bool);
		}

		[Token(Token = "0x6002410")]
		[Address(RVA = "0xE32738", Offset = "0xE32738", VA = "0xE32738")]
		public GridFlowPreviewAbstractGraphNodePin()
		{
		}
	}
}
namespace DungeonArchitect.Builders.GridFlow.Graphs.Exec
{
	[Token(Token = "0x2000575")]
	public class GridFlowExecGraph : Graph
	{
		[Token(Token = "0x4001DBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		public GridFlowExecResultGraphNode resultNode;

		[Token(Token = "0x6002411")]
		[Address(RVA = "0xCD7FDC", Offset = "0xCD7FDC", VA = "0xCD7FDC", Slot = "4")]
		public override void OnEnable()
		{
		}

		[Token(Token = "0x6002412")]
		[Address(RVA = "0xCD800C", Offset = "0xCD800C", VA = "0xCD800C")]
		public GridFlowExecGraph()
		{
		}
	}
	[Token(Token = "0x2000576")]
	public class GridFlowExecGraphUtils
	{
		[Token(Token = "0x6002413")]
		[Address(RVA = "0xCD81D8", Offset = "0xCD81D8", VA = "0xCD81D8")]
		public static GridFlowExecRuleGraphNode[] GetIncomingNodes(GridFlowExecRuleGraphNode node)
		{
			return null;
		}

		[Token(Token = "0x6002414")]
		[Address(RVA = "0xCD8350", Offset = "0xCD8350", VA = "0xCD8350")]
		public GridFlowExecGraphUtils()
		{
		}
	}
	[Token(Token = "0x2000577")]
	public class GridFlowExecGraphNodeBase : GraphNode
	{
		[Token(Token = "0x6002415")]
		[Address(RVA = "0xCD8014", Offset = "0xCD8014", VA = "0xCD8014", Slot = "5")]
		public override void Initialize(string id, Graph graph)
		{
		}

		[Token(Token = "0x6002416")]
		[Address(RVA = "0xCD81D0", Offset = "0xCD81D0", VA = "0xCD81D0")]
		public GridFlowExecGraphNodeBase()
		{
		}
	}
	[Token(Token = "0x2000578")]
	public class GridFlowExecResultGraphNode : GridFlowExecRuleGraphNode
	{
		[Token(Token = "0x6002417")]
		[Address(RVA = "0xCD8358", Offset = "0xCD8358", VA = "0xCD8358")]
		public GridFlowExecResultGraphNode()
		{
		}
	}
	[Token(Token = "0x2000579")]
	public enum GridFlowGraphNodeExecutionStage
	{
		[Token(Token = "0x4001DBE")]
		NotExecuted,
		[Token(Token = "0x4001DBF")]
		WaitingToExecute,
		[Token(Token = "0x4001DC0")]
		Executed
	}
	[Token(Token = "0x200057A")]
	public class GridFlowGraphNodeExecutionStatus
	{
		[Token(Token = "0x4001DC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C1858", Offset = "0x8C1858")]
		private GridFlowGraphNodeExecutionStage <ExecutionStage>k__BackingField;

		[Token(Token = "0x4001DC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C1868", Offset = "0x8C1868")]
		private GridFlowExecNodeHandlerResultType <Success>k__BackingField;

		[Token(Token = "0x4001DC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C1878", Offset = "0x8C1878")]
		private string <ErrorMessage>k__BackingField;

		[Token(Token = "0x17000421")]
		public GridFlowGraphNodeExecutionStage ExecutionStage
		{
			[Token(Token = "0x6002418")]
			[Address(RVA = "0xCD8368", Offset = "0xCD8368", VA = "0xCD8368")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CB894", Offset = "0x8CB894")]
			get
			{
				return default(GridFlowGraphNodeExecutionStage);
			}
			[Token(Token = "0x6002419")]
			[Address(RVA = "0xCD8370", Offset = "0xCD8370", VA = "0xCD8370")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CB8A4", Offset = "0x8CB8A4")]
			set
			{
			}
		}

		[Token(Token = "0x17000422")]
		public GridFlowExecNodeHandlerResultType Success
		{
			[Token(Token = "0x600241A")]
			[Address(RVA = "0xCD8378", Offset = "0xCD8378", VA = "0xCD8378")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CB8B4", Offset = "0x8CB8B4")]
			get
			{
				return default(GridFlowExecNodeHandlerResultType);
			}
			[Token(Token = "0x600241B")]
			[Address(RVA = "0xCD8380", Offset = "0xCD8380", VA = "0xCD8380")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CB8C4", Offset = "0x8CB8C4")]
			set
			{
			}
		}

		[Token(Token = "0x17000423")]
		public string ErrorMessage
		{
			[Token(Token = "0x600241C")]
			[Address(RVA = "0xCD8388", Offset = "0xCD8388", VA = "0xCD8388")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CB8D4", Offset = "0x8CB8D4")]
			get
			{
				return null;
			}
			[Token(Token = "0x600241D")]
			[Address(RVA = "0xCD8390", Offset = "0xCD8390", VA = "0xCD8390")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CB8E4", Offset = "0x8CB8E4")]
			set
			{
			}
		}

		[Token(Token = "0x600241E")]
		[Address(RVA = "0xCD8398", Offset = "0xCD8398", VA = "0xCD8398")]
		public GridFlowGraphNodeExecutionStatus()
		{
		}
	}
	[Token(Token = "0x200057B")]
	public class GridFlowExecRuleGraphNode : GridFlowExecGraphNodeBase
	{
		[Token(Token = "0x4001DC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public GridFlowExecNodeHandler nodeHandler;

		[Token(Token = "0x4001DC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public GridFlowGraphNodeExecutionStatus executionStatus;

		[Token(Token = "0x600241F")]
		[Address(RVA = "0xCD8360", Offset = "0xCD8360", VA = "0xCD8360")]
		public GridFlowExecRuleGraphNode()
		{
		}
	}
}
namespace DungeonArchitect.Builders.GridFlow.Graphs.Exec.NodeHandlers
{
	[Token(Token = "0x200057C")]
	[AttributeAttribute(Name = "GridFlowExecNodeInfoAttribute", RVA = "0x8B747C", Offset = "0x8B747C")]
	public class GridFlowExecNodeHandler_CreateGrid : GridFlowExecNodeHandler
	{
		[Token(Token = "0x4001DC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector2Int resolution;

		[Token(Token = "0x6002420")]
		[Address(RVA = "0xCD84E0", Offset = "0xCD84E0", VA = "0xCD84E0", Slot = "4")]
		public override GridFlowExecNodeHandlerResultType Execute(GridFlowExecutionContext context, GridFlowExecRuleGraphNode execNode, out GridFlowExecNodeState ExecutionState, ref string errorMessage)
		{
			return default(GridFlowExecNodeHandlerResultType);
		}

		[Token(Token = "0x6002421")]
		[Address(RVA = "0xCD87B4", Offset = "0xCD87B4", VA = "0xCD87B4")]
		public GridFlowExecNodeHandler_CreateGrid()
		{
		}
	}
	[Token(Token = "0x200057D")]
	[AttributeAttribute(Name = "GridFlowExecNodeInfoAttribute", RVA = "0x8B74D0", Offset = "0x8B74D0")]
	public class GridFlowExecNodeHandler_CreateKeyLock : GridFlowExecNodeHandler
	{
		[Token(Token = "0x4001DC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string keyBranch;

		[Token(Token = "0x4001DC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string lockBranch;

		[Token(Token = "0x4001DC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string keyMarkerName;

		[Token(Token = "0x4001DCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string lockMarkerName;

		[Token(Token = "0x4001DCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GridFlowItemPlacementSettings placementSettings;

		[Token(Token = "0x6002422")]
		[Address(RVA = "0xCD87F8", Offset = "0xCD87F8", VA = "0xCD87F8", Slot = "4")]
		public override GridFlowExecNodeHandlerResultType Execute(GridFlowExecutionContext context, GridFlowExecRuleGraphNode node, out GridFlowExecNodeState ExecutionState, ref string errorMessage)
		{
			return default(GridFlowExecNodeHandlerResultType);
		}

		[Token(Token = "0x6002423")]
		[Address(RVA = "0xCD89B0", Offset = "0xCD89B0", VA = "0xCD89B0")]
		private bool FindKeyLockNodes(GridFlowExecutionContext context, GridFlowAbstractGraph graph, out GridFlowAbstractGraphNode keyNode, out GridFlowAbstractGraphNode lockNode)
		{
			return default(bool);
		}

		[Token(Token = "0x6002424")]
		[Address(RVA = "0xCD8DD0", Offset = "0xCD8DD0", VA = "0xCD8DD0")]
		public GridFlowExecNodeHandler_CreateKeyLock()
		{
		}

		[Token(Token = "0x6002425")]
		[Address(RVA = "0xCD8E64", Offset = "0xCD8E64", VA = "0xCD8E64")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CB8F4", Offset = "0x8CB8F4")]
		private bool <FindKeyLockNodes>b__6_0(GridFlowAbstractGraphNode n)
		{
			return default(bool);
		}

		[Token(Token = "0x6002426")]
		[Address(RVA = "0xCD8ED8", Offset = "0xCD8ED8", VA = "0xCD8ED8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CB904", Offset = "0x8CB904")]
		private bool <FindKeyLockNodes>b__6_1(GridFlowAbstractGraphNode n)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200057E")]
	[AttributeAttribute(Name = "GridFlowExecNodeInfoAttribute", RVA = "0x8B7524", Offset = "0x8B7524")]
	public class GridFlowExecNodeHandler_CreateMainPath : GridFlowExecNodeHandler
	{
		[Token(Token = "0x4001DCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int pathSize;

		[Token(Token = "0x4001DCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string pathName;

		[Token(Token = "0x4001DCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Color nodeColor;

		[Token(Token = "0x4001DCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string startMarkerName;

		[Token(Token = "0x4001DD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string goalMarkerName;

		[Token(Token = "0x4001DD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public string startNodePathName;

		[Token(Token = "0x4001DD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public string goalNodePathName;

		[Token(Token = "0x4001DD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public GridFlowItemPlacementSettings startPlacementSettings;

		[Token(Token = "0x4001DD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public GridFlowItemPlacementSettings goalPlacementSettings;

		[Token(Token = "0x4001DD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public bool drawDebug;

		[Token(Token = "0x6002427")]
		[Address(RVA = "0xCD8F4C", Offset = "0xCD8F4C", VA = "0xCD8F4C", Slot = "4")]
		public override GridFlowExecNodeHandlerResultType Execute(GridFlowExecutionContext context, GridFlowExecRuleGraphNode execNode, out GridFlowExecNodeState ExecutionState, ref string errorMessage)
		{
			return default(GridFlowExecNodeHandlerResultType);
		}

		[Token(Token = "0x6002428")]
		[Address(RVA = "0xCD91E0", Offset = "0xCD91E0", VA = "0xCD91E0")]
		private bool GrowPath(GridFlowAbstractGraph graph, GridFlowAbstractGraphNode currentNode, System.Random random, List<GridFlowAbstractGraphNode> path, HashSet<GridFlowAbstractGraphNode> visited)
		{
			return default(bool);
		}

		[Token(Token = "0x6002429")]
		[Address(RVA = "0xCD93D4", Offset = "0xCD93D4", VA = "0xCD93D4")]
		private void FinalizePath(GridFlowAbstractGraph graph, List<GridFlowAbstractGraphNode> path)
		{
		}

		[Token(Token = "0x600242A")]
		[Address(RVA = "0xCD96AC", Offset = "0xCD96AC", VA = "0xCD96AC")]
		public GridFlowExecNodeHandler_CreateMainPath()
		{
		}
	}
	[Token(Token = "0x200057F")]
	[AttributeAttribute(Name = "GridFlowExecNodeInfoAttribute", RVA = "0x8B7578", Offset = "0x8B7578")]
	public class GridFlowExecNodeHandler_CreatePath : GridFlowExecNodeHandler
	{
		[Token(Token = "0x20008A5")]
		private class StaticGrowthState
		{
			[Token(Token = "0x4002A36")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GridFlowAbstractGraph graph;

			[Token(Token = "0x4002A37")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public GridFlowAbstractGraphNode headNode;

			[Token(Token = "0x4002A38")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GridFlowAbstractGraphNode[] sinkNodes;

			[Token(Token = "0x4002A39")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public System.Random random;

			[Token(Token = "0x60030A1")]
			[Address(RVA = "0xCD9B7C", Offset = "0xCD9B7C", VA = "0xCD9B7C")]
			public StaticGrowthState()
			{
			}
		}

		[Token(Token = "0x20008A6")]
		private class GrowthState
		{
			[Token(Token = "0x4002A3A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public List<GridFlowAbstractGraphNode> path;

			[Token(Token = "0x4002A3B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public HashSet<GridFlowAbstractGraphNode> visited;

			[Token(Token = "0x4002A3C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GridFlowAbstractGraphNode tailNode;

			[Token(Token = "0x60030A2")]
			[Address(RVA = "0xCD9B74", Offset = "0xCD9B74", VA = "0xCD9B74")]
			public GrowthState()
			{
			}
		}

		[Token(Token = "0x4001DD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int minPathSize;

		[Token(Token = "0x4001DD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int maxPathSize;

		[Token(Token = "0x4001DD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string pathName;

		[Token(Token = "0x4001DD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Color nodeColor;

		[Token(Token = "0x4001DDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string startFromPath;

		[Token(Token = "0x4001DDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string endOnPath;

		[Token(Token = "0x4001DDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public bool drawDebug;

		[Token(Token = "0x600242B")]
		[Address(RVA = "0xCD9798", Offset = "0xCD9798", VA = "0xCD9798", Slot = "4")]
		public override GridFlowExecNodeHandlerResultType Execute(GridFlowExecutionContext context, GridFlowExecRuleGraphNode execNode, out GridFlowExecNodeState ExecutionState, ref string errorMessage)
		{
			return default(GridFlowExecNodeHandlerResultType);
		}

		[Token(Token = "0x600242C")]
		[Address(RVA = "0xCD9B84", Offset = "0xCD9B84", VA = "0xCD9B84")]
		private bool GrowPath(GridFlowAbstractGraphNode currentNode, StaticGrowthState staticState, GrowthState state)
		{
			return default(bool);
		}

		[Token(Token = "0x600242D")]
		[Address(RVA = "0xCD9E74", Offset = "0xCD9E74", VA = "0xCD9E74")]
		private void FinalizePath(StaticGrowthState staticState, GrowthState state)
		{
		}

		[Token(Token = "0x600242E")]
		[Address(RVA = "0xCDA164", Offset = "0xCDA164", VA = "0xCDA164")]
		public GridFlowExecNodeHandler_CreatePath()
		{
		}

		[Token(Token = "0x600242F")]
		[Address(RVA = "0xCDA210", Offset = "0xCDA210", VA = "0xCDA210")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CB914", Offset = "0x8CB914")]
		private bool <Execute>b__7_0(GridFlowAbstractGraphNode n)
		{
			return default(bool);
		}

		[Token(Token = "0x6002430")]
		[Address(RVA = "0xCDA284", Offset = "0xCDA284", VA = "0xCDA284")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CB924", Offset = "0x8CB924")]
		private bool <Execute>b__7_1(GridFlowAbstractGraphNode n)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000580")]
	[AttributeAttribute(Name = "GridFlowExecNodeInfoAttribute", RVA = "0x8B75CC", Offset = "0x8B75CC")]
	public class GridFlowExecNodeHandler_FinalizeGraph : GridFlowExecNodeHandler
	{
		[Token(Token = "0x20008A7")]
		private struct ItemInfo
		{
			[Token(Token = "0x4002A3D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public GridFlowItem item;

			[Token(Token = "0x4002A3E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public GridFlowAbstractGraphNode node;

			[Token(Token = "0x4002A3F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GridFlowAbstractGraphLink link;

			[Token(Token = "0x60030A3")]
			[Address(RVA = "0x97A070", Offset = "0x97A070", VA = "0x97A070")]
			public ItemInfo(GridFlowItem item, GridFlowAbstractGraphNode node, GridFlowAbstractGraphLink link)
			{
			}

			[Token(Token = "0x60030A4")]
			[Address(RVA = "0x97A07C", Offset = "0x97A07C", VA = "0x97A07C")]
			public object GetParent()
			{
				return null;
			}
		}

		[Serializable]
		[Token(Token = "0x20008A8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B9090", Offset = "0x8B9090")]
		private sealed class <>c
		{
			[Token(Token = "0x4002A40")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002A41")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<GridFlowItem, bool> <>9__7_0;

			[Token(Token = "0x4002A42")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<GridFlowItem, bool> <>9__8_0;

			[Token(Token = "0x4002A43")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Func<GridFlowItem, bool> <>9__8_1;

			[Token(Token = "0x4002A44")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static Func<GridFlowItem, bool> <>9__8_2;

			[Token(Token = "0x4002A45")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public static Func<GridFlowItem, bool> <>9__8_3;

			[Token(Token = "0x4002A46")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public static Func<GridFlowItem, bool> <>9__8_4;

			[Token(Token = "0x4002A47")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public static Func<GridFlowAbstractGraphLink, bool> <>9__10_0;

			[Token(Token = "0x4002A48")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public static Func<GridFlowAbstractGraphLink, bool> <>9__10_1;

			[Token(Token = "0x60030A6")]
			[Address(RVA = "0xCDC66C", Offset = "0xCDC66C", VA = "0xCDC66C")]
			public <>c()
			{
			}

			[Token(Token = "0x60030A7")]
			[Address(RVA = "0xCDC674", Offset = "0xCDC674", VA = "0xCDC674")]
			internal bool <AssignRoomTypes>b__7_0(GridFlowItem i)
			{
				return default(bool);
			}

			[Token(Token = "0x60030A8")]
			[Address(RVA = "0xCDC694", Offset = "0xCDC694", VA = "0xCDC694")]
			internal bool <GetNodeRoomType>b__8_0(GridFlowItem i)
			{
				return default(bool);
			}

			[Token(Token = "0x60030A9")]
			[Address(RVA = "0xCDC6B4", Offset = "0xCDC6B4", VA = "0xCDC6B4")]
			internal bool <GetNodeRoomType>b__8_1(GridFlowItem i)
			{
				return default(bool);
			}

			[Token(Token = "0x60030AA")]
			[Address(RVA = "0xCDC6D4", Offset = "0xCDC6D4", VA = "0xCDC6D4")]
			internal bool <GetNodeRoomType>b__8_2(GridFlowItem i)
			{
				return default(bool);
			}

			[Token(Token = "0x60030AB")]
			[Address(RVA = "0xCDC6F4", Offset = "0xCDC6F4", VA = "0xCDC6F4")]
			internal bool <GetNodeRoomType>b__8_3(GridFlowItem i)
			{
				return default(bool);
			}

			[Token(Token = "0x60030AC")]
			[Address(RVA = "0xCDC714", Offset = "0xCDC714", VA = "0xCDC714")]
			internal bool <GetNodeRoomType>b__8_4(GridFlowItem i)
			{
				return default(bool);
			}

			[Token(Token = "0x60030AD")]
			[Address(RVA = "0xCDC734", Offset = "0xCDC734", VA = "0xCDC734")]
			internal bool <ResolveKeyLocks>b__10_0(GridFlowAbstractGraphLink link)
			{
				return default(bool);
			}

			[Token(Token = "0x60030AE")]
			[Address(RVA = "0xCDC758", Offset = "0xCDC758", VA = "0xCDC758")]
			internal bool <ResolveKeyLocks>b__10_1(GridFlowAbstractGraphLink link)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4001DDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool debugDraw;

		[Token(Token = "0x4001DDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int oneWayDoorPromotionWeight;

		[Token(Token = "0x4001DDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool generateCaves;

		[Token(Token = "0x4001DE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		public bool generateCorridors;

		[Token(Token = "0x4001DE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int maxEnemiesPerCaveNode;

		[Token(Token = "0x6002431")]
		[Address(RVA = "0xCDAD70", Offset = "0xCDAD70", VA = "0xCDAD70", Slot = "4")]
		public override GridFlowExecNodeHandlerResultType Execute(GridFlowExecutionContext context, GridFlowExecRuleGraphNode execNode, out GridFlowExecNodeState ExecutionState, ref string errorMessage)
		{
			return default(GridFlowExecNodeHandlerResultType);
		}

		[Token(Token = "0x6002432")]
		[Address(RVA = "0xCDBD2C", Offset = "0xCDBD2C", VA = "0xCDBD2C")]
		private void AssignRoomTypes(GridFlowAbstractGraph graph, System.Random random)
		{
		}

		[Token(Token = "0x6002433")]
		[Address(RVA = "0xCDC0CC", Offset = "0xCDC0CC", VA = "0xCDC0CC")]
		private GridFlowAbstractNodeRoomType GetNodeRoomType(GridFlowAbstractGraph graph, GridFlowAbstractGraphNode node)
		{
			return default(GridFlowAbstractNodeRoomType);
		}

		[Token(Token = "0x6002434")]
		[Address(RVA = "0xCDBB60", Offset = "0xCDBB60", VA = "0xCDBB60")]
		private void EmitDebugInfo(GridFlowAbstractGraph graph, Dictionary<GridFlowAbstractGraphNode, int> weights)
		{
		}

		[Token(Token = "0x6002435")]
		[Address(RVA = "0xCDB7A0", Offset = "0xCDB7A0", VA = "0xCDB7A0")]
		private bool ResolveKeyLocks(GridFlowAbstractGraph graph, ItemInfo keyInfo, ItemInfo lockInfo)
		{
			return default(bool);
		}

		[Token(Token = "0x6002436")]
		[Address(RVA = "0xCDC5F4", Offset = "0xCDC5F4", VA = "0xCDC5F4")]
		public GridFlowExecNodeHandler_FinalizeGraph()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000581")]
	public enum GridFlowExecNodeHandler_SpawnItemMethod
	{
		[Token(Token = "0x4001DE3")]
		RandomRange,
		[Token(Token = "0x4001DE4")]
		LinearDifficulty,
		[Token(Token = "0x4001DE5")]
		CurveDifficulty
	}
	[Token(Token = "0x2000582")]
	[AttributeAttribute(Name = "GridFlowExecNodeInfoAttribute", RVA = "0x8B7620", Offset = "0x8B7620")]
	public class GridFlowExecNodeHandler_SpawnItems : GridFlowExecNodeHandler
	{
		[Token(Token = "0x20008A9")]
		private class NodeInfo
		{
			[Token(Token = "0x4002A49")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GridFlowAbstractGraphNode node;

			[Token(Token = "0x4002A4A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float weight;

			[Token(Token = "0x60030AF")]
			[Address(RVA = "0xE30698", Offset = "0xE30698", VA = "0xE30698")]
			public NodeInfo(GridFlowAbstractGraphNode node, float weight)
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20008AA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B90A0", Offset = "0x8B90A0")]
		private sealed class <>c
		{
			[Token(Token = "0x4002A4B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002A4C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<NodeInfo, float> <>9__15_0;

			[Token(Token = "0x60030B1")]
			[Address(RVA = "0xE30E30", Offset = "0xE30E30", VA = "0xE30E30")]
			public <>c()
			{
			}

			[Token(Token = "0x60030B2")]
			[Address(RVA = "0xE30E38", Offset = "0xE30E38", VA = "0xE30E38")]
			internal float <Execute>b__15_0(NodeInfo info)
			{
				return default(float);
			}
		}

		[Token(Token = "0x4001DE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string[] paths;

		[Token(Token = "0x4001DE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GridFlowGraphItemType itemType;

		[Token(Token = "0x4001DE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string markerName;

		[Token(Token = "0x4001DE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GridFlowGraphItemCustomInfo customItemInfo;

		[Token(Token = "0x4001DEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public int minCount;

		[Token(Token = "0x4001DEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public int maxCount;

		[Token(Token = "0x4001DEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public GridFlowExecNodeHandler_SpawnItemMethod spawnMethod;

		[Token(Token = "0x4001DED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public AnimationCurve spawnDistributionCurve;

		[Token(Token = "0x4001DEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public float spawnDistributionVariance;

		[Token(Token = "0x4001DEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public float minSpawnDifficulty;

		[Token(Token = "0x4001DF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public float spawnProbability;

		[Token(Token = "0x4001DF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public GridFlowItemPlacementSettings placementSettings;

		[Token(Token = "0x4001DF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public bool showDifficulty;

		[Token(Token = "0x4001DF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public Color difficultyInfoColor;

		[Token(Token = "0x6002437")]
		[Address(RVA = "0xE2F818", Offset = "0xE2F818", VA = "0xE2F818", Slot = "4")]
		public override GridFlowExecNodeHandlerResultType Execute(GridFlowExecutionContext context, GridFlowExecRuleGraphNode execNode, out GridFlowExecNodeState ExecutionState, ref string errorMessage)
		{
			return default(GridFlowExecNodeHandlerResultType);
		}

		[Token(Token = "0x6002438")]
		[Address(RVA = "0xE306D4", Offset = "0xE306D4", VA = "0xE306D4")]
		private int GetSpawnCount(System.Random random, float weight)
		{
			return default(int);
		}

		[Token(Token = "0x6002439")]
		[Address(RVA = "0xE30AAC", Offset = "0xE30AAC", VA = "0xE30AAC")]
		private void EmitDebugInfo(NodeInfo[] nodes)
		{
		}

		[Token(Token = "0x600243A")]
		[Address(RVA = "0xE30BC8", Offset = "0xE30BC8", VA = "0xE30BC8")]
		public GridFlowExecNodeHandler_SpawnItems()
		{
		}
	}
	[Token(Token = "0x2000583")]
	public enum GridFlowExecNodeHandlerResultType
	{
		[Token(Token = "0x4001DF5")]
		Success,
		[Token(Token = "0x4001DF6")]
		FailRetry,
		[Token(Token = "0x4001DF7")]
		FailHalt
	}
	[Token(Token = "0x2000584")]
	public abstract class GridFlowExecNodeHandler : ScriptableObject
	{
		[Token(Token = "0x4001DF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string description;

		[Token(Token = "0x600243B")]
		public abstract GridFlowExecNodeHandlerResultType Execute(GridFlowExecutionContext context, GridFlowExecRuleGraphNode node, out GridFlowExecNodeState ExecutionState, ref string errorMessage);

		[Token(Token = "0x600243C")]
		[Address(RVA = "0xCD8488", Offset = "0xCD8488", VA = "0xCD8488")]
		protected GridFlowExecNodeHandler()
		{
		}
	}
	[Token(Token = "0x2000585")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0x8B7674", Offset = "0x8B7674")]
	public class GridFlowExecNodeInfoAttribute : Attribute
	{
		[Token(Token = "0x4001DF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C1888", Offset = "0x8C1888")]
		private string <Title>k__BackingField;

		[Token(Token = "0x4001DFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C1898", Offset = "0x8C1898")]
		private string <MenuPrefix>k__BackingField;

		[Token(Token = "0x4001DFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C18A8", Offset = "0x8C18A8")]
		private float <Weight>k__BackingField;

		[Token(Token = "0x17000424")]
		public string Title
		{
			[Token(Token = "0x600243D")]
			[Address(RVA = "0xE30E50", Offset = "0xE30E50", VA = "0xE30E50")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CB934", Offset = "0x8CB934")]
			get
			{
				return null;
			}
			[Token(Token = "0x600243E")]
			[Address(RVA = "0xE30E58", Offset = "0xE30E58", VA = "0xE30E58")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CB944", Offset = "0x8CB944")]
			private set
			{
			}
		}

		[Token(Token = "0x17000425")]
		public string MenuPrefix
		{
			[Token(Token = "0x600243F")]
			[Address(RVA = "0xE30E60", Offset = "0xE30E60", VA = "0xE30E60")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CB954", Offset = "0x8CB954")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002440")]
			[Address(RVA = "0xE30E68", Offset = "0xE30E68", VA = "0xE30E68")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CB964", Offset = "0x8CB964")]
			private set
			{
			}
		}

		[Token(Token = "0x17000426")]
		public float Weight
		{
			[Token(Token = "0x6002441")]
			[Address(RVA = "0xE30E70", Offset = "0xE30E70", VA = "0xE30E70")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CB974", Offset = "0x8CB974")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002442")]
			[Address(RVA = "0xE30E78", Offset = "0xE30E78", VA = "0xE30E78")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CB984", Offset = "0x8CB984")]
			private set
			{
			}
		}

		[Token(Token = "0x6002443")]
		[Address(RVA = "0xE30E80", Offset = "0xE30E80", VA = "0xE30E80")]
		public GridFlowExecNodeInfoAttribute(string title)
		{
		}

		[Token(Token = "0x6002444")]
		[Address(RVA = "0xE30F34", Offset = "0xE30F34", VA = "0xE30F34")]
		public GridFlowExecNodeInfoAttribute(string title, string menuPrefix)
		{
		}

		[Token(Token = "0x6002445")]
		[Address(RVA = "0xE30EEC", Offset = "0xE30EEC", VA = "0xE30EEC")]
		public GridFlowExecNodeInfoAttribute(string title, string menuPrefix, float weight)
		{
		}

		[Token(Token = "0x6002446")]
		[Address(RVA = "0xE30F70", Offset = "0xE30F70", VA = "0xE30F70")]
		public static GridFlowExecNodeInfoAttribute GetHandlerAttribute(Type type)
		{
			return null;
		}
	}
	[Token(Token = "0x2000586")]
	public class GridFlowExecNodeStates
	{
		[Token(Token = "0x4001DFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Dictionary<string, GridFlowExecNodeState> stateByNodeId;

		[Token(Token = "0x6002447")]
		[Address(RVA = "0xE310B4", Offset = "0xE310B4", VA = "0xE310B4")]
		public void Clear()
		{
		}

		[Token(Token = "0x6002448")]
		[Address(RVA = "0xE3110C", Offset = "0xE3110C", VA = "0xE3110C")]
		public void Register(string nodeId, GridFlowExecNodeState state)
		{
		}

		[Token(Token = "0x6002449")]
		[Address(RVA = "0xE31190", Offset = "0xE31190", VA = "0xE31190")]
		public GridFlowExecNodeState Get(string nodeId)
		{
			return null;
		}

		[Token(Token = "0x600244A")]
		[Address(RVA = "0xE31224", Offset = "0xE31224", VA = "0xE31224")]
		public GridFlowExecNodeStates()
		{
		}
	}
	[Token(Token = "0x2000587")]
	public abstract class GridFlowExecNodeState
	{
		[Token(Token = "0x4001DFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C18B8", Offset = "0x8C18B8")]
		private GridFlowAbstractGraph <AbstractGraph>k__BackingField;

		[Token(Token = "0x4001DFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C18C8", Offset = "0x8C18C8")]
		private GridFlowTilemap <Tilemap>k__BackingField;

		[Token(Token = "0x17000427")]
		public GridFlowAbstractGraph AbstractGraph
		{
			[Token(Token = "0x600244B")]
			[Address(RVA = "0xE3108C", Offset = "0xE3108C", VA = "0xE3108C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CB994", Offset = "0x8CB994")]
			get
			{
				return null;
			}
			[Token(Token = "0x600244C")]
			[Address(RVA = "0xE31094", Offset = "0xE31094", VA = "0xE31094")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CB9A4", Offset = "0x8CB9A4")]
			protected set
			{
			}
		}

		[Token(Token = "0x17000428")]
		public GridFlowTilemap Tilemap
		{
			[Token(Token = "0x600244D")]
			[Address(RVA = "0xE3109C", Offset = "0xE3109C", VA = "0xE3109C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CB9B4", Offset = "0x8CB9B4")]
			get
			{
				return null;
			}
			[Token(Token = "0x600244E")]
			[Address(RVA = "0xE310A4", Offset = "0xE310A4", VA = "0xE310A4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CB9C4", Offset = "0x8CB9C4")]
			protected set
			{
			}
		}

		[Token(Token = "0x600244F")]
		[Address(RVA = "0xE310AC", Offset = "0xE310AC", VA = "0xE310AC")]
		protected GridFlowExecNodeState()
		{
		}
	}
	[Token(Token = "0x2000588")]
	public class GridFlowExecNodeState_AbstractGraph : GridFlowExecNodeState
	{
		[Token(Token = "0x6002450")]
		[Address(RVA = "0xE3032C", Offset = "0xE3032C", VA = "0xE3032C")]
		public GridFlowExecNodeState_AbstractGraph(GridFlowAbstractGraph graph)
		{
		}
	}
	[Token(Token = "0x2000589")]
	public class GridFlowExecNodeState_Tilemap : GridFlowExecNodeState
	{
		[Token(Token = "0x6002451")]
		[Address(RVA = "0xE2E720", Offset = "0xE2E720", VA = "0xE2E720")]
		public GridFlowExecNodeState_Tilemap(GridFlowTilemap tilemap, GridFlowAbstractGraph abstractGraph)
		{
		}
	}
	[Token(Token = "0x200058A")]
	[AttributeAttribute(Name = "GridFlowExecNodeInfoAttribute", RVA = "0x8B7688", Offset = "0x8B7688")]
	public class GridFlowExecNodeHandler_Result : GridFlowExecNodeHandler
	{
		[Token(Token = "0x6002452")]
		[Address(RVA = "0xE2F76C", Offset = "0xE2F76C", VA = "0xE2F76C", Slot = "4")]
		public override GridFlowExecNodeHandlerResultType Execute(GridFlowExecutionContext context, GridFlowExecRuleGraphNode node, out GridFlowExecNodeState ExecutionState, ref string errorMessage)
		{
			return default(GridFlowExecNodeHandlerResultType);
		}

		[Token(Token = "0x6002453")]
		[Address(RVA = "0xE2F810", Offset = "0xE2F810", VA = "0xE2F810")]
		public GridFlowExecNodeHandler_Result()
		{
		}
	}
	[Token(Token = "0x200058B")]
	public class GridFlowExecNodeUtils
	{
		[Token(Token = "0x20008AB")]
		protected struct NodeWeightAssignInfo
		{
			[Token(Token = "0x4002A4D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public GridFlowAbstractGraphNode node;

			[Token(Token = "0x4002A4E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int weight;

			[Token(Token = "0x60030B3")]
			[Address(RVA = "0x980D54", Offset = "0x980D54", VA = "0x980D54")]
			public NodeWeightAssignInfo(GridFlowAbstractGraphNode node, int weight)
			{
			}
		}

		[Token(Token = "0x6002454")]
		[Address(RVA = "0xE2E50C", Offset = "0xE2E50C", VA = "0xE2E50C")]
		public static GridFlowExecNodeState[] GetIncomingStates(GridFlowExecRuleGraphNode currentNode, GridFlowExecNodeStates nodeStates)
		{
			return null;
		}

		[Token(Token = "0x6002455")]
		[Address(RVA = "0xE2E6CC", Offset = "0xE2E6CC", VA = "0xE2E6CC")]
		public static GridFlowAbstractGraph CloneIncomingAbstractGraph(GridFlowExecRuleGraphNode currentNode, GridFlowExecNodeStates nodeStates)
		{
			return null;
		}

		[Token(Token = "0x6002456")]
		[Address(RVA = "0xE2EE90", Offset = "0xE2EE90", VA = "0xE2EE90")]
		public static GridFlowTilemap CloneIncomingTilemap(GridFlowExecRuleGraphNode currentNode, GridFlowExecNodeStates nodeStates)
		{
			return null;
		}

		[Token(Token = "0x6002457")]
		[Address(RVA = "0xE31460", Offset = "0xE31460", VA = "0xE31460")]
		public static GridFlowAbstractGraphNode FindNodeWithItemType(GridFlowAbstractGraph graph, GridFlowGraphItemType itemType)
		{
			return null;
		}

		[Token(Token = "0x6002458")]
		[Address(RVA = "0xE316F8", Offset = "0xE316F8", VA = "0xE316F8")]
		public static GridFlowAbstractGraphNode[] FilterNodes(GridFlowAbstractGraphNode[] nodes, int minWeight, int maxWeight, Dictionary<GridFlowAbstractGraphNode, int> weights)
		{
			return null;
		}

		[Token(Token = "0x6002459")]
		[Address(RVA = "0xE3182C", Offset = "0xE3182C", VA = "0xE3182C")]
		public static bool ContainsItem(GridFlowItem[] items, GridFlowGraphItemType itemType)
		{
			return default(bool);
		}

		[Token(Token = "0x600245A")]
		[Address(RVA = "0xE30358", Offset = "0xE30358", VA = "0xE30358")]
		public static Dictionary<GridFlowAbstractGraphNode, int> CalculateWeights(GridFlowAbstractGraph graph, int lockedWeight)
		{
			return null;
		}

		[Token(Token = "0x600245B")]
		[Address(RVA = "0xE318A4", Offset = "0xE318A4", VA = "0xE318A4")]
		public GridFlowExecNodeUtils()
		{
		}
	}
	[Token(Token = "0x200058C")]
	[AttributeAttribute(Name = "GridFlowExecNodeInfoAttribute", RVA = "0x8B76DC", Offset = "0x8B76DC")]
	public class GridFlowExecNodeHandler_CreateTilemapElevations : GridFlowExecNodeHandler
	{
		[Token(Token = "0x4001DFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string markerName;

		[Token(Token = "0x4001E00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int noiseOctaves;

		[Token(Token = "0x4001E01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float noiseFrequency;

		[Token(Token = "0x4001E02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float noiseValuePower;

		[Token(Token = "0x4001E03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public int numSteps;

		[Token(Token = "0x4001E04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float minHeight;

		[Token(Token = "0x4001E05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float maxHeight;

		[Token(Token = "0x4001E06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float seaLevel;

		[Token(Token = "0x4001E07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public Color landColor;

		[Token(Token = "0x4001E08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public Color seaColor;

		[Token(Token = "0x4001E09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public float minColorMultiplier;

		[Token(Token = "0x600245C")]
		[Address(RVA = "0xCDA2F8", Offset = "0xCDA2F8", VA = "0xCDA2F8", Slot = "4")]
		public override GridFlowExecNodeHandlerResultType Execute(GridFlowExecutionContext context, GridFlowExecRuleGraphNode execNode, out GridFlowExecNodeState ExecutionState, ref string errorMessage)
		{
			return default(GridFlowExecNodeHandlerResultType);
		}

		[Token(Token = "0x600245D")]
		[Address(RVA = "0xCDA7A0", Offset = "0xCDA7A0", VA = "0xCDA7A0")]
		public GridFlowExecNodeHandler_CreateTilemapElevations()
		{
		}
	}
	[Token(Token = "0x200058D")]
	public enum GridFlowExecNodeHandler_CreateTilemapOverlayGenMethod
	{
		[Token(Token = "0x4001E0B")]
		Noise,
		[Token(Token = "0x4001E0C")]
		Script
	}
	[Serializable]
	[Token(Token = "0x200058E")]
	public class GridFlowExecNodeTilemapOverlayNoiseSettings
	{
		[Token(Token = "0x4001E0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int noiseOctaves;

		[Token(Token = "0x4001E0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float noiseFrequency;

		[Token(Token = "0x4001E0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float noiseValuePower;

		[Token(Token = "0x4001E10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float noiseMinValue;

		[Token(Token = "0x4001E11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float noiseMaxValue;

		[Token(Token = "0x4001E12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float noiseThreshold;

		[Token(Token = "0x4001E13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int minDistFromMainPath;

		[Token(Token = "0x600245E")]
		[Address(RVA = "0xE31294", Offset = "0xE31294", VA = "0xE31294")]
		public GridFlowExecNodeTilemapOverlayNoiseSettings()
		{
		}
	}
	[Token(Token = "0x200058F")]
	public interface IGridFlowTilemapOverlayGenerator
	{
		[Token(Token = "0x600245F")]
		void Init(System.Random random);

		[Token(Token = "0x6002460")]
		bool Generate(GridFlowTilemapCell cell, GridFlowTilemapCell incomingCell, System.Random random, ref float overlayValue);
	}
	[Token(Token = "0x2000590")]
	public class NoiseGridFlowTilemapOverlayGenerator : IGridFlowTilemapOverlayGenerator
	{
		[Token(Token = "0x4001E14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private GradientNoiseTable noiseTable;

		[Token(Token = "0x4001E15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private GridFlowExecNodeTilemapOverlayNoiseSettings noiseSettings;

		[Token(Token = "0x6002461")]
		[Address(RVA = "0xE31ADC", Offset = "0xE31ADC", VA = "0xE31ADC")]
		public NoiseGridFlowTilemapOverlayGenerator(GridFlowExecNodeTilemapOverlayNoiseSettings noiseSettings)
		{
		}

		[Token(Token = "0x6002462")]
		[Address(RVA = "0xE31B08", Offset = "0xE31B08", VA = "0xE31B08", Slot = "4")]
		public void Init(System.Random random)
		{
		}

		[Token(Token = "0x6002463")]
		[Address(RVA = "0xE31BD8", Offset = "0xE31BD8", VA = "0xE31BD8", Slot = "5")]
		public bool Generate(GridFlowTilemapCell cell, GridFlowTilemapCell incomingCell, System.Random random, ref float overlayValue)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000591")]
	[AttributeAttribute(Name = "GridFlowExecNodeInfoAttribute", RVA = "0x8B7730", Offset = "0x8B7730")]
	public class GridFlowExecNodeHandler_CreateTilemapOverlay : GridFlowExecNodeHandler
	{
		[Token(Token = "0x4001E16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string markerName;

		[Token(Token = "0x4001E17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Color color;

		[Token(Token = "0x4001E18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool overlayBlocksTile;

		[Token(Token = "0x4001E19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public GridFlowExecNodeHandler_CreateTilemapOverlayGenMethod generationMethod;

		[Token(Token = "0x4001E1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GridFlowExecNodeTilemapOverlayNoiseSettings noiseSettings;

		[Token(Token = "0x4001E1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public GridFlowTilemapCellOverlayMergeConfig mergeConfig;

		[Token(Token = "0x4001E1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public string generatorScriptClass;

		[Token(Token = "0x6002464")]
		[Address(RVA = "0xCDA890", Offset = "0xCDA890", VA = "0xCDA890", Slot = "4")]
		public override GridFlowExecNodeHandlerResultType Execute(GridFlowExecutionContext context, GridFlowExecRuleGraphNode execNode, out GridFlowExecNodeState ExecutionState, ref string errorMessage)
		{
			return default(GridFlowExecNodeHandlerResultType);
		}

		[Token(Token = "0x6002465")]
		[Address(RVA = "0xCDABB0", Offset = "0xCDABB0", VA = "0xCDABB0")]
		private IGridFlowTilemapOverlayGenerator createGeneratorInstance()
		{
			return null;
		}

		[Token(Token = "0x6002466")]
		[Address(RVA = "0xCDACC4", Offset = "0xCDACC4", VA = "0xCDACC4")]
		public GridFlowExecNodeHandler_CreateTilemapOverlay()
		{
		}
	}
	[Token(Token = "0x2000592")]
	[AttributeAttribute(Name = "GridFlowExecNodeInfoAttribute", RVA = "0x8B7784", Offset = "0x8B7784")]
	public class GridFlowExecNodeHandler_FinalizeTilemap : GridFlowExecNodeHandler
	{
		[Token(Token = "0x4001E1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool debugUnwalkableCells;

		[Token(Token = "0x6002467")]
		[Address(RVA = "0xCDC77C", Offset = "0xCDC77C", VA = "0xCDC77C", Slot = "4")]
		public override GridFlowExecNodeHandlerResultType Execute(GridFlowExecutionContext context, GridFlowExecRuleGraphNode node, out GridFlowExecNodeState ExecutionState, ref string errorMessage)
		{
			return default(GridFlowExecNodeHandlerResultType);
		}

		[Token(Token = "0x6002468")]
		[Address(RVA = "0xCDD54C", Offset = "0xCDD54C", VA = "0xCDD54C")]
		private List<GridFlowTilemapCell> FilterWalkablePath(List<GridFlowTilemapCell> cells)
		{
			return null;
		}

		[Token(Token = "0x6002469")]
		[Address(RVA = "0xCDC888", Offset = "0xCDC888", VA = "0xCDC888")]
		private GridFlowExecNodeHandlerResultType AssignItems(GridFlowTilemap tilemap, GridFlowAbstractGraph graph, System.Random random, ref string errorMessage)
		{
			return default(GridFlowExecNodeHandlerResultType);
		}

		[Token(Token = "0x600246A")]
		[Address(RVA = "0xCDDC1C", Offset = "0xCDDC1C", VA = "0xCDDC1C")]
		public GridFlowExecNodeHandler_FinalizeTilemap()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000593")]
	public enum GridFlowTilemapWallGenerationMethod
	{
		[Token(Token = "0x4001E1F")]
		WallAsTiles,
		[Token(Token = "0x4001E20")]
		WallAsEdges
	}
	[Token(Token = "0x2000594")]
	[AttributeAttribute(Name = "GridFlowExecNodeInfoAttribute", RVA = "0x8B77D8", Offset = "0x8B77D8")]
	public class GridFlowExecNodeHandler_InitializeTilemap : GridFlowExecNodeHandler
	{
		[Token(Token = "0x20008AC")]
		private struct DoorInfo
		{
			[Token(Token = "0x4002A4F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C2080", Offset = "0x8C2080")]
			private GridFlowAbstractGraphLink <Link>k__BackingField;

			[Token(Token = "0x4002A50")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C2090", Offset = "0x8C2090")]
			private IntVector2 <CellCoord>k__BackingField;

			[Token(Token = "0x4002A51")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C20A0", Offset = "0x8C20A0")]
			private bool <HorizontalDoorEdge>k__BackingField;

			[Token(Token = "0x170006A1")]
			public GridFlowAbstractGraphLink Link
			{
				[Token(Token = "0x60030B4")]
				[Address(RVA = "0x980CE4", Offset = "0x980CE4", VA = "0x980CE4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D16D0", Offset = "0x8D16D0")]
				get
				{
					return null;
				}
				[Token(Token = "0x60030B5")]
				[Address(RVA = "0x980CEC", Offset = "0x980CEC", VA = "0x980CEC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D16E0", Offset = "0x8D16E0")]
				set
				{
				}
			}

			[Token(Token = "0x170006A2")]
			public IntVector2 CellCoord
			{
				[Token(Token = "0x60030B6")]
				[Address(RVA = "0x980CF4", Offset = "0x980CF4", VA = "0x980CF4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D16F0", Offset = "0x8D16F0")]
				get
				{
					return default(IntVector2);
				}
				[Token(Token = "0x60030B7")]
				[Address(RVA = "0x980CFC", Offset = "0x980CFC", VA = "0x980CFC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D1700", Offset = "0x8D1700")]
				set
				{
				}
			}

			[Token(Token = "0x170006A3")]
			public bool HorizontalDoorEdge
			{
				[Token(Token = "0x60030B8")]
				[Address(RVA = "0x980D04", Offset = "0x980D04", VA = "0x980D04")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D1710", Offset = "0x8D1710")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x60030B9")]
				[Address(RVA = "0x980D0C", Offset = "0x980D0C", VA = "0x980D0C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D1720", Offset = "0x8D1720")]
				set
				{
				}
			}
		}

		[Serializable]
		[Token(Token = "0x20008AD")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B90B0", Offset = "0x8B90B0")]
		private sealed class <>c
		{
			[Token(Token = "0x4002A52")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002A53")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<GridFlowItem, bool> <>9__32_0;

			[Token(Token = "0x60030BB")]
			[Address(RVA = "0xE2DA84", Offset = "0xE2DA84", VA = "0xE2DA84")]
			public <>c()
			{
			}

			[Token(Token = "0x60030BC")]
			[Address(RVA = "0xE2DA8C", Offset = "0xE2DA8C", VA = "0xE2DA8C")]
			internal bool <BuildDoors>b__32_0(GridFlowItem i)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4001E21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector2Int tilemapSizePerNode;

		[Token(Token = "0x4001E22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UnityEngine.Vector2 perturbAmount;

		[Token(Token = "0x4001E23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float corridorLaneWidth;

		[Token(Token = "0x4001E24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public int layoutPadding;

		[Token(Token = "0x4001E25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GridFlowTilemapWallGenerationMethod wallGenerationMethod;

		[Token(Token = "0x4001E26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public int caveAutomataNeighbors;

		[Token(Token = "0x4001E27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public int caveAutomataIterations;

		[Token(Token = "0x4001E28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float caveThickness;

		[Token(Token = "0x4001E29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float roomColorSaturation;

		[Token(Token = "0x4001E2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float roomColorBrightness;

		[Token(Token = "0x4001E2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int nodeWidth;

		[Token(Token = "0x4001E2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private int nodeHeight;

		[Token(Token = "0x600246B")]
		[Address(RVA = "0xCDDC20", Offset = "0xCDDC20", VA = "0xCDDC20", Slot = "4")]
		public override GridFlowExecNodeHandlerResultType Execute(GridFlowExecutionContext context, GridFlowExecRuleGraphNode execNode, out GridFlowExecNodeState ExecutionState, ref string errorMessage)
		{
			return default(GridFlowExecNodeHandlerResultType);
		}

		[Token(Token = "0x600246C")]
		[Address(RVA = "0xCDDF8C", Offset = "0xCDDF8C", VA = "0xCDDF8C")]
		private GridFlowTilemap BuildTilemap(GridFlowTilemap tilemap, GridFlowAbstractGraph graph, System.Random random)
		{
			return null;
		}

		[Token(Token = "0x600246D")]
		[Address(RVA = "0xCDFF20", Offset = "0xCDFF20", VA = "0xCDFF20")]
		private GridFlowTilemap CropTilemap(GridFlowTilemap oldTilemap)
		{
			return null;
		}

		[Token(Token = "0x600246E")]
		[Address(RVA = "0xCDE390", Offset = "0xCDE390", VA = "0xCDE390")]
		private void PerturbRoomSizes(GridFlowTilemap tilemap, GridFlowAbstractGraph graph, GridFlowTilemapNodeInfo[,] tileNodes, System.Random random)
		{
		}

		[Token(Token = "0x600246F")]
		[Address(RVA = "0xCDE8DC", Offset = "0xCDE8DC", VA = "0xCDE8DC")]
		private void FixCorridorSizes(GridFlowTilemapNodeInfo[,] tileNodes, GridFlowAbstractGraph graph)
		{
		}

		[Token(Token = "0x6002470")]
		[Address(RVA = "0xCDEB60", Offset = "0xCDEB60", VA = "0xCDEB60")]
		private void RasterizeRoomCorridors(GridFlowTilemapNodeInfo[,] tileNodes, GridFlowTilemap tilemap)
		{
		}

		[Token(Token = "0x6002471")]
		[Address(RVA = "0xCDEF90", Offset = "0xCDEF90", VA = "0xCDEF90")]
		private void RasterizeBaseCaveBlocks(GridFlowTilemapNodeInfo[,] tileNodes, GridFlowTilemap tilemap, GridFlowAbstractGraph graph)
		{
		}

		[Token(Token = "0x6002472")]
		[Address(RVA = "0xCDF6EC", Offset = "0xCDF6EC", VA = "0xCDF6EC")]
		private void BuildCaves(GridFlowTilemapNodeInfo[,] tileNodes, GridFlowTilemap tilemap, GridFlowAbstractGraph graph, System.Random random)
		{
		}

		[Token(Token = "0x6002473")]
		[Address(RVA = "0xCE1278", Offset = "0xCE1278", VA = "0xCE1278")]
		private CaveCellBuildTile[,] GenerateCaveBuildMap(GridFlowTilemapNodeInfo[,] tileNodes, GridFlowTilemap tilemap, GridFlowAbstractGraph graph)
		{
			return null;
		}

		[Token(Token = "0x6002474")]
		[Address(RVA = "0xCE1650", Offset = "0xCE1650", VA = "0xCE1650")]
		private void BuildCaveStep_BuildRocks(CaveCellBuildTile[,] caveMap, GridFlowTilemap tilemap, System.Random random)
		{
		}

		[Token(Token = "0x6002475")]
		[Address(RVA = "0xCE180C", Offset = "0xCE180C", VA = "0xCE180C")]
		private void BuildCaveStep_SimulateGrowth(CaveCellBuildTile[,] caveMap, GridFlowTilemap tilemap, System.Random random)
		{
		}

		[Token(Token = "0x6002476")]
		[Address(RVA = "0xCE1B70", Offset = "0xCE1B70", VA = "0xCE1B70")]
		private void BuildCaveStep_Cleanup(CaveCellBuildTile[,] caveMap, GridFlowTilemapNodeInfo[,] tileNodes, GridFlowTilemap tilemap)
		{
		}

		[Token(Token = "0x6002477")]
		[Address(RVA = "0xCE2394", Offset = "0xCE2394", VA = "0xCE2394")]
		private bool CanCreateEdgeToAdjacentCaveTile(GridFlowTilemap tilemap, CaveCellBuildTile[,] caveMap, int x, int y)
		{
			return default(bool);
		}

		[Token(Token = "0x6002478")]
		[Address(RVA = "0xCE2090", Offset = "0xCE2090", VA = "0xCE2090")]
		private void BuildCaveStep_UpdateEdges(CaveCellBuildTile[,] caveMap, GridFlowTilemapNodeInfo[,] tileNodes, GridFlowTilemap tilemap)
		{
		}

		[Token(Token = "0x6002479")]
		[Address(RVA = "0xCE0F74", Offset = "0xCE0F74", VA = "0xCE0F74")]
		private void DebugPostProcess(GridFlowTilemapNodeInfo[,] tileNodes, GridFlowTilemap tilemap, GridFlowAbstractGraph graph)
		{
		}

		[Token(Token = "0x600247A")]
		[Address(RVA = "0xCE1070", Offset = "0xCE1070", VA = "0xCE1070")]
		private bool ShouldBlockCaveBoundary(GridFlowAbstractGraph graph, GridFlowAbstractGraphNode caveNode, int dx, int dy)
		{
			return default(bool);
		}

		[Token(Token = "0x600247B")]
		[Address(RVA = "0xCDF2F8", Offset = "0xCDF2F8", VA = "0xCDF2F8")]
		private void GenerateMainPath(GridFlowTilemapNodeInfo[,] tileNodes, GridFlowTilemap tilemap, GridFlowAbstractGraph graph)
		{
		}

		[Token(Token = "0x600247C")]
		[Address(RVA = "0xCE0A40", Offset = "0xCE0A40", VA = "0xCE0A40")]
		private void CalculateDistanceFromMainPathOnEmptyArea(GridFlowTilemap tilemap)
		{
		}

		[Token(Token = "0x600247D")]
		[Address(RVA = "0xCE052C", Offset = "0xCE052C", VA = "0xCE052C")]
		private void CalculateDistanceFromMainPath(GridFlowTilemapNodeInfo[,] tileNodes, GridFlowTilemap tilemap, GridFlowAbstractNodeRoomType[] allowedRoomTypes)
		{
		}

		[Token(Token = "0x600247E")]
		[Address(RVA = "0xCDF7E4", Offset = "0xCDF7E4", VA = "0xCDF7E4")]
		private void BuildDoors(GridFlowTilemapNodeInfo[,] tileNodes, GridFlowTilemap tilemap, GridFlowAbstractGraph graph)
		{
		}

		[Token(Token = "0x600247F")]
		[Address(RVA = "0xCE22B4", Offset = "0xCE22B4", VA = "0xCE22B4")]
		private IntVector2 NodeCoordToTileCoord(IntVector2 nodeCoord)
		{
			return default(IntVector2);
		}

		[Token(Token = "0x6002480")]
		[Address(RVA = "0xCDDD90", Offset = "0xCDDD90", VA = "0xCDDD90")]
		private bool GetGraphSize(GridFlowAbstractGraph graph, out IntVector2 size)
		{
			return default(bool);
		}

		[Token(Token = "0x6002481")]
		[Address(RVA = "0xCE248C", Offset = "0xCE248C", VA = "0xCE248C")]
		private GridFlowTilemapCellType GetCellType(GridFlowTilemap tilemap, int x, int y)
		{
			return default(GridFlowTilemapCellType);
		}

		[Token(Token = "0x6002482")]
		[Address(RVA = "0xCE24EC", Offset = "0xCE24EC", VA = "0xCE24EC")]
		public GridFlowExecNodeHandler_InitializeTilemap()
		{
		}
	}
	[Token(Token = "0x2000595")]
	internal struct NodeTilemapBounds
	{
		[Token(Token = "0x4001E2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int x0;

		[Token(Token = "0x4001E2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int y0;

		[Token(Token = "0x4001E2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int x1;

		[Token(Token = "0x4001E30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public int y1;

		[Token(Token = "0x4001E31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int mx;

		[Token(Token = "0x4001E32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int my;

		[Token(Token = "0x6002483")]
		[Address(RVA = "0xE31910", Offset = "0xE31910", VA = "0xE31910")]
		public static NodeTilemapBounds Build(GridFlowTilemapNodeInfo tileNode, int tilemapWidth, int tilemapHeight, bool clampToBoundary)
		{
			return default(NodeTilemapBounds);
		}
	}
	[Token(Token = "0x2000596")]
	internal class CaveCellBuildTile
	{
		[Token(Token = "0x4001E33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public IntVector2 tileCoord;

		[Token(Token = "0x4001E34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool valid;

		[Token(Token = "0x4001E35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool rockTile;

		[Token(Token = "0x6002484")]
		[Address(RVA = "0xCD8400", Offset = "0xCD8400", VA = "0xCD8400")]
		public CaveCellBuildTile Clone()
		{
			return null;
		}

		[Token(Token = "0x6002485")]
		[Address(RVA = "0xCD8480", Offset = "0xCD8480", VA = "0xCD8480")]
		public CaveCellBuildTile()
		{
		}
	}
	[Token(Token = "0x2000597")]
	public class GridFlowTilemapNodeInfo
	{
		[Token(Token = "0x4001E36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float x0;

		[Token(Token = "0x4001E37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float x1;

		[Token(Token = "0x4001E38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float y0;

		[Token(Token = "0x4001E39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float y1;

		[Token(Token = "0x4001E3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float midX;

		[Token(Token = "0x4001E3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float midY;

		[Token(Token = "0x4001E3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GridFlowAbstractGraphNode node;

		[Token(Token = "0x6002486")]
		[Address(RVA = "0xE318AC", Offset = "0xE318AC", VA = "0xE318AC")]
		public GridFlowTilemapNodeInfo(float x0, float y0, float x1, float y1)
		{
		}
	}
	[Token(Token = "0x2000598")]
	[AttributeAttribute(Name = "GridFlowExecNodeInfoAttribute", RVA = "0x8B782C", Offset = "0x8B782C")]
	public class GridFlowExecNodeHandler_MergeTilemaps : GridFlowExecNodeHandler
	{
		[Token(Token = "0x6002487")]
		[Address(RVA = "0xE2DAE0", Offset = "0xE2DAE0", VA = "0xE2DAE0", Slot = "4")]
		public override GridFlowExecNodeHandlerResultType Execute(GridFlowExecutionContext context, GridFlowExecRuleGraphNode execNode, out GridFlowExecNodeState ExecutionState, ref string errorMessage)
		{
			return default(GridFlowExecNodeHandlerResultType);
		}

		[Token(Token = "0x6002488")]
		[Address(RVA = "0xE2EDA8", Offset = "0xE2EDA8", VA = "0xE2EDA8")]
		public GridFlowExecNodeHandler_MergeTilemaps()
		{
		}
	}
	[Token(Token = "0x2000599")]
	[AttributeAttribute(Name = "GridFlowExecNodeInfoAttribute", RVA = "0x8B7880", Offset = "0x8B7880")]
	public class GridFlowExecNodeHandler_OptimizeTilemap : GridFlowExecNodeHandler
	{
		[Token(Token = "0x4001E3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int discardDistanceFromLayout;

		[Token(Token = "0x6002489")]
		[Address(RVA = "0xE2EDB0", Offset = "0xE2EDB0", VA = "0xE2EDB0", Slot = "4")]
		public override GridFlowExecNodeHandlerResultType Execute(GridFlowExecutionContext context, GridFlowExecRuleGraphNode node, out GridFlowExecNodeState ExecutionState, ref string errorMessage)
		{
			return default(GridFlowExecNodeHandlerResultType);
		}

		[Token(Token = "0x600248A")]
		[Address(RVA = "0xE2EEE0", Offset = "0xE2EEE0", VA = "0xE2EEE0")]
		private void DiscardDistantTiles(GridFlowTilemap tilemap)
		{
		}

		[Token(Token = "0x600248B")]
		[Address(RVA = "0xE2F75C", Offset = "0xE2F75C", VA = "0xE2F75C")]
		public GridFlowExecNodeHandler_OptimizeTilemap()
		{
		}
	}
}
namespace DungeonArchitect.Builders.GridFlow.Graphs.Abstract
{
	[Serializable]
	[Token(Token = "0x200059A")]
	public class GridFlowAbstractGraph
	{
		[Token(Token = "0x4001E3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		public List<GridFlowAbstractGraphNode> Nodes;

		[Token(Token = "0x4001E3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public List<GridFlowAbstractGraphLink> Links;

		[Token(Token = "0x600248C")]
		[Address(RVA = "0xCD5D90", Offset = "0xCD5D90", VA = "0xCD5D90")]
		public void RemoveNode(GridFlowAbstractGraphNode node)
		{
		}

		[Token(Token = "0x600248D")]
		[Address(RVA = "0xCD5F6C", Offset = "0xCD5F6C", VA = "0xCD5F6C")]
		public void AddNode(GridFlowAbstractGraphNode node)
		{
		}

		[Token(Token = "0x600248E")]
		[Address(RVA = "0xCD5FD4", Offset = "0xCD5FD4", VA = "0xCD5FD4")]
		public void RemoveLink(GridFlowAbstractGraphLink link)
		{
		}

		[Token(Token = "0x600248F")]
		[Address(RVA = "0xCD603C", Offset = "0xCD603C", VA = "0xCD603C")]
		public GridFlowAbstractGraphNode GetNode(Guid nodeId)
		{
			return null;
		}

		[Token(Token = "0x6002490")]
		[Address(RVA = "0xCD61A0", Offset = "0xCD61A0", VA = "0xCD61A0")]
		public GridFlowAbstractNodeState GetNodeState(Guid nodeId)
		{
			return null;
		}

		[Token(Token = "0x6002491")]
		[Address(RVA = "0xCD61BC", Offset = "0xCD61BC", VA = "0xCD61BC")]
		public GridFlowAbstractGraphLink GetLink(GridFlowAbstractGraphNode sourceNode, GridFlowAbstractGraphNode destNode)
		{
			return null;
		}

		[Token(Token = "0x6002492")]
		[Address(RVA = "0xCD61C4", Offset = "0xCD61C4", VA = "0xCD61C4")]
		public GridFlowAbstractGraphLink GetLink(GridFlowAbstractGraphNode sourceNode, GridFlowAbstractGraphNode destNode, bool ignoreDirection)
		{
			return null;
		}

		[Token(Token = "0x6002493")]
		[Address(RVA = "0xCD6424", Offset = "0xCD6424", VA = "0xCD6424")]
		public GridFlowAbstractGraphLink MakeLink(GridFlowAbstractGraphNode sourceNode, GridFlowAbstractGraphNode destNode)
		{
			return null;
		}

		[Token(Token = "0x6002494")]
		[Address(RVA = "0xCD6584", Offset = "0xCD6584", VA = "0xCD6584")]
		public void BreakLink(GridFlowAbstractGraphNode sourceNode, GridFlowAbstractGraphNode destNode)
		{
		}

		[Token(Token = "0x6002495")]
		[Address(RVA = "0xCD6618", Offset = "0xCD6618", VA = "0xCD6618")]
		public void BreakAllOutgoingLinks(GridFlowAbstractGraphNode node)
		{
		}

		[Token(Token = "0x6002496")]
		[Address(RVA = "0xCD6744", Offset = "0xCD6744", VA = "0xCD6744")]
		public void BreakAllIncomingLinks(GridFlowAbstractGraphNode node)
		{
		}

		[Token(Token = "0x6002497")]
		[Address(RVA = "0xCD5E04", Offset = "0xCD5E04", VA = "0xCD5E04")]
		public void BreakAllLinks(GridFlowAbstractGraphNode node)
		{
		}

		[Token(Token = "0x6002498")]
		[Address(RVA = "0xCD6870", Offset = "0xCD6870", VA = "0xCD6870")]
		public void Clear()
		{
		}

		[Token(Token = "0x6002499")]
		[Address(RVA = "0xCD6924", Offset = "0xCD6924", VA = "0xCD6924")]
		public GridFlowAbstractGraphNode[] GetOutgoingNodes(GridFlowAbstractGraphNode node)
		{
			return null;
		}

		[Token(Token = "0x600249A")]
		[Address(RVA = "0xCD6AF4", Offset = "0xCD6AF4", VA = "0xCD6AF4")]
		public GridFlowAbstractGraphNode[] GetIncomingNodes(GridFlowAbstractGraphNode node)
		{
			return null;
		}

		[Token(Token = "0x600249B")]
		[Address(RVA = "0xCD6CC4", Offset = "0xCD6CC4", VA = "0xCD6CC4")]
		public GridFlowAbstractGraphLink[] GetOutgoingLinks(GridFlowAbstractGraphNode node)
		{
			return null;
		}

		[Token(Token = "0x600249C")]
		[Address(RVA = "0xCD6E88", Offset = "0xCD6E88", VA = "0xCD6E88")]
		public GridFlowAbstractGraphLink[] GetIncomingLinks(GridFlowAbstractGraphNode node)
		{
			return null;
		}

		[Token(Token = "0x600249D")]
		[Address(RVA = "0xCD704C", Offset = "0xCD704C", VA = "0xCD704C")]
		public GridFlowAbstractGraphNode[] GetConnectedNodes(GridFlowAbstractGraphNode node)
		{
			return null;
		}

		[Token(Token = "0x600249E")]
		[Address(RVA = "0xCD72AC", Offset = "0xCD72AC", VA = "0xCD72AC")]
		public GridFlowAbstractGraph Clone()
		{
			return null;
		}

		[Token(Token = "0x600249F")]
		[Address(RVA = "0xCD7688", Offset = "0xCD7688", VA = "0xCD7688")]
		public GridFlowItem[] GetAllItems()
		{
			return null;
		}

		[Token(Token = "0x60024A0")]
		[Address(RVA = "0xCD74E0", Offset = "0xCD74E0", VA = "0xCD74E0")]
		public GridFlowAbstractGraph()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200059B")]
	public class GridFlowAbstractGraphLinkState
	{
		[Token(Token = "0x4001E40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool Directional;

		[Token(Token = "0x4001E41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public bool OneWay;

		[Token(Token = "0x4001E42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<GridFlowItem> Items;

		[Token(Token = "0x60024A1")]
		[Address(RVA = "0xCD793C", Offset = "0xCD793C", VA = "0xCD793C")]
		public GridFlowAbstractGraphLinkState Clone()
		{
			return null;
		}

		[Token(Token = "0x60024A2")]
		[Address(RVA = "0xCD7A70", Offset = "0xCD7A70", VA = "0xCD7A70")]
		public void AddItem(GridFlowItem item)
		{
		}

		[Token(Token = "0x60024A3")]
		[Address(RVA = "0xCD78CC", Offset = "0xCD78CC", VA = "0xCD78CC")]
		public GridFlowAbstractGraphLinkState()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200059C")]
	public class GridFlowAbstractGraphLink
	{
		[Token(Token = "0x4001E43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Guid LinkId;

		[Token(Token = "0x4001E44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Guid Source;

		[Token(Token = "0x4001E45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Guid Destination;

		[Token(Token = "0x4001E46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GridFlowAbstractGraphLinkState state;

		[Token(Token = "0x60024A4")]
		[Address(RVA = "0xCD64F0", Offset = "0xCD64F0", VA = "0xCD64F0")]
		public GridFlowAbstractGraphLink()
		{
		}

		[Token(Token = "0x60024A5")]
		[Address(RVA = "0xCD75FC", Offset = "0xCD75FC", VA = "0xCD75FC")]
		public GridFlowAbstractGraphLink Clone()
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x200059D")]
	public enum GridFlowAbstractNodeRoomType
	{
		[Token(Token = "0x4001E48")]
		Unknown,
		[Token(Token = "0x4001E49")]
		Room,
		[Token(Token = "0x4001E4A")]
		Corridor,
		[Token(Token = "0x4001E4B")]
		Cave
	}
	[Serializable]
	[Token(Token = "0x200059E")]
	public class GridFlowAbstractNodeState
	{
		[Token(Token = "0x4001E4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool Active;

		[Token(Token = "0x4001E4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public Color Color;

		[Token(Token = "0x4001E4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public IntVector2 GridCoord;

		[Token(Token = "0x4001E4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public HashSet<string> Tags;

		[Token(Token = "0x4001E50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public List<GridFlowItem> Items;

		[Token(Token = "0x4001E51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GridFlowAbstractNodeRoomType RoomType;

		[Token(Token = "0x60024A6")]
		[Address(RVA = "0xCD7C70", Offset = "0xCD7C70", VA = "0xCD7C70")]
		public GridFlowAbstractNodeState Clone()
		{
			return null;
		}

		[Token(Token = "0x60024A7")]
		[Address(RVA = "0xCD7EC0", Offset = "0xCD7EC0", VA = "0xCD7EC0")]
		public void AddItem(GridFlowItem item)
		{
		}

		[Token(Token = "0x60024A8")]
		[Address(RVA = "0xCD7E58", Offset = "0xCD7E58", VA = "0xCD7E58")]
		public void AddTag(string tag)
		{
		}

		[Token(Token = "0x60024A9")]
		[Address(RVA = "0xCD7F28", Offset = "0xCD7F28", VA = "0xCD7F28")]
		public void AddTags(string[] tags)
		{
		}

		[Token(Token = "0x60024AA")]
		[Address(RVA = "0xCD7B98", Offset = "0xCD7B98", VA = "0xCD7B98")]
		public GridFlowAbstractNodeState()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200059F")]
	public class GridFlowAbstractGraphNode
	{
		[Token(Token = "0x4001E52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Guid NodeId;

		[Token(Token = "0x4001E53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UnityEngine.Vector2 Position;

		[Token(Token = "0x4001E54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GridFlowAbstractNodeState state;

		[Token(Token = "0x60024AB")]
		[Address(RVA = "0xCD7AD8", Offset = "0xCD7AD8", VA = "0xCD7AD8")]
		public GridFlowAbstractGraphNode()
		{
		}

		[Token(Token = "0x60024AC")]
		[Address(RVA = "0xCD7578", Offset = "0xCD7578", VA = "0xCD7578")]
		public GridFlowAbstractGraphNode Clone()
		{
			return null;
		}
	}
}
namespace DungeonArchitect.Builders.Grid
{
	[Token(Token = "0x20005A0")]
	public class GridCellInfo
	{
		[Token(Token = "0x4001E55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int CellId;

		[Token(Token = "0x4001E56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public CellType CellType;

		[Token(Token = "0x4001E57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool ContainsDoor;

		[Token(Token = "0x60024AD")]
		[Address(RVA = "0xD7B438", Offset = "0xD7B438", VA = "0xD7B438")]
		public GridCellInfo()
		{
		}

		[Token(Token = "0x60024AE")]
		[Address(RVA = "0xD7B46C", Offset = "0xD7B46C", VA = "0xD7B46C")]
		public GridCellInfo(int pCellId, CellType pCellType)
		{
		}
	}
	[Token(Token = "0x20005A1")]
	public class GridBuilderDoorMetadata
	{
		[Token(Token = "0x4001E58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int CellA;

		[Token(Token = "0x4001E59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int CellB;

		[Token(Token = "0x60024AF")]
		[Address(RVA = "0xD7AA68", Offset = "0xD7AA68", VA = "0xD7AA68")]
		public GridBuilderDoorMetadata(int cellIdA, int cellIdB)
		{
		}
	}
	[Token(Token = "0x20005A2")]
	public class CellHeightNode
	{
		[Token(Token = "0x4001E5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int CellId;

		[Token(Token = "0x4001E5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int Height;

		[Token(Token = "0x4001E5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool MarkForIncrease;

		[Token(Token = "0x4001E5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool MarkForDecrease;

		[Token(Token = "0x60024B0")]
		[Address(RVA = "0xD79CB8", Offset = "0xD79CB8", VA = "0xD79CB8")]
		public CellHeightNode()
		{
		}
	}
	[Token(Token = "0x20005A3")]
	public class StairAdjacencyQueueNode
	{
		[Token(Token = "0x4001E5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int cellId;

		[Token(Token = "0x4001E5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int depth;

		[Token(Token = "0x60024B1")]
		[Address(RVA = "0xCD5D40", Offset = "0xCD5D40", VA = "0xCD5D40")]
		public StairAdjacencyQueueNode(int pCellId, int pDepth)
		{
		}
	}
	[Token(Token = "0x20005A4")]
	public class CellHeightFrameInfo
	{
		[Token(Token = "0x4001E60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int CellId;

		[Token(Token = "0x4001E61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int CurrentHeight;

		[Token(Token = "0x60024B2")]
		[Address(RVA = "0xD79C80", Offset = "0xD79C80", VA = "0xD79C80")]
		public CellHeightFrameInfo(int pCellId, int pCurrentHeight)
		{
		}
	}
	[Token(Token = "0x20005A5")]
	public struct StairEdgeInfo
	{
		[Token(Token = "0x4001E62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int CellIdA;

		[Token(Token = "0x4001E63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int CellIdB;

		[Token(Token = "0x60024B3")]
		[Address(RVA = "0x97A02C", Offset = "0x97A02C", VA = "0x97A02C")]
		public StairEdgeInfo(int pCellIdA, int pCellIdB)
		{
		}
	}
	[Token(Token = "0x20005A6")]
	[ExecuteInEditMode]
	public class GridDungeonBuilder : DungeonBuilder
	{
		[Token(Token = "0x20008AE")]
		private class Edge : IComparable<Edge>
		{
			[Token(Token = "0x4002A54")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int cellA;

			[Token(Token = "0x4002A55")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public int cellB;

			[Token(Token = "0x4002A56")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float weight;

			[Token(Token = "0x60030BD")]
			[Address(RVA = "0xCCC6B8", Offset = "0xCCC6B8", VA = "0xCCC6B8")]
			public Edge(int cellA, int cellB, float weight)
			{
			}

			[Token(Token = "0x60030BE")]
			[Address(RVA = "0xCCC700", Offset = "0xCCC700", VA = "0xCCC700", Slot = "4")]
			public int CompareTo(Edge other)
			{
				return default(int);
			}
		}

		[Token(Token = "0x20008AF")]
		private class ConnectionPointSorter : IComparer<IntVector>
		{
			[Token(Token = "0x4002A57")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private UnityEngine.Vector3 center;

			[Token(Token = "0x60030BF")]
			[Address(RVA = "0xCCC540", Offset = "0xCCC540", VA = "0xCCC540")]
			public ConnectionPointSorter(UnityEngine.Vector3 center)
			{
			}

			[Token(Token = "0x60030C0")]
			[Address(RVA = "0xCCC588", Offset = "0xCCC588", VA = "0xCCC588", Slot = "4")]
			public int Compare(IntVector x, IntVector y)
			{
				return default(int);
			}
		}

		[Token(Token = "0x20008B0")]
		private class StairConnectionWeight
		{
			[Token(Token = "0x4002A58")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int position;

			[Token(Token = "0x4002A59")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public int weight;

			[Token(Token = "0x60030C1")]
			[Address(RVA = "0xCCC734", Offset = "0xCCC734", VA = "0xCCC734")]
			public StairConnectionWeight(int position, int weight)
			{
			}
		}

		[Token(Token = "0x20008B1")]
		private class StairConnectionWeightComparer : IComparer<StairConnectionWeight>
		{
			[Token(Token = "0x60030C2")]
			[Address(RVA = "0xCCC76C", Offset = "0xCCC76C", VA = "0xCCC76C", Slot = "4")]
			public int Compare(StairConnectionWeight x, StairConnectionWeight y)
			{
				return default(int);
			}

			[Token(Token = "0x60030C3")]
			[Address(RVA = "0xCCC7AC", Offset = "0xCCC7AC", VA = "0xCCC7AC")]
			public StairConnectionWeightComparer()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20008B2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B90C0", Offset = "0x8B90C0")]
		private sealed class <>c
		{
			[Token(Token = "0x4002A5A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002A5B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<UnityEngine.Vector2, float> <>9__33_0;

			[Token(Token = "0x60030C5")]
			[Address(RVA = "0xCCC534", Offset = "0xCCC534", VA = "0xCCC534")]
			public <>c()
			{
			}

			[Token(Token = "0x60030C6")]
			[Address(RVA = "0xCCC53C", Offset = "0xCCC53C", VA = "0xCCC53C")]
			internal float <TriangulateRooms>b__33_0(UnityEngine.Vector2 v)
			{
				return default(float);
			}
		}

		[Token(Token = "0x4001E64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private int _CellIdCounter;

		[Token(Token = "0x4001E65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GridDungeonModel gridModel;

		[Token(Token = "0x4001E66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private GridDungeonConfig gridConfig;

		[Token(Token = "0x17000429")]
		private Dictionary<int, List<StairInfo>> CellStairs
		{
			[Token(Token = "0x60024B4")]
			[Address(RVA = "0xD7BE50", Offset = "0xD7BE50", VA = "0xD7BE50")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700042A")]
		private Dictionary<int, Dictionary<int, GridCellInfo>> GridCellInfoLookup
		{
			[Token(Token = "0x60024B5")]
			[Address(RVA = "0xD7BE6C", Offset = "0xD7BE6C", VA = "0xD7BE6C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700042B")]
		private UnityEngine.Vector3 GridToMeshScale
		{
			[Token(Token = "0x60024B7")]
			[Address(RVA = "0xD7BEA4", Offset = "0xD7BEA4", VA = "0xD7BEA4")]
			get
			{
				return default(UnityEngine.Vector3);
			}
		}

		[Token(Token = "0x60024B6")]
		[Address(RVA = "0xD7BE88", Offset = "0xD7BE88", VA = "0xD7BE88")]
		private GridCellInfo GetGridCellLookup(int x, int z)
		{
			return null;
		}

		[Token(Token = "0x60024B8")]
		[Address(RVA = "0xD7BF5C", Offset = "0xD7BF5C", VA = "0xD7BF5C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60024B9")]
		[Address(RVA = "0xD7C0AC", Offset = "0xD7C0AC", VA = "0xD7C0AC", Slot = "4")]
		public override void BuildDungeon(DungeonConfig config, DungeonModel model)
		{
		}

		[Token(Token = "0x60024BA")]
		[Address(RVA = "0xD80810", Offset = "0xD80810", VA = "0xD80810")]
		private void Initialize()
		{
		}

		[Token(Token = "0x60024BB")]
		[Address(RVA = "0xD808E0", Offset = "0xD808E0", VA = "0xD808E0", Slot = "5")]
		protected override LevelMarkerList CreateMarkerListObject(DungeonConfig config)
		{
			return null;
		}

		[Token(Token = "0x60024BC")]
		[Address(RVA = "0xD809D8", Offset = "0xD809D8", VA = "0xD809D8")]
		private bool CanFitDistributionCell(HashSet<IntVector> Occupancy, ref Rectangle bounds)
		{
			return default(bool);
		}

		[Token(Token = "0x60024BD")]
		[Address(RVA = "0xD80B2C", Offset = "0xD80B2C", VA = "0xD80B2C")]
		private void SetDistributionCellOccupied(HashSet<IntVector> Occupancy, ref Rectangle bounds)
		{
		}

		[Token(Token = "0x60024BE")]
		[Address(RVA = "0xD7C284", Offset = "0xD7C284", VA = "0xD7C284")]
		public void BuildCellsWithDistribution()
		{
		}

		[Token(Token = "0x60024BF")]
		[Address(RVA = "0xD7C56C", Offset = "0xD7C56C", VA = "0xD7C56C")]
		public void BuildCellsWithSeparation()
		{
		}

		[Token(Token = "0x60024C0")]
		[Address(RVA = "0xD80C70", Offset = "0xD80C70", VA = "0xD80C70")]
		private IntVector GenerateCellSize()
		{
			return default(IntVector);
		}

		[Token(Token = "0x60024C1")]
		[Address(RVA = "0xD80E34", Offset = "0xD80E34", VA = "0xD80E34")]
		private Cell BuildCell()
		{
			return null;
		}

		[Token(Token = "0x60024C2")]
		[Address(RVA = "0xD80D80", Offset = "0xD80D80", VA = "0xD80D80")]
		private Cell BuildCell(ref Rectangle bounds)
		{
			return null;
		}

		[Token(Token = "0x60024C3")]
		[Address(RVA = "0xD8163C", Offset = "0xD8163C", VA = "0xD8163C")]
		private int GetNextCellId()
		{
			return default(int);
		}

		[Token(Token = "0x60024C4")]
		[Address(RVA = "0xD7C678", Offset = "0xD7C678", VA = "0xD7C678")]
		private void ApplyBaseOffset()
		{
		}

		[Token(Token = "0x60024C5")]
		[Address(RVA = "0xD7DB74", Offset = "0xD7DB74", VA = "0xD7DB74")]
		private void ApplyNegationVolumes()
		{
		}

		[Token(Token = "0x60024C6")]
		[Address(RVA = "0xD81650", Offset = "0xD81650", VA = "0xD81650")]
		private void ApplyNegationVolume(NegationVolume volume)
		{
		}

		[Token(Token = "0x60024C7")]
		[Address(RVA = "0xD819B8", Offset = "0xD819B8", VA = "0xD819B8")]
		private void GetCellBounds(Cell cell, ref Bounds bounds)
		{
		}

		[Token(Token = "0x60024C8")]
		[Address(RVA = "0xD7C8C4", Offset = "0xD7C8C4", VA = "0xD7C8C4")]
		private void AddUserDefinedPlatforms()
		{
		}

		[Token(Token = "0x60024C9")]
		[Address(RVA = "0xD81B40", Offset = "0xD81B40", VA = "0xD81B40")]
		private void AddPlatformVolume(PlatformVolume platform)
		{
		}

		[Token(Token = "0x60024CA")]
		[Address(RVA = "0xD8144C", Offset = "0xD8144C", VA = "0xD8144C")]
		private int GetRandomRoomSize()
		{
			return default(int);
		}

		[Token(Token = "0x60024CB")]
		[Address(RVA = "0xD81504", Offset = "0xD81504", VA = "0xD81504")]
		private IntVector GetRandomPointInCircle(float radius)
		{
			return default(IntVector);
		}

		[Token(Token = "0x60024CC")]
		[Address(RVA = "0xD81D80", Offset = "0xD81D80", VA = "0xD81D80")]
		private static void Shuffle(GridDungeonModel gridModel)
		{
		}

		[Token(Token = "0x60024CD")]
		[Address(RVA = "0xD81EF0", Offset = "0xD81EF0", VA = "0xD81EF0")]
		private static int CompareFromCenter(Cell cellA, Cell cellB)
		{
			return default(int);
		}

		[Token(Token = "0x60024CE")]
		[Address(RVA = "0xD80E94", Offset = "0xD80E94", VA = "0xD80E94")]
		public static bool Seperate(GridDungeonModel gridModel)
		{
			return default(bool);
		}

		[Token(Token = "0x60024CF")]
		[Address(RVA = "0xD7CBE4", Offset = "0xD7CBE4", VA = "0xD7CBE4")]
		public void TriangulateRooms()
		{
		}

		[Token(Token = "0x60024D0")]
		[Address(RVA = "0xD81F90", Offset = "0xD81F90", VA = "0xD81F90")]
		private static void ConnectCells(Cell c1, Cell c2)
		{
		}

		[Token(Token = "0x60024D1")]
		[Address(RVA = "0xD82064", Offset = "0xD82064", VA = "0xD82064")]
		private static List<Cell> GetRooms(List<Cell> cells)
		{
			return null;
		}

		[Token(Token = "0x60024D2")]
		private void AddUnique<T>(List<T> list, T value)
		{
		}

		[Token(Token = "0x60024D3")]
		[Address(RVA = "0xD7D044", Offset = "0xD7D044", VA = "0xD7D044")]
		private void BuildMinimumSpanningTree()
		{
		}

		[Token(Token = "0x60024D4")]
		[Address(RVA = "0xD823C0", Offset = "0xD823C0", VA = "0xD823C0")]
		private bool ContainsLoop(List<Cell> rooms)
		{
			return default(bool);
		}

		[Token(Token = "0x60024D5")]
		[Address(RVA = "0xD82508", Offset = "0xD82508", VA = "0xD82508")]
		private bool CheckLoop(Cell currentNode, Cell comingFrom, HashSet<Cell> visited)
		{
			return default(bool);
		}

		[Token(Token = "0x60024D6")]
		[Address(RVA = "0xD8230C", Offset = "0xD8230C", VA = "0xD8230C")]
		private static float GetDistance(IntVector a, IntVector b)
		{
			return default(float);
		}

		[Token(Token = "0x60024D7")]
		[Address(RVA = "0xD821B0", Offset = "0xD821B0", VA = "0xD821B0")]
		private List<Cell> GetCellsOfType(CellType cellType)
		{
			return null;
		}

		[Token(Token = "0x60024D8")]
		[Address(RVA = "0xD7DA14", Offset = "0xD7DA14", VA = "0xD7DA14")]
		private void ConnectCorridors()
		{
		}

		[Token(Token = "0x60024D9")]
		[Address(RVA = "0xD826B0", Offset = "0xD826B0", VA = "0xD826B0")]
		private void ConnectCooridorRecursive(int incomingRoomId, int currentRoomId, HashSet<int> visited)
		{
		}

		[Token(Token = "0x60024DA")]
		[Address(RVA = "0xD82D38", Offset = "0xD82D38", VA = "0xD82D38")]
		private bool AreCellsAdjacent(int cellAId, int cellBId)
		{
			return default(bool);
		}

		[Token(Token = "0x60024DB")]
		[Address(RVA = "0xD82E38", Offset = "0xD82E38", VA = "0xD82E38")]
		private void GetCorners(Rectangle bounds, out HashSet<IntVector> corners)
		{
		}

		[Token(Token = "0x60024DC")]
		[Address(RVA = "0xD83058", Offset = "0xD83058", VA = "0xD83058")]
		private void ConnectAdjacentCells(int roomA, int roomB)
		{
		}

		[Token(Token = "0x60024DD")]
		[Address(RVA = "0xD83398", Offset = "0xD83398", VA = "0xD83398")]
		private void Swap(ref int A, ref int B)
		{
		}

		[Token(Token = "0x60024DE")]
		[Address(RVA = "0xD833AC", Offset = "0xD833AC", VA = "0xD833AC")]
		private void GetManhattanPathBetween(IntVector start, IntVector end, ref List<IntVector> path)
		{
		}

		[Token(Token = "0x60024DF")]
		[Address(RVA = "0xD83594", Offset = "0xD83594", VA = "0xD83594")]
		private List<IntVector> GetManhattanPath(IntVector start, IntVector mid, IntVector end)
		{
			return null;
		}

		[Token(Token = "0x60024E0")]
		[Address(RVA = "0xD8379C", Offset = "0xD8379C", VA = "0xD8379C")]
		private void RemovePointsInsideBounds(Rectangle bounds, List<IntVector> points)
		{
		}

		[Token(Token = "0x60024E1")]
		[Address(RVA = "0xD839BC", Offset = "0xD839BC", VA = "0xD839BC")]
		private bool ContainsPointInsideBounds(Rectangle bounds, List<IntVector> points)
		{
			return default(bool);
		}

		[Token(Token = "0x60024E2")]
		[Address(RVA = "0xD83AE0", Offset = "0xD83AE0", VA = "0xD83AE0")]
		private bool ContainsPointsInsideRoomCells(Cell[] roomCells, List<IntVector> points)
		{
			return default(bool);
		}

		[Token(Token = "0x60024E3")]
		[Address(RVA = "0xD83B84", Offset = "0xD83B84", VA = "0xD83B84")]
		private List<IntVector> FindConnectionPath(Cell roomA, Cell roomB)
		{
			return null;
		}

		[Token(Token = "0x60024E4")]
		[Address(RVA = "0xD828B0", Offset = "0xD828B0", VA = "0xD828B0")]
		private void ConnectRooms(int roomAId, int roomBId)
		{
		}

		[Token(Token = "0x60024E5")]
		[Address(RVA = "0xD844F0", Offset = "0xD844F0", VA = "0xD844F0")]
		private void ConnectIfRoomCorridor(int cellAX, int cellAZ, int cellBX, int cellBZ)
		{
		}

		[Token(Token = "0x60024E6")]
		[Address(RVA = "0xD844E8", Offset = "0xD844E8", VA = "0xD844E8")]
		private int RegisterCorridorCell(int cellX, int cellZ, int roomA, int roomB)
		{
			return default(int);
		}

		[Token(Token = "0x60024E7")]
		[Address(RVA = "0xD84198", Offset = "0xD84198", VA = "0xD84198")]
		private int RegisterCorridorCell(int cellX, int cellZ, int roomA, int roomB, bool canRegisterDoors)
		{
			return default(int);
		}

		[Token(Token = "0x60024E8")]
		[Address(RVA = "0xD81F78", Offset = "0xD81F78", VA = "0xD81F78")]
		private static int GetForceDirectionMultiplier(float a, float b, float a1, float b1)
		{
			return default(int);
		}

		[Token(Token = "0x60024E9")]
		[Address(RVA = "0xD7E060", Offset = "0xD7E060", VA = "0xD7E060")]
		private void GenerateDungeonHeights()
		{
		}

		[Token(Token = "0x60024EA")]
		[Address(RVA = "0xD8460C", Offset = "0xD8460C", VA = "0xD8460C")]
		private bool FixDungeonCellHeights(Dictionary<int, CellHeightNode> CellHeightNodes)
		{
			return default(bool);
		}

		[Token(Token = "0x60024EB")]
		[Address(RVA = "0xD828A8", Offset = "0xD828A8", VA = "0xD828A8")]
		private int HASH(int a, int b)
		{
			return default(int);
		}

		[Token(Token = "0x60024EC")]
		[Address(RVA = "0xD8060C", Offset = "0xD8060C", VA = "0xD8060C")]
		private void RemoveAdjacentDoors()
		{
		}

		[Token(Token = "0x60024ED")]
		[Address(RVA = "0xD84C48", Offset = "0xD84C48", VA = "0xD84C48")]
		private bool ContainsAdjacencyPath(int cellIdA, int cellIdB, int maxDepth)
		{
			return default(bool);
		}

		[Token(Token = "0x60024EE")]
		[Address(RVA = "0xD851F8", Offset = "0xD851F8", VA = "0xD851F8")]
		private void AddCorridorPadding(int x, int y, int z)
		{
		}

		[Token(Token = "0x60024EF")]
		[Address(RVA = "0xD7E638", Offset = "0xD7E638", VA = "0xD7E638")]
		private void ConnectStairs(int WeightThreshold)
		{
		}

		[Token(Token = "0x60024F0")]
		[Address(RVA = "0xD85464", Offset = "0xD85464", VA = "0xD85464", Slot = "12")]
		public override void OnVolumePositionModified(Volume volume, out IntVector newPositionOnGrid, out IntVector newSizeOnGrid)
		{
		}

		[Token(Token = "0x60024F1")]
		[Address(RVA = "0xD854AC", Offset = "0xD854AC", VA = "0xD854AC")]
		private void CheckAndMarkAdjacent(Cell cell, int otherCellX, int otherCellZ)
		{
		}

		[Token(Token = "0x60024F2")]
		[Address(RVA = "0xD7DCDC", Offset = "0xD7DCDC", VA = "0xD7DCDC")]
		public void GenerateAdjacencyLookup()
		{
		}

		[Token(Token = "0x60024F3")]
		[Address(RVA = "0xD855AC", Offset = "0xD855AC", VA = "0xD855AC", Slot = "11")]
		public override void EmitMarkers()
		{
		}

		[Token(Token = "0x60024F4")]
		[Address(RVA = "0xD8995C", Offset = "0xD8995C", VA = "0xD8995C")]
		private int GetElevation(Cell baseCell, int x, int z, out int OutYOffset)
		{
			return default(int);
		}

		[Token(Token = "0x60024F5")]
		[Address(RVA = "0xD89A88", Offset = "0xD89A88", VA = "0xD89A88")]
		private void OffsetTransformY(float Y, ref Matrix4x4 OutTransform)
		{
		}

		[Token(Token = "0x60024F6")]
		[Address(RVA = "0xD85084", Offset = "0xD85084", VA = "0xD85084")]
		private bool GetStair(int ownerCell, int connectedToCell, ref StairInfo outStair)
		{
			return default(bool);
		}

		[Token(Token = "0x60024F7")]
		[Address(RVA = "0xD85300", Offset = "0xD85300", VA = "0xD85300")]
		private bool ContainsStair(int ownerCellId, int connectedToCellId)
		{
			return default(bool);
		}

		[Token(Token = "0x60024F8")]
		[Address(RVA = "0xD89AC8", Offset = "0xD89AC8", VA = "0xD89AC8")]
		private bool ContainsStair(Cell baseCell, int x, int z)
		{
			return default(bool);
		}

		[Token(Token = "0x60024F9")]
		[Address(RVA = "0xD89C94", Offset = "0xD89C94", VA = "0xD89C94")]
		public bool V3Equal(UnityEngine.Vector3 a, UnityEngine.Vector3 b)
		{
			return default(bool);
		}

		[Token(Token = "0x60024FA")]
		[Address(RVA = "0xD89D58", Offset = "0xD89D58", VA = "0xD89D58")]
		private bool CanDrawFence(Cell baseCell, int x, int z, out bool isElevatedFence, out bool drawPillar, out int elevationHeight)
		{
			return default(bool);
		}

		[Token(Token = "0x60024FB")]
		[Address(RVA = "0xD89E58", Offset = "0xD89E58", VA = "0xD89E58")]
		private bool ShouldMakeDoor(int x1, int z1, int x2, int z2, out GridCellInfo cellA, out GridCellInfo cellB)
		{
			return default(bool);
		}

		[Token(Token = "0x60024FC")]
		[Address(RVA = "0xD85744", Offset = "0xD85744", VA = "0xD85744")]
		private void BuildMesh_Room(Cell cell)
		{
		}

		[Token(Token = "0x60024FD")]
		[Address(RVA = "0xD871A8", Offset = "0xD871A8", VA = "0xD871A8")]
		private void BuildMesh_RoomDecoration(Cell cell)
		{
		}

		[Token(Token = "0x60024FE")]
		[Address(RVA = "0xD88A24", Offset = "0xD88A24", VA = "0xD88A24")]
		private void BuildMesh_Corridor_BlockWalls(Cell cell)
		{
		}

		[Token(Token = "0x60024FF")]
		[Address(RVA = "0xD871AC", Offset = "0xD871AC", VA = "0xD871AC")]
		private void BuildMesh_Corridor(Cell cell)
		{
		}

		[Token(Token = "0x6002500")]
		[Address(RVA = "0xD8A284", Offset = "0xD8A284", VA = "0xD8A284")]
		private int GetStairHeight(StairInfo stair)
		{
			return default(int);
		}

		[Token(Token = "0x6002501")]
		[Address(RVA = "0xD891B8", Offset = "0xD891B8", VA = "0xD891B8")]
		private void RemoveOverlappingMarkers()
		{
		}

		[Token(Token = "0x6002502")]
		[Address(RVA = "0xD88EBC", Offset = "0xD88EBC", VA = "0xD88EBC")]
		private void BuildMesh_Stairs(Cell cell)
		{
		}

		[Token(Token = "0x6002503")]
		[Address(RVA = "0xD89F18", Offset = "0xD89F18", VA = "0xD89F18")]
		private void BuildMesh_Floor(Cell cell)
		{
		}

		[Token(Token = "0x6002504")]
		[Address(RVA = "0xD8A358", Offset = "0xD8A358", VA = "0xD8A358", Slot = "9")]
		public override void DebugDraw()
		{
		}

		[Token(Token = "0x6002505")]
		[Address(RVA = "0xD8A69C", Offset = "0xD8A69C", VA = "0xD8A69C")]
		public GridDungeonBuilder()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20005A7")]
	public enum GridDungeonWallType
	{
		[Token(Token = "0x4001E68")]
		WallsAsEdges,
		[Token(Token = "0x4001E69")]
		WallsAsTileBlocks
	}
	[Token(Token = "0x20005A8")]
	public class GridDungeonConfig : DungeonConfig
	{
		[Token(Token = "0x4001E6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C18F8", Offset = "0x8C18F8")]
		public UnityEngine.Vector3 GridCellSize;

		[Token(Token = "0x4001E6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C1930", Offset = "0x8C1930")]
		public int NumCells;

		[Token(Token = "0x4001E6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C1968", Offset = "0x8C1968")]
		public int MinCellSize;

		[Token(Token = "0x4001E6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C19A0", Offset = "0x8C19A0")]
		public int MaxCellSize;

		[Token(Token = "0x4001E6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C19D8", Offset = "0x8C19D8")]
		public int RoomAreaThreshold;

		[Token(Token = "0x4001E6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C1A10", Offset = "0x8C1A10")]
		public float RoomAspectDelta;

		[Token(Token = "0x4001E70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C1A48", Offset = "0x8C1A48")]
		public int CorridorWidth;

		[Token(Token = "0x4001E71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C1A80", Offset = "0x8C1A80")]
		public float HeightVariationProbability;

		[Token(Token = "0x4001E72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C1AB8", Offset = "0x8C1AB8")]
		public int MaxAllowedStairHeight;

		[Token(Token = "0x4001E73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C1AF0", Offset = "0x8C1AF0")]
		public float SpanningTreeLoopProbability;

		[Token(Token = "0x4001E74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C1B28", Offset = "0x8C1B28")]
		public float StairConnectionTollerance;

		[Token(Token = "0x4001E75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C1B60", Offset = "0x8C1B60")]
		public float DoorProximitySteps;

		[Token(Token = "0x4001E76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C1B98", Offset = "0x8C1B98")]
		public float NormalMean;

		[Token(Token = "0x4001E77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C1BD0", Offset = "0x8C1BD0")]
		public float NormalStd;

		[Token(Token = "0x4001E78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C1C08", Offset = "0x8C1C08")]
		public float InitialRoomRadius;

		[Token(Token = "0x4001E79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C1C40", Offset = "0x8C1C40")]
		public GridDungeonWallType WallLayoutType;

		[Token(Token = "0x4001E7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public int FloorHeight;

		[Token(Token = "0x4001E7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public bool UseFastCellDistribution;

		[Token(Token = "0x4001E7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public int CellDistributionWidth;

		[Token(Token = "0x4001E7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public int CellDistributionLength;

		[Token(Token = "0x6002506")]
		[Address(RVA = "0xCCC7B4", Offset = "0xCCC7B4", VA = "0xCCC7B4")]
		public GridDungeonConfig()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20005A9")]
	public enum CellType
	{
		[Token(Token = "0x4001E7F")]
		Room,
		[Token(Token = "0x4001E80")]
		Corridor,
		[Token(Token = "0x4001E81")]
		CorridorPadding,
		[Token(Token = "0x4001E82")]
		Unknown
	}
	[Serializable]
	[Token(Token = "0x20005AA")]
	public class StairInfo
	{
		[Token(Token = "0x4001E83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		public int OwnerCell;

		[Token(Token = "0x4001E84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		public int ConnectedToCell;

		[Token(Token = "0x4001E85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public UnityEngine.Vector3 Position;

		[Token(Token = "0x4001E86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		public Quaternion Rotation;

		[Token(Token = "0x4001E87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		public IntVector IPosition;

		[Token(Token = "0x6002507")]
		[Address(RVA = "0xCD5D80", Offset = "0xCD5D80", VA = "0xCD5D80")]
		public StairInfo()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20005AB")]
	public class Cell
	{
		[Token(Token = "0x4001E88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private int id;

		[Token(Token = "0x4001E89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private Rectangle bounds;

		[Token(Token = "0x4001E8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private CellType cellType;

		[Token(Token = "0x4001E8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private bool userDefined;

		[Token(Token = "0x4001E8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private HashSet<int> connectedRooms;

		[Token(Token = "0x4001E8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private HashSet<int> fixedRoomConnections;

		[Token(Token = "0x4001E8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private HashSet<int> adjacentCells;

		[Token(Token = "0x1700042C")]
		public int Id
		{
			[Token(Token = "0x600250A")]
			[Address(RVA = "0xD796F0", Offset = "0xD796F0", VA = "0xD796F0")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600250B")]
			[Address(RVA = "0xD796F8", Offset = "0xD796F8", VA = "0xD796F8")]
			set
			{
			}
		}

		[Token(Token = "0x1700042D")]
		public Rectangle Bounds
		{
			[Token(Token = "0x600250C")]
			[Address(RVA = "0xD79700", Offset = "0xD79700", VA = "0xD79700")]
			get
			{
				return default(Rectangle);
			}
			[Token(Token = "0x600250D")]
			[Address(RVA = "0xD79714", Offset = "0xD79714", VA = "0xD79714")]
			set
			{
			}
		}

		[Token(Token = "0x1700042E")]
		public CellType CellType
		{
			[Token(Token = "0x600250E")]
			[Address(RVA = "0xD79728", Offset = "0xD79728", VA = "0xD79728")]
			get
			{
				return default(CellType);
			}
			[Token(Token = "0x600250F")]
			[Address(RVA = "0xD79730", Offset = "0xD79730", VA = "0xD79730")]
			set
			{
			}
		}

		[Token(Token = "0x1700042F")]
		public bool UserDefined
		{
			[Token(Token = "0x6002511")]
			[Address(RVA = "0xD798C0", Offset = "0xD798C0", VA = "0xD798C0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002512")]
			[Address(RVA = "0xD798C8", Offset = "0xD798C8", VA = "0xD798C8")]
			set
			{
			}
		}

		[Token(Token = "0x17000430")]
		public HashSet<int> ConnectedRooms
		{
			[Token(Token = "0x6002513")]
			[Address(RVA = "0xD798D4", Offset = "0xD798D4", VA = "0xD798D4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002514")]
			[Address(RVA = "0xD798DC", Offset = "0xD798DC", VA = "0xD798DC")]
			set
			{
			}
		}

		[Token(Token = "0x17000431")]
		public HashSet<int> FixedRoomConnections
		{
			[Token(Token = "0x6002515")]
			[Address(RVA = "0xD798E4", Offset = "0xD798E4", VA = "0xD798E4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002516")]
			[Address(RVA = "0xD798EC", Offset = "0xD798EC", VA = "0xD798EC")]
			set
			{
			}
		}

		[Token(Token = "0x17000432")]
		public HashSet<int> AdjacentCells
		{
			[Token(Token = "0x6002517")]
			[Address(RVA = "0xD798F4", Offset = "0xD798F4", VA = "0xD798F4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002518")]
			[Address(RVA = "0xD798FC", Offset = "0xD798FC", VA = "0xD798FC")]
			set
			{
			}
		}

		[Token(Token = "0x17000433")]
		public IntVector Center
		{
			[Token(Token = "0x6002519")]
			[Address(RVA = "0xD79904", Offset = "0xD79904", VA = "0xD79904")]
			get
			{
				return default(IntVector);
			}
		}

		[Token(Token = "0x17000434")]
		public UnityEngine.Vector3 CenterF
		{
			[Token(Token = "0x600251A")]
			[Address(RVA = "0xD799A4", Offset = "0xD799A4", VA = "0xD799A4")]
			get
			{
				return default(UnityEngine.Vector3);
			}
		}

		[Token(Token = "0x6002508")]
		[Address(RVA = "0xD79518", Offset = "0xD79518", VA = "0xD79518")]
		public Cell()
		{
		}

		[Token(Token = "0x6002509")]
		[Address(RVA = "0xD795D8", Offset = "0xD795D8", VA = "0xD795D8")]
		public Cell(int x, int z, int width, int length)
		{
		}

		[Token(Token = "0x6002510")]
		[Address(RVA = "0xD79738", Offset = "0xD79738", VA = "0xD79738")]
		public Bounds GetWorldBounds(UnityEngine.Vector3 gridSize)
		{
			return default(Bounds);
		}

		[Token(Token = "0x600251B")]
		[Address(RVA = "0xD79A60", Offset = "0xD79A60", VA = "0xD79A60", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x600251C")]
		[Address(RVA = "0xD79AFC", Offset = "0xD79AFC", VA = "0xD79AFC", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}
	}
	[Serializable]
	[Token(Token = "0x20005AC")]
	public class CellDoor
	{
		[Token(Token = "0x4001E8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private IntVector[] adjacentTiles;

		[Token(Token = "0x4001E90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool enabled;

		[Token(Token = "0x4001E91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private int[] adjacentCells;

		[Token(Token = "0x17000435")]
		public IntVector[] AdjacentTiles
		{
			[Token(Token = "0x600251D")]
			[Address(RVA = "0xD79B04", Offset = "0xD79B04", VA = "0xD79B04")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000436")]
		public bool Enabled
		{
			[Token(Token = "0x600251E")]
			[Address(RVA = "0xD79B0C", Offset = "0xD79B0C", VA = "0xD79B0C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600251F")]
			[Address(RVA = "0xD79B14", Offset = "0xD79B14", VA = "0xD79B14")]
			set
			{
			}
		}

		[Token(Token = "0x17000437")]
		public int[] AdjacentCells
		{
			[Token(Token = "0x6002520")]
			[Address(RVA = "0xD79B20", Offset = "0xD79B20", VA = "0xD79B20")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002521")]
			[Address(RVA = "0xD79B28", Offset = "0xD79B28", VA = "0xD79B28")]
			set
			{
			}
		}

		[Token(Token = "0x6002522")]
		[Address(RVA = "0xD79B30", Offset = "0xD79B30", VA = "0xD79B30", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6002523")]
		[Address(RVA = "0xD79C00", Offset = "0xD79C00", VA = "0xD79C00")]
		public CellDoor()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20005AD")]
	public struct IntVector2Key
	{
		[Token(Token = "0x4001E92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		public IntVector a;

		[Token(Token = "0x4001E93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[SerializeField]
		public IntVector b;

		[Token(Token = "0x6002524")]
		[Address(RVA = "0x979FD4", Offset = "0x979FD4", VA = "0x979FD4")]
		public IntVector2Key(IntVector a, IntVector b)
		{
		}

		[Token(Token = "0x6002525")]
		[Address(RVA = "0x979FE8", Offset = "0x979FE8", VA = "0x979FE8", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6002526")]
		[Address(RVA = "0x979FF0", Offset = "0x979FF0", VA = "0x979FF0", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}
	}
	[Serializable]
	[Token(Token = "0x20005AE")]
	public class DoorManager
	{
		[Token(Token = "0x4001E94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private Dictionary<IntVector2Key, CellDoor> doorLookupCache;

		[Token(Token = "0x4001E95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private List<CellDoor> doors;

		[Token(Token = "0x17000438")]
		public CellDoor[] Doors
		{
			[Token(Token = "0x600252C")]
			[Address(RVA = "0xD7A6EC", Offset = "0xD7A6EC", VA = "0xD7A6EC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002527")]
		[Address(RVA = "0xD79CC0", Offset = "0xD79CC0", VA = "0xD79CC0")]
		public void Clear()
		{
		}

		[Token(Token = "0x6002528")]
		[Address(RVA = "0xD79D30", Offset = "0xD79D30", VA = "0xD79D30")]
		public void RemoveDoor(CellDoor door)
		{
		}

		[Token(Token = "0x6002529")]
		[Address(RVA = "0xD7A050", Offset = "0xD7A050", VA = "0xD7A050")]
		public CellDoor CreateDoor(IntVector p1, IntVector p2, int cellId1, int cellId2)
		{
			return null;
		}

		[Token(Token = "0x600252A")]
		[Address(RVA = "0xD7A360", Offset = "0xD7A360", VA = "0xD7A360")]
		public bool ContainsDoorBetweenCells(int cellA, int cellB)
		{
			return default(bool);
		}

		[Token(Token = "0x600252B")]
		[Address(RVA = "0xD7A504", Offset = "0xD7A504", VA = "0xD7A504")]
		public bool ContainsDoor(int x1, int z1, int x2, int z2)
		{
			return default(bool);
		}

		[Token(Token = "0x600252D")]
		[Address(RVA = "0xD7A744", Offset = "0xD7A744", VA = "0xD7A744")]
		public DoorManager()
		{
		}
	}
	[Token(Token = "0x20005AF")]
	public class GridDungeonModel : DungeonModel
	{
		[Token(Token = "0x4001E96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		[SerializeField]
		public DoorManager DoorManager;

		[Token(Token = "0x4001E97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public GridDungeonConfig Config;

		[Token(Token = "0x4001E98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		[HideInInspector]
		public List<Cell> Cells;

		[Token(Token = "0x4001E99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		[SerializeField]
		public Dictionary<int, List<StairInfo>> CellStairs;

		[Token(Token = "0x4001E9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		public Dictionary<int, Dictionary<int, GridCellInfo>> GridCellInfoLookup;

		[Token(Token = "0x4001E9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Dictionary<int, Cell> CellLookup;

		[Token(Token = "0x17000439")]
		public CellDoor[] Doors
		{
			[Token(Token = "0x6002530")]
			[Address(RVA = "0xCCCC60", Offset = "0xCCCC60", VA = "0xCCCC60")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600252E")]
		[Address(RVA = "0xCCC86C", Offset = "0xCCC86C", VA = "0xCCC86C")]
		public GridCellInfo GetGridCellLookup(int x, int z)
		{
			return null;
		}

		[Token(Token = "0x600252F")]
		[Address(RVA = "0xCCC96C", Offset = "0xCCC96C", VA = "0xCCC96C")]
		public void BuildSpatialCellLookup()
		{
		}

		[Token(Token = "0x6002531")]
		[Address(RVA = "0xCCCC7C", Offset = "0xCCCC7C", VA = "0xCCCC7C")]
		public void BuildCellLookup()
		{
		}

		[Token(Token = "0x6002532")]
		[Address(RVA = "0xCCCDB0", Offset = "0xCCCDB0", VA = "0xCCCDB0")]
		public Cell GetCell(int Id)
		{
			return null;
		}

		[Token(Token = "0x6002533")]
		[Address(RVA = "0xCCCE44", Offset = "0xCCCE44", VA = "0xCCCE44")]
		public Cell FindCellByPosition(IntVector position)
		{
			return null;
		}

		[Token(Token = "0x6002534")]
		[Address(RVA = "0xCCCF98", Offset = "0xCCCF98", VA = "0xCCCF98", Slot = "4")]
		public override void ResetModel()
		{
		}

		[Token(Token = "0x6002535")]
		[Address(RVA = "0xCCD038", Offset = "0xCCD038", VA = "0xCCD038")]
		public bool ContainsStairAtLocation(int x, int z)
		{
			return default(bool);
		}

		[Token(Token = "0x6002536")]
		[Address(RVA = "0xCCD2D8", Offset = "0xCCD2D8", VA = "0xCCD2D8")]
		public StairInfo GetStairAtLocation(int x, int z)
		{
			return null;
		}

		[Token(Token = "0x6002537")]
		[Address(RVA = "0xCCD570", Offset = "0xCCD570", VA = "0xCCD570")]
		public bool ContainsStair(int cellA, int cellB)
		{
			return default(bool);
		}

		[Token(Token = "0x6002538")]
		[Address(RVA = "0xCCD5C4", Offset = "0xCCD5C4", VA = "0xCCD5C4")]
		private bool CheckContainStair(int cellA, int cellB)
		{
			return default(bool);
		}

		[Token(Token = "0x6002539")]
		[Address(RVA = "0xCCD718", Offset = "0xCCD718", VA = "0xCCD718")]
		public GridDungeonModel()
		{
		}
	}
	[Token(Token = "0x20005B0")]
	public class GridDungeonModelUtils
	{
		[Token(Token = "0x20008B3")]
		private struct LongestPathBFSData
		{
			[Token(Token = "0x4002A5C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Cell cell;

			[Token(Token = "0x4002A5D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int length;
		}

		[Token(Token = "0x600253A")]
		[Address(RVA = "0xCCD820", Offset = "0xCCD820", VA = "0xCCD820")]
		public static Cell[] FindFurthestRooms(GridDungeonModel model)
		{
			return null;
		}

		[Token(Token = "0x600253B")]
		[Address(RVA = "0xCCDC98", Offset = "0xCCDC98", VA = "0xCCDC98")]
		public GridDungeonModelUtils()
		{
		}
	}
	[Token(Token = "0x20005B1")]
	public class LandscapeTransformerGrid : LandscapeTransformerBase
	{
		[Token(Token = "0x4001E9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public LandscapeTexture[] textures;

		[Token(Token = "0x4001E9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float layoutLevelOffset;

		[Token(Token = "0x4001E9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public int smoothingDistance;

		[Token(Token = "0x4001E9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public AnimationCurve roomElevationCurve;

		[Token(Token = "0x4001EA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public AnimationCurve corridorElevationCurve;

		[Token(Token = "0x4001EA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public int roadBlurDistance;

		[Token(Token = "0x4001EA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public float corridorBlurThreshold;

		[Token(Token = "0x4001EA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public float roomBlurThreshold;

		[Token(Token = "0x600253C")]
		[Address(RVA = "0xCCEA10", Offset = "0xCCEA10", VA = "0xCCEA10", Slot = "10")]
		protected override void BuildTerrain(DungeonModel model)
		{
		}

		[Token(Token = "0x600253D")]
		[Address(RVA = "0xCCF178", Offset = "0xCCF178", VA = "0xCCF178")]
		private Rectangle EncompassCellBounds(Rectangle cellBounds, Rectangle bounds)
		{
			return default(Rectangle);
		}

		[Token(Token = "0x600253E")]
		[Address(RVA = "0xCCF288", Offset = "0xCCF288", VA = "0xCCF288", Slot = "11")]
		protected override Rect GetDungeonBounds(DungeonModel model)
		{
			return default(Rect);
		}

		[Token(Token = "0x600253F")]
		[Address(RVA = "0xCCEB2C", Offset = "0xCCEB2C", VA = "0xCCEB2C")]
		private void SetupTextures()
		{
		}

		[Token(Token = "0x6002540")]
		[Address(RVA = "0xCCED10", Offset = "0xCCED10", VA = "0xCCED10")]
		private void UpdateHeights(GridDungeonModel model)
		{
		}

		[Token(Token = "0x6002541")]
		[Address(RVA = "0xCCF68C", Offset = "0xCCF68C", VA = "0xCCF68C", Slot = "12")]
		protected virtual void ApplySmoothing(GridDungeonModel model, LandscapeDataRasterizer rasterizer)
		{
		}

		[Token(Token = "0x6002542")]
		[Address(RVA = "0xCCF010", Offset = "0xCCF010", VA = "0xCCF010")]
		private void UpdateTerrainTextures(GridDungeonModel model)
		{
		}

		[Token(Token = "0x6002543")]
		[Address(RVA = "0xCD02F4", Offset = "0xCD02F4", VA = "0xCD02F4")]
		private void RemoveFoliage(GridDungeonModel model)
		{
		}

		[Token(Token = "0x6002544")]
		[Address(RVA = "0xCCF8B0", Offset = "0xCCF8B0", VA = "0xCCF8B0")]
		private void UpdateBaseTexture(GridDungeonModel model, float[,,] map)
		{
		}

		[Token(Token = "0x6002545")]
		[Address(RVA = "0xCD007C", Offset = "0xCD007C", VA = "0xCD007C")]
		private void UpdateCliffTexture(float[,,] map)
		{
		}

		[Token(Token = "0x6002546")]
		[Address(RVA = "0xCD0670", Offset = "0xCD0670", VA = "0xCD0670")]
		private int GetTextureIndex(LandscapeTextureType textureType)
		{
			return default(int);
		}

		[Token(Token = "0x6002547")]
		[Address(RVA = "0xCD07F0", Offset = "0xCD07F0", VA = "0xCD07F0")]
		public LandscapeTransformerGrid()
		{
		}
	}
	[Token(Token = "0x20005B2")]
	public class MarkerEmitterCornerBeautifier : DungeonMarkerEmitter
	{
		[Token(Token = "0x20008B4")]
		private class CellSpatialConfig
		{
			[Token(Token = "0x4002A5E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string markerName;

			[Token(Token = "0x4002A5F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int[] neighborConfig;

			[Token(Token = "0x60030C7")]
			[Address(RVA = "0xCD1754", Offset = "0xCD1754", VA = "0xCD1754")]
			public CellSpatialConfig(string markerName, int[] neighborConfig)
			{
			}
		}

		[Token(Token = "0x4001EA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static CellSpatialConfig[] CornerConfigs;

		[Token(Token = "0x6002548")]
		[Address(RVA = "0xCD0810", Offset = "0xCD0810", VA = "0xCD0810", Slot = "4")]
		public override void EmitMarkers(DungeonBuilder builder)
		{
		}

		[Token(Token = "0x6002549")]
		[Address(RVA = "0xCD0AF8", Offset = "0xCD0AF8", VA = "0xCD0AF8")]
		private void EmitForPoint(DungeonBuilder builder, GridDungeonModel model, IntVector point)
		{
		}

		[Token(Token = "0x600254A")]
		[Address(RVA = "0xCD0C30", Offset = "0xCD0C30", VA = "0xCD0C30")]
		private bool ConfigMatches(GridDungeonModel model, IntVector point, CellSpatialConfig config)
		{
			return default(bool);
		}

		[Token(Token = "0x600254B")]
		[Address(RVA = "0xCD0D50", Offset = "0xCD0D50", VA = "0xCD0D50")]
		private void EmitCornerMarker(DungeonBuilder builder, GridDungeonModel model, IntVector point, string markerName)
		{
		}

		[Token(Token = "0x600254C")]
		[Address(RVA = "0xCD0FA4", Offset = "0xCD0FA4", VA = "0xCD0FA4")]
		public MarkerEmitterCornerBeautifier()
		{
		}
	}
	[Token(Token = "0x20005B3")]
	public class MarkerEmitterEmptySpace : DungeonMarkerEmitter
	{
		[Token(Token = "0x4001EA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int distanceToCover;

		[Token(Token = "0x4001EA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string markerName;

		[Token(Token = "0x4001EA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string indexedMarkerNamePrefix;

		[Token(Token = "0x4001EA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool overrideY;

		[Token(Token = "0x4001EA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string overrideYBlackboardKey;

		[Token(Token = "0x600254E")]
		[Address(RVA = "0xCD178C", Offset = "0xCD178C", VA = "0xCD178C", Slot = "4")]
		public override void EmitMarkers(DungeonBuilder builder)
		{
		}

		[Token(Token = "0x600254F")]
		[Address(RVA = "0xCD1E98", Offset = "0xCD1E98", VA = "0xCD1E98")]
		public MarkerEmitterEmptySpace()
		{
		}
	}
	[Token(Token = "0x20005B4")]
	public class MarkerEmitterFindLowestPoint : DungeonMarkerEmitter
	{
		[Token(Token = "0x4001EAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string MarkerName;

		[Token(Token = "0x4001EAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string BlackboardKeyLowestY;

		[Token(Token = "0x6002550")]
		[Address(RVA = "0xCD1F18", Offset = "0xCD1F18", VA = "0xCD1F18", Slot = "4")]
		public override void EmitMarkers(DungeonBuilder builder)
		{
		}

		[Token(Token = "0x6002551")]
		[Address(RVA = "0xCD2560", Offset = "0xCD2560", VA = "0xCD2560")]
		public MarkerEmitterFindLowestPoint()
		{
		}
	}
	[Token(Token = "0x20005B5")]
	public class MarkerEmitterFreeSpaceDecorator : DungeonMarkerEmitter
	{
		[Token(Token = "0x4001EAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int distanceFromEdge;

		[Token(Token = "0x4001EAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string markerName;

		[Token(Token = "0x4001EAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float pushDownAmount;

		[Token(Token = "0x4001EAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public UnityEngine.Vector3[] pushDownTestAxis;

		[Token(Token = "0x6002552")]
		[Address(RVA = "0xCD25C8", Offset = "0xCD25C8", VA = "0xCD25C8", Slot = "4")]
		public override void EmitMarkers(DungeonBuilder builder)
		{
		}

		[Token(Token = "0x6002553")]
		[Address(RVA = "0xCD2EF8", Offset = "0xCD2EF8", VA = "0xCD2EF8")]
		public MarkerEmitterFreeSpaceDecorator()
		{
		}
	}
	[Token(Token = "0x20005B6")]
	public class MarkerEmitterGridWall2D : DungeonMarkerEmitter
	{
		[Token(Token = "0x20008B5")]
		public enum WallPushType
		{
			[Token(Token = "0x4002A61")]
			WallsOutside,
			[Token(Token = "0x4002A62")]
			WallsInside
		}

		[Token(Token = "0x20008B6")]
		private class Wall2DMarkerInfo
		{
			[Token(Token = "0x4002A63")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string markerName;

			[Token(Token = "0x4002A64")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Matrix4x4 transform;

			[Token(Token = "0x4002A65")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public IntVector gridPosition;

			[Token(Token = "0x4002A66")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
			public int cellId;

			[Token(Token = "0x60030C8")]
			[Address(RVA = "0xCD4B78", Offset = "0xCD4B78", VA = "0xCD4B78")]
			public Wall2DMarkerInfo()
			{
			}
		}

		[Token(Token = "0x4001EB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public WallPushType wallPushType;

		[Token(Token = "0x4001EB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool fixCorners;

		[Token(Token = "0x6002554")]
		[Address(RVA = "0xCD2F78", Offset = "0xCD2F78", VA = "0xCD2F78", Slot = "4")]
		public override void EmitMarkers(DungeonBuilder builder)
		{
		}

		[Token(Token = "0x6002555")]
		[Address(RVA = "0xCD4574", Offset = "0xCD4574", VA = "0xCD4574")]
		private void AddGround2DMarkers(List<Wall2DMarkerInfo> markerList, Dictionary<string, HashSet<IntVector>> occupied, LevelMarkerList gridMarkers, UnityEngine.Vector3 gridSize)
		{
		}

		[Token(Token = "0x6002556")]
		[Address(RVA = "0xCD4AC0", Offset = "0xCD4AC0", VA = "0xCD4AC0")]
		private HashSet<IntVector> GetHashSet(string name, Dictionary<string, HashSet<IntVector>> occupied)
		{
			return null;
		}

		[Token(Token = "0x6002557")]
		[Address(RVA = "0xCD3BC0", Offset = "0xCD3BC0", VA = "0xCD3BC0")]
		private void FixCornerWalls(List<Wall2DMarkerInfo> wall2DMarkers, LevelMarkerList gridMarkers, Dictionary<string, HashSet<IntVector>> occupied, UnityEngine.Vector3 gridSize)
		{
		}

		[Token(Token = "0x6002558")]
		[Address(RVA = "0xCD4D38", Offset = "0xCD4D38", VA = "0xCD4D38")]
		private void InsertCornerMarker(int cellId, IntVector gridPosition, UnityEngine.Vector3 gridSize, List<Wall2DMarkerInfo> wall2DMarkers, Dictionary<string, HashSet<IntVector>> occupied)
		{
		}

		[Token(Token = "0x6002559")]
		[Address(RVA = "0xCD4F9C", Offset = "0xCD4F9C", VA = "0xCD4F9C")]
		private bool ContainsWall2D(HashSet<IntVector> walls, HashSet<IntVector> doors, IntVector position)
		{
			return default(bool);
		}

		[Token(Token = "0x600255A")]
		[Address(RVA = "0xCD4B80", Offset = "0xCD4B80", VA = "0xCD4B80")]
		private bool HasValidCornerNeighbors(HashSet<IntVector> walls, HashSet<IntVector> doors, IntVector center, int dx1, int dz1, int dx2, int dz2)
		{
			return default(bool);
		}

		[Token(Token = "0x600255B")]
		[Address(RVA = "0xCD3A6C", Offset = "0xCD3A6C", VA = "0xCD3A6C")]
		private void RegisterMarker(Wall2DMarkerInfo markerInfo, List<Wall2DMarkerInfo> markerList, Dictionary<string, HashSet<IntVector>> occupied)
		{
		}

		[Token(Token = "0x600255C")]
		[Address(RVA = "0xCD3700", Offset = "0xCD3700", VA = "0xCD3700")]
		private Wall2DMarkerInfo GetMarker2D(PropSocket prop, string markerName, UnityEngine.Vector3 gridSize)
		{
			return null;
		}

		[Token(Token = "0x600255D")]
		[Address(RVA = "0xCD5050", Offset = "0xCD5050", VA = "0xCD5050")]
		public MarkerEmitterGridWall2D()
		{
		}
	}
	[Token(Token = "0x20005B7")]
	public class GridItemDoorMetadata : MonoBehaviour
	{
		[Token(Token = "0x4001EB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int cellA;

		[Token(Token = "0x4001EB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int cellB;

		[Token(Token = "0x600255E")]
		[Address(RVA = "0xCCE6BC", Offset = "0xCCE6BC", VA = "0xCCE6BC")]
		public GridItemDoorMetadata()
		{
		}
	}
	[Token(Token = "0x20005B8")]
	public class GridItemMetadataHandler : DungeonItemSpawnListener
	{
		[Token(Token = "0x600255F")]
		[Address(RVA = "0xCCE6C4", Offset = "0xCCE6C4", VA = "0xCCE6C4", Slot = "4")]
		public override void SetMetadata(GameObject dungeonItem, DungeonNodeSpawnData spawnData)
		{
		}

		[Token(Token = "0x6002560")]
		[Address(RVA = "0xCCE8D0", Offset = "0xCCE8D0", VA = "0xCCE8D0")]
		public GridItemMetadataHandler()
		{
		}
	}
	[Token(Token = "0x20005B9")]
	[ExecuteInEditMode]
	public class DungeonPaintModeGrid : DungeonPaintMode
	{
		[Token(Token = "0x4001EB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int cursorLogicalHeight;

		[Token(Token = "0x4001EB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float overlayOpacity;

		[Token(Token = "0x4001EB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool mode2D;

		[Token(Token = "0x4001EB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public int brushSize;

		[Token(Token = "0x4001EB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private GridDungeonModel gridModel;

		[Token(Token = "0x6002561")]
		[Address(RVA = "0xD7A7DC", Offset = "0xD7A7DC", VA = "0xD7A7DC")]
		public float GetCursorHeight()
		{
			return default(float);
		}

		[Token(Token = "0x6002562")]
		[Address(RVA = "0xD7A8B8", Offset = "0xD7A8B8", VA = "0xD7A8B8")]
		public void SetElevationDelta(int delta)
		{
		}

		[Token(Token = "0x6002563")]
		[Address(RVA = "0xD7A8C8", Offset = "0xD7A8C8", VA = "0xD7A8C8")]
		public GridDungeonModel GetDungeonModelGrid()
		{
			return null;
		}

		[Token(Token = "0x6002564")]
		[Address(RVA = "0xD7AA4C", Offset = "0xD7AA4C", VA = "0xD7AA4C")]
		public DungeonPaintModeGrid()
		{
		}
	}
	[Token(Token = "0x20005BA")]
	public class GridDungeonQuery : DungeonEventListener
	{
		[Token(Token = "0x4001EB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public Dictionary<int, GameObject[]> DoorObjectsByCellId;

		[Token(Token = "0x6002565")]
		[Address(RVA = "0xCCDCA0", Offset = "0xCCDCA0", VA = "0xCCDCA0", Slot = "7")]
		public override void OnPostDungeonBuild(Dungeon dungeon, DungeonModel model)
		{
		}

		[Token(Token = "0x6002566")]
		[Address(RVA = "0xCCE0E0", Offset = "0xCCE0E0", VA = "0xCCE0E0", Slot = "8")]
		public override void OnPreDungeonDestroy(Dungeon dungeon)
		{
		}

		[Token(Token = "0x6002567")]
		[Address(RVA = "0xCCDCA4", Offset = "0xCCDCA4", VA = "0xCCDCA4")]
		public void GenerateQuery()
		{
		}

		[Token(Token = "0x6002568")]
		[Address(RVA = "0xCCE138", Offset = "0xCCE138", VA = "0xCCE138")]
		public void GetDoorsForCell(int cellId, out GameObject[] doorGameObjects)
		{
		}

		[Token(Token = "0x6002569")]
		[Address(RVA = "0xCCE1E4", Offset = "0xCCE1E4", VA = "0xCCE1E4")]
		public bool GetCellAtPosition(UnityEngine.Vector3 position, out Cell outCell)
		{
			return default(bool);
		}

		[Token(Token = "0x600256A")]
		[Address(RVA = "0xCCE41C", Offset = "0xCCE41C", VA = "0xCCE41C")]
		public Bounds GetCellBounds(Cell cell)
		{
			return default(Bounds);
		}

		[Token(Token = "0x600256B")]
		[Address(RVA = "0xCCE510", Offset = "0xCCE510", VA = "0xCCE510")]
		public Cell GetRandomCell()
		{
			return null;
		}

		[Token(Token = "0x600256C")]
		[Address(RVA = "0xCCE5F8", Offset = "0xCCE5F8", VA = "0xCCE5F8")]
		public Cell[] FindFurthestRooms()
		{
			return null;
		}

		[Token(Token = "0x600256D")]
		[Address(RVA = "0xCCE64C", Offset = "0xCCE64C", VA = "0xCCE64C")]
		public GridDungeonQuery()
		{
		}
	}
	[Token(Token = "0x20005BB")]
	public class GridBuilderUtils
	{
		[Token(Token = "0x600256E")]
		[Address(RVA = "0xD7AAA0", Offset = "0xD7AAA0", VA = "0xD7AAA0")]
		public static bool IsCorridor(CellType type)
		{
			return default(bool);
		}

		[Token(Token = "0x600256F")]
		[Address(RVA = "0xD7AAB0", Offset = "0xD7AAB0", VA = "0xD7AAB0")]
		public static bool IsRoomCorridor(CellType typeA, CellType typeB)
		{
			return default(bool);
		}

		[Token(Token = "0x6002570")]
		[Address(RVA = "0xD7AAE4", Offset = "0xD7AAE4", VA = "0xD7AAE4")]
		public static void GetRoomConnectionPointsForTiledMode(Rectangle bounds, ref List<IntVector> positions, bool skipCornersOnPathSelection)
		{
		}

		[Token(Token = "0x6002571")]
		[Address(RVA = "0xD7AD44", Offset = "0xD7AD44", VA = "0xD7AD44")]
		public static bool AreAdjacentCellsReachable(GridDungeonModel gridModel, int cellIdA, int cellIdB)
		{
			return default(bool);
		}

		[Token(Token = "0x6002572")]
		[Address(RVA = "0xD7AE08", Offset = "0xD7AE08", VA = "0xD7AE08")]
		public static int[] GetCellCluster(GridDungeonModel gridModel, int sampleCellId)
		{
			return null;
		}

		[Token(Token = "0x6002573")]
		[Address(RVA = "0xD7B124", Offset = "0xD7B124", VA = "0xD7B124")]
		public static void GetAdjacentCorridors(GridDungeonModel gridModel, int startCellId, ref List<int> OutConnectedCorridors, ref List<int> OutConnectedRooms)
		{
		}

		[Token(Token = "0x6002574")]
		[Address(RVA = "0xD7B430", Offset = "0xD7B430", VA = "0xD7B430")]
		public GridBuilderUtils()
		{
		}
	}
	[Token(Token = "0x20005BC")]
	public class GridDebugDrawUtils
	{
		[Token(Token = "0x6002575")]
		[Address(RVA = "0xD7B4A8", Offset = "0xD7B4A8", VA = "0xD7B4A8")]
		public static void DrawCell(Cell cell, Color color, UnityEngine.Vector3 gridScale, bool mode2D)
		{
		}

		[Token(Token = "0x6002576")]
		[Address(RVA = "0xD7B4E8", Offset = "0xD7B4E8", VA = "0xD7B4E8")]
		public static void DrawCellId(Cell cell, UnityEngine.Vector3 gridScale, bool mode2D)
		{
		}

		[Token(Token = "0x6002577")]
		[Address(RVA = "0xD7B69C", Offset = "0xD7B69C", VA = "0xD7B69C")]
		public static void DrawCellConnectionPoints(Cell cell, GridDungeonModel model, Color color, bool mode2D)
		{
		}

		[Token(Token = "0x6002578")]
		[Address(RVA = "0xD7B8F8", Offset = "0xD7B8F8", VA = "0xD7B8F8")]
		public static void DrawAdjacentCells(Cell cell, GridDungeonModel model, Color color, bool mode2D)
		{
		}

		[Token(Token = "0x6002579")]
		[Address(RVA = "0xD7BE48", Offset = "0xD7BE48", VA = "0xD7BE48")]
		public GridDebugDrawUtils()
		{
		}
	}
	[Token(Token = "0x20005BD")]
	public class PlatformVolume : Volume
	{
		[Token(Token = "0x4001EBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public CellType cellType;

		[Token(Token = "0x600257A")]
		[Address(RVA = "0xCD5060", Offset = "0xCD5060", VA = "0xCD5060")]
		public PlatformVolume()
		{
		}
	}
}
namespace DungeonArchitect.Builders.Grid.SpatialConstraints
{
	[Token(Token = "0x20005BE")]
	public class SpatialConstraintProcessorGrid2D : SpatialConstraintProcessor
	{
		[Token(Token = "0x600257B")]
		[Address(RVA = "0xCD5A00", Offset = "0xCD5A00", VA = "0xCD5A00", Slot = "4")]
		public override SpatialConstraintRuleDomain GetDomain(SpatialConstraintProcessorContext context)
		{
			return null;
		}

		[Token(Token = "0x600257C")]
		[Address(RVA = "0xCD5AC8", Offset = "0xCD5AC8", VA = "0xCD5AC8")]
		public SpatialConstraintProcessorGrid2D()
		{
		}
	}
	[Token(Token = "0x20005BF")]
	public class SpatialConstraintProcessorGrid3D : SpatialConstraintProcessor
	{
		[Token(Token = "0x600257D")]
		[Address(RVA = "0xCD5AD0", Offset = "0xCD5AD0", VA = "0xCD5AD0", Slot = "4")]
		public override SpatialConstraintRuleDomain GetDomain(SpatialConstraintProcessorContext context)
		{
			return null;
		}

		[Token(Token = "0x600257E")]
		[Address(RVA = "0xCD5B98", Offset = "0xCD5B98", VA = "0xCD5B98")]
		public SpatialConstraintProcessorGrid3D()
		{
		}
	}
	[Token(Token = "0x20005C0")]
	public enum ConstraintRuleHeightDifferenceType
	{
		[Token(Token = "0x4001EBC")]
		IsSameHeight,
		[Token(Token = "0x4001EBD")]
		IsAboveReferenceNode,
		[Token(Token = "0x4001EBE")]
		IsBelowReferenceNode
	}
	[Token(Token = "0x20005C1")]
	[RuleMeta]
	public class ConstraintRuleHeightDifference : ConstraintRule
	{
		[Token(Token = "0x4001EBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		public string markerName;

		[Token(Token = "0x4001EC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		public float markerSearchRadius;

		[Token(Token = "0x4001EC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		public float heightCheckTollerance;

		[Token(Token = "0x4001EC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		public ConstraintRuleHeightDifferenceType heightFunction;

		[Token(Token = "0x600257F")]
		[Address(RVA = "0xCD5070", Offset = "0xCD5070", VA = "0xCD5070", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6002580")]
		[Address(RVA = "0xCD50D8", Offset = "0xCD50D8", VA = "0xCD50D8", Slot = "5")]
		public override bool Process(ConstraintRuleContext context)
		{
			return default(bool);
		}

		[Token(Token = "0x6002581")]
		[Address(RVA = "0xCD51E8", Offset = "0xCD51E8", VA = "0xCD51E8")]
		private PropSocket GetMarkerSearchResult(ConstraintRuleContext context)
		{
			return null;
		}

		[Token(Token = "0x6002582")]
		[Address(RVA = "0xCD55A4", Offset = "0xCD55A4", VA = "0xCD55A4")]
		public ConstraintRuleHeightDifference()
		{
		}
	}
	[Token(Token = "0x20005C2")]
	[RuleMeta]
	public class ConstraintRuleMarkerExists : ConstraintRule
	{
		[Token(Token = "0x4001EC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		public string markerName;

		[Token(Token = "0x4001EC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		public float searchRadius;

		[Token(Token = "0x6002583")]
		[Address(RVA = "0xCD55B8", Offset = "0xCD55B8", VA = "0xCD55B8", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6002584")]
		[Address(RVA = "0xCD5620", Offset = "0xCD5620", VA = "0xCD5620", Slot = "5")]
		public override bool Process(ConstraintRuleContext context)
		{
			return default(bool);
		}

		[Token(Token = "0x6002585")]
		[Address(RVA = "0xCD59EC", Offset = "0xCD59EC", VA = "0xCD59EC")]
		public ConstraintRuleMarkerExists()
		{
		}
	}
	[Token(Token = "0x20005C3")]
	public class SpatialConstraintProcessorGridFlow2D : SpatialConstraintProcessor
	{
		[Token(Token = "0x6002586")]
		[Address(RVA = "0xCD5BA0", Offset = "0xCD5BA0", VA = "0xCD5BA0", Slot = "4")]
		public override SpatialConstraintRuleDomain GetDomain(SpatialConstraintProcessorContext context)
		{
			return null;
		}

		[Token(Token = "0x6002587")]
		[Address(RVA = "0xCD5C68", Offset = "0xCD5C68", VA = "0xCD5C68")]
		public SpatialConstraintProcessorGridFlow2D()
		{
		}
	}
	[Token(Token = "0x20005C4")]
	public class SpatialConstraintProcessorGridFlow3D : SpatialConstraintProcessor
	{
		[Token(Token = "0x6002588")]
		[Address(RVA = "0xCD5C70", Offset = "0xCD5C70", VA = "0xCD5C70", Slot = "4")]
		public override SpatialConstraintRuleDomain GetDomain(SpatialConstraintProcessorContext context)
		{
			return null;
		}

		[Token(Token = "0x6002589")]
		[Address(RVA = "0xCD5D38", Offset = "0xCD5D38", VA = "0xCD5D38")]
		public SpatialConstraintProcessorGridFlow3D()
		{
		}
	}
}
namespace DungeonArchitect.Builders.FloorPlan
{
	[Token(Token = "0x20005C5")]
	public class FloorPlanMarkers
	{
		[Token(Token = "0x4001EC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly string MARKER_GROUND;

		[Token(Token = "0x4001EC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static readonly string MARKER_CEILING;

		[Token(Token = "0x4001EC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static readonly string MARKER_WALL;

		[Token(Token = "0x4001EC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static readonly string MARKER_DOOR;

		[Token(Token = "0x4001EC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static readonly string MARKER_BUILDING_WALL;

		[Token(Token = "0x600258A")]
		[Address(RVA = "0xD79458", Offset = "0xD79458", VA = "0xD79458")]
		public FloorPlanMarkers()
		{
		}
	}
	[Token(Token = "0x20005C6")]
	public class FloorPlanBuilder : DungeonBuilder
	{
		[Token(Token = "0x20008B7")]
		public class FloorIslandNode
		{
			[Token(Token = "0x4002A67")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int IslandId;

			[Token(Token = "0x4002A68")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public FloorChunk Chunk;

			[Token(Token = "0x4002A69")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public IntVector Location;

			[Token(Token = "0x60030C9")]
			[Address(RVA = "0xD78AD8", Offset = "0xD78AD8", VA = "0xD78AD8")]
			public FloorIslandNode()
			{
			}
		}

		[Token(Token = "0x20008B8")]
		private class FloorIslandAdjacency
		{
			[Token(Token = "0x4002A6A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public FloorIslandNode A;

			[Token(Token = "0x4002A6B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public FloorIslandNode B;

			[Token(Token = "0x60030CA")]
			[Address(RVA = "0xD790EC", Offset = "0xD790EC", VA = "0xD790EC")]
			public FloorIslandAdjacency()
			{
			}
		}

		[Token(Token = "0x20008B9")]
		private class IslandNodePriorityPredicate : IComparer<int>
		{
			[Token(Token = "0x4002A6C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private Dictionary<int, FloorChunk> IslandToChunkMap;

			[Token(Token = "0x60030CB")]
			[Address(RVA = "0xD790C0", Offset = "0xD790C0", VA = "0xD790C0")]
			public IslandNodePriorityPredicate(Dictionary<int, FloorChunk> InIslandToChunkMap)
			{
			}

			[Token(Token = "0x60030CC")]
			[Address(RVA = "0xD79268", Offset = "0xD79268", VA = "0xD79268", Slot = "4")]
			public int Compare(int IslandA, int IslandB)
			{
				return default(int);
			}
		}

		[Token(Token = "0x4001ECA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private FloorPlanConfig floorPlanConfig;

		[Token(Token = "0x4001ECB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private FloorPlanModel floorPlanModel;

		[Token(Token = "0x4001ECC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private FloorChunkDB ChunkDB;

		[Token(Token = "0x4001ECD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private FloorDoorManager DoorManager;

		[Token(Token = "0x4001ECE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private HashSet<int> Visited;

		[Token(Token = "0x4001ECF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private new System.Random random;

		[Token(Token = "0x600258C")]
		[Address(RVA = "0xD76168", Offset = "0xD76168", VA = "0xD76168", Slot = "4")]
		public override void BuildDungeon(DungeonConfig config, DungeonModel model)
		{
		}

		[Token(Token = "0x600258D")]
		[Address(RVA = "0xD769B0", Offset = "0xD769B0", VA = "0xD769B0", Slot = "11")]
		public override void EmitMarkers()
		{
		}

		[Token(Token = "0x600258E")]
		[Address(RVA = "0xD762A0", Offset = "0xD762A0", VA = "0xD762A0")]
		private void BuildLayout()
		{
		}

		[Token(Token = "0x600258F")]
		[Address(RVA = "0xD7766C", Offset = "0xD7766C", VA = "0xD7766C")]
		private void SplitChunk(FloorChunk Chunk, FloorChunk OutLeft, FloorChunk OutRight, FloorChunk OutHallway)
		{
		}

		[Token(Token = "0x6002590")]
		[Address(RVA = "0xD77870", Offset = "0xD77870", VA = "0xD77870")]
		private void SplitChunk(FloorChunk Chunk, FloorChunk OutLeft, FloorChunk OutRight)
		{
		}

		[Token(Token = "0x6002591")]
		[Address(RVA = "0xD782A8", Offset = "0xD782A8", VA = "0xD782A8")]
		private void EmitMarkerAt(UnityEngine.Vector3 WorldLocation, string MarkerName, Quaternion Rotation)
		{
		}

		[Token(Token = "0x6002592")]
		[Address(RVA = "0xD78484", Offset = "0xD78484", VA = "0xD78484")]
		private void EmitMarkerAt(UnityEngine.Vector3 WorldLocation, string MarkerName, float Angle)
		{
		}

		[Token(Token = "0x6002593")]
		[Address(RVA = "0xD78558", Offset = "0xD78558", VA = "0xD78558")]
		private bool VolumeEncompassesPoint(Volume volume, IntVector GridPoint)
		{
			return default(bool);
		}

		[Token(Token = "0x6002594")]
		[Address(RVA = "0xD78560", Offset = "0xD78560", VA = "0xD78560")]
		private void GetVolumeCells(Volume volume, int y, List<IntVector> OutCells)
		{
		}

		[Token(Token = "0x6002595")]
		[Address(RVA = "0xD785B8", Offset = "0xD785B8", VA = "0xD785B8")]
		private static int GetChunkDoorConnectionScore(FloorChunk Chunk)
		{
			return default(int);
		}

		[Token(Token = "0x6002596")]
		[Address(RVA = "0xD78600", Offset = "0xD78600", VA = "0xD78600")]
		private void FloodFill(IntVector StartLocation, int IslandId, HashSet<IntVector> Visited, List<FloorIslandNode> IslandNodes, FloorChunkDB ChunkDB)
		{
		}

		[Token(Token = "0x6002597")]
		[Address(RVA = "0xD78B64", Offset = "0xD78B64", VA = "0xD78B64")]
		private void ConnectIslandRecursive(int IslandId, Dictionary<int, List<FloorIslandAdjacency>> AdjacencyByIslands, HashSet<int> IslandVisited, System.Random random, FloorDoorManager DoorManager, Dictionary<int, FloorChunk> IslandToChunkMap)
		{
		}

		[Token(Token = "0x6002598")]
		[Address(RVA = "0xD779F4", Offset = "0xD779F4", VA = "0xD779F4")]
		private void CreateDoors(int y)
		{
		}

		[Token(Token = "0x6002599")]
		[Address(RVA = "0xD790F4", Offset = "0xD790F4", VA = "0xD790F4")]
		private FloorChunk GetPriorityChunk(FloorChunk A, FloorChunk B)
		{
			return null;
		}

		[Token(Token = "0x600259A")]
		[Address(RVA = "0xD7911C", Offset = "0xD7911C", VA = "0xD7911C")]
		private string GetDoorMarkerName(FloorChunk ChunkA, FloorChunk ChunkB)
		{
			return null;
		}

		[Token(Token = "0x600259B")]
		[Address(RVA = "0xD769E4", Offset = "0xD769E4", VA = "0xD769E4")]
		private void EmitBuildingMarkers()
		{
		}

		[Token(Token = "0x600259C")]
		[Address(RVA = "0xD791F8", Offset = "0xD791F8", VA = "0xD791F8")]
		public FloorPlanBuilder()
		{
		}
	}
	[Token(Token = "0x20005C7")]
	public class FloorPlanConfig : DungeonConfig
	{
		[Token(Token = "0x4001ED0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UnityEngine.Vector3 BuildingSize;

		[Token(Token = "0x4001ED1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public UnityEngine.Vector3 GridSize;

		[Token(Token = "0x4001ED2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int MinRoomSize;

		[Token(Token = "0x4001ED3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public int MaxRoomSize;

		[Token(Token = "0x4001ED4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public int HallWidth;

		[Token(Token = "0x4001ED5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public int MinRoomChunkArea;

		[Token(Token = "0x4001ED6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public int RoomSplitProbabilityOffset;

		[Token(Token = "0x600259D")]
		[Address(RVA = "0xD793EC", Offset = "0xD793EC", VA = "0xD793EC")]
		public FloorPlanConfig()
		{
		}
	}
	[Token(Token = "0x20005C8")]
	public class FloorPlanModel : DungeonModel
	{
		[Token(Token = "0x4001ED7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public FloorPlanConfig Config;

		[Token(Token = "0x4001ED8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public FloorChunk[] Chunks;

		[Token(Token = "0x600259E")]
		[Address(RVA = "0xD79510", Offset = "0xD79510", VA = "0xD79510")]
		public FloorPlanModel()
		{
		}
	}
	[Token(Token = "0x20005C9")]
	public enum FloorChunkType
	{
		[Token(Token = "0x4001EDA")]
		Room,
		[Token(Token = "0x4001EDB")]
		Hall,
		[Token(Token = "0x4001EDC")]
		Outside
	}
	[Token(Token = "0x20005CA")]
	public class FloorChunk
	{
		[Token(Token = "0x4001EDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int Id;

		[Token(Token = "0x4001EDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public FloorChunkType ChunkType;

		[Token(Token = "0x4001EDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Rect r;

		[Token(Token = "0x4001EE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Rectangle Bounds;

		[Token(Token = "0x4001EE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public List<IntVector> BoundCells;

		[Token(Token = "0x4001EE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool bReachable;

		[Token(Token = "0x4001EE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float Priority;

		[Token(Token = "0x4001EE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public bool bEmitGroundMarker;

		[Token(Token = "0x4001EE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		public bool bEmitCeilingMarker;

		[Token(Token = "0x4001EE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x52")]
		public bool bConnectDoors;

		[Token(Token = "0x4001EE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x53")]
		public bool bCreateWalls;

		[Token(Token = "0x4001EE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public string WallMarker;

		[Token(Token = "0x4001EE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public string GroundMarker;

		[Token(Token = "0x4001EEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public string CeilingMarker;

		[Token(Token = "0x4001EEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public string DoorMarker;

		[Token(Token = "0x4001EEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public string CenterMarker;

		[Token(Token = "0x600259F")]
		[Address(RVA = "0xD7522C", Offset = "0xD7522C", VA = "0xD7522C")]
		public FloorChunk()
		{
		}

		[Token(Token = "0x60025A0")]
		[Address(RVA = "0xD752D4", Offset = "0xD752D4", VA = "0xD752D4")]
		public int Area()
		{
			return default(int);
		}

		[Token(Token = "0x60025A1")]
		[Address(RVA = "0xD752E4", Offset = "0xD752E4", VA = "0xD752E4")]
		public int GetLength()
		{
			return default(int);
		}

		[Token(Token = "0x60025A2")]
		[Address(RVA = "0xD752F8", Offset = "0xD752F8", VA = "0xD752F8")]
		public int GetWidth()
		{
			return default(int);
		}

		[Token(Token = "0x60025A3")]
		[Address(RVA = "0xD7530C", Offset = "0xD7530C", VA = "0xD7530C")]
		public void SetLength(int Length)
		{
		}

		[Token(Token = "0x60025A4")]
		[Address(RVA = "0xD7532C", Offset = "0xD7532C", VA = "0xD7532C")]
		public void OffsetAlongLength(int Offset)
		{
		}
	}
	[Token(Token = "0x20005CB")]
	public class FloorChunkDB
	{
		[Token(Token = "0x20008BA")]
		private class FChunkCacheNode
		{
			[Token(Token = "0x4002A6D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int ChunkId;

			[Token(Token = "0x4002A6E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float Priority;

			[Token(Token = "0x60030CD")]
			[Address(RVA = "0xD75DD8", Offset = "0xD75DD8", VA = "0xD75DD8")]
			public FChunkCacheNode()
			{
			}

			[Token(Token = "0x60030CE")]
			[Address(RVA = "0xD75D34", Offset = "0xD75D34", VA = "0xD75D34")]
			public FChunkCacheNode(int InChunkId, float InPriority)
			{
			}
		}

		[Token(Token = "0x4001EED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Dictionary<int, FloorChunk> Chunks;

		[Token(Token = "0x4001EEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Dictionary<int, FChunkCacheNode> CachePositionToChunk;

		[Token(Token = "0x4001EEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int IdCounter;

		[Token(Token = "0x60025A5")]
		[Address(RVA = "0xD75358", Offset = "0xD75358", VA = "0xD75358")]
		public FloorChunkDB()
		{
		}

		[Token(Token = "0x60025A6")]
		[Address(RVA = "0xD753F8", Offset = "0xD753F8", VA = "0xD753F8")]
		public FloorChunk Create()
		{
			return null;
		}

		[Token(Token = "0x60025A7")]
		[Address(RVA = "0xD7546C", Offset = "0xD7546C", VA = "0xD7546C")]
		public void Register(FloorChunk Chunk)
		{
		}

		[Token(Token = "0x60025A8")]
		[Address(RVA = "0xD7550C", Offset = "0xD7550C", VA = "0xD7550C")]
		public void GetChunks(List<FloorChunk> OutChunks)
		{
		}

		[Token(Token = "0x60025A9")]
		[Address(RVA = "0xD755A0", Offset = "0xD755A0", VA = "0xD755A0")]
		public void GetChunks(List<FloorChunk> OutChunks, FloorChunkType ChunkType)
		{
		}

		[Token(Token = "0x60025AA")]
		[Address(RVA = "0xD75720", Offset = "0xD75720", VA = "0xD75720")]
		public FloorChunk GetChunk(int Id)
		{
			return null;
		}

		[Token(Token = "0x60025AB")]
		[Address(RVA = "0xD757B4", Offset = "0xD757B4", VA = "0xD757B4")]
		public FloorChunk GetChunkAt(int x, int y, int z)
		{
			return null;
		}

		[Token(Token = "0x60025AC")]
		[Address(RVA = "0xD7590C", Offset = "0xD7590C", VA = "0xD7590C")]
		public FloorChunk GetChunkAt(IntVector Location)
		{
			return null;
		}

		[Token(Token = "0x60025AD")]
		[Address(RVA = "0xD75918", Offset = "0xD75918", VA = "0xD75918")]
		public void CacheChunkPositions()
		{
		}

		[Token(Token = "0x60025AE")]
		[Address(RVA = "0xD758BC", Offset = "0xD758BC", VA = "0xD758BC")]
		public int HASH(int x, int y, int z)
		{
			return default(int);
		}

		[Token(Token = "0x60025AF")]
		[Address(RVA = "0xD75D70", Offset = "0xD75D70", VA = "0xD75D70")]
		public FloorChunk[] GetAllChunks()
		{
			return null;
		}
	}
	[Token(Token = "0x20005CC")]
	public class FloorDoorManager
	{
		[Token(Token = "0x4001EF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Dictionary<IntVector, HashSet<IntVector>> DoorMap;

		[Token(Token = "0x60025B0")]
		[Address(RVA = "0xD75E04", Offset = "0xD75E04", VA = "0xD75E04")]
		public void RegisterDoor(IntVector A, IntVector B)
		{
		}

		[Token(Token = "0x60025B1")]
		[Address(RVA = "0xD75FBC", Offset = "0xD75FBC", VA = "0xD75FBC")]
		public bool ContainsDoorVolume(UnityEngine.Vector3 WorldLocation, List<Volume> DoorVolumes)
		{
			return default(bool);
		}

		[Token(Token = "0x60025B2")]
		[Address(RVA = "0xD75FC4", Offset = "0xD75FC4", VA = "0xD75FC4")]
		public bool ContainsDoor(IntVector A, IntVector B)
		{
			return default(bool);
		}

		[Token(Token = "0x60025B3")]
		[Address(RVA = "0xD760A0", Offset = "0xD760A0", VA = "0xD760A0")]
		public void Clear()
		{
		}

		[Token(Token = "0x60025B4")]
		[Address(RVA = "0xD760F8", Offset = "0xD760F8", VA = "0xD760F8")]
		public FloorDoorManager()
		{
		}
	}
}
namespace DungeonArchitect.Builders.CircularCity
{
	[Token(Token = "0x20005CD")]
	internal class CircularCityDungeonConstants
	{
		[Token(Token = "0x4001EF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly string House;

		[Token(Token = "0x4001EF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static readonly string WallMarkerName;

		[Token(Token = "0x4001EF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static readonly string DoorMarkerName;

		[Token(Token = "0x4001EF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static readonly string GroundMarkerName;

		[Token(Token = "0x4001EF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static readonly string CornerTowerMarkerName;

		[Token(Token = "0x4001EF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static readonly string WallPaddingMarkerName;

		[Token(Token = "0x60025B5")]
		[Address(RVA = "0xD73CE8", Offset = "0xD73CE8", VA = "0xD73CE8")]
		public CircularCityDungeonConstants()
		{
		}
	}
	[Token(Token = "0x20005CE")]
	public class CircularCityDungeonBuilder : DungeonBuilder
	{
		[Token(Token = "0x20008BB")]
		private delegate void InsertHouseDelegate();

		[Token(Token = "0x20008BC")]
		private class SpatialPartitionCache
		{
			[Token(Token = "0x4002A6F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int gridSize;

			[Token(Token = "0x4002A70")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private Dictionary<IntVector2, List<UnityEngine.Vector3>> occupancyGrid;

			[Token(Token = "0x60030D3")]
			[Address(RVA = "0xD73378", Offset = "0xD73378", VA = "0xD73378")]
			public SpatialPartitionCache(int gridSize)
			{
			}

			[Token(Token = "0x60030D4")]
			[Address(RVA = "0xD733FC", Offset = "0xD733FC", VA = "0xD733FC")]
			public void RegisterAsOccupied(UnityEngine.Vector3 position)
			{
			}

			[Token(Token = "0x60030D5")]
			[Address(RVA = "0xD73520", Offset = "0xD73520", VA = "0xD73520")]
			public bool IsFree(UnityEngine.Vector3 position, float distanceSearch)
			{
				return default(bool);
			}

			[Token(Token = "0x60030D6")]
			[Address(RVA = "0xD73AC0", Offset = "0xD73AC0", VA = "0xD73AC0")]
			private bool IsFree(UnityEngine.Vector3 sourcePosition, IntVector2 cell, float distanceSearch)
			{
				return default(bool);
			}

			[Token(Token = "0x60030D7")]
			[Address(RVA = "0xD73A18", Offset = "0xD73A18", VA = "0xD73A18")]
			private IntVector2 GetCell(UnityEngine.Vector3 position)
			{
				return default(IntVector2);
			}
		}

		[Token(Token = "0x4001EF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private CircularCityDungeonConfig cityConfig;

		[Token(Token = "0x4001EF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private CircularCityDungeonModel cityModel;

		[Token(Token = "0x4001EF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private new System.Random random;

		[Token(Token = "0x60025B7")]
		[Address(RVA = "0xD71F84", Offset = "0xD71F84", VA = "0xD71F84", Slot = "4")]
		public override void BuildDungeon(DungeonConfig config, DungeonModel model)
		{
		}

		[Token(Token = "0x60025B8")]
		[Address(RVA = "0xD728CC", Offset = "0xD728CC", VA = "0xD728CC", Slot = "6")]
		public override void OnDestroyed()
		{
		}

		[Token(Token = "0x60025B9")]
		[Address(RVA = "0xD72960", Offset = "0xD72960", VA = "0xD72960", Slot = "11")]
		public override void EmitMarkers()
		{
		}

		[Token(Token = "0x60025BA")]
		[Address(RVA = "0xD72D5C", Offset = "0xD72D5C", VA = "0xD72D5C")]
		private Texture2D GetSplatTexture(int index)
		{
			return null;
		}

		[Token(Token = "0x60025BB")]
		[Address(RVA = "0xD72E7C", Offset = "0xD72E7C", VA = "0xD72E7C")]
		private Texture2D GetRoadmap()
		{
			return null;
		}

		[Token(Token = "0x60025BC")]
		[Address(RVA = "0xD72184", Offset = "0xD72184", VA = "0xD72184")]
		private void GenerateCityLayout()
		{
		}

		[Token(Token = "0x60025BD")]
		[Address(RVA = "0xD72E84", Offset = "0xD72E84", VA = "0xD72E84")]
		private void LayoutBuilder_RoadBlockLayoutBuilt(ref UnityEngine.Vector3[] layout)
		{
		}

		[Token(Token = "0x60025BE")]
		[Address(RVA = "0xD72E88", Offset = "0xD72E88", VA = "0xD72E88")]
		private void DebugDrawGraphGizmo(RoadGraph graph, Color edgeColor, Color nodeColor)
		{
		}

		[Token(Token = "0x60025BF")]
		[Address(RVA = "0xD730EC", Offset = "0xD730EC", VA = "0xD730EC", Slot = "10")]
		public override void DebugDrawGizmos()
		{
		}

		[Token(Token = "0x60025C0")]
		[Address(RVA = "0xD72994", Offset = "0xD72994", VA = "0xD72994")]
		private void EmitCityMarkers()
		{
		}

		[Token(Token = "0x60025C1")]
		[Address(RVA = "0xD7363C", Offset = "0xD7363C", VA = "0xD7363C")]
		private void EmitMarkerAt(string markerName, UnityEngine.Vector3 worldPosition, Quaternion rotation)
		{
		}

		[Token(Token = "0x60025C2")]
		[Address(RVA = "0xD737BC", Offset = "0xD737BC", VA = "0xD737BC")]
		public CircularCityDungeonBuilder()
		{
		}
	}
	[Token(Token = "0x20005CF")]
	public class CircularCityDungeonConfig : DungeonConfig
	{
		[Token(Token = "0x4001EFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int numRings;

		[Token(Token = "0x4001EFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int numRays;

		[Token(Token = "0x4001EFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float startRadius;

		[Token(Token = "0x4001EFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int endRadius;

		[Token(Token = "0x4001EFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float mainRoadStrength;

		[Token(Token = "0x4001EFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float sideRoadStrength;

		[Token(Token = "0x4001F00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float mainRoadRemovalProbability;

		[Token(Token = "0x4001F01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float sideRoadRemovalProbability;

		[Token(Token = "0x4001F02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float randomSideLaneOffsetAngle;

		[Token(Token = "0x4001F03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float interNodeDistance;

		[Token(Token = "0x4001F04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float buildingSize;

		[Token(Token = "0x4001F05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public MeshFilter roadMesh;

		[Token(Token = "0x60025C3")]
		[Address(RVA = "0xD73CA8", Offset = "0xD73CA8", VA = "0xD73CA8")]
		public CircularCityDungeonConfig()
		{
		}
	}
	[Token(Token = "0x20005D0")]
	public enum CircularCityCellType
	{
		[Token(Token = "0x4001F07")]
		Road,
		[Token(Token = "0x4001F08")]
		House,
		[Token(Token = "0x4001F09")]
		Park,
		[Token(Token = "0x4001F0A")]
		CityWallPadding,
		[Token(Token = "0x4001F0B")]
		UserDefined,
		[Token(Token = "0x4001F0C")]
		Empty
	}
	[Token(Token = "0x20005D1")]
	public class CircularCityCell
	{
		[Token(Token = "0x4001F0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public IntVector Position;

		[Token(Token = "0x4001F0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public CircularCityCellType CellType;

		[Token(Token = "0x4001F0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Quaternion Rotation;

		[Token(Token = "0x4001F10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public UnityEngine.Vector3 BlockSize;

		[Token(Token = "0x4001F11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string MarkerNameOverride;

		[Token(Token = "0x60025C4")]
		[Address(RVA = "0xD71F24", Offset = "0xD71F24", VA = "0xD71F24")]
		public CircularCityCell()
		{
		}
	}
	[Token(Token = "0x20005D2")]
	public class CircularCityDungeonModel : DungeonModel
	{
		[Token(Token = "0x4001F12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public CircularCityDungeonConfig Config;

		[Token(Token = "0x4001F13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public RoadGraph roadGraph;

		[Token(Token = "0x4001F14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public RoadGraph layoutGraph;

		[Token(Token = "0x60025C5")]
		[Address(RVA = "0xD73DB4", Offset = "0xD73DB4", VA = "0xD73DB4")]
		public CircularCityDungeonModel()
		{
		}
	}
	[Token(Token = "0x20005D3")]
	public enum CircularCityLandscapeTextureType
	{
		[Token(Token = "0x4001F16")]
		Fill,
		[Token(Token = "0x4001F17")]
		Road,
		[Token(Token = "0x4001F18")]
		Park,
		[Token(Token = "0x4001F19")]
		CityWallPadding
	}
	[Serializable]
	[Token(Token = "0x20005D4")]
	public class CircularCityLandscapeTexture
	{
		[Token(Token = "0x4001F1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public CircularCityLandscapeTextureType textureType;

		[Token(Token = "0x4001F1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Texture2D diffuse;

		[Token(Token = "0x4001F1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Texture2D normal;

		[Token(Token = "0x4001F1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float metallic;

		[Token(Token = "0x4001F1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public UnityEngine.Vector2 size;

		[Token(Token = "0x4001F1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public UnityEngine.Vector2 offset;

		[Token(Token = "0x4001F20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public AnimationCurve curve;

		[Token(Token = "0x60025C6")]
		[Address(RVA = "0xD73DD4", Offset = "0xD73DD4", VA = "0xD73DD4")]
		public CircularCityLandscapeTexture()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20005D5")]
	public class CircularCityFoliageEntry
	{
		[Token(Token = "0x4001F21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int grassIndex;

		[Token(Token = "0x4001F22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float density;

		[Token(Token = "0x60025C7")]
		[Address(RVA = "0xD73DBC", Offset = "0xD73DBC", VA = "0xD73DBC")]
		public CircularCityFoliageEntry()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20005D6")]
	public class CircularCityFoliageTheme
	{
		[Token(Token = "0x4001F23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public CircularCityLandscapeTextureType textureType;

		[Token(Token = "0x4001F24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public CircularCityFoliageEntry[] foliageEntries;

		[Token(Token = "0x4001F25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AnimationCurve curve;

		[Token(Token = "0x4001F26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float density;

		[Token(Token = "0x60025C8")]
		[Address(RVA = "0xD73DC4", Offset = "0xD73DC4", VA = "0xD73DC4")]
		public CircularCityFoliageTheme()
		{
		}
	}
	[Token(Token = "0x20005D7")]
	public class LandscapeTransformerCity : LandscapeTransformerBase
	{
		[Token(Token = "0x4001F27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public CircularCityLandscapeTexture[] textures;

		[Token(Token = "0x4001F28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public CircularCityFoliageTheme[] foliage;

		[Token(Token = "0x4001F29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public int roadBlurDistance;

		[Token(Token = "0x4001F2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float corridorBlurThreshold;

		[Token(Token = "0x4001F2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float roomBlurThreshold;

		[Token(Token = "0x60025C9")]
		[Address(RVA = "0xD73E74", Offset = "0xD73E74", VA = "0xD73E74", Slot = "10")]
		protected override void BuildTerrain(DungeonModel model)
		{
		}

		[Token(Token = "0x60025CA")]
		[Address(RVA = "0xD73F38", Offset = "0xD73F38", VA = "0xD73F38")]
		public LandscapeTransformerCity()
		{
		}
	}
}
namespace DungeonArchitect.Samples
{
	[Token(Token = "0x20005D8")]
	public class SampleFindRoomDoorsController : MonoBehaviour
	{
		[Token(Token = "0x4001F2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Dungeon dungeon;

		[Token(Token = "0x4001F2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform player;

		[Token(Token = "0x4001F2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GridDungeonConfig config;

		[Token(Token = "0x4001F2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private GridDungeonQuery dungeonQuery;

		[Token(Token = "0x4001F30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private GameObject[] trackedDoorObjects;

		[Token(Token = "0x60025CB")]
		[Address(RVA = "0xDF568C", Offset = "0xDF568C", VA = "0xDF568C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60025CC")]
		[Address(RVA = "0xDF5744", Offset = "0xDF5744", VA = "0xDF5744")]
		private void Start()
		{
		}

		[Token(Token = "0x60025CD")]
		[Address(RVA = "0xDF5850", Offset = "0xDF5850", VA = "0xDF5850")]
		private void Update()
		{
		}

		[Token(Token = "0x60025CE")]
		[Address(RVA = "0xDF5958", Offset = "0xDF5958", VA = "0xDF5958")]
		private void ProcessDoorObjects(GameObject[] doorObjects)
		{
		}

		[Token(Token = "0x60025CF")]
		[Address(RVA = "0xDF5B44", Offset = "0xDF5B44", VA = "0xDF5B44")]
		public SampleFindRoomDoorsController()
		{
		}
	}
}
namespace DungeonArchitect.Samples.Common
{
	[Token(Token = "0x20005D9")]
	public class DAFPSMouseLook : MonoBehaviour
	{
		[Token(Token = "0x4001F31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float mouseSensitivity;

		[Token(Token = "0x4001F32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform playerBody;

		[Token(Token = "0x4001F33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float angleUpDown;

		[Token(Token = "0x60025D0")]
		[Address(RVA = "0xDF3D00", Offset = "0xDF3D00", VA = "0xDF3D00")]
		public void Start()
		{
		}

		[Token(Token = "0x60025D1")]
		[Address(RVA = "0xDF3D0C", Offset = "0xDF3D0C", VA = "0xDF3D0C")]
		private void Update()
		{
		}

		[Token(Token = "0x60025D2")]
		[Address(RVA = "0xDF3ED0", Offset = "0xDF3ED0", VA = "0xDF3ED0")]
		public DAFPSMouseLook()
		{
		}
	}
	[Token(Token = "0x20005DA")]
	public class DAFPSMovement : MonoBehaviour
	{
		[Token(Token = "0x4001F34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float speed;

		[Token(Token = "0x4001F35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float gravity;

		[Token(Token = "0x4001F36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float jumpHeight;

		[Token(Token = "0x4001F37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public CharacterController controller;

		[Token(Token = "0x4001F38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private UnityEngine.Vector3 velocity;

		[Token(Token = "0x60025D3")]
		[Address(RVA = "0xDF3EE0", Offset = "0xDF3EE0", VA = "0xDF3EE0")]
		private void Update()
		{
		}

		[Token(Token = "0x60025D4")]
		[Address(RVA = "0xDF4148", Offset = "0xDF4148", VA = "0xDF4148")]
		public DAFPSMovement()
		{
		}
	}
}
namespace DungeonArchitect.Samples.Navigation
{
	[Token(Token = "0x20005DB")]
	public class NavigationDemoController : MonoBehaviour
	{
		[Token(Token = "0x4001F39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Dungeon dungeon;

		[Token(Token = "0x4001F3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject player;

		[Token(Token = "0x4001F3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject[] npcs;

		[Token(Token = "0x4001F3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public UnityEngine.Vector3 spawnOffset;

		[Token(Token = "0x60025D5")]
		[Address(RVA = "0xDF4F78", Offset = "0xDF4F78", VA = "0xDF4F78")]
		private void Awake()
		{
		}

		[Token(Token = "0x60025D6")]
		[Address(RVA = "0xDF503C", Offset = "0xDF503C", VA = "0xDF503C")]
		private void TeleportToValidPlatform(GameObject obj)
		{
		}

		[Token(Token = "0x60025D7")]
		[Address(RVA = "0xDF533C", Offset = "0xDF533C", VA = "0xDF533C")]
		private void Update()
		{
		}

		[Token(Token = "0x60025D8")]
		[Address(RVA = "0xDF5340", Offset = "0xDF5340", VA = "0xDF5340")]
		public NavigationDemoController()
		{
		}
	}
	[Token(Token = "0x20005DC")]
	public class NavigationDemoNPC : MonoBehaviour
	{
		[Token(Token = "0x4001F3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private NavMeshAgent agent;

		[Token(Token = "0x4001F3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private CharacterController character;

		[Token(Token = "0x4001F3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform target;

		[Token(Token = "0x60025D9")]
		[Address(RVA = "0xDF5348", Offset = "0xDF5348", VA = "0xDF5348")]
		private void Awake()
		{
		}

		[Token(Token = "0x60025DA")]
		[Address(RVA = "0xDF53B8", Offset = "0xDF53B8", VA = "0xDF53B8")]
		private void Update()
		{
		}

		[Token(Token = "0x60025DB")]
		[Address(RVA = "0xDF54E8", Offset = "0xDF54E8", VA = "0xDF54E8")]
		public NavigationDemoNPC()
		{
		}
	}
	[Token(Token = "0x20005DD")]
	public class NavigationDemoPlayer : MonoBehaviour
	{
		[Token(Token = "0x4001F40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private CharacterController character;

		[Token(Token = "0x4001F41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float speed;

		[Token(Token = "0x4001F42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float rotateSpeed;

		[Token(Token = "0x60025DC")]
		[Address(RVA = "0xDF54F0", Offset = "0xDF54F0", VA = "0xDF54F0")]
		private void Awake()
		{
		}

		[Token(Token = "0x60025DD")]
		[Address(RVA = "0xDF5548", Offset = "0xDF5548", VA = "0xDF5548")]
		private void Update()
		{
		}

		[Token(Token = "0x60025DE")]
		[Address(RVA = "0xDF567C", Offset = "0xDF567C", VA = "0xDF567C")]
		public NavigationDemoPlayer()
		{
		}
	}
}
namespace DungeonArchitect.Samples.ShooterGame
{
	[Token(Token = "0x20005DE")]
	public class AIStateBase : StateBase
	{
		[Serializable]
		[Token(Token = "0x20008BD")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B90D0", Offset = "0x8B90D0")]
		private sealed class <>c
		{
			[Token(Token = "0x4002A71")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002A72")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Comparison<RaycastHit2D> <>9__7_0;

			[Token(Token = "0x4002A73")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Comparison<RaycastHit> <>9__8_0;

			[Token(Token = "0x60030D9")]
			[Address(RVA = "0xDF6D98", Offset = "0xDF6D98", VA = "0xDF6D98")]
			public <>c()
			{
			}

			[Token(Token = "0x60030DA")]
			[Address(RVA = "0xDF6DA0", Offset = "0xDF6DA0", VA = "0xDF6DA0")]
			internal int <IsPlayerVisible2D>b__7_0(RaycastHit2D x, RaycastHit2D y)
			{
				return default(int);
			}

			[Token(Token = "0x60030DB")]
			[Address(RVA = "0xDF6E1C", Offset = "0xDF6E1C", VA = "0xDF6E1C")]
			internal int <IsPlayerVisible3D>b__8_0(RaycastHit x, RaycastHit y)
			{
				return default(int);
			}
		}

		[Token(Token = "0x4001F43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected AIController controller;

		[Token(Token = "0x60025DF")]
		[Address(RVA = "0xDF5F3C", Offset = "0xDF5F3C", VA = "0xDF5F3C")]
		public AIStateBase(AIController controller, float updateDelay)
		{
		}

		[Token(Token = "0x60025E0")]
		[Address(RVA = "0xDF5F70", Offset = "0xDF5F70", VA = "0xDF5F70", Slot = "18")]
		protected virtual void HandleFrameUpdate(float elapsedTime)
		{
		}

		[Token(Token = "0x60025E1")]
		[Address(RVA = "0xDF5F74", Offset = "0xDF5F74", VA = "0xDF5F74", Slot = "12")]
		public override void Update()
		{
		}

		[Token(Token = "0x60025E2")]
		[Address(RVA = "0xDF60B4", Offset = "0xDF60B4", VA = "0xDF60B4")]
		protected bool IsWithinPlayerProximity(ref Collider outCollider, float radius)
		{
			return default(bool);
		}

		[Token(Token = "0x60025E3")]
		[Address(RVA = "0xDF60BC", Offset = "0xDF60BC", VA = "0xDF60BC")]
		protected GameObject GetPlayer()
		{
			return null;
		}

		[Token(Token = "0x60025E4")]
		[Address(RVA = "0xDF6128", Offset = "0xDF6128", VA = "0xDF6128")]
		protected bool IsPlayerVisible()
		{
			return default(bool);
		}

		[Token(Token = "0x60025E5")]
		[Address(RVA = "0xDF614C", Offset = "0xDF614C", VA = "0xDF614C")]
		protected bool IsPlayerVisible2D()
		{
			return default(bool);
		}

		[Token(Token = "0x60025E6")]
		[Address(RVA = "0xDF67C8", Offset = "0xDF67C8", VA = "0xDF67C8")]
		protected bool IsPlayerVisible3D()
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20005DF")]
	public class AIStateMoveToLastKnownPosition : AIStateBase
	{
		[Token(Token = "0x60025E7")]
		[Address(RVA = "0xDF70A0", Offset = "0xDF70A0", VA = "0xDF70A0")]
		public AIStateMoveToLastKnownPosition(AIController controller)
		{
		}

		[Token(Token = "0x60025E8")]
		[Address(RVA = "0xDF70CC", Offset = "0xDF70CC", VA = "0xDF70CC", Slot = "14")]
		public override void OnEnter()
		{
		}

		[Token(Token = "0x60025E9")]
		[Address(RVA = "0xDF7278", Offset = "0xDF7278", VA = "0xDF7278", Slot = "12")]
		public override void Update()
		{
		}

		[Token(Token = "0x60025EA")]
		[Address(RVA = "0xDF727C", Offset = "0xDF727C", VA = "0xDF727C", Slot = "18")]
		protected override void HandleFrameUpdate(float elapsedTime)
		{
		}
	}
	[Token(Token = "0x20005E0")]
	public class AIStateWaitAndSearch : AIStateBase
	{
		[Token(Token = "0x4001F44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float timeSinceStart;

		[Token(Token = "0x60025EB")]
		[Address(RVA = "0xDF7348", Offset = "0xDF7348", VA = "0xDF7348")]
		public AIStateWaitAndSearch(AIController controller)
		{
		}

		[Token(Token = "0x60025EC")]
		[Address(RVA = "0xDF7988", Offset = "0xDF7988", VA = "0xDF7988", Slot = "14")]
		public override void OnEnter()
		{
		}

		[Token(Token = "0x60025ED")]
		[Address(RVA = "0xDF79B4", Offset = "0xDF79B4", VA = "0xDF79B4", Slot = "18")]
		protected override void HandleFrameUpdate(float elapsedTime)
		{
		}
	}
	[Token(Token = "0x20005E1")]
	public class AIStatePersuit : AIStateBase
	{
		[Token(Token = "0x4001F45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Transform followTarget;

		[Token(Token = "0x60025EE")]
		[Address(RVA = "0xDF7074", Offset = "0xDF7074", VA = "0xDF7074")]
		public AIStatePersuit(AIController controller)
		{
		}

		[Token(Token = "0x60025EF")]
		[Address(RVA = "0xDF77A0", Offset = "0xDF77A0", VA = "0xDF77A0", Slot = "14")]
		public override void OnEnter()
		{
		}

		[Token(Token = "0x60025F0")]
		[Address(RVA = "0xDF7850", Offset = "0xDF7850", VA = "0xDF7850", Slot = "15")]
		public override void OnExit()
		{
		}

		[Token(Token = "0x60025F1")]
		[Address(RVA = "0xDF787C", Offset = "0xDF787C", VA = "0xDF787C", Slot = "12")]
		public override void Update()
		{
		}

		[Token(Token = "0x60025F2")]
		[Address(RVA = "0xDF7880", Offset = "0xDF7880", VA = "0xDF7880", Slot = "18")]
		protected override void HandleFrameUpdate(float elapsedTime)
		{
		}
	}
	[Token(Token = "0x20005E2")]
	public class AIStatePatrol : AIStateBase
	{
		[Token(Token = "0x4001F46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int currentWaypointIndex;

		[Token(Token = "0x4001F47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private UnityEngine.Vector3[] waypointOffsets;

		[Token(Token = "0x60025F3")]
		[Address(RVA = "0xDF5CA8", Offset = "0xDF5CA8", VA = "0xDF5CA8")]
		public AIStatePatrol(AIController controller)
		{
		}

		[Token(Token = "0x60025F4")]
		[Address(RVA = "0xDF7374", Offset = "0xDF7374", VA = "0xDF7374", Slot = "14")]
		public override void OnEnter()
		{
		}

		[Token(Token = "0x60025F5")]
		[Address(RVA = "0xDF74FC", Offset = "0xDF74FC", VA = "0xDF74FC")]
		private void MoveToCurrentPoint()
		{
		}

		[Token(Token = "0x60025F6")]
		[Address(RVA = "0xDF76B4", Offset = "0xDF76B4", VA = "0xDF76B4", Slot = "15")]
		public override void OnExit()
		{
		}

		[Token(Token = "0x60025F7")]
		[Address(RVA = "0xDF76B8", Offset = "0xDF76B8", VA = "0xDF76B8", Slot = "12")]
		public override void Update()
		{
		}

		[Token(Token = "0x60025F8")]
		[Address(RVA = "0xDF76BC", Offset = "0xDF76BC", VA = "0xDF76BC", Slot = "18")]
		protected override void HandleFrameUpdate(float elapsedTime)
		{
		}
	}
	[Token(Token = "0x20005E3")]
	internal enum AIAttackAnimState
	{
		[Token(Token = "0x4001F49")]
		Requested,
		[Token(Token = "0x4001F4A")]
		Running,
		[Token(Token = "0x4001F4B")]
		InterAttackWait
	}
	[Token(Token = "0x20005E4")]
	public class AIStateDead : AIStateBase
	{
		[Token(Token = "0x60025F9")]
		[Address(RVA = "0xDF6088", Offset = "0xDF6088", VA = "0xDF6088")]
		public AIStateDead(AIController controller)
		{
		}

		[Token(Token = "0x60025FA")]
		[Address(RVA = "0xDF6E98", Offset = "0xDF6E98", VA = "0xDF6E98", Slot = "14")]
		public override void OnEnter()
		{
		}

		[Token(Token = "0x60025FB")]
		[Address(RVA = "0xDF6F0C", Offset = "0xDF6F0C", VA = "0xDF6F0C", Slot = "15")]
		public override void OnExit()
		{
		}
	}
	[Token(Token = "0x20005E5")]
	public class AIStateIdle : AIStateBase
	{
		[Token(Token = "0x60025FC")]
		[Address(RVA = "0xDF5CD4", Offset = "0xDF5CD4", VA = "0xDF5CD4")]
		public AIStateIdle(AIController controller)
		{
		}

		[Token(Token = "0x60025FD")]
		[Address(RVA = "0xDF6F14", Offset = "0xDF6F14", VA = "0xDF6F14", Slot = "14")]
		public override void OnEnter()
		{
		}

		[Token(Token = "0x60025FE")]
		[Address(RVA = "0xDF6FD8", Offset = "0xDF6FD8", VA = "0xDF6FD8", Slot = "15")]
		public override void OnExit()
		{
		}

		[Token(Token = "0x60025FF")]
		[Address(RVA = "0xDF6FDC", Offset = "0xDF6FDC", VA = "0xDF6FDC", Slot = "18")]
		protected override void HandleFrameUpdate(float elapsedTime)
		{
		}
	}
	[Token(Token = "0x20005E6")]
	public class AIController : CharacterControlScript
	{
		[Token(Token = "0x4001F4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private NavMeshAgent agent;

		[Token(Token = "0x4001F4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private PatrolPath patrol;

		[Token(Token = "0x4001F4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private CapsuleCollider capsule;

		[Token(Token = "0x4001F4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private LastPlayerSighting lastSighting;

		[Token(Token = "0x4001F50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool hasPatrolling;

		[Token(Token = "0x4001F51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float fieldOfView;

		[Token(Token = "0x4001F52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float maxViewSight;

		[Token(Token = "0x4001F53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float searchWaitTime;

		[Token(Token = "0x4001F54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float playerCloseByDistance;

		[Token(Token = "0x4001F55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float destinationArriveProximity;

		[Token(Token = "0x4001F56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float playerProximityRadius;

		[Token(Token = "0x4001F57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public bool mode2D;

		[Token(Token = "0x1700043A")]
		public NavMeshAgent Agent
		{
			[Token(Token = "0x6002600")]
			[Address(RVA = "0xDF5BA4", Offset = "0xDF5BA4", VA = "0xDF5BA4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700043B")]
		public CapsuleCollider Capsule
		{
			[Token(Token = "0x6002601")]
			[Address(RVA = "0xDF5BAC", Offset = "0xDF5BAC", VA = "0xDF5BAC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700043C")]
		public PatrolPath Patrol
		{
			[Token(Token = "0x6002602")]
			[Address(RVA = "0xDF5BB4", Offset = "0xDF5BB4", VA = "0xDF5BB4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700043D")]
		public LastPlayerSighting LastSighting
		{
			[Token(Token = "0x6002603")]
			[Address(RVA = "0xDF5BBC", Offset = "0xDF5BBC", VA = "0xDF5BBC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002604")]
		[Address(RVA = "0xDF5BC4", Offset = "0xDF5BC4", VA = "0xDF5BC4", Slot = "4")]
		protected override void Initialize()
		{
		}

		[Token(Token = "0x6002605")]
		[Address(RVA = "0xDF5EF0", Offset = "0xDF5EF0", VA = "0xDF5EF0", Slot = "5")]
		public override bool GetInputJump()
		{
			return default(bool);
		}

		[Token(Token = "0x6002606")]
		[Address(RVA = "0xDF5EF8", Offset = "0xDF5EF8", VA = "0xDF5EF8", Slot = "6")]
		public override bool GetInputAttackPrimary()
		{
			return default(bool);
		}

		[Token(Token = "0x6002607")]
		[Address(RVA = "0xDF5F00", Offset = "0xDF5F00", VA = "0xDF5F00", Slot = "7")]
		public override bool IsGrounded()
		{
			return default(bool);
		}

		[Token(Token = "0x6002608")]
		[Address(RVA = "0xDF5F08", Offset = "0xDF5F08", VA = "0xDF5F08", Slot = "8")]
		public override void ApplyMovement(UnityEngine.Vector3 velocity)
		{
		}

		[Token(Token = "0x6002609")]
		[Address(RVA = "0xDF5F0C", Offset = "0xDF5F0C", VA = "0xDF5F0C")]
		public AIController()
		{
		}
	}
	[Token(Token = "0x20005E7")]
	public abstract class CharacterControlScript : MonoBehaviour
	{
		[Token(Token = "0x4001F58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected StateMachine stateMachine;

		[Token(Token = "0x600260A")]
		[Address(RVA = "0xDF7D78", Offset = "0xDF7D78", VA = "0xDF7D78")]
		private void Start()
		{
		}

		[Token(Token = "0x600260B")]
		[Address(RVA = "0xDF7E50", Offset = "0xDF7E50", VA = "0xDF7E50", Slot = "4")]
		protected virtual void Initialize()
		{
		}

		[Token(Token = "0x600260C")]
		[Address(RVA = "0xDF7E54", Offset = "0xDF7E54", VA = "0xDF7E54")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x600260D")]
		[Address(RVA = "0xDF7E58", Offset = "0xDF7E58", VA = "0xDF7E58")]
		private void Update()
		{
		}

		[Token(Token = "0x600260E")]
		public abstract bool GetInputJump();

		[Token(Token = "0x600260F")]
		public abstract bool GetInputAttackPrimary();

		[Token(Token = "0x6002610")]
		public abstract bool IsGrounded();

		[Token(Token = "0x6002611")]
		public abstract void ApplyMovement(UnityEngine.Vector3 velocity);

		[Token(Token = "0x6002612")]
		[Address(RVA = "0xDF5F34", Offset = "0xDF5F34", VA = "0xDF5F34")]
		protected CharacterControlScript()
		{
		}
	}
	[Token(Token = "0x20005E8")]
	public class LastPlayerSighting : MonoBehaviour
	{
		[Token(Token = "0x4001F59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly UnityEngine.Vector3 NO_SIGHTING;

		[Token(Token = "0x4001F5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private UnityEngine.Vector3 position;

		[Token(Token = "0x1700043E")]
		public UnityEngine.Vector3 Position
		{
			[Token(Token = "0x6002613")]
			[Address(RVA = "0xDF9570", Offset = "0xDF9570", VA = "0xDF9570")]
			get
			{
				return default(UnityEngine.Vector3);
			}
			[Token(Token = "0x6002614")]
			[Address(RVA = "0xDF957C", Offset = "0xDF957C", VA = "0xDF957C")]
			set
			{
			}
		}

		[Token(Token = "0x6002615")]
		[Address(RVA = "0xDF6F60", Offset = "0xDF6F60", VA = "0xDF6F60")]
		public void ClearSighting()
		{
		}

		[Token(Token = "0x6002616")]
		[Address(RVA = "0xDF71AC", Offset = "0xDF71AC", VA = "0xDF71AC")]
		public bool HasSighting()
		{
			return default(bool);
		}

		[Token(Token = "0x6002617")]
		[Address(RVA = "0xDF9588", Offset = "0xDF9588", VA = "0xDF9588")]
		public LastPlayerSighting()
		{
		}
	}
	[Token(Token = "0x20005E9")]
	public class LevelNpcSpawner : DungeonEventListener
	{
		[Token(Token = "0x4001F5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject parentObject;

		[Token(Token = "0x4001F5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject[] npcTemplates;

		[Token(Token = "0x4001F5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UnityEngine.Vector3 npcOffset;

		[Token(Token = "0x4001F5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float spawnProbability;

		[Token(Token = "0x6002619")]
		[Address(RVA = "0xDF9778", Offset = "0xDF9778", VA = "0xDF9778", Slot = "7")]
		public override void OnPostDungeonBuild(Dungeon dungeon, DungeonModel model)
		{
		}

		[Token(Token = "0x600261A")]
		[Address(RVA = "0xDF977C", Offset = "0xDF977C", VA = "0xDF977C")]
		public void RebuildNPCs()
		{
		}

		[Token(Token = "0x600261B")]
		[Address(RVA = "0xDF9C6C", Offset = "0xDF9C6C", VA = "0xDF9C6C")]
		private UnityEngine.Vector3 GetValidPointOnNavMesh(UnityEngine.Vector3 position)
		{
			return default(UnityEngine.Vector3);
		}

		[Token(Token = "0x600261C")]
		[Address(RVA = "0xDF9CF0", Offset = "0xDF9CF0", VA = "0xDF9CF0", Slot = "9")]
		public override void OnDungeonDestroyed(Dungeon dungeon)
		{
		}

		[Token(Token = "0x600261D")]
		[Address(RVA = "0xDF9A34", Offset = "0xDF9A34", VA = "0xDF9A34")]
		private void DestroyOldNpcs()
		{
		}

		[Token(Token = "0x600261E")]
		[Address(RVA = "0xDF9CF4", Offset = "0xDF9CF4", VA = "0xDF9CF4")]
		public LevelNpcSpawner()
		{
		}
	}
	[Token(Token = "0x20005EA")]
	public class PatrolPath : MonoBehaviour
	{
		[Token(Token = "0x4001F5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int minPathLength;

		[Token(Token = "0x4001F60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int maxPathLength;

		[Token(Token = "0x4001F61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float randomOffset;

		[Token(Token = "0x4001F62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float proximityThreshold;

		[Token(Token = "0x4001F63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Waypoint[] patrolPoints;

		[Token(Token = "0x4001F64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool looped;

		[Token(Token = "0x1700043F")]
		public bool Looped
		{
			[Token(Token = "0x600261F")]
			[Address(RVA = "0xDFAA00", Offset = "0xDFAA00", VA = "0xDFAA00")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000440")]
		public Waypoint[] PatrolPoints
		{
			[Token(Token = "0x6002620")]
			[Address(RVA = "0xDFAA08", Offset = "0xDFAA08", VA = "0xDFAA08")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002621")]
		[Address(RVA = "0xDFAA10", Offset = "0xDFAA10", VA = "0xDFAA10")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002622")]
		[Address(RVA = "0xDFAA14", Offset = "0xDFAA14", VA = "0xDFAA14")]
		public void Build()
		{
		}

		[Token(Token = "0x6002623")]
		[Address(RVA = "0xDFAA58", Offset = "0xDFAA58", VA = "0xDFAA58")]
		public void Build(UnityEngine.Vector3 nearestStartingPoint)
		{
		}

		[Token(Token = "0x6002624")]
		[Address(RVA = "0xDFB0DC", Offset = "0xDFB0DC", VA = "0xDFB0DC")]
		private Waypoint[] FindNonLoopedPath(Waypoint startingWaypoint)
		{
			return null;
		}

		[Token(Token = "0x6002625")]
		[Address(RVA = "0xDFADE8", Offset = "0xDFADE8", VA = "0xDFADE8")]
		private Waypoint[] FindLoopedPath(Waypoint startingWaypoint)
		{
			return null;
		}

		[Token(Token = "0x6002626")]
		[Address(RVA = "0xDFB320", Offset = "0xDFB320", VA = "0xDFB320")]
		private Waypoint[] Shuffle(Waypoint[] data)
		{
			return null;
		}

		[Token(Token = "0x6002627")]
		[Address(RVA = "0xDFAC6C", Offset = "0xDFAC6C", VA = "0xDFAC6C")]
		private Waypoint FindNearest(Waypoint[] waypoints, UnityEngine.Vector3 startingPoint)
		{
			return null;
		}

		[Token(Token = "0x6002628")]
		[Address(RVA = "0xDFB328", Offset = "0xDFB328", VA = "0xDFB328")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x6002629")]
		[Address(RVA = "0xDFB32C", Offset = "0xDFB32C", VA = "0xDFB32C")]
		private void VisualizePath()
		{
		}

		[Token(Token = "0x600262A")]
		[Address(RVA = "0xDFB480", Offset = "0xDFB480", VA = "0xDFB480")]
		private void DrawLine(UnityEngine.Vector3 a, UnityEngine.Vector3 b, bool mode2D)
		{
		}

		[Token(Token = "0x600262B")]
		[Address(RVA = "0xDFB590", Offset = "0xDFB590", VA = "0xDFB590")]
		private void DrawPoint(UnityEngine.Vector3 p, bool mode2D)
		{
		}

		[Token(Token = "0x600262C")]
		[Address(RVA = "0xDFB550", Offset = "0xDFB550", VA = "0xDFB550")]
		private UnityEngine.Vector3 FlipYZ(UnityEngine.Vector3 v)
		{
			return default(UnityEngine.Vector3);
		}

		[Token(Token = "0x600262D")]
		[Address(RVA = "0xDFB5F8", Offset = "0xDFB5F8", VA = "0xDFB5F8")]
		public PatrolPath()
		{
		}
	}
	[Token(Token = "0x20005EB")]
	public enum GameMessages
	{

	}
	[Token(Token = "0x20005EC")]
	public interface State
	{
		[Token(Token = "0x17000441")]
		StateMachine StateMachine
		{
			[Token(Token = "0x6002634")]
			get;
			[Token(Token = "0x6002635")]
			set;
		}

		[Token(Token = "0x600262E")]
		void Update();

		[Token(Token = "0x600262F")]
		void FixedUpdate();

		[Token(Token = "0x6002630")]
		void OnEnter();

		[Token(Token = "0x6002631")]
		void OnExit();

		[Token(Token = "0x6002632")]
		void TransitionTo(string stateName);

		[Token(Token = "0x6002633")]
		void OnMessage(GameMessages messageType, object userdata);
	}
	[Token(Token = "0x20005ED")]
	public abstract class StateBase : State
	{
		[Token(Token = "0x4001F66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected StateMachine stateMachine;

		[Token(Token = "0x17000442")]
		public StateMachine StateMachine
		{
			[Token(Token = "0x600263C")]
			[Address(RVA = "0xDFC7CC", Offset = "0xDFC7CC", VA = "0xDFC7CC", Slot = "10")]
			get
			{
				return null;
			}
			[Token(Token = "0x600263D")]
			[Address(RVA = "0xDFC7D4", Offset = "0xDFC7D4", VA = "0xDFC7D4", Slot = "11")]
			set
			{
			}
		}

		[Token(Token = "0x6002636")]
		[Address(RVA = "0xDFC7BC", Offset = "0xDFC7BC", VA = "0xDFC7BC", Slot = "12")]
		public virtual void Update()
		{
		}

		[Token(Token = "0x6002637")]
		[Address(RVA = "0xDFC7C0", Offset = "0xDFC7C0", VA = "0xDFC7C0", Slot = "13")]
		public virtual void FixedUpdate()
		{
		}

		[Token(Token = "0x6002638")]
		[Address(RVA = "0xDF6F08", Offset = "0xDF6F08", VA = "0xDF6F08", Slot = "14")]
		public virtual void OnEnter()
		{
		}

		[Token(Token = "0x6002639")]
		[Address(RVA = "0xDF6F10", Offset = "0xDF6F10", VA = "0xDF6F10", Slot = "15")]
		public virtual void OnExit()
		{
		}

		[Token(Token = "0x600263A")]
		[Address(RVA = "0xDFC7C4", Offset = "0xDFC7C4", VA = "0xDFC7C4", Slot = "16")]
		public virtual void TransitionTo(string stateName)
		{
		}

		[Token(Token = "0x600263B")]
		[Address(RVA = "0xDFC7C8", Offset = "0xDFC7C8", VA = "0xDFC7C8", Slot = "17")]
		public virtual void OnMessage(GameMessages messageType, object userdata)
		{
		}

		[Token(Token = "0x600263E")]
		[Address(RVA = "0xDF5F68", Offset = "0xDF5F68", VA = "0xDF5F68")]
		protected StateBase()
		{
		}
	}
	[Token(Token = "0x20005EE")]
	public class StateMachine
	{
		[Token(Token = "0x4001F67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Stack<State> stateStack;

		[Token(Token = "0x17000443")]
		public State ActiveState
		{
			[Token(Token = "0x600263F")]
			[Address(RVA = "0xDFC7DC", Offset = "0xDFC7DC", VA = "0xDFC7DC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002640")]
		[Address(RVA = "0xDF5D00", Offset = "0xDF5D00", VA = "0xDF5D00")]
		public void MoveTo(State state)
		{
		}

		[Token(Token = "0x6002641")]
		[Address(RVA = "0xDFC84C", Offset = "0xDFC84C", VA = "0xDFC84C")]
		public void PushTo(State state)
		{
		}

		[Token(Token = "0x6002642")]
		[Address(RVA = "0xDFC98C", Offset = "0xDFC98C", VA = "0xDFC98C")]
		public void Pop()
		{
		}

		[Token(Token = "0x6002643")]
		[Address(RVA = "0xDF7E70", Offset = "0xDF7E70", VA = "0xDF7E70")]
		public void Update()
		{
		}

		[Token(Token = "0x6002644")]
		[Address(RVA = "0xDFCA70", Offset = "0xDFCA70", VA = "0xDFCA70")]
		public void SendMessage(GameMessages message, object userdata)
		{
		}

		[Token(Token = "0x6002645")]
		[Address(RVA = "0xDF7DE0", Offset = "0xDF7DE0", VA = "0xDF7DE0")]
		public StateMachine()
		{
		}
	}
	[Token(Token = "0x20005EF")]
	public class MixLevels : MonoBehaviour
	{
		[Token(Token = "0x4001F68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AudioMixer masterMixer;

		[Token(Token = "0x6002646")]
		[Address(RVA = "0xDFA920", Offset = "0xDFA920", VA = "0xDFA920")]
		public void SetSfxLvl(float sfxLvl)
		{
		}

		[Token(Token = "0x6002647")]
		[Address(RVA = "0xDFA98C", Offset = "0xDFA98C", VA = "0xDFA98C")]
		public void SetMusicLvl(float musicLvl)
		{
		}

		[Token(Token = "0x6002648")]
		[Address(RVA = "0xDFA9F8", Offset = "0xDFA9F8", VA = "0xDFA9F8")]
		public MixLevels()
		{
		}
	}
	[Token(Token = "0x20005F0")]
	public class CameraFollow : MonoBehaviour
	{
		[Token(Token = "0x4001F69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform target;

		[Token(Token = "0x4001F6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float positionSmoothing;

		[Token(Token = "0x4001F6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float lookAtSmoothing;

		[Token(Token = "0x4001F6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UnityEngine.Vector3 offset;

		[Token(Token = "0x4001F6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private UnityEngine.Vector3 currentLookAt;

		[Token(Token = "0x6002649")]
		[Address(RVA = "0xDF7B70", Offset = "0xDF7B70", VA = "0xDF7B70")]
		private void Start()
		{
		}

		[Token(Token = "0x600264A")]
		[Address(RVA = "0xDF7BA8", Offset = "0xDF7BA8", VA = "0xDF7BA8")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x600264B")]
		[Address(RVA = "0xDF7D68", Offset = "0xDF7D68", VA = "0xDF7D68")]
		public CameraFollow()
		{
		}
	}
	[Token(Token = "0x20005F1")]
	public class EnemyAttack : MonoBehaviour
	{
		[Token(Token = "0x4001F6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float timeBetweenAttacks;

		[Token(Token = "0x4001F6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int attackDamage;

		[Token(Token = "0x4001F70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Animator anim;

		[Token(Token = "0x4001F71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GameObject player;

		[Token(Token = "0x4001F72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private PlayerHealth playerHealth;

		[Token(Token = "0x4001F73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private EnemyHealth enemyHealth;

		[Token(Token = "0x4001F74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool playerInRange;

		[Token(Token = "0x4001F75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float timer;

		[Token(Token = "0x600264C")]
		[Address(RVA = "0xDF7F4C", Offset = "0xDF7F4C", VA = "0xDF7F4C")]
		private void Awake()
		{
		}

		[Token(Token = "0x600264D")]
		[Address(RVA = "0xDF7FF0", Offset = "0xDF7FF0", VA = "0xDF7FF0")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x600264E")]
		[Address(RVA = "0xDF8098", Offset = "0xDF8098", VA = "0xDF8098")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x600264F")]
		[Address(RVA = "0xDF813C", Offset = "0xDF813C", VA = "0xDF813C")]
		private void Update()
		{
		}

		[Token(Token = "0x6002650")]
		[Address(RVA = "0xDF8208", Offset = "0xDF8208", VA = "0xDF8208")]
		private void Attack()
		{
		}

		[Token(Token = "0x6002651")]
		[Address(RVA = "0xDF82C0", Offset = "0xDF82C0", VA = "0xDF82C0")]
		public EnemyAttack()
		{
		}
	}
	[Token(Token = "0x20005F2")]
	public class EnemyHealth : MonoBehaviour
	{
		[Token(Token = "0x20008BE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B90E0", Offset = "0x8B90E0")]
		private sealed class <StartSinkingAnimation>d__16 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002A74")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002A75")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002A76")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public EnemyHealth <>4__this;

			[Token(Token = "0x170006A4")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60030DF")]
				[Address(RVA = "0xDF883C", Offset = "0xDF883C", VA = "0xDF883C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170006A5")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60030E1")]
				[Address(RVA = "0xDF88A4", Offset = "0xDF88A4", VA = "0xDF88A4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60030DC")]
			[Address(RVA = "0xDF866C", Offset = "0xDF866C", VA = "0xDF866C")]
			[DebuggerHidden]
			public <StartSinkingAnimation>d__16(int <>1__state)
			{
			}

			[Token(Token = "0x60030DD")]
			[Address(RVA = "0xDF86B8", Offset = "0xDF86B8", VA = "0xDF86B8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60030DE")]
			[Address(RVA = "0xDF86BC", Offset = "0xDF86BC", VA = "0xDF86BC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60030E0")]
			[Address(RVA = "0xDF8844", Offset = "0xDF8844", VA = "0xDF8844", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001F76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int startingHealth;

		[Token(Token = "0x4001F77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int currentHealth;

		[Token(Token = "0x4001F78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float sinkSpeed;

		[Token(Token = "0x4001F79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int scoreValue;

		[Token(Token = "0x4001F7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AudioClip deathClip;

		[Token(Token = "0x4001F7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Animator anim;

		[Token(Token = "0x4001F7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private AudioSource enemyAudio;

		[Token(Token = "0x4001F7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private ParticleSystem hitParticles;

		[Token(Token = "0x4001F7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private CharacterController character;

		[Token(Token = "0x4001F7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool isDead;

		[Token(Token = "0x4001F80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		private bool isSinking;

		[Token(Token = "0x6002652")]
		[Address(RVA = "0xDF82D4", Offset = "0xDF82D4", VA = "0xDF82D4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002653")]
		[Address(RVA = "0xDF837C", Offset = "0xDF837C", VA = "0xDF837C")]
		private void Update()
		{
		}

		[Token(Token = "0x6002654")]
		[Address(RVA = "0xDF8474", Offset = "0xDF8474", VA = "0xDF8474")]
		public void TakeDamage(int amount, UnityEngine.Vector3 hitPoint)
		{
		}

		[Token(Token = "0x6002655")]
		[Address(RVA = "0xDF8534", Offset = "0xDF8534", VA = "0xDF8534")]
		private void Death()
		{
		}

		[Token(Token = "0x6002656")]
		[Address(RVA = "0xDF85D0", Offset = "0xDF85D0", VA = "0xDF85D0")]
		public void StartSinking()
		{
		}

		[Token(Token = "0x6002657")]
		[Address(RVA = "0xDF85FC", Offset = "0xDF85FC", VA = "0xDF85FC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8CB9D4", Offset = "0x8CB9D4")]
		private IEnumerator StartSinkingAnimation()
		{
			return null;
		}

		[Token(Token = "0x6002658")]
		[Address(RVA = "0xDF8698", Offset = "0xDF8698", VA = "0xDF8698")]
		public EnemyHealth()
		{
		}
	}
	[Token(Token = "0x20005F3")]
	public class EnemyMovement : MonoBehaviour
	{
		[Token(Token = "0x4001F81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Transform player;

		[Token(Token = "0x4001F82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private PlayerHealth playerHealth;

		[Token(Token = "0x4001F83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private EnemyHealth enemyHealth;

		[Token(Token = "0x4001F84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private NavMeshAgent navAgent;

		[Token(Token = "0x6002659")]
		[Address(RVA = "0xDF8AA0", Offset = "0xDF8AA0", VA = "0xDF8AA0")]
		private void Awake()
		{
		}

		[Token(Token = "0x600265A")]
		[Address(RVA = "0xDF8B50", Offset = "0xDF8B50", VA = "0xDF8B50")]
		private void Update()
		{
		}

		[Token(Token = "0x600265B")]
		[Address(RVA = "0xDF8BD4", Offset = "0xDF8BD4", VA = "0xDF8BD4")]
		public EnemyMovement()
		{
		}
	}
	[Token(Token = "0x20005F4")]
	public class GameController : MonoBehaviour
	{
		[Token(Token = "0x20008BF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B90F0", Offset = "0x8B90F0")]
		private sealed class <RebuildLevel>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002A77")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002A78")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002A79")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GameController <>4__this;

			[Token(Token = "0x4002A7A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Dungeon dungeon;

			[Token(Token = "0x170006A6")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60030E5")]
				[Address(RVA = "0xDF93C0", Offset = "0xDF93C0", VA = "0xDF93C0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170006A7")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60030E7")]
				[Address(RVA = "0xDF9428", Offset = "0xDF9428", VA = "0xDF9428", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60030E2")]
			[Address(RVA = "0xDF8DDC", Offset = "0xDF8DDC", VA = "0xDF8DDC")]
			[DebuggerHidden]
			public <RebuildLevel>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x60030E3")]
			[Address(RVA = "0xDF8E70", Offset = "0xDF8E70", VA = "0xDF8E70", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60030E4")]
			[Address(RVA = "0xDF8E74", Offset = "0xDF8E74", VA = "0xDF8E74", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60030E6")]
			[Address(RVA = "0xDF93C8", Offset = "0xDF93C8", VA = "0xDF93C8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001F85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static GameController instance;

		[Token(Token = "0x4001F86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Dungeon dungeon;

		[Token(Token = "0x4001F87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject minimap;

		[Token(Token = "0x4001F88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject levelLoadingScreen;

		[Token(Token = "0x4001F89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Text textBuildingLayout;

		[Token(Token = "0x4001F8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Text textBuildingNavMesh;

		[Token(Token = "0x4001F8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private LevelNpcSpawner npcSpawner;

		[Token(Token = "0x4001F8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private string labelBuildingLayout;

		[Token(Token = "0x4001F8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private string labelBuildingNavmesh;

		[Token(Token = "0x17000444")]
		public static GameController Instance
		{
			[Token(Token = "0x600265C")]
			[Address(RVA = "0xDF8BDC", Offset = "0xDF8BDC", VA = "0xDF8BDC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600265D")]
		[Address(RVA = "0xDF8C2C", Offset = "0xDF8C2C", VA = "0xDF8C2C")]
		private void Awake()
		{
		}

		[Token(Token = "0x600265E")]
		[Address(RVA = "0xDF8C9C", Offset = "0xDF8C9C", VA = "0xDF8C9C")]
		public void CreateNewLevel()
		{
		}

		[Token(Token = "0x600265F")]
		[Address(RVA = "0xDF8D60", Offset = "0xDF8D60", VA = "0xDF8D60")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8CBA38", Offset = "0x8CBA38")]
		private IEnumerator RebuildLevel(Dungeon dungeon)
		{
			return null;
		}

		[Token(Token = "0x6002660")]
		[Address(RVA = "0xDF8E08", Offset = "0xDF8E08", VA = "0xDF8E08")]
		public GameController()
		{
		}
	}
	[Token(Token = "0x20005F5")]
	public class LevelGoal : MonoBehaviour
	{
		[Token(Token = "0x6002661")]
		[Address(RVA = "0xDF9618", Offset = "0xDF9618", VA = "0xDF9618")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6002662")]
		[Address(RVA = "0xDF96FC", Offset = "0xDF96FC", VA = "0xDF96FC")]
		private void Update()
		{
		}

		[Token(Token = "0x6002663")]
		[Address(RVA = "0xDF9770", Offset = "0xDF9770", VA = "0xDF9770")]
		public LevelGoal()
		{
		}
	}
	[Token(Token = "0x20005F6")]
	public class BeautyShot : MonoBehaviour
	{
		[Token(Token = "0x20008C0")]
		public enum Supersample
		{
			[Token(Token = "0x4002A7C")]
			None = 1,
			[Token(Token = "0x4002A7D")]
			Two = 2,
			[Token(Token = "0x4002A7E")]
			Four = 4,
			[Token(Token = "0x4002A7F")]
			Eight = 8,
			[Token(Token = "0x4002A80")]
			Sixteen = 0x10,
			[Token(Token = "0x4002A81")]
			Wtf = 0x20
		}

		[Token(Token = "0x4001F8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LayerMask layerMask;

		[Token(Token = "0x4001F8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int frameRate;

		[Token(Token = "0x4001F90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float duration;

		[Token(Token = "0x4001F91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int frameOffset;

		[Token(Token = "0x4001F92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float numFrames;

		[Token(Token = "0x4001F93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool captureUsingScreenshot;

		[Token(Token = "0x4001F94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Supersample supersampleScreenshot;

		[Token(Token = "0x6002664")]
		[Address(RVA = "0xDF7ABC", Offset = "0xDF7ABC", VA = "0xDF7ABC")]
		public string generateFilename()
		{
			return null;
		}

		[Token(Token = "0x6002665")]
		[Address(RVA = "0xDF7B4C", Offset = "0xDF7B4C", VA = "0xDF7B4C")]
		private void Start()
		{
		}

		[Token(Token = "0x6002666")]
		[Address(RVA = "0xDF7B54", Offset = "0xDF7B54", VA = "0xDF7B54")]
		public BeautyShot()
		{
		}
	}
	[Token(Token = "0x20005F7")]
	public class RandomAnimationPoint : MonoBehaviour
	{
		[Token(Token = "0x4001F95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool randomize;

		[Token(Token = "0x4001F96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8C1F10", Offset = "0x8C1F10")]
		public float normalizedTime;

		[Token(Token = "0x6002667")]
		[Address(RVA = "0xDFC560", Offset = "0xDFC560", VA = "0xDFC560")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6002668")]
		[Address(RVA = "0xDFC618", Offset = "0xDFC618", VA = "0xDFC618")]
		public RandomAnimationPoint()
		{
		}
	}
	[Token(Token = "0x20005F8")]
	public class RandomParticlePoint : MonoBehaviour
	{
		[Token(Token = "0x4001F97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8C1F28", Offset = "0x8C1F28")]
		public float normalizedTime;

		[Token(Token = "0x6002669")]
		[Address(RVA = "0xDFC620", Offset = "0xDFC620", VA = "0xDFC620")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x600266A")]
		[Address(RVA = "0xDFC68C", Offset = "0xDFC68C", VA = "0xDFC68C")]
		public RandomParticlePoint()
		{
		}
	}
	[Token(Token = "0x20005F9")]
	public class VolumeHandler : MonoBehaviour
	{
		[Token(Token = "0x600266B")]
		[Address(RVA = "0xDFE6FC", Offset = "0xDFE6FC", VA = "0xDFE6FC")]
		private void Start()
		{
		}

		[Token(Token = "0x600266C")]
		[Address(RVA = "0xDFE818", Offset = "0xDFE818", VA = "0xDFE818")]
		private void SetVolume(float volume)
		{
		}

		[Token(Token = "0x600266D")]
		[Address(RVA = "0xDFE888", Offset = "0xDFE888", VA = "0xDFE888")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600266E")]
		[Address(RVA = "0xDFE9A4", Offset = "0xDFE9A4", VA = "0xDFE9A4")]
		public VolumeHandler()
		{
		}
	}
	[Token(Token = "0x20005FA")]
	public class EnemyManager : MonoBehaviour
	{
		[Token(Token = "0x4001F98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PlayerHealth playerHealth;

		[Token(Token = "0x4001F99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject enemy;

		[Token(Token = "0x4001F9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float spawnTime;

		[Token(Token = "0x4001F9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform[] spawnPoints;

		[Token(Token = "0x600266F")]
		[Address(RVA = "0xDF88AC", Offset = "0xDF88AC", VA = "0xDF88AC")]
		private void Start()
		{
		}

		[Token(Token = "0x6002670")]
		[Address(RVA = "0xDF8908", Offset = "0xDF8908", VA = "0xDF8908")]
		private void Spawn()
		{
		}

		[Token(Token = "0x6002671")]
		[Address(RVA = "0xDF8A90", Offset = "0xDF8A90", VA = "0xDF8A90")]
		public EnemyManager()
		{
		}
	}
	[Token(Token = "0x20005FB")]
	public class GameOverManager : MonoBehaviour
	{
		[Token(Token = "0x4001F9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PlayerHealth playerHealth;

		[Token(Token = "0x4001F9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Animator anim;

		[Token(Token = "0x6002672")]
		[Address(RVA = "0xDF9430", Offset = "0xDF9430", VA = "0xDF9430")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002673")]
		[Address(RVA = "0xDF9488", Offset = "0xDF9488", VA = "0xDF9488")]
		private void Update()
		{
		}

		[Token(Token = "0x6002674")]
		[Address(RVA = "0xDF9504", Offset = "0xDF9504", VA = "0xDF9504")]
		public GameOverManager()
		{
		}
	}
	[Token(Token = "0x20005FC")]
	public class PauseManager : MonoBehaviour
	{
		[Token(Token = "0x4001F9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AudioMixerSnapshot paused;

		[Token(Token = "0x4001F9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioMixerSnapshot unpaused;

		[Token(Token = "0x4001FA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Canvas canvas;

		[Token(Token = "0x6002675")]
		[Address(RVA = "0xDFB66C", Offset = "0xDFB66C", VA = "0xDFB66C")]
		private void Start()
		{
		}

		[Token(Token = "0x6002676")]
		[Address(RVA = "0xDFB6C4", Offset = "0xDFB6C4", VA = "0xDFB6C4")]
		private void Update()
		{
		}

		[Token(Token = "0x6002677")]
		[Address(RVA = "0xDFB72C", Offset = "0xDFB72C", VA = "0xDFB72C")]
		public void Pause()
		{
		}

		[Token(Token = "0x6002678")]
		[Address(RVA = "0xDFB76C", Offset = "0xDFB76C", VA = "0xDFB76C")]
		private void Lowpass()
		{
		}

		[Token(Token = "0x6002679")]
		[Address(RVA = "0xDFB7B8", Offset = "0xDFB7B8", VA = "0xDFB7B8")]
		public void Quit()
		{
		}

		[Token(Token = "0x600267A")]
		[Address(RVA = "0xDFB7C0", Offset = "0xDFB7C0", VA = "0xDFB7C0")]
		public PauseManager()
		{
		}
	}
	[Token(Token = "0x20005FD")]
	public class ScoreManager : MonoBehaviour
	{
		[Token(Token = "0x4001FA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static int score;

		[Token(Token = "0x4001FA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Text text;

		[Token(Token = "0x600267B")]
		[Address(RVA = "0xDFC694", Offset = "0xDFC694", VA = "0xDFC694")]
		private void Awake()
		{
		}

		[Token(Token = "0x600267C")]
		[Address(RVA = "0xDFC700", Offset = "0xDFC700", VA = "0xDFC700")]
		private void Update()
		{
		}

		[Token(Token = "0x600267D")]
		[Address(RVA = "0xDFC7B4", Offset = "0xDFC7B4", VA = "0xDFC7B4")]
		public ScoreManager()
		{
		}
	}
	[Token(Token = "0x20005FE")]
	public class MiniMapCameraTracker : MonoBehaviour
	{
		[Token(Token = "0x4001FA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform trackingTransform;

		[Token(Token = "0x4001FA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform baseDungeonTransform;

		[Token(Token = "0x4001FA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform dotTransform;

		[Token(Token = "0x600267E")]
		[Address(RVA = "0xDF9E38", Offset = "0xDF9E38", VA = "0xDF9E38")]
		private void Start()
		{
		}

		[Token(Token = "0x600267F")]
		[Address(RVA = "0xDF9E3C", Offset = "0xDF9E3C", VA = "0xDF9E3C")]
		private void Update()
		{
		}

		[Token(Token = "0x6002680")]
		[Address(RVA = "0xDF9F6C", Offset = "0xDF9F6C", VA = "0xDF9F6C")]
		public MiniMapCameraTracker()
		{
		}
	}
	[Token(Token = "0x20005FF")]
	public class MiniMapEnemyDots : MonoBehaviour
	{
		[Token(Token = "0x4001FA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject enemyDotTemplate;

		[Token(Token = "0x4001FA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Queue<GameObject> dots;

		[Token(Token = "0x4001FA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform baseDungeon;

		[Token(Token = "0x4001FA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform miniMapDungeon;

		[Token(Token = "0x4001FAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private UnityEngine.Vector3 offset;

		[Token(Token = "0x6002681")]
		[Address(RVA = "0xDF9F74", Offset = "0xDF9F74", VA = "0xDF9F74")]
		private void Start()
		{
		}

		[Token(Token = "0x6002682")]
		[Address(RVA = "0xDFA050", Offset = "0xDFA050", VA = "0xDFA050")]
		private void Update()
		{
		}

		[Token(Token = "0x6002683")]
		[Address(RVA = "0xDFA2BC", Offset = "0xDFA2BC", VA = "0xDFA2BC")]
		private GameObject BuildDot(GameObject enemy)
		{
			return null;
		}

		[Token(Token = "0x6002684")]
		[Address(RVA = "0xDFA498", Offset = "0xDFA498", VA = "0xDFA498")]
		public MiniMapEnemyDots()
		{
		}
	}
	[Token(Token = "0x2000600")]
	public class MiniMapGenerator : MonoBehaviour
	{
		[Token(Token = "0x4001FAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<Graph> miniMapThemes;

		[Token(Token = "0x4001FAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private GameObject miniMapDungeonObject;

		[Token(Token = "0x4001FAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Dungeon minimapDungeon;

		[Token(Token = "0x6002685")]
		[Address(RVA = "0xDFA508", Offset = "0xDFA508", VA = "0xDFA508")]
		public void BuildMiniMap(Dungeon baseDungeon)
		{
		}

		[Token(Token = "0x6002686")]
		[Address(RVA = "0xDFA6D8", Offset = "0xDFA6D8", VA = "0xDFA6D8")]
		public void DestroyDungeon()
		{
		}

		[Token(Token = "0x6002687")]
		private void DisableComponent<T>(GameObject obj) where T : MonoBehaviour
		{
		}

		[Token(Token = "0x6002688")]
		[Address(RVA = "0xDFA76C", Offset = "0xDFA76C", VA = "0xDFA76C")]
		public MiniMapGenerator()
		{
		}
	}
	[Token(Token = "0x2000601")]
	public class MiniMapRebuilder : DungeonEventListener
	{
		[Token(Token = "0x4001FAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MiniMapGenerator miniMap;

		[Token(Token = "0x6002689")]
		[Address(RVA = "0xDFA774", Offset = "0xDFA774", VA = "0xDFA774", Slot = "7")]
		public override void OnPostDungeonBuild(Dungeon dungeon, DungeonModel model)
		{
		}

		[Token(Token = "0x600268A")]
		[Address(RVA = "0xDFA78C", Offset = "0xDFA78C", VA = "0xDFA78C", Slot = "9")]
		public override void OnDungeonDestroyed(Dungeon dungeon)
		{
		}

		[Token(Token = "0x600268B")]
		[Address(RVA = "0xDFA7A4", Offset = "0xDFA7A4", VA = "0xDFA7A4")]
		public MiniMapRebuilder()
		{
		}
	}
	[Token(Token = "0x2000602")]
	public class MiniMapRenderer : MonoBehaviour
	{
		[Token(Token = "0x4001FAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Texture miniMapRtt;

		[Token(Token = "0x4001FB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Material miniMapMat;

		[Token(Token = "0x4001FB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int width;

		[Token(Token = "0x4001FB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int height;

		[Token(Token = "0x600268C")]
		[Address(RVA = "0xDFA7AC", Offset = "0xDFA7AC", VA = "0xDFA7AC")]
		private void Start()
		{
		}

		[Token(Token = "0x600268D")]
		[Address(RVA = "0xDFA7B0", Offset = "0xDFA7B0", VA = "0xDFA7B0")]
		private void Update()
		{
		}

		[Token(Token = "0x600268E")]
		[Address(RVA = "0xDFA7B4", Offset = "0xDFA7B4", VA = "0xDFA7B4")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x600268F")]
		[Address(RVA = "0xDFA910", Offset = "0xDFA910", VA = "0xDFA910")]
		public MiniMapRenderer()
		{
		}
	}
	[Token(Token = "0x2000603")]
	public class PlayerHealth : MonoBehaviour
	{
		[Token(Token = "0x4001FB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int startingHealth;

		[Token(Token = "0x4001FB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int currentHealth;

		[Token(Token = "0x4001FB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Slider healthSlider;

		[Token(Token = "0x4001FB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Image damageImage;

		[Token(Token = "0x4001FB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AudioClip deathClip;

		[Token(Token = "0x4001FB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float flashSpeed;

		[Token(Token = "0x4001FB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public Color flashColour;

		[Token(Token = "0x4001FBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Animator anim;

		[Token(Token = "0x4001FBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private AudioSource playerAudio;

		[Token(Token = "0x4001FBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private PlayerMovement playerMovement;

		[Token(Token = "0x4001FBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private PlayerShooting playerShooting;

		[Token(Token = "0x4001FBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool isDead;

		[Token(Token = "0x4001FBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		private bool damaged;

		[Token(Token = "0x6002690")]
		[Address(RVA = "0xDFB7C8", Offset = "0xDFB7C8", VA = "0xDFB7C8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002691")]
		[Address(RVA = "0xDFB870", Offset = "0xDFB870", VA = "0xDFB870")]
		private void Update()
		{
		}

		[Token(Token = "0x6002692")]
		[Address(RVA = "0xDF823C", Offset = "0xDF823C", VA = "0xDF823C")]
		public void TakeDamage(int amount)
		{
		}

		[Token(Token = "0x6002693")]
		[Address(RVA = "0xDFBA20", Offset = "0xDFBA20", VA = "0xDFBA20")]
		private void Death()
		{
		}

		[Token(Token = "0x6002694")]
		[Address(RVA = "0xDFBB34", Offset = "0xDFBB34", VA = "0xDFBB34")]
		public void RestartLevel()
		{
		}

		[Token(Token = "0x6002695")]
		[Address(RVA = "0xDFBBB4", Offset = "0xDFBBB4", VA = "0xDFBBB4")]
		public PlayerHealth()
		{
		}
	}
	[Token(Token = "0x2000604")]
	public class PlayerMovement : MonoBehaviour
	{
		[Token(Token = "0x4001FC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float speed;

		[Token(Token = "0x4001FC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float gravity;

		[Token(Token = "0x4001FC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private CharacterController character;

		[Token(Token = "0x4001FC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private UnityEngine.Vector3 movement;

		[Token(Token = "0x4001FC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Animator anim;

		[Token(Token = "0x4001FC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float camRayLength;

		[Token(Token = "0x6002696")]
		[Address(RVA = "0xDFBC20", Offset = "0xDFBC20", VA = "0xDFBC20")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002697")]
		[Address(RVA = "0xDFBCA0", Offset = "0xDFBCA0", VA = "0xDFBCA0")]
		public void OnTeleportered()
		{
		}

		[Token(Token = "0x6002698")]
		[Address(RVA = "0xDFBCC0", Offset = "0xDFBCC0", VA = "0xDFBCC0")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6002699")]
		[Address(RVA = "0xDFBD5C", Offset = "0xDFBD5C", VA = "0xDFBD5C")]
		private void Move(float h, float v)
		{
		}

		[Token(Token = "0x600269A")]
		[Address(RVA = "0xDFBEB4", Offset = "0xDFBEB4", VA = "0xDFBEB4")]
		private void Turning()
		{
		}

		[Token(Token = "0x600269B")]
		[Address(RVA = "0xDFC068", Offset = "0xDFC068", VA = "0xDFC068")]
		private void Animating(float h, float v)
		{
		}

		[Token(Token = "0x600269C")]
		[Address(RVA = "0xDFC0E8", Offset = "0xDFC0E8", VA = "0xDFC0E8")]
		public PlayerMovement()
		{
		}
	}
	[Token(Token = "0x2000605")]
	public class PlayerShooting : MonoBehaviour
	{
		[Token(Token = "0x4001FC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int damagePerShot;

		[Token(Token = "0x4001FC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float timeBetweenBullets;

		[Token(Token = "0x4001FC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float range;

		[Token(Token = "0x4001FC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float timer;

		[Token(Token = "0x4001FCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Ray shootRay;

		[Token(Token = "0x4001FCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private RaycastHit shootHit;

		[Token(Token = "0x4001FCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private ParticleSystem gunParticles;

		[Token(Token = "0x4001FCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private LineRenderer gunLine;

		[Token(Token = "0x4001FCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private AudioSource gunAudio;

		[Token(Token = "0x4001FCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Light gunLight;

		[Token(Token = "0x4001FD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public Light faceLight;

		[Token(Token = "0x4001FD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private float effectsDisplayTime;

		[Token(Token = "0x600269D")]
		[Address(RVA = "0xDFC104", Offset = "0xDFC104", VA = "0xDFC104")]
		private void Awake()
		{
		}

		[Token(Token = "0x600269E")]
		[Address(RVA = "0xDFC1A4", Offset = "0xDFC1A4", VA = "0xDFC1A4")]
		private void Update()
		{
		}

		[Token(Token = "0x600269F")]
		[Address(RVA = "0xDFBADC", Offset = "0xDFBADC", VA = "0xDFBADC")]
		public void DisableEffects()
		{
		}

		[Token(Token = "0x60026A0")]
		[Address(RVA = "0xDFC26C", Offset = "0xDFC26C", VA = "0xDFC26C")]
		private void Shoot()
		{
		}

		[Token(Token = "0x60026A1")]
		[Address(RVA = "0xDFC538", Offset = "0xDFC538", VA = "0xDFC538")]
		public PlayerShooting()
		{
		}
	}
	[Token(Token = "0x2000606")]
	public class GameTags : MonoBehaviour
	{
		[Token(Token = "0x4001FD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly string Player;

		[Token(Token = "0x60026A2")]
		[Address(RVA = "0xDF950C", Offset = "0xDF950C", VA = "0xDF950C")]
		public GameTags()
		{
		}
	}
	[Token(Token = "0x2000607")]
	public class Waypoint : MonoBehaviour
	{
		[Token(Token = "0x4001FD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int id;

		[Token(Token = "0x4001FD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Waypoint[] adjacentWaypoints;

		[Token(Token = "0x17000445")]
		public Waypoint[] AdjacentWaypoints
		{
			[Token(Token = "0x60026A4")]
			[Address(RVA = "0xDFE9AC", Offset = "0xDFE9AC", VA = "0xDFE9AC")]
			get
			{
				return null;
			}
			[Token(Token = "0x60026A5")]
			[Address(RVA = "0xDFE9B4", Offset = "0xDFE9B4", VA = "0xDFE9B4")]
			set
			{
			}
		}

		[Token(Token = "0x60026A6")]
		[Address(RVA = "0xDFE9BC", Offset = "0xDFE9BC", VA = "0xDFE9BC", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x60026A7")]
		[Address(RVA = "0xDFEAA0", Offset = "0xDFEAA0", VA = "0xDFEAA0")]
		public Waypoint()
		{
		}
	}
	[Token(Token = "0x2000608")]
	public class WaypointGenerator : DungeonEventListener
	{
		[Token(Token = "0x4001FD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject waypointTemplate;

		[Token(Token = "0x4001FD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject waypointParent;

		[Token(Token = "0x4001FD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UnityEngine.Vector3 waypointOffset;

		[Token(Token = "0x4001FD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private bool mode2D;

		[Token(Token = "0x60026A8")]
		[Address(RVA = "0xDFEB00", Offset = "0xDFEB00", VA = "0xDFEB00", Slot = "5")]
		public override void OnDungeonMarkersEmitted(Dungeon dungeon, DungeonModel model, LevelMarkerList markers)
		{
		}

		[Token(Token = "0x60026A9")]
		[Address(RVA = "0xDFEB0C", Offset = "0xDFEB0C", VA = "0xDFEB0C")]
		public void BuildWaypoints(DungeonModel model, LevelMarkerList markers)
		{
		}

		[Token(Token = "0x60026AA")]
		[Address(RVA = "0xDFED88", Offset = "0xDFED88", VA = "0xDFED88")]
		private void BuildGridWaypoints(GridDungeonModel gridModel, LevelMarkerList markers)
		{
		}

		[Token(Token = "0x60026AB")]
		[Address(RVA = "0xDFF8CC", Offset = "0xDFF8CC", VA = "0xDFF8CC")]
		private void BuildCityWaypoints(SimpleCityDungeonModel model)
		{
		}

		[Token(Token = "0x60026AC")]
		[Address(RVA = "0xDFFEDC", Offset = "0xDFFEDC", VA = "0xDFFEDC")]
		private void ConnectAdjacentRoadTiles(SimpleCityDungeonModel model, SimpleCityCell cell, int dx, int dz, Dictionary<SimpleCityCell, Waypoint> cellToWaypoint, Dictionary<Waypoint, List<Waypoint>> adjacentWaypoints)
		{
		}

		[Token(Token = "0x60026AD")]
		[Address(RVA = "0xDFFE4C", Offset = "0xDFFE4C", VA = "0xDFFE4C")]
		private int GetHash(int a, int b)
		{
			return default(int);
		}

		[Token(Token = "0x60026AE")]
		[Address(RVA = "0xDFFE54", Offset = "0xDFFE54", VA = "0xDFFE54")]
		private bool HasDirectPath(GridDungeonModel gridModel, DungeonArchitect.Builders.Grid.Cell cellA, DungeonArchitect.Builders.Grid.Cell cellB)
		{
			return default(bool);
		}

		[Token(Token = "0x60026AF")]
		[Address(RVA = "0xE00060", Offset = "0xE00060", VA = "0xE00060", Slot = "9")]
		public override void OnDungeonDestroyed(Dungeon dungeon)
		{
		}

		[Token(Token = "0x60026B0")]
		[Address(RVA = "0xDFEC54", Offset = "0xDFEC54", VA = "0xDFEC54")]
		private void DestroyAllWaypoints()
		{
		}

		[Token(Token = "0x60026B1")]
		[Address(RVA = "0xDFFE0C", Offset = "0xDFFE0C", VA = "0xDFFE0C")]
		private UnityEngine.Vector3 FlipYZ(UnityEngine.Vector3 v)
		{
			return default(UnityEngine.Vector3);
		}

		[Token(Token = "0x60026B2")]
		[Address(RVA = "0xE00064", Offset = "0xE00064", VA = "0xE00064")]
		public WaypointGenerator()
		{
		}
	}
	[Token(Token = "0x2000609")]
	public class WaypointPathVisualizer : MonoBehaviour
	{
		[Token(Token = "0x4001FD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Color pathColor;

		[Token(Token = "0x60026B3")]
		[Address(RVA = "0xE000DC", Offset = "0xE000DC", VA = "0xE000DC")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x60026B4")]
		[Address(RVA = "0xE000E0", Offset = "0xE000E0", VA = "0xE000E0")]
		private void DrawWaypointPaths()
		{
		}

		[Token(Token = "0x60026B5")]
		[Address(RVA = "0xE002CC", Offset = "0xE002CC", VA = "0xE002CC")]
		private void DrawLine(UnityEngine.Vector3 a, UnityEngine.Vector3 b)
		{
		}

		[Token(Token = "0x60026B6")]
		[Address(RVA = "0xE002BC", Offset = "0xE002BC", VA = "0xE002BC")]
		private void DrawPoint(UnityEngine.Vector3 p)
		{
		}

		[Token(Token = "0x60026B7")]
		[Address(RVA = "0xE002D4", Offset = "0xE002D4", VA = "0xE002D4")]
		private UnityEngine.Vector3 FlipYZ(UnityEngine.Vector3 v)
		{
			return default(UnityEngine.Vector3);
		}

		[Token(Token = "0x60026B8")]
		[Address(RVA = "0xE00314", Offset = "0xE00314", VA = "0xE00314")]
		public WaypointPathVisualizer()
		{
		}
	}
	[Token(Token = "0x200060A")]
	public class MMRoomSelector : SelectorRule
	{
		[Token(Token = "0x60026B9")]
		[Address(RVA = "0xDF9D74", Offset = "0xDF9D74", VA = "0xDF9D74", Slot = "4")]
		public override bool CanSelect(PropSocket socket, Matrix4x4 propTransform, DungeonModel model, System.Random random)
		{
			return default(bool);
		}

		[Token(Token = "0x60026BA")]
		[Address(RVA = "0xDF9E28", Offset = "0xDF9E28", VA = "0xDF9E28")]
		public MMRoomSelector()
		{
		}
	}
}
namespace DungeonArchitect.Samples.ShooterGame.TwoD
{
	[Token(Token = "0x200060B")]
	public class AIStateBase : StateBase
	{
		[Serializable]
		[Token(Token = "0x20008C1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B9100", Offset = "0x8B9100")]
		private sealed class <>c
		{
			[Token(Token = "0x4002A82")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002A83")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Comparison<RaycastHit2D> <>9__7_0;

			[Token(Token = "0x4002A84")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Comparison<RaycastHit> <>9__8_0;

			[Token(Token = "0x60030E9")]
			[Address(RVA = "0xDFDB10", Offset = "0xDFDB10", VA = "0xDFDB10")]
			public <>c()
			{
			}

			[Token(Token = "0x60030EA")]
			[Address(RVA = "0xDFDB18", Offset = "0xDFDB18", VA = "0xDFDB18")]
			internal int <IsPlayerVisible2D>b__7_0(RaycastHit2D x, RaycastHit2D y)
			{
				return default(int);
			}

			[Token(Token = "0x60030EB")]
			[Address(RVA = "0xDFDB94", Offset = "0xDFDB94", VA = "0xDFDB94")]
			internal int <IsPlayerVisible3D>b__8_0(RaycastHit x, RaycastHit y)
			{
				return default(int);
			}
		}

		[Token(Token = "0x4001FDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected AIController2D controller;

		[Token(Token = "0x60026BB")]
		[Address(RVA = "0xDFCCF0", Offset = "0xDFCCF0", VA = "0xDFCCF0")]
		public AIStateBase(AIController2D controller, float updateDelay)
		{
		}

		[Token(Token = "0x60026BC")]
		[Address(RVA = "0xDFCD1C", Offset = "0xDFCD1C", VA = "0xDFCD1C", Slot = "18")]
		protected virtual void HandleFrameUpdate(float elapsedTime)
		{
		}

		[Token(Token = "0x60026BD")]
		[Address(RVA = "0xDFCD20", Offset = "0xDFCD20", VA = "0xDFCD20", Slot = "12")]
		public override void Update()
		{
		}

		[Token(Token = "0x60026BE")]
		[Address(RVA = "0xDFCE28", Offset = "0xDFCE28", VA = "0xDFCE28")]
		protected bool IsWithinPlayerProximity(ref Collider outCollider, float radius)
		{
			return default(bool);
		}

		[Token(Token = "0x60026BF")]
		[Address(RVA = "0xDFCE30", Offset = "0xDFCE30", VA = "0xDFCE30")]
		protected GameObject GetPlayer()
		{
			return null;
		}

		[Token(Token = "0x60026C0")]
		[Address(RVA = "0xDFCE9C", Offset = "0xDFCE9C", VA = "0xDFCE9C")]
		protected bool IsPlayerVisible()
		{
			return default(bool);
		}

		[Token(Token = "0x60026C1")]
		[Address(RVA = "0xDFCEC0", Offset = "0xDFCEC0", VA = "0xDFCEC0")]
		protected bool IsPlayerVisible2D()
		{
			return default(bool);
		}

		[Token(Token = "0x60026C2")]
		[Address(RVA = "0xDFD540", Offset = "0xDFD540", VA = "0xDFD540")]
		protected bool IsPlayerVisible3D()
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200060C")]
	public class AIStateMoveToLastKnownPosition : AIStateBase
	{
		[Token(Token = "0x60026C3")]
		[Address(RVA = "0xDFDD98", Offset = "0xDFDD98", VA = "0xDFDD98")]
		public AIStateMoveToLastKnownPosition(AIController2D controller)
		{
		}

		[Token(Token = "0x60026C4")]
		[Address(RVA = "0xDFDDC4", Offset = "0xDFDDC4", VA = "0xDFDDC4", Slot = "14")]
		public override void OnEnter()
		{
		}

		[Token(Token = "0x60026C5")]
		[Address(RVA = "0xDFDEA8", Offset = "0xDFDEA8", VA = "0xDFDEA8", Slot = "12")]
		public override void Update()
		{
		}

		[Token(Token = "0x60026C6")]
		[Address(RVA = "0xDFDEAC", Offset = "0xDFDEAC", VA = "0xDFDEAC", Slot = "18")]
		protected override void HandleFrameUpdate(float elapsedTime)
		{
		}
	}
	[Token(Token = "0x200060D")]
	public class AIStateWaitAndSearch : AIStateBase
	{
		[Token(Token = "0x4001FDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float timeSinceStart;

		[Token(Token = "0x60026C7")]
		[Address(RVA = "0xDFDF7C", Offset = "0xDFDF7C", VA = "0xDFDF7C")]
		public AIStateWaitAndSearch(AIController2D controller)
		{
		}

		[Token(Token = "0x60026C8")]
		[Address(RVA = "0xDFE5C8", Offset = "0xDFE5C8", VA = "0xDFE5C8", Slot = "14")]
		public override void OnEnter()
		{
		}

		[Token(Token = "0x60026C9")]
		[Address(RVA = "0xDFE5F4", Offset = "0xDFE5F4", VA = "0xDFE5F4", Slot = "18")]
		protected override void HandleFrameUpdate(float elapsedTime)
		{
		}
	}
	[Token(Token = "0x200060E")]
	public class AIStatePersuit : AIStateBase
	{
		[Token(Token = "0x4001FDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Transform followTarget;

		[Token(Token = "0x60026CA")]
		[Address(RVA = "0xDFDD6C", Offset = "0xDFDD6C", VA = "0xDFDD6C")]
		public AIStatePersuit(AIController2D controller)
		{
		}

		[Token(Token = "0x60026CB")]
		[Address(RVA = "0xDFE3DC", Offset = "0xDFE3DC", VA = "0xDFE3DC", Slot = "14")]
		public override void OnEnter()
		{
		}

		[Token(Token = "0x60026CC")]
		[Address(RVA = "0xDFE48C", Offset = "0xDFE48C", VA = "0xDFE48C", Slot = "15")]
		public override void OnExit()
		{
		}

		[Token(Token = "0x60026CD")]
		[Address(RVA = "0xDFE4B8", Offset = "0xDFE4B8", VA = "0xDFE4B8", Slot = "12")]
		public override void Update()
		{
		}

		[Token(Token = "0x60026CE")]
		[Address(RVA = "0xDFE4BC", Offset = "0xDFE4BC", VA = "0xDFE4BC", Slot = "18")]
		protected override void HandleFrameUpdate(float elapsedTime)
		{
		}
	}
	[Token(Token = "0x200060F")]
	public class AIStatePatrol : AIStateBase
	{
		[Token(Token = "0x4001FDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int currentWaypointIndex;

		[Token(Token = "0x4001FDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private UnityEngine.Vector3[] waypointOffsets;

		[Token(Token = "0x60026CF")]
		[Address(RVA = "0xDFCC54", Offset = "0xDFCC54", VA = "0xDFCC54")]
		public AIStatePatrol(AIController2D controller)
		{
		}

		[Token(Token = "0x60026D0")]
		[Address(RVA = "0xDFDFA8", Offset = "0xDFDFA8", VA = "0xDFDFA8", Slot = "14")]
		public override void OnEnter()
		{
		}

		[Token(Token = "0x60026D1")]
		[Address(RVA = "0xDFE130", Offset = "0xDFE130", VA = "0xDFE130")]
		private void MoveToCurrentPoint()
		{
		}

		[Token(Token = "0x60026D2")]
		[Address(RVA = "0xDFE2EC", Offset = "0xDFE2EC", VA = "0xDFE2EC", Slot = "15")]
		public override void OnExit()
		{
		}

		[Token(Token = "0x60026D3")]
		[Address(RVA = "0xDFE2F0", Offset = "0xDFE2F0", VA = "0xDFE2F0", Slot = "12")]
		public override void Update()
		{
		}

		[Token(Token = "0x60026D4")]
		[Address(RVA = "0xDFE2F4", Offset = "0xDFE2F4", VA = "0xDFE2F4", Slot = "18")]
		protected override void HandleFrameUpdate(float elapsedTime)
		{
		}
	}
	[Token(Token = "0x2000610")]
	internal enum AIAttackAnimState
	{
		[Token(Token = "0x4001FE0")]
		Requested,
		[Token(Token = "0x4001FE1")]
		Running,
		[Token(Token = "0x4001FE2")]
		InterAttackWait
	}
	[Token(Token = "0x2000611")]
	public class AIStateDead : AIStateBase
	{
		[Token(Token = "0x60026D5")]
		[Address(RVA = "0xDFCDFC", Offset = "0xDFCDFC", VA = "0xDFCDFC")]
		public AIStateDead(AIController2D controller)
		{
		}

		[Token(Token = "0x60026D6")]
		[Address(RVA = "0xDFDC10", Offset = "0xDFDC10", VA = "0xDFDC10", Slot = "14")]
		public override void OnEnter()
		{
		}

		[Token(Token = "0x60026D7")]
		[Address(RVA = "0xDFDC80", Offset = "0xDFDC80", VA = "0xDFDC80", Slot = "15")]
		public override void OnExit()
		{
		}
	}
	[Token(Token = "0x2000612")]
	public class AIStateIdle : AIStateBase
	{
		[Token(Token = "0x60026D8")]
		[Address(RVA = "0xDFCC80", Offset = "0xDFCC80", VA = "0xDFCC80")]
		public AIStateIdle(AIController2D controller)
		{
		}

		[Token(Token = "0x60026D9")]
		[Address(RVA = "0xDFDC84", Offset = "0xDFDC84", VA = "0xDFDC84", Slot = "14")]
		public override void OnEnter()
		{
		}

		[Token(Token = "0x60026DA")]
		[Address(RVA = "0xDFDCD0", Offset = "0xDFDCD0", VA = "0xDFDCD0", Slot = "15")]
		public override void OnExit()
		{
		}

		[Token(Token = "0x60026DB")]
		[Address(RVA = "0xDFDCD4", Offset = "0xDFDCD4", VA = "0xDFDCD4", Slot = "18")]
		protected override void HandleFrameUpdate(float elapsedTime)
		{
		}
	}
	[Token(Token = "0x2000613")]
	public class AIController2D : CharacterControlScript
	{
		[Token(Token = "0x4001FE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private DungeonNavAgent agent;

		[Token(Token = "0x4001FE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private PatrolPath patrol;

		[Token(Token = "0x4001FE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private CapsuleCollider capsule;

		[Token(Token = "0x4001FE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private LastPlayerSighting lastSighting;

		[Token(Token = "0x4001FE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool hasPatrolling;

		[Token(Token = "0x4001FE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float fieldOfView;

		[Token(Token = "0x4001FE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float maxViewSight;

		[Token(Token = "0x4001FEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float searchWaitTime;

		[Token(Token = "0x4001FEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float playerCloseByDistance;

		[Token(Token = "0x4001FEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float destinationArriveProximity;

		[Token(Token = "0x4001FED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float playerProximityRadius;

		[Token(Token = "0x4001FEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public bool mode2D;

		[Token(Token = "0x17000446")]
		public DungeonNavAgent Agent
		{
			[Token(Token = "0x60026DC")]
			[Address(RVA = "0xDFCB50", Offset = "0xDFCB50", VA = "0xDFCB50")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000447")]
		public CapsuleCollider Capsule
		{
			[Token(Token = "0x60026DD")]
			[Address(RVA = "0xDFCB58", Offset = "0xDFCB58", VA = "0xDFCB58")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000448")]
		public PatrolPath Patrol
		{
			[Token(Token = "0x60026DE")]
			[Address(RVA = "0xDFCB60", Offset = "0xDFCB60", VA = "0xDFCB60")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000449")]
		public LastPlayerSighting LastSighting
		{
			[Token(Token = "0x60026DF")]
			[Address(RVA = "0xDFCB68", Offset = "0xDFCB68", VA = "0xDFCB68")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60026E0")]
		[Address(RVA = "0xDFCB70", Offset = "0xDFCB70", VA = "0xDFCB70", Slot = "4")]
		protected override void Initialize()
		{
		}

		[Token(Token = "0x60026E1")]
		[Address(RVA = "0xDFCCAC", Offset = "0xDFCCAC", VA = "0xDFCCAC", Slot = "5")]
		public override bool GetInputJump()
		{
			return default(bool);
		}

		[Token(Token = "0x60026E2")]
		[Address(RVA = "0xDFCCB4", Offset = "0xDFCCB4", VA = "0xDFCCB4", Slot = "6")]
		public override bool GetInputAttackPrimary()
		{
			return default(bool);
		}

		[Token(Token = "0x60026E3")]
		[Address(RVA = "0xDFCCBC", Offset = "0xDFCCBC", VA = "0xDFCCBC", Slot = "7")]
		public override bool IsGrounded()
		{
			return default(bool);
		}

		[Token(Token = "0x60026E4")]
		[Address(RVA = "0xDFCCC4", Offset = "0xDFCCC4", VA = "0xDFCCC4", Slot = "8")]
		public override void ApplyMovement(UnityEngine.Vector3 velocity)
		{
		}

		[Token(Token = "0x60026E5")]
		[Address(RVA = "0xDFCCC8", Offset = "0xDFCCC8", VA = "0xDFCCC8")]
		public AIController2D()
		{
		}
	}
}
namespace DungeonArchitect.Samples.InfinityCaves
{
	[Token(Token = "0x2000614")]
	public class InfinityCavesDemoController : MonoBehaviour
	{
		[Token(Token = "0x4001FEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InfinityDungeon dungeon;

		[Token(Token = "0x60026E6")]
		[Address(RVA = "0xDF4EDC", Offset = "0xDF4EDC", VA = "0xDF4EDC")]
		private void Start()
		{
		}

		[Token(Token = "0x60026E7")]
		[Address(RVA = "0xDF4F70", Offset = "0xDF4F70", VA = "0xDF4F70")]
		public InfinityCavesDemoController()
		{
		}
	}
}
namespace DungeonArchitect.Samples.GridFlow
{
	[Token(Token = "0x2000615")]
	public class LockedDoor : MonoBehaviour
	{
		[Token(Token = "0x4001FF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform doorLeft;

		[Token(Token = "0x4001FF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform doorRight;

		[Token(Token = "0x4001FF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Animator animator;

		[Token(Token = "0x4001FF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private string lockId;

		[Token(Token = "0x4001FF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string[] validKeys;

		[Token(Token = "0x60026E8")]
		[Address(RVA = "0xDF464C", Offset = "0xDF464C", VA = "0xDF464C")]
		private void Start()
		{
		}

		[Token(Token = "0x60026E9")]
		[Address(RVA = "0xDF470C", Offset = "0xDF470C", VA = "0xDF470C")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x60026EA")]
		[Address(RVA = "0xDF48B4", Offset = "0xDF48B4", VA = "0xDF48B4")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x60026EB")]
		[Address(RVA = "0xDF4740", Offset = "0xDF4740", VA = "0xDF4740")]
		private bool CanOpenDoor(Collider other)
		{
			return default(bool);
		}

		[Token(Token = "0x60026EC")]
		[Address(RVA = "0xDF4854", Offset = "0xDF4854", VA = "0xDF4854")]
		private void OpenDoor()
		{
		}

		[Token(Token = "0x60026ED")]
		[Address(RVA = "0xDF48B8", Offset = "0xDF48B8", VA = "0xDF48B8")]
		private void CloseDoor()
		{
		}

		[Token(Token = "0x60026EE")]
		[Address(RVA = "0xDF4918", Offset = "0xDF4918", VA = "0xDF4918")]
		public LockedDoor()
		{
		}
	}
	[Token(Token = "0x2000616")]
	public class GridFlowGameController : MonoBehaviour
	{
		[Token(Token = "0x4001FF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Dungeon dungeon;

		[Token(Token = "0x60026EF")]
		[Address(RVA = "0xDF41D4", Offset = "0xDF41D4", VA = "0xDF41D4")]
		private void Start()
		{
		}

		[Token(Token = "0x60026F0")]
		[Address(RVA = "0xDF42CC", Offset = "0xDF42CC", VA = "0xDF42CC")]
		private void Update()
		{
		}

		[Token(Token = "0x60026F1")]
		[Address(RVA = "0xDF42D0", Offset = "0xDF42D0", VA = "0xDF42D0")]
		public GridFlowGameController()
		{
		}
	}
	[Token(Token = "0x2000617")]
	public class GridFlowPlayerController : MonoBehaviour
	{
		[Token(Token = "0x60026F2")]
		[Address(RVA = "0xDF42D8", Offset = "0xDF42D8", VA = "0xDF42D8")]
		public GridFlowPlayerController()
		{
		}
	}
	[Token(Token = "0x2000618")]
	public enum InventoryItemType
	{
		[Token(Token = "0x4001FF7")]
		None,
		[Token(Token = "0x4001FF8")]
		Key
	}
	[Serializable]
	[Token(Token = "0x2000619")]
	public class InventoryItem
	{
		[Token(Token = "0x4001FF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public InventoryItemType itemType;

		[Token(Token = "0x4001FFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string itemId;

		[Token(Token = "0x4001FFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Sprite icon;

		[Token(Token = "0x60026F3")]
		[Address(RVA = "0xDF45D4", Offset = "0xDF45D4", VA = "0xDF45D4")]
		public InventoryItem()
		{
		}
	}
	[Token(Token = "0x200061A")]
	public class Inventory : MonoBehaviour
	{
		[Token(Token = "0x4001FFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InventorySlot[] slots;

		[Token(Token = "0x4001FFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private InventoryUI inventoryUI;

		[Token(Token = "0x60026F4")]
		[Address(RVA = "0xDF42E0", Offset = "0xDF42E0", VA = "0xDF42E0")]
		private void Awake()
		{
		}

		[Token(Token = "0x60026F5")]
		[Address(RVA = "0xDF4354", Offset = "0xDF4354", VA = "0xDF4354")]
		public bool Add(InventoryItem item)
		{
			return default(bool);
		}

		[Token(Token = "0x60026F6")]
		[Address(RVA = "0xDF452C", Offset = "0xDF452C", VA = "0xDF452C")]
		public bool ContainsItem(string itemId)
		{
			return default(bool);
		}

		[Token(Token = "0x60026F7")]
		[Address(RVA = "0xDF45CC", Offset = "0xDF45CC", VA = "0xDF45CC")]
		public Inventory()
		{
		}
	}
	[Token(Token = "0x200061B")]
	public class InventorySlot : MonoBehaviour
	{
		[Token(Token = "0x4001FFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InventoryItem item;

		[Token(Token = "0x60026F8")]
		[Address(RVA = "0xDF45DC", Offset = "0xDF45DC", VA = "0xDF45DC")]
		public InventorySlot()
		{
		}
	}
	[Token(Token = "0x200061C")]
	public class PickableItem : MonoBehaviour
	{
		[Token(Token = "0x4001FFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InventoryItemType itemType;

		[Token(Token = "0x4002000")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Sprite icon;

		[Token(Token = "0x60026F9")]
		[Address(RVA = "0xDF4978", Offset = "0xDF4978", VA = "0xDF4978")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x60026FA")]
		[Address(RVA = "0xDF4ABC", Offset = "0xDF4ABC", VA = "0xDF4ABC")]
		private string GetItemId()
		{
			return null;
		}

		[Token(Token = "0x60026FB")]
		[Address(RVA = "0xDF4B68", Offset = "0xDF4B68", VA = "0xDF4B68")]
		public PickableItem()
		{
		}
	}
	[Token(Token = "0x200061D")]
	public class InventoryUI : MonoBehaviour
	{
		[Token(Token = "0x4002001")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Image[] slotImages;

		[Token(Token = "0x60026FC")]
		[Address(RVA = "0xDF4450", Offset = "0xDF4450", VA = "0xDF4450")]
		public void UpdateUI(Inventory inventory)
		{
		}

		[Token(Token = "0x60026FD")]
		[Address(RVA = "0xDF4644", Offset = "0xDF4644", VA = "0xDF4644")]
		public InventoryUI()
		{
		}
	}
	[Token(Token = "0x200061E")]
	public class RandomTreeTransformRule : TransformationRule
	{
		[Token(Token = "0x60026FE")]
		[Address(RVA = "0xDF4B70", Offset = "0xDF4B70", VA = "0xDF4B70", Slot = "4")]
		public override void GetTransform(PropSocket socket, DungeonModel model, Matrix4x4 propTransform, System.Random random, out UnityEngine.Vector3 outPosition, out Quaternion outRotation, out UnityEngine.Vector3 outScale)
		{
		}

		[Token(Token = "0x60026FF")]
		[Address(RVA = "0xDF4DDC", Offset = "0xDF4DDC", VA = "0xDF4DDC")]
		public RandomTreeTransformRule()
		{
		}
	}
	[Token(Token = "0x200061F")]
	public class RestoreRotationTransformRule : TransformationRule
	{
		[Token(Token = "0x6002700")]
		[Address(RVA = "0xDF4DEC", Offset = "0xDF4DEC", VA = "0xDF4DEC", Slot = "4")]
		public override void GetTransform(PropSocket socket, DungeonModel model, Matrix4x4 propTransform, System.Random random, out UnityEngine.Vector3 outPosition, out Quaternion outRotation, out UnityEngine.Vector3 outScale)
		{
		}

		[Token(Token = "0x6002701")]
		[Address(RVA = "0xDF4ED4", Offset = "0xDF4ED4", VA = "0xDF4ED4")]
		public RestoreRotationTransformRule()
		{
		}
	}
}
namespace DungeonArchitect.Samples.CircularCity
{
	[Token(Token = "0x2000620")]
	public class CircularCityBuildingHeightModifier : DungeonEventListener
	{
		[Token(Token = "0x4002002")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AnimationCurve curve;

		[Token(Token = "0x4002003")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float maxScale;

		[Token(Token = "0x4002004")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float minScale;

		[Token(Token = "0x6002702")]
		[Address(RVA = "0xDF3858", Offset = "0xDF3858", VA = "0xDF3858", Slot = "5")]
		public override void OnDungeonMarkersEmitted(Dungeon dungeon, DungeonModel model, LevelMarkerList markers)
		{
		}

		[Token(Token = "0x6002703")]
		[Address(RVA = "0xDF3CEC", Offset = "0xDF3CEC", VA = "0xDF3CEC")]
		public CircularCityBuildingHeightModifier()
		{
		}
	}
}
