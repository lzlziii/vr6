using System;
using System.Collections;
using System.Collections.Generic;
using System.Diagnostics;
using System.IO;
using System.Net.Security;
using System.Reflection;
using System.Runtime.InteropServices;
using System.Security.Cryptography.X509Certificates;
using AudioTextSynchronizer;
using AudioTextSynchronizer.Core;
using DigitalOpus.MB.Core;
using DinoFracture;
using Il2CppDummyDll;
using JulienFoucher;
using Oculus.Platform;
using Oculus.Platform.Models;
using Oculus.Spatializer.Propagation;
using PicoPorting;
using RenderHeads.Media.AVProVideo;
using TMPro;
using UnityEngine;
using UnityEngine.AI;
using UnityEngine.Audio;
using UnityEngine.EventSystems;
using UnityEngine.Events;
using UnityEngine.Networking;
using UnityEngine.Playables;
using UnityEngine.Rendering;
using UnityEngine.SceneManagement;
using UnityEngine.UI;
using UnityEngine.Video;
using UnityEngine.XR;
using Valve.VR.InteractionSystem.Sample;

[assembly: AssemblyVersion("0.0.0.0")]
[Token(Token = "0x2000002")]
public class AIController : MonoBehaviour
{
	[Token(Token = "0x2000003")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D60B4", Offset = "0x8D60B4")]
	private sealed class <LeaveTimer>d__23 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000013")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000014")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000015")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AIController <>4__this;

		[Token(Token = "0x17000001")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600000C")]
			[Address(RVA = "0x1047FA4", Offset = "0x1047FA4", VA = "0x1047FA4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000002")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600000E")]
			[Address(RVA = "0x1047FEC", Offset = "0x1047FEC", VA = "0x1047FEC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000009")]
		[Address(RVA = "0x1047EBC", Offset = "0x1047EBC", VA = "0x1047EBC")]
		[DebuggerHidden]
		public <LeaveTimer>d__23(int <>1__state)
		{
		}

		[Token(Token = "0x600000A")]
		[Address(RVA = "0x1047EE8", Offset = "0x1047EE8", VA = "0x1047EE8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600000B")]
		[Address(RVA = "0x1047EEC", Offset = "0x1047EEC", VA = "0x1047EEC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600000D")]
		[Address(RVA = "0x1047FAC", Offset = "0x1047FAC", VA = "0x1047FAC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000004")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D60C4", Offset = "0x8D60C4")]
	private sealed class <GoBackTimer>d__24 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000016")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000017")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000018")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AIController <>4__this;

		[Token(Token = "0x17000003")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000012")]
			[Address(RVA = "0x1047E6C", Offset = "0x1047E6C", VA = "0x1047E6C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000004")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000014")]
			[Address(RVA = "0x1047EB4", Offset = "0x1047EB4", VA = "0x1047EB4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600000F")]
		[Address(RVA = "0x1047D88", Offset = "0x1047D88", VA = "0x1047D88")]
		[DebuggerHidden]
		public <GoBackTimer>d__24(int <>1__state)
		{
		}

		[Token(Token = "0x6000010")]
		[Address(RVA = "0x1047DB4", Offset = "0x1047DB4", VA = "0x1047DB4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000011")]
		[Address(RVA = "0x1047DB8", Offset = "0x1047DB8", VA = "0x1047DB8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000013")]
		[Address(RVA = "0x1047E74", Offset = "0x1047E74", VA = "0x1047E74", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000001")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Rigidbody rb;

	[Token(Token = "0x4000002")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject diskObject;

	[Token(Token = "0x4000003")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool opponentSide;

	[Token(Token = "0x4000004")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float diskOffset;

	[Token(Token = "0x4000005")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3 targetPos;

	[Token(Token = "0x4000006")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private Vector3 targetPos2;

	[Token(Token = "0x4000007")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject disk;

	[Token(Token = "0x4000008")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform xMin;

	[Token(Token = "0x4000009")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform xMax;

	[Token(Token = "0x400000A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Transform zMin;

	[Token(Token = "0x400000B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Transform zMax;

	[Token(Token = "0x400000C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Transform defenseZ;

	[Token(Token = "0x400000D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Transform stuckSpot;

	[Token(Token = "0x400000E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Coroutine moveOutRoutine;

	[Token(Token = "0x400000F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Coroutine moveBackRoutine;

	[Token(Token = "0x4000010")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public float speed2;

	[Token(Token = "0x4000011")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public bool puckIsStuck;

	[Token(Token = "0x4000012")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x95")]
	public bool changeSpeed;

	[Token(Token = "0x6000001")]
	[Address(RVA = "0x1ACB1E0", Offset = "0x1ACB1E0", VA = "0x1ACB1E0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000002")]
	[Address(RVA = "0x1ACB23C", Offset = "0x1ACB23C", VA = "0x1ACB23C")]
	public void StopCouroutinies()
	{
	}

	[Token(Token = "0x6000003")]
	[Address(RVA = "0x1ACB284", Offset = "0x1ACB284", VA = "0x1ACB284")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000004")]
	[Address(RVA = "0x1ACB640", Offset = "0x1ACB640", VA = "0x1ACB640")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000005")]
	[Address(RVA = "0x1ACB6F4", Offset = "0x1ACB6F4", VA = "0x1ACB6F4")]
	private void OnCollisionExit(Collision collision)
	{
	}

	[Token(Token = "0x6000006")]
	[Address(RVA = "0x1ACB67C", Offset = "0x1ACB67C", VA = "0x1ACB67C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8DCE74", Offset = "0x8DCE74")]
	private IEnumerator LeaveTimer()
	{
		return null;
	}

	[Token(Token = "0x6000007")]
	[Address(RVA = "0x1ACB754", Offset = "0x1ACB754", VA = "0x1ACB754")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8DCED4", Offset = "0x8DCED4")]
	private IEnumerator GoBackTimer()
	{
		return null;
	}

	[Token(Token = "0x6000008")]
	[Address(RVA = "0x1ACB7CC", Offset = "0x1ACB7CC", VA = "0x1ACB7CC")]
	public AIController()
	{
	}
}
[Token(Token = "0x2000005")]
public class ActivateBall : MonoBehaviour
{
	[Token(Token = "0x6000015")]
	[Address(RVA = "0x1ACB7DC", Offset = "0x1ACB7DC", VA = "0x1ACB7DC")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000016")]
	[Address(RVA = "0x1ACB848", Offset = "0x1ACB848", VA = "0x1ACB848")]
	private void Start()
	{
	}

	[Token(Token = "0x6000017")]
	[Address(RVA = "0x1ACB84C", Offset = "0x1ACB84C", VA = "0x1ACB84C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000018")]
	[Address(RVA = "0x1ACB850", Offset = "0x1ACB850", VA = "0x1ACB850")]
	public ActivateBall()
	{
	}
}
[Token(Token = "0x2000006")]
public class ActivateFlyBack : MonoBehaviour
{
	[Token(Token = "0x4000019")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string tagName;

	[Token(Token = "0x400001A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool attachedToAHand;

	[Token(Token = "0x400001B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool outsideOfArea;

	[Token(Token = "0x400001C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
	public bool airHockey;

	[Token(Token = "0x6000019")]
	[Address(RVA = "0x1ACB858", Offset = "0x1ACB858", VA = "0x1ACB858")]
	private void Start()
	{
	}

	[Token(Token = "0x600001A")]
	[Address(RVA = "0x1ACB864", Offset = "0x1ACB864", VA = "0x1ACB864")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x600001B")]
	[Address(RVA = "0x1ACB980", Offset = "0x1ACB980", VA = "0x1ACB980")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600001C")]
	[Address(RVA = "0x1ACBA9C", Offset = "0x1ACBA9C", VA = "0x1ACBA9C")]
	public ActivateFlyBack()
	{
	}
}
[Token(Token = "0x2000007")]
public class ActivatePoint : MonoBehaviour
{
	[Token(Token = "0x400001D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject pointChecker;

	[Token(Token = "0x600001D")]
	[Address(RVA = "0x1ACBAA4", Offset = "0x1ACBAA4", VA = "0x1ACBAA4")]
	private void Start()
	{
	}

	[Token(Token = "0x600001E")]
	[Address(RVA = "0x1ACBAA8", Offset = "0x1ACBAA8", VA = "0x1ACBAA8")]
	private void Update()
	{
	}

	[Token(Token = "0x600001F")]
	[Address(RVA = "0x1ACBBE0", Offset = "0x1ACBBE0", VA = "0x1ACBBE0")]
	public ActivatePoint()
	{
	}
}
[Token(Token = "0x2000008")]
public class ActivatePointCollider : MonoBehaviour
{
	[Token(Token = "0x400001E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject pointerColliderActivateDecider;

	[Token(Token = "0x400001F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool clawHand;

	[Token(Token = "0x6000020")]
	[Address(RVA = "0x1ACBBE8", Offset = "0x1ACBBE8", VA = "0x1ACBBE8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000021")]
	[Address(RVA = "0x1ACBBEC", Offset = "0x1ACBBEC", VA = "0x1ACBBEC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000022")]
	[Address(RVA = "0x1ACBBF0", Offset = "0x1ACBBF0", VA = "0x1ACBBF0")]
	public ActivatePointCollider()
	{
	}
}
[Token(Token = "0x2000009")]
public class AddPointerColldier : MonoBehaviour
{
	[Token(Token = "0x4000020")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject pointerColliderPrefab;

	[Token(Token = "0x4000021")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject pointerCollider;

	[Token(Token = "0x4000022")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject pointerColliderParent;

	[Token(Token = "0x4000023")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject pointerColliderActivateDecider;

	[Token(Token = "0x6000023")]
	[Address(RVA = "0x1ACBBF8", Offset = "0x1ACBBF8", VA = "0x1ACBBF8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000024")]
	[Address(RVA = "0x1ACC098", Offset = "0x1ACC098", VA = "0x1ACC098")]
	private void Update()
	{
	}

	[Token(Token = "0x6000025")]
	[Address(RVA = "0x1ACC09C", Offset = "0x1ACC09C", VA = "0x1ACC09C")]
	public AddPointerColldier()
	{
	}
}
[Token(Token = "0x200000A")]
public class AirHockeyManager : MonoBehaviour
{
	[Token(Token = "0x200000B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D60D4", Offset = "0x8D60D4")]
	private sealed class <WaitToRespawn>d__45 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000046")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000047")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000048")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AirHockeyManager <>4__this;

		[Token(Token = "0x17000005")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600003A")]
			[Address(RVA = "0x10486B0", Offset = "0x10486B0", VA = "0x10486B0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000006")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600003C")]
			[Address(RVA = "0x10486F8", Offset = "0x10486F8", VA = "0x10486F8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000037")]
		[Address(RVA = "0x10485C8", Offset = "0x10485C8", VA = "0x10485C8")]
		[DebuggerHidden]
		public <WaitToRespawn>d__45(int <>1__state)
		{
		}

		[Token(Token = "0x6000038")]
		[Address(RVA = "0x10485F4", Offset = "0x10485F4", VA = "0x10485F4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000039")]
		[Address(RVA = "0x10485F8", Offset = "0x10485F8", VA = "0x10485F8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600003B")]
		[Address(RVA = "0x10486B8", Offset = "0x10486B8", VA = "0x10486B8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200000C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D60E4", Offset = "0x8D60E4")]
	private sealed class <LoseRoutine>d__46 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000049")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400004A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400004B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AirHockeyManager <>4__this;

		[Token(Token = "0x17000007")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000040")]
			[Address(RVA = "0x1048108", Offset = "0x1048108", VA = "0x1048108", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000008")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000042")]
			[Address(RVA = "0x1048150", Offset = "0x1048150", VA = "0x1048150", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600003D")]
		[Address(RVA = "0x1047FF4", Offset = "0x1047FF4", VA = "0x1047FF4")]
		[DebuggerHidden]
		public <LoseRoutine>d__46(int <>1__state)
		{
		}

		[Token(Token = "0x600003E")]
		[Address(RVA = "0x1048020", Offset = "0x1048020", VA = "0x1048020", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600003F")]
		[Address(RVA = "0x1048024", Offset = "0x1048024", VA = "0x1048024", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000041")]
		[Address(RVA = "0x1048110", Offset = "0x1048110", VA = "0x1048110", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200000D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D60F4", Offset = "0x8D60F4")]
	private sealed class <WinRoutine>d__47 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400004C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400004D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400004E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AirHockeyManager <>4__this;

		[Token(Token = "0x17000009")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000046")]
			[Address(RVA = "0x10488D0", Offset = "0x10488D0", VA = "0x10488D0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700000A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000048")]
			[Address(RVA = "0x1048918", Offset = "0x1048918", VA = "0x1048918", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000043")]
		[Address(RVA = "0x1048700", Offset = "0x1048700", VA = "0x1048700")]
		[DebuggerHidden]
		public <WinRoutine>d__47(int <>1__state)
		{
		}

		[Token(Token = "0x6000044")]
		[Address(RVA = "0x104872C", Offset = "0x104872C", VA = "0x104872C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000045")]
		[Address(RVA = "0x1048730", Offset = "0x1048730", VA = "0x1048730", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000047")]
		[Address(RVA = "0x10488D8", Offset = "0x10488D8", VA = "0x10488D8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200000E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D6104", Offset = "0x8D6104")]
	private sealed class <RotateRightDoor>d__48 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400004F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000050")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000051")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AirHockeyManager <>4__this;

		[Token(Token = "0x1700000B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600004C")]
			[Address(RVA = "0x1048578", Offset = "0x1048578", VA = "0x1048578", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700000C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600004E")]
			[Address(RVA = "0x10485C0", Offset = "0x10485C0", VA = "0x10485C0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000049")]
		[Address(RVA = "0x1048390", Offset = "0x1048390", VA = "0x1048390")]
		[DebuggerHidden]
		public <RotateRightDoor>d__48(int <>1__state)
		{
		}

		[Token(Token = "0x600004A")]
		[Address(RVA = "0x10483BC", Offset = "0x10483BC", VA = "0x10483BC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600004B")]
		[Address(RVA = "0x10483C0", Offset = "0x10483C0", VA = "0x10483C0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600004D")]
		[Address(RVA = "0x1048580", Offset = "0x1048580", VA = "0x1048580", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200000F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D6114", Offset = "0x8D6114")]
	private sealed class <RotateLeftDoor>d__49 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000052")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000053")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000054")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AirHockeyManager <>4__this;

		[Token(Token = "0x1700000D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000052")]
			[Address(RVA = "0x1048340", Offset = "0x1048340", VA = "0x1048340", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700000E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000054")]
			[Address(RVA = "0x1048388", Offset = "0x1048388", VA = "0x1048388", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600004F")]
		[Address(RVA = "0x1048158", Offset = "0x1048158", VA = "0x1048158")]
		[DebuggerHidden]
		public <RotateLeftDoor>d__49(int <>1__state)
		{
		}

		[Token(Token = "0x6000050")]
		[Address(RVA = "0x1048184", Offset = "0x1048184", VA = "0x1048184", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000051")]
		[Address(RVA = "0x1048188", Offset = "0x1048188", VA = "0x1048188", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000053")]
		[Address(RVA = "0x1048348", Offset = "0x1048348", VA = "0x1048348", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000024")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text gameScoreTextP1L;

	[Token(Token = "0x4000025")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text gameScoreTextP1R;

	[Token(Token = "0x4000026")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text gameScoreTextP2L;

	[Token(Token = "0x4000027")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Text gameScoreTextP2R;

	[Token(Token = "0x4000028")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Text gameScoreTextP1F;

	[Token(Token = "0x4000029")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Text gameScoreTextP1B;

	[Token(Token = "0x400002A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Text gameScoreTextP2F;

	[Token(Token = "0x400002B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Text gameScoreTextP2B;

	[Token(Token = "0x400002C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Text gameHighScoreText;

	[Token(Token = "0x400002D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Text gameTimeText;

	[Token(Token = "0x400002E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public int gameScoreP1;

	[Token(Token = "0x400002F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public int gameScoreP2;

	[Token(Token = "0x4000030")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool timerIsRunning;

	[Token(Token = "0x4000031")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Text timeText;

	[Token(Token = "0x4000032")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject nexusPaddle;

	[Token(Token = "0x4000033")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GameObject prizeDoor1;

	[Token(Token = "0x4000034")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public GameObject prizeDoor2;

	[Token(Token = "0x4000035")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public AudioSource airHockeyAir;

	[Token(Token = "0x4000036")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public PhysicMaterial physicMaterialTable;

	[Token(Token = "0x4000037")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public GameObject tableSurface;

	[Token(Token = "0x4000038")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public GameObject airHockeyPuck;

	[Token(Token = "0x4000039")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public NexusArcadeTrashTalk trashTalkManager;

	[Token(Token = "0x400003A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public float waitTime;

	[Token(Token = "0x400003B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	public bool testIt;

	[Token(Token = "0x400003C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public GameObject bombPog;

	[Token(Token = "0x400003D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public GameObject deliaNote;

	[Token(Token = "0x400003E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public Transform pogFinalSpot;

	[Token(Token = "0x400003F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public Transform noteFinalSpot;

	[Token(Token = "0x4000040")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public GameObject puckResetButton;

	[Token(Token = "0x4000041")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public GameObject puckReturnSign;

	[Token(Token = "0x4000042")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public bool inCheatingLocation;

	[Token(Token = "0x4000043")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF9")]
	public bool cheatedThisRound;

	[Token(Token = "0x4000044")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFA")]
	public bool arcadeOnlyMode;

	[Token(Token = "0x4000045")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFB")]
	public bool canReset;

	[Token(Token = "0x6000026")]
	[Address(RVA = "0x1ACC0A4", Offset = "0x1ACC0A4", VA = "0x1ACC0A4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000027")]
	[Address(RVA = "0x1ACC258", Offset = "0x1ACC258", VA = "0x1ACC258")]
	public void TurnOnNexusPaddle()
	{
	}

	[Token(Token = "0x6000028")]
	[Address(RVA = "0x1ACC2BC", Offset = "0x1ACC2BC", VA = "0x1ACC2BC")]
	public void OnPlayerWin()
	{
	}

	[Token(Token = "0x6000029")]
	[Address(RVA = "0x1ACC418", Offset = "0x1ACC418", VA = "0x1ACC418")]
	public void OnAIWin()
	{
	}

	[Token(Token = "0x600002A")]
	[Address(RVA = "0x1ACC41C", Offset = "0x1ACC41C", VA = "0x1ACC41C")]
	public void TurnOnAirHockey()
	{
	}

	[Token(Token = "0x600002B")]
	[Address(RVA = "0x1ACC704", Offset = "0x1ACC704", VA = "0x1ACC704")]
	public void TurnOffAirHockey()
	{
	}

	[Token(Token = "0x600002C")]
	[Address(RVA = "0x1ACC9C4", Offset = "0x1ACC9C4", VA = "0x1ACC9C4")]
	public void AddScoreP1(int scoreToAdd)
	{
	}

	[Token(Token = "0x600002D")]
	[Address(RVA = "0x1ACCB9C", Offset = "0x1ACCB9C", VA = "0x1ACCB9C")]
	public void AddScoreP2(int scoreToAdd)
	{
	}

	[Token(Token = "0x600002E")]
	[Address(RVA = "0x1ACCDE8", Offset = "0x1ACCDE8", VA = "0x1ACCDE8")]
	public void ResetPuck()
	{
	}

	[Token(Token = "0x600002F")]
	[Address(RVA = "0x1ACCE74", Offset = "0x1ACCE74", VA = "0x1ACCE74")]
	public void ResetDarts()
	{
	}

	[Token(Token = "0x6000030")]
	[Address(RVA = "0x1ACD0A8", Offset = "0x1ACD0A8", VA = "0x1ACD0A8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000031")]
	[Address(RVA = "0x1ACD030", Offset = "0x1ACD030", VA = "0x1ACD030")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8DCFD4", Offset = "0x8DCFD4")]
	public IEnumerator WaitToRespawn()
	{
		return null;
	}

	[Token(Token = "0x6000032")]
	[Address(RVA = "0x1ACCB24", Offset = "0x1ACCB24", VA = "0x1ACCB24")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8DD034", Offset = "0x8DD034")]
	public IEnumerator LoseRoutine()
	{
		return null;
	}

	[Token(Token = "0x6000033")]
	[Address(RVA = "0x1ACCD70", Offset = "0x1ACCD70", VA = "0x1ACCD70")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8DD094", Offset = "0x8DD094")]
	public IEnumerator WinRoutine()
	{
		return null;
	}

	[Token(Token = "0x6000034")]
	[Address(RVA = "0x1ACC168", Offset = "0x1ACC168", VA = "0x1ACC168")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8DD0F4", Offset = "0x8DD0F4")]
	private IEnumerator RotateRightDoor()
	{
		return null;
	}

	[Token(Token = "0x6000035")]
	[Address(RVA = "0x1ACC1E0", Offset = "0x1ACC1E0", VA = "0x1ACC1E0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8DD154", Offset = "0x8DD154")]
	private IEnumerator RotateLeftDoor()
	{
		return null;
	}

	[Token(Token = "0x6000036")]
	[Address(RVA = "0x1ACD41C", Offset = "0x1ACD41C", VA = "0x1ACD41C")]
	public AirHockeyManager()
	{
	}
}
[Token(Token = "0x2000010")]
public class AirHockeyScoreCollider : MonoBehaviour
{
	[Token(Token = "0x4000055")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject airHockeyManager;

	[Token(Token = "0x4000056")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioSource source;

	[Token(Token = "0x4000057")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool isPlayer1;

	[Token(Token = "0x6000055")]
	[Address(RVA = "0x1ACD42C", Offset = "0x1ACD42C", VA = "0x1ACD42C")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000056")]
	[Address(RVA = "0x1ACD5A8", Offset = "0x1ACD5A8", VA = "0x1ACD5A8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000057")]
	[Address(RVA = "0x1ACD5AC", Offset = "0x1ACD5AC", VA = "0x1ACD5AC")]
	public AirHockeyScoreCollider()
	{
	}
}
[Token(Token = "0x2000011")]
public class ArcadeEndGrab : MonoBehaviour
{
	[Token(Token = "0x4000058")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool hasBeenGrabbed;

	[Token(Token = "0x4000059")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject changeScene;

	[Token(Token = "0x6000058")]
	[Address(RVA = "0x1AD84A4", Offset = "0x1AD84A4", VA = "0x1AD84A4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000059")]
	[Address(RVA = "0x1AD84A8", Offset = "0x1AD84A8", VA = "0x1AD84A8")]
	private void Update()
	{
	}

	[Token(Token = "0x600005A")]
	[Address(RVA = "0x1AD85C0", Offset = "0x1AD85C0", VA = "0x1AD85C0")]
	public ArcadeEndGrab()
	{
	}
}
[Token(Token = "0x2000012")]
public class ArcadeMusicManager : MonoBehaviour
{
	[Token(Token = "0x2000013")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D6124", Offset = "0x8D6124")]
	private sealed class <FadeOutMusic>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400005E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400005F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000060")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ArcadeMusicManager <>4__this;

		[Token(Token = "0x4000061")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float FadeTime;

		[Token(Token = "0x4000062")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <startVolume>5__2;

		[Token(Token = "0x1700000F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000068")]
			[Address(RVA = "0x1048ED4", Offset = "0x1048ED4", VA = "0x1048ED4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000010")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600006A")]
			[Address(RVA = "0x1048F1C", Offset = "0x1048F1C", VA = "0x1048F1C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000065")]
		[Address(RVA = "0x1048D98", Offset = "0x1048D98", VA = "0x1048D98")]
		[DebuggerHidden]
		public <FadeOutMusic>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x6000066")]
		[Address(RVA = "0x1048DC4", Offset = "0x1048DC4", VA = "0x1048DC4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000067")]
		[Address(RVA = "0x1048DC8", Offset = "0x1048DC8", VA = "0x1048DC8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000069")]
		[Address(RVA = "0x1048EDC", Offset = "0x1048EDC", VA = "0x1048EDC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400005A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioClip[] arcadeMusic;

	[Token(Token = "0x400005B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int audioClipTracker;

	[Token(Token = "0x400005C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioSource audio;

	[Token(Token = "0x400005D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float theCurrentVolume;

	[Token(Token = "0x600005B")]
	[Address(RVA = "0x1AD85C8", Offset = "0x1AD85C8", VA = "0x1AD85C8")]
	private void Start()
	{
	}

	[Token(Token = "0x600005C")]
	[Address(RVA = "0x1AD86E4", Offset = "0x1AD86E4", VA = "0x1AD86E4")]
	private void PlayNextTrack()
	{
	}

	[Token(Token = "0x600005D")]
	[Address(RVA = "0x1AD87C4", Offset = "0x1AD87C4", VA = "0x1AD87C4")]
	public void StartTheMusicAgain()
	{
	}

	[Token(Token = "0x600005E")]
	[Address(RVA = "0x1AD8890", Offset = "0x1AD8890", VA = "0x1AD8890")]
	public void TempTurnDownVolume()
	{
	}

	[Token(Token = "0x600005F")]
	[Address(RVA = "0x1AD88BC", Offset = "0x1AD88BC", VA = "0x1AD88BC")]
	public void RestoreVolume()
	{
	}

	[Token(Token = "0x6000060")]
	[Address(RVA = "0x1AD88E0", Offset = "0x1AD88E0", VA = "0x1AD88E0")]
	public void musicVolumeDown()
	{
	}

	[Token(Token = "0x6000061")]
	[Address(RVA = "0x1AD89A4", Offset = "0x1AD89A4", VA = "0x1AD89A4")]
	public void musicVolumeUp()
	{
	}

	[Token(Token = "0x6000062")]
	[Address(RVA = "0x1AD8A70", Offset = "0x1AD8A70", VA = "0x1AD8A70")]
	public void FadeOutTheMusice()
	{
	}

	[Token(Token = "0x6000063")]
	[Address(RVA = "0x1AD8AAC", Offset = "0x1AD8AAC", VA = "0x1AD8AAC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8DD344", Offset = "0x8DD344")]
	public IEnumerator FadeOutMusic(float FadeTime)
	{
		return null;
	}

	[Token(Token = "0x6000064")]
	[Address(RVA = "0x1AD8B34", Offset = "0x1AD8B34", VA = "0x1AD8B34")]
	public ArcadeMusicManager()
	{
	}
}
[Token(Token = "0x2000014")]
public class ArcadeSceneLoader : MonoBehaviour
{
	[Token(Token = "0x600006B")]
	[Address(RVA = "0x1AD8B3C", Offset = "0x1AD8B3C", VA = "0x1AD8B3C")]
	private void Start()
	{
	}

	[Token(Token = "0x600006C")]
	[Address(RVA = "0x1AD8C24", Offset = "0x1AD8C24", VA = "0x1AD8C24")]
	public ArcadeSceneLoader()
	{
	}
}
[Token(Token = "0x2000015")]
public class ArcadeSoundSystem : MonoBehaviour
{
	[Token(Token = "0x4000063")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioClip gameMusic;

	[Token(Token = "0x4000064")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioClip clipExplosion;

	[Token(Token = "0x4000065")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioClip clipCollect1;

	[Token(Token = "0x4000066")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AudioClip clipCollect2;

	[Token(Token = "0x4000067")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AudioClip clipDeath;

	[Token(Token = "0x4000068")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AudioClip clipStart;

	[Token(Token = "0x4000069")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AudioClip clipBeatHighScore;

	[Token(Token = "0x400006A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AudioSource audioAmb;

	[Token(Token = "0x400006B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public AudioSource audioExplosion;

	[Token(Token = "0x400006C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public AudioSource audioDeath;

	[Token(Token = "0x400006D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public AudioSource audioStart;

	[Token(Token = "0x400006E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public AudioSource audioBeatHighScore;

	[Token(Token = "0x400006F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public AudioSource audioCollect1;

	[Token(Token = "0x4000070")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public AudioSource audioCollect2;

	[Token(Token = "0x600006D")]
	[Address(RVA = "0x1AD8C2C", Offset = "0x1AD8C2C", VA = "0x1AD8C2C")]
	public AudioSource AddAudio(AudioClip clip, bool loop, bool playAwake, float vol, bool spatialize, float spatialBlend)
	{
		return null;
	}

	[Token(Token = "0x600006E")]
	[Address(RVA = "0x1AD8D44", Offset = "0x1AD8D44", VA = "0x1AD8D44")]
	private void Awake()
	{
	}

	[Token(Token = "0x600006F")]
	[Address(RVA = "0x1AD8EC0", Offset = "0x1AD8EC0", VA = "0x1AD8EC0")]
	public ArcadeSoundSystem()
	{
	}
}
[Token(Token = "0x2000016")]
public class Fan_Rotation : MonoBehaviour
{
	[Token(Token = "0x4000071")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float speed;

	[Token(Token = "0x6000070")]
	[Address(RVA = "0x1093C4C", Offset = "0x1093C4C", VA = "0x1093C4C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000071")]
	[Address(RVA = "0x1093CA4", Offset = "0x1093CA4", VA = "0x1093CA4")]
	public Fan_Rotation()
	{
	}
}
[Token(Token = "0x2000017")]
public class FreeflightCamera : MonoBehaviour
{
	[Token(Token = "0x4000072")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float speedNormal;

	[Token(Token = "0x4000073")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float speedFast;

	[Token(Token = "0x4000074")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float mouseSensitivityX;

	[Token(Token = "0x4000075")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float mouseSensitivityY;

	[Token(Token = "0x4000076")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float rotY;

	[Token(Token = "0x6000072")]
	[Address(RVA = "0x10971E8", Offset = "0x10971E8", VA = "0x10971E8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000073")]
	[Address(RVA = "0x10972B0", Offset = "0x10972B0", VA = "0x10972B0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000074")]
	[Address(RVA = "0x10975B4", Offset = "0x10975B4", VA = "0x10975B4")]
	public FreeflightCamera()
	{
	}
}
[Token(Token = "0x2000018")]
public class Playsound : MonoBehaviour
{
	[Token(Token = "0x6000075")]
	[Address(RVA = "0x10593E4", Offset = "0x10593E4", VA = "0x10593E4")]
	public void Clicky()
	{
	}

	[Token(Token = "0x6000076")]
	[Address(RVA = "0x1059440", Offset = "0x1059440", VA = "0x1059440")]
	public Playsound()
	{
	}
}
[Token(Token = "0x2000019")]
public class rotatecamera : MonoBehaviour
{
	[Token(Token = "0x6000077")]
	[Address(RVA = "0x1047A00", Offset = "0x1047A00", VA = "0x1047A00")]
	private void Start()
	{
	}

	[Token(Token = "0x6000078")]
	[Address(RVA = "0x1047A04", Offset = "0x1047A04", VA = "0x1047A04")]
	private void Update()
	{
	}

	[Token(Token = "0x6000079")]
	[Address(RVA = "0x1047A54", Offset = "0x1047A54", VA = "0x1047A54")]
	public rotatecamera()
	{
	}
}
[Token(Token = "0x200001A")]
public class AttachToDrawer : MonoBehaviour
{
	[Token(Token = "0x4000077")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool parentedToHand;

	[Token(Token = "0x4000078")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool parentedToDrawer;

	[Token(Token = "0x4000079")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool parentedToDrawer2;

	[Token(Token = "0x400007A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject objectToParent2;

	[Token(Token = "0x400007B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject objectToParent;

	[Token(Token = "0x400007C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool newObjectToCheck;

	[Token(Token = "0x400007D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject parentObject;

	[Token(Token = "0x400007E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject[] puzzlePieces;

	[Token(Token = "0x400007F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int[] pieceNumbers;

	[Token(Token = "0x4000080")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool hasPieces;

	[Token(Token = "0x600007A")]
	[Address(RVA = "0x1AD9004", Offset = "0x1AD9004", VA = "0x1AD9004")]
	private void Start()
	{
	}

	[Token(Token = "0x600007B")]
	[Address(RVA = "0x1AD900C", Offset = "0x1AD900C", VA = "0x1AD900C")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600007C")]
	[Address(RVA = "0x1AD9094", Offset = "0x1AD9094", VA = "0x1AD9094")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x600007D")]
	[Address(RVA = "0x1AD9588", Offset = "0x1AD9588", VA = "0x1AD9588")]
	private void OnTriggerStay(Collider other)
	{
	}

	[Token(Token = "0x600007E")]
	[Address(RVA = "0x1AD92E0", Offset = "0x1AD92E0", VA = "0x1AD92E0")]
	public static GameObject FindParentWithScript(GameObject childObject)
	{
		return null;
	}

	[Token(Token = "0x600007F")]
	[Address(RVA = "0x1AD91C4", Offset = "0x1AD91C4", VA = "0x1AD91C4")]
	public static bool FindParentIsDrawer(GameObject childObject)
	{
		return default(bool);
	}

	[Token(Token = "0x6000080")]
	[Address(RVA = "0x1AD96F4", Offset = "0x1AD96F4", VA = "0x1AD96F4")]
	public static bool FindParentIsHand(GameObject childObject)
	{
		return default(bool);
	}

	[Token(Token = "0x6000081")]
	[Address(RVA = "0x1AD9860", Offset = "0x1AD9860", VA = "0x1AD9860")]
	public AttachToDrawer()
	{
	}
}
[Token(Token = "0x200001B")]
public class AudioAdjuster : MonoBehaviour
{
	[Token(Token = "0x4000081")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioSource[] sources;

	[Token(Token = "0x4000082")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float audioMultiplier;

	[Token(Token = "0x4000083")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioMixerGroup phoneMixer;

	[Token(Token = "0x4000084")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AudioMixerGroup keyboardMixer;

	[Token(Token = "0x4000085")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool keyboardFix;

	[Token(Token = "0x6000082")]
	[Address(RVA = "0x1AD9868", Offset = "0x1AD9868", VA = "0x1AD9868")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000083")]
	[Address(RVA = "0x1AD986C", Offset = "0x1AD986C", VA = "0x1AD986C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000084")]
	[Address(RVA = "0x1AD9A18", Offset = "0x1AD9A18", VA = "0x1AD9A18")]
	private void Update()
	{
	}

	[Token(Token = "0x6000085")]
	[Address(RVA = "0x1AD9A1C", Offset = "0x1AD9A1C", VA = "0x1AD9A1C")]
	public AudioAdjuster()
	{
	}
}
[Token(Token = "0x200001C")]
public class BBallBehavior : MonoBehaviour
{
	[Token(Token = "0x4000086")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject bballManager;

	[Token(Token = "0x4000087")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int ballNumber;

	[Token(Token = "0x4000088")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool spawnOnce;

	[Token(Token = "0x4000089")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioSource source;

	[Token(Token = "0x400008A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool canScore;

	[Token(Token = "0x6000086")]
	[Address(RVA = "0x1AE1224", Offset = "0x1AE1224", VA = "0x1AE1224")]
	private void Start()
	{
	}

	[Token(Token = "0x6000087")]
	[Address(RVA = "0x1AE12B0", Offset = "0x1AE12B0", VA = "0x1AE12B0")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000088")]
	[Address(RVA = "0x1AE1320", Offset = "0x1AE1320", VA = "0x1AE1320")]
	private void Update()
	{
	}

	[Token(Token = "0x6000089")]
	[Address(RVA = "0x1AE1324", Offset = "0x1AE1324", VA = "0x1AE1324")]
	public BBallBehavior()
	{
	}
}
[Token(Token = "0x200001D")]
public class BBallManager : MonoBehaviour
{
	[Token(Token = "0x200001E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D6134", Offset = "0x8D6134")]
	private sealed class <WaitToRespawn>d__33 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40000A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40000A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40000A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BBallManager <>4__this;

		[Token(Token = "0x17000011")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000099")]
			[Address(RVA = "0x10497D8", Offset = "0x10497D8", VA = "0x10497D8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000012")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600009B")]
			[Address(RVA = "0x1049820", Offset = "0x1049820", VA = "0x1049820", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000096")]
		[Address(RVA = "0x10496F0", Offset = "0x10496F0", VA = "0x10496F0")]
		[DebuggerHidden]
		public <WaitToRespawn>d__33(int <>1__state)
		{
		}

		[Token(Token = "0x6000097")]
		[Address(RVA = "0x104971C", Offset = "0x104971C", VA = "0x104971C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000098")]
		[Address(RVA = "0x1049720", Offset = "0x1049720", VA = "0x1049720", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600009A")]
		[Address(RVA = "0x10497E0", Offset = "0x10497E0", VA = "0x10497E0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200001F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D6144", Offset = "0x8D6144")]
	private sealed class <RespawnDart>d__34 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40000A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40000A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40000AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BBallManager <>4__this;

		[Token(Token = "0x40000AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int dartNumber;

		[Token(Token = "0x17000013")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600009F")]
			[Address(RVA = "0x10496A0", Offset = "0x10496A0", VA = "0x10496A0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000014")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60000A1")]
			[Address(RVA = "0x10496E8", Offset = "0x10496E8", VA = "0x10496E8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600009C")]
		[Address(RVA = "0x10493E4", Offset = "0x10493E4", VA = "0x10493E4")]
		[DebuggerHidden]
		public <RespawnDart>d__34(int <>1__state)
		{
		}

		[Token(Token = "0x600009D")]
		[Address(RVA = "0x1049410", Offset = "0x1049410", VA = "0x1049410", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600009E")]
		[Address(RVA = "0x1049414", Offset = "0x1049414", VA = "0x1049414", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60000A0")]
		[Address(RVA = "0x10496A8", Offset = "0x10496A8", VA = "0x10496A8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000020")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D6154", Offset = "0x8D6154")]
	private sealed class <FadeOutMusic>d__35 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40000AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40000AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40000AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioSource music;

		[Token(Token = "0x40000AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float FadeTime;

		[Token(Token = "0x40000B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <startVolume>5__2;

		[Token(Token = "0x17000015")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60000A5")]
			[Address(RVA = "0x1049394", Offset = "0x1049394", VA = "0x1049394", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000016")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60000A7")]
			[Address(RVA = "0x10493DC", Offset = "0x10493DC", VA = "0x10493DC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60000A2")]
		[Address(RVA = "0x104925C", Offset = "0x104925C", VA = "0x104925C")]
		[DebuggerHidden]
		public <FadeOutMusic>d__35(int <>1__state)
		{
		}

		[Token(Token = "0x60000A3")]
		[Address(RVA = "0x1049288", Offset = "0x1049288", VA = "0x1049288", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60000A4")]
		[Address(RVA = "0x104928C", Offset = "0x104928C", VA = "0x104928C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60000A6")]
		[Address(RVA = "0x104939C", Offset = "0x104939C", VA = "0x104939C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000021")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D6164", Offset = "0x8D6164")]
	private sealed class <FadeInMusic>d__36 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40000B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40000B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40000B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioSource music;

		[Token(Token = "0x40000B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float FadeTime;

		[Token(Token = "0x40000B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <startVolume>5__2;

		[Token(Token = "0x17000017")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60000AB")]
			[Address(RVA = "0x104920C", Offset = "0x104920C", VA = "0x104920C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000018")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60000AD")]
			[Address(RVA = "0x1049254", Offset = "0x1049254", VA = "0x1049254", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60000A8")]
		[Address(RVA = "0x10490C0", Offset = "0x10490C0", VA = "0x10490C0")]
		[DebuggerHidden]
		public <FadeInMusic>d__36(int <>1__state)
		{
		}

		[Token(Token = "0x60000A9")]
		[Address(RVA = "0x10490EC", Offset = "0x10490EC", VA = "0x10490EC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60000AA")]
		[Address(RVA = "0x10490F0", Offset = "0x10490F0", VA = "0x10490F0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60000AC")]
		[Address(RVA = "0x1049214", Offset = "0x1049214", VA = "0x1049214", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400008B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int gameScore;

	[Token(Token = "0x400008C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject[] dartPrefabs;

	[Token(Token = "0x400008D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ParticleSystem[] poofParticle;

	[Token(Token = "0x400008E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform[] dartRegenSpot;

	[Token(Token = "0x400008F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool[] dartSpawned;

	[Token(Token = "0x4000090")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Text gameScoreText;

	[Token(Token = "0x4000091")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Text gameHighScoreText;

	[Token(Token = "0x4000092")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Text gameTimeText;

	[Token(Token = "0x4000093")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private GameObject[] cloneOfDart;

	[Token(Token = "0x4000094")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float timeRemaining;

	[Token(Token = "0x4000095")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public bool timerIsRunning;

	[Token(Token = "0x4000096")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Text timeText;

	[Token(Token = "0x4000097")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool canReset;

	[Token(Token = "0x4000098")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public List<GameObject> bballList;

	[Token(Token = "0x4000099")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject dartClone;

	[Token(Token = "0x400009A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public int dartLeftCount;

	[Token(Token = "0x400009B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public GameObject gameStar;

	[Token(Token = "0x400009C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Material gameStarLit;

	[Token(Token = "0x400009D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public AudioSource countDownEnd;

	[Token(Token = "0x400009E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public bool startCountDownSound;

	[Token(Token = "0x400009F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public AudioSource bballMusic;

	[Token(Token = "0x40000A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public ScoreCollider scoreCollider1;

	[Token(Token = "0x40000A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public ScoreCollider scoreCollider2;

	[Token(Token = "0x40000A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public AudioSource backgroundMusic;

	[Token(Token = "0x40000A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public float backgroundMusicVolume;

	[Token(Token = "0x40000A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private Coroutine fadeInThatMusic;

	[Token(Token = "0x600008A")]
	[Address(RVA = "0x1AE132C", Offset = "0x1AE132C", VA = "0x1AE132C")]
	public void CheckToScore()
	{
	}

	[Token(Token = "0x600008B")]
	[Address(RVA = "0x1AE142C", Offset = "0x1AE142C", VA = "0x1AE142C")]
	public void AddScore(int scoreToAdd)
	{
	}

	[Token(Token = "0x600008C")]
	[Address(RVA = "0x1AE1538", Offset = "0x1AE1538", VA = "0x1AE1538")]
	public void MakeNewDarts()
	{
	}

	[Token(Token = "0x600008D")]
	[Address(RVA = "0x1AE167C", Offset = "0x1AE167C", VA = "0x1AE167C")]
	public void ResetDarts()
	{
	}

	[Token(Token = "0x600008E")]
	[Address(RVA = "0x1AE17F8", Offset = "0x1AE17F8", VA = "0x1AE17F8")]
	private void Start()
	{
	}

	[Token(Token = "0x600008F")]
	[Address(RVA = "0x1AE1920", Offset = "0x1AE1920", VA = "0x1AE1920")]
	private void Update()
	{
	}

	[Token(Token = "0x6000090")]
	[Address(RVA = "0x1AE1B40", Offset = "0x1AE1B40", VA = "0x1AE1B40")]
	private void DisplayTime(float timeToDisplay)
	{
	}

	[Token(Token = "0x6000091")]
	[Address(RVA = "0x1AE1780", Offset = "0x1AE1780", VA = "0x1AE1780")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8DD3F4", Offset = "0x8DD3F4")]
	public IEnumerator WaitToRespawn()
	{
		return null;
	}

	[Token(Token = "0x6000092")]
	[Address(RVA = "0x1AE15F4", Offset = "0x1AE15F4", VA = "0x1AE15F4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8DD454", Offset = "0x8DD454")]
	public IEnumerator RespawnDart(int dartNumber)
	{
		return null;
	}

	[Token(Token = "0x6000093")]
	[Address(RVA = "0x1AE1CA4", Offset = "0x1AE1CA4", VA = "0x1AE1CA4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8DD4B4", Offset = "0x8DD4B4")]
	private IEnumerator FadeOutMusic(AudioSource music, float FadeTime)
	{
		return null;
	}

	[Token(Token = "0x6000094")]
	[Address(RVA = "0x1AE1C1C", Offset = "0x1AE1C1C", VA = "0x1AE1C1C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8DD514", Offset = "0x8DD514")]
	private IEnumerator FadeInMusic(AudioSource music, float FadeTime)
	{
		return null;
	}

	[Token(Token = "0x6000095")]
	[Address(RVA = "0x1AE1D2C", Offset = "0x1AE1D2C", VA = "0x1AE1D2C")]
	public BBallManager()
	{
	}
}
[Token(Token = "0x2000022")]
public class BBallStarter : MonoBehaviour
{
	[Token(Token = "0x40000B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public BBallManager bballManager;

	[Token(Token = "0x40000B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Animator buttonPush;

	[Token(Token = "0x40000B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject handTouchingButton;

	[Token(Token = "0x60000AE")]
	[Address(RVA = "0x1AE1D44", Offset = "0x1AE1D44", VA = "0x1AE1D44")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60000AF")]
	[Address(RVA = "0x1AE1ECC", Offset = "0x1AE1ECC", VA = "0x1AE1ECC")]
	public BBallStarter()
	{
	}
}
[Token(Token = "0x2000023")]
public class BallLostTracker : MonoBehaviour
{
	[Token(Token = "0x40000B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool ballOutsideOfStart;

	[Token(Token = "0x40000BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string tagName;

	[Token(Token = "0x60000B0")]
	[Address(RVA = "0x12EF548", Offset = "0x12EF548", VA = "0x12EF548")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x60000B1")]
	[Address(RVA = "0x12EF5EC", Offset = "0x12EF5EC", VA = "0x12EF5EC")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60000B2")]
	[Address(RVA = "0x12EF68C", Offset = "0x12EF68C", VA = "0x12EF68C")]
	public BallLostTracker()
	{
	}
}
[Token(Token = "0x2000024")]
public class BallRollSound : MonoBehaviour
{
	[Token(Token = "0x40000BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioSource ballRolling;

	[Token(Token = "0x40000BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool startSound;

	[Token(Token = "0x40000BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool soundGoing;

	[Token(Token = "0x60000B3")]
	[Address(RVA = "0x12EF694", Offset = "0x12EF694", VA = "0x12EF694")]
	private void OnCollisionStay(Collision collision)
	{
	}

	[Token(Token = "0x60000B4")]
	[Address(RVA = "0x12EF7B4", Offset = "0x12EF7B4", VA = "0x12EF7B4")]
	private void Start()
	{
	}

	[Token(Token = "0x60000B5")]
	[Address(RVA = "0x12EF814", Offset = "0x12EF814", VA = "0x12EF814")]
	private void Update()
	{
	}

	[Token(Token = "0x60000B6")]
	[Address(RVA = "0x12EF818", Offset = "0x12EF818", VA = "0x12EF818")]
	public BallRollSound()
	{
	}
}
[Token(Token = "0x2000025")]
public class BillCollector : MonoBehaviour
{
	[Token(Token = "0x40000BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int billCounter;

	[Token(Token = "0x60000B7")]
	[Address(RVA = "0x12F0054", Offset = "0x12F0054", VA = "0x12F0054")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60000B8")]
	[Address(RVA = "0x12F0140", Offset = "0x12F0140", VA = "0x12F0140")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x60000B9")]
	[Address(RVA = "0x12F01CC", Offset = "0x12F01CC", VA = "0x12F01CC")]
	private void Start()
	{
	}

	[Token(Token = "0x60000BA")]
	[Address(RVA = "0x12F01D0", Offset = "0x12F01D0", VA = "0x12F01D0")]
	public BillCollector()
	{
	}
}
[Token(Token = "0x2000026")]
public class Bomb : MonoBehaviour
{
	[Token(Token = "0x40000BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameManager gameManager;

	[Token(Token = "0x40000C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float thisBombsSpeed;

	[Token(Token = "0x40000C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Animator anim;

	[Token(Token = "0x40000C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject arcadeModel;

	[Token(Token = "0x40000C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ArcadeSoundSystem arcadeSoundSystem;

	[Token(Token = "0x60000BB")]
	[Address(RVA = "0x12F08EC", Offset = "0x12F08EC", VA = "0x12F08EC")]
	private void Start()
	{
	}

	[Token(Token = "0x60000BC")]
	[Address(RVA = "0x12F0A18", Offset = "0x12F0A18", VA = "0x12F0A18")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60000BD")]
	[Address(RVA = "0x12F0C7C", Offset = "0x12F0C7C", VA = "0x12F0C7C")]
	private void OnBang()
	{
	}

	[Token(Token = "0x60000BE")]
	[Address(RVA = "0x12F0C98", Offset = "0x12F0C98", VA = "0x12F0C98")]
	private void Update()
	{
	}

	[Token(Token = "0x60000BF")]
	[Address(RVA = "0x12F0DA4", Offset = "0x12F0DA4", VA = "0x12F0DA4")]
	public Bomb()
	{
	}
}
[Token(Token = "0x2000027")]
public class BottomScript : MonoBehaviour
{
	[Token(Token = "0x2000028")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D6174", Offset = "0x8D6174")]
	private sealed class <ReturnPinball>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40000C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40000C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40000CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BottomScript <>4__this;

		[Token(Token = "0x17000019")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60000C8")]
			[Address(RVA = "0x10499AC", Offset = "0x10499AC", VA = "0x10499AC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700001A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60000CA")]
			[Address(RVA = "0x10499F4", Offset = "0x10499F4", VA = "0x10499F4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60000C5")]
		[Address(RVA = "0x1049828", Offset = "0x1049828", VA = "0x1049828")]
		[DebuggerHidden]
		public <ReturnPinball>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x60000C6")]
		[Address(RVA = "0x1049854", Offset = "0x1049854", VA = "0x1049854", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60000C7")]
		[Address(RVA = "0x1049858", Offset = "0x1049858", VA = "0x1049858", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60000C9")]
		[Address(RVA = "0x10499B4", Offset = "0x10499B4", VA = "0x10499B4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40000C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform endSpot;

	[Token(Token = "0x40000C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject pinBall;

	[Token(Token = "0x40000C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject pinBallPrefab;

	[Token(Token = "0x40000C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public PinballManager pinballManager;

	[Token(Token = "0x60000C0")]
	[Address(RVA = "0x12F1444", Offset = "0x12F1444", VA = "0x12F1444")]
	private void Start()
	{
	}

	[Token(Token = "0x60000C1")]
	[Address(RVA = "0x12F1448", Offset = "0x12F1448", VA = "0x12F1448")]
	private void Update()
	{
	}

	[Token(Token = "0x60000C2")]
	[Address(RVA = "0x12F144C", Offset = "0x12F144C", VA = "0x12F144C")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60000C3")]
	[Address(RVA = "0x12F150C", Offset = "0x12F150C", VA = "0x12F150C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8DD6B4", Offset = "0x8DD6B4")]
	private IEnumerator ReturnPinball(float time)
	{
		return null;
	}

	[Token(Token = "0x60000C4")]
	[Address(RVA = "0x12F1584", Offset = "0x12F1584", VA = "0x12F1584")]
	public BottomScript()
	{
	}
}
[Token(Token = "0x2000029")]
public class Bouncer : MonoBehaviour
{
	[Token(Token = "0x40000CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float bounceStrength;

	[Token(Token = "0x40000CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float actualBounceStrength;

	[Token(Token = "0x40000CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public PinballManager pinballManager;

	[Token(Token = "0x40000CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int scoreAmount;

	[Token(Token = "0x40000CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool hasSound;

	[Token(Token = "0x40000D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AudioSource thisAudioSource;

	[Token(Token = "0x60000CB")]
	[Address(RVA = "0x12F158C", Offset = "0x12F158C", VA = "0x12F158C")]
	private void Start()
	{
	}

	[Token(Token = "0x60000CC")]
	[Address(RVA = "0x12F15E8", Offset = "0x12F15E8", VA = "0x12F15E8")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x60000CD")]
	[Address(RVA = "0x12F173C", Offset = "0x12F173C", VA = "0x12F173C")]
	public Bouncer()
	{
	}
}
[Token(Token = "0x200002A")]
public class BulletBehavior : MonoBehaviour
{
	[Token(Token = "0x200002B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D6184", Offset = "0x8D6184")]
	private sealed class <CheckGooseLose>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40000D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40000D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40000D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BulletBehavior <>4__this;

		[Token(Token = "0x1700001B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60000D6")]
			[Address(RVA = "0x1049B1C", Offset = "0x1049B1C", VA = "0x1049B1C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700001C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60000D8")]
			[Address(RVA = "0x1049B64", Offset = "0x1049B64", VA = "0x1049B64", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60000D3")]
		[Address(RVA = "0x10499FC", Offset = "0x10499FC", VA = "0x10499FC")]
		[DebuggerHidden]
		public <CheckGooseLose>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x60000D4")]
		[Address(RVA = "0x1049A28", Offset = "0x1049A28", VA = "0x1049A28", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60000D5")]
		[Address(RVA = "0x1049A2C", Offset = "0x1049A2C", VA = "0x1049A2C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60000D7")]
		[Address(RVA = "0x1049B24", Offset = "0x1049B24", VA = "0x1049B24", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40000D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject particleBlast;

	[Token(Token = "0x40000D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject bulletMesh;

	[Token(Token = "0x40000D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool enemyBullet;

	[Token(Token = "0x40000D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject gamesManager;

	[Token(Token = "0x40000D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool gooseBullet;

	[Token(Token = "0x40000D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	public bool collideOnce;

	[Token(Token = "0x60000CE")]
	[Address(RVA = "0x12F174C", Offset = "0x12F174C", VA = "0x12F174C")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x60000CF")]
	[Address(RVA = "0x12F1930", Offset = "0x12F1930", VA = "0x12F1930")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8DD764", Offset = "0x8DD764")]
	private IEnumerator CheckGooseLose()
	{
		return null;
	}

	[Token(Token = "0x60000D0")]
	[Address(RVA = "0x12F19A8", Offset = "0x12F19A8", VA = "0x12F19A8")]
	private void Start()
	{
	}

	[Token(Token = "0x60000D1")]
	[Address(RVA = "0x12F1A1C", Offset = "0x12F1A1C", VA = "0x12F1A1C")]
	private void Update()
	{
	}

	[Token(Token = "0x60000D2")]
	[Address(RVA = "0x12F1A20", Offset = "0x12F1A20", VA = "0x12F1A20")]
	public BulletBehavior()
	{
	}
}
[Token(Token = "0x200002C")]
public class CKButtonPress : MonoBehaviour
{
	[Token(Token = "0x200002D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D6194", Offset = "0x8D6194")]
	private sealed class <WaitForSound>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40000DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40000E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40000E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CKButtonPress <>4__this;

		[Token(Token = "0x1700001D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60000E0")]
			[Address(RVA = "0x104A0F0", Offset = "0x104A0F0", VA = "0x104A0F0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700001E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60000E2")]
			[Address(RVA = "0x104A138", Offset = "0x104A138", VA = "0x104A138", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60000DD")]
		[Address(RVA = "0x1049FF8", Offset = "0x1049FF8", VA = "0x1049FF8")]
		[DebuggerHidden]
		public <WaitForSound>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x60000DE")]
		[Address(RVA = "0x104A024", Offset = "0x104A024", VA = "0x104A024", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60000DF")]
		[Address(RVA = "0x104A028", Offset = "0x104A028", VA = "0x104A028", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60000E1")]
		[Address(RVA = "0x104A0F8", Offset = "0x104A0F8", VA = "0x104A0F8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40000DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Animator buttonPush;

	[Token(Token = "0x40000DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject handTouchingButton;

	[Token(Token = "0x40000DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public UnityEvent keyPressed;

	[Token(Token = "0x40000DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool canPress;

	[Token(Token = "0x40000DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float waitTime;

	[Token(Token = "0x60000D9")]
	[Address(RVA = "0x12FA948", Offset = "0x12FA948", VA = "0x12FA948")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60000DA")]
	[Address(RVA = "0x12FAB60", Offset = "0x12FAB60", VA = "0x12FAB60")]
	private void Start()
	{
	}

	[Token(Token = "0x60000DB")]
	[Address(RVA = "0x12FAAE8", Offset = "0x12FAAE8", VA = "0x12FAAE8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8DD814", Offset = "0x8DD814")]
	private IEnumerator WaitForSound()
	{
		return null;
	}

	[Token(Token = "0x60000DC")]
	[Address(RVA = "0x12FABCC", Offset = "0x12FABCC", VA = "0x12FABCC")]
	public CKButtonPress()
	{
	}
}
[Token(Token = "0x200002E")]
public class CKManager : MonoBehaviour
{
	[Token(Token = "0x200002F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D61A4", Offset = "0x8D61A4")]
	private sealed class <WaitStart>d__20 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40000F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40000F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40000F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CKManager <>4__this;

		[Token(Token = "0x1700001F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60000EF")]
			[Address(RVA = "0x104A308", Offset = "0x104A308", VA = "0x104A308", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000020")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60000F1")]
			[Address(RVA = "0x104A350", Offset = "0x104A350", VA = "0x104A350", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60000EC")]
		[Address(RVA = "0x104A140", Offset = "0x104A140", VA = "0x104A140")]
		[DebuggerHidden]
		public <WaitStart>d__20(int <>1__state)
		{
		}

		[Token(Token = "0x60000ED")]
		[Address(RVA = "0x104A16C", Offset = "0x104A16C", VA = "0x104A16C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60000EE")]
		[Address(RVA = "0x104A170", Offset = "0x104A170", VA = "0x104A170", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60000F0")]
		[Address(RVA = "0x104A310", Offset = "0x104A310", VA = "0x104A310", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40000E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool doorOpen;

	[Token(Token = "0x40000E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int codeLength;

	[Token(Token = "0x40000E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string keyPadCode;

	[Token(Token = "0x40000E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string codeEntered;

	[Token(Token = "0x40000E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string tempString;

	[Token(Token = "0x40000E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject blackScreen;

	[Token(Token = "0x40000E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject videoScreen;

	[Token(Token = "0x40000E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject endScreen;

	[Token(Token = "0x40000EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject startScreen;

	[Token(Token = "0x40000EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public MediaPlayer.FileLocation m_videoLocation;

	[Token(Token = "0x40000EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public MediaPlayer mp;

	[Token(Token = "0x40000ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public OpenMachineManager openMachineManager;

	[Token(Token = "0x40000EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public AudioSource gameStatic;

	[Token(Token = "0x40000EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public bool runTest;

	[Token(Token = "0x40000F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
	public bool videoFinished;

	[Token(Token = "0x40000F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public ArcadeMusicManager arcadeMusicManager;

	[Token(Token = "0x60000E3")]
	[Address(RVA = "0x12FABE4", Offset = "0x12FABE4", VA = "0x12FABE4")]
	private void Update()
	{
	}

	[Token(Token = "0x60000E4")]
	[Address(RVA = "0x12FADF4", Offset = "0x12FADF4", VA = "0x12FADF4")]
	private void Start()
	{
	}

	[Token(Token = "0x60000E5")]
	[Address(RVA = "0x12FAEEC", Offset = "0x12FAEEC", VA = "0x12FAEEC")]
	public void activateStartScreen()
	{
	}

	[Token(Token = "0x60000E6")]
	[Address(RVA = "0x12FAF2C", Offset = "0x12FAF2C", VA = "0x12FAF2C")]
	public void checkCodes()
	{
	}

	[Token(Token = "0x60000E7")]
	[Address(RVA = "0x12FB09C", Offset = "0x12FB09C", VA = "0x12FB09C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8DD8C4", Offset = "0x8DD8C4")]
	public IEnumerator WaitStart()
	{
		return null;
	}

	[Token(Token = "0x60000E8")]
	[Address(RVA = "0x12FB114", Offset = "0x12FB114", VA = "0x12FB114")]
	public void onePressed()
	{
	}

	[Token(Token = "0x60000E9")]
	[Address(RVA = "0x12FB208", Offset = "0x12FB208", VA = "0x12FB208")]
	public void twoPressed()
	{
	}

	[Token(Token = "0x60000EA")]
	[Address(RVA = "0x12FB2FC", Offset = "0x12FB2FC", VA = "0x12FB2FC")]
	public void threePressed()
	{
	}

	[Token(Token = "0x60000EB")]
	[Address(RVA = "0x12FB3F0", Offset = "0x12FB3F0", VA = "0x12FB3F0")]
	public CKManager()
	{
	}
}
[Token(Token = "0x2000030")]
public enum CRTScanLinesSizes
{
	[Token(Token = "0x40000F6")]
	S32 = 0x20,
	[Token(Token = "0x40000F7")]
	S64 = 0x40,
	[Token(Token = "0x40000F8")]
	S128 = 0x80,
	[Token(Token = "0x40000F9")]
	S256 = 0x100,
	[Token(Token = "0x40000FA")]
	S512 = 0x200,
	[Token(Token = "0x40000FB")]
	S1024 = 0x400
}
[Token(Token = "0x2000031")]
[ExecuteInEditMode]
public class CRT : MonoBehaviour
{
	[Token(Token = "0x40000FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader curShader;

	[Token(Token = "0x40000FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float Distortion;

	[Token(Token = "0x40000FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float Gamma;

	[Token(Token = "0x40000FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float YExtra;

	[Token(Token = "0x4000100")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float CurvatureSet1;

	[Token(Token = "0x4000101")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float CurvatureSet2;

	[Token(Token = "0x4000102")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float DotWeight;

	[Token(Token = "0x4000103")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public CRTScanLinesSizes scanSize;

	[Token(Token = "0x4000104")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Color rgb1;

	[Token(Token = "0x4000105")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public Color rgb2;

	[Token(Token = "0x4000106")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Material curMaterial;

	[Token(Token = "0x17000021")]
	private Material material
	{
		[Token(Token = "0x60000F2")]
		[Address(RVA = "0x12FB400", Offset = "0x12FB400", VA = "0x12FB400")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60000F3")]
	[Address(RVA = "0x12FB4DC", Offset = "0x12FB4DC", VA = "0x12FB4DC")]
	private void Start()
	{
	}

	[Token(Token = "0x60000F4")]
	[Address(RVA = "0x12FB51C", Offset = "0x12FB51C", VA = "0x12FB51C")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x60000F5")]
	[Address(RVA = "0x12FB8B4", Offset = "0x12FB8B4", VA = "0x12FB8B4")]
	private void Update()
	{
	}

	[Token(Token = "0x60000F6")]
	[Address(RVA = "0x12FB8B8", Offset = "0x12FB8B8", VA = "0x12FB8B8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60000F7")]
	[Address(RVA = "0x12FB964", Offset = "0x12FB964", VA = "0x12FB964")]
	public CRT()
	{
	}
}
[Token(Token = "0x2000032")]
public class ChangeCenterOfMass : MonoBehaviour
{
	[Token(Token = "0x4000107")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 com;

	[Token(Token = "0x4000108")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Rigidbody rb;

	[Token(Token = "0x4000109")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject massObject;

	[Token(Token = "0x60000F8")]
	[Address(RVA = "0x12FC508", Offset = "0x12FC508", VA = "0x12FC508")]
	private void Awake()
	{
	}

	[Token(Token = "0x60000F9")]
	[Address(RVA = "0x12FC564", Offset = "0x12FC564", VA = "0x12FC564")]
	private void Start()
	{
	}

	[Token(Token = "0x60000FA")]
	[Address(RVA = "0x12FC568", Offset = "0x12FC568", VA = "0x12FC568")]
	public void ShiftCenterOfMass()
	{
	}

	[Token(Token = "0x60000FB")]
	[Address(RVA = "0x12FC5B4", Offset = "0x12FC5B4", VA = "0x12FC5B4")]
	public ChangeCenterOfMass()
	{
	}
}
[Token(Token = "0x2000033")]
public class ChangeTime : MonoBehaviour
{
	[Token(Token = "0x2000034")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D61C4", Offset = "0x8D61C4")]
	private sealed class <DoTheFlash>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000111")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000112")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000113")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ChangeTime <>4__this;

		[Token(Token = "0x17000022")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000103")]
			[Address(RVA = "0x104A5F4", Offset = "0x104A5F4", VA = "0x104A5F4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000023")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000105")]
			[Address(RVA = "0x104A63C", Offset = "0x104A63C", VA = "0x104A63C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000100")]
		[Address(RVA = "0x104A358", Offset = "0x104A358", VA = "0x104A358")]
		[DebuggerHidden]
		public <DoTheFlash>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6000101")]
		[Address(RVA = "0x104A384", Offset = "0x104A384", VA = "0x104A384", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000102")]
		[Address(RVA = "0x104A388", Offset = "0x104A388", VA = "0x104A388", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000104")]
		[Address(RVA = "0x104A5FC", Offset = "0x104A5FC", VA = "0x104A5FC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400010A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text hourText;

	[Token(Token = "0x400010B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text minuteText;

	[Token(Token = "0x400010C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool setTime;

	[Token(Token = "0x400010D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string tempString;

	[Token(Token = "0x400010E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string holderString;

	[Token(Token = "0x400010F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int tempInt;

	[Token(Token = "0x4000110")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private DateTime theTime;

	[Token(Token = "0x60000FC")]
	[Address(RVA = "0x12FC728", Offset = "0x12FC728", VA = "0x12FC728")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8DD974", Offset = "0x8DD974")]
	public IEnumerator DoTheFlash()
	{
		return null;
	}

	[Token(Token = "0x60000FD")]
	[Address(RVA = "0x12FC7A0", Offset = "0x12FC7A0", VA = "0x12FC7A0")]
	private void Start()
	{
	}

	[Token(Token = "0x60000FE")]
	[Address(RVA = "0x12FC7CC", Offset = "0x12FC7CC", VA = "0x12FC7CC")]
	private void Update()
	{
	}

	[Token(Token = "0x60000FF")]
	[Address(RVA = "0x12FC7D0", Offset = "0x12FC7D0", VA = "0x12FC7D0")]
	public ChangeTime()
	{
	}
}
[Token(Token = "0x2000035")]
public class CheatDetectionCube : MonoBehaviour
{
	[Token(Token = "0x4000114")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AirHockeyManager airHockeyManager;

	[Token(Token = "0x6000106")]
	[Address(RVA = "0x12FD884", Offset = "0x12FD884", VA = "0x12FD884")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000107")]
	[Address(RVA = "0x12FD914", Offset = "0x12FD914", VA = "0x12FD914")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000108")]
	[Address(RVA = "0x12FD9A0", Offset = "0x12FD9A0", VA = "0x12FD9A0")]
	public CheatDetectionCube()
	{
	}
}
[Token(Token = "0x2000036")]
public class CheckIfGrabbed : MonoBehaviour
{
	[Token(Token = "0x4000115")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool hasBeenGrabbed;

	[Token(Token = "0x4000116")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform pogsSetTransform;

	[Token(Token = "0x6000109")]
	[Address(RVA = "0x12FDA28", Offset = "0x12FDA28", VA = "0x12FDA28")]
	private void Start()
	{
	}

	[Token(Token = "0x600010A")]
	[Address(RVA = "0x12FDB20", Offset = "0x12FDB20", VA = "0x12FDB20")]
	private void Update()
	{
	}

	[Token(Token = "0x600010B")]
	[Address(RVA = "0x12FDC38", Offset = "0x12FDC38", VA = "0x12FDC38")]
	public CheckIfGrabbed()
	{
	}
}
[Token(Token = "0x2000037")]
public class CheckIfPogGrabbed : MonoBehaviour
{
	[Token(Token = "0x4000117")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool hasBeenGrabbed;

	[Token(Token = "0x4000118")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int pogNum;

	[Token(Token = "0x4000119")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform pogsSetTransform;

	[Token(Token = "0x400011A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool atFinalSpot;

	[Token(Token = "0x600010C")]
	[Address(RVA = "0x12FDC40", Offset = "0x12FDC40", VA = "0x12FDC40")]
	private void Start()
	{
	}

	[Token(Token = "0x600010D")]
	[Address(RVA = "0x12FDD44", Offset = "0x12FDD44", VA = "0x12FDD44")]
	private void Update()
	{
	}

	[Token(Token = "0x600010E")]
	[Address(RVA = "0x12FDFB0", Offset = "0x12FDFB0", VA = "0x12FDFB0")]
	public CheckIfPogGrabbed()
	{
	}
}
[Token(Token = "0x2000038")]
public class CheckIfTCGrabbed : MonoBehaviour
{
	[Token(Token = "0x400011B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool hasBeenGrabbed;

	[Token(Token = "0x400011C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int pogNum;

	[Token(Token = "0x400011D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform pogsSetTransform;

	[Token(Token = "0x400011E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool atFinalSpot;

	[Token(Token = "0x600010F")]
	[Address(RVA = "0x12FDFB8", Offset = "0x12FDFB8", VA = "0x12FDFB8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000110")]
	[Address(RVA = "0x12FE0BC", Offset = "0x12FE0BC", VA = "0x12FE0BC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000111")]
	[Address(RVA = "0x12FE24C", Offset = "0x12FE24C", VA = "0x12FE24C")]
	public CheckIfTCGrabbed()
	{
	}
}
[Token(Token = "0x2000039")]
public class CheckPinball : MonoBehaviour
{
	[Token(Token = "0x6000112")]
	[Address(RVA = "0x12FE254", Offset = "0x12FE254", VA = "0x12FE254")]
	private void Start()
	{
	}

	[Token(Token = "0x6000113")]
	[Address(RVA = "0x12FE258", Offset = "0x12FE258", VA = "0x12FE258")]
	private void Update()
	{
	}

	[Token(Token = "0x6000114")]
	[Address(RVA = "0x12FE25C", Offset = "0x12FE25C", VA = "0x12FE25C")]
	public CheckPinball()
	{
	}
}
[Token(Token = "0x200003A")]
public class CheckThatCollision : MonoBehaviour
{
	[Token(Token = "0x6000115")]
	[Address(RVA = "0x12FE264", Offset = "0x12FE264", VA = "0x12FE264")]
	private void OnCollisionStay(Collision collisionInfo)
	{
	}

	[Token(Token = "0x6000116")]
	[Address(RVA = "0x12FE268", Offset = "0x12FE268", VA = "0x12FE268")]
	private void OnTriggerStay(Collider other)
	{
	}

	[Token(Token = "0x6000117")]
	[Address(RVA = "0x12FE26C", Offset = "0x12FE26C", VA = "0x12FE26C")]
	public CheckThatCollision()
	{
	}
}
[Token(Token = "0x200003B")]
public class ClawButtonPush : MonoBehaviour
{
	[Token(Token = "0x200003C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D61D4", Offset = "0x8D61D4")]
	private sealed class <WaitForRemove>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000123")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000124")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000125")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ClawButtonPush <>4__this;

		[Token(Token = "0x17000024")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000120")]
			[Address(RVA = "0x104AE44", Offset = "0x104AE44", VA = "0x104AE44", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000025")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000122")]
			[Address(RVA = "0x104AE8C", Offset = "0x104AE8C", VA = "0x104AE8C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600011D")]
		[Address(RVA = "0x104AD3C", Offset = "0x104AD3C", VA = "0x104AD3C")]
		[DebuggerHidden]
		public <WaitForRemove>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x600011E")]
		[Address(RVA = "0x104AD68", Offset = "0x104AD68", VA = "0x104AD68", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600011F")]
		[Address(RVA = "0x104AD6C", Offset = "0x104AD6C", VA = "0x104AD6C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000121")]
		[Address(RVA = "0x104AE4C", Offset = "0x104AE4C", VA = "0x104AE4C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400011F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Animator buttonPush;

	[Token(Token = "0x4000120")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ClawMachineManager clawMachineManager;

	[Token(Token = "0x4000121")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject handUsed;

	[Token(Token = "0x4000122")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Coroutine waitForFingerRemove;

	[Token(Token = "0x6000118")]
	[Address(RVA = "0x12FE274", Offset = "0x12FE274", VA = "0x12FE274")]
	private void Start()
	{
	}

	[Token(Token = "0x6000119")]
	[Address(RVA = "0x12FE278", Offset = "0x12FE278", VA = "0x12FE278")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600011A")]
	[Address(RVA = "0x12FE3B8", Offset = "0x12FE3B8", VA = "0x12FE3B8")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x600011B")]
	[Address(RVA = "0x12FE4A8", Offset = "0x12FE4A8", VA = "0x12FE4A8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8DDA24", Offset = "0x8DDA24")]
	private IEnumerator WaitForRemove()
	{
		return null;
	}

	[Token(Token = "0x600011C")]
	[Address(RVA = "0x12FE520", Offset = "0x12FE520", VA = "0x12FE520")]
	public ClawButtonPush()
	{
	}
}
[Token(Token = "0x200003D")]
public class ClawCollision : MonoBehaviour
{
	[Token(Token = "0x4000126")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ClawMachineManager clawMachineManager;

	[Token(Token = "0x6000123")]
	[Address(RVA = "0x12FE528", Offset = "0x12FE528", VA = "0x12FE528")]
	private void Start()
	{
	}

	[Token(Token = "0x6000124")]
	[Address(RVA = "0x12FE52C", Offset = "0x12FE52C", VA = "0x12FE52C")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000125")]
	[Address(RVA = "0x12FE658", Offset = "0x12FE658", VA = "0x12FE658")]
	public ClawCollision()
	{
	}
}
[Token(Token = "0x200003E")]
public class ClawMachineManager : MonoBehaviour
{
	[Token(Token = "0x200003F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D61E4", Offset = "0x8D61E4")]
	private sealed class <CloseClaw>d__42 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400014E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400014F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000150")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ClawMachineManager <>4__this;

		[Token(Token = "0x4000151")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float waitTime;

		[Token(Token = "0x17000026")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000134")]
			[Address(RVA = "0x104AFE8", Offset = "0x104AFE8", VA = "0x104AFE8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000027")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000136")]
			[Address(RVA = "0x104B030", Offset = "0x104B030", VA = "0x104B030", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000131")]
		[Address(RVA = "0x104AE94", Offset = "0x104AE94", VA = "0x104AE94")]
		[DebuggerHidden]
		public <CloseClaw>d__42(int <>1__state)
		{
		}

		[Token(Token = "0x6000132")]
		[Address(RVA = "0x104AEC0", Offset = "0x104AEC0", VA = "0x104AEC0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000133")]
		[Address(RVA = "0x104AEC4", Offset = "0x104AEC4", VA = "0x104AEC4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000135")]
		[Address(RVA = "0x104AFF0", Offset = "0x104AFF0", VA = "0x104AFF0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000040")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D61F4", Offset = "0x8D61F4")]
	private sealed class <GlassHitClaw>d__44 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000152")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000153")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000154")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ClawMachineManager <>4__this;

		[Token(Token = "0x17000028")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600013A")]
			[Address(RVA = "0x104B120", Offset = "0x104B120", VA = "0x104B120", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000029")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600013C")]
			[Address(RVA = "0x104B168", Offset = "0x104B168", VA = "0x104B168", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000137")]
		[Address(RVA = "0x104B038", Offset = "0x104B038", VA = "0x104B038")]
		[DebuggerHidden]
		public <GlassHitClaw>d__44(int <>1__state)
		{
		}

		[Token(Token = "0x6000138")]
		[Address(RVA = "0x104B064", Offset = "0x104B064", VA = "0x104B064", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000139")]
		[Address(RVA = "0x104B068", Offset = "0x104B068", VA = "0x104B068", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600013B")]
		[Address(RVA = "0x104B128", Offset = "0x104B128", VA = "0x104B128", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000041")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D6204", Offset = "0x8D6204")]
	private sealed class <OpenClawInBasket>d__45 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000155")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000156")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000157")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float waitTime;

		[Token(Token = "0x4000158")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ClawMachineManager <>4__this;

		[Token(Token = "0x1700002A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000140")]
			[Address(RVA = "0x104B498", Offset = "0x104B498", VA = "0x104B498", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700002B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000142")]
			[Address(RVA = "0x104B4E0", Offset = "0x104B4E0", VA = "0x104B4E0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600013D")]
		[Address(RVA = "0x104B170", Offset = "0x104B170", VA = "0x104B170")]
		[DebuggerHidden]
		public <OpenClawInBasket>d__45(int <>1__state)
		{
		}

		[Token(Token = "0x600013E")]
		[Address(RVA = "0x104B19C", Offset = "0x104B19C", VA = "0x104B19C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600013F")]
		[Address(RVA = "0x104B1A0", Offset = "0x104B1A0", VA = "0x104B1A0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000141")]
		[Address(RVA = "0x104B4A0", Offset = "0x104B4A0", VA = "0x104B4A0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000127")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject lrMotor;

	[Token(Token = "0x4000128")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject fbMotor;

	[Token(Token = "0x4000129")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool canBeControled;

	[Token(Token = "0x400012A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool dropPrize;

	[Token(Token = "0x400012B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool[] arrivedInTheBasket;

	[Token(Token = "0x400012C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool insideTheBasket;

	[Token(Token = "0x400012D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	public bool hitGlass;

	[Token(Token = "0x400012E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform leftLimit;

	[Token(Token = "0x400012F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform rightLimit;

	[Token(Token = "0x4000130")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform frontLimit;

	[Token(Token = "0x4000131")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform backLimit;

	[Token(Token = "0x4000132")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Transform frontBackDropPoint;

	[Token(Token = "0x4000133")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float speed;

	[Token(Token = "0x4000134")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float returnSpeed;

	[Token(Token = "0x4000135")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float speed_Claw;

	[Token(Token = "0x4000136")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Animator animatorClaw;

	[Token(Token = "0x4000137")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Transform hookHeight;

	[Token(Token = "0x4000138")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Transform hookHeightMax;

	[Token(Token = "0x4000139")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Transform hookHeightMin;

	[Token(Token = "0x400013A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public float hookRange;

	[Token(Token = "0x400013B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public bool clawStartsDown;

	[Token(Token = "0x400013C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Transform tubeStretcher;

	[Token(Token = "0x400013D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public float scaleRange;

	[Token(Token = "0x400013E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	public Vector3 scaleChange;

	[Token(Token = "0x400013F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public bool buttonPressed;

	[Token(Token = "0x4000140")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public GameObject joyStick;

	[Token(Token = "0x4000141")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public Text timeText;

	[Token(Token = "0x4000142")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public float timeRemaining;

	[Token(Token = "0x4000143")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	public bool timerIsRunning;

	[Token(Token = "0x4000144")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD5")]
	public bool startCountDownSound;

	[Token(Token = "0x4000145")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD6")]
	public bool timeOutLowerClaw;

	[Token(Token = "0x4000146")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public AudioSource clawMotor;

	[Token(Token = "0x4000147")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public bool clawNoisePlay;

	[Token(Token = "0x4000148")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	public Vector3 oldMotorLRPosition;

	[Token(Token = "0x4000149")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public Vector3 oldMotorFBPosition;

	[Token(Token = "0x400014A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	public int tryCount;

	[Token(Token = "0x400014B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public bool penguinInMachine;

	[Token(Token = "0x400014C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public LockToPoint3 lockToPoint3;

	[Token(Token = "0x400014D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public ParentingSphere parentingSphere;

	[Token(Token = "0x6000126")]
	[Address(RVA = "0x12FE660", Offset = "0x12FE660", VA = "0x12FE660")]
	private void Start()
	{
	}

	[Token(Token = "0x6000127")]
	[Address(RVA = "0x12FE710", Offset = "0x12FE710", VA = "0x12FE710")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000128")]
	[Address(RVA = "0x12FF1FC", Offset = "0x12FF1FC", VA = "0x12FF1FC")]
	private void DisplayTime(float timeToDisplay)
	{
	}

	[Token(Token = "0x6000129")]
	[Address(RVA = "0x12FF174", Offset = "0x12FF174", VA = "0x12FF174")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8DDAD4", Offset = "0x8DDAD4")]
	public IEnumerator CloseClaw(float waitTime)
	{
		return null;
	}

	[Token(Token = "0x600012A")]
	[Address(RVA = "0x12FE62C", Offset = "0x12FE62C", VA = "0x12FE62C")]
	public void GlassHitClawFunc()
	{
	}

	[Token(Token = "0x600012B")]
	[Address(RVA = "0x12FF2D8", Offset = "0x12FF2D8", VA = "0x12FF2D8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8DDB34", Offset = "0x8DDB34")]
	public IEnumerator GlassHitClaw(float waitTime)
	{
		return null;
	}

	[Token(Token = "0x600012C")]
	[Address(RVA = "0x12FEFEC", Offset = "0x12FEFEC", VA = "0x12FEFEC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8DDB94", Offset = "0x8DDB94")]
	private IEnumerator OpenClawInBasket(float waitTime)
	{
		return null;
	}

	[Token(Token = "0x600012D")]
	[Address(RVA = "0x12FF074", Offset = "0x12FF074", VA = "0x12FF074")]
	public void HitGlassReset()
	{
	}

	[Token(Token = "0x600012E")]
	[Address(RVA = "0x12FF350", Offset = "0x12FF350", VA = "0x12FF350")]
	public void OpenClawFunction()
	{
	}

	[Token(Token = "0x600012F")]
	[Address(RVA = "0x12FF3D8", Offset = "0x12FF3D8", VA = "0x12FF3D8")]
	public void CloseClawFunct()
	{
	}

	[Token(Token = "0x6000130")]
	[Address(RVA = "0x12FF460", Offset = "0x12FF460", VA = "0x12FF460")]
	public ClawMachineManager()
	{
	}
}
[Token(Token = "0x2000042")]
public class CollideWithStuffOculus : MonoBehaviour
{
	[Token(Token = "0x2000043")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D6214", Offset = "0x8D6214")]
	private sealed class <fadeOutRoutine>d__15 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000165")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000166")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000167")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CollideWithStuffOculus <>4__this;

		[Token(Token = "0x4000168")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <elapsedTime>5__2;

		[Token(Token = "0x1700002C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600014C")]
			[Address(RVA = "0x104B750", Offset = "0x104B750", VA = "0x104B750", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700002D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600014E")]
			[Address(RVA = "0x104B798", Offset = "0x104B798", VA = "0x104B798", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000149")]
		[Address(RVA = "0x104B644", Offset = "0x104B644", VA = "0x104B644")]
		[DebuggerHidden]
		public <fadeOutRoutine>d__15(int <>1__state)
		{
		}

		[Token(Token = "0x600014A")]
		[Address(RVA = "0x104B670", Offset = "0x104B670", VA = "0x104B670", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600014B")]
		[Address(RVA = "0x104B674", Offset = "0x104B674", VA = "0x104B674", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600014D")]
		[Address(RVA = "0x104B758", Offset = "0x104B758", VA = "0x104B758", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000044")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D6224", Offset = "0x8D6224")]
	private sealed class <fadeInRoutine>d__16 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000169")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400016A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400016B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CollideWithStuffOculus <>4__this;

		[Token(Token = "0x400016C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <elapsedTime>5__2;

		[Token(Token = "0x1700002E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000152")]
			[Address(RVA = "0x104B5F4", Offset = "0x104B5F4", VA = "0x104B5F4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700002F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000154")]
			[Address(RVA = "0x104B63C", Offset = "0x104B63C", VA = "0x104B63C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600014F")]
		[Address(RVA = "0x104B4E8", Offset = "0x104B4E8", VA = "0x104B4E8")]
		[DebuggerHidden]
		public <fadeInRoutine>d__16(int <>1__state)
		{
		}

		[Token(Token = "0x6000150")]
		[Address(RVA = "0x104B514", Offset = "0x104B514", VA = "0x104B514", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000151")]
		[Address(RVA = "0x104B518", Offset = "0x104B518", VA = "0x104B518", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000153")]
		[Address(RVA = "0x104B5FC", Offset = "0x104B5FC", VA = "0x104B5FC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000159")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform hatPlacement;

	[Token(Token = "0x400015A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform hatPlacement2;

	[Token(Token = "0x400015B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject otherParent;

	[Token(Token = "0x400015C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool hatOnHead;

	[Token(Token = "0x400015D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Light flashLighty;

	[Token(Token = "0x400015E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float transitionDuration;

	[Token(Token = "0x400015F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public PVRScreenFade fader;

	[Token(Token = "0x4000160")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AnimationCurve fadeInCurve;

	[Token(Token = "0x4000161")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public AnimationCurve fadeOutCurve;

	[Token(Token = "0x4000162")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Coroutine fadeInStuff;

	[Token(Token = "0x4000163")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Coroutine fadeOutStuff;

	[Token(Token = "0x4000164")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject sceneChange;

	[Token(Token = "0x6000143")]
	[Address(RVA = "0x12FF494", Offset = "0x12FF494", VA = "0x12FF494")]
	private void Start()
	{
	}

	[Token(Token = "0x6000144")]
	[Address(RVA = "0x12FF608", Offset = "0x12FF608", VA = "0x12FF608")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000145")]
	[Address(RVA = "0x12FFCB0", Offset = "0x12FFCB0", VA = "0x12FFCB0")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000146")]
	[Address(RVA = "0x12FF518", Offset = "0x12FF518", VA = "0x12FF518")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8DDCE4", Offset = "0x8DDCE4")]
	protected IEnumerator fadeOutRoutine()
	{
		return null;
	}

	[Token(Token = "0x6000147")]
	[Address(RVA = "0x12FF590", Offset = "0x12FF590", VA = "0x12FF590")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8DDD44", Offset = "0x8DDD44")]
	protected IEnumerator fadeInRoutine()
	{
		return null;
	}

	[Token(Token = "0x6000148")]
	[Address(RVA = "0x12FFDC4", Offset = "0x12FFDC4", VA = "0x12FFDC4")]
	public CollideWithStuffOculus()
	{
	}
}
[Token(Token = "0x2000045")]
public class ComicManager : MonoBehaviour
{
	[Token(Token = "0x2000046")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D6234", Offset = "0x8D6234")]
	private sealed class <LogoRoutineTime>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000175")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000176")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000177")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ComicManager <>4__this;

		[Token(Token = "0x17000030")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600015F")]
			[Address(RVA = "0x104C1B0", Offset = "0x104C1B0", VA = "0x104C1B0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000031")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000161")]
			[Address(RVA = "0x104C1F8", Offset = "0x104C1F8", VA = "0x104C1F8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600015C")]
		[Address(RVA = "0x104BDF0", Offset = "0x104BDF0", VA = "0x104BDF0")]
		[DebuggerHidden]
		public <LogoRoutineTime>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x600015D")]
		[Address(RVA = "0x104BE1C", Offset = "0x104BE1C", VA = "0x104BE1C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600015E")]
		[Address(RVA = "0x104BE20", Offset = "0x104BE20", VA = "0x104BE20", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000160")]
		[Address(RVA = "0x104C1B8", Offset = "0x104C1B8", VA = "0x104C1B8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000047")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D6244", Offset = "0x8D6244")]
	private sealed class <FadeInMusic>d__10 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000178")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000179")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400017A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioSource audioSource;

		[Token(Token = "0x400017B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float FadeTime;

		[Token(Token = "0x400017C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <startVolume>5__2;

		[Token(Token = "0x17000032")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000165")]
			[Address(RVA = "0x104BA20", Offset = "0x104BA20", VA = "0x104BA20", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000033")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000167")]
			[Address(RVA = "0x104BA68", Offset = "0x104BA68", VA = "0x104BA68", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000162")]
		[Address(RVA = "0x104B8E4", Offset = "0x104B8E4", VA = "0x104B8E4")]
		[DebuggerHidden]
		public <FadeInMusic>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x6000163")]
		[Address(RVA = "0x104B910", Offset = "0x104B910", VA = "0x104B910", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000164")]
		[Address(RVA = "0x104B914", Offset = "0x104B914", VA = "0x104B914", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000166")]
		[Address(RVA = "0x104BA28", Offset = "0x104BA28", VA = "0x104BA28", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000048")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D6254", Offset = "0x8D6254")]
	private sealed class <FadeOutMusic>d__11 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400017D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400017E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400017F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioSource audioSource;

		[Token(Token = "0x4000180")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float FadeTime;

		[Token(Token = "0x4000181")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <startVolume>5__2;

		[Token(Token = "0x17000034")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600016B")]
			[Address(RVA = "0x104BBA8", Offset = "0x104BBA8", VA = "0x104BBA8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000035")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600016D")]
			[Address(RVA = "0x104BBF0", Offset = "0x104BBF0", VA = "0x104BBF0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000168")]
		[Address(RVA = "0x104BA70", Offset = "0x104BA70", VA = "0x104BA70")]
		[DebuggerHidden]
		public <FadeOutMusic>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x6000169")]
		[Address(RVA = "0x104BA9C", Offset = "0x104BA9C", VA = "0x104BA9C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600016A")]
		[Address(RVA = "0x104BAA0", Offset = "0x104BAA0", VA = "0x104BAA0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600016C")]
		[Address(RVA = "0x104BBB0", Offset = "0x104BBB0", VA = "0x104BBB0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000049")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D6264", Offset = "0x8D6264")]
	private sealed class <DelayedStart>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000182")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000183")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000184")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ComicManager <>4__this;

		[Token(Token = "0x17000036")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000171")]
			[Address(RVA = "0x104B894", Offset = "0x104B894", VA = "0x104B894", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000037")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000173")]
			[Address(RVA = "0x104B8DC", Offset = "0x104B8DC", VA = "0x104B8DC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600016E")]
		[Address(RVA = "0x104B7A0", Offset = "0x104B7A0", VA = "0x104B7A0")]
		[DebuggerHidden]
		public <DelayedStart>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x600016F")]
		[Address(RVA = "0x104B7CC", Offset = "0x104B7CC", VA = "0x104B7CC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000170")]
		[Address(RVA = "0x104B7D0", Offset = "0x104B7D0", VA = "0x104B7D0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000172")]
		[Address(RVA = "0x104B89C", Offset = "0x104B89C", VA = "0x104B89C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200004A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D6274", Offset = "0x8D6274")]
	private sealed class <FadeToSprites>d__13 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000185")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000186")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000187")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject gameOb;

		[Token(Token = "0x4000188")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float aValue;

		[Token(Token = "0x4000189")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float aTime;

		[Token(Token = "0x400018A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <alpha>5__2;

		[Token(Token = "0x400018B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <t>5__3;

		[Token(Token = "0x17000038")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000177")]
			[Address(RVA = "0x104BDA0", Offset = "0x104BDA0", VA = "0x104BDA0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000039")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000179")]
			[Address(RVA = "0x104BDE8", Offset = "0x104BDE8", VA = "0x104BDE8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000174")]
		[Address(RVA = "0x104BBF8", Offset = "0x104BBF8", VA = "0x104BBF8")]
		[DebuggerHidden]
		public <FadeToSprites>d__13(int <>1__state)
		{
		}

		[Token(Token = "0x6000175")]
		[Address(RVA = "0x104BC24", Offset = "0x104BC24", VA = "0x104BC24", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000176")]
		[Address(RVA = "0x104BC28", Offset = "0x104BC28", VA = "0x104BC28", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000178")]
		[Address(RVA = "0x104BDA8", Offset = "0x104BDA8", VA = "0x104BDA8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400016D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioSource[] lunaSound;

	[Token(Token = "0x400016E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject[] lunaSprite;

	[Token(Token = "0x400016F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float[] soundDelayTime;

	[Token(Token = "0x4000170")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject sceneChange;

	[Token(Token = "0x4000171")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int spriteTracker;

	[Token(Token = "0x4000172")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AudioSource backgroundMusic;

	[Token(Token = "0x4000173")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool endComic;

	[Token(Token = "0x4000174")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	public bool noSound;

	[Token(Token = "0x6000155")]
	[Address(RVA = "0x13005F4", Offset = "0x13005F4", VA = "0x13005F4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000156")]
	[Address(RVA = "0x1300824", Offset = "0x1300824", VA = "0x1300824")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8DDE44", Offset = "0x8DDE44")]
	private IEnumerator LogoRoutineTime()
	{
		return null;
	}

	[Token(Token = "0x6000157")]
	[Address(RVA = "0x1300724", Offset = "0x1300724", VA = "0x1300724")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8DDEA4", Offset = "0x8DDEA4")]
	private IEnumerator FadeInMusic(AudioSource audioSource, float FadeTime)
	{
		return null;
	}

	[Token(Token = "0x6000158")]
	[Address(RVA = "0x130089C", Offset = "0x130089C", VA = "0x130089C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8DDF04", Offset = "0x8DDF04")]
	private IEnumerator FadeOutMusic(AudioSource audioSource, float FadeTime)
	{
		return null;
	}

	[Token(Token = "0x6000159")]
	[Address(RVA = "0x13007AC", Offset = "0x13007AC", VA = "0x13007AC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8DDF64", Offset = "0x8DDF64")]
	private IEnumerator DelayedStart()
	{
		return null;
	}

	[Token(Token = "0x600015A")]
	[Address(RVA = "0x1300924", Offset = "0x1300924", VA = "0x1300924")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8DDFC4", Offset = "0x8DDFC4")]
	private IEnumerator FadeToSprites(GameObject gameOb, float aValue, float aTime)
	{
		return null;
	}

	[Token(Token = "0x600015B")]
	[Address(RVA = "0x13009B0", Offset = "0x13009B0", VA = "0x13009B0")]
	public ComicManager()
	{
	}
}
[Token(Token = "0x200004B")]
public class CompKeyboardButtonPress : MonoBehaviour
{
	[Token(Token = "0x400018C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UnityEvent buttonPressed;

	[Token(Token = "0x400018D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public CompKeyboardManager compKeyboardManager;

	[Token(Token = "0x600017A")]
	[Address(RVA = "0x13009B8", Offset = "0x13009B8", VA = "0x13009B8")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600017B")]
	[Address(RVA = "0x1300A9C", Offset = "0x1300A9C", VA = "0x1300A9C")]
	private void Start()
	{
	}

	[Token(Token = "0x600017C")]
	[Address(RVA = "0x1300AA0", Offset = "0x1300AA0", VA = "0x1300AA0")]
	private void Update()
	{
	}

	[Token(Token = "0x600017D")]
	[Address(RVA = "0x1300AA4", Offset = "0x1300AA4", VA = "0x1300AA4")]
	public CompKeyboardButtonPress()
	{
	}
}
[Token(Token = "0x200004C")]
public class CompKeyboardManager : MonoBehaviour
{
	[Token(Token = "0x400018E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool canPressButton;

	[Token(Token = "0x400018F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject handTouchingButton;

	[Token(Token = "0x4000190")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text passordText;

	[Token(Token = "0x4000191")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AudioSource computerSpeaker;

	[Token(Token = "0x4000192")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AudioClip keyType;

	[Token(Token = "0x4000193")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string computerPassword;

	[Token(Token = "0x4000194")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject passwordScreen;

	[Token(Token = "0x4000195")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject mainMenuScreen;

	[Token(Token = "0x4000196")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject picture1;

	[Token(Token = "0x4000197")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject picture2;

	[Token(Token = "0x4000198")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject picture3;

	[Token(Token = "0x4000199")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject picture4;

	[Token(Token = "0x400019A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject menuButtons;

	[Token(Token = "0x400019B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject note1;

	[Token(Token = "0x400019C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GameObject note2;

	[Token(Token = "0x400019D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public GameObject note3;

	[Token(Token = "0x400019E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public GameObject note4;

	[Token(Token = "0x400019F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public GameObject note5;

	[Token(Token = "0x40001A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public GameObject note6;

	[Token(Token = "0x40001A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public GameObject note7;

	[Token(Token = "0x40001A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public GameObject trash;

	[Token(Token = "0x40001A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public GameObject folder1;

	[Token(Token = "0x40001A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public GameObject folder2;

	[Token(Token = "0x40001A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public GameObject topSecret;

	[Token(Token = "0x40001A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public string activeWindow;

	[Token(Token = "0x600017E")]
	[Address(RVA = "0x1300AAC", Offset = "0x1300AAC", VA = "0x1300AAC")]
	public void buttonPressed(string letterNum)
	{
	}

	[Token(Token = "0x600017F")]
	[Address(RVA = "0x1300BDC", Offset = "0x1300BDC", VA = "0x1300BDC")]
	public void APressed()
	{
	}

	[Token(Token = "0x6000180")]
	[Address(RVA = "0x1300C28", Offset = "0x1300C28", VA = "0x1300C28")]
	public void BPressed()
	{
	}

	[Token(Token = "0x6000181")]
	[Address(RVA = "0x1300C74", Offset = "0x1300C74", VA = "0x1300C74")]
	public void CPressed()
	{
	}

	[Token(Token = "0x6000182")]
	[Address(RVA = "0x1300CC0", Offset = "0x1300CC0", VA = "0x1300CC0")]
	public void DPressed()
	{
	}

	[Token(Token = "0x6000183")]
	[Address(RVA = "0x1300D0C", Offset = "0x1300D0C", VA = "0x1300D0C")]
	public void EPressed()
	{
	}

	[Token(Token = "0x6000184")]
	[Address(RVA = "0x1300D58", Offset = "0x1300D58", VA = "0x1300D58")]
	public void FPressed()
	{
	}

	[Token(Token = "0x6000185")]
	[Address(RVA = "0x1300DA4", Offset = "0x1300DA4", VA = "0x1300DA4")]
	public void GPressed()
	{
	}

	[Token(Token = "0x6000186")]
	[Address(RVA = "0x1300DF0", Offset = "0x1300DF0", VA = "0x1300DF0")]
	public void HPressed()
	{
	}

	[Token(Token = "0x6000187")]
	[Address(RVA = "0x1300E3C", Offset = "0x1300E3C", VA = "0x1300E3C")]
	public void IPressed()
	{
	}

	[Token(Token = "0x6000188")]
	[Address(RVA = "0x1300E88", Offset = "0x1300E88", VA = "0x1300E88")]
	public void JPressed()
	{
	}

	[Token(Token = "0x6000189")]
	[Address(RVA = "0x1300ED4", Offset = "0x1300ED4", VA = "0x1300ED4")]
	public void KPressed()
	{
	}

	[Token(Token = "0x600018A")]
	[Address(RVA = "0x1300F20", Offset = "0x1300F20", VA = "0x1300F20")]
	public void LPressed()
	{
	}

	[Token(Token = "0x600018B")]
	[Address(RVA = "0x1300F6C", Offset = "0x1300F6C", VA = "0x1300F6C")]
	public void MPressed()
	{
	}

	[Token(Token = "0x600018C")]
	[Address(RVA = "0x1300FB8", Offset = "0x1300FB8", VA = "0x1300FB8")]
	public void NPressed()
	{
	}

	[Token(Token = "0x600018D")]
	[Address(RVA = "0x1301004", Offset = "0x1301004", VA = "0x1301004")]
	public void OPressed()
	{
	}

	[Token(Token = "0x600018E")]
	[Address(RVA = "0x1301050", Offset = "0x1301050", VA = "0x1301050")]
	public void PPressed()
	{
	}

	[Token(Token = "0x600018F")]
	[Address(RVA = "0x130109C", Offset = "0x130109C", VA = "0x130109C")]
	public void QPressed()
	{
	}

	[Token(Token = "0x6000190")]
	[Address(RVA = "0x13010E8", Offset = "0x13010E8", VA = "0x13010E8")]
	public void RPressed()
	{
	}

	[Token(Token = "0x6000191")]
	[Address(RVA = "0x1301134", Offset = "0x1301134", VA = "0x1301134")]
	public void SPressed()
	{
	}

	[Token(Token = "0x6000192")]
	[Address(RVA = "0x1301180", Offset = "0x1301180", VA = "0x1301180")]
	public void TPressed()
	{
	}

	[Token(Token = "0x6000193")]
	[Address(RVA = "0x13011CC", Offset = "0x13011CC", VA = "0x13011CC")]
	public void UPressed()
	{
	}

	[Token(Token = "0x6000194")]
	[Address(RVA = "0x1301218", Offset = "0x1301218", VA = "0x1301218")]
	public void VPressed()
	{
	}

	[Token(Token = "0x6000195")]
	[Address(RVA = "0x1301264", Offset = "0x1301264", VA = "0x1301264")]
	public void WPressed()
	{
	}

	[Token(Token = "0x6000196")]
	[Address(RVA = "0x13012B0", Offset = "0x13012B0", VA = "0x13012B0")]
	public void XPressed()
	{
	}

	[Token(Token = "0x6000197")]
	[Address(RVA = "0x13012FC", Offset = "0x13012FC", VA = "0x13012FC")]
	public void YPressed()
	{
	}

	[Token(Token = "0x6000198")]
	[Address(RVA = "0x1301348", Offset = "0x1301348", VA = "0x1301348")]
	public void ZPressed()
	{
	}

	[Token(Token = "0x6000199")]
	[Address(RVA = "0x1301394", Offset = "0x1301394", VA = "0x1301394")]
	public void ZeroPressed()
	{
	}

	[Token(Token = "0x600019A")]
	[Address(RVA = "0x13013E0", Offset = "0x13013E0", VA = "0x13013E0")]
	public void OnePressed()
	{
	}

	[Token(Token = "0x600019B")]
	[Address(RVA = "0x130142C", Offset = "0x130142C", VA = "0x130142C")]
	public void TwoPressed()
	{
	}

	[Token(Token = "0x600019C")]
	[Address(RVA = "0x1301478", Offset = "0x1301478", VA = "0x1301478")]
	public void ThreePressed()
	{
	}

	[Token(Token = "0x600019D")]
	[Address(RVA = "0x13014C4", Offset = "0x13014C4", VA = "0x13014C4")]
	public void FourPressed()
	{
	}

	[Token(Token = "0x600019E")]
	[Address(RVA = "0x1301510", Offset = "0x1301510", VA = "0x1301510")]
	public void FivePressed()
	{
	}

	[Token(Token = "0x600019F")]
	[Address(RVA = "0x130155C", Offset = "0x130155C", VA = "0x130155C")]
	public void SixPressed()
	{
	}

	[Token(Token = "0x60001A0")]
	[Address(RVA = "0x13015A8", Offset = "0x13015A8", VA = "0x13015A8")]
	public void SevenPressed()
	{
	}

	[Token(Token = "0x60001A1")]
	[Address(RVA = "0x13015F4", Offset = "0x13015F4", VA = "0x13015F4")]
	public void EightPressed()
	{
	}

	[Token(Token = "0x60001A2")]
	[Address(RVA = "0x1301640", Offset = "0x1301640", VA = "0x1301640")]
	public void NinePressed()
	{
	}

	[Token(Token = "0x60001A3")]
	[Address(RVA = "0x130168C", Offset = "0x130168C", VA = "0x130168C")]
	public void SpacePressed()
	{
	}

	[Token(Token = "0x60001A4")]
	[Address(RVA = "0x13016D8", Offset = "0x13016D8", VA = "0x13016D8")]
	public void BackspacePressed()
	{
	}

	[Token(Token = "0x60001A5")]
	[Address(RVA = "0x1301838", Offset = "0x1301838", VA = "0x1301838")]
	public void ReturnPressed()
	{
	}

	[Token(Token = "0x60001A6")]
	[Address(RVA = "0x1301920", Offset = "0x1301920", VA = "0x1301920")]
	public void CheckPassord()
	{
	}

	[Token(Token = "0x60001A7")]
	[Address(RVA = "0x1301AA8", Offset = "0x1301AA8", VA = "0x1301AA8")]
	public void OpenPic1()
	{
	}

	[Token(Token = "0x60001A8")]
	[Address(RVA = "0x1301B24", Offset = "0x1301B24", VA = "0x1301B24")]
	public void OpenPic2()
	{
	}

	[Token(Token = "0x60001A9")]
	[Address(RVA = "0x1301BA0", Offset = "0x1301BA0", VA = "0x1301BA0")]
	public void ClosePic1()
	{
	}

	[Token(Token = "0x60001AA")]
	[Address(RVA = "0x1301C1C", Offset = "0x1301C1C", VA = "0x1301C1C")]
	public void ClosePic2()
	{
	}

	[Token(Token = "0x60001AB")]
	[Address(RVA = "0x1301C98", Offset = "0x1301C98", VA = "0x1301C98")]
	public void OpenPic3()
	{
	}

	[Token(Token = "0x60001AC")]
	[Address(RVA = "0x1301D14", Offset = "0x1301D14", VA = "0x1301D14")]
	public void ClosePic3()
	{
	}

	[Token(Token = "0x60001AD")]
	[Address(RVA = "0x1301D90", Offset = "0x1301D90", VA = "0x1301D90")]
	public void OpenPic4()
	{
	}

	[Token(Token = "0x60001AE")]
	[Address(RVA = "0x1301E58", Offset = "0x1301E58", VA = "0x1301E58")]
	public void ClosePic4()
	{
	}

	[Token(Token = "0x60001AF")]
	[Address(RVA = "0x1301ED4", Offset = "0x1301ED4", VA = "0x1301ED4")]
	public void OpenNote1()
	{
	}

	[Token(Token = "0x60001B0")]
	[Address(RVA = "0x1301F50", Offset = "0x1301F50", VA = "0x1301F50")]
	public void OpenNote2()
	{
	}

	[Token(Token = "0x60001B1")]
	[Address(RVA = "0x1301FCC", Offset = "0x1301FCC", VA = "0x1301FCC")]
	public void CloseNote1()
	{
	}

	[Token(Token = "0x60001B2")]
	[Address(RVA = "0x1302048", Offset = "0x1302048", VA = "0x1302048")]
	public void CloseNote2()
	{
	}

	[Token(Token = "0x60001B3")]
	[Address(RVA = "0x13020C4", Offset = "0x13020C4", VA = "0x13020C4")]
	public void OpenNote3()
	{
	}

	[Token(Token = "0x60001B4")]
	[Address(RVA = "0x1302140", Offset = "0x1302140", VA = "0x1302140")]
	public void OpenNote4()
	{
	}

	[Token(Token = "0x60001B5")]
	[Address(RVA = "0x13021BC", Offset = "0x13021BC", VA = "0x13021BC")]
	public void OpenNote5()
	{
	}

	[Token(Token = "0x60001B6")]
	[Address(RVA = "0x1302238", Offset = "0x1302238", VA = "0x1302238")]
	public void OpenNote6()
	{
	}

	[Token(Token = "0x60001B7")]
	[Address(RVA = "0x13022B4", Offset = "0x13022B4", VA = "0x13022B4")]
	public void OpenNote7()
	{
	}

	[Token(Token = "0x60001B8")]
	[Address(RVA = "0x1302330", Offset = "0x1302330", VA = "0x1302330")]
	public void OpenTopSecret()
	{
	}

	[Token(Token = "0x60001B9")]
	[Address(RVA = "0x13023AC", Offset = "0x13023AC", VA = "0x13023AC")]
	public void CloseTopSecret()
	{
	}

	[Token(Token = "0x60001BA")]
	[Address(RVA = "0x1302428", Offset = "0x1302428", VA = "0x1302428")]
	public void CloseNote3()
	{
	}

	[Token(Token = "0x60001BB")]
	[Address(RVA = "0x13024A4", Offset = "0x13024A4", VA = "0x13024A4")]
	public void CloseNote4()
	{
	}

	[Token(Token = "0x60001BC")]
	[Address(RVA = "0x1302520", Offset = "0x1302520", VA = "0x1302520")]
	public void CloseNote5()
	{
	}

	[Token(Token = "0x60001BD")]
	[Address(RVA = "0x130259C", Offset = "0x130259C", VA = "0x130259C")]
	public void CloseNote6()
	{
	}

	[Token(Token = "0x60001BE")]
	[Address(RVA = "0x1302618", Offset = "0x1302618", VA = "0x1302618")]
	public void CloseNote7()
	{
	}

	[Token(Token = "0x60001BF")]
	[Address(RVA = "0x1302694", Offset = "0x1302694", VA = "0x1302694")]
	public void OpenFolder1()
	{
	}

	[Token(Token = "0x60001C0")]
	[Address(RVA = "0x1302710", Offset = "0x1302710", VA = "0x1302710")]
	public void OpenFolder2()
	{
	}

	[Token(Token = "0x60001C1")]
	[Address(RVA = "0x130278C", Offset = "0x130278C", VA = "0x130278C")]
	public void OpenTrash()
	{
	}

	[Token(Token = "0x60001C2")]
	[Address(RVA = "0x1302808", Offset = "0x1302808", VA = "0x1302808")]
	public void CloseFolder1()
	{
	}

	[Token(Token = "0x60001C3")]
	[Address(RVA = "0x1302884", Offset = "0x1302884", VA = "0x1302884")]
	public void CloseFolder2()
	{
	}

	[Token(Token = "0x60001C4")]
	[Address(RVA = "0x1302900", Offset = "0x1302900", VA = "0x1302900")]
	public void CloseTrash()
	{
	}

	[Token(Token = "0x60001C5")]
	[Address(RVA = "0x130297C", Offset = "0x130297C", VA = "0x130297C")]
	private void Start()
	{
	}

	[Token(Token = "0x60001C6")]
	[Address(RVA = "0x1302980", Offset = "0x1302980", VA = "0x1302980")]
	private void Update()
	{
	}

	[Token(Token = "0x60001C7")]
	[Address(RVA = "0x1302984", Offset = "0x1302984", VA = "0x1302984")]
	public CompKeyboardManager()
	{
	}
}
[Token(Token = "0x200004D")]
public class ControlGirl : MonoBehaviour
{
	[Token(Token = "0x40001A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameManager gameManager;

	[Token(Token = "0x40001A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject joyStick;

	[Token(Token = "0x40001A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Animator anim;

	[Token(Token = "0x40001AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform startPos;

	[Token(Token = "0x60001C8")]
	[Address(RVA = "0x13029E8", Offset = "0x13029E8", VA = "0x13029E8")]
	private void Start()
	{
	}

	[Token(Token = "0x60001C9")]
	[Address(RVA = "0x1302A44", Offset = "0x1302A44", VA = "0x1302A44")]
	private void Update()
	{
	}

	[Token(Token = "0x60001CA")]
	[Address(RVA = "0x1302D28", Offset = "0x1302D28", VA = "0x1302D28")]
	public ControlGirl()
	{
	}
}
[Token(Token = "0x200004E")]
public class ControllerChecker : MonoBehaviour
{
	[Token(Token = "0x40001AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int controllerType;

	[Token(Token = "0x40001AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MeshRenderer controllerPoster;

	[Token(Token = "0x40001AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public MeshRenderer controllerPoster2;

	[Token(Token = "0x40001AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool inTheOffice;

	[Token(Token = "0x40001AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Material pico4Poster;

	[Token(Token = "0x40001B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Material pico3Poster;

	[Token(Token = "0x60001CB")]
	[Address(RVA = "0x1302F70", Offset = "0x1302F70", VA = "0x1302F70")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001CC")]
	[Address(RVA = "0x1303070", Offset = "0x1303070", VA = "0x1303070")]
	public ControllerChecker()
	{
	}
}
[Token(Token = "0x200004F")]
public class CyberGamesManager : MonoBehaviour
{
	[Token(Token = "0x2000050")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D6284", Offset = "0x8D6284")]
	private sealed class <SammySadSongCaptionDone>d__53 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40001DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40001E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40001E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CyberGamesManager <>4__this;

		[Token(Token = "0x1700003A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60001E2")]
			[Address(RVA = "0x104CC58", Offset = "0x104CC58", VA = "0x104CC58", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700003B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60001E4")]
			[Address(RVA = "0x104CCA0", Offset = "0x104CCA0", VA = "0x104CCA0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60001DF")]
		[Address(RVA = "0x104CB40", Offset = "0x104CB40", VA = "0x104CB40")]
		[DebuggerHidden]
		public <SammySadSongCaptionDone>d__53(int <>1__state)
		{
		}

		[Token(Token = "0x60001E0")]
		[Address(RVA = "0x104CB6C", Offset = "0x104CB6C", VA = "0x104CB6C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60001E1")]
		[Address(RVA = "0x104CB70", Offset = "0x104CB70", VA = "0x104CB70", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60001E3")]
		[Address(RVA = "0x104CC60", Offset = "0x104CC60", VA = "0x104CC60", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000051")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D6294", Offset = "0x8D6294")]
	private sealed class <CaptionDone>d__54 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40001E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40001E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40001E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CyberGamesManager <>4__this;

		[Token(Token = "0x1700003C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60001E8")]
			[Address(RVA = "0x104C318", Offset = "0x104C318", VA = "0x104C318", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700003D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60001EA")]
			[Address(RVA = "0x104C360", Offset = "0x104C360", VA = "0x104C360", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60001E5")]
		[Address(RVA = "0x104C200", Offset = "0x104C200", VA = "0x104C200")]
		[DebuggerHidden]
		public <CaptionDone>d__54(int <>1__state)
		{
		}

		[Token(Token = "0x60001E6")]
		[Address(RVA = "0x104C22C", Offset = "0x104C22C", VA = "0x104C22C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60001E7")]
		[Address(RVA = "0x104C230", Offset = "0x104C230", VA = "0x104C230", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60001E9")]
		[Address(RVA = "0x104C320", Offset = "0x104C320", VA = "0x104C320", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000052")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D62A4", Offset = "0x8D62A4")]
	private sealed class <FurboLaughRoutine>d__55 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40001E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40001E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40001E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CyberGamesManager <>4__this;

		[Token(Token = "0x1700003E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60001EE")]
			[Address(RVA = "0x104C7E0", Offset = "0x104C7E0", VA = "0x104C7E0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700003F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60001F0")]
			[Address(RVA = "0x104C828", Offset = "0x104C828", VA = "0x104C828", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60001EB")]
		[Address(RVA = "0x104C6E8", Offset = "0x104C6E8", VA = "0x104C6E8")]
		[DebuggerHidden]
		public <FurboLaughRoutine>d__55(int <>1__state)
		{
		}

		[Token(Token = "0x60001EC")]
		[Address(RVA = "0x104C714", Offset = "0x104C714", VA = "0x104C714", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60001ED")]
		[Address(RVA = "0x104C718", Offset = "0x104C718", VA = "0x104C718", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60001EF")]
		[Address(RVA = "0x104C7E8", Offset = "0x104C7E8", VA = "0x104C7E8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000053")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D62B4", Offset = "0x8D62B4")]
	private sealed class <FurboSpawn>d__56 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40001E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40001E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40001EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CyberGamesManager <>4__this;

		[Token(Token = "0x17000040")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60001F4")]
			[Address(RVA = "0x104CAF0", Offset = "0x104CAF0", VA = "0x104CAF0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000041")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60001F6")]
			[Address(RVA = "0x104CB38", Offset = "0x104CB38", VA = "0x104CB38", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60001F1")]
		[Address(RVA = "0x104C830", Offset = "0x104C830", VA = "0x104C830")]
		[DebuggerHidden]
		public <FurboSpawn>d__56(int <>1__state)
		{
		}

		[Token(Token = "0x60001F2")]
		[Address(RVA = "0x104C85C", Offset = "0x104C85C", VA = "0x104C85C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60001F3")]
		[Address(RVA = "0x104C860", Offset = "0x104C860", VA = "0x104C860", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60001F5")]
		[Address(RVA = "0x104CAF8", Offset = "0x104CAF8", VA = "0x104CAF8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000054")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D62C4", Offset = "0x8D62C4")]
	private sealed class <FishSpawner>d__61 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40001EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40001EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40001ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CyberGamesManager <>4__this;

		[Token(Token = "0x17000042")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60001FA")]
			[Address(RVA = "0x104C698", Offset = "0x104C698", VA = "0x104C698", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000043")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60001FC")]
			[Address(RVA = "0x104C6E0", Offset = "0x104C6E0", VA = "0x104C6E0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60001F7")]
		[Address(RVA = "0x104C368", Offset = "0x104C368", VA = "0x104C368")]
		[DebuggerHidden]
		public <FishSpawner>d__61(int <>1__state)
		{
		}

		[Token(Token = "0x60001F8")]
		[Address(RVA = "0x104C394", Offset = "0x104C394", VA = "0x104C394", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60001F9")]
		[Address(RVA = "0x104C398", Offset = "0x104C398", VA = "0x104C398", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60001FB")]
		[Address(RVA = "0x104C6A0", Offset = "0x104C6A0", VA = "0x104C6A0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40001B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int numObjects;

	[Token(Token = "0x40001B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject prefab;

	[Token(Token = "0x40001B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject player;

	[Token(Token = "0x40001B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject spawn;

	[Token(Token = "0x40001B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float speed;

	[Token(Token = "0x40001B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public List<GameObject> allMiniFurbos;

	[Token(Token = "0x40001B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int deadFurboCount;

	[Token(Token = "0x40001B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float delaySpawnTime;

	[Token(Token = "0x40001B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float furboSpawnRate;

	[Token(Token = "0x40001BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject bigFurbo;

	[Token(Token = "0x40001BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public AudioSource bigFurboScreamSource;

	[Token(Token = "0x40001BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Coroutine spawnTheFurbos;

	[Token(Token = "0x40001BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool furboGameActive;

	[Token(Token = "0x40001BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float furboSpeed;

	[Token(Token = "0x40001BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public AudioSource furboMusic;

	[Token(Token = "0x40001C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public AudioSource nexusVoiceSpot;

	[Token(Token = "0x40001C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public AudioClip[] nexusLaughter;

	[Token(Token = "0x40001C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public int nexusLaughChoice;

	[Token(Token = "0x40001C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public PlayableDirector afterFurbo;

	[Token(Token = "0x40001C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public GameObject fishPrefab;

	[Token(Token = "0x40001C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public GameObject fishSpawn;

	[Token(Token = "0x40001C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public GameObject myTarget;

	[Token(Token = "0x40001C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public GameObject cannonball;

	[Token(Token = "0x40001C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public float shootAngle;

	[Token(Token = "0x40001C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	public bool launchfish;

	[Token(Token = "0x40001CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public List<GameObject> allMiniFish;

	[Token(Token = "0x40001CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public int deadFishCount;

	[Token(Token = "0x40001CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	public float delaySpawnTimeFish;

	[Token(Token = "0x40001CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public float fishSpawnRate;

	[Token(Token = "0x40001CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	public bool fishGameActive;

	[Token(Token = "0x40001CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public int numFishObjects;

	[Token(Token = "0x40001D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	public float fishSpeed;

	[Token(Token = "0x40001D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private Coroutine spawnTheFish;

	[Token(Token = "0x40001D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public AudioSource fishMusic;

	[Token(Token = "0x40001D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public PlayableDirector afterSammy;

	[Token(Token = "0x40001D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public float fishRad;

	[Token(Token = "0x40001D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	public Vector3 fishScale;

	[Token(Token = "0x40001D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public float fishScaleAmount;

	[Token(Token = "0x40001D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public RoboManager roboManager;

	[Token(Token = "0x40001D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public int furboToLaugh;

	[Token(Token = "0x40001D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private Coroutine laughingFurbos;

	[Token(Token = "0x40001DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	[SerializeField]
	private TextSynchronizer textSynchronizer;

	[Token(Token = "0x40001DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public PhraseAsset[] phraseAssetNexusLaughter;

	[Token(Token = "0x40001DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public GameObject roboCaption;

	[Token(Token = "0x40001DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public GameObject sammySadSongCaption;

	[Token(Token = "0x40001DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public AudioSource sammySadSongSource;

	[Token(Token = "0x60001CD")]
	[Address(RVA = "0x1085A68", Offset = "0x1085A68", VA = "0x1085A68")]
	private void Start()
	{
	}

	[Token(Token = "0x60001CE")]
	[Address(RVA = "0x1085A8C", Offset = "0x1085A8C", VA = "0x1085A8C")]
	public void MakeNexusLaugh()
	{
	}

	[Token(Token = "0x60001CF")]
	[Address(RVA = "0x1085CC8", Offset = "0x1085CC8", VA = "0x1085CC8")]
	public void FurboKillCheck()
	{
	}

	[Token(Token = "0x60001D0")]
	[Address(RVA = "0x1085F40", Offset = "0x1085F40", VA = "0x1085F40")]
	private void Update()
	{
	}

	[Token(Token = "0x60001D1")]
	[Address(RVA = "0x1085F44", Offset = "0x1085F44", VA = "0x1085F44")]
	public void MakeFurbos()
	{
	}

	[Token(Token = "0x60001D2")]
	[Address(RVA = "0x10863A4", Offset = "0x10863A4", VA = "0x10863A4")]
	public void ChooseAFurboToLaugh()
	{
	}

	[Token(Token = "0x60001D3")]
	[Address(RVA = "0x10864E4", Offset = "0x10864E4", VA = "0x10864E4")]
	public void SammySadSongDone()
	{
	}

	[Token(Token = "0x60001D4")]
	[Address(RVA = "0x1086510", Offset = "0x1086510", VA = "0x1086510")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8DE1B4", Offset = "0x8DE1B4")]
	private IEnumerator SammySadSongCaptionDone()
	{
		return null;
	}

	[Token(Token = "0x60001D5")]
	[Address(RVA = "0x1085C50", Offset = "0x1085C50", VA = "0x1085C50")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8DE214", Offset = "0x8DE214")]
	private IEnumerator CaptionDone()
	{
		return null;
	}

	[Token(Token = "0x60001D6")]
	[Address(RVA = "0x108632C", Offset = "0x108632C", VA = "0x108632C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8DE274", Offset = "0x8DE274")]
	private IEnumerator FurboLaughRoutine()
	{
		return null;
	}

	[Token(Token = "0x60001D7")]
	[Address(RVA = "0x10862B4", Offset = "0x10862B4", VA = "0x10862B4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8DE2D4", Offset = "0x8DE2D4")]
	private IEnumerator FurboSpawn()
	{
		return null;
	}

	[Token(Token = "0x60001D8")]
	[Address(RVA = "0x108622C", Offset = "0x108622C", VA = "0x108622C")]
	private Vector3 RandomCircle(Vector3 center, float radius)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60001D9")]
	[Address(RVA = "0x1086588", Offset = "0x1086588", VA = "0x1086588")]
	private Vector3 RandomSemiCircle(Vector3 center, float radius)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60001DA")]
	[Address(RVA = "0x1086620", Offset = "0x1086620", VA = "0x1086620")]
	public void FishKillCheck()
	{
	}

	[Token(Token = "0x60001DB")]
	[Address(RVA = "0x1086774", Offset = "0x1086774", VA = "0x1086774")]
	public void MakeFish()
	{
	}

	[Token(Token = "0x60001DC")]
	[Address(RVA = "0x10867DC", Offset = "0x10867DC", VA = "0x10867DC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8DE334", Offset = "0x8DE334")]
	private IEnumerator FishSpawner()
	{
		return null;
	}

	[Token(Token = "0x60001DD")]
	[Address(RVA = "0x1086854", Offset = "0x1086854", VA = "0x1086854")]
	private Vector3 BallisticVel(Transform target, float angle)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60001DE")]
	[Address(RVA = "0x1086988", Offset = "0x1086988", VA = "0x1086988")]
	public CyberGamesManager()
	{
	}
}
[Token(Token = "0x2000055")]
public class DeliaManager : MonoBehaviour
{
	[Token(Token = "0x2000056")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D62D4", Offset = "0x8D62D4")]
	private sealed class <DisplayCaptionLength>d__21 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40001FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40001FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40001FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DeliaManager <>4__this;

		[Token(Token = "0x17000044")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600020B")]
			[Address(RVA = "0x104DB4C", Offset = "0x104DB4C", VA = "0x104DB4C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000045")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600020D")]
			[Address(RVA = "0x104DB94", Offset = "0x104DB94", VA = "0x104DB94", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000208")]
		[Address(RVA = "0x104DA34", Offset = "0x104DA34", VA = "0x104DA34")]
		[DebuggerHidden]
		public <DisplayCaptionLength>d__21(int <>1__state)
		{
		}

		[Token(Token = "0x6000209")]
		[Address(RVA = "0x104DA60", Offset = "0x104DA60", VA = "0x104DA60", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600020A")]
		[Address(RVA = "0x104DA64", Offset = "0x104DA64", VA = "0x104DA64", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600020C")]
		[Address(RVA = "0x104DB54", Offset = "0x104DB54", VA = "0x104DB54", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40001EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MediaPlayer mp;

	[Token(Token = "0x40001EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string[] videoPathMainVids;

	[Token(Token = "0x40001F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string[] videoIdleVids;

	[Token(Token = "0x40001F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public MediaPlayer.FileLocation m_videoLocation;

	[Token(Token = "0x40001F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public int idlePicker;

	[Token(Token = "0x40001F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string startClip;

	[Token(Token = "0x40001F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string endClip;

	[Token(Token = "0x40001F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool playDelia;

	[Token(Token = "0x40001F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public int storyCounter;

	[Token(Token = "0x40001F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private TextSynchronizer textSynchronizer;

	[Token(Token = "0x40001F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public AudioSource deliaAudio;

	[Token(Token = "0x40001F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public AudioClip[] deliaAudioClips;

	[Token(Token = "0x40001FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public PhraseAsset[] phraseAssetDeliaLines;

	[Token(Token = "0x40001FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject roboCaption;

	[Token(Token = "0x60001FD")]
	[Address(RVA = "0x108AFD8", Offset = "0x108AFD8", VA = "0x108AFD8")]
	public void AdvanceStory()
	{
	}

	[Token(Token = "0x60001FE")]
	[Address(RVA = "0x108B048", Offset = "0x108B048", VA = "0x108B048")]
	public void PlayFirstClipForIntro()
	{
	}

	[Token(Token = "0x60001FF")]
	[Address(RVA = "0x108B220", Offset = "0x108B220", VA = "0x108B220")]
	public void PlaySecondClipForIntro()
	{
	}

	[Token(Token = "0x6000200")]
	[Address(RVA = "0x108B38C", Offset = "0x108B38C", VA = "0x108B38C")]
	public void PlayFirstClipForMachine()
	{
	}

	[Token(Token = "0x6000201")]
	[Address(RVA = "0x108B3DC", Offset = "0x108B3DC", VA = "0x108B3DC")]
	public void PlaySecondClipForMachine()
	{
	}

	[Token(Token = "0x6000202")]
	[Address(RVA = "0x108B42C", Offset = "0x108B42C", VA = "0x108B42C")]
	public void PlayThirdClipForMachine()
	{
	}

	[Token(Token = "0x6000203")]
	[Address(RVA = "0x108B47C", Offset = "0x108B47C", VA = "0x108B47C")]
	public void StopDelia()
	{
	}

	[Token(Token = "0x6000204")]
	[Address(RVA = "0x108B1A8", Offset = "0x108B1A8", VA = "0x108B1A8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8DE524", Offset = "0x8DE524")]
	private IEnumerator DisplayCaptionLength()
	{
		return null;
	}

	[Token(Token = "0x6000205")]
	[Address(RVA = "0x108B480", Offset = "0x108B480", VA = "0x108B480")]
	private void Start()
	{
	}

	[Token(Token = "0x6000206")]
	[Address(RVA = "0x108B484", Offset = "0x108B484", VA = "0x108B484")]
	private void Update()
	{
	}

	[Token(Token = "0x6000207")]
	[Address(RVA = "0x108B5B8", Offset = "0x108B5B8", VA = "0x108B5B8")]
	public DeliaManager()
	{
	}
}
[Token(Token = "0x2000057")]
public class DestroyBall : MonoBehaviour
{
	[Token(Token = "0x40001FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject smoke;

	[Token(Token = "0x4000200")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject smokePuff;

	[Token(Token = "0x4000201")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private ParticleSystem parts;

	[Token(Token = "0x4000202")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float totalDuration;

	[Token(Token = "0x600020E")]
	[Address(RVA = "0x108BCA8", Offset = "0x108BCA8", VA = "0x108BCA8")]
	public void DestroyTheBall()
	{
	}

	[Token(Token = "0x600020F")]
	[Address(RVA = "0x108BE5C", Offset = "0x108BE5C", VA = "0x108BE5C")]
	public DestroyBall()
	{
	}
}
[Token(Token = "0x2000058")]
public class DieSleep : MonoBehaviour
{
	[Token(Token = "0x6000210")]
	[Address(RVA = "0x108BF78", Offset = "0x108BF78", VA = "0x108BF78")]
	private void Start()
	{
	}

	[Token(Token = "0x6000211")]
	[Address(RVA = "0x108BF7C", Offset = "0x108BF7C", VA = "0x108BF7C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000212")]
	[Address(RVA = "0x108BF80", Offset = "0x108BF80", VA = "0x108BF80")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000213")]
	[Address(RVA = "0x108BFEC", Offset = "0x108BFEC", VA = "0x108BFEC")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000214")]
	[Address(RVA = "0x108C058", Offset = "0x108C058", VA = "0x108C058")]
	public DieSleep()
	{
	}
}
[Token(Token = "0x2000059")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8D62E4", Offset = "0x8D62E4")]
public class FractureOnInput : MonoBehaviour
{
	[Token(Token = "0x4000203")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public KeyCode Key;

	[Token(Token = "0x6000215")]
	[Address(RVA = "0x10963DC", Offset = "0x10963DC", VA = "0x10963DC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000216")]
	[Address(RVA = "0x1096450", Offset = "0x1096450", VA = "0x1096450")]
	public FractureOnInput()
	{
	}
}
[Token(Token = "0x200005A")]
public class DiskFall : MonoBehaviour
{
	[Token(Token = "0x4000204")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameManager gameManager;

	[Token(Token = "0x4000205")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float thisDisksSpeed;

	[Token(Token = "0x4000206")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Animator anim;

	[Token(Token = "0x4000207")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject arcadeModel;

	[Token(Token = "0x4000208")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ArcadeSoundSystem arcadeSoundSystem;

	[Token(Token = "0x4000209")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int collectChoice;

	[Token(Token = "0x6000217")]
	[Address(RVA = "0x108C154", Offset = "0x108C154", VA = "0x108C154")]
	private void Start()
	{
	}

	[Token(Token = "0x6000218")]
	[Address(RVA = "0x108C254", Offset = "0x108C254", VA = "0x108C254")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000219")]
	[Address(RVA = "0x108C41C", Offset = "0x108C41C", VA = "0x108C41C")]
	private void OnBang()
	{
	}

	[Token(Token = "0x600021A")]
	[Address(RVA = "0x108C438", Offset = "0x108C438", VA = "0x108C438")]
	private void Update()
	{
	}

	[Token(Token = "0x600021B")]
	[Address(RVA = "0x108C544", Offset = "0x108C544", VA = "0x108C544")]
	public DiskFall()
	{
	}
}
[Token(Token = "0x200005B")]
public class DoNothing : MonoBehaviour
{
	[Token(Token = "0x600021C")]
	[Address(RVA = "0x10926CC", Offset = "0x10926CC", VA = "0x10926CC")]
	public void DoNothingFunction()
	{
	}

	[Token(Token = "0x600021D")]
	[Address(RVA = "0x10926D0", Offset = "0x10926D0", VA = "0x10926D0")]
	private void Start()
	{
	}

	[Token(Token = "0x600021E")]
	[Address(RVA = "0x10926D4", Offset = "0x10926D4", VA = "0x10926D4")]
	private void Update()
	{
	}

	[Token(Token = "0x600021F")]
	[Address(RVA = "0x10926D8", Offset = "0x10926D8", VA = "0x10926D8")]
	public DoNothing()
	{
	}
}
[Token(Token = "0x200005C")]
public class DollarDetectionCube : MonoBehaviour
{
	[Token(Token = "0x200005D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D6344", Offset = "0x8D6344")]
	private sealed class <WaitForSound>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400020F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000210")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000211")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DollarDetectionCube <>4__this;

		[Token(Token = "0x17000046")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000227")]
			[Address(RVA = "0x104DC9C", Offset = "0x104DC9C", VA = "0x104DC9C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000047")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000229")]
			[Address(RVA = "0x104DCE4", Offset = "0x104DCE4", VA = "0x104DCE4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000224")]
		[Address(RVA = "0x104DB9C", Offset = "0x104DB9C", VA = "0x104DB9C")]
		[DebuggerHidden]
		public <WaitForSound>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6000225")]
		[Address(RVA = "0x104DBC8", Offset = "0x104DBC8", VA = "0x104DBC8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000226")]
		[Address(RVA = "0x104DBCC", Offset = "0x104DBCC", VA = "0x104DBCC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000228")]
		[Address(RVA = "0x104DCA4", Offset = "0x104DCA4", VA = "0x104DCA4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400020A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject dropCube;

	[Token(Token = "0x400020B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject moneyMoney;

	[Token(Token = "0x400020C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform setTheTransform;

	[Token(Token = "0x400020D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform pogsSetTransform;

	[Token(Token = "0x400020E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject penguinInside;

	[Token(Token = "0x6000220")]
	[Address(RVA = "0x10926E0", Offset = "0x10926E0", VA = "0x10926E0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000221")]
	[Address(RVA = "0x109282C", Offset = "0x109282C", VA = "0x109282C")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000222")]
	[Address(RVA = "0x1092BC0", Offset = "0x1092BC0", VA = "0x1092BC0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8DE5D4", Offset = "0x8DE5D4")]
	private IEnumerator WaitForSound()
	{
		return null;
	}

	[Token(Token = "0x6000223")]
	[Address(RVA = "0x1092C38", Offset = "0x1092C38", VA = "0x1092C38")]
	public DollarDetectionCube()
	{
	}
}
[Token(Token = "0x200005E")]
public class DoorHeadFade : MonoBehaviour
{
	[Token(Token = "0x600022A")]
	[Address(RVA = "0x1092C40", Offset = "0x1092C40", VA = "0x1092C40")]
	public void AddHeadFade()
	{
	}

	[Token(Token = "0x600022B")]
	[Address(RVA = "0x1092CA0", Offset = "0x1092CA0", VA = "0x1092CA0")]
	public void RemoveHeadFade()
	{
	}

	[Token(Token = "0x600022C")]
	[Address(RVA = "0x1092D00", Offset = "0x1092D00", VA = "0x1092D00")]
	private void Start()
	{
	}

	[Token(Token = "0x600022D")]
	[Address(RVA = "0x1092D04", Offset = "0x1092D04", VA = "0x1092D04")]
	private void Update()
	{
	}

	[Token(Token = "0x600022E")]
	[Address(RVA = "0x1092D08", Offset = "0x1092D08", VA = "0x1092D08")]
	public DoorHeadFade()
	{
	}
}
[Token(Token = "0x200005F")]
public class EjectButton : MonoBehaviour
{
	[Token(Token = "0x4000212")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UnityEvent buttonPressed;

	[Token(Token = "0x4000213")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public VCRManager vcrManager;

	[Token(Token = "0x600022F")]
	[Address(RVA = "0x1092D90", Offset = "0x1092D90", VA = "0x1092D90")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000230")]
	[Address(RVA = "0x1092E74", Offset = "0x1092E74", VA = "0x1092E74")]
	private void Start()
	{
	}

	[Token(Token = "0x6000231")]
	[Address(RVA = "0x1092E78", Offset = "0x1092E78", VA = "0x1092E78")]
	private void Update()
	{
	}

	[Token(Token = "0x6000232")]
	[Address(RVA = "0x1092E7C", Offset = "0x1092E7C", VA = "0x1092E7C")]
	public EjectButton()
	{
	}
}
[Token(Token = "0x2000060")]
public class EndTimelineTrigger : MonoBehaviour
{
	[Token(Token = "0x4000214")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int howManyEnables;

	[Token(Token = "0x4000215")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material cabMat1;

	[Token(Token = "0x4000216")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Material cabMat1screen;

	[Token(Token = "0x4000217")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AudioSource cabSound;

	[Token(Token = "0x4000218")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AudioSource sparkle;

	[Token(Token = "0x4000219")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject robot;

	[Token(Token = "0x400021A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public DeliaManager deliaManager;

	[Token(Token = "0x400021B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject deliaHere;

	[Token(Token = "0x400021C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject deliaThere;

	[Token(Token = "0x400021D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public MediaPlayer mp;

	[Token(Token = "0x400021E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public MediaPlayer mp2;

	[Token(Token = "0x400021F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool movieTracker;

	[Token(Token = "0x4000220")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
	public bool changeScene;

	[Token(Token = "0x4000221")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject sceneChange;

	[Token(Token = "0x4000222")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public MachineFader machineFader;

	[Token(Token = "0x4000223")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public AudioSource rumbleSound;

	[Token(Token = "0x4000224")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public AudioSource deliaEndVid;

	[Token(Token = "0x4000225")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private TextSynchronizer textSynchronizer;

	[Token(Token = "0x4000226")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public PhraseAsset phraseAssetDeliaEnd;

	[Token(Token = "0x4000227")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public GameObject roboCaption;

	[Token(Token = "0x6000233")]
	[Address(RVA = "0x1092E84", Offset = "0x1092E84", VA = "0x1092E84")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000234")]
	[Address(RVA = "0x1093264", Offset = "0x1093264", VA = "0x1093264")]
	private void Update()
	{
	}

	[Token(Token = "0x6000235")]
	[Address(RVA = "0x1093398", Offset = "0x1093398", VA = "0x1093398")]
	public EndTimelineTrigger()
	{
	}
}
[Token(Token = "0x2000061")]
public class EyeRotate : MonoBehaviour
{
	[Token(Token = "0x4000228")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform tempTransform;

	[Token(Token = "0x4000229")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform target;

	[Token(Token = "0x6000236")]
	[Address(RVA = "0x1093790", Offset = "0x1093790", VA = "0x1093790")]
	private void Start()
	{
	}

	[Token(Token = "0x6000237")]
	[Address(RVA = "0x1093794", Offset = "0x1093794", VA = "0x1093794")]
	public void RotateRobotToPlayer()
	{
	}

	[Token(Token = "0x6000238")]
	[Address(RVA = "0x1093798", Offset = "0x1093798", VA = "0x1093798")]
	public EyeRotate()
	{
	}
}
[Token(Token = "0x2000062")]
public class FadeInAndSound : MonoBehaviour
{
	[Token(Token = "0x2000063")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D6354", Offset = "0x8D6354")]
	private sealed class <LogoRoutineTime>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400022D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400022E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400022F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FadeInAndSound <>4__this;

		[Token(Token = "0x17000048")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000240")]
			[Address(RVA = "0x104F2B0", Offset = "0x104F2B0", VA = "0x104F2B0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000049")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000242")]
			[Address(RVA = "0x104F2F8", Offset = "0x104F2F8", VA = "0x104F2F8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600023D")]
		[Address(RVA = "0x104F040", Offset = "0x104F040", VA = "0x104F040")]
		[DebuggerHidden]
		public <LogoRoutineTime>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x600023E")]
		[Address(RVA = "0x104F06C", Offset = "0x104F06C", VA = "0x104F06C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600023F")]
		[Address(RVA = "0x104F070", Offset = "0x104F070", VA = "0x104F070", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000241")]
		[Address(RVA = "0x104F2B8", Offset = "0x104F2B8", VA = "0x104F2B8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000064")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D6364", Offset = "0x8D6364")]
	private sealed class <FadeToSprites>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000230")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000231")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000232")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject gameOb;

		[Token(Token = "0x4000233")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float aValue;

		[Token(Token = "0x4000234")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float aTime;

		[Token(Token = "0x4000235")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <alpha>5__2;

		[Token(Token = "0x4000236")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <t>5__3;

		[Token(Token = "0x1700004A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000246")]
			[Address(RVA = "0x104EFF0", Offset = "0x104EFF0", VA = "0x104EFF0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700004B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000248")]
			[Address(RVA = "0x104F038", Offset = "0x104F038", VA = "0x104F038", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000243")]
		[Address(RVA = "0x104EE48", Offset = "0x104EE48", VA = "0x104EE48")]
		[DebuggerHidden]
		public <FadeToSprites>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x6000244")]
		[Address(RVA = "0x104EE74", Offset = "0x104EE74", VA = "0x104EE74", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000245")]
		[Address(RVA = "0x104EE78", Offset = "0x104EE78", VA = "0x104EE78", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000247")]
		[Address(RVA = "0x104EFF8", Offset = "0x104EFF8", VA = "0x104EFF8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400022A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioSource lunaSound;

	[Token(Token = "0x400022B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject lunaSprite;

	[Token(Token = "0x400022C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject sceneChange;

	[Token(Token = "0x6000239")]
	[Address(RVA = "0x10937A0", Offset = "0x10937A0", VA = "0x10937A0")]
	private void Start()
	{
	}

	[Token(Token = "0x600023A")]
	[Address(RVA = "0x1093860", Offset = "0x1093860", VA = "0x1093860")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8DE684", Offset = "0x8DE684")]
	private IEnumerator LogoRoutineTime()
	{
		return null;
	}

	[Token(Token = "0x600023B")]
	[Address(RVA = "0x10938D8", Offset = "0x10938D8", VA = "0x10938D8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8DE6E4", Offset = "0x8DE6E4")]
	private IEnumerator FadeToSprites(GameObject gameOb, float aValue, float aTime)
	{
		return null;
	}

	[Token(Token = "0x600023C")]
	[Address(RVA = "0x1093964", Offset = "0x1093964", VA = "0x1093964")]
	public FadeInAndSound()
	{
	}
}
[Token(Token = "0x2000065")]
public class FlashPressStart : MonoBehaviour
{
	[Token(Token = "0x2000066")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D6374", Offset = "0x8D6374")]
	private sealed class <DoTheFlash>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000238")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000239")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400023A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FlashPressStart <>4__this;

		[Token(Token = "0x1700004C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000252")]
			[Address(RVA = "0x104F8B4", Offset = "0x104F8B4", VA = "0x104F8B4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700004D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000254")]
			[Address(RVA = "0x104F8FC", Offset = "0x104F8FC", VA = "0x104F8FC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600024F")]
		[Address(RVA = "0x104F784", Offset = "0x104F784", VA = "0x104F784")]
		[DebuggerHidden]
		public <DoTheFlash>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x6000250")]
		[Address(RVA = "0x104F7B0", Offset = "0x104F7B0", VA = "0x104F7B0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000251")]
		[Address(RVA = "0x104F7B4", Offset = "0x104F7B4", VA = "0x104F7B4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000253")]
		[Address(RVA = "0x104F8BC", Offset = "0x104F8BC", VA = "0x104F8BC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000237")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool flashText;

	[Token(Token = "0x6000249")]
	[Address(RVA = "0x1094B40", Offset = "0x1094B40", VA = "0x1094B40")]
	private void Start()
	{
	}

	[Token(Token = "0x600024A")]
	[Address(RVA = "0x1094B98", Offset = "0x1094B98", VA = "0x1094B98")]
	private void Update()
	{
	}

	[Token(Token = "0x600024B")]
	[Address(RVA = "0x1094B9C", Offset = "0x1094B9C", VA = "0x1094B9C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600024C")]
	[Address(RVA = "0x1094B6C", Offset = "0x1094B6C", VA = "0x1094B6C")]
	public void FlashFunction()
	{
	}

	[Token(Token = "0x600024D")]
	[Address(RVA = "0x1094BC8", Offset = "0x1094BC8", VA = "0x1094BC8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8DE7E4", Offset = "0x8DE7E4")]
	public IEnumerator DoTheFlash()
	{
		return null;
	}

	[Token(Token = "0x600024E")]
	[Address(RVA = "0x1094C40", Offset = "0x1094C40", VA = "0x1094C40")]
	public FlashPressStart()
	{
	}
}
[Token(Token = "0x2000067")]
public class FlipperScript : MonoBehaviour
{
	[Token(Token = "0x400023B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float restPosition;

	[Token(Token = "0x400023C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float pressedPosition;

	[Token(Token = "0x400023D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float hitStrength;

	[Token(Token = "0x400023E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float flipperDamper;

	[Token(Token = "0x400023F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string inputName;

	[Token(Token = "0x4000240")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private HingeJoint hinge;

	[Token(Token = "0x4000241")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool buttonPressed;

	[Token(Token = "0x6000255")]
	[Address(RVA = "0x1094C50", Offset = "0x1094C50", VA = "0x1094C50")]
	private void Start()
	{
	}

	[Token(Token = "0x6000256")]
	[Address(RVA = "0x1094CC4", Offset = "0x1094CC4", VA = "0x1094CC4")]
	public void ButtonIsPress()
	{
	}

	[Token(Token = "0x6000257")]
	[Address(RVA = "0x1094CD0", Offset = "0x1094CD0", VA = "0x1094CD0")]
	public void ButtonIsReleased()
	{
	}

	[Token(Token = "0x6000258")]
	[Address(RVA = "0x1094CD8", Offset = "0x1094CD8", VA = "0x1094CD8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000259")]
	[Address(RVA = "0x1094D14", Offset = "0x1094D14", VA = "0x1094D14")]
	public FlipperScript()
	{
	}
}
[Token(Token = "0x2000068")]
public class FurboSammyActivation : MonoBehaviour
{
	[Token(Token = "0x4000242")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MachineFader machineFader;

	[Token(Token = "0x4000243")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioSource cabSound;

	[Token(Token = "0x4000244")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject[] furboParts;

	[Token(Token = "0x4000245")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject furbo;

	[Token(Token = "0x4000246")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AudioSource furboSound;

	[Token(Token = "0x4000247")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AudioClip striiike;

	[Token(Token = "0x4000248")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public DeliaManager deliaManager;

	[Token(Token = "0x4000249")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Animator sammyAnimator;

	[Token(Token = "0x400024A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public AudioSource sammyFirstSong;

	[Token(Token = "0x400024B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public AudioSource sammySadSong;

	[Token(Token = "0x400024C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public AudioSource sammyBattleSong;

	[Token(Token = "0x400024D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject sammyBig;

	[Token(Token = "0x400024E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject robot;

	[Token(Token = "0x400024F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public CyberGamesManager cyberGamesManager;

	[Token(Token = "0x4000250")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private TextSynchronizer textSynchronizer;

	[Token(Token = "0x4000251")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public PhraseAsset phraseAssetsSammySadSong;

	[Token(Token = "0x4000252")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public GameObject sammySadSongCaption;

	[Token(Token = "0x4000253")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public int howManyEnables;

	[Token(Token = "0x600025A")]
	[Address(RVA = "0x10975C8", Offset = "0x10975C8", VA = "0x10975C8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600025B")]
	[Address(RVA = "0x1097914", Offset = "0x1097914", VA = "0x1097914")]
	public FurboSammyActivation()
	{
	}
}
[Token(Token = "0x2000069")]
public class FurboTimelineTrigger : MonoBehaviour
{
	[Token(Token = "0x200006A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D6384", Offset = "0x8D6384")]
	private sealed class <Fade>d__15 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000262")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000263")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000264")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FurboTimelineTrigger <>4__this;

		[Token(Token = "0x4000265")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Color <initialColor>5__2;

		[Token(Token = "0x4000266")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Color <targetColor>5__3;

		[Token(Token = "0x4000267")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float <elapsedTime>5__4;

		[Token(Token = "0x1700004E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000264")]
			[Address(RVA = "0x1050680", Offset = "0x1050680", VA = "0x1050680", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700004F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000266")]
			[Address(RVA = "0x10506C8", Offset = "0x10506C8", VA = "0x10506C8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000261")]
		[Address(RVA = "0x10504BC", Offset = "0x10504BC", VA = "0x10504BC")]
		[DebuggerHidden]
		public <Fade>d__15(int <>1__state)
		{
		}

		[Token(Token = "0x6000262")]
		[Address(RVA = "0x10504E8", Offset = "0x10504E8", VA = "0x10504E8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000263")]
		[Address(RVA = "0x10504EC", Offset = "0x10504EC", VA = "0x10504EC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000265")]
		[Address(RVA = "0x1050688", Offset = "0x1050688", VA = "0x1050688", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200006B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D6394", Offset = "0x8D6394")]
	private sealed class <MoveFromTo>d__17 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000268")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000269")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400026A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 a;

		[Token(Token = "0x400026B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Vector3 b;

		[Token(Token = "0x400026C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float speed;

		[Token(Token = "0x400026D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Transform objectToMove;

		[Token(Token = "0x400026E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public FurboTimelineTrigger <>4__this;

		[Token(Token = "0x400026F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float <step>5__2;

		[Token(Token = "0x4000270")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float <t>5__3;

		[Token(Token = "0x17000050")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600026A")]
			[Address(RVA = "0xE7C728", Offset = "0xE7C728", VA = "0xE7C728", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000051")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600026C")]
			[Address(RVA = "0xE7C770", Offset = "0xE7C770", VA = "0xE7C770", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000267")]
		[Address(RVA = "0xE7C510", Offset = "0xE7C510", VA = "0xE7C510")]
		[DebuggerHidden]
		public <MoveFromTo>d__17(int <>1__state)
		{
		}

		[Token(Token = "0x6000268")]
		[Address(RVA = "0xE7C53C", Offset = "0xE7C53C", VA = "0xE7C53C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000269")]
		[Address(RVA = "0xE7C540", Offset = "0xE7C540", VA = "0xE7C540", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600026B")]
		[Address(RVA = "0xE7C730", Offset = "0xE7C730", VA = "0xE7C730", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000254")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int howManyEnables;

	[Token(Token = "0x4000255")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject robot;

	[Token(Token = "0x4000256")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject furboIntroMusic;

	[Token(Token = "0x4000257")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject[] furboParts;

	[Token(Token = "0x4000258")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject furbo;

	[Token(Token = "0x4000259")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform furboStartSpot;

	[Token(Token = "0x400025A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform furboEndSpot;

	[Token(Token = "0x400025B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AudioSource furboMusic;

	[Token(Token = "0x400025C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public AudioSource furboSlam;

	[Token(Token = "0x400025D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public AudioSource furboScream;

	[Token(Token = "0x400025E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public AudioClip furboLoopMusic;

	[Token(Token = "0x400025F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject gamesManager;

	[Token(Token = "0x4000260")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Material cabMat1;

	[Token(Token = "0x4000261")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Material cabMat1screen;

	[Token(Token = "0x600025C")]
	[Address(RVA = "0x109791C", Offset = "0x109791C", VA = "0x109791C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600025D")]
	[Address(RVA = "0x1097BB8", Offset = "0x1097BB8", VA = "0x1097BB8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8DE894", Offset = "0x8DE894")]
	private IEnumerator Fade()
	{
		return null;
	}

	[Token(Token = "0x600025E")]
	[Address(RVA = "0x1097C30", Offset = "0x1097C30", VA = "0x1097C30")]
	private void OnApplicationQuit()
	{
	}

	[Token(Token = "0x600025F")]
	[Address(RVA = "0x1097AD8", Offset = "0x1097AD8", VA = "0x1097AD8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8DE8F4", Offset = "0x8DE8F4")]
	private IEnumerator MoveFromTo(Transform objectToMove, Vector3 a, Vector3 b, float speed)
	{
		return null;
	}

	[Token(Token = "0x6000260")]
	[Address(RVA = "0x1097C94", Offset = "0x1097C94", VA = "0x1097C94")]
	public FurboTimelineTrigger()
	{
	}
}
[Token(Token = "0x200006C")]
public class GameDudeController : MonoBehaviour
{
	[Token(Token = "0x4000271")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector2 leftAxis;

	[Token(Token = "0x4000272")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector2 rightAxis;

	[Token(Token = "0x4000273")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector2 theAxis;

	[Token(Token = "0x4000274")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public SnakeGameDude snakeGameDude;

	[Token(Token = "0x4000275")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 movement;

	[Token(Token = "0x4000276")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private PVRGrabbable interactable;

	[Token(Token = "0x4000277")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool jump;

	[Token(Token = "0x4000278")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
	public bool buttonHintsHideTime;

	[Token(Token = "0x4000279")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x52")]
	public bool showHintsNow;

	[Token(Token = "0x400027A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public PVRGrabber lastHand;

	[Token(Token = "0x400027B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public PVRGrabber handShowingHints;

	[Token(Token = "0x400027C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public bool hand1;

	[Token(Token = "0x400027D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
	public bool hand2;

	[Token(Token = "0x400027E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject rightControllerModel;

	[Token(Token = "0x400027F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject leftControllerModel;

	[Token(Token = "0x4000280")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public string theHoveringHand;

	[Token(Token = "0x4000281")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public bool buttonPressed;

	[Token(Token = "0x4000282")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public TeleportInputHandlerTouch tpHandler;

	[Token(Token = "0x4000283")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public bool returnControls;

	[Token(Token = "0x4000284")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public GameObject snapTurn;

	[Token(Token = "0x4000285")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public string snapTurnHolder;

	[Token(Token = "0x600026D")]
	[Address(RVA = "0x1097C9C", Offset = "0x1097C9C", VA = "0x1097C9C")]
	private void Start()
	{
	}

	[Token(Token = "0x600026E")]
	[Address(RVA = "0x1097CF8", Offset = "0x1097CF8", VA = "0x1097CF8")]
	private void Update()
	{
	}

	[Token(Token = "0x600026F")]
	[Address(RVA = "0x10984E4", Offset = "0x10984E4", VA = "0x10984E4")]
	public GameDudeController()
	{
	}
}
[Token(Token = "0x200006D")]
public class GameManager : MonoBehaviour
{
	[Token(Token = "0x200006E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D63A4", Offset = "0x8D63A4")]
	private sealed class <WaitForSound>d__35 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40002A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40002A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40002A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameManager <>4__this;

		[Token(Token = "0x17000052")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600027A")]
			[Address(RVA = "0xE7CF04", Offset = "0xE7CF04", VA = "0xE7CF04", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000053")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600027C")]
			[Address(RVA = "0xE7CF4C", Offset = "0xE7CF4C", VA = "0xE7CF4C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000277")]
		[Address(RVA = "0xE7CDDC", Offset = "0xE7CDDC", VA = "0xE7CDDC")]
		[DebuggerHidden]
		public <WaitForSound>d__35(int <>1__state)
		{
		}

		[Token(Token = "0x6000278")]
		[Address(RVA = "0xE7CE08", Offset = "0xE7CE08", VA = "0xE7CE08", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000279")]
		[Address(RVA = "0xE7CE0C", Offset = "0xE7CE0C", VA = "0xE7CE0C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600027B")]
		[Address(RVA = "0xE7CF0C", Offset = "0xE7CF0C", VA = "0xE7CF0C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200006F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D63B4", Offset = "0x8D63B4")]
	private sealed class <WaitForSetting>d__36 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40002A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40002AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40002AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameManager <>4__this;

		[Token(Token = "0x17000054")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000280")]
			[Address(RVA = "0xE7CD8C", Offset = "0xE7CD8C", VA = "0xE7CD8C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000055")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000282")]
			[Address(RVA = "0xE7CDD4", Offset = "0xE7CDD4", VA = "0xE7CDD4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600027D")]
		[Address(RVA = "0xE7CC20", Offset = "0xE7CC20", VA = "0xE7CC20")]
		[DebuggerHidden]
		public <WaitForSetting>d__36(int <>1__state)
		{
		}

		[Token(Token = "0x600027E")]
		[Address(RVA = "0xE7CC4C", Offset = "0xE7CC4C", VA = "0xE7CC4C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600027F")]
		[Address(RVA = "0xE7CC50", Offset = "0xE7CC50", VA = "0xE7CC50", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000281")]
		[Address(RVA = "0xE7CD94", Offset = "0xE7CD94", VA = "0xE7CD94", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000070")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D63C4", Offset = "0x8D63C4")]
	private sealed class <DropItems>d__37 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40002AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40002AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40002AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameManager <>4__this;

		[Token(Token = "0x17000056")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000286")]
			[Address(RVA = "0xE7CBD0", Offset = "0xE7CBD0", VA = "0xE7CBD0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000057")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000288")]
			[Address(RVA = "0xE7CC18", Offset = "0xE7CC18", VA = "0xE7CC18", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000283")]
		[Address(RVA = "0xE7C778", Offset = "0xE7C778", VA = "0xE7C778")]
		[DebuggerHidden]
		public <DropItems>d__37(int <>1__state)
		{
		}

		[Token(Token = "0x6000284")]
		[Address(RVA = "0xE7C7A4", Offset = "0xE7C7A4", VA = "0xE7C7A4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000285")]
		[Address(RVA = "0xE7C7A8", Offset = "0xE7C7A8", VA = "0xE7C7A8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000287")]
		[Address(RVA = "0xE7CBD8", Offset = "0xE7CBD8", VA = "0xE7CBD8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000286")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool gameOn;

	[Token(Token = "0x4000287")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool gameStart;

	[Token(Token = "0x4000288")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool gameWon;

	[Token(Token = "0x4000289")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	public bool cointIn;

	[Token(Token = "0x400028A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float currentFallSpeed;

	[Token(Token = "0x400028B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float itemDropRate;

	[Token(Token = "0x400028C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int itemDropCount;

	[Token(Token = "0x400028D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject bombSpot;

	[Token(Token = "0x400028E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float bombSpotX;

	[Token(Token = "0x400028F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject bombSpotParent;

	[Token(Token = "0x4000290")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject bombPrefab;

	[Token(Token = "0x4000291")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject diskPrefab;

	[Token(Token = "0x4000292")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float timeKeeper;

	[Token(Token = "0x4000293")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public int dropChoice;

	[Token(Token = "0x4000294")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject itemChosen;

	[Token(Token = "0x4000295")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject itemMade;

	[Token(Token = "0x4000296")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject littleOne;

	[Token(Token = "0x4000297")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Transform littleOneStartingPos;

	[Token(Token = "0x4000298")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject highScoreText;

	[Token(Token = "0x4000299")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject titleText;

	[Token(Token = "0x400029A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GameObject pressStartText;

	[Token(Token = "0x400029B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public GameObject scoreText;

	[Token(Token = "0x400029C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public int gameScore;

	[Token(Token = "0x400029D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public int highScore;

	[Token(Token = "0x400029E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Text actualHighScoreText;

	[Token(Token = "0x400029F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public ArcadeSoundSystem arcadeSoundSystem;

	[Token(Token = "0x40002A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private float highScoreSoundDuration;

	[Token(Token = "0x40002A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public GameObject arcadeDoor;

	[Token(Token = "0x40002A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public string[] translatedStrings;

	[Token(Token = "0x40002A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public GameObject startScreen;

	[Token(Token = "0x40002A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public GameObject scoreScreen;

	[Token(Token = "0x40002A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private Coroutine startItAll;

	[Token(Token = "0x6000270")]
	[Address(RVA = "0x1098570", Offset = "0x1098570", VA = "0x1098570")]
	private void Start()
	{
	}

	[Token(Token = "0x6000271")]
	[Address(RVA = "0x109873C", Offset = "0x109873C", VA = "0x109873C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000272")]
	[Address(RVA = "0x1098740", Offset = "0x1098740", VA = "0x1098740")]
	public void GameReset()
	{
	}

	[Token(Token = "0x6000273")]
	[Address(RVA = "0x1098964", Offset = "0x1098964", VA = "0x1098964")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8DE9F4", Offset = "0x8DE9F4")]
	private IEnumerator WaitForSound()
	{
		return null;
	}

	[Token(Token = "0x6000274")]
	[Address(RVA = "0x10986C4", Offset = "0x10986C4", VA = "0x10986C4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8DEA54", Offset = "0x8DEA54")]
	private IEnumerator WaitForSetting()
	{
		return null;
	}

	[Token(Token = "0x6000275")]
	[Address(RVA = "0x10988EC", Offset = "0x10988EC", VA = "0x10988EC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8DEAB4", Offset = "0x8DEAB4")]
	private IEnumerator DropItems()
	{
		return null;
	}

	[Token(Token = "0x6000276")]
	[Address(RVA = "0x10989DC", Offset = "0x10989DC", VA = "0x10989DC")]
	public GameManager()
	{
	}
}
[Token(Token = "0x2000071")]
public class GamePauser : MonoBehaviour
{
	[Token(Token = "0x2000072")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D63D4", Offset = "0x8D63D4")]
	private sealed class <startStuff>d__16 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40002BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40002BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40002BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float secs;

		[Token(Token = "0x40002BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GamePauser <>4__this;

		[Token(Token = "0x40002C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <cd>5__2;

		[Token(Token = "0x17000058")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000291")]
			[Address(RVA = "0xE7D064", Offset = "0xE7D064", VA = "0xE7D064", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000059")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000293")]
			[Address(RVA = "0xE7D0AC", Offset = "0xE7D0AC", VA = "0xE7D0AC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600028E")]
		[Address(RVA = "0xE7CF54", Offset = "0xE7CF54", VA = "0xE7CF54")]
		[DebuggerHidden]
		public <startStuff>d__16(int <>1__state)
		{
		}

		[Token(Token = "0x600028F")]
		[Address(RVA = "0xE7CF80", Offset = "0xE7CF80", VA = "0xE7CF80", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000290")]
		[Address(RVA = "0xE7CF84", Offset = "0xE7CF84", VA = "0xE7CF84", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000292")]
		[Address(RVA = "0xE7D06C", Offset = "0xE7D06C", VA = "0xE7D06C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40002AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioSource[] sources;

	[Token(Token = "0x40002B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public PlayableDirector[] timelines;

	[Token(Token = "0x40002B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private PlayableDirector theTimeLinePlaying;

	[Token(Token = "0x40002B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private PlayableDirector[] theTimeLinesPlaying;

	[Token(Token = "0x40002B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int timelinecounter;

	[Token(Token = "0x40002B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool[] timeLineIsPlaying;

	[Token(Token = "0x40002B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float timeScale;

	[Token(Token = "0x40002B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private bool headSetOffOnce;

	[Token(Token = "0x40002B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
	private bool headSetOnOnce;

	[Token(Token = "0x40002B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4E")]
	private bool pauseOnce;

	[Token(Token = "0x40002B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4F")]
	private bool unpauseOnce;

	[Token(Token = "0x40002BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool wornTheFirstTime;

	[Token(Token = "0x40002BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
	private bool gamePaused;

	[Token(Token = "0x6000289")]
	[Address(RVA = "0x1098A00", Offset = "0x1098A00", VA = "0x1098A00")]
	private void Awake()
	{
	}

	[Token(Token = "0x600028A")]
	[Address(RVA = "0x1098C84", Offset = "0x1098C84", VA = "0x1098C84")]
	private void GotANewOneLoaded(Scene scene, LoadSceneMode mode)
	{
	}

	[Token(Token = "0x600028B")]
	[Address(RVA = "0x1098DDC", Offset = "0x1098DDC", VA = "0x1098DDC")]
	private void Update()
	{
	}

	[Token(Token = "0x600028C")]
	[Address(RVA = "0x1098BFC", Offset = "0x1098BFC", VA = "0x1098BFC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8DEC04", Offset = "0x8DEC04")]
	private IEnumerator startStuff(float secs)
	{
		return null;
	}

	[Token(Token = "0x600028D")]
	[Address(RVA = "0x10995E0", Offset = "0x10995E0", VA = "0x10995E0")]
	public GamePauser()
	{
	}
}
[Token(Token = "0x2000073")]
public class GamePauser2 : MonoBehaviour
{
	[Token(Token = "0x2000074")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D63E4", Offset = "0x8D63E4")]
	private sealed class <startStuff>d__27 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40002D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40002D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40002D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float secs;

		[Token(Token = "0x40002D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GamePauser2 <>4__this;

		[Token(Token = "0x40002DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <cd>5__2;

		[Token(Token = "0x1700005A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600029F")]
			[Address(RVA = "0xE7D1C4", Offset = "0xE7D1C4", VA = "0xE7D1C4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700005B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60002A1")]
			[Address(RVA = "0xE7D20C", Offset = "0xE7D20C", VA = "0xE7D20C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600029C")]
		[Address(RVA = "0xE7D0B4", Offset = "0xE7D0B4", VA = "0xE7D0B4")]
		[DebuggerHidden]
		public <startStuff>d__27(int <>1__state)
		{
		}

		[Token(Token = "0x600029D")]
		[Address(RVA = "0xE7D0E0", Offset = "0xE7D0E0", VA = "0xE7D0E0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600029E")]
		[Address(RVA = "0xE7D0E4", Offset = "0xE7D0E4", VA = "0xE7D0E4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60002A0")]
		[Address(RVA = "0xE7D1CC", Offset = "0xE7D1CC", VA = "0xE7D1CC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40002C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioSource[] sources;

	[Token(Token = "0x40002C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public PlayableDirector[] timelines;

	[Token(Token = "0x40002C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public MediaPlayer[] movies;

	[Token(Token = "0x40002C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private PlayableDirector theTimeLinePlaying;

	[Token(Token = "0x40002C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private PlayableDirector[] theTimeLinesPlaying;

	[Token(Token = "0x40002C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private MediaPlayer[] theMoviesPlaying;

	[Token(Token = "0x40002C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int timelinecounter;

	[Token(Token = "0x40002C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private int movieCounter;

	[Token(Token = "0x40002C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool[] timeLineIsPlaying;

	[Token(Token = "0x40002CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool[] movieIsPlaying;

	[Token(Token = "0x40002CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float timeScale;

	[Token(Token = "0x40002CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private bool headSetOffOnce;

	[Token(Token = "0x40002CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
	private bool headSetOnOnce;

	[Token(Token = "0x40002CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x66")]
	private bool pauseOnce;

	[Token(Token = "0x40002CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x67")]
	private bool unpauseOnce;

	[Token(Token = "0x40002D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool wornTheFirstTime;

	[Token(Token = "0x40002D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
	private bool gamePaused;

	[Token(Token = "0x40002D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6A")]
	public bool isPaused;

	[Token(Token = "0x40002D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6B")]
	public bool pausedFromFocus;

	[Token(Token = "0x40002D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public bool pausedFromHeadSetRemoved;

	[Token(Token = "0x40002D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6D")]
	public bool onlyPauseOnce;

	[Token(Token = "0x6000294")]
	[Address(RVA = "0x10995FC", Offset = "0x10995FC", VA = "0x10995FC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000295")]
	[Address(RVA = "0x1099920", Offset = "0x1099920", VA = "0x1099920")]
	private void GotANewOneLoaded(Scene scene, LoadSceneMode mode)
	{
	}

	[Token(Token = "0x6000296")]
	[Address(RVA = "0x1099ACC", Offset = "0x1099ACC", VA = "0x1099ACC")]
	private void OnApplicationFocus(bool hasFocus)
	{
	}

	[Token(Token = "0x6000297")]
	[Address(RVA = "0x109A2B8", Offset = "0x109A2B8", VA = "0x109A2B8")]
	private void OnApplicationPause(bool pauseStatus)
	{
	}

	[Token(Token = "0x6000298")]
	[Address(RVA = "0x1099BA0", Offset = "0x1099BA0", VA = "0x1099BA0")]
	public void DoAPauseCheck()
	{
	}

	[Token(Token = "0x6000299")]
	[Address(RVA = "0x109A370", Offset = "0x109A370", VA = "0x109A370")]
	public void onWindowFocusChanged(bool hasFocus)
	{
	}

	[Token(Token = "0x600029A")]
	[Address(RVA = "0x1099898", Offset = "0x1099898", VA = "0x1099898")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8DECB4", Offset = "0x8DECB4")]
	private IEnumerator startStuff(float secs)
	{
		return null;
	}

	[Token(Token = "0x600029B")]
	[Address(RVA = "0x109A640", Offset = "0x109A640", VA = "0x109A640")]
	public GamePauser2()
	{
	}
}
[Token(Token = "0x2000075")]
public class GeneralGrabCheck : MonoBehaviour
{
	[Token(Token = "0x40002DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool hasBeenGrabbed;

	[Token(Token = "0x40002DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int taskNum;

	[Token(Token = "0x40002DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform pogsSetTransform;

	[Token(Token = "0x40002DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject penguin3Collider;

	[Token(Token = "0x40002DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject penguinGrabSphere;

	[Token(Token = "0x60002A2")]
	[Address(RVA = "0x133A670", Offset = "0x133A670", VA = "0x133A670")]
	private void Start()
	{
	}

	[Token(Token = "0x60002A3")]
	[Address(RVA = "0x133A7C4", Offset = "0x133A7C4", VA = "0x133A7C4")]
	private void Update()
	{
	}

	[Token(Token = "0x60002A4")]
	[Address(RVA = "0x133AAAC", Offset = "0x133AAAC", VA = "0x133AAAC")]
	public GeneralGrabCheck()
	{
	}
}
[Token(Token = "0x2000076")]
public class GrabLetter : MonoBehaviour
{
	[Token(Token = "0x40002E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool hasBeenGrabbed;

	[Token(Token = "0x60002A5")]
	[Address(RVA = "0x133B224", Offset = "0x133B224", VA = "0x133B224")]
	private void Update()
	{
	}

	[Token(Token = "0x60002A6")]
	[Address(RVA = "0x133B2F8", Offset = "0x133B2F8", VA = "0x133B2F8")]
	public GrabLetter()
	{
	}
}
[Token(Token = "0x2000077")]
public class GuideGrabCheck : MonoBehaviour
{
	[Token(Token = "0x40002E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool hasBeenGrabbed;

	[Token(Token = "0x60002A7")]
	[Address(RVA = "0x133B5D0", Offset = "0x133B5D0", VA = "0x133B5D0")]
	private void Start()
	{
	}

	[Token(Token = "0x60002A8")]
	[Address(RVA = "0x133B658", Offset = "0x133B658", VA = "0x133B658")]
	private void Update()
	{
	}

	[Token(Token = "0x60002A9")]
	[Address(RVA = "0x133B740", Offset = "0x133B740", VA = "0x133B740")]
	public GuideGrabCheck()
	{
	}
}
[Token(Token = "0x2000078")]
public class GunPickUp : MonoBehaviour
{
	[Token(Token = "0x2000079")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D63F4", Offset = "0x8D63F4")]
	private sealed class <MakeGunHands>d__14 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40002ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40002EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40002EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GunPickUp <>4__this;

		[Token(Token = "0x1700005C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60002B2")]
			[Address(RVA = "0xE7D580", Offset = "0xE7D580", VA = "0xE7D580", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700005D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60002B4")]
			[Address(RVA = "0xE7D5C8", Offset = "0xE7D5C8", VA = "0xE7D5C8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60002AF")]
		[Address(RVA = "0xE7D3D0", Offset = "0xE7D3D0", VA = "0xE7D3D0")]
		[DebuggerHidden]
		public <MakeGunHands>d__14(int <>1__state)
		{
		}

		[Token(Token = "0x60002B0")]
		[Address(RVA = "0xE7D3FC", Offset = "0xE7D3FC", VA = "0xE7D3FC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60002B1")]
		[Address(RVA = "0xE7D400", Offset = "0xE7D400", VA = "0xE7D400", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60002B3")]
		[Address(RVA = "0xE7D588", Offset = "0xE7D588", VA = "0xE7D588", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40002E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject rightHandGun;

	[Token(Token = "0x40002E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject leftHandGun;

	[Token(Token = "0x40002E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject highlight;

	[Token(Token = "0x40002E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject leftHand;

	[Token(Token = "0x40002E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject rightHand;

	[Token(Token = "0x40002E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject gunModel;

	[Token(Token = "0x40002E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform gunPos;

	[Token(Token = "0x40002E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform oculusLeftGunPos;

	[Token(Token = "0x40002EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform ogGunPos;

	[Token(Token = "0x40002EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Transform leftHandGunTop;

	[Token(Token = "0x40002EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public AudioSource gunPickupSound;

	[Token(Token = "0x60002AA")]
	[Address(RVA = "0x133B748", Offset = "0x133B748", VA = "0x133B748")]
	private void Start()
	{
	}

	[Token(Token = "0x60002AB")]
	[Address(RVA = "0x133B74C", Offset = "0x133B74C", VA = "0x133B74C")]
	public void MakeGunHandsYea()
	{
	}

	[Token(Token = "0x60002AC")]
	[Address(RVA = "0x133B7B8", Offset = "0x133B7B8", VA = "0x133B7B8")]
	public void GunPickUpTime()
	{
	}

	[Token(Token = "0x60002AD")]
	[Address(RVA = "0x133B9E0", Offset = "0x133B9E0", VA = "0x133B9E0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8DED64", Offset = "0x8DED64")]
	private IEnumerator MakeGunHands()
	{
		return null;
	}

	[Token(Token = "0x60002AE")]
	[Address(RVA = "0x133BA58", Offset = "0x133BA58", VA = "0x133BA58")]
	public GunPickUp()
	{
	}
}
[Token(Token = "0x200007A")]
public class HintSystem : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200007B")]
	private class PlayerData
	{
		[Token(Token = "0x4000310")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string sceneAtQuit;

		[Token(Token = "0x4000311")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool gameComplete;

		[Token(Token = "0x4000312")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool[] taskComplete;

		[Token(Token = "0x4000313")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int[] gameHighScores;

		[Token(Token = "0x4000314")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int hintTracker;

		[Token(Token = "0x4000315")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public int littleBHighScore;

		[Token(Token = "0x4000316")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool[] pieceTracker;

		[Token(Token = "0x4000317")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool[] tapeTracker;

		[Token(Token = "0x4000318")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool[] hatTracker;

		[Token(Token = "0x4000319")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public bool messageFromNexus;

		[Token(Token = "0x400031A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float versionNumber;

		[Token(Token = "0x400031B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float arcadeVolume;

		[Token(Token = "0x60002C6")]
		[Address(RVA = "0xE7DC70", Offset = "0xE7DC70", VA = "0xE7DC70")]
		public PlayerData()
		{
		}
	}

	[Token(Token = "0x200007C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D6404", Offset = "0x8D6404")]
	private sealed class <WaitToFind>d__49 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400031C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400031D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400031E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HintSystem <>4__this;

		[Token(Token = "0x1700005F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60002CA")]
			[Address(RVA = "0xE7DC20", Offset = "0xE7DC20", VA = "0xE7DC20", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000060")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60002CC")]
			[Address(RVA = "0xE7DC68", Offset = "0xE7DC68", VA = "0xE7DC68", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60002C7")]
		[Address(RVA = "0xE7DB18", Offset = "0xE7DB18", VA = "0xE7DB18")]
		[DebuggerHidden]
		public <WaitToFind>d__49(int <>1__state)
		{
		}

		[Token(Token = "0x60002C8")]
		[Address(RVA = "0xE7DB44", Offset = "0xE7DB44", VA = "0xE7DB44", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60002C9")]
		[Address(RVA = "0xE7DB48", Offset = "0xE7DB48", VA = "0xE7DB48", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60002CB")]
		[Address(RVA = "0xE7DC28", Offset = "0xE7DC28", VA = "0xE7DC28", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40002F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static HintSystem hintSystem;

	[Token(Token = "0x40002F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string deviceType;

	[Token(Token = "0x40002F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool isOculus;

	[Token(Token = "0x40002F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string sceneAtQuit;

	[Token(Token = "0x40002F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string lastScene;

	[Token(Token = "0x40002F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool gameComplete;

	[Token(Token = "0x40002F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public int hintTracker;

	[Token(Token = "0x40002F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool[] taskComplete;

	[Token(Token = "0x40002F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool[] pieceTracker;

	[Token(Token = "0x40002F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool[] tapeTracker;

	[Token(Token = "0x40002FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool[] hatTracker;

	[Token(Token = "0x40002FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public bool foundLastHint;

	[Token(Token = "0x40002FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public int littleBHighScore;

	[Token(Token = "0x40002FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject sceneChanger;

	[Token(Token = "0x40002FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Scene scene;

	[Token(Token = "0x40002FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public string saveFileName;

	[Token(Token = "0x4000300")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public bool knucklesCont;

	[Token(Token = "0x4000301")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x81")]
	public bool wandCont;

	[Token(Token = "0x4000302")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x82")]
	public bool windowsMixedCont;

	[Token(Token = "0x4000303")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GameObject theRenderer;

	[Token(Token = "0x4000304")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D7A7C", Offset = "0x8D7A7C")]
	private static InputDevice <LastUsedDevice>k__BackingField;

	[Token(Token = "0x4000305")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public bool controllerStyleCheck;

	[Token(Token = "0x4000306")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public GameObject controllerSkeletonR;

	[Token(Token = "0x4000307")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public GameObject controllerSkeletonL;

	[Token(Token = "0x4000308")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public bool sceneHasChangedCheckL;

	[Token(Token = "0x4000309")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA9")]
	public bool sceneHasChangedCheckR;

	[Token(Token = "0x400030A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAA")]
	public bool messageFromNexus;

	[Token(Token = "0x400030B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public int[] gameHighScores;

	[Token(Token = "0x400030C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public float arcadeVolume;

	[Token(Token = "0x400030D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	public float versionNumber;

	[Token(Token = "0x400030E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public string nextScene;

	[Token(Token = "0x400030F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public bool saveItDebug;

	[Token(Token = "0x1700005E")]
	public static InputDevice LastUsedDevice
	{
		[Token(Token = "0x60002B5")]
		[Address(RVA = "0x13417E8", Offset = "0x13417E8", VA = "0x13417E8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DEE14", Offset = "0x8DEE14")]
		get
		{
			return default(InputDevice);
		}
		[Token(Token = "0x60002B6")]
		[Address(RVA = "0x1341834", Offset = "0x1341834", VA = "0x1341834")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DEE24", Offset = "0x8DEE24")]
		private set
		{
		}
	}

	[Token(Token = "0x60002B7")]
	[Address(RVA = "0x1341890", Offset = "0x1341890", VA = "0x1341890")]
	private void Awake()
	{
	}

	[Token(Token = "0x60002B8")]
	[Address(RVA = "0x1341F80", Offset = "0x1341F80", VA = "0x1341F80")]
	private void Start()
	{
	}

	[Token(Token = "0x60002B9")]
	[Address(RVA = "0x13420C4", Offset = "0x13420C4", VA = "0x13420C4")]
	private void OnSceneLoaded(Scene sceneIt, LoadSceneMode mode)
	{
	}

	[Token(Token = "0x60002BA")]
	[Address(RVA = "0x13420D0", Offset = "0x13420D0", VA = "0x13420D0")]
	public bool AllHatsWornCheck()
	{
		return default(bool);
	}

	[Token(Token = "0x60002BB")]
	[Address(RVA = "0x1342134", Offset = "0x1342134", VA = "0x1342134")]
	public bool AllTapesPlayedCheck()
	{
		return default(bool);
	}

	[Token(Token = "0x60002BC")]
	[Address(RVA = "0x1342198", Offset = "0x1342198", VA = "0x1342198")]
	public bool AllPiecesInCheck()
	{
		return default(bool);
	}

	[Token(Token = "0x60002BD")]
	[Address(RVA = "0x13421FC", Offset = "0x13421FC", VA = "0x13421FC")]
	public void CheckTasksComplete()
	{
	}

	[Token(Token = "0x60002BE")]
	[Address(RVA = "0x134233C", Offset = "0x134233C", VA = "0x134233C")]
	public void GetTasksComplete()
	{
	}

	[Token(Token = "0x60002BF")]
	[Address(RVA = "0x134239C", Offset = "0x134239C", VA = "0x134239C")]
	public void LoadUpTheGame()
	{
	}

	[Token(Token = "0x60002C0")]
	[Address(RVA = "0x1342478", Offset = "0x1342478", VA = "0x1342478")]
	private void Update()
	{
	}

	[Token(Token = "0x60002C1")]
	[Address(RVA = "0x133A8E8", Offset = "0x133A8E8", VA = "0x133A8E8")]
	public void Save()
	{
	}

	[Token(Token = "0x60002C2")]
	[Address(RVA = "0x134248C", Offset = "0x134248C", VA = "0x134248C")]
	public void Reset()
	{
	}

	[Token(Token = "0x60002C3")]
	[Address(RVA = "0x1341A24", Offset = "0x1341A24", VA = "0x1341A24")]
	public void Load()
	{
	}

	[Token(Token = "0x60002C4")]
	[Address(RVA = "0x134284C", Offset = "0x134284C", VA = "0x134284C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8DEE34", Offset = "0x8DEE34")]
	private IEnumerator WaitToFind()
	{
		return null;
	}

	[Token(Token = "0x60002C5")]
	[Address(RVA = "0x13428C4", Offset = "0x13428C4", VA = "0x13428C4")]
	public HintSystem()
	{
	}
}
[Token(Token = "0x200007D")]
public class IgnoreHoveringOculus : MonoBehaviour
{
	[Token(Token = "0x60002CD")]
	[Address(RVA = "0x1342974", Offset = "0x1342974", VA = "0x1342974")]
	private void Start()
	{
	}

	[Token(Token = "0x60002CE")]
	[Address(RVA = "0x1342978", Offset = "0x1342978", VA = "0x1342978")]
	public IgnoreHoveringOculus()
	{
	}
}
[Token(Token = "0x200007E")]
public class KeyInDoor : MonoBehaviour
{
	[Token(Token = "0x400031F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool keyInDoor;

	[Token(Token = "0x60002CF")]
	[Address(RVA = "0x1344D2C", Offset = "0x1344D2C", VA = "0x1344D2C")]
	private void Start()
	{
	}

	[Token(Token = "0x60002D0")]
	[Address(RVA = "0x1344D30", Offset = "0x1344D30", VA = "0x1344D30")]
	private void Update()
	{
	}

	[Token(Token = "0x60002D1")]
	[Address(RVA = "0x1344D34", Offset = "0x1344D34", VA = "0x1344D34")]
	public KeyInDoor()
	{
	}
}
[Token(Token = "0x200007F")]
public class KeyPadKeypress : MonoBehaviour
{
	[Token(Token = "0x2000080")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D6414", Offset = "0x8D6414")]
	private sealed class <WaitForSound>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000328")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000329")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400032A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public KeyPadKeypress <>4__this;

		[Token(Token = "0x17000061")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60002DA")]
			[Address(RVA = "0xE7E324", Offset = "0xE7E324", VA = "0xE7E324", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000062")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60002DC")]
			[Address(RVA = "0xE7E36C", Offset = "0xE7E36C", VA = "0xE7E36C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60002D7")]
		[Address(RVA = "0xE7E22C", Offset = "0xE7E22C", VA = "0xE7E22C")]
		[DebuggerHidden]
		public <WaitForSound>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x60002D8")]
		[Address(RVA = "0xE7E258", Offset = "0xE7E258", VA = "0xE7E258", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60002D9")]
		[Address(RVA = "0xE7E25C", Offset = "0xE7E25C", VA = "0xE7E25C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60002DB")]
		[Address(RVA = "0xE7E32C", Offset = "0xE7E32C", VA = "0xE7E32C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000320")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject handTouchingButton;

	[Token(Token = "0x4000321")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UnityEvent keyPressed;

	[Token(Token = "0x4000322")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Animator keyPressAnim;

	[Token(Token = "0x4000323")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool canPress;

	[Token(Token = "0x4000324")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	public bool doAnimate;

	[Token(Token = "0x4000325")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float waitTime;

	[Token(Token = "0x4000326")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool arcadeMachine;

	[Token(Token = "0x4000327")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	public bool safe;

	[Token(Token = "0x60002D2")]
	[Address(RVA = "0x1344D3C", Offset = "0x1344D3C", VA = "0x1344D3C")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60002D3")]
	[Address(RVA = "0x1344EEC", Offset = "0x1344EEC", VA = "0x1344EEC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8DEEE4", Offset = "0x8DEEE4")]
	private IEnumerator WaitForSound()
	{
		return null;
	}

	[Token(Token = "0x60002D4")]
	[Address(RVA = "0x1344F64", Offset = "0x1344F64", VA = "0x1344F64")]
	private void Start()
	{
	}

	[Token(Token = "0x60002D5")]
	[Address(RVA = "0x1344F68", Offset = "0x1344F68", VA = "0x1344F68")]
	private void Update()
	{
	}

	[Token(Token = "0x60002D6")]
	[Address(RVA = "0x1344F6C", Offset = "0x1344F6C", VA = "0x1344F6C")]
	public KeyPadKeypress()
	{
	}
}
[Token(Token = "0x2000081")]
public class KeyboardButtonPressManager : MonoBehaviour
{
	[Token(Token = "0x400032B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public CompKeyboardManager compKeyboardManager;

	[Token(Token = "0x60002DD")]
	[Address(RVA = "0x1344F84", Offset = "0x1344F84", VA = "0x1344F84")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x60002DE")]
	[Address(RVA = "0x1345014", Offset = "0x1345014", VA = "0x1345014")]
	private void Start()
	{
	}

	[Token(Token = "0x60002DF")]
	[Address(RVA = "0x1345018", Offset = "0x1345018", VA = "0x1345018")]
	private void Update()
	{
	}

	[Token(Token = "0x60002E0")]
	[Address(RVA = "0x134501C", Offset = "0x134501C", VA = "0x134501C")]
	public KeyboardButtonPressManager()
	{
	}
}
[Token(Token = "0x2000082")]
public class KeyboardKeyPresser : MonoBehaviour
{
	[Token(Token = "0x2000083")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D6424", Offset = "0x8D6424")]
	private sealed class <WaitForSound>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000330")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000331")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000332")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public KeyboardKeyPresser <>4__this;

		[Token(Token = "0x17000063")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60002E9")]
			[Address(RVA = "0xE7E460", Offset = "0xE7E460", VA = "0xE7E460", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000064")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60002EB")]
			[Address(RVA = "0xE7E4A8", Offset = "0xE7E4A8", VA = "0xE7E4A8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60002E6")]
		[Address(RVA = "0xE7E374", Offset = "0xE7E374", VA = "0xE7E374")]
		[DebuggerHidden]
		public <WaitForSound>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x60002E7")]
		[Address(RVA = "0xE7E3A0", Offset = "0xE7E3A0", VA = "0xE7E3A0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60002E8")]
		[Address(RVA = "0xE7E3A4", Offset = "0xE7E3A4", VA = "0xE7E3A4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60002EA")]
		[Address(RVA = "0xE7E468", Offset = "0xE7E468", VA = "0xE7E468", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400032C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject handTouchingButton;

	[Token(Token = "0x400032D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UnityEvent keyPressed;

	[Token(Token = "0x400032E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Animator keyPressAnim;

	[Token(Token = "0x400032F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool canPress;

	[Token(Token = "0x60002E1")]
	[Address(RVA = "0x1345024", Offset = "0x1345024", VA = "0x1345024")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60002E2")]
	[Address(RVA = "0x134518C", Offset = "0x134518C", VA = "0x134518C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8DEF94", Offset = "0x8DEF94")]
	private IEnumerator WaitForSound()
	{
		return null;
	}

	[Token(Token = "0x60002E3")]
	[Address(RVA = "0x1345204", Offset = "0x1345204", VA = "0x1345204")]
	private void Start()
	{
	}

	[Token(Token = "0x60002E4")]
	[Address(RVA = "0x1345208", Offset = "0x1345208", VA = "0x1345208")]
	private void Update()
	{
	}

	[Token(Token = "0x60002E5")]
	[Address(RVA = "0x134520C", Offset = "0x134520C", VA = "0x134520C")]
	public KeyboardKeyPresser()
	{
	}
}
[Token(Token = "0x2000084")]
public class KeypadManager : MonoBehaviour
{
	[Token(Token = "0x2000085")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D6434", Offset = "0x8D6434")]
	private sealed class <WaitToChange>d__40 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400034E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400034F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000350")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public KeypadManager <>4__this;

		[Token(Token = "0x17000065")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000300")]
			[Address(RVA = "0xE7E5D8", Offset = "0xE7E5D8", VA = "0xE7E5D8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000066")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000302")]
			[Address(RVA = "0xE7E620", Offset = "0xE7E620", VA = "0xE7E620", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60002FD")]
		[Address(RVA = "0xE7E4B0", Offset = "0xE7E4B0", VA = "0xE7E4B0")]
		[DebuggerHidden]
		public <WaitToChange>d__40(int <>1__state)
		{
		}

		[Token(Token = "0x60002FE")]
		[Address(RVA = "0xE7E4DC", Offset = "0xE7E4DC", VA = "0xE7E4DC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60002FF")]
		[Address(RVA = "0xE7E4E0", Offset = "0xE7E4E0", VA = "0xE7E4E0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000301")]
		[Address(RVA = "0xE7E5E0", Offset = "0xE7E5E0", VA = "0xE7E5E0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000333")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string keyPadCode;

	[Token(Token = "0x4000334")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string keyPadCode2;

	[Token(Token = "0x4000335")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string codeEntered;

	[Token(Token = "0x4000336")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool doorOpen;

	[Token(Token = "0x4000337")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string tempString;

	[Token(Token = "0x4000338")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject doorToOpen;

	[Token(Token = "0x4000339")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AudioSource unlockIt;

	[Token(Token = "0x400033A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AudioSource lockIt;

	[Token(Token = "0x400033B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject doorCollider;

	[Token(Token = "0x400033C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public bool isASafe;

	[Token(Token = "0x400033D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
	public bool officLocker;

	[Token(Token = "0x400033E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject lockerHeadFade;

	[Token(Token = "0x400033F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject[] objectsInside;

	[Token(Token = "0x4000340")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject[] objectsInsideRigidBody;

	[Token(Token = "0x4000341")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public bool isOfficeDoor;

	[Token(Token = "0x4000342")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x81")]
	public bool changeSceneBool;

	[Token(Token = "0x4000343")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GameObject changeScene;

	[Token(Token = "0x4000344")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public bool isEndOfGame;

	[Token(Token = "0x4000345")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x91")]
	public bool isOfficeOffice;

	[Token(Token = "0x4000346")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x92")]
	public bool isIntoBreakRoom;

	[Token(Token = "0x4000347")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x93")]
	public bool isIntoCloset;

	[Token(Token = "0x4000348")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public GameObject teleportGrid;

	[Token(Token = "0x4000349")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public int codeLength;

	[Token(Token = "0x400034A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Transform pogsSetTransform;

	[Token(Token = "0x400034B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Transform noteSetTransform;

	[Token(Token = "0x400034C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public GameObject headFadeCube;

	[Token(Token = "0x400034D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public GameObject teleportPreventionCube;

	[Token(Token = "0x60002EC")]
	[Address(RVA = "0x134521C", Offset = "0x134521C", VA = "0x134521C")]
	public void onePressed()
	{
	}

	[Token(Token = "0x60002ED")]
	[Address(RVA = "0x13459BC", Offset = "0x13459BC", VA = "0x13459BC")]
	public void twoPressed()
	{
	}

	[Token(Token = "0x60002EE")]
	[Address(RVA = "0x1345AB8", Offset = "0x1345AB8", VA = "0x1345AB8")]
	public void threePressed()
	{
	}

	[Token(Token = "0x60002EF")]
	[Address(RVA = "0x1345BB4", Offset = "0x1345BB4", VA = "0x1345BB4")]
	public void fourPressed()
	{
	}

	[Token(Token = "0x60002F0")]
	[Address(RVA = "0x1345CB0", Offset = "0x1345CB0", VA = "0x1345CB0")]
	public void fivePressed()
	{
	}

	[Token(Token = "0x60002F1")]
	[Address(RVA = "0x1345DAC", Offset = "0x1345DAC", VA = "0x1345DAC")]
	public void sixPressed()
	{
	}

	[Token(Token = "0x60002F2")]
	[Address(RVA = "0x1345EA8", Offset = "0x1345EA8", VA = "0x1345EA8")]
	public void sevenPressed()
	{
	}

	[Token(Token = "0x60002F3")]
	[Address(RVA = "0x1345FA4", Offset = "0x1345FA4", VA = "0x1345FA4")]
	public void eightPressed()
	{
	}

	[Token(Token = "0x60002F4")]
	[Address(RVA = "0x13460A0", Offset = "0x13460A0", VA = "0x13460A0")]
	public void ninePressed()
	{
	}

	[Token(Token = "0x60002F5")]
	[Address(RVA = "0x134619C", Offset = "0x134619C", VA = "0x134619C")]
	public void zeroPressed()
	{
	}

	[Token(Token = "0x60002F6")]
	[Address(RVA = "0x1346298", Offset = "0x1346298", VA = "0x1346298")]
	public void redPressed()
	{
	}

	[Token(Token = "0x60002F7")]
	[Address(RVA = "0x1345318", Offset = "0x1345318", VA = "0x1345318")]
	public void greenPressed()
	{
	}

	[Token(Token = "0x60002F8")]
	[Address(RVA = "0x1346360", Offset = "0x1346360", VA = "0x1346360")]
	public void lockDoorOnClose()
	{
	}

	[Token(Token = "0x60002F9")]
	[Address(RVA = "0x13462E8", Offset = "0x13462E8", VA = "0x13462E8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8DF044", Offset = "0x8DF044")]
	private IEnumerator WaitToChange()
	{
		return null;
	}

	[Token(Token = "0x60002FA")]
	[Address(RVA = "0x134643C", Offset = "0x134643C", VA = "0x134643C")]
	private void Start()
	{
	}

	[Token(Token = "0x60002FB")]
	[Address(RVA = "0x13468C0", Offset = "0x13468C0", VA = "0x13468C0")]
	private void Update()
	{
	}

	[Token(Token = "0x60002FC")]
	[Address(RVA = "0x13468C4", Offset = "0x13468C4", VA = "0x13468C4")]
	public KeypadManager()
	{
	}
}
[Token(Token = "0x2000086")]
public class LightsManager : MonoBehaviour
{
	[Token(Token = "0x2000087")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D6444", Offset = "0x8D6444")]
	private sealed class <OneLightFlickerRoutine>d__36 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400036D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400036E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400036F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LightsManager <>4__this;

		[Token(Token = "0x17000067")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000315")]
			[Address(RVA = "0xE7EC84", Offset = "0xE7EC84", VA = "0xE7EC84", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000068")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000317")]
			[Address(RVA = "0xE7ECCC", Offset = "0xE7ECCC", VA = "0xE7ECCC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000312")]
		[Address(RVA = "0xE7EB94", Offset = "0xE7EB94", VA = "0xE7EB94")]
		[DebuggerHidden]
		public <OneLightFlickerRoutine>d__36(int <>1__state)
		{
		}

		[Token(Token = "0x6000313")]
		[Address(RVA = "0xE7EBC0", Offset = "0xE7EBC0", VA = "0xE7EBC0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000314")]
		[Address(RVA = "0xE7EBC4", Offset = "0xE7EBC4", VA = "0xE7EBC4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000316")]
		[Address(RVA = "0xE7EC8C", Offset = "0xE7EC8C", VA = "0xE7EC8C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000088")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D6454", Offset = "0x8D6454")]
	private sealed class <LightFlickerRoutine>d__37 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000370")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000371")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000372")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LightsManager <>4__this;

		[Token(Token = "0x17000069")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600031B")]
			[Address(RVA = "0xE7E7A8", Offset = "0xE7E7A8", VA = "0xE7E7A8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700006A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600031D")]
			[Address(RVA = "0xE7E7F0", Offset = "0xE7E7F0", VA = "0xE7E7F0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000318")]
		[Address(RVA = "0xE7E628", Offset = "0xE7E628", VA = "0xE7E628")]
		[DebuggerHidden]
		public <LightFlickerRoutine>d__37(int <>1__state)
		{
		}

		[Token(Token = "0x6000319")]
		[Address(RVA = "0xE7E654", Offset = "0xE7E654", VA = "0xE7E654", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600031A")]
		[Address(RVA = "0xE7E658", Offset = "0xE7E658", VA = "0xE7E658", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600031C")]
		[Address(RVA = "0xE7E7B0", Offset = "0xE7E7B0", VA = "0xE7E7B0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000089")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D6464", Offset = "0x8D6464")]
	private sealed class <LightsToTheBeat>d__40 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000373")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000374")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000375")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LightsManager <>4__this;

		[Token(Token = "0x1700006B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000321")]
			[Address(RVA = "0xE7EB44", Offset = "0xE7EB44", VA = "0xE7EB44", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700006C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000323")]
			[Address(RVA = "0xE7EB8C", Offset = "0xE7EB8C", VA = "0xE7EB8C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600031E")]
		[Address(RVA = "0xE7E7F8", Offset = "0xE7E7F8", VA = "0xE7E7F8")]
		[DebuggerHidden]
		public <LightsToTheBeat>d__40(int <>1__state)
		{
		}

		[Token(Token = "0x600031F")]
		[Address(RVA = "0xE7E824", Offset = "0xE7E824", VA = "0xE7E824", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000320")]
		[Address(RVA = "0xE7E828", Offset = "0xE7E828", VA = "0xE7E828", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000322")]
		[Address(RVA = "0xE7EB4C", Offset = "0xE7EB4C", VA = "0xE7EB4C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000351")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] lights;

	[Token(Token = "0x4000352")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float[] ogLightValues;

	[Token(Token = "0x4000353")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float[] smoothing;

	[Token(Token = "0x4000354")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool flickerLights;

	[Token(Token = "0x4000355")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	public bool lightsOn;

	[Token(Token = "0x4000356")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
	public bool doLightsOnce;

	[Token(Token = "0x4000357")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x33")]
	public bool flickOffOnce;

	[Token(Token = "0x4000358")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float lightOffLength;

	[Token(Token = "0x4000359")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool alwaysTrue;

	[Token(Token = "0x400035A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Coroutine lightyRoutine;

	[Token(Token = "0x400035B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool robuttRapGoing;

	[Token(Token = "0x400035C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Light spotLight1;

	[Token(Token = "0x400035D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Light spotLight2;

	[Token(Token = "0x400035E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Light spotLight3;

	[Token(Token = "0x400035F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Light spotLight4;

	[Token(Token = "0x4000360")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Material lightMat1;

	[Token(Token = "0x4000361")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Material lightMat2;

	[Token(Token = "0x4000362")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Material lightMat3;

	[Token(Token = "0x4000363")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Material lightMat4;

	[Token(Token = "0x4000364")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Material lightBulb;

	[Token(Token = "0x4000365")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public GameObject phone;

	[Token(Token = "0x4000366")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public GameObject laptop;

	[Token(Token = "0x4000367")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public GameObject fan;

	[Token(Token = "0x4000368")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public int colorPick;

	[Token(Token = "0x4000369")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	public Color pickedColor;

	[Token(Token = "0x400036A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	public int lastPickedColor;

	[Token(Token = "0x400036B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public bool pickedALight;

	[Token(Token = "0x400036C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public int[] lastColorPicked;

	[Token(Token = "0x6000303")]
	[Address(RVA = "0x13473EC", Offset = "0x13473EC", VA = "0x13473EC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000304")]
	[Address(RVA = "0x13475E0", Offset = "0x13475E0", VA = "0x13475E0")]
	public void RestoreOgLightValues()
	{
	}

	[Token(Token = "0x6000305")]
	[Address(RVA = "0x1347730", Offset = "0x1347730", VA = "0x1347730")]
	public void GoodByeLights()
	{
	}

	[Token(Token = "0x6000306")]
	[Address(RVA = "0x13478A0", Offset = "0x13478A0", VA = "0x13478A0")]
	private void OnApplicationQuit()
	{
	}

	[Token(Token = "0x6000307")]
	[Address(RVA = "0x13478A4", Offset = "0x13478A4", VA = "0x13478A4")]
	public void StartLightFlicker()
	{
	}

	[Token(Token = "0x6000308")]
	[Address(RVA = "0x1347958", Offset = "0x1347958", VA = "0x1347958")]
	public void StartLightToBeat()
	{
	}

	[Token(Token = "0x6000309")]
	[Address(RVA = "0x1347A0C", Offset = "0x1347A0C", VA = "0x1347A0C")]
	public void StopLightFlicker()
	{
	}

	[Token(Token = "0x600030A")]
	[Address(RVA = "0x1347A18", Offset = "0x1347A18", VA = "0x1347A18")]
	public void oneFlicker()
	{
	}

	[Token(Token = "0x600030B")]
	[Address(RVA = "0x1347A44", Offset = "0x1347A44", VA = "0x1347A44")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8DF0F4", Offset = "0x8DF0F4")]
	private IEnumerator OneLightFlickerRoutine()
	{
		return null;
	}

	[Token(Token = "0x600030C")]
	[Address(RVA = "0x13478E0", Offset = "0x13478E0", VA = "0x13478E0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8DF154", Offset = "0x8DF154")]
	private IEnumerator LightFlickerRoutine()
	{
		return null;
	}

	[Token(Token = "0x600030D")]
	[Address(RVA = "0x1347ABC", Offset = "0x1347ABC", VA = "0x1347ABC")]
	public void ChoseAColor(int lastPicked)
	{
	}

	[Token(Token = "0x600030E")]
	[Address(RVA = "0x1347BFC", Offset = "0x1347BFC", VA = "0x1347BFC")]
	public int ChoseAColorNotRandom(int lastPicked)
	{
		return default(int);
	}

	[Token(Token = "0x600030F")]
	[Address(RVA = "0x1347994", Offset = "0x1347994", VA = "0x1347994")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8DF1B4", Offset = "0x8DF1B4")]
	private IEnumerator LightsToTheBeat()
	{
		return null;
	}

	[Token(Token = "0x6000310")]
	[Address(RVA = "0x1347C98", Offset = "0x1347C98", VA = "0x1347C98")]
	private void Update()
	{
	}

	[Token(Token = "0x6000311")]
	[Address(RVA = "0x1347E4C", Offset = "0x1347E4C", VA = "0x1347E4C")]
	public LightsManager()
	{
	}
}
[Token(Token = "0x200008A")]
public class LocalizeEmissive : MonoBehaviour
{
	[Token(Token = "0x4000376")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material emissiveMat;

	[Token(Token = "0x4000377")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Texture englishTexture;

	[Token(Token = "0x4000378")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Texture chineseTexture;

	[Token(Token = "0x4000379")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Texture spanishTexture;

	[Token(Token = "0x400037A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Texture frenchTexture;

	[Token(Token = "0x400037B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Texture germanTexture;

	[Token(Token = "0x400037C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Texture italianTexture;

	[Token(Token = "0x400037D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Texture japaneseTexture;

	[Token(Token = "0x400037E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Texture koreanTexture;

	[Token(Token = "0x6000324")]
	[Address(RVA = "0x1348240", Offset = "0x1348240", VA = "0x1348240")]
	public void ChangeEmissiveTexture()
	{
	}

	[Token(Token = "0x6000325")]
	[Address(RVA = "0x1348A30", Offset = "0x1348A30", VA = "0x1348A30")]
	public LocalizeEmissive()
	{
	}
}
[Token(Token = "0x200008B")]
public class LockToPoint : MonoBehaviour
{
	[Token(Token = "0x200008C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D6474", Offset = "0x8D6474")]
	private sealed class <ScaleDownAnimation>d__14 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400038A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400038B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400038C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float time;

		[Token(Token = "0x400038D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public LockToPoint <>4__this;

		[Token(Token = "0x400038E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <i>5__2;

		[Token(Token = "0x400038F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <rate>5__3;

		[Token(Token = "0x4000390")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3 <toScale>5__4;

		[Token(Token = "0x1700006D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600032F")]
			[Address(RVA = "0xE7EEC0", Offset = "0xE7EEC0", VA = "0xE7EEC0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700006E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000331")]
			[Address(RVA = "0xE7EF08", Offset = "0xE7EF08", VA = "0xE7EF08", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600032C")]
		[Address(RVA = "0xE7ECD4", Offset = "0xE7ECD4", VA = "0xE7ECD4")]
		[DebuggerHidden]
		public <ScaleDownAnimation>d__14(int <>1__state)
		{
		}

		[Token(Token = "0x600032D")]
		[Address(RVA = "0xE7ED00", Offset = "0xE7ED00", VA = "0xE7ED00", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600032E")]
		[Address(RVA = "0xE7ED04", Offset = "0xE7ED04", VA = "0xE7ED04", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000330")]
		[Address(RVA = "0xE7EEC8", Offset = "0xE7EEC8", VA = "0xE7EEC8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200008D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D6484", Offset = "0x8D6484")]
	private sealed class <ScaleUpAnimation>d__15 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000391")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000392")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000393")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float time;

		[Token(Token = "0x4000394")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public LockToPoint <>4__this;

		[Token(Token = "0x4000395")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <i>5__2;

		[Token(Token = "0x4000396")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <rate>5__3;

		[Token(Token = "0x4000397")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3 <toScale>5__4;

		[Token(Token = "0x1700006F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000335")]
			[Address(RVA = "0xE7F0FC", Offset = "0xE7F0FC", VA = "0xE7F0FC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000070")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000337")]
			[Address(RVA = "0xE7F144", Offset = "0xE7F144", VA = "0xE7F144", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000332")]
		[Address(RVA = "0xE7EF10", Offset = "0xE7EF10", VA = "0xE7EF10")]
		[DebuggerHidden]
		public <ScaleUpAnimation>d__15(int <>1__state)
		{
		}

		[Token(Token = "0x6000333")]
		[Address(RVA = "0xE7EF3C", Offset = "0xE7EF3C", VA = "0xE7EF3C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000334")]
		[Address(RVA = "0xE7EF40", Offset = "0xE7EF40", VA = "0xE7EF40", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000336")]
		[Address(RVA = "0xE7F104", Offset = "0xE7F104", VA = "0xE7F104", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400037F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform snapTo;

	[Token(Token = "0x4000380")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Rigidbody body;

	[Token(Token = "0x4000381")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float snapTime;

	[Token(Token = "0x4000382")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float dropTimer;

	[Token(Token = "0x4000383")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private PVRGrabbable interactable;

	[Token(Token = "0x4000384")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool isFloatBack;

	[Token(Token = "0x4000385")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	public bool notActive;

	[Token(Token = "0x4000386")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ParticleSystem particleSystem;

	[Token(Token = "0x4000387")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Vector3 fromScale;

	[Token(Token = "0x4000388")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public bool outsideOfArea;

	[Token(Token = "0x4000389")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
	public bool isAirHockey;

	[Token(Token = "0x6000326")]
	[Address(RVA = "0x1348A38", Offset = "0x1348A38", VA = "0x1348A38")]
	private void Start()
	{
	}

	[Token(Token = "0x6000327")]
	[Address(RVA = "0x1348B40", Offset = "0x1348B40", VA = "0x1348B40")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000328")]
	[Address(RVA = "0x1348FE0", Offset = "0x1348FE0", VA = "0x1348FE0")]
	public void HaveBallFlyBack()
	{
	}

	[Token(Token = "0x6000329")]
	[Address(RVA = "0x13490B4", Offset = "0x13490B4", VA = "0x13490B4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8DF304", Offset = "0x8DF304")]
	public IEnumerator ScaleDownAnimation(float time)
	{
		return null;
	}

	[Token(Token = "0x600032A")]
	[Address(RVA = "0x134913C", Offset = "0x134913C", VA = "0x134913C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8DF364", Offset = "0x8DF364")]
	public IEnumerator ScaleUpAnimation(float time)
	{
		return null;
	}

	[Token(Token = "0x600032B")]
	[Address(RVA = "0x13491C4", Offset = "0x13491C4", VA = "0x13491C4")]
	public LockToPoint()
	{
	}
}
[Token(Token = "0x200008E")]
public class LockToPoint2 : MonoBehaviour
{
	[Token(Token = "0x200008F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D6494", Offset = "0x8D6494")]
	private sealed class <WaitToStart>d__15 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40003A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40003A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40003A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LockToPoint2 <>4__this;

		[Token(Token = "0x17000071")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000340")]
			[Address(RVA = "0xE7F388", Offset = "0xE7F388", VA = "0xE7F388", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000072")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000342")]
			[Address(RVA = "0xE7F3D0", Offset = "0xE7F3D0", VA = "0xE7F3D0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600033D")]
		[Address(RVA = "0xE7F14C", Offset = "0xE7F14C", VA = "0xE7F14C")]
		[DebuggerHidden]
		public <WaitToStart>d__15(int <>1__state)
		{
		}

		[Token(Token = "0x600033E")]
		[Address(RVA = "0xE7F178", Offset = "0xE7F178", VA = "0xE7F178", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600033F")]
		[Address(RVA = "0xE7F17C", Offset = "0xE7F17C", VA = "0xE7F17C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000341")]
		[Address(RVA = "0xE7F390", Offset = "0xE7F390", VA = "0xE7F390", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000398")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform snapTo;

	[Token(Token = "0x4000399")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Rigidbody body;

	[Token(Token = "0x400039A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float snapTime;

	[Token(Token = "0x400039B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float dropTimer;

	[Token(Token = "0x400039C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private PVRGrabbable interactable;

	[Token(Token = "0x400039D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool notActive;

	[Token(Token = "0x400039E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	public bool isAPog;

	[Token(Token = "0x400039F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
	public bool hoverTime;

	[Token(Token = "0x40003A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float degreesPerSecond;

	[Token(Token = "0x40003A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float amplitude;

	[Token(Token = "0x40003A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float frequency;

	[Token(Token = "0x40003A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Vector3 posOffset;

	[Token(Token = "0x40003A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private Vector3 tempPos;

	[Token(Token = "0x6000338")]
	[Address(RVA = "0x13491D4", Offset = "0x13491D4", VA = "0x13491D4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000339")]
	[Address(RVA = "0x134929C", Offset = "0x134929C", VA = "0x134929C")]
	public void DropTheStuff()
	{
	}

	[Token(Token = "0x600033A")]
	[Address(RVA = "0x13492C8", Offset = "0x13492C8", VA = "0x13492C8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8DF464", Offset = "0x8DF464")]
	public IEnumerator WaitToStart()
	{
		return null;
	}

	[Token(Token = "0x600033B")]
	[Address(RVA = "0x1349340", Offset = "0x1349340", VA = "0x1349340")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x600033C")]
	[Address(RVA = "0x134974C", Offset = "0x134974C", VA = "0x134974C")]
	public LockToPoint2()
	{
	}
}
[Token(Token = "0x2000090")]
public class LocomotionManager : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000091")]
	private class PlayerData
	{
		[Token(Token = "0x40003B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float arcadeVolume;

		[Token(Token = "0x40003B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float versionNumber;

		[Token(Token = "0x40003B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool smoothLocomotion;

		[Token(Token = "0x40003B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool smoothLeft;

		[Token(Token = "0x40003B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float maxTurnSpeed;

		[Token(Token = "0x40003BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float maxLocoSpeed;

		[Token(Token = "0x40003BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float snapDegrees;

		[Token(Token = "0x40003BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool smoothTurning;

		[Token(Token = "0x40003BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string selectedLocal;

		[Token(Token = "0x40003BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool englishSubtitle;

		[Token(Token = "0x600034A")]
		[Address(RVA = "0xE7F704", Offset = "0xE7F704", VA = "0xE7F704")]
		public PlayerData()
		{
		}
	}

	[Token(Token = "0x2000092")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D64A4", Offset = "0x8D64A4")]
	private sealed class <WaitToLoadLanguage>d__18 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40003BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40003C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x17000073")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600034E")]
			[Address(RVA = "0xE7F6B4", Offset = "0xE7F6B4", VA = "0xE7F6B4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000074")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000350")]
			[Address(RVA = "0xE7F6FC", Offset = "0xE7F6FC", VA = "0xE7F6FC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600034B")]
		[Address(RVA = "0xE7F5B8", Offset = "0xE7F5B8", VA = "0xE7F5B8")]
		[DebuggerHidden]
		public <WaitToLoadLanguage>d__18(int <>1__state)
		{
		}

		[Token(Token = "0x600034C")]
		[Address(RVA = "0xE7F5E4", Offset = "0xE7F5E4", VA = "0xE7F5E4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600034D")]
		[Address(RVA = "0xE7F5E8", Offset = "0xE7F5E8", VA = "0xE7F5E8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600034F")]
		[Address(RVA = "0xE7F6BC", Offset = "0xE7F6BC", VA = "0xE7F6BC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40003A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static LocomotionManager locomotionManager;

	[Token(Token = "0x40003A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string saveFileName;

	[Token(Token = "0x40003AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float arcadeVolume;

	[Token(Token = "0x40003AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float versionNumber;

	[Token(Token = "0x40003AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool smoothLocomotion;

	[Token(Token = "0x40003AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool smoothLeft;

	[Token(Token = "0x40003AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
	public bool smoothTurning;

	[Token(Token = "0x40003AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float maxTurnSpeed;

	[Token(Token = "0x40003B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float maxLocoSpeed;

	[Token(Token = "0x40003B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float snapDegrees;

	[Token(Token = "0x40003B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string selectedLocal;

	[Token(Token = "0x40003B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool englishSubtitle;

	[Token(Token = "0x40003B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	public bool saveItDebug;

	[Token(Token = "0x6000343")]
	[Address(RVA = "0x1349DE0", Offset = "0x1349DE0", VA = "0x1349DE0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000344")]
	[Address(RVA = "0x1349F4C", Offset = "0x1349F4C", VA = "0x1349F4C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000345")]
	[Address(RVA = "0x1349FD4", Offset = "0x1349FD4", VA = "0x1349FD4")]
	public void Update()
	{
	}

	[Token(Token = "0x6000346")]
	[Address(RVA = "0x1349FE8", Offset = "0x1349FE8", VA = "0x1349FE8")]
	public void Save()
	{
	}

	[Token(Token = "0x6000347")]
	[Address(RVA = "0x134A120", Offset = "0x134A120", VA = "0x134A120")]
	public void Load()
	{
	}

	[Token(Token = "0x6000348")]
	[Address(RVA = "0x1349F78", Offset = "0x1349F78", VA = "0x1349F78")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8DF514", Offset = "0x8DF514")]
	private IEnumerator WaitToLoadLanguage()
	{
		return null;
	}

	[Token(Token = "0x6000349")]
	[Address(RVA = "0x134B1F0", Offset = "0x134B1F0", VA = "0x134B1F0")]
	public LocomotionManager()
	{
	}
}
[Token(Token = "0x2000093")]
public class LocomotionSetup : MonoBehaviour
{
	[Token(Token = "0x40003C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject snapTurn;

	[Token(Token = "0x40003C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject movePlayer;

	[Token(Token = "0x40003C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject teleport;

	[Token(Token = "0x6000351")]
	[Address(RVA = "0x134BD2C", Offset = "0x134BD2C", VA = "0x134BD2C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000352")]
	[Address(RVA = "0x134C034", Offset = "0x134C034", VA = "0x134C034")]
	private void Update()
	{
	}

	[Token(Token = "0x6000353")]
	[Address(RVA = "0x134C038", Offset = "0x134C038", VA = "0x134C038")]
	public LocomotionSetup()
	{
	}
}
[Token(Token = "0x2000094")]
public class MachineFader : MonoBehaviour
{
	[Token(Token = "0x2000095")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D64B4", Offset = "0x8D64B4")]
	private sealed class <Fade>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40003C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40003C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40003C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MachineFader <>4__this;

		[Token(Token = "0x40003C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Color <initialColor>5__2;

		[Token(Token = "0x40003CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Color <targetColor>5__3;

		[Token(Token = "0x40003CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Color <initialColor2>5__4;

		[Token(Token = "0x40003CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Color <targetColor2>5__5;

		[Token(Token = "0x40003CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float <elapsedTime>5__6;

		[Token(Token = "0x17000075")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600035D")]
			[Address(RVA = "0xE80640", Offset = "0xE80640", VA = "0xE80640", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000076")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600035F")]
			[Address(RVA = "0xE80688", Offset = "0xE80688", VA = "0xE80688", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600035A")]
		[Address(RVA = "0xE80408", Offset = "0xE80408", VA = "0xE80408")]
		[DebuggerHidden]
		public <Fade>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x600035B")]
		[Address(RVA = "0xE80434", Offset = "0xE80434", VA = "0xE80434", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600035C")]
		[Address(RVA = "0xE80438", Offset = "0xE80438", VA = "0xE80438", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600035E")]
		[Address(RVA = "0xE80648", Offset = "0xE80648", VA = "0xE80648", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40003C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material cabMat1;

	[Token(Token = "0x40003C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material cabMat1screen;

	[Token(Token = "0x6000354")]
	[Address(RVA = "0x1351F64", Offset = "0x1351F64", VA = "0x1351F64")]
	private void Start()
	{
	}

	[Token(Token = "0x6000355")]
	[Address(RVA = "0x1351F68", Offset = "0x1351F68", VA = "0x1351F68")]
	private void Update()
	{
	}

	[Token(Token = "0x6000356")]
	[Address(RVA = "0x1351F6C", Offset = "0x1351F6C", VA = "0x1351F6C")]
	public void FadeTheCab()
	{
	}

	[Token(Token = "0x6000357")]
	[Address(RVA = "0x1351F98", Offset = "0x1351F98", VA = "0x1351F98")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8DF5C4", Offset = "0x8DF5C4")]
	public IEnumerator Fade()
	{
		return null;
	}

	[Token(Token = "0x6000358")]
	[Address(RVA = "0x1352010", Offset = "0x1352010", VA = "0x1352010")]
	private void OnApplicationQuit()
	{
	}

	[Token(Token = "0x6000359")]
	[Address(RVA = "0x13520B0", Offset = "0x13520B0", VA = "0x13520B0")]
	public MachineFader()
	{
	}
}
[Token(Token = "0x2000096")]
public static class TransformExtensions
{
	[Token(Token = "0x6000360")]
	[Address(RVA = "0x12E6590", Offset = "0x12E6590", VA = "0x12E6590")]
	public static bool IsVisibleFrom(this Transform transform, Camera camera)
	{
		return default(bool);
	}
}
[Token(Token = "0x2000097")]
public class MLPForceNoProbes : MonoBehaviour
{
	[Token(Token = "0x6000361")]
	[Address(RVA = "0x135154C", Offset = "0x135154C", VA = "0x135154C")]
	public MLPForceNoProbes()
	{
	}
}
[Token(Token = "0x2000098")]
public class MLPForceSaveProbes : MonoBehaviour
{
	[Token(Token = "0x6000362")]
	[Address(RVA = "0x1351554", Offset = "0x1351554", VA = "0x1351554")]
	public MLPForceSaveProbes()
	{
	}
}
[Token(Token = "0x2000099")]
public class MakeItBlink : MonoBehaviour
{
	[Token(Token = "0x200009A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D64D4", Offset = "0x8D64D4")]
	private sealed class <DoTheFlash>d__1 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40003CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40003D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40003D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MakeItBlink <>4__this;

		[Token(Token = "0x17000077")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000369")]
			[Address(RVA = "0xE8082C", Offset = "0xE8082C", VA = "0xE8082C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000078")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600036B")]
			[Address(RVA = "0xE80874", Offset = "0xE80874", VA = "0xE80874", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000366")]
		[Address(RVA = "0xE806FC", Offset = "0xE806FC", VA = "0xE806FC")]
		[DebuggerHidden]
		public <DoTheFlash>d__1(int <>1__state)
		{
		}

		[Token(Token = "0x6000367")]
		[Address(RVA = "0xE80728", Offset = "0xE80728", VA = "0xE80728", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000368")]
		[Address(RVA = "0xE8072C", Offset = "0xE8072C", VA = "0xE8072C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600036A")]
		[Address(RVA = "0xE80834", Offset = "0xE80834", VA = "0xE80834", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40003CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool flashText;

	[Token(Token = "0x6000363")]
	[Address(RVA = "0x1352C28", Offset = "0x1352C28", VA = "0x1352C28")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8DF684", Offset = "0x8DF684")]
	public IEnumerator DoTheFlash()
	{
		return null;
	}

	[Token(Token = "0x6000364")]
	[Address(RVA = "0x1352CA0", Offset = "0x1352CA0", VA = "0x1352CA0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000365")]
	[Address(RVA = "0x1352CCC", Offset = "0x1352CCC", VA = "0x1352CCC")]
	public MakeItBlink()
	{
	}
}
[Token(Token = "0x200009B")]
public class BakeTexturesAtRuntime : MonoBehaviour
{
	[Token(Token = "0x40003D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject target;

	[Token(Token = "0x40003D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float elapsedTime;

	[Token(Token = "0x40003D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private MB3_TextureCombiner.CreateAtlasesCoroutineResult result;

	[Token(Token = "0x600036C")]
	[Address(RVA = "0x12EEC64", Offset = "0x12EEC64", VA = "0x12EEC64")]
	public string GetShaderNameForPipeline()
	{
		return null;
	}

	[Token(Token = "0x600036D")]
	[Address(RVA = "0x12EECF4", Offset = "0x12EECF4", VA = "0x12EECF4")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x600036E")]
	[Address(RVA = "0x12EF2D0", Offset = "0x12EF2D0", VA = "0x12EF2D0")]
	private void OnBuiltAtlasesSuccess()
	{
	}

	[Token(Token = "0x600036F")]
	[Address(RVA = "0x12EF4D8", Offset = "0x12EF4D8", VA = "0x12EF4D8")]
	public BakeTexturesAtRuntime()
	{
	}
}
[Token(Token = "0x200009C")]
public class MB_BatchPrepareObjectsForDynamicBatchingDescription : MonoBehaviour
{
	[Token(Token = "0x6000370")]
	[Address(RVA = "0x134DC3C", Offset = "0x134DC3C", VA = "0x134DC3C")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000371")]
	[Address(RVA = "0x134DD1C", Offset = "0x134DD1C", VA = "0x134DD1C")]
	public MB_BatchPrepareObjectsForDynamicBatchingDescription()
	{
	}
}
[Token(Token = "0x200009D")]
public class MB_SwapShirts : MonoBehaviour
{
	[Token(Token = "0x40003D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MB3_MeshBaker meshBaker;

	[Token(Token = "0x40003D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Renderer[] clothingAndBodyPartsBareTorso;

	[Token(Token = "0x40003D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Renderer[] clothingAndBodyPartsBareTorsoDamagedArm;

	[Token(Token = "0x40003D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Renderer[] clothingAndBodyPartsHoodie;

	[Token(Token = "0x6000372")]
	[Address(RVA = "0x135079C", Offset = "0x135079C", VA = "0x135079C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000373")]
	[Address(RVA = "0x13508FC", Offset = "0x13508FC", VA = "0x13508FC")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000374")]
	[Address(RVA = "0x1350B70", Offset = "0x1350B70", VA = "0x1350B70")]
	private void ChangeOutfit(Renderer[] outfit)
	{
	}

	[Token(Token = "0x6000375")]
	[Address(RVA = "0x13510FC", Offset = "0x13510FC", VA = "0x13510FC")]
	public MB_SwapShirts()
	{
	}
}
[Token(Token = "0x200009E")]
public class MB_PrepareObjectsForDynamicBatchingDescription : MonoBehaviour
{
	[Token(Token = "0x6000376")]
	[Address(RVA = "0x134F708", Offset = "0x134F708", VA = "0x134F708")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000377")]
	[Address(RVA = "0x134F7E8", Offset = "0x134F7E8", VA = "0x134F7E8")]
	public MB_PrepareObjectsForDynamicBatchingDescription()
	{
	}
}
[Token(Token = "0x200009F")]
public class MB_DynamicAddDeleteExample : MonoBehaviour
{
	[Token(Token = "0x20000A0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D64E4", Offset = "0x8D64E4")]
	private sealed class <largeNumber>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40003DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40003DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40003DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MB_DynamicAddDeleteExample <>4__this;

		[Token(Token = "0x17000079")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000380")]
			[Address(RVA = "0xE803B8", Offset = "0xE803B8", VA = "0xE803B8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700007A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000382")]
			[Address(RVA = "0xE80400", Offset = "0xE80400", VA = "0xE80400", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600037D")]
		[Address(RVA = "0xE8020C", Offset = "0xE8020C", VA = "0xE8020C")]
		[DebuggerHidden]
		public <largeNumber>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x600037E")]
		[Address(RVA = "0xE80238", Offset = "0xE80238", VA = "0xE80238", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600037F")]
		[Address(RVA = "0xE8023C", Offset = "0xE8023C", VA = "0xE8023C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000381")]
		[Address(RVA = "0xE803C0", Offset = "0xE803C0", VA = "0xE803C0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40003D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject prefab;

	[Token(Token = "0x40003DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<GameObject> objsInCombined;

	[Token(Token = "0x40003DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private MB3_MultiMeshBaker mbd;

	[Token(Token = "0x40003DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private GameObject[] objs;

	[Token(Token = "0x6000378")]
	[Address(RVA = "0x134DD24", Offset = "0x134DD24", VA = "0x134DD24")]
	private float GaussianValue()
	{
		return default(float);
	}

	[Token(Token = "0x6000379")]
	[Address(RVA = "0x134DDBC", Offset = "0x134DDBC", VA = "0x134DDBC")]
	private void Start()
	{
	}

	[Token(Token = "0x600037A")]
	[Address(RVA = "0x134E1CC", Offset = "0x134E1CC", VA = "0x134E1CC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8DF734", Offset = "0x8DF734")]
	private IEnumerator largeNumber()
	{
		return null;
	}

	[Token(Token = "0x600037B")]
	[Address(RVA = "0x134E244", Offset = "0x134E244", VA = "0x134E244")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x600037C")]
	[Address(RVA = "0x134E324", Offset = "0x134E324", VA = "0x134E324")]
	public MB_DynamicAddDeleteExample()
	{
	}
}
[Token(Token = "0x20000A1")]
public class MB_Example : MonoBehaviour
{
	[Token(Token = "0x40003E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MB3_MeshBaker meshbaker;

	[Token(Token = "0x40003E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject[] objsToCombine;

	[Token(Token = "0x6000383")]
	[Address(RVA = "0x134E3A8", Offset = "0x134E3A8", VA = "0x134E3A8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000384")]
	[Address(RVA = "0x134E404", Offset = "0x134E404", VA = "0x134E404")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000385")]
	[Address(RVA = "0x134E490", Offset = "0x134E490", VA = "0x134E490")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000386")]
	[Address(RVA = "0x134E570", Offset = "0x134E570", VA = "0x134E570")]
	public MB_Example()
	{
	}
}
[Token(Token = "0x20000A2")]
public class MB_ExampleMover : MonoBehaviour
{
	[Token(Token = "0x40003E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int axis;

	[Token(Token = "0x6000387")]
	[Address(RVA = "0x134F578", Offset = "0x134F578", VA = "0x134F578")]
	private void Update()
	{
	}

	[Token(Token = "0x6000388")]
	[Address(RVA = "0x134F610", Offset = "0x134F610", VA = "0x134F610")]
	public MB_ExampleMover()
	{
	}
}
[Token(Token = "0x20000A3")]
public class MB_ExampleSkinnedMeshDescription : MonoBehaviour
{
	[Token(Token = "0x6000389")]
	[Address(RVA = "0x134F618", Offset = "0x134F618", VA = "0x134F618")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x600038A")]
	[Address(RVA = "0x134F6F8", Offset = "0x134F6F8", VA = "0x134F6F8")]
	public MB_ExampleSkinnedMeshDescription()
	{
	}
}
[Token(Token = "0x20000A4")]
[ExecuteInEditMode]
public class MB_MigrateMaterialsToDifferentPipeline : MonoBehaviour
{
	[Token(Token = "0x600038B")]
	[Address(RVA = "0x134F700", Offset = "0x134F700", VA = "0x134F700")]
	public MB_MigrateMaterialsToDifferentPipeline()
	{
	}
}
[Token(Token = "0x20000A5")]
public class MB_SkinnedMeshSceneController : MonoBehaviour
{
	[Token(Token = "0x40003E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject swordPrefab;

	[Token(Token = "0x40003E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject hatPrefab;

	[Token(Token = "0x40003E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject glassesPrefab;

	[Token(Token = "0x40003E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject workerPrefab;

	[Token(Token = "0x40003E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject targetCharacter;

	[Token(Token = "0x40003E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public MB3_MeshBaker skinnedMeshBaker;

	[Token(Token = "0x40003E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private GameObject swordInstance;

	[Token(Token = "0x40003EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private GameObject glassesInstance;

	[Token(Token = "0x40003EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private GameObject hatInstance;

	[Token(Token = "0x600038C")]
	[Address(RVA = "0x134F7F0", Offset = "0x134F7F0", VA = "0x134F7F0")]
	private void Start()
	{
	}

	[Token(Token = "0x600038D")]
	[Address(RVA = "0x134F9F0", Offset = "0x134F9F0", VA = "0x134F9F0")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x600038E")]
	[Address(RVA = "0x135067C", Offset = "0x135067C", VA = "0x135067C")]
	public Transform SearchHierarchyForBone(Transform current, string name)
	{
		return null;
	}

	[Token(Token = "0x600038F")]
	[Address(RVA = "0x1350794", Offset = "0x1350794", VA = "0x1350794")]
	public MB_SkinnedMeshSceneController()
	{
	}
}
[Token(Token = "0x20000A6")]
public class MB_SwitchBakedObjectsTexture : MonoBehaviour
{
	[Token(Token = "0x40003EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MeshRenderer targetRenderer;

	[Token(Token = "0x40003ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material[] materials;

	[Token(Token = "0x40003EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public MB3_MeshBaker meshBaker;

	[Token(Token = "0x6000390")]
	[Address(RVA = "0x1351104", Offset = "0x1351104", VA = "0x1351104")]
	public void OnGUI()
	{
	}

	[Token(Token = "0x6000391")]
	[Address(RVA = "0x13511E4", Offset = "0x13511E4", VA = "0x13511E4")]
	public void Start()
	{
	}

	[Token(Token = "0x6000392")]
	[Address(RVA = "0x1351288", Offset = "0x1351288", VA = "0x1351288")]
	public void Update()
	{
	}

	[Token(Token = "0x6000393")]
	[Address(RVA = "0x1351534", Offset = "0x1351534", VA = "0x1351534")]
	public MB_SwitchBakedObjectsTexture()
	{
	}
}
[Token(Token = "0x20000A7")]
public class MiniFurboController : MonoBehaviour
{
	[Token(Token = "0x20000A8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D6504", Offset = "0x8D6504")]
	private sealed class <FurboLaughRoutine>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40003FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40003FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40003FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MiniFurboController <>4__this;

		[Token(Token = "0x1700007B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60003A0")]
			[Address(RVA = "0xE82FA0", Offset = "0xE82FA0", VA = "0xE82FA0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700007C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60003A2")]
			[Address(RVA = "0xE82FE8", Offset = "0xE82FE8", VA = "0xE82FE8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600039D")]
		[Address(RVA = "0xE82E38", Offset = "0xE82E38", VA = "0xE82E38")]
		[DebuggerHidden]
		public <FurboLaughRoutine>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x600039E")]
		[Address(RVA = "0xE82E64", Offset = "0xE82E64", VA = "0xE82E64", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600039F")]
		[Address(RVA = "0xE82E68", Offset = "0xE82E68", VA = "0xE82E68", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60003A1")]
		[Address(RVA = "0xE82FA8", Offset = "0xE82FA8", VA = "0xE82FA8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000A9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D6514", Offset = "0x8D6514")]
	private sealed class <RemoveFurboRoutine>d__13 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40003FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40003FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40003FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MiniFurboController <>4__this;

		[Token(Token = "0x1700007D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60003A6")]
			[Address(RVA = "0xE83118", Offset = "0xE83118", VA = "0xE83118", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700007E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60003A8")]
			[Address(RVA = "0xE83160", Offset = "0xE83160", VA = "0xE83160", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60003A3")]
		[Address(RVA = "0xE82FF0", Offset = "0xE82FF0", VA = "0xE82FF0")]
		[DebuggerHidden]
		public <RemoveFurboRoutine>d__13(int <>1__state)
		{
		}

		[Token(Token = "0x60003A4")]
		[Address(RVA = "0xE8301C", Offset = "0xE8301C", VA = "0xE8301C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60003A5")]
		[Address(RVA = "0xE83020", Offset = "0xE83020", VA = "0xE83020", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60003A7")]
		[Address(RVA = "0xE83120", Offset = "0xE83120", VA = "0xE83120", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40003EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject gamesManager;

	[Token(Token = "0x40003F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject furboBod;

	[Token(Token = "0x40003F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool moveFurbo;

	[Token(Token = "0x40003F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float speed;

	[Token(Token = "0x40003F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject[] furboParts;

	[Token(Token = "0x40003F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AudioSource furboAudioSource;

	[Token(Token = "0x40003F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AudioClip[] laughter;

	[Token(Token = "0x40003F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int randLaughter;

	[Token(Token = "0x40003F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float laughtWaitTime;

	[Token(Token = "0x40003F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool canHit;

	[Token(Token = "0x40003F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public Vector3 modifiedPlayerPosition;

	[Token(Token = "0x6000394")]
	[Address(RVA = "0x135A3D0", Offset = "0x135A3D0", VA = "0x135A3D0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000395")]
	[Address(RVA = "0x135A444", Offset = "0x135A444", VA = "0x135A444")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8DF7E4", Offset = "0x8DF7E4")]
	private IEnumerator FurboLaughRoutine()
	{
		return null;
	}

	[Token(Token = "0x6000396")]
	[Address(RVA = "0x135A4BC", Offset = "0x135A4BC", VA = "0x135A4BC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8DF844", Offset = "0x8DF844")]
	private IEnumerator RemoveFurboRoutine()
	{
		return null;
	}

	[Token(Token = "0x6000397")]
	[Address(RVA = "0x135A534", Offset = "0x135A534", VA = "0x135A534")]
	public void MakeMiniFurboLaugh()
	{
	}

	[Token(Token = "0x6000398")]
	[Address(RVA = "0x135A5B0", Offset = "0x135A5B0", VA = "0x135A5B0")]
	public void KillTheFurbo()
	{
	}

	[Token(Token = "0x6000399")]
	[Address(RVA = "0x135A74C", Offset = "0x135A74C", VA = "0x135A74C")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x600039A")]
	[Address(RVA = "0x135A9A4", Offset = "0x135A9A4", VA = "0x135A9A4")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600039B")]
	[Address(RVA = "0x135ABF0", Offset = "0x135ABF0", VA = "0x135ABF0")]
	private void Update()
	{
	}

	[Token(Token = "0x600039C")]
	[Address(RVA = "0x135AD3C", Offset = "0x135AD3C", VA = "0x135AD3C")]
	public MiniFurboController()
	{
	}
}
[Token(Token = "0x20000AA")]
public class MiniSammyManager : MonoBehaviour
{
	[Token(Token = "0x20000AB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D6524", Offset = "0x8D6524")]
	private sealed class <RemoveFishRoutine>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000406")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000407")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000408")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MiniSammyManager <>4__this;

		[Token(Token = "0x1700007F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60003B3")]
			[Address(RVA = "0xE83290", Offset = "0xE83290", VA = "0xE83290", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000080")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60003B5")]
			[Address(RVA = "0xE832D8", Offset = "0xE832D8", VA = "0xE832D8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60003B0")]
		[Address(RVA = "0xE83168", Offset = "0xE83168", VA = "0xE83168")]
		[DebuggerHidden]
		public <RemoveFishRoutine>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x60003B1")]
		[Address(RVA = "0xE83194", Offset = "0xE83194", VA = "0xE83194", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60003B2")]
		[Address(RVA = "0xE83198", Offset = "0xE83198", VA = "0xE83198", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60003B4")]
		[Address(RVA = "0xE83298", Offset = "0xE83298", VA = "0xE83298", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000400")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject gamesManager;

	[Token(Token = "0x4000401")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioSource flingAudioSource;

	[Token(Token = "0x4000402")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioSource splatAudioSource;

	[Token(Token = "0x4000403")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject fishBod;

	[Token(Token = "0x4000404")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool canHit;

	[Token(Token = "0x4000405")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject particleBlast;

	[Token(Token = "0x60003A9")]
	[Address(RVA = "0x135AD44", Offset = "0x135AD44", VA = "0x135AD44")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60003AA")]
	[Address(RVA = "0x135AEF4", Offset = "0x135AEF4", VA = "0x135AEF4")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x60003AB")]
	[Address(RVA = "0x135B0A0", Offset = "0x135B0A0", VA = "0x135B0A0")]
	public void KillTheFish()
	{
	}

	[Token(Token = "0x60003AC")]
	[Address(RVA = "0x135B1C0", Offset = "0x135B1C0", VA = "0x135B1C0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8DF944", Offset = "0x8DF944")]
	private IEnumerator RemoveFishRoutine()
	{
		return null;
	}

	[Token(Token = "0x60003AD")]
	[Address(RVA = "0x135B238", Offset = "0x135B238", VA = "0x135B238")]
	private void Start()
	{
	}

	[Token(Token = "0x60003AE")]
	[Address(RVA = "0x135B2B0", Offset = "0x135B2B0", VA = "0x135B2B0")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60003AF")]
	[Address(RVA = "0x135B2B4", Offset = "0x135B2B4", VA = "0x135B2B4")]
	public MiniSammyManager()
	{
	}
}
[Token(Token = "0x20000AC")]
public class MoveCapsule : MonoBehaviour
{
	[Token(Token = "0x4000409")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public CapsuleCollider character;

	[Token(Token = "0x400040A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject centerEyeAnchor;

	[Token(Token = "0x400040B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 place;

	[Token(Token = "0x60003B6")]
	[Address(RVA = "0x135B58C", Offset = "0x135B58C", VA = "0x135B58C")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60003B7")]
	[Address(RVA = "0x135B610", Offset = "0x135B610", VA = "0x135B610")]
	public MoveCapsule()
	{
	}
}
[Token(Token = "0x20000AD")]
public class MovePlayer : MonoBehaviour
{
	[Token(Token = "0x400040C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float maxSpeed;

	[Token(Token = "0x400040D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float sensitivity;

	[Token(Token = "0x400040E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Rigidbody head;

	[Token(Token = "0x400040F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool smoothLocomotionOn;

	[Token(Token = "0x4000410")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float distance;

	[Token(Token = "0x4000411")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float speed;

	[Token(Token = "0x4000412")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool smoothTurning;

	[Token(Token = "0x4000413")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
	public bool leftHandSmooth;

	[Token(Token = "0x4000414")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float maxSpeedTurning;

	[Token(Token = "0x4000415")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float sensitivityTurning;

	[Token(Token = "0x4000416")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float turnAmount;

	[Token(Token = "0x4000417")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float speedTurning;

	[Token(Token = "0x4000418")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool pauseSmooth;

	[Token(Token = "0x4000419")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	public bool gameDudeInLeftHand;

	[Token(Token = "0x400041A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
	public bool gameDudeInRightHand;

	[Token(Token = "0x60003B8")]
	[Address(RVA = "0x135B618", Offset = "0x135B618", VA = "0x135B618")]
	public MovePlayer()
	{
	}
}
[Token(Token = "0x20000AE")]
public class MovePlayerOculus : MonoBehaviour
{
	[Token(Token = "0x400041B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector2 moveValueLeft;

	[Token(Token = "0x400041C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector2 moveValueRight;

	[Token(Token = "0x400041D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector2 moveValue;

	[Token(Token = "0x400041E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float maxSpeed;

	[Token(Token = "0x400041F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float sensitivity;

	[Token(Token = "0x4000420")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Rigidbody head;

	[Token(Token = "0x4000421")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool smoothLocomotionOn;

	[Token(Token = "0x4000422")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float distance;

	[Token(Token = "0x4000423")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float speed;

	[Token(Token = "0x4000424")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public bool smoothTurning;

	[Token(Token = "0x4000425")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
	public bool leftHandSmooth;

	[Token(Token = "0x4000426")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float maxSpeedTurning;

	[Token(Token = "0x4000427")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float sensitivityTurning;

	[Token(Token = "0x4000428")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float turnAmount;

	[Token(Token = "0x4000429")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float speedTurning;

	[Token(Token = "0x400042A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public bool pauseSmooth;

	[Token(Token = "0x400042B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
	public bool gameDudeInLeftHand;

	[Token(Token = "0x400042C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x62")]
	public bool gameDudeInRightHand;

	[Token(Token = "0x400042D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public PVRGrabber leftHand;

	[Token(Token = "0x400042E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public PVRGrabber rightHand;

	[Token(Token = "0x400042F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Transform hmdTransform;

	[Token(Token = "0x4000430")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public LocomotionTeleport locoTeleport;

	[Token(Token = "0x4000431")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GameObject snapTurn;

	[Token(Token = "0x60003B9")]
	[Address(RVA = "0x135B620", Offset = "0x135B620", VA = "0x135B620")]
	private void Update()
	{
	}

	[Token(Token = "0x60003BA")]
	[Address(RVA = "0x135BD18", Offset = "0x135BD18", VA = "0x135BD18")]
	public MovePlayerOculus()
	{
	}
}
[Token(Token = "0x20000AF")]
public class MusicEndOffice : MonoBehaviour
{
	[Token(Token = "0x20000B0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D6534", Offset = "0x8D6534")]
	private sealed class <playRoboRapSound>d__32 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400044F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000450")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000451")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MusicEndOffice <>4__this;

		[Token(Token = "0x17000081")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60003C6")]
			[Address(RVA = "0xE8471C", Offset = "0xE8471C", VA = "0xE8471C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000082")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60003C8")]
			[Address(RVA = "0xE84764", Offset = "0xE84764", VA = "0xE84764", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60003C3")]
		[Address(RVA = "0xE84270", Offset = "0xE84270", VA = "0xE84270")]
		[DebuggerHidden]
		public <playRoboRapSound>d__32(int <>1__state)
		{
		}

		[Token(Token = "0x60003C4")]
		[Address(RVA = "0xE8429C", Offset = "0xE8429C", VA = "0xE8429C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60003C5")]
		[Address(RVA = "0xE842A0", Offset = "0xE842A0", VA = "0xE842A0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60003C7")]
		[Address(RVA = "0xE84724", Offset = "0xE84724", VA = "0xE84724", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000B1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D6544", Offset = "0x8D6544")]
	private sealed class <endTest>d__33 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000452")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000453")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000454")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MusicEndOffice <>4__this;

		[Token(Token = "0x17000083")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60003CC")]
			[Address(RVA = "0xE84220", Offset = "0xE84220", VA = "0xE84220", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000084")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60003CE")]
			[Address(RVA = "0xE84268", Offset = "0xE84268", VA = "0xE84268", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60003C9")]
		[Address(RVA = "0xE83F34", Offset = "0xE83F34", VA = "0xE83F34")]
		[DebuggerHidden]
		public <endTest>d__33(int <>1__state)
		{
		}

		[Token(Token = "0x60003CA")]
		[Address(RVA = "0xE83F60", Offset = "0xE83F60", VA = "0xE83F60", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60003CB")]
		[Address(RVA = "0xE83F64", Offset = "0xE83F64", VA = "0xE83F64", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60003CD")]
		[Address(RVA = "0xE84228", Offset = "0xE84228", VA = "0xE84228", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000B2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D6554", Offset = "0x8D6554")]
	private sealed class <MakeEyes>d__34 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000455")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000456")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000457")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MusicEndOffice <>4__this;

		[Token(Token = "0x4000458")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <i>5__2;

		[Token(Token = "0x17000085")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60003D2")]
			[Address(RVA = "0xE83EE4", Offset = "0xE83EE4", VA = "0xE83EE4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000086")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60003D4")]
			[Address(RVA = "0xE83F2C", Offset = "0xE83F2C", VA = "0xE83F2C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60003CF")]
		[Address(RVA = "0xE83758", Offset = "0xE83758", VA = "0xE83758")]
		[DebuggerHidden]
		public <MakeEyes>d__34(int <>1__state)
		{
		}

		[Token(Token = "0x60003D0")]
		[Address(RVA = "0xE83784", Offset = "0xE83784", VA = "0xE83784", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60003D1")]
		[Address(RVA = "0xE83788", Offset = "0xE83788", VA = "0xE83788", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60003D3")]
		[Address(RVA = "0xE83EEC", Offset = "0xE83EEC", VA = "0xE83EEC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000B3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D6564", Offset = "0x8D6564")]
	private sealed class <FadeFog>d__35 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000459")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400045A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400045B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MusicEndOffice <>4__this;

		[Token(Token = "0x17000087")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60003D8")]
			[Address(RVA = "0xE83708", Offset = "0xE83708", VA = "0xE83708", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000088")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60003DA")]
			[Address(RVA = "0xE83750", Offset = "0xE83750", VA = "0xE83750", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60003D5")]
		[Address(RVA = "0xE8361C", Offset = "0xE8361C", VA = "0xE8361C")]
		[DebuggerHidden]
		public <FadeFog>d__35(int <>1__state)
		{
		}

		[Token(Token = "0x60003D6")]
		[Address(RVA = "0xE83648", Offset = "0xE83648", VA = "0xE83648", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60003D7")]
		[Address(RVA = "0xE8364C", Offset = "0xE8364C", VA = "0xE8364C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60003D9")]
		[Address(RVA = "0xE83710", Offset = "0xE83710", VA = "0xE83710", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000432")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioClip staticSound;

	[Token(Token = "0x4000433")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioClip robuttRap;

	[Token(Token = "0x4000434")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioSource musicSpeaker;

	[Token(Token = "0x4000435")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AudioClip nexusEndClip;

	[Token(Token = "0x4000436")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AudioSource phoneSource;

	[Token(Token = "0x4000437")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float clipLength;

	[Token(Token = "0x4000438")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public LightsManager lightsManager;

	[Token(Token = "0x4000439")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public MediaPlayer mp;

	[Token(Token = "0x400043A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public MediaPlayer.FileLocation m_videoLocation;

	[Token(Token = "0x400043B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public MeshRenderer videoMesh;

	[Token(Token = "0x400043C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public AudioSource gasHiss;

	[Token(Token = "0x400043D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool testAfterVideo;

	[Token(Token = "0x400043E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float timePassed;

	[Token(Token = "0x400043F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject theOffice;

	[Token(Token = "0x4000440")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject[] robotEyes;

	[Token(Token = "0x4000441")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public float waitTime;

	[Token(Token = "0x4000442")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public AudioClip endRoboSong;

	[Token(Token = "0x4000443")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public AudioClip roboBeeps;

	[Token(Token = "0x4000444")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public GameObject changeScene;

	[Token(Token = "0x4000445")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public float speed;

	[Token(Token = "0x4000446")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Transform target;

	[Token(Token = "0x4000447")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public bool timeToMove;

	[Token(Token = "0x4000448")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public PVRScreenFade fader;

	[Token(Token = "0x4000449")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[SerializeField]
	private TextSynchronizer textSynchronizer;

	[Token(Token = "0x400044A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public PhraseAsset phraseAssetBreakRoom;

	[Token(Token = "0x400044B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public GameObject roboCaption;

	[Token(Token = "0x400044C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[SerializeField]
	private TextSynchronizer textSynchronizerPhone;

	[Token(Token = "0x400044D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public PhraseAsset phraseAssetPhone;

	[Token(Token = "0x400044E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public GameObject roboCaptionPhone;

	[Token(Token = "0x60003BB")]
	[Address(RVA = "0x135EB4C", Offset = "0x135EB4C", VA = "0x135EB4C")]
	private void Start()
	{
	}

	[Token(Token = "0x60003BC")]
	[Address(RVA = "0x135EC08", Offset = "0x135EC08", VA = "0x135EC08")]
	private void Update()
	{
	}

	[Token(Token = "0x60003BD")]
	[Address(RVA = "0x135ED28", Offset = "0x135ED28", VA = "0x135ED28")]
	public void playThatRap()
	{
	}

	[Token(Token = "0x60003BE")]
	[Address(RVA = "0x135ED54", Offset = "0x135ED54", VA = "0x135ED54")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8DF9F4", Offset = "0x8DF9F4")]
	private IEnumerator playRoboRapSound()
	{
		return null;
	}

	[Token(Token = "0x60003BF")]
	[Address(RVA = "0x135EB90", Offset = "0x135EB90", VA = "0x135EB90")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8DFA54", Offset = "0x8DFA54")]
	private IEnumerator endTest()
	{
		return null;
	}

	[Token(Token = "0x60003C0")]
	[Address(RVA = "0x135EDCC", Offset = "0x135EDCC", VA = "0x135EDCC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8DFAB4", Offset = "0x8DFAB4")]
	private IEnumerator MakeEyes()
	{
		return null;
	}

	[Token(Token = "0x60003C1")]
	[Address(RVA = "0x135EE44", Offset = "0x135EE44", VA = "0x135EE44")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8DFB14", Offset = "0x8DFB14")]
	private IEnumerator FadeFog()
	{
		return null;
	}

	[Token(Token = "0x60003C2")]
	[Address(RVA = "0x135EEBC", Offset = "0x135EEBC", VA = "0x135EEBC")]
	public MusicEndOffice()
	{
	}
}
[Token(Token = "0x20000B4")]
public class MySceneLoader : MonoBehaviour
{
	[Token(Token = "0x20000B5")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D6574", Offset = "0x8D6574")]
	private sealed class <LoadLevelCoroutine>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400045F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000460")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000461")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float time;

		[Token(Token = "0x4000462")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public MySceneLoader <>4__this;

		[Token(Token = "0x17000089")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60003E2")]
			[Address(RVA = "0xE848CC", Offset = "0xE848CC", VA = "0xE848CC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700008A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60003E4")]
			[Address(RVA = "0xE84914", Offset = "0xE84914", VA = "0xE84914", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60003DF")]
		[Address(RVA = "0xE8476C", Offset = "0xE8476C", VA = "0xE8476C")]
		[DebuggerHidden]
		public <LoadLevelCoroutine>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x60003E0")]
		[Address(RVA = "0xE84798", Offset = "0xE84798", VA = "0xE84798", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60003E1")]
		[Address(RVA = "0xE8479C", Offset = "0xE8479C", VA = "0xE8479C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60003E3")]
		[Address(RVA = "0xE848D4", Offset = "0xE848D4", VA = "0xE848D4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400045C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject cameraObject;

	[Token(Token = "0x400045D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string sceneAfter;

	[Token(Token = "0x400045E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool inTheArcade;

	[Token(Token = "0x60003DB")]
	[Address(RVA = "0x135EECC", Offset = "0x135EECC", VA = "0x135EECC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60003DC")]
	[Address(RVA = "0x135EF28", Offset = "0x135EF28", VA = "0x135EF28")]
	public void LoadTry(string nextScene)
	{
	}

	[Token(Token = "0x60003DD")]
	[Address(RVA = "0x135EFB8", Offset = "0x135EFB8", VA = "0x135EFB8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8DFCB4", Offset = "0x8DFCB4")]
	private IEnumerator LoadLevelCoroutine(string levelName, float time)
	{
		return null;
	}

	[Token(Token = "0x60003DE")]
	[Address(RVA = "0x135F040", Offset = "0x135F040", VA = "0x135F040")]
	public MySceneLoader()
	{
	}
}
[Token(Token = "0x20000B6")]
public class NexusArcadeTrashTalk : MonoBehaviour
{
	[Token(Token = "0x4000463")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioClip[] trashTalk;

	[Token(Token = "0x4000464")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioClip winAirHockey;

	[Token(Token = "0x4000465")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioClip[] winAirHockeyOtherTimes;

	[Token(Token = "0x4000466")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AudioSource nexusVoice;

	[Token(Token = "0x4000467")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AudioClip[] cheatingLines;

	[Token(Token = "0x4000468")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool firstCheat;

	[Token(Token = "0x4000469")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ArcadeMusicManager arcadeMusicManager;

	[Token(Token = "0x400046A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool changeAudioBack;

	[Token(Token = "0x400046B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private TextSynchronizer textSynchronizer;

	[Token(Token = "0x400046C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public PhraseAsset[] phraseAssetTrashTalk;

	[Token(Token = "0x400046D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public PhraseAsset phraseAssetWinAirHockey;

	[Token(Token = "0x400046E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public PhraseAsset[] phraseAssetWinAirHockeyOtherHockey;

	[Token(Token = "0x400046F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public PhraseAsset[] phraseAssetCheatingLines;

	[Token(Token = "0x4000470")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject roboCaption;

	[Token(Token = "0x60003E5")]
	[Address(RVA = "0x135FE44", Offset = "0x135FE44", VA = "0x135FE44")]
	public void WinAirFirstTimeHockey()
	{
	}

	[Token(Token = "0x60003E6")]
	[Address(RVA = "0x135FEB4", Offset = "0x135FEB4", VA = "0x135FEB4")]
	public void WinAirOtherTimes()
	{
	}

	[Token(Token = "0x60003E7")]
	[Address(RVA = "0x135FF64", Offset = "0x135FF64", VA = "0x135FF64")]
	public void CheatingTrashTalk()
	{
	}

	[Token(Token = "0x60003E8")]
	[Address(RVA = "0x1360170", Offset = "0x1360170", VA = "0x1360170")]
	public void QuickTrashTalk()
	{
	}

	[Token(Token = "0x60003E9")]
	[Address(RVA = "0x1360174", Offset = "0x1360174", VA = "0x1360174")]
	private void Start()
	{
	}

	[Token(Token = "0x60003EA")]
	[Address(RVA = "0x13601D0", Offset = "0x13601D0", VA = "0x13601D0")]
	private void Update()
	{
	}

	[Token(Token = "0x60003EB")]
	[Address(RVA = "0x136023C", Offset = "0x136023C", VA = "0x136023C")]
	public NexusArcadeTrashTalk()
	{
	}
}
[Token(Token = "0x20000B7")]
[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x8D6584", Offset = "0x8D6584")]
public class FastList<T>
{
	[Token(Token = "0x20000B8")]
	public delegate int CompareFunc(T left, T right);

	[Token(Token = "0x20000B9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D65BC", Offset = "0x8D65BC")]
	private sealed class <GetEnumerator>d__25 : IEnumerator<T>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000473")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <>1__state;

		[Token(Token = "0x4000474")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T <>2__current;

		[Token(Token = "0x4000475")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public FastList<T> <>4__this;

		[Token(Token = "0x4000476")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <i>5__2;

		[Token(Token = "0x1700008D")]
		private T System.Collections.Generic.IEnumerator<T>.Current
		{
			[Token(Token = "0x600040D")]
			[DebuggerHidden]
			get
			{
				return (T)null;
			}
		}

		[Token(Token = "0x1700008E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600040F")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600040A")]
		[DebuggerHidden]
		public <GetEnumerator>d__25(int <>1__state)
		{
		}

		[Token(Token = "0x600040B")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600040C")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600040E")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000471")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public T[] array;

	[Token(Token = "0x4000472")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public int size;

	[Token(Token = "0x1700008B")]
	public int Count
	{
		[Token(Token = "0x60003EE")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60003EF")]
		set
		{
		}
	}

	[Token(Token = "0x1700008C")]
	public T Item
	{
		[Token(Token = "0x60003F0")]
		get
		{
			return (T)null;
		}
		[Token(Token = "0x60003F1")]
		set
		{
		}
	}

	[Token(Token = "0x60003EC")]
	public FastList()
	{
	}

	[Token(Token = "0x60003ED")]
	public FastList(int size)
	{
	}

	[Token(Token = "0x60003F2")]
	public void Add(T item)
	{
	}

	[Token(Token = "0x60003F3")]
	public void AddUnique(T item)
	{
	}

	[Token(Token = "0x60003F4")]
	public void AddRange(IEnumerable<T> items)
	{
	}

	[Token(Token = "0x60003F5")]
	public void Insert(int index, T item)
	{
	}

	[Token(Token = "0x60003F6")]
	public bool Remove(T item)
	{
		return default(bool);
	}

	[Token(Token = "0x60003F7")]
	public void RemoveAt(int index)
	{
	}

	[Token(Token = "0x60003F8")]
	public bool RemoveFast(T item)
	{
		return default(bool);
	}

	[Token(Token = "0x60003F9")]
	public void RemoveAtFast(int index)
	{
	}

	[Token(Token = "0x60003FA")]
	public bool Contains(T item)
	{
		return default(bool);
	}

	[Token(Token = "0x60003FB")]
	public int IndexOf(T item)
	{
		return default(int);
	}

	[Token(Token = "0x60003FC")]
	public T Pop()
	{
		return (T)null;
	}

	[Token(Token = "0x60003FD")]
	public T[] ToArray()
	{
		return null;
	}

	[Token(Token = "0x60003FE")]
	public void Sort(CompareFunc comparer)
	{
	}

	[Token(Token = "0x60003FF")]
	public void InsertionSort(CompareFunc comparer)
	{
	}

	[Token(Token = "0x6000400")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8DFD64", Offset = "0x8DFD64")]
	public IEnumerator<T> GetEnumerator()
	{
		return null;
	}

	[Token(Token = "0x6000401")]
	public T Find(Predicate<T> match)
	{
		return (T)null;
	}

	[Token(Token = "0x6000402")]
	private void Allocate()
	{
	}

	[Token(Token = "0x6000403")]
	private void Trim()
	{
	}

	[Token(Token = "0x6000404")]
	public void Clear()
	{
	}

	[Token(Token = "0x6000405")]
	public void Release()
	{
	}
}
[Token(Token = "0x20000BA")]
public class InspectorNoteAttribute : PropertyAttribute
{
	[Token(Token = "0x4000477")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public readonly string header;

	[Token(Token = "0x4000478")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public readonly string message;

	[Token(Token = "0x6000410")]
	[Address(RVA = "0x13429B4", Offset = "0x13429B4", VA = "0x13429B4")]
	public InspectorNoteAttribute(string header, string message = "")
	{
	}
}
[Token(Token = "0x20000BB")]
public class InspectorCommentAttribute : PropertyAttribute
{
	[Token(Token = "0x4000479")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public readonly string message;

	[Token(Token = "0x6000411")]
	[Address(RVA = "0x1342980", Offset = "0x1342980", VA = "0x1342980")]
	public InspectorCommentAttribute(string message = "")
	{
	}
}
[Token(Token = "0x20000BC")]
public class OvrAvatarTestDriver : OvrAvatarDriver
{
	[Token(Token = "0x400047A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Vector3 headPos;

	[Token(Token = "0x400047B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private Quaternion headRot;

	[Token(Token = "0x400047C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private float voiceAmplitude;

	[Token(Token = "0x6000412")]
	[Address(RVA = "0x192D2C8", Offset = "0x192D2C8", VA = "0x192D2C8")]
	private ControllerPose GetMalibuControllerPose(OVRInput.Controller controller)
	{
		return default(ControllerPose);
	}

	[Token(Token = "0x6000413")]
	[Address(RVA = "0x192D42C", Offset = "0x192D42C", VA = "0x192D42C")]
	private ControllerPose GetControllerPose(OVRInput.Controller controller)
	{
		return default(ControllerPose);
	}

	[Token(Token = "0x6000414")]
	[Address(RVA = "0x192D7C8", Offset = "0x192D7C8", VA = "0x192D7C8")]
	private void CalculateCurrentPose()
	{
	}

	[Token(Token = "0x6000415")]
	[Address(RVA = "0x192D96C", Offset = "0x192D96C", VA = "0x192D96C", Slot = "4")]
	public override void UpdateTransforms(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x6000416")]
	[Address(RVA = "0x192D998", Offset = "0x192D998", VA = "0x192D998")]
	public OvrAvatarTestDriver()
	{
	}
}
[Token(Token = "0x20000BD")]
public class PoseEditHelper : MonoBehaviour
{
	[Token(Token = "0x400047D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform poseRoot;

	[Token(Token = "0x6000417")]
	[Address(RVA = "0x105975C", Offset = "0x105975C", VA = "0x105975C")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000418")]
	[Address(RVA = "0x10597E4", Offset = "0x10597E4", VA = "0x10597E4")]
	private void DrawJoints(Transform joint)
	{
	}

	[Token(Token = "0x6000419")]
	[Address(RVA = "0x1059958", Offset = "0x1059958", VA = "0x1059958")]
	public PoseEditHelper()
	{
	}
}
[Token(Token = "0x20000BE")]
public class GazeTargetSpawner : MonoBehaviour
{
	[Token(Token = "0x400047E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject GazeTargetPrefab;

	[Token(Token = "0x400047F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int NumberOfDummyTargets;

	[Token(Token = "0x4000480")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int RadiusMultiplier;

	[Token(Token = "0x4000481")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private bool isVisible;

	[Token(Token = "0x1700008F")]
	public bool IsVisible
	{
		[Token(Token = "0x600041A")]
		[Address(RVA = "0x133A348", Offset = "0x133A348", VA = "0x133A348")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600041B")]
		[Address(RVA = "0x133A350", Offset = "0x133A350", VA = "0x133A350")]
		set
		{
		}
	}

	[Token(Token = "0x600041C")]
	[Address(RVA = "0x133A48C", Offset = "0x133A48C", VA = "0x133A48C")]
	private void Start()
	{
	}

	[Token(Token = "0x600041D")]
	[Address(RVA = "0x133A654", Offset = "0x133A654", VA = "0x133A654")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x600041E")]
	[Address(RVA = "0x133A65C", Offset = "0x133A65C", VA = "0x133A65C")]
	public GazeTargetSpawner()
	{
	}
}
[Token(Token = "0x20000BF")]
public class RemoteLoopbackManager : MonoBehaviour
{
	[Token(Token = "0x20000C0")]
	private class PacketLatencyPair
	{
		[Token(Token = "0x4000487")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public byte[] PacketData;

		[Token(Token = "0x4000488")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float FakeLatency;

		[Token(Token = "0x6000425")]
		[Address(RVA = "0xE8C9CC", Offset = "0xE8C9CC", VA = "0xE8C9CC")]
		public PacketLatencyPair()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20000C1")]
	public class SimulatedLatencySettings
	{
		[Token(Token = "0x4000489")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D7ACC", Offset = "0x8D7ACC")]
		public float FakeLatencyMax;

		[Token(Token = "0x400048A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D7AE4", Offset = "0x8D7AE4")]
		public float FakeLatencyMin;

		[Token(Token = "0x400048B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D7AFC", Offset = "0x8D7AFC")]
		public float LatencyWeight;

		[Token(Token = "0x400048C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D7B14", Offset = "0x8D7B14")]
		public int MaxSamples;

		[Token(Token = "0x400048D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal float AverageWindow;

		[Token(Token = "0x400048E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		internal float LatencySum;

		[Token(Token = "0x400048F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal LinkedList<float> LatencyValues;

		[Token(Token = "0x6000426")]
		[Address(RVA = "0xE8C9D4", Offset = "0xE8C9D4", VA = "0xE8C9D4")]
		public float NextValue()
		{
			return default(float);
		}

		[Token(Token = "0x6000427")]
		[Address(RVA = "0xE8CB0C", Offset = "0xE8CB0C", VA = "0xE8CB0C")]
		public SimulatedLatencySettings()
		{
		}
	}

	[Token(Token = "0x4000482")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OvrAvatar LocalAvatar;

	[Token(Token = "0x4000483")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OvrAvatar LoopbackAvatar;

	[Token(Token = "0x4000484")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SimulatedLatencySettings LatencySettings;

	[Token(Token = "0x4000485")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int PacketSequence;

	[Token(Token = "0x4000486")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private LinkedList<PacketLatencyPair> packetQueue;

	[Token(Token = "0x600041F")]
	[Address(RVA = "0x105C8EC", Offset = "0x105C8EC", VA = "0x105C8EC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000420")]
	[Address(RVA = "0x105CA44", Offset = "0x105CA44", VA = "0x105CA44")]
	private void OnLocalAvatarPacketRecorded(object sender, OvrAvatar.PacketEventArgs args)
	{
	}

	[Token(Token = "0x6000421")]
	[Address(RVA = "0x105CE28", Offset = "0x105CE28", VA = "0x105CE28")]
	private void Update()
	{
	}

	[Token(Token = "0x6000422")]
	[Address(RVA = "0x105CD74", Offset = "0x105CD74", VA = "0x105CD74")]
	private void SendPacketData(byte[] data)
	{
	}

	[Token(Token = "0x6000423")]
	[Address(RVA = "0x105D158", Offset = "0x105D158", VA = "0x105D158")]
	private void ReceivePacketData(byte[] data)
	{
	}

	[Token(Token = "0x6000424")]
	[Address(RVA = "0x105D440", Offset = "0x105D440", VA = "0x105D440")]
	public RemoteLoopbackManager()
	{
	}
}
[Token(Token = "0x20000C2")]
public class P2PManager
{
	[Token(Token = "0x20000C3")]
	private enum MessageType : byte
	{
		[Token(Token = "0x4000491")]
		Update = 1
	}

	[Token(Token = "0x6000428")]
	[Address(RVA = "0x10508B0", Offset = "0x10508B0", VA = "0x10508B0")]
	public P2PManager()
	{
	}

	[Token(Token = "0x6000429")]
	[Address(RVA = "0x1050990", Offset = "0x1050990", VA = "0x1050990")]
	public void ConnectTo(ulong userID)
	{
	}

	[Token(Token = "0x600042A")]
	[Address(RVA = "0x1050A74", Offset = "0x1050A74", VA = "0x1050A74")]
	public void Disconnect(ulong userID)
	{
	}

	[Token(Token = "0x600042B")]
	[Address(RVA = "0x1050AF4", Offset = "0x1050AF4", VA = "0x1050AF4")]
	private void PeerConnectRequestCallback(Message<NetworkingPeer> msg)
	{
	}

	[Token(Token = "0x600042C")]
	[Address(RVA = "0x1050C64", Offset = "0x1050C64", VA = "0x1050C64")]
	private void ConnectionStateChangedCallback(Message<NetworkingPeer> msg)
	{
	}

	[Token(Token = "0x600042D")]
	[Address(RVA = "0x1050EA4", Offset = "0x1050EA4", VA = "0x1050EA4")]
	public void SendAvatarUpdate(ulong userID, Transform rootTransform, uint sequence, byte[] avatarPacket)
	{
	}

	[Token(Token = "0x600042E")]
	[Address(RVA = "0x1051294", Offset = "0x1051294", VA = "0x1051294")]
	public void GetRemotePackets()
	{
	}

	[Token(Token = "0x600042F")]
	[Address(RVA = "0x1051550", Offset = "0x1051550", VA = "0x1051550")]
	public void processAvatarPacket(RemotePlayer remote, ref byte[] packet, ref int offset)
	{
	}

	[Token(Token = "0x6000430")]
	[Address(RVA = "0x1051070", Offset = "0x1051070", VA = "0x1051070")]
	private void PackByte(byte b, byte[] buf, ref int offset)
	{
	}

	[Token(Token = "0x6000431")]
	[Address(RVA = "0x1051484", Offset = "0x1051484", VA = "0x1051484")]
	private byte ReadByte(byte[] buf, ref int offset)
	{
		return default(byte);
	}

	[Token(Token = "0x6000432")]
	[Address(RVA = "0x1051154", Offset = "0x1051154", VA = "0x1051154")]
	private void PackFloat(float f, byte[] buf, ref int offset)
	{
	}

	[Token(Token = "0x6000433")]
	[Address(RVA = "0x1051790", Offset = "0x1051790", VA = "0x1051790")]
	private float ReadFloat(byte[] buf, ref int offset)
	{
		return default(float);
	}

	[Token(Token = "0x6000434")]
	[Address(RVA = "0x10510B8", Offset = "0x10510B8", VA = "0x10510B8")]
	private void PackULong(ulong u, byte[] buf, ref int offset)
	{
	}

	[Token(Token = "0x6000435")]
	[Address(RVA = "0x10514C8", Offset = "0x10514C8", VA = "0x10514C8")]
	private ulong ReadULong(byte[] buf, ref int offset)
	{
		return default(ulong);
	}

	[Token(Token = "0x6000436")]
	[Address(RVA = "0x10511F8", Offset = "0x10511F8", VA = "0x10511F8")]
	private void PackUInt32(uint u, byte[] buf, ref int offset)
	{
	}

	[Token(Token = "0x6000437")]
	[Address(RVA = "0x1051818", Offset = "0x1051818", VA = "0x1051818")]
	private uint ReadUInt32(byte[] buf, ref int offset)
	{
		return default(uint);
	}
}
[Token(Token = "0x20000C4")]
public class PlayerController : SocialPlatformManager
{
	[Token(Token = "0x4000492")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Camera spyCamera;

	[Token(Token = "0x4000493")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private GameObject cameraRig;

	[Token(Token = "0x4000494")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private bool showUI;

	[Token(Token = "0x6000438")]
	[Address(RVA = "0x1056F10", Offset = "0x1056F10", VA = "0x1056F10", Slot = "5")]
	public override void Awake()
	{
	}

	[Token(Token = "0x6000439")]
	[Address(RVA = "0x1056F54", Offset = "0x1056F54", VA = "0x1056F54", Slot = "6")]
	public override void Start()
	{
	}

	[Token(Token = "0x600043A")]
	[Address(RVA = "0x1056F8C", Offset = "0x1056F8C", VA = "0x1056F8C", Slot = "4")]
	public override void Update()
	{
	}

	[Token(Token = "0x600043B")]
	[Address(RVA = "0x1056FB4", Offset = "0x1056FB4", VA = "0x1056FB4")]
	private void checkInput()
	{
	}

	[Token(Token = "0x600043C")]
	[Address(RVA = "0x1057150", Offset = "0x1057150", VA = "0x1057150")]
	private void ToggleCamera()
	{
	}

	[Token(Token = "0x600043D")]
	[Address(RVA = "0x10571D0", Offset = "0x10571D0", VA = "0x10571D0")]
	private void ToggleUI()
	{
	}

	[Token(Token = "0x600043E")]
	[Address(RVA = "0x1057224", Offset = "0x1057224", VA = "0x1057224")]
	public PlayerController()
	{
	}
}
[Token(Token = "0x20000C5")]
public class RemotePlayer
{
	[Token(Token = "0x4000495")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong remoteUserID;

	[Token(Token = "0x4000496")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool stillInRoom;

	[Token(Token = "0x4000497")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public PeerConnectionState p2pConnectionState;

	[Token(Token = "0x4000498")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public PeerConnectionState voipConnectionState;

	[Token(Token = "0x4000499")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OvrAvatar RemoteAvatar;

	[Token(Token = "0x400049A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector3 receivedRootPosition;

	[Token(Token = "0x400049B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Vector3 receivedRootPositionPrior;

	[Token(Token = "0x400049C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Quaternion receivedRootRotation;

	[Token(Token = "0x400049D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Quaternion receivedRootRotationPrior;

	[Token(Token = "0x400049E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public VoipAudioSourceHiLevel voipSource;

	[Token(Token = "0x600043F")]
	[Address(RVA = "0x105D4FC", Offset = "0x105D4FC", VA = "0x105D4FC")]
	public RemotePlayer()
	{
	}
}
[Token(Token = "0x20000C6")]
public class RoomManager
{
	[Token(Token = "0x400049F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong roomID;

	[Token(Token = "0x40004A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ulong invitedRoomID;

	[Token(Token = "0x40004A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool amIServer;

	[Token(Token = "0x40004A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	private bool startupDone;

	[Token(Token = "0x6000440")]
	[Address(RVA = "0x10617A4", Offset = "0x10617A4", VA = "0x10617A4")]
	public RoomManager()
	{
	}

	[Token(Token = "0x6000441")]
	[Address(RVA = "0x10618A8", Offset = "0x10618A8", VA = "0x10618A8")]
	private void AcceptingInviteCallback(Message<string> msg)
	{
	}

	[Token(Token = "0x6000442")]
	[Address(RVA = "0x1061A28", Offset = "0x1061A28", VA = "0x1061A28")]
	public bool CheckForInvite()
	{
		return default(bool);
	}

	[Token(Token = "0x6000443")]
	[Address(RVA = "0x1061B64", Offset = "0x1061B64", VA = "0x1061B64")]
	public void CreateRoom()
	{
	}

	[Token(Token = "0x6000444")]
	[Address(RVA = "0x1061C38", Offset = "0x1061C38", VA = "0x1061C38")]
	private void CreateAndJoinPrivateRoomCallback(Message<Room> msg)
	{
	}

	[Token(Token = "0x6000445")]
	[Address(RVA = "0x1061D74", Offset = "0x1061D74", VA = "0x1061D74")]
	private void OnLaunchInviteWorkflowComplete(Message msg)
	{
	}

	[Token(Token = "0x6000446")]
	[Address(RVA = "0x1061A58", Offset = "0x1061A58", VA = "0x1061A58")]
	public void JoinExistingRoom(ulong roomID)
	{
	}

	[Token(Token = "0x6000447")]
	[Address(RVA = "0x1061DFC", Offset = "0x1061DFC", VA = "0x1061DFC")]
	private void JoinRoomCallback(Message<Room> msg)
	{
	}

	[Token(Token = "0x6000448")]
	[Address(RVA = "0x10625A8", Offset = "0x10625A8", VA = "0x10625A8")]
	private void RoomUpdateCallback(Message<Room> msg)
	{
	}

	[Token(Token = "0x6000449")]
	[Address(RVA = "0x10628FC", Offset = "0x10628FC", VA = "0x10628FC")]
	public void LeaveCurrentRoom()
	{
	}

	[Token(Token = "0x600044A")]
	[Address(RVA = "0x1062130", Offset = "0x1062130", VA = "0x1062130")]
	private void ProcessRoomData(Message<Room> msg)
	{
	}
}
[Token(Token = "0x20000C7")]
public class SocialPlatformManager : MonoBehaviour
{
	[Token(Token = "0x20000C8")]
	public enum State
	{
		[Token(Token = "0x40004C9")]
		INITIALIZING,
		[Token(Token = "0x40004CA")]
		CHECKING_LAUNCH_STATE,
		[Token(Token = "0x40004CB")]
		CREATING_A_ROOM,
		[Token(Token = "0x40004CC")]
		WAITING_IN_A_ROOM,
		[Token(Token = "0x40004CD")]
		JOINING_A_ROOM,
		[Token(Token = "0x40004CE")]
		CONNECTED_IN_A_ROOM,
		[Token(Token = "0x40004CF")]
		LEAVING_A_ROOM,
		[Token(Token = "0x40004D0")]
		SHUTDOWN
	}

	[Token(Token = "0x40004A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Vector3 START_ROTATION_ONE;

	[Token(Token = "0x40004A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static readonly Vector3 START_POSITION_ONE;

	[Token(Token = "0x40004A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static readonly Vector3 START_ROTATION_TWO;

	[Token(Token = "0x40004A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private static readonly Vector3 START_POSITION_TWO;

	[Token(Token = "0x40004A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static readonly Vector3 START_ROTATION_THREE;

	[Token(Token = "0x40004A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private static readonly Vector3 START_POSITION_THREE;

	[Token(Token = "0x40004A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static readonly Vector3 START_ROTATION_FOUR;

	[Token(Token = "0x40004AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private static readonly Vector3 START_POSITION_FOUR;

	[Token(Token = "0x40004AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private static readonly Color BLACK;

	[Token(Token = "0x40004AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private static readonly Color WHITE;

	[Token(Token = "0x40004AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private static readonly Color CYAN;

	[Token(Token = "0x40004AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private static readonly Color BLUE;

	[Token(Token = "0x40004AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private static readonly Color GREEN;

	[Token(Token = "0x40004B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float voiceCurrent;

	[Token(Token = "0x40004B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private uint packetSequence;

	[Token(Token = "0x40004B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OvrAvatar localAvatarPrefab;

	[Token(Token = "0x40004B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OvrAvatar remoteAvatarPrefab;

	[Token(Token = "0x40004B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject helpPanel;

	[Token(Token = "0x40004B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected MeshRenderer helpMesh;

	[Token(Token = "0x40004B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Material riftMaterial;

	[Token(Token = "0x40004B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Material gearMaterial;

	[Token(Token = "0x40004B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	protected OvrAvatar localAvatar;

	[Token(Token = "0x40004B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	protected GameObject localTrackingSpace;

	[Token(Token = "0x40004BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	protected GameObject localPlayerHead;

	[Token(Token = "0x40004BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	protected Dictionary<ulong, RemotePlayer> remoteUsers;

	[Token(Token = "0x40004BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject roomSphere;

	[Token(Token = "0x40004BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	protected MeshRenderer sphereMesh;

	[Token(Token = "0x40004BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject roomFloor;

	[Token(Token = "0x40004BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	protected MeshRenderer floorMesh;

	[Token(Token = "0x40004C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	protected State currentState;

	[Token(Token = "0x40004C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	protected static SocialPlatformManager s_instance;

	[Token(Token = "0x40004C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	protected RoomManager roomManager;

	[Token(Token = "0x40004C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	protected P2PManager p2pManager;

	[Token(Token = "0x40004C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	protected VoipManager voipManager;

	[Token(Token = "0x40004C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	protected ulong myID;

	[Token(Token = "0x40004C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	protected string myOculusID;

	[Token(Token = "0x40004C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public static readonly float VOIP_SCALE;

	[Token(Token = "0x17000090")]
	public static State CurrentState
	{
		[Token(Token = "0x6000457")]
		[Address(RVA = "0x16771E4", Offset = "0x16771E4", VA = "0x16771E4")]
		get
		{
			return default(State);
		}
	}

	[Token(Token = "0x17000091")]
	public static ulong MyID
	{
		[Token(Token = "0x6000458")]
		[Address(RVA = "0x1677254", Offset = "0x1677254", VA = "0x1677254")]
		get
		{
			return default(ulong);
		}
	}

	[Token(Token = "0x17000092")]
	public static string MyOculusID
	{
		[Token(Token = "0x6000459")]
		[Address(RVA = "0x1677334", Offset = "0x1677334", VA = "0x1677334")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600044B")]
	[Address(RVA = "0x1675340", Offset = "0x1675340", VA = "0x1675340", Slot = "4")]
	public virtual void Update()
	{
	}

	[Token(Token = "0x600044C")]
	[Address(RVA = "0x16756E4", Offset = "0x16756E4", VA = "0x16756E4", Slot = "5")]
	public virtual void Awake()
	{
	}

	[Token(Token = "0x600044D")]
	[Address(RVA = "0x1675E54", Offset = "0x1675E54", VA = "0x1675E54")]
	private void InitCallback(Message<PlatformInitialize> msg)
	{
	}

	[Token(Token = "0x600044E")]
	[Address(RVA = "0x1676174", Offset = "0x1676174", VA = "0x1676174", Slot = "6")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x600044F")]
	[Address(RVA = "0x1676178", Offset = "0x1676178", VA = "0x1676178")]
	private void IsEntitledCallback(Message msg)
	{
	}

	[Token(Token = "0x6000450")]
	[Address(RVA = "0x1676298", Offset = "0x1676298", VA = "0x1676298")]
	private void GetLoggedInUserCallback(Message<User> msg)
	{
	}

	[Token(Token = "0x6000451")]
	[Address(RVA = "0x16769EC", Offset = "0x16769EC", VA = "0x16769EC")]
	private void GetLoggedInUserFriendsAndRoomsCallback(Message<UserAndRoomList> msg)
	{
	}

	[Token(Token = "0x6000452")]
	[Address(RVA = "0x1676DE0", Offset = "0x1676DE0", VA = "0x1676DE0")]
	public void OnLocalAvatarPacketRecorded(object sender, OvrAvatar.PacketEventArgs args)
	{
	}

	[Token(Token = "0x6000453")]
	[Address(RVA = "0x1676FF0", Offset = "0x1676FF0", VA = "0x1676FF0")]
	public void OnApplicationQuit()
	{
	}

	[Token(Token = "0x6000454")]
	[Address(RVA = "0x1677178", Offset = "0x1677178", VA = "0x1677178")]
	public void AddUser(ulong userID, ref RemotePlayer remoteUser)
	{
	}

	[Token(Token = "0x6000455")]
	[Address(RVA = "0x1675AE0", Offset = "0x1675AE0", VA = "0x1675AE0")]
	public void LogOutputLine(string line)
	{
	}

	[Token(Token = "0x6000456")]
	[Address(RVA = "0x1675FFC", Offset = "0x1675FFC", VA = "0x1675FFC")]
	public static void TerminateWithError(Message msg)
	{
	}

	[Token(Token = "0x600045A")]
	[Address(RVA = "0x1675B94", Offset = "0x1675B94", VA = "0x1675B94")]
	public static void TransitionToState(State newState)
	{
	}

	[Token(Token = "0x600045B")]
	[Address(RVA = "0x167745C", Offset = "0x167745C", VA = "0x167745C")]
	private static void SetSphereColorForState()
	{
	}

	[Token(Token = "0x600045C")]
	[Address(RVA = "0x16775D8", Offset = "0x16775D8", VA = "0x16775D8")]
	public static void SetFloorColorForState(bool host)
	{
	}

	[Token(Token = "0x600045D")]
	[Address(RVA = "0x16776BC", Offset = "0x16776BC", VA = "0x16776BC")]
	public static void MarkAllRemoteUsersAsNotInRoom()
	{
	}

	[Token(Token = "0x600045E")]
	[Address(RVA = "0x1677818", Offset = "0x1677818", VA = "0x1677818")]
	public static void MarkRemoteUserInRoom(ulong userID)
	{
	}

	[Token(Token = "0x600045F")]
	[Address(RVA = "0x16778FC", Offset = "0x16778FC", VA = "0x16778FC")]
	public static void ForgetRemoteUsersNotInRoom()
	{
	}

	[Token(Token = "0x6000460")]
	[Address(RVA = "0x16760B4", Offset = "0x16760B4", VA = "0x16760B4")]
	public static void LogOutput(string line)
	{
	}

	[Token(Token = "0x6000461")]
	[Address(RVA = "0x1677E44", Offset = "0x1677E44", VA = "0x1677E44")]
	public static bool IsUserInRoom(ulong userID)
	{
		return default(bool);
	}

	[Token(Token = "0x6000462")]
	[Address(RVA = "0x1677ED8", Offset = "0x1677ED8", VA = "0x1677ED8")]
	public static void AddRemoteUser(ulong userID)
	{
	}

	[Token(Token = "0x6000463")]
	[Address(RVA = "0x1677C30", Offset = "0x1677C30", VA = "0x1677C30")]
	public static void RemoveRemoteUser(ulong userID)
	{
	}

	[Token(Token = "0x6000464")]
	[Address(RVA = "0x16780E4", Offset = "0x16780E4", VA = "0x16780E4")]
	public void UpdateVoiceData(short[] pcmData, int numChannels)
	{
	}

	[Token(Token = "0x6000465")]
	[Address(RVA = "0x16752BC", Offset = "0x16752BC", VA = "0x16752BC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x8DFE14", Offset = "0x8DFE14")]
	public static void MicFilter(short[] pcmData, UIntPtr pcmDataLength, int frequency, int numChannels)
	{
	}

	[Token(Token = "0x6000466")]
	[Address(RVA = "0x1678228", Offset = "0x1678228", VA = "0x1678228")]
	public static RemotePlayer GetRemoteUser(ulong userID)
	{
		return null;
	}

	[Token(Token = "0x6000467")]
	[Address(RVA = "0x1678304", Offset = "0x1678304", VA = "0x1678304")]
	public SocialPlatformManager()
	{
	}
}
[Token(Token = "0x20000C9")]
public class VoipManager
{
	[Token(Token = "0x6000469")]
	[Address(RVA = "0x1044568", Offset = "0x1044568", VA = "0x1044568")]
	public VoipManager()
	{
	}

	[Token(Token = "0x600046A")]
	[Address(RVA = "0x1044648", Offset = "0x1044648", VA = "0x1044648")]
	public void ConnectTo(ulong userID)
	{
	}

	[Token(Token = "0x600046B")]
	[Address(RVA = "0x104472C", Offset = "0x104472C", VA = "0x104472C")]
	public void Disconnect(ulong userID)
	{
	}

	[Token(Token = "0x600046C")]
	[Address(RVA = "0x10447AC", Offset = "0x10447AC", VA = "0x10447AC")]
	private void VoipConnectRequestCallback(Message<NetworkingPeer> msg)
	{
	}

	[Token(Token = "0x600046D")]
	[Address(RVA = "0x104491C", Offset = "0x104491C", VA = "0x104491C")]
	private void VoipStateChangedCallback(Message<NetworkingPeer> msg)
	{
	}
}
[Token(Token = "0x20000CA")]
public class GazeTarget : MonoBehaviour
{
	[Token(Token = "0x40004D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ovrAvatarGazeTargetType Type;

	[Token(Token = "0x40004D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ovrAvatarGazeTargets RuntimeTargetList;

	[Token(Token = "0x600046E")]
	[Address(RVA = "0x133A004", Offset = "0x133A004", VA = "0x133A004")]
	static GazeTarget()
	{
	}

	[Token(Token = "0x600046F")]
	[Address(RVA = "0x133A08C", Offset = "0x133A08C", VA = "0x133A08C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000470")]
	[Address(RVA = "0x133A200", Offset = "0x133A200", VA = "0x133A200")]
	private void Update()
	{
	}

	[Token(Token = "0x6000471")]
	[Address(RVA = "0x133A264", Offset = "0x133A264", VA = "0x133A264")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000472")]
	[Address(RVA = "0x133A0C8", Offset = "0x133A0C8", VA = "0x133A0C8")]
	private void UpdateGazeTarget()
	{
	}

	[Token(Token = "0x6000473")]
	[Address(RVA = "0x133A328", Offset = "0x133A328", VA = "0x133A328")]
	private ovrAvatarGazeTarget CreateOvrGazeTarget(uint targetId, Vector3 targetPosition, ovrAvatarGazeTargetType targetType)
	{
		return default(ovrAvatarGazeTarget);
	}

	[Token(Token = "0x6000474")]
	[Address(RVA = "0x133A340", Offset = "0x133A340", VA = "0x133A340")]
	public GazeTarget()
	{
	}
}
[Serializable]
[Token(Token = "0x20000CB")]
public class AvatarLayer
{
	[Token(Token = "0x40004D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int layerIndex;

	[Token(Token = "0x6000475")]
	[Address(RVA = "0x1AE0F2C", Offset = "0x1AE0F2C", VA = "0x1AE0F2C")]
	public AvatarLayer()
	{
	}
}
[Serializable]
[Token(Token = "0x20000CC")]
public class PacketRecordSettings
{
	[Token(Token = "0x40004D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	internal bool RecordingFrames;

	[Token(Token = "0x40004D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float UpdateRate;

	[Token(Token = "0x40004D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	internal float AccumulatedTime;

	[Token(Token = "0x6000476")]
	[Address(RVA = "0x10518A0", Offset = "0x10518A0", VA = "0x10518A0")]
	public PacketRecordSettings()
	{
	}
}
[Token(Token = "0x20000CD")]
public class OvrAvatar : MonoBehaviour
{
	[Token(Token = "0x20000CE")]
	public class PacketEventArgs : EventArgs
	{
		[Token(Token = "0x4000530")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly OvrAvatarPacket Packet;

		[Token(Token = "0x60004AB")]
		[Address(RVA = "0xE899CC", Offset = "0xE899CC", VA = "0xE899CC")]
		public PacketEventArgs(OvrAvatarPacket packet)
		{
		}
	}

	[Token(Token = "0x20000CF")]
	public enum HandType
	{
		[Token(Token = "0x4000532")]
		Right,
		[Token(Token = "0x4000533")]
		Left,
		[Token(Token = "0x4000534")]
		Max
	}

	[Token(Token = "0x20000D0")]
	public enum HandJoint
	{
		[Token(Token = "0x4000536")]
		HandBase,
		[Token(Token = "0x4000537")]
		IndexBase,
		[Token(Token = "0x4000538")]
		IndexTip,
		[Token(Token = "0x4000539")]
		ThumbBase,
		[Token(Token = "0x400053A")]
		ThumbTip,
		[Token(Token = "0x400053B")]
		Max
	}

	[Token(Token = "0x20000D1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D65CC", Offset = "0x8D65CC")]
	private sealed class <WaitForMouthAudioSource>d__137 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400053C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400053D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400053E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OvrAvatar <>4__this;

		[Token(Token = "0x17000093")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60004AF")]
			[Address(RVA = "0xE8997C", Offset = "0xE8997C", VA = "0xE8997C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000094")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60004B1")]
			[Address(RVA = "0xE899C4", Offset = "0xE899C4", VA = "0xE899C4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60004AC")]
		[Address(RVA = "0xE897A0", Offset = "0xE897A0", VA = "0xE897A0")]
		[DebuggerHidden]
		public <WaitForMouthAudioSource>d__137(int <>1__state)
		{
		}

		[Token(Token = "0x60004AD")]
		[Address(RVA = "0xE897CC", Offset = "0xE897CC", VA = "0xE897CC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60004AE")]
		[Address(RVA = "0xE897D0", Offset = "0xE897D0", VA = "0xE897D0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60004B0")]
		[Address(RVA = "0xE89984", Offset = "0xE89984", VA = "0xE89984", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40004D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D7B2C", Offset = "0x8D7B2C")]
	public IntPtr sdkAvatar;

	[Token(Token = "0x40004D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string oculusUserID;

	[Token(Token = "0x40004D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OvrAvatarDriver Driver;

	[Token(Token = "0x40004DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D7B64", Offset = "0x8D7B64")]
	public bool EnableBody;

	[Token(Token = "0x40004DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	public bool EnableHands;

	[Token(Token = "0x40004DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
	public bool EnableBase;

	[Token(Token = "0x40004DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x33")]
	public bool EnableExpressive;

	[Token(Token = "0x40004DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D7B9C", Offset = "0x8D7B9C")]
	public bool RecordPackets;

	[Token(Token = "0x40004DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
	public bool UseSDKPackets;

	[Token(Token = "0x40004E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public PacketRecordSettings PacketSettings;

	[Token(Token = "0x40004E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D7BD4", Offset = "0x8D7BD4")]
	public bool StartWithControllers;

	[Token(Token = "0x40004E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AvatarLayer FirstPersonLayer;

	[Token(Token = "0x40004E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AvatarLayer ThirdPersonLayer;

	[Token(Token = "0x40004E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool ShowFirstPerson;

	[Token(Token = "0x40004E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	public bool ShowThirdPerson;

	[Token(Token = "0x40004E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	internal ovrAvatarCapabilities Capabilities;

	[Token(Token = "0x40004E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D7C0C", Offset = "0x8D7C0C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D7C0C", Offset = "0x8D7C0C")]
	internal ovrAvatarAssetLevelOfDetail LevelOfDetail;

	[Token(Token = "0x40004E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D7C7C", Offset = "0x8D7C7C")]
	private bool CombineMeshes;

	[Token(Token = "0x40004E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D7CB4", Offset = "0x8D7CB4")]
	public bool UseTransparentRenderQueue;

	[Token(Token = "0x40004EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D7CEC", Offset = "0x8D7CEC")]
	public Shader Monochrome_SurfaceShader;

	[Token(Token = "0x40004EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Shader Monochrome_SurfaceShader_SelfOccluding;

	[Token(Token = "0x40004EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Shader Monochrome_SurfaceShader_PBS;

	[Token(Token = "0x40004ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Shader Skinshaded_SurfaceShader_SingleComponent;

	[Token(Token = "0x40004EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Shader Skinshaded_VertFrag_SingleComponent;

	[Token(Token = "0x40004EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Shader Skinshaded_VertFrag_CombinedMesh;

	[Token(Token = "0x40004F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Shader Skinshaded_Expressive_SurfaceShader_SingleComponent;

	[Token(Token = "0x40004F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Shader Skinshaded_Expressive_VertFrag_SingleComponent;

	[Token(Token = "0x40004F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Shader Skinshaded_Expressive_VertFrag_CombinedMesh;

	[Token(Token = "0x40004F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Shader Loader_VertFrag_CombinedMesh;

	[Token(Token = "0x40004F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Shader EyeLens;

	[Token(Token = "0x40004F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Shader ControllerShader;

	[Token(Token = "0x40004F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D7D24", Offset = "0x8D7D24")]
	public bool CanOwnMicrophone;

	[Token(Token = "0x40004F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC9")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D7D5C", Offset = "0x8D7D5C")]
	public bool EnableLaughter;

	[Token(Token = "0x40004F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public GameObject MouthAnchor;

	[Token(Token = "0x40004F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public Transform LeftHandCustomPose;

	[Token(Token = "0x40004FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public Transform RightHandCustomPose;

	[Token(Token = "0x40004FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private HashSet<ulong> assetLoadingIds;

	[Token(Token = "0x40004FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private bool assetsFinishedLoading;

	[Token(Token = "0x40004FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private OvrAvatarMaterialManager materialManager;

	[Token(Token = "0x40004FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private bool waitingForCombinedMesh;

	[Token(Token = "0x40004FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool doneExpressiveGlobalInit;

	[Token(Token = "0x4000500")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	private Vector4 clothingAlphaOffset;

	[Token(Token = "0x4000501")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private ulong clothingAlphaTexture;

	[Token(Token = "0x4000502")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private OVRLipSyncMicInput micInput;

	[Token(Token = "0x4000503")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private OVRLipSyncContext lipsyncContext;

	[Token(Token = "0x4000504")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private OVRLipSync.Frame currentFrame;

	[Token(Token = "0x4000505")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private float[] visemes;

	[Token(Token = "0x4000506")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private AudioSource audioSource;

	[Token(Token = "0x4000507")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private ONSPAudioSource spatializedSource;

	[Token(Token = "0x4000508")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private List<float[]> voiceUpdates;

	[Token(Token = "0x4000509")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static ovrAvatarVisemes RuntimeVisemes;

	[Token(Token = "0x400050A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private Transform cachedLeftHandCustomPose;

	[Token(Token = "0x400050B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private Transform[] cachedCustomLeftHandJoints;

	[Token(Token = "0x400050C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private ovrAvatarTransform[] cachedLeftHandTransforms;

	[Token(Token = "0x400050D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private Transform cachedRightHandCustomPose;

	[Token(Token = "0x400050E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private Transform[] cachedCustomRightHandJoints;

	[Token(Token = "0x400050F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private ovrAvatarTransform[] cachedRightHandTransforms;

	[Token(Token = "0x4000510")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private bool showLeftController;

	[Token(Token = "0x4000511")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x189")]
	private bool showRightController;

	[Token(Token = "0x4000512")]
	private const bool USE_MOBILE_TEXTURE_FORMAT = true;

	[Token(Token = "0x4000513")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static readonly Vector3 MOUTH_HEAD_OFFSET;

	[Token(Token = "0x4000514")]
	private const string MOUTH_HELPER_NAME = "MouthAnchor";

	[Token(Token = "0x4000515")]
	private const int VISEME_COUNT = 16;

	[Token(Token = "0x4000516")]
	private const float ACTION_UNIT_ONSET_SPEED = 30f;

	[Token(Token = "0x4000517")]
	private const float ACTION_UNIT_FALLOFF_SPEED = 20f;

	[Token(Token = "0x4000518")]
	private const float VISEME_LEVEL_MULTIPLIER = 1.5f;

	[Token(Token = "0x4000519")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	internal ulong oculusUserIDInternal;

	[Token(Token = "0x400051A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	internal OvrAvatarBase Base;

	[Token(Token = "0x400051B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	internal OvrAvatarTouchController ControllerLeft;

	[Token(Token = "0x400051C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	internal OvrAvatarTouchController ControllerRight;

	[Token(Token = "0x400051D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	internal OvrAvatarBody Body;

	[Token(Token = "0x400051E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	internal OvrAvatarHand HandLeft;

	[Token(Token = "0x400051F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	internal OvrAvatarHand HandRight;

	[Token(Token = "0x4000520")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	internal ovrAvatarLookAndFeelVersion LookAndFeelVersion;

	[Token(Token = "0x4000521")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1CC")]
	internal ovrAvatarLookAndFeelVersion FallbackLookAndFeelVersion;

	[Token(Token = "0x4000522")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	private OvrAvatarPacket CurrentUnityPacket;

	[Token(Token = "0x4000523")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	public EventHandler<PacketEventArgs> PacketRecorded;

	[Token(Token = "0x4000524")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static string[,] HandJoints;

	[Token(Token = "0x4000525")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static Vector3 MOUTH_POSITION_OFFSET;

	[Token(Token = "0x4000526")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static string VOICE_PROPERTY;

	[Token(Token = "0x4000527")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static string MOUTH_POSITION_PROPERTY;

	[Token(Token = "0x4000528")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private static string MOUTH_DIRECTION_PROPERTY;

	[Token(Token = "0x4000529")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private static string MOUTH_SCALE_PROPERTY;

	[Token(Token = "0x400052A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private static float MOUTH_SCALE_GLOBAL;

	[Token(Token = "0x400052B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private static float MOUTH_MAX_GLOBAL;

	[Token(Token = "0x400052C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private static string NECK_JONT;

	[Token(Token = "0x400052D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	public float VoiceAmplitude;

	[Token(Token = "0x400052E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E4")]
	public bool EnableMouthVertexAnimation;

	[Token(Token = "0x400052F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private static ovrAvatarLights ovrLights;

	[Token(Token = "0x6000477")]
	[Address(RVA = "0x191ABCC", Offset = "0x191ABCC", VA = "0x191ABCC")]
	static OvrAvatar()
	{
	}

	[Token(Token = "0x6000478")]
	[Address(RVA = "0x191B06C", Offset = "0x191B06C", VA = "0x191B06C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000479")]
	[Address(RVA = "0x191B100", Offset = "0x191B100", VA = "0x191B100")]
	public void AssetLoadedCallback(OvrAvatarAsset asset)
	{
	}

	[Token(Token = "0x600047A")]
	[Address(RVA = "0x191B168", Offset = "0x191B168", VA = "0x191B168")]
	public void CombinedMeshLoadedCallback(IntPtr assetPtr)
	{
	}

	[Token(Token = "0x600047B")]
	[Address(RVA = "0x191B298", Offset = "0x191B298", VA = "0x191B298")]
	private OvrAvatarSkinnedMeshRenderComponent AddSkinnedMeshRenderComponent(GameObject gameObject, ovrAvatarRenderPart_SkinnedMeshRender skinnedMeshRender)
	{
		return null;
	}

	[Token(Token = "0x600047C")]
	[Address(RVA = "0x191B500", Offset = "0x191B500", VA = "0x191B500")]
	private OvrAvatarSkinnedMeshRenderPBSComponent AddSkinnedMeshRenderPBSComponent(GameObject gameObject, ovrAvatarRenderPart_SkinnedMeshRenderPBS skinnedMeshRenderPBS)
	{
		return null;
	}

	[Token(Token = "0x600047D")]
	[Address(RVA = "0x191B734", Offset = "0x191B734", VA = "0x191B734")]
	private OvrAvatarSkinnedMeshPBSV2RenderComponent AddSkinnedMeshRenderPBSV2Component(IntPtr renderPart, GameObject go, ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2 skinnedMeshRenderPBSV2, bool isBodyPartZero, bool isControllerModel)
	{
		return null;
	}

	[Token(Token = "0x600047E")]
	[Address(RVA = "0x191BD68", Offset = "0x191BD68", VA = "0x191BD68")]
	public static IntPtr GetRenderPart(ovrAvatarComponent component, uint renderPartIndex)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x600047F")]
	[Address(RVA = "0x191BE44", Offset = "0x191BE44", VA = "0x191BE44")]
	private static string GetRenderPartName(ovrAvatarComponent component, uint renderPartIndex)
	{
		return null;
	}

	[Token(Token = "0x6000480")]
	[Address(RVA = "0x191BEBC", Offset = "0x191BEBC", VA = "0x191BEBC")]
	internal static void ConvertTransform(float[] transform, ref ovrAvatarTransform target)
	{
	}

	[Token(Token = "0x6000481")]
	[Address(RVA = "0x191BFA4", Offset = "0x191BFA4", VA = "0x191BFA4")]
	internal static void ConvertTransform(ovrAvatarTransform transform, Transform target)
	{
	}

	[Token(Token = "0x6000482")]
	[Address(RVA = "0x191C030", Offset = "0x191C030", VA = "0x191C030")]
	public static ovrAvatarTransform CreateOvrAvatarTransform(Vector3 position, Quaternion orientation)
	{
		return default(ovrAvatarTransform);
	}

	[Token(Token = "0x6000483")]
	[Address(RVA = "0x191C0B8", Offset = "0x191C0B8", VA = "0x191C0B8")]
	private static ovrAvatarGazeTarget CreateOvrGazeTarget(uint targetId, Vector3 targetPosition, ovrAvatarGazeTargetType targetType)
	{
		return default(ovrAvatarGazeTarget);
	}

	[Token(Token = "0x6000484")]
	[Address(RVA = "0x191C0D0", Offset = "0x191C0D0", VA = "0x191C0D0")]
	private void BuildRenderComponents()
	{
	}

	[Token(Token = "0x6000485")]
	private void AddAvatarComponent<T>(ref T root, ovrAvatarComponent nativeComponent) where T : OvrAvatarComponent
	{
	}

	[Token(Token = "0x6000486")]
	[Address(RVA = "0x191C580", Offset = "0x191C580", VA = "0x191C580")]
	private void UpdateCustomPoses()
	{
	}

	[Token(Token = "0x6000487")]
	[Address(RVA = "0x191C900", Offset = "0x191C900", VA = "0x191C900")]
	private static bool UpdatePoseRoot(Transform poseRoot, ref Transform cachedPoseRoot, ref Transform[] cachedPoseJoints, ref ovrAvatarTransform[] transforms)
	{
		return default(bool);
	}

	[Token(Token = "0x6000488")]
	[Address(RVA = "0x191CAEC", Offset = "0x191CAEC", VA = "0x191CAEC")]
	private static bool UpdateTransforms(Transform[] joints, ovrAvatarTransform[] transforms)
	{
		return default(bool);
	}

	[Token(Token = "0x6000489")]
	[Address(RVA = "0x191CD38", Offset = "0x191CD38", VA = "0x191CD38")]
	private static void OrderJoints(Transform transform, List<Transform> joints)
	{
	}

	[Token(Token = "0x600048A")]
	[Address(RVA = "0x191CE2C", Offset = "0x191CE2C", VA = "0x191CE2C")]
	private void AvatarSpecificationCallback(IntPtr avatarSpecification)
	{
	}

	[Token(Token = "0x600048B")]
	[Address(RVA = "0x191D940", Offset = "0x191D940", VA = "0x191D940")]
	private void Start()
	{
	}

	[Token(Token = "0x600048C")]
	[Address(RVA = "0x191DD58", Offset = "0x191DD58", VA = "0x191DD58")]
	private void Update()
	{
	}

	[Token(Token = "0x600048D")]
	[Address(RVA = "0x191E7E8", Offset = "0x191E7E8", VA = "0x191E7E8")]
	public static ovrAvatarHandInputState CreateInputState(ovrAvatarTransform transform, OvrAvatarDriver.ControllerPose pose)
	{
		return default(ovrAvatarHandInputState);
	}

	[Token(Token = "0x600048E")]
	[Address(RVA = "0x191E83C", Offset = "0x191E83C", VA = "0x191E83C")]
	public void ShowControllers(bool show)
	{
	}

	[Token(Token = "0x600048F")]
	[Address(RVA = "0x191D0D4", Offset = "0x191D0D4", VA = "0x191D0D4")]
	public void ShowLeftController(bool show)
	{
	}

	[Token(Token = "0x6000490")]
	[Address(RVA = "0x191D178", Offset = "0x191D178", VA = "0x191D178")]
	public void ShowRightController(bool show)
	{
	}

	[Token(Token = "0x6000491")]
	[Address(RVA = "0x191E86C", Offset = "0x191E86C", VA = "0x191E86C")]
	public void UpdateVoiceVisualization(float[] voiceSamples)
	{
	}

	[Token(Token = "0x6000492")]
	[Address(RVA = "0x191E124", Offset = "0x191E124", VA = "0x191E124")]
	private void RecordFrame()
	{
	}

	[Token(Token = "0x6000493")]
	[Address(RVA = "0x191EADC", Offset = "0x191EADC", VA = "0x191EADC")]
	private void RecordUnityFrame()
	{
	}

	[Token(Token = "0x6000494")]
	[Address(RVA = "0x191E8D0", Offset = "0x191E8D0", VA = "0x191E8D0")]
	private void RecordSDKFrame()
	{
	}

	[Token(Token = "0x6000495")]
	[Address(RVA = "0x191F268", Offset = "0x191F268", VA = "0x191F268")]
	private void AddRenderParts(OvrAvatarComponent ovrComponent, ovrAvatarComponent component, Transform parent)
	{
	}

	[Token(Token = "0x6000496")]
	[Address(RVA = "0x191F6E4", Offset = "0x191F6E4", VA = "0x191F6E4")]
	public void RefreshBodyParts()
	{
	}

	[Token(Token = "0x6000497")]
	[Address(RVA = "0x191FAE8", Offset = "0x191FAE8", VA = "0x191FAE8")]
	public ovrAvatarBodyComponent? GetBodyComponent()
	{
		return null;
	}

	[Token(Token = "0x6000498")]
	[Address(RVA = "0x191FC3C", Offset = "0x191FC3C", VA = "0x191FC3C")]
	public Transform GetHandTransform(HandType hand, HandJoint joint)
	{
		return null;
	}

	[Token(Token = "0x6000499")]
	[Address(RVA = "0x191FE20", Offset = "0x191FE20", VA = "0x191FE20")]
	public void GetPointingDirection(HandType hand, ref Vector3 forward, ref Vector3 up)
	{
	}

	[Token(Token = "0x600049A")]
	[Address(RVA = "0x191E368", Offset = "0x191E368", VA = "0x191E368")]
	private void UpdateVoiceBehavior()
	{
	}

	[Token(Token = "0x600049B")]
	[Address(RVA = "0x191FEF4", Offset = "0x191FEF4", VA = "0x191FEF4")]
	private bool IsValidMic()
	{
		return default(bool);
	}

	[Token(Token = "0x600049C")]
	[Address(RVA = "0x191E134", Offset = "0x191E134", VA = "0x191E134")]
	private void InitPostLoad()
	{
	}

	[Token(Token = "0x600049D")]
	[Address(RVA = "0x191FFE4", Offset = "0x191FFE4", VA = "0x191FFE4")]
	private static void ExpressiveGlobalInit()
	{
	}

	[Token(Token = "0x600049E")]
	[Address(RVA = "0x1920698", Offset = "0x1920698", VA = "0x1920698")]
	private static void InitializeLights()
	{
	}

	[Token(Token = "0x600049F")]
	[Address(RVA = "0x1920B7C", Offset = "0x1920B7C", VA = "0x1920B7C")]
	private static ovrAvatarLight CreateLightDirectional(uint id, Vector3 direction, float intensity, ref ovrAvatarLight light)
	{
		return default(ovrAvatarLight);
	}

	[Token(Token = "0x60004A0")]
	[Address(RVA = "0x1920BA4", Offset = "0x1920BA4", VA = "0x1920BA4")]
	private static ovrAvatarLight CreateLightPoint(uint id, Vector3 position, float range, float intensity, ref ovrAvatarLight light)
	{
		return default(ovrAvatarLight);
	}

	[Token(Token = "0x60004A1")]
	[Address(RVA = "0x1920BCC", Offset = "0x1920BCC", VA = "0x1920BCC")]
	private static ovrAvatarLight CreateLightSpot(uint id, Vector3 position, Vector3 direction, float spotAngleDeg, float range, float intensity, ref ovrAvatarLight light)
	{
		return default(ovrAvatarLight);
	}

	[Token(Token = "0x60004A2")]
	[Address(RVA = "0x191E674", Offset = "0x191E674", VA = "0x191E674")]
	private void UpdateExpressive()
	{
	}

	[Token(Token = "0x60004A3")]
	[Address(RVA = "0x19200B4", Offset = "0x19200B4", VA = "0x19200B4")]
	private void ConfigureHelpers()
	{
	}

	[Token(Token = "0x60004A4")]
	[Address(RVA = "0x1920FFC", Offset = "0x1920FFC", VA = "0x1920FFC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8DFE74", Offset = "0x8DFE74")]
	private IEnumerator WaitForMouthAudioSource()
	{
		return null;
	}

	[Token(Token = "0x60004A5")]
	[Address(RVA = "0x1921074", Offset = "0x1921074", VA = "0x1921074")]
	public void DestroyHelperObjects()
	{
	}

	[Token(Token = "0x60004A6")]
	[Address(RVA = "0x1920EBC", Offset = "0x1920EBC", VA = "0x1920EBC")]
	public GameObject CreateHelperObject(Transform parent, Vector3 localPositionOffset, string helperName, string helperTag = "")
	{
		return null;
	}

	[Token(Token = "0x60004A7")]
	[Address(RVA = "0x1921138", Offset = "0x1921138", VA = "0x1921138")]
	public void UpdateVoiceData(short[] pcmData, int numChannels)
	{
	}

	[Token(Token = "0x60004A8")]
	[Address(RVA = "0x1921220", Offset = "0x1921220", VA = "0x1921220")]
	public void UpdateVoiceData(float[] pcmData, int numChannels)
	{
	}

	[Token(Token = "0x60004A9")]
	[Address(RVA = "0x1920C08", Offset = "0x1920C08", VA = "0x1920C08")]
	private void UpdateFacewave()
	{
	}

	[Token(Token = "0x60004AA")]
	[Address(RVA = "0x1921308", Offset = "0x1921308", VA = "0x1921308")]
	public OvrAvatar()
	{
	}
}
[Token(Token = "0x20000D2")]
public class OvrAvatarAsset
{
	[Token(Token = "0x400053F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong assetID;

	[Token(Token = "0x60004B2")]
	[Address(RVA = "0x1921504", Offset = "0x1921504", VA = "0x1921504")]
	public OvrAvatarAsset()
	{
	}
}
[Token(Token = "0x20000D3")]
public class OvrAvatarAssetMesh : OvrAvatarAsset
{
	[Token(Token = "0x4000540")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Mesh mesh;

	[Token(Token = "0x4000541")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ovrAvatarSkinnedMeshPose skinnedBindPose;

	[Token(Token = "0x4000542")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string[] jointNames;

	[Token(Token = "0x60004B3")]
	[Address(RVA = "0x19215D4", Offset = "0x19215D4", VA = "0x19215D4")]
	public OvrAvatarAssetMesh(ulong _assetId, IntPtr asset, ovrAvatarAssetType meshType)
	{
	}

	[Token(Token = "0x60004B4")]
	[Address(RVA = "0x192288C", Offset = "0x192288C", VA = "0x192288C")]
	private void LoadSubmeshes(IntPtr asset, IntPtr indexBufferPtr, ulong indexCount)
	{
	}

	[Token(Token = "0x60004B5")]
	[Address(RVA = "0x1922460", Offset = "0x1922460", VA = "0x1922460")]
	private void LoadBlendShapes(IntPtr asset, long vertexCount)
	{
	}

	[Token(Token = "0x60004B6")]
	[Address(RVA = "0x19221E4", Offset = "0x19221E4", VA = "0x19221E4")]
	private void SetSkinnedBindPose(IntPtr asset, ovrAvatarAssetType meshType)
	{
	}

	[Token(Token = "0x60004B7")]
	[Address(RVA = "0x19222CC", Offset = "0x19222CC", VA = "0x19222CC")]
	private void GetVertexAndIndexData(IntPtr asset, ovrAvatarAssetType meshType, out long vertexCount, out IntPtr vertexBuffer, out uint indexCount, out IntPtr indexBuffer)
	{
	}

	[Token(Token = "0x60004B8")]
	[Address(RVA = "0x1922B1C", Offset = "0x1922B1C", VA = "0x1922B1C")]
	public SkinnedMeshRenderer CreateSkinnedMeshRendererOnObject(GameObject target)
	{
		return null;
	}
}
[Token(Token = "0x20000D4")]
public class OvrAvatarAssetTexture : OvrAvatarAsset
{
	[Token(Token = "0x4000543")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Texture2D texture;

	[Token(Token = "0x4000544")]
	private const int ASTCHeaderSize = 16;

	[Token(Token = "0x60004B9")]
	[Address(RVA = "0x19230E4", Offset = "0x19230E4", VA = "0x19230E4")]
	public OvrAvatarAssetTexture(ulong _assetId, IntPtr asset)
	{
	}
}
[Token(Token = "0x20000D5")]
public class OvrAvatarBase : OvrAvatarComponent
{
	[Token(Token = "0x4000545")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private ovrAvatarBaseComponent component;

	[Token(Token = "0x60004BA")]
	[Address(RVA = "0x1923360", Offset = "0x1923360", VA = "0x1923360")]
	private void Update()
	{
	}

	[Token(Token = "0x60004BB")]
	[Address(RVA = "0x19237B0", Offset = "0x19237B0", VA = "0x19237B0")]
	public OvrAvatarBase()
	{
	}
}
[Token(Token = "0x20000D6")]
public class OvrAvatarBody : OvrAvatarComponent
{
	[Token(Token = "0x4000546")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ovrAvatarBodyComponent component;

	[Token(Token = "0x60004BC")]
	[Address(RVA = "0x191F978", Offset = "0x191F978", VA = "0x191F978")]
	public ovrAvatarComponent? GetNativeAvatarComponent()
	{
		return null;
	}

	[Token(Token = "0x60004BD")]
	[Address(RVA = "0x19238E0", Offset = "0x19238E0", VA = "0x19238E0")]
	private void Update()
	{
	}

	[Token(Token = "0x60004BE")]
	[Address(RVA = "0x1923A10", Offset = "0x1923A10", VA = "0x1923A10")]
	public OvrAvatarBody()
	{
	}
}
[Token(Token = "0x20000D7")]
public class OvrAvatarComponent : MonoBehaviour
{
	[Token(Token = "0x4000547")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly string[] LayerKeywords;

	[Token(Token = "0x4000548")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static readonly string[] LayerSampleModeParameters;

	[Token(Token = "0x4000549")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static readonly string[] LayerBlendModeParameters;

	[Token(Token = "0x400054A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static readonly string[] LayerMaskTypeParameters;

	[Token(Token = "0x400054B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static readonly string[] LayerColorParameters;

	[Token(Token = "0x400054C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static readonly string[] LayerSurfaceParameters;

	[Token(Token = "0x400054D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static readonly string[] LayerSampleParametersParameters;

	[Token(Token = "0x400054E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static readonly string[] LayerMaskParametersParameters;

	[Token(Token = "0x400054F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public static readonly string[] LayerMaskAxisParameters;

	[Token(Token = "0x4000550")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Dictionary<Material, ovrAvatarMaterialState> materialStates;

	[Token(Token = "0x4000551")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<OvrAvatarRenderComponent> RenderParts;

	[Token(Token = "0x4000552")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected OvrAvatar owner;

	[Token(Token = "0x4000553")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected ovrAvatarComponent nativeAvatarComponent;

	[Token(Token = "0x60004BF")]
	[Address(RVA = "0x1923A70", Offset = "0x1923A70", VA = "0x1923A70")]
	public void SetOvrAvatarOwner(OvrAvatar ovrAvatarOwner)
	{
	}

	[Token(Token = "0x60004C0")]
	[Address(RVA = "0x1923490", Offset = "0x1923490", VA = "0x1923490")]
	public void UpdateAvatar(IntPtr nativeComponent)
	{
	}

	[Token(Token = "0x60004C1")]
	[Address(RVA = "0x19240C0", Offset = "0x19240C0", VA = "0x19240C0")]
	protected void UpdateActive(OvrAvatar avatar, ovrAvatarVisibilityFlags mask)
	{
	}

	[Token(Token = "0x60004C2")]
	[Address(RVA = "0x1924120", Offset = "0x1924120", VA = "0x1924120")]
	public void UpdateAvatarMaterial(Material mat, ovrAvatarMaterialState matState)
	{
	}

	[Token(Token = "0x60004C3")]
	[Address(RVA = "0x19248D4", Offset = "0x19248D4", VA = "0x19248D4")]
	public static Texture2D GetLoadedTexture(ulong assetId)
	{
		return null;
	}

	[Token(Token = "0x60004C4")]
	[Address(RVA = "0x1923810", Offset = "0x1923810", VA = "0x1923810")]
	public OvrAvatarComponent()
	{
	}
}
[Token(Token = "0x20000D8")]
public abstract class OvrAvatarDriver : MonoBehaviour
{
	[Token(Token = "0x20000D9")]
	public enum PacketMode
	{
		[Token(Token = "0x4000558")]
		SDK,
		[Token(Token = "0x4000559")]
		Unity
	}

	[Token(Token = "0x20000DA")]
	public struct ControllerPose
	{
		[Token(Token = "0x400055A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ovrAvatarButton buttons;

		[Token(Token = "0x400055B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public ovrAvatarTouch touches;

		[Token(Token = "0x400055C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Vector2 joystickPosition;

		[Token(Token = "0x400055D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float indexTrigger;

		[Token(Token = "0x400055E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float handTrigger;

		[Token(Token = "0x400055F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool isActive;

		[Token(Token = "0x60004CC")]
		[Address(RVA = "0xE89A4C", Offset = "0xE89A4C", VA = "0xE89A4C")]
		public static ControllerPose Interpolate(ControllerPose a, ControllerPose b, float t)
		{
			return default(ControllerPose);
		}
	}

	[Token(Token = "0x20000DB")]
	public struct PoseFrame
	{
		[Token(Token = "0x4000560")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 headPosition;

		[Token(Token = "0x4000561")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Quaternion headRotation;

		[Token(Token = "0x4000562")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector3 handLeftPosition;

		[Token(Token = "0x4000563")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Quaternion handLeftRotation;

		[Token(Token = "0x4000564")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Vector3 handRightPosition;

		[Token(Token = "0x4000565")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public Quaternion handRightRotation;

		[Token(Token = "0x4000566")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float voiceAmplitude;

		[Token(Token = "0x4000567")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public ControllerPose controllerLeftPose;

		[Token(Token = "0x4000568")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public ControllerPose controllerRightPose;

		[Token(Token = "0x60004CD")]
		[Address(RVA = "0xE89B28", Offset = "0xE89B28", VA = "0xE89B28")]
		public static PoseFrame Interpolate(PoseFrame a, PoseFrame b, float t)
		{
			return default(PoseFrame);
		}
	}

	[Token(Token = "0x4000554")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PacketMode Mode;

	[Token(Token = "0x4000555")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	protected PoseFrame CurrentPose;

	[Token(Token = "0x4000556")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private ovrAvatarControllerType ControllerType;

	[Token(Token = "0x60004C6")]
	[Address(RVA = "0x1926204", Offset = "0x1926204", VA = "0x1926204")]
	public PoseFrame GetCurrentPose()
	{
		return default(PoseFrame);
	}

	[Token(Token = "0x60004C7")]
	public abstract void UpdateTransforms(IntPtr sdkAvatar);

	[Token(Token = "0x60004C8")]
	[Address(RVA = "0x1926214", Offset = "0x1926214", VA = "0x1926214")]
	private void Start()
	{
	}

	[Token(Token = "0x60004C9")]
	[Address(RVA = "0x191D21C", Offset = "0x191D21C", VA = "0x191D21C")]
	public void UpdateTransformsFromPose(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x60004CA")]
	[Address(RVA = "0x192629C", Offset = "0x192629C", VA = "0x192629C")]
	public static bool GetIsTrackedRemote()
	{
		return default(bool);
	}

	[Token(Token = "0x60004CB")]
	[Address(RVA = "0x19262A4", Offset = "0x19262A4", VA = "0x19262A4")]
	protected OvrAvatarDriver()
	{
	}
}
[Token(Token = "0x20000DC")]
public class OvrAvatarHand : OvrAvatarComponent
{
	[Token(Token = "0x4000569")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool isLeftHand;

	[Token(Token = "0x400056A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private ovrAvatarHandComponent component;

	[Token(Token = "0x60004CE")]
	[Address(RVA = "0x19262B4", Offset = "0x19262B4", VA = "0x19262B4")]
	private void Update()
	{
	}

	[Token(Token = "0x60004CF")]
	[Address(RVA = "0x1926424", Offset = "0x1926424", VA = "0x1926424")]
	public OvrAvatarHand()
	{
	}
}
[Token(Token = "0x20000DD")]
public class OvrAvatarLocalDriver : OvrAvatarDriver
{
	[Token(Token = "0x400056B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Vector3 centerEyePosition;

	[Token(Token = "0x400056C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private Quaternion centerEyeRotation;

	[Token(Token = "0x400056D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private float voiceAmplitude;

	[Token(Token = "0x60004D0")]
	[Address(RVA = "0x192648C", Offset = "0x192648C", VA = "0x192648C")]
	private ControllerPose GetMalibuControllerPose(OVRInput.Controller controller)
	{
		return default(ControllerPose);
	}

	[Token(Token = "0x60004D1")]
	[Address(RVA = "0x19265F0", Offset = "0x19265F0", VA = "0x19265F0")]
	private ControllerPose GetControllerPose(OVRInput.Controller controller)
	{
		return default(ControllerPose);
	}

	[Token(Token = "0x60004D2")]
	[Address(RVA = "0x192698C", Offset = "0x192698C", VA = "0x192698C")]
	private void CalculateCurrentPose()
	{
	}

	[Token(Token = "0x60004D3")]
	[Address(RVA = "0x1926BB0", Offset = "0x1926BB0", VA = "0x1926BB0", Slot = "4")]
	public override void UpdateTransforms(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x60004D4")]
	[Address(RVA = "0x1926BDC", Offset = "0x1926BDC", VA = "0x1926BDC")]
	public OvrAvatarLocalDriver()
	{
	}
}
[Token(Token = "0x20000DE")]
public class OvrAvatarMaterialManager : MonoBehaviour
{
	[Token(Token = "0x20000DF")]
	public enum TextureType
	{
		[Token(Token = "0x400058F")]
		DiffuseTextures,
		[Token(Token = "0x4000590")]
		NormalMaps,
		[Token(Token = "0x4000591")]
		RoughnessMaps,
		[Token(Token = "0x4000592")]
		Count
	}

	[Token(Token = "0x20000E0")]
	public struct AvatarComponentMaterialProperties
	{
		[Token(Token = "0x4000593")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ovrAvatarBodyPartType TypeIndex;

		[Token(Token = "0x4000594")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public Color Color;

		[Token(Token = "0x4000595")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Texture2D[] Textures;

		[Token(Token = "0x4000596")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float DiffuseIntensity;

		[Token(Token = "0x4000597")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float RimIntensity;

		[Token(Token = "0x4000598")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float ReflectionIntensity;
	}

	[Token(Token = "0x20000E1")]
	public struct AvatarTextureArrayProperties
	{
		[Token(Token = "0x4000599")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Texture2D[] Textures;

		[Token(Token = "0x400059A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Texture2DArray TextureArray;
	}

	[Token(Token = "0x20000E2")]
	public struct AvatarMaterialPropertyBlock
	{
		[Token(Token = "0x400059B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector4[] Colors;

		[Token(Token = "0x400059C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float[] DiffuseIntensities;

		[Token(Token = "0x400059D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float[] RimIntensities;

		[Token(Token = "0x400059E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float[] ReflectionIntensities;
	}

	[Serializable]
	[Token(Token = "0x20000E3")]
	public class AvatarMaterialConfig
	{
		[Token(Token = "0x400059F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AvatarComponentMaterialProperties[] ComponentMaterialProperties;

		[Token(Token = "0x40005A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AvatarMaterialPropertyBlock MaterialPropertyBlock;

		[Token(Token = "0x60004E4")]
		[Address(RVA = "0xE8A56C", Offset = "0xE8A56C", VA = "0xE8A56C")]
		public AvatarMaterialConfig()
		{
		}
	}

	[Token(Token = "0x20000E4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D65DC", Offset = "0x8D65DC")]
	private sealed class <RunLoadingAnimation>d__49 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40005A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40005A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40005A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OvrAvatarMaterialManager <>4__this;

		[Token(Token = "0x40005A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Action callBack;

		[Token(Token = "0x40005A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int <srcBlend>5__2;

		[Token(Token = "0x40005A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int <dstBlend>5__3;

		[Token(Token = "0x40005A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string <lightModeTag>5__4;

		[Token(Token = "0x40005A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private string <renderTypeTag>5__5;

		[Token(Token = "0x40005A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private string <renderQueueTag>5__6;

		[Token(Token = "0x40005AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private string <ignoreProjectorTag>5__7;

		[Token(Token = "0x40005AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int <renderQueue>5__8;

		[Token(Token = "0x40005AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private bool <transparentQueue>5__9;

		[Token(Token = "0x17000095")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60004E8")]
			[Address(RVA = "0xE8A51C", Offset = "0xE8A51C", VA = "0xE8A51C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000096")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60004EA")]
			[Address(RVA = "0xE8A564", Offset = "0xE8A564", VA = "0xE8A564", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60004E5")]
		[Address(RVA = "0xE89E2C", Offset = "0xE89E2C", VA = "0xE89E2C")]
		[DebuggerHidden]
		public <RunLoadingAnimation>d__49(int <>1__state)
		{
		}

		[Token(Token = "0x60004E6")]
		[Address(RVA = "0xE89E58", Offset = "0xE89E58", VA = "0xE89E58", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60004E7")]
		[Address(RVA = "0xE89E5C", Offset = "0xE89E5C", VA = "0xE89E5C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60004E9")]
		[Address(RVA = "0xE8A524", Offset = "0xE8A524", VA = "0xE8A524", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400056E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Renderer TargetRenderer;

	[Token(Token = "0x400056F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private AvatarTextureArrayProperties[] TextureArrays;

	[Token(Token = "0x4000570")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly string[] TextureTypeToShaderProperties;

	[Token(Token = "0x4000571")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AvatarMaterialConfig LocalAvatarConfig;

	[Token(Token = "0x4000572")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<ReflectionProbeBlendInfo> ReflectionProbes;

	[Token(Token = "0x4000573")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Shader CombinedShader;

	[Token(Token = "0x4000574")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string AVATAR_SHADER_LOADER;

	[Token(Token = "0x4000575")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static string AVATAR_SHADER_MAINTEX;

	[Token(Token = "0x4000576")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static string AVATAR_SHADER_NORMALMAP;

	[Token(Token = "0x4000577")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static string AVATAR_SHADER_ROUGHNESSMAP;

	[Token(Token = "0x4000578")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static string AVATAR_SHADER_COLOR;

	[Token(Token = "0x4000579")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static string AVATAR_SHADER_DIFFUSEINTENSITY;

	[Token(Token = "0x400057A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static string AVATAR_SHADER_RIMINTENSITY;

	[Token(Token = "0x400057B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static string AVATAR_SHADER_REFLECTIONINTENSITY;

	[Token(Token = "0x400057C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public static string AVATAR_SHADER_CUBEMAP;

	[Token(Token = "0x400057D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public static string AVATAR_SHADER_ALPHA;

	[Token(Token = "0x400057E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public static string AVATAR_SHADER_LOADING_DIMMER;

	[Token(Token = "0x400057F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public static string AVATAR_SHADER_IRIS_COLOR;

	[Token(Token = "0x4000580")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public static string AVATAR_SHADER_LIP_COLOR;

	[Token(Token = "0x4000581")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public static string AVATAR_SHADER_BROW_COLOR;

	[Token(Token = "0x4000582")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public static string AVATAR_SHADER_LASH_COLOR;

	[Token(Token = "0x4000583")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public static string AVATAR_SHADER_SCLERA_COLOR;

	[Token(Token = "0x4000584")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public static string AVATAR_SHADER_GUM_COLOR;

	[Token(Token = "0x4000585")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public static string AVATAR_SHADER_TEETH_COLOR;

	[Token(Token = "0x4000586")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public static string AVATAR_SHADER_LIP_SMOOTHNESS;

	[Token(Token = "0x4000587")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public static float[] DiffuseIntensities;

	[Token(Token = "0x4000588")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public static float[] RimIntensities;

	[Token(Token = "0x4000589")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public static float[] ReflectionIntensities;

	[Token(Token = "0x400058A")]
	private const float LOADING_ANIMATION_AMPLITUDE = 0.5f;

	[Token(Token = "0x400058B")]
	private const float LOADING_ANIMATION_PERIOD = 0.35f;

	[Token(Token = "0x400058C")]
	private const float LOADING_ANIMATION_CURVE_SCALE = 0.25f;

	[Token(Token = "0x400058D")]
	private const float LOADING_ANIMATION_DIMMER_MIN = 0.3f;

	[Token(Token = "0x60004D5")]
	[Address(RVA = "0x1926C28", Offset = "0x1926C28", VA = "0x1926C28")]
	public void CreateTextureArrays()
	{
	}

	[Token(Token = "0x60004D6")]
	[Address(RVA = "0x1926E08", Offset = "0x1926E08", VA = "0x1926E08")]
	public void SetRenderer(Renderer renderer)
	{
	}

	[Token(Token = "0x60004D7")]
	[Address(RVA = "0x1926E48", Offset = "0x1926E48", VA = "0x1926E48")]
	public void OnCombinedMeshReady()
	{
	}

	[Token(Token = "0x60004D8")]
	[Address(RVA = "0x19275DC", Offset = "0x19275DC", VA = "0x19275DC")]
	public void AddTextureIDToTextureManager(ulong assetID, bool isSingleComponent)
	{
	}

	[Token(Token = "0x60004D9")]
	[Address(RVA = "0x19278C4", Offset = "0x19278C4", VA = "0x19278C4")]
	private void DeleteTextureSet()
	{
	}

	[Token(Token = "0x60004DA")]
	[Address(RVA = "0x1926EE4", Offset = "0x1926EE4", VA = "0x1926EE4")]
	public void InitTextureArrays()
	{
	}

	[Token(Token = "0x60004DB")]
	[Address(RVA = "0x19279B0", Offset = "0x19279B0", VA = "0x19279B0")]
	private void ProcessTexturesWithMips(Texture2D[] textures, int texArrayResolution, Texture2DArray texArray)
	{
	}

	[Token(Token = "0x60004DC")]
	[Address(RVA = "0x1927338", Offset = "0x1927338", VA = "0x1927338")]
	private void SetMaterialPropertyBlock()
	{
	}

	[Token(Token = "0x60004DD")]
	[Address(RVA = "0x1927C40", Offset = "0x1927C40", VA = "0x1927C40")]
	private void ApplyMaterialPropertyBlock()
	{
	}

	[Token(Token = "0x60004DE")]
	[Address(RVA = "0x1927EE4", Offset = "0x1927EE4", VA = "0x1927EE4")]
	public static ovrAvatarBodyPartType GetComponentType(string objectName)
	{
		return default(ovrAvatarBodyPartType);
	}

	[Token(Token = "0x60004DF")]
	[Address(RVA = "0x192800C", Offset = "0x192800C", VA = "0x192800C")]
	private ulong GetTextureIDForType(ovrAvatarPBSMaterialState materialState, TextureType type)
	{
		return default(ulong);
	}

	[Token(Token = "0x60004E0")]
	[Address(RVA = "0x1928044", Offset = "0x1928044", VA = "0x1928044")]
	public void ValidateTextures(ovrAvatarPBSMaterialState[] materialStates)
	{
	}

	[Token(Token = "0x60004E1")]
	[Address(RVA = "0x1927548", Offset = "0x1927548", VA = "0x1927548")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8DFF24", Offset = "0x8DFF24")]
	private IEnumerator RunLoadingAnimation(Action callBack)
	{
		return null;
	}

	[Token(Token = "0x60004E2")]
	[Address(RVA = "0x1928FAC", Offset = "0x1928FAC", VA = "0x1928FAC")]
	public OvrAvatarMaterialManager()
	{
	}
}
[Token(Token = "0x20000E5")]
public class OvrAvatarPacket
{
	[Token(Token = "0x40005AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public IntPtr ovrNativePacket;

	[Token(Token = "0x40005AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<float> frameTimes;

	[Token(Token = "0x40005AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<OvrAvatarDriver.PoseFrame> frames;

	[Token(Token = "0x40005B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<byte[]> encodedAudioPackets;

	[Token(Token = "0x17000097")]
	public float Duration
	{
		[Token(Token = "0x60004EB")]
		[Address(RVA = "0x191EF60", Offset = "0x191EF60", VA = "0x191EF60")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000098")]
	public OvrAvatarDriver.PoseFrame FinalFrame
	{
		[Token(Token = "0x60004EC")]
		[Address(RVA = "0x191F0AC", Offset = "0x191F0AC", VA = "0x191F0AC")]
		get
		{
			return default(OvrAvatarDriver.PoseFrame);
		}
	}

	[Token(Token = "0x60004ED")]
	[Address(RVA = "0x191F13C", Offset = "0x191F13C", VA = "0x191F13C")]
	public OvrAvatarPacket()
	{
	}

	[Token(Token = "0x60004EE")]
	[Address(RVA = "0x191ED94", Offset = "0x191ED94", VA = "0x191ED94")]
	public OvrAvatarPacket(OvrAvatarDriver.PoseFrame initialPose)
	{
	}

	[Token(Token = "0x60004EF")]
	[Address(RVA = "0x19295E8", Offset = "0x19295E8", VA = "0x19295E8")]
	private OvrAvatarPacket(List<float> frameTimes, List<OvrAvatarDriver.PoseFrame> frames, List<byte[]> audioPackets)
	{
	}

	[Token(Token = "0x60004F0")]
	[Address(RVA = "0x191EFD4", Offset = "0x191EFD4", VA = "0x191EFD4")]
	public void AddFrame(OvrAvatarDriver.PoseFrame frame, float deltaSeconds)
	{
	}

	[Token(Token = "0x60004F1")]
	[Address(RVA = "0x1929754", Offset = "0x1929754", VA = "0x1929754")]
	public OvrAvatarDriver.PoseFrame GetPoseFrame(float seconds)
	{
		return default(OvrAvatarDriver.PoseFrame);
	}

	[Token(Token = "0x60004F2")]
	[Address(RVA = "0x1929984", Offset = "0x1929984", VA = "0x1929984")]
	public static OvrAvatarPacket Read(System.IO.Stream stream)
	{
		return null;
	}

	[Token(Token = "0x60004F3")]
	[Address(RVA = "0x1929C60", Offset = "0x1929C60", VA = "0x1929C60")]
	public void Write(System.IO.Stream stream)
	{
	}
}
[Token(Token = "0x20000E6")]
internal static class BinaryWriterExtensions
{
	[Token(Token = "0x60004F4")]
	[Address(RVA = "0x12F05D8", Offset = "0x12F05D8", VA = "0x12F05D8")]
	public static void Write(this BinaryWriter writer, OvrAvatarDriver.PoseFrame frame)
	{
	}

	[Token(Token = "0x60004F5")]
	[Address(RVA = "0x12F06EC", Offset = "0x12F06EC", VA = "0x12F06EC")]
	public static void Write(this BinaryWriter writer, Vector3 vec3)
	{
	}

	[Token(Token = "0x60004F6")]
	[Address(RVA = "0x12F0898", Offset = "0x12F0898", VA = "0x12F0898")]
	public static void Write(this BinaryWriter writer, Vector2 vec2)
	{
	}

	[Token(Token = "0x60004F7")]
	[Address(RVA = "0x12F075C", Offset = "0x12F075C", VA = "0x12F075C")]
	public static void Write(this BinaryWriter writer, Quaternion quat)
	{
	}

	[Token(Token = "0x60004F8")]
	[Address(RVA = "0x12F07F0", Offset = "0x12F07F0", VA = "0x12F07F0")]
	public static void Write(this BinaryWriter writer, OvrAvatarDriver.ControllerPose pose)
	{
	}
}
[Token(Token = "0x20000E7")]
internal static class BinaryReaderExtensions
{
	[Token(Token = "0x60004F9")]
	[Address(RVA = "0x12F01D8", Offset = "0x12F01D8", VA = "0x12F01D8")]
	public static OvrAvatarDriver.PoseFrame ReadPoseFrame(this BinaryReader reader)
	{
		return default(OvrAvatarDriver.PoseFrame);
	}

	[Token(Token = "0x60004FA")]
	[Address(RVA = "0x12F057C", Offset = "0x12F057C", VA = "0x12F057C")]
	public static Vector2 ReadVector2(this BinaryReader reader)
	{
		return default(Vector2);
	}

	[Token(Token = "0x60004FB")]
	[Address(RVA = "0x12F0378", Offset = "0x12F0378", VA = "0x12F0378")]
	public static Vector3 ReadVector3(this BinaryReader reader)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60004FC")]
	[Address(RVA = "0x12F03F0", Offset = "0x12F03F0", VA = "0x12F03F0")]
	public static Quaternion ReadQuaternion(this BinaryReader reader)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x60004FD")]
	[Address(RVA = "0x12F048C", Offset = "0x12F048C", VA = "0x12F048C")]
	public static OvrAvatarDriver.ControllerPose ReadControllerPose(this BinaryReader reader)
	{
		return default(OvrAvatarDriver.ControllerPose);
	}
}
[Token(Token = "0x20000E8")]
public class OvrAvatarRemoteDriver : OvrAvatarDriver
{
	[Token(Token = "0x40005B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Queue<OvrAvatarPacket> packetQueue;

	[Token(Token = "0x40005B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private IntPtr CurrentSDKPacket;

	[Token(Token = "0x40005B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private float CurrentPacketTime;

	[Token(Token = "0x40005B4")]
	private const int MinPacketQueue = 1;

	[Token(Token = "0x40005B5")]
	private const int MaxPacketQueue = 4;

	[Token(Token = "0x40005B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private int CurrentSequence;

	[Token(Token = "0x40005B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private bool isStreaming;

	[Token(Token = "0x40005B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private OvrAvatarPacket currentPacket;

	[Token(Token = "0x60004FE")]
	[Address(RVA = "0x1929E88", Offset = "0x1929E88", VA = "0x1929E88")]
	public void QueuePacket(int sequence, OvrAvatarPacket packet)
	{
	}

	[Token(Token = "0x60004FF")]
	[Address(RVA = "0x1929F10", Offset = "0x1929F10", VA = "0x1929F10", Slot = "4")]
	public override void UpdateTransforms(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x6000500")]
	[Address(RVA = "0x1929F2C", Offset = "0x1929F2C", VA = "0x1929F2C")]
	private void UpdateFromSDKPacket(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x6000501")]
	[Address(RVA = "0x192A0D0", Offset = "0x192A0D0", VA = "0x192A0D0")]
	private void UpdateFromUnityPacket(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x6000502")]
	[Address(RVA = "0x192A2BC", Offset = "0x192A2BC", VA = "0x192A2BC")]
	public OvrAvatarRemoteDriver()
	{
	}
}
[Token(Token = "0x20000E9")]
public class OvrAvatarRenderComponent : MonoBehaviour
{
	[Token(Token = "0x40005B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool firstSkinnedUpdate;

	[Token(Token = "0x40005BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SkinnedMeshRenderer mesh;

	[Token(Token = "0x40005BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform[] bones;

	[Token(Token = "0x40005BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool isBodyComponent;

	[Token(Token = "0x6000503")]
	[Address(RVA = "0x192A360", Offset = "0x192A360", VA = "0x192A360")]
	protected void UpdateActive(OvrAvatar avatar, ovrAvatarVisibilityFlags mask)
	{
	}

	[Token(Token = "0x6000504")]
	[Address(RVA = "0x192A444", Offset = "0x192A444", VA = "0x192A444")]
	protected SkinnedMeshRenderer CreateSkinnedMesh(ulong assetID, ovrAvatarVisibilityFlags visibilityMask, int thirdPersonLayer, int firstPersonLayer)
	{
		return null;
	}

	[Token(Token = "0x6000505")]
	[Address(RVA = "0x192A638", Offset = "0x192A638", VA = "0x192A638")]
	protected void UpdateSkinnedMesh(OvrAvatar avatar, Transform[] bones, ovrAvatarTransform localTransform, ovrAvatarVisibilityFlags visibilityMask, IntPtr renderPart)
	{
	}

	[Token(Token = "0x6000506")]
	[Address(RVA = "0x192A9F0", Offset = "0x192A9F0", VA = "0x192A9F0")]
	protected Material CreateAvatarMaterial(string name, Shader shader)
	{
		return null;
	}

	[Token(Token = "0x6000507")]
	[Address(RVA = "0x192AAFC", Offset = "0x192AAFC", VA = "0x192AAFC")]
	public OvrAvatarRenderComponent()
	{
	}
}
[Token(Token = "0x20000EA")]
[Flags]
public enum ovrAvatarCapabilities
{
	[Token(Token = "0x40005BE")]
	Body = 1,
	[Token(Token = "0x40005BF")]
	Hands = 2,
	[Token(Token = "0x40005C0")]
	Base = 4,
	[Token(Token = "0x40005C1")]
	BodyTilt = 0x10,
	[Token(Token = "0x40005C2")]
	Expressive = 0x20,
	[Token(Token = "0x40005C3")]
	All = -1
}
[Token(Token = "0x20000EB")]
public enum ovrAvatarMessageType
{
	[Token(Token = "0x40005C5")]
	AvatarSpecification,
	[Token(Token = "0x40005C6")]
	AssetLoaded,
	[Token(Token = "0x40005C7")]
	Count
}
[Token(Token = "0x20000EC")]
public struct ovrAvatarMessage_AvatarSpecification
{
	[Token(Token = "0x40005C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public IntPtr avatarSpec;

	[Token(Token = "0x40005C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ulong oculusUserID;
}
[Token(Token = "0x20000ED")]
public struct ovrAvatarMessage_AssetLoaded
{
	[Token(Token = "0x40005CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ulong assetID;

	[Token(Token = "0x40005CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public IntPtr asset;
}
[Token(Token = "0x20000EE")]
public enum ovrAvatarAssetType
{
	[Token(Token = "0x40005CD")]
	Mesh,
	[Token(Token = "0x40005CE")]
	Texture,
	[Token(Token = "0x40005CF")]
	Pose,
	[Token(Token = "0x40005D0")]
	Material,
	[Token(Token = "0x40005D1")]
	CombinedMesh,
	[Token(Token = "0x40005D2")]
	PBSMaterial,
	[Token(Token = "0x40005D3")]
	FailedLoad,
	[Token(Token = "0x40005D4")]
	Count
}
[Token(Token = "0x20000EF")]
public struct ovrAvatarMeshVertex
{
	[Token(Token = "0x40005D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float x;

	[Token(Token = "0x40005D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float y;

	[Token(Token = "0x40005D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float z;

	[Token(Token = "0x40005D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float nx;

	[Token(Token = "0x40005D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float ny;

	[Token(Token = "0x40005DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float nz;

	[Token(Token = "0x40005DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float tx;

	[Token(Token = "0x40005DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float ty;

	[Token(Token = "0x40005DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float tz;

	[Token(Token = "0x40005DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float tw;

	[Token(Token = "0x40005DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float u;

	[Token(Token = "0x40005E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float v;

	[Token(Token = "0x40005E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public byte[] blendIndices;

	[Token(Token = "0x40005E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float[] blendWeights;
}
[Token(Token = "0x20000F0")]
public struct ovrAvatarMeshVertexV2
{
	[Token(Token = "0x40005E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float x;

	[Token(Token = "0x40005E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float y;

	[Token(Token = "0x40005E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float z;

	[Token(Token = "0x40005E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float nx;

	[Token(Token = "0x40005E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float ny;

	[Token(Token = "0x40005E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float nz;

	[Token(Token = "0x40005E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float tx;

	[Token(Token = "0x40005EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float ty;

	[Token(Token = "0x40005EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float tz;

	[Token(Token = "0x40005EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float tw;

	[Token(Token = "0x40005ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float u;

	[Token(Token = "0x40005EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float v;

	[Token(Token = "0x40005EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float r;

	[Token(Token = "0x40005F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float g;

	[Token(Token = "0x40005F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float b;

	[Token(Token = "0x40005F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float a;

	[Token(Token = "0x40005F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public byte[] blendIndices;

	[Token(Token = "0x40005F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float[] blendWeights;
}
[Token(Token = "0x20000F1")]
public struct ovrAvatarBlendVertex
{
	[Token(Token = "0x40005F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float x;

	[Token(Token = "0x40005F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float y;

	[Token(Token = "0x40005F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float z;

	[Token(Token = "0x40005F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float nx;

	[Token(Token = "0x40005F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float ny;

	[Token(Token = "0x40005FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float nz;

	[Token(Token = "0x40005FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float tx;

	[Token(Token = "0x40005FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float ty;

	[Token(Token = "0x40005FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float tz;
}
[Token(Token = "0x20000F2")]
public struct ovrAvatarMeshAssetData
{
	[Token(Token = "0x40005FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint vertexCount;

	[Token(Token = "0x40005FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public IntPtr vertexBuffer;

	[Token(Token = "0x4000600")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public uint indexCount;

	[Token(Token = "0x4000601")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr indexBuffer;

	[Token(Token = "0x4000602")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ovrAvatarSkinnedMeshPose skinnedBindPose;
}
[Token(Token = "0x20000F3")]
public struct ovrAvatarMeshAssetDataV2
{
	[Token(Token = "0x4000603")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint vertexCount;

	[Token(Token = "0x4000604")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public IntPtr vertexBuffer;

	[Token(Token = "0x4000605")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public uint indexCount;

	[Token(Token = "0x4000606")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr indexBuffer;

	[Token(Token = "0x4000607")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ovrAvatarSkinnedMeshPose skinnedBindPose;
}
[Token(Token = "0x20000F4")]
public enum ovrAvatarTextureFormat
{
	[Token(Token = "0x4000609")]
	RGB24,
	[Token(Token = "0x400060A")]
	DXT1,
	[Token(Token = "0x400060B")]
	DXT5,
	[Token(Token = "0x400060C")]
	ASTC_RGB_6x6,
	[Token(Token = "0x400060D")]
	ASTC_RGB_6x6_MIPMAPS,
	[Token(Token = "0x400060E")]
	Count
}
[Token(Token = "0x20000F5")]
public struct ovrAvatarTextureAssetData
{
	[Token(Token = "0x400060F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTextureFormat format;

	[Token(Token = "0x4000610")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public uint sizeX;

	[Token(Token = "0x4000611")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public uint sizeY;

	[Token(Token = "0x4000612")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public uint mipCount;

	[Token(Token = "0x4000613")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong textureDataSize;

	[Token(Token = "0x4000614")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr textureData;
}
[Token(Token = "0x20000F6")]
public enum ovrAvatarRenderPartType
{
	[Token(Token = "0x4000616")]
	SkinnedMeshRender,
	[Token(Token = "0x4000617")]
	SkinnedMeshRenderPBS,
	[Token(Token = "0x4000618")]
	ProjectorRender,
	[Token(Token = "0x4000619")]
	SkinnedMeshRenderPBS_V2,
	[Token(Token = "0x400061A")]
	Count
}
[Token(Token = "0x20000F7")]
public enum ovrAvatarLogLevel
{
	[Token(Token = "0x400061C")]
	Unknown,
	[Token(Token = "0x400061D")]
	Default,
	[Token(Token = "0x400061E")]
	Verbose,
	[Token(Token = "0x400061F")]
	Debug,
	[Token(Token = "0x4000620")]
	Info,
	[Token(Token = "0x4000621")]
	Warn,
	[Token(Token = "0x4000622")]
	Error,
	[Token(Token = "0x4000623")]
	Fatal,
	[Token(Token = "0x4000624")]
	Silent
}
[Token(Token = "0x20000F8")]
public struct ovrAvatarTransform
{
	[Token(Token = "0x4000625")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 position;

	[Token(Token = "0x4000626")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Quaternion orientation;

	[Token(Token = "0x4000627")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector3 scale;
}
[Token(Token = "0x20000F9")]
[Flags]
public enum ovrAvatarButton
{
	[Token(Token = "0x4000629")]
	One = 1,
	[Token(Token = "0x400062A")]
	Two = 2,
	[Token(Token = "0x400062B")]
	Three = 4,
	[Token(Token = "0x400062C")]
	Joystick = 8
}
[Token(Token = "0x20000FA")]
[Flags]
public enum ovrAvatarTouch
{
	[Token(Token = "0x400062E")]
	One = 1,
	[Token(Token = "0x400062F")]
	Two = 2,
	[Token(Token = "0x4000630")]
	Joystick = 4,
	[Token(Token = "0x4000631")]
	ThumbRest = 8,
	[Token(Token = "0x4000632")]
	Index = 0x10,
	[Token(Token = "0x4000633")]
	Pointing = 0x40,
	[Token(Token = "0x4000634")]
	ThumbUp = 0x80
}
[Token(Token = "0x20000FB")]
public struct ovrAvatarHandInputState
{
	[Token(Token = "0x4000635")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform transform;

	[Token(Token = "0x4000636")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarButton buttonMask;

	[Token(Token = "0x4000637")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public ovrAvatarTouch touchMask;

	[Token(Token = "0x4000638")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float joystickX;

	[Token(Token = "0x4000639")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float joystickY;

	[Token(Token = "0x400063A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float indexTrigger;

	[Token(Token = "0x400063B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float handTrigger;

	[Token(Token = "0x400063C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool isActive;
}
[Token(Token = "0x20000FC")]
public struct ovrAvatarComponent
{
	[Token(Token = "0x400063D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform transform;

	[Token(Token = "0x400063E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public uint renderPartCount;

	[Token(Token = "0x400063F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public IntPtr renderParts;

	[Token(Token = "0x4000640")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string name;
}
[Token(Token = "0x20000FD")]
internal struct ovrAvatarComponent_Offsets
{
	[Token(Token = "0x4000641")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static long transform;

	[Token(Token = "0x4000642")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int renderPartCount;

	[Token(Token = "0x4000643")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public static int renderParts;

	[Token(Token = "0x4000644")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static int name;
}
[Token(Token = "0x20000FE")]
public struct ovrAvatarBaseComponent
{
	[Token(Token = "0x4000645")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 basePosition;

	[Token(Token = "0x4000646")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public IntPtr renderComponent;
}
[Token(Token = "0x20000FF")]
public struct ovrAvatarBodyComponent
{
	[Token(Token = "0x4000647")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform leftEyeTransform;

	[Token(Token = "0x4000648")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarTransform rightEyeTransform;

	[Token(Token = "0x4000649")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ovrAvatarTransform centerEyeTransform;

	[Token(Token = "0x400064A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public IntPtr renderComponent;
}
[Token(Token = "0x2000100")]
public struct ovrAvatarBodyComponent_Offsets
{
	[Token(Token = "0x400064B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static long leftEyeTransform;

	[Token(Token = "0x400064C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long rightEyeTransform;

	[Token(Token = "0x400064D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static long centerEyeTransform;

	[Token(Token = "0x400064E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static long renderComponent;
}
[Token(Token = "0x2000101")]
public struct ovrAvatarControllerComponent
{
	[Token(Token = "0x400064F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarHandInputState inputState;

	[Token(Token = "0x4000650")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public IntPtr renderComponent;
}
[Token(Token = "0x2000102")]
public struct ovrAvatarHandComponent
{
	[Token(Token = "0x4000651")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarHandInputState inputState;

	[Token(Token = "0x4000652")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public IntPtr renderComponent;
}
[Token(Token = "0x2000103")]
public enum ovrAvatarMaterialLayerBlendMode
{
	[Token(Token = "0x4000654")]
	Add,
	[Token(Token = "0x4000655")]
	Multiply,
	[Token(Token = "0x4000656")]
	Count
}
[Token(Token = "0x2000104")]
public enum ovrAvatarMaterialLayerSampleMode
{
	[Token(Token = "0x4000658")]
	Color,
	[Token(Token = "0x4000659")]
	Texture,
	[Token(Token = "0x400065A")]
	TextureSingleChannel,
	[Token(Token = "0x400065B")]
	Parallax,
	[Token(Token = "0x400065C")]
	Count
}
[Token(Token = "0x2000105")]
public enum ovrAvatarMaterialMaskType
{
	[Token(Token = "0x400065E")]
	None,
	[Token(Token = "0x400065F")]
	Positional,
	[Token(Token = "0x4000660")]
	ViewReflection,
	[Token(Token = "0x4000661")]
	Fresnel,
	[Token(Token = "0x4000662")]
	Pulse,
	[Token(Token = "0x4000663")]
	Count
}
[Token(Token = "0x2000106")]
public enum ovrAvatarControllerType
{
	[Token(Token = "0x4000665")]
	Touch,
	[Token(Token = "0x4000666")]
	Malibu,
	[Token(Token = "0x4000667")]
	Go,
	[Token(Token = "0x4000668")]
	Quest,
	[Token(Token = "0x4000669")]
	Count
}
[Token(Token = "0x2000107")]
public enum ovrAvatarAssetLevelOfDetail
{
	[Token(Token = "0x400066B")]
	Lowest = 1,
	[Token(Token = "0x400066C")]
	Medium = 3,
	[Token(Token = "0x400066D")]
	Highest = 5
}
[Token(Token = "0x2000108")]
public enum ovrAvatarLookAndFeelVersion
{
	[Token(Token = "0x400066F")]
	Unknown = -1,
	[Token(Token = "0x4000670")]
	One,
	[Token(Token = "0x4000671")]
	Two
}
[Token(Token = "0x2000109")]
public struct ovrAvatarMaterialLayerState
{
	[Token(Token = "0x4000672")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarMaterialLayerBlendMode blendMode;

	[Token(Token = "0x4000673")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public ovrAvatarMaterialLayerSampleMode sampleMode;

	[Token(Token = "0x4000674")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ovrAvatarMaterialMaskType maskType;

	[Token(Token = "0x4000675")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Vector4 layerColor;

	[Token(Token = "0x4000676")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector4 sampleParameters;

	[Token(Token = "0x4000677")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ulong sampleTexture;

	[Token(Token = "0x4000678")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Vector4 sampleScaleOffset;

	[Token(Token = "0x4000679")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Vector4 maskParameters;

	[Token(Token = "0x400067A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector4 maskAxis;

	[Token(Token = "0x600050A")]
	[Address(RVA = "0x1046CF8", Offset = "0x1046CF8", VA = "0x1046CF8")]
	private static bool VectorEquals(Vector4 a, Vector4 b)
	{
		return default(bool);
	}

	[Token(Token = "0x600050B")]
	[Address(RVA = "0x1046D28", Offset = "0x1046D28", VA = "0x1046D28", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x600050C")]
	[Address(RVA = "0x1046F44", Offset = "0x1046F44", VA = "0x1046F44", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}
}
[Token(Token = "0x200010A")]
public struct ovrAvatarMaterialState
{
	[Token(Token = "0x400067B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector4 baseColor;

	[Token(Token = "0x400067C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ovrAvatarMaterialMaskType baseMaskType;

	[Token(Token = "0x400067D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Vector4 baseMaskParameters;

	[Token(Token = "0x400067E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector4 baseMaskAxis;

	[Token(Token = "0x400067F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public ovrAvatarMaterialLayerSampleMode sampleMode;

	[Token(Token = "0x4000680")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ulong alphaMaskTextureID;

	[Token(Token = "0x4000681")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector4 alphaMaskScaleOffset;

	[Token(Token = "0x4000682")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ulong normalMapTextureID;

	[Token(Token = "0x4000683")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector4 normalMapScaleOffset;

	[Token(Token = "0x4000684")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public ulong parallaxMapTextureID;

	[Token(Token = "0x4000685")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Vector4 parallaxMapScaleOffset;

	[Token(Token = "0x4000686")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public ulong roughnessMapTextureID;

	[Token(Token = "0x4000687")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Vector4 roughnessMapScaleOffset;

	[Token(Token = "0x4000688")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public uint layerCount;

	[Token(Token = "0x4000689")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public ovrAvatarMaterialLayerState[] layers;

	[Token(Token = "0x600050D")]
	[Address(RVA = "0x1047028", Offset = "0x1047028", VA = "0x1047028")]
	private static bool VectorEquals(Vector4 a, Vector4 b)
	{
		return default(bool);
	}

	[Token(Token = "0x600050E")]
	[Address(RVA = "0x1047058", Offset = "0x1047058", VA = "0x1047058", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x600050F")]
	[Address(RVA = "0x10473F4", Offset = "0x10473F4", VA = "0x10473F4", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}
}
[Token(Token = "0x200010B")]
public struct ovrAvatarExpressiveParameters
{
	[Token(Token = "0x400068A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector4 irisColor;

	[Token(Token = "0x400068B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Vector4 scleraColor;

	[Token(Token = "0x400068C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector4 lashColor;

	[Token(Token = "0x400068D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector4 browColor;

	[Token(Token = "0x400068E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector4 lipColor;

	[Token(Token = "0x400068F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Vector4 teethColor;

	[Token(Token = "0x4000690")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Vector4 gumColor;

	[Token(Token = "0x4000691")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float browLashIntensity;

	[Token(Token = "0x4000692")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float lipSmoothness;

	[Token(Token = "0x6000510")]
	[Address(RVA = "0x1046288", Offset = "0x1046288", VA = "0x1046288")]
	private static bool VectorEquals(Vector4 a, Vector4 b)
	{
		return default(bool);
	}

	[Token(Token = "0x6000511")]
	[Address(RVA = "0x10462B8", Offset = "0x10462B8", VA = "0x10462B8", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x6000512")]
	[Address(RVA = "0x1046548", Offset = "0x1046548", VA = "0x1046548", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}
}
[Token(Token = "0x200010C")]
public struct ovrAvatarPBSMaterialState
{
	[Token(Token = "0x4000693")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector4 baseColor;

	[Token(Token = "0x4000694")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong albedoTextureID;

	[Token(Token = "0x4000695")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector4 albedoMultiplier;

	[Token(Token = "0x4000696")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ulong metallicnessTextureID;

	[Token(Token = "0x4000697")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float glossinessScale;

	[Token(Token = "0x4000698")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ulong normalTextureID;

	[Token(Token = "0x4000699")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ulong heightTextureID;

	[Token(Token = "0x400069A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ulong occlusionTextureID;

	[Token(Token = "0x400069B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ulong emissionTextureID;

	[Token(Token = "0x400069C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector4 emissionMultiplier;

	[Token(Token = "0x400069D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public ulong detailMaskTextureID;

	[Token(Token = "0x400069E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ulong detailAlbedoTextureID;

	[Token(Token = "0x400069F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public ulong detailNormalTextureID;

	[Token(Token = "0x6000513")]
	[Address(RVA = "0x104755C", Offset = "0x104755C", VA = "0x104755C")]
	private static bool VectorEquals(Vector4 a, Vector4 b)
	{
		return default(bool);
	}

	[Token(Token = "0x6000514")]
	[Address(RVA = "0x104758C", Offset = "0x104758C", VA = "0x104758C", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x6000515")]
	[Address(RVA = "0x104777C", Offset = "0x104777C", VA = "0x104777C", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}
}
[Token(Token = "0x200010D")]
public class OvrAvatarAssetMaterial : OvrAvatarAsset
{
	[Token(Token = "0x40006A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ovrAvatarMaterialState material;

	[Token(Token = "0x6000516")]
	[Address(RVA = "0x192150C", Offset = "0x192150C", VA = "0x192150C")]
	public OvrAvatarAssetMaterial(ulong id, IntPtr mat)
	{
	}
}
[Token(Token = "0x200010E")]
public struct ovrAvatarSkinnedMeshPose
{
	[Token(Token = "0x40006A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint jointCount;

	[Token(Token = "0x40006A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ovrAvatarTransform[] jointTransform;

	[Token(Token = "0x40006A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int[] jointParents;

	[Token(Token = "0x40006A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr[] jointNames;
}
[Token(Token = "0x200010F")]
[Flags]
public enum ovrAvatarVisibilityFlags
{
	[Token(Token = "0x40006A6")]
	FirstPerson = 1,
	[Token(Token = "0x40006A7")]
	ThirdPerson = 2,
	[Token(Token = "0x40006A8")]
	SelfOccluding = 4
}
[Token(Token = "0x2000110")]
public struct ovrAvatarRenderPart_SkinnedMeshRender
{
	[Token(Token = "0x40006A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform localTransform;

	[Token(Token = "0x40006AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarVisibilityFlags visibilityMask;

	[Token(Token = "0x40006AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ulong meshAssetID;

	[Token(Token = "0x40006AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ovrAvatarMaterialState materialState;

	[Token(Token = "0x40006AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public ovrAvatarSkinnedMeshPose skinnedPose;
}
[Token(Token = "0x2000111")]
public struct ovrAvatarRenderPart_SkinnedMeshRenderPBS
{
	[Token(Token = "0x40006AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform localTransform;

	[Token(Token = "0x40006AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarVisibilityFlags visibilityMask;

	[Token(Token = "0x40006B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ulong meshAssetID;

	[Token(Token = "0x40006B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ulong albedoTextureAssetID;

	[Token(Token = "0x40006B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ulong surfaceTextureAssetID;

	[Token(Token = "0x40006B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ovrAvatarSkinnedMeshPose skinnedPose;
}
[Token(Token = "0x2000112")]
public struct ovrAvatarRenderPart_ProjectorRender
{
	[Token(Token = "0x40006B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform localTransform;

	[Token(Token = "0x40006B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public uint componentIndex;

	[Token(Token = "0x40006B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public uint renderPartIndex;

	[Token(Token = "0x40006B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ovrAvatarMaterialState materialState;
}
[Token(Token = "0x2000113")]
public struct ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2
{
	[Token(Token = "0x40006B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform localTransform;

	[Token(Token = "0x40006B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarVisibilityFlags visibilityMask;

	[Token(Token = "0x40006BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ulong meshAssetID;

	[Token(Token = "0x40006BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ovrAvatarPBSMaterialState materialState;

	[Token(Token = "0x40006BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public ovrAvatarSkinnedMeshPose skinnedPose;
}
[Token(Token = "0x2000114")]
public enum ovrAvatarHandGesture
{
	[Token(Token = "0x40006BE")]
	Default,
	[Token(Token = "0x40006BF")]
	GripSphere,
	[Token(Token = "0x40006C0")]
	GripCube,
	[Token(Token = "0x40006C1")]
	Count
}
[Token(Token = "0x2000115")]
public enum ovrAvatarBodyPartType
{
	[Token(Token = "0x40006C3")]
	Body,
	[Token(Token = "0x40006C4")]
	Clothing,
	[Token(Token = "0x40006C5")]
	Eyewear,
	[Token(Token = "0x40006C6")]
	Hair,
	[Token(Token = "0x40006C7")]
	Beard,
	[Token(Token = "0x40006C8")]
	Count
}
[Token(Token = "0x2000116")]
public struct ovrAvatarBlendShapeParams
{
	[Token(Token = "0x40006C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint blendShapeParamCount;

	[Token(Token = "0x40006CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float[] blendShapeParams;
}
[Token(Token = "0x2000117")]
internal struct ovrAvatarBlendShapeParams_Offsets
{
	[Token(Token = "0x40006CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int blendShapeParamCount;

	[Token(Token = "0x40006CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long blendShapeParams;
}
[Token(Token = "0x2000118")]
public struct ovrAvatarVisemes
{
	[Token(Token = "0x40006CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint visemeParamCount;

	[Token(Token = "0x40006CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float[] visemeParams;
}
[Token(Token = "0x2000119")]
internal struct ovrAvatarVisemes_Offsets
{
	[Token(Token = "0x40006CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int visemeParamCount;

	[Token(Token = "0x40006D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long visemeParams;
}
[Token(Token = "0x200011A")]
public enum ovrAvatarGazeTargetType
{
	[Token(Token = "0x40006D2")]
	AvatarHead,
	[Token(Token = "0x40006D3")]
	AvatarHand,
	[Token(Token = "0x40006D4")]
	Object,
	[Token(Token = "0x40006D5")]
	ObjectStatic,
	[Token(Token = "0x40006D6")]
	Count
}
[Token(Token = "0x200011B")]
public struct ovrAvatarGazeTarget
{
	[Token(Token = "0x40006D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint id;

	[Token(Token = "0x40006D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public Vector3 worldPosition;

	[Token(Token = "0x40006D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ovrAvatarGazeTargetType type;
}
[Token(Token = "0x200011C")]
internal struct ovrAvatarGazeTarget_Offsets
{
	[Token(Token = "0x40006DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int id;

	[Token(Token = "0x40006DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static int worldPosition;

	[Token(Token = "0x40006DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int type;
}
[Token(Token = "0x200011D")]
public struct ovrAvatarGazeTargets
{
	[Token(Token = "0x40006DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint targetCount;

	[Token(Token = "0x40006DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ovrAvatarGazeTarget[] targets;
}
[Token(Token = "0x200011E")]
internal struct ovrAvatarGazeTargets_Offsets
{
	[Token(Token = "0x40006DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int targetCount;

	[Token(Token = "0x40006E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long targets;
}
[Token(Token = "0x200011F")]
public enum ovrAvatarLightType
{
	[Token(Token = "0x40006E2")]
	Point,
	[Token(Token = "0x40006E3")]
	Direction,
	[Token(Token = "0x40006E4")]
	Spot,
	[Token(Token = "0x40006E5")]
	Count
}
[Token(Token = "0x2000120")]
public struct ovrAvatarLight
{
	[Token(Token = "0x40006E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint id;

	[Token(Token = "0x40006E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public ovrAvatarLightType type;

	[Token(Token = "0x40006E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float intensity;

	[Token(Token = "0x40006E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Vector3 worldDirection;

	[Token(Token = "0x40006EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 worldPosition;

	[Token(Token = "0x40006EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float range;

	[Token(Token = "0x40006EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float spotAngleDeg;
}
[Token(Token = "0x2000121")]
internal struct ovrAvatarLight_Offsets
{
	[Token(Token = "0x40006ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static long id;

	[Token(Token = "0x40006EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long type;

	[Token(Token = "0x40006EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static long intensity;

	[Token(Token = "0x40006F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static long worldDirection;

	[Token(Token = "0x40006F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static long worldPosition;

	[Token(Token = "0x40006F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static long range;

	[Token(Token = "0x40006F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static long spotAngleDeg;
}
[Token(Token = "0x2000122")]
public struct ovrAvatarLights
{
	[Token(Token = "0x40006F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float ambientIntensity;

	[Token(Token = "0x40006F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public uint lightCount;

	[Token(Token = "0x40006F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ovrAvatarLight[] lights;
}
[Token(Token = "0x2000123")]
internal struct ovrAvatarLights_Offsets
{
	[Token(Token = "0x40006F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static long ambientIntensity;

	[Token(Token = "0x40006F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long lightCount;

	[Token(Token = "0x40006F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static long lights;
}
[Token(Token = "0x2000124")]
[Flags]
public enum ovrAvatarDebugContext : uint
{
	[Token(Token = "0x40006FB")]
	None = 0u,
	[Token(Token = "0x40006FC")]
	GazeTarget = 1u,
	[Token(Token = "0x40006FD")]
	Any = uint.MaxValue
}
[Token(Token = "0x2000125")]
public struct ovrAvatarDebugLine
{
	[Token(Token = "0x40006FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 startPoint;

	[Token(Token = "0x40006FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Vector3 endPoint;

	[Token(Token = "0x4000700")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 color;

	[Token(Token = "0x4000701")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public ovrAvatarDebugContext context;

	[Token(Token = "0x4000702")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public IntPtr text;
}
[Token(Token = "0x2000126")]
public struct ovrAvatarDebugTransform
{
	[Token(Token = "0x4000703")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform transform;

	[Token(Token = "0x4000704")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarDebugContext context;

	[Token(Token = "0x4000705")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public IntPtr text;
}
[Token(Token = "0x2000127")]
public delegate void specificationCallback(IntPtr specification);
[Token(Token = "0x2000128")]
public delegate void assetLoadedCallback(OvrAvatarAsset asset);
[Token(Token = "0x2000129")]
public delegate void combinedMeshLoadedCallback(IntPtr asset);
[Token(Token = "0x200012A")]
public class OvrAvatarSDKManager : MonoBehaviour
{
	[Token(Token = "0x200012B")]
	public struct AvatarSpecRequestParams
	{
		[Token(Token = "0x4000713")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ulong _userId;

		[Token(Token = "0x4000714")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public specificationCallback _callback;

		[Token(Token = "0x4000715")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool _useCombinedMesh;

		[Token(Token = "0x4000716")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public ovrAvatarAssetLevelOfDetail _lod;

		[Token(Token = "0x4000717")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool _forceMobileTextureFormat;

		[Token(Token = "0x4000718")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public ovrAvatarLookAndFeelVersion _lookVersion;

		[Token(Token = "0x4000719")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ovrAvatarLookAndFeelVersion _fallbackVersion;

		[Token(Token = "0x400071A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool _enableExpressive;

		[Token(Token = "0x600053A")]
		[Address(RVA = "0xE8A574", Offset = "0xE8A574", VA = "0xE8A574")]
		public AvatarSpecRequestParams(ulong userId, specificationCallback callback, bool useCombinedMesh, ovrAvatarAssetLevelOfDetail lod, bool forceMobileTextureFormat, ovrAvatarLookAndFeelVersion lookVersion, ovrAvatarLookAndFeelVersion fallbackVersion, bool enableExpressive)
		{
		}
	}

	[Token(Token = "0x4000706")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static OvrAvatarSDKManager _instance;

	[Token(Token = "0x4000707")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool initialized;

	[Token(Token = "0x4000708")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Dictionary<ulong, HashSet<specificationCallback>> specificationCallbacks;

	[Token(Token = "0x4000709")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<ulong, HashSet<assetLoadedCallback>> assetLoadedCallbacks;

	[Token(Token = "0x400070A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Dictionary<IntPtr, combinedMeshLoadedCallback> combinedMeshLoadedCallbacks;

	[Token(Token = "0x400070B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Dictionary<ulong, OvrAvatarAsset> assetCache;

	[Token(Token = "0x400070C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private OvrAvatarTextureCopyManager textureCopyManager;

	[Token(Token = "0x400070D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ovrAvatarLogLevel LoggingLevel;

	[Token(Token = "0x400070E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Queue<AvatarSpecRequestParams> avatarSpecificationQueue;

	[Token(Token = "0x400070F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<int> loadingAvatars;

	[Token(Token = "0x4000710")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool avatarSpecRequestAvailable;

	[Token(Token = "0x4000711")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float lastDispatchedAvatarSpecRequestTime;

	[Token(Token = "0x4000712")]
	private const float AVATAR_SPEC_REQUEST_TIMEOUT = 5f;

	[Token(Token = "0x17000099")]
	public static OvrAvatarSDKManager Instance
	{
		[Token(Token = "0x6000529")]
		[Address(RVA = "0x191D484", Offset = "0x191D484", VA = "0x191D484")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600052A")]
	[Address(RVA = "0x192AB0C", Offset = "0x192AB0C", VA = "0x192AB0C")]
	private bool Initialize()
	{
		return default(bool);
	}

	[Token(Token = "0x600052B")]
	[Address(RVA = "0x192AE5C", Offset = "0x192AE5C", VA = "0x192AE5C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600052C")]
	[Address(RVA = "0x192AECC", Offset = "0x192AECC", VA = "0x192AECC")]
	private void Update()
	{
	}

	[Token(Token = "0x600052D")]
	[Address(RVA = "0x192B89C", Offset = "0x192B89C", VA = "0x192B89C")]
	public bool IsAvatarSpecWaiting()
	{
		return default(bool);
	}

	[Token(Token = "0x600052E")]
	[Address(RVA = "0x192B8F0", Offset = "0x192B8F0", VA = "0x192B8F0")]
	public bool IsAvatarLoading()
	{
		return default(bool);
	}

	[Token(Token = "0x600052F")]
	[Address(RVA = "0x191DCF4", Offset = "0x191DCF4", VA = "0x191DCF4")]
	public void AddLoadingAvatar(int gameobjectID)
	{
	}

	[Token(Token = "0x6000530")]
	[Address(RVA = "0x191E304", Offset = "0x191E304", VA = "0x191E304")]
	public void RemoveLoadingAvatar(int gameobjectID)
	{
	}

	[Token(Token = "0x6000531")]
	[Address(RVA = "0x191DC64", Offset = "0x191DC64", VA = "0x191DC64")]
	public void RequestAvatarSpecification(AvatarSpecRequestParams avatarSpecRequest)
	{
	}

	[Token(Token = "0x6000532")]
	[Address(RVA = "0x192B69C", Offset = "0x192B69C", VA = "0x192B69C")]
	private void DispatchAvatarSpecificationRequest(AvatarSpecRequestParams avatarSpecRequest)
	{
	}

	[Token(Token = "0x6000533")]
	[Address(RVA = "0x191D6F8", Offset = "0x191D6F8", VA = "0x191D6F8")]
	public void BeginLoadingAsset(ulong assetId, ovrAvatarAssetLevelOfDetail lod, assetLoadedCallback callback)
	{
	}

	[Token(Token = "0x6000534")]
	[Address(RVA = "0x191D84C", Offset = "0x191D84C", VA = "0x191D84C")]
	public void RegisterCombinedMeshCallback(IntPtr sdkAvatar, combinedMeshLoadedCallback callback)
	{
	}

	[Token(Token = "0x6000535")]
	[Address(RVA = "0x191D67C", Offset = "0x191D67C", VA = "0x191D67C")]
	public OvrAvatarAsset GetAsset(ulong assetId)
	{
		return null;
	}

	[Token(Token = "0x6000536")]
	[Address(RVA = "0x192B990", Offset = "0x192B990", VA = "0x192B990")]
	public void DeleteAssetFromCache(ulong assetId)
	{
	}

	[Token(Token = "0x6000537")]
	[Address(RVA = "0x192AE10", Offset = "0x192AE10", VA = "0x192AE10")]
	public string GetAppId()
	{
		return null;
	}

	[Token(Token = "0x6000538")]
	[Address(RVA = "0x192763C", Offset = "0x192763C", VA = "0x192763C")]
	public OvrAvatarTextureCopyManager GetTextureCopyManager()
	{
		return null;
	}

	[Token(Token = "0x6000539")]
	[Address(RVA = "0x192BA70", Offset = "0x192BA70", VA = "0x192BA70")]
	public OvrAvatarSDKManager()
	{
	}
}
[Token(Token = "0x200012C")]
public sealed class OvrAvatarSettings : ScriptableObject
{
	[Token(Token = "0x400071B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static OvrAvatarSettings instance;

	[Token(Token = "0x400071C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private string ovrAppID;

	[Token(Token = "0x400071D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private string ovrGearAppID;

	[Token(Token = "0x1700009A")]
	public static string AppID
	{
		[Token(Token = "0x600053B")]
		[Address(RVA = "0x192BA30", Offset = "0x192BA30", VA = "0x192BA30")]
		get
		{
			return null;
		}
		[Token(Token = "0x600053C")]
		[Address(RVA = "0x192BBE0", Offset = "0x192BBE0", VA = "0x192BBE0")]
		set
		{
		}
	}

	[Token(Token = "0x1700009B")]
	public static string MobileAppID
	{
		[Token(Token = "0x600053D")]
		[Address(RVA = "0x192BA50", Offset = "0x192BA50", VA = "0x192BA50")]
		get
		{
			return null;
		}
		[Token(Token = "0x600053E")]
		[Address(RVA = "0x192BC10", Offset = "0x192BC10", VA = "0x192BC10")]
		set
		{
		}
	}

	[Token(Token = "0x1700009C")]
	public static OvrAvatarSettings Instance
	{
		[Token(Token = "0x600053F")]
		[Address(RVA = "0x192BA88", Offset = "0x192BA88", VA = "0x192BA88")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000540")]
		[Address(RVA = "0x192BC40", Offset = "0x192BC40", VA = "0x192BC40")]
		set
		{
		}
	}

	[Token(Token = "0x6000541")]
	[Address(RVA = "0x192BC94", Offset = "0x192BC94", VA = "0x192BC94")]
	public OvrAvatarSettings()
	{
	}
}
[Token(Token = "0x200012D")]
public class OvrAvatarSkinnedMeshRenderComponent : OvrAvatarRenderComponent
{
	[Token(Token = "0x400071E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Shader surface;

	[Token(Token = "0x400071F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Shader surfaceSelfOccluding;

	[Token(Token = "0x4000720")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool previouslyActive;

	[Token(Token = "0x6000542")]
	[Address(RVA = "0x191B374", Offset = "0x191B374", VA = "0x191B374")]
	internal void Initialize(ovrAvatarRenderPart_SkinnedMeshRender skinnedMeshRender, Shader surface, Shader surfaceSelfOccluding, int thirdPersonLayer, int firstPersonLayer)
	{
	}

	[Token(Token = "0x6000543")]
	[Address(RVA = "0x1923A78", Offset = "0x1923A78", VA = "0x1923A78")]
	public void UpdateSkinnedMeshRender(OvrAvatarComponent component, OvrAvatar avatar, IntPtr renderPart)
	{
	}

	[Token(Token = "0x6000544")]
	[Address(RVA = "0x192D140", Offset = "0x192D140", VA = "0x192D140")]
	private void UpdateMeshMaterial(ovrAvatarVisibilityFlags visibilityMask, SkinnedMeshRenderer rootMesh)
	{
	}

	[Token(Token = "0x6000545")]
	[Address(RVA = "0x192D2A8", Offset = "0x192D2A8", VA = "0x192D2A8")]
	public OvrAvatarSkinnedMeshRenderComponent()
	{
	}
}
[Token(Token = "0x200012E")]
public class OvrAvatarSkinnedMeshRenderPBSComponent : OvrAvatarRenderComponent
{
	[Token(Token = "0x4000721")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	private bool isMaterialInitilized;

	[Token(Token = "0x6000546")]
	[Address(RVA = "0x191B5D8", Offset = "0x191B5D8", VA = "0x191B5D8")]
	internal void Initialize(ovrAvatarRenderPart_SkinnedMeshRenderPBS skinnedMeshRenderPBS, Shader shader, int thirdPersonLayer, int firstPersonLayer)
	{
	}

	[Token(Token = "0x6000547")]
	[Address(RVA = "0x1923CB4", Offset = "0x1923CB4", VA = "0x1923CB4")]
	internal void UpdateSkinnedMeshRenderPBS(OvrAvatar avatar, IntPtr renderPart, Material mat)
	{
	}

	[Token(Token = "0x6000548")]
	[Address(RVA = "0x192D2B8", Offset = "0x192D2B8", VA = "0x192D2B8")]
	public OvrAvatarSkinnedMeshRenderPBSComponent()
	{
	}
}
[Token(Token = "0x200012F")]
public class OvrAvatarSkinnedMeshPBSV2RenderComponent : OvrAvatarRenderComponent
{
	[Token(Token = "0x4000722")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private OvrAvatarMaterialManager avatarMaterialManager;

	[Token(Token = "0x4000723")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool previouslyActive;

	[Token(Token = "0x4000724")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	private bool isCombinedMaterial;

	[Token(Token = "0x4000725")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private ovrAvatarExpressiveParameters ExpressiveParameters;

	[Token(Token = "0x4000726")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private bool EnableExpressive;

	[Token(Token = "0x4000727")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private int blendShapeCount;

	[Token(Token = "0x4000728")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private ovrAvatarBlendShapeParams blendShapeParams;

	[Token(Token = "0x4000729")]
	private const string MAIN_MATERIAL_NAME = "main_material";

	[Token(Token = "0x400072A")]
	private const string EYE_MATERIAL_NAME = "eye_material";

	[Token(Token = "0x400072B")]
	private const string DEFAULT_MATERIAL_NAME = "_material";

	[Token(Token = "0x6000549")]
	[Address(RVA = "0x191B914", Offset = "0x191B914", VA = "0x191B914")]
	internal void Initialize(IntPtr renderPart, ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2 skinnedMeshRender, OvrAvatarMaterialManager materialManager, int thirdPersonLayer, int firstPersonLayer, bool combinedMesh, ovrAvatarAssetLevelOfDetail lod, bool assignExpressiveParams, OvrAvatar avatar, bool isControllerModel)
	{
	}

	[Token(Token = "0x600054A")]
	[Address(RVA = "0x1923E84", Offset = "0x1923E84", VA = "0x1923E84")]
	public void UpdateSkinnedMeshRender(OvrAvatarComponent component, OvrAvatar avatar, IntPtr renderPart)
	{
	}

	[Token(Token = "0x600054B")]
	[Address(RVA = "0x192C8C4", Offset = "0x192C8C4", VA = "0x192C8C4")]
	private void InitializeSingleComponentMaterial(IntPtr renderPart, int lodIndex)
	{
	}

	[Token(Token = "0x600054C")]
	[Address(RVA = "0x192BFDC", Offset = "0x192BFDC", VA = "0x192BFDC")]
	private void InitializeCombinedMaterial(IntPtr renderPart, int lodIndex)
	{
	}

	[Token(Token = "0x600054D")]
	[Address(RVA = "0x192BD00", Offset = "0x192BD00", VA = "0x192BD00")]
	private void SetMaterialTransparent(Material mat)
	{
	}

	[Token(Token = "0x600054E")]
	[Address(RVA = "0x192BE64", Offset = "0x192BE64", VA = "0x192BE64")]
	private void SetMaterialOpaque(Material mat)
	{
	}

	[Token(Token = "0x600054F")]
	[Address(RVA = "0x192D130", Offset = "0x192D130", VA = "0x192D130")]
	public OvrAvatarSkinnedMeshPBSV2RenderComponent()
	{
	}
}
[Token(Token = "0x2000130")]
public class OvrAvatarTextureCopyManager : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000131")]
	public struct FallbackTextureSet
	{
		[Token(Token = "0x400073A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool Initialized;

		[Token(Token = "0x400073B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Texture2D DiffuseRoughness;

		[Token(Token = "0x400073C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Texture2D Normal;
	}

	[Token(Token = "0x2000132")]
	private struct CopyTextureParams
	{
		[Token(Token = "0x400073D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Texture Src;

		[Token(Token = "0x400073E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Texture Dst;

		[Token(Token = "0x400073F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int Mip;

		[Token(Token = "0x4000740")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int SrcSize;

		[Token(Token = "0x4000741")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int DstElement;

		[Token(Token = "0x600055A")]
		[Address(RVA = "0xE8AC70", Offset = "0xE8AC70", VA = "0xE8AC70")]
		public CopyTextureParams(Texture src, Texture dst, int mip, int srcSize, int dstElement)
		{
		}
	}

	[Token(Token = "0x2000133")]
	public struct TextureSet
	{
		[Token(Token = "0x4000742")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Dictionary<ulong, bool> TextureIDSingleMeshPair;

		[Token(Token = "0x4000743")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public bool IsProcessed;

		[Token(Token = "0x600055B")]
		[Address(RVA = "0xE8ACCC", Offset = "0xE8ACCC", VA = "0xE8ACCC")]
		public TextureSet(Dictionary<ulong, bool> textureIDSingleMeshPair, bool isProcessed)
		{
		}
	}

	[Token(Token = "0x2000134")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D665C", Offset = "0x8D665C")]
	private sealed class <DeleteTextureSetCoroutine>d__24 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000744")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000745")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000746")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TextureSet textureSetToDelete;

		[Token(Token = "0x4000747")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public OvrAvatarTextureCopyManager <>4__this;

		[Token(Token = "0x4000748")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int gameobjectID;

		[Token(Token = "0x1700009D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600055F")]
			[Address(RVA = "0xE8AC20", Offset = "0xE8AC20", VA = "0xE8AC20", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700009E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000561")]
			[Address(RVA = "0xE8AC68", Offset = "0xE8AC68", VA = "0xE8AC68", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600055C")]
		[Address(RVA = "0xE8A5F0", Offset = "0xE8A5F0", VA = "0xE8A5F0")]
		[DebuggerHidden]
		public <DeleteTextureSetCoroutine>d__24(int <>1__state)
		{
		}

		[Token(Token = "0x600055D")]
		[Address(RVA = "0xE8A61C", Offset = "0xE8A61C", VA = "0xE8A61C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600055E")]
		[Address(RVA = "0xE8A620", Offset = "0xE8A620", VA = "0xE8A620", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000560")]
		[Address(RVA = "0xE8AC28", Offset = "0xE8AC28", VA = "0xE8AC28", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400072C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public FallbackTextureSet[] FallbackTextureSets;

	[Token(Token = "0x400072D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Queue<CopyTextureParams> texturesToCopy;

	[Token(Token = "0x400072E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<int, TextureSet> textureSets;

	[Token(Token = "0x400072F")]
	private const int TEXTURES_TO_COPY_QUEUE_CAPACITY = 256;

	[Token(Token = "0x4000730")]
	private const int COPIES_PER_FRAME = 8;

	[Token(Token = "0x4000731")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly string[] FALLBACK_TEXTURE_PATHS_DIFFUSE_ROUGHNESS;

	[Token(Token = "0x4000732")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly string[] FALLBACK_TEXTURE_PATHS_NORMAL;

	[Token(Token = "0x4000733")]
	private const string PATH_HIGHEST_DIFFUSE_ROUGHNESS = "FallbackTextures/fallback_diffuse_roughness_2048";

	[Token(Token = "0x4000734")]
	private const string PATH_MEDIUM_DIFFUSE_ROUGHNESS = "FallbackTextures/fallback_diffuse_roughness_1024";

	[Token(Token = "0x4000735")]
	private const string PATH_LOWEST_DIFFUSE_ROUGHNESS = "FallbackTextures/fallback_diffuse_roughness_256";

	[Token(Token = "0x4000736")]
	private const string PATH_HIGHEST_NORMAL = "FallbackTextures/fallback_normal_2048";

	[Token(Token = "0x4000737")]
	private const string PATH_MEDIUM_NORMAL = "FallbackTextures/fallback_normal_1024";

	[Token(Token = "0x4000738")]
	private const string PATH_LOWEST_NORMAL = "FallbackTextures/fallback_normal_256";

	[Token(Token = "0x4000739")]
	private const int GPU_TEXTURE_COPY_WAIT_TIME = 10;

	[Token(Token = "0x6000550")]
	[Address(RVA = "0x192D9E4", Offset = "0x192D9E4", VA = "0x192D9E4")]
	public OvrAvatarTextureCopyManager()
	{
	}

	[Token(Token = "0x6000551")]
	[Address(RVA = "0x192DEC4", Offset = "0x192DEC4", VA = "0x192DEC4")]
	public void Update()
	{
	}

	[Token(Token = "0x6000552")]
	[Address(RVA = "0x192E0C4", Offset = "0x192E0C4", VA = "0x192E0C4")]
	public int GetTextureCount()
	{
		return default(int);
	}

	[Token(Token = "0x6000553")]
	[Address(RVA = "0x1927A94", Offset = "0x1927A94", VA = "0x1927A94")]
	public void CopyTexture(Texture src, Texture dst, int mipLevel, int mipSize, int dstElement, bool useQueue = true)
	{
	}

	[Token(Token = "0x6000554")]
	[Address(RVA = "0x192E038", Offset = "0x192E038", VA = "0x192E038")]
	private void CopyTexture(CopyTextureParams copyTextureParams)
	{
	}

	[Token(Token = "0x6000555")]
	[Address(RVA = "0x19276BC", Offset = "0x19276BC", VA = "0x19276BC")]
	public void AddTextureIDToTextureSet(int gameobjectID, ulong textureID, bool isSingleMesh)
	{
	}

	[Token(Token = "0x6000556")]
	[Address(RVA = "0x192790C", Offset = "0x192790C", VA = "0x192790C")]
	public void DeleteTextureSet(int gameobjectID)
	{
	}

	[Token(Token = "0x6000557")]
	[Address(RVA = "0x192E110", Offset = "0x192E110", VA = "0x192E110")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E0074", Offset = "0x8E0074")]
	private IEnumerator DeleteTextureSetCoroutine(TextureSet textureSetToDelete, int gameobjectID)
	{
		return null;
	}

	[Token(Token = "0x6000558")]
	[Address(RVA = "0x192B944", Offset = "0x192B944", VA = "0x192B944")]
	public void CheckFallbackTextureSet(ovrAvatarAssetLevelOfDetail lod)
	{
	}

	[Token(Token = "0x6000559")]
	[Address(RVA = "0x192E1BC", Offset = "0x192E1BC", VA = "0x192E1BC")]
	private void InitFallbackTextureSet(ovrAvatarAssetLevelOfDetail lod)
	{
	}
}
[Token(Token = "0x2000135")]
public class OvrAvatarTouchController : OvrAvatarComponent
{
	[Token(Token = "0x4000749")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool isLeftHand;

	[Token(Token = "0x400074A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private ovrAvatarControllerComponent component;

	[Token(Token = "0x6000562")]
	[Address(RVA = "0x10506D0", Offset = "0x10506D0", VA = "0x10506D0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000563")]
	[Address(RVA = "0x1050844", Offset = "0x1050844", VA = "0x1050844")]
	public OvrAvatarTouchController()
	{
	}
}
[Token(Token = "0x2000136")]
public class DebugUIBuilder : MonoBehaviour
{
	[Token(Token = "0x2000137")]
	public delegate void OnClick();

	[Token(Token = "0x2000138")]
	public delegate void OnToggleValueChange(Toggle t);

	[Token(Token = "0x2000139")]
	public delegate void OnSlider(float f);

	[Token(Token = "0x200013A")]
	public delegate bool ActiveUpdate();

	[Token(Token = "0x200013B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D666C", Offset = "0x8D666C")]
	private sealed class <>c__DisplayClass36_0
	{
		[Token(Token = "0x4000766")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnClick handler;

		[Token(Token = "0x6000583")]
		[Address(RVA = "0x104CCA8", Offset = "0x104CCA8", VA = "0x104CCA8")]
		public <>c__DisplayClass36_0()
		{
		}

		[Token(Token = "0x6000584")]
		[Address(RVA = "0x104CCB0", Offset = "0x104CCB0", VA = "0x104CCB0")]
		internal void <AddButton>b__0()
		{
		}
	}

	[Token(Token = "0x200013C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D667C", Offset = "0x8D667C")]
	private sealed class <>c__DisplayClass38_0
	{
		[Token(Token = "0x4000767")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnSlider onValueChanged;

		[Token(Token = "0x6000585")]
		[Address(RVA = "0x104CED4", Offset = "0x104CED4", VA = "0x104CED4")]
		public <>c__DisplayClass38_0()
		{
		}

		[Token(Token = "0x6000586")]
		[Address(RVA = "0x104CEDC", Offset = "0x104CEDC", VA = "0x104CEDC")]
		internal void <AddSlider>b__0(float f)
		{
		}
	}

	[Token(Token = "0x200013D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D668C", Offset = "0x8D668C")]
	private sealed class <>c__DisplayClass40_0
	{
		[Token(Token = "0x4000768")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnToggleValueChange onValueChanged;

		[Token(Token = "0x4000769")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Toggle t;

		[Token(Token = "0x6000587")]
		[Address(RVA = "0x104D128", Offset = "0x104D128", VA = "0x104D128")]
		public <>c__DisplayClass40_0()
		{
		}

		[Token(Token = "0x6000588")]
		[Address(RVA = "0x104D130", Offset = "0x104D130", VA = "0x104D130")]
		internal void <AddToggle>b__0(bool <p0>)
		{
		}
	}

	[Token(Token = "0x200013E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D669C", Offset = "0x8D669C")]
	private sealed class <>c__DisplayClass41_0
	{
		[Token(Token = "0x400076A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnToggleValueChange onValueChanged;

		[Token(Token = "0x400076B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Toggle t;

		[Token(Token = "0x6000589")]
		[Address(RVA = "0x104D4C8", Offset = "0x104D4C8", VA = "0x104D4C8")]
		public <>c__DisplayClass41_0()
		{
		}

		[Token(Token = "0x600058A")]
		[Address(RVA = "0x104D4D0", Offset = "0x104D4D0", VA = "0x104D4D0")]
		internal void <AddToggle>b__0(bool <p0>)
		{
		}
	}

	[Token(Token = "0x200013F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D66AC", Offset = "0x8D66AC")]
	private sealed class <>c__DisplayClass42_0
	{
		[Token(Token = "0x400076C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnToggleValueChange handler;

		[Token(Token = "0x400076D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Toggle tb;

		[Token(Token = "0x600058B")]
		[Address(RVA = "0x104D4F0", Offset = "0x104D4F0", VA = "0x104D4F0")]
		public <>c__DisplayClass42_0()
		{
		}

		[Token(Token = "0x600058C")]
		[Address(RVA = "0x104D4F8", Offset = "0x104D4F8", VA = "0x104D4F8")]
		internal void <AddRadio>b__0(bool <p0>)
		{
		}
	}

	[Token(Token = "0x400074B")]
	public const int DEBUG_PANE_CENTER = 0;

	[Token(Token = "0x400074C")]
	public const int DEBUG_PANE_RIGHT = 1;

	[Token(Token = "0x400074D")]
	public const int DEBUG_PANE_LEFT = 2;

	[Token(Token = "0x400074E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private RectTransform buttonPrefab;

	[Token(Token = "0x400074F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private RectTransform labelPrefab;

	[Token(Token = "0x4000750")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private RectTransform sliderPrefab;

	[Token(Token = "0x4000751")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private RectTransform dividerPrefab;

	[Token(Token = "0x4000752")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private RectTransform togglePrefab;

	[Token(Token = "0x4000753")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private RectTransform radioPrefab;

	[Token(Token = "0x4000754")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private RectTransform textPrefab;

	[Token(Token = "0x4000755")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private GameObject uiHelpersToInstantiate;

	[Token(Token = "0x4000756")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private Transform[] targetContentPanels;

	[Token(Token = "0x4000757")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool[] reEnable;

	[Token(Token = "0x4000758")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private List<GameObject> toEnable;

	[Token(Token = "0x4000759")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private List<GameObject> toDisable;

	[Token(Token = "0x400075A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static DebugUIBuilder instance;

	[Token(Token = "0x400075B")]
	private const float elementSpacing = 16f;

	[Token(Token = "0x400075C")]
	private const float marginH = 16f;

	[Token(Token = "0x400075D")]
	private const float marginV = 16f;

	[Token(Token = "0x400075E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Vector2[] insertPositions;

	[Token(Token = "0x400075F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private List<RectTransform>[] insertedElements;

	[Token(Token = "0x4000760")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Vector3 menuOffset;

	[Token(Token = "0x4000761")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private PVRCameraRig rig;

	[Token(Token = "0x4000762")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Dictionary<string, ToggleGroup> radioGroups;

	[Token(Token = "0x4000763")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private LaserPointer lp;

	[Token(Token = "0x4000764")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private LineRenderer lr;

	[Token(Token = "0x4000765")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public LaserPointer.LaserBeamBehavior laserBeamBehavior;

	[Token(Token = "0x6000564")]
	[Address(RVA = "0x1088480", Offset = "0x1088480", VA = "0x1088480")]
	public void Awake()
	{
	}

	[Token(Token = "0x6000565")]
	[Address(RVA = "0x10889B0", Offset = "0x10889B0", VA = "0x10889B0")]
	public void Show()
	{
	}

	[Token(Token = "0x6000566")]
	[Address(RVA = "0x1088F88", Offset = "0x1088F88", VA = "0x1088F88")]
	public void Hide()
	{
	}

	[Token(Token = "0x6000567")]
	[Address(RVA = "0x1088D68", Offset = "0x1088D68", VA = "0x1088D68")]
	private void Relayout()
	{
	}

	[Token(Token = "0x6000568")]
	[Address(RVA = "0x1089144", Offset = "0x1089144", VA = "0x1089144")]
	private void AddRect(RectTransform r, int targetCanvas)
	{
	}

	[Token(Token = "0x6000569")]
	[Address(RVA = "0x1089464", Offset = "0x1089464", VA = "0x1089464")]
	public RectTransform AddButton(string label, OnClick handler, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x600056A")]
	[Address(RVA = "0x1089700", Offset = "0x1089700", VA = "0x1089700")]
	public RectTransform AddLabel(string label, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x600056B")]
	[Address(RVA = "0x1089804", Offset = "0x1089804", VA = "0x1089804")]
	public RectTransform AddSlider(string label, float min, float max, OnSlider onValueChanged, bool wholeNumbersOnly = false, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x600056C")]
	[Address(RVA = "0x10899E8", Offset = "0x10899E8", VA = "0x10899E8")]
	public RectTransform AddDivider(int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x600056D")]
	[Address(RVA = "0x1089A8C", Offset = "0x1089A8C", VA = "0x1089A8C")]
	public RectTransform AddToggle(string label, OnToggleValueChange onValueChanged, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x600056E")]
	[Address(RVA = "0x1089C7C", Offset = "0x1089C7C", VA = "0x1089C7C")]
	public RectTransform AddToggle(string label, OnToggleValueChange onValueChanged, bool defaultValue, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x600056F")]
	[Address(RVA = "0x1089E84", Offset = "0x1089E84", VA = "0x1089E84")]
	public RectTransform AddRadio(string label, string group, OnToggleValueChange handler, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000570")]
	[Address(RVA = "0x108A188", Offset = "0x108A188", VA = "0x108A188")]
	public RectTransform AddTextField(string label, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000571")]
	[Address(RVA = "0x108A284", Offset = "0x108A284", VA = "0x108A284")]
	public void ToggleLaserPointer(bool isOn)
	{
	}

	[Token(Token = "0x6000572")]
	[Address(RVA = "0x108A330", Offset = "0x108A330", VA = "0x108A330")]
	public DebugUIBuilder()
	{
	}
}
[Token(Token = "0x2000140")]
public class HandedInputSelector : MonoBehaviour
{
	[Token(Token = "0x400076E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private PVRCameraRig m_CameraRig;

	[Token(Token = "0x400076F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private PVRInputModule m_InputModule;

	[Token(Token = "0x600058D")]
	[Address(RVA = "0x133E064", Offset = "0x133E064", VA = "0x133E064")]
	private void Start()
	{
	}

	[Token(Token = "0x600058E")]
	[Address(RVA = "0x133E114", Offset = "0x133E114", VA = "0x133E114")]
	private void Update()
	{
	}

	[Token(Token = "0x600058F")]
	[Address(RVA = "0x133E1D4", Offset = "0x133E1D4", VA = "0x133E1D4")]
	private void SetActiveController(PVRInput.Controller c)
	{
	}

	[Token(Token = "0x6000590")]
	[Address(RVA = "0x133E210", Offset = "0x133E210", VA = "0x133E210")]
	public HandedInputSelector()
	{
	}
}
[Token(Token = "0x2000141")]
public class LaserPointer : PVRCursor
{
	[Token(Token = "0x2000142")]
	public enum LaserBeamBehavior
	{
		[Token(Token = "0x400077A")]
		On,
		[Token(Token = "0x400077B")]
		Off,
		[Token(Token = "0x400077C")]
		OnWhenHitTarget
	}

	[Token(Token = "0x4000770")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject cursorVisual;

	[Token(Token = "0x4000771")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float maxLength;

	[Token(Token = "0x4000772")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private LaserBeamBehavior _laserBeamBehavior;

	[Token(Token = "0x4000773")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool m_restoreOnInputAcquired;

	[Token(Token = "0x4000774")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector3 _startPoint;

	[Token(Token = "0x4000775")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 _forward;

	[Token(Token = "0x4000776")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Vector3 _endPoint;

	[Token(Token = "0x4000777")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool _hitTarget;

	[Token(Token = "0x4000778")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private LineRenderer lineRenderer;

	[Token(Token = "0x1700009F")]
	public LaserBeamBehavior laserBeamBehavior
	{
		[Token(Token = "0x6000592")]
		[Address(RVA = "0x1346918", Offset = "0x1346918", VA = "0x1346918")]
		get
		{
			return default(LaserBeamBehavior);
		}
		[Token(Token = "0x6000591")]
		[Address(RVA = "0x13468D4", Offset = "0x13468D4", VA = "0x13468D4")]
		set
		{
		}
	}

	[Token(Token = "0x6000593")]
	[Address(RVA = "0x1346920", Offset = "0x1346920", VA = "0x1346920")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000594")]
	[Address(RVA = "0x134697C", Offset = "0x134697C", VA = "0x134697C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000595")]
	[Address(RVA = "0x1346C30", Offset = "0x1346C30", VA = "0x1346C30", Slot = "5")]
	public override void SetCursorStartDest(Vector3 start, Vector3 dest, Vector3 normal)
	{
	}

	[Token(Token = "0x6000596")]
	[Address(RVA = "0x1346C4C", Offset = "0x1346C4C", VA = "0x1346C4C", Slot = "4")]
	public override void SetCursorRay(Transform t)
	{
	}

	[Token(Token = "0x6000597")]
	[Address(RVA = "0x1346CA0", Offset = "0x1346CA0", VA = "0x1346CA0")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000598")]
	[Address(RVA = "0x1346E5C", Offset = "0x1346E5C", VA = "0x1346E5C")]
	private void UpdateLaserBeam(Vector3 start, Vector3 end)
	{
	}

	[Token(Token = "0x6000599")]
	[Address(RVA = "0x1346F70", Offset = "0x1346F70", VA = "0x1346F70")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600059A")]
	[Address(RVA = "0x1347000", Offset = "0x1347000", VA = "0x1347000")]
	public void OnInputFocusLost()
	{
	}

	[Token(Token = "0x600059B")]
	[Address(RVA = "0x13470CC", Offset = "0x13470CC", VA = "0x13470CC")]
	public void OnInputFocusAcquired()
	{
	}

	[Token(Token = "0x600059C")]
	[Address(RVA = "0x1347180", Offset = "0x1347180", VA = "0x1347180")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600059D")]
	[Address(RVA = "0x13473DC", Offset = "0x13473DC", VA = "0x13473DC")]
	public LaserPointer()
	{
	}
}
[Token(Token = "0x2000143")]
public class CharacterCameraConstraint : MonoBehaviour
{
	[Token(Token = "0x400077D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D7E64", Offset = "0x8D7E64")]
	public PVRCameraRig CameraRig;

	[Token(Token = "0x400077E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D7E9C", Offset = "0x8D7E9C")]
	public bool EnableCollision;

	[Token(Token = "0x400077F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public LayerMask CollideLayers;

	[Token(Token = "0x4000780")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D7ED4", Offset = "0x8D7ED4")]
	public float MaxFade;

	[Token(Token = "0x4000781")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D7F0C", Offset = "0x8D7F0C")]
	public float FadeMinDistance;

	[Token(Token = "0x4000782")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float PreferredHeight;

	[Token(Token = "0x4000783")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D7F44", Offset = "0x8D7F44")]
	public float FadeMaxDistance;

	[Token(Token = "0x4000784")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly Action _cameraUpdateAction;

	[Token(Token = "0x4000785")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private readonly Action _preCharacterMovementAction;

	[Token(Token = "0x4000786")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private CapsuleCollider _character;

	[Token(Token = "0x4000787")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private SimpleCapsuleWithStickMovement _simplePlayerController;

	[Token(Token = "0x600059E")]
	[Address(RVA = "0x12FCA60", Offset = "0x12FCA60", VA = "0x12FCA60")]
	private CharacterCameraConstraint()
	{
	}

	[Token(Token = "0x600059F")]
	[Address(RVA = "0x12FCAF8", Offset = "0x12FCAF8", VA = "0x12FCAF8")]
	private void Awake()
	{
	}

	[Token(Token = "0x60005A0")]
	[Address(RVA = "0x12FCB84", Offset = "0x12FCB84", VA = "0x12FCB84")]
	private void Start()
	{
	}

	[Token(Token = "0x60005A1")]
	[Address(RVA = "0x12FCB88", Offset = "0x12FCB88", VA = "0x12FCB88")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60005A2")]
	[Address(RVA = "0x12FCBAC", Offset = "0x12FCBAC", VA = "0x12FCBAC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60005A3")]
	[Address(RVA = "0x12FCBD0", Offset = "0x12FCBD0", VA = "0x12FCBD0")]
	private void CameraUpdate()
	{
	}
}
[Token(Token = "0x2000144")]
public class LocomotionController : MonoBehaviour
{
	[Token(Token = "0x4000788")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PVRCameraRig CameraRig;

	[Token(Token = "0x4000789")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public CapsuleCollider CharacterController;

	[Token(Token = "0x400078A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SimpleCapsuleWithStickMovement PlayerController;

	[Token(Token = "0x400078B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject actualCamera;

	[Token(Token = "0x60005A4")]
	[Address(RVA = "0x1349D0C", Offset = "0x1349D0C", VA = "0x1349D0C")]
	private void Start()
	{
	}

	[Token(Token = "0x60005A5")]
	[Address(RVA = "0x1349DD8", Offset = "0x1349DD8", VA = "0x1349DD8")]
	public LocomotionController()
	{
	}
}
[Token(Token = "0x2000145")]
public class LocomotionTeleport : MonoBehaviour
{
	[Token(Token = "0x2000146")]
	public enum States
	{
		[Token(Token = "0x40007B1")]
		Ready,
		[Token(Token = "0x40007B2")]
		Aim,
		[Token(Token = "0x40007B3")]
		CancelAim,
		[Token(Token = "0x40007B4")]
		PreTeleport,
		[Token(Token = "0x40007B5")]
		CancelTeleport,
		[Token(Token = "0x40007B6")]
		Teleporting,
		[Token(Token = "0x40007B7")]
		PostTeleport
	}

	[Token(Token = "0x2000147")]
	public enum TeleportIntentions
	{
		[Token(Token = "0x40007B9")]
		None,
		[Token(Token = "0x40007BA")]
		Aim,
		[Token(Token = "0x40007BB")]
		PreTeleport,
		[Token(Token = "0x40007BC")]
		Teleport
	}

	[Token(Token = "0x2000148")]
	public enum AimCollisionTypes
	{
		[Token(Token = "0x40007BE")]
		Point,
		[Token(Token = "0x40007BF")]
		Sphere,
		[Token(Token = "0x40007C0")]
		Capsule
	}

	[Token(Token = "0x2000149")]
	public class AimData
	{
		[Token(Token = "0x40007C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public RaycastHit TargetHitInfo;

		[Token(Token = "0x40007C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool TargetValid;

		[Token(Token = "0x40007C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Vector3? Destination;

		[Token(Token = "0x40007C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float Radius;

		[Token(Token = "0x40007C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D835C", Offset = "0x8D835C")]
		private List<Vector3> <Points>k__BackingField;

		[Token(Token = "0x170000A3")]
		public List<Vector3> Points
		{
			[Token(Token = "0x60005DB")]
			[Address(RVA = "0xE8019C", Offset = "0xE8019C", VA = "0xE8019C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E059C", Offset = "0x8E059C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60005DC")]
			[Address(RVA = "0xE801A4", Offset = "0xE801A4", VA = "0xE801A4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E05AC", Offset = "0x8E05AC")]
			private set
			{
			}
		}

		[Token(Token = "0x60005DA")]
		[Address(RVA = "0xE80118", Offset = "0xE80118", VA = "0xE80118")]
		public AimData()
		{
		}

		[Token(Token = "0x60005DD")]
		[Address(RVA = "0xE801AC", Offset = "0xE801AC", VA = "0xE801AC")]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x200014A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D66BC", Offset = "0x8D66BC")]
	private sealed class <ReadyStateCoroutine>d__54 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40007C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40007C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40007C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x170000A4")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60005E1")]
			[Address(RVA = "0xE7FF64", Offset = "0xE7FF64", VA = "0xE7FF64", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000A5")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60005E3")]
			[Address(RVA = "0xE7FFAC", Offset = "0xE7FFAC", VA = "0xE7FFAC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60005DE")]
		[Address(RVA = "0xE7FE28", Offset = "0xE7FE28", VA = "0xE7FE28")]
		[DebuggerHidden]
		public <ReadyStateCoroutine>d__54(int <>1__state)
		{
		}

		[Token(Token = "0x60005DF")]
		[Address(RVA = "0xE7FE54", Offset = "0xE7FE54", VA = "0xE7FE54", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60005E0")]
		[Address(RVA = "0xE7FE58", Offset = "0xE7FE58", VA = "0xE7FE58", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60005E2")]
		[Address(RVA = "0xE7FF6C", Offset = "0xE7FF6C", VA = "0xE7FF6C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200014B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D66CC", Offset = "0x8D66CC")]
	private sealed class <AimStateCoroutine>d__66 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40007C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40007CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40007CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x170000A6")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60005E7")]
			[Address(RVA = "0xE7F894", Offset = "0xE7F894", VA = "0xE7F894", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000A7")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60005E9")]
			[Address(RVA = "0xE7F8DC", Offset = "0xE7F8DC", VA = "0xE7F8DC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60005E4")]
		[Address(RVA = "0xE7F70C", Offset = "0xE7F70C", VA = "0xE7F70C")]
		[DebuggerHidden]
		public <AimStateCoroutine>d__66(int <>1__state)
		{
		}

		[Token(Token = "0x60005E5")]
		[Address(RVA = "0xE7F738", Offset = "0xE7F738", VA = "0xE7F738", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60005E6")]
		[Address(RVA = "0xE7F73C", Offset = "0xE7F73C", VA = "0xE7F73C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60005E8")]
		[Address(RVA = "0xE7F89C", Offset = "0xE7F89C", VA = "0xE7F89C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200014C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D66DC", Offset = "0x8D66DC")]
	private sealed class <CancelAimStateCoroutine>d__70 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40007CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40007CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40007CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x170000A8")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60005ED")]
			[Address(RVA = "0xE7F9C0", Offset = "0xE7F9C0", VA = "0xE7F9C0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000A9")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60005EF")]
			[Address(RVA = "0xE7FA08", Offset = "0xE7FA08", VA = "0xE7FA08", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60005EA")]
		[Address(RVA = "0xE7F8E4", Offset = "0xE7F8E4", VA = "0xE7F8E4")]
		[DebuggerHidden]
		public <CancelAimStateCoroutine>d__70(int <>1__state)
		{
		}

		[Token(Token = "0x60005EB")]
		[Address(RVA = "0xE7F910", Offset = "0xE7F910", VA = "0xE7F910", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60005EC")]
		[Address(RVA = "0xE7F914", Offset = "0xE7F914", VA = "0xE7F914", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60005EE")]
		[Address(RVA = "0xE7F9C8", Offset = "0xE7F9C8", VA = "0xE7F9C8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200014D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D66EC", Offset = "0x8D66EC")]
	private sealed class <PreTeleportStateCoroutine>d__74 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40007CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40007D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40007D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x170000AA")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60005F3")]
			[Address(RVA = "0xE7FDD8", Offset = "0xE7FDD8", VA = "0xE7FDD8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000AB")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60005F5")]
			[Address(RVA = "0xE7FE20", Offset = "0xE7FE20", VA = "0xE7FE20", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60005F0")]
		[Address(RVA = "0xE7FCBC", Offset = "0xE7FCBC", VA = "0xE7FCBC")]
		[DebuggerHidden]
		public <PreTeleportStateCoroutine>d__74(int <>1__state)
		{
		}

		[Token(Token = "0x60005F1")]
		[Address(RVA = "0xE7FCE8", Offset = "0xE7FCE8", VA = "0xE7FCE8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60005F2")]
		[Address(RVA = "0xE7FCEC", Offset = "0xE7FCEC", VA = "0xE7FCEC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60005F4")]
		[Address(RVA = "0xE7FDE0", Offset = "0xE7FDE0", VA = "0xE7FDE0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200014E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D66FC", Offset = "0x8D66FC")]
	private sealed class <CancelTeleportStateCoroutine>d__78 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40007D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40007D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40007D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x170000AC")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60005F9")]
			[Address(RVA = "0xE7FAEC", Offset = "0xE7FAEC", VA = "0xE7FAEC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000AD")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60005FB")]
			[Address(RVA = "0xE7FB34", Offset = "0xE7FB34", VA = "0xE7FB34", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60005F6")]
		[Address(RVA = "0xE7FA10", Offset = "0xE7FA10", VA = "0xE7FA10")]
		[DebuggerHidden]
		public <CancelTeleportStateCoroutine>d__78(int <>1__state)
		{
		}

		[Token(Token = "0x60005F7")]
		[Address(RVA = "0xE7FA3C", Offset = "0xE7FA3C", VA = "0xE7FA3C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60005F8")]
		[Address(RVA = "0xE7FA40", Offset = "0xE7FA40", VA = "0xE7FA40", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60005FA")]
		[Address(RVA = "0xE7FAF4", Offset = "0xE7FAF4", VA = "0xE7FAF4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200014F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D670C", Offset = "0x8D670C")]
	private sealed class <TeleportingStateCoroutine>d__82 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40007D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40007D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40007D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x170000AE")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60005FF")]
			[Address(RVA = "0xE800C8", Offset = "0xE800C8", VA = "0xE800C8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000AF")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000601")]
			[Address(RVA = "0xE80110", Offset = "0xE80110", VA = "0xE80110", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60005FC")]
		[Address(RVA = "0xE7FFB4", Offset = "0xE7FFB4", VA = "0xE7FFB4")]
		[DebuggerHidden]
		public <TeleportingStateCoroutine>d__82(int <>1__state)
		{
		}

		[Token(Token = "0x60005FD")]
		[Address(RVA = "0xE7FFE0", Offset = "0xE7FFE0", VA = "0xE7FFE0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60005FE")]
		[Address(RVA = "0xE7FFE4", Offset = "0xE7FFE4", VA = "0xE7FFE4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000600")]
		[Address(RVA = "0xE800D0", Offset = "0xE800D0", VA = "0xE800D0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000150")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D671C", Offset = "0x8D671C")]
	private sealed class <PostTeleportStateCoroutine>d__86 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40007D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40007D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40007DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x170000B0")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000605")]
			[Address(RVA = "0xE7FC6C", Offset = "0xE7FC6C", VA = "0xE7FC6C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B1")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000607")]
			[Address(RVA = "0xE7FCB4", Offset = "0xE7FCB4", VA = "0xE7FCB4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000602")]
		[Address(RVA = "0xE7FB3C", Offset = "0xE7FB3C", VA = "0xE7FB3C")]
		[DebuggerHidden]
		public <PostTeleportStateCoroutine>d__86(int <>1__state)
		{
		}

		[Token(Token = "0x6000603")]
		[Address(RVA = "0xE7FB68", Offset = "0xE7FB68", VA = "0xE7FB68", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000604")]
		[Address(RVA = "0xE7FB6C", Offset = "0xE7FB6C", VA = "0xE7FB6C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000606")]
		[Address(RVA = "0xE7FC74", Offset = "0xE7FC74", VA = "0xE7FC74", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400078C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float teleportHeightValue;

	[Token(Token = "0x400078D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D7F7C", Offset = "0x8D7F7C")]
	public bool EnableMovementDuringReady;

	[Token(Token = "0x400078E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D7FB4", Offset = "0x8D7FB4")]
	public bool EnableMovementDuringAim;

	[Token(Token = "0x400078F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D7FEC", Offset = "0x8D7FEC")]
	public bool EnableMovementDuringPreTeleport;

	[Token(Token = "0x4000790")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D8024", Offset = "0x8D8024")]
	public bool EnableMovementDuringPostTeleport;

	[Token(Token = "0x4000791")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform actualCharacterLocation;

	[Token(Token = "0x4000792")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D805C", Offset = "0x8D805C")]
	public bool EnableRotationDuringReady;

	[Token(Token = "0x4000793")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D8094", Offset = "0x8D8094")]
	public bool EnableRotationDuringAim;

	[Token(Token = "0x4000794")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D80CC", Offset = "0x8D80CC")]
	public bool EnableRotationDuringPreTeleport;

	[Token(Token = "0x4000795")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D8104", Offset = "0x8D8104")]
	public bool EnableRotationDuringPostTeleport;

	[Token(Token = "0x4000796")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D813C", Offset = "0x8D813C")]
	private States <CurrentState>k__BackingField;

	[NonSerialized]
	[Token(Token = "0x4000797")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TeleportAimHandler AimHandler;

	[Token(Token = "0x4000798")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D814C", Offset = "0x8D814C")]
	public TeleportDestination TeleportDestinationPrefab;

	[Token(Token = "0x4000799")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D8184", Offset = "0x8D8184")]
	public int TeleportDestinationLayer;

	[NonSerialized]
	[Token(Token = "0x400079B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public TeleportInputHandler InputHandler;

	[NonSerialized]
	[Token(Token = "0x400079C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public TeleportIntentions CurrentIntention;

	[NonSerialized]
	[Token(Token = "0x400079D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public bool IsPreTeleportRequested;

	[NonSerialized]
	[Token(Token = "0x400079E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5D")]
	public bool IsTransitioning;

	[NonSerialized]
	[Token(Token = "0x400079F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5E")]
	public bool IsPostTeleportRequested;

	[Token(Token = "0x40007A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private TeleportDestination _teleportDestination;

	[Token(Token = "0x40007A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D81CC", Offset = "0x8D81CC")]
	private LocomotionController <LocomotionController>k__BackingField;

	[Token(Token = "0x40007A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D81DC", Offset = "0x8D81DC")]
	public AimCollisionTypes AimCollisionType;

	[Token(Token = "0x40007A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D8214", Offset = "0x8D8214")]
	public bool UseCharacterCollisionData;

	[Token(Token = "0x40007A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D824C", Offset = "0x8D824C")]
	public float AimCollisionRadius;

	[Token(Token = "0x40007A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D8284", Offset = "0x8D8284")]
	public float AimCollisionHeight;

	[Token(Token = "0x170000A0")]
	public States CurrentState
	{
		[Token(Token = "0x60005A8")]
		[Address(RVA = "0x134C040", Offset = "0x134C040", VA = "0x134C040")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E0124", Offset = "0x8E0124")]
		get
		{
			return default(States);
		}
		[Token(Token = "0x60005A9")]
		[Address(RVA = "0x134C048", Offset = "0x134C048", VA = "0x134C048")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E0134", Offset = "0x8E0134")]
		private set
		{
		}
	}

	[Token(Token = "0x170000A1")]
	public Quaternion DestinationRotation
	{
		[Token(Token = "0x60005AD")]
		[Address(RVA = "0x134C26C", Offset = "0x134C26C", VA = "0x134C26C")]
		get
		{
			return default(Quaternion);
		}
	}

	[Token(Token = "0x170000A2")]
	public LocomotionController LocomotionController
	{
		[Token(Token = "0x60005AE")]
		[Address(RVA = "0x134C294", Offset = "0x134C294", VA = "0x134C294")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E0164", Offset = "0x8E0164")]
		get
		{
			return null;
		}
		[Token(Token = "0x60005AF")]
		[Address(RVA = "0x134C29C", Offset = "0x134C29C", VA = "0x134C29C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E0174", Offset = "0x8E0174")]
		private set
		{
		}
	}

	[Token(Token = "0x14000001")]
	public event Action<bool, Vector3?, Quaternion?, Quaternion?> UpdateTeleportDestination
	{
		[Token(Token = "0x60005AA")]
		[Address(RVA = "0x134C050", Offset = "0x134C050", VA = "0x134C050")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E0144", Offset = "0x8E0144")]
		add
		{
		}
		[Token(Token = "0x60005AB")]
		[Address(RVA = "0x134C0F0", Offset = "0x134C0F0", VA = "0x134C0F0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E0154", Offset = "0x8E0154")]
		remove
		{
		}
	}

	[Token(Token = "0x14000002")]
	public event Action EnterStateReady
	{
		[Token(Token = "0x60005B9")]
		[Address(RVA = "0x134C8DC", Offset = "0x134C8DC", VA = "0x134C8DC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E01BC", Offset = "0x8E01BC")]
		add
		{
		}
		[Token(Token = "0x60005BA")]
		[Address(RVA = "0x134C97C", Offset = "0x134C97C", VA = "0x134C97C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E01CC", Offset = "0x8E01CC")]
		remove
		{
		}
	}

	[Token(Token = "0x14000003")]
	public event Action EnterStateAim
	{
		[Token(Token = "0x60005BC")]
		[Address(RVA = "0x134CA1C", Offset = "0x134CA1C", VA = "0x134CA1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E023C", Offset = "0x8E023C")]
		add
		{
		}
		[Token(Token = "0x60005BD")]
		[Address(RVA = "0x134CABC", Offset = "0x134CABC", VA = "0x134CABC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E024C", Offset = "0x8E024C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000004")]
	public event Action<AimData> UpdateAimData
	{
		[Token(Token = "0x60005BE")]
		[Address(RVA = "0x134CB5C", Offset = "0x134CB5C", VA = "0x134CB5C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E025C", Offset = "0x8E025C")]
		add
		{
		}
		[Token(Token = "0x60005BF")]
		[Address(RVA = "0x134CBFC", Offset = "0x134CBFC", VA = "0x134CBFC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E026C", Offset = "0x8E026C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000005")]
	public event Action ExitStateAim
	{
		[Token(Token = "0x60005C1")]
		[Address(RVA = "0x134CD0C", Offset = "0x134CD0C", VA = "0x134CD0C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E027C", Offset = "0x8E027C")]
		add
		{
		}
		[Token(Token = "0x60005C2")]
		[Address(RVA = "0x134CDAC", Offset = "0x134CDAC", VA = "0x134CDAC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E028C", Offset = "0x8E028C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000006")]
	public event Action EnterStateCancelAim
	{
		[Token(Token = "0x60005C4")]
		[Address(RVA = "0x134CEC4", Offset = "0x134CEC4", VA = "0x134CEC4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E02FC", Offset = "0x8E02FC")]
		add
		{
		}
		[Token(Token = "0x60005C5")]
		[Address(RVA = "0x134CF64", Offset = "0x134CF64", VA = "0x134CF64")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E030C", Offset = "0x8E030C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000007")]
	public event Action EnterStatePreTeleport
	{
		[Token(Token = "0x60005C7")]
		[Address(RVA = "0x134D07C", Offset = "0x134D07C", VA = "0x134D07C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E037C", Offset = "0x8E037C")]
		add
		{
		}
		[Token(Token = "0x60005C8")]
		[Address(RVA = "0x134D11C", Offset = "0x134D11C", VA = "0x134D11C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E038C", Offset = "0x8E038C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000008")]
	public event Action EnterStateCancelTeleport
	{
		[Token(Token = "0x60005CA")]
		[Address(RVA = "0x134D234", Offset = "0x134D234", VA = "0x134D234")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E03FC", Offset = "0x8E03FC")]
		add
		{
		}
		[Token(Token = "0x60005CB")]
		[Address(RVA = "0x134D2D4", Offset = "0x134D2D4", VA = "0x134D2D4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E040C", Offset = "0x8E040C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000009")]
	public event Action EnterStateTeleporting
	{
		[Token(Token = "0x60005CD")]
		[Address(RVA = "0x134D3EC", Offset = "0x134D3EC", VA = "0x134D3EC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E047C", Offset = "0x8E047C")]
		add
		{
		}
		[Token(Token = "0x60005CE")]
		[Address(RVA = "0x134D48C", Offset = "0x134D48C", VA = "0x134D48C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E048C", Offset = "0x8E048C")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000A")]
	public event Action EnterStatePostTeleport
	{
		[Token(Token = "0x60005D0")]
		[Address(RVA = "0x134D5A4", Offset = "0x134D5A4", VA = "0x134D5A4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E04FC", Offset = "0x8E04FC")]
		add
		{
		}
		[Token(Token = "0x60005D1")]
		[Address(RVA = "0x134D644", Offset = "0x134D644", VA = "0x134D644")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E050C", Offset = "0x8E050C")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000B")]
	public event Action<Transform, Vector3, Quaternion> Teleported
	{
		[Token(Token = "0x60005D3")]
		[Address(RVA = "0x134D75C", Offset = "0x134D75C", VA = "0x134D75C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E057C", Offset = "0x8E057C")]
		add
		{
		}
		[Token(Token = "0x60005D4")]
		[Address(RVA = "0x134D7FC", Offset = "0x134D7FC", VA = "0x134D7FC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E058C", Offset = "0x8E058C")]
		remove
		{
		}
	}

	[Token(Token = "0x60005A6")]
	[Address(RVA = "0x134B9D8", Offset = "0x134B9D8", VA = "0x134B9D8")]
	public void EnableMovement(bool ready, bool aim, bool pre, bool post)
	{
	}

	[Token(Token = "0x60005A7")]
	[Address(RVA = "0x134B9FC", Offset = "0x134B9FC", VA = "0x134B9FC")]
	public void EnableRotation(bool ready, bool aim, bool pre, bool post)
	{
	}

	[Token(Token = "0x60005AC")]
	[Address(RVA = "0x134C190", Offset = "0x134C190", VA = "0x134C190")]
	public void OnUpdateTeleportDestination(bool isValidDestination, Vector3? position, Quaternion? rotation, Quaternion? landingRotation)
	{
	}

	[Token(Token = "0x60005B0")]
	[Address(RVA = "0x134C2A4", Offset = "0x134C2A4", VA = "0x134C2A4")]
	public bool AimCollisionTest(Vector3 start, Vector3 end, LayerMask aimCollisionLayerMask, out RaycastHit hitInfo)
	{
		return default(bool);
	}

	[Token(Token = "0x60005B1")]
	[Address(RVA = "0x134C4F0", Offset = "0x134C4F0", VA = "0x134C4F0")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x8E0184", Offset = "0x8E0184")]
	protected void LogState(string msg)
	{
	}

	[Token(Token = "0x60005B2")]
	[Address(RVA = "0x134C5A4", Offset = "0x134C5A4", VA = "0x134C5A4")]
	protected void CreateNewTeleportDestination()
	{
	}

	[Token(Token = "0x60005B3")]
	[Address(RVA = "0x134C6A4", Offset = "0x134C6A4", VA = "0x134C6A4")]
	private void DeactivateDestination()
	{
	}

	[Token(Token = "0x60005B4")]
	[Address(RVA = "0x134C6C0", Offset = "0x134C6C0", VA = "0x134C6C0")]
	public void RecycleTeleportDestination(TeleportDestination oldDestination)
	{
	}

	[Token(Token = "0x60005B5")]
	[Address(RVA = "0x134C784", Offset = "0x134C784", VA = "0x134C784")]
	private void EnableMotion(bool enableLinear, bool enableRotation)
	{
	}

	[Token(Token = "0x60005B6")]
	[Address(RVA = "0x134C7C8", Offset = "0x134C7C8", VA = "0x134C7C8")]
	private void Awake()
	{
	}

	[Token(Token = "0x60005B7")]
	[Address(RVA = "0x134C82C", Offset = "0x134C82C", VA = "0x134C82C", Slot = "4")]
	public virtual void OnEnable()
	{
	}

	[Token(Token = "0x60005B8")]
	[Address(RVA = "0x134C8D4", Offset = "0x134C8D4", VA = "0x134C8D4", Slot = "5")]
	public virtual void OnDisable()
	{
	}

	[Token(Token = "0x60005BB")]
	[Address(RVA = "0x134C85C", Offset = "0x134C85C", VA = "0x134C85C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E01DC", Offset = "0x8E01DC")]
	protected IEnumerator ReadyStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60005C0")]
	[Address(RVA = "0x134CC9C", Offset = "0x134CC9C", VA = "0x134CC9C")]
	public void OnUpdateAimData(AimData aimData)
	{
	}

	[Token(Token = "0x60005C3")]
	[Address(RVA = "0x134CE4C", Offset = "0x134CE4C", VA = "0x134CE4C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E029C", Offset = "0x8E029C")]
	protected IEnumerator AimStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60005C6")]
	[Address(RVA = "0x134D004", Offset = "0x134D004", VA = "0x134D004")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E031C", Offset = "0x8E031C")]
	protected IEnumerator CancelAimStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60005C9")]
	[Address(RVA = "0x134D1BC", Offset = "0x134D1BC", VA = "0x134D1BC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E039C", Offset = "0x8E039C")]
	protected IEnumerator PreTeleportStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60005CC")]
	[Address(RVA = "0x134D374", Offset = "0x134D374", VA = "0x134D374")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E041C", Offset = "0x8E041C")]
	protected IEnumerator CancelTeleportStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60005CF")]
	[Address(RVA = "0x134D52C", Offset = "0x134D52C", VA = "0x134D52C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E049C", Offset = "0x8E049C")]
	protected IEnumerator TeleportingStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60005D2")]
	[Address(RVA = "0x134D6E4", Offset = "0x134D6E4", VA = "0x134D6E4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E051C", Offset = "0x8E051C")]
	protected IEnumerator PostTeleportStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60005D5")]
	[Address(RVA = "0x134D89C", Offset = "0x134D89C", VA = "0x134D89C")]
	public void DoTeleport()
	{
	}

	[Token(Token = "0x60005D6")]
	[Address(RVA = "0x134DA34", Offset = "0x134DA34", VA = "0x134DA34")]
	public Vector3 GetCharacterPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60005D7")]
	[Address(RVA = "0x134DA68", Offset = "0x134DA68", VA = "0x134DA68")]
	public Quaternion GetHeadRotationY()
	{
		return default(Quaternion);
	}

	[Token(Token = "0x60005D8")]
	[Address(RVA = "0x134DB30", Offset = "0x134DB30", VA = "0x134DB30")]
	public void DoWarp(Vector3 startPos, float positionPercent)
	{
	}

	[Token(Token = "0x60005D9")]
	[Address(RVA = "0x134DC28", Offset = "0x134DC28", VA = "0x134DC28")]
	public LocomotionTeleport()
	{
	}
}
[Token(Token = "0x2000151")]
public class SimpleCapsuleWithStickMovement : MonoBehaviour
{
	[Token(Token = "0x40007DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool EnableLinearMovement;

	[Token(Token = "0x40007DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool EnableRotation;

	[Token(Token = "0x40007DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool HMDRotatesPlayer;

	[Token(Token = "0x40007DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	public bool RotationEitherThumbstick;

	[Token(Token = "0x40007DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float RotationAngle;

	[Token(Token = "0x40007E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float Speed;

	[Token(Token = "0x40007E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public PVRCameraRig CameraRig;

	[Token(Token = "0x40007E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool ReadyToSnapTurn;

	[Token(Token = "0x40007E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Rigidbody _rigidbody;

	[Token(Token = "0x40007E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool leftSnap;

	[Token(Token = "0x40007E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
	public bool rightSnap;

	[Token(Token = "0x40007E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x52")]
	public bool HmdResetsY;

	[Token(Token = "0x40007E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x53")]
	public bool HmdRotatesY;

	[Token(Token = "0x40007EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private OVRPose? InitialPose;

	[Token(Token = "0x40007EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D838C", Offset = "0x8D838C")]
	private float <InitialYRotation>k__BackingField;

	[Token(Token = "0x40007EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private bool playerControllerEnabled;

	[NonSerialized]
	[Token(Token = "0x40007ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
	public bool Teleported;

	[Token(Token = "0x40007EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public bool useProfileData;

	[Token(Token = "0x40007F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Transform transformForSnap;

	[NonSerialized]
	[Token(Token = "0x40007F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public float CameraHeight;

	[Token(Token = "0x170000B2")]
	public float InitialYRotation
	{
		[Token(Token = "0x600060C")]
		[Address(RVA = "0x1064EAC", Offset = "0x1064EAC", VA = "0x1064EAC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E082C", Offset = "0x8E082C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600060D")]
		[Address(RVA = "0x1064EB4", Offset = "0x1064EB4", VA = "0x1064EB4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E083C", Offset = "0x8E083C")]
		private set
		{
		}
	}

	[Token(Token = "0x1400000C")]
	public event Action CameraUpdated
	{
		[Token(Token = "0x6000608")]
		[Address(RVA = "0x1064C2C", Offset = "0x1064C2C", VA = "0x1064C2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E07EC", Offset = "0x8E07EC")]
		add
		{
		}
		[Token(Token = "0x6000609")]
		[Address(RVA = "0x1064CCC", Offset = "0x1064CCC", VA = "0x1064CCC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E07FC", Offset = "0x8E07FC")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000D")]
	public event Action PreCharacterMove
	{
		[Token(Token = "0x600060A")]
		[Address(RVA = "0x1064D6C", Offset = "0x1064D6C", VA = "0x1064D6C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E080C", Offset = "0x8E080C")]
		add
		{
		}
		[Token(Token = "0x600060B")]
		[Address(RVA = "0x1064E0C", Offset = "0x1064E0C", VA = "0x1064E0C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E081C", Offset = "0x8E081C")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000E")]
	public event Action<Transform> TransformUpdated
	{
		[Token(Token = "0x600060E")]
		[Address(RVA = "0x1064EBC", Offset = "0x1064EBC", VA = "0x1064EBC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E084C", Offset = "0x8E084C")]
		add
		{
		}
		[Token(Token = "0x600060F")]
		[Address(RVA = "0x1064F5C", Offset = "0x1064F5C", VA = "0x1064F5C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E085C", Offset = "0x8E085C")]
		remove
		{
		}
	}

	[Token(Token = "0x6000610")]
	[Address(RVA = "0x1064FFC", Offset = "0x1064FFC", VA = "0x1064FFC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000611")]
	[Address(RVA = "0x1065000", Offset = "0x1065000", VA = "0x1065000")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000612")]
	[Address(RVA = "0x10651C4", Offset = "0x10651C4", VA = "0x10651C4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000613")]
	[Address(RVA = "0x10652E4", Offset = "0x10652E4", VA = "0x10652E4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000614")]
	[Address(RVA = "0x1065360", Offset = "0x1065360", VA = "0x1065360")]
	public void ResetOrientation()
	{
	}

	[Token(Token = "0x6000615")]
	[Address(RVA = "0x1065418", Offset = "0x1065418", VA = "0x1065418")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000616")]
	[Address(RVA = "0x1065BA4", Offset = "0x1065BA4", VA = "0x1065BA4")]
	public void UpdateTransform(PVRCameraRig rig)
	{
	}

	[Token(Token = "0x6000617")]
	[Address(RVA = "0x1065D1C", Offset = "0x1065D1C", VA = "0x1065D1C")]
	private void UpdateCont()
	{
	}

	[Token(Token = "0x6000618")]
	[Address(RVA = "0x1065660", Offset = "0x1065660", VA = "0x1065660")]
	private void RotatePlayerToHMD()
	{
	}

	[Token(Token = "0x6000619")]
	[Address(RVA = "0x1065784", Offset = "0x1065784", VA = "0x1065784")]
	private void StickMovement()
	{
	}

	[Token(Token = "0x600061A")]
	[Address(RVA = "0x106596C", Offset = "0x106596C", VA = "0x106596C")]
	private void SnapTurn()
	{
	}

	[Token(Token = "0x600061B")]
	[Address(RVA = "0x1065FB4", Offset = "0x1065FB4", VA = "0x1065FB4")]
	public SimpleCapsuleWithStickMovement()
	{
	}
}
[Token(Token = "0x2000152")]
public abstract class TeleportAimHandler : TeleportSupport
{
	[Token(Token = "0x600061C")]
	[Address(RVA = "0x12DC648", Offset = "0x12DC648", VA = "0x12DC648", Slot = "4")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x600061D")]
	[Address(RVA = "0x12DC6E8", Offset = "0x12DC6E8", VA = "0x12DC6E8", Slot = "5")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x600061E")]
	public abstract void GetPoints(List<Vector3> points);

	[Token(Token = "0x600061F")]
	[Address(RVA = "0x12DC7D8", Offset = "0x12DC7D8", VA = "0x12DC7D8")]
	protected TeleportAimHandler()
	{
	}
}
[Token(Token = "0x2000153")]
public class TeleportAimHandlerLaser : TeleportAimHandler
{
	[Token(Token = "0x40007F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D83AC", Offset = "0x8D83AC")]
	public float Range;

	[Token(Token = "0x6000620")]
	[Address(RVA = "0x12DC7E8", Offset = "0x12DC7E8", VA = "0x12DC7E8", Slot = "8")]
	public override void GetPoints(List<Vector3> points)
	{
	}

	[Token(Token = "0x6000621")]
	[Address(RVA = "0x12DC8E4", Offset = "0x12DC8E4", VA = "0x12DC8E4")]
	public TeleportAimHandlerLaser()
	{
	}
}
[Token(Token = "0x2000154")]
public class TeleportAimHandlerParabolic : TeleportAimHandler
{
	[Token(Token = "0x40007F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D83E4", Offset = "0x8D83E4")]
	public float Range;

	[Token(Token = "0x40007F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D841C", Offset = "0x8D841C")]
	public float MinimumElevation;

	[Token(Token = "0x40007F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D8454", Offset = "0x8D8454")]
	public float Gravity;

	[Token(Token = "0x40007F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D848C", Offset = "0x8D848C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D848C", Offset = "0x8D848C")]
	public float AimVelocity;

	[Token(Token = "0x40007F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D84E8", Offset = "0x8D84E8")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D84E8", Offset = "0x8D84E8")]
	public float AimStep;

	[Token(Token = "0x6000622")]
	[Address(RVA = "0x12DC8F4", Offset = "0x12DC8F4", VA = "0x12DC8F4", Slot = "8")]
	public override void GetPoints(List<Vector3> points)
	{
	}

	[Token(Token = "0x6000623")]
	[Address(RVA = "0x12DCA84", Offset = "0x12DCA84", VA = "0x12DCA84")]
	public TeleportAimHandlerParabolic()
	{
	}
}
[Token(Token = "0x2000155")]
public class TeleportAimVisualLaser : TeleportSupport
{
	[Token(Token = "0x40007F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D8540", Offset = "0x8D8540")]
	public LineRenderer LaserPrefab;

	[Token(Token = "0x40007F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action _enterAimStateAction;

	[Token(Token = "0x40007FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly Action _exitAimStateAction;

	[Token(Token = "0x40007FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private readonly Action<LocomotionTeleport.AimData> _updateAimDataAction;

	[Token(Token = "0x40007FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private LineRenderer _lineRenderer;

	[Token(Token = "0x40007FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3[] _linePoints;

	[Token(Token = "0x6000624")]
	[Address(RVA = "0x12DCA98", Offset = "0x12DCA98", VA = "0x12DCA98")]
	public TeleportAimVisualLaser()
	{
	}

	[Token(Token = "0x6000625")]
	[Address(RVA = "0x12DCBD4", Offset = "0x12DCBD4", VA = "0x12DCBD4")]
	private void EnterAimState()
	{
	}

	[Token(Token = "0x6000626")]
	[Address(RVA = "0x12DCC04", Offset = "0x12DCC04", VA = "0x12DCC04")]
	private void ExitAimState()
	{
	}

	[Token(Token = "0x6000627")]
	[Address(RVA = "0x12DCC34", Offset = "0x12DCC34", VA = "0x12DCC34")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000628")]
	[Address(RVA = "0x12DCCE4", Offset = "0x12DCCE4", VA = "0x12DCCE4", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x6000629")]
	[Address(RVA = "0x12DCD50", Offset = "0x12DCD50", VA = "0x12DCD50", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x600062A")]
	[Address(RVA = "0x12DCDB8", Offset = "0x12DCDB8", VA = "0x12DCDB8")]
	private void UpdateAimData(LocomotionTeleport.AimData obj)
	{
	}
}
[Token(Token = "0x2000156")]
public class TeleportDestination : MonoBehaviour
{
	[Token(Token = "0x40007FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D8578", Offset = "0x8D8578")]
	private bool <IsValidDestination>k__BackingField;

	[Token(Token = "0x40007FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D8588", Offset = "0x8D8588")]
	public Transform PositionIndicator;

	[Token(Token = "0x4000800")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D85C0", Offset = "0x8D85C0")]
	public Transform OrientationIndicator;

	[Token(Token = "0x4000801")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D85F8", Offset = "0x8D85F8")]
	public Quaternion LandingRotation;

	[NonSerialized]
	[Token(Token = "0x4000802")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public LocomotionTeleport LocomotionTeleport;

	[NonSerialized]
	[Token(Token = "0x4000803")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public LocomotionTeleport.States TeleportState;

	[Token(Token = "0x4000804")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private readonly Action<bool, Vector3?, Quaternion?, Quaternion?> _updateTeleportDestinationAction;

	[Token(Token = "0x4000805")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool _eventsActive;

	[Token(Token = "0x170000B3")]
	public bool IsValidDestination
	{
		[Token(Token = "0x600062B")]
		[Address(RVA = "0x12DCF00", Offset = "0x12DCF00", VA = "0x12DCF00")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E086C", Offset = "0x8E086C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600062C")]
		[Address(RVA = "0x12DCF08", Offset = "0x12DCF08", VA = "0x12DCF08")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E087C", Offset = "0x8E087C")]
		private set
		{
		}
	}

	[Token(Token = "0x1400000F")]
	public event Action<TeleportDestination> Deactivated
	{
		[Token(Token = "0x6000631")]
		[Address(RVA = "0x12DD0C4", Offset = "0x12DD0C4", VA = "0x12DD0C4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E088C", Offset = "0x8E088C")]
		add
		{
		}
		[Token(Token = "0x6000632")]
		[Address(RVA = "0x12DD164", Offset = "0x12DD164", VA = "0x12DD164")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E089C", Offset = "0x8E089C")]
		remove
		{
		}
	}

	[Token(Token = "0x600062D")]
	[Address(RVA = "0x12DCF14", Offset = "0x12DCF14", VA = "0x12DCF14")]
	private TeleportDestination()
	{
	}

	[Token(Token = "0x600062E")]
	[Address(RVA = "0x12DCFAC", Offset = "0x12DCFAC", VA = "0x12DCFAC")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x600062F")]
	[Address(RVA = "0x12DD080", Offset = "0x12DD080", VA = "0x12DD080")]
	private void TryDisableEventHandlers()
	{
	}

	[Token(Token = "0x6000630")]
	[Address(RVA = "0x12DD0C0", Offset = "0x12DD0C0", VA = "0x12DD0C0")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x6000633")]
	[Address(RVA = "0x12DD204", Offset = "0x12DD204", VA = "0x12DD204")]
	public void OnDeactivated()
	{
	}

	[Token(Token = "0x6000634")]
	[Address(RVA = "0x12DD268", Offset = "0x12DD268", VA = "0x12DD268")]
	public void Recycle()
	{
	}

	[Token(Token = "0x6000635")]
	[Address(RVA = "0x12DD288", Offset = "0x12DD288", VA = "0x12DD288", Slot = "4")]
	public virtual void UpdateTeleportDestination(bool isValidDestination, Vector3? position, Quaternion? rotation, Quaternion? landingRotation)
	{
	}
}
[Token(Token = "0x2000157")]
public abstract class TeleportInputHandler : TeleportSupport
{
	[Token(Token = "0x2000158")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D672C", Offset = "0x8D672C")]
	private sealed class <TeleportReadyCoroutine>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000809")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400080A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400080B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportInputHandler <>4__this;

		[Token(Token = "0x170000B4")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000642")]
			[Address(RVA = "0x1C2F7DC", Offset = "0x1C2F7DC", VA = "0x1C2F7DC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B5")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000644")]
			[Address(RVA = "0x1C2F824", Offset = "0x1C2F824", VA = "0x1C2F824", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600063F")]
		[Address(RVA = "0x1C2F714", Offset = "0x1C2F714", VA = "0x1C2F714")]
		[DebuggerHidden]
		public <TeleportReadyCoroutine>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x6000640")]
		[Address(RVA = "0x1C2F740", Offset = "0x1C2F740", VA = "0x1C2F740", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000641")]
		[Address(RVA = "0x1C2F744", Offset = "0x1C2F744", VA = "0x1C2F744", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000643")]
		[Address(RVA = "0x1C2F7E4", Offset = "0x1C2F7E4", VA = "0x1C2F7E4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000159")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D673C", Offset = "0x8D673C")]
	private sealed class <TeleportAimCoroutine>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400080C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400080D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400080E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportInputHandler <>4__this;

		[Token(Token = "0x170000B6")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000648")]
			[Address(RVA = "0x1C2F6C4", Offset = "0x1C2F6C4", VA = "0x1C2F6C4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B7")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600064A")]
			[Address(RVA = "0x1C2F70C", Offset = "0x1C2F70C", VA = "0x1C2F70C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000645")]
		[Address(RVA = "0x1C2F5F8", Offset = "0x1C2F5F8", VA = "0x1C2F5F8")]
		[DebuggerHidden]
		public <TeleportAimCoroutine>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6000646")]
		[Address(RVA = "0x1C2F624", Offset = "0x1C2F624", VA = "0x1C2F624", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000647")]
		[Address(RVA = "0x1C2F628", Offset = "0x1C2F628", VA = "0x1C2F628", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000649")]
		[Address(RVA = "0x1C2F6CC", Offset = "0x1C2F6CC", VA = "0x1C2F6CC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000807")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly Action _startReadyAction;

	[Token(Token = "0x4000808")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action _startAimAction;

	[Token(Token = "0x6000636")]
	[Address(RVA = "0x12DD4D8", Offset = "0x12DD4D8", VA = "0x12DD4D8")]
	protected TeleportInputHandler()
	{
	}

	[Token(Token = "0x6000637")]
	[Address(RVA = "0x12DD5AC", Offset = "0x12DD5AC", VA = "0x12DD5AC", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x6000638")]
	[Address(RVA = "0x12DD60C", Offset = "0x12DD60C", VA = "0x12DD60C", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x6000639")]
	[Address(RVA = "0x12DD6CC", Offset = "0x12DD6CC", VA = "0x12DD6CC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E08AC", Offset = "0x8E08AC")]
	private IEnumerator TeleportReadyCoroutine()
	{
		return null;
	}

	[Token(Token = "0x600063A")]
	[Address(RVA = "0x12DD744", Offset = "0x12DD744", VA = "0x12DD744")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E090C", Offset = "0x8E090C")]
	private IEnumerator TeleportAimCoroutine()
	{
		return null;
	}

	[Token(Token = "0x600063B")]
	public abstract LocomotionTeleport.TeleportIntentions GetIntention();

	[Token(Token = "0x600063C")]
	public abstract void GetAimData(out Ray aimRay);

	[Token(Token = "0x600063D")]
	[Address(RVA = "0x12DD7BC", Offset = "0x12DD7BC", VA = "0x12DD7BC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E096C", Offset = "0x8E096C")]
	private void <.ctor>b__2_0()
	{
	}

	[Token(Token = "0x600063E")]
	[Address(RVA = "0x12DD7E8", Offset = "0x12DD7E8", VA = "0x12DD7E8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E097C", Offset = "0x8E097C")]
	private void <.ctor>b__2_1()
	{
	}
}
[Token(Token = "0x200015A")]
public class TeleportInputHandlerHMD : TeleportInputHandler
{
	[Token(Token = "0x400080F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D8640", Offset = "0x8D8640")]
	private Transform <Pointer>k__BackingField;

	[Token(Token = "0x4000810")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D8650", Offset = "0x8D8650")]
	public PVRInput.RawButton AimButton;

	[Token(Token = "0x4000811")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D8688", Offset = "0x8D8688")]
	public PVRInput.RawButton TeleportButton;

	[Token(Token = "0x4000812")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D86C0", Offset = "0x8D86C0")]
	public bool FastTeleport;

	[Token(Token = "0x170000B8")]
	public Transform Pointer
	{
		[Token(Token = "0x600064B")]
		[Address(RVA = "0x12DD814", Offset = "0x12DD814", VA = "0x12DD814")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E0A2C", Offset = "0x8E0A2C")]
		get
		{
			return null;
		}
		[Token(Token = "0x600064C")]
		[Address(RVA = "0x12DD81C", Offset = "0x12DD81C", VA = "0x12DD81C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E0A3C", Offset = "0x8E0A3C")]
		private set
		{
		}
	}

	[Token(Token = "0x600064D")]
	[Address(RVA = "0x12DD824", Offset = "0x12DD824", VA = "0x12DD824", Slot = "8")]
	public override LocomotionTeleport.TeleportIntentions GetIntention()
	{
		return default(LocomotionTeleport.TeleportIntentions);
	}

	[Token(Token = "0x600064E")]
	[Address(RVA = "0x12DD97C", Offset = "0x12DD97C", VA = "0x12DD97C", Slot = "9")]
	public override void GetAimData(out Ray aimRay)
	{
	}

	[Token(Token = "0x600064F")]
	[Address(RVA = "0x12DDA34", Offset = "0x12DDA34", VA = "0x12DDA34")]
	public TeleportInputHandlerHMD()
	{
	}
}
[Token(Token = "0x200015B")]
public class TeleportInputHandlerTouch : TeleportInputHandlerHMD
{
	[Token(Token = "0x200015C")]
	public enum InputModes
	{
		[Token(Token = "0x400081D")]
		CapacitiveButtonForAimAndTeleport,
		[Token(Token = "0x400081E")]
		SeparateButtonsForAimAndTeleport,
		[Token(Token = "0x400081F")]
		ThumbstickTeleport,
		[Token(Token = "0x4000820")]
		ThumbstickTeleportForwardBackOnly
	}

	[Token(Token = "0x200015D")]
	public enum AimCapTouchButtons
	{
		[Token(Token = "0x4000822")]
		A,
		[Token(Token = "0x4000823")]
		B,
		[Token(Token = "0x4000824")]
		LeftTrigger,
		[Token(Token = "0x4000825")]
		LeftThumbstick,
		[Token(Token = "0x4000826")]
		RightTrigger,
		[Token(Token = "0x4000827")]
		RightThumbstick,
		[Token(Token = "0x4000828")]
		X,
		[Token(Token = "0x4000829")]
		Y
	}

	[Token(Token = "0x4000813")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform LeftHand;

	[Token(Token = "0x4000814")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform RightHand;

	[Token(Token = "0x4000815")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D86F8", Offset = "0x8D86F8")]
	public InputModes InputMode;

	[Token(Token = "0x4000816")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private readonly PVRInput.RawButton[] _rawButtons;

	[Token(Token = "0x4000817")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private readonly PVRInput.RawTouch[] _rawTouch;

	[Token(Token = "0x4000818")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D8730", Offset = "0x8D8730")]
	public PVRInput.Controller AimingController;

	[Token(Token = "0x4000819")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private PVRInput.Controller InitiatingController;

	[Token(Token = "0x400081A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D8768", Offset = "0x8D8768")]
	public AimCapTouchButtons CapacitiveAimAndTeleportButton;

	[Token(Token = "0x400081B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D87A0", Offset = "0x8D87A0")]
	public float ThumbstickTeleportThreshold;

	[Token(Token = "0x6000650")]
	[Address(RVA = "0x12DDA38", Offset = "0x12DDA38", VA = "0x12DDA38")]
	private void Start()
	{
	}

	[Token(Token = "0x6000651")]
	[Address(RVA = "0x12DDA3C", Offset = "0x12DDA3C", VA = "0x12DDA3C", Slot = "8")]
	public override LocomotionTeleport.TeleportIntentions GetIntention()
	{
		return default(LocomotionTeleport.TeleportIntentions);
	}

	[Token(Token = "0x6000652")]
	[Address(RVA = "0x12DDE24", Offset = "0x12DDE24", VA = "0x12DDE24", Slot = "9")]
	public override void GetAimData(out Ray aimRay)
	{
	}

	[Token(Token = "0x6000653")]
	[Address(RVA = "0x12DDEE4", Offset = "0x12DDEE4", VA = "0x12DDEE4")]
	public TeleportInputHandlerTouch()
	{
	}
}
[Token(Token = "0x200015E")]
public abstract class TeleportOrientationHandler : TeleportSupport
{
	[Token(Token = "0x200015F")]
	public enum OrientationModes
	{
		[Token(Token = "0x400082E")]
		HeadRelative,
		[Token(Token = "0x400082F")]
		ForwardFacing
	}

	[Token(Token = "0x2000160")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D674C", Offset = "0x8D674C")]
	private sealed class <UpdateOrientationCoroutine>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000830")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000831")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000832")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportOrientationHandler <>4__this;

		[Token(Token = "0x170000B9")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000660")]
			[Address(RVA = "0x1C2F90C", Offset = "0x1C2F90C", VA = "0x1C2F90C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000BA")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000662")]
			[Address(RVA = "0x1C2F954", Offset = "0x1C2F954", VA = "0x1C2F954", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600065D")]
		[Address(RVA = "0x1C2F82C", Offset = "0x1C2F82C", VA = "0x1C2F82C")]
		[DebuggerHidden]
		public <UpdateOrientationCoroutine>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x600065E")]
		[Address(RVA = "0x1C2F858", Offset = "0x1C2F858", VA = "0x1C2F858", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600065F")]
		[Address(RVA = "0x1C2F85C", Offset = "0x1C2F85C", VA = "0x1C2F85C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000661")]
		[Address(RVA = "0x1C2F914", Offset = "0x1C2F914", VA = "0x1C2F914", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400082A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly Action _updateOrientationAction;

	[Token(Token = "0x400082B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action<LocomotionTeleport.AimData> _updateAimDataAction;

	[Token(Token = "0x400082C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected LocomotionTeleport.AimData AimData;

	[Token(Token = "0x6000654")]
	[Address(RVA = "0x12DDFC8", Offset = "0x12DDFC8", VA = "0x12DDFC8")]
	protected TeleportOrientationHandler()
	{
	}

	[Token(Token = "0x6000655")]
	[Address(RVA = "0x12DE0BC", Offset = "0x12DE0BC", VA = "0x12DE0BC")]
	private void UpdateAimData(LocomotionTeleport.AimData aimData)
	{
	}

	[Token(Token = "0x6000656")]
	[Address(RVA = "0x12DE0C4", Offset = "0x12DE0C4", VA = "0x12DE0C4", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x6000657")]
	[Address(RVA = "0x12DE110", Offset = "0x12DE110", VA = "0x12DE110", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x6000658")]
	[Address(RVA = "0x12DE158", Offset = "0x12DE158", VA = "0x12DE158")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E0A4C", Offset = "0x8E0A4C")]
	private IEnumerator UpdateOrientationCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000659")]
	protected abstract void InitializeTeleportDestination();

	[Token(Token = "0x600065A")]
	protected abstract void UpdateTeleportDestination();

	[Token(Token = "0x600065B")]
	[Address(RVA = "0x12DE1D0", Offset = "0x12DE1D0", VA = "0x12DE1D0")]
	protected Quaternion GetLandingOrientation(OrientationModes mode, Quaternion rotation)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x600065C")]
	[Address(RVA = "0x12DE28C", Offset = "0x12DE28C", VA = "0x12DE28C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E0AAC", Offset = "0x8E0AAC")]
	private void <.ctor>b__3_0()
	{
	}
}
[Token(Token = "0x2000161")]
public class TeleportOrientationHandler360 : TeleportOrientationHandler
{
	[Token(Token = "0x6000663")]
	[Address(RVA = "0x12DE2B8", Offset = "0x12DE2B8", VA = "0x12DE2B8", Slot = "8")]
	protected override void InitializeTeleportDestination()
	{
	}

	[Token(Token = "0x6000664")]
	[Address(RVA = "0x12DE2BC", Offset = "0x12DE2BC", VA = "0x12DE2BC", Slot = "9")]
	protected override void UpdateTeleportDestination()
	{
	}

	[Token(Token = "0x6000665")]
	[Address(RVA = "0x12DE338", Offset = "0x12DE338", VA = "0x12DE338")]
	public TeleportOrientationHandler360()
	{
	}
}
[Token(Token = "0x2000162")]
public class TeleportOrientationHandlerHMD : TeleportOrientationHandler
{
	[Token(Token = "0x4000833")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D87D8", Offset = "0x8D87D8")]
	public OrientationModes OrientationMode;

	[Token(Token = "0x4000834")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D8810", Offset = "0x8D8810")]
	public bool UpdateOrientationDuringAim;

	[Token(Token = "0x4000835")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D8848", Offset = "0x8D8848")]
	public float AimDistanceThreshold;

	[Token(Token = "0x4000836")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D8880", Offset = "0x8D8880")]
	public float AimDistanceMaxRange;

	[Token(Token = "0x4000837")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Quaternion _initialRotation;

	[Token(Token = "0x6000666")]
	[Address(RVA = "0x12DE33C", Offset = "0x12DE33C", VA = "0x12DE33C", Slot = "8")]
	protected override void InitializeTeleportDestination()
	{
	}

	[Token(Token = "0x6000667")]
	[Address(RVA = "0x12DE368", Offset = "0x12DE368", VA = "0x12DE368", Slot = "9")]
	protected override void UpdateTeleportDestination()
	{
	}

	[Token(Token = "0x6000668")]
	[Address(RVA = "0x12DE718", Offset = "0x12DE718", VA = "0x12DE718")]
	public TeleportOrientationHandlerHMD()
	{
	}
}
[Token(Token = "0x2000163")]
public class TeleportOrientationHandlerThumbstick : TeleportOrientationHandler
{
	[Token(Token = "0x4000838")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D88B8", Offset = "0x8D88B8")]
	public OrientationModes OrientationMode;

	[Token(Token = "0x4000839")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D88F0", Offset = "0x8D88F0")]
	public PVRInput.Controller Thumbstick;

	[Token(Token = "0x400083A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D8928", Offset = "0x8D8928")]
	public float RotateStickThreshold;

	[Token(Token = "0x400083B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Quaternion _initialRotation;

	[Token(Token = "0x400083C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Quaternion _currentRotation;

	[Token(Token = "0x400083D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Vector2 _lastValidDirection;

	[Token(Token = "0x6000669")]
	[Address(RVA = "0x12DE71C", Offset = "0x12DE71C", VA = "0x12DE71C", Slot = "8")]
	protected override void InitializeTeleportDestination()
	{
	}

	[Token(Token = "0x600066A")]
	[Address(RVA = "0x12DE760", Offset = "0x12DE760", VA = "0x12DE760", Slot = "9")]
	protected override void UpdateTeleportDestination()
	{
	}

	[Token(Token = "0x600066B")]
	[Address(RVA = "0x12DEB08", Offset = "0x12DEB08", VA = "0x12DEB08")]
	public TeleportOrientationHandlerThumbstick()
	{
	}
}
[Token(Token = "0x2000164")]
public class TeleportPoint : MonoBehaviour
{
	[Token(Token = "0x400083E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float dimmingSpeed;

	[Token(Token = "0x400083F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float fullIntensity;

	[Token(Token = "0x4000840")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float lowIntensity;

	[Token(Token = "0x4000841")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform destTransform;

	[Token(Token = "0x4000842")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float lastLookAtTime;

	[Token(Token = "0x600066C")]
	[Address(RVA = "0x12DEB18", Offset = "0x12DEB18", VA = "0x12DEB18")]
	private void Start()
	{
	}

	[Token(Token = "0x600066D")]
	[Address(RVA = "0x12DEB1C", Offset = "0x12DEB1C", VA = "0x12DEB1C")]
	public Transform GetDestTransform()
	{
		return null;
	}

	[Token(Token = "0x600066E")]
	[Address(RVA = "0x12DEB24", Offset = "0x12DEB24", VA = "0x12DEB24")]
	private void Update()
	{
	}

	[Token(Token = "0x600066F")]
	[Address(RVA = "0x12DEBE0", Offset = "0x12DEBE0", VA = "0x12DEBE0")]
	public void OnLookAt()
	{
	}

	[Token(Token = "0x6000670")]
	[Address(RVA = "0x12DEC08", Offset = "0x12DEC08", VA = "0x12DEC08")]
	public TeleportPoint()
	{
	}
}
[Token(Token = "0x2000165")]
public abstract class TeleportSupport : MonoBehaviour
{
	[Token(Token = "0x4000843")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D8960", Offset = "0x8D8960")]
	private LocomotionTeleport <LocomotionTeleport>k__BackingField;

	[Token(Token = "0x4000844")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool _eventsActive;

	[Token(Token = "0x170000BB")]
	protected LocomotionTeleport LocomotionTeleport
	{
		[Token(Token = "0x6000671")]
		[Address(RVA = "0x12DEC20", Offset = "0x12DEC20", VA = "0x12DEC20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E0B0C", Offset = "0x8E0B0C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000672")]
		[Address(RVA = "0x12DEC28", Offset = "0x12DEC28", VA = "0x12DEC28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E0B1C", Offset = "0x8E0B1C")]
		private set
		{
		}
	}

	[Token(Token = "0x6000673")]
	[Address(RVA = "0x12DC67C", Offset = "0x12DC67C", VA = "0x12DC67C", Slot = "4")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x6000674")]
	[Address(RVA = "0x12DC7A4", Offset = "0x12DC7A4", VA = "0x12DC7A4", Slot = "5")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x6000675")]
	[Address(RVA = "0x12DEC30", Offset = "0x12DEC30", VA = "0x12DEC30")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x8E0B2C", Offset = "0x8E0B2C")]
	private void LogEventHandler(string msg)
	{
	}

	[Token(Token = "0x6000676")]
	[Address(RVA = "0x12DCD44", Offset = "0x12DCD44", VA = "0x12DCD44", Slot = "6")]
	protected virtual void AddEventHandlers()
	{
	}

	[Token(Token = "0x6000677")]
	[Address(RVA = "0x12DCDB0", Offset = "0x12DCDB0", VA = "0x12DCDB0", Slot = "7")]
	protected virtual void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x6000678")]
	[Address(RVA = "0x12DC7E0", Offset = "0x12DC7E0", VA = "0x12DC7E0")]
	protected TeleportSupport()
	{
	}
}
[Token(Token = "0x2000166")]
public abstract class TeleportTargetHandler : TeleportSupport
{
	[Token(Token = "0x2000167")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D675C", Offset = "0x8D675C")]
	private sealed class <TargetAimCoroutine>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400084A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400084B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400084C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportTargetHandler <>4__this;

		[Token(Token = "0x170000BC")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000684")]
			[Address(RVA = "0x1C2FC28", Offset = "0x1C2FC28", VA = "0x1C2FC28", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000BD")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000686")]
			[Address(RVA = "0x1C2FC70", Offset = "0x1C2FC70", VA = "0x1C2FC70", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000681")]
		[Address(RVA = "0x1C2F95C", Offset = "0x1C2F95C", VA = "0x1C2F95C")]
		[DebuggerHidden]
		public <TargetAimCoroutine>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6000682")]
		[Address(RVA = "0x1C2F988", Offset = "0x1C2F988", VA = "0x1C2F988", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000683")]
		[Address(RVA = "0x1C2F98C", Offset = "0x1C2F98C", VA = "0x1C2F98C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000685")]
		[Address(RVA = "0x1C2FC30", Offset = "0x1C2FC30", VA = "0x1C2FC30", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000845")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D8970", Offset = "0x8D8970")]
	public LayerMask AimCollisionLayerMask;

	[Token(Token = "0x4000846")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected readonly LocomotionTeleport.AimData AimData;

	[Token(Token = "0x4000847")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action _startAimAction;

	[Token(Token = "0x4000848")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly List<Vector3> _aimPoints;

	[Token(Token = "0x4000849")]
	private const float ERROR_MARGIN = 0.1f;

	[Token(Token = "0x6000679")]
	[Address(RVA = "0x12DED0C", Offset = "0x12DED0C", VA = "0x12DED0C")]
	protected TeleportTargetHandler()
	{
	}

	[Token(Token = "0x600067A")]
	[Address(RVA = "0x12DEE1C", Offset = "0x12DEE1C", VA = "0x12DEE1C", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x600067B")]
	[Address(RVA = "0x12DEE48", Offset = "0x12DEE48", VA = "0x12DEE48", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x600067C")]
	[Address(RVA = "0x12DEE70", Offset = "0x12DEE70", VA = "0x12DEE70")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E0B64", Offset = "0x8E0B64")]
	private IEnumerator TargetAimCoroutine()
	{
		return null;
	}

	[Token(Token = "0x600067D")]
	[Address(RVA = "0x12DEEE8", Offset = "0x12DEEE8", VA = "0x12DEEE8", Slot = "8")]
	protected virtual void ResetAimData()
	{
	}

	[Token(Token = "0x600067E")]
	protected abstract bool ConsiderTeleport(Vector3 start, ref Vector3 end);

	[Token(Token = "0x600067F")]
	[Address(RVA = "0x12DEF04", Offset = "0x12DEF04", VA = "0x12DEF04", Slot = "10")]
	public virtual Vector3? ConsiderDestination(Vector3 location)
	{
		return null;
	}

	[Token(Token = "0x6000680")]
	[Address(RVA = "0x12DF024", Offset = "0x12DF024", VA = "0x12DF024")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E0BC4", Offset = "0x8E0BC4")]
	private void <.ctor>b__3_0()
	{
	}
}
[Token(Token = "0x2000168")]
public class TeleportTargetHandlerNavMesh : TeleportTargetHandler
{
	[Token(Token = "0x400084D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int NavMeshAreaMask;

	[Token(Token = "0x400084E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private NavMeshPath _path;

	[Token(Token = "0x6000687")]
	[Address(RVA = "0x12DF050", Offset = "0x12DF050", VA = "0x12DF050")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000688")]
	[Address(RVA = "0x12DF0B4", Offset = "0x12DF0B4", VA = "0x12DF0B4", Slot = "9")]
	protected override bool ConsiderTeleport(Vector3 start, ref Vector3 end)
	{
		return default(bool);
	}

	[Token(Token = "0x6000689")]
	[Address(RVA = "0x12DF1AC", Offset = "0x12DF1AC", VA = "0x12DF1AC", Slot = "10")]
	public override Vector3? ConsiderDestination(Vector3 location)
	{
		return null;
	}

	[Token(Token = "0x600068A")]
	[Address(RVA = "0x12DF2A4", Offset = "0x12DF2A4", VA = "0x12DF2A4")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x8E0C24", Offset = "0x8E0C24")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x600068B")]
	[Address(RVA = "0x12DF2A8", Offset = "0x12DF2A8", VA = "0x12DF2A8")]
	public TeleportTargetHandlerNavMesh()
	{
	}
}
[Token(Token = "0x2000169")]
public class TeleportTargetHandlerNode : TeleportTargetHandler
{
	[Token(Token = "0x400084F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D89A8", Offset = "0x8D89A8")]
	public float LOSOffset;

	[Token(Token = "0x4000850")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D89E0", Offset = "0x8D89E0")]
	public LayerMask TeleportLayerMask;

	[Token(Token = "0x600068C")]
	[Address(RVA = "0x12DF2B4", Offset = "0x12DF2B4", VA = "0x12DF2B4", Slot = "9")]
	protected override bool ConsiderTeleport(Vector3 start, ref Vector3 end)
	{
		return default(bool);
	}

	[Token(Token = "0x600068D")]
	[Address(RVA = "0x12DF4C0", Offset = "0x12DF4C0", VA = "0x12DF4C0")]
	public TeleportTargetHandlerNode()
	{
	}
}
[Token(Token = "0x200016A")]
public class TeleportTargetHandlerPhysical : TeleportTargetHandler
{
	[Token(Token = "0x600068E")]
	[Address(RVA = "0x12DF4CC", Offset = "0x12DF4CC", VA = "0x12DF4CC", Slot = "9")]
	protected override bool ConsiderTeleport(Vector3 start, ref Vector3 end)
	{
		return default(bool);
	}

	[Token(Token = "0x600068F")]
	[Address(RVA = "0x12DF5C4", Offset = "0x12DF5C4", VA = "0x12DF5C4")]
	public TeleportTargetHandlerPhysical()
	{
	}
}
[Token(Token = "0x200016B")]
public abstract class TeleportTransition : TeleportSupport
{
	[Token(Token = "0x6000690")]
	[Address(RVA = "0x12DF5C8", Offset = "0x12DF5C8", VA = "0x12DF5C8", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x6000691")]
	[Address(RVA = "0x12DF65C", Offset = "0x12DF65C", VA = "0x12DF65C", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x6000692")]
	protected abstract void LocomotionTeleportOnEnterStateTeleporting();

	[Token(Token = "0x6000693")]
	[Address(RVA = "0x12DF6EC", Offset = "0x12DF6EC", VA = "0x12DF6EC")]
	protected TeleportTransition()
	{
	}
}
[Token(Token = "0x200016C")]
public class TeleportTransitionBlink : TeleportTransition
{
	[Token(Token = "0x200016D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D676C", Offset = "0x8D676C")]
	private sealed class <BlinkCoroutine>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000855")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000856")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000857")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportTransitionBlink <>4__this;

		[Token(Token = "0x4000858")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <elapsedTime>5__2;

		[Token(Token = "0x4000859")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <teleportTime>5__3;

		[Token(Token = "0x400085A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool <teleported>5__4;

		[Token(Token = "0x170000BE")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600069A")]
			[Address(RVA = "0x1C2FDF0", Offset = "0x1C2FDF0", VA = "0x1C2FDF0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000BF")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600069C")]
			[Address(RVA = "0x1C2FE38", Offset = "0x1C2FE38", VA = "0x1C2FE38", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000697")]
		[Address(RVA = "0x1C2FC78", Offset = "0x1C2FC78", VA = "0x1C2FC78")]
		[DebuggerHidden]
		public <BlinkCoroutine>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x6000698")]
		[Address(RVA = "0x1C2FCA4", Offset = "0x1C2FCA4", VA = "0x1C2FCA4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000699")]
		[Address(RVA = "0x1C2FCA8", Offset = "0x1C2FCA8", VA = "0x1C2FCA8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600069B")]
		[Address(RVA = "0x1C2FDF8", Offset = "0x1C2FDF8", VA = "0x1C2FDF8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000851")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public PVRScreenFade fader;

	[Token(Token = "0x4000852")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D8A18", Offset = "0x8D8A18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D8A18", Offset = "0x8D8A18")]
	public float TransitionDuration;

	[Token(Token = "0x4000853")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D8A70", Offset = "0x8D8A70")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D8A70", Offset = "0x8D8A70")]
	public float TeleportDelay;

	[Token(Token = "0x4000854")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D8AC4", Offset = "0x8D8AC4")]
	public AnimationCurve FadeLevels;

	[Token(Token = "0x6000694")]
	[Address(RVA = "0x12DF6F4", Offset = "0x12DF6F4", VA = "0x12DF6F4", Slot = "8")]
	protected override void LocomotionTeleportOnEnterStateTeleporting()
	{
	}

	[Token(Token = "0x6000695")]
	[Address(RVA = "0x12DF720", Offset = "0x12DF720", VA = "0x12DF720")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E0C5C", Offset = "0x8E0C5C")]
	protected IEnumerator BlinkCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000696")]
	[Address(RVA = "0x12DF798", Offset = "0x12DF798", VA = "0x12DF798")]
	public TeleportTransitionBlink()
	{
	}
}
[Token(Token = "0x200016E")]
public class TeleportTransitionInstant : TeleportTransition
{
	[Token(Token = "0x600069D")]
	[Address(RVA = "0x12DF944", Offset = "0x12DF944", VA = "0x12DF944", Slot = "8")]
	protected override void LocomotionTeleportOnEnterStateTeleporting()
	{
	}

	[Token(Token = "0x600069E")]
	[Address(RVA = "0x12DF960", Offset = "0x12DF960", VA = "0x12DF960")]
	public TeleportTransitionInstant()
	{
	}
}
[Token(Token = "0x200016F")]
public class TeleportTransitionWarp : TeleportTransition
{
	[Token(Token = "0x2000170")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D677C", Offset = "0x8D677C")]
	private sealed class <DoWarp>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400085D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400085E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400085F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportTransitionWarp <>4__this;

		[Token(Token = "0x4000860")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 <startPosition>5__2;

		[Token(Token = "0x4000861")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <elapsedTime>5__3;

		[Token(Token = "0x170000C0")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60006A5")]
			[Address(RVA = "0x1C2FFAC", Offset = "0x1C2FFAC", VA = "0x1C2FFAC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C1")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60006A7")]
			[Address(RVA = "0x1C2FFF4", Offset = "0x1C2FFF4", VA = "0x1C2FFF4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60006A2")]
		[Address(RVA = "0x1C2FE40", Offset = "0x1C2FE40", VA = "0x1C2FE40")]
		[DebuggerHidden]
		public <DoWarp>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x60006A3")]
		[Address(RVA = "0x1C2FE6C", Offset = "0x1C2FE6C", VA = "0x1C2FE6C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60006A4")]
		[Address(RVA = "0x1C2FE70", Offset = "0x1C2FE70", VA = "0x1C2FE70", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60006A6")]
		[Address(RVA = "0x1C2FFB4", Offset = "0x1C2FFB4", VA = "0x1C2FFB4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400085B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D8AFC", Offset = "0x8D8AFC")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D8AFC", Offset = "0x8D8AFC")]
	public float TransitionDuration;

	[Token(Token = "0x400085C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public AnimationCurve PositionLerp;

	[Token(Token = "0x600069F")]
	[Address(RVA = "0x12DF968", Offset = "0x12DF968", VA = "0x12DF968", Slot = "8")]
	protected override void LocomotionTeleportOnEnterStateTeleporting()
	{
	}

	[Token(Token = "0x60006A0")]
	[Address(RVA = "0x12DF994", Offset = "0x12DF994", VA = "0x12DF994")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E0D0C", Offset = "0x8E0D0C")]
	private IEnumerator DoWarp()
	{
		return null;
	}

	[Token(Token = "0x60006A1")]
	[Address(RVA = "0x12DFA0C", Offset = "0x12DFA0C", VA = "0x12DFA0C")]
	public TeleportTransitionWarp()
	{
	}
}
[Token(Token = "0x2000171")]
public static class NativeVideoPlayer
{
	[Token(Token = "0x2000172")]
	public enum PlabackState
	{
		[Token(Token = "0x400087A")]
		Idle = 1,
		[Token(Token = "0x400087B")]
		Preparing,
		[Token(Token = "0x400087C")]
		Buffering,
		[Token(Token = "0x400087D")]
		Ready,
		[Token(Token = "0x400087E")]
		Ended
	}

	[Token(Token = "0x2000173")]
	public enum StereoMode
	{
		[Token(Token = "0x4000880")]
		Unknown = -1,
		[Token(Token = "0x4000881")]
		Mono,
		[Token(Token = "0x4000882")]
		TopBottom,
		[Token(Token = "0x4000883")]
		LeftRight,
		[Token(Token = "0x4000884")]
		Mesh
	}

	[Token(Token = "0x4000862")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static IntPtr? _Activity;

	[Token(Token = "0x4000863")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static IntPtr? _VideoPlayerClass;

	[Token(Token = "0x4000864")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static readonly jvalue[] EmptyParams;

	[Token(Token = "0x4000865")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static IntPtr getIsPlayingMethodId;

	[Token(Token = "0x4000866")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static IntPtr getCurrentPlaybackStateMethodId;

	[Token(Token = "0x4000867")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private static IntPtr getDurationMethodId;

	[Token(Token = "0x4000868")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static IntPtr getStereoModeMethodId;

	[Token(Token = "0x4000869")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static IntPtr getWidthMethodId;

	[Token(Token = "0x400086A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private static IntPtr getHeightMethodId;

	[Token(Token = "0x400086B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private static IntPtr getPlaybackPositionMethodId;

	[Token(Token = "0x400086C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private static IntPtr setPlaybackPositionMethodId;

	[Token(Token = "0x400086D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private static jvalue[] setPlaybackPositionParams;

	[Token(Token = "0x400086E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private static IntPtr playVideoMethodId;

	[Token(Token = "0x400086F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private static jvalue[] playVideoParams;

	[Token(Token = "0x4000870")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private static IntPtr stopMethodId;

	[Token(Token = "0x4000871")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private static IntPtr resumeMethodId;

	[Token(Token = "0x4000872")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private static IntPtr pauseMethodId;

	[Token(Token = "0x4000873")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private static IntPtr setPlaybackSpeedMethodId;

	[Token(Token = "0x4000874")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private static jvalue[] setPlaybackSpeedParams;

	[Token(Token = "0x4000875")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private static IntPtr setLoopingMethodId;

	[Token(Token = "0x4000876")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private static jvalue[] setLoopingParams;

	[Token(Token = "0x4000877")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private static IntPtr setListenerRotationQuaternionMethodId;

	[Token(Token = "0x4000878")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private static jvalue[] setListenerRotationQuaternionParams;

	[Token(Token = "0x170000C2")]
	private static IntPtr VideoPlayerClass
	{
		[Token(Token = "0x60006A8")]
		[Address(RVA = "0x135F318", Offset = "0x135F318", VA = "0x135F318")]
		get
		{
			return default(IntPtr);
		}
	}

	[Token(Token = "0x170000C3")]
	private static IntPtr Activity
	{
		[Token(Token = "0x60006A9")]
		[Address(RVA = "0x135F648", Offset = "0x135F648", VA = "0x135F648")]
		get
		{
			return default(IntPtr);
		}
	}

	[Token(Token = "0x170000C4")]
	public static bool IsAvailable
	{
		[Token(Token = "0x60006AA")]
		[Address(RVA = "0x135BFFC", Offset = "0x135BFFC", VA = "0x135BFFC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000C5")]
	public static bool IsPlaying
	{
		[Token(Token = "0x60006AB")]
		[Address(RVA = "0x135D808", Offset = "0x135D808", VA = "0x135D808")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000C6")]
	public static PlabackState CurrentPlaybackState
	{
		[Token(Token = "0x60006AC")]
		[Address(RVA = "0x135F918", Offset = "0x135F918", VA = "0x135F918")]
		get
		{
			return default(PlabackState);
		}
	}

	[Token(Token = "0x170000C7")]
	public static long Duration
	{
		[Token(Token = "0x60006AD")]
		[Address(RVA = "0x135DA2C", Offset = "0x135DA2C", VA = "0x135DA2C")]
		get
		{
			return default(long);
		}
	}

	[Token(Token = "0x170000C8")]
	public static StereoMode VideoStereoMode
	{
		[Token(Token = "0x60006AE")]
		[Address(RVA = "0x135C624", Offset = "0x135C624", VA = "0x135C624")]
		get
		{
			return default(StereoMode);
		}
	}

	[Token(Token = "0x170000C9")]
	public static int VideoWidth
	{
		[Token(Token = "0x60006AF")]
		[Address(RVA = "0x135C3FC", Offset = "0x135C3FC", VA = "0x135C3FC")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170000CA")]
	public static int VideoHeight
	{
		[Token(Token = "0x60006B0")]
		[Address(RVA = "0x135C510", Offset = "0x135C510", VA = "0x135C510")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170000CB")]
	public static long PlaybackPosition
	{
		[Token(Token = "0x60006B1")]
		[Address(RVA = "0x135D918", Offset = "0x135D918", VA = "0x135D918")]
		get
		{
			return default(long);
		}
		[Token(Token = "0x60006B2")]
		[Address(RVA = "0x135CEDC", Offset = "0x135CEDC", VA = "0x135CEDC")]
		set
		{
		}
	}

	[Token(Token = "0x60006B3")]
	[Address(RVA = "0x135FA2C", Offset = "0x135FA2C", VA = "0x135FA2C")]
	public static void PlayVideo(string path, string drmLicenseUrl, IntPtr surfaceObj)
	{
	}

	[Token(Token = "0x60006B4")]
	[Address(RVA = "0x135DDFC", Offset = "0x135DDFC", VA = "0x135DDFC")]
	public static void Stop()
	{
	}

	[Token(Token = "0x60006B5")]
	[Address(RVA = "0x135CB28", Offset = "0x135CB28", VA = "0x135CB28")]
	public static void Play()
	{
	}

	[Token(Token = "0x60006B6")]
	[Address(RVA = "0x135CCC8", Offset = "0x135CCC8", VA = "0x135CCC8")]
	public static void Pause()
	{
	}

	[Token(Token = "0x60006B7")]
	[Address(RVA = "0x135DBF4", Offset = "0x135DBF4", VA = "0x135DBF4")]
	public static void SetPlaybackSpeed(float speed)
	{
	}

	[Token(Token = "0x60006B8")]
	[Address(RVA = "0x135FC58", Offset = "0x135FC58", VA = "0x135FC58")]
	public static void SetLooping(bool looping)
	{
	}

	[Token(Token = "0x60006B9")]
	[Address(RVA = "0x135D618", Offset = "0x135D618", VA = "0x135D618")]
	public static void SetListenerRotation(Quaternion rotation)
	{
	}
}
[Token(Token = "0x2000174")]
public class ButtonDownListener : MonoBehaviour, IPointerDownHandler, IEventSystemHandler
{
	[Token(Token = "0x14000010")]
	public event Action onButtonDown
	{
		[Token(Token = "0x60006BB")]
		[Address(RVA = "0x12F2828", Offset = "0x12F2828", VA = "0x12F2828")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E0DBC", Offset = "0x8E0DBC")]
		add
		{
		}
		[Token(Token = "0x60006BC")]
		[Address(RVA = "0x12F28C8", Offset = "0x12F28C8", VA = "0x12F28C8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E0DCC", Offset = "0x8E0DCC")]
		remove
		{
		}
	}

	[Token(Token = "0x60006BD")]
	[Address(RVA = "0x12F2968", Offset = "0x12F2968", VA = "0x12F2968", Slot = "4")]
	public void OnPointerDown(PointerEventData eventData)
	{
	}

	[Token(Token = "0x60006BE")]
	[Address(RVA = "0x12F297C", Offset = "0x12F297C", VA = "0x12F297C")]
	public ButtonDownListener()
	{
	}
}
[Token(Token = "0x2000175")]
public class MediaPlayerImage : Image
{
	[Token(Token = "0x2000176")]
	public enum ButtonType
	{
		[Token(Token = "0x4000888")]
		Play,
		[Token(Token = "0x4000889")]
		Pause,
		[Token(Token = "0x400088A")]
		FastForward,
		[Token(Token = "0x400088B")]
		Rewind,
		[Token(Token = "0x400088C")]
		SkipForward,
		[Token(Token = "0x400088D")]
		SkipBack,
		[Token(Token = "0x400088E")]
		Stop
	}

	[Token(Token = "0x4000886")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	[SerializeField]
	private ButtonType m_ButtonType;

	[Token(Token = "0x170000CC")]
	public ButtonType buttonType
	{
		[Token(Token = "0x60006BF")]
		[Address(RVA = "0x1358D50", Offset = "0x1358D50", VA = "0x1358D50")]
		get
		{
			return default(ButtonType);
		}
		[Token(Token = "0x60006C0")]
		[Address(RVA = "0x1358D58", Offset = "0x1358D58", VA = "0x1358D58")]
		set
		{
		}
	}

	[Token(Token = "0x60006C1")]
	[Address(RVA = "0x1358D7C", Offset = "0x1358D7C", VA = "0x1358D7C", Slot = "44")]
	protected override void OnPopulateMesh(VertexHelper toFill)
	{
	}

	[Token(Token = "0x60006C2")]
	[Address(RVA = "0x135A214", Offset = "0x135A214", VA = "0x135A214")]
	public MediaPlayerImage()
	{
	}
}
[Token(Token = "0x2000177")]
public class MoviePlayerSample : MonoBehaviour
{
	[Token(Token = "0x2000178")]
	public enum VideoShape
	{
		[Token(Token = "0x40008A3")]
		_360,
		[Token(Token = "0x40008A4")]
		_180,
		[Token(Token = "0x40008A5")]
		Quad
	}

	[Token(Token = "0x2000179")]
	public enum VideoStereo
	{
		[Token(Token = "0x40008A7")]
		Mono,
		[Token(Token = "0x40008A8")]
		TopBottom,
		[Token(Token = "0x40008A9")]
		LeftRight,
		[Token(Token = "0x40008AA")]
		BottomTop
	}

	[Token(Token = "0x200017A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D678C", Offset = "0x8D678C")]
	private sealed class <Start>d__33 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40008AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40008AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40008AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MoviePlayerSample <>4__this;

		[Token(Token = "0x170000D0")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60006D9")]
			[Address(RVA = "0xE835CC", Offset = "0xE835CC", VA = "0xE835CC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000D1")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60006DB")]
			[Address(RVA = "0xE83614", Offset = "0xE83614", VA = "0xE83614", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60006D6")]
		[Address(RVA = "0xE833D8", Offset = "0xE833D8", VA = "0xE833D8")]
		[DebuggerHidden]
		public <Start>d__33(int <>1__state)
		{
		}

		[Token(Token = "0x60006D7")]
		[Address(RVA = "0xE83404", Offset = "0xE83404", VA = "0xE83404", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60006D8")]
		[Address(RVA = "0xE83408", Offset = "0xE83408", VA = "0xE83408", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60006DA")]
		[Address(RVA = "0xE835D4", Offset = "0xE835D4", VA = "0xE835D4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200017B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D679C", Offset = "0x8D679C")]
	private sealed class <>c__DisplayClass34_0
	{
		[Token(Token = "0x40008AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string moviePath;

		[Token(Token = "0x40008AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string drmLicencesUrl;

		[Token(Token = "0x40008B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MoviePlayerSample <>4__this;

		[Token(Token = "0x60006DC")]
		[Address(RVA = "0xE832E0", Offset = "0xE832E0", VA = "0xE832E0")]
		public <>c__DisplayClass34_0()
		{
		}

		[Token(Token = "0x60006DD")]
		[Address(RVA = "0xE832E8", Offset = "0xE832E8", VA = "0xE832E8")]
		internal void <Play>b__0()
		{
		}
	}

	[Token(Token = "0x400088F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool videoPausedBeforeAppPause;

	[Token(Token = "0x4000890")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private VideoPlayer videoPlayer;

	[Token(Token = "0x4000891")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private PVROverlay overlay;

	[Token(Token = "0x4000892")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Renderer mediaRenderer;

	[Token(Token = "0x4000893")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D8B84", Offset = "0x8D8B84")]
	private bool <IsPlaying>k__BackingField;

	[Token(Token = "0x4000894")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D8B94", Offset = "0x8D8B94")]
	private long <Duration>k__BackingField;

	[Token(Token = "0x4000895")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D8BA4", Offset = "0x8D8BA4")]
	private long <PlaybackPosition>k__BackingField;

	[Token(Token = "0x4000896")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private RenderTexture copyTexture;

	[Token(Token = "0x4000897")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Material externalTex2DMaterial;

	[Token(Token = "0x4000898")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public string MovieName;

	[Token(Token = "0x4000899")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public string DrmLicenseUrl;

	[Token(Token = "0x400089A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool LoopVideo;

	[Token(Token = "0x400089B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public VideoShape Shape;

	[Token(Token = "0x400089C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public VideoStereo Stereo;

	[Token(Token = "0x400089D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public bool AutoDetectStereoLayout;

	[Token(Token = "0x400089E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7D")]
	public bool DisplayMono;

	[Token(Token = "0x400089F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private VideoShape _LastShape;

	[Token(Token = "0x40008A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private VideoStereo _LastStereo;

	[Token(Token = "0x40008A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool _LastDisplayMono;

	[Token(Token = "0x170000CD")]
	public bool IsPlaying
	{
		[Token(Token = "0x60006C3")]
		[Address(RVA = "0x135BD20", Offset = "0x135BD20", VA = "0x135BD20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E0DDC", Offset = "0x8E0DDC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60006C4")]
		[Address(RVA = "0x135BD28", Offset = "0x135BD28", VA = "0x135BD28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E0DEC", Offset = "0x8E0DEC")]
		private set
		{
		}
	}

	[Token(Token = "0x170000CE")]
	public long Duration
	{
		[Token(Token = "0x60006C5")]
		[Address(RVA = "0x135BD34", Offset = "0x135BD34", VA = "0x135BD34")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E0DFC", Offset = "0x8E0DFC")]
		get
		{
			return default(long);
		}
		[Token(Token = "0x60006C6")]
		[Address(RVA = "0x135BD3C", Offset = "0x135BD3C", VA = "0x135BD3C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E0E0C", Offset = "0x8E0E0C")]
		private set
		{
		}
	}

	[Token(Token = "0x170000CF")]
	public long PlaybackPosition
	{
		[Token(Token = "0x60006C7")]
		[Address(RVA = "0x135BD44", Offset = "0x135BD44", VA = "0x135BD44")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E0E1C", Offset = "0x8E0E1C")]
		get
		{
			return default(long);
		}
		[Token(Token = "0x60006C8")]
		[Address(RVA = "0x135BD4C", Offset = "0x135BD4C", VA = "0x135BD4C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E0E2C", Offset = "0x8E0E2C")]
		private set
		{
		}
	}

	[Token(Token = "0x60006C9")]
	[Address(RVA = "0x135BD54", Offset = "0x135BD54", VA = "0x135BD54")]
	private void Awake()
	{
	}

	[Token(Token = "0x60006CA")]
	[Address(RVA = "0x135C06C", Offset = "0x135C06C", VA = "0x135C06C")]
	private bool IsLocalVideo(string movieName)
	{
		return default(bool);
	}

	[Token(Token = "0x60006CB")]
	[Address(RVA = "0x135C0D0", Offset = "0x135C0D0", VA = "0x135C0D0")]
	private void UpdateShapeAndStereo()
	{
	}

	[Token(Token = "0x60006CC")]
	[Address(RVA = "0x135C738", Offset = "0x135C738", VA = "0x135C738")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E0E3C", Offset = "0x8E0E3C")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x60006CD")]
	[Address(RVA = "0x135C7B0", Offset = "0x135C7B0", VA = "0x135C7B0")]
	public void Play(string moviePath, string drmLicencesUrl)
	{
	}

	[Token(Token = "0x60006CE")]
	[Address(RVA = "0x135CA98", Offset = "0x135CA98", VA = "0x135CA98")]
	public void Play()
	{
	}

	[Token(Token = "0x60006CF")]
	[Address(RVA = "0x135CC3C", Offset = "0x135CC3C", VA = "0x135CC3C")]
	public void Pause()
	{
	}

	[Token(Token = "0x60006D0")]
	[Address(RVA = "0x135CDDC", Offset = "0x135CDDC", VA = "0x135CDDC")]
	public void SeekTo(long position)
	{
	}

	[Token(Token = "0x60006D1")]
	[Address(RVA = "0x135D050", Offset = "0x135D050", VA = "0x135D050")]
	private void Update()
	{
	}

	[Token(Token = "0x60006D2")]
	[Address(RVA = "0x135DB40", Offset = "0x135DB40", VA = "0x135DB40")]
	public void SetPlaybackSpeed(float speed)
	{
	}

	[Token(Token = "0x60006D3")]
	[Address(RVA = "0x135DD70", Offset = "0x135DD70", VA = "0x135DD70")]
	public void Stop()
	{
	}

	[Token(Token = "0x60006D4")]
	[Address(RVA = "0x135DF10", Offset = "0x135DF10", VA = "0x135DF10")]
	private void OnApplicationPause(bool appWasPaused)
	{
	}

	[Token(Token = "0x60006D5")]
	[Address(RVA = "0x135DFFC", Offset = "0x135DFFC", VA = "0x135DFFC")]
	public MoviePlayerSample()
	{
	}
}
[Token(Token = "0x200017C")]
public class MoviePlayerSampleControls : MonoBehaviour
{
	[Token(Token = "0x200017D")]
	private enum PlaybackState
	{
		[Token(Token = "0x40008C7")]
		Playing,
		[Token(Token = "0x40008C8")]
		Paused,
		[Token(Token = "0x40008C9")]
		Rewinding,
		[Token(Token = "0x40008CA")]
		FastForwarding
	}

	[Token(Token = "0x40008B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MoviePlayerSample Player;

	[Token(Token = "0x40008B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public PVRInputModule InputModule;

	[Token(Token = "0x40008B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public PVRGazePointer GazePointer;

	[Token(Token = "0x40008B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject LeftHand;

	[Token(Token = "0x40008B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject RightHand;

	[Token(Token = "0x40008B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Canvas Canvas;

	[Token(Token = "0x40008B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ButtonDownListener PlayPause;

	[Token(Token = "0x40008B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public MediaPlayerImage PlayPauseImage;

	[Token(Token = "0x40008B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Slider ProgressBar;

	[Token(Token = "0x40008BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public ButtonDownListener FastForward;

	[Token(Token = "0x40008BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public MediaPlayerImage FastForwardImage;

	[Token(Token = "0x40008BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ButtonDownListener Rewind;

	[Token(Token = "0x40008BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public MediaPlayerImage RewindImage;

	[Token(Token = "0x40008BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float TimeoutTime;

	[Token(Token = "0x40008BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private bool _isVisible;

	[Token(Token = "0x40008C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float _lastButtonTime;

	[Token(Token = "0x40008C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private bool _didSeek;

	[Token(Token = "0x40008C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private long _seekPreviousPosition;

	[Token(Token = "0x40008C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private long _rewindStartPosition;

	[Token(Token = "0x40008C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private float _rewindStartTime;

	[Token(Token = "0x40008C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private PlaybackState _state;

	[Token(Token = "0x60006DE")]
	[Address(RVA = "0x135E00C", Offset = "0x135E00C", VA = "0x135E00C")]
	private void Start()
	{
	}

	[Token(Token = "0x60006DF")]
	[Address(RVA = "0x135E360", Offset = "0x135E360", VA = "0x135E360")]
	private void OnPlayPauseClicked()
	{
	}

	[Token(Token = "0x60006E0")]
	[Address(RVA = "0x135E53C", Offset = "0x135E53C", VA = "0x135E53C")]
	private void OnFastForwardClicked()
	{
	}

	[Token(Token = "0x60006E1")]
	[Address(RVA = "0x135E670", Offset = "0x135E670", VA = "0x135E670")]
	private void OnRewindClicked()
	{
	}

	[Token(Token = "0x60006E2")]
	[Address(RVA = "0x135E778", Offset = "0x135E778", VA = "0x135E778")]
	private void OnSeekBarMoved(float value)
	{
	}

	[Token(Token = "0x60006E3")]
	[Address(RVA = "0x135E644", Offset = "0x135E644", VA = "0x135E644")]
	private void Seek(long pos)
	{
	}

	[Token(Token = "0x60006E4")]
	[Address(RVA = "0x135E7D8", Offset = "0x135E7D8", VA = "0x135E7D8")]
	private void Update()
	{
	}

	[Token(Token = "0x60006E5")]
	[Address(RVA = "0x135E24C", Offset = "0x135E24C", VA = "0x135E24C")]
	private void SetVisible(bool visible)
	{
	}

	[Token(Token = "0x60006E6")]
	[Address(RVA = "0x135EB3C", Offset = "0x135EB3C", VA = "0x135EB3C")]
	public MoviePlayerSampleControls()
	{
	}
}
[Token(Token = "0x200017E")]
public static class VectorUtil
{
	[Token(Token = "0x60006E7")]
	[Address(RVA = "0x1044200", Offset = "0x1044200", VA = "0x1044200")]
	public static Vector4 ToVector(this Rect rect)
	{
		return default(Vector4);
	}
}
[Token(Token = "0x200017F")]
public class AppDeeplinkUI : MonoBehaviour
{
	[Token(Token = "0x40008CB")]
	private const ulong UNITY_COMPANION_APP_ID = 3535750239844224uL;

	[Token(Token = "0x40008CC")]
	private const ulong UNREAL_COMPANION_APP_ID = 4055411724486843uL;

	[Token(Token = "0x40008CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private RectTransform deeplinkAppId;

	[Token(Token = "0x40008CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private RectTransform deeplinkMessage;

	[Token(Token = "0x40008CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private RectTransform uiLaunchType;

	[Token(Token = "0x40008D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private RectTransform uiLaunchSource;

	[Token(Token = "0x40008D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private RectTransform uiDeepLinkMessage;

	[Token(Token = "0x40008D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool inMenu;

	[Token(Token = "0x60006E8")]
	[Address(RVA = "0x1AD4D44", Offset = "0x1AD4D44", VA = "0x1AD4D44")]
	private void Start()
	{
	}

	[Token(Token = "0x60006E9")]
	[Address(RVA = "0x1AD50C4", Offset = "0x1AD50C4", VA = "0x1AD50C4")]
	private void Update()
	{
	}

	[Token(Token = "0x60006EA")]
	[Address(RVA = "0x1AD5350", Offset = "0x1AD5350", VA = "0x1AD5350")]
	private void LaunchUnrealDeeplinkSample()
	{
	}

	[Token(Token = "0x60006EB")]
	[Address(RVA = "0x1AD54B8", Offset = "0x1AD54B8", VA = "0x1AD54B8")]
	private void LaunchSelf()
	{
	}

	[Token(Token = "0x60006EC")]
	[Address(RVA = "0x1AD5624", Offset = "0x1AD5624", VA = "0x1AD5624")]
	private void LaunchOtherApp()
	{
	}

	[Token(Token = "0x60006ED")]
	[Address(RVA = "0x1AD57B4", Offset = "0x1AD57B4", VA = "0x1AD57B4")]
	public AppDeeplinkUI()
	{
	}
}
[Token(Token = "0x2000180")]
public class CustomDebugUI : MonoBehaviour
{
	[Token(Token = "0x40008D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private RectTransform textPrefab;

	[Token(Token = "0x40008D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static CustomDebugUI instance;

	[Token(Token = "0x40008D5")]
	private const BindingFlags privateFlags = BindingFlags.Instance | BindingFlags.NonPublic;

	[Token(Token = "0x60006EE")]
	[Address(RVA = "0x1085560", Offset = "0x1085560", VA = "0x1085560")]
	private void Awake()
	{
	}

	[Token(Token = "0x60006EF")]
	[Address(RVA = "0x10855B4", Offset = "0x10855B4", VA = "0x10855B4")]
	private void Start()
	{
	}

	[Token(Token = "0x60006F0")]
	[Address(RVA = "0x10855B8", Offset = "0x10855B8", VA = "0x10855B8")]
	private void Update()
	{
	}

	[Token(Token = "0x60006F1")]
	[Address(RVA = "0x10855BC", Offset = "0x10855BC", VA = "0x10855BC")]
	public RectTransform AddTextField(string label, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x60006F2")]
	[Address(RVA = "0x1085830", Offset = "0x1085830", VA = "0x1085830")]
	public void RemoveFromCanvas(RectTransform element, int targetCanvas = 0)
	{
	}

	[Token(Token = "0x60006F3")]
	[Address(RVA = "0x1085A60", Offset = "0x1085A60", VA = "0x1085A60")]
	public CustomDebugUI()
	{
	}
}
[Token(Token = "0x2000181")]
public class DebugUISample : MonoBehaviour
{
	[Token(Token = "0x40008D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool inMenu;

	[Token(Token = "0x40008D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Text sliderText;

	[Token(Token = "0x60006F4")]
	[Address(RVA = "0x108A3B4", Offset = "0x108A3B4", VA = "0x108A3B4")]
	private void Start()
	{
	}

	[Token(Token = "0x60006F5")]
	[Address(RVA = "0x108A8C8", Offset = "0x108A8C8", VA = "0x108A8C8")]
	public void TogglePressed(Toggle t)
	{
	}

	[Token(Token = "0x60006F6")]
	[Address(RVA = "0x108A988", Offset = "0x108A988", VA = "0x108A988")]
	public void RadioPressed(string radioLabel, string group, Toggle t)
	{
	}

	[Token(Token = "0x60006F7")]
	[Address(RVA = "0x108AC08", Offset = "0x108AC08", VA = "0x108AC08")]
	public void SliderPressed(float f)
	{
	}

	[Token(Token = "0x60006F8")]
	[Address(RVA = "0x108ACE8", Offset = "0x108ACE8", VA = "0x108ACE8")]
	private void Update()
	{
	}

	[Token(Token = "0x60006F9")]
	[Address(RVA = "0x108ADCC", Offset = "0x108ADCC", VA = "0x108ADCC")]
	private void LogButtonPressed()
	{
	}

	[Token(Token = "0x60006FA")]
	[Address(RVA = "0x108AE40", Offset = "0x108AE40", VA = "0x108AE40")]
	public DebugUISample()
	{
	}

	[Token(Token = "0x60006FB")]
	[Address(RVA = "0x108AE48", Offset = "0x108AE48", VA = "0x108AE48")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E0EFC", Offset = "0x8E0EFC")]
	private void <Start>b__2_0(Toggle t)
	{
	}

	[Token(Token = "0x60006FC")]
	[Address(RVA = "0x108AEAC", Offset = "0x108AEAC", VA = "0x108AEAC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E0F0C", Offset = "0x8E0F0C")]
	private void <Start>b__2_1(Toggle t)
	{
	}

	[Token(Token = "0x60006FD")]
	[Address(RVA = "0x108AF10", Offset = "0x108AF10", VA = "0x108AF10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E0F1C", Offset = "0x8E0F1C")]
	private void <Start>b__2_2(Toggle t)
	{
	}

	[Token(Token = "0x60006FE")]
	[Address(RVA = "0x108AF74", Offset = "0x108AF74", VA = "0x108AF74")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E0F2C", Offset = "0x8E0F2C")]
	private void <Start>b__2_3(Toggle t)
	{
	}
}
[Token(Token = "0x2000182")]
public class HandsActiveChecker : MonoBehaviour
{
	[Token(Token = "0x2000183")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D67BC", Offset = "0x8D67BC")]
	private sealed class <GetCenterEye>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40008DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40008DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40008DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HandsActiveChecker <>4__this;

		[Token(Token = "0x170000D2")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000706")]
			[Address(RVA = "0xE7D7E4", Offset = "0xE7D7E4", VA = "0xE7D7E4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000D3")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000708")]
			[Address(RVA = "0xE7D82C", Offset = "0xE7D82C", VA = "0xE7D82C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000703")]
		[Address(RVA = "0xE7D668", Offset = "0xE7D668", VA = "0xE7D668")]
		[DebuggerHidden]
		public <GetCenterEye>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6000704")]
		[Address(RVA = "0xE7D694", Offset = "0xE7D694", VA = "0xE7D694", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000705")]
		[Address(RVA = "0xE7D698", Offset = "0xE7D698", VA = "0xE7D698", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000707")]
		[Address(RVA = "0xE7D7EC", Offset = "0xE7D7EC", VA = "0xE7D7EC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40008D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject _notificationPrefab;

	[Token(Token = "0x40008D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject _notification;

	[Token(Token = "0x40008DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private PVRCameraRig _cameraRig;

	[Token(Token = "0x40008DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform _centerEye;

	[Token(Token = "0x60006FF")]
	[Address(RVA = "0x133E218", Offset = "0x133E218", VA = "0x133E218")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000700")]
	[Address(RVA = "0x133E334", Offset = "0x133E334", VA = "0x133E334")]
	private void Update()
	{
	}

	[Token(Token = "0x6000701")]
	[Address(RVA = "0x133E2BC", Offset = "0x133E2BC", VA = "0x133E2BC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E0F3C", Offset = "0x8E0F3C")]
	private IEnumerator GetCenterEye()
	{
		return null;
	}

	[Token(Token = "0x6000702")]
	[Address(RVA = "0x133E4E0", Offset = "0x133E4E0", VA = "0x133E4E0")]
	public HandsActiveChecker()
	{
	}
}
[Token(Token = "0x2000184")]
[ExecuteInEditMode]
public class CharacterCapsule : MonoBehaviour
{
	[Token(Token = "0x40008DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private CharacterController _character;

	[Token(Token = "0x40008E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private MeshFilter _meshFilter;

	[Token(Token = "0x40008E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float _height;

	[Token(Token = "0x40008E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float _radius;

	[Token(Token = "0x40008E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D8BD4", Offset = "0x8D8BD4")]
	public int SubdivisionsU;

	[Token(Token = "0x40008E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D8BF0", Offset = "0x8D8BF0")]
	public int SubdivisionsV;

	[Token(Token = "0x40008E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int _subdivisionU;

	[Token(Token = "0x40008E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private int _subdivisionV;

	[Token(Token = "0x40008E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3[] _vertices;

	[Token(Token = "0x40008E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int[] _triangles;

	[Token(Token = "0x6000709")]
	[Address(RVA = "0x12FCE34", Offset = "0x12FCE34", VA = "0x12FCE34")]
	private void Update()
	{
	}

	[Token(Token = "0x600070A")]
	[Address(RVA = "0x12FD87C", Offset = "0x12FD87C", VA = "0x12FD87C")]
	public CharacterCapsule()
	{
	}
}
[Token(Token = "0x2000185")]
public class LocomotionSampleSupport : MonoBehaviour
{
	[Token(Token = "0x40008E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private LocomotionController lc;

	[Token(Token = "0x40008EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool inMenu;

	[Token(Token = "0x170000D4")]
	private LocomotionTeleport TeleportController
	{
		[Token(Token = "0x600070B")]
		[Address(RVA = "0x134B258", Offset = "0x134B258", VA = "0x134B258")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600070C")]
	[Address(RVA = "0x134B2AC", Offset = "0x134B2AC", VA = "0x134B2AC")]
	public void Start()
	{
	}

	[Token(Token = "0x600070D")]
	[Address(RVA = "0x134B6B4", Offset = "0x134B6B4", VA = "0x134B6B4")]
	public void Update()
	{
	}

	[Token(Token = "0x600070E")]
	[Address(RVA = "0x134B7A0", Offset = "0x134B7A0", VA = "0x134B7A0")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x8E0FEC", Offset = "0x8E0FEC")]
	private static void Log(string msg)
	{
	}

	[Token(Token = "0x600070F")]
	public static TActivate ActivateCategory<TCategory, TActivate>(GameObject target) where TCategory : MonoBehaviour where TActivate : MonoBehaviour
	{
		return null;
	}

	[Token(Token = "0x6000710")]
	protected void ActivateHandlers<TInput, TAim, TTarget, TOrientation, TTransition>() where TInput : TeleportInputHandler where TAim : TeleportAimHandler where TTarget : TeleportTargetHandler where TOrientation : TeleportOrientationHandler where TTransition : TeleportTransition
	{
	}

	[Token(Token = "0x6000711")]
	protected void ActivateInput<TActivate>() where TActivate : TeleportInputHandler
	{
	}

	[Token(Token = "0x6000712")]
	protected void ActivateAim<TActivate>() where TActivate : TeleportAimHandler
	{
	}

	[Token(Token = "0x6000713")]
	protected void ActivateTarget<TActivate>() where TActivate : TeleportTargetHandler
	{
	}

	[Token(Token = "0x6000714")]
	protected void ActivateOrientation<TActivate>() where TActivate : TeleportOrientationHandler
	{
	}

	[Token(Token = "0x6000715")]
	protected void ActivateTransition<TActivate>() where TActivate : TeleportTransition
	{
	}

	[Token(Token = "0x6000716")]
	protected TActivate ActivateCategory<TCategory, TActivate>() where TCategory : MonoBehaviour where TActivate : MonoBehaviour
	{
		return null;
	}

	[Token(Token = "0x6000717")]
	[Address(RVA = "0x134B804", Offset = "0x134B804", VA = "0x134B804")]
	protected void UpdateToggle(Toggle toggle, bool enabled)
	{
	}

	[Token(Token = "0x6000718")]
	[Address(RVA = "0x134B840", Offset = "0x134B840", VA = "0x134B840")]
	private void SetupNonCap()
	{
	}

	[Token(Token = "0x6000719")]
	[Address(RVA = "0x134B8B0", Offset = "0x134B8B0", VA = "0x134B8B0")]
	private void SetupTeleportDefaults()
	{
	}

	[Token(Token = "0x600071A")]
	[Address(RVA = "0x134BA20", Offset = "0x134BA20", VA = "0x134BA20")]
	protected GameObject AddInstance(GameObject template, string label)
	{
		return null;
	}

	[Token(Token = "0x600071B")]
	[Address(RVA = "0x134BAFC", Offset = "0x134BAFC", VA = "0x134BAFC")]
	private void SetupNodeTeleport()
	{
	}

	[Token(Token = "0x600071C")]
	[Address(RVA = "0x134B5AC", Offset = "0x134B5AC", VA = "0x134B5AC")]
	private void SetupTwoStickTeleport()
	{
	}

	[Token(Token = "0x600071D")]
	[Address(RVA = "0x134BBC4", Offset = "0x134BBC4", VA = "0x134BBC4")]
	private void SetupWalkOnly()
	{
	}

	[Token(Token = "0x600071E")]
	[Address(RVA = "0x134BC2C", Offset = "0x134BC2C", VA = "0x134BC2C")]
	private void SetupLeftStrafeRightTeleport()
	{
	}

	[Token(Token = "0x600071F")]
	[Address(RVA = "0x134BD24", Offset = "0x134BD24", VA = "0x134BD24")]
	public LocomotionSampleSupport()
	{
	}
}
[Token(Token = "0x2000186")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8D67DC", Offset = "0x8D67DC")]
public class OVROverlayCanvas : MonoBehaviour
{
	[Token(Token = "0x2000187")]
	public enum DrawMode
	{
		[Token(Token = "0x4000900")]
		Opaque,
		[Token(Token = "0x4000901")]
		OpaqueWithClip,
		[Token(Token = "0x4000902")]
		TransparentDefaultAlpha,
		[Token(Token = "0x4000903")]
		TransparentCorrectAlpha
	}

	[Token(Token = "0x40008EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[HideInInspector]
	private Shader _transparentShader;

	[Token(Token = "0x40008EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	[HideInInspector]
	private Shader _opaqueShader;

	[Token(Token = "0x40008ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private RectTransform _rectTransform;

	[Token(Token = "0x40008EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Canvas _canvas;

	[Token(Token = "0x40008EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Camera _camera;

	[Token(Token = "0x40008F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private PVROverlay _overlay;

	[Token(Token = "0x40008F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private RenderTexture _renderTexture;

	[Token(Token = "0x40008F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private MeshRenderer _meshRenderer;

	[Token(Token = "0x40008F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Mesh _quad;

	[Token(Token = "0x40008F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Material _defaultMat;

	[Token(Token = "0x40008F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public int MaxTextureSize;

	[Token(Token = "0x40008F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public int MinTextureSize;

	[Token(Token = "0x40008F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float PixelsPerUnit;

	[Token(Token = "0x40008F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public int DrawRate;

	[Token(Token = "0x40008F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public int DrawFrameOffset;

	[Token(Token = "0x40008FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public bool Expensive;

	[Token(Token = "0x40008FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public int Layer;

	[Token(Token = "0x40008FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public DrawMode Opacity;

	[Token(Token = "0x40008FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool ScaleViewport;

	[Token(Token = "0x40008FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Plane[] _FrustumPlanes;

	[Token(Token = "0x170000D5")]
	public bool overlayEnabled
	{
		[Token(Token = "0x6000726")]
		[Address(RVA = "0x1DBFB64", Offset = "0x1DBFB64", VA = "0x1DBFB64")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000727")]
		[Address(RVA = "0x1DBFBF4", Offset = "0x1DBFBF4", VA = "0x1DBFBF4")]
		set
		{
		}
	}

	[Token(Token = "0x6000720")]
	[Address(RVA = "0x1DBE5E0", Offset = "0x1DBE5E0", VA = "0x1DBE5E0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000721")]
	[Address(RVA = "0x1DBF1D0", Offset = "0x1DBF1D0", VA = "0x1DBF1D0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000722")]
	[Address(RVA = "0x1DBF250", Offset = "0x1DBF250", VA = "0x1DBF250")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000723")]
	[Address(RVA = "0x1DBF340", Offset = "0x1DBF340", VA = "0x1DBF340")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000724")]
	[Address(RVA = "0x1DBF430", Offset = "0x1DBF430", VA = "0x1DBF430", Slot = "4")]
	protected virtual bool ShouldRender()
	{
		return default(bool);
	}

	[Token(Token = "0x6000725")]
	[Address(RVA = "0x1DBF63C", Offset = "0x1DBF63C", VA = "0x1DBF63C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000728")]
	[Address(RVA = "0x1DBFCC0", Offset = "0x1DBFCC0", VA = "0x1DBFCC0")]
	public OVROverlayCanvas()
	{
	}
}
[Token(Token = "0x2000188")]
public class StartMenu : MonoBehaviour
{
	[Token(Token = "0x2000189")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D683C", Offset = "0x8D683C")]
	private sealed class <>c__DisplayClass3_0
	{
		[Token(Token = "0x4000907")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int sceneIndex;

		[Token(Token = "0x4000908")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public StartMenu <>4__this;

		[Token(Token = "0x600072D")]
		[Address(RVA = "0x1C2F1A0", Offset = "0x1C2F1A0", VA = "0x1C2F1A0")]
		public <>c__DisplayClass3_0()
		{
		}

		[Token(Token = "0x600072E")]
		[Address(RVA = "0x1C2F1A8", Offset = "0x1C2F1A8", VA = "0x1C2F1A8")]
		internal void <Start>b__0()
		{
		}
	}

	[Token(Token = "0x4000904")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PVROverlay overlay;

	[Token(Token = "0x4000905")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public PVROverlay text;

	[Token(Token = "0x4000906")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public PVRCameraRig vrRig;

	[Token(Token = "0x600072A")]
	[Address(RVA = "0x167B59C", Offset = "0x167B59C", VA = "0x167B59C")]
	private void Start()
	{
	}

	[Token(Token = "0x600072B")]
	[Address(RVA = "0x167B7B0", Offset = "0x167B7B0", VA = "0x167B7B0")]
	private void LoadScene(int idx)
	{
	}

	[Token(Token = "0x600072C")]
	[Address(RVA = "0x167B8C0", Offset = "0x167B8C0", VA = "0x167B8C0")]
	public StartMenu()
	{
	}
}
[Token(Token = "0x200018A")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8D684C", Offset = "0x8D684C")]
public class MouseLook : MonoBehaviour
{
	[Token(Token = "0x200018B")]
	public enum RotationAxes
	{
		[Token(Token = "0x4000912")]
		MouseXAndY,
		[Token(Token = "0x4000913")]
		MouseX,
		[Token(Token = "0x4000914")]
		MouseY
	}

	[Token(Token = "0x4000909")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RotationAxes axes;

	[Token(Token = "0x400090A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float sensitivityX;

	[Token(Token = "0x400090B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float sensitivityY;

	[Token(Token = "0x400090C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float minimumX;

	[Token(Token = "0x400090D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float maximumX;

	[Token(Token = "0x400090E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float minimumY;

	[Token(Token = "0x400090F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float maximumY;

	[Token(Token = "0x4000910")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float rotationY;

	[Token(Token = "0x600072F")]
	[Address(RVA = "0x135B2CC", Offset = "0x135B2CC", VA = "0x135B2CC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000730")]
	[Address(RVA = "0x135B4A4", Offset = "0x135B4A4", VA = "0x135B4A4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000731")]
	[Address(RVA = "0x135B56C", Offset = "0x135B56C", VA = "0x135B56C")]
	public MouseLook()
	{
	}
}
[Token(Token = "0x200018C")]
public class ONSPAmbisonicsNative : MonoBehaviour
{
	[Token(Token = "0x200018D")]
	public enum ovrAmbisonicsNativeStatus
	{
		[Token(Token = "0x400091A")]
		Uninitialized = -1,
		[Token(Token = "0x400091B")]
		NotEnabled,
		[Token(Token = "0x400091C")]
		Success,
		[Token(Token = "0x400091D")]
		StreamError,
		[Token(Token = "0x400091E")]
		ProcessError,
		[Token(Token = "0x400091F")]
		MaxStatValue
	}

	[Token(Token = "0x4000915")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private AudioSource source;

	[Token(Token = "0x4000916")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int numFOAChannels;

	[Token(Token = "0x4000917")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static int paramAmbiStat;

	[Token(Token = "0x4000918")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ovrAmbisonicsNativeStatus currentStatus;

	[Token(Token = "0x6000732")]
	[Address(RVA = "0x13609B8", Offset = "0x13609B8", VA = "0x13609B8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000733")]
	[Address(RVA = "0x1360C4C", Offset = "0x1360C4C", VA = "0x1360C4C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000734")]
	[Address(RVA = "0x1360EA0", Offset = "0x1360EA0", VA = "0x1360EA0")]
	public ONSPAmbisonicsNative()
	{
	}
}
[Token(Token = "0x200018E")]
public class ONSPAudioSource : MonoBehaviour
{
	[Token(Token = "0x200018F")]
	private enum Parameters
	{
		[Token(Token = "0x400092B")]
		P_GAIN,
		[Token(Token = "0x400092C")]
		P_USEINVSQR,
		[Token(Token = "0x400092D")]
		P_NEAR,
		[Token(Token = "0x400092E")]
		P_FAR,
		[Token(Token = "0x400092F")]
		P_RADIUS,
		[Token(Token = "0x4000930")]
		P_DISABLE_RFL,
		[Token(Token = "0x4000931")]
		P_AMBISTAT,
		[Token(Token = "0x4000932")]
		P_READONLY_GLOBAL_RFL_ENABLED,
		[Token(Token = "0x4000933")]
		P_READONLY_NUM_VOICES,
		[Token(Token = "0x4000934")]
		P_SENDLEVEL,
		[Token(Token = "0x4000935")]
		P_NUM
	}

	[Token(Token = "0x4000920")]
	public const string strONSPS = "AudioPluginOculusSpatializer";

	[Token(Token = "0x4000921")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private bool enableSpatialization;

	[Token(Token = "0x4000922")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float gain;

	[Token(Token = "0x4000923")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private bool useInvSqr;

	[Token(Token = "0x4000924")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private float near;

	[Token(Token = "0x4000925")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float far;

	[Token(Token = "0x4000926")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private float volumetricRadius;

	[Token(Token = "0x4000927")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private float reverbSend;

	[Token(Token = "0x4000928")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private bool enableRfl;

	[Token(Token = "0x4000929")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ONSPAudioSource RoomReflectionGizmoAS;

	[Token(Token = "0x170000D6")]
	public bool EnableSpatialization
	{
		[Token(Token = "0x6000738")]
		[Address(RVA = "0x13610E4", Offset = "0x13610E4", VA = "0x13610E4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000739")]
		[Address(RVA = "0x13610EC", Offset = "0x13610EC", VA = "0x13610EC")]
		set
		{
		}
	}

	[Token(Token = "0x170000D7")]
	public float Gain
	{
		[Token(Token = "0x600073A")]
		[Address(RVA = "0x13610F8", Offset = "0x13610F8", VA = "0x13610F8")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600073B")]
		[Address(RVA = "0x1361100", Offset = "0x1361100", VA = "0x1361100")]
		set
		{
		}
	}

	[Token(Token = "0x170000D8")]
	public bool UseInvSqr
	{
		[Token(Token = "0x600073C")]
		[Address(RVA = "0x1361130", Offset = "0x1361130", VA = "0x1361130")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600073D")]
		[Address(RVA = "0x1361138", Offset = "0x1361138", VA = "0x1361138")]
		set
		{
		}
	}

	[Token(Token = "0x170000D9")]
	public float Near
	{
		[Token(Token = "0x600073E")]
		[Address(RVA = "0x1361144", Offset = "0x1361144", VA = "0x1361144")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600073F")]
		[Address(RVA = "0x136114C", Offset = "0x136114C", VA = "0x136114C")]
		set
		{
		}
	}

	[Token(Token = "0x170000DA")]
	public float Far
	{
		[Token(Token = "0x6000740")]
		[Address(RVA = "0x1361180", Offset = "0x1361180", VA = "0x1361180")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000741")]
		[Address(RVA = "0x1361188", Offset = "0x1361188", VA = "0x1361188")]
		set
		{
		}
	}

	[Token(Token = "0x170000DB")]
	public float VolumetricRadius
	{
		[Token(Token = "0x6000742")]
		[Address(RVA = "0x13611BC", Offset = "0x13611BC", VA = "0x13611BC")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000743")]
		[Address(RVA = "0x13611C4", Offset = "0x13611C4", VA = "0x13611C4")]
		set
		{
		}
	}

	[Token(Token = "0x170000DC")]
	public float ReverbSend
	{
		[Token(Token = "0x6000744")]
		[Address(RVA = "0x13611F8", Offset = "0x13611F8", VA = "0x13611F8")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000745")]
		[Address(RVA = "0x1361200", Offset = "0x1361200", VA = "0x1361200")]
		set
		{
		}
	}

	[Token(Token = "0x170000DD")]
	public bool EnableRfl
	{
		[Token(Token = "0x6000746")]
		[Address(RVA = "0x1361234", Offset = "0x1361234", VA = "0x1361234")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000747")]
		[Address(RVA = "0x136123C", Offset = "0x136123C", VA = "0x136123C")]
		set
		{
		}
	}

	[Token(Token = "0x6000736")]
	[Address(RVA = "0x1360F10", Offset = "0x1360F10", VA = "0x1360F10")]
	[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0x8E1024", Offset = "0x8E1024")]
	private static void OnBeforeSceneLoadRuntimeMethod()
	{
	}

	[PreserveSig]
	[Token(Token = "0x6000737")]
	[Address(RVA = "0x1361004", Offset = "0x1361004", VA = "0x1361004")]
	private static extern void ONSP_GetGlobalRoomReflectionValues(ref bool reflOn, ref bool reverbOn, ref float width, ref float height, ref float length);

	[Token(Token = "0x6000748")]
	[Address(RVA = "0x1361248", Offset = "0x1361248", VA = "0x1361248")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000749")]
	[Address(RVA = "0x13613B8", Offset = "0x13613B8", VA = "0x13613B8")]
	private void Start()
	{
	}

	[Token(Token = "0x600074A")]
	[Address(RVA = "0x13613BC", Offset = "0x13613BC", VA = "0x13613BC")]
	private void Update()
	{
	}

	[Token(Token = "0x600074B")]
	[Address(RVA = "0x13612B0", Offset = "0x13612B0", VA = "0x13612B0")]
	public void SetParameters(ref AudioSource source)
	{
	}

	[Token(Token = "0x600074C")]
	[Address(RVA = "0x1361480", Offset = "0x1361480", VA = "0x1361480")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x600074D")]
	[Address(RVA = "0x1361878", Offset = "0x1361878", VA = "0x1361878")]
	private void OnDestroy()
	{
	}

	[PreserveSig]
	[Token(Token = "0x600074E")]
	[Address(RVA = "0x1360F84", Offset = "0x1360F84", VA = "0x1360F84")]
	private static extern int OSP_SetGlobalVoiceLimit(int VoiceLimit);

	[Token(Token = "0x600074F")]
	[Address(RVA = "0x1361964", Offset = "0x1361964", VA = "0x1361964")]
	public ONSPAudioSource()
	{
	}
}
[Token(Token = "0x2000190")]
public class ONSPProfiler : MonoBehaviour
{
	[Token(Token = "0x4000936")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool profilerEnabled;

	[Token(Token = "0x4000937")]
	private const int DEFAULT_PORT = 2121;

	[Token(Token = "0x4000938")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int port;

	[Token(Token = "0x4000939")]
	public const string strONSPS = "AudioPluginOculusSpatializer";

	[Token(Token = "0x6000751")]
	[Address(RVA = "0x1361984", Offset = "0x1361984", VA = "0x1361984")]
	private void Start()
	{
	}

	[Token(Token = "0x6000752")]
	[Address(RVA = "0x1361990", Offset = "0x1361990", VA = "0x1361990")]
	private void Update()
	{
	}

	[PreserveSig]
	[Token(Token = "0x6000753")]
	[Address(RVA = "0x1361A48", Offset = "0x1361A48", VA = "0x1361A48")]
	private static extern int ONSP_SetProfilerEnabled(bool enabled);

	[PreserveSig]
	[Token(Token = "0x6000754")]
	[Address(RVA = "0x13619C8", Offset = "0x13619C8", VA = "0x13619C8")]
	private static extern int ONSP_SetProfilerPort(int port);

	[Token(Token = "0x6000755")]
	[Address(RVA = "0x1361AC8", Offset = "0x1361AC8", VA = "0x1361AC8")]
	public ONSPProfiler()
	{
	}
}
[Token(Token = "0x2000191")]
public class ONSPPropagationGeometry : MonoBehaviour
{
	[Token(Token = "0x2000192")]
	private struct MeshMaterial
	{
		[Token(Token = "0x4000942")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public MeshFilter meshFilter;

		[Token(Token = "0x4000943")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ONSPPropagationMaterial[] materials;
	}

	[Token(Token = "0x2000193")]
	private struct TerrainMaterial
	{
		[Token(Token = "0x4000944")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Terrain terrain;

		[Token(Token = "0x4000945")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ONSPPropagationMaterial[] materials;

		[Token(Token = "0x4000946")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Mesh[] treePrototypeMeshes;
	}

	[Token(Token = "0x400093A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string GeometryAssetDirectory;

	[Token(Token = "0x400093B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string filePathRelative;

	[Token(Token = "0x400093C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool fileEnabled;

	[Token(Token = "0x400093D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool includeChildMeshes;

	[Token(Token = "0x400093E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private IntPtr geometryHandle;

	[Token(Token = "0x400093F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int OSPSuccess;

	[Token(Token = "0x4000940")]
	public const string GEOMETRY_FILE_EXTENSION = "ovramesh";

	[Token(Token = "0x4000941")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static int terrainDecimation;

	[Token(Token = "0x170000DE")]
	public static string GeometryAssetPath
	{
		[Token(Token = "0x6000756")]
		[Address(RVA = "0x1361DE0", Offset = "0x1361DE0", VA = "0x1361DE0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000DF")]
	public string filePath
	{
		[Token(Token = "0x6000757")]
		[Address(RVA = "0x1361E74", Offset = "0x1361E74", VA = "0x1361E74")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000758")]
	[Address(RVA = "0x1361EF4", Offset = "0x1361EF4", VA = "0x1361EF4")]
	private static string GetPath(Transform current)
	{
		return null;
	}

	[Token(Token = "0x6000759")]
	[Address(RVA = "0x136205C", Offset = "0x136205C", VA = "0x136205C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600075A")]
	[Address(RVA = "0x1362060", Offset = "0x1362060", VA = "0x1362060")]
	private void CreatePropagationGeometry()
	{
	}

	[Token(Token = "0x600075B")]
	[Address(RVA = "0x1362638", Offset = "0x1362638", VA = "0x1362638")]
	private void Update()
	{
	}

	[Token(Token = "0x600075C")]
	[Address(RVA = "0x13629E4", Offset = "0x13629E4", VA = "0x13629E4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600075D")]
	[Address(RVA = "0x1362B60", Offset = "0x1362B60", VA = "0x1362B60")]
	private static void traverseMeshHierarchy(GameObject obj, ONSPPropagationMaterial[] currentMaterials, bool includeChildren, List<MeshMaterial> meshMaterials, List<TerrainMaterial> terrainMaterials, bool ignoreStatic, ref int ignoredMeshCount)
	{
	}

	[Token(Token = "0x600075E")]
	[Address(RVA = "0x1363388", Offset = "0x1363388", VA = "0x1363388")]
	private int uploadMesh(IntPtr geometryHandle, GameObject meshObject, Matrix4x4 worldToLocal)
	{
		return default(int);
	}

	[Token(Token = "0x600075F")]
	[Address(RVA = "0x13633C4", Offset = "0x13633C4", VA = "0x13633C4")]
	private int uploadMesh(IntPtr geometryHandle, GameObject meshObject, Matrix4x4 worldToLocal, bool ignoreStatic, ref int ignoredMeshCount)
	{
		return default(int);
	}

	[Token(Token = "0x6000760")]
	[Address(RVA = "0x1364AFC", Offset = "0x1364AFC", VA = "0x1364AFC")]
	private static void uploadMeshFilter(List<Vector3> tempVertices, List<int> tempIndices, MeshGroup[] groups, float[] vertices, int[] indices, ref int vertexOffset, ref int indexOffset, ref int groupOffset, Mesh mesh, ONSPPropagationMaterial[] materials, Matrix4x4 matrix)
	{
	}

	[Token(Token = "0x6000761")]
	[Address(RVA = "0x13649D4", Offset = "0x13649D4", VA = "0x13649D4")]
	private static void updateCountsForMesh(ref int totalVertexCount, ref uint totalIndexCount, ref int totalFaceCount, ref int totalMaterialCount, Mesh mesh)
	{
	}

	[Token(Token = "0x6000762")]
	[Address(RVA = "0x1362450", Offset = "0x1362450", VA = "0x1362450")]
	public void UploadGeometry()
	{
	}

	[Token(Token = "0x6000763")]
	[Address(RVA = "0x1362258", Offset = "0x1362258", VA = "0x1362258")]
	public bool ReadFile()
	{
		return default(bool);
	}

	[Token(Token = "0x6000764")]
	[Address(RVA = "0x1364FFC", Offset = "0x1364FFC", VA = "0x1364FFC")]
	public bool WriteToObj()
	{
		return default(bool);
	}

	[Token(Token = "0x6000765")]
	[Address(RVA = "0x1365494", Offset = "0x1365494", VA = "0x1365494")]
	public ONSPPropagationGeometry()
	{
	}
}
[Token(Token = "0x2000194")]
internal class ONSPPropagation
{
	[Token(Token = "0x2000195")]
	public enum ovrAudioScalarType : uint
	{
		[Token(Token = "0x4000949")]
		Int8,
		[Token(Token = "0x400094A")]
		UInt8,
		[Token(Token = "0x400094B")]
		Int16,
		[Token(Token = "0x400094C")]
		UInt16,
		[Token(Token = "0x400094D")]
		Int32,
		[Token(Token = "0x400094E")]
		UInt32,
		[Token(Token = "0x400094F")]
		Int64,
		[Token(Token = "0x4000950")]
		UInt64,
		[Token(Token = "0x4000951")]
		Float16,
		[Token(Token = "0x4000952")]
		Float32,
		[Token(Token = "0x4000953")]
		Float64
	}

	[Token(Token = "0x2000196")]
	public class ClientType
	{
		[Token(Token = "0x4000954")]
		public const uint OVRA_CLIENT_TYPE_NATIVE = 0u;

		[Token(Token = "0x4000955")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2016 = 1u;

		[Token(Token = "0x4000956")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2017_1 = 2u;

		[Token(Token = "0x4000957")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2017_2 = 3u;

		[Token(Token = "0x4000958")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2018_1 = 4u;

		[Token(Token = "0x4000959")]
		public const uint OVRA_CLIENT_TYPE_FMOD = 5u;

		[Token(Token = "0x400095A")]
		public const uint OVRA_CLIENT_TYPE_UNITY = 6u;

		[Token(Token = "0x400095B")]
		public const uint OVRA_CLIENT_TYPE_UE4 = 7u;

		[Token(Token = "0x400095C")]
		public const uint OVRA_CLIENT_TYPE_VST = 8u;

		[Token(Token = "0x400095D")]
		public const uint OVRA_CLIENT_TYPE_AAX = 9u;

		[Token(Token = "0x400095E")]
		public const uint OVRA_CLIENT_TYPE_TEST = 10u;

		[Token(Token = "0x400095F")]
		public const uint OVRA_CLIENT_TYPE_OTHER = 11u;

		[Token(Token = "0x4000960")]
		public const uint OVRA_CLIENT_TYPE_WWISE_UNKNOWN = 12u;

		[Token(Token = "0x4000961")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2019_1 = 13u;

		[Token(Token = "0x4000962")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2019_2 = 14u;

		[Token(Token = "0x4000963")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2021_1 = 15u;

		[Token(Token = "0x600076A")]
		[Address(RVA = "0xE8491C", Offset = "0xE8491C", VA = "0xE8491C")]
		public ClientType()
		{
		}
	}

	[Token(Token = "0x2000197")]
	public interface PropagationInterface
	{
		[Token(Token = "0x600076B")]
		int SetPropagationQuality(float quality);

		[Token(Token = "0x600076C")]
		int SetPropagationThreadAffinity(ulong cpuMask);

		[Token(Token = "0x600076D")]
		int CreateAudioGeometry(out IntPtr geometry);

		[Token(Token = "0x600076E")]
		int DestroyAudioGeometry(IntPtr geometry);

		[Token(Token = "0x600076F")]
		int AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, int vertexCount, int[] indices, int indexCount, MeshGroup[] groups, int groupCount);

		[Token(Token = "0x6000770")]
		int AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4);

		[Token(Token = "0x6000771")]
		int AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4);

		[Token(Token = "0x6000772")]
		int AudioGeometryWriteMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6000773")]
		int AudioGeometryReadMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6000774")]
		int AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath);

		[Token(Token = "0x6000775")]
		int AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value);

		[Token(Token = "0x6000776")]
		int CreateAudioMaterial(out IntPtr material);

		[Token(Token = "0x6000777")]
		int DestroyAudioMaterial(IntPtr material);

		[Token(Token = "0x6000778")]
		int AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value);

		[Token(Token = "0x6000779")]
		int AudioMaterialReset(IntPtr material, MaterialProperty property);
	}

	[Token(Token = "0x2000198")]
	public class UnityNativeInterface : PropagationInterface
	{
		[Token(Token = "0x4000964")]
		public const string strOSPS = "AudioPluginOculusSpatializer";

		[Token(Token = "0x4000965")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr context_;

		[Token(Token = "0x170000E1")]
		private IntPtr context
		{
			[Token(Token = "0x600077A")]
			[Address(RVA = "0xE85660", Offset = "0xE85660", VA = "0xE85660")]
			get
			{
				return default(IntPtr);
			}
		}

		[PreserveSig]
		[Token(Token = "0x600077B")]
		[Address(RVA = "0xE856C0", Offset = "0xE856C0", VA = "0xE856C0")]
		public static extern int ovrAudio_GetPluginContext(out IntPtr context, uint clientType);

		[PreserveSig]
		[Token(Token = "0x600077C")]
		[Address(RVA = "0xE85750", Offset = "0xE85750", VA = "0xE85750")]
		private static extern int ovrAudio_SetPropagationQuality(IntPtr context, float quality);

		[Token(Token = "0x600077D")]
		[Address(RVA = "0xE857E0", Offset = "0xE857E0", VA = "0xE857E0", Slot = "4")]
		public int SetPropagationQuality(float quality)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600077E")]
		[Address(RVA = "0xE85804", Offset = "0xE85804", VA = "0xE85804")]
		private static extern int ovrAudio_SetPropagationThreadAffinity(IntPtr context, ulong cpuMask);

		[Token(Token = "0x600077F")]
		[Address(RVA = "0xE85894", Offset = "0xE85894", VA = "0xE85894", Slot = "5")]
		public int SetPropagationThreadAffinity(ulong cpuMask)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000780")]
		[Address(RVA = "0xE858B8", Offset = "0xE858B8", VA = "0xE858B8")]
		private static extern int ovrAudio_CreateAudioGeometry(IntPtr context, out IntPtr geometry);

		[Token(Token = "0x6000781")]
		[Address(RVA = "0xE85944", Offset = "0xE85944", VA = "0xE85944", Slot = "6")]
		public int CreateAudioGeometry(out IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000782")]
		[Address(RVA = "0xE85968", Offset = "0xE85968", VA = "0xE85968")]
		private static extern int ovrAudio_DestroyAudioGeometry(IntPtr geometry);

		[Token(Token = "0x6000783")]
		[Address(RVA = "0xE859E8", Offset = "0xE859E8", VA = "0xE859E8", Slot = "7")]
		public int DestroyAudioGeometry(IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000784")]
		[Address(RVA = "0xE859F0", Offset = "0xE859F0", VA = "0xE859F0")]
		private static extern int ovrAudio_AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, UIntPtr verticesBytesOffset, UIntPtr vertexCount, UIntPtr vertexStride, ovrAudioScalarType vertexType, int[] indices, UIntPtr indicesByteOffset, UIntPtr indexCount, ovrAudioScalarType indexType, MeshGroup[] groups, UIntPtr groupCount);

		[Token(Token = "0x6000785")]
		[Address(RVA = "0xE85B10", Offset = "0xE85B10", VA = "0xE85B10", Slot = "8")]
		public int AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, int vertexCount, int[] indices, int indexCount, MeshGroup[] groups, int groupCount)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000786")]
		[Address(RVA = "0xE85C04", Offset = "0xE85C04", VA = "0xE85C04")]
		private static extern int ovrAudio_AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4);

		[Token(Token = "0x6000787")]
		[Address(RVA = "0xE85C9C", Offset = "0xE85C9C", VA = "0xE85C9C", Slot = "9")]
		public int AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000788")]
		[Address(RVA = "0xE85CA8", Offset = "0xE85CA8", VA = "0xE85CA8")]
		private static extern int ovrAudio_AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4);

		[Token(Token = "0x6000789")]
		[Address(RVA = "0xE85DD8", Offset = "0xE85DD8", VA = "0xE85DD8", Slot = "10")]
		public int AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600078A")]
		[Address(RVA = "0xE85DE4", Offset = "0xE85DE4", VA = "0xE85DE4")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x600078B")]
		[Address(RVA = "0xE85E90", Offset = "0xE85E90", VA = "0xE85E90", Slot = "11")]
		public int AudioGeometryWriteMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600078C")]
		[Address(RVA = "0xE85E9C", Offset = "0xE85E9C", VA = "0xE85E9C")]
		private static extern int ovrAudio_AudioGeometryReadMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x600078D")]
		[Address(RVA = "0xE85F48", Offset = "0xE85F48", VA = "0xE85F48", Slot = "12")]
		public int AudioGeometryReadMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600078E")]
		[Address(RVA = "0xE85F54", Offset = "0xE85F54", VA = "0xE85F54")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath);

		[Token(Token = "0x600078F")]
		[Address(RVA = "0xE86000", Offset = "0xE86000", VA = "0xE86000", Slot = "13")]
		public int AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000790")]
		[Address(RVA = "0xE8600C", Offset = "0xE8600C", VA = "0xE8600C")]
		private static extern int ovrAudio_CreateAudioMaterial(IntPtr context, out IntPtr material);

		[Token(Token = "0x6000791")]
		[Address(RVA = "0xE86098", Offset = "0xE86098", VA = "0xE86098", Slot = "15")]
		public int CreateAudioMaterial(out IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000792")]
		[Address(RVA = "0xE860BC", Offset = "0xE860BC", VA = "0xE860BC")]
		private static extern int ovrAudio_DestroyAudioMaterial(IntPtr material);

		[Token(Token = "0x6000793")]
		[Address(RVA = "0xE8613C", Offset = "0xE8613C", VA = "0xE8613C", Slot = "16")]
		public int DestroyAudioMaterial(IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000794")]
		[Address(RVA = "0xE86144", Offset = "0xE86144", VA = "0xE86144")]
		private static extern int ovrAudio_AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value);

		[Token(Token = "0x6000795")]
		[Address(RVA = "0xE861EC", Offset = "0xE861EC", VA = "0xE861EC", Slot = "17")]
		public int AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000796")]
		[Address(RVA = "0xE861F8", Offset = "0xE861F8", VA = "0xE861F8")]
		private static extern int ovrAudio_AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value);

		[Token(Token = "0x6000797")]
		[Address(RVA = "0xE862A0", Offset = "0xE862A0", VA = "0xE862A0", Slot = "14")]
		public int AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000798")]
		[Address(RVA = "0xE862B0", Offset = "0xE862B0", VA = "0xE862B0")]
		private static extern int ovrAudio_AudioMaterialReset(IntPtr material, MaterialProperty property);

		[Token(Token = "0x6000799")]
		[Address(RVA = "0xE86340", Offset = "0xE86340", VA = "0xE86340", Slot = "18")]
		public int AudioMaterialReset(IntPtr material, MaterialProperty property)
		{
			return default(int);
		}

		[Token(Token = "0x600079A")]
		[Address(RVA = "0xE8634C", Offset = "0xE8634C", VA = "0xE8634C")]
		public UnityNativeInterface()
		{
		}
	}

	[Token(Token = "0x2000199")]
	public class WwisePluginInterface : PropagationInterface
	{
		[Token(Token = "0x4000966")]
		public const string strOSPS = "OculusSpatializerWwise";

		[Token(Token = "0x4000967")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr context_;

		[Token(Token = "0x170000E2")]
		private IntPtr context
		{
			[Token(Token = "0x600079B")]
			[Address(RVA = "0xE86394", Offset = "0xE86394", VA = "0xE86394")]
			get
			{
				return default(IntPtr);
			}
		}

		[PreserveSig]
		[Token(Token = "0x600079C")]
		[Address(RVA = "0xE863F4", Offset = "0xE863F4", VA = "0xE863F4")]
		public static extern int ovrAudio_GetPluginContext(out IntPtr context, uint clientType);

		[PreserveSig]
		[Token(Token = "0x600079D")]
		[Address(RVA = "0xE86484", Offset = "0xE86484", VA = "0xE86484")]
		private static extern int ovrAudio_SetPropagationQuality(IntPtr context, float quality);

		[Token(Token = "0x600079E")]
		[Address(RVA = "0xE86514", Offset = "0xE86514", VA = "0xE86514", Slot = "4")]
		public int SetPropagationQuality(float quality)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600079F")]
		[Address(RVA = "0xE86538", Offset = "0xE86538", VA = "0xE86538")]
		private static extern int ovrAudio_SetPropagationThreadAffinity(IntPtr context, ulong cpuMask);

		[Token(Token = "0x60007A0")]
		[Address(RVA = "0xE865C8", Offset = "0xE865C8", VA = "0xE865C8", Slot = "5")]
		public int SetPropagationThreadAffinity(ulong cpuMask)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60007A1")]
		[Address(RVA = "0xE865EC", Offset = "0xE865EC", VA = "0xE865EC")]
		private static extern int ovrAudio_CreateAudioGeometry(IntPtr context, out IntPtr geometry);

		[Token(Token = "0x60007A2")]
		[Address(RVA = "0xE8667C", Offset = "0xE8667C", VA = "0xE8667C", Slot = "6")]
		public int CreateAudioGeometry(out IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60007A3")]
		[Address(RVA = "0xE866A0", Offset = "0xE866A0", VA = "0xE866A0")]
		private static extern int ovrAudio_DestroyAudioGeometry(IntPtr geometry);

		[Token(Token = "0x60007A4")]
		[Address(RVA = "0xE86720", Offset = "0xE86720", VA = "0xE86720", Slot = "7")]
		public int DestroyAudioGeometry(IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60007A5")]
		[Address(RVA = "0xE86728", Offset = "0xE86728", VA = "0xE86728")]
		private static extern int ovrAudio_AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, UIntPtr verticesBytesOffset, UIntPtr vertexCount, UIntPtr vertexStride, ovrAudioScalarType vertexType, int[] indices, UIntPtr indicesByteOffset, UIntPtr indexCount, ovrAudioScalarType indexType, MeshGroup[] groups, UIntPtr groupCount);

		[Token(Token = "0x60007A6")]
		[Address(RVA = "0xE86848", Offset = "0xE86848", VA = "0xE86848", Slot = "8")]
		public int AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, int vertexCount, int[] indices, int indexCount, MeshGroup[] groups, int groupCount)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60007A7")]
		[Address(RVA = "0xE8693C", Offset = "0xE8693C", VA = "0xE8693C")]
		private static extern int ovrAudio_AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4);

		[Token(Token = "0x60007A8")]
		[Address(RVA = "0xE869D4", Offset = "0xE869D4", VA = "0xE869D4", Slot = "9")]
		public int AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60007A9")]
		[Address(RVA = "0xE869E0", Offset = "0xE869E0", VA = "0xE869E0")]
		private static extern int ovrAudio_AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4);

		[Token(Token = "0x60007AA")]
		[Address(RVA = "0xE86B10", Offset = "0xE86B10", VA = "0xE86B10", Slot = "10")]
		public int AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60007AB")]
		[Address(RVA = "0xE86B1C", Offset = "0xE86B1C", VA = "0xE86B1C")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x60007AC")]
		[Address(RVA = "0xE86BC8", Offset = "0xE86BC8", VA = "0xE86BC8", Slot = "11")]
		public int AudioGeometryWriteMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60007AD")]
		[Address(RVA = "0xE86BD4", Offset = "0xE86BD4", VA = "0xE86BD4")]
		private static extern int ovrAudio_AudioGeometryReadMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x60007AE")]
		[Address(RVA = "0xE86C80", Offset = "0xE86C80", VA = "0xE86C80", Slot = "12")]
		public int AudioGeometryReadMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60007AF")]
		[Address(RVA = "0xE86C8C", Offset = "0xE86C8C", VA = "0xE86C8C")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath);

		[Token(Token = "0x60007B0")]
		[Address(RVA = "0xE86D38", Offset = "0xE86D38", VA = "0xE86D38", Slot = "13")]
		public int AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60007B1")]
		[Address(RVA = "0xE86D44", Offset = "0xE86D44", VA = "0xE86D44")]
		private static extern int ovrAudio_CreateAudioMaterial(IntPtr context, out IntPtr material);

		[Token(Token = "0x60007B2")]
		[Address(RVA = "0xE86DD4", Offset = "0xE86DD4", VA = "0xE86DD4", Slot = "15")]
		public int CreateAudioMaterial(out IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60007B3")]
		[Address(RVA = "0xE86DF8", Offset = "0xE86DF8", VA = "0xE86DF8")]
		private static extern int ovrAudio_DestroyAudioMaterial(IntPtr material);

		[Token(Token = "0x60007B4")]
		[Address(RVA = "0xE86E78", Offset = "0xE86E78", VA = "0xE86E78", Slot = "16")]
		public int DestroyAudioMaterial(IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60007B5")]
		[Address(RVA = "0xE86E80", Offset = "0xE86E80", VA = "0xE86E80")]
		private static extern int ovrAudio_AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value);

		[Token(Token = "0x60007B6")]
		[Address(RVA = "0xE86F28", Offset = "0xE86F28", VA = "0xE86F28", Slot = "17")]
		public int AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60007B7")]
		[Address(RVA = "0xE86F34", Offset = "0xE86F34", VA = "0xE86F34")]
		private static extern int ovrAudio_AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value);

		[Token(Token = "0x60007B8")]
		[Address(RVA = "0xE86FDC", Offset = "0xE86FDC", VA = "0xE86FDC", Slot = "14")]
		public int AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60007B9")]
		[Address(RVA = "0xE86FEC", Offset = "0xE86FEC", VA = "0xE86FEC")]
		private static extern int ovrAudio_AudioMaterialReset(IntPtr material, MaterialProperty property);

		[Token(Token = "0x60007BA")]
		[Address(RVA = "0xE8707C", Offset = "0xE8707C", VA = "0xE8707C", Slot = "18")]
		public int AudioMaterialReset(IntPtr material, MaterialProperty property)
		{
			return default(int);
		}

		[Token(Token = "0x60007BB")]
		[Address(RVA = "0xE87088", Offset = "0xE87088", VA = "0xE87088")]
		public WwisePluginInterface()
		{
		}
	}

	[Token(Token = "0x200019A")]
	public class FMODPluginInterface : PropagationInterface
	{
		[Token(Token = "0x4000968")]
		public const string strOSPS = "OculusSpatializerFMOD";

		[Token(Token = "0x4000969")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr context_;

		[Token(Token = "0x170000E3")]
		private IntPtr context
		{
			[Token(Token = "0x60007BC")]
			[Address(RVA = "0xE84924", Offset = "0xE84924", VA = "0xE84924")]
			get
			{
				return default(IntPtr);
			}
		}

		[PreserveSig]
		[Token(Token = "0x60007BD")]
		[Address(RVA = "0xE84984", Offset = "0xE84984", VA = "0xE84984")]
		public static extern int ovrAudio_GetPluginContext(out IntPtr context, uint clientType);

		[PreserveSig]
		[Token(Token = "0x60007BE")]
		[Address(RVA = "0xE84A14", Offset = "0xE84A14", VA = "0xE84A14")]
		private static extern int ovrAudio_SetPropagationQuality(IntPtr context, float quality);

		[Token(Token = "0x60007BF")]
		[Address(RVA = "0xE84AA4", Offset = "0xE84AA4", VA = "0xE84AA4", Slot = "4")]
		public int SetPropagationQuality(float quality)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60007C0")]
		[Address(RVA = "0xE84AC8", Offset = "0xE84AC8", VA = "0xE84AC8")]
		private static extern int ovrAudio_SetPropagationThreadAffinity(IntPtr context, ulong cpuMask);

		[Token(Token = "0x60007C1")]
		[Address(RVA = "0xE84B58", Offset = "0xE84B58", VA = "0xE84B58", Slot = "5")]
		public int SetPropagationThreadAffinity(ulong cpuMask)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60007C2")]
		[Address(RVA = "0xE84B7C", Offset = "0xE84B7C", VA = "0xE84B7C")]
		private static extern int ovrAudio_CreateAudioGeometry(IntPtr context, out IntPtr geometry);

		[Token(Token = "0x60007C3")]
		[Address(RVA = "0xE84C0C", Offset = "0xE84C0C", VA = "0xE84C0C", Slot = "6")]
		public int CreateAudioGeometry(out IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60007C4")]
		[Address(RVA = "0xE84C30", Offset = "0xE84C30", VA = "0xE84C30")]
		private static extern int ovrAudio_DestroyAudioGeometry(IntPtr geometry);

		[Token(Token = "0x60007C5")]
		[Address(RVA = "0xE84CB0", Offset = "0xE84CB0", VA = "0xE84CB0", Slot = "7")]
		public int DestroyAudioGeometry(IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60007C6")]
		[Address(RVA = "0xE84CB8", Offset = "0xE84CB8", VA = "0xE84CB8")]
		private static extern int ovrAudio_AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, UIntPtr verticesBytesOffset, UIntPtr vertexCount, UIntPtr vertexStride, ovrAudioScalarType vertexType, int[] indices, UIntPtr indicesByteOffset, UIntPtr indexCount, ovrAudioScalarType indexType, MeshGroup[] groups, UIntPtr groupCount);

		[Token(Token = "0x60007C7")]
		[Address(RVA = "0xE84DD8", Offset = "0xE84DD8", VA = "0xE84DD8", Slot = "8")]
		public int AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, int vertexCount, int[] indices, int indexCount, MeshGroup[] groups, int groupCount)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60007C8")]
		[Address(RVA = "0xE84ECC", Offset = "0xE84ECC", VA = "0xE84ECC")]
		private static extern int ovrAudio_AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4);

		[Token(Token = "0x60007C9")]
		[Address(RVA = "0xE84F64", Offset = "0xE84F64", VA = "0xE84F64", Slot = "9")]
		public int AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60007CA")]
		[Address(RVA = "0xE84F70", Offset = "0xE84F70", VA = "0xE84F70")]
		private static extern int ovrAudio_AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4);

		[Token(Token = "0x60007CB")]
		[Address(RVA = "0xE850A0", Offset = "0xE850A0", VA = "0xE850A0", Slot = "10")]
		public int AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60007CC")]
		[Address(RVA = "0xE850AC", Offset = "0xE850AC", VA = "0xE850AC")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x60007CD")]
		[Address(RVA = "0xE85158", Offset = "0xE85158", VA = "0xE85158", Slot = "11")]
		public int AudioGeometryWriteMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60007CE")]
		[Address(RVA = "0xE85164", Offset = "0xE85164", VA = "0xE85164")]
		private static extern int ovrAudio_AudioGeometryReadMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x60007CF")]
		[Address(RVA = "0xE85210", Offset = "0xE85210", VA = "0xE85210", Slot = "12")]
		public int AudioGeometryReadMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60007D0")]
		[Address(RVA = "0xE8521C", Offset = "0xE8521C", VA = "0xE8521C")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath);

		[Token(Token = "0x60007D1")]
		[Address(RVA = "0xE852C8", Offset = "0xE852C8", VA = "0xE852C8", Slot = "13")]
		public int AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60007D2")]
		[Address(RVA = "0xE852D4", Offset = "0xE852D4", VA = "0xE852D4")]
		private static extern int ovrAudio_CreateAudioMaterial(IntPtr context, out IntPtr material);

		[Token(Token = "0x60007D3")]
		[Address(RVA = "0xE85364", Offset = "0xE85364", VA = "0xE85364", Slot = "15")]
		public int CreateAudioMaterial(out IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60007D4")]
		[Address(RVA = "0xE85388", Offset = "0xE85388", VA = "0xE85388")]
		private static extern int ovrAudio_DestroyAudioMaterial(IntPtr material);

		[Token(Token = "0x60007D5")]
		[Address(RVA = "0xE85408", Offset = "0xE85408", VA = "0xE85408", Slot = "16")]
		public int DestroyAudioMaterial(IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60007D6")]
		[Address(RVA = "0xE85410", Offset = "0xE85410", VA = "0xE85410")]
		private static extern int ovrAudio_AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value);

		[Token(Token = "0x60007D7")]
		[Address(RVA = "0xE854B8", Offset = "0xE854B8", VA = "0xE854B8", Slot = "17")]
		public int AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60007D8")]
		[Address(RVA = "0xE854C4", Offset = "0xE854C4", VA = "0xE854C4")]
		private static extern int ovrAudio_AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value);

		[Token(Token = "0x60007D9")]
		[Address(RVA = "0xE8556C", Offset = "0xE8556C", VA = "0xE8556C", Slot = "14")]
		public int AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60007DA")]
		[Address(RVA = "0xE8557C", Offset = "0xE8557C", VA = "0xE8557C")]
		private static extern int ovrAudio_AudioMaterialReset(IntPtr material, MaterialProperty property);

		[Token(Token = "0x60007DB")]
		[Address(RVA = "0xE8560C", Offset = "0xE8560C", VA = "0xE8560C", Slot = "18")]
		public int AudioMaterialReset(IntPtr material, MaterialProperty property)
		{
			return default(int);
		}

		[Token(Token = "0x60007DC")]
		[Address(RVA = "0xE85618", Offset = "0xE85618", VA = "0xE85618")]
		public FMODPluginInterface()
		{
		}
	}

	[Token(Token = "0x4000947")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static PropagationInterface CachedInterface;

	[Token(Token = "0x170000E0")]
	public static PropagationInterface Interface
	{
		[Token(Token = "0x6000767")]
		[Address(RVA = "0x1361AD8", Offset = "0x1361AD8", VA = "0x1361AD8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000768")]
	[Address(RVA = "0x1361B50", Offset = "0x1361B50", VA = "0x1361B50")]
	private static PropagationInterface FindInterface()
	{
		return null;
	}

	[Token(Token = "0x6000769")]
	[Address(RVA = "0x1361DD8", Offset = "0x1361DD8", VA = "0x1361DD8")]
	public ONSPPropagation()
	{
	}
}
[Token(Token = "0x200019B")]
public sealed class ONSPPropagationMaterial : MonoBehaviour
{
	[Token(Token = "0x200019C")]
	public enum Preset
	{
		[Token(Token = "0x4000970")]
		Custom,
		[Token(Token = "0x4000971")]
		AcousticTile,
		[Token(Token = "0x4000972")]
		Brick,
		[Token(Token = "0x4000973")]
		BrickPainted,
		[Token(Token = "0x4000974")]
		Carpet,
		[Token(Token = "0x4000975")]
		CarpetHeavy,
		[Token(Token = "0x4000976")]
		CarpetHeavyPadded,
		[Token(Token = "0x4000977")]
		CeramicTile,
		[Token(Token = "0x4000978")]
		Concrete,
		[Token(Token = "0x4000979")]
		ConcreteRough,
		[Token(Token = "0x400097A")]
		ConcreteBlock,
		[Token(Token = "0x400097B")]
		ConcreteBlockPainted,
		[Token(Token = "0x400097C")]
		Curtain,
		[Token(Token = "0x400097D")]
		Foliage,
		[Token(Token = "0x400097E")]
		Glass,
		[Token(Token = "0x400097F")]
		GlassHeavy,
		[Token(Token = "0x4000980")]
		Grass,
		[Token(Token = "0x4000981")]
		Gravel,
		[Token(Token = "0x4000982")]
		GypsumBoard,
		[Token(Token = "0x4000983")]
		PlasterOnBrick,
		[Token(Token = "0x4000984")]
		PlasterOnConcreteBlock,
		[Token(Token = "0x4000985")]
		Soil,
		[Token(Token = "0x4000986")]
		SoundProof,
		[Token(Token = "0x4000987")]
		Snow,
		[Token(Token = "0x4000988")]
		Steel,
		[Token(Token = "0x4000989")]
		Water,
		[Token(Token = "0x400098A")]
		WoodThin,
		[Token(Token = "0x400098B")]
		WoodThick,
		[Token(Token = "0x400098C")]
		WoodFloor,
		[Token(Token = "0x400098D")]
		WoodOnConcrete
	}

	[Serializable]
	[Token(Token = "0x200019D")]
	public sealed class Point
	{
		[Token(Token = "0x400098E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float frequency;

		[Token(Token = "0x400098F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float data;

		[Token(Token = "0x6000803")]
		[Address(RVA = "0xE870D0", Offset = "0xE870D0", VA = "0xE870D0")]
		public Point(float frequency = 0f, float data = 0f)
		{
		}

		[Token(Token = "0x6000804")]
		[Address(RVA = "0xE87108", Offset = "0xE87108", VA = "0xE87108")]
		public static implicit operator Point(Vector2 v)
		{
			return null;
		}

		[Token(Token = "0x6000805")]
		[Address(RVA = "0xE87174", Offset = "0xE87174", VA = "0xE87174")]
		public static implicit operator Vector2(Point point)
		{
			return default(Vector2);
		}
	}

	[Serializable]
	[Token(Token = "0x200019E")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x8D6884", Offset = "0x8D6884")]
	public sealed class Spectrum
	{
		[Serializable]
		[Token(Token = "0x200019F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D68BC", Offset = "0x8D68BC")]
		private sealed class <>c
		{
			[Token(Token = "0x4000992")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000993")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Point, float> <>9__3_0;

			[Token(Token = "0x4000994")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<Point, float> <>9__3_1;

			[Token(Token = "0x6000809")]
			[Address(RVA = "0x1C331F0", Offset = "0x1C331F0", VA = "0x1C331F0")]
			public <>c()
			{
			}

			[Token(Token = "0x600080A")]
			[Address(RVA = "0x1C331F8", Offset = "0x1C331F8", VA = "0x1C331F8")]
			internal float <get_Item>b__3_0(Point p)
			{
				return default(float);
			}

			[Token(Token = "0x600080B")]
			[Address(RVA = "0x1C33210", Offset = "0x1C33210", VA = "0x1C33210")]
			internal float <get_Item>b__3_1(Point p)
			{
				return default(float);
			}
		}

		[Token(Token = "0x4000990")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int selection;

		[Token(Token = "0x4000991")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<Point> points;

		[Token(Token = "0x170000E5")]
		public float Item
		{
			[Token(Token = "0x6000806")]
			[Address(RVA = "0xE8718C", Offset = "0xE8718C", VA = "0xE8718C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6000807")]
		[Address(RVA = "0xE875F0", Offset = "0xE875F0", VA = "0xE875F0")]
		public Spectrum()
		{
		}
	}

	[Token(Token = "0x400096A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr materialHandle;

	[Token(Token = "0x400096B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D8CFC", Offset = "0x8D8CFC")]
	public Spectrum absorption;

	[Token(Token = "0x400096C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D8D34", Offset = "0x8D8D34")]
	public Spectrum transmission;

	[Token(Token = "0x400096D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D8D6C", Offset = "0x8D8D6C")]
	public Spectrum scattering;

	[Token(Token = "0x400096E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Preset preset_;

	[Token(Token = "0x170000E4")]
	public Preset preset
	{
		[Token(Token = "0x60007DD")]
		[Address(RVA = "0x1DB4984", Offset = "0x1DB4984", VA = "0x1DB4984")]
		get
		{
			return default(Preset);
		}
		[Token(Token = "0x60007DE")]
		[Address(RVA = "0x1DB498C", Offset = "0x1DB498C", VA = "0x1DB498C")]
		set
		{
		}
	}

	[Token(Token = "0x60007DF")]
	[Address(RVA = "0x1DB4B48", Offset = "0x1DB4B48", VA = "0x1DB4B48")]
	private void Start()
	{
	}

	[Token(Token = "0x60007E0")]
	[Address(RVA = "0x1DB4B4C", Offset = "0x1DB4B4C", VA = "0x1DB4B4C")]
	public void StartInternal()
	{
	}

	[Token(Token = "0x60007E1")]
	[Address(RVA = "0x1DB5360", Offset = "0x1DB5360", VA = "0x1DB5360")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60007E2")]
	[Address(RVA = "0x1DB5364", Offset = "0x1DB5364", VA = "0x1DB5364")]
	public void DestroyInternal()
	{
	}

	[Token(Token = "0x60007E3")]
	[Address(RVA = "0x1DB4CDC", Offset = "0x1DB4CDC", VA = "0x1DB4CDC")]
	public void UploadMaterial()
	{
	}

	[Token(Token = "0x60007E4")]
	[Address(RVA = "0x1DB49B4", Offset = "0x1DB49B4", VA = "0x1DB49B4")]
	public void SetPreset(Preset preset)
	{
	}

	[Token(Token = "0x60007E5")]
	[Address(RVA = "0x1DB5454", Offset = "0x1DB5454", VA = "0x1DB5454")]
	private static void AcousticTile(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60007E6")]
	[Address(RVA = "0x1DB5934", Offset = "0x1DB5934", VA = "0x1DB5934")]
	private static void Brick(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60007E7")]
	[Address(RVA = "0x1DB5E18", Offset = "0x1DB5E18", VA = "0x1DB5E18")]
	private static void BrickPainted(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60007E8")]
	[Address(RVA = "0x1DB62F8", Offset = "0x1DB62F8", VA = "0x1DB62F8")]
	private static void Carpet(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60007E9")]
	[Address(RVA = "0x1DB67EC", Offset = "0x1DB67EC", VA = "0x1DB67EC")]
	private static void CarpetHeavy(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60007EA")]
	[Address(RVA = "0x1DB6CCC", Offset = "0x1DB6CCC", VA = "0x1DB6CCC")]
	private static void CarpetHeavyPadded(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60007EB")]
	[Address(RVA = "0x1DB71AC", Offset = "0x1DB71AC", VA = "0x1DB71AC")]
	private static void CeramicTile(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60007EC")]
	[Address(RVA = "0x1DB7694", Offset = "0x1DB7694", VA = "0x1DB7694")]
	private static void Concrete(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60007ED")]
	[Address(RVA = "0x1DB7B7C", Offset = "0x1DB7B7C", VA = "0x1DB7B7C")]
	private static void ConcreteRough(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60007EE")]
	[Address(RVA = "0x1DB8068", Offset = "0x1DB8068", VA = "0x1DB8068")]
	private static void ConcreteBlock(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60007EF")]
	[Address(RVA = "0x1DB8550", Offset = "0x1DB8550", VA = "0x1DB8550")]
	private static void ConcreteBlockPainted(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60007F0")]
	[Address(RVA = "0x1DB8A40", Offset = "0x1DB8A40", VA = "0x1DB8A40")]
	private static void Curtain(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60007F1")]
	[Address(RVA = "0x1DB8F20", Offset = "0x1DB8F20", VA = "0x1DB8F20")]
	private static void Foliage(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60007F2")]
	[Address(RVA = "0x1DB9414", Offset = "0x1DB9414", VA = "0x1DB9414")]
	private static void Glass(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60007F3")]
	[Address(RVA = "0x1DB98E4", Offset = "0x1DB98E4", VA = "0x1DB98E4")]
	private static void GlassHeavy(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60007F4")]
	[Address(RVA = "0x1DB9DC0", Offset = "0x1DB9DC0", VA = "0x1DB9DC0")]
	private static void Grass(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60007F5")]
	[Address(RVA = "0x1DBA188", Offset = "0x1DBA188", VA = "0x1DBA188")]
	private static void Gravel(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60007F6")]
	[Address(RVA = "0x1DBA548", Offset = "0x1DBA548", VA = "0x1DBA548")]
	private static void GypsumBoard(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60007F7")]
	[Address(RVA = "0x1DBAA38", Offset = "0x1DBAA38", VA = "0x1DBAA38")]
	private static void PlasterOnBrick(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60007F8")]
	[Address(RVA = "0x1DBAF24", Offset = "0x1DBAF24", VA = "0x1DBAF24")]
	private static void PlasterOnConcreteBlock(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60007F9")]
	[Address(RVA = "0x1DBB408", Offset = "0x1DBB408", VA = "0x1DBB408")]
	private static void Soil(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60007FA")]
	[Address(RVA = "0x1DBB7D4", Offset = "0x1DBB7D4", VA = "0x1DBB7D4")]
	private static void SoundProof(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60007FB")]
	[Address(RVA = "0x1DBB978", Offset = "0x1DBB978", VA = "0x1DBB978")]
	private static void Snow(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60007FC")]
	[Address(RVA = "0x1DBBD34", Offset = "0x1DBBD34", VA = "0x1DBBD34")]
	private static void Steel(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60007FD")]
	[Address(RVA = "0x1DBC204", Offset = "0x1DBC204", VA = "0x1DBC204")]
	private static void Water(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60007FE")]
	[Address(RVA = "0x1DBC6E8", Offset = "0x1DBC6E8", VA = "0x1DBC6E8")]
	private static void WoodThin(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60007FF")]
	[Address(RVA = "0x1DBCBC0", Offset = "0x1DBCBC0", VA = "0x1DBCBC0")]
	private static void WoodThick(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000800")]
	[Address(RVA = "0x1DBD0A0", Offset = "0x1DBD0A0", VA = "0x1DBD0A0")]
	private static void WoodFloor(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000801")]
	[Address(RVA = "0x1DBD588", Offset = "0x1DBD588", VA = "0x1DBD588")]
	private static void WoodOnConcrete(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000802")]
	[Address(RVA = "0x1DBDA6C", Offset = "0x1DBDA6C", VA = "0x1DBDA6C")]
	public ONSPPropagationMaterial()
	{
	}
}
[Token(Token = "0x20001A0")]
public class ONSPPropagationSettings : MonoBehaviour
{
	[Token(Token = "0x4000995")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float quality;

	[Token(Token = "0x600080C")]
	[Address(RVA = "0x1DBDB3C", Offset = "0x1DBDB3C", VA = "0x1DBDB3C")]
	private void Update()
	{
	}

	[Token(Token = "0x600080D")]
	[Address(RVA = "0x1DBDC0C", Offset = "0x1DBDC0C", VA = "0x1DBDC0C")]
	public ONSPPropagationSettings()
	{
	}
}
[Token(Token = "0x20001A1")]
public sealed class ONSPSettings : ScriptableObject
{
	[Token(Token = "0x4000996")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public int voiceLimit;

	[Token(Token = "0x4000997")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ONSPSettings instance;

	[Token(Token = "0x170000E6")]
	public static ONSPSettings Instance
	{
		[Token(Token = "0x600080E")]
		[Address(RVA = "0x1DBE264", Offset = "0x1DBE264", VA = "0x1DBE264")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600080F")]
	[Address(RVA = "0x1DBE3BC", Offset = "0x1DBE3BC", VA = "0x1DBE3BC")]
	public ONSPSettings()
	{
	}
}
[Token(Token = "0x20001A2")]
public class ONSPVersion : MonoBehaviour
{
	[Token(Token = "0x4000998")]
	public const string strONSPS = "AudioPluginOculusSpatializer";

	[PreserveSig]
	[Token(Token = "0x6000810")]
	[Address(RVA = "0x1DBE3CC", Offset = "0x1DBE3CC", VA = "0x1DBE3CC")]
	private static extern void ONSP_GetVersion(ref int Major, ref int Minor, ref int Patch);

	[Token(Token = "0x6000811")]
	[Address(RVA = "0x1DBE464", Offset = "0x1DBE464", VA = "0x1DBE464")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000812")]
	[Address(RVA = "0x1DBE584", Offset = "0x1DBE584", VA = "0x1DBE584")]
	private void Start()
	{
	}

	[Token(Token = "0x6000813")]
	[Address(RVA = "0x1DBE588", Offset = "0x1DBE588", VA = "0x1DBE588")]
	private void Update()
	{
	}

	[Token(Token = "0x6000814")]
	[Address(RVA = "0x1DBE58C", Offset = "0x1DBE58C", VA = "0x1DBE58C")]
	public ONSPVersion()
	{
	}
}
[Token(Token = "0x20001A3")]
public class OculusSpatializerUnity : MonoBehaviour
{
	[Token(Token = "0x20001A4")]
	public delegate void AudioRaycastCallback(Vector3 origin, Vector3 direction, out Vector3 point, out Vector3 normal, IntPtr data);

	[Token(Token = "0x4000999")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LayerMask layerMask;

	[Token(Token = "0x400099A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool visualizeRoom;

	[Token(Token = "0x400099B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	private bool roomVisualizationInitialized;

	[Token(Token = "0x400099C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int raysPerSecond;

	[Token(Token = "0x400099D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float roomInterpSpeed;

	[Token(Token = "0x400099E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float maxWallDistance;

	[Token(Token = "0x400099F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int rayCacheSize;

	[Token(Token = "0x40009A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool dynamicReflectionsEnabled;

	[Token(Token = "0x40009A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float particleSize;

	[Token(Token = "0x40009A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float particleOffset;

	[Token(Token = "0x40009A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GameObject room;

	[Token(Token = "0x40009A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Renderer[] wallRenderer;

	[Token(Token = "0x40009A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float[] dims;

	[Token(Token = "0x40009A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float[] coefs;

	[Token(Token = "0x40009A7")]
	private const int HIT_COUNT = 2048;

	[Token(Token = "0x40009A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Vector3[] points;

	[Token(Token = "0x40009A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Vector3[] normals;

	[Token(Token = "0x40009AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private ParticleSystem sys;

	[Token(Token = "0x40009AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private ParticleSystem.Particle[] particles;

	[Token(Token = "0x40009AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static LayerMask gLayerMask;

	[Token(Token = "0x40009AD")]
	private const string strOSP = "AudioPluginOculusSpatializer";

	[Token(Token = "0x6000815")]
	[Address(RVA = "0x1DC4DBC", Offset = "0x1DC4DBC", VA = "0x1DC4DBC")]
	private static Vector3 swapHandedness(Vector3 vec)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000816")]
	[Address(RVA = "0x1DC4C4C", Offset = "0x1DC4C4C", VA = "0x1DC4C4C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x8E1038", Offset = "0x8E1038")]
	private static void AudioRaycast(Vector3 origin, Vector3 direction, out Vector3 point, out Vector3 normal, IntPtr data)
	{
	}

	[Token(Token = "0x6000817")]
	[Address(RVA = "0x1DC4DC4", Offset = "0x1DC4DC4", VA = "0x1DC4DC4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000818")]
	[Address(RVA = "0x1DC4F08", Offset = "0x1DC4F08", VA = "0x1DC4F08")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000819")]
	[Address(RVA = "0x1DC5004", Offset = "0x1DC5004", VA = "0x1DC5004")]
	private void Update()
	{
	}

	[Token(Token = "0x600081A")]
	[Address(RVA = "0x1DC5920", Offset = "0x1DC5920", VA = "0x1DC5920")]
	private void inititalizeRoomVisualization()
	{
	}

	[PreserveSig]
	[Token(Token = "0x600081B")]
	[Address(RVA = "0x1DC4E74", Offset = "0x1DC4E74", VA = "0x1DC4E74")]
	private static extern int OSP_Unity_AssignRaycastCallback(AudioRaycastCallback callback, IntPtr data);

	[PreserveSig]
	[Token(Token = "0x600081C")]
	[Address(RVA = "0x1DC4F74", Offset = "0x1DC4F74", VA = "0x1DC4F74")]
	private static extern int OSP_Unity_AssignRaycastCallback(IntPtr callback, IntPtr data);

	[PreserveSig]
	[Token(Token = "0x600081D")]
	[Address(RVA = "0x1DC5688", Offset = "0x1DC5688", VA = "0x1DC5688")]
	private static extern int OSP_Unity_SetDynamicRoomRaysPerSecond(int RaysPerSecond);

	[PreserveSig]
	[Token(Token = "0x600081E")]
	[Address(RVA = "0x1DC5708", Offset = "0x1DC5708", VA = "0x1DC5708")]
	private static extern int OSP_Unity_SetDynamicRoomInterpSpeed(float InterpSpeed);

	[PreserveSig]
	[Token(Token = "0x600081F")]
	[Address(RVA = "0x1DC5790", Offset = "0x1DC5790", VA = "0x1DC5790")]
	private static extern int OSP_Unity_SetDynamicRoomMaxWallDistance(float MaxWallDistance);

	[PreserveSig]
	[Token(Token = "0x6000820")]
	[Address(RVA = "0x1DC5818", Offset = "0x1DC5818", VA = "0x1DC5818")]
	private static extern int OSP_Unity_SetDynamicRoomRaysRayCacheSize(int RayCacheSize);

	[PreserveSig]
	[Token(Token = "0x6000821")]
	[Address(RVA = "0x1DC5898", Offset = "0x1DC5898", VA = "0x1DC5898")]
	private static extern int OSP_Unity_UpdateRoomModel(float wetLevel);

	[PreserveSig]
	[Token(Token = "0x6000822")]
	[Address(RVA = "0x1DC6620", Offset = "0x1DC6620", VA = "0x1DC6620")]
	private static extern int OSP_Unity_GetRoomDimensions(float[] roomDimensions, float[] reflectionsCoefs, out Vector3 position);

	[PreserveSig]
	[Token(Token = "0x6000823")]
	[Address(RVA = "0x1DC66C8", Offset = "0x1DC66C8", VA = "0x1DC66C8")]
	private static extern int OSP_Unity_GetRaycastHits(Vector3[] points, Vector3[] normals, int length);

	[Token(Token = "0x6000824")]
	[Address(RVA = "0x1DC6770", Offset = "0x1DC6770", VA = "0x1DC6770")]
	public OculusSpatializerUnity()
	{
	}
}
[Token(Token = "0x20001A5")]
public struct ReflectionSnapshot
{
	[Token(Token = "0x40009AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public AudioMixerSnapshot mixerSnapshot;

	[Token(Token = "0x40009AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float fadeTime;
}
[Token(Token = "0x20001A6")]
public class ONSPReflectionZone : MonoBehaviour
{
	[Token(Token = "0x40009B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioMixerSnapshot mixerSnapshot;

	[Token(Token = "0x40009B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float fadeTime;

	[Token(Token = "0x40009B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Stack<ReflectionSnapshot> snapshotList;

	[Token(Token = "0x40009B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static ReflectionSnapshot currentSnapshot;

	[Token(Token = "0x600082A")]
	[Address(RVA = "0x1DBDC1C", Offset = "0x1DBDC1C", VA = "0x1DBDC1C")]
	private void Start()
	{
	}

	[Token(Token = "0x600082B")]
	[Address(RVA = "0x1DBDC20", Offset = "0x1DBDC20", VA = "0x1DBDC20")]
	private void Update()
	{
	}

	[Token(Token = "0x600082C")]
	[Address(RVA = "0x1DBDC24", Offset = "0x1DBDC24", VA = "0x1DBDC24")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600082D")]
	[Address(RVA = "0x1DBDD9C", Offset = "0x1DBDD9C", VA = "0x1DBDD9C")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x600082E")]
	[Address(RVA = "0x1DBDC70", Offset = "0x1DBDC70", VA = "0x1DBDC70")]
	private bool CheckForAudioListener(GameObject gameObject)
	{
		return default(bool);
	}

	[Token(Token = "0x600082F")]
	[Address(RVA = "0x1DBDD08", Offset = "0x1DBDD08", VA = "0x1DBDD08")]
	private void PushCurrentMixerShapshot()
	{
	}

	[Token(Token = "0x6000830")]
	[Address(RVA = "0x1DBDDE8", Offset = "0x1DBDDE8", VA = "0x1DBDDE8")]
	private void PopCurrentMixerSnapshot()
	{
	}

	[Token(Token = "0x6000831")]
	[Address(RVA = "0x1DBDE88", Offset = "0x1DBDE88", VA = "0x1DBDE88")]
	private void SetReflectionValues()
	{
	}

	[Token(Token = "0x6000832")]
	[Address(RVA = "0x1DBE024", Offset = "0x1DBE024", VA = "0x1DBE024")]
	private void SetReflectionValues(ref ReflectionSnapshot mss)
	{
	}

	[Token(Token = "0x6000833")]
	[Address(RVA = "0x1DBE1C0", Offset = "0x1DBE1C0", VA = "0x1DBE1C0")]
	public ONSPReflectionZone()
	{
	}
}
[Token(Token = "0x20001A7")]
public class OculusBodyCollider : MonoBehaviour
{
	[Token(Token = "0x40009B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform head;

	[Token(Token = "0x40009B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private CapsuleCollider capsuleCollider;

	[Token(Token = "0x6000835")]
	[Address(RVA = "0x1DC11E0", Offset = "0x1DC11E0", VA = "0x1DC11E0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000836")]
	[Address(RVA = "0x1DC123C", Offset = "0x1DC123C", VA = "0x1DC123C")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000837")]
	[Address(RVA = "0x1DC1340", Offset = "0x1DC1340", VA = "0x1DC1340")]
	public OculusBodyCollider()
	{
	}
}
[Token(Token = "0x20001A8")]
public class OculusCircularDrive : PVRGrabbable
{
	[Token(Token = "0x20001A9")]
	public enum Axis_t
	{
		[Token(Token = "0x40009DD")]
		XAxis,
		[Token(Token = "0x40009DE")]
		YAxis,
		[Token(Token = "0x40009DF")]
		ZAxis
	}

	[Token(Token = "0x20001AA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D68CC", Offset = "0x8D68CC")]
	private sealed class <HapticPulses>d__44 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40009E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40009E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40009E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PVRGrabber hand;

		[Token(Token = "0x40009E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float flMagnitude;

		[Token(Token = "0x40009E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int nCount;

		[Token(Token = "0x40009E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int <nRangeMax>5__2;

		[Token(Token = "0x40009E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private ushort <i>5__3;

		[Token(Token = "0x170000E7")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000850")]
			[Address(RVA = "0xE87AEC", Offset = "0xE87AEC", VA = "0xE87AEC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000E8")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000852")]
			[Address(RVA = "0xE87B34", Offset = "0xE87B34", VA = "0xE87B34", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600084D")]
		[Address(RVA = "0xE878FC", Offset = "0xE878FC", VA = "0xE878FC")]
		[DebuggerHidden]
		public <HapticPulses>d__44(int <>1__state)
		{
		}

		[Token(Token = "0x600084E")]
		[Address(RVA = "0xE87928", Offset = "0xE87928", VA = "0xE87928", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600084F")]
		[Address(RVA = "0xE8792C", Offset = "0xE8792C", VA = "0xE8792C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000851")]
		[Address(RVA = "0xE87AF4", Offset = "0xE87AF4", VA = "0xE87AF4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40009B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D8DC4", Offset = "0x8D8DC4")]
	public Axis_t axisOfRotation;

	[Token(Token = "0x40009B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D8DFC", Offset = "0x8D8DFC")]
	public Collider childCollider;

	[Token(Token = "0x40009B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D8E34", Offset = "0x8D8E34")]
	public OculusLinearMapping linearMapping;

	[Token(Token = "0x40009B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D8E6C", Offset = "0x8D8E6C")]
	public bool hoverLock;

	[Token(Token = "0x40009BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D8EA4", Offset = "0x8D8EA4")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D8EA4", Offset = "0x8D8EA4")]
	public bool limited;

	[Token(Token = "0x40009BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public Vector2 frozenDistanceMinMaxThreshold;

	[Token(Token = "0x40009BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public UnityEvent onFrozenDistanceThreshold;

	[Token(Token = "0x40009BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D8F04", Offset = "0x8D8F04")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D8F04", Offset = "0x8D8F04")]
	public float minAngle;

	[Token(Token = "0x40009BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D8F64", Offset = "0x8D8F64")]
	public bool freezeOnMin;

	[Token(Token = "0x40009BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D8F9C", Offset = "0x8D8F9C")]
	public UnityEvent onMinAngle;

	[Token(Token = "0x40009C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D8FD4", Offset = "0x8D8FD4")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D8FD4", Offset = "0x8D8FD4")]
	public float maxAngle;

	[Token(Token = "0x40009C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D9034", Offset = "0x8D9034")]
	public bool freezeOnMax;

	[Token(Token = "0x40009C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D906C", Offset = "0x8D906C")]
	public UnityEvent onMaxAngle;

	[Token(Token = "0x40009C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D90A4", Offset = "0x8D90A4")]
	public bool forceStart;

	[Token(Token = "0x40009C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D90DC", Offset = "0x8D90DC")]
	public float startAngle;

	[Token(Token = "0x40009C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D9114", Offset = "0x8D9114")]
	public bool rotateGameObject;

	[Token(Token = "0x40009C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA9")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D914C", Offset = "0x8D914C")]
	public bool debugPath;

	[Token(Token = "0x40009C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D9184", Offset = "0x8D9184")]
	public int dbgPathLimit;

	[Token(Token = "0x40009C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D91BC", Offset = "0x8D91BC")]
	public TextMesh debugText;

	[Token(Token = "0x40009C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D91F4", Offset = "0x8D91F4")]
	public float outAngle;

	[Token(Token = "0x40009CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private Quaternion start;

	[Token(Token = "0x40009CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private Vector3 worldPlaneNormal;

	[Token(Token = "0x40009CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private Vector3 localPlaneNormal;

	[Token(Token = "0x40009CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	private Vector3 lastHandProjected;

	[Token(Token = "0x40009CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private Color red;

	[Token(Token = "0x40009CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private Color green;

	[Token(Token = "0x40009D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private GameObject[] dbgHandObjects;

	[Token(Token = "0x40009D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private GameObject[] dbgProjObjects;

	[Token(Token = "0x40009D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private GameObject dbgObjectsParent;

	[Token(Token = "0x40009D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private int dbgObjectCount;

	[Token(Token = "0x40009D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
	private int dbgObjectIndex;

	[Token(Token = "0x40009D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private bool driving;

	[Token(Token = "0x40009D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
	private float minMaxAngularThreshold;

	[Token(Token = "0x40009D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private bool frozen;

	[Token(Token = "0x40009D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
	private float frozenAngle;

	[Token(Token = "0x40009D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private Vector3 frozenHandWorldPos;

	[Token(Token = "0x40009DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
	private Vector2 frozenSqDistanceMinMaxThreshold;

	[Token(Token = "0x40009DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public Transform parentOfHand;

	[Token(Token = "0x6000838")]
	[Address(RVA = "0x1DC1348", Offset = "0x1DC1348", VA = "0x1DC1348")]
	private void Freeze(Transform hand)
	{
	}

	[Token(Token = "0x6000839")]
	[Address(RVA = "0x1DC13A4", Offset = "0x1DC13A4", VA = "0x1DC13A4")]
	private void UnFreeze()
	{
	}

	[Token(Token = "0x600083A")]
	[Address(RVA = "0x1DC13B4", Offset = "0x1DC13B4", VA = "0x1DC13B4")]
	private void Awake()
	{
	}

	[Token(Token = "0x600083B")]
	[Address(RVA = "0x1DC13B8", Offset = "0x1DC13B8", VA = "0x1DC13B8")]
	private new void Start()
	{
	}

	[Token(Token = "0x600083C")]
	[Address(RVA = "0x1DC17D4", Offset = "0x1DC17D4", VA = "0x1DC17D4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600083D")]
	[Address(RVA = "0x1DC17D8", Offset = "0x1DC17D8", VA = "0x1DC17D8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E1098", Offset = "0x8E1098")]
	private IEnumerator HapticPulses(PVRGrabber hand, float flMagnitude, int nCount)
	{
		return null;
	}

	[Token(Token = "0x600083E")]
	[Address(RVA = "0x1DC1870", Offset = "0x1DC1870", VA = "0x1DC1870")]
	private void OnHandHoverBegin(GameObject hand)
	{
	}

	[Token(Token = "0x600083F")]
	[Address(RVA = "0x1DC1874", Offset = "0x1DC1874", VA = "0x1DC1874")]
	private void OnHandHoverEnd(GameObject hand)
	{
	}

	[Token(Token = "0x6000840")]
	[Address(RVA = "0x1DC18F4", Offset = "0x1DC18F4", VA = "0x1DC18F4", Slot = "4")]
	public override void GrabBegin(PVRGrabber hand, Collider grabPoint)
	{
	}

	[Token(Token = "0x6000841")]
	[Address(RVA = "0x1DC1F08", Offset = "0x1DC1F08", VA = "0x1DC1F08", Slot = "5")]
	public override void GrabEnd(Vector3 linearVelocity, Vector3 angularVelocity)
	{
	}

	[Token(Token = "0x6000842")]
	[Address(RVA = "0x1DC1FD8", Offset = "0x1DC1FD8", VA = "0x1DC1FD8")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000843")]
	[Address(RVA = "0x1DC1A2C", Offset = "0x1DC1A2C", VA = "0x1DC1A2C")]
	private Vector3 ComputeToTransformProjected(Transform xForm)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000844")]
	[Address(RVA = "0x1DC201C", Offset = "0x1DC201C", VA = "0x1DC201C")]
	private void DrawDebugPath(Transform xForm, Vector3 toTransformProjected)
	{
	}

	[Token(Token = "0x6000845")]
	[Address(RVA = "0x1DC268C", Offset = "0x1DC268C", VA = "0x1DC268C")]
	private void UpdateLinearMapping()
	{
	}

	[Token(Token = "0x6000846")]
	[Address(RVA = "0x1DC2800", Offset = "0x1DC2800", VA = "0x1DC2800")]
	private void UpdateGameObject()
	{
	}

	[Token(Token = "0x6000847")]
	[Address(RVA = "0x1DC26F0", Offset = "0x1DC26F0", VA = "0x1DC26F0")]
	private void UpdateDebugText()
	{
	}

	[Token(Token = "0x6000848")]
	[Address(RVA = "0x1DC1750", Offset = "0x1DC1750", VA = "0x1DC1750")]
	private void UpdateAll()
	{
	}

	[Token(Token = "0x6000849")]
	[Address(RVA = "0x1DC28A8", Offset = "0x1DC28A8", VA = "0x1DC28A8")]
	public static float RemapNumber(float num, float low1, float high1, float low2, float high2)
	{
		return default(float);
	}

	[Token(Token = "0x600084A")]
	[Address(RVA = "0x1DC28C4", Offset = "0x1DC28C4", VA = "0x1DC28C4")]
	public static float RemapNumberClamped(float num, float low1, float high1, float low2, float high2)
	{
		return default(float);
	}

	[Token(Token = "0x600084B")]
	[Address(RVA = "0x1DC1C64", Offset = "0x1DC1C64", VA = "0x1DC1C64")]
	private void ComputeAngle(Transform hand)
	{
	}

	[Token(Token = "0x600084C")]
	[Address(RVA = "0x1DC2938", Offset = "0x1DC2938", VA = "0x1DC2938")]
	public OculusCircularDrive()
	{
	}
}
[Token(Token = "0x20001AB")]
public class OculusEntitlementCheck : MonoBehaviour
{
	[Token(Token = "0x6000853")]
	[Address(RVA = "0x1DC2A08", Offset = "0x1DC2A08", VA = "0x1DC2A08")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000854")]
	[Address(RVA = "0x1DC2BCC", Offset = "0x1DC2BCC", VA = "0x1DC2BCC")]
	private void EntitlementCallback(Message msg)
	{
	}

	[Token(Token = "0x6000855")]
	[Address(RVA = "0x1DC2CA4", Offset = "0x1DC2CA4", VA = "0x1DC2CA4")]
	public OculusEntitlementCheck()
	{
	}
}
[Token(Token = "0x20001AC")]
public enum VibrationForce
{
	[Token(Token = "0x40009E8")]
	Light,
	[Token(Token = "0x40009E9")]
	Medium,
	[Token(Token = "0x40009EA")]
	Hard
}
[Token(Token = "0x20001AD")]
public class OculusHaptic : MonoBehaviour
{
	[Token(Token = "0x20001AE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D68DC", Offset = "0x8D68DC")]
	private sealed class <VibrateTime>d__21 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40009F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40009F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40009F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OculusHaptic <>4__this;

		[Token(Token = "0x40009F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public VibrationForce force;

		[Token(Token = "0x40009F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float time;

		[Token(Token = "0x40009F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private PVRHaptics.PVRHapticsChannel <channel>5__2;

		[Token(Token = "0x170000EC")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000866")]
			[Address(RVA = "0xE87D58", Offset = "0xE87D58", VA = "0xE87D58", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000ED")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000868")]
			[Address(RVA = "0xE87DA0", Offset = "0xE87DA0", VA = "0xE87DA0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000863")]
		[Address(RVA = "0xE87B3C", Offset = "0xE87B3C", VA = "0xE87B3C")]
		[DebuggerHidden]
		public <VibrateTime>d__21(int <>1__state)
		{
		}

		[Token(Token = "0x6000864")]
		[Address(RVA = "0xE87B68", Offset = "0xE87B68", VA = "0xE87B68", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000865")]
		[Address(RVA = "0xE87B6C", Offset = "0xE87B6C", VA = "0xE87B6C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000867")]
		[Address(RVA = "0xE87D60", Offset = "0xE87D60", VA = "0xE87D60", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40009EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private PVRInput.Controller controllerMask;

	[Token(Token = "0x40009EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private PVRHapticsClip clipLight;

	[Token(Token = "0x40009ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private PVRHapticsClip clipMedium;

	[Token(Token = "0x40009EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private PVRHapticsClip clipHard;

	[Token(Token = "0x40009EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D923C", Offset = "0x8D923C")]
	private float <lowViveHaptics>k__BackingField;

	[Token(Token = "0x40009F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D924C", Offset = "0x8D924C")]
	private float <mediumViveHaptics>k__BackingField;

	[Token(Token = "0x40009F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D925C", Offset = "0x8D925C")]
	private float <hardViveHaptics>k__BackingField;

	[Token(Token = "0x170000E9")]
	public float lowViveHaptics
	{
		[Token(Token = "0x6000856")]
		[Address(RVA = "0x1DC2CAC", Offset = "0x1DC2CAC", VA = "0x1DC2CAC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E1148", Offset = "0x8E1148")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000857")]
		[Address(RVA = "0x1DC2CB4", Offset = "0x1DC2CB4", VA = "0x1DC2CB4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E1158", Offset = "0x8E1158")]
		private set
		{
		}
	}

	[Token(Token = "0x170000EA")]
	public float mediumViveHaptics
	{
		[Token(Token = "0x6000858")]
		[Address(RVA = "0x1DC2CBC", Offset = "0x1DC2CBC", VA = "0x1DC2CBC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E1168", Offset = "0x8E1168")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000859")]
		[Address(RVA = "0x1DC2CC4", Offset = "0x1DC2CC4", VA = "0x1DC2CC4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E1178", Offset = "0x8E1178")]
		private set
		{
		}
	}

	[Token(Token = "0x170000EB")]
	public float hardViveHaptics
	{
		[Token(Token = "0x600085A")]
		[Address(RVA = "0x1DC2CCC", Offset = "0x1DC2CCC", VA = "0x1DC2CCC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E1188", Offset = "0x8E1188")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600085B")]
		[Address(RVA = "0x1DC2CD4", Offset = "0x1DC2CD4", VA = "0x1DC2CD4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E1198", Offset = "0x8E1198")]
		private set
		{
		}
	}

	[Token(Token = "0x600085C")]
	[Address(RVA = "0x1DC2CDC", Offset = "0x1DC2CDC", VA = "0x1DC2CDC")]
	private void Start()
	{
	}

	[Token(Token = "0x600085D")]
	[Address(RVA = "0x1DC2CE0", Offset = "0x1DC2CE0", VA = "0x1DC2CE0")]
	private void InitializePVRHaptics()
	{
	}

	[Token(Token = "0x600085E")]
	[Address(RVA = "0x1DC2F0C", Offset = "0x1DC2F0C", VA = "0x1DC2F0C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600085F")]
	[Address(RVA = "0x1DC2F10", Offset = "0x1DC2F10", VA = "0x1DC2F10")]
	public void Vibrate(VibrationForce vibrationForce)
	{
	}

	[Token(Token = "0x6000860")]
	[Address(RVA = "0x1DC2F14", Offset = "0x1DC2F14", VA = "0x1DC2F14")]
	public void VibrateTimeFunction(VibrationForce force, float time)
	{
	}

	[Token(Token = "0x6000861")]
	[Address(RVA = "0x1DC2F18", Offset = "0x1DC2F18", VA = "0x1DC2F18")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E11A8", Offset = "0x8E11A8")]
	public IEnumerator VibrateTime(VibrationForce force, float time)
	{
		return null;
	}

	[Token(Token = "0x6000862")]
	[Address(RVA = "0x1DC2FB0", Offset = "0x1DC2FB0", VA = "0x1DC2FB0")]
	public OculusHaptic()
	{
	}
}
[Token(Token = "0x20001AF")]
public class OculusHapticRack : MonoBehaviour
{
	[Token(Token = "0x40009F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D926C", Offset = "0x8D926C")]
	public OculusLinearMapping linearMapping;

	[Token(Token = "0x40009F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D92A4", Offset = "0x8D92A4")]
	public int teethCount;

	[Token(Token = "0x40009FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D92DC", Offset = "0x8D92DC")]
	public float minimumPulseDuration;

	[Token(Token = "0x40009FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D9314", Offset = "0x8D9314")]
	public float maximumPulseDuration;

	[Token(Token = "0x40009FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D934C", Offset = "0x8D934C")]
	public UnityEvent onPulse;

	[Token(Token = "0x40009FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private GameObject hand;

	[Token(Token = "0x40009FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int previousToothIndex;

	[Token(Token = "0x6000869")]
	[Address(RVA = "0x1DC2FB8", Offset = "0x1DC2FB8", VA = "0x1DC2FB8")]
	private void Awake()
	{
	}

	[Token(Token = "0x600086A")]
	[Address(RVA = "0x1DC3074", Offset = "0x1DC3074", VA = "0x1DC3074")]
	private void Update()
	{
	}

	[Token(Token = "0x600086B")]
	[Address(RVA = "0x1DC311C", Offset = "0x1DC311C", VA = "0x1DC311C")]
	private void Pulse()
	{
	}

	[Token(Token = "0x600086C")]
	[Address(RVA = "0x1DC31BC", Offset = "0x1DC31BC", VA = "0x1DC31BC")]
	public OculusHapticRack()
	{
	}
}
[Token(Token = "0x20001B0")]
public class OculusJoystickGrab : PVRGrabbable
{
	[Token(Token = "0x40009FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float attachForce;

	[Token(Token = "0x4000A00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float attachForceDamper;

	[Token(Token = "0x4000A01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private GameObject holdingHands;

	[Token(Token = "0x4000A02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Rigidbody holdingBodies;

	[Token(Token = "0x4000A03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Vector3 holdingPoints;

	[Token(Token = "0x4000A04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Rigidbody rigidBodies;

	[Token(Token = "0x4000A05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject objectToNotBreak;

	[Token(Token = "0x4000A06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GameObject parentOfHand;

	[Token(Token = "0x4000A07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Quaternion originalRotation;

	[Token(Token = "0x4000A08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Vector3 originalPos;

	[Token(Token = "0x4000A09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private float rotateSpeed;

	[Token(Token = "0x4000A0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private bool restoreRotation;

	[Token(Token = "0x600086D")]
	[Address(RVA = "0x1DC31E0", Offset = "0x1DC31E0", VA = "0x1DC31E0")]
	private void Awake()
	{
	}

	[Token(Token = "0x600086E")]
	[Address(RVA = "0x1DC3284", Offset = "0x1DC3284", VA = "0x1DC3284")]
	private void Update()
	{
	}

	[Token(Token = "0x600086F")]
	[Address(RVA = "0x1DC3494", Offset = "0x1DC3494", VA = "0x1DC3494", Slot = "5")]
	public override void GrabEnd(Vector3 linearVelocity, Vector3 angularVelocity)
	{
	}

	[Token(Token = "0x6000870")]
	[Address(RVA = "0x1DC3698", Offset = "0x1DC3698", VA = "0x1DC3698", Slot = "4")]
	public override void GrabBegin(PVRGrabber hand, Collider grabPoint)
	{
	}

	[Token(Token = "0x6000871")]
	[Address(RVA = "0x1DC3964", Offset = "0x1DC3964", VA = "0x1DC3964")]
	public new void EarlyEnd()
	{
	}

	[Token(Token = "0x6000872")]
	[Address(RVA = "0x1DC39D0", Offset = "0x1DC39D0", VA = "0x1DC39D0")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000873")]
	[Address(RVA = "0x1DC3750", Offset = "0x1DC3750", VA = "0x1DC3750")]
	private void PhysicsAttach(GameObject hand)
	{
	}

	[Token(Token = "0x6000874")]
	[Address(RVA = "0x1DC3568", Offset = "0x1DC3568", VA = "0x1DC3568")]
	private void PhysicsDetach(GameObject hand)
	{
	}

	[Token(Token = "0x6000875")]
	[Address(RVA = "0x1DC3B9C", Offset = "0x1DC3B9C", VA = "0x1DC3B9C")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000876")]
	[Address(RVA = "0x1DC3CC0", Offset = "0x1DC3CC0", VA = "0x1DC3CC0")]
	public OculusJoystickGrab()
	{
	}
}
[Token(Token = "0x20001B1")]
public class OculusLinearDrive : PVRGrabbable
{
	[Token(Token = "0x4000A0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform startPosition;

	[Token(Token = "0x4000A0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform endPosition;

	[Token(Token = "0x4000A0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public OculusLinearMapping linearMapping;

	[Token(Token = "0x4000A0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public bool repositionGameObject;

	[Token(Token = "0x4000A0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
	public bool maintainMomemntum;

	[Token(Token = "0x4000A10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float momemtumDampenRate;

	[Token(Token = "0x4000A11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public PVRGrabber publicHandGrabbing;

	[Token(Token = "0x4000A12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float initialMappingOffset;

	[Token(Token = "0x4000A13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private int numMappingChangeSamples;

	[Token(Token = "0x4000A14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float[] mappingChangeSamples;

	[Token(Token = "0x4000A15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float prevMapping;

	[Token(Token = "0x4000A16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private float mappingChangeRate;

	[Token(Token = "0x4000A17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private int sampleCount;

	[Token(Token = "0x4000A18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Transform parentOfHand;

	[Token(Token = "0x4000A19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Transform startingRotation;

	[Token(Token = "0x6000877")]
	[Address(RVA = "0x1DC3CE0", Offset = "0x1DC3CE0", VA = "0x1DC3CE0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000878")]
	[Address(RVA = "0x1DC3D58", Offset = "0x1DC3D58", VA = "0x1DC3D58")]
	private new void Start()
	{
	}

	[Token(Token = "0x6000879")]
	[Address(RVA = "0x1DC406C", Offset = "0x1DC406C", VA = "0x1DC406C", Slot = "4")]
	public override void GrabBegin(PVRGrabber hand, Collider grabPoint)
	{
	}

	[Token(Token = "0x600087A")]
	[Address(RVA = "0x1DC4298", Offset = "0x1DC4298", VA = "0x1DC4298", Slot = "5")]
	public override void GrabEnd(Vector3 linearVelocity, Vector3 angularVelocity)
	{
	}

	[Token(Token = "0x600087B")]
	[Address(RVA = "0x1DC444C", Offset = "0x1DC444C", VA = "0x1DC444C")]
	private void CalculateMappingChangeRate()
	{
	}

	[Token(Token = "0x600087C")]
	[Address(RVA = "0x1DC3EB4", Offset = "0x1DC3EB4", VA = "0x1DC3EB4")]
	private void UpdateLinearMapping(Transform tr)
	{
	}

	[Token(Token = "0x600087D")]
	[Address(RVA = "0x1DC41A0", Offset = "0x1DC41A0", VA = "0x1DC41A0")]
	private float CalculateLinearMapping(Transform tr)
	{
		return default(float);
	}

	[Token(Token = "0x600087E")]
	[Address(RVA = "0x1DC44E8", Offset = "0x1DC44E8", VA = "0x1DC44E8")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600087F")]
	[Address(RVA = "0x1DC4680", Offset = "0x1DC4680", VA = "0x1DC4680")]
	public OculusLinearDrive()
	{
	}
}
[Token(Token = "0x20001B2")]
public class OculusLinearMapping : MonoBehaviour
{
	[Token(Token = "0x4000A1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float value;

	[Token(Token = "0x6000880")]
	[Address(RVA = "0x1DC46A0", Offset = "0x1DC46A0", VA = "0x1DC46A0")]
	public OculusLinearMapping()
	{
	}
}
[Token(Token = "0x20001B3")]
public class OculusLockObject : MonoBehaviour
{
	[Token(Token = "0x4000A1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform snapTo;

	[Token(Token = "0x4000A1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Rigidbody body;

	[Token(Token = "0x4000A1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float snapTime;

	[Token(Token = "0x4000A1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float dropTimer;

	[Token(Token = "0x4000A1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public PVRGrabbable interactable;

	[Token(Token = "0x6000881")]
	[Address(RVA = "0x1DC46A8", Offset = "0x1DC46A8", VA = "0x1DC46A8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000882")]
	[Address(RVA = "0x1DC4734", Offset = "0x1DC4734", VA = "0x1DC4734")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000883")]
	[Address(RVA = "0x1DC4AE4", Offset = "0x1DC4AE4", VA = "0x1DC4AE4")]
	public OculusLockObject()
	{
	}
}
[Token(Token = "0x20001B4")]
public class OculusPaddle : OVRGrabbable
{
	[Token(Token = "0x6000884")]
	[Address(RVA = "0x1DC4AF4", Offset = "0x1DC4AF4", VA = "0x1DC4AF4")]
	private new void Start()
	{
	}

	[Token(Token = "0x6000885")]
	[Address(RVA = "0x1DC4AF8", Offset = "0x1DC4AF8", VA = "0x1DC4AF8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000886")]
	[Address(RVA = "0x1DC4AFC", Offset = "0x1DC4AFC", VA = "0x1DC4AFC")]
	public OculusPaddle()
	{
	}
}
[Token(Token = "0x20001B5")]
public class OculusSceneLoader : MonoBehaviour
{
	[Token(Token = "0x20001B6")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D68EC", Offset = "0x8D68EC")]
	private sealed class <Start>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OculusSceneLoader <>4__this;

		[Token(Token = "0x4000A29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <fadeTime>5__2;

		[Token(Token = "0x4000A2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private AsyncOperation <async>5__3;

		[Token(Token = "0x4000A2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float <t>5__4;

		[Token(Token = "0x4000A2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private SpriteRenderer <sr>5__5;

		[Token(Token = "0x170000EE")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600088E")]
			[Address(RVA = "0xE881CC", Offset = "0xE881CC", VA = "0xE881CC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000EF")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000890")]
			[Address(RVA = "0xE88214", Offset = "0xE88214", VA = "0xE88214", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600088B")]
		[Address(RVA = "0xE87DA8", Offset = "0xE87DA8", VA = "0xE87DA8")]
		[DebuggerHidden]
		public <Start>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x600088C")]
		[Address(RVA = "0xE87DD4", Offset = "0xE87DD4", VA = "0xE87DD4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600088D")]
		[Address(RVA = "0xE87DD8", Offset = "0xE87DD8", VA = "0xE87DD8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600088F")]
		[Address(RVA = "0xE881D4", Offset = "0xE881D4", VA = "0xE881D4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000A20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject logoCanvas;

	[Token(Token = "0x4000A21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D9384", Offset = "0x8D9384")]
	public string firstSceneName;

	[Token(Token = "0x4000A22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D93BC", Offset = "0x8D93BC")]
	public float firstSceneFadeTime;

	[Token(Token = "0x4000A23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D93F4", Offset = "0x8D93F4")]
	public float defaultFadeTime;

	[Token(Token = "0x4000A24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool firstScene;

	[Token(Token = "0x4000A25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static string nextScene;

	[Token(Token = "0x6000887")]
	[Address(RVA = "0x1DC4B04", Offset = "0x1DC4B04", VA = "0x1DC4B04")]
	public void LoadSceneViaLoadingScene(string scene)
	{
	}

	[Token(Token = "0x6000888")]
	[Address(RVA = "0x1DC4BC8", Offset = "0x1DC4BC8", VA = "0x1DC4BC8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E1258", Offset = "0x8E1258")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000889")]
	[Address(RVA = "0x1DC4C40", Offset = "0x1DC4C40", VA = "0x1DC4C40")]
	public OculusSceneLoader()
	{
	}
}
[Token(Token = "0x20001B7")]
public class OpenArcadeDoor : MonoBehaviour
{
	[Token(Token = "0x20001B8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D68FC", Offset = "0x8D68FC")]
	private sealed class <moveToX>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OpenArcadeDoor <>4__this;

		[Token(Token = "0x4000A3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform fromPosition;

		[Token(Token = "0x4000A3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector3 toPosition;

		[Token(Token = "0x4000A3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float duration;

		[Token(Token = "0x4000A3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float <counter>5__2;

		[Token(Token = "0x4000A3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Vector3 <startPos>5__3;

		[Token(Token = "0x170000F0")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000898")]
			[Address(RVA = "0xE888BC", Offset = "0xE888BC", VA = "0xE888BC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F1")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600089A")]
			[Address(RVA = "0xE88904", Offset = "0xE88904", VA = "0xE88904", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000895")]
		[Address(RVA = "0xE886E0", Offset = "0xE886E0", VA = "0xE886E0")]
		[DebuggerHidden]
		public <moveToX>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x6000896")]
		[Address(RVA = "0xE8870C", Offset = "0xE8870C", VA = "0xE8870C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000897")]
		[Address(RVA = "0xE88710", Offset = "0xE88710", VA = "0xE88710", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000899")]
		[Address(RVA = "0xE888C4", Offset = "0xE888C4", VA = "0xE888C4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000A2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject objectectA;

	[Token(Token = "0x4000A2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject objectectB;

	[Token(Token = "0x4000A2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public MeshCollider diceMeshCollider;

	[Token(Token = "0x4000A30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public BoxCollider keyBoxCollider;

	[Token(Token = "0x4000A31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Rigidbody diceRigidbody;

	[Token(Token = "0x4000A32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool itsABoxCol;

	[Token(Token = "0x4000A33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	public bool itsARemote;

	[Token(Token = "0x4000A34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject remoteButtons;

	[Token(Token = "0x4000A35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject buttonMonitor;

	[Token(Token = "0x4000A36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool isMoving;

	[Token(Token = "0x6000891")]
	[Address(RVA = "0x19189B8", Offset = "0x19189B8", VA = "0x19189B8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000892")]
	[Address(RVA = "0x19189BC", Offset = "0x19189BC", VA = "0x19189BC")]
	public void OpenThatDoor()
	{
	}

	[Token(Token = "0x6000893")]
	[Address(RVA = "0x1918A6C", Offset = "0x1918A6C", VA = "0x1918A6C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E1308", Offset = "0x8E1308")]
	private IEnumerator moveToX(Transform fromPosition, Vector3 toPosition, float duration)
	{
		return null;
	}

	[Token(Token = "0x6000894")]
	[Address(RVA = "0x1918B28", Offset = "0x1918B28", VA = "0x1918B28")]
	public OpenArcadeDoor()
	{
	}
}
[Token(Token = "0x20001B9")]
public class OpenDoorLitte : MonoBehaviour
{
	[Token(Token = "0x20001BA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D690C", Offset = "0x8D690C")]
	private sealed class <RotateObject>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float duration;

		[Token(Token = "0x4000A46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public OpenDoorLitte <>4__this;

		[Token(Token = "0x4000A47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Quaternion start;

		[Token(Token = "0x4000A48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Quaternion end;

		[Token(Token = "0x4000A49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float <endTime>5__2;

		[Token(Token = "0x170000F2")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60008A1")]
			[Address(RVA = "0xE88ABC", Offset = "0xE88ABC", VA = "0xE88ABC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F3")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60008A3")]
			[Address(RVA = "0xE88B04", Offset = "0xE88B04", VA = "0xE88B04", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600089E")]
		[Address(RVA = "0xE8890C", Offset = "0xE8890C", VA = "0xE8890C")]
		[DebuggerHidden]
		public <RotateObject>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x600089F")]
		[Address(RVA = "0xE88938", Offset = "0xE88938", VA = "0xE88938", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60008A0")]
		[Address(RVA = "0xE8893C", Offset = "0xE8893C", VA = "0xE8893C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60008A2")]
		[Address(RVA = "0xE88AC4", Offset = "0xE88AC4", VA = "0xE88AC4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000A3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float RotationDuration;

	[Token(Token = "0x4000A40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private bool _isRotating;

	[Token(Token = "0x4000A41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	public bool isOpen;

	[Token(Token = "0x4000A42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
	public bool isUnlocked;

	[Token(Token = "0x600089B")]
	[Address(RVA = "0x1918B30", Offset = "0x1918B30", VA = "0x1918B30")]
	public void OpenDoorALitte()
	{
	}

	[Token(Token = "0x600089C")]
	[Address(RVA = "0x1918DA0", Offset = "0x1918DA0", VA = "0x1918DA0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E13B8", Offset = "0x8E13B8")]
	private IEnumerator RotateObject(Quaternion start, Quaternion end, float duration)
	{
		return null;
	}

	[Token(Token = "0x600089D")]
	[Address(RVA = "0x1918E7C", Offset = "0x1918E7C", VA = "0x1918E7C")]
	public OpenDoorLitte()
	{
	}
}
[Token(Token = "0x20001BB")]
public class OpenMachineManager : MonoBehaviour
{
	[Token(Token = "0x20001BC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D691C", Offset = "0x8D691C")]
	private sealed class <WaitForTextStart2>d__44 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OpenMachineManager <>4__this;

		[Token(Token = "0x170000F4")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60008BF")]
			[Address(RVA = "0xE88D90", Offset = "0xE88D90", VA = "0xE88D90", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F5")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60008C1")]
			[Address(RVA = "0xE88DD8", Offset = "0xE88DD8", VA = "0xE88DD8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60008BC")]
		[Address(RVA = "0xE88B0C", Offset = "0xE88B0C", VA = "0xE88B0C")]
		[DebuggerHidden]
		public <WaitForTextStart2>d__44(int <>1__state)
		{
		}

		[Token(Token = "0x60008BD")]
		[Address(RVA = "0xE88B38", Offset = "0xE88B38", VA = "0xE88B38", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60008BE")]
		[Address(RVA = "0xE88B3C", Offset = "0xE88B3C", VA = "0xE88B3C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60008C0")]
		[Address(RVA = "0xE88D98", Offset = "0xE88D98", VA = "0xE88D98", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001BD")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D692C", Offset = "0x8D692C")]
	private sealed class <WaitForTextStart>d__45 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OpenMachineManager <>4__this;

		[Token(Token = "0x170000F6")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60008C5")]
			[Address(RVA = "0xE89124", Offset = "0xE89124", VA = "0xE89124", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F7")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60008C7")]
			[Address(RVA = "0xE8916C", Offset = "0xE8916C", VA = "0xE8916C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60008C2")]
		[Address(RVA = "0xE88DE0", Offset = "0xE88DE0", VA = "0xE88DE0")]
		[DebuggerHidden]
		public <WaitForTextStart>d__45(int <>1__state)
		{
		}

		[Token(Token = "0x60008C3")]
		[Address(RVA = "0xE88E0C", Offset = "0xE88E0C", VA = "0xE88E0C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60008C4")]
		[Address(RVA = "0xE88E10", Offset = "0xE88E10", VA = "0xE88E10", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60008C6")]
		[Address(RVA = "0xE8912C", Offset = "0xE8912C", VA = "0xE8912C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000A4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool doorOpen;

	[Token(Token = "0x4000A4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string[] keyPadCode;

	[Token(Token = "0x4000A4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string codeEntered;

	[Token(Token = "0x4000A4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string tempString;

	[Token(Token = "0x4000A4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TextOverTime textOverTime;

	[Token(Token = "0x4000A4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string[] m_DialogSentences;

	[Token(Token = "0x4000A50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int mCurrentSentence;

	[Token(Token = "0x4000A51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AudioSource screenSound;

	[Token(Token = "0x4000A52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Text screenText;

	[Token(Token = "0x4000A53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public TechnoWarriorManager technoWarriorManager;

	[Token(Token = "0x4000A54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public CKManager ckManager;

	[Token(Token = "0x4000A55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool ckCodeEntered;

	[Token(Token = "0x4000A56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
	public bool twCodeEntered;

	[Token(Token = "0x4000A57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x72")]
	public bool ckOMCodeEntered;

	[Token(Token = "0x4000A58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x73")]
	public bool twOMCodeEntered;

	[Token(Token = "0x4000A59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public OpenTheCab openTheCab;

	[Token(Token = "0x4000A5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public AudioSource correctSound;

	[Token(Token = "0x4000A5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public AudioSource wrongSound;

	[Token(Token = "0x4000A5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public GameObject screen1;

	[Token(Token = "0x4000A5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public GameObject screen2;

	[Token(Token = "0x4000A5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public GameObject screen3;

	[Token(Token = "0x4000A5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public GameObject screen4;

	[Token(Token = "0x4000A60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public GameObject screen5;

	[Token(Token = "0x4000A61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public GameObject screen6;

	[Token(Token = "0x60008A4")]
	[Address(RVA = "0x1918E8C", Offset = "0x1918E8C", VA = "0x1918E8C")]
	private void Start()
	{
	}

	[Token(Token = "0x60008A5")]
	[Address(RVA = "0x1918F30", Offset = "0x1918F30", VA = "0x1918F30")]
	public void checkCodes()
	{
	}

	[Token(Token = "0x60008A6")]
	[Address(RVA = "0x191935C", Offset = "0x191935C", VA = "0x191935C")]
	public void startTheEnd()
	{
	}

	[Token(Token = "0x60008A7")]
	[Address(RVA = "0x1919414", Offset = "0x1919414", VA = "0x1919414")]
	public void changeTheText()
	{
	}

	[Token(Token = "0x60008A8")]
	[Address(RVA = "0x1919AF4", Offset = "0x1919AF4", VA = "0x1919AF4")]
	public void onePressed()
	{
	}

	[Token(Token = "0x60008A9")]
	[Address(RVA = "0x1919BE4", Offset = "0x1919BE4", VA = "0x1919BE4")]
	public void twoPressed()
	{
	}

	[Token(Token = "0x60008AA")]
	[Address(RVA = "0x1919CD4", Offset = "0x1919CD4", VA = "0x1919CD4")]
	public void threePressed()
	{
	}

	[Token(Token = "0x60008AB")]
	[Address(RVA = "0x1919DC4", Offset = "0x1919DC4", VA = "0x1919DC4")]
	public void fourPressed()
	{
	}

	[Token(Token = "0x60008AC")]
	[Address(RVA = "0x1919EB4", Offset = "0x1919EB4", VA = "0x1919EB4")]
	public void shoot1Pressed()
	{
	}

	[Token(Token = "0x60008AD")]
	[Address(RVA = "0x1919FA4", Offset = "0x1919FA4", VA = "0x1919FA4")]
	public void reload1Pressed()
	{
	}

	[Token(Token = "0x60008AE")]
	[Address(RVA = "0x191A094", Offset = "0x191A094", VA = "0x191A094")]
	public void melee1Pressed()
	{
	}

	[Token(Token = "0x60008AF")]
	[Address(RVA = "0x191A184", Offset = "0x191A184", VA = "0x191A184")]
	public void shoot2Pressed()
	{
	}

	[Token(Token = "0x60008B0")]
	[Address(RVA = "0x191A274", Offset = "0x191A274", VA = "0x191A274")]
	public void reload2Pressed()
	{
	}

	[Token(Token = "0x60008B1")]
	[Address(RVA = "0x191A364", Offset = "0x191A364", VA = "0x191A364")]
	public void melee2Pressed()
	{
	}

	[Token(Token = "0x60008B2")]
	[Address(RVA = "0x191A454", Offset = "0x191A454", VA = "0x191A454")]
	public void shoot3Pressed()
	{
	}

	[Token(Token = "0x60008B3")]
	[Address(RVA = "0x191A544", Offset = "0x191A544", VA = "0x191A544")]
	public void reload3Pressed()
	{
	}

	[Token(Token = "0x60008B4")]
	[Address(RVA = "0x191A634", Offset = "0x191A634", VA = "0x191A634")]
	public void melee3Pressed()
	{
	}

	[Token(Token = "0x60008B5")]
	[Address(RVA = "0x191A724", Offset = "0x191A724", VA = "0x191A724")]
	public void shoot4Pressed()
	{
	}

	[Token(Token = "0x60008B6")]
	[Address(RVA = "0x191A814", Offset = "0x191A814", VA = "0x191A814")]
	public void reload4Pressed()
	{
	}

	[Token(Token = "0x60008B7")]
	[Address(RVA = "0x191A904", Offset = "0x191A904", VA = "0x191A904")]
	public void melee4Pressed()
	{
	}

	[Token(Token = "0x60008B8")]
	[Address(RVA = "0x1918EB8", Offset = "0x1918EB8", VA = "0x1918EB8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E1468", Offset = "0x8E1468")]
	private IEnumerator WaitForTextStart2()
	{
		return null;
	}

	[Token(Token = "0x60008B9")]
	[Address(RVA = "0x19192E4", Offset = "0x19192E4", VA = "0x19192E4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E14C8", Offset = "0x8E14C8")]
	private IEnumerator WaitForTextStart()
	{
		return null;
	}

	[Token(Token = "0x60008BA")]
	[Address(RVA = "0x191A9F4", Offset = "0x191A9F4", VA = "0x191A9F4")]
	private void Update()
	{
	}

	[Token(Token = "0x60008BB")]
	[Address(RVA = "0x191A9F8", Offset = "0x191A9F8", VA = "0x191A9F8")]
	public OpenMachineManager()
	{
	}
}
[Token(Token = "0x20001BE")]
public class OpenTheCab : MonoBehaviour
{
	[Token(Token = "0x20001BF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D693C", Offset = "0x8D693C")]
	private sealed class <Rotate>d__14 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OpenTheCab <>4__this;

		[Token(Token = "0x4000A76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float duration;

		[Token(Token = "0x4000A77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <startRotation>5__2;

		[Token(Token = "0x4000A78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <endRotation>5__3;

		[Token(Token = "0x4000A79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <t>5__4;

		[Token(Token = "0x170000F8")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60008D0")]
			[Address(RVA = "0xE89750", Offset = "0xE89750", VA = "0xE89750", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F9")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60008D2")]
			[Address(RVA = "0xE89798", Offset = "0xE89798", VA = "0xE89798", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60008CD")]
		[Address(RVA = "0xE89174", Offset = "0xE89174", VA = "0xE89174")]
		[DebuggerHidden]
		public <Rotate>d__14(int <>1__state)
		{
		}

		[Token(Token = "0x60008CE")]
		[Address(RVA = "0xE891A0", Offset = "0xE891A0", VA = "0xE891A0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60008CF")]
		[Address(RVA = "0xE891A4", Offset = "0xE891A4", VA = "0xE891A4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60008D1")]
		[Address(RVA = "0xE89758", Offset = "0xE89758", VA = "0xE89758", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000A68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool testItOut;

	[Token(Token = "0x4000A69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ParticleSystem leftSmoke;

	[Token(Token = "0x4000A6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ParticleSystem rightSmoke;

	[Token(Token = "0x4000A6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform theCab;

	[Token(Token = "0x4000A6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AudioSource cabNoises;

	[Token(Token = "0x4000A6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AudioSource mainMusic;

	[Token(Token = "0x4000A6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AudioSource vrHeadset;

	[Token(Token = "0x4000A6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool arcadeOnlyMode;

	[Token(Token = "0x4000A70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private TextSynchronizer textSynchronizer;

	[Token(Token = "0x4000A71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public PhraseAsset phraseAssetBreakRoom;

	[Token(Token = "0x4000A72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject roboCaption;

	[Token(Token = "0x60008C8")]
	[Address(RVA = "0x191AA00", Offset = "0x191AA00", VA = "0x191AA00")]
	private void Start()
	{
	}

	[Token(Token = "0x60008C9")]
	[Address(RVA = "0x191AAFC", Offset = "0x191AAFC", VA = "0x191AAFC")]
	private void Update()
	{
	}

	[Token(Token = "0x60008CA")]
	[Address(RVA = "0x1919AC4", Offset = "0x1919AC4", VA = "0x1919AC4")]
	public void OpenItUp()
	{
	}

	[Token(Token = "0x60008CB")]
	[Address(RVA = "0x191AB3C", Offset = "0x191AB3C", VA = "0x191AB3C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E15C8", Offset = "0x8E15C8")]
	private IEnumerator Rotate(float duration)
	{
		return null;
	}

	[Token(Token = "0x60008CC")]
	[Address(RVA = "0x191ABC4", Offset = "0x191ABC4", VA = "0x191ABC4")]
	public OpenTheCab()
	{
	}
}
[Token(Token = "0x20001C0")]
public class PaintingManager : MonoBehaviour
{
	[Token(Token = "0x4000A7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject logoPainting;

	[Token(Token = "0x4000A7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject ratingPainting;

	[Token(Token = "0x4000A7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject phoneInstructions;

	[Token(Token = "0x4000A7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject eightiesPoster;

	[Token(Token = "0x4000A7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject controllerInstructions;

	[Token(Token = "0x4000A7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject lunaBeatPoster;

	[Token(Token = "0x4000A80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject credits1;

	[Token(Token = "0x4000A81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject credits2;

	[Token(Token = "0x4000A82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject phone;

	[Token(Token = "0x4000A83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject old80sPhoto;

	[Token(Token = "0x4000A84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject rcpPoster;

	[Token(Token = "0x4000A85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject rcpEndPoster;

	[Token(Token = "0x60008D3")]
	[Address(RVA = "0x10518B4", Offset = "0x10518B4", VA = "0x10518B4")]
	private void Start()
	{
	}

	[Token(Token = "0x60008D4")]
	[Address(RVA = "0x1051A08", Offset = "0x1051A08", VA = "0x1051A08")]
	private void Update()
	{
	}

	[Token(Token = "0x60008D5")]
	[Address(RVA = "0x1051A0C", Offset = "0x1051A0C", VA = "0x1051A0C")]
	public PaintingManager()
	{
	}
}
[Token(Token = "0x20001C1")]
public class ParentToDrawer : MonoBehaviour
{
	[Token(Token = "0x60008D6")]
	[Address(RVA = "0x1051DC8", Offset = "0x1051DC8", VA = "0x1051DC8")]
	private void Start()
	{
	}

	[Token(Token = "0x60008D7")]
	[Address(RVA = "0x1051DCC", Offset = "0x1051DCC", VA = "0x1051DCC")]
	private void Update()
	{
	}

	[Token(Token = "0x60008D8")]
	[Address(RVA = "0x1051DD0", Offset = "0x1051DD0", VA = "0x1051DD0")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x60008D9")]
	[Address(RVA = "0x1051F04", Offset = "0x1051F04", VA = "0x1051F04")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60008DA")]
	[Address(RVA = "0x1052014", Offset = "0x1052014", VA = "0x1052014")]
	public ParentToDrawer()
	{
	}
}
[Token(Token = "0x20001C2")]
public class ParentingSphere : MonoBehaviour
{
	[Token(Token = "0x4000A86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Animator animatorClaw;

	[Token(Token = "0x4000A87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject parentObject;

	[Token(Token = "0x4000A88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool parentOnce;

	[Token(Token = "0x4000A89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Rigidbody collidedRigidbody;

	[Token(Token = "0x60008DB")]
	[Address(RVA = "0x105201C", Offset = "0x105201C", VA = "0x105201C")]
	private void OnTriggerStay(Collider other)
	{
	}

	[Token(Token = "0x60008DC")]
	[Address(RVA = "0x10522BC", Offset = "0x10522BC", VA = "0x10522BC")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x60008DD")]
	[Address(RVA = "0x1052434", Offset = "0x1052434", VA = "0x1052434")]
	private void Start()
	{
	}

	[Token(Token = "0x60008DE")]
	[Address(RVA = "0x1052438", Offset = "0x1052438", VA = "0x1052438")]
	private void Update()
	{
	}

	[Token(Token = "0x60008DF")]
	[Address(RVA = "0x105243C", Offset = "0x105243C", VA = "0x105243C")]
	public ParentingSphere()
	{
	}
}
[Token(Token = "0x20001C3")]
public class PenguinDetectionCollider : MonoBehaviour
{
	[Token(Token = "0x60008E0")]
	[Address(RVA = "0x1052778", Offset = "0x1052778", VA = "0x1052778")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60008E1")]
	[Address(RVA = "0x1052838", Offset = "0x1052838", VA = "0x1052838")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x60008E2")]
	[Address(RVA = "0x10528F8", Offset = "0x10528F8", VA = "0x10528F8")]
	public PenguinDetectionCollider()
	{
	}
}
[Token(Token = "0x20001C4")]
public class PenguinStandChange : MonoBehaviour
{
	[Token(Token = "0x4000A8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject penguinCubeBase;

	[Token(Token = "0x60008E3")]
	[Address(RVA = "0x1052900", Offset = "0x1052900", VA = "0x1052900")]
	public PenguinStandChange()
	{
	}
}
[Token(Token = "0x20001C5")]
public class PhoneButtonManager : MonoBehaviour
{
	[Token(Token = "0x4000A8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SmartPhoneManager smartPhoneManager;

	[Token(Token = "0x60008E4")]
	[Address(RVA = "0x1052908", Offset = "0x1052908", VA = "0x1052908")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x60008E5")]
	[Address(RVA = "0x1052998", Offset = "0x1052998", VA = "0x1052998")]
	private void Start()
	{
	}

	[Token(Token = "0x60008E6")]
	[Address(RVA = "0x105299C", Offset = "0x105299C", VA = "0x105299C")]
	private void Update()
	{
	}

	[Token(Token = "0x60008E7")]
	[Address(RVA = "0x10529A0", Offset = "0x10529A0", VA = "0x10529A0")]
	public PhoneButtonManager()
	{
	}
}
[Token(Token = "0x20001C6")]
public class PhoneButtonPress : MonoBehaviour
{
	[Token(Token = "0x4000A8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UnityEvent buttonPressed;

	[Token(Token = "0x4000A8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SmartPhoneManager smartPhoneManager;

	[Token(Token = "0x60008E8")]
	[Address(RVA = "0x10529A8", Offset = "0x10529A8", VA = "0x10529A8")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60008E9")]
	[Address(RVA = "0x1052AD4", Offset = "0x1052AD4", VA = "0x1052AD4")]
	private void Start()
	{
	}

	[Token(Token = "0x60008EA")]
	[Address(RVA = "0x1052AD8", Offset = "0x1052AD8", VA = "0x1052AD8")]
	private void Update()
	{
	}

	[Token(Token = "0x60008EB")]
	[Address(RVA = "0x1052ADC", Offset = "0x1052ADC", VA = "0x1052ADC")]
	public PhoneButtonPress()
	{
	}
}
[Token(Token = "0x20001C7")]
public class PicoPauser : MonoBehaviour
{
	[Token(Token = "0x20001C8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D694C", Offset = "0x8D694C")]
	private sealed class <startStuff>d__19 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000AA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000AA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float secs;

		[Token(Token = "0x4000AA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public PicoPauser <>4__this;

		[Token(Token = "0x4000AA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <cd>5__2;

		[Token(Token = "0x170000FA")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60008F6")]
			[Address(RVA = "0xE8BDEC", Offset = "0xE8BDEC", VA = "0xE8BDEC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000FB")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60008F8")]
			[Address(RVA = "0xE8BE34", Offset = "0xE8BE34", VA = "0xE8BE34", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60008F3")]
		[Address(RVA = "0xE8BCDC", Offset = "0xE8BCDC", VA = "0xE8BCDC")]
		[DebuggerHidden]
		public <startStuff>d__19(int <>1__state)
		{
		}

		[Token(Token = "0x60008F4")]
		[Address(RVA = "0xE8BD08", Offset = "0xE8BD08", VA = "0xE8BD08", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60008F5")]
		[Address(RVA = "0xE8BD0C", Offset = "0xE8BD0C", VA = "0xE8BD0C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60008F7")]
		[Address(RVA = "0xE8BDF4", Offset = "0xE8BDF4", VA = "0xE8BDF4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000A8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioSource[] sources;

	[Token(Token = "0x4000A8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public PlayableDirector[] timelines;

	[Token(Token = "0x4000A90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private PlayableDirector theTimeLinePlaying;

	[Token(Token = "0x4000A91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private PlayableDirector[] theTimeLinesPlaying;

	[Token(Token = "0x4000A92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int timelinecounter;

	[Token(Token = "0x4000A93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool[] timeLineIsPlaying;

	[Token(Token = "0x4000A94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float timeScale;

	[Token(Token = "0x4000A95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private bool headSetOffOnce;

	[Token(Token = "0x4000A96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
	private bool headSetOnOnce;

	[Token(Token = "0x4000A97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4E")]
	private bool pauseOnce;

	[Token(Token = "0x4000A98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4F")]
	private bool unpauseOnce;

	[Token(Token = "0x4000A99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool wornTheFirstTime;

	[Token(Token = "0x4000A9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
	private bool gamePaused;

	[Token(Token = "0x4000A9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public MediaPlayer[] movies;

	[Token(Token = "0x4000A9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private MediaPlayer[] theMoviesPlaying;

	[Token(Token = "0x4000A9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int movieCounter;

	[Token(Token = "0x4000A9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool[] movieIsPlaying;

	[Token(Token = "0x60008EC")]
	[Address(RVA = "0x1052AE4", Offset = "0x1052AE4", VA = "0x1052AE4")]
	private void Awake()
	{
	}

	[Token(Token = "0x60008ED")]
	[Address(RVA = "0x1052DBC", Offset = "0x1052DBC", VA = "0x1052DBC")]
	private void GotANewOneLoaded(Scene scene, LoadSceneMode mode)
	{
	}

	[Token(Token = "0x60008EE")]
	[Address(RVA = "0x1052D34", Offset = "0x1052D34", VA = "0x1052D34")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E1678", Offset = "0x8E1678")]
	private IEnumerator startStuff(float secs)
	{
		return null;
	}

	[Token(Token = "0x60008EF")]
	[Address(RVA = "0x1052F68", Offset = "0x1052F68", VA = "0x1052F68")]
	private void Start()
	{
	}

	[Token(Token = "0x60008F0")]
	[Address(RVA = "0x10531C4", Offset = "0x10531C4", VA = "0x10531C4")]
	private void HandleFocusAcquired()
	{
	}

	[Token(Token = "0x60008F1")]
	[Address(RVA = "0x1053378", Offset = "0x1053378", VA = "0x1053378")]
	private void HandleFocusLost()
	{
	}

	[Token(Token = "0x60008F2")]
	[Address(RVA = "0x10538D0", Offset = "0x10538D0", VA = "0x10538D0")]
	public PicoPauser()
	{
	}
}
[Token(Token = "0x20001C9")]
public class PicoPauser2 : MonoBehaviour
{
	[Token(Token = "0x4000AA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioSource[] sources;

	[Token(Token = "0x4000AA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public PlayableDirector[] timelines;

	[Token(Token = "0x4000AA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public MediaPlayer[] movies;

	[Token(Token = "0x4000AA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private PlayableDirector theTimeLinePlaying;

	[Token(Token = "0x4000AA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private PlayableDirector[] theTimeLinesPlaying;

	[Token(Token = "0x4000AA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private MediaPlayer[] theMoviesPlaying;

	[Token(Token = "0x4000AAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int timelinecounter;

	[Token(Token = "0x4000AAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private int movieCounter;

	[Token(Token = "0x4000AAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool[] timeLineIsPlaying;

	[Token(Token = "0x4000AAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool[] movieIsPlaying;

	[Token(Token = "0x4000AAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float timeScale;

	[Token(Token = "0x4000AAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private bool headSetOffOnce;

	[Token(Token = "0x4000AB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
	private bool headSetOnOnce;

	[Token(Token = "0x4000AB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x66")]
	private bool pauseOnce;

	[Token(Token = "0x4000AB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x67")]
	private bool unpauseOnce;

	[Token(Token = "0x4000AB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool wornTheFirstTime;

	[Token(Token = "0x4000AB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
	private bool gamePaused;

	[Token(Token = "0x4000AB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6A")]
	public bool isPaused;

	[Token(Token = "0x4000AB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6B")]
	public bool pausedFromFocus;

	[Token(Token = "0x4000AB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public bool pausedFromHeadSetRemoved;

	[Token(Token = "0x4000AB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6D")]
	public bool onlyPauseOnce;

	[Token(Token = "0x60008F9")]
	[Address(RVA = "0x10538EC", Offset = "0x10538EC", VA = "0x10538EC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60008FA")]
	[Address(RVA = "0x1053B6C", Offset = "0x1053B6C", VA = "0x1053B6C")]
	private void GotANewOneLoaded(Scene scene, LoadSceneMode mode)
	{
	}

	[Token(Token = "0x60008FB")]
	[Address(RVA = "0x1053CFC", Offset = "0x1053CFC", VA = "0x1053CFC")]
	private void Start()
	{
	}

	[Token(Token = "0x60008FC")]
	[Address(RVA = "0x1053E78", Offset = "0x1053E78", VA = "0x1053E78")]
	private void HandleFocusAcquired()
	{
	}

	[Token(Token = "0x60008FD")]
	[Address(RVA = "0x105402C", Offset = "0x105402C", VA = "0x105402C")]
	private void HandleFocusLost()
	{
	}

	[Token(Token = "0x60008FE")]
	[Address(RVA = "0x1054578", Offset = "0x1054578", VA = "0x1054578")]
	public PicoPauser2()
	{
	}
}
[Token(Token = "0x20001CA")]
public class PinBallButtonPress : MonoBehaviour
{
	[Token(Token = "0x4000AB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Animator buttonPush;

	[Token(Token = "0x4000ABA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject handTouchingButton;

	[Token(Token = "0x4000ABB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool canPress;

	[Token(Token = "0x4000ABC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float waitTime;

	[Token(Token = "0x4000ABD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public FlipperScript flipperScript;

	[Token(Token = "0x4000ABE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public FlipperScript upperFlipperScript;

	[Token(Token = "0x4000ABF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool isLeft;

	[Token(Token = "0x60008FF")]
	[Address(RVA = "0x1054594", Offset = "0x1054594", VA = "0x1054594")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000900")]
	[Address(RVA = "0x10546F0", Offset = "0x10546F0", VA = "0x10546F0")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000901")]
	[Address(RVA = "0x1054814", Offset = "0x1054814", VA = "0x1054814")]
	private void Start()
	{
	}

	[Token(Token = "0x6000902")]
	[Address(RVA = "0x1054880", Offset = "0x1054880", VA = "0x1054880")]
	public PinBallButtonPress()
	{
	}
}
[Token(Token = "0x20001CB")]
public class PinballController : MonoBehaviour
{
	[Token(Token = "0x4000AC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool buttonPressed;

	[Token(Token = "0x4000AC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool isLeft;

	[Token(Token = "0x4000AC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public FlipperScript flipperScript;

	[Token(Token = "0x4000AC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public FlipperScript upperFlipperScript;

	[Token(Token = "0x4000AC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AudioClip flipperUpSound;

	[Token(Token = "0x4000AC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AudioClip flipperDownSound;

	[Token(Token = "0x4000AC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool playUpSoundOnce;

	[Token(Token = "0x4000AC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	public bool playDownSoundOnce;

	[Token(Token = "0x4000AC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x42")]
	public bool showTheHint;

	[Token(Token = "0x4000AC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x43")]
	public bool waitToRemoveHint;

	[Token(Token = "0x4000ACA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public string theHoveringHand;

	[Token(Token = "0x4000ACB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool leftHand;

	[Token(Token = "0x4000ACC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
	public bool rightHand;

	[Token(Token = "0x4000ACD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject rightControllerModel;

	[Token(Token = "0x4000ACE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject leftControllerModel;

	[Token(Token = "0x6000903")]
	[Address(RVA = "0x1054898", Offset = "0x1054898", VA = "0x1054898")]
	private void Start()
	{
	}

	[Token(Token = "0x6000904")]
	[Address(RVA = "0x10548A8", Offset = "0x10548A8", VA = "0x10548A8")]
	private void OnTriggerEnter(Collider otherCollider)
	{
	}

	[Token(Token = "0x6000905")]
	[Address(RVA = "0x10549C8", Offset = "0x10549C8", VA = "0x10549C8")]
	private void OnTriggerExit(Collider otherCollider)
	{
	}

	[Token(Token = "0x6000906")]
	[Address(RVA = "0x1054A8C", Offset = "0x1054A8C", VA = "0x1054A8C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000907")]
	[Address(RVA = "0x1054F80", Offset = "0x1054F80", VA = "0x1054F80")]
	public PinballController()
	{
	}
}
[Token(Token = "0x20001CC")]
public class PinballDetector : MonoBehaviour
{
	[Token(Token = "0x6000908")]
	[Address(RVA = "0x1054F88", Offset = "0x1054F88", VA = "0x1054F88")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000909")]
	[Address(RVA = "0x1055034", Offset = "0x1055034", VA = "0x1055034")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x600090A")]
	[Address(RVA = "0x10550DC", Offset = "0x10550DC", VA = "0x10550DC")]
	public PinballDetector()
	{
	}
}
[Token(Token = "0x20001CD")]
public class PinballManager : MonoBehaviour
{
	[Token(Token = "0x4000ACF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Rigidbody ballRigidBody;

	[Token(Token = "0x4000AD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float powerBall;

	[Token(Token = "0x4000AD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform shaft;

	[Token(Token = "0x4000AD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool shootTheBall;

	[Token(Token = "0x4000AD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public int gameScore;

	[Token(Token = "0x4000AD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Text scoreText;

	[Token(Token = "0x4000AD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Text ballText;

	[Token(Token = "0x4000AD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Text highScoreText;

	[Token(Token = "0x4000AD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public int gameBalls;

	[Token(Token = "0x4000AD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public int highScore;

	[Token(Token = "0x4000AD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool pinballReady;

	[Token(Token = "0x4000ADA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public int gameHighScoreAtStart;

	[Token(Token = "0x600090B")]
	[Address(RVA = "0x10550E4", Offset = "0x10550E4", VA = "0x10550E4")]
	private void Start()
	{
	}

	[Token(Token = "0x600090C")]
	[Address(RVA = "0x1055200", Offset = "0x1055200", VA = "0x1055200")]
	public void AddScore(int theScore)
	{
	}

	[Token(Token = "0x600090D")]
	[Address(RVA = "0x105529C", Offset = "0x105529C", VA = "0x105529C")]
	public void AddABall()
	{
	}

	[Token(Token = "0x600090E")]
	[Address(RVA = "0x10553A0", Offset = "0x10553A0", VA = "0x10553A0")]
	public void StartTheGame()
	{
	}

	[Token(Token = "0x600090F")]
	[Address(RVA = "0x10554B4", Offset = "0x10554B4", VA = "0x10554B4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000910")]
	[Address(RVA = "0x10554B8", Offset = "0x10554B8", VA = "0x10554B8")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000911")]
	[Address(RVA = "0x1055530", Offset = "0x1055530", VA = "0x1055530")]
	public PinballManager()
	{
	}
}
[Token(Token = "0x20001CE")]
public class PinballModifier : MonoBehaviour
{
	[Token(Token = "0x4000ADB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float maxSpeed;

	[Token(Token = "0x4000ADC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool pinballAtStart;

	[Token(Token = "0x4000ADD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform snapTo;

	[Token(Token = "0x4000ADE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Rigidbody body;

	[Token(Token = "0x4000ADF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float snapTime;

	[Token(Token = "0x4000AE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool notActive;

	[Token(Token = "0x4000AE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float dropTimer;

	[Token(Token = "0x4000AE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public PinballManager pinballManager;

	[Token(Token = "0x4000AE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool pinballStuck;

	[Token(Token = "0x6000912")]
	[Address(RVA = "0x1055540", Offset = "0x1055540", VA = "0x1055540")]
	private void Start()
	{
	}

	[Token(Token = "0x6000913")]
	[Address(RVA = "0x105562C", Offset = "0x105562C", VA = "0x105562C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000914")]
	[Address(RVA = "0x10559A0", Offset = "0x10559A0", VA = "0x10559A0")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000915")]
	[Address(RVA = "0x1055A4C", Offset = "0x1055A4C", VA = "0x1055A4C")]
	public void HaveBallFlyBack()
	{
	}

	[Token(Token = "0x6000916")]
	[Address(RVA = "0x1055AB8", Offset = "0x1055AB8", VA = "0x1055AB8")]
	public PinballModifier()
	{
	}
}
[Token(Token = "0x20001CF")]
public class PinballStartButtonPress : MonoBehaviour
{
	[Token(Token = "0x20001D0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D695C", Offset = "0x8D695C")]
	private sealed class <WaitForSound>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000AEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000AEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000AEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PinballStartButtonPress <>4__this;

		[Token(Token = "0x170000FC")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600091E")]
			[Address(RVA = "0xE8BF34", Offset = "0xE8BF34", VA = "0xE8BF34", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000FD")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000920")]
			[Address(RVA = "0xE8BF7C", Offset = "0xE8BF7C", VA = "0xE8BF7C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600091B")]
		[Address(RVA = "0xE8BE3C", Offset = "0xE8BE3C", VA = "0xE8BE3C")]
		[DebuggerHidden]
		public <WaitForSound>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x600091C")]
		[Address(RVA = "0xE8BE68", Offset = "0xE8BE68", VA = "0xE8BE68", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600091D")]
		[Address(RVA = "0xE8BE6C", Offset = "0xE8BE6C", VA = "0xE8BE6C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600091F")]
		[Address(RVA = "0xE8BF3C", Offset = "0xE8BF3C", VA = "0xE8BF3C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000AE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Animator buttonPush;

	[Token(Token = "0x4000AE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject handTouchingButton;

	[Token(Token = "0x4000AE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool canPress;

	[Token(Token = "0x4000AE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float waitTime;

	[Token(Token = "0x4000AE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public PinballManager pinballManager;

	[Token(Token = "0x4000AE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject activePinball;

	[Token(Token = "0x6000917")]
	[Address(RVA = "0x1055AD0", Offset = "0x1055AD0", VA = "0x1055AD0")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000918")]
	[Address(RVA = "0x1055DCC", Offset = "0x1055DCC", VA = "0x1055DCC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000919")]
	[Address(RVA = "0x1055D54", Offset = "0x1055D54", VA = "0x1055D54")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E1728", Offset = "0x8E1728")]
	private IEnumerator WaitForSound()
	{
		return null;
	}

	[Token(Token = "0x600091A")]
	[Address(RVA = "0x1055E38", Offset = "0x1055E38", VA = "0x1055E38")]
	public PinballStartButtonPress()
	{
	}
}
[Token(Token = "0x20001D1")]
public class DemoManager : MonoBehaviour
{
	[Token(Token = "0x4000AED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text text;

	[Token(Token = "0x4000AEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject[] effects;

	[Token(Token = "0x4000AEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected int currentIndex;

	[Token(Token = "0x4000AF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected List<Vector3> initPos;

	[Token(Token = "0x6000921")]
	[Address(RVA = "0x108B5D8", Offset = "0x108B5D8", VA = "0x108B5D8")]
	public void Start()
	{
	}

	[Token(Token = "0x6000922")]
	[Address(RVA = "0x108B6DC", Offset = "0x108B6DC", VA = "0x108B6DC")]
	public void GetInitPos()
	{
	}

	[Token(Token = "0x6000923")]
	[Address(RVA = "0x108B87C", Offset = "0x108B87C", VA = "0x108B87C")]
	public void IncreaseIndex()
	{
	}

	[Token(Token = "0x6000924")]
	[Address(RVA = "0x108B9BC", Offset = "0x108B9BC", VA = "0x108B9BC")]
	public void DecreaseIndex()
	{
	}

	[Token(Token = "0x6000925")]
	[Address(RVA = "0x108B798", Offset = "0x108B798", VA = "0x108B798")]
	public void UpdateText()
	{
	}

	[Token(Token = "0x6000926")]
	[Address(RVA = "0x108BB00", Offset = "0x108BB00", VA = "0x108BB00")]
	public void Replay()
	{
	}

	[Token(Token = "0x6000927")]
	[Address(RVA = "0x108BC24", Offset = "0x108BC24", VA = "0x108BC24")]
	public DemoManager()
	{
	}
}
[Token(Token = "0x20001D2")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8D696C", Offset = "0x8D696C")]
public class FairyDustRandomPosition : MonoBehaviour
{
	[Token(Token = "0x4000AF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float intervalInSec;

	[Token(Token = "0x4000AF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector3 minCoord;

	[Token(Token = "0x4000AF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector3 maxCoord;

	[Token(Token = "0x4000AF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float speed;

	[Token(Token = "0x4000AF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float maxVelocityMagnitude;

	[Token(Token = "0x4000AF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	protected Vector3 initPos;

	[Token(Token = "0x4000AF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	protected Rigidbody rgbd;

	[Token(Token = "0x4000AF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	protected Vector3 nextPos;

	[Token(Token = "0x6000928")]
	[Address(RVA = "0x109396C", Offset = "0x109396C", VA = "0x109396C")]
	public void Awake()
	{
	}

	[Token(Token = "0x6000929")]
	[Address(RVA = "0x10939C8", Offset = "0x10939C8", VA = "0x10939C8")]
	public void Start()
	{
	}

	[Token(Token = "0x600092A")]
	[Address(RVA = "0x1093A58", Offset = "0x1093A58", VA = "0x1093A58")]
	public void FixedUpdate()
	{
	}

	[Token(Token = "0x600092B")]
	[Address(RVA = "0x1093B24", Offset = "0x1093B24", VA = "0x1093B24")]
	public void GetNextPosition()
	{
	}

	[Token(Token = "0x600092C")]
	[Address(RVA = "0x1093BA8", Offset = "0x1093BA8", VA = "0x1093BA8")]
	public FairyDustRandomPosition()
	{
	}
}
[Token(Token = "0x20001D3")]
public class FairyMeteorAddForceDemo : MonoBehaviour
{
	[Token(Token = "0x4000AF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int strength;

	[Token(Token = "0x4000AFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector3 direction;

	[Token(Token = "0x4000AFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected Rigidbody rgbd;

	[Token(Token = "0x600092D")]
	[Address(RVA = "0x1093BB0", Offset = "0x1093BB0", VA = "0x1093BB0")]
	public void Awake()
	{
	}

	[Token(Token = "0x600092E")]
	[Address(RVA = "0x1093C0C", Offset = "0x1093C0C", VA = "0x1093C0C")]
	public void Start()
	{
	}

	[Token(Token = "0x600092F")]
	[Address(RVA = "0x1093C44", Offset = "0x1093C44", VA = "0x1093C44")]
	public FairyMeteorAddForceDemo()
	{
	}
}
[Token(Token = "0x20001D4")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8D69CC", Offset = "0x8D69CC")]
public class Fireball : MonoBehaviour
{
	[Token(Token = "0x4000AFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool pushOnAwake;

	[Token(Token = "0x4000AFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector3 startDirection;

	[Token(Token = "0x4000AFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float startMagnitude;

	[Token(Token = "0x4000AFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public ForceMode forceMode;

	[Token(Token = "0x4000B00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject fieryEffect;

	[Token(Token = "0x4000B01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject smokeEffect;

	[Token(Token = "0x4000B02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject explodeEffect;

	[Token(Token = "0x4000B03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	protected Rigidbody rgbd;

	[Token(Token = "0x6000930")]
	[Address(RVA = "0x1094764", Offset = "0x1094764", VA = "0x1094764")]
	public void Awake()
	{
	}

	[Token(Token = "0x6000931")]
	[Address(RVA = "0x10947C0", Offset = "0x10947C0", VA = "0x10947C0")]
	public void Start()
	{
	}

	[Token(Token = "0x6000932")]
	[Address(RVA = "0x10947D8", Offset = "0x10947D8", VA = "0x10947D8")]
	public void Push(Vector3 direction, float magnitude)
	{
	}

	[Token(Token = "0x6000933")]
	[Address(RVA = "0x1094840", Offset = "0x1094840", VA = "0x1094840")]
	public void OnCollisionEnter(Collision col)
	{
	}

	[Token(Token = "0x6000934")]
	[Address(RVA = "0x1094960", Offset = "0x1094960", VA = "0x1094960")]
	public void StopParticleSystem(GameObject g)
	{
	}

	[Token(Token = "0x6000935")]
	[Address(RVA = "0x1094A08", Offset = "0x1094A08", VA = "0x1094A08")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x6000936")]
	[Address(RVA = "0x1094B30", Offset = "0x1094B30", VA = "0x1094B30")]
	public Fireball()
	{
	}
}
[Token(Token = "0x20001D5")]
public class Spin : MonoBehaviour
{
	[Token(Token = "0x4000B04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float turnDegPerSec;

	[Token(Token = "0x4000B05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector3 localAxis;

	[Token(Token = "0x4000B06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected float turnDegPerFrame;

	[Token(Token = "0x6000937")]
	[Address(RVA = "0x167AEE8", Offset = "0x167AEE8", VA = "0x167AEE8")]
	public void Start()
	{
	}

	[Token(Token = "0x6000938")]
	[Address(RVA = "0x167AF20", Offset = "0x167AF20", VA = "0x167AF20")]
	public void Update()
	{
	}

	[Token(Token = "0x6000939")]
	[Address(RVA = "0x167AF58", Offset = "0x167AF58", VA = "0x167AF58")]
	public Spin()
	{
	}
}
[Token(Token = "0x20001D6")]
public class Test : MonoBehaviour
{
	[Token(Token = "0x4000B07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject testObject;

	[Token(Token = "0x600093A")]
	[Address(RVA = "0x12DFA60", Offset = "0x12DFA60", VA = "0x12DFA60")]
	private void Start()
	{
	}

	[Token(Token = "0x600093B")]
	[Address(RVA = "0x12DFA64", Offset = "0x12DFA64", VA = "0x12DFA64")]
	private void Update()
	{
	}

	[Token(Token = "0x600093C")]
	[Address(RVA = "0x12DFBBC", Offset = "0x12DFBBC", VA = "0x12DFBBC")]
	public Test()
	{
	}
}
[Token(Token = "0x20001D7")]
public class PlaySoundOnEnable : MonoBehaviour
{
	[Token(Token = "0x600093D")]
	[Address(RVA = "0x10561B0", Offset = "0x10561B0", VA = "0x10561B0")]
	private void Start()
	{
	}

	[Token(Token = "0x600093E")]
	[Address(RVA = "0x10561B4", Offset = "0x10561B4", VA = "0x10561B4")]
	private void Update()
	{
	}

	[Token(Token = "0x600093F")]
	[Address(RVA = "0x10561B8", Offset = "0x10561B8", VA = "0x10561B8")]
	public PlaySoundOnEnable()
	{
	}
}
[Token(Token = "0x20001D8")]
public class PogManager : MonoBehaviour
{
	[Token(Token = "0x6000940")]
	[Address(RVA = "0x1059448", Offset = "0x1059448", VA = "0x1059448")]
	private void Start()
	{
	}

	[Token(Token = "0x6000941")]
	[Address(RVA = "0x105944C", Offset = "0x105944C", VA = "0x105944C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000942")]
	[Address(RVA = "0x1059450", Offset = "0x1059450", VA = "0x1059450")]
	public PogManager()
	{
	}
}
[Token(Token = "0x20001D9")]
public class PogSnap : MonoBehaviour
{
	[Token(Token = "0x4000B08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform returnSpot;

	[Token(Token = "0x4000B09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject correctSpot;

	[Token(Token = "0x4000B0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool thisPieceIn;

	[Token(Token = "0x4000B0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool imDone;

	[Token(Token = "0x4000B0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject whatImCollidingWith;

	[Token(Token = "0x4000B0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int pogOnMe;

	[Token(Token = "0x4000B0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public bool snapReady;

	[Token(Token = "0x6000943")]
	[Address(RVA = "0x1059458", Offset = "0x1059458", VA = "0x1059458")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000944")]
	[Address(RVA = "0x1059504", Offset = "0x1059504", VA = "0x1059504")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000945")]
	[Address(RVA = "0x1059594", Offset = "0x1059594", VA = "0x1059594")]
	private void Start()
	{
	}

	[Token(Token = "0x6000946")]
	[Address(RVA = "0x1059598", Offset = "0x1059598", VA = "0x1059598")]
	private void Update()
	{
	}

	[Token(Token = "0x6000947")]
	[Address(RVA = "0x10596A0", Offset = "0x10596A0", VA = "0x10596A0")]
	public PogSnap()
	{
	}
}
[Token(Token = "0x20001DA")]
public class PosterSwapper : MonoBehaviour
{
	[Token(Token = "0x4000B0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material oculusPoster;

	[Token(Token = "0x4000B10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material knucklesPoster;

	[Token(Token = "0x4000B11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public MeshRenderer posterRenderer;

	[Token(Token = "0x4000B12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool checkForControllerChange;

	[Token(Token = "0x4000B13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject controllerIndex;

	[Token(Token = "0x4000B14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool findControllerModel;

	[Token(Token = "0x6000948")]
	[Address(RVA = "0x1059960", Offset = "0x1059960", VA = "0x1059960")]
	private void Start()
	{
	}

	[Token(Token = "0x6000949")]
	[Address(RVA = "0x10599F4", Offset = "0x10599F4", VA = "0x10599F4")]
	private void Update()
	{
	}

	[Token(Token = "0x600094A")]
	[Address(RVA = "0x1059AA4", Offset = "0x1059AA4", VA = "0x1059AA4")]
	public PosterSwapper()
	{
	}
}
[Token(Token = "0x20001DB")]
public class PuckBounceNoise : MonoBehaviour
{
	[Token(Token = "0x20001DC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D6A2C", Offset = "0x8D6A2C")]
	private sealed class <StartAdjustingPitchAndSpeed>d__10 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000B1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PuckBounceNoise <>4__this;

		[Token(Token = "0x170000FE")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000956")]
			[Address(RVA = "0xE8C6FC", Offset = "0xE8C6FC", VA = "0xE8C6FC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000FF")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000958")]
			[Address(RVA = "0xE8C744", Offset = "0xE8C744", VA = "0xE8C744", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000953")]
		[Address(RVA = "0xE8C60C", Offset = "0xE8C60C", VA = "0xE8C60C")]
		[DebuggerHidden]
		public <StartAdjustingPitchAndSpeed>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x6000954")]
		[Address(RVA = "0xE8C638", Offset = "0xE8C638", VA = "0xE8C638", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000955")]
		[Address(RVA = "0xE8C63C", Offset = "0xE8C63C", VA = "0xE8C63C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000957")]
		[Address(RVA = "0xE8C704", Offset = "0xE8C704", VA = "0xE8C704", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000B15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioSource source;

	[Token(Token = "0x4000B16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float pitchAdjustingFrequency;

	[Token(Token = "0x4000B17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float maxSpeed;

	[Token(Token = "0x4000B18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float maxPitch;

	[Token(Token = "0x4000B19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float speed;

	[Token(Token = "0x4000B1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3 lastRecordedPosition;

	[Token(Token = "0x4000B1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float traveledDistance;

	[Token(Token = "0x4000B1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public PuckCanScore puckCanScore;

	[Token(Token = "0x600094B")]
	[Address(RVA = "0x105A314", Offset = "0x105A314", VA = "0x105A314")]
	private void Start()
	{
	}

	[Token(Token = "0x600094C")]
	[Address(RVA = "0x105A370", Offset = "0x105A370", VA = "0x105A370")]
	private void Update()
	{
	}

	[Token(Token = "0x600094D")]
	[Address(RVA = "0x105A374", Offset = "0x105A374", VA = "0x105A374")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E17D8", Offset = "0x8E17D8")]
	private IEnumerator StartAdjustingPitchAndSpeed()
	{
		return null;
	}

	[Token(Token = "0x600094E")]
	[Address(RVA = "0x105A3EC", Offset = "0x105A3EC", VA = "0x105A3EC")]
	private void UpdateSpeed()
	{
	}

	[Token(Token = "0x600094F")]
	[Address(RVA = "0x105A43C", Offset = "0x105A43C", VA = "0x105A43C")]
	private void AdjustPitch()
	{
	}

	[Token(Token = "0x6000950")]
	[Address(RVA = "0x105A46C", Offset = "0x105A46C", VA = "0x105A46C")]
	private void RecordTraveledDistance()
	{
	}

	[Token(Token = "0x6000951")]
	[Address(RVA = "0x105A500", Offset = "0x105A500", VA = "0x105A500")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000952")]
	[Address(RVA = "0x105A724", Offset = "0x105A724", VA = "0x105A724")]
	public PuckBounceNoise()
	{
	}
}
[Token(Token = "0x20001DD")]
public class PuckCanScore : MonoBehaviour
{
	[Token(Token = "0x4000B20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool puckCanScore;

	[Token(Token = "0x6000959")]
	[Address(RVA = "0x105A740", Offset = "0x105A740", VA = "0x105A740")]
	private void Start()
	{
	}

	[Token(Token = "0x600095A")]
	[Address(RVA = "0x105A74C", Offset = "0x105A74C", VA = "0x105A74C")]
	private void Update()
	{
	}

	[Token(Token = "0x600095B")]
	[Address(RVA = "0x105A750", Offset = "0x105A750", VA = "0x105A750")]
	public PuckCanScore()
	{
	}
}
[Token(Token = "0x20001DE")]
public class PuckComeBack : MonoBehaviour
{
	[Token(Token = "0x20001DF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D6A3C", Offset = "0x8D6A3C")]
	private sealed class <WaitToRespawn>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000B26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PuckComeBack <>4__this;

		[Token(Token = "0x17000100")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000962")]
			[Address(RVA = "0xE8C834", Offset = "0xE8C834", VA = "0xE8C834", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000101")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000964")]
			[Address(RVA = "0xE8C87C", Offset = "0xE8C87C", VA = "0xE8C87C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600095F")]
		[Address(RVA = "0xE8C74C", Offset = "0xE8C74C", VA = "0xE8C74C")]
		[DebuggerHidden]
		public <WaitToRespawn>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x6000960")]
		[Address(RVA = "0xE8C778", Offset = "0xE8C778", VA = "0xE8C778", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000961")]
		[Address(RVA = "0xE8C77C", Offset = "0xE8C77C", VA = "0xE8C77C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000963")]
		[Address(RVA = "0xE8C83C", Offset = "0xE8C83C", VA = "0xE8C83C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000B21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AirHockeyManager airHockeyManager;

	[Token(Token = "0x4000B22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Animator buttonPush;

	[Token(Token = "0x4000B23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool canPress;

	[Token(Token = "0x600095C")]
	[Address(RVA = "0x105A758", Offset = "0x105A758", VA = "0x105A758")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600095D")]
	[Address(RVA = "0x105A8B0", Offset = "0x105A8B0", VA = "0x105A8B0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E1888", Offset = "0x8E1888")]
	public IEnumerator WaitToRespawn()
	{
		return null;
	}

	[Token(Token = "0x600095E")]
	[Address(RVA = "0x105A928", Offset = "0x105A928", VA = "0x105A928")]
	public PuckComeBack()
	{
	}
}
[Token(Token = "0x20001E0")]
public class RageButtonPress : MonoBehaviour
{
	[Token(Token = "0x20001E1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D6A4C", Offset = "0x8D6A4C")]
	private sealed class <WaitForSound>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000B2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RageButtonPress <>4__this;

		[Token(Token = "0x17000102")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600096C")]
			[Address(RVA = "0xE8C97C", Offset = "0xE8C97C", VA = "0xE8C97C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000103")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600096E")]
			[Address(RVA = "0xE8C9C4", Offset = "0xE8C9C4", VA = "0xE8C9C4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000969")]
		[Address(RVA = "0xE8C884", Offset = "0xE8C884", VA = "0xE8C884")]
		[DebuggerHidden]
		public <WaitForSound>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x600096A")]
		[Address(RVA = "0xE8C8B0", Offset = "0xE8C8B0", VA = "0xE8C8B0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600096B")]
		[Address(RVA = "0xE8C8B4", Offset = "0xE8C8B4", VA = "0xE8C8B4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600096D")]
		[Address(RVA = "0xE8C984", Offset = "0xE8C984", VA = "0xE8C984", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000B27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Animator buttonPush;

	[Token(Token = "0x4000B28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject handTouchingButton;

	[Token(Token = "0x4000B29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public UnityEvent keyPressed;

	[Token(Token = "0x4000B2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool canPress;

	[Token(Token = "0x4000B2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float waitTime;

	[Token(Token = "0x6000965")]
	[Address(RVA = "0x105A938", Offset = "0x105A938", VA = "0x105A938")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000966")]
	[Address(RVA = "0x105AB50", Offset = "0x105AB50", VA = "0x105AB50")]
	private void Start()
	{
	}

	[Token(Token = "0x6000967")]
	[Address(RVA = "0x105AAD8", Offset = "0x105AAD8", VA = "0x105AAD8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E1938", Offset = "0x8E1938")]
	private IEnumerator WaitForSound()
	{
		return null;
	}

	[Token(Token = "0x6000968")]
	[Address(RVA = "0x105ABCC", Offset = "0x105ABCC", VA = "0x105ABCC")]
	public RageButtonPress()
	{
	}
}
[Token(Token = "0x20001E2")]
public class RemoveIgnore : MonoBehaviour
{
	[Token(Token = "0x20001E3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D6A5C", Offset = "0x8D6A5C")]
	private sealed class <SetMaterial>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000B35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RemoveIgnore <>4__this;

		[Token(Token = "0x17000104")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000976")]
			[Address(RVA = "0xE8CCB4", Offset = "0xE8CCB4", VA = "0xE8CCB4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000105")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000978")]
			[Address(RVA = "0xE8CCFC", Offset = "0xE8CCFC", VA = "0xE8CCFC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000973")]
		[Address(RVA = "0xE8CBA8", Offset = "0xE8CBA8", VA = "0xE8CBA8")]
		[DebuggerHidden]
		public <SetMaterial>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6000974")]
		[Address(RVA = "0xE8CBD4", Offset = "0xE8CBD4", VA = "0xE8CBD4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000975")]
		[Address(RVA = "0xE8CBD8", Offset = "0xE8CBD8", VA = "0xE8CBD8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000977")]
		[Address(RVA = "0xE8CCBC", Offset = "0xE8CCBC", VA = "0xE8CCBC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000B2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool penguinIsOut;

	[Token(Token = "0x4000B30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ClawMachineManager clawMachineManager;

	[Token(Token = "0x4000B31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public PhysicMaterial bballPhysicMaterial;

	[Token(Token = "0x4000B32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject bballObject;

	[Token(Token = "0x600096F")]
	[Address(RVA = "0x105D504", Offset = "0x105D504", VA = "0x105D504")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000970")]
	[Address(RVA = "0x105D868", Offset = "0x105D868", VA = "0x105D868")]
	private void Start()
	{
	}

	[Token(Token = "0x6000971")]
	[Address(RVA = "0x105D7F0", Offset = "0x105D7F0", VA = "0x105D7F0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E19E8", Offset = "0x8E19E8")]
	private IEnumerator SetMaterial()
	{
		return null;
	}

	[Token(Token = "0x6000972")]
	[Address(RVA = "0x105D8F0", Offset = "0x105D8F0", VA = "0x105D8F0")]
	public RemoveIgnore()
	{
	}
}
[Token(Token = "0x20001E4")]
public class ResetPlayer : MonoBehaviour
{
	[Token(Token = "0x6000979")]
	[Address(RVA = "0x1060940", Offset = "0x1060940", VA = "0x1060940")]
	public ResetPlayer()
	{
	}
}
[Token(Token = "0x20001E5")]
public class RoboLook : MonoBehaviour
{
	[Token(Token = "0x4000B36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform whereToLook;

	[Token(Token = "0x600097A")]
	[Address(RVA = "0x1060948", Offset = "0x1060948", VA = "0x1060948")]
	private void Start()
	{
	}

	[Token(Token = "0x600097B")]
	[Address(RVA = "0x106094C", Offset = "0x106094C", VA = "0x106094C")]
	private void Update()
	{
	}

	[Token(Token = "0x600097C")]
	[Address(RVA = "0x1060980", Offset = "0x1060980", VA = "0x1060980")]
	public RoboLook()
	{
	}
}
[Token(Token = "0x20001E6")]
public class RoboManager : MonoBehaviour
{
	[Token(Token = "0x20001E7")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D6A6C", Offset = "0x8D6A6C")]
	private sealed class <TurnHeadToTalkToCoreyRoutine>d__70 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000B77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RoboManager <>4__this;

		[Token(Token = "0x4000B78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float waitTime2;

		[Token(Token = "0x17000106")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600099A")]
			[Address(RVA = "0x1C2BA98", Offset = "0x1C2BA98", VA = "0x1C2BA98", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000107")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600099C")]
			[Address(RVA = "0x1C2BAE0", Offset = "0x1C2BAE0", VA = "0x1C2BAE0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000997")]
		[Address(RVA = "0x1C2B864", Offset = "0x1C2B864", VA = "0x1C2B864")]
		[DebuggerHidden]
		public <TurnHeadToTalkToCoreyRoutine>d__70(int <>1__state)
		{
		}

		[Token(Token = "0x6000998")]
		[Address(RVA = "0x1C2B890", Offset = "0x1C2B890", VA = "0x1C2B890", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000999")]
		[Address(RVA = "0x1C2B894", Offset = "0x1C2B894", VA = "0x1C2B894", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600099B")]
		[Address(RVA = "0x1C2BAA0", Offset = "0x1C2BAA0", VA = "0x1C2BAA0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001E8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D6A7C", Offset = "0x8D6A7C")]
	private sealed class <DisplayCaptionLengthDeath>d__74 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000B7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RoboManager <>4__this;

		[Token(Token = "0x17000108")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60009A0")]
			[Address(RVA = "0xE8D55C", Offset = "0xE8D55C", VA = "0xE8D55C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000109")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60009A2")]
			[Address(RVA = "0xE8D5A4", Offset = "0xE8D5A4", VA = "0xE8D5A4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600099D")]
		[Address(RVA = "0xE8D444", Offset = "0xE8D444", VA = "0xE8D444")]
		[DebuggerHidden]
		public <DisplayCaptionLengthDeath>d__74(int <>1__state)
		{
		}

		[Token(Token = "0x600099E")]
		[Address(RVA = "0xE8D470", Offset = "0xE8D470", VA = "0xE8D470", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600099F")]
		[Address(RVA = "0xE8D474", Offset = "0xE8D474", VA = "0xE8D474", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60009A1")]
		[Address(RVA = "0xE8D564", Offset = "0xE8D564", VA = "0xE8D564", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001E9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D6A8C", Offset = "0x8D6A8C")]
	private sealed class <DisplayCaptionLength>d__76 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000B7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RoboManager <>4__this;

		[Token(Token = "0x1700010A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60009A6")]
			[Address(RVA = "0xE8D3F4", Offset = "0xE8D3F4", VA = "0xE8D3F4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700010B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60009A8")]
			[Address(RVA = "0xE8D43C", Offset = "0xE8D43C", VA = "0xE8D43C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60009A3")]
		[Address(RVA = "0xE8D2DC", Offset = "0xE8D2DC", VA = "0xE8D2DC")]
		[DebuggerHidden]
		public <DisplayCaptionLength>d__76(int <>1__state)
		{
		}

		[Token(Token = "0x60009A4")]
		[Address(RVA = "0xE8D308", Offset = "0xE8D308", VA = "0xE8D308", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60009A5")]
		[Address(RVA = "0xE8D30C", Offset = "0xE8D30C", VA = "0xE8D30C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60009A7")]
		[Address(RVA = "0xE8D3FC", Offset = "0xE8D3FC", VA = "0xE8D3FC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001EA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D6A9C", Offset = "0x8D6A9C")]
	private sealed class <MoveFromTo>d__77 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000B81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RoboManager <>4__this;

		[Token(Token = "0x4000B82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 a;

		[Token(Token = "0x4000B83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Vector3 b;

		[Token(Token = "0x4000B84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float speed;

		[Token(Token = "0x4000B85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Transform objectToMove;

		[Token(Token = "0x4000B86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float <step>5__2;

		[Token(Token = "0x4000B87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float <t>5__3;

		[Token(Token = "0x1700010C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60009AC")]
			[Address(RVA = "0xE8DE78", Offset = "0xE8DE78", VA = "0xE8DE78", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700010D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60009AE")]
			[Address(RVA = "0xE8DEC0", Offset = "0xE8DEC0", VA = "0xE8DEC0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60009A9")]
		[Address(RVA = "0xE8DC74", Offset = "0xE8DC74", VA = "0xE8DC74")]
		[DebuggerHidden]
		public <MoveFromTo>d__77(int <>1__state)
		{
		}

		[Token(Token = "0x60009AA")]
		[Address(RVA = "0xE8DCA0", Offset = "0xE8DCA0", VA = "0xE8DCA0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60009AB")]
		[Address(RVA = "0xE8DCA4", Offset = "0xE8DCA4", VA = "0xE8DCA4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60009AD")]
		[Address(RVA = "0xE8DE80", Offset = "0xE8DE80", VA = "0xE8DE80", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001EB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D6AAC", Offset = "0x8D6AAC")]
	private sealed class <MoveNeckTimeRoutine>d__78 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000B8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RoboManager <>4__this;

		[Token(Token = "0x1700010E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60009B2")]
			[Address(RVA = "0x1C2A018", Offset = "0x1C2A018", VA = "0x1C2A018", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700010F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60009B4")]
			[Address(RVA = "0x1C2A060", Offset = "0x1C2A060", VA = "0x1C2A060", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60009AF")]
		[Address(RVA = "0x1C29DFC", Offset = "0x1C29DFC", VA = "0x1C29DFC")]
		[DebuggerHidden]
		public <MoveNeckTimeRoutine>d__78(int <>1__state)
		{
		}

		[Token(Token = "0x60009B0")]
		[Address(RVA = "0x1C29E28", Offset = "0x1C29E28", VA = "0x1C29E28", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60009B1")]
		[Address(RVA = "0x1C29E2C", Offset = "0x1C29E2C", VA = "0x1C29E2C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60009B3")]
		[Address(RVA = "0x1C2A020", Offset = "0x1C2A020", VA = "0x1C2A020", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001EC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D6ABC", Offset = "0x8D6ABC")]
	private sealed class <RoboCircuitDestroyedTalkTime>d__79 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000B8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RoboManager <>4__this;

		[Token(Token = "0x17000110")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60009B8")]
			[Address(RVA = "0x1C2A498", Offset = "0x1C2A498", VA = "0x1C2A498", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000111")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60009BA")]
			[Address(RVA = "0x1C2A4E0", Offset = "0x1C2A4E0", VA = "0x1C2A4E0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60009B5")]
		[Address(RVA = "0x1C2A240", Offset = "0x1C2A240", VA = "0x1C2A240")]
		[DebuggerHidden]
		public <RoboCircuitDestroyedTalkTime>d__79(int <>1__state)
		{
		}

		[Token(Token = "0x60009B6")]
		[Address(RVA = "0x1C2A26C", Offset = "0x1C2A26C", VA = "0x1C2A26C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60009B7")]
		[Address(RVA = "0x1C2A270", Offset = "0x1C2A270", VA = "0x1C2A270", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60009B9")]
		[Address(RVA = "0x1C2A4A0", Offset = "0x1C2A4A0", VA = "0x1C2A4A0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001ED")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D6ACC", Offset = "0x8D6ACC")]
	private sealed class <RoboTalkTime>d__80 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000B90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RoboManager <>4__this;

		[Token(Token = "0x17000112")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60009BE")]
			[Address(RVA = "0x1C2B644", Offset = "0x1C2B644", VA = "0x1C2B644", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000113")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60009C0")]
			[Address(RVA = "0x1C2B68C", Offset = "0x1C2B68C", VA = "0x1C2B68C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60009BB")]
		[Address(RVA = "0x1C2B47C", Offset = "0x1C2B47C", VA = "0x1C2B47C")]
		[DebuggerHidden]
		public <RoboTalkTime>d__80(int <>1__state)
		{
		}

		[Token(Token = "0x60009BC")]
		[Address(RVA = "0x1C2B4A8", Offset = "0x1C2B4A8", VA = "0x1C2B4A8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60009BD")]
		[Address(RVA = "0x1C2B4AC", Offset = "0x1C2B4AC", VA = "0x1C2B4AC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60009BF")]
		[Address(RVA = "0x1C2B64C", Offset = "0x1C2B64C", VA = "0x1C2B64C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001EE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D6ADC", Offset = "0x8D6ADC")]
	private sealed class <RoboTalkTimeTimed>d__81 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000B93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RoboManager <>4__this;

		[Token(Token = "0x4000B94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float talkingTime;

		[Token(Token = "0x17000114")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60009C4")]
			[Address(RVA = "0x1C2B814", Offset = "0x1C2B814", VA = "0x1C2B814", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000115")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60009C6")]
			[Address(RVA = "0x1C2B85C", Offset = "0x1C2B85C", VA = "0x1C2B85C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60009C1")]
		[Address(RVA = "0x1C2B694", Offset = "0x1C2B694", VA = "0x1C2B694")]
		[DebuggerHidden]
		public <RoboTalkTimeTimed>d__81(int <>1__state)
		{
		}

		[Token(Token = "0x60009C2")]
		[Address(RVA = "0x1C2B6C0", Offset = "0x1C2B6C0", VA = "0x1C2B6C0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60009C3")]
		[Address(RVA = "0x1C2B6C4", Offset = "0x1C2B6C4", VA = "0x1C2B6C4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60009C5")]
		[Address(RVA = "0x1C2B81C", Offset = "0x1C2B81C", VA = "0x1C2B81C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001EF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D6AEC", Offset = "0x8D6AEC")]
	private sealed class <RedBlueBlink>d__82 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000B97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RoboManager <>4__this;

		[Token(Token = "0x17000116")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60009CA")]
			[Address(RVA = "0x1C2A1F0", Offset = "0x1C2A1F0", VA = "0x1C2A1F0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000117")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60009CC")]
			[Address(RVA = "0x1C2A238", Offset = "0x1C2A238", VA = "0x1C2A238", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60009C7")]
		[Address(RVA = "0x1C2A068", Offset = "0x1C2A068", VA = "0x1C2A068")]
		[DebuggerHidden]
		public <RedBlueBlink>d__82(int <>1__state)
		{
		}

		[Token(Token = "0x60009C8")]
		[Address(RVA = "0x1C2A094", Offset = "0x1C2A094", VA = "0x1C2A094", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60009C9")]
		[Address(RVA = "0x1C2A098", Offset = "0x1C2A098", VA = "0x1C2A098", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60009CB")]
		[Address(RVA = "0x1C2A1F8", Offset = "0x1C2A1F8", VA = "0x1C2A1F8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001F0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D6AFC", Offset = "0x8D6AFC")]
	private sealed class <WhiteBlink>d__83 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000B9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RoboManager <>4__this;

		[Token(Token = "0x17000118")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60009D0")]
			[Address(RVA = "0x1C2BD88", Offset = "0x1C2BD88", VA = "0x1C2BD88", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000119")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60009D2")]
			[Address(RVA = "0x1C2BDD0", Offset = "0x1C2BDD0", VA = "0x1C2BDD0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60009CD")]
		[Address(RVA = "0x1C2BAE8", Offset = "0x1C2BAE8", VA = "0x1C2BAE8")]
		[DebuggerHidden]
		public <WhiteBlink>d__83(int <>1__state)
		{
		}

		[Token(Token = "0x60009CE")]
		[Address(RVA = "0x1C2BB14", Offset = "0x1C2BB14", VA = "0x1C2BB14", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60009CF")]
		[Address(RVA = "0x1C2BB18", Offset = "0x1C2BB18", VA = "0x1C2BB18", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60009D1")]
		[Address(RVA = "0x1C2BD90", Offset = "0x1C2BD90", VA = "0x1C2BD90", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001F1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D6B0C", Offset = "0x8D6B0C")]
	private sealed class <RoboStartGameRoutineOver>d__84 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000B9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RoboManager <>4__this;

		[Token(Token = "0x1700011A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60009D6")]
			[Address(RVA = "0x1C2B42C", Offset = "0x1C2B42C", VA = "0x1C2B42C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700011B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60009D8")]
			[Address(RVA = "0x1C2B474", Offset = "0x1C2B474", VA = "0x1C2B474", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60009D3")]
		[Address(RVA = "0x1C2B15C", Offset = "0x1C2B15C", VA = "0x1C2B15C")]
		[DebuggerHidden]
		public <RoboStartGameRoutineOver>d__84(int <>1__state)
		{
		}

		[Token(Token = "0x60009D4")]
		[Address(RVA = "0x1C2B188", Offset = "0x1C2B188", VA = "0x1C2B188", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60009D5")]
		[Address(RVA = "0x1C2B18C", Offset = "0x1C2B18C", VA = "0x1C2B18C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60009D7")]
		[Address(RVA = "0x1C2B434", Offset = "0x1C2B434", VA = "0x1C2B434", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001F2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D6B1C", Offset = "0x8D6B1C")]
	private sealed class <RoboStartGameRoutine>d__85 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000BA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RoboManager <>4__this;

		[Token(Token = "0x1700011C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60009DC")]
			[Address(RVA = "0x1C2B10C", Offset = "0x1C2B10C", VA = "0x1C2B10C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700011D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60009DE")]
			[Address(RVA = "0x1C2B154", Offset = "0x1C2B154", VA = "0x1C2B154", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60009D9")]
		[Address(RVA = "0x1C2A4E8", Offset = "0x1C2A4E8", VA = "0x1C2A4E8")]
		[DebuggerHidden]
		public <RoboStartGameRoutine>d__85(int <>1__state)
		{
		}

		[Token(Token = "0x60009DA")]
		[Address(RVA = "0x1C2A514", Offset = "0x1C2A514", VA = "0x1C2A514", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60009DB")]
		[Address(RVA = "0x1C2A518", Offset = "0x1C2A518", VA = "0x1C2A518", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60009DD")]
		[Address(RVA = "0x1C2B114", Offset = "0x1C2B114", VA = "0x1C2B114", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001F3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D6B2C", Offset = "0x8D6B2C")]
	private sealed class <GreenBlink>d__86 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000BA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000BA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000BA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RoboManager <>4__this;

		[Token(Token = "0x1700011E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60009E2")]
			[Address(RVA = "0xE8DC24", Offset = "0xE8DC24", VA = "0xE8DC24", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700011F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60009E4")]
			[Address(RVA = "0xE8DC6C", Offset = "0xE8DC6C", VA = "0xE8DC6C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60009DF")]
		[Address(RVA = "0xE8D5AC", Offset = "0xE8D5AC", VA = "0xE8D5AC")]
		[DebuggerHidden]
		public <GreenBlink>d__86(int <>1__state)
		{
		}

		[Token(Token = "0x60009E0")]
		[Address(RVA = "0xE8D5D8", Offset = "0xE8D5D8", VA = "0xE8D5D8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60009E1")]
		[Address(RVA = "0xE8D5DC", Offset = "0xE8D5DC", VA = "0xE8D5DC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60009E3")]
		[Address(RVA = "0xE8DC2C", Offset = "0xE8DC2C", VA = "0xE8DC2C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000B37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] talkLights;

	[Token(Token = "0x4000B38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject redLight;

	[Token(Token = "0x4000B39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject blueLight;

	[Token(Token = "0x4000B3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject[] greenLights;

	[Token(Token = "0x4000B3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject[] whiteLights;

	[Token(Token = "0x4000B3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float speechSoundDuration;

	[Token(Token = "0x4000B3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public bool testSpeech;

	[Token(Token = "0x4000B3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
	public bool redBlueBlinkBool;

	[Token(Token = "0x4000B3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x46")]
	public bool greenBlinkBool;

	[Token(Token = "0x4000B40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x47")]
	public bool whiteBlinkBool;

	[Token(Token = "0x4000B41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool roboStartSequence;

	[Token(Token = "0x4000B42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public int roboHealth;

	[Token(Token = "0x4000B43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Coroutine speechRoutine;

	[Token(Token = "0x4000B44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Animator neckAnim;

	[Token(Token = "0x4000B45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public bool moveNeck;

	[Token(Token = "0x4000B46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float moveNeckTime;

	[Token(Token = "0x4000B47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public int moveNeckDirectionChoice;

	[Token(Token = "0x4000B48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Transform topPositionRobo;

	[Token(Token = "0x4000B49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Transform bottomPositionRobo;

	[Token(Token = "0x4000B4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float roboRiseSpeed;

	[Token(Token = "0x4000B4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public int chooseTrashTalk;

	[Token(Token = "0x4000B4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public int chooseWinTalk;

	[Token(Token = "0x4000B4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public AudioClip[] roboTrashTalk;

	[Token(Token = "0x4000B4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public AudioClip[] roboWinTalk;

	[Token(Token = "0x4000B4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public AudioClip[] roboNeautralTalk;

	[Token(Token = "0x4000B50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public AudioClip[] roboGlitchTalkClips;

	[Token(Token = "0x4000B51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public AudioClip[] roboCircuitDestroyedTalkClips;

	[Token(Token = "0x4000B52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public AudioClip[] roboGlitchAnnoyedClips;

	[Token(Token = "0x4000B53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public AudioClip endClip;

	[Token(Token = "0x4000B54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public AudioSource roboVoiceSpot;

	[Token(Token = "0x4000B55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public AudioSource elevatorMusicSource;

	[Token(Token = "0x4000B56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public Coroutine moveRoutine;

	[Token(Token = "0x4000B57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public bool glitchRoutine;

	[Token(Token = "0x4000B58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	public int trashTalkCounter;

	[Token(Token = "0x4000B59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public int winTalkCounter;

	[Token(Token = "0x4000B5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	public int neautralTalkCounter;

	[Token(Token = "0x4000B5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public int circuitDestroyedTalkCounter;

	[Token(Token = "0x4000B5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	public int roboGlitchTalkClipsCounter;

	[Token(Token = "0x4000B5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public Transform bottomPedPos;

	[Token(Token = "0x4000B5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public Transform topPedPos;

	[Token(Token = "0x4000B5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public GameObject pedestalWithGun;

	[Token(Token = "0x4000B60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public BoxCollider gunBoxCollider;

	[Token(Token = "0x4000B61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public bool activateGun;

	[Token(Token = "0x4000B62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
	public int muteTalkCounter;

	[Token(Token = "0x4000B63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public PlayableDirector endSequencePlayable;

	[Token(Token = "0x4000B64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public GameObject theEndTest;

	[Token(Token = "0x4000B65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public bool shakeRobot;

	[Token(Token = "0x4000B66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
	public float shakeSpeed;

	[Token(Token = "0x4000B67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public float shakeAmount;

	[Token(Token = "0x4000B68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
	public Vector3 startingPos;

	[Token(Token = "0x4000B69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public ParticleSystem particleObject;

	[Token(Token = "0x4000B6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public bool roboEnd;

	[Token(Token = "0x4000B6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x151")]
	public bool doRoboWelcome;

	[Token(Token = "0x4000B6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public AudioClip[] roboWelcomeClips;

	[Token(Token = "0x4000B6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public int roboWelcomeCounter;

	[Token(Token = "0x4000B6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
	public bool inArcade;

	[Token(Token = "0x4000B6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	[SerializeField]
	private TextSynchronizer textSynchronizer;

	[Token(Token = "0x4000B70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public PhraseAsset[] welcomePhraseAssets;

	[Token(Token = "0x4000B71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public PhraseAsset endPhraseAssets;

	[Token(Token = "0x4000B72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public GameObject roboCaption;

	[Token(Token = "0x4000B73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public GameObject peaceOfDeathCaption;

	[Token(Token = "0x4000B74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public AudioSource peaceOfDeathAudioSource;

	[Token(Token = "0x600097D")]
	[Address(RVA = "0x1060988", Offset = "0x1060988", VA = "0x1060988")]
	private void Start()
	{
	}

	[Token(Token = "0x600097E")]
	[Address(RVA = "0x1060DC4", Offset = "0x1060DC4", VA = "0x1060DC4")]
	private void Update()
	{
	}

	[Token(Token = "0x600097F")]
	[Address(RVA = "0x1060F18", Offset = "0x1060F18", VA = "0x1060F18")]
	public void TestStart()
	{
	}

	[Token(Token = "0x6000980")]
	[Address(RVA = "0x1060FC4", Offset = "0x1060FC4", VA = "0x1060FC4")]
	public void TalkLightsOnForEnd()
	{
	}

	[Token(Token = "0x6000981")]
	[Address(RVA = "0x1061034", Offset = "0x1061034", VA = "0x1061034")]
	public void TalkLightsOffForEnd()
	{
	}

	[Token(Token = "0x6000982")]
	[Address(RVA = "0x10610A4", Offset = "0x10610A4", VA = "0x10610A4")]
	public void StartSequence()
	{
	}

	[Token(Token = "0x6000983")]
	[Address(RVA = "0x1061238", Offset = "0x1061238", VA = "0x1061238")]
	public void EnderSequence()
	{
	}

	[Token(Token = "0x6000984")]
	[Address(RVA = "0x10612EC", Offset = "0x10612EC", VA = "0x10612EC")]
	public void TurnHeadToTalkToCorey(float waitTime)
	{
	}

	[Token(Token = "0x6000985")]
	[Address(RVA = "0x1061318", Offset = "0x1061318", VA = "0x1061318")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E1A98", Offset = "0x8E1A98")]
	private IEnumerator TurnHeadToTalkToCoreyRoutine(float waitTime2)
	{
		return null;
	}

	[Token(Token = "0x6000986")]
	[Address(RVA = "0x10613A0", Offset = "0x10613A0", VA = "0x10613A0")]
	public void RoboTrashTalkLights(float tTime)
	{
	}

	[Token(Token = "0x6000987")]
	[Address(RVA = "0x1061454", Offset = "0x1061454", VA = "0x1061454")]
	public void PlayAnnoyedGlitchPhrase()
	{
	}

	[Token(Token = "0x6000988")]
	[Address(RVA = "0x10614BC", Offset = "0x10614BC", VA = "0x10614BC")]
	public void TurnOffPeaceOfDeath()
	{
	}

	[Token(Token = "0x6000989")]
	[Address(RVA = "0x10614E8", Offset = "0x10614E8", VA = "0x10614E8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E1AF8", Offset = "0x8E1AF8")]
	private IEnumerator DisplayCaptionLengthDeath()
	{
		return null;
	}

	[Token(Token = "0x600098A")]
	[Address(RVA = "0x1061560", Offset = "0x1061560", VA = "0x1061560")]
	public void DisplayCaptionUntilClipEnd()
	{
	}

	[Token(Token = "0x600098B")]
	[Address(RVA = "0x106158C", Offset = "0x106158C", VA = "0x106158C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E1B58", Offset = "0x8E1B58")]
	private IEnumerator DisplayCaptionLength()
	{
		return null;
	}

	[Token(Token = "0x600098C")]
	[Address(RVA = "0x1061158", Offset = "0x1061158", VA = "0x1061158")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E1BB8", Offset = "0x8E1BB8")]
	private IEnumerator MoveFromTo(Transform objectToMove, Vector3 a, Vector3 b, float speed, bool glitchRoutine)
	{
		return null;
	}

	[Token(Token = "0x600098D")]
	[Address(RVA = "0x1061604", Offset = "0x1061604", VA = "0x1061604")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E1C18", Offset = "0x8E1C18")]
	private IEnumerator MoveNeckTimeRoutine()
	{
		return null;
	}

	[Token(Token = "0x600098E")]
	[Address(RVA = "0x106167C", Offset = "0x106167C", VA = "0x106167C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E1C78", Offset = "0x8E1C78")]
	private IEnumerator RoboCircuitDestroyedTalkTime(float talkTime)
	{
		return null;
	}

	[Token(Token = "0x600098F")]
	[Address(RVA = "0x10616F4", Offset = "0x10616F4", VA = "0x10616F4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E1CD8", Offset = "0x8E1CD8")]
	private IEnumerator RoboTalkTime()
	{
		return null;
	}

	[Token(Token = "0x6000990")]
	[Address(RVA = "0x10613CC", Offset = "0x10613CC", VA = "0x10613CC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E1D38", Offset = "0x8E1D38")]
	private IEnumerator RoboTalkTimeTimed(float talkingTime)
	{
		return null;
	}

	[Token(Token = "0x6000991")]
	[Address(RVA = "0x1060B6C", Offset = "0x1060B6C", VA = "0x1060B6C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E1D98", Offset = "0x8E1D98")]
	private IEnumerator RedBlueBlink()
	{
		return null;
	}

	[Token(Token = "0x6000992")]
	[Address(RVA = "0x1060C5C", Offset = "0x1060C5C", VA = "0x1060C5C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E1DF8", Offset = "0x8E1DF8")]
	private IEnumerator WhiteBlink()
	{
		return null;
	}

	[Token(Token = "0x6000993")]
	[Address(RVA = "0x1060CD4", Offset = "0x1060CD4", VA = "0x1060CD4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E1E58", Offset = "0x8E1E58")]
	private IEnumerator RoboStartGameRoutineOver()
	{
		return null;
	}

	[Token(Token = "0x6000994")]
	[Address(RVA = "0x1060D4C", Offset = "0x1060D4C", VA = "0x1060D4C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E1EB8", Offset = "0x8E1EB8")]
	private IEnumerator RoboStartGameRoutine()
	{
		return null;
	}

	[Token(Token = "0x6000995")]
	[Address(RVA = "0x1060BE4", Offset = "0x1060BE4", VA = "0x1060BE4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E1F18", Offset = "0x8E1F18")]
	private IEnumerator GreenBlink()
	{
		return null;
	}

	[Token(Token = "0x6000996")]
	[Address(RVA = "0x106176C", Offset = "0x106176C", VA = "0x106176C")]
	public RoboManager()
	{
	}
}
[Token(Token = "0x20001F4")]
public class RotateCyberObject : MonoBehaviour
{
	[Token(Token = "0x4000BA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool rotateX;

	[Token(Token = "0x4000BA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool rotateY;

	[Token(Token = "0x4000BA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool rotateZ;

	[Token(Token = "0x4000BA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float rotateSpeed;

	[Token(Token = "0x60009E5")]
	[Address(RVA = "0x1062974", Offset = "0x1062974", VA = "0x1062974")]
	private void Start()
	{
	}

	[Token(Token = "0x60009E6")]
	[Address(RVA = "0x1062978", Offset = "0x1062978", VA = "0x1062978")]
	private void Update()
	{
	}

	[Token(Token = "0x60009E7")]
	[Address(RVA = "0x1062BB4", Offset = "0x1062BB4", VA = "0x1062BB4")]
	public RotateCyberObject()
	{
	}
}
[Token(Token = "0x20001F5")]
public class ScoreCollider : MonoBehaviour
{
	[Token(Token = "0x4000BA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject bballManager;

	[Token(Token = "0x4000BA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioSource source;

	[Token(Token = "0x4000BAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int colliderNumber;

	[Token(Token = "0x4000BAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool[] activeToScore;

	[Token(Token = "0x60009E8")]
	[Address(RVA = "0x1063908", Offset = "0x1063908", VA = "0x1063908")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60009E9")]
	[Address(RVA = "0x1063AD0", Offset = "0x1063AD0", VA = "0x1063AD0")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x60009EA")]
	[Address(RVA = "0x1063C34", Offset = "0x1063C34", VA = "0x1063C34")]
	private void Start()
	{
	}

	[Token(Token = "0x60009EB")]
	[Address(RVA = "0x1063C90", Offset = "0x1063C90", VA = "0x1063C90")]
	public ScoreCollider()
	{
	}
}
[Token(Token = "0x20001F6")]
public class ScreenSaver : MonoBehaviour
{
	[Token(Token = "0x4000BAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float speed;

	[Token(Token = "0x4000BAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float lrDirection;

	[Token(Token = "0x4000BAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float fbDirection;

	[Token(Token = "0x4000BAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Color[] colorBank;

	[Token(Token = "0x4000BB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public SpriteRenderer logo;

	[Token(Token = "0x4000BB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int numPicked;

	[Token(Token = "0x4000BB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public int lastPicked;

	[Token(Token = "0x60009EC")]
	[Address(RVA = "0x1063C98", Offset = "0x1063C98", VA = "0x1063C98")]
	private void Start()
	{
	}

	[Token(Token = "0x60009ED")]
	[Address(RVA = "0x1063CA8", Offset = "0x1063CA8", VA = "0x1063CA8")]
	public void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60009EE")]
	[Address(RVA = "0x1063FA8", Offset = "0x1063FA8", VA = "0x1063FA8")]
	private void Update()
	{
	}

	[Token(Token = "0x60009EF")]
	[Address(RVA = "0x1064048", Offset = "0x1064048", VA = "0x1064048")]
	public ScreenSaver()
	{
	}
}
[Token(Token = "0x20001F7")]
public class SkeeBallManager : MonoBehaviour
{
	[Token(Token = "0x20001F8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D6B3C", Offset = "0x8D6B3C")]
	private sealed class <WaitToRespawn>d__29 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000BCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000BCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000BCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SkeeBallManager <>4__this;

		[Token(Token = "0x17000120")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60009FB")]
			[Address(RVA = "0x1C2CC58", Offset = "0x1C2CC58", VA = "0x1C2CC58", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000121")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60009FD")]
			[Address(RVA = "0x1C2CCA0", Offset = "0x1C2CCA0", VA = "0x1C2CCA0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60009F8")]
		[Address(RVA = "0x1C2CB5C", Offset = "0x1C2CB5C", VA = "0x1C2CB5C")]
		[DebuggerHidden]
		public <WaitToRespawn>d__29(int <>1__state)
		{
		}

		[Token(Token = "0x60009F9")]
		[Address(RVA = "0x1C2CB88", Offset = "0x1C2CB88", VA = "0x1C2CB88", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60009FA")]
		[Address(RVA = "0x1C2CB8C", Offset = "0x1C2CB8C", VA = "0x1C2CB8C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60009FC")]
		[Address(RVA = "0x1C2CC60", Offset = "0x1C2CC60", VA = "0x1C2CC60", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000BB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int gameScore;

	[Token(Token = "0x4000BB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject dartPrefabs;

	[Token(Token = "0x4000BB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ParticleSystem[] poofParticle;

	[Token(Token = "0x4000BB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform[] dartRegenSpotLeft;

	[Token(Token = "0x4000BB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform[] dartRegenSpotRight;

	[Token(Token = "0x4000BB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool[] dartSpawned;

	[Token(Token = "0x4000BB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Text gameScoreText;

	[Token(Token = "0x4000BBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Text gameHighScoreText;

	[Token(Token = "0x4000BBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Text gameTimeText;

	[Token(Token = "0x4000BBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject[] cloneOfDart;

	[Token(Token = "0x4000BBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public int dartsLeft;

	[Token(Token = "0x4000BBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public List<GameObject> skeeballs;

	[Token(Token = "0x4000BBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject[] leftButtonNames;

	[Token(Token = "0x4000BC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject[] rightButtonNames;

	[Token(Token = "0x4000BC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GameObject magicPenguin;

	[Token(Token = "0x4000BC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public bool canReset;

	[Token(Token = "0x4000BC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public GameObject gameStar;

	[Token(Token = "0x4000BC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Material gameStarLit;

	[Token(Token = "0x4000BC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public GameObject ballRelease;

	[Token(Token = "0x4000BC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public AudioSource gameStartSound;

	[Token(Token = "0x4000BC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public int scoreToGet;

	[Token(Token = "0x4000BC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public SkeeBallManagerManager skeeBallManagerManager;

	[Token(Token = "0x4000BC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public bool firstTime;

	[Token(Token = "0x4000BCA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC9")]
	public bool arcadeOnlyMode;

	[Token(Token = "0x60009F0")]
	[Address(RVA = "0x166C450", Offset = "0x166C450", VA = "0x166C450")]
	public void AddScore(int scoreToAdd)
	{
	}

	[Token(Token = "0x60009F1")]
	[Address(RVA = "0x166C6C4", Offset = "0x166C6C4", VA = "0x166C6C4")]
	public void MakeNewDartsLeft()
	{
	}

	[Token(Token = "0x60009F2")]
	[Address(RVA = "0x166CBA4", Offset = "0x166CBA4", VA = "0x166CBA4")]
	public void MakeNewDartsRight()
	{
	}

	[Token(Token = "0x60009F3")]
	[Address(RVA = "0x166C9A0", Offset = "0x166C9A0", VA = "0x166C9A0")]
	public void ResetDarts()
	{
	}

	[Token(Token = "0x60009F4")]
	[Address(RVA = "0x166CEA0", Offset = "0x166CEA0", VA = "0x166CEA0")]
	private void Start()
	{
	}

	[Token(Token = "0x60009F5")]
	[Address(RVA = "0x166C928", Offset = "0x166C928", VA = "0x166C928")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E2388", Offset = "0x8E2388")]
	public IEnumerator WaitToRespawn()
	{
		return null;
	}

	[Token(Token = "0x60009F6")]
	[Address(RVA = "0x166CF24", Offset = "0x166CF24", VA = "0x166CF24")]
	private void Update()
	{
	}

	[Token(Token = "0x60009F7")]
	[Address(RVA = "0x166CF28", Offset = "0x166CF28", VA = "0x166CF28")]
	public SkeeBallManager()
	{
	}
}
[Token(Token = "0x20001F9")]
public class SkeeBallManagerManager : MonoBehaviour
{
	[Token(Token = "0x20001FA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D6B4C", Offset = "0x8D6B4C")]
	private sealed class <ScaleDownAnimation>d__19 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000BDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000BDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000BE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float time;

		[Token(Token = "0x4000BE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SkeeBallManagerManager <>4__this;

		[Token(Token = "0x4000BE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <i>5__2;

		[Token(Token = "0x4000BE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <rate>5__3;

		[Token(Token = "0x4000BE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3 <toScale>5__4;

		[Token(Token = "0x17000122")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000A0B")]
			[Address(RVA = "0x1C2D694", Offset = "0x1C2D694", VA = "0x1C2D694", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000123")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000A0D")]
			[Address(RVA = "0x1C2D6DC", Offset = "0x1C2D6DC", VA = "0x1C2D6DC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A08")]
		[Address(RVA = "0x1C2D380", Offset = "0x1C2D380", VA = "0x1C2D380")]
		[DebuggerHidden]
		public <ScaleDownAnimation>d__19(int <>1__state)
		{
		}

		[Token(Token = "0x6000A09")]
		[Address(RVA = "0x1C2D3AC", Offset = "0x1C2D3AC", VA = "0x1C2D3AC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000A0A")]
		[Address(RVA = "0x1C2D3B0", Offset = "0x1C2D3B0", VA = "0x1C2D3B0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A0C")]
		[Address(RVA = "0x1C2D69C", Offset = "0x1C2D69C", VA = "0x1C2D69C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001FB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D6B5C", Offset = "0x8D6B5C")]
	private sealed class <ScaleUpAnimation>d__20 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000BE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000BE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000BE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float time;

		[Token(Token = "0x4000BE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SkeeBallManagerManager <>4__this;

		[Token(Token = "0x4000BE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <i>5__2;

		[Token(Token = "0x4000BEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <rate>5__3;

		[Token(Token = "0x4000BEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3 <toScale>5__4;

		[Token(Token = "0x17000124")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000A11")]
			[Address(RVA = "0x1C2D8D0", Offset = "0x1C2D8D0", VA = "0x1C2D8D0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000125")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000A13")]
			[Address(RVA = "0x1C2D918", Offset = "0x1C2D918", VA = "0x1C2D918", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A0E")]
		[Address(RVA = "0x1C2D6E4", Offset = "0x1C2D6E4", VA = "0x1C2D6E4")]
		[DebuggerHidden]
		public <ScaleUpAnimation>d__20(int <>1__state)
		{
		}

		[Token(Token = "0x6000A0F")]
		[Address(RVA = "0x1C2D710", Offset = "0x1C2D710", VA = "0x1C2D710", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000A10")]
		[Address(RVA = "0x1C2D714", Offset = "0x1C2D714", VA = "0x1C2D714", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A12")]
		[Address(RVA = "0x1C2D8D8", Offset = "0x1C2D8D8", VA = "0x1C2D8D8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001FC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D6B6C", Offset = "0x8D6B6C")]
	private sealed class <FadeOutMusic>d__21 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000BEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000BED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000BEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioSource music;

		[Token(Token = "0x4000BEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float FadeTime;

		[Token(Token = "0x4000BF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <startVolume>5__2;

		[Token(Token = "0x17000126")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000A17")]
			[Address(RVA = "0x1C2CF7C", Offset = "0x1C2CF7C", VA = "0x1C2CF7C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000127")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000A19")]
			[Address(RVA = "0x1C2CFC4", Offset = "0x1C2CFC4", VA = "0x1C2CFC4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A14")]
		[Address(RVA = "0x1C2CE44", Offset = "0x1C2CE44", VA = "0x1C2CE44")]
		[DebuggerHidden]
		public <FadeOutMusic>d__21(int <>1__state)
		{
		}

		[Token(Token = "0x6000A15")]
		[Address(RVA = "0x1C2CE70", Offset = "0x1C2CE70", VA = "0x1C2CE70", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000A16")]
		[Address(RVA = "0x1C2CE74", Offset = "0x1C2CE74", VA = "0x1C2CE74", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A18")]
		[Address(RVA = "0x1C2CF84", Offset = "0x1C2CF84", VA = "0x1C2CF84", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001FD")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D6B7C", Offset = "0x8D6B7C")]
	private sealed class <FadeInMusic>d__22 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000BF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000BF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000BF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioSource music;

		[Token(Token = "0x4000BF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float FadeTime;

		[Token(Token = "0x4000BF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <startVolume>5__2;

		[Token(Token = "0x17000128")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000A1D")]
			[Address(RVA = "0x1C2CDF4", Offset = "0x1C2CDF4", VA = "0x1C2CDF4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000129")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000A1F")]
			[Address(RVA = "0x1C2CE3C", Offset = "0x1C2CE3C", VA = "0x1C2CE3C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A1A")]
		[Address(RVA = "0x1C2CCA8", Offset = "0x1C2CCA8", VA = "0x1C2CCA8")]
		[DebuggerHidden]
		public <FadeInMusic>d__22(int <>1__state)
		{
		}

		[Token(Token = "0x6000A1B")]
		[Address(RVA = "0x1C2CCD4", Offset = "0x1C2CCD4", VA = "0x1C2CCD4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000A1C")]
		[Address(RVA = "0x1C2CCD8", Offset = "0x1C2CCD8", VA = "0x1C2CCD8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A1E")]
		[Address(RVA = "0x1C2CDFC", Offset = "0x1C2CDFC", VA = "0x1C2CDFC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001FE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D6B8C", Offset = "0x8D6B8C")]
	private sealed class <FadeOutSound>d__23 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000BF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000BF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000BF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SkeeBallManagerManager <>4__this;

		[Token(Token = "0x4000BF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float FadeTime;

		[Token(Token = "0x4000BFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <startVolume>5__2;

		[Token(Token = "0x1700012A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000A23")]
			[Address(RVA = "0x1C2D1A4", Offset = "0x1C2D1A4", VA = "0x1C2D1A4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700012B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000A25")]
			[Address(RVA = "0x1C2D1EC", Offset = "0x1C2D1EC", VA = "0x1C2D1EC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A20")]
		[Address(RVA = "0x1C2CFCC", Offset = "0x1C2CFCC", VA = "0x1C2CFCC")]
		[DebuggerHidden]
		public <FadeOutSound>d__23(int <>1__state)
		{
		}

		[Token(Token = "0x6000A21")]
		[Address(RVA = "0x1C2CFF8", Offset = "0x1C2CFF8", VA = "0x1C2CFF8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000A22")]
		[Address(RVA = "0x1C2CFFC", Offset = "0x1C2CFFC", VA = "0x1C2CFFC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A24")]
		[Address(RVA = "0x1C2D1AC", Offset = "0x1C2D1AC", VA = "0x1C2D1AC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001FF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D6B9C", Offset = "0x8D6B9C")]
	private sealed class <FadeTo>d__24 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000BFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000BFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000BFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SkeeBallManagerManager <>4__this;

		[Token(Token = "0x4000BFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float aValue;

		[Token(Token = "0x4000BFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float aTime;

		[Token(Token = "0x4000C00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <alpha>5__2;

		[Token(Token = "0x4000C01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <t>5__3;

		[Token(Token = "0x1700012C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000A29")]
			[Address(RVA = "0x1C2D330", Offset = "0x1C2D330", VA = "0x1C2D330", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700012D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000A2B")]
			[Address(RVA = "0x1C2D378", Offset = "0x1C2D378", VA = "0x1C2D378", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A26")]
		[Address(RVA = "0x1C2D1F4", Offset = "0x1C2D1F4", VA = "0x1C2D1F4")]
		[DebuggerHidden]
		public <FadeTo>d__24(int <>1__state)
		{
		}

		[Token(Token = "0x6000A27")]
		[Address(RVA = "0x1C2D220", Offset = "0x1C2D220", VA = "0x1C2D220", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000A28")]
		[Address(RVA = "0x1C2D224", Offset = "0x1C2D224", VA = "0x1C2D224", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A2A")]
		[Address(RVA = "0x1C2D338", Offset = "0x1C2D338", VA = "0x1C2D338", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000BCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SkeeBallManager skeeBallManager1;

	[Token(Token = "0x4000BCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SkeeBallManager skeeBallManager2;

	[Token(Token = "0x4000BD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SkeeBallManager skeeBallManager3;

	[Token(Token = "0x4000BD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public SkeeBallManager skeeBallManager4;

	[Token(Token = "0x4000BD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public SkeeBallManager skeeBallManager5;

	[Token(Token = "0x4000BD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Material lockMaterial;

	[Token(Token = "0x4000BD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject lockBottom;

	[Token(Token = "0x4000BD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ParticleSystem particleSystem;

	[Token(Token = "0x4000BD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector3 fromScale;

	[Token(Token = "0x4000BD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject lidOfBox;

	[Token(Token = "0x4000BD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject[] stuffInBox;

	[Token(Token = "0x4000BD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public bool testit;

	[Token(Token = "0x4000BDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public AudioSource backgroundMusic;

	[Token(Token = "0x4000BDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Transform pogsSetTransform;

	[Token(Token = "0x4000BDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public bool arcadeOnlyMode;

	[Token(Token = "0x4000BDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public GameObject fadeOutCube;

	[Token(Token = "0x60009FE")]
	[Address(RVA = "0x166C4F8", Offset = "0x166C4F8", VA = "0x166C4F8")]
	public void CheckIfRightScores()
	{
	}

	[Token(Token = "0x60009FF")]
	[Address(RVA = "0x166D154", Offset = "0x166D154", VA = "0x166D154")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A00")]
	[Address(RVA = "0x166D268", Offset = "0x166D268", VA = "0x166D268")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A01")]
	[Address(RVA = "0x166CFB8", Offset = "0x166CFB8", VA = "0x166CFB8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E2438", Offset = "0x8E2438")]
	public IEnumerator ScaleDownAnimation(float time)
	{
		return null;
	}

	[Token(Token = "0x6000A02")]
	[Address(RVA = "0x166CF30", Offset = "0x166CF30", VA = "0x166CF30")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E2498", Offset = "0x8E2498")]
	public IEnumerator ScaleUpAnimation(float time)
	{
		return null;
	}

	[Token(Token = "0x6000A03")]
	[Address(RVA = "0x166D4CC", Offset = "0x166D4CC", VA = "0x166D4CC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E24F8", Offset = "0x8E24F8")]
	private IEnumerator FadeOutMusic(AudioSource music, float FadeTime)
	{
		return null;
	}

	[Token(Token = "0x6000A04")]
	[Address(RVA = "0x166D554", Offset = "0x166D554", VA = "0x166D554")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E2558", Offset = "0x8E2558")]
	private IEnumerator FadeInMusic(AudioSource music, float FadeTime)
	{
		return null;
	}

	[Token(Token = "0x6000A05")]
	[Address(RVA = "0x166D0CC", Offset = "0x166D0CC", VA = "0x166D0CC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E25B8", Offset = "0x8E25B8")]
	private IEnumerator FadeOutSound(float FadeTime)
	{
		return null;
	}

	[Token(Token = "0x6000A06")]
	[Address(RVA = "0x166D040", Offset = "0x166D040", VA = "0x166D040")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E2618", Offset = "0x8E2618")]
	private IEnumerator FadeTo(float aValue, float aTime)
	{
		return null;
	}

	[Token(Token = "0x6000A07")]
	[Address(RVA = "0x166D5DC", Offset = "0x166D5DC", VA = "0x166D5DC")]
	public SkeeBallManagerManager()
	{
	}
}
[Token(Token = "0x2000200")]
public class SkeeBallScored : MonoBehaviour
{
	[Token(Token = "0x4000C02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool skeeBallScored;

	[Token(Token = "0x4000C03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool outsideOfStart;

	[Token(Token = "0x6000A2C")]
	[Address(RVA = "0x166D5E4", Offset = "0x166D5E4", VA = "0x166D5E4")]
	public SkeeBallScored()
	{
	}
}
[Token(Token = "0x2000201")]
public class SkeeBallStarter : MonoBehaviour
{
	[Token(Token = "0x4000C04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SkeeBallManager skeeballManager;

	[Token(Token = "0x4000C05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Animator buttonPush;

	[Token(Token = "0x4000C06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject handTouchingButton;

	[Token(Token = "0x6000A2D")]
	[Address(RVA = "0x166D5EC", Offset = "0x166D5EC", VA = "0x166D5EC")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000A2E")]
	[Address(RVA = "0x166D774", Offset = "0x166D774", VA = "0x166D774")]
	public SkeeBallStarter()
	{
	}
}
[Token(Token = "0x2000202")]
public class SkiBallScorer : MonoBehaviour
{
	[Token(Token = "0x4000C07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SkeeBallManager skeeBallManager;

	[Token(Token = "0x4000C08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int holeScore;

	[Token(Token = "0x6000A2F")]
	[Address(RVA = "0x166D77C", Offset = "0x166D77C", VA = "0x166D77C")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000A30")]
	[Address(RVA = "0x166D8AC", Offset = "0x166D8AC", VA = "0x166D8AC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A31")]
	[Address(RVA = "0x166D8B0", Offset = "0x166D8B0", VA = "0x166D8B0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A32")]
	[Address(RVA = "0x166D8B4", Offset = "0x166D8B4", VA = "0x166D8B4")]
	public SkiBallScorer()
	{
	}
}
[Token(Token = "0x2000203")]
public class SlotScore : MonoBehaviour
{
	[Token(Token = "0x4000C09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PinballManager pinballManager;

	[Token(Token = "0x4000C0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int scoreAmount;

	[Token(Token = "0x6000A33")]
	[Address(RVA = "0x166D8BC", Offset = "0x166D8BC", VA = "0x166D8BC")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000A34")]
	[Address(RVA = "0x166D95C", Offset = "0x166D95C", VA = "0x166D95C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A35")]
	[Address(RVA = "0x166D960", Offset = "0x166D960", VA = "0x166D960")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A36")]
	[Address(RVA = "0x166D964", Offset = "0x166D964", VA = "0x166D964")]
	public SlotScore()
	{
	}
}
[Token(Token = "0x2000204")]
public class SmartPhoneManager : MonoBehaviour
{
	[Token(Token = "0x2000205")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D6BAC", Offset = "0x8D6BAC")]
	private sealed class <QuitDelay>d__119 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000C5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000C5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x1700012E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000A84")]
			[Address(RVA = "0x1C2E070", Offset = "0x1C2E070", VA = "0x1C2E070", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700012F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000A86")]
			[Address(RVA = "0x1C2E0B8", Offset = "0x1C2E0B8", VA = "0x1C2E0B8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A81")]
		[Address(RVA = "0x1C2DF9C", Offset = "0x1C2DF9C", VA = "0x1C2DF9C")]
		[DebuggerHidden]
		public <QuitDelay>d__119(int <>1__state)
		{
		}

		[Token(Token = "0x6000A82")]
		[Address(RVA = "0x1C2DFC8", Offset = "0x1C2DFC8", VA = "0x1C2DFC8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000A83")]
		[Address(RVA = "0x1C2DFCC", Offset = "0x1C2DFCC", VA = "0x1C2DFCC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A85")]
		[Address(RVA = "0x1C2E078", Offset = "0x1C2E078", VA = "0x1C2E078", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000206")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D6BBC", Offset = "0x8D6BBC")]
	private sealed class <WaitToSaveLocoSettings>d__147 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000C5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000C5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x17000130")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000A8A")]
			[Address(RVA = "0x1C2E640", Offset = "0x1C2E640", VA = "0x1C2E640", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000131")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000A8C")]
			[Address(RVA = "0x1C2E688", Offset = "0x1C2E688", VA = "0x1C2E688", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A87")]
		[Address(RVA = "0x1C2E544", Offset = "0x1C2E544", VA = "0x1C2E544")]
		[DebuggerHidden]
		public <WaitToSaveLocoSettings>d__147(int <>1__state)
		{
		}

		[Token(Token = "0x6000A88")]
		[Address(RVA = "0x1C2E570", Offset = "0x1C2E570", VA = "0x1C2E570", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000A89")]
		[Address(RVA = "0x1C2E574", Offset = "0x1C2E574", VA = "0x1C2E574", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A8B")]
		[Address(RVA = "0x1C2E648", Offset = "0x1C2E648", VA = "0x1C2E648", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000207")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D6BCC", Offset = "0x8D6BCC")]
	private sealed class <RingPsychicHotline>d__148 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000C5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000C60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000C61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SmartPhoneManager <>4__this;

		[Token(Token = "0x17000132")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000A90")]
			[Address(RVA = "0x1C2E4F4", Offset = "0x1C2E4F4", VA = "0x1C2E4F4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000133")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000A92")]
			[Address(RVA = "0x1C2E53C", Offset = "0x1C2E53C", VA = "0x1C2E53C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A8D")]
		[Address(RVA = "0x1C2E0C0", Offset = "0x1C2E0C0", VA = "0x1C2E0C0")]
		[DebuggerHidden]
		public <RingPsychicHotline>d__148(int <>1__state)
		{
		}

		[Token(Token = "0x6000A8E")]
		[Address(RVA = "0x1C2E0EC", Offset = "0x1C2E0EC", VA = "0x1C2E0EC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000A8F")]
		[Address(RVA = "0x1C2E0F0", Offset = "0x1C2E0F0", VA = "0x1C2E0F0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A91")]
		[Address(RVA = "0x1C2E4FC", Offset = "0x1C2E4FC", VA = "0x1C2E4FC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000208")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D6BDC", Offset = "0x8D6BDC")]
	private sealed class <WaitToTurnOffPhone>d__149 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000C62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000C63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000C64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float timeToWaity;

		[Token(Token = "0x4000C65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SmartPhoneManager <>4__this;

		[Token(Token = "0x17000134")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000A96")]
			[Address(RVA = "0x1C2E7F4", Offset = "0x1C2E7F4", VA = "0x1C2E7F4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000135")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000A98")]
			[Address(RVA = "0x1C2E83C", Offset = "0x1C2E83C", VA = "0x1C2E83C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A93")]
		[Address(RVA = "0x1C2E690", Offset = "0x1C2E690", VA = "0x1C2E690")]
		[DebuggerHidden]
		public <WaitToTurnOffPhone>d__149(int <>1__state)
		{
		}

		[Token(Token = "0x6000A94")]
		[Address(RVA = "0x1C2E6BC", Offset = "0x1C2E6BC", VA = "0x1C2E6BC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000A95")]
		[Address(RVA = "0x1C2E6C0", Offset = "0x1C2E6C0", VA = "0x1C2E6C0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A97")]
		[Address(RVA = "0x1C2E7FC", Offset = "0x1C2E7FC", VA = "0x1C2E7FC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000209")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D6BEC", Offset = "0x8D6BEC")]
	private sealed class <InitialPhoneCall>d__150 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000C66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000C67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000C68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SmartPhoneManager <>4__this;

		[Token(Token = "0x17000136")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000A9C")]
			[Address(RVA = "0x1C2DF4C", Offset = "0x1C2DF4C", VA = "0x1C2DF4C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000137")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000A9E")]
			[Address(RVA = "0x1C2DF94", Offset = "0x1C2DF94", VA = "0x1C2DF94", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A99")]
		[Address(RVA = "0x1C2DDC8", Offset = "0x1C2DDC8", VA = "0x1C2DDC8")]
		[DebuggerHidden]
		public <InitialPhoneCall>d__150(int <>1__state)
		{
		}

		[Token(Token = "0x6000A9A")]
		[Address(RVA = "0x1C2DDF4", Offset = "0x1C2DDF4", VA = "0x1C2DDF4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000A9B")]
		[Address(RVA = "0x1C2DDF8", Offset = "0x1C2DDF8", VA = "0x1C2DDF8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A9D")]
		[Address(RVA = "0x1C2DF54", Offset = "0x1C2DF54", VA = "0x1C2DF54", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200020A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D6BFC", Offset = "0x8D6BFC")]
	private sealed class <IncomingPhoneRing>d__151 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000C69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000C6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000C6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SmartPhoneManager <>4__this;

		[Token(Token = "0x4000C6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool <keepGoing>5__2;

		[Token(Token = "0x17000138")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000AA2")]
			[Address(RVA = "0x1C2DA1C", Offset = "0x1C2DA1C", VA = "0x1C2DA1C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000139")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000AA4")]
			[Address(RVA = "0x1C2DA64", Offset = "0x1C2DA64", VA = "0x1C2DA64", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A9F")]
		[Address(RVA = "0x1C2D920", Offset = "0x1C2D920", VA = "0x1C2D920")]
		[DebuggerHidden]
		public <IncomingPhoneRing>d__151(int <>1__state)
		{
		}

		[Token(Token = "0x6000AA0")]
		[Address(RVA = "0x1C2D94C", Offset = "0x1C2D94C", VA = "0x1C2D94C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000AA1")]
		[Address(RVA = "0x1C2D950", Offset = "0x1C2D950", VA = "0x1C2D950", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000AA3")]
		[Address(RVA = "0x1C2DA24", Offset = "0x1C2DA24", VA = "0x1C2DA24", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200020B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D6C0C", Offset = "0x8D6C0C")]
	private sealed class <InitialCallAndEnd>d__152 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000C6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000C6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000C6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SmartPhoneManager <>4__this;

		[Token(Token = "0x1700013A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000AA8")]
			[Address(RVA = "0x1C2DD78", Offset = "0x1C2DD78", VA = "0x1C2DD78", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700013B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000AAA")]
			[Address(RVA = "0x1C2DDC0", Offset = "0x1C2DDC0", VA = "0x1C2DDC0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000AA5")]
		[Address(RVA = "0x1C2DA6C", Offset = "0x1C2DA6C", VA = "0x1C2DA6C")]
		[DebuggerHidden]
		public <InitialCallAndEnd>d__152(int <>1__state)
		{
		}

		[Token(Token = "0x6000AA6")]
		[Address(RVA = "0x1C2DA98", Offset = "0x1C2DA98", VA = "0x1C2DA98", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000AA7")]
		[Address(RVA = "0x1C2DA9C", Offset = "0x1C2DA9C", VA = "0x1C2DA9C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000AA9")]
		[Address(RVA = "0x1C2DD80", Offset = "0x1C2DD80", VA = "0x1C2DD80", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000C0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioSource phoneSpeaker;

	[Token(Token = "0x4000C0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioSource phoneSpeakerTalker;

	[Token(Token = "0x4000C0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool testingGame;

	[Token(Token = "0x4000C0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject lockScreen;

	[Token(Token = "0x4000C0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject blackScreen;

	[Token(Token = "0x4000C10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject homeScreen;

	[Token(Token = "0x4000C11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject dialScreen;

	[Token(Token = "0x4000C12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject pauseMusicScreen;

	[Token(Token = "0x4000C13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject musicScreen;

	[Token(Token = "0x4000C14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject snakeScreen;

	[Token(Token = "0x4000C15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject incomingCallScreen;

	[Token(Token = "0x4000C16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject infoScreen;

	[Token(Token = "0x4000C17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject callActiveScreen;

	[Token(Token = "0x4000C18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject callActiveScreenNoHangUp;

	[Token(Token = "0x4000C19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GameObject textScreen;

	[Token(Token = "0x4000C1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public GameObject quitrScreen;

	[Token(Token = "0x4000C1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public GameObject languageScreen;

	[Token(Token = "0x4000C1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public GameObject hintScreen;

	[Token(Token = "0x4000C1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public GameObject snakeHead;

	[Token(Token = "0x4000C1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public GameObject[] snakeButtons;

	[Token(Token = "0x4000C1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public GameObject unlockButton;

	[Token(Token = "0x4000C20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public GameObject[] dialButtons;

	[Token(Token = "0x4000C21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public GameObject[] homeButtons;

	[Token(Token = "0x4000C22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public GameObject theHomeButton;

	[Token(Token = "0x4000C23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public Text dialText;

	[Token(Token = "0x4000C24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public Text phoneCalledText;

	[Token(Token = "0x4000C25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public Text incomingCallText;

	[Token(Token = "0x4000C26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public int phoneNumberCounter;

	[Token(Token = "0x4000C27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public string tempPhoneNumber;

	[Token(Token = "0x4000C28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public AudioClip[] dialSounds;

	[Token(Token = "0x4000C29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public AudioClip busySignal;

	[Token(Token = "0x4000C2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public AudioClip incomingRing;

	[Token(Token = "0x4000C2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public AudioClip outgoingRing;

	[Token(Token = "0x4000C2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public AudioClip[] hintClips;

	[Token(Token = "0x4000C2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public AudioClip initialCall;

	[Token(Token = "0x4000C2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public bool musicPlaying;

	[Token(Token = "0x4000C2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x131")]
	public bool musicPlaysOnPhone;

	[Token(Token = "0x4000C30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public Text songNamePlayScreen;

	[Token(Token = "0x4000C31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public Text songNamePauseScreen;

	[Token(Token = "0x4000C32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public AudioSource musicSpeaker;

	[Token(Token = "0x4000C33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public AudioClip[] officeSongs;

	[Token(Token = "0x4000C34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public int officeSongCounter;

	[Token(Token = "0x4000C35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
	public bool canPressButton;

	[Token(Token = "0x4000C36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public GameObject handTouchingButton;

	[Token(Token = "0x4000C37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public bool phoneOn;

	[Token(Token = "0x4000C38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public GameObject sceneChanger;

	[Token(Token = "0x4000C39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public bool endGameCall;

	[Token(Token = "0x4000C3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public MusicEndOffice musicEndOffice;

	[Token(Token = "0x4000C3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public bool hintStart;

	[Token(Token = "0x4000C3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public AudioClip hintStartHint;

	[Token(Token = "0x4000C3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	public bool Check_It;

	[Token(Token = "0x4000C3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public AudioClip psychicMusic;

	[Token(Token = "0x4000C3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	public ArcadeMusicManager arcadeMusicManager;

	[Token(Token = "0x4000C40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	public bool wasOnMusicScreen;

	[Token(Token = "0x4000C41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	private Coroutine waitToTurnOff;

	[Token(Token = "0x4000C42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	private Coroutine ringTheHotline;

	[Token(Token = "0x4000C43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	private Coroutine keepRinging;

	[Token(Token = "0x4000C44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	public GameObject snapTurn;

	[Token(Token = "0x4000C45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	public GameObject movePlayer;

	[Token(Token = "0x4000C46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	public GameObject teleport;

	[Token(Token = "0x4000C47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	public GameObject turningSnapScreen;

	[Token(Token = "0x4000C48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	public GameObject turningSmoothScreen;

	[Token(Token = "0x4000C49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	public GameObject teleportScreen;

	[Token(Token = "0x4000C4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	public GameObject smoothScreenLeft;

	[Token(Token = "0x4000C4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	public GameObject smoothScreenRight;

	[Token(Token = "0x4000C4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	public Text snapTurnAngleText;

	[Token(Token = "0x4000C4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
	public Text smoothTurnAmountText;

	[Token(Token = "0x4000C4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
	public Text smoothMoveSpeedTextLeft;

	[Token(Token = "0x4000C4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
	public Text smoothMoveSpeedTextRight;

	[Token(Token = "0x4000C50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
	private Coroutine waitToSaveLoco;

	[Token(Token = "0x4000C51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
	[SerializeField]
	private TextSynchronizer textSynchronizer;

	[Token(Token = "0x4000C52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
	public PhraseAsset[] phraseAssets;

	[Token(Token = "0x4000C53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
	public PhraseAsset phraseAssetStartHint;

	[Token(Token = "0x4000C54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
	public PhraseAsset phraseAssetStartSecretary;

	[Token(Token = "0x4000C55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
	public PhraseAsset phraseAssetEndSecretary;

	[Token(Token = "0x4000C56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
	public GameObject roboCaption;

	[Token(Token = "0x4000C57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
	public GameObject subOnLine;

	[Token(Token = "0x4000C58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
	public GameObject subOffLine;

	[Token(Token = "0x4000C59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
	public GameObject subButtons;

	[Token(Token = "0x4000C5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
	public GameObject hintCancelButton;

	[Token(Token = "0x6000A37")]
	[Address(RVA = "0x166D96C", Offset = "0x166D96C", VA = "0x166D96C")]
	public void LocomotionIconPress()
	{
	}

	[Token(Token = "0x6000A38")]
	[Address(RVA = "0x166DC10", Offset = "0x166DC10", VA = "0x166DC10")]
	public void smoothLocomotionPressed()
	{
	}

	[Token(Token = "0x6000A39")]
	[Address(RVA = "0x166DF84", Offset = "0x166DF84", VA = "0x166DF84")]
	public void TeleportPressed()
	{
	}

	[Token(Token = "0x6000A3A")]
	[Address(RVA = "0x166E228", Offset = "0x166E228", VA = "0x166E228")]
	public void SwapHandsPressed()
	{
	}

	[Token(Token = "0x6000A3B")]
	[Address(RVA = "0x166E43C", Offset = "0x166E43C", VA = "0x166E43C")]
	public void TurnUpSmoothLocoSpeed()
	{
	}

	[Token(Token = "0x6000A3C")]
	[Address(RVA = "0x166E5E0", Offset = "0x166E5E0", VA = "0x166E5E0")]
	public void TurnDownSmoothLocoSpeed()
	{
	}

	[Token(Token = "0x6000A3D")]
	[Address(RVA = "0x166E784", Offset = "0x166E784", VA = "0x166E784")]
	public void TurningIconPress()
	{
	}

	[Token(Token = "0x6000A3E")]
	[Address(RVA = "0x166E928", Offset = "0x166E928", VA = "0x166E928")]
	public void snapTurningPressed()
	{
	}

	[Token(Token = "0x6000A3F")]
	[Address(RVA = "0x166EAD0", Offset = "0x166EAD0", VA = "0x166EAD0")]
	public void smoothTurningPressed()
	{
	}

	[Token(Token = "0x6000A40")]
	[Address(RVA = "0x166EC94", Offset = "0x166EC94", VA = "0x166EC94")]
	public void TurnUpTurnSpeed()
	{
	}

	[Token(Token = "0x6000A41")]
	[Address(RVA = "0x166EE4C", Offset = "0x166EE4C", VA = "0x166EE4C")]
	public void TurnDownTurnSpeed()
	{
	}

	[Token(Token = "0x6000A42")]
	[Address(RVA = "0x166F008", Offset = "0x166F008", VA = "0x166F008")]
	public void TurnUpTurnDegrees()
	{
	}

	[Token(Token = "0x6000A43")]
	[Address(RVA = "0x166F184", Offset = "0x166F184", VA = "0x166F184")]
	public void TurnDownTurnDegrees()
	{
	}

	[Token(Token = "0x6000A44")]
	[Address(RVA = "0x166F2FC", Offset = "0x166F2FC", VA = "0x166F2FC")]
	public void hintHangUpPressed()
	{
	}

	[Token(Token = "0x6000A45")]
	[Address(RVA = "0x166F730", Offset = "0x166F730", VA = "0x166F730")]
	public void TurnUpVolume()
	{
	}

	[Token(Token = "0x6000A46")]
	[Address(RVA = "0x166F760", Offset = "0x166F760", VA = "0x166F760")]
	public void TurnDownVolume()
	{
	}

	[Token(Token = "0x6000A47")]
	[Address(RVA = "0x166F378", Offset = "0x166F378", VA = "0x166F378")]
	public void TurnPhoneOn()
	{
	}

	[Token(Token = "0x6000A48")]
	[Address(RVA = "0x166FB64", Offset = "0x166FB64", VA = "0x166FB64")]
	public void UnlockPhone()
	{
	}

	[Token(Token = "0x6000A49")]
	[Address(RVA = "0x166FC50", Offset = "0x166FC50", VA = "0x166FC50")]
	public void phoneIconPress()
	{
	}

	[Token(Token = "0x6000A4A")]
	[Address(RVA = "0x166FDE8", Offset = "0x166FDE8", VA = "0x166FDE8")]
	public void textIconPress()
	{
	}

	[Token(Token = "0x6000A4B")]
	[Address(RVA = "0x166FE58", Offset = "0x166FE58", VA = "0x166FE58")]
	public void snakeIconPress()
	{
	}

	[Token(Token = "0x6000A4C")]
	[Address(RVA = "0x166FEC8", Offset = "0x166FEC8", VA = "0x166FEC8")]
	public void musicIconPress()
	{
	}

	[Token(Token = "0x6000A4D")]
	[Address(RVA = "0x166FF5C", Offset = "0x166FF5C", VA = "0x166FF5C")]
	public void infoIconPress()
	{
	}

	[Token(Token = "0x6000A4E")]
	[Address(RVA = "0x166FFCC", Offset = "0x166FFCC", VA = "0x166FFCC")]
	public void pauseButtonPress()
	{
	}

	[Token(Token = "0x6000A4F")]
	[Address(RVA = "0x1670034", Offset = "0x1670034", VA = "0x1670034")]
	public void quitrIconPress()
	{
	}

	[Token(Token = "0x6000A50")]
	[Address(RVA = "0x16700A4", Offset = "0x16700A4", VA = "0x16700A4")]
	public void languageIconPress()
	{
	}

	[Token(Token = "0x6000A51")]
	[Address(RVA = "0x1670220", Offset = "0x1670220", VA = "0x1670220")]
	public void hintIconPress()
	{
	}

	[Token(Token = "0x6000A52")]
	[Address(RVA = "0x1670330", Offset = "0x1670330", VA = "0x1670330")]
	public void mainMenuPress()
	{
	}

	[Token(Token = "0x6000A53")]
	[Address(RVA = "0x167045C", Offset = "0x167045C", VA = "0x167045C")]
	public void quitMenuPress()
	{
	}

	[Token(Token = "0x6000A54")]
	[Address(RVA = "0x167057C", Offset = "0x167057C", VA = "0x167057C")]
	public void EnglishPress()
	{
	}

	[Token(Token = "0x6000A55")]
	[Address(RVA = "0x1670768", Offset = "0x1670768", VA = "0x1670768")]
	public void ChinesePress()
	{
	}

	[Token(Token = "0x6000A56")]
	[Address(RVA = "0x1670924", Offset = "0x1670924", VA = "0x1670924")]
	public void SpanishPress()
	{
	}

	[Token(Token = "0x6000A57")]
	[Address(RVA = "0x1670AC0", Offset = "0x1670AC0", VA = "0x1670AC0")]
	public void FrenchPress()
	{
	}

	[Token(Token = "0x6000A58")]
	[Address(RVA = "0x1670C5C", Offset = "0x1670C5C", VA = "0x1670C5C")]
	public void GermanPress()
	{
	}

	[Token(Token = "0x6000A59")]
	[Address(RVA = "0x1670DF8", Offset = "0x1670DF8", VA = "0x1670DF8")]
	public void ItalianPress()
	{
	}

	[Token(Token = "0x6000A5A")]
	[Address(RVA = "0x1670F94", Offset = "0x1670F94", VA = "0x1670F94")]
	public void JapanPress()
	{
	}

	[Token(Token = "0x6000A5B")]
	[Address(RVA = "0x1671130", Offset = "0x1671130", VA = "0x1671130")]
	public void KoreanPress()
	{
	}

	[Token(Token = "0x6000A5C")]
	[Address(RVA = "0x16712CC", Offset = "0x16712CC", VA = "0x16712CC")]
	public void SubOn()
	{
	}

	[Token(Token = "0x6000A5D")]
	[Address(RVA = "0x167137C", Offset = "0x167137C", VA = "0x167137C")]
	public void SubOff()
	{
	}

	[Token(Token = "0x6000A5E")]
	[Address(RVA = "0x1670520", Offset = "0x1670520", VA = "0x1670520")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E2858", Offset = "0x8E2858")]
	private IEnumerator QuitDelay()
	{
		return null;
	}

	[Token(Token = "0x6000A5F")]
	[Address(RVA = "0x167142C", Offset = "0x167142C", VA = "0x167142C")]
	public void playButtonPress()
	{
	}

	[Token(Token = "0x6000A60")]
	[Address(RVA = "0x1671498", Offset = "0x1671498", VA = "0x1671498")]
	public void rewindButtonPress()
	{
	}

	[Token(Token = "0x6000A61")]
	[Address(RVA = "0x16714F4", Offset = "0x16714F4", VA = "0x16714F4")]
	public void skipButtonPress()
	{
	}

	[Token(Token = "0x6000A62")]
	[Address(RVA = "0x16716F8", Offset = "0x16716F8", VA = "0x16716F8")]
	public void onePressed()
	{
	}

	[Token(Token = "0x6000A63")]
	[Address(RVA = "0x167199C", Offset = "0x167199C", VA = "0x167199C")]
	public void twoPressed()
	{
	}

	[Token(Token = "0x6000A64")]
	[Address(RVA = "0x1671A58", Offset = "0x1671A58", VA = "0x1671A58")]
	public void threePressed()
	{
	}

	[Token(Token = "0x6000A65")]
	[Address(RVA = "0x1671B14", Offset = "0x1671B14", VA = "0x1671B14")]
	public void fourPressed()
	{
	}

	[Token(Token = "0x6000A66")]
	[Address(RVA = "0x1671BC0", Offset = "0x1671BC0", VA = "0x1671BC0")]
	public void fivePressed()
	{
	}

	[Token(Token = "0x6000A67")]
	[Address(RVA = "0x1671C6C", Offset = "0x1671C6C", VA = "0x1671C6C")]
	public void sixPressed()
	{
	}

	[Token(Token = "0x6000A68")]
	[Address(RVA = "0x1671D18", Offset = "0x1671D18", VA = "0x1671D18")]
	public void sevenPressed()
	{
	}

	[Token(Token = "0x6000A69")]
	[Address(RVA = "0x1671DC4", Offset = "0x1671DC4", VA = "0x1671DC4")]
	public void eightPressed()
	{
	}

	[Token(Token = "0x6000A6A")]
	[Address(RVA = "0x1671E70", Offset = "0x1671E70", VA = "0x1671E70")]
	public void ninePressed()
	{
	}

	[Token(Token = "0x6000A6B")]
	[Address(RVA = "0x1671F1C", Offset = "0x1671F1C", VA = "0x1671F1C")]
	public void starPressed()
	{
	}

	[Token(Token = "0x6000A6C")]
	[Address(RVA = "0x1671FC8", Offset = "0x1671FC8", VA = "0x1671FC8")]
	public void zeroPressed()
	{
	}

	[Token(Token = "0x6000A6D")]
	[Address(RVA = "0x1672074", Offset = "0x1672074", VA = "0x1672074")]
	public void poundPressed()
	{
	}

	[Token(Token = "0x6000A6E")]
	[Address(RVA = "0x1672120", Offset = "0x1672120", VA = "0x1672120")]
	public void xPressed()
	{
	}

	[Token(Token = "0x6000A6F")]
	[Address(RVA = "0x1672194", Offset = "0x1672194", VA = "0x1672194")]
	public void callPressed()
	{
	}

	[Token(Token = "0x6000A70")]
	[Address(RVA = "0x1672354", Offset = "0x1672354", VA = "0x1672354")]
	public void answerPressed()
	{
	}

	[Token(Token = "0x6000A71")]
	[Address(RVA = "0x1672484", Offset = "0x1672484", VA = "0x1672484")]
	public void hangUpPressed()
	{
	}

	[Token(Token = "0x6000A72")]
	[Address(RVA = "0x1672294", Offset = "0x1672294", VA = "0x1672294")]
	public void checkPhoneNumber()
	{
	}

	[Token(Token = "0x6000A73")]
	[Address(RVA = "0x166FAB8", Offset = "0x166FAB8", VA = "0x166FAB8")]
	public void turnOnHomeColliders()
	{
	}

	[Token(Token = "0x6000A74")]
	[Address(RVA = "0x166DB64", Offset = "0x166DB64", VA = "0x166DB64")]
	public void turnOffHomeColliders()
	{
	}

	[Token(Token = "0x6000A75")]
	[Address(RVA = "0x166FD40", Offset = "0x166FD40", VA = "0x166FD40")]
	public void turnOnDialColliders()
	{
	}

	[Token(Token = "0x6000A76")]
	[Address(RVA = "0x166FA10", Offset = "0x166FA10", VA = "0x166FA10")]
	public void turnOffDialColliders()
	{
	}

	[Token(Token = "0x6000A77")]
	[Address(RVA = "0x16717B0", Offset = "0x16717B0", VA = "0x16717B0")]
	public void adjustPhoneNumber(string numberDialed)
	{
	}

	[Token(Token = "0x6000A78")]
	[Address(RVA = "0x1672564", Offset = "0x1672564", VA = "0x1672564")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A79")]
	[Address(RVA = "0x1672768", Offset = "0x1672768", VA = "0x1672768")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A7A")]
	[Address(RVA = "0x166DB08", Offset = "0x166DB08", VA = "0x166DB08")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E28B8", Offset = "0x8E28B8")]
	private IEnumerator WaitToSaveLocoSettings()
	{
		return null;
	}

	[Token(Token = "0x6000A7B")]
	[Address(RVA = "0x16702B8", Offset = "0x16702B8", VA = "0x16702B8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E2918", Offset = "0x8E2918")]
	private IEnumerator RingPsychicHotline()
	{
		return null;
	}

	[Token(Token = "0x6000A7C")]
	[Address(RVA = "0x166F790", Offset = "0x166F790", VA = "0x166F790")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E2978", Offset = "0x8E2978")]
	private IEnumerator WaitToTurnOffPhone(float timeToWaity)
	{
		return null;
	}

	[Token(Token = "0x6000A7D")]
	[Address(RVA = "0x1672678", Offset = "0x1672678", VA = "0x1672678")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E29D8", Offset = "0x8E29D8")]
	private IEnumerator InitialPhoneCall()
	{
		return null;
	}

	[Token(Token = "0x6000A7E")]
	[Address(RVA = "0x16726F0", Offset = "0x16726F0", VA = "0x16726F0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E2A38", Offset = "0x8E2A38")]
	private IEnumerator IncomingPhoneRing()
	{
		return null;
	}

	[Token(Token = "0x6000A7F")]
	[Address(RVA = "0x167240C", Offset = "0x167240C", VA = "0x167240C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E2A98", Offset = "0x8E2A98")]
	private IEnumerator InitialCallAndEnd()
	{
		return null;
	}

	[Token(Token = "0x6000A80")]
	[Address(RVA = "0x167276C", Offset = "0x167276C", VA = "0x167276C")]
	public SmartPhoneManager()
	{
	}
}
[Token(Token = "0x200020C")]
public class Snake : MonoBehaviour
{
	[Token(Token = "0x4000C70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float xChange;

	[Token(Token = "0x4000C71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float yChange;

	[Token(Token = "0x4000C72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float tempValue;

	[Token(Token = "0x4000C73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float tempYValue;

	[Token(Token = "0x4000C74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string directionOfSnake;

	[Token(Token = "0x4000C75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool gameStarted;

	[Token(Token = "0x4000C76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject handTouchingButton;

	[Token(Token = "0x4000C77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public SmartPhoneManager smartPhoneManager;

	[Token(Token = "0x4000C78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject snakeFoodPrefab;

	[Token(Token = "0x4000C79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject snakeFoodMade;

	[Token(Token = "0x4000C7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform snakeFoodParent;

	[Token(Token = "0x4000C7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float xFoodSpawn;

	[Token(Token = "0x4000C7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float yFoodSpawn;

	[Token(Token = "0x4000C7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject[] allSnakeFoods;

	[Token(Token = "0x4000C7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public List<Transform> tail;

	[Token(Token = "0x4000C7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public bool snakeAte;

	[Token(Token = "0x4000C80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject tailPrefab;

	[Token(Token = "0x6000AAB")]
	[Address(RVA = "0x1672780", Offset = "0x1672780", VA = "0x1672780")]
	private void Move()
	{
	}

	[Token(Token = "0x6000AAC")]
	[Address(RVA = "0x1672C64", Offset = "0x1672C64", VA = "0x1672C64")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000AAD")]
	[Address(RVA = "0x1672DF0", Offset = "0x1672DF0", VA = "0x1672DF0")]
	public void SpawnSnakeFood()
	{
	}

	[Token(Token = "0x6000AAE")]
	[Address(RVA = "0x1672F18", Offset = "0x1672F18", VA = "0x1672F18")]
	public void LeftPushed()
	{
	}

	[Token(Token = "0x6000AAF")]
	[Address(RVA = "0x1672FA4", Offset = "0x1672FA4", VA = "0x1672FA4")]
	public void RightPushed()
	{
	}

	[Token(Token = "0x6000AB0")]
	[Address(RVA = "0x1673030", Offset = "0x1673030", VA = "0x1673030")]
	public void UpPushed()
	{
	}

	[Token(Token = "0x6000AB1")]
	[Address(RVA = "0x16730BC", Offset = "0x16730BC", VA = "0x16730BC")]
	public void DownPushed()
	{
	}

	[Token(Token = "0x6000AB2")]
	[Address(RVA = "0x166F818", Offset = "0x166F818", VA = "0x166F818")]
	public void RestartTheGame()
	{
	}

	[Token(Token = "0x6000AB3")]
	[Address(RVA = "0x1673148", Offset = "0x1673148", VA = "0x1673148")]
	private void Start()
	{
	}

	[Token(Token = "0x6000AB4")]
	[Address(RVA = "0x16731B0", Offset = "0x16731B0", VA = "0x16731B0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000AB5")]
	[Address(RVA = "0x16731B4", Offset = "0x16731B4", VA = "0x16731B4")]
	public Snake()
	{
	}
}
[Token(Token = "0x200020D")]
public class SnakeGameDude : MonoBehaviour
{
	[Token(Token = "0x200020E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D6C1C", Offset = "0x8D6C1C")]
	private sealed class <MoveTitle>d__48 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000CAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000CB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000CB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SnakeGameDude <>4__this;

		[Token(Token = "0x1700013C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000AC8")]
			[Address(RVA = "0x1C2E994", Offset = "0x1C2E994", VA = "0x1C2E994", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700013D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000ACA")]
			[Address(RVA = "0x1C2E9DC", Offset = "0x1C2E9DC", VA = "0x1C2E9DC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000AC5")]
		[Address(RVA = "0x1C2E844", Offset = "0x1C2E844", VA = "0x1C2E844")]
		[DebuggerHidden]
		public <MoveTitle>d__48(int <>1__state)
		{
		}

		[Token(Token = "0x6000AC6")]
		[Address(RVA = "0x1C2E870", Offset = "0x1C2E870", VA = "0x1C2E870", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000AC7")]
		[Address(RVA = "0x1C2E874", Offset = "0x1C2E874", VA = "0x1C2E874", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000AC9")]
		[Address(RVA = "0x1C2E99C", Offset = "0x1C2E99C", VA = "0x1C2E99C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200020F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D6C2C", Offset = "0x8D6C2C")]
	private sealed class <WaitForStartScreen>d__49 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000CB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000CB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000CB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SnakeGameDude <>4__this;

		[Token(Token = "0x1700013E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000ACE")]
			[Address(RVA = "0x1C2EB50", Offset = "0x1C2EB50", VA = "0x1C2EB50", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700013F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000AD0")]
			[Address(RVA = "0x1C2EB98", Offset = "0x1C2EB98", VA = "0x1C2EB98", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000ACB")]
		[Address(RVA = "0x1C2E9E4", Offset = "0x1C2E9E4", VA = "0x1C2E9E4")]
		[DebuggerHidden]
		public <WaitForStartScreen>d__49(int <>1__state)
		{
		}

		[Token(Token = "0x6000ACC")]
		[Address(RVA = "0x1C2EA10", Offset = "0x1C2EA10", VA = "0x1C2EA10", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000ACD")]
		[Address(RVA = "0x1C2EA14", Offset = "0x1C2EA14", VA = "0x1C2EA14", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000ACF")]
		[Address(RVA = "0x1C2EB58", Offset = "0x1C2EB58", VA = "0x1C2EB58", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000C81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float xChange;

	[Token(Token = "0x4000C82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float yChange;

	[Token(Token = "0x4000C83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float tempValue;

	[Token(Token = "0x4000C84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float tempYValue;

	[Token(Token = "0x4000C85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string directionOfSnake;

	[Token(Token = "0x4000C86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool gameStarted;

	[Token(Token = "0x4000C87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject handTouchingButton;

	[Token(Token = "0x4000C88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public SmartPhoneManager smartPhoneManager;

	[Token(Token = "0x4000C89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject snakeFoodPrefab;

	[Token(Token = "0x4000C8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject snakeFoodMade;

	[Token(Token = "0x4000C8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform snakeFoodParent;

	[Token(Token = "0x4000C8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float xFoodSpawn;

	[Token(Token = "0x4000C8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float yFoodSpawn;

	[Token(Token = "0x4000C8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject[] allSnakeFoods;

	[Token(Token = "0x4000C8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public List<Transform> tail;

	[Token(Token = "0x4000C90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public List<Vector3> availableTiles;

	[Token(Token = "0x4000C91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public List<bool> tailBool;

	[Token(Token = "0x4000C92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public List<bool> availableTilesBool;

	[Token(Token = "0x4000C93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Vector3 tempTailHolder;

	[Token(Token = "0x4000C94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public bool snakeAte;

	[Token(Token = "0x4000C95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public GameObject tailPrefab;

	[Token(Token = "0x4000C96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public GameObject nexusHeadPrefab;

	[Token(Token = "0x4000C97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public bool snakeFoodReady;

	[Token(Token = "0x4000C98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB1")]
	public bool snakePrep;

	[Token(Token = "0x4000C99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB2")]
	public bool makeSnakeFood;

	[Token(Token = "0x4000C9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Transform titleEndSpot;

	[Token(Token = "0x4000C9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public GameObject gameDudeTitle;

	[Token(Token = "0x4000C9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public AudioSource gameStart;

	[Token(Token = "0x4000C9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public GameObject startScreen;

	[Token(Token = "0x4000C9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public GameObject endScreen;

	[Token(Token = "0x4000C9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public GameObject gridScreen;

	[Token(Token = "0x4000CA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public GameObject blankScreen;

	[Token(Token = "0x4000CA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public bool gameDudeOff;

	[Token(Token = "0x4000CA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF1")]
	public bool startScreenOn;

	[Token(Token = "0x4000CA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF2")]
	public bool gridScreenOn;

	[Token(Token = "0x4000CA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF3")]
	public bool timeToMoveTitle;

	[Token(Token = "0x4000CA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	public bool timeMovingDone;

	[Token(Token = "0x4000CA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public float timeElapsed;

	[Token(Token = "0x4000CA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	public Vector3 titleStartSpot;

	[Token(Token = "0x4000CA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public Transform titleStartTransform;

	[Token(Token = "0x4000CA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public float startY;

	[Token(Token = "0x4000CAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	public float titleY;

	[Token(Token = "0x4000CAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public int levelCount;

	[Token(Token = "0x4000CAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
	public int totalCount;

	[Token(Token = "0x4000CAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public GameObject redDot;

	[Token(Token = "0x4000CAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public bool arcadeOnlyMode;

	[Token(Token = "0x6000AB6")]
	[Address(RVA = "0x1673244", Offset = "0x1673244", VA = "0x1673244")]
	public void StartTheGameDude()
	{
	}

	[Token(Token = "0x6000AB7")]
	[Address(RVA = "0x167334C", Offset = "0x167334C", VA = "0x167334C")]
	public void StartTheGridScreen()
	{
	}

	[Token(Token = "0x6000AB8")]
	[Address(RVA = "0x16732D4", Offset = "0x16732D4", VA = "0x16732D4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E2D28", Offset = "0x8E2D28")]
	private IEnumerator MoveTitle()
	{
		return null;
	}

	[Token(Token = "0x6000AB9")]
	[Address(RVA = "0x1673454", Offset = "0x1673454", VA = "0x1673454")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E2D88", Offset = "0x8E2D88")]
	private IEnumerator WaitForStartScreen()
	{
		return null;
	}

	[Token(Token = "0x6000ABA")]
	[Address(RVA = "0x16734CC", Offset = "0x16734CC", VA = "0x16734CC")]
	private void Move()
	{
	}

	[Token(Token = "0x6000ABB")]
	[Address(RVA = "0x16746F4", Offset = "0x16746F4", VA = "0x16746F4")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000ABC")]
	[Address(RVA = "0x167458C", Offset = "0x167458C", VA = "0x167458C")]
	public void SpawnSnakeFood()
	{
	}

	[Token(Token = "0x6000ABD")]
	[Address(RVA = "0x1674C6C", Offset = "0x1674C6C", VA = "0x1674C6C")]
	public void LeftPushed()
	{
	}

	[Token(Token = "0x6000ABE")]
	[Address(RVA = "0x1674CD4", Offset = "0x1674CD4", VA = "0x1674CD4")]
	public void RightPushed()
	{
	}

	[Token(Token = "0x6000ABF")]
	[Address(RVA = "0x1674D3C", Offset = "0x1674D3C", VA = "0x1674D3C")]
	public void UpPushed()
	{
	}

	[Token(Token = "0x6000AC0")]
	[Address(RVA = "0x1674DA4", Offset = "0x1674DA4", VA = "0x1674DA4")]
	public void DownPushed()
	{
	}

	[Token(Token = "0x6000AC1")]
	[Address(RVA = "0x1674244", Offset = "0x1674244", VA = "0x1674244")]
	public void RestartTheGame()
	{
	}

	[Token(Token = "0x6000AC2")]
	[Address(RVA = "0x1674E0C", Offset = "0x1674E0C", VA = "0x1674E0C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000AC3")]
	[Address(RVA = "0x1674F1C", Offset = "0x1674F1C", VA = "0x1674F1C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000AC4")]
	[Address(RVA = "0x1675168", Offset = "0x1675168", VA = "0x1675168")]
	public SnakeGameDude()
	{
	}
}
[Token(Token = "0x2000210")]
public class StartSkeeBall : MonoBehaviour
{
	[Token(Token = "0x4000CB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool leftStart;

	[Token(Token = "0x4000CB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SkeeBallManager skeeBallManager;

	[Token(Token = "0x4000CB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Animator buttonPush;

	[Token(Token = "0x4000CB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AudioSource leftStartSound;

	[Token(Token = "0x4000CB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AudioSource rightStartSound;

	[Token(Token = "0x6000AD1")]
	[Address(RVA = "0x167B8C8", Offset = "0x167B8C8", VA = "0x167B8C8")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000AD2")]
	[Address(RVA = "0x167B9EC", Offset = "0x167B9EC", VA = "0x167B9EC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000AD3")]
	[Address(RVA = "0x167B9F0", Offset = "0x167B9F0", VA = "0x167B9F0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000AD4")]
	[Address(RVA = "0x167B9F4", Offset = "0x167B9F4", VA = "0x167B9F4")]
	public StartSkeeBall()
	{
	}
}
[Token(Token = "0x2000211")]
public class StartTimeLineTrigger : MonoBehaviour
{
	[Token(Token = "0x2000212")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D6C3C", Offset = "0x8D6C3C")]
	private sealed class <FadeOutMusic>d__13 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000CC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000CC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000CC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public StartTimeLineTrigger <>4__this;

		[Token(Token = "0x4000CC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float FadeTime;

		[Token(Token = "0x4000CCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <startVolume>5__2;

		[Token(Token = "0x17000140")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000ADB")]
			[Address(RVA = "0x1C2F2EC", Offset = "0x1C2F2EC", VA = "0x1C2F2EC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000141")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000ADD")]
			[Address(RVA = "0x1C2F334", Offset = "0x1C2F334", VA = "0x1C2F334", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000AD8")]
		[Address(RVA = "0x1C2F1CC", Offset = "0x1C2F1CC", VA = "0x1C2F1CC")]
		[DebuggerHidden]
		public <FadeOutMusic>d__13(int <>1__state)
		{
		}

		[Token(Token = "0x6000AD9")]
		[Address(RVA = "0x1C2F1F8", Offset = "0x1C2F1F8", VA = "0x1C2F1F8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000ADA")]
		[Address(RVA = "0x1C2F1FC", Offset = "0x1C2F1FC", VA = "0x1C2F1FC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000ADC")]
		[Address(RVA = "0x1C2F2F4", Offset = "0x1C2F2F4", VA = "0x1C2F2F4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000CBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int howManyEnables;

	[Token(Token = "0x4000CBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject robot;

	[Token(Token = "0x4000CBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject roboIntroMusic;

	[Token(Token = "0x4000CBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Animator roboAnimator;

	[Token(Token = "0x4000CBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ParticleSystem leftParticles;

	[Token(Token = "0x4000CBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ParticleSystem rightParticles;

	[Token(Token = "0x4000CC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AudioSource audio;

	[Token(Token = "0x4000CC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AudioSource robotVoiceSpot;

	[Token(Token = "0x4000CC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public DeliaManager deliaManager;

	[Token(Token = "0x4000CC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public PlayableDirector furboPlayable;

	[Token(Token = "0x4000CC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GunPickUp gunPickUp;

	[Token(Token = "0x4000CC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject deliaCaption;

	[Token(Token = "0x6000AD5")]
	[Address(RVA = "0x167B9FC", Offset = "0x167B9FC", VA = "0x167B9FC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000AD6")]
	[Address(RVA = "0x167BFD4", Offset = "0x167BFD4", VA = "0x167BFD4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E2E88", Offset = "0x8E2E88")]
	public IEnumerator FadeOutMusic(float FadeTime)
	{
		return null;
	}

	[Token(Token = "0x6000AD7")]
	[Address(RVA = "0x167C05C", Offset = "0x167C05C", VA = "0x167C05C")]
	public StartTimeLineTrigger()
	{
	}
}
[Token(Token = "0x2000213")]
public class StartTimelineAudioTrigger : MonoBehaviour
{
	[Token(Token = "0x4000CCB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioSource robotVoiceSpot;

	[Token(Token = "0x4000CCC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioClip[] robolines;

	[Token(Token = "0x4000CCD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int howManyEnables;

	[Token(Token = "0x4000CCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private TextSynchronizer textSynchronizer;

	[Token(Token = "0x4000CCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public PhraseAsset[] phraseAssetRobolines;

	[Token(Token = "0x4000CD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject roboCaption;

	[Token(Token = "0x4000CD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public RoboManager roboManager;

	[Token(Token = "0x6000ADE")]
	[Address(RVA = "0x167C064", Offset = "0x167C064", VA = "0x167C064")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000ADF")]
	[Address(RVA = "0x167C070", Offset = "0x167C070", VA = "0x167C070")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000AE0")]
	[Address(RVA = "0x167C1E0", Offset = "0x167C1E0", VA = "0x167C1E0")]
	public StartTimelineAudioTrigger()
	{
	}
}
[Token(Token = "0x2000214")]
public class TechnoWarriorButtPress : MonoBehaviour
{
	[Token(Token = "0x2000215")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D6C4C", Offset = "0x8D6C4C")]
	private sealed class <WaitForSound>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000CD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000CD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000CD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TechnoWarriorButtPress <>4__this;

		[Token(Token = "0x17000142")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000AE8")]
			[Address(RVA = "0x1C2F434", Offset = "0x1C2F434", VA = "0x1C2F434", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000143")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000AEA")]
			[Address(RVA = "0x1C2F47C", Offset = "0x1C2F47C", VA = "0x1C2F47C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000AE5")]
		[Address(RVA = "0x1C2F33C", Offset = "0x1C2F33C", VA = "0x1C2F33C")]
		[DebuggerHidden]
		public <WaitForSound>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6000AE6")]
		[Address(RVA = "0x1C2F368", Offset = "0x1C2F368", VA = "0x1C2F368", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000AE7")]
		[Address(RVA = "0x1C2F36C", Offset = "0x1C2F36C", VA = "0x1C2F36C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000AE9")]
		[Address(RVA = "0x1C2F43C", Offset = "0x1C2F43C", VA = "0x1C2F43C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000CD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Animator buttonPush;

	[Token(Token = "0x4000CD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject handTouchingButton;

	[Token(Token = "0x4000CD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public UnityEvent keyPressed;

	[Token(Token = "0x4000CD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool canPress;

	[Token(Token = "0x4000CD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float waitTime;

	[Token(Token = "0x6000AE1")]
	[Address(RVA = "0x167CAFC", Offset = "0x167CAFC", VA = "0x167CAFC")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000AE2")]
	[Address(RVA = "0x167CD14", Offset = "0x167CD14", VA = "0x167CD14")]
	private void Start()
	{
	}

	[Token(Token = "0x6000AE3")]
	[Address(RVA = "0x167CC9C", Offset = "0x167CC9C", VA = "0x167CC9C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E2F38", Offset = "0x8E2F38")]
	private IEnumerator WaitForSound()
	{
		return null;
	}

	[Token(Token = "0x6000AE4")]
	[Address(RVA = "0x167CD80", Offset = "0x167CD80", VA = "0x167CD80")]
	public TechnoWarriorButtPress()
	{
	}
}
[Token(Token = "0x2000216")]
public class TechnoWarriorManager : MonoBehaviour
{
	[Token(Token = "0x2000217")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D6C5C", Offset = "0x8D6C5C")]
	private sealed class <WaitStart>d__20 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000CEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000CEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000CEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TechnoWarriorManager <>4__this;

		[Token(Token = "0x17000144")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000AFC")]
			[Address(RVA = "0x1C2F5A8", Offset = "0x1C2F5A8", VA = "0x1C2F5A8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000145")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000AFE")]
			[Address(RVA = "0x1C2F5F0", Offset = "0x1C2F5F0", VA = "0x1C2F5F0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000AF9")]
		[Address(RVA = "0x1C2F484", Offset = "0x1C2F484", VA = "0x1C2F484")]
		[DebuggerHidden]
		public <WaitStart>d__20(int <>1__state)
		{
		}

		[Token(Token = "0x6000AFA")]
		[Address(RVA = "0x1C2F4B0", Offset = "0x1C2F4B0", VA = "0x1C2F4B0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000AFB")]
		[Address(RVA = "0x1C2F4B4", Offset = "0x1C2F4B4", VA = "0x1C2F4B4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000AFD")]
		[Address(RVA = "0x1C2F5B0", Offset = "0x1C2F5B0", VA = "0x1C2F5B0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000CDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool doorOpen;

	[Token(Token = "0x4000CDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int codeLength;

	[Token(Token = "0x4000CDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string keyPadCode;

	[Token(Token = "0x4000CDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string codeEntered;

	[Token(Token = "0x4000CDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string tempString;

	[Token(Token = "0x4000CDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject blackScreen;

	[Token(Token = "0x4000CE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject videoScreen;

	[Token(Token = "0x4000CE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject endScreen;

	[Token(Token = "0x4000CE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject startScreen;

	[Token(Token = "0x4000CE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public MediaPlayer.FileLocation m_videoLocation;

	[Token(Token = "0x4000CE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public MediaPlayer mp;

	[Token(Token = "0x4000CE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public OpenMachineManager openMachineManager;

	[Token(Token = "0x4000CE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public AudioSource gameStatic;

	[Token(Token = "0x4000CE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public bool runTest;

	[Token(Token = "0x4000CE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
	public bool videoFinished;

	[Token(Token = "0x4000CE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public ArcadeMusicManager arcadeMusicManager;

	[Token(Token = "0x6000AEB")]
	[Address(RVA = "0x167CD98", Offset = "0x167CD98", VA = "0x167CD98")]
	private void Update()
	{
	}

	[Token(Token = "0x6000AEC")]
	[Address(RVA = "0x167CFA8", Offset = "0x167CFA8", VA = "0x167CFA8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000AED")]
	[Address(RVA = "0x167D0BC", Offset = "0x167D0BC", VA = "0x167D0BC")]
	public void activateStartScreen()
	{
	}

	[Token(Token = "0x6000AEE")]
	[Address(RVA = "0x167D0FC", Offset = "0x167D0FC", VA = "0x167D0FC")]
	public void checkCodes()
	{
	}

	[Token(Token = "0x6000AEF")]
	[Address(RVA = "0x167D26C", Offset = "0x167D26C", VA = "0x167D26C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E2FE8", Offset = "0x8E2FE8")]
	public IEnumerator WaitStart()
	{
		return null;
	}

	[Token(Token = "0x6000AF0")]
	[Address(RVA = "0x167D2E4", Offset = "0x167D2E4", VA = "0x167D2E4")]
	public void onePressed()
	{
	}

	[Token(Token = "0x6000AF1")]
	[Address(RVA = "0x167D3D8", Offset = "0x167D3D8", VA = "0x167D3D8")]
	public void twoPressed()
	{
	}

	[Token(Token = "0x6000AF2")]
	[Address(RVA = "0x167D4CC", Offset = "0x167D4CC", VA = "0x167D4CC")]
	public void threePressed()
	{
	}

	[Token(Token = "0x6000AF3")]
	[Address(RVA = "0x167D5C0", Offset = "0x167D5C0", VA = "0x167D5C0")]
	public void fourPressed()
	{
	}

	[Token(Token = "0x6000AF4")]
	[Address(RVA = "0x167D6B4", Offset = "0x167D6B4", VA = "0x167D6B4")]
	public void fivePressed()
	{
	}

	[Token(Token = "0x6000AF5")]
	[Address(RVA = "0x167D7A8", Offset = "0x167D7A8", VA = "0x167D7A8")]
	public void sixPressed()
	{
	}

	[Token(Token = "0x6000AF6")]
	[Address(RVA = "0x167D89C", Offset = "0x167D89C", VA = "0x167D89C")]
	public void sevenPressed()
	{
	}

	[Token(Token = "0x6000AF7")]
	[Address(RVA = "0x167D990", Offset = "0x167D990", VA = "0x167D990")]
	public void eightPressed()
	{
	}

	[Token(Token = "0x6000AF8")]
	[Address(RVA = "0x167DA84", Offset = "0x167DA84", VA = "0x167DA84")]
	public TechnoWarriorManager()
	{
	}
}
[Token(Token = "0x2000218")]
public class TommyController : MonoBehaviour
{
	[Token(Token = "0x2000219")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D6C6C", Offset = "0x8D6C6C")]
	private sealed class <GoodTom>d__27 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000D01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000D02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000D03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TommyController <>4__this;

		[Token(Token = "0x17000146")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000B0F")]
			[Address(RVA = "0x1C30E2C", Offset = "0x1C30E2C", VA = "0x1C30E2C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000147")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000B11")]
			[Address(RVA = "0x1C30E74", Offset = "0x1C30E74", VA = "0x1C30E74", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B0C")]
		[Address(RVA = "0x1C30BFC", Offset = "0x1C30BFC", VA = "0x1C30BFC")]
		[DebuggerHidden]
		public <GoodTom>d__27(int <>1__state)
		{
		}

		[Token(Token = "0x6000B0D")]
		[Address(RVA = "0x1C30C28", Offset = "0x1C30C28", VA = "0x1C30C28", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000B0E")]
		[Address(RVA = "0x1C30C2C", Offset = "0x1C30C2C", VA = "0x1C30C2C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B10")]
		[Address(RVA = "0x1C30E34", Offset = "0x1C30E34", VA = "0x1C30E34", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200021A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D6C7C", Offset = "0x8D6C7C")]
	private sealed class <BadTom>d__28 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000D04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000D05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000D06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TommyController <>4__this;

		[Token(Token = "0x17000148")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000B15")]
			[Address(RVA = "0x1C30A70", Offset = "0x1C30A70", VA = "0x1C30A70", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000149")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000B17")]
			[Address(RVA = "0x1C30AB8", Offset = "0x1C30AB8", VA = "0x1C30AB8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B12")]
		[Address(RVA = "0x1C30768", Offset = "0x1C30768", VA = "0x1C30768")]
		[DebuggerHidden]
		public <BadTom>d__28(int <>1__state)
		{
		}

		[Token(Token = "0x6000B13")]
		[Address(RVA = "0x1C30794", Offset = "0x1C30794", VA = "0x1C30794", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000B14")]
		[Address(RVA = "0x1C30798", Offset = "0x1C30798", VA = "0x1C30798", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B16")]
		[Address(RVA = "0x1C30A78", Offset = "0x1C30A78", VA = "0x1C30A78", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200021B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D6C8C", Offset = "0x8D6C8C")]
	private sealed class <CaptionDone>d__29 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000D07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000D08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000D09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TommyController <>4__this;

		[Token(Token = "0x1700014A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000B1B")]
			[Address(RVA = "0x1C30BAC", Offset = "0x1C30BAC", VA = "0x1C30BAC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700014B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000B1D")]
			[Address(RVA = "0x1C30BF4", Offset = "0x1C30BF4", VA = "0x1C30BF4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B18")]
		[Address(RVA = "0x1C30AC0", Offset = "0x1C30AC0", VA = "0x1C30AC0")]
		[DebuggerHidden]
		public <CaptionDone>d__29(int <>1__state)
		{
		}

		[Token(Token = "0x6000B19")]
		[Address(RVA = "0x1C30AEC", Offset = "0x1C30AEC", VA = "0x1C30AEC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000B1A")]
		[Address(RVA = "0x1C30AF0", Offset = "0x1C30AF0", VA = "0x1C30AF0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B1C")]
		[Address(RVA = "0x1C30BB4", Offset = "0x1C30BB4", VA = "0x1C30BB4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000CED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject happySprite1;

	[Token(Token = "0x4000CEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject happySprite2;

	[Token(Token = "0x4000CEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject madSprite1;

	[Token(Token = "0x4000CF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject madSprite2;

	[Token(Token = "0x4000CF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject deadSprite;

	[Token(Token = "0x4000CF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject fightSprite;

	[Token(Token = "0x4000CF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Material screenMaterial;

	[Token(Token = "0x4000CF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public MeshRenderer tommyScreen;

	[Token(Token = "0x4000CF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public BoxCollider hitBox;

	[Token(Token = "0x4000CF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public bool alwaysTrue;

	[Token(Token = "0x4000CF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public int goodTomCounter;

	[Token(Token = "0x4000CF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public int fightSpriteCounter;

	[Token(Token = "0x4000CF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public PlayableDirector tommyPlayable;

	[Token(Token = "0x4000CFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Animator tommyAnimator;

	[Token(Token = "0x4000CFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public AudioSource downSound;

	[Token(Token = "0x4000CFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private TextSynchronizer textSynchronizer;

	[Token(Token = "0x4000CFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public PhraseAsset phraseAssetFight;

	[Token(Token = "0x4000CFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public GameObject roboCaption;

	[Token(Token = "0x4000CFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Coroutine goodTommyRoutine;

	[Token(Token = "0x4000D00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Coroutine naughtyTommyRoutine;

	[Token(Token = "0x6000AFF")]
	[Address(RVA = "0x12E0514", Offset = "0x12E0514", VA = "0x12E0514")]
	public void DoTommyStartAnimation()
	{
	}

	[Token(Token = "0x6000B00")]
	[Address(RVA = "0x12E056C", Offset = "0x12E056C", VA = "0x12E056C")]
	public void DoTommyEndAnimation()
	{
	}

	[Token(Token = "0x6000B01")]
	[Address(RVA = "0x12E05D4", Offset = "0x12E05D4", VA = "0x12E05D4")]
	public void TurnScreenOn()
	{
	}

	[Token(Token = "0x6000B02")]
	[Address(RVA = "0x12E05F8", Offset = "0x12E05F8", VA = "0x12E05F8")]
	public void HappyTommy()
	{
	}

	[Token(Token = "0x6000B03")]
	[Address(RVA = "0x12E06AC", Offset = "0x12E06AC", VA = "0x12E06AC")]
	public void BadTommy()
	{
	}

	[Token(Token = "0x6000B04")]
	[Address(RVA = "0x12E06B0", Offset = "0x12E06B0", VA = "0x12E06B0")]
	public void TommyHit()
	{
	}

	[Token(Token = "0x6000B05")]
	[Address(RVA = "0x12E0794", Offset = "0x12E0794", VA = "0x12E0794")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000B06")]
	[Address(RVA = "0x12E0634", Offset = "0x12E0634", VA = "0x12E0634")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E3098", Offset = "0x8E3098")]
	private IEnumerator GoodTom()
	{
		return null;
	}

	[Token(Token = "0x6000B07")]
	[Address(RVA = "0x12E0828", Offset = "0x12E0828", VA = "0x12E0828")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E30F8", Offset = "0x8E30F8")]
	private IEnumerator BadTom()
	{
		return null;
	}

	[Token(Token = "0x6000B08")]
	[Address(RVA = "0x12E08A0", Offset = "0x12E08A0", VA = "0x12E08A0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E3158", Offset = "0x8E3158")]
	private IEnumerator CaptionDone()
	{
		return null;
	}

	[Token(Token = "0x6000B09")]
	[Address(RVA = "0x12E0918", Offset = "0x12E0918", VA = "0x12E0918")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B0A")]
	[Address(RVA = "0x12E091C", Offset = "0x12E091C", VA = "0x12E091C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B0B")]
	[Address(RVA = "0x12E0920", Offset = "0x12E0920", VA = "0x12E0920")]
	public TommyController()
	{
	}
}
[Token(Token = "0x200021C")]
public class TommyTimelineActivation : MonoBehaviour
{
	[Token(Token = "0x4000D0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MachineFader machineFader;

	[Token(Token = "0x4000D0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioSource cabSound;

	[Token(Token = "0x4000D0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TommyController tommyController;

	[Token(Token = "0x4000D0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AudioSource tommySong;

	[Token(Token = "0x4000D0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Animator tommyAnimator;

	[Token(Token = "0x4000D0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public PlayableDirector tommyPlayable;

	[Token(Token = "0x4000D10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public PlayableDirector endPlayable;

	[Token(Token = "0x4000D11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AudioSource sammyEndSong;

	[Token(Token = "0x4000D12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Animator sammyAnimator;

	[Token(Token = "0x4000D13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject robot;

	[Token(Token = "0x4000D14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public int howManyEnables;

	[Token(Token = "0x4000D15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private TextSynchronizer textSynchronizer;

	[Token(Token = "0x4000D16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public PhraseAsset phraseAssetPeaceOfDeath;

	[Token(Token = "0x4000D17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject roboCaption;

	[Token(Token = "0x6000B1E")]
	[Address(RVA = "0x12E0930", Offset = "0x12E0930", VA = "0x12E0930")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000B1F")]
	[Address(RVA = "0x12E0BC8", Offset = "0x12E0BC8", VA = "0x12E0BC8")]
	public TommyTimelineActivation()
	{
	}
}
[Token(Token = "0x200021D")]
public class TrackPad : MonoBehaviour
{
	[Token(Token = "0x200021E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D6C9C", Offset = "0x8D6C9C")]
	private sealed class <WaitForThatClick>d__18 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000D27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000D28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000D29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TrackPad <>4__this;

		[Token(Token = "0x1700014C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000B2A")]
			[Address(RVA = "0x1C30F60", Offset = "0x1C30F60", VA = "0x1C30F60", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700014D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000B2C")]
			[Address(RVA = "0x1C30FA8", Offset = "0x1C30FA8", VA = "0x1C30FA8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B27")]
		[Address(RVA = "0x1C30E7C", Offset = "0x1C30E7C", VA = "0x1C30E7C")]
		[DebuggerHidden]
		public <WaitForThatClick>d__18(int <>1__state)
		{
		}

		[Token(Token = "0x6000B28")]
		[Address(RVA = "0x1C30EA8", Offset = "0x1C30EA8", VA = "0x1C30EA8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000B29")]
		[Address(RVA = "0x1C30EAC", Offset = "0x1C30EAC", VA = "0x1C30EAC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B2B")]
		[Address(RVA = "0x1C30F68", Offset = "0x1C30F68", VA = "0x1C30F68", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000D18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject screenArrow;

	[Token(Token = "0x4000D19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject handUsed;

	[Token(Token = "0x4000D1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector3 tempPosition;

	[Token(Token = "0x4000D1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public Vector3 tempyPos;

	[Token(Token = "0x4000D1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float changeInX;

	[Token(Token = "0x4000D1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float lastXPosition;

	[Token(Token = "0x4000D1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float changeInY;

	[Token(Token = "0x4000D1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float lastYPosition;

	[Token(Token = "0x4000D20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float senPad;

	[Token(Token = "0x4000D21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float timer;

	[Token(Token = "0x4000D22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float lastTriggerTime;

	[Token(Token = "0x4000D23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public int clickCount;

	[Token(Token = "0x4000D24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Coroutine waitForSecondClick;

	[Token(Token = "0x4000D25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public CompKeyboardManager compKeyboardManager;

	[Token(Token = "0x4000D26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool keyboardButton;

	[Token(Token = "0x6000B20")]
	[Address(RVA = "0x12E10D0", Offset = "0x12E10D0", VA = "0x12E10D0")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000B21")]
	[Address(RVA = "0x12E219C", Offset = "0x12E219C", VA = "0x12E219C")]
	private void OnTriggerStay(Collider other)
	{
	}

	[Token(Token = "0x6000B22")]
	[Address(RVA = "0x12E264C", Offset = "0x12E264C", VA = "0x12E264C")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000B23")]
	[Address(RVA = "0x12E2124", Offset = "0x12E2124", VA = "0x12E2124")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E32A8", Offset = "0x8E32A8")]
	private IEnumerator WaitForThatClick()
	{
		return null;
	}

	[Token(Token = "0x6000B24")]
	[Address(RVA = "0x12E26DC", Offset = "0x12E26DC", VA = "0x12E26DC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B25")]
	[Address(RVA = "0x12E2728", Offset = "0x12E2728", VA = "0x12E2728")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B26")]
	[Address(RVA = "0x12E272C", Offset = "0x12E272C", VA = "0x12E272C")]
	public TrackPad()
	{
	}
}
[Token(Token = "0x200021F")]
public class TriggerPlay : MonoBehaviour
{
	[Token(Token = "0x2000220")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D6CAC", Offset = "0x8D6CAC")]
	private sealed class <ContinueShooting>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000D32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000D33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000D34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TriggerPlay <>4__this;

		[Token(Token = "0x1700014E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000B36")]
			[Address(RVA = "0x1C31838", Offset = "0x1C31838", VA = "0x1C31838", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700014F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000B38")]
			[Address(RVA = "0x1C31880", Offset = "0x1C31880", VA = "0x1C31880", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B33")]
		[Address(RVA = "0x1C31750", Offset = "0x1C31750", VA = "0x1C31750")]
		[DebuggerHidden]
		public <ContinueShooting>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x6000B34")]
		[Address(RVA = "0x1C3177C", Offset = "0x1C3177C", VA = "0x1C3177C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000B35")]
		[Address(RVA = "0x1C31780", Offset = "0x1C31780", VA = "0x1C31780", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B37")]
		[Address(RVA = "0x1C31840", Offset = "0x1C31840", VA = "0x1C31840", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000D2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject prefabBullet;

	[Token(Token = "0x4000D2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float shootForce;

	[Token(Token = "0x4000D2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioClip[] gunNoises;

	[Token(Token = "0x4000D2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool isGooseGame;

	[Token(Token = "0x4000D2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject gamesManager;

	[Token(Token = "0x4000D2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool rightHand;

	[Token(Token = "0x4000D30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Coroutine startShooting;

	[Token(Token = "0x4000D31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool autoShootCheck;

	[Token(Token = "0x6000B2D")]
	[Address(RVA = "0x12E6A20", Offset = "0x12E6A20", VA = "0x12E6A20")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000B2E")]
	[Address(RVA = "0x12E6A30", Offset = "0x12E6A30", VA = "0x12E6A30")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B2F")]
	[Address(RVA = "0x12E6A34", Offset = "0x12E6A34", VA = "0x12E6A34")]
	public void Shoot()
	{
	}

	[Token(Token = "0x6000B30")]
	[Address(RVA = "0x12E6BC0", Offset = "0x12E6BC0", VA = "0x12E6BC0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B31")]
	[Address(RVA = "0x12E6D94", Offset = "0x12E6D94", VA = "0x12E6D94")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E3358", Offset = "0x8E3358")]
	private IEnumerator ContinueShooting()
	{
		return null;
	}

	[Token(Token = "0x6000B32")]
	[Address(RVA = "0x12E6E0C", Offset = "0x12E6E0C", VA = "0x12E6E0C")]
	public TriggerPlay()
	{
	}
}
[Token(Token = "0x2000221")]
public class TurnOffAfterLoad : MonoBehaviour
{
	[Token(Token = "0x2000222")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D6CBC", Offset = "0x8D6CBC")]
	private sealed class <WaitForDVDPlayer>d__1 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000D35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000D36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000D37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TurnOffAfterLoad <>4__this;

		[Token(Token = "0x17000150")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000B3F")]
			[Address(RVA = "0x1C319B4", Offset = "0x1C319B4", VA = "0x1C319B4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000151")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000B41")]
			[Address(RVA = "0x1C319FC", Offset = "0x1C319FC", VA = "0x1C319FC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B3C")]
		[Address(RVA = "0x1C318C0", Offset = "0x1C318C0", VA = "0x1C318C0")]
		[DebuggerHidden]
		public <WaitForDVDPlayer>d__1(int <>1__state)
		{
		}

		[Token(Token = "0x6000B3D")]
		[Address(RVA = "0x1C318EC", Offset = "0x1C318EC", VA = "0x1C318EC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000B3E")]
		[Address(RVA = "0x1C318F0", Offset = "0x1C318F0", VA = "0x1C318F0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B40")]
		[Address(RVA = "0x1C319BC", Offset = "0x1C319BC", VA = "0x1C319BC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x6000B39")]
	[Address(RVA = "0x103EDD4", Offset = "0x103EDD4", VA = "0x103EDD4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B3A")]
	[Address(RVA = "0x103EE00", Offset = "0x103EE00", VA = "0x103EE00")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E3408", Offset = "0x8E3408")]
	private IEnumerator WaitForDVDPlayer()
	{
		return null;
	}

	[Token(Token = "0x6000B3B")]
	[Address(RVA = "0x103EE78", Offset = "0x103EE78", VA = "0x103EE78")]
	public TurnOffAfterLoad()
	{
	}
}
[Token(Token = "0x2000223")]
public class TvTrigger : MonoBehaviour
{
	[Token(Token = "0x2000224")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D6CCC", Offset = "0x8D6CCC")]
	private sealed class <WaitStart>d__21 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000D4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000D4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000D4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TvTrigger <>4__this;

		[Token(Token = "0x17000152")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000B4C")]
			[Address(RVA = "0x1C31D5C", Offset = "0x1C31D5C", VA = "0x1C31D5C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000153")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000B4E")]
			[Address(RVA = "0x1C31DA4", Offset = "0x1C31DA4", VA = "0x1C31DA4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B49")]
		[Address(RVA = "0x1C31B48", Offset = "0x1C31B48", VA = "0x1C31B48")]
		[DebuggerHidden]
		public <WaitStart>d__21(int <>1__state)
		{
		}

		[Token(Token = "0x6000B4A")]
		[Address(RVA = "0x1C31B74", Offset = "0x1C31B74", VA = "0x1C31B74", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000B4B")]
		[Address(RVA = "0x1C31B78", Offset = "0x1C31B78", VA = "0x1C31B78", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B4D")]
		[Address(RVA = "0x1C31D64", Offset = "0x1C31D64", VA = "0x1C31D64", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000225")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D6CDC", Offset = "0x8D6CDC")]
	private sealed class <WaitInAir>d__22 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000D4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000D4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000D50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TvTrigger <>4__this;

		[Token(Token = "0x17000154")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000B52")]
			[Address(RVA = "0x1C31AF8", Offset = "0x1C31AF8", VA = "0x1C31AF8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000155")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000B54")]
			[Address(RVA = "0x1C31B40", Offset = "0x1C31B40", VA = "0x1C31B40", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B4F")]
		[Address(RVA = "0x1C31A04", Offset = "0x1C31A04", VA = "0x1C31A04")]
		[DebuggerHidden]
		public <WaitInAir>d__22(int <>1__state)
		{
		}

		[Token(Token = "0x6000B50")]
		[Address(RVA = "0x1C31A30", Offset = "0x1C31A30", VA = "0x1C31A30", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000B51")]
		[Address(RVA = "0x1C31A34", Offset = "0x1C31A34", VA = "0x1C31A34", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B53")]
		[Address(RVA = "0x1C31B00", Offset = "0x1C31B00", VA = "0x1C31B00", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000D38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MediaPlayer.FileLocation m_videoLocation;

	[Token(Token = "0x4000D39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MediaPlayer mp;

	[Token(Token = "0x4000D3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public MeshRenderer videoScreenRender;

	[Token(Token = "0x4000D3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ParticleSystem particleSystem;

	[Token(Token = "0x4000D3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform snapTo;

	[Token(Token = "0x4000D3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Rigidbody body;

	[Token(Token = "0x4000D3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float snapTime;

	[Token(Token = "0x4000D3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float dropTimer;

	[Token(Token = "0x4000D40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public int totalMoveTimes;

	[Token(Token = "0x4000D41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform[] snapToTransforms;

	[Token(Token = "0x4000D42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject airPuck;

	[Token(Token = "0x4000D43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public bool goToNextSpot;

	[Token(Token = "0x4000D44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
	public bool runTest;

	[Token(Token = "0x4000D45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public AirHockeyManager airHockeyManager;

	[Token(Token = "0x4000D46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public bool videoFinished;

	[Token(Token = "0x4000D47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public ArcadeMusicManager arcadeMusicManager;

	[Token(Token = "0x4000D48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private TextSynchronizer textSynchronizer;

	[Token(Token = "0x4000D49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public PhraseAsset phraseAssetBreakRoom;

	[Token(Token = "0x4000D4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public GameObject roboCaption;

	[Token(Token = "0x6000B42")]
	[Address(RVA = "0x103EF30", Offset = "0x103EF30", VA = "0x103EF30")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000B43")]
	[Address(RVA = "0x103F0F8", Offset = "0x103F0F8", VA = "0x103F0F8")]
	public void RunTheTest()
	{
	}

	[Token(Token = "0x6000B44")]
	[Address(RVA = "0x103F130", Offset = "0x103F130", VA = "0x103F130")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E34B8", Offset = "0x8E34B8")]
	public IEnumerator WaitStart()
	{
		return null;
	}

	[Token(Token = "0x6000B45")]
	[Address(RVA = "0x103F1A8", Offset = "0x103F1A8", VA = "0x103F1A8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E3518", Offset = "0x8E3518")]
	public IEnumerator WaitInAir()
	{
		return null;
	}

	[Token(Token = "0x6000B46")]
	[Address(RVA = "0x103F220", Offset = "0x103F220", VA = "0x103F220")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B47")]
	[Address(RVA = "0x103F434", Offset = "0x103F434", VA = "0x103F434")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000B48")]
	[Address(RVA = "0x103FA1C", Offset = "0x103FA1C", VA = "0x103FA1C")]
	public TvTrigger()
	{
	}
}
[Token(Token = "0x2000226")]
public class VCRButtonPressManager : MonoBehaviour
{
	[Token(Token = "0x4000D51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public VCRManager vcrManager;

	[Token(Token = "0x6000B55")]
	[Address(RVA = "0x104274C", Offset = "0x104274C", VA = "0x104274C")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000B56")]
	[Address(RVA = "0x10427DC", Offset = "0x10427DC", VA = "0x10427DC")]
	public VCRButtonPressManager()
	{
	}
}
[Token(Token = "0x2000227")]
public class VCRColliderScript : MonoBehaviour
{
	[Token(Token = "0x4000D52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject vcrFlap;

	[Token(Token = "0x4000D53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public VCRManager vcrManager;

	[Token(Token = "0x4000D54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool Check_It;

	[Token(Token = "0x4000D55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject dvdParent;

	[Token(Token = "0x6000B57")]
	[Address(RVA = "0x10427E4", Offset = "0x10427E4", VA = "0x10427E4")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000B58")]
	[Address(RVA = "0x1042B5C", Offset = "0x1042B5C", VA = "0x1042B5C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B59")]
	[Address(RVA = "0x1042B60", Offset = "0x1042B60", VA = "0x1042B60")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B5A")]
	[Address(RVA = "0x1042B64", Offset = "0x1042B64", VA = "0x1042B64")]
	public VCRColliderScript()
	{
	}
}
[Token(Token = "0x2000228")]
public class VCRManager : MonoBehaviour
{
	[Token(Token = "0x2000229")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D6CEC", Offset = "0x8D6CEC")]
	private sealed class <LoadTheDVD>d__48 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000D81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000D82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000D83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public VCRManager <>4__this;

		[Token(Token = "0x17000156")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000B6D")]
			[Address(RVA = "0x1C326F0", Offset = "0x1C326F0", VA = "0x1C326F0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000157")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000B6F")]
			[Address(RVA = "0x1C32738", Offset = "0x1C32738", VA = "0x1C32738", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B6A")]
		[Address(RVA = "0x1C3254C", Offset = "0x1C3254C", VA = "0x1C3254C")]
		[DebuggerHidden]
		public <LoadTheDVD>d__48(int <>1__state)
		{
		}

		[Token(Token = "0x6000B6B")]
		[Address(RVA = "0x1C32578", Offset = "0x1C32578", VA = "0x1C32578", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000B6C")]
		[Address(RVA = "0x1C3257C", Offset = "0x1C3257C", VA = "0x1C3257C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B6E")]
		[Address(RVA = "0x1C326F8", Offset = "0x1C326F8", VA = "0x1C326F8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200022A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D6CFC", Offset = "0x8D6CFC")]
	private sealed class <ActivateTape>d__49 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000D84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000D85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000D86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public VCRManager <>4__this;

		[Token(Token = "0x17000158")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000B73")]
			[Address(RVA = "0x1C31F9C", Offset = "0x1C31F9C", VA = "0x1C31F9C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000159")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000B75")]
			[Address(RVA = "0x1C31FE4", Offset = "0x1C31FE4", VA = "0x1C31FE4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B70")]
		[Address(RVA = "0x1C31DAC", Offset = "0x1C31DAC", VA = "0x1C31DAC")]
		[DebuggerHidden]
		public <ActivateTape>d__49(int <>1__state)
		{
		}

		[Token(Token = "0x6000B71")]
		[Address(RVA = "0x1C31DD8", Offset = "0x1C31DD8", VA = "0x1C31DD8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000B72")]
		[Address(RVA = "0x1C31DDC", Offset = "0x1C31DDC", VA = "0x1C31DDC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B74")]
		[Address(RVA = "0x1C31FA4", Offset = "0x1C31FA4", VA = "0x1C31FA4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200022B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D6D0C", Offset = "0x8D6D0C")]
	private sealed class <OpenDVDPlayerDisk>d__50 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000D87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000D88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000D89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public VCRManager <>4__this;

		[Token(Token = "0x1700015A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000B79")]
			[Address(RVA = "0x1C32A44", Offset = "0x1C32A44", VA = "0x1C32A44", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700015B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000B7B")]
			[Address(RVA = "0x1C32A8C", Offset = "0x1C32A8C", VA = "0x1C32A8C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B76")]
		[Address(RVA = "0x1C32740", Offset = "0x1C32740", VA = "0x1C32740")]
		[DebuggerHidden]
		public <OpenDVDPlayerDisk>d__50(int <>1__state)
		{
		}

		[Token(Token = "0x6000B77")]
		[Address(RVA = "0x1C3276C", Offset = "0x1C3276C", VA = "0x1C3276C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000B78")]
		[Address(RVA = "0x1C32770", Offset = "0x1C32770", VA = "0x1C32770", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B7A")]
		[Address(RVA = "0x1C32A4C", Offset = "0x1C32A4C", VA = "0x1C32A4C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200022C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D6D1C", Offset = "0x8D6D1C")]
	private sealed class <OpenDVDPlayerNoDisk>d__51 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000D8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000D8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000D8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public VCRManager <>4__this;

		[Token(Token = "0x1700015C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000B7F")]
			[Address(RVA = "0x1C32C58", Offset = "0x1C32C58", VA = "0x1C32C58", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700015D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000B81")]
			[Address(RVA = "0x1C32CA0", Offset = "0x1C32CA0", VA = "0x1C32CA0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B7C")]
		[Address(RVA = "0x1C32A94", Offset = "0x1C32A94", VA = "0x1C32A94")]
		[DebuggerHidden]
		public <OpenDVDPlayerNoDisk>d__51(int <>1__state)
		{
		}

		[Token(Token = "0x6000B7D")]
		[Address(RVA = "0x1C32AC0", Offset = "0x1C32AC0", VA = "0x1C32AC0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000B7E")]
		[Address(RVA = "0x1C32AC4", Offset = "0x1C32AC4", VA = "0x1C32AC4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B80")]
		[Address(RVA = "0x1C32C60", Offset = "0x1C32C60", VA = "0x1C32C60", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200022D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D6D2C", Offset = "0x8D6D2C")]
	private sealed class <CloseDVDPlayerNoDisk>d__52 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000D8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000D8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000D8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public VCRManager <>4__this;

		[Token(Token = "0x1700015E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000B85")]
			[Address(RVA = "0x1C324FC", Offset = "0x1C324FC", VA = "0x1C324FC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700015F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000B87")]
			[Address(RVA = "0x1C32544", Offset = "0x1C32544", VA = "0x1C32544", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B82")]
		[Address(RVA = "0x1C32338", Offset = "0x1C32338", VA = "0x1C32338")]
		[DebuggerHidden]
		public <CloseDVDPlayerNoDisk>d__52(int <>1__state)
		{
		}

		[Token(Token = "0x6000B83")]
		[Address(RVA = "0x1C32364", Offset = "0x1C32364", VA = "0x1C32364", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000B84")]
		[Address(RVA = "0x1C32368", Offset = "0x1C32368", VA = "0x1C32368", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B86")]
		[Address(RVA = "0x1C32504", Offset = "0x1C32504", VA = "0x1C32504", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200022E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D6D3C", Offset = "0x8D6D3C")]
	private sealed class <CloseDVDPlayerDisk>d__53 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000D90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000D91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000D92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public VCRManager <>4__this;

		[Token(Token = "0x17000160")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000B8B")]
			[Address(RVA = "0x1C322E8", Offset = "0x1C322E8", VA = "0x1C322E8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000161")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000B8D")]
			[Address(RVA = "0x1C32330", Offset = "0x1C32330", VA = "0x1C32330", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B88")]
		[Address(RVA = "0x1C31FEC", Offset = "0x1C31FEC", VA = "0x1C31FEC")]
		[DebuggerHidden]
		public <CloseDVDPlayerDisk>d__53(int <>1__state)
		{
		}

		[Token(Token = "0x6000B89")]
		[Address(RVA = "0x1C32018", Offset = "0x1C32018", VA = "0x1C32018", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000B8A")]
		[Address(RVA = "0x1C3201C", Offset = "0x1C3201C", VA = "0x1C3201C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B8C")]
		[Address(RVA = "0x1C322F0", Offset = "0x1C322F0", VA = "0x1C322F0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200022F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D6D4C", Offset = "0x8D6D4C")]
	private sealed class <WaitForDVDPlayer>d__54 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000D93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000D94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000D95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public VCRManager <>4__this;

		[Token(Token = "0x17000162")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000B91")]
			[Address(RVA = "0x1C32D90", Offset = "0x1C32D90", VA = "0x1C32D90", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000163")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000B93")]
			[Address(RVA = "0x1C32DD8", Offset = "0x1C32DD8", VA = "0x1C32DD8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B8E")]
		[Address(RVA = "0x1C32CA8", Offset = "0x1C32CA8", VA = "0x1C32CA8")]
		[DebuggerHidden]
		public <WaitForDVDPlayer>d__54(int <>1__state)
		{
		}

		[Token(Token = "0x6000B8F")]
		[Address(RVA = "0x1C32CD4", Offset = "0x1C32CD4", VA = "0x1C32CD4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000B90")]
		[Address(RVA = "0x1C32CD8", Offset = "0x1C32CD8", VA = "0x1C32CD8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B92")]
		[Address(RVA = "0x1C32D98", Offset = "0x1C32D98", VA = "0x1C32D98", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000D56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool canPressButton;

	[Token(Token = "0x4000D57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject handTouchingButton;

	[Token(Token = "0x4000D58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioSource VCRSpeaker;

	[Token(Token = "0x4000D59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AudioSource VCRPlaySpeaker;

	[Token(Token = "0x4000D5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AudioClip openNoDVD;

	[Token(Token = "0x4000D5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AudioClip closeNoDVD;

	[Token(Token = "0x4000D5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AudioClip openDVD;

	[Token(Token = "0x4000D5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AudioClip closeDVD;

	[Token(Token = "0x4000D5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool tapeInVCR;

	[Token(Token = "0x4000D5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject vcrFlap;

	[Token(Token = "0x4000D60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject vhsTapeInVCR;

	[Token(Token = "0x4000D61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Transform tapeExitPos;

	[Token(Token = "0x4000D62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public bool tapeBusy;

	[Token(Token = "0x4000D63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject logoOnTV;

	[Token(Token = "0x4000D64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GameObject logoOnTVForErase;

	[Token(Token = "0x4000D65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public GameObject logoOnTVForArcade;

	[Token(Token = "0x4000D66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Text gameText;

	[Token(Token = "0x4000D67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Text percentageText;

	[Token(Token = "0x4000D68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public GameObject allScreenTyping;

	[Token(Token = "0x4000D69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public GameObject allScreenTyping2;

	[Token(Token = "0x4000D6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public GameObject allScreenTyping3;

	[Token(Token = "0x4000D6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public GameObject videoCover;

	[Token(Token = "0x4000D6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public int percentageComplete;

	[Token(Token = "0x4000D6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	public int recordPressCounter;

	[Token(Token = "0x4000D6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public GameObject sceneChanger;

	[Token(Token = "0x4000D6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public bool dvdDoorClosed;

	[Token(Token = "0x4000D70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public GameObject loadingScreen;

	[Token(Token = "0x4000D71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public GameObject playarrowText;

	[Token(Token = "0x4000D72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public GameObject loadingText;

	[Token(Token = "0x4000D73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public GameObject ejectText;

	[Token(Token = "0x4000D74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public GameObject closeText;

	[Token(Token = "0x4000D75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public GameObject screenSaver;

	[Token(Token = "0x4000D76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public GameObject menuHome;

	[Token(Token = "0x4000D77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public BoxCollider dvdCollideSpot;

	[Token(Token = "0x4000D78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public bool playSelected;

	[Token(Token = "0x4000D79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public GameObject playUnderline;

	[Token(Token = "0x4000D7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public GameObject eraseUnderline;

	[Token(Token = "0x4000D7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public bool returnSelected;

	[Token(Token = "0x4000D7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public GameObject returnUnderline;

	[Token(Token = "0x4000D7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public GameObject erase2Underline;

	[Token(Token = "0x4000D7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public bool arcadeDisk;

	[Token(Token = "0x4000D7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public GameObject play3Underline;

	[Token(Token = "0x4000D80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public GameObject erase3Underline;

	[Token(Token = "0x6000B5B")]
	[Address(RVA = "0x1042B6C", Offset = "0x1042B6C", VA = "0x1042B6C")]
	public void PlayPressed()
	{
	}

	[Token(Token = "0x6000B5C")]
	[Address(RVA = "0x10431D0", Offset = "0x10431D0", VA = "0x10431D0")]
	public void EjectPressed()
	{
	}

	[Token(Token = "0x6000B5D")]
	[Address(RVA = "0x1043730", Offset = "0x1043730", VA = "0x1043730")]
	public void RecordPressed()
	{
	}

	[Token(Token = "0x6000B5E")]
	[Address(RVA = "0x1042FCC", Offset = "0x1042FCC", VA = "0x1042FCC")]
	public void SwitchTheScreenStuffOn()
	{
	}

	[Token(Token = "0x6000B5F")]
	[Address(RVA = "0x1043988", Offset = "0x1043988", VA = "0x1043988")]
	public void SwitchTheScreenStuffOff()
	{
	}

	[Token(Token = "0x6000B60")]
	[Address(RVA = "0x1043A04", Offset = "0x1043A04", VA = "0x1043A04")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E3618", Offset = "0x8E3618")]
	private IEnumerator LoadTheDVD()
	{
		return null;
	}

	[Token(Token = "0x6000B61")]
	[Address(RVA = "0x1043A7C", Offset = "0x1043A7C", VA = "0x1043A7C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E3678", Offset = "0x8E3678")]
	private IEnumerator ActivateTape()
	{
		return null;
	}

	[Token(Token = "0x6000B62")]
	[Address(RVA = "0x1043550", Offset = "0x1043550", VA = "0x1043550")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E36D8", Offset = "0x8E36D8")]
	private IEnumerator OpenDVDPlayerDisk()
	{
		return null;
	}

	[Token(Token = "0x6000B63")]
	[Address(RVA = "0x10435C8", Offset = "0x10435C8", VA = "0x10435C8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E3738", Offset = "0x8E3738")]
	private IEnumerator OpenDVDPlayerNoDisk()
	{
		return null;
	}

	[Token(Token = "0x6000B64")]
	[Address(RVA = "0x1043640", Offset = "0x1043640", VA = "0x1043640")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E3798", Offset = "0x8E3798")]
	private IEnumerator CloseDVDPlayerNoDisk()
	{
		return null;
	}

	[Token(Token = "0x6000B65")]
	[Address(RVA = "0x10436B8", Offset = "0x10436B8", VA = "0x10436B8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E37F8", Offset = "0x8E37F8")]
	private IEnumerator CloseDVDPlayerDisk()
	{
		return null;
	}

	[Token(Token = "0x6000B66")]
	[Address(RVA = "0x1043AF4", Offset = "0x1043AF4", VA = "0x1043AF4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E3858", Offset = "0x8E3858")]
	private IEnumerator WaitForDVDPlayer()
	{
		return null;
	}

	[Token(Token = "0x6000B67")]
	[Address(RVA = "0x1043B6C", Offset = "0x1043B6C", VA = "0x1043B6C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B68")]
	[Address(RVA = "0x1043B78", Offset = "0x1043B78", VA = "0x1043B78")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B69")]
	[Address(RVA = "0x1043B7C", Offset = "0x1043B7C", VA = "0x1043B7C")]
	public VCRManager()
	{
	}
}
[Token(Token = "0x2000230")]
public class VHSTapeSave : MonoBehaviour
{
	[Token(Token = "0x4000D96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string saveName;

	[Token(Token = "0x6000B94")]
	[Address(RVA = "0x1043B8C", Offset = "0x1043B8C", VA = "0x1043B8C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B95")]
	[Address(RVA = "0x1043B90", Offset = "0x1043B90", VA = "0x1043B90")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B96")]
	[Address(RVA = "0x1043B94", Offset = "0x1043B94", VA = "0x1043B94")]
	public VHSTapeSave()
	{
	}
}
[Token(Token = "0x2000231")]
public class VRGrab : MonoBehaviour
{
	[Token(Token = "0x6000B97")]
	[Address(RVA = "0x1043B9C", Offset = "0x1043B9C", VA = "0x1043B9C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B98")]
	[Address(RVA = "0x1043BA0", Offset = "0x1043BA0", VA = "0x1043BA0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B99")]
	[Address(RVA = "0x1043BA4", Offset = "0x1043BA4", VA = "0x1043BA4")]
	public VRGrab()
	{
	}
}
[Token(Token = "0x2000232")]
public class WearingHat : MonoBehaviour
{
	[Token(Token = "0x4000D97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool wearingTheHat;

	[Token(Token = "0x4000D98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject headCollider;

	[Token(Token = "0x4000D99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool grabCheck;

	[Token(Token = "0x6000B9A")]
	[Address(RVA = "0x1044B5C", Offset = "0x1044B5C", VA = "0x1044B5C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B9B")]
	[Address(RVA = "0x1044BB8", Offset = "0x1044BB8", VA = "0x1044BB8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B9C")]
	[Address(RVA = "0x1044D44", Offset = "0x1044D44", VA = "0x1044D44")]
	public WearingHat()
	{
	}
}
[Token(Token = "0x2000233")]
public class WhatArrowIsCollidingWith : MonoBehaviour
{
	[Token(Token = "0x4000D9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string buttonCollidingWith;

	[Token(Token = "0x6000B9D")]
	[Address(RVA = "0x1044D54", Offset = "0x1044D54", VA = "0x1044D54")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000B9E")]
	[Address(RVA = "0x1044E08", Offset = "0x1044E08", VA = "0x1044E08")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000B9F")]
	[Address(RVA = "0x1044EB8", Offset = "0x1044EB8", VA = "0x1044EB8")]
	public WhatArrowIsCollidingWith()
	{
	}
}
[Token(Token = "0x2000234")]
public class WhichHand : MonoBehaviour
{
	[Token(Token = "0x4000D9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject handObject;

	[Token(Token = "0x6000BA0")]
	[Address(RVA = "0x1044EC0", Offset = "0x1044EC0", VA = "0x1044EC0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000BA1")]
	[Address(RVA = "0x1044EC4", Offset = "0x1044EC4", VA = "0x1044EC4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000BA2")]
	[Address(RVA = "0x1044EC8", Offset = "0x1044EC8", VA = "0x1044EC8")]
	public WhichHand()
	{
	}
}
[Token(Token = "0x2000235")]
public class circulardrive : MonoBehaviour
{
	[Token(Token = "0x6000BA3")]
	[Address(RVA = "0x1045A3C", Offset = "0x1045A3C", VA = "0x1045A3C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000BA4")]
	[Address(RVA = "0x1045A40", Offset = "0x1045A40", VA = "0x1045A40")]
	private void Update()
	{
	}

	[Token(Token = "0x6000BA5")]
	[Address(RVA = "0x1045A44", Offset = "0x1045A44", VA = "0x1045A44")]
	public circulardrive()
	{
	}
}
namespace Sigtrap.VrTunnellingPro
{
	[Token(Token = "0x2000236")]
	public class Tunnelling : TunnellingImageBase
	{
		[Token(Token = "0x17000164")]
		protected override CameraEvent _maskCmdEvt
		{
			[Token(Token = "0x6000BA6")]
			[Address(RVA = "0x12E6E1C", Offset = "0x12E6E1C", VA = "0x12E6E1C", Slot = "9")]
			get
			{
				return default(CameraEvent);
			}
		}

		[Token(Token = "0x6000BA7")]
		[Address(RVA = "0x12E6E24", Offset = "0x12E6E24", VA = "0x12E6E24")]
		private void OnRenderImage(RenderTexture src, RenderTexture dest)
		{
		}

		[Token(Token = "0x6000BA8")]
		[Address(RVA = "0x12E732C", Offset = "0x12E732C", VA = "0x12E732C")]
		public Tunnelling()
		{
		}
	}
	[Token(Token = "0x2000237")]
	public abstract class TunnellingBase : MonoBehaviour
	{
		[Token(Token = "0x2000238")]
		public enum BackgroundMode
		{
			[Token(Token = "0x4000DFB")]
			COLOR,
			[Token(Token = "0x4000DFC")]
			SKYBOX,
			[Token(Token = "0x4000DFD")]
			CAGE_COLOR,
			[Token(Token = "0x4000DFE")]
			CAGE_SKYBOX,
			[Token(Token = "0x4000DFF")]
			CAGE_ONLY,
			[Token(Token = "0x4000E00")]
			BLUR
		}

		[Token(Token = "0x2000239")]
		public enum MaskMode
		{
			[Token(Token = "0x4000E02")]
			OFF,
			[Token(Token = "0x4000E03")]
			MASK,
			[Token(Token = "0x4000E04")]
			WINDOW,
			[Token(Token = "0x4000E05")]
			PORTAL
		}

		[Token(Token = "0x200023A")]
		public enum MSAA
		{
			[Token(Token = "0x4000E07")]
			AUTO,
			[Token(Token = "0x4000E08")]
			OFF,
			[Token(Token = "0x4000E09")]
			X2,
			[Token(Token = "0x4000E0A")]
			X4,
			[Token(Token = "0x4000E0B")]
			X8
		}

		[Token(Token = "0x200023B")]
		public enum ForceVignetteMode
		{
			[Token(Token = "0x4000E0D")]
			NONE = 0,
			[Token(Token = "0x4000E0E")]
			CONSTANT = 10,
			[Token(Token = "0x4000E0F")]
			MAX = 20,
			[Token(Token = "0x4000E10")]
			MIN = 30,
			[Token(Token = "0x4000E11")]
			ADD = 40
		}

		[Token(Token = "0x4000D9C")]
		public const string VRTP_VERSION = "1.4.0";

		[Token(Token = "0x4000D9D")]
		public const int VRTP_VERSION_MAJOR = 1;

		[Token(Token = "0x4000D9E")]
		public const int VRTP_VERSION_MINOR = 4;

		[Token(Token = "0x4000D9F")]
		public const int VRTP_VERSION_PATCH = 0;

		[Token(Token = "0x4000DA0")]
		public const string VRTP_VERSION_BETA = "";

		[Token(Token = "0x4000DA1")]
		public const string GLOBAL_PROP_FOGCOLOR = "_VRTP_Cage_FogColor";

		[Token(Token = "0x4000DA2")]
		public const string GLOBAL_PROP_FOGDENSITY = "_VRTP_Cage_FogDensity";

		[Token(Token = "0x4000DA3")]
		public const string GLOBAL_PROP_FOGPOWER = "_VRTP_Cage_FogPower";

		[Token(Token = "0x4000DA4")]
		public const string GLOBAL_PROP_FOGBLEND = "_VRTP_Cage_FogBlend";

		[Token(Token = "0x4000DA5")]
		protected const string PATH_SHADERS = "Hidden/VrTunnellingPro/";

		[Token(Token = "0x4000DA6")]
		protected const string PATH_MESHES = "Meshes/";

		[Token(Token = "0x4000DA7")]
		protected const string PATH_IRISMESH = "Iris";

		[Token(Token = "0x4000DA8")]
		protected const string PROP_OUTER = "_FxOuter";

		[Token(Token = "0x4000DA9")]
		protected const string PROP_INNER = "_FxInner";

		[Token(Token = "0x4000DAA")]
		protected const string PROP_COLOR = "_Color";

		[Token(Token = "0x4000DAB")]
		protected const string PROP_SKYBOX = "_Skybox";

		[Token(Token = "0x4000DAC")]
		protected const string PROP_EYEPRJ = "_EyeProjection";

		[Token(Token = "0x4000DAD")]
		protected const string PROP_EYEMAT = "_EyeToWorld";

		[Token(Token = "0x4000DAE")]
		protected const string KEYWORD_BKG = "TUNNEL_BKG";

		[Token(Token = "0x4000DAF")]
		protected const string KEYWORD_SKYBOX = "TUNNEL_SKYBOX";

		[Token(Token = "0x4000DB0")]
		protected const string KEYWORD_OVERLAY = "TUNNEL_OVERLAY";

		[Token(Token = "0x4000DB1")]
		public const float FEATHER_MAX = 0.5f;

		[Token(Token = "0x4000DB2")]
		public const float MOTION_STRENGTH_MAX = 2f;

		[Token(Token = "0x4000DB3")]
		public const float COUNTER_STRENGTH_MAX = 2f;

		[Token(Token = "0x4000DB4")]
		public const int FPSDIV_MAX = 60;

		[Token(Token = "0x4000DB5")]
		private const float COVERAGE_MIN = 0.65f;

		[Token(Token = "0x4000DB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected int _propFxInner;

		[Token(Token = "0x4000DB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		protected int _propFxOuter;

		[Token(Token = "0x4000DB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int _propEyeProjection;

		[Token(Token = "0x4000DB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private int _propEyeToWorld;

		[Token(Token = "0x4000DBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected int _globPropFogColor;

		[Token(Token = "0x4000DBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		protected int _globPropFogDensity;

		[Token(Token = "0x4000DBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected int _globPropFogPower;

		[Token(Token = "0x4000DBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		protected int _globPropFogBlend;

		[Token(Token = "0x4000DBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Matrix4x4[] _eyeToWorld;

		[Token(Token = "0x4000DBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Matrix4x4[] _eyeProjection;

		[Token(Token = "0x4000DC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D949C", Offset = "0x8D949C")]
		public Transform motionTarget;

		[Token(Token = "0x4000DC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D94D4", Offset = "0x8D94D4")]
		public Color effectColor;

		[Token(Token = "0x4000DC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D950C", Offset = "0x8D950C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D950C", Offset = "0x8D950C")]
		public float effectCoverage;

		[Token(Token = "0x4000DC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D9560", Offset = "0x8D9560")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D9560", Offset = "0x8D9560")]
		public float effectFeather;

		[Token(Token = "0x4000DC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Cubemap effectSkybox;

		[Token(Token = "0x4000DC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public bool applyColorToBackground;

		[Token(Token = "0x4000DC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D95B4", Offset = "0x8D95B4")]
		public bool useAngularVelocity;

		[Token(Token = "0x4000DC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D95EC", Offset = "0x8D95EC")]
		public float angularVelocityStrength;

		[Token(Token = "0x4000DC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public float angularVelocityMin;

		[Token(Token = "0x4000DC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public float angularVelocityMax;

		[Token(Token = "0x4000DCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public float angularVelocitySmoothing;

		[Token(Token = "0x4000DCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D9604", Offset = "0x8D9604")]
		public bool useAcceleration;

		[Token(Token = "0x4000DCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D963C", Offset = "0x8D963C")]
		public float accelerationStrength;

		[Token(Token = "0x4000DCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public float accelerationMin;

		[Token(Token = "0x4000DCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public float accelerationMax;

		[Token(Token = "0x4000DCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public float accelerationSmoothing;

		[Token(Token = "0x4000DD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D9654", Offset = "0x8D9654")]
		public bool useVelocity;

		[Token(Token = "0x4000DD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D968C", Offset = "0x8D968C")]
		public float velocityStrength;

		[Token(Token = "0x4000DD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public float velocityMin;

		[Token(Token = "0x4000DD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		public float velocityMax;

		[Token(Token = "0x4000DD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public float velocitySmoothing;

		[Token(Token = "0x4000DD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D96A4", Offset = "0x8D96A4")]
		public ForceVignetteMode forceVignetteMode;

		[Token(Token = "0x4000DD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D96DC", Offset = "0x8D96DC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D96DC", Offset = "0x8D96DC")]
		public float forceVignetteValue;

		[Token(Token = "0x4000DD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D9730", Offset = "0x8D9730")]
		public Transform motionEffectTarget;

		[Token(Token = "0x4000DD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D9768", Offset = "0x8D9768")]
		public bool useCounterMotion;

		[Token(Token = "0x4000DD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D97A0", Offset = "0x8D97A0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D97A0", Offset = "0x8D97A0")]
		public float counterRotationStrength;

		[Token(Token = "0x4000DDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D97F4", Offset = "0x8D97F4")]
		public Vector3 counterRotationPerAxis;

		[Token(Token = "0x4000DDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D982C", Offset = "0x8D982C")]
		public bool useArtificialTilt;

		[Token(Token = "0x4000DDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D9864", Offset = "0x8D9864")]
		public float tiltStrength;

		[Token(Token = "0x4000DDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D989C", Offset = "0x8D989C")]
		public Vector2 tiltMaxAngles;

		[Token(Token = "0x4000DDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D98D4", Offset = "0x8D98D4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D98D4", Offset = "0x8D98D4")]
		public float tiltSmoothTime;

		[Token(Token = "0x4000DDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D9928", Offset = "0x8D9928")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D9928", Offset = "0x8D9928")]
		public int framerateDivision;

		[Token(Token = "0x4000DE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		public bool divideTranslation;

		[Token(Token = "0x4000DE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xED")]
		public bool divideRotation;

		[Token(Token = "0x4000DE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private Quaternion _lastRot;

		[Token(Token = "0x4000DE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private Vector3 _lastFwd;

		[Token(Token = "0x4000DE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		private Vector3 _lastPos;

		[Token(Token = "0x4000DE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private float _lastSpeed;

		[Token(Token = "0x4000DE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		private Vector3 _lastVel;

		[Token(Token = "0x4000DE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		protected Quaternion _cmRot;

		[Token(Token = "0x4000DE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private float _avSmoothed;

		[Token(Token = "0x4000DE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
		private float _avSlew;

		[Token(Token = "0x4000DEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private float _speedSmoothed;

		[Token(Token = "0x4000DEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
		private float _speedSlew;

		[Token(Token = "0x4000DEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private float _accelSmoothed;

		[Token(Token = "0x4000DED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
		private float _accelSlew;

		[Token(Token = "0x4000DEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private Transform _prevMotionEffectTarget;

		[Token(Token = "0x4000DEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		private bool _prevUseTilt;

		[Token(Token = "0x4000DF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
		private Vector3 _tiltAccelSmoothed;

		[Token(Token = "0x4000DF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		private Vector3 _tiltAccelSlew;

		[Token(Token = "0x4000DF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
		private Angle3 _tiltInit;

		[Token(Token = "0x4000DF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		private int _lastFpsDivision;

		[Token(Token = "0x4000DF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
		private Vector3 _mfxTgtLocalPosInit;

		[Token(Token = "0x4000DF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		private Quaternion _mfxTgtLocalRotInit;

		[Token(Token = "0x4000DF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		protected Camera _cam;

		[Token(Token = "0x4000DF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		protected bool _hasDrawnThisFrame;

		[Token(Token = "0x4000DF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1AC")]
		private Vector3 _fpsPosition;

		[Token(Token = "0x4000DF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		private Quaternion _fpsRotation;

		[Token(Token = "0x17000165")]
		public bool usingMotionEffectTarget
		{
			[Token(Token = "0x6000BA9")]
			[Address(RVA = "0x12E74D8", Offset = "0x12E74D8", VA = "0x12E74D8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000BAA")]
		[Address(RVA = "0x12E74F8", Offset = "0x12E74F8", VA = "0x12E74F8", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6000BAB")]
		[Address(RVA = "0x12E7678", Offset = "0x12E7678", VA = "0x12E7678", Slot = "5")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6000BAC")]
		[Address(RVA = "0x12E76EC", Offset = "0x12E76EC", VA = "0x12E76EC")]
		protected void ApplyPresetBase(TunnellingPresetBase p)
		{
		}

		[Token(Token = "0x6000BAD")]
		[Address(RVA = "0x12E797C", Offset = "0x12E797C", VA = "0x12E797C")]
		protected void FillMaskBuffer(CommandBuffer cb, List<Renderer> rs, Material m)
		{
		}

		[Token(Token = "0x6000BAE")]
		[Address(RVA = "0x12E767C", Offset = "0x12E767C", VA = "0x12E767C")]
		protected void ResetMotion()
		{
		}

		[Token(Token = "0x6000BAF")]
		[Address(RVA = "0x12E7B4C", Offset = "0x12E7B4C", VA = "0x12E7B4C", Slot = "6")]
		public virtual void ResetCounterMotion()
		{
		}

		[Token(Token = "0x6000BB0")]
		[Address(RVA = "0x12E7B9C", Offset = "0x12E7B9C", VA = "0x12E7B9C")]
		private float RemapRadius(float radius)
		{
			return default(float);
		}

		[Token(Token = "0x6000BB1")]
		[Address(RVA = "0x12E7BBC", Offset = "0x12E7BBC", VA = "0x12E7BBC")]
		protected float CalculateMotion(float dT)
		{
			return default(float);
		}

		[Token(Token = "0x6000BB2")]
		[Address(RVA = "0x12E84A4", Offset = "0x12E84A4", VA = "0x12E84A4")]
		public static Vector3 SmoothDampAngle(Vector3 current, Vector3 target, ref Vector3 vel, float smoothTime, float maxSpeed, float dT)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000BB3")]
		[Address(RVA = "0x12E85A4", Offset = "0x12E85A4", VA = "0x12E85A4", Slot = "7")]
		protected virtual void UpdateCounterMotion(Vector3 deltaPos, Quaternion deltaRot)
		{
		}

		[Token(Token = "0x6000BB4")]
		[Address(RVA = "0x12E8608", Offset = "0x12E8608", VA = "0x12E8608")]
		protected Quaternion GetCounterRotationDelta(Quaternion deltaRot)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000BB5")]
		[Address(RVA = "0x12E86A4", Offset = "0x12E86A4", VA = "0x12E86A4")]
		protected void UpdateEyeMatrices()
		{
		}

		[Token(Token = "0x6000BB6")]
		[Address(RVA = "0x12E8BC0", Offset = "0x12E8BC0", VA = "0x12E8BC0", Slot = "8")]
		protected virtual void CorrectEyeMatrices(Matrix4x4[] eyePrj, Matrix4x4[] eyeToWorld)
		{
		}

		[Token(Token = "0x6000BB7")]
		[Address(RVA = "0x12E8BC4", Offset = "0x12E8BC4", VA = "0x12E8BC4")]
		protected void ApplyEyeMatrices(Material m)
		{
		}

		[Token(Token = "0x6000BB8")]
		[Address(RVA = "0x12E8C10", Offset = "0x12E8C10", VA = "0x12E8C10")]
		protected TunnellingBase()
		{
		}
	}
	[Token(Token = "0x200023C")]
	public struct Angle
	{
		[Token(Token = "0x200023D")]
		public enum AngleType
		{
			[Token(Token = "0x4000E14")]
			ANGLE,
			[Token(Token = "0x4000E15")]
			ACUTE,
			[Token(Token = "0x4000E16")]
			REFLEX
		}

		[Token(Token = "0x4000E12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float _angle;

		[Token(Token = "0x17000166")]
		public float angle
		{
			[Token(Token = "0x6000BB9")]
			[Address(RVA = "0x1AD3F98", Offset = "0x1AD3F98", VA = "0x1AD3F98")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000167")]
		public float acute
		{
			[Token(Token = "0x6000BBA")]
			[Address(RVA = "0x1AD3FA0", Offset = "0x1AD3FA0", VA = "0x1AD3FA0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000168")]
		public float reflex
		{
			[Token(Token = "0x6000BBB")]
			[Address(RVA = "0x1AD4058", Offset = "0x1AD4058", VA = "0x1AD4058")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6000BBC")]
		[Address(RVA = "0x1AD4098", Offset = "0x1AD4098", VA = "0x1AD4098")]
		public Angle(float a)
		{
		}

		[Token(Token = "0x6000BBD")]
		[Address(RVA = "0x1AD40C8", Offset = "0x1AD40C8", VA = "0x1AD40C8")]
		public Angle(Angle a)
		{
		}

		[Token(Token = "0x6000BBE")]
		[Address(RVA = "0x1AD40F8", Offset = "0x1AD40F8", VA = "0x1AD40F8")]
		public float ToFloat(AngleType type)
		{
			return default(float);
		}

		[Token(Token = "0x6000BBF")]
		[Address(RVA = "0x1AD3FE0", Offset = "0x1AD3FE0", VA = "0x1AD3FE0")]
		public static float ToAngle(float a, AngleType type)
		{
			return default(float);
		}

		[Token(Token = "0x6000BC0")]
		[Address(RVA = "0x1AD4104", Offset = "0x1AD4104", VA = "0x1AD4104", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6000BC1")]
		[Address(RVA = "0x1AD418C", Offset = "0x1AD418C", VA = "0x1AD418C")]
		public static bool operator <(Angle a, Angle b)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BC2")]
		[Address(RVA = "0x1AD4198", Offset = "0x1AD4198", VA = "0x1AD4198")]
		public static bool operator >(Angle a, Angle b)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BC3")]
		[Address(RVA = "0x1AD41A4", Offset = "0x1AD41A4", VA = "0x1AD41A4")]
		public static bool operator <=(Angle a, Angle b)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BC4")]
		[Address(RVA = "0x1AD41B0", Offset = "0x1AD41B0", VA = "0x1AD41B0")]
		public static bool operator >=(Angle a, Angle b)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BC5")]
		[Address(RVA = "0x1AD41BC", Offset = "0x1AD41BC", VA = "0x1AD41BC")]
		public static Angle operator +(Angle a, Angle b)
		{
			return default(Angle);
		}

		[Token(Token = "0x6000BC6")]
		[Address(RVA = "0x1AD41D4", Offset = "0x1AD41D4", VA = "0x1AD41D4")]
		public static Angle operator -(Angle a, Angle b)
		{
			return default(Angle);
		}

		[Token(Token = "0x6000BC7")]
		[Address(RVA = "0x1AD41EC", Offset = "0x1AD41EC", VA = "0x1AD41EC")]
		public static bool operator ==(Angle a, Angle b)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BC8")]
		[Address(RVA = "0x1AD41F8", Offset = "0x1AD41F8", VA = "0x1AD41F8")]
		public static bool operator !=(Angle a, Angle b)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BC9")]
		[Address(RVA = "0x1AD4204", Offset = "0x1AD4204", VA = "0x1AD4204", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BCA")]
		[Address(RVA = "0x1AD42C8", Offset = "0x1AD42C8", VA = "0x1AD42C8", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x6000BCB")]
		[Address(RVA = "0x1AD42D0", Offset = "0x1AD42D0", VA = "0x1AD42D0")]
		public static bool operator <(Angle a, float b)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BCC")]
		[Address(RVA = "0x1AD430C", Offset = "0x1AD430C", VA = "0x1AD430C")]
		public static bool operator >(Angle a, float b)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BCD")]
		[Address(RVA = "0x1AD4348", Offset = "0x1AD4348", VA = "0x1AD4348")]
		public static bool operator <=(Angle a, float b)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BCE")]
		[Address(RVA = "0x1AD4384", Offset = "0x1AD4384", VA = "0x1AD4384")]
		public static bool operator >=(Angle a, float b)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BCF")]
		[Address(RVA = "0x1AD43C0", Offset = "0x1AD43C0", VA = "0x1AD43C0")]
		public static Angle operator +(Angle a, float b)
		{
			return default(Angle);
		}

		[Token(Token = "0x6000BD0")]
		[Address(RVA = "0x1AD4400", Offset = "0x1AD4400", VA = "0x1AD4400")]
		public static Angle operator -(Angle a, float b)
		{
			return default(Angle);
		}

		[Token(Token = "0x6000BD1")]
		[Address(RVA = "0x1AD4440", Offset = "0x1AD4440", VA = "0x1AD4440")]
		public static Angle operator *(Angle a, float b)
		{
			return default(Angle);
		}

		[Token(Token = "0x6000BD2")]
		[Address(RVA = "0x1AD4458", Offset = "0x1AD4458", VA = "0x1AD4458")]
		public static Angle operator /(Angle a, float b)
		{
			return default(Angle);
		}

		[Token(Token = "0x6000BD3")]
		[Address(RVA = "0x1AD4470", Offset = "0x1AD4470", VA = "0x1AD4470")]
		public static bool operator <(float a, Angle b)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BD4")]
		[Address(RVA = "0x1AD4494", Offset = "0x1AD4494", VA = "0x1AD4494")]
		public static bool operator >(float a, Angle b)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BD5")]
		[Address(RVA = "0x1AD44B8", Offset = "0x1AD44B8", VA = "0x1AD44B8")]
		public static bool operator <=(float a, Angle b)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BD6")]
		[Address(RVA = "0x1AD44DC", Offset = "0x1AD44DC", VA = "0x1AD44DC")]
		public static bool operator >=(float a, Angle b)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BD7")]
		[Address(RVA = "0x1AD4500", Offset = "0x1AD4500", VA = "0x1AD4500")]
		public static Angle operator +(float a, Angle b)
		{
			return default(Angle);
		}

		[Token(Token = "0x6000BD8")]
		[Address(RVA = "0x1AD453C", Offset = "0x1AD453C", VA = "0x1AD453C")]
		public static Angle operator -(float a, Angle b)
		{
			return default(Angle);
		}

		[Token(Token = "0x6000BD9")]
		[Address(RVA = "0x1AD4578", Offset = "0x1AD4578", VA = "0x1AD4578")]
		public static implicit operator Angle(float f)
		{
			return default(Angle);
		}
	}
	[Token(Token = "0x200023E")]
	public struct Angle3
	{
		[Token(Token = "0x4000E17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Angle x;

		[Token(Token = "0x4000E18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public Angle y;

		[Token(Token = "0x4000E19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Angle z;

		[Token(Token = "0x17000169")]
		public Vector3 eulerAngles
		{
			[Token(Token = "0x6000BDA")]
			[Address(RVA = "0x1AD4588", Offset = "0x1AD4588", VA = "0x1AD4588")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x1700016A")]
		public Vector3 eulerAcute
		{
			[Token(Token = "0x6000BDB")]
			[Address(RVA = "0x1AD4594", Offset = "0x1AD4594", VA = "0x1AD4594")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x1700016B")]
		public Vector3 eulerReflex
		{
			[Token(Token = "0x6000BDC")]
			[Address(RVA = "0x1AD4644", Offset = "0x1AD4644", VA = "0x1AD4644")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x1700016C")]
		public Angle angle
		{
			[Token(Token = "0x6000BDD")]
			[Address(RVA = "0x1AD46F4", Offset = "0x1AD46F4", VA = "0x1AD46F4")]
			get
			{
				return default(Angle);
			}
		}

		[Token(Token = "0x1700016D")]
		public Vector3 axis
		{
			[Token(Token = "0x6000BDE")]
			[Address(RVA = "0x1AD479C", Offset = "0x1AD479C", VA = "0x1AD479C")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x6000BDF")]
		[Address(RVA = "0x1AD47D4", Offset = "0x1AD47D4", VA = "0x1AD47D4")]
		public Angle3(float x, float y, float z)
		{
		}

		[Token(Token = "0x6000BE0")]
		[Address(RVA = "0x1AD4848", Offset = "0x1AD4848", VA = "0x1AD4848")]
		public Angle3(Angle x, Angle y, Angle z)
		{
		}

		[Token(Token = "0x6000BE1")]
		[Address(RVA = "0x1AD484C", Offset = "0x1AD484C", VA = "0x1AD484C")]
		public Angle3(Vector3 euler)
		{
		}

		[Token(Token = "0x6000BE2")]
		[Address(RVA = "0x1AD4850", Offset = "0x1AD4850", VA = "0x1AD4850")]
		public Angle3(Quaternion rotation)
		{
		}

		[Token(Token = "0x6000BE3")]
		[Address(RVA = "0x1AD4728", Offset = "0x1AD4728", VA = "0x1AD4728")]
		public void ToAxisAngle(out Vector3 axis, out Angle angle)
		{
		}

		[Token(Token = "0x6000BE4")]
		[Address(RVA = "0x1AD4890", Offset = "0x1AD4890", VA = "0x1AD4890")]
		public Vector3 ToEuler(Angle.AngleType type)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000BE5")]
		[Address(RVA = "0x1AD48F8", Offset = "0x1AD48F8", VA = "0x1AD48F8", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6000BE6")]
		[Address(RVA = "0x1AD49C0", Offset = "0x1AD49C0", VA = "0x1AD49C0")]
		public static Angle3 operator +(Angle3 a, Angle3 b)
		{
			return default(Angle3);
		}

		[Token(Token = "0x6000BE7")]
		[Address(RVA = "0x1AD4A64", Offset = "0x1AD4A64", VA = "0x1AD4A64")]
		public static Angle3 operator -(Angle3 a, Angle3 b)
		{
			return default(Angle3);
		}

		[Token(Token = "0x6000BE8")]
		[Address(RVA = "0x1AD4B08", Offset = "0x1AD4B08", VA = "0x1AD4B08")]
		public static Angle3 operator *(Angle3 a, float b)
		{
			return default(Angle3);
		}

		[Token(Token = "0x6000BE9")]
		[Address(RVA = "0x1AD4BA8", Offset = "0x1AD4BA8", VA = "0x1AD4BA8")]
		public static bool operator ==(Angle3 a, Angle3 b)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BEA")]
		[Address(RVA = "0x1AD4BCC", Offset = "0x1AD4BCC", VA = "0x1AD4BCC")]
		public static bool operator !=(Angle3 a, Angle3 b)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BEB")]
		[Address(RVA = "0x1AD4BF0", Offset = "0x1AD4BF0", VA = "0x1AD4BF0", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BEC")]
		[Address(RVA = "0x1AD4CE0", Offset = "0x1AD4CE0", VA = "0x1AD4CE0", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x6000BED")]
		[Address(RVA = "0x1AD4D14", Offset = "0x1AD4D14", VA = "0x1AD4D14")]
		public static implicit operator Angle3(Vector3 v)
		{
			return default(Angle3);
		}
	}
	[Token(Token = "0x200023F")]
	public abstract class TunnellingImageBase : TunnellingBase
	{
		[Token(Token = "0x2000240")]
		public enum BlurKernel
		{
			[Token(Token = "0x4000E75")]
			FIVE,
			[Token(Token = "0x4000E76")]
			NINE,
			[Token(Token = "0x4000E77")]
			THIRTEEN
		}

		[Token(Token = "0x2000241")]
		public enum CounterVelocityMode
		{
			[Token(Token = "0x4000E79")]
			OFF,
			[Token(Token = "0x4000E7A")]
			SHADER,
			[Token(Token = "0x4000E7B")]
			REAL
		}

		[Token(Token = "0x4000E1A")]
		private const string KEYWORD_MASK = "TUNNEL_MASK";

		[Token(Token = "0x4000E1B")]
		private const string KEYWORD_CONSTANT = "TUNNEL_CONSTANT";

		[Token(Token = "0x4000E1C")]
		private const string KEYWORD_INVERT = "TUNNEL_INVERT_MASK";

		[Token(Token = "0x4000E1D")]
		private const string KEYWORD_BLUR = "TUNNEL_BLUR";

		[Token(Token = "0x4000E1E")]
		private const string PATH_TUNNELSHADER = "Tunnelling";

		[Token(Token = "0x4000E1F")]
		private const string PATH_MASKSHADER = "Mask";

		[Token(Token = "0x4000E20")]
		private const string PATH_WINDOWSHADER = "Window";

		[Token(Token = "0x4000E21")]
		private const string PATH_COPYSHADER = "BlitA";

		[Token(Token = "0x4000E22")]
		private const string PATH_BLURSHADER = "SeparableBlur";

		[Token(Token = "0x4000E23")]
		private const string PATH_IRISSHADER = "TunnellingVertexZ";

		[Token(Token = "0x4000E24")]
		private const string PATH_SKYSPHERESHADER = "Skysphere";

		[Token(Token = "0x4000E25")]
		private const string PATH_SKYSPHEREMESH = "Skysphere";

		[Token(Token = "0x4000E26")]
		private const string PROP_FEATHER = "_Feather";

		[Token(Token = "0x4000E27")]
		private const string PROP_BKGRT = "_BkgTex";

		[Token(Token = "0x4000E28")]
		private const string PROP_MASKRT = "_MaskTex";

		[Token(Token = "0x4000E29")]
		private const string PROP_BLUR = "_Blur";

		[Token(Token = "0x4000E2A")]
		private const string PROP_OVERLAY = "_Overlay";

		[Token(Token = "0x4000E2B")]
		private const string PROP_BLUR_OFFSETS = "_Offsets";

		[Token(Token = "0x4000E2C")]
		private const float BLUR_OFFSET_1 = 1.3333334f;

		[Token(Token = "0x4000E2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly float[] BLUR_OFFSETS_9;

		[Token(Token = "0x4000E2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly float[] BLUR_OFFSETS_13;

		[Token(Token = "0x4000E2F")]
		public const string GLOBAL_PROP_WORLD2CAGE = "_VRTP_WorldToCage";

		[Token(Token = "0x4000E30")]
		public const string GLOBAL_PROP_WORLD2CAGE_NORMAL = "_VRTP_WorldToCageNormal";

		[Token(Token = "0x4000E31")]
		public const string GLOBAL_PROP_CAGEPOS = "_VRTP_CagePos";

		[Token(Token = "0x4000E32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D9980", Offset = "0x8D9980")]
		private static TunnellingImageBase <instance>k__BackingField;

		[Token(Token = "0x4000E33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D9990", Offset = "0x8D9990")]
		public BackgroundMode backgroundMode;

		[Token(Token = "0x4000E34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1CC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D99C8", Offset = "0x8D99C8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D99C8", Offset = "0x8D99C8")]
		public float effectOverlay;

		[Token(Token = "0x4000E35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D9A1C", Offset = "0x8D9A1C")]
		[SerializeField]
		private GameObject _cageParent;

		[Token(Token = "0x4000E36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D9A68", Offset = "0x8D9A68")]
		public int cageDownsample;

		[Token(Token = "0x4000E37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1DC")]
		public MSAA cageAntiAliasing;

		[Token(Token = "0x4000E38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		public bool cageUpdateEveryFrame;

		[Token(Token = "0x4000E39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D9A80", Offset = "0x8D9A80")]
		public float cageFogDensity;

		[Token(Token = "0x4000E3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D9AA0", Offset = "0x8D9AA0")]
		public float cageFogPower;

		[Token(Token = "0x4000E3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1EC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D9AB8", Offset = "0x8D9AB8")]
		public float cageFogBlend;

		[Token(Token = "0x4000E3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		public MaskMode maskMode;

		[Token(Token = "0x4000E3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D9AD0", Offset = "0x8D9AD0")]
		public int blurDownsample;

		[Token(Token = "0x4000E3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D9AE8", Offset = "0x8D9AE8")]
		public float blurDistance;

		[Token(Token = "0x4000E3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1FC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D9B00", Offset = "0x8D9B00")]
		public int blurPasses;

		[Token(Token = "0x4000E40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		public BlurKernel blurSamples;

		[Token(Token = "0x4000E41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x204")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D9B18", Offset = "0x8D9B18")]
		public bool irisZRejection;

		[Token(Token = "0x4000E42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		public CounterVelocityMode counterVelocityMode;

		[Token(Token = "0x4000E43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D9B50", Offset = "0x8D9B50")]
		public float counterVelocityResetDistance;

		[Token(Token = "0x4000E44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D9B88", Offset = "0x8D9B88")]
		public float counterVelocityResetTime;

		[Token(Token = "0x4000E45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x214")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D9BC0", Offset = "0x8D9BC0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D9BC0", Offset = "0x8D9BC0")]
		public float counterVelocityStrength;

		[Token(Token = "0x4000E46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D9C14", Offset = "0x8D9C14")]
		public Vector3 counterVelocityPerAxis;

		[Token(Token = "0x4000E47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
		private CommandBuffer _maskCmd;

		[Token(Token = "0x4000E48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
		private Material _matTunnel;

		[Token(Token = "0x4000E49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
		private Material _matMask;

		[Token(Token = "0x4000E4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
		private Material _matWindow;

		[Token(Token = "0x4000E4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
		private Material _matCopyAlpha;

		[Token(Token = "0x4000E4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
		private Material _matBlur;

		[Token(Token = "0x4000E4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
		private Material _matSkysphere;

		[Token(Token = "0x4000E4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
		private Mesh _meshSkysphere;

		[Token(Token = "0x4000E4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
		private MeshRenderer[] _cageMrs;

		[Token(Token = "0x4000E50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
		private List<MeshFilter> _cageMfs;

		[Token(Token = "0x4000E51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
		private List<Renderer> _maskObjects;

		[Token(Token = "0x4000E52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
		private RenderTexture _cageRt;

		[Token(Token = "0x4000E53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
		private RenderTexture _maskRt;

		[Token(Token = "0x4000E54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
		private RenderTexture _blurRt0;

		[Token(Token = "0x4000E55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
		private RenderTexture _blurRt1;

		[Token(Token = "0x4000E56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
		private int _rtX;

		[Token(Token = "0x4000E57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A4")]
		private int _rtY;

		[Token(Token = "0x4000E58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
		private int _rtA;

		[Token(Token = "0x4000E59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B0")]
		private CommandBuffer _irisCmd;

		[Token(Token = "0x4000E5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B8")]
		private Material _matIris;

		[Token(Token = "0x4000E5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C0")]
		private Mesh _meshIris;

		[Token(Token = "0x4000E5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C8")]
		private Vector4[] _blurOffsets;

		[Token(Token = "0x4000E5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D0")]
		private MaskMode _lastMaskMode;

		[Token(Token = "0x4000E5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D4")]
		private MSAA _lastCageMsaa;

		[Token(Token = "0x4000E5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D8")]
		private bool _camHasMaskBuffer;

		[Token(Token = "0x4000E60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2DC")]
		private int _lastCageDownsample;

		[Token(Token = "0x4000E61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E0")]
		private int _lastBlurDownsample;

		[Token(Token = "0x4000E62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E4")]
		private float _lastBlurRadius;

		[Token(Token = "0x4000E63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E8")]
		private BlurKernel _lastBlurKernel;

		[Token(Token = "0x4000E64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2EC")]
		private bool _wasDrawingIrisEarly;

		[Token(Token = "0x4000E65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2ED")]
		private bool _camHasIrisBuffer;

		[Token(Token = "0x4000E66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2F0")]
		private CounterVelocityMode _lastCvMode;

		[Token(Token = "0x4000E67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2F4")]
		private Vector3 _cmPos;

		[Token(Token = "0x4000E68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x300")]
		private Vector3 _cageInitialPosLocal;

		[Token(Token = "0x4000E69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30C")]
		private float _timeToResetCounterVelocity;

		[Token(Token = "0x4000E6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x310")]
		private int _propColor;

		[Token(Token = "0x4000E6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x314")]
		private int _propBkgRt;

		[Token(Token = "0x4000E6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x318")]
		private int _propMaskRt;

		[Token(Token = "0x4000E6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31C")]
		private int _propSkybox;

		[Token(Token = "0x4000E6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x320")]
		private int _propOverlay;

		[Token(Token = "0x4000E6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x324")]
		private int _propBlur;

		[Token(Token = "0x4000E70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x328")]
		private int _propBlurOffsets;

		[Token(Token = "0x4000E71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32C")]
		private int _globPropWorld2Cage;

		[Token(Token = "0x4000E72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x330")]
		private int _globPropWorld2CageNormal;

		[Token(Token = "0x4000E73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x334")]
		private int _globPropCagePos;

		[Token(Token = "0x1700016E")]
		public static TunnellingImageBase instance
		{
			[Token(Token = "0x6000BEE")]
			[Address(RVA = "0x12E8D20", Offset = "0x12E8D20", VA = "0x12E8D20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E3AE8", Offset = "0x8E3AE8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000BEF")]
			[Address(RVA = "0x12E8D84", Offset = "0x12E8D84", VA = "0x12E8D84")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E3AF8", Offset = "0x8E3AF8")]
			private set
			{
			}
		}

		[Token(Token = "0x1700016F")]
		public bool usingMask
		{
			[Token(Token = "0x6000BF0")]
			[Address(RVA = "0x12E8DF0", Offset = "0x12E8DF0", VA = "0x12E8DF0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000170")]
		public bool usingCage
		{
			[Token(Token = "0x6000BF1")]
			[Address(RVA = "0x12E8E00", Offset = "0x12E8E00", VA = "0x12E8E00")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000171")]
		private bool _usingCageRt
		{
			[Token(Token = "0x6000BF2")]
			[Address(RVA = "0x12E8E24", Offset = "0x12E8E24", VA = "0x12E8E24")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000172")]
		private bool _canDrawIris
		{
			[Token(Token = "0x6000BF3")]
			[Address(RVA = "0x12E8E38", Offset = "0x12E8E38", VA = "0x12E8E38")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000173")]
		private bool _drawIris
		{
			[Token(Token = "0x6000BF4")]
			[Address(RVA = "0x12E8E6C", Offset = "0x12E8E6C", VA = "0x12E8E6C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000174")]
		private bool _isInstanced
		{
			[Token(Token = "0x6000BF5")]
			[Address(RVA = "0x12E8EA8", Offset = "0x12E8EA8", VA = "0x12E8EA8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000175")]
		protected abstract CameraEvent _maskCmdEvt
		{
			[Token(Token = "0x6000BF6")]
			get;
		}

		[Token(Token = "0x6000BF7")]
		[Address(RVA = "0x12E8EE0", Offset = "0x12E8EE0", VA = "0x12E8EE0", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6000BF8")]
		[Address(RVA = "0x12E9900", Offset = "0x12E9900", VA = "0x12E9900", Slot = "5")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6000BF9")]
		[Address(RVA = "0x12E9CCC", Offset = "0x12E9CCC", VA = "0x12E9CCC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000BFA")]
		[Address(RVA = "0x12E9D50", Offset = "0x12E9D50", VA = "0x12E9D50")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000BFB")]
		[Address(RVA = "0x12E9F70", Offset = "0x12E9F70", VA = "0x12E9F70")]
		private void ReleaseRT(ref RenderTexture rt)
		{
		}

		[Token(Token = "0x6000BFC")]
		[Address(RVA = "0x12EA010", Offset = "0x12EA010", VA = "0x12EA010")]
		public void AddObjectToMask(Renderer r, bool includeChildren = false)
		{
		}

		[Token(Token = "0x6000BFD")]
		[Address(RVA = "0x12EA300", Offset = "0x12EA300", VA = "0x12EA300")]
		public void RemoveObjectFromMask(Renderer r, bool includeChildren = false)
		{
		}

		[Token(Token = "0x6000BFE")]
		[Address(RVA = "0x12E9990", Offset = "0x12E9990", VA = "0x12E9990")]
		public void UpdateCage()
		{
		}

		[Token(Token = "0x6000BFF")]
		[Address(RVA = "0x12EA3F8", Offset = "0x12EA3F8", VA = "0x12EA3F8", Slot = "6")]
		public override void ResetCounterMotion()
		{
		}

		[Token(Token = "0x6000C00")]
		[Address(RVA = "0x12EA4BC", Offset = "0x12EA4BC", VA = "0x12EA4BC")]
		public void ApplyPreset(TunnellingPreset p)
		{
		}

		[Token(Token = "0x6000C01")]
		[Address(RVA = "0x12EA6B0", Offset = "0x12EA6B0", VA = "0x12EA6B0")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000C02")]
		[Address(RVA = "0x12EACF8", Offset = "0x12EACF8", VA = "0x12EACF8")]
		private void OnPreRender()
		{
		}

		[Token(Token = "0x6000C03")]
		[Address(RVA = "0x12E6E28", Offset = "0x12E6E28", VA = "0x12E6E28")]
		protected void Draw(RenderTexture src, RenderTexture dest)
		{
		}

		[Token(Token = "0x6000C04")]
		[Address(RVA = "0x12EB574", Offset = "0x12EB574", VA = "0x12EB574", Slot = "8")]
		protected override void CorrectEyeMatrices(Matrix4x4[] eyePrj, Matrix4x4[] eyeToWorld)
		{
		}

		[Token(Token = "0x6000C05")]
		[Address(RVA = "0x12EB5F4", Offset = "0x12EB5F4", VA = "0x12EB5F4", Slot = "7")]
		protected override void UpdateCounterMotion(Vector3 deltaPos, Quaternion deltaRot)
		{
		}

		[Token(Token = "0x6000C06")]
		[Address(RVA = "0x12E9628", Offset = "0x12E9628", VA = "0x12E9628")]
		private void UpdateKeywords()
		{
		}

		[Token(Token = "0x6000C07")]
		[Address(RVA = "0x12EAA0C", Offset = "0x12EAA0C", VA = "0x12EAA0C")]
		private void UpdateBlurKernel()
		{
		}

		[Token(Token = "0x6000C08")]
		[Address(RVA = "0x12EB7BC", Offset = "0x12EB7BC", VA = "0x12EB7BC")]
		private int GetMsaa(MSAA m, int srcMsaa)
		{
			return default(int);
		}

		[Token(Token = "0x6000C09")]
		[Address(RVA = "0x12EB7E0", Offset = "0x12EB7E0", VA = "0x12EB7E0")]
		private void SetTexArrayIfNeeded(RenderTexture target)
		{
		}

		[Token(Token = "0x6000C0A")]
		[Address(RVA = "0x12EAE98", Offset = "0x12EAE98", VA = "0x12EAE98")]
		private void UpdateRenderTextures(int srcX, int srcY, int srcMsaa)
		{
		}

		[Token(Token = "0x6000C0B")]
		[Address(RVA = "0x12EA108", Offset = "0x12EA108", VA = "0x12EA108")]
		private void ResetMaskCommandBuffer()
		{
		}

		[Token(Token = "0x6000C0C")]
		[Address(RVA = "0x12E9C04", Offset = "0x12E9C04", VA = "0x12E9C04")]
		private void ToggleMaskCommandBuffer(bool on)
		{
		}

		[Token(Token = "0x6000C0D")]
		[Address(RVA = "0x12E9C74", Offset = "0x12E9C74", VA = "0x12E9C74")]
		private void ToggleIrisCommandBuffer(bool on)
		{
		}

		[Token(Token = "0x6000C0E")]
		[Address(RVA = "0x12E738C", Offset = "0x12E738C", VA = "0x12E738C")]
		protected TunnellingImageBase()
		{
		}
	}
	[Token(Token = "0x2000242")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x8D6D5C", Offset = "0x8D6D5C")]
	public class TunnellingMaskObject : MonoBehaviour
	{
		[Token(Token = "0x4000E7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool autoAddChildren;

		[Token(Token = "0x4000E7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Renderer _r;

		[Token(Token = "0x4000E7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool _started;

		[Token(Token = "0x6000C10")]
		[Address(RVA = "0x12EB940", Offset = "0x12EB940", VA = "0x12EB940")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000C11")]
		[Address(RVA = "0x12EB99C", Offset = "0x12EB99C", VA = "0x12EB99C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000C12")]
		[Address(RVA = "0x12EB9A8", Offset = "0x12EB9A8", VA = "0x12EB9A8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000C13")]
		[Address(RVA = "0x12EBB68", Offset = "0x12EBB68", VA = "0x12EBB68")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000C14")]
		[Address(RVA = "0x12EBD10", Offset = "0x12EBD10", VA = "0x12EBD10")]
		public TunnellingMaskObject()
		{
		}
	}
	[Token(Token = "0x2000243")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x8D6DBC", Offset = "0x8D6DBC")]
	public class TunnellingMaskObjectMobile : MonoBehaviour
	{
		[Token(Token = "0x4000E7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool autoAddChildren;

		[Token(Token = "0x4000E80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Renderer _r;

		[Token(Token = "0x4000E81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool _started;

		[Token(Token = "0x6000C15")]
		[Address(RVA = "0x12EBD18", Offset = "0x12EBD18", VA = "0x12EBD18")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000C16")]
		[Address(RVA = "0x12EBD74", Offset = "0x12EBD74", VA = "0x12EBD74")]
		private void Start()
		{
		}

		[Token(Token = "0x6000C17")]
		[Address(RVA = "0x12EBD80", Offset = "0x12EBD80", VA = "0x12EBD80")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000C18")]
		[Address(RVA = "0x12EC30C", Offset = "0x12EC30C", VA = "0x12EC30C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000C19")]
		[Address(RVA = "0x12EC5F4", Offset = "0x12EC5F4", VA = "0x12EC5F4")]
		public TunnellingMaskObjectMobile()
		{
		}
	}
	[Token(Token = "0x2000244")]
	public class TunnellingMobile : TunnellingBase
	{
		[Token(Token = "0x4000E82")]
		public const string GLOBAL_PROP_STENCILREF = "_VRTP_Stencil_Ref";

		[Token(Token = "0x4000E83")]
		public const string GLOBAL_PROP_STENCILMASK = "_VRTP_Stencil_Mask";

		[Token(Token = "0x4000E84")]
		public const string GLOBAL_PROP_STENCILBIAS = "_VRTP_Stencil_Bias";

		[Token(Token = "0x4000E85")]
		private const string PROP_WRITEZ = "_WriteZ";

		[Token(Token = "0x4000E86")]
		private const string PATH_SHADER = "TunnellingVertex";

		[Token(Token = "0x4000E87")]
		private const string PATH_STENCILSHADER = "TunnellingMobileStencil";

		[Token(Token = "0x4000E88")]
		private const CameraEvent CEVENT_FX = CameraEvent.BeforeImageEffects;

		[Token(Token = "0x4000E89")]
		private const CameraEvent CEVENT_Z = CameraEvent.BeforeForwardOpaque;

		[Token(Token = "0x4000E8A")]
		private const int RQUEUE_FIRST = 1;

		[Token(Token = "0x4000E8B")]
		private const int RQUEUE_MASK = 2499;

		[Token(Token = "0x4000E8C")]
		private const int RQUEUE_OPAQUE = 2501;

		[Token(Token = "0x4000E8D")]
		private const int RQUEUE_LAST = 5000;

		[Token(Token = "0x4000E8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D9C4C", Offset = "0x8D9C4C")]
		private static TunnellingMobile <instance>k__BackingField;

		[Token(Token = "0x4000E8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Material _stencilMat;

		[Token(Token = "0x4000E90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D9C5C", Offset = "0x8D9C5C")]
		public bool drawSkybox;

		[Token(Token = "0x4000E91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C9")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D9C94", Offset = "0x8D9C94")]
		public bool useMask;

		[Token(Token = "0x4000E92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1CA")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D9CCC", Offset = "0x8D9CCC")]
		public bool drawBeforeTransparent;

		[Token(Token = "0x4000E93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1CC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D9D04", Offset = "0x8D9D04")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D9D04", Offset = "0x8D9D04")]
		public int stencilReference;

		[Token(Token = "0x4000E94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D9D5C", Offset = "0x8D9D5C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D9D5C", Offset = "0x8D9D5C")]
		public int stencilMask;

		[Token(Token = "0x4000E95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D9DB4", Offset = "0x8D9DB4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D9DB4", Offset = "0x8D9DB4")]
		public float stencilBias;

		[Token(Token = "0x4000E96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		private int _propColor;

		[Token(Token = "0x4000E97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1DC")]
		private int _propSkybox;

		[Token(Token = "0x4000E98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		private int _propWriteZ;

		[Token(Token = "0x4000E99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E4")]
		private int _globPropStencilRef;

		[Token(Token = "0x4000E9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		private int _globPropStencilMask;

		[Token(Token = "0x4000E9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1EC")]
		private int _globPropStencilBias;

		[Token(Token = "0x4000E9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		private Material _irisMatOuter;

		[Token(Token = "0x4000E9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		private Material _irisMatInner;

		[Token(Token = "0x4000E9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		private Mesh _irisMesh;

		[Token(Token = "0x4000E9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		private Dictionary<Renderer, MeshFilter> _maskObjects;

		[Token(Token = "0x4000EA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		private Stack<Mesh> _skinnedMeshPool;

		[Token(Token = "0x4000EA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
		private Stack<Mesh> _skinnedMeshesRendering;

		[Token(Token = "0x4000EA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
		private List<UnityEngine.Object> _toDestroy;

		[Token(Token = "0x4000EA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
		private List<MeshRenderer> _tempMeshChildren;

		[Token(Token = "0x4000EA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
		private List<SkinnedMeshRenderer> _tempSkinnedMeshChildren;

		[Token(Token = "0x17000176")]
		public static TunnellingMobile instance
		{
			[Token(Token = "0x6000C1A")]
			[Address(RVA = "0x12EC5FC", Offset = "0x12EC5FC", VA = "0x12EC5FC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E3B08", Offset = "0x8E3B08")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000C1B")]
			[Address(RVA = "0x12EC648", Offset = "0x12EC648", VA = "0x12EC648")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E3B18", Offset = "0x8E3B18")]
			private set
			{
			}
		}

		[Token(Token = "0x17000177")]
		public static Material stencilMat
		{
			[Token(Token = "0x6000C1C")]
			[Address(RVA = "0x12EC69C", Offset = "0x12EC69C", VA = "0x12EC69C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000178")]
		public bool irisZRejectionEnabled
		{
			[Token(Token = "0x6000C1D")]
			[Address(RVA = "0x12EC7A4", Offset = "0x12EC7A4", VA = "0x12EC7A4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000C1E")]
		[Address(RVA = "0x12EC7C4", Offset = "0x12EC7C4", VA = "0x12EC7C4")]
		public void ApplyPreset(TunnellingPresetMobile p)
		{
		}

		[Token(Token = "0x6000C1F")]
		[Address(RVA = "0x12EBED0", Offset = "0x12EBED0", VA = "0x12EBED0")]
		public void AddObjectToMask(Renderer r, bool includeChildren = false)
		{
		}

		[Token(Token = "0x6000C20")]
		[Address(RVA = "0x12EC444", Offset = "0x12EC444", VA = "0x12EC444")]
		public void RemoveObjectFromMask(Renderer r, bool includeChildren = false)
		{
		}

		[Token(Token = "0x6000C21")]
		[Address(RVA = "0x12EC85C", Offset = "0x12EC85C", VA = "0x12EC85C", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6000C22")]
		[Address(RVA = "0x12ECC24", Offset = "0x12ECC24", VA = "0x12ECC24")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000C23")]
		[Address(RVA = "0x12ED024", Offset = "0x12ED024", VA = "0x12ED024")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000C24")]
		[Address(RVA = "0x12ED7AC", Offset = "0x12ED7AC", VA = "0x12ED7AC")]
		private void DrawIris(Material m, int submesh, int opaqueQueue, int camLayer)
		{
		}

		[Token(Token = "0x6000C25")]
		[Address(RVA = "0x12EDA3C", Offset = "0x12EDA3C", VA = "0x12EDA3C")]
		private void OnPreRender()
		{
		}

		[Token(Token = "0x6000C26")]
		[Address(RVA = "0x12EDA70", Offset = "0x12EDA70", VA = "0x12EDA70")]
		public TunnellingMobile()
		{
		}
	}
	[Token(Token = "0x2000245")]
	public class TunnellingOpaque : TunnellingImageBase
	{
		[Token(Token = "0x17000179")]
		protected override CameraEvent _maskCmdEvt
		{
			[Token(Token = "0x6000C27")]
			[Address(RVA = "0x103E5B0", Offset = "0x103E5B0", VA = "0x103E5B0", Slot = "9")]
			get
			{
				return default(CameraEvent);
			}
		}

		[Token(Token = "0x6000C28")]
		[Address(RVA = "0x103E5B8", Offset = "0x103E5B8", VA = "0x103E5B8")]
		[ImageEffectOpaque]
		private void OnRenderImage(RenderTexture src, RenderTexture dest)
		{
		}

		[Token(Token = "0x6000C29")]
		[Address(RVA = "0x103E5C0", Offset = "0x103E5C0", VA = "0x103E5C0")]
		public TunnellingOpaque()
		{
		}
	}
	[Token(Token = "0x2000246")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8D6E1C", Offset = "0x8D6E1C")]
	public class TunnellingPreset : TunnellingPresetBase
	{
		[Token(Token = "0x4000EA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D9E08", Offset = "0x8D9E08")]
		private float _effectOverlay;

		[Token(Token = "0x4000EA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		[SerializeField]
		private bool _overrideEffectOverlay;

		[Token(Token = "0x4000EA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private TunnellingBase.BackgroundMode _backgroundMode;

		[Token(Token = "0x4000EA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		[SerializeField]
		private bool _overrideBackgroundMode;

		[Token(Token = "0x4000EA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D9E78", Offset = "0x8D9E78")]
		[SerializeField]
		private int _cageDownsample;

		[Token(Token = "0x4000EAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		[SerializeField]
		private bool _overrideCageDownsample;

		[Token(Token = "0x4000EAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private TunnellingBase.MSAA _cageAntiAliasing;

		[Token(Token = "0x4000EAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		[SerializeField]
		private bool _overrideCageAntiAliasing;

		[Token(Token = "0x4000EAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCD")]
		[SerializeField]
		private bool _cageUpdateEveryFrame;

		[Token(Token = "0x4000EAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCE")]
		[SerializeField]
		private bool _overrideCageUpdateEveryFrame;

		[Token(Token = "0x4000EAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D9F08", Offset = "0x8D9F08")]
		[SerializeField]
		private float _cageFogDensity;

		[Token(Token = "0x4000EB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		[SerializeField]
		private bool _overrideCageFogDensity;

		[Token(Token = "0x4000EB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D9F60", Offset = "0x8D9F60")]
		[SerializeField]
		private float _cageFogPower;

		[Token(Token = "0x4000EB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		[SerializeField]
		private bool _overrideCageFogPower;

		[Token(Token = "0x4000EB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D9FB0", Offset = "0x8D9FB0")]
		[SerializeField]
		private float _cageFogBlend;

		[Token(Token = "0x4000EB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		[SerializeField]
		private bool _overrideCageFogBlend;

		[Token(Token = "0x4000EB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[SerializeField]
		private TunnellingBase.MaskMode _maskMode;

		[Token(Token = "0x4000EB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		[SerializeField]
		private bool _overrideMaskMode;

		[Token(Token = "0x4000EB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8DA020", Offset = "0x8DA020")]
		private int _blurDownsample;

		[Token(Token = "0x4000EB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		[SerializeField]
		private bool _overrideBlurDownsample;

		[Token(Token = "0x4000EB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8DA070", Offset = "0x8DA070")]
		private float _blurDistance;

		[Token(Token = "0x4000EBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		[SerializeField]
		private bool _overrideBlurDistance;

		[Token(Token = "0x4000EBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8DA0C0", Offset = "0x8DA0C0")]
		private int _blurPasses;

		[Token(Token = "0x4000EBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		[SerializeField]
		private bool _overrideBlurPasses;

		[Token(Token = "0x4000EBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[SerializeField]
		private TunnellingImageBase.BlurKernel _blurSamples;

		[Token(Token = "0x4000EBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		[SerializeField]
		private bool _overrideBlurSamples;

		[Token(Token = "0x4000EBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[SerializeField]
		private TunnellingImageBase.CounterVelocityMode _counterVelocityMode;

		[Token(Token = "0x4000EC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		[SerializeField]
		private bool _overrideCounterVelocityMode;

		[Token(Token = "0x4000EC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[SerializeField]
		private float _counterVelocityResetDistance;

		[Token(Token = "0x4000EC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		[SerializeField]
		private bool _overrideCounterVelocityResetDistance;

		[Token(Token = "0x4000EC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[SerializeField]
		private float _counterVelocityResetTime;

		[Token(Token = "0x4000EC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		[SerializeField]
		private bool _overrideCounterVelocityResetTime;

		[Token(Token = "0x4000EC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8DA190", Offset = "0x8DA190")]
		[SerializeField]
		private float _counterVelocityStrength;

		[Token(Token = "0x4000EC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
		[SerializeField]
		private bool _overrideCounterVelocityStrength;

		[Token(Token = "0x4000EC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[SerializeField]
		private Vector3 _counterVelocityPerAxis;

		[Token(Token = "0x4000EC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
		[SerializeField]
		private bool _overrideCounterVelocityPerAxis;

		[Token(Token = "0x4000EC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13D")]
		[SerializeField]
		private bool _irisZRejection;

		[Token(Token = "0x4000ECA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13E")]
		[SerializeField]
		private bool _overrideIrisZRejection;

		[Token(Token = "0x1700017A")]
		public float effectOverlay
		{
			[Token(Token = "0x6000C2A")]
			[Address(RVA = "0x103E624", Offset = "0x103E624", VA = "0x103E624")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700017B")]
		public bool overrideEffectOverlay
		{
			[Token(Token = "0x6000C2B")]
			[Address(RVA = "0x103E62C", Offset = "0x103E62C", VA = "0x103E62C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700017C")]
		public TunnellingBase.BackgroundMode backgroundMode
		{
			[Token(Token = "0x6000C2C")]
			[Address(RVA = "0x103E634", Offset = "0x103E634", VA = "0x103E634")]
			get
			{
				return default(TunnellingBase.BackgroundMode);
			}
		}

		[Token(Token = "0x1700017D")]
		public bool overrideBackgroundMode
		{
			[Token(Token = "0x6000C2D")]
			[Address(RVA = "0x103E63C", Offset = "0x103E63C", VA = "0x103E63C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700017E")]
		public int cageDownsample
		{
			[Token(Token = "0x6000C2E")]
			[Address(RVA = "0x103E65C", Offset = "0x103E65C", VA = "0x103E65C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700017F")]
		public bool overrideCageDownsample
		{
			[Token(Token = "0x6000C2F")]
			[Address(RVA = "0x103E664", Offset = "0x103E664", VA = "0x103E664")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000180")]
		public TunnellingBase.MSAA cageAntiAliasing
		{
			[Token(Token = "0x6000C30")]
			[Address(RVA = "0x103E684", Offset = "0x103E684", VA = "0x103E684")]
			get
			{
				return default(TunnellingBase.MSAA);
			}
		}

		[Token(Token = "0x17000181")]
		public bool overrideCageAntiAliasing
		{
			[Token(Token = "0x6000C31")]
			[Address(RVA = "0x103E68C", Offset = "0x103E68C", VA = "0x103E68C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000182")]
		public bool cageUpdateEveryFrame
		{
			[Token(Token = "0x6000C32")]
			[Address(RVA = "0x103E6AC", Offset = "0x103E6AC", VA = "0x103E6AC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000183")]
		public bool overrideCageUpdateEveryFrame
		{
			[Token(Token = "0x6000C33")]
			[Address(RVA = "0x103E6B4", Offset = "0x103E6B4", VA = "0x103E6B4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000184")]
		public float cageFogDensity
		{
			[Token(Token = "0x6000C34")]
			[Address(RVA = "0x103E6D4", Offset = "0x103E6D4", VA = "0x103E6D4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000185")]
		public bool overrideCageFogDensity
		{
			[Token(Token = "0x6000C35")]
			[Address(RVA = "0x103E6DC", Offset = "0x103E6DC", VA = "0x103E6DC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000186")]
		public float cageFogPower
		{
			[Token(Token = "0x6000C36")]
			[Address(RVA = "0x103E6FC", Offset = "0x103E6FC", VA = "0x103E6FC")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000187")]
		public bool overrideCageFogPower
		{
			[Token(Token = "0x6000C37")]
			[Address(RVA = "0x103E704", Offset = "0x103E704", VA = "0x103E704")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000188")]
		public float cageFogBlend
		{
			[Token(Token = "0x6000C38")]
			[Address(RVA = "0x103E724", Offset = "0x103E724", VA = "0x103E724")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000189")]
		public bool overrideCageFogBlend
		{
			[Token(Token = "0x6000C39")]
			[Address(RVA = "0x103E72C", Offset = "0x103E72C", VA = "0x103E72C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700018A")]
		public TunnellingBase.MaskMode maskMode
		{
			[Token(Token = "0x6000C3A")]
			[Address(RVA = "0x103E74C", Offset = "0x103E74C", VA = "0x103E74C")]
			get
			{
				return default(TunnellingBase.MaskMode);
			}
		}

		[Token(Token = "0x1700018B")]
		public bool overrideMaskMode
		{
			[Token(Token = "0x6000C3B")]
			[Address(RVA = "0x103E754", Offset = "0x103E754", VA = "0x103E754")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700018C")]
		public int blurDownsample
		{
			[Token(Token = "0x6000C3C")]
			[Address(RVA = "0x103E774", Offset = "0x103E774", VA = "0x103E774")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700018D")]
		public bool overrideBlurDownsample
		{
			[Token(Token = "0x6000C3D")]
			[Address(RVA = "0x103E77C", Offset = "0x103E77C", VA = "0x103E77C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700018E")]
		public float blurDistance
		{
			[Token(Token = "0x6000C3E")]
			[Address(RVA = "0x103E79C", Offset = "0x103E79C", VA = "0x103E79C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700018F")]
		public bool overrideBlurDistance
		{
			[Token(Token = "0x6000C3F")]
			[Address(RVA = "0x103E7A4", Offset = "0x103E7A4", VA = "0x103E7A4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000190")]
		public int blurPasses
		{
			[Token(Token = "0x6000C40")]
			[Address(RVA = "0x103E7C4", Offset = "0x103E7C4", VA = "0x103E7C4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000191")]
		public bool overrideBlurPasses
		{
			[Token(Token = "0x6000C41")]
			[Address(RVA = "0x103E7CC", Offset = "0x103E7CC", VA = "0x103E7CC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000192")]
		public TunnellingImageBase.BlurKernel blurSamples
		{
			[Token(Token = "0x6000C42")]
			[Address(RVA = "0x103E7EC", Offset = "0x103E7EC", VA = "0x103E7EC")]
			get
			{
				return default(TunnellingImageBase.BlurKernel);
			}
		}

		[Token(Token = "0x17000193")]
		public bool overrideBlurSamples
		{
			[Token(Token = "0x6000C43")]
			[Address(RVA = "0x103E7F4", Offset = "0x103E7F4", VA = "0x103E7F4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000194")]
		public TunnellingImageBase.CounterVelocityMode counterVelocityMode
		{
			[Token(Token = "0x6000C44")]
			[Address(RVA = "0x103E814", Offset = "0x103E814", VA = "0x103E814")]
			get
			{
				return default(TunnellingImageBase.CounterVelocityMode);
			}
		}

		[Token(Token = "0x17000195")]
		public bool overrideCounterVelocityMode
		{
			[Token(Token = "0x6000C45")]
			[Address(RVA = "0x103E81C", Offset = "0x103E81C", VA = "0x103E81C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000196")]
		public float counterVelocityResetDistance
		{
			[Token(Token = "0x6000C46")]
			[Address(RVA = "0x103E83C", Offset = "0x103E83C", VA = "0x103E83C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000197")]
		public bool overrideCounterVelocityResetDistance
		{
			[Token(Token = "0x6000C47")]
			[Address(RVA = "0x103E844", Offset = "0x103E844", VA = "0x103E844")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000198")]
		public float counterVelocityResetTime
		{
			[Token(Token = "0x6000C48")]
			[Address(RVA = "0x103E864", Offset = "0x103E864", VA = "0x103E864")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000199")]
		public bool overrideCounterVelocityResetTime
		{
			[Token(Token = "0x6000C49")]
			[Address(RVA = "0x103E86C", Offset = "0x103E86C", VA = "0x103E86C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700019A")]
		public float counterVelocityStrength
		{
			[Token(Token = "0x6000C4A")]
			[Address(RVA = "0x103E88C", Offset = "0x103E88C", VA = "0x103E88C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700019B")]
		public bool overrideCounterVelocityStrength
		{
			[Token(Token = "0x6000C4B")]
			[Address(RVA = "0x103E894", Offset = "0x103E894", VA = "0x103E894")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700019C")]
		public Vector3 counterVelocityPerAxis
		{
			[Token(Token = "0x6000C4C")]
			[Address(RVA = "0x103E8B4", Offset = "0x103E8B4", VA = "0x103E8B4")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x1700019D")]
		public bool overrideCounterVelocityPerAxis
		{
			[Token(Token = "0x6000C4D")]
			[Address(RVA = "0x103E8C4", Offset = "0x103E8C4", VA = "0x103E8C4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700019E")]
		public bool irisZRejection
		{
			[Token(Token = "0x6000C4E")]
			[Address(RVA = "0x103E8E4", Offset = "0x103E8E4", VA = "0x103E8E4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700019F")]
		public bool overrideIrisZRejection
		{
			[Token(Token = "0x6000C4F")]
			[Address(RVA = "0x103E8EC", Offset = "0x103E8EC", VA = "0x103E8EC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000C50")]
		[Address(RVA = "0x103E90C", Offset = "0x103E90C", VA = "0x103E90C")]
		public TunnellingPreset()
		{
		}
	}
	[Token(Token = "0x2000247")]
	public abstract class TunnellingPresetBase : ScriptableObject
	{
		[Serializable]
		[Token(Token = "0x2000248")]
		public class MotionSettings
		{
			[Token(Token = "0x4000EEE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[SerializeField]
			private bool _use;

			[Token(Token = "0x4000EEF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[SerializeField]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8DA554", Offset = "0x8DA554")]
			private float _strength;

			[Token(Token = "0x4000EF0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[SerializeField]
			private float _min;

			[Token(Token = "0x4000EF1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[SerializeField]
			private float _max;

			[Token(Token = "0x4000EF2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[SerializeField]
			private float _smoothing;

			[Token(Token = "0x170001C3")]
			public bool use
			{
				[Token(Token = "0x6000C75")]
				[Address(RVA = "0x1C31888", Offset = "0x1C31888", VA = "0x1C31888")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x170001C4")]
			public float strength
			{
				[Token(Token = "0x6000C76")]
				[Address(RVA = "0x1C31890", Offset = "0x1C31890", VA = "0x1C31890")]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x170001C5")]
			public float min
			{
				[Token(Token = "0x6000C77")]
				[Address(RVA = "0x1C31898", Offset = "0x1C31898", VA = "0x1C31898")]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x170001C6")]
			public float max
			{
				[Token(Token = "0x6000C78")]
				[Address(RVA = "0x1C318A0", Offset = "0x1C318A0", VA = "0x1C318A0")]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x170001C7")]
			public float smoothing
			{
				[Token(Token = "0x6000C79")]
				[Address(RVA = "0x1C318A8", Offset = "0x1C318A8", VA = "0x1C318A8")]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x6000C7A")]
			[Address(RVA = "0x1C318B0", Offset = "0x1C318B0", VA = "0x1C318B0")]
			public MotionSettings()
			{
			}
		}

		[Token(Token = "0x4000ECB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool _overrideAll;

		[Token(Token = "0x4000ECC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8DA230", Offset = "0x8DA230")]
		private float _effectCoverage;

		[Token(Token = "0x4000ECD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private bool _overrideEffectCoverage;

		[Token(Token = "0x4000ECE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private Color _effectColor;

		[Token(Token = "0x4000ECF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private bool _overrideEffectColor;

		[Token(Token = "0x4000ED0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8DA2A0", Offset = "0x8DA2A0")]
		[SerializeField]
		private float _effectFeather;

		[Token(Token = "0x4000ED1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private bool _overrideEffectFeather;

		[Token(Token = "0x4000ED2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
		[SerializeField]
		private bool _applyColorToBackground;

		[Token(Token = "0x4000ED3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3E")]
		[SerializeField]
		private bool _overrideApplyColorToBackground;

		[Token(Token = "0x4000ED4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Cubemap _skybox;

		[Token(Token = "0x4000ED5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private bool _overrideSkybox;

		[Token(Token = "0x4000ED6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private MotionSettings _angularVelocity;

		[Token(Token = "0x4000ED7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private bool _overrideAngularVelocity;

		[Token(Token = "0x4000ED8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private MotionSettings _acceleration;

		[Token(Token = "0x4000ED9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private bool _overrideAcceleration;

		[Token(Token = "0x4000EDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private MotionSettings _velocity;

		[Token(Token = "0x4000EDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private bool _overrideVelocity;

		[Token(Token = "0x4000EDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
		[SerializeField]
		private bool _useCounterMotion;

		[Token(Token = "0x4000EDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7A")]
		[SerializeField]
		private bool _overrideUseCounterMotion;

		[Token(Token = "0x4000EDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8DA3B0", Offset = "0x8DA3B0")]
		private float _counterRotationStrength;

		[Token(Token = "0x4000EDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private bool _overrideCounterRotationStrength;

		[Token(Token = "0x4000EE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[SerializeField]
		private Vector3 _counterRotationPerAxis;

		[Token(Token = "0x4000EE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private bool _overrideCounterRotationPerAxis;

		[Token(Token = "0x4000EE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x91")]
		[SerializeField]
		private bool _useArtificialTilt;

		[Token(Token = "0x4000EE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x92")]
		[SerializeField]
		private bool _overrideUseArtificialTilt;

		[Token(Token = "0x4000EE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8DA440", Offset = "0x8DA440")]
		[SerializeField]
		private int _framerateDivision;

		[Token(Token = "0x4000EE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private bool _overrideFramerateDivision;

		[Token(Token = "0x4000EE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x99")]
		[SerializeField]
		private bool _divideTranslation;

		[Token(Token = "0x4000EE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9A")]
		[SerializeField]
		private bool _overrideDivideTranslation;

		[Token(Token = "0x4000EE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9B")]
		[SerializeField]
		private bool _divideRotation;

		[Token(Token = "0x4000EE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		[SerializeField]
		private bool _overrideDivideRotation;

		[Token(Token = "0x4000EEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private TunnellingBase.ForceVignetteMode _forceVignetteMode;

		[Token(Token = "0x4000EEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		[SerializeField]
		private bool _overrideForceVignetteMode;

		[Token(Token = "0x4000EEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8DA4F4", Offset = "0x8DA4F4")]
		private float _forceVignetteValue;

		[Token(Token = "0x4000EED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		[SerializeField]
		private bool _overrideForceVignetteValue;

		[Token(Token = "0x170001A0")]
		protected bool overrideAll
		{
			[Token(Token = "0x6000C51")]
			[Address(RVA = "0x103EA74", Offset = "0x103EA74", VA = "0x103EA74")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001A1")]
		public float effectCoverage
		{
			[Token(Token = "0x6000C52")]
			[Address(RVA = "0x103EA7C", Offset = "0x103EA7C", VA = "0x103EA7C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170001A2")]
		public bool overrideEffectCoverage
		{
			[Token(Token = "0x6000C53")]
			[Address(RVA = "0x103EA84", Offset = "0x103EA84", VA = "0x103EA84")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001A3")]
		public Color effectColor
		{
			[Token(Token = "0x6000C54")]
			[Address(RVA = "0x103EAA4", Offset = "0x103EAA4", VA = "0x103EAA4")]
			get
			{
				return default(Color);
			}
		}

		[Token(Token = "0x170001A4")]
		public bool overrideEffectColor
		{
			[Token(Token = "0x6000C55")]
			[Address(RVA = "0x103EAB0", Offset = "0x103EAB0", VA = "0x103EAB0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001A5")]
		public float effectFeather
		{
			[Token(Token = "0x6000C56")]
			[Address(RVA = "0x103EAD0", Offset = "0x103EAD0", VA = "0x103EAD0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170001A6")]
		public bool overrideEffectFeather
		{
			[Token(Token = "0x6000C57")]
			[Address(RVA = "0x103EAD8", Offset = "0x103EAD8", VA = "0x103EAD8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001A7")]
		public bool applyColorToBackground
		{
			[Token(Token = "0x6000C58")]
			[Address(RVA = "0x103EAF8", Offset = "0x103EAF8", VA = "0x103EAF8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001A8")]
		public bool overrideApplyColorToBackground
		{
			[Token(Token = "0x6000C59")]
			[Address(RVA = "0x103EB00", Offset = "0x103EB00", VA = "0x103EB00")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001A9")]
		public Cubemap skybox
		{
			[Token(Token = "0x6000C5A")]
			[Address(RVA = "0x103EB20", Offset = "0x103EB20", VA = "0x103EB20")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001AA")]
		public bool overrideSkybox
		{
			[Token(Token = "0x6000C5B")]
			[Address(RVA = "0x103EB28", Offset = "0x103EB28", VA = "0x103EB28")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001AB")]
		public MotionSettings angularVelocity
		{
			[Token(Token = "0x6000C5C")]
			[Address(RVA = "0x103EB48", Offset = "0x103EB48", VA = "0x103EB48")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001AC")]
		public bool overrideAngularVelocity
		{
			[Token(Token = "0x6000C5D")]
			[Address(RVA = "0x103EB50", Offset = "0x103EB50", VA = "0x103EB50")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001AD")]
		public MotionSettings acceleration
		{
			[Token(Token = "0x6000C5E")]
			[Address(RVA = "0x103EB70", Offset = "0x103EB70", VA = "0x103EB70")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001AE")]
		public bool overrideAcceleration
		{
			[Token(Token = "0x6000C5F")]
			[Address(RVA = "0x103EB78", Offset = "0x103EB78", VA = "0x103EB78")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001AF")]
		public MotionSettings velocity
		{
			[Token(Token = "0x6000C60")]
			[Address(RVA = "0x103EB98", Offset = "0x103EB98", VA = "0x103EB98")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001B0")]
		public bool overrideVelocity
		{
			[Token(Token = "0x6000C61")]
			[Address(RVA = "0x103EBA0", Offset = "0x103EBA0", VA = "0x103EBA0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001B1")]
		public bool useCounterMotion
		{
			[Token(Token = "0x6000C62")]
			[Address(RVA = "0x103EBC0", Offset = "0x103EBC0", VA = "0x103EBC0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001B2")]
		public bool overrideUseCounterMotion
		{
			[Token(Token = "0x6000C63")]
			[Address(RVA = "0x103EBC8", Offset = "0x103EBC8", VA = "0x103EBC8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001B3")]
		public float counterRotationStrength
		{
			[Token(Token = "0x6000C64")]
			[Address(RVA = "0x103EBE8", Offset = "0x103EBE8", VA = "0x103EBE8")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170001B4")]
		public bool overrideCounterRotationStrength
		{
			[Token(Token = "0x6000C65")]
			[Address(RVA = "0x103EBF0", Offset = "0x103EBF0", VA = "0x103EBF0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001B5")]
		public Vector3 counterRotationPerAxis
		{
			[Token(Token = "0x6000C66")]
			[Address(RVA = "0x103EC10", Offset = "0x103EC10", VA = "0x103EC10")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170001B6")]
		public bool overrideCounterRotationPerAxis
		{
			[Token(Token = "0x6000C67")]
			[Address(RVA = "0x103EC1C", Offset = "0x103EC1C", VA = "0x103EC1C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001B7")]
		public bool useArtificialTilt
		{
			[Token(Token = "0x6000C68")]
			[Address(RVA = "0x103EC3C", Offset = "0x103EC3C", VA = "0x103EC3C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001B8")]
		public bool overrideUseArtificialTilt
		{
			[Token(Token = "0x6000C69")]
			[Address(RVA = "0x103EC44", Offset = "0x103EC44", VA = "0x103EC44")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001B9")]
		public int framerateDivision
		{
			[Token(Token = "0x6000C6A")]
			[Address(RVA = "0x103EC64", Offset = "0x103EC64", VA = "0x103EC64")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001BA")]
		public bool overrideFramerateDivision
		{
			[Token(Token = "0x6000C6B")]
			[Address(RVA = "0x103EC6C", Offset = "0x103EC6C", VA = "0x103EC6C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001BB")]
		public bool divideTranslation
		{
			[Token(Token = "0x6000C6C")]
			[Address(RVA = "0x103EC8C", Offset = "0x103EC8C", VA = "0x103EC8C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001BC")]
		public bool overrideDivideTranslation
		{
			[Token(Token = "0x6000C6D")]
			[Address(RVA = "0x103EC94", Offset = "0x103EC94", VA = "0x103EC94")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001BD")]
		public bool divideRotation
		{
			[Token(Token = "0x6000C6E")]
			[Address(RVA = "0x103ECB4", Offset = "0x103ECB4", VA = "0x103ECB4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001BE")]
		public bool overrideDividerotation
		{
			[Token(Token = "0x6000C6F")]
			[Address(RVA = "0x103ECBC", Offset = "0x103ECBC", VA = "0x103ECBC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001BF")]
		public TunnellingBase.ForceVignetteMode forceVignetteMode
		{
			[Token(Token = "0x6000C70")]
			[Address(RVA = "0x103ECDC", Offset = "0x103ECDC", VA = "0x103ECDC")]
			get
			{
				return default(TunnellingBase.ForceVignetteMode);
			}
		}

		[Token(Token = "0x170001C0")]
		public bool overrideForceVignetteMode
		{
			[Token(Token = "0x6000C71")]
			[Address(RVA = "0x103ECE4", Offset = "0x103ECE4", VA = "0x103ECE4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001C1")]
		public float forceVignetteValue
		{
			[Token(Token = "0x6000C72")]
			[Address(RVA = "0x103ED04", Offset = "0x103ED04", VA = "0x103ED04")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170001C2")]
		public bool overrideForceVignetteValue
		{
			[Token(Token = "0x6000C73")]
			[Address(RVA = "0x103ED0C", Offset = "0x103ED0C", VA = "0x103ED0C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000C74")]
		[Address(RVA = "0x103E9C4", Offset = "0x103E9C4", VA = "0x103E9C4")]
		protected TunnellingPresetBase()
		{
		}
	}
	[Token(Token = "0x2000249")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8D6E68", Offset = "0x8D6E68")]
	public class TunnellingPresetMobile : TunnellingPresetBase
	{
		[Token(Token = "0x4000EF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAD")]
		[SerializeField]
		private bool _drawSkybox;

		[Token(Token = "0x4000EF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAE")]
		[SerializeField]
		private bool _overrideDrawSkybox;

		[Token(Token = "0x4000EF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAF")]
		[SerializeField]
		private bool _drawBeforeTransparent;

		[Token(Token = "0x4000EF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private bool _overrideDrawBeforeTransparent;

		[Token(Token = "0x4000EF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB1")]
		[SerializeField]
		private bool _useMask;

		[Token(Token = "0x4000EF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB2")]
		[SerializeField]
		private bool _overrideUseMask;

		[Token(Token = "0x4000EF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8DA624", Offset = "0x8DA624")]
		[SerializeField]
		private int _stencilReference;

		[Token(Token = "0x4000EFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private bool _overrideStencilReference;

		[Token(Token = "0x4000EFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8DA678", Offset = "0x8DA678")]
		private int _stencilMask;

		[Token(Token = "0x4000EFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private bool _overrideStencilMask;

		[Token(Token = "0x4000EFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8DA6CC", Offset = "0x8DA6CC")]
		private int _stencilBias;

		[Token(Token = "0x4000EFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private bool _overrideStencilBias;

		[Token(Token = "0x170001C8")]
		public bool drawSkybox
		{
			[Token(Token = "0x6000C7B")]
			[Address(RVA = "0x103ED2C", Offset = "0x103ED2C", VA = "0x103ED2C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001C9")]
		public bool overrideDrawSkybox
		{
			[Token(Token = "0x6000C7C")]
			[Address(RVA = "0x103ED34", Offset = "0x103ED34", VA = "0x103ED34")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001CA")]
		public bool drawBeforeTransparent
		{
			[Token(Token = "0x6000C7D")]
			[Address(RVA = "0x103ED54", Offset = "0x103ED54", VA = "0x103ED54")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001CB")]
		public bool overrideDrawBeforeTransparent
		{
			[Token(Token = "0x6000C7E")]
			[Address(RVA = "0x103ED5C", Offset = "0x103ED5C", VA = "0x103ED5C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001CC")]
		public bool useMask
		{
			[Token(Token = "0x6000C7F")]
			[Address(RVA = "0x103ED64", Offset = "0x103ED64", VA = "0x103ED64")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001CD")]
		public bool overrideUseMask
		{
			[Token(Token = "0x6000C80")]
			[Address(RVA = "0x103ED6C", Offset = "0x103ED6C", VA = "0x103ED6C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001CE")]
		public int stencilReference
		{
			[Token(Token = "0x6000C81")]
			[Address(RVA = "0x103ED74", Offset = "0x103ED74", VA = "0x103ED74")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001CF")]
		public bool overrideStencilReference
		{
			[Token(Token = "0x6000C82")]
			[Address(RVA = "0x103ED7C", Offset = "0x103ED7C", VA = "0x103ED7C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001D0")]
		public int stencilMask
		{
			[Token(Token = "0x6000C83")]
			[Address(RVA = "0x103ED84", Offset = "0x103ED84", VA = "0x103ED84")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001D1")]
		public bool overrideStencilMask
		{
			[Token(Token = "0x6000C84")]
			[Address(RVA = "0x103ED8C", Offset = "0x103ED8C", VA = "0x103ED8C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001D2")]
		public int stencilBias
		{
			[Token(Token = "0x6000C85")]
			[Address(RVA = "0x103ED94", Offset = "0x103ED94", VA = "0x103ED94")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001D3")]
		public bool overrideStencilBias
		{
			[Token(Token = "0x6000C86")]
			[Address(RVA = "0x103ED9C", Offset = "0x103ED9C", VA = "0x103ED9C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000C87")]
		[Address(RVA = "0x103EDA4", Offset = "0x103EDA4", VA = "0x103EDA4")]
		public TunnellingPresetMobile()
		{
		}
	}
}
namespace Sigtrap.VrTunnellingPro.Examples
{
	[Token(Token = "0x200024A")]
	public class VRTP_ExampleMovement : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200024B")]
		private struct Preset
		{
			[Token(Token = "0x4000F11")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public KeyCode key;

			[Token(Token = "0x4000F12")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public GameObject[] worldObjects;

			[Token(Token = "0x4000F13")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public TunnellingPreset postPreset;
		}

		[Token(Token = "0x4000EFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool _disableModes;

		[Token(Token = "0x4000F00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float _rotSensitivity;

		[Token(Token = "0x4000F01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float _movSensitivity;

		[Token(Token = "0x4000F02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Cubemap[] _skyboxes;

		[Token(Token = "0x4000F03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject[] _cages;

		[Token(Token = "0x4000F04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Preset[] _modePresets;

		[Token(Token = "0x4000F05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int _currentMode;

		[Token(Token = "0x4000F06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private bool _hasWarnedInput;

		[Token(Token = "0x4000F07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Tunnelling _tunnelling;

		[Token(Token = "0x4000F08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private CharacterController _char;

		[Token(Token = "0x4000F09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int _currentSkybox;

		[Token(Token = "0x4000F0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private int _currentCage;

		[Token(Token = "0x4000F0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Vector3 _speedCurrent;

		[Token(Token = "0x4000F0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private Vector3 _speedSlew;

		[Token(Token = "0x4000F0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private float _speedSmoothing;

		[Token(Token = "0x4000F0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private float _rotCurrent;

		[Token(Token = "0x4000F0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private float _rotSlew;

		[Token(Token = "0x4000F10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[SerializeField]
		private float _rotSmoothing;

		[Token(Token = "0x6000C88")]
		[Address(RVA = "0x1043BAC", Offset = "0x1043BAC", VA = "0x1043BAC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000C89")]
		[Address(RVA = "0x1043C38", Offset = "0x1043C38", VA = "0x1043C38")]
		private void Update()
		{
		}

		[Token(Token = "0x6000C8A")]
		[Address(RVA = "0x1044094", Offset = "0x1044094", VA = "0x1044094")]
		private void SetPreset(int i)
		{
		}

		[Token(Token = "0x6000C8B")]
		[Address(RVA = "0x10441EC", Offset = "0x10441EC", VA = "0x10441EC")]
		public VRTP_ExampleMovement()
		{
		}
	}
}
namespace TextOverTime_Examples
{
	[Token(Token = "0x200024C")]
	public class ClickTrigger : MonoBehaviour
	{
		[Token(Token = "0x4000F14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UnityEvent mToTriggerOnClick;

		[Token(Token = "0x6000C8C")]
		[Address(RVA = "0x12FF470", Offset = "0x12FF470", VA = "0x12FF470")]
		private void OnMouseDown()
		{
		}

		[Token(Token = "0x6000C8D")]
		[Address(RVA = "0x12FF48C", Offset = "0x12FF48C", VA = "0x12FF48C")]
		public ClickTrigger()
		{
		}
	}
	[Token(Token = "0x200024D")]
	public class ExampleDialog : MonoBehaviour
	{
		[Token(Token = "0x4000F15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string[] m_DialogSentences;

		[Token(Token = "0x4000F16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int mCurrentSentence;

		[Token(Token = "0x4000F17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TextOverTime mTextOverTimeTarget;

		[Token(Token = "0x6000C8E")]
		[Address(RVA = "0x1093448", Offset = "0x1093448", VA = "0x1093448")]
		public void HitTheCube()
		{
		}

		[Token(Token = "0x6000C8F")]
		[Address(RVA = "0x1093480", Offset = "0x1093480", VA = "0x1093480")]
		private void GoToNext()
		{
		}

		[Token(Token = "0x6000C90")]
		[Address(RVA = "0x1093514", Offset = "0x1093514", VA = "0x1093514")]
		public ExampleDialog()
		{
		}
	}
	[Token(Token = "0x200024E")]
	public class ExampleScenario : MonoBehaviour
	{
		[Token(Token = "0x200024F")]
		public enum ScenarioState
		{
			[Token(Token = "0x4000F1E")]
			START,
			[Token(Token = "0x4000F1F")]
			DISPLAYING_PRESS_ANY_KEY,
			[Token(Token = "0x4000F20")]
			PRESS_ANY_KEY,
			[Token(Token = "0x4000F21")]
			LOADING_STUFF,
			[Token(Token = "0x4000F22")]
			HACKER_TYPE,
			[Token(Token = "0x4000F23")]
			ACCESS_GRANTED,
			[Token(Token = "0x4000F24")]
			END_STATE
		}

		[Token(Token = "0x4000F18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TextOverTime m_PressAnyKey;

		[Token(Token = "0x4000F19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TextOverTime m_LoadingStuff;

		[Token(Token = "0x4000F1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public HackerTyper m_HackFun;

		[Token(Token = "0x4000F1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public TextOverTime m_AccessGranted;

		[Token(Token = "0x4000F1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public ScenarioState m_State;

		[Token(Token = "0x6000C91")]
		[Address(RVA = "0x109351C", Offset = "0x109351C", VA = "0x109351C")]
		public void GoToNextStep()
		{
		}

		[Token(Token = "0x6000C92")]
		[Address(RVA = "0x109352C", Offset = "0x109352C", VA = "0x109352C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000C93")]
		[Address(RVA = "0x1093714", Offset = "0x1093714", VA = "0x1093714")]
		public void StartHackerTyper()
		{
		}

		[Token(Token = "0x6000C94")]
		[Address(RVA = "0x1093750", Offset = "0x1093750", VA = "0x1093750")]
		public void DisplayAccessGranted()
		{
		}

		[Token(Token = "0x6000C95")]
		[Address(RVA = "0x1093624", Offset = "0x1093624", VA = "0x1093624")]
		private bool HasPressedAnyKey()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C96")]
		[Address(RVA = "0x1093670", Offset = "0x1093670", VA = "0x1093670")]
		private bool HasPressedResetKey()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C97")]
		[Address(RVA = "0x10936A4", Offset = "0x10936A4", VA = "0x10936A4")]
		private void Reset()
		{
		}

		[Token(Token = "0x6000C98")]
		[Address(RVA = "0x1093788", Offset = "0x1093788", VA = "0x1093788")]
		public ExampleScenario()
		{
		}
	}
	[Token(Token = "0x2000250")]
	public class SceneLoader : MonoBehaviour
	{
		[Token(Token = "0x6000C99")]
		[Address(RVA = "0x106389C", Offset = "0x106389C", VA = "0x106389C")]
		public void LoadScene(string sceneName)
		{
		}

		[Token(Token = "0x6000C9A")]
		[Address(RVA = "0x1063900", Offset = "0x1063900", VA = "0x1063900")]
		public SceneLoader()
		{
		}
	}
	[Token(Token = "0x2000251")]
	public class ScrollViewSnap : MonoBehaviour
	{
		[Token(Token = "0x4000F25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private ScrollRect m_ScrollRectComponent;

		[Token(Token = "0x6000C9B")]
		[Address(RVA = "0x1064050", Offset = "0x1064050", VA = "0x1064050")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000C9C")]
		[Address(RVA = "0x10640AC", Offset = "0x10640AC", VA = "0x10640AC")]
		private void Update()
		{
		}

		[Token(Token = "0x6000C9D")]
		[Address(RVA = "0x10640CC", Offset = "0x10640CC", VA = "0x10640CC")]
		public ScrollViewSnap()
		{
		}
	}
}
namespace JulienFoucher
{
	[Token(Token = "0x2000252")]
	public class HackerTyper : TextBehaviourBase
	{
		[Token(Token = "0x4000F26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DA79C", Offset = "0x8DA79C")]
		public int m_LettersDisplayedPerKey;

		[Token(Token = "0x4000F27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DA7D4", Offset = "0x8DA7D4")]
		public UnityEvent m_EventOnComplete;

		[Token(Token = "0x4000F28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool m_EffectEnabled;

		[Token(Token = "0x6000C9E")]
		[Address(RVA = "0x133CB4C", Offset = "0x133CB4C", VA = "0x133CB4C")]
		public void SetTargetText(string text)
		{
		}

		[Token(Token = "0x6000C9F")]
		[Address(RVA = "0x133CB54", Offset = "0x133CB54", VA = "0x133CB54")]
		public bool isFinished()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CA0")]
		[Address(RVA = "0x133CB88", Offset = "0x133CB88", VA = "0x133CB88")]
		public void DisplayAllText(bool disableEffect = true, bool triggerEvent = true)
		{
		}

		[Token(Token = "0x6000CA1")]
		[Address(RVA = "0x133CBD0", Offset = "0x133CBD0", VA = "0x133CBD0")]
		public void StartEffect(bool reset = true)
		{
		}

		[Token(Token = "0x6000CA2")]
		[Address(RVA = "0x133CC3C", Offset = "0x133CC3C", VA = "0x133CC3C")]
		public void Reset()
		{
		}

		[Token(Token = "0x6000CA3")]
		[Address(RVA = "0x133CC94", Offset = "0x133CC94", VA = "0x133CC94")]
		private void Start()
		{
		}

		[Token(Token = "0x6000CA4")]
		[Address(RVA = "0x133CCB0", Offset = "0x133CCB0", VA = "0x133CCB0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000CA5")]
		[Address(RVA = "0x133CCCC", Offset = "0x133CCCC", VA = "0x133CCCC")]
		private void Update()
		{
		}

		[Token(Token = "0x6000CA6")]
		[Address(RVA = "0x133CD5C", Offset = "0x133CD5C", VA = "0x133CD5C")]
		private bool HasPressedAnyKey()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CA7")]
		[Address(RVA = "0x133CDA8", Offset = "0x133CDA8", VA = "0x133CDA8")]
		public HackerTyper()
		{
		}
	}
	[Token(Token = "0x2000253")]
	public class TextBehaviourBase : MonoBehaviour
	{
		[Token(Token = "0x4000F29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TextAreaAttribute", RVA = "0x8DA80C", Offset = "0x8DA80C")]
		public string m_TargetText;

		[Token(Token = "0x4000F2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DA81C", Offset = "0x8DA81C")]
		public bool m_StartEffectOnStart;

		[Token(Token = "0x4000F2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DA854", Offset = "0x8DA854")]
		public bool m_StartEffectOnEnable;

		[Token(Token = "0x4000F2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DA88C", Offset = "0x8DA88C")]
		public bool m_ResetTextOnEnable;

		[Token(Token = "0x4000F2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x23")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DA8C4", Offset = "0x8DA8C4")]
		public bool m_AutoAssignUiText;

		[Token(Token = "0x4000F2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DA8FC", Offset = "0x8DA8FC")]
		public bool m_AutoAssignTextMesh;

		[Token(Token = "0x4000F2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DA934", Offset = "0x8DA934")]
		public bool m_AutoAssignTextMeshPro;

		[Token(Token = "0x4000F30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DA96C", Offset = "0x8DA96C")]
		public Text m_UiTextToModify;

		[Token(Token = "0x4000F31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DA9A4", Offset = "0x8DA9A4")]
		public TextMesh m_TextMeshToModify;

		[Token(Token = "0x4000F32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DA9DC", Offset = "0x8DA9DC")]
		public TMP_Text m_TextMeshProToModify;

		[Token(Token = "0x4000F33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected string m_CurrentTextDisplayed;

		[Token(Token = "0x6000CA8")]
		[Address(RVA = "0x12DFC78", Offset = "0x12DFC78", VA = "0x12DFC78")]
		protected void SetDisplayedText(string TextToDisplay)
		{
		}

		[Token(Token = "0x6000CA9")]
		[Address(RVA = "0x12DFDC8", Offset = "0x12DFDC8", VA = "0x12DFDC8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000CAA")]
		[Address(RVA = "0x12DFF74", Offset = "0x12DFF74", VA = "0x12DFF74")]
		public TextBehaviourBase()
		{
		}
	}
	[Token(Token = "0x2000254")]
	public class TextOverTime : TextBehaviourBase
	{
		[Token(Token = "0x2000255")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D6EB8", Offset = "0x8D6EB8")]
		private sealed class <CRAnimateText>d__33 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000F4B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000F4C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000F4D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TextOverTime <>4__this;

			[Token(Token = "0x4000F4E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <_timeError>5__2;

			[Token(Token = "0x4000F4F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <_trueDelay>5__3;

			[Token(Token = "0x4000F50")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int <_interCount>5__4;

			[Token(Token = "0x170001D4")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000CBE")]
				[Address(RVA = "0x1C305A0", Offset = "0x1C305A0", VA = "0x1C305A0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001D5")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000CC0")]
				[Address(RVA = "0x1C305E8", Offset = "0x1C305E8", VA = "0x1C305E8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000CBB")]
			[Address(RVA = "0x1C2FFFC", Offset = "0x1C2FFFC", VA = "0x1C2FFFC")]
			[DebuggerHidden]
			public <CRAnimateText>d__33(int <>1__state)
			{
			}

			[Token(Token = "0x6000CBC")]
			[Address(RVA = "0x1C30028", Offset = "0x1C30028", VA = "0x1C30028", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000CBD")]
			[Address(RVA = "0x1C3002C", Offset = "0x1C3002C", VA = "0x1C3002C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000CBF")]
			[Address(RVA = "0x1C305A8", Offset = "0x1C305A8", VA = "0x1C305A8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000256")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D6EC8", Offset = "0x8D6EC8")]
		private sealed class <CRBlinkCursor>d__34 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000F51")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000F52")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000F53")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TextOverTime <>4__this;

			[Token(Token = "0x170001D6")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000CC4")]
				[Address(RVA = "0x1C30718", Offset = "0x1C30718", VA = "0x1C30718", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001D7")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000CC6")]
				[Address(RVA = "0x1C30760", Offset = "0x1C30760", VA = "0x1C30760", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000CC1")]
			[Address(RVA = "0x1C305F0", Offset = "0x1C305F0", VA = "0x1C305F0")]
			[DebuggerHidden]
			public <CRBlinkCursor>d__34(int <>1__state)
			{
			}

			[Token(Token = "0x6000CC2")]
			[Address(RVA = "0x1C3061C", Offset = "0x1C3061C", VA = "0x1C3061C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000CC3")]
			[Address(RVA = "0x1C30620", Offset = "0x1C30620", VA = "0x1C30620", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000CC5")]
			[Address(RVA = "0x1C30720", Offset = "0x1C30720", VA = "0x1C30720", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000F34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DAA14", Offset = "0x8DAA14")]
		public bool m_EnableCursor;

		[Token(Token = "0x4000F35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DAA4C", Offset = "0x8DAA4C")]
		public string m_Cursor;

		[Token(Token = "0x4000F36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DAA84", Offset = "0x8DAA84")]
		public bool m_CursorBlinkOnEnd;

		[Token(Token = "0x4000F37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DAABC", Offset = "0x8DAABC")]
		public float m_CursorBlinkRate;

		[Token(Token = "0x4000F38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DAAF4", Offset = "0x8DAAF4")]
		public float m_PauseTimeOnLineFeed;

		[Token(Token = "0x4000F39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DAB2C", Offset = "0x8DAB2C")]
		public bool m_CursorBlinkOnLineEnd;

		[Token(Token = "0x4000F3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DAB64", Offset = "0x8DAB64")]
		public bool m_InstantDisplaySpace;

		[Token(Token = "0x4000F3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x66")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DAB9C", Offset = "0x8DAB9C")]
		public bool m_InstantDisplayTab;

		[Token(Token = "0x4000F3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DABD4", Offset = "0x8DABD4")]
		public float m_DelayBetweenLetters;

		[Token(Token = "0x4000F3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DAC0C", Offset = "0x8DAC0C")]
		public int m_InterLettersCount;

		[Token(Token = "0x4000F3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DAC44", Offset = "0x8DAC44")]
		public bool m_UseSpecificCharacters;

		[Token(Token = "0x4000F3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DAC7C", Offset = "0x8DAC7C")]
		public bool m_FollowSpecificCharactersOrder;

		[Token(Token = "0x4000F40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DACB4", Offset = "0x8DACB4")]
		public char[] m_PossibleChar;

		[Token(Token = "0x4000F41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DACEC", Offset = "0x8DACEC")]
		public UnityEvent m_EventOnStart;

		[Token(Token = "0x4000F42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DAD24", Offset = "0x8DAD24")]
		public UnityEvent m_EventOnEnd;

		[Token(Token = "0x4000F43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private bool m_TextFullyDisplayed;

		[Token(Token = "0x4000F44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x91")]
		private bool m_EffectEnabled;

		[Token(Token = "0x4000F45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private float m_LastTimeDisplayedLetter;

		[Token(Token = "0x4000F46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private int m_CurrentIndex;

		[Token(Token = "0x4000F47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private int m_InterIndex;

		[Token(Token = "0x4000F48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private string m_CurrentTextToDisplay;

		[Token(Token = "0x4000F49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Coroutine m_MainCR;

		[Token(Token = "0x4000F4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Coroutine m_CursorBlinkCR;

		[Token(Token = "0x6000CAB")]
		[Address(RVA = "0x12DFFF4", Offset = "0x12DFFF4", VA = "0x12DFFF4")]
		public void DisplayAllTargetText(bool disableEffect = true, bool triggerEvent = true)
		{
		}

		[Token(Token = "0x6000CAC")]
		[Address(RVA = "0x12E00C8", Offset = "0x12E00C8", VA = "0x12E00C8")]
		public bool IsFullDisplayed()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CAD")]
		[Address(RVA = "0x12E00D0", Offset = "0x12E00D0", VA = "0x12E00D0")]
		public void StartEffect()
		{
		}

		[Token(Token = "0x6000CAE")]
		[Address(RVA = "0x12E00EC", Offset = "0x12E00EC", VA = "0x12E00EC")]
		public void StartEffect(string targetText)
		{
		}

		[Token(Token = "0x6000CAF")]
		[Address(RVA = "0x12E0124", Offset = "0x12E0124", VA = "0x12E0124")]
		public void DisplayText(string textToDisplay, bool clearTextDisplay = true)
		{
		}

		[Token(Token = "0x6000CB0")]
		[Address(RVA = "0x12E0080", Offset = "0x12E0080", VA = "0x12E0080")]
		public void StartBlinkCursor()
		{
		}

		[Token(Token = "0x6000CB1")]
		[Address(RVA = "0x12E0330", Offset = "0x12E0330", VA = "0x12E0330")]
		public void StopBlinkCursor(bool removeCursor = true)
		{
		}

		[Token(Token = "0x6000CB2")]
		[Address(RVA = "0x12E03F0", Offset = "0x12E03F0", VA = "0x12E03F0")]
		public void Reset()
		{
		}

		[Token(Token = "0x6000CB3")]
		[Address(RVA = "0x12E03F8", Offset = "0x12E03F8", VA = "0x12E03F8")]
		public void SetTargetText(string text)
		{
		}

		[Token(Token = "0x6000CB4")]
		[Address(RVA = "0x12E0204", Offset = "0x12E0204", VA = "0x12E0204")]
		public void ClearText(bool disableEffect = true)
		{
		}

		[Token(Token = "0x6000CB5")]
		[Address(RVA = "0x12E02B8", Offset = "0x12E02B8", VA = "0x12E02B8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E3B38", Offset = "0x8E3B38")]
		private IEnumerator CRAnimateText()
		{
			return null;
		}

		[Token(Token = "0x6000CB6")]
		[Address(RVA = "0x12E0378", Offset = "0x12E0378", VA = "0x12E0378")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E3B98", Offset = "0x8E3B98")]
		private IEnumerator CRBlinkCursor()
		{
			return null;
		}

		[Token(Token = "0x6000CB7")]
		[Address(RVA = "0x12E0400", Offset = "0x12E0400", VA = "0x12E0400")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000CB8")]
		[Address(RVA = "0x12E0458", Offset = "0x12E0458", VA = "0x12E0458")]
		private void Start()
		{
		}

		[Token(Token = "0x6000CB9")]
		[Address(RVA = "0x12E00DC", Offset = "0x12E00DC", VA = "0x12E00DC")]
		private void DisplayText(bool clearTextDisplay = true)
		{
		}

		[Token(Token = "0x6000CBA")]
		[Address(RVA = "0x12E0470", Offset = "0x12E0470", VA = "0x12E0470")]
		public TextOverTime()
		{
		}
	}
}
namespace OculusSampleFramework
{
	[Token(Token = "0x2000257")]
	public class ColorGrabbable : PVRGrabbable
	{
		[Token(Token = "0x4000F54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly Color COLOR_GRAB;

		[Token(Token = "0x4000F55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static readonly Color COLOR_HIGHLIGHT;

		[Token(Token = "0x4000F56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Color m_color;

		[Token(Token = "0x4000F57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private MeshRenderer[] m_meshRenderers;

		[Token(Token = "0x4000F58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool m_highlight;

		[Token(Token = "0x170001D8")]
		public bool Highlight
		{
			[Token(Token = "0x6000CC7")]
			[Address(RVA = "0x130000C", Offset = "0x130000C", VA = "0x130000C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000CC8")]
			[Address(RVA = "0x1300014", Offset = "0x1300014", VA = "0x1300014")]
			set
			{
			}
		}

		[Token(Token = "0x6000CC9")]
		[Address(RVA = "0x1300020", Offset = "0x1300020", VA = "0x1300020")]
		protected void UpdateColor()
		{
		}

		[Token(Token = "0x6000CCA")]
		[Address(RVA = "0x13001E8", Offset = "0x13001E8", VA = "0x13001E8", Slot = "4")]
		public override void GrabBegin(PVRGrabber hand, Collider grabPoint)
		{
		}

		[Token(Token = "0x6000CCB")]
		[Address(RVA = "0x1300210", Offset = "0x1300210", VA = "0x1300210", Slot = "5")]
		public override void GrabEnd(Vector3 linearVelocity, Vector3 angularVelocity)
		{
		}

		[Token(Token = "0x6000CCC")]
		[Address(RVA = "0x1300238", Offset = "0x1300238", VA = "0x1300238")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000CCD")]
		[Address(RVA = "0x13000E8", Offset = "0x13000E8", VA = "0x13000E8")]
		private void SetColor(Color color)
		{
		}

		[Token(Token = "0x6000CCE")]
		[Address(RVA = "0x130050C", Offset = "0x130050C", VA = "0x130050C")]
		public ColorGrabbable()
		{
		}
	}
	[Token(Token = "0x2000258")]
	public class DistanceGrabbable : PVRGrabbable
	{
		[Token(Token = "0x4000F59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public string m_materialColorField;

		[Token(Token = "0x4000F5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private GrabbableCrosshair m_crosshair;

		[Token(Token = "0x4000F5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private GrabManager m_crosshairManager;

		[Token(Token = "0x4000F5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Renderer m_renderer;

		[Token(Token = "0x4000F5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private MaterialPropertyBlock m_mpb;

		[Token(Token = "0x4000F5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private bool m_inRange;

		[Token(Token = "0x4000F5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
		private bool m_targeted;

		[Token(Token = "0x170001D9")]
		public bool InRange
		{
			[Token(Token = "0x6000CD0")]
			[Address(RVA = "0x1090780", Offset = "0x1090780", VA = "0x1090780")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000CD1")]
			[Address(RVA = "0x1090788", Offset = "0x1090788", VA = "0x1090788")]
			set
			{
			}
		}

		[Token(Token = "0x170001DA")]
		public bool Targeted
		{
			[Token(Token = "0x6000CD2")]
			[Address(RVA = "0x1090904", Offset = "0x1090904", VA = "0x1090904")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000CD3")]
			[Address(RVA = "0x109090C", Offset = "0x109090C", VA = "0x109090C")]
			set
			{
			}
		}

		[Token(Token = "0x6000CD4")]
		[Address(RVA = "0x1090918", Offset = "0x1090918", VA = "0x1090918", Slot = "6")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6000CD5")]
		[Address(RVA = "0x1090794", Offset = "0x1090794", VA = "0x1090794")]
		private void RefreshCrosshair()
		{
		}

		[Token(Token = "0x6000CD6")]
		[Address(RVA = "0x1090A84", Offset = "0x1090A84", VA = "0x1090A84")]
		public DistanceGrabbable()
		{
		}
	}
	[Token(Token = "0x2000259")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x8D6ED8", Offset = "0x8D6ED8")]
	public class DistanceGrabber : PVRGrabber
	{
		[Token(Token = "0x4000F60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[SerializeField]
		private float m_spherecastRadius;

		[Token(Token = "0x4000F61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		[SerializeField]
		private float m_noSnapThreshhold;

		[Token(Token = "0x4000F62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[SerializeField]
		private bool m_useSpherecast;

		[Token(Token = "0x4000F63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x109")]
		[SerializeField]
		public bool m_preventGrabThroughWalls;

		[Token(Token = "0x4000F64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		[SerializeField]
		private float m_objectPullVelocity;

		[Token(Token = "0x4000F65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private float m_objectPullMaxRotationRate;

		[Token(Token = "0x4000F66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		private bool m_movingObjectToHand;

		[Token(Token = "0x4000F67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[SerializeField]
		private float m_maxGrabDistance;

		[Token(Token = "0x4000F68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		[SerializeField]
		private int m_grabObjectsInLayer;

		[Token(Token = "0x4000F69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[SerializeField]
		private int m_obstructionLayer;

		[Token(Token = "0x4000F6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private DistanceGrabber m_otherHand;

		[Token(Token = "0x4000F6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		protected DistanceGrabbable m_target;

		[Token(Token = "0x4000F6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		protected Collider m_targetCollider;

		[Token(Token = "0x170001DB")]
		public bool UseSpherecast
		{
			[Token(Token = "0x6000CD7")]
			[Address(RVA = "0x1090A8C", Offset = "0x1090A8C", VA = "0x1090A8C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000CD8")]
			[Address(RVA = "0x1090A94", Offset = "0x1090A94", VA = "0x1090A94")]
			set
			{
			}
		}

		[Token(Token = "0x6000CD9")]
		[Address(RVA = "0x1090AB0", Offset = "0x1090AB0", VA = "0x1090AB0", Slot = "5")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6000CDA")]
		[Address(RVA = "0x1090CF0", Offset = "0x1090CF0", VA = "0x1090CF0", Slot = "6")]
		public override void Update()
		{
		}

		[Token(Token = "0x6000CDB")]
		[Address(RVA = "0x1091608", Offset = "0x1091608", VA = "0x1091608", Slot = "7")]
		protected override void GrabBegin()
		{
		}

		[Token(Token = "0x6000CDC")]
		[Address(RVA = "0x1091A9C", Offset = "0x1091A9C", VA = "0x1091A9C", Slot = "8")]
		protected override void MoveGrabbedObject(Vector3 pos, Quaternion rot, bool forceTeleport = false)
		{
		}

		[Token(Token = "0x6000CDD")]
		[Address(RVA = "0x1091D5C", Offset = "0x1091D5C", VA = "0x1091D5C")]
		private static DistanceGrabbable HitInfoToGrabbable(RaycastHit hitInfo)
		{
			return null;
		}

		[Token(Token = "0x6000CDE")]
		[Address(RVA = "0x1090F64", Offset = "0x1090F64", VA = "0x1090F64")]
		protected bool FindTarget(out DistanceGrabbable dgOut, out Collider collOut)
		{
			return default(bool);
		}

		[Token(Token = "0x6000CDF")]
		[Address(RVA = "0x1091E4C", Offset = "0x1091E4C", VA = "0x1091E4C")]
		protected bool FindTargetWithSpherecast(out DistanceGrabbable dgOut, out Collider collOut)
		{
			return default(bool);
		}

		[Token(Token = "0x6000CE0")]
		[Address(RVA = "0x10922A8", Offset = "0x10922A8", VA = "0x10922A8", Slot = "9")]
		protected override void GrabVolumeEnable(bool enabled)
		{
		}

		[Token(Token = "0x6000CE1")]
		[Address(RVA = "0x10922C0", Offset = "0x10922C0", VA = "0x10922C0", Slot = "10")]
		protected override void OffhandGrabbed(PVRGrabbable grabbable)
		{
		}

		[Token(Token = "0x6000CE2")]
		[Address(RVA = "0x10922C8", Offset = "0x10922C8", VA = "0x10922C8")]
		public DistanceGrabber()
		{
		}
	}
	[Token(Token = "0x200025A")]
	public class GrabManager : MonoBehaviour
	{
		[Token(Token = "0x4000F6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Collider m_grabVolume;

		[Token(Token = "0x4000F6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Color OutlineColorInRange;

		[Token(Token = "0x4000F6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Color OutlineColorHighlighted;

		[Token(Token = "0x4000F70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Color OutlineColorOutOfRange;

		[Token(Token = "0x6000CE3")]
		[Address(RVA = "0x133B300", Offset = "0x133B300", VA = "0x133B300")]
		private void OnTriggerEnter(Collider otherCollider)
		{
		}

		[Token(Token = "0x6000CE4")]
		[Address(RVA = "0x133B3B8", Offset = "0x133B3B8", VA = "0x133B3B8")]
		private void OnTriggerExit(Collider otherCollider)
		{
		}

		[Token(Token = "0x6000CE5")]
		[Address(RVA = "0x133B470", Offset = "0x133B470", VA = "0x133B470")]
		public GrabManager()
		{
		}
	}
	[Token(Token = "0x200025B")]
	public class GrabbableCrosshair : MonoBehaviour
	{
		[Token(Token = "0x200025C")]
		public enum CrosshairState
		{
			[Token(Token = "0x4000F76")]
			Disabled,
			[Token(Token = "0x4000F77")]
			Enabled,
			[Token(Token = "0x4000F78")]
			Targeted
		}

		[Token(Token = "0x4000F71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private CrosshairState m_state;

		[Token(Token = "0x4000F72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Transform m_centerEyeAnchor;

		[Token(Token = "0x4000F73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject m_targetedCrosshair;

		[Token(Token = "0x4000F74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject m_enabledCrosshair;

		[Token(Token = "0x6000CE6")]
		[Address(RVA = "0x133B478", Offset = "0x133B478", VA = "0x133B478")]
		private void Start()
		{
		}

		[Token(Token = "0x6000CE7")]
		[Address(RVA = "0x133B4E4", Offset = "0x133B4E4", VA = "0x133B4E4")]
		public void SetState(CrosshairState cs)
		{
		}

		[Token(Token = "0x6000CE8")]
		[Address(RVA = "0x133B580", Offset = "0x133B580", VA = "0x133B580")]
		private void Update()
		{
		}

		[Token(Token = "0x6000CE9")]
		[Address(RVA = "0x133B5C8", Offset = "0x133B5C8", VA = "0x133B5C8")]
		public GrabbableCrosshair()
		{
		}
	}
	[Token(Token = "0x200025D")]
	public class PauseOnInputLoss : MonoBehaviour
	{
		[Token(Token = "0x6000CEA")]
		[Address(RVA = "0x10524FC", Offset = "0x10524FC", VA = "0x10524FC")]
		private void Start()
		{
		}

		[Token(Token = "0x6000CEB")]
		[Address(RVA = "0x1052758", Offset = "0x1052758", VA = "0x1052758")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x6000CEC")]
		[Address(RVA = "0x1052764", Offset = "0x1052764", VA = "0x1052764")]
		private void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x6000CED")]
		[Address(RVA = "0x1052770", Offset = "0x1052770", VA = "0x1052770")]
		public PauseOnInputLoss()
		{
		}
	}
	[Token(Token = "0x200025E")]
	public class BoneCapsuleTriggerLogic : MonoBehaviour
	{
		[Token(Token = "0x4000F79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InteractableToolTags ToolTags;

		[Token(Token = "0x4000F7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HashSet<ColliderZone> CollidersTouchingUs;

		[Token(Token = "0x4000F7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<ColliderZone> _elementsToCleanUp;

		[Token(Token = "0x6000CEE")]
		[Address(RVA = "0x12F0DAC", Offset = "0x12F0DAC", VA = "0x12F0DAC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000CEF")]
		[Address(RVA = "0x12F0E00", Offset = "0x12F0E00", VA = "0x12F0E00")]
		private void Update()
		{
		}

		[Token(Token = "0x6000CF0")]
		[Address(RVA = "0x12F116C", Offset = "0x12F116C", VA = "0x12F116C")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6000CF1")]
		[Address(RVA = "0x12F1270", Offset = "0x12F1270", VA = "0x12F1270")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x6000CF2")]
		[Address(RVA = "0x12F0E04", Offset = "0x12F0E04", VA = "0x12F0E04")]
		private void CleanUpDeadColliders()
		{
		}

		[Token(Token = "0x6000CF3")]
		[Address(RVA = "0x12F1374", Offset = "0x12F1374", VA = "0x12F1374")]
		public BoneCapsuleTriggerLogic()
		{
		}
	}
	[Token(Token = "0x200025F")]
	public class ButtonController : Interactable
	{
		[Token(Token = "0x2000260")]
		public enum ContactTest
		{
			[Token(Token = "0x4000F8A")]
			PerpenTest,
			[Token(Token = "0x4000F8B")]
			BackwardsPress
		}

		[Token(Token = "0x4000F7C")]
		private const float ENTRY_DOT_THRESHOLD = 0.8f;

		[Token(Token = "0x4000F7D")]
		private const float PERP_DOT_THRESHOLD = 0.5f;

		[Token(Token = "0x4000F7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private GameObject _proximityZone;

		[Token(Token = "0x4000F7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject _contactZone;

		[Token(Token = "0x4000F80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private GameObject _actionZone;

		[Token(Token = "0x4000F81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private ContactTest[] _contactTests;

		[Token(Token = "0x4000F82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Transform _buttonPlaneCenter;

		[Token(Token = "0x4000F83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private bool _makeSureToolIsOnPositiveSide;

		[Token(Token = "0x4000F84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[SerializeField]
		private Vector3 _localButtonDirection;

		[Token(Token = "0x4000F85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private InteractableToolTags[] _allValidToolsTags;

		[Token(Token = "0x4000F86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private int _toolTagsMask;

		[Token(Token = "0x4000F87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private InteractableState _currentButtonState;

		[Token(Token = "0x4000F88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Dictionary<InteractableTool, InteractableState> _toolToState;

		[Token(Token = "0x170001DC")]
		public override int ValidToolTagsMask
		{
			[Token(Token = "0x6000CF4")]
			[Address(RVA = "0x12F1C9C", Offset = "0x12F1C9C", VA = "0x12F1C9C", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001DD")]
		public Vector3 LocalButtonDirection
		{
			[Token(Token = "0x6000CF5")]
			[Address(RVA = "0x12F1CA4", Offset = "0x12F1CA4", VA = "0x12F1CA4")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x6000CF6")]
		[Address(RVA = "0x12F1CB0", Offset = "0x12F1CB0", VA = "0x12F1CB0", Slot = "9")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6000CF7")]
		[Address(RVA = "0x12F1DC4", Offset = "0x12F1DC4", VA = "0x12F1DC4")]
		private void FireInteractionEventsOnDepth(InteractableCollisionDepth oldDepth, InteractableTool collidingTool, InteractionType interactionType)
		{
		}

		[Token(Token = "0x6000CF8")]
		[Address(RVA = "0x12F1FDC", Offset = "0x12F1FDC", VA = "0x12F1FDC", Slot = "8")]
		public override void UpdateCollisionDepth(InteractableTool interactableTool, InteractableCollisionDepth oldCollisionDepth, InteractableCollisionDepth newCollisionDepth)
		{
		}

		[Token(Token = "0x6000CF9")]
		[Address(RVA = "0x12F257C", Offset = "0x12F257C", VA = "0x12F257C")]
		private InteractableState GetUpcomingStateNearField(InteractableState oldState, InteractableCollisionDepth newCollisionDepth, bool toolIsInActionZone, bool toolIsInContactZone, bool toolIsInProximity, bool validContact, bool onPositiveSideOfInteractable)
		{
			return default(InteractableState);
		}

		[Token(Token = "0x6000CFA")]
		[Address(RVA = "0x12F2494", Offset = "0x12F2494", VA = "0x12F2494")]
		private bool IsValidContact(InteractableTool collidingTool, Vector3 buttonDirection)
		{
			return default(bool);
		}

		[Token(Token = "0x6000CFB")]
		[Address(RVA = "0x12F2628", Offset = "0x12F2628", VA = "0x12F2628")]
		private bool PassEntryTest(InteractableTool collidingTool, Vector3 buttonDirection)
		{
			return default(bool);
		}

		[Token(Token = "0x6000CFC")]
		[Address(RVA = "0x12F26AC", Offset = "0x12F26AC", VA = "0x12F26AC")]
		private bool PassPerpTest(InteractableTool collidingTool, Vector3 buttonDirection)
		{
			return default(bool);
		}

		[Token(Token = "0x6000CFD")]
		[Address(RVA = "0x12F2738", Offset = "0x12F2738", VA = "0x12F2738")]
		public ButtonController()
		{
		}
	}
	[Token(Token = "0x2000261")]
	public class ButtonTriggerZone : MonoBehaviour, ColliderZone
	{
		[Token(Token = "0x4000F8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _parentInteractableObj;

		[Token(Token = "0x4000F8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DAE8C", Offset = "0x8DAE8C")]
		private Collider <Collider>k__BackingField;

		[Token(Token = "0x4000F8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DAE9C", Offset = "0x8DAE9C")]
		private Interactable <ParentInteractable>k__BackingField;

		[Token(Token = "0x170001DE")]
		public Collider Collider
		{
			[Token(Token = "0x6000CFE")]
			[Address(RVA = "0x12F2984", Offset = "0x12F2984", VA = "0x12F2984", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E3C98", Offset = "0x8E3C98")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000CFF")]
			[Address(RVA = "0x12F298C", Offset = "0x12F298C", VA = "0x12F298C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E3CA8", Offset = "0x8E3CA8")]
			private set
			{
			}
		}

		[Token(Token = "0x170001DF")]
		public Interactable ParentInteractable
		{
			[Token(Token = "0x6000D00")]
			[Address(RVA = "0x12F2994", Offset = "0x12F2994", VA = "0x12F2994", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E3CB8", Offset = "0x8E3CB8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000D01")]
			[Address(RVA = "0x12F299C", Offset = "0x12F299C", VA = "0x12F299C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E3CC8", Offset = "0x8E3CC8")]
			private set
			{
			}
		}

		[Token(Token = "0x170001E0")]
		public InteractableCollisionDepth CollisionDepth
		{
			[Token(Token = "0x6000D02")]
			[Address(RVA = "0x12F29A4", Offset = "0x12F29A4", VA = "0x12F29A4", Slot = "6")]
			get
			{
				return default(InteractableCollisionDepth);
			}
		}

		[Token(Token = "0x6000D03")]
		[Address(RVA = "0x12F29F4", Offset = "0x12F29F4", VA = "0x12F29F4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000D04")]
		[Address(RVA = "0x12F2A88", Offset = "0x12F2A88", VA = "0x12F2A88")]
		public ButtonTriggerZone()
		{
		}
	}
	[Token(Token = "0x2000262")]
	public interface ColliderZone
	{
		[Token(Token = "0x170001E1")]
		Collider Collider
		{
			[Token(Token = "0x6000D05")]
			get;
		}

		[Token(Token = "0x170001E2")]
		Interactable ParentInteractable
		{
			[Token(Token = "0x6000D06")]
			get;
		}

		[Token(Token = "0x170001E3")]
		InteractableCollisionDepth CollisionDepth
		{
			[Token(Token = "0x6000D07")]
			get;
		}
	}
	[Token(Token = "0x2000263")]
	public class ColliderZoneArgs : EventArgs
	{
		[Token(Token = "0x4000F8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ColliderZone Collider;

		[Token(Token = "0x4000F90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly float FrameTime;

		[Token(Token = "0x4000F91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly InteractableTool CollidingTool;

		[Token(Token = "0x4000F92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly InteractionType InteractionT;

		[Token(Token = "0x6000D08")]
		[Address(RVA = "0x12F1F24", Offset = "0x12F1F24", VA = "0x12F1F24")]
		public ColliderZoneArgs(ColliderZone collider, float frameTime, InteractableTool collidingTool, InteractionType interactionType)
		{
		}
	}
	[Token(Token = "0x2000264")]
	public enum InteractionType
	{
		[Token(Token = "0x4000F94")]
		Enter,
		[Token(Token = "0x4000F95")]
		Stay,
		[Token(Token = "0x4000F96")]
		Exit
	}
	[Token(Token = "0x2000265")]
	public class HandsManager : MonoBehaviour
	{
		[Token(Token = "0x2000266")]
		public enum HandsVisualMode
		{
			[Token(Token = "0x4000FA8")]
			Mesh,
			[Token(Token = "0x4000FA9")]
			Skeleton,
			[Token(Token = "0x4000FAA")]
			Both
		}

		[Token(Token = "0x2000267")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D6F38", Offset = "0x8D6F38")]
		private sealed class <FindSkeletonVisualGameObjects>d__52 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000FAB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000FAC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000FAD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public HandsManager <>4__this;

			[Token(Token = "0x170001EF")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000D2A")]
				[Address(RVA = "0xE7DAC8", Offset = "0xE7DAC8", VA = "0xE7DAC8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001F0")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000D2C")]
				[Address(RVA = "0xE7DB10", Offset = "0xE7DB10", VA = "0xE7DB10", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000D27")]
			[Address(RVA = "0xE7D834", Offset = "0xE7D834", VA = "0xE7D834")]
			[DebuggerHidden]
			public <FindSkeletonVisualGameObjects>d__52(int <>1__state)
			{
			}

			[Token(Token = "0x6000D28")]
			[Address(RVA = "0xE7D860", Offset = "0xE7D860", VA = "0xE7D860", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000D29")]
			[Address(RVA = "0xE7D864", Offset = "0xE7D864", VA = "0xE7D864", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000D2B")]
			[Address(RVA = "0xE7DAD0", Offset = "0xE7DAD0", VA = "0xE7DAD0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000F97")]
		private const string SKELETON_VISUALIZER_NAME = "SkeletonRenderer";

		[Token(Token = "0x4000F98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _leftHand;

		[Token(Token = "0x4000F99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject _rightHand;

		[Token(Token = "0x4000F9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public HandsVisualMode VisualMode;

		[Token(Token = "0x4000F9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private OVRHand[] _hand;

		[Token(Token = "0x4000F9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private OVRSkeleton[] _handSkeleton;

		[Token(Token = "0x4000F9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private OVRSkeletonRenderer[] _handSkeletonRenderer;

		[Token(Token = "0x4000F9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private OVRMesh[] _handMesh;

		[Token(Token = "0x4000F9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private OVRMeshRenderer[] _handMeshRenderer;

		[Token(Token = "0x4000FA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private SkinnedMeshRenderer _leftMeshRenderer;

		[Token(Token = "0x4000FA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private SkinnedMeshRenderer _rightMeshRenderer;

		[Token(Token = "0x4000FA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject _leftSkeletonVisual;

		[Token(Token = "0x4000FA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private GameObject _rightSkeletonVisual;

		[Token(Token = "0x4000FA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float _currentHandAlpha;

		[Token(Token = "0x4000FA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private int HandAlphaId;

		[Token(Token = "0x4000FA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DAECC", Offset = "0x8DAECC")]
		private static HandsManager <Instance>k__BackingField;

		[Token(Token = "0x170001E4")]
		public OVRHand RightHand
		{
			[Token(Token = "0x6000D09")]
			[Address(RVA = "0x133E4E8", Offset = "0x133E4E8", VA = "0x133E4E8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000D0A")]
			[Address(RVA = "0x133E520", Offset = "0x133E520", VA = "0x133E520")]
			private set
			{
			}
		}

		[Token(Token = "0x170001E5")]
		public OVRSkeleton RightHandSkeleton
		{
			[Token(Token = "0x6000D0B")]
			[Address(RVA = "0x133E590", Offset = "0x133E590", VA = "0x133E590")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000D0C")]
			[Address(RVA = "0x133E5C8", Offset = "0x133E5C8", VA = "0x133E5C8")]
			private set
			{
			}
		}

		[Token(Token = "0x170001E6")]
		public OVRSkeletonRenderer RightHandSkeletonRenderer
		{
			[Token(Token = "0x6000D0D")]
			[Address(RVA = "0x133E638", Offset = "0x133E638", VA = "0x133E638")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000D0E")]
			[Address(RVA = "0x133E670", Offset = "0x133E670", VA = "0x133E670")]
			private set
			{
			}
		}

		[Token(Token = "0x170001E7")]
		public OVRMesh RightHandMesh
		{
			[Token(Token = "0x6000D0F")]
			[Address(RVA = "0x133E6E0", Offset = "0x133E6E0", VA = "0x133E6E0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000D10")]
			[Address(RVA = "0x133E718", Offset = "0x133E718", VA = "0x133E718")]
			private set
			{
			}
		}

		[Token(Token = "0x170001E8")]
		public OVRMeshRenderer RightHandMeshRenderer
		{
			[Token(Token = "0x6000D11")]
			[Address(RVA = "0x133E788", Offset = "0x133E788", VA = "0x133E788")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000D12")]
			[Address(RVA = "0x133E7C0", Offset = "0x133E7C0", VA = "0x133E7C0")]
			private set
			{
			}
		}

		[Token(Token = "0x170001E9")]
		public OVRHand LeftHand
		{
			[Token(Token = "0x6000D13")]
			[Address(RVA = "0x133E830", Offset = "0x133E830", VA = "0x133E830")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000D14")]
			[Address(RVA = "0x133E864", Offset = "0x133E864", VA = "0x133E864")]
			private set
			{
			}
		}

		[Token(Token = "0x170001EA")]
		public OVRSkeleton LeftHandSkeleton
		{
			[Token(Token = "0x6000D15")]
			[Address(RVA = "0x133E8D0", Offset = "0x133E8D0", VA = "0x133E8D0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000D16")]
			[Address(RVA = "0x133E904", Offset = "0x133E904", VA = "0x133E904")]
			private set
			{
			}
		}

		[Token(Token = "0x170001EB")]
		public OVRSkeletonRenderer LeftHandSkeletonRenderer
		{
			[Token(Token = "0x6000D17")]
			[Address(RVA = "0x133E970", Offset = "0x133E970", VA = "0x133E970")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000D18")]
			[Address(RVA = "0x133E9A4", Offset = "0x133E9A4", VA = "0x133E9A4")]
			private set
			{
			}
		}

		[Token(Token = "0x170001EC")]
		public OVRMesh LeftHandMesh
		{
			[Token(Token = "0x6000D19")]
			[Address(RVA = "0x133EA10", Offset = "0x133EA10", VA = "0x133EA10")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000D1A")]
			[Address(RVA = "0x133EA44", Offset = "0x133EA44", VA = "0x133EA44")]
			private set
			{
			}
		}

		[Token(Token = "0x170001ED")]
		public OVRMeshRenderer LeftHandMeshRenderer
		{
			[Token(Token = "0x6000D1B")]
			[Address(RVA = "0x133EAB0", Offset = "0x133EAB0", VA = "0x133EAB0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000D1C")]
			[Address(RVA = "0x133EAE4", Offset = "0x133EAE4", VA = "0x133EAE4")]
			private set
			{
			}
		}

		[Token(Token = "0x170001EE")]
		public static HandsManager Instance
		{
			[Token(Token = "0x6000D1D")]
			[Address(RVA = "0x133EB50", Offset = "0x133EB50", VA = "0x133EB50")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E3CD8", Offset = "0x8E3CD8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000D1E")]
			[Address(RVA = "0x133EB9C", Offset = "0x133EB9C", VA = "0x133EB9C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E3CE8", Offset = "0x8E3CE8")]
			private set
			{
			}
		}

		[Token(Token = "0x6000D1F")]
		[Address(RVA = "0x133EBF0", Offset = "0x133EBF0", VA = "0x133EBF0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000D20")]
		[Address(RVA = "0x133EFC4", Offset = "0x133EFC4", VA = "0x133EFC4")]
		private void Update()
		{
		}

		[Token(Token = "0x6000D21")]
		[Address(RVA = "0x133EF4C", Offset = "0x133EF4C", VA = "0x133EF4C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E3CF8", Offset = "0x8E3CF8")]
		private IEnumerator FindSkeletonVisualGameObjects()
		{
			return null;
		}

		[Token(Token = "0x6000D22")]
		[Address(RVA = "0x133F04C", Offset = "0x133F04C", VA = "0x133F04C")]
		public void SwitchVisualization()
		{
		}

		[Token(Token = "0x6000D23")]
		[Address(RVA = "0x133F130", Offset = "0x133F130", VA = "0x133F130")]
		private void SetToCurrentVisualMode()
		{
		}

		[Token(Token = "0x6000D24")]
		[Address(RVA = "0x133F310", Offset = "0x133F310", VA = "0x133F310")]
		public static List<OVRBoneCapsule> GetCapsulesPerBone(OVRSkeleton skeleton, OVRSkeleton.BoneId boneId)
		{
			return null;
		}

		[Token(Token = "0x6000D25")]
		[Address(RVA = "0x133F54C", Offset = "0x133F54C", VA = "0x133F54C")]
		public bool IsInitialized()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D26")]
		[Address(RVA = "0x133F6D8", Offset = "0x133F6D8", VA = "0x133F6D8")]
		public HandsManager()
		{
		}
	}
	[Token(Token = "0x2000268")]
	public abstract class Interactable : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000269")]
		public class InteractableStateArgsEvent : UnityEvent<InteractableStateArgs>
		{
			[Token(Token = "0x6000D3E")]
			[Address(RVA = "0xE7DC78", Offset = "0xE7DC78", VA = "0xE7DC78")]
			public InteractableStateArgsEvent()
			{
			}
		}

		[Token(Token = "0x4000FAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected ColliderZone _proximityZoneCollider;

		[Token(Token = "0x4000FAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected ColliderZone _contactZoneCollider;

		[Token(Token = "0x4000FB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected ColliderZone _actionZoneCollider;

		[Token(Token = "0x4000FB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public InteractableStateArgsEvent InteractableStateChanged;

		[Token(Token = "0x170001F1")]
		public ColliderZone ProximityCollider
		{
			[Token(Token = "0x6000D2D")]
			[Address(RVA = "0x1342A04", Offset = "0x1342A04", VA = "0x1342A04")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001F2")]
		public ColliderZone ContactCollider
		{
			[Token(Token = "0x6000D2E")]
			[Address(RVA = "0x1342A0C", Offset = "0x1342A0C", VA = "0x1342A0C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001F3")]
		public ColliderZone ActionCollider
		{
			[Token(Token = "0x6000D2F")]
			[Address(RVA = "0x1342A14", Offset = "0x1342A14", VA = "0x1342A14")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001F4")]
		public virtual int ValidToolTagsMask
		{
			[Token(Token = "0x6000D30")]
			[Address(RVA = "0x1342A1C", Offset = "0x1342A1C", VA = "0x1342A1C", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x14000011")]
		public event Action<ColliderZoneArgs> ProximityZoneEvent
		{
			[Token(Token = "0x6000D31")]
			[Address(RVA = "0x1342A24", Offset = "0x1342A24", VA = "0x1342A24")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E3DA8", Offset = "0x8E3DA8")]
			add
			{
			}
			[Token(Token = "0x6000D32")]
			[Address(RVA = "0x1342AC4", Offset = "0x1342AC4", VA = "0x1342AC4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E3DB8", Offset = "0x8E3DB8")]
			remove
			{
			}
		}

		[Token(Token = "0x14000012")]
		public event Action<ColliderZoneArgs> ContactZoneEvent
		{
			[Token(Token = "0x6000D34")]
			[Address(RVA = "0x1342BD4", Offset = "0x1342BD4", VA = "0x1342BD4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E3DC8", Offset = "0x8E3DC8")]
			add
			{
			}
			[Token(Token = "0x6000D35")]
			[Address(RVA = "0x1342C74", Offset = "0x1342C74", VA = "0x1342C74")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E3DD8", Offset = "0x8E3DD8")]
			remove
			{
			}
		}

		[Token(Token = "0x14000013")]
		public event Action<ColliderZoneArgs> ActionZoneEvent
		{
			[Token(Token = "0x6000D37")]
			[Address(RVA = "0x1342D84", Offset = "0x1342D84", VA = "0x1342D84")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E3DE8", Offset = "0x8E3DE8")]
			add
			{
			}
			[Token(Token = "0x6000D38")]
			[Address(RVA = "0x1342E24", Offset = "0x1342E24", VA = "0x1342E24")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E3DF8", Offset = "0x8E3DF8")]
			remove
			{
			}
		}

		[Token(Token = "0x6000D33")]
		[Address(RVA = "0x1342B64", Offset = "0x1342B64", VA = "0x1342B64", Slot = "5")]
		protected virtual void OnProximityZoneEvent(ColliderZoneArgs args)
		{
		}

		[Token(Token = "0x6000D36")]
		[Address(RVA = "0x1342D14", Offset = "0x1342D14", VA = "0x1342D14", Slot = "6")]
		protected virtual void OnContactZoneEvent(ColliderZoneArgs args)
		{
		}

		[Token(Token = "0x6000D39")]
		[Address(RVA = "0x1342EC4", Offset = "0x1342EC4", VA = "0x1342EC4", Slot = "7")]
		protected virtual void OnActionZoneEvent(ColliderZoneArgs args)
		{
		}

		[Token(Token = "0x6000D3A")]
		public abstract void UpdateCollisionDepth(InteractableTool interactableTool, InteractableCollisionDepth oldCollisionDepth, InteractableCollisionDepth newCollisionDepth);

		[Token(Token = "0x6000D3B")]
		[Address(RVA = "0x1342F34", Offset = "0x1342F34", VA = "0x1342F34", Slot = "9")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6000D3C")]
		[Address(RVA = "0x1343060", Offset = "0x1343060", VA = "0x1343060", Slot = "10")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x6000D3D")]
		[Address(RVA = "0x134318C", Offset = "0x134318C", VA = "0x134318C")]
		protected Interactable()
		{
		}
	}
	[Token(Token = "0x200026A")]
	public enum InteractableCollisionDepth
	{
		[Token(Token = "0x4000FB6")]
		None,
		[Token(Token = "0x4000FB7")]
		Proximity,
		[Token(Token = "0x4000FB8")]
		Contact,
		[Token(Token = "0x4000FB9")]
		Action
	}
	[Token(Token = "0x200026B")]
	public enum InteractableState
	{
		[Token(Token = "0x4000FBB")]
		Default,
		[Token(Token = "0x4000FBC")]
		ProximityState,
		[Token(Token = "0x4000FBD")]
		ContactState,
		[Token(Token = "0x4000FBE")]
		ActionState
	}
	[Token(Token = "0x200026C")]
	public class InteractableStateArgs : EventArgs
	{
		[Token(Token = "0x4000FBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly Interactable Interactable;

		[Token(Token = "0x4000FC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly InteractableTool Tool;

		[Token(Token = "0x4000FC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly InteractableState OldInteractableState;

		[Token(Token = "0x4000FC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public readonly InteractableState NewInteractableState;

		[Token(Token = "0x4000FC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly ColliderZoneArgs ColliderArgs;

		[Token(Token = "0x6000D3F")]
		[Address(RVA = "0x13432E4", Offset = "0x13432E4", VA = "0x13432E4")]
		public InteractableStateArgs(Interactable interactable, InteractableTool tool, InteractableState newInteractableState, InteractableState oldState, ColliderZoneArgs colliderArgs)
		{
		}
	}
	[Token(Token = "0x200026D")]
	public class InteractableRegistry : MonoBehaviour
	{
		[Token(Token = "0x4000FC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static HashSet<Interactable> _interactables;

		[Token(Token = "0x170001F5")]
		public static HashSet<Interactable> Interactables
		{
			[Token(Token = "0x6000D40")]
			[Address(RVA = "0x13431EC", Offset = "0x13431EC", VA = "0x13431EC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D41")]
		[Address(RVA = "0x1342F94", Offset = "0x1342F94", VA = "0x1342F94")]
		public static void RegisterInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x6000D42")]
		[Address(RVA = "0x13430C0", Offset = "0x13430C0", VA = "0x13430C0")]
		public static void UnregisterInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x6000D43")]
		[Address(RVA = "0x1343250", Offset = "0x1343250", VA = "0x1343250")]
		public InteractableRegistry()
		{
		}
	}
	[Token(Token = "0x200026E")]
	public class InteractableToolsCreator : MonoBehaviour
	{
		[Token(Token = "0x200026F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D6F48", Offset = "0x8D6F48")]
		private sealed class <AttachToolsToHands>d__3 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000FC7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000FC8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000FC9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Transform[] toolObjects;

			[Token(Token = "0x4000FCA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool isRightHand;

			[Token(Token = "0x4000FCB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public InteractableToolsCreator <>4__this;

			[Token(Token = "0x4000FCC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private HandsManager <handsManagerObj>5__2;

			[Token(Token = "0x4000FCD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private HashSet<Transform>.Enumerator <>7__wrap2;

			[Token(Token = "0x4000FCE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private Transform <toolObject>5__4;

			[Token(Token = "0x4000FCF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private OVRSkeleton <handSkeletonToAttachTo>5__5;

			[Token(Token = "0x170001F6")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000D4D")]
				[Address(RVA = "0xE7E1DC", Offset = "0xE7E1DC", VA = "0xE7E1DC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001F7")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000D4F")]
				[Address(RVA = "0xE7E224", Offset = "0xE7E224", VA = "0xE7E224", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000D49")]
			[Address(RVA = "0xE7DCC4", Offset = "0xE7DCC4", VA = "0xE7DCC4")]
			[DebuggerHidden]
			public <AttachToolsToHands>d__3(int <>1__state)
			{
			}

			[Token(Token = "0x6000D4A")]
			[Address(RVA = "0xE7DCF0", Offset = "0xE7DCF0", VA = "0xE7DCF0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000D4B")]
			[Address(RVA = "0xE7DD60", Offset = "0xE7DD60", VA = "0xE7DD60", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000D4C")]
			[Address(RVA = "0xE7DD0C", Offset = "0xE7DD0C", VA = "0xE7DD0C")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6000D4E")]
			[Address(RVA = "0xE7E1E4", Offset = "0xE7E1E4", VA = "0xE7E1E4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000FC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform[] LeftHandTools;

		[Token(Token = "0x4000FC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform[] RightHandTools;

		[Token(Token = "0x6000D45")]
		[Address(RVA = "0x1344068", Offset = "0x1344068", VA = "0x1344068")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000D46")]
		[Address(RVA = "0x13440E4", Offset = "0x13440E4", VA = "0x13440E4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E3E08", Offset = "0x8E3E08")]
		private IEnumerator AttachToolsToHands(Transform[] toolObjects, bool isRightHand)
		{
			return null;
		}

		[Token(Token = "0x6000D47")]
		[Address(RVA = "0x1344184", Offset = "0x1344184", VA = "0x1344184")]
		private void AttachToolToHandTransform(Transform tool, bool isRightHanded)
		{
		}

		[Token(Token = "0x6000D48")]
		[Address(RVA = "0x134426C", Offset = "0x134426C", VA = "0x134426C")]
		public InteractableToolsCreator()
		{
		}
	}
	[Token(Token = "0x2000270")]
	public class InteractableToolsInputRouter : MonoBehaviour
	{
		[Token(Token = "0x4000FD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static InteractableToolsInputRouter _instance;

		[Token(Token = "0x4000FD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool _leftPinch;

		[Token(Token = "0x4000FD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private bool _rightPinch;

		[Token(Token = "0x4000FD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private HashSet<InteractableTool> _leftHandNearTools;

		[Token(Token = "0x4000FD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private HashSet<InteractableTool> _leftHandFarTools;

		[Token(Token = "0x4000FD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private HashSet<InteractableTool> _rightHandNearTools;

		[Token(Token = "0x4000FD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private HashSet<InteractableTool> _rightHandFarTools;

		[Token(Token = "0x170001F8")]
		public static InteractableToolsInputRouter Instance
		{
			[Token(Token = "0x6000D50")]
			[Address(RVA = "0x1344274", Offset = "0x1344274", VA = "0x1344274")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D51")]
		[Address(RVA = "0x13443F4", Offset = "0x13443F4", VA = "0x13443F4")]
		public void RegisterInteractableTool(InteractableTool interactableTool)
		{
		}

		[Token(Token = "0x6000D52")]
		[Address(RVA = "0x134449C", Offset = "0x134449C", VA = "0x134449C")]
		public void UnregisterInteractableTool(InteractableTool interactableTool)
		{
		}

		[Token(Token = "0x6000D53")]
		[Address(RVA = "0x1344544", Offset = "0x1344544", VA = "0x1344544")]
		private void Update()
		{
		}

		[Token(Token = "0x6000D54")]
		[Address(RVA = "0x13447F0", Offset = "0x13447F0", VA = "0x13447F0")]
		private bool UpdateToolsAndEnableState(HashSet<InteractableTool> tools, bool toolsAreEnabledThisFrame)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D55")]
		[Address(RVA = "0x1344838", Offset = "0x1344838", VA = "0x1344838")]
		private bool UpdateTools(HashSet<InteractableTool> tools, bool resetCollisionData = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D56")]
		[Address(RVA = "0x1344AE8", Offset = "0x1344AE8", VA = "0x1344AE8")]
		private void ToggleToolsEnableState(HashSet<InteractableTool> tools, bool enableState)
		{
		}

		[Token(Token = "0x6000D57")]
		[Address(RVA = "0x1344C34", Offset = "0x1344C34", VA = "0x1344C34")]
		public InteractableToolsInputRouter()
		{
		}
	}
	[Token(Token = "0x2000271")]
	public class FingerTipPokeTool : InteractableTool
	{
		[Token(Token = "0x2000272")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D6F58", Offset = "0x8D6F58")]
		private sealed class <AttachTriggerLogic>d__21 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000FE2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000FE3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000FE4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FingerTipPokeTool <>4__this;

			[Token(Token = "0x170001FD")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000D69")]
				[Address(RVA = "0x104F734", Offset = "0x104F734", VA = "0x104F734", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001FE")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000D6B")]
				[Address(RVA = "0x104F77C", Offset = "0x104F77C", VA = "0x104F77C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000D66")]
			[Address(RVA = "0x104F300", Offset = "0x104F300", VA = "0x104F300")]
			[DebuggerHidden]
			public <AttachTriggerLogic>d__21(int <>1__state)
			{
			}

			[Token(Token = "0x6000D67")]
			[Address(RVA = "0x104F32C", Offset = "0x104F32C", VA = "0x104F32C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000D68")]
			[Address(RVA = "0x104F330", Offset = "0x104F330", VA = "0x104F330", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000D6A")]
			[Address(RVA = "0x104F73C", Offset = "0x104F73C", VA = "0x104F73C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000FD7")]
		private const int NUM_VELOCITY_FRAMES = 10;

		[Token(Token = "0x4000FD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private FingerTipPokeToolView _fingerTipPokeToolView;

		[Token(Token = "0x4000FD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private PVRPlugin.HandFinger _fingerToFollow;

		[Token(Token = "0x4000FDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector3[] _velocityFrames;

		[Token(Token = "0x4000FDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int _currVelocityFrame;

		[Token(Token = "0x4000FDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private bool _sampledMaxFramesAlready;

		[Token(Token = "0x4000FDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Vector3 _position;

		[Token(Token = "0x4000FDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private BoneCapsuleTriggerLogic[] _boneCapsuleTriggerLogic;

		[Token(Token = "0x4000FDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private float _lastScale;

		[Token(Token = "0x4000FE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private bool _isInitialized;

		[Token(Token = "0x4000FE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private OVRBoneCapsule _capsuleToTrack;

		[Token(Token = "0x170001F9")]
		public override InteractableToolTags ToolTags
		{
			[Token(Token = "0x6000D58")]
			[Address(RVA = "0x1093CB4", Offset = "0x1093CB4", VA = "0x1093CB4", Slot = "4")]
			get
			{
				return default(InteractableToolTags);
			}
		}

		[Token(Token = "0x170001FA")]
		public override ToolInputState ToolInputState
		{
			[Token(Token = "0x6000D59")]
			[Address(RVA = "0x1093CBC", Offset = "0x1093CBC", VA = "0x1093CBC", Slot = "5")]
			get
			{
				return default(ToolInputState);
			}
		}

		[Token(Token = "0x170001FB")]
		public override bool IsFarFieldTool
		{
			[Token(Token = "0x6000D5A")]
			[Address(RVA = "0x1093CC4", Offset = "0x1093CC4", VA = "0x1093CC4", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001FC")]
		public override bool EnableState
		{
			[Token(Token = "0x6000D5B")]
			[Address(RVA = "0x1093CCC", Offset = "0x1093CCC", VA = "0x1093CCC", Slot = "10")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000D5C")]
			[Address(RVA = "0x1093CF8", Offset = "0x1093CF8", VA = "0x1093CF8", Slot = "11")]
			set
			{
			}
		}

		[Token(Token = "0x6000D5D")]
		[Address(RVA = "0x1093D34", Offset = "0x1093D34", VA = "0x1093D34", Slot = "12")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x6000D5E")]
		[Address(RVA = "0x1093DEC", Offset = "0x1093DEC", VA = "0x1093DEC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E3EB8", Offset = "0x8E3EB8")]
		private IEnumerator AttachTriggerLogic()
		{
			return null;
		}

		[Token(Token = "0x6000D5F")]
		[Address(RVA = "0x1093E64", Offset = "0x1093E64", VA = "0x1093E64")]
		private void Update()
		{
		}

		[Token(Token = "0x6000D60")]
		[Address(RVA = "0x1094104", Offset = "0x1094104", VA = "0x1094104")]
		private void UpdateAverageVelocity()
		{
		}

		[Token(Token = "0x6000D61")]
		[Address(RVA = "0x1094290", Offset = "0x1094290", VA = "0x1094290")]
		private void CheckAndUpdateScale()
		{
		}

		[Token(Token = "0x6000D62")]
		[Address(RVA = "0x1094388", Offset = "0x1094388", VA = "0x1094388", Slot = "7")]
		public override List<InteractableCollisionInfo> GetNextIntersectingObjects()
		{
			return null;
		}

		[Token(Token = "0x6000D63")]
		[Address(RVA = "0x1094680", Offset = "0x1094680", VA = "0x1094680", Slot = "8")]
		public override void FocusOnInteractable(Interactable focusedInteractable, ColliderZone colliderZone)
		{
		}

		[Token(Token = "0x6000D64")]
		[Address(RVA = "0x1094684", Offset = "0x1094684", VA = "0x1094684", Slot = "9")]
		public override void DeFocus()
		{
		}

		[Token(Token = "0x6000D65")]
		[Address(RVA = "0x1094688", Offset = "0x1094688", VA = "0x1094688")]
		public FingerTipPokeTool()
		{
		}
	}
	[Token(Token = "0x2000273")]
	public class FingerTipPokeToolView : MonoBehaviour, InteractableToolView
	{
		[Token(Token = "0x4000FE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshRenderer _sphereMeshRenderer;

		[Token(Token = "0x4000FE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DAF5C", Offset = "0x8DAF5C")]
		private InteractableTool <InteractableTool>k__BackingField;

		[Token(Token = "0x4000FE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DAF6C", Offset = "0x8DAF6C")]
		private bool <ToolActivateState>k__BackingField;

		[Token(Token = "0x4000FE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DAF7C", Offset = "0x8DAF7C")]
		private float <SphereRadius>k__BackingField;

		[Token(Token = "0x170001FF")]
		public InteractableTool InteractableTool
		{
			[Token(Token = "0x6000D6C")]
			[Address(RVA = "0x10946A0", Offset = "0x10946A0", VA = "0x10946A0", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E3F68", Offset = "0x8E3F68")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000D6D")]
			[Address(RVA = "0x10946A8", Offset = "0x10946A8", VA = "0x10946A8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E3F78", Offset = "0x8E3F78")]
			set
			{
			}
		}

		[Token(Token = "0x17000200")]
		public bool EnableState
		{
			[Token(Token = "0x6000D6E")]
			[Address(RVA = "0x10946B0", Offset = "0x10946B0", VA = "0x10946B0", Slot = "6")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000D6F")]
			[Address(RVA = "0x10946CC", Offset = "0x10946CC", VA = "0x10946CC", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x17000201")]
		public bool ToolActivateState
		{
			[Token(Token = "0x6000D70")]
			[Address(RVA = "0x10946EC", Offset = "0x10946EC", VA = "0x10946EC", Slot = "8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E3F88", Offset = "0x8E3F88")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000D71")]
			[Address(RVA = "0x10946F4", Offset = "0x10946F4", VA = "0x10946F4", Slot = "9")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E3F98", Offset = "0x8E3F98")]
			set
			{
			}
		}

		[Token(Token = "0x17000202")]
		public float SphereRadius
		{
			[Token(Token = "0x6000D72")]
			[Address(RVA = "0x1094700", Offset = "0x1094700", VA = "0x1094700")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E3FA8", Offset = "0x8E3FA8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000D73")]
			[Address(RVA = "0x1094708", Offset = "0x1094708", VA = "0x1094708")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E3FB8", Offset = "0x8E3FB8")]
			private set
			{
			}
		}

		[Token(Token = "0x6000D74")]
		[Address(RVA = "0x1094710", Offset = "0x1094710", VA = "0x1094710")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000D75")]
		[Address(RVA = "0x1094758", Offset = "0x1094758", VA = "0x1094758", Slot = "5")]
		public void SetFocusedInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x6000D76")]
		[Address(RVA = "0x109475C", Offset = "0x109475C", VA = "0x109475C")]
		public FingerTipPokeToolView()
		{
		}
	}
	[Token(Token = "0x2000274")]
	[Flags]
	public enum InteractableToolTags
	{
		[Token(Token = "0x4000FEA")]
		None = 0,
		[Token(Token = "0x4000FEB")]
		Ray = 1,
		[Token(Token = "0x4000FEC")]
		Poke = 4,
		[Token(Token = "0x4000FED")]
		All = -1
	}
	[Token(Token = "0x2000275")]
	public enum ToolInputState
	{
		[Token(Token = "0x4000FEF")]
		Inactive,
		[Token(Token = "0x4000FF0")]
		PrimaryInputDown,
		[Token(Token = "0x4000FF1")]
		PrimaryInputDownStay,
		[Token(Token = "0x4000FF2")]
		PrimaryInputUp
	}
	[Token(Token = "0x2000276")]
	public class InteractableCollisionInfo
	{
		[Token(Token = "0x4000FF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ColliderZone InteractableCollider;

		[Token(Token = "0x4000FF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InteractableCollisionDepth CollisionDepth;

		[Token(Token = "0x4000FF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public InteractableTool CollidingTool;

		[Token(Token = "0x6000D77")]
		[Address(RVA = "0x1343194", Offset = "0x1343194", VA = "0x1343194")]
		public InteractableCollisionInfo(ColliderZone collider, InteractableCollisionDepth collisionDepth, InteractableTool collidingTool)
		{
		}
	}
	[Token(Token = "0x2000277")]
	public abstract class InteractableTool : MonoBehaviour
	{
		[Token(Token = "0x4000FF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DAF8C", Offset = "0x8DAF8C")]
		private bool <IsRightHandedTool>k__BackingField;

		[Token(Token = "0x4000FF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DAF9C", Offset = "0x8DAF9C")]
		private Vector3 <Velocity>k__BackingField;

		[Token(Token = "0x4000FF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DAFAC", Offset = "0x8DAFAC")]
		private Vector3 <InteractionPosition>k__BackingField;

		[Token(Token = "0x4000FF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected List<InteractableCollisionInfo> _currentIntersectingObjects;

		[Token(Token = "0x4000FFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<Interactable> _addedInteractables;

		[Token(Token = "0x4000FFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<Interactable> _removedInteractables;

		[Token(Token = "0x4000FFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private List<Interactable> _remainingInteractables;

		[Token(Token = "0x4000FFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Dictionary<Interactable, InteractableCollisionInfo> _currInteractableToCollisionInfos;

		[Token(Token = "0x4000FFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Dictionary<Interactable, InteractableCollisionInfo> _prevInteractableToCollisionInfos;

		[Token(Token = "0x17000203")]
		public Transform ToolTransform
		{
			[Token(Token = "0x6000D78")]
			[Address(RVA = "0x13433A8", Offset = "0x13433A8", VA = "0x13433A8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000204")]
		public bool IsRightHandedTool
		{
			[Token(Token = "0x6000D79")]
			[Address(RVA = "0x13433B0", Offset = "0x13433B0", VA = "0x13433B0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E3FC8", Offset = "0x8E3FC8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000D7A")]
			[Address(RVA = "0x13433B8", Offset = "0x13433B8", VA = "0x13433B8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E3FD8", Offset = "0x8E3FD8")]
			set
			{
			}
		}

		[Token(Token = "0x17000205")]
		public abstract InteractableToolTags ToolTags
		{
			[Token(Token = "0x6000D7B")]
			get;
		}

		[Token(Token = "0x17000206")]
		public abstract ToolInputState ToolInputState
		{
			[Token(Token = "0x6000D7C")]
			get;
		}

		[Token(Token = "0x17000207")]
		public abstract bool IsFarFieldTool
		{
			[Token(Token = "0x6000D7D")]
			get;
		}

		[Token(Token = "0x17000208")]
		public Vector3 Velocity
		{
			[Token(Token = "0x6000D7E")]
			[Address(RVA = "0x13433C4", Offset = "0x13433C4", VA = "0x13433C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E3FE8", Offset = "0x8E3FE8")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000D7F")]
			[Address(RVA = "0x13433D0", Offset = "0x13433D0", VA = "0x13433D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E3FF8", Offset = "0x8E3FF8")]
			protected set
			{
			}
		}

		[Token(Token = "0x17000209")]
		public Vector3 InteractionPosition
		{
			[Token(Token = "0x6000D80")]
			[Address(RVA = "0x13433DC", Offset = "0x13433DC", VA = "0x13433DC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E4008", Offset = "0x8E4008")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000D81")]
			[Address(RVA = "0x13433E8", Offset = "0x13433E8", VA = "0x13433E8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E4018", Offset = "0x8E4018")]
			protected set
			{
			}
		}

		[Token(Token = "0x1700020A")]
		public abstract bool EnableState
		{
			[Token(Token = "0x6000D86")]
			get;
			[Token(Token = "0x6000D87")]
			set;
		}

		[Token(Token = "0x6000D82")]
		[Address(RVA = "0x13433F4", Offset = "0x13433F4", VA = "0x13433F4")]
		public List<InteractableCollisionInfo> GetCurrentIntersectingObjects()
		{
			return null;
		}

		[Token(Token = "0x6000D83")]
		public abstract List<InteractableCollisionInfo> GetNextIntersectingObjects();

		[Token(Token = "0x6000D84")]
		public abstract void FocusOnInteractable(Interactable focusedInteractable, ColliderZone colliderZone);

		[Token(Token = "0x6000D85")]
		public abstract void DeFocus();

		[Token(Token = "0x6000D88")]
		public abstract void Initialize();

		[Token(Token = "0x6000D89")]
		[Address(RVA = "0x13433FC", Offset = "0x13433FC", VA = "0x13433FC")]
		public KeyValuePair<Interactable, InteractableCollisionInfo> GetFirstCurrentCollisionInfo()
		{
			return default(KeyValuePair<Interactable, InteractableCollisionInfo>);
		}

		[Token(Token = "0x6000D8A")]
		[Address(RVA = "0x1343448", Offset = "0x1343448", VA = "0x1343448")]
		public void ClearAllCurrentCollisionInfos()
		{
		}

		[Token(Token = "0x6000D8B")]
		[Address(RVA = "0x134349C", Offset = "0x134349C", VA = "0x134349C", Slot = "13")]
		public virtual void UpdateCurrentCollisionsBasedOnDepth()
		{
		}

		[Token(Token = "0x6000D8C")]
		[Address(RVA = "0x134374C", Offset = "0x134374C", VA = "0x134374C", Slot = "14")]
		public virtual void UpdateLatestCollisionData()
		{
		}

		[Token(Token = "0x6000D8D")]
		[Address(RVA = "0x1343ED8", Offset = "0x1343ED8", VA = "0x1343ED8")]
		protected InteractableTool()
		{
		}
	}
	[Token(Token = "0x2000278")]
	public interface InteractableToolView
	{
		[Token(Token = "0x1700020B")]
		InteractableTool InteractableTool
		{
			[Token(Token = "0x6000D8E")]
			get;
		}

		[Token(Token = "0x1700020C")]
		bool EnableState
		{
			[Token(Token = "0x6000D90")]
			get;
			[Token(Token = "0x6000D91")]
			set;
		}

		[Token(Token = "0x1700020D")]
		bool ToolActivateState
		{
			[Token(Token = "0x6000D92")]
			get;
			[Token(Token = "0x6000D93")]
			set;
		}

		[Token(Token = "0x6000D8F")]
		void SetFocusedInteractable(Interactable interactable);
	}
	[Token(Token = "0x2000279")]
	public class PinchStateModule
	{
		[Token(Token = "0x200027A")]
		private enum PinchState
		{
			[Token(Token = "0x4001003")]
			None,
			[Token(Token = "0x4001004")]
			PinchDown,
			[Token(Token = "0x4001005")]
			PinchStay,
			[Token(Token = "0x4001006")]
			PinchUp
		}

		[Token(Token = "0x4000FFF")]
		private const float PINCH_STRENGTH_THRESHOLD = 1f;

		[Token(Token = "0x4001000")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private PinchState _currPinchState;

		[Token(Token = "0x4001001")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Interactable _firstFocusedInteractable;

		[Token(Token = "0x1700020E")]
		public bool PinchUpAndDownOnFocusedObject
		{
			[Token(Token = "0x6000D94")]
			[Address(RVA = "0x1055E50", Offset = "0x1055E50", VA = "0x1055E50")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700020F")]
		public bool PinchSteadyOnFocusedObject
		{
			[Token(Token = "0x6000D95")]
			[Address(RVA = "0x1055ED8", Offset = "0x1055ED8", VA = "0x1055ED8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000210")]
		public bool PinchDownOnFocusedObject
		{
			[Token(Token = "0x6000D96")]
			[Address(RVA = "0x1055F60", Offset = "0x1055F60", VA = "0x1055F60")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000D97")]
		[Address(RVA = "0x1055FE8", Offset = "0x1055FE8", VA = "0x1055FE8")]
		public PinchStateModule()
		{
		}

		[Token(Token = "0x6000D98")]
		[Address(RVA = "0x105601C", Offset = "0x105601C", VA = "0x105601C")]
		public void UpdateState(OVRHand hand, Interactable currFocusedInteractable)
		{
		}
	}
	[Token(Token = "0x200027B")]
	public class RayTool : InteractableTool
	{
		[Token(Token = "0x4001007")]
		private const float MINIMUM_RAY_CAST_DISTANCE = 0.8f;

		[Token(Token = "0x4001008")]
		private const float COLLIDER_RADIUS = 0.01f;

		[Token(Token = "0x4001009")]
		private const int NUM_MAX_PRIMARY_HITS = 10;

		[Token(Token = "0x400100A")]
		private const int NUM_MAX_SECONDARY_HITS = 25;

		[Token(Token = "0x400100B")]
		private const int NUM_COLLIDERS_TO_TEST = 20;

		[Token(Token = "0x400100C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private RayToolView _rayToolView;

		[Token(Token = "0x400100D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8DAFCC", Offset = "0x8DAFCC")]
		private float _coneAngleDegrees;

		[Token(Token = "0x400100E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[SerializeField]
		private float _farFieldMaxDistance;

		[Token(Token = "0x400100F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private PinchStateModule _pinchStateModule;

		[Token(Token = "0x4001010")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Interactable _focusedInteractable;

		[Token(Token = "0x4001011")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Collider[] _collidersOverlapped;

		[Token(Token = "0x4001012")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Interactable _currInteractableCastedAgainst;

		[Token(Token = "0x4001013")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private float _coneAngleReleaseDegrees;

		[Token(Token = "0x4001014")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private RaycastHit[] _primaryHits;

		[Token(Token = "0x4001015")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Collider[] _secondaryOverlapResults;

		[Token(Token = "0x4001016")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private bool _initialized;

		[Token(Token = "0x17000211")]
		public override InteractableToolTags ToolTags
		{
			[Token(Token = "0x6000D99")]
			[Address(RVA = "0x105AE68", Offset = "0x105AE68", VA = "0x105AE68", Slot = "4")]
			get
			{
				return default(InteractableToolTags);
			}
		}

		[Token(Token = "0x17000212")]
		public override ToolInputState ToolInputState
		{
			[Token(Token = "0x6000D9A")]
			[Address(RVA = "0x105AE70", Offset = "0x105AE70", VA = "0x105AE70", Slot = "5")]
			get
			{
				return default(ToolInputState);
			}
		}

		[Token(Token = "0x17000213")]
		public override bool IsFarFieldTool
		{
			[Token(Token = "0x6000D9B")]
			[Address(RVA = "0x105AED8", Offset = "0x105AED8", VA = "0x105AED8", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000214")]
		public override bool EnableState
		{
			[Token(Token = "0x6000D9C")]
			[Address(RVA = "0x105AEE0", Offset = "0x105AEE0", VA = "0x105AEE0", Slot = "10")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000D9D")]
			[Address(RVA = "0x105AF24", Offset = "0x105AF24", VA = "0x105AF24", Slot = "11")]
			set
			{
			}
		}

		[Token(Token = "0x6000D9E")]
		[Address(RVA = "0x105AF98", Offset = "0x105AF98", VA = "0x105AF98", Slot = "12")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x6000D9F")]
		[Address(RVA = "0x105B000", Offset = "0x105B000", VA = "0x105B000")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000DA0")]
		[Address(RVA = "0x105B0A4", Offset = "0x105B0A4", VA = "0x105B0A4")]
		private void Update()
		{
		}

		[Token(Token = "0x6000DA1")]
		[Address(RVA = "0x105B35C", Offset = "0x105B35C", VA = "0x105B35C")]
		private Vector3 GetRayCastOrigin()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000DA2")]
		[Address(RVA = "0x105B3E4", Offset = "0x105B3E4", VA = "0x105B3E4", Slot = "7")]
		public override List<InteractableCollisionInfo> GetNextIntersectingObjects()
		{
			return null;
		}

		[Token(Token = "0x6000DA3")]
		[Address(RVA = "0x105B7B4", Offset = "0x105B7B4", VA = "0x105B7B4")]
		private bool HasRayReleasedInteractable(Interactable focusedInteractable)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DA4")]
		[Address(RVA = "0x105B8C4", Offset = "0x105B8C4", VA = "0x105B8C4")]
		private Interactable FindTargetInteractable()
		{
			return null;
		}

		[Token(Token = "0x6000DA5")]
		[Address(RVA = "0x105B9E8", Offset = "0x105B9E8", VA = "0x105B9E8")]
		private Interactable FindPrimaryRaycastHit(Vector3 rayOrigin, Vector3 rayDirection)
		{
			return null;
		}

		[Token(Token = "0x6000DA6")]
		[Address(RVA = "0x105BCEC", Offset = "0x105BCEC", VA = "0x105BCEC")]
		private Interactable FindInteractableViaConeTest(Vector3 rayOrigin, Vector3 rayDirection)
		{
			return null;
		}

		[Token(Token = "0x6000DA7")]
		[Address(RVA = "0x105C080", Offset = "0x105C080", VA = "0x105C080", Slot = "8")]
		public override void FocusOnInteractable(Interactable focusedInteractable, ColliderZone colliderZone)
		{
		}

		[Token(Token = "0x6000DA8")]
		[Address(RVA = "0x105C168", Offset = "0x105C168", VA = "0x105C168", Slot = "9")]
		public override void DeFocus()
		{
		}

		[Token(Token = "0x6000DA9")]
		[Address(RVA = "0x105C1A4", Offset = "0x105C1A4", VA = "0x105C1A4")]
		public RayTool()
		{
		}
	}
	[Token(Token = "0x200027C")]
	public class RayToolView : MonoBehaviour, InteractableToolView
	{
		[Token(Token = "0x4001017")]
		private const int NUM_RAY_LINE_POSITIONS = 25;

		[Token(Token = "0x4001018")]
		private const float DEFAULT_RAY_CAST_DISTANCE = 3f;

		[Token(Token = "0x4001019")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform _targetTransform;

		[Token(Token = "0x400101A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private LineRenderer _lineRenderer;

		[Token(Token = "0x400101B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool _toolActivateState;

		[Token(Token = "0x400101C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Transform _focusedTransform;

		[Token(Token = "0x400101D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3[] linePositions;

		[Token(Token = "0x400101E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Gradient _oldColorGradient;

		[Token(Token = "0x400101F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Gradient _highLightColorGradient;

		[Token(Token = "0x4001020")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DB040", Offset = "0x8DB040")]
		private InteractableTool <InteractableTool>k__BackingField;

		[Token(Token = "0x17000215")]
		public bool EnableState
		{
			[Token(Token = "0x6000DAA")]
			[Address(RVA = "0x105AF08", Offset = "0x105AF08", VA = "0x105AF08", Slot = "6")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000DAB")]
			[Address(RVA = "0x105AF40", Offset = "0x105AF40", VA = "0x105AF40", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x17000216")]
		public bool ToolActivateState
		{
			[Token(Token = "0x6000DAC")]
			[Address(RVA = "0x105C2B0", Offset = "0x105C2B0", VA = "0x105C2B0", Slot = "8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000DAD")]
			[Address(RVA = "0x105B320", Offset = "0x105B320", VA = "0x105B320", Slot = "9")]
			set
			{
			}
		}

		[Token(Token = "0x17000217")]
		public InteractableTool InteractableTool
		{
			[Token(Token = "0x6000DAF")]
			[Address(RVA = "0x105C510", Offset = "0x105C510", VA = "0x105C510", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E4028", Offset = "0x8E4028")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000DB0")]
			[Address(RVA = "0x105C518", Offset = "0x105C518", VA = "0x105C518")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E4038", Offset = "0x8E4038")]
			set
			{
			}
		}

		[Token(Token = "0x6000DAE")]
		[Address(RVA = "0x105C2B8", Offset = "0x105C2B8", VA = "0x105C2B8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000DB1")]
		[Address(RVA = "0x105C0BC", Offset = "0x105C0BC", VA = "0x105C0BC", Slot = "5")]
		public void SetFocusedInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x6000DB2")]
		[Address(RVA = "0x105C520", Offset = "0x105C520", VA = "0x105C520")]
		private void Update()
		{
		}

		[Token(Token = "0x6000DB3")]
		[Address(RVA = "0x105C794", Offset = "0x105C794", VA = "0x105C794")]
		public static Vector3 GetPointOnBezierCurve(Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3, float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000DB4")]
		[Address(RVA = "0x105C884", Offset = "0x105C884", VA = "0x105C884")]
		public RayToolView()
		{
		}
	}
	[Token(Token = "0x200027D")]
	public class DistanceGrabberSample : MonoBehaviour
	{
		[Token(Token = "0x4001021")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool useSpherecast;

		[Token(Token = "0x4001022")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private bool allowGrabThroughWalls;

		[Token(Token = "0x4001023")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private DistanceGrabber[] m_grabbers;

		[Token(Token = "0x17000218")]
		public bool UseSpherecast
		{
			[Token(Token = "0x6000DB5")]
			[Address(RVA = "0x10922EC", Offset = "0x10922EC", VA = "0x10922EC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000DB6")]
			[Address(RVA = "0x10922F4", Offset = "0x10922F4", VA = "0x10922F4")]
			set
			{
			}
		}

		[Token(Token = "0x17000219")]
		public bool AllowGrabThroughWalls
		{
			[Token(Token = "0x6000DB7")]
			[Address(RVA = "0x109237C", Offset = "0x109237C", VA = "0x109237C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000DB8")]
			[Address(RVA = "0x1092384", Offset = "0x1092384", VA = "0x1092384")]
			set
			{
			}
		}

		[Token(Token = "0x6000DB9")]
		[Address(RVA = "0x10923F0", Offset = "0x10923F0", VA = "0x10923F0")]
		private void Start()
		{
		}

		[Token(Token = "0x6000DBA")]
		[Address(RVA = "0x10926A4", Offset = "0x10926A4", VA = "0x10926A4")]
		public void ToggleSphereCasting(Toggle t)
		{
		}

		[Token(Token = "0x6000DBB")]
		[Address(RVA = "0x10926B4", Offset = "0x10926B4", VA = "0x10926B4")]
		public void ToggleGrabThroughWalls(Toggle t)
		{
		}

		[Token(Token = "0x6000DBC")]
		[Address(RVA = "0x10926C4", Offset = "0x10926C4", VA = "0x10926C4")]
		public DistanceGrabberSample()
		{
		}
	}
	[Token(Token = "0x200027E")]
	public class ControllerBoxController : MonoBehaviour
	{
		[Token(Token = "0x4001024")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TrainLocomotive _locomotive;

		[Token(Token = "0x4001025")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private CowController _cowController;

		[Token(Token = "0x6000DBD")]
		[Address(RVA = "0x1302D30", Offset = "0x1302D30", VA = "0x1302D30")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000DBE")]
		[Address(RVA = "0x1302D34", Offset = "0x1302D34", VA = "0x1302D34")]
		public void StartStopStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6000DBF")]
		[Address(RVA = "0x1302D6C", Offset = "0x1302D6C", VA = "0x1302D6C")]
		public void DecreaseSpeedStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6000DC0")]
		[Address(RVA = "0x1302DA4", Offset = "0x1302DA4", VA = "0x1302DA4")]
		public void IncreaseSpeedStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6000DC1")]
		[Address(RVA = "0x1302DDC", Offset = "0x1302DDC", VA = "0x1302DDC")]
		public void SmokeButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6000DC2")]
		[Address(RVA = "0x1302E14", Offset = "0x1302E14", VA = "0x1302E14")]
		public void WhistleButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6000DC3")]
		[Address(RVA = "0x1302E4C", Offset = "0x1302E4C", VA = "0x1302E4C")]
		public void ReverseButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6000DC4")]
		[Address(RVA = "0x1302E84", Offset = "0x1302E84", VA = "0x1302E84")]
		public void SwitchVisualization(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6000DC5")]
		[Address(RVA = "0x1302EF8", Offset = "0x1302EF8", VA = "0x1302EF8")]
		public void GoMoo(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6000DC6")]
		[Address(RVA = "0x1302F68", Offset = "0x1302F68", VA = "0x1302F68")]
		public ControllerBoxController()
		{
		}
	}
	[Token(Token = "0x200027F")]
	public class CowController : MonoBehaviour
	{
		[Token(Token = "0x4001026")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Animation _cowAnimation;

		[Token(Token = "0x4001027")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioSource _mooCowAudioSource;

		[Token(Token = "0x6000DC7")]
		[Address(RVA = "0x1303078", Offset = "0x1303078", VA = "0x1303078")]
		private void Start()
		{
		}

		[Token(Token = "0x6000DC8")]
		[Address(RVA = "0x130307C", Offset = "0x130307C", VA = "0x130307C")]
		public void PlayMooSound()
		{
		}

		[Token(Token = "0x6000DC9")]
		[Address(RVA = "0x1302F2C", Offset = "0x1302F2C", VA = "0x1302F2C")]
		public void GoMooCowGo()
		{
		}

		[Token(Token = "0x6000DCA")]
		[Address(RVA = "0x13030BC", Offset = "0x13030BC", VA = "0x13030BC")]
		public CowController()
		{
		}
	}
	[Token(Token = "0x2000280")]
	public class PanelHMDFollower : MonoBehaviour
	{
		[Token(Token = "0x2000281")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D6F78", Offset = "0x8D6F78")]
		private sealed class <LerpToHMD>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001032")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001033")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001034")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PanelHMDFollower <>4__this;

			[Token(Token = "0x4001035")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Vector3 <newPanelPosition>5__2;

			[Token(Token = "0x4001036")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <startTime>5__3;

			[Token(Token = "0x4001037")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <endTime>5__4;

			[Token(Token = "0x1700021A")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000DD3")]
				[Address(RVA = "0xE8AEE8", Offset = "0xE8AEE8", VA = "0xE8AEE8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700021B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000DD5")]
				[Address(RVA = "0xE8AF30", Offset = "0xE8AF30", VA = "0xE8AF30", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000DD0")]
			[Address(RVA = "0xE8ACFC", Offset = "0xE8ACFC", VA = "0xE8ACFC")]
			[DebuggerHidden]
			public <LerpToHMD>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x6000DD1")]
			[Address(RVA = "0xE8AD28", Offset = "0xE8AD28", VA = "0xE8AD28", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000DD2")]
			[Address(RVA = "0xE8AD2C", Offset = "0xE8AD2C", VA = "0xE8AD2C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000DD4")]
			[Address(RVA = "0xE8AEF0", Offset = "0xE8AEF0", VA = "0xE8AEF0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001028")]
		private const float TOTAL_DURATION = 3f;

		[Token(Token = "0x4001029")]
		private const float HMD_MOVEMENT_THRESHOLD = 0.3f;

		[Token(Token = "0x400102A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float _maxDistance;

		[Token(Token = "0x400102B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float _minDistance;

		[Token(Token = "0x400102C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float _minZDistance;

		[Token(Token = "0x400102D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private PVRCameraRig _cameraRig;

		[Token(Token = "0x400102E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 _panelInitialPosition;

		[Token(Token = "0x400102F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Coroutine _coroutine;

		[Token(Token = "0x4001030")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Vector3 _prevPos;

		[Token(Token = "0x4001031")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Vector3 _lastMovedToPos;

		[Token(Token = "0x6000DCB")]
		[Address(RVA = "0x1051A14", Offset = "0x1051A14", VA = "0x1051A14")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000DCC")]
		[Address(RVA = "0x1051AC0", Offset = "0x1051AC0", VA = "0x1051AC0")]
		private void Update()
		{
		}

		[Token(Token = "0x6000DCD")]
		[Address(RVA = "0x1051D10", Offset = "0x1051D10", VA = "0x1051D10")]
		private Vector3 CalculateIdealAnchorPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000DCE")]
		[Address(RVA = "0x1051C98", Offset = "0x1051C98", VA = "0x1051C98")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E4048", Offset = "0x8E4048")]
		private IEnumerator LerpToHMD()
		{
			return null;
		}

		[Token(Token = "0x6000DCF")]
		[Address(RVA = "0x1051D5C", Offset = "0x1051D5C", VA = "0x1051D5C")]
		public PanelHMDFollower()
		{
		}
	}
	[Token(Token = "0x2000282")]
	public class SelectionCylinder : MonoBehaviour
	{
		[Token(Token = "0x2000283")]
		public enum SelectionState
		{
			[Token(Token = "0x400103F")]
			Off,
			[Token(Token = "0x4001040")]
			Selected,
			[Token(Token = "0x4001041")]
			Highlighted
		}

		[Token(Token = "0x4001038")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshRenderer _selectionMeshRenderer;

		[Token(Token = "0x4001039")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int _colorId;

		[Token(Token = "0x400103A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Material[] _selectionMaterials;

		[Token(Token = "0x400103B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Color[] _defaultSelectionColors;

		[Token(Token = "0x400103C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Color[] _highlightColors;

		[Token(Token = "0x400103D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private SelectionState _currSelectionState;

		[Token(Token = "0x1700021C")]
		public SelectionState CurrSelectionState
		{
			[Token(Token = "0x6000DD6")]
			[Address(RVA = "0x10640D4", Offset = "0x10640D4", VA = "0x10640D4")]
			get
			{
				return default(SelectionState);
			}
			[Token(Token = "0x6000DD7")]
			[Address(RVA = "0x10640DC", Offset = "0x10640DC", VA = "0x10640DC")]
			set
			{
			}
		}

		[Token(Token = "0x6000DD8")]
		[Address(RVA = "0x1064260", Offset = "0x1064260", VA = "0x1064260")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000DD9")]
		[Address(RVA = "0x1064464", Offset = "0x1064464", VA = "0x1064464")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000DDA")]
		[Address(RVA = "0x1064164", Offset = "0x1064164", VA = "0x1064164")]
		private void AffectSelectionColor(Color[] newColors)
		{
		}

		[Token(Token = "0x6000DDB")]
		[Address(RVA = "0x1064550", Offset = "0x1064550", VA = "0x1064550")]
		public SelectionCylinder()
		{
		}
	}
	[Token(Token = "0x2000284")]
	public class TrackSegment : MonoBehaviour
	{
		[Token(Token = "0x2000285")]
		public enum SegmentType
		{
			[Token(Token = "0x4001050")]
			Straight,
			[Token(Token = "0x4001051")]
			LeftTurn,
			[Token(Token = "0x4001052")]
			RightTurn,
			[Token(Token = "0x4001053")]
			Switch
		}

		[Token(Token = "0x4001042")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private SegmentType _segmentType;

		[Token(Token = "0x4001043")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private MeshFilter _straight;

		[Token(Token = "0x4001044")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private MeshFilter _leftTurn;

		[Token(Token = "0x4001045")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private MeshFilter _rightTurn;

		[Token(Token = "0x4001046")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float _gridSize;

		[Token(Token = "0x4001047")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int _subDivCount;

		[Token(Token = "0x4001048")]
		private const float _originalGridSize = 0.8f;

		[Token(Token = "0x4001049")]
		private const float _trackWidth = 0.15f;

		[Token(Token = "0x400104A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private GameObject _mesh;

		[Token(Token = "0x400104B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DB120", Offset = "0x8DB120")]
		private float <StartDistance>k__BackingField;

		[Token(Token = "0x400104C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Pose _p1;

		[Token(Token = "0x400104D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Pose _p2;

		[Token(Token = "0x400104E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Pose _endPose;

		[Token(Token = "0x1700021D")]
		public float StartDistance
		{
			[Token(Token = "0x6000DDD")]
			[Address(RVA = "0x12E2740", Offset = "0x12E2740", VA = "0x12E2740")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E40F8", Offset = "0x8E40F8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000DDE")]
			[Address(RVA = "0x12E2748", Offset = "0x12E2748", VA = "0x12E2748")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E4108", Offset = "0x8E4108")]
			set
			{
			}
		}

		[Token(Token = "0x1700021E")]
		public float GridSize
		{
			[Token(Token = "0x6000DDF")]
			[Address(RVA = "0x12E2750", Offset = "0x12E2750", VA = "0x12E2750")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000DE0")]
			[Address(RVA = "0x12E2758", Offset = "0x12E2758", VA = "0x12E2758")]
			private set
			{
			}
		}

		[Token(Token = "0x1700021F")]
		public int SubDivCount
		{
			[Token(Token = "0x6000DE1")]
			[Address(RVA = "0x12E2760", Offset = "0x12E2760", VA = "0x12E2760")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000DE2")]
			[Address(RVA = "0x12E2768", Offset = "0x12E2768", VA = "0x12E2768")]
			set
			{
			}
		}

		[Token(Token = "0x17000220")]
		public SegmentType Type
		{
			[Token(Token = "0x6000DE3")]
			[Address(RVA = "0x12E2770", Offset = "0x12E2770", VA = "0x12E2770")]
			get
			{
				return default(SegmentType);
			}
		}

		[Token(Token = "0x17000221")]
		public Pose EndPose
		{
			[Token(Token = "0x6000DE4")]
			[Address(RVA = "0x12E2778", Offset = "0x12E2778", VA = "0x12E2778")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000222")]
		public float Radius
		{
			[Token(Token = "0x6000DE5")]
			[Address(RVA = "0x12E2AD4", Offset = "0x12E2AD4", VA = "0x12E2AD4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000223")]
		public float SegmentLength
		{
			[Token(Token = "0x6000DE7")]
			[Address(RVA = "0x12E27E0", Offset = "0x12E27E0", VA = "0x12E27E0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6000DE6")]
		[Address(RVA = "0x12E2AE4", Offset = "0x12E2AE4", VA = "0x12E2AE4")]
		public float setGridSize(float size)
		{
			return default(float);
		}

		[Token(Token = "0x6000DE8")]
		[Address(RVA = "0x12E2AFC", Offset = "0x12E2AFC", VA = "0x12E2AFC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000DE9")]
		[Address(RVA = "0x12E2820", Offset = "0x12E2820", VA = "0x12E2820")]
		public void UpdatePose(float distanceIntoSegment, Pose pose)
		{
		}

		[Token(Token = "0x6000DEA")]
		[Address(RVA = "0x12E2B00", Offset = "0x12E2B00", VA = "0x12E2B00")]
		private void Update()
		{
		}

		[Token(Token = "0x6000DEB")]
		[Address(RVA = "0x12E2B04", Offset = "0x12E2B04", VA = "0x12E2B04")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000DEC")]
		[Address(RVA = "0x12E2B6C", Offset = "0x12E2B6C", VA = "0x12E2B6C")]
		private void DrawDebugLines()
		{
		}

		[Token(Token = "0x6000DED")]
		[Address(RVA = "0x12E3434", Offset = "0x12E3434", VA = "0x12E3434")]
		public void RegenerateTrackAndMesh()
		{
		}

		[Token(Token = "0x6000DEE")]
		[Address(RVA = "0x12E36E0", Offset = "0x12E36E0", VA = "0x12E36E0")]
		public TrackSegment()
		{
		}
	}
	[Token(Token = "0x2000286")]
	public class TrainButtonVisualController : MonoBehaviour
	{
		[Token(Token = "0x2000287")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D6F88", Offset = "0x8D6F88")]
		private sealed class <ResetPosition>d__26 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001065")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001066")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001067")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TrainButtonVisualController <>4__this;

			[Token(Token = "0x4001068")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <startTime>5__2;

			[Token(Token = "0x4001069")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <endTime>5__3;

			[Token(Token = "0x17000224")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000DFD")]
				[Address(RVA = "0x1C31154", Offset = "0x1C31154", VA = "0x1C31154", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000225")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000DFF")]
				[Address(RVA = "0x1C3119C", Offset = "0x1C3119C", VA = "0x1C3119C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000DFA")]
			[Address(RVA = "0x1C30FB0", Offset = "0x1C30FB0", VA = "0x1C30FB0")]
			[DebuggerHidden]
			public <ResetPosition>d__26(int <>1__state)
			{
			}

			[Token(Token = "0x6000DFB")]
			[Address(RVA = "0x1C30FDC", Offset = "0x1C30FDC", VA = "0x1C30FDC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000DFC")]
			[Address(RVA = "0x1C30FE0", Offset = "0x1C30FE0", VA = "0x1C30FE0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000DFE")]
			[Address(RVA = "0x1C3115C", Offset = "0x1C3115C", VA = "0x1C3115C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001054")]
		private const float LERP_TO_OLD_POS_DURATION = 1f;

		[Token(Token = "0x4001055")]
		private const float LOCAL_SIZE_HALVED = 0.5f;

		[Token(Token = "0x4001056")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshRenderer _meshRenderer;

		[Token(Token = "0x4001057")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private MeshRenderer _glowRenderer;

		[Token(Token = "0x4001058")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private ButtonController _buttonController;

		[Token(Token = "0x4001059")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Color _buttonContactColor;

		[Token(Token = "0x400105A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Color _buttonActionColor;

		[Token(Token = "0x400105B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x400105C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private AudioClip _actionSoundEffect;

		[Token(Token = "0x400105D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Transform _buttonContactTransform;

		[Token(Token = "0x400105E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private float _contactMaxDisplacementDistance;

		[Token(Token = "0x400105F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Material _buttonMaterial;

		[Token(Token = "0x4001060")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Color _buttonDefaultColor;

		[Token(Token = "0x4001061")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private int _materialColorId;

		[Token(Token = "0x4001062")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private bool _buttonInContactOrActionStates;

		[Token(Token = "0x4001063")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Coroutine _lerpToOldPositionCr;

		[Token(Token = "0x4001064")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Vector3 _oldPosition;

		[Token(Token = "0x6000DEF")]
		[Address(RVA = "0x12E37B0", Offset = "0x12E37B0", VA = "0x12E37B0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000DF0")]
		[Address(RVA = "0x12E386C", Offset = "0x12E386C", VA = "0x12E386C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000DF1")]
		[Address(RVA = "0x12E391C", Offset = "0x12E391C", VA = "0x12E391C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000DF2")]
		[Address(RVA = "0x12E3A94", Offset = "0x12E3A94", VA = "0x12E3A94")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000DF3")]
		[Address(RVA = "0x12E3C5C", Offset = "0x12E3C5C", VA = "0x12E3C5C")]
		private void ActionOrInContactZoneStayEvent(ColliderZoneArgs collisionArgs)
		{
		}

		[Token(Token = "0x6000DF4")]
		[Address(RVA = "0x12E3D44", Offset = "0x12E3D44", VA = "0x12E3D44")]
		private void InteractableStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6000DF5")]
		[Address(RVA = "0x12E3F58", Offset = "0x12E3F58", VA = "0x12E3F58")]
		private void PlaySound(AudioClip clip)
		{
		}

		[Token(Token = "0x6000DF6")]
		[Address(RVA = "0x12E3E58", Offset = "0x12E3E58", VA = "0x12E3E58")]
		private void StopResetLerping()
		{
		}

		[Token(Token = "0x6000DF7")]
		[Address(RVA = "0x12E3E6C", Offset = "0x12E3E6C", VA = "0x12E3E6C")]
		private void LerpToOldPosition()
		{
		}

		[Token(Token = "0x6000DF8")]
		[Address(RVA = "0x12E3FB0", Offset = "0x12E3FB0", VA = "0x12E3FB0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E4118", Offset = "0x8E4118")]
		private IEnumerator ResetPosition()
		{
			return null;
		}

		[Token(Token = "0x6000DF9")]
		[Address(RVA = "0x12E4028", Offset = "0x12E4028", VA = "0x12E4028")]
		public TrainButtonVisualController()
		{
		}
	}
	[Token(Token = "0x2000288")]
	public class TrainCar : TrainCarBase
	{
		[Token(Token = "0x400106A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private TrainCarBase _parentLocomotive;

		[Token(Token = "0x400106B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		protected float _distanceBehindParent;

		[Token(Token = "0x17000226")]
		public float DistanceBehindParentScaled
		{
			[Token(Token = "0x6000E00")]
			[Address(RVA = "0x12E40D8", Offset = "0x12E40D8", VA = "0x12E40D8")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6000E01")]
		[Address(RVA = "0x12E40E8", Offset = "0x12E40E8", VA = "0x12E40E8", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6000E02")]
		[Address(RVA = "0x12E40F0", Offset = "0x12E40F0", VA = "0x12E40F0", Slot = "5")]
		public override void UpdatePosition()
		{
		}

		[Token(Token = "0x6000E03")]
		[Address(RVA = "0x12E4434", Offset = "0x12E4434", VA = "0x12E4434")]
		public TrainCar()
		{
		}
	}
	[Token(Token = "0x2000289")]
	public abstract class TrainCarBase : MonoBehaviour
	{
		[Token(Token = "0x400106C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Vector3 OFFSET;

		[Token(Token = "0x400106D")]
		private const float WHEEL_RADIUS = 0.027f;

		[Token(Token = "0x400106E")]
		private const float TWO_PI = (float)Math.PI * 2f;

		[Token(Token = "0x400106F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		protected Transform _frontWheels;

		[Token(Token = "0x4001070")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		protected Transform _rearWheels;

		[Token(Token = "0x4001071")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		protected TrainTrack _trainTrack;

		[Token(Token = "0x4001072")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		protected Transform[] _individualWheels;

		[Token(Token = "0x4001073")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DB220", Offset = "0x8DB220")]
		private float <Distance>k__BackingField;

		[Token(Token = "0x4001074")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		protected float scale;

		[Token(Token = "0x4001075")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Pose _frontPose;

		[Token(Token = "0x4001076")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Pose _rearPose;

		[Token(Token = "0x17000227")]
		public float Distance
		{
			[Token(Token = "0x6000E04")]
			[Address(RVA = "0x12E4544", Offset = "0x12E4544", VA = "0x12E4544")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E41C8", Offset = "0x8E41C8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000E05")]
			[Address(RVA = "0x12E454C", Offset = "0x12E454C", VA = "0x12E454C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E41D8", Offset = "0x8E41D8")]
			protected set
			{
			}
		}

		[Token(Token = "0x17000228")]
		public float Scale
		{
			[Token(Token = "0x6000E06")]
			[Address(RVA = "0x12E4554", Offset = "0x12E4554", VA = "0x12E4554")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000E07")]
			[Address(RVA = "0x12E455C", Offset = "0x12E455C", VA = "0x12E455C")]
			set
			{
			}
		}

		[Token(Token = "0x6000E08")]
		[Address(RVA = "0x12E40EC", Offset = "0x12E40EC", VA = "0x12E40EC", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6000E09")]
		[Address(RVA = "0x12E4564", Offset = "0x12E4564", VA = "0x12E4564")]
		public void UpdatePose(float distance, TrainCarBase train, Pose pose)
		{
		}

		[Token(Token = "0x6000E0A")]
		[Address(RVA = "0x12E4138", Offset = "0x12E4138", VA = "0x12E4138")]
		protected void UpdateCarPosition()
		{
		}

		[Token(Token = "0x6000E0B")]
		[Address(RVA = "0x12E435C", Offset = "0x12E435C", VA = "0x12E435C")]
		protected void RotateCarWheels()
		{
		}

		[Token(Token = "0x6000E0C")]
		public abstract void UpdatePosition();

		[Token(Token = "0x6000E0D")]
		[Address(RVA = "0x12E44A0", Offset = "0x12E44A0", VA = "0x12E44A0")]
		protected TrainCarBase()
		{
		}
	}
	[Token(Token = "0x200028A")]
	public class TrainCrossingController : MonoBehaviour
	{
		[Token(Token = "0x200028B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D6F98", Offset = "0x8D6F98")]
		private sealed class <AnimateCrossing>d__15 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001081")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001082")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001083")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TrainCrossingController <>4__this;

			[Token(Token = "0x4001084")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float animationLength;

			[Token(Token = "0x4001085")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <animationEndTime>5__2;

			[Token(Token = "0x4001086")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <lightBlinkDuration>5__3;

			[Token(Token = "0x4001087")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <lightBlinkStartTime>5__4;

			[Token(Token = "0x4001088")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <lightBlinkEndTime>5__5;

			[Token(Token = "0x4001089")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private Material <lightToBlinkOn>5__6;

			[Token(Token = "0x400108A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private Material <lightToBlinkOff>5__7;

			[Token(Token = "0x400108B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private Color <onColor>5__8;

			[Token(Token = "0x400108C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private Color <offColor>5__9;

			[Token(Token = "0x17000229")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000E1B")]
				[Address(RVA = "0x1C3143C", Offset = "0x1C3143C", VA = "0x1C3143C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700022A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000E1D")]
				[Address(RVA = "0x1C31484", Offset = "0x1C31484", VA = "0x1C31484", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000E18")]
			[Address(RVA = "0x1C311A4", Offset = "0x1C311A4", VA = "0x1C311A4")]
			[DebuggerHidden]
			public <AnimateCrossing>d__15(int <>1__state)
			{
			}

			[Token(Token = "0x6000E19")]
			[Address(RVA = "0x1C311D0", Offset = "0x1C311D0", VA = "0x1C311D0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000E1A")]
			[Address(RVA = "0x1C311D4", Offset = "0x1C311D4", VA = "0x1C311D4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000E1C")]
			[Address(RVA = "0x1C31444", Offset = "0x1C31444", VA = "0x1C31444", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001077")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x4001078")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioClip[] _crossingSounds;

		[Token(Token = "0x4001079")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private MeshRenderer _lightSide1Renderer;

		[Token(Token = "0x400107A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private MeshRenderer _lightSide2Renderer;

		[Token(Token = "0x400107B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private SelectionCylinder _selectionCylinder;

		[Token(Token = "0x400107C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Material _lightsSide1Mat;

		[Token(Token = "0x400107D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Material _lightsSide2Mat;

		[Token(Token = "0x400107E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int _colorId;

		[Token(Token = "0x400107F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Coroutine _xingAnimationCr;

		[Token(Token = "0x4001080")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private InteractableTool _toolInteractingWithMe;

		[Token(Token = "0x6000E0F")]
		[Address(RVA = "0x12E4704", Offset = "0x12E4704", VA = "0x12E4704")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000E10")]
		[Address(RVA = "0x12E4764", Offset = "0x12E4764", VA = "0x12E4764")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000E11")]
		[Address(RVA = "0x12E486C", Offset = "0x12E486C", VA = "0x12E486C")]
		public void CrossingButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6000E12")]
		[Address(RVA = "0x12E49DC", Offset = "0x12E49DC", VA = "0x12E49DC")]
		private void Update()
		{
		}

		[Token(Token = "0x6000E13")]
		[Address(RVA = "0x12E48CC", Offset = "0x12E48CC", VA = "0x12E48CC")]
		private void ActivateTrainCrossing()
		{
		}

		[Token(Token = "0x6000E14")]
		[Address(RVA = "0x12E4AB8", Offset = "0x12E4AB8", VA = "0x12E4AB8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E41E8", Offset = "0x8E41E8")]
		private IEnumerator AnimateCrossing(float animationLength)
		{
			return null;
		}

		[Token(Token = "0x6000E15")]
		[Address(RVA = "0x12E4B40", Offset = "0x12E4B40", VA = "0x12E4B40")]
		private void AffectMaterials(Material[] materials, Color newColor)
		{
		}

		[Token(Token = "0x6000E16")]
		[Address(RVA = "0x12E4BEC", Offset = "0x12E4BEC", VA = "0x12E4BEC")]
		private void ToggleLightObjects(bool enableState)
		{
		}

		[Token(Token = "0x6000E17")]
		[Address(RVA = "0x12E4C4C", Offset = "0x12E4C4C", VA = "0x12E4C4C")]
		public TrainCrossingController()
		{
		}
	}
	[Token(Token = "0x200028C")]
	public class TrainLocomotive : TrainCarBase
	{
		[Token(Token = "0x200028D")]
		private enum EngineSoundState
		{
			[Token(Token = "0x40010AB")]
			Start,
			[Token(Token = "0x40010AC")]
			AccelerateOrSetProperSpeed,
			[Token(Token = "0x40010AD")]
			Stop
		}

		[Token(Token = "0x200028E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D6FA8", Offset = "0x8D6FA8")]
		private sealed class <StartStopTrain>d__34 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40010AE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40010AF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40010B0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool startTrain;

			[Token(Token = "0x40010B1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public TrainLocomotive <>4__this;

			[Token(Token = "0x40010B2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <endSpeed>5__2;

			[Token(Token = "0x40010B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <timePeriodForSpeedChange>5__3;

			[Token(Token = "0x40010B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <startTime>5__4;

			[Token(Token = "0x40010B5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <endTime>5__5;

			[Token(Token = "0x40010B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private float <startSpeed>5__6;

			[Token(Token = "0x1700022B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000E30")]
				[Address(RVA = "0x1C31700", Offset = "0x1C31700", VA = "0x1C31700", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700022C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000E32")]
				[Address(RVA = "0x1C31748", Offset = "0x1C31748", VA = "0x1C31748", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000E2D")]
			[Address(RVA = "0x1C3148C", Offset = "0x1C3148C", VA = "0x1C3148C")]
			[DebuggerHidden]
			public <StartStopTrain>d__34(int <>1__state)
			{
			}

			[Token(Token = "0x6000E2E")]
			[Address(RVA = "0x1C314B8", Offset = "0x1C314B8", VA = "0x1C314B8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000E2F")]
			[Address(RVA = "0x1C314BC", Offset = "0x1C314BC", VA = "0x1C314BC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000E31")]
			[Address(RVA = "0x1C31708", Offset = "0x1C31708", VA = "0x1C31708", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400108D")]
		private const float MIN_SPEED = 0.2f;

		[Token(Token = "0x400108E")]
		private const float MAX_SPEED = 2.7f;

		[Token(Token = "0x400108F")]
		private const float SMOKE_SPEED_MULTIPLIER = 8f;

		[Token(Token = "0x4001090")]
		private const int MAX_PARTICLES_MULTIPLIER = 3;

		[Token(Token = "0x4001091")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8DB280", Offset = "0x8DB280")]
		protected float _initialSpeed;

		[Token(Token = "0x4001092")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject _startStopButton;

		[Token(Token = "0x4001093")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private GameObject _decreaseSpeedButton;

		[Token(Token = "0x4001094")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private GameObject _increaseSpeedButton;

		[Token(Token = "0x4001095")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private GameObject _smokeButton;

		[Token(Token = "0x4001096")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private GameObject _whistleButton;

		[Token(Token = "0x4001097")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private GameObject _reverseButton;

		[Token(Token = "0x4001098")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private AudioSource _whistleAudioSource;

		[Token(Token = "0x4001099")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private AudioClip _whistleSound;

		[Token(Token = "0x400109A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private AudioSource _engineAudioSource;

		[Token(Token = "0x400109B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private AudioClip[] _accelerationSounds;

		[Token(Token = "0x400109C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private AudioClip[] _decelerationSounds;

		[Token(Token = "0x400109D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private AudioClip _startUpSound;

		[Token(Token = "0x400109E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private AudioSource _smokeStackAudioSource;

		[Token(Token = "0x400109F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private AudioClip _smokeSound;

		[Token(Token = "0x40010A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private ParticleSystem _smoke1;

		[Token(Token = "0x40010A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private ParticleSystem _smoke2;

		[Token(Token = "0x40010A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private TrainCarBase[] _childCars;

		[Token(Token = "0x40010A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private bool _isMoving;

		[Token(Token = "0x40010A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE1")]
		private bool _reverse;

		[Token(Token = "0x40010A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		private float _currentSpeed;

		[Token(Token = "0x40010A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private float _speedDiv;

		[Token(Token = "0x40010A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		private float _standardRateOverTimeMultiplier;

		[Token(Token = "0x40010A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private int _standardMaxParticles;

		[Token(Token = "0x40010A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private Coroutine _startStopTrainCr;

		[Token(Token = "0x6000E1E")]
		[Address(RVA = "0x12E4CA8", Offset = "0x12E4CA8", VA = "0x12E4CA8")]
		private void Start()
		{
		}

		[Token(Token = "0x6000E1F")]
		[Address(RVA = "0x12E4E14", Offset = "0x12E4E14", VA = "0x12E4E14")]
		private void Update()
		{
		}

		[Token(Token = "0x6000E20")]
		[Address(RVA = "0x12E4E20", Offset = "0x12E4E20", VA = "0x12E4E20", Slot = "5")]
		public override void UpdatePosition()
		{
		}

		[Token(Token = "0x6000E21")]
		[Address(RVA = "0x12E4F70", Offset = "0x12E4F70", VA = "0x12E4F70")]
		public void StartStopStateChanged()
		{
		}

		[Token(Token = "0x6000E22")]
		[Address(RVA = "0x12E4D88", Offset = "0x12E4D88", VA = "0x12E4D88")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E4298", Offset = "0x8E4298")]
		private IEnumerator StartStopTrain(bool startTrain)
		{
			return null;
		}

		[Token(Token = "0x6000E23")]
		[Address(RVA = "0x12E4FD0", Offset = "0x12E4FD0", VA = "0x12E4FD0")]
		private float PlayEngineSound(EngineSoundState engineSoundState)
		{
			return default(float);
		}

		[Token(Token = "0x6000E24")]
		[Address(RVA = "0x12E4F0C", Offset = "0x12E4F0C", VA = "0x12E4F0C")]
		private void UpdateDistance()
		{
		}

		[Token(Token = "0x6000E25")]
		[Address(RVA = "0x12E51EC", Offset = "0x12E51EC", VA = "0x12E51EC")]
		public void DecreaseSpeedStateChanged()
		{
		}

		[Token(Token = "0x6000E26")]
		[Address(RVA = "0x12E5328", Offset = "0x12E5328", VA = "0x12E5328")]
		public void IncreaseSpeedStateChanged()
		{
		}

		[Token(Token = "0x6000E27")]
		[Address(RVA = "0x12E5258", Offset = "0x12E5258", VA = "0x12E5258")]
		private void UpdateSmokeEmissionBasedOnSpeed()
		{
		}

		[Token(Token = "0x6000E28")]
		[Address(RVA = "0x12E5394", Offset = "0x12E5394", VA = "0x12E5394")]
		private float GetCurrentSmokeEmission()
		{
			return default(float);
		}

		[Token(Token = "0x6000E29")]
		[Address(RVA = "0x12E53B4", Offset = "0x12E53B4", VA = "0x12E53B4")]
		public void SmokeButtonStateChanged()
		{
		}

		[Token(Token = "0x6000E2A")]
		[Address(RVA = "0x12E5440", Offset = "0x12E5440", VA = "0x12E5440")]
		public void WhistleButtonStateChanged()
		{
		}

		[Token(Token = "0x6000E2B")]
		[Address(RVA = "0x12E54F8", Offset = "0x12E54F8", VA = "0x12E54F8")]
		public void ReverseButtonStateChanged()
		{
		}

		[Token(Token = "0x6000E2C")]
		[Address(RVA = "0x12E5508", Offset = "0x12E5508", VA = "0x12E5508")]
		public TrainLocomotive()
		{
		}
	}
	[Token(Token = "0x200028F")]
	public class TrainTrack : MonoBehaviour
	{
		[Token(Token = "0x40010B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float _gridSize;

		[Token(Token = "0x40010B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private int _subDivCount;

		[Token(Token = "0x40010B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform _segmentParent;

		[Token(Token = "0x40010BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform _trainParent;

		[Token(Token = "0x40010BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private bool _regnerateTrackMeshOnAwake;

		[Token(Token = "0x40010BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float _trainLength;

		[Token(Token = "0x40010BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private TrackSegment[] _trackSegments;

		[Token(Token = "0x1700022D")]
		public float TrackLength
		{
			[Token(Token = "0x6000E33")]
			[Address(RVA = "0x12E5570", Offset = "0x12E5570", VA = "0x12E5570")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000E34")]
			[Address(RVA = "0x12E5578", Offset = "0x12E5578", VA = "0x12E5578")]
			private set
			{
			}
		}

		[Token(Token = "0x6000E35")]
		[Address(RVA = "0x12E5580", Offset = "0x12E5580", VA = "0x12E5580")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000E36")]
		[Address(RVA = "0x12E45E4", Offset = "0x12E45E4", VA = "0x12E45E4")]
		public TrackSegment GetSegment(float distance)
		{
			return null;
		}

		[Token(Token = "0x6000E37")]
		[Address(RVA = "0x12E5584", Offset = "0x12E5584", VA = "0x12E5584")]
		public void Regenerate()
		{
		}

		[Token(Token = "0x6000E38")]
		[Address(RVA = "0x12E5798", Offset = "0x12E5798", VA = "0x12E5798")]
		private void SetScale(float ratio)
		{
		}

		[Token(Token = "0x6000E39")]
		[Address(RVA = "0x12E5894", Offset = "0x12E5894", VA = "0x12E5894")]
		public TrainTrack()
		{
		}
	}
	[Token(Token = "0x2000290")]
	public class Pose
	{
		[Token(Token = "0x40010BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 Position;

		[Token(Token = "0x40010BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Quaternion Rotation;

		[Token(Token = "0x6000E3A")]
		[Address(RVA = "0x10596A8", Offset = "0x10596A8", VA = "0x10596A8")]
		public Pose()
		{
		}

		[Token(Token = "0x6000E3B")]
		[Address(RVA = "0x10596EC", Offset = "0x10596EC", VA = "0x10596EC")]
		public Pose(Vector3 position, Quaternion rotation)
		{
		}
	}
	[Token(Token = "0x2000291")]
	public class WindmillBladesController : MonoBehaviour
	{
		[Token(Token = "0x2000292")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D6FB8", Offset = "0x8D6FB8")]
		private sealed class <LerpToSpeed>d__17 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40010CB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40010CC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40010CD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public WindmillBladesController <>4__this;

			[Token(Token = "0x40010CE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float goalSpeed;

			[Token(Token = "0x40010CF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <totalTime>5__2;

			[Token(Token = "0x40010D0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <startSpeed>5__3;

			[Token(Token = "0x1700022F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000E48")]
				[Address(RVA = "0x1C32FB0", Offset = "0x1C32FB0", VA = "0x1C32FB0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000230")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000E4A")]
				[Address(RVA = "0x1C32FF8", Offset = "0x1C32FF8", VA = "0x1C32FF8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000E45")]
			[Address(RVA = "0x1C32DE0", Offset = "0x1C32DE0", VA = "0x1C32DE0")]
			[DebuggerHidden]
			public <LerpToSpeed>d__17(int <>1__state)
			{
			}

			[Token(Token = "0x6000E46")]
			[Address(RVA = "0x1C32E0C", Offset = "0x1C32E0C", VA = "0x1C32E0C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000E47")]
			[Address(RVA = "0x1C32E10", Offset = "0x1C32E10", VA = "0x1C32E10", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000E49")]
			[Address(RVA = "0x1C32FB8", Offset = "0x1C32FB8", VA = "0x1C32FB8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000293")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D6FC8", Offset = "0x8D6FC8")]
		private sealed class <PlaySoundDelayed>d__18 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40010D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40010D2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40010D3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public WindmillBladesController <>4__this;

			[Token(Token = "0x40010D4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public AudioClip initial;

			[Token(Token = "0x40010D5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float timeDelayAfterInitial;

			[Token(Token = "0x40010D6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public AudioClip clip;

			[Token(Token = "0x17000231")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000E4E")]
				[Address(RVA = "0x1C33108", Offset = "0x1C33108", VA = "0x1C33108", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000232")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000E50")]
				[Address(RVA = "0x1C33150", Offset = "0x1C33150", VA = "0x1C33150", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000E4B")]
			[Address(RVA = "0x1C33000", Offset = "0x1C33000", VA = "0x1C33000")]
			[DebuggerHidden]
			public <PlaySoundDelayed>d__18(int <>1__state)
			{
			}

			[Token(Token = "0x6000E4C")]
			[Address(RVA = "0x1C3302C", Offset = "0x1C3302C", VA = "0x1C3302C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000E4D")]
			[Address(RVA = "0x1C33030", Offset = "0x1C33030", VA = "0x1C33030", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000E4F")]
			[Address(RVA = "0x1C33110", Offset = "0x1C33110", VA = "0x1C33110", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40010C0")]
		private const float MAX_TIME = 1f;

		[Token(Token = "0x40010C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x40010C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioClip _windMillRotationSound;

		[Token(Token = "0x40010C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AudioClip _windMillStartSound;

		[Token(Token = "0x40010C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private AudioClip _windMillStopSound;

		[Token(Token = "0x40010C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DB468", Offset = "0x8DB468")]
		private bool <IsMoving>k__BackingField;

		[Token(Token = "0x40010C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float _currentSpeed;

		[Token(Token = "0x40010C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Coroutine _lerpSpeedCoroutine;

		[Token(Token = "0x40010C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Coroutine _audioChangeCr;

		[Token(Token = "0x40010C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Quaternion _originalRotation;

		[Token(Token = "0x40010CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float _rotAngle;

		[Token(Token = "0x1700022E")]
		public bool IsMoving
		{
			[Token(Token = "0x6000E3C")]
			[Address(RVA = "0x1044ED0", Offset = "0x1044ED0", VA = "0x1044ED0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E4348", Offset = "0x8E4348")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000E3D")]
			[Address(RVA = "0x1044ED8", Offset = "0x1044ED8", VA = "0x1044ED8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E4358", Offset = "0x8E4358")]
			private set
			{
			}
		}

		[Token(Token = "0x6000E3E")]
		[Address(RVA = "0x1044EE4", Offset = "0x1044EE4", VA = "0x1044EE4")]
		private void Start()
		{
		}

		[Token(Token = "0x6000E3F")]
		[Address(RVA = "0x1044F20", Offset = "0x1044F20", VA = "0x1044F20")]
		private void Update()
		{
		}

		[Token(Token = "0x6000E40")]
		[Address(RVA = "0x1045004", Offset = "0x1045004", VA = "0x1045004")]
		public void SetMoveState(bool newMoveState, float goalSpeed)
		{
		}

		[Token(Token = "0x6000E41")]
		[Address(RVA = "0x1045078", Offset = "0x1045078", VA = "0x1045078")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E4368", Offset = "0x8E4368")]
		private IEnumerator LerpToSpeed(float goalSpeed)
		{
			return null;
		}

		[Token(Token = "0x6000E42")]
		[Address(RVA = "0x1045100", Offset = "0x1045100", VA = "0x1045100")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E43C8", Offset = "0x8E43C8")]
		private IEnumerator PlaySoundDelayed(AudioClip initial, AudioClip clip, float timeDelayAfterInitial)
		{
			return null;
		}

		[Token(Token = "0x6000E43")]
		[Address(RVA = "0x10451B8", Offset = "0x10451B8", VA = "0x10451B8")]
		private void PlaySound(AudioClip clip, bool loop = false)
		{
		}

		[Token(Token = "0x6000E44")]
		[Address(RVA = "0x1045224", Offset = "0x1045224", VA = "0x1045224")]
		public WindmillBladesController()
		{
		}
	}
	[Token(Token = "0x2000294")]
	public class WindmillController : MonoBehaviour
	{
		[Token(Token = "0x40010D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _startStopButton;

		[Token(Token = "0x40010D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float _maxSpeed;

		[Token(Token = "0x40010D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private SelectionCylinder _selectionCylinder;

		[Token(Token = "0x40010DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private WindmillBladesController _bladesRotation;

		[Token(Token = "0x40010DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private InteractableTool _toolInteractingWithMe;

		[Token(Token = "0x6000E51")]
		[Address(RVA = "0x104522C", Offset = "0x104522C", VA = "0x104522C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000E52")]
		[Address(RVA = "0x10452A0", Offset = "0x10452A0", VA = "0x10452A0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000E53")]
		[Address(RVA = "0x1045384", Offset = "0x1045384", VA = "0x1045384")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000E54")]
		[Address(RVA = "0x10454BC", Offset = "0x10454BC", VA = "0x10454BC")]
		private void StartStopStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6000E55")]
		[Address(RVA = "0x104553C", Offset = "0x104553C", VA = "0x104553C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000E56")]
		[Address(RVA = "0x1045618", Offset = "0x1045618", VA = "0x1045618")]
		public WindmillController()
		{
		}
	}
	[Token(Token = "0x2000295")]
	public enum EUiDisplayType
	{
		[Token(Token = "0x40010DD")]
		EUDT_WorldGeoQuad,
		[Token(Token = "0x40010DE")]
		EUDT_OverlayQuad,
		[Token(Token = "0x40010DF")]
		EUDT_None,
		[Token(Token = "0x40010E0")]
		EUDT_MaxDislayTypes
	}
	[Token(Token = "0x2000296")]
	public class OVROverlaySample : MonoBehaviour
	{
		[Token(Token = "0x2000297")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D6FD8", Offset = "0x8D6FD8")]
		private sealed class <WaitforPVROverlay>d__30 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40010F9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40010FA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40010FB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public OVROverlaySample <>4__this;

			[Token(Token = "0x17000233")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000E6A")]
				[Address(RVA = "0xE878AC", Offset = "0xE878AC", VA = "0xE878AC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000234")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000E6C")]
				[Address(RVA = "0xE878F4", Offset = "0xE878F4", VA = "0xE878F4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000E67")]
			[Address(RVA = "0xE8767C", Offset = "0xE8767C", VA = "0xE8767C")]
			[DebuggerHidden]
			public <WaitforPVROverlay>d__30(int <>1__state)
			{
			}

			[Token(Token = "0x6000E68")]
			[Address(RVA = "0xE876A8", Offset = "0xE876A8", VA = "0xE876A8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000E69")]
			[Address(RVA = "0xE876AC", Offset = "0xE876AC", VA = "0xE876AC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000E6B")]
			[Address(RVA = "0xE878B4", Offset = "0xE878B4", VA = "0xE878B4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40010E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool inMenu;

		[Token(Token = "0x40010E2")]
		private const string ovrOverlayID = "OVROverlayID";

		[Token(Token = "0x40010E3")]
		private const string applicationID = "ApplicationID";

		[Token(Token = "0x40010E4")]
		private const string noneID = "NoneID";

		[Token(Token = "0x40010E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Toggle applicationRadioButton;

		[Token(Token = "0x40010E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Toggle noneRadioButton;

		[Token(Token = "0x40010E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DB4A8", Offset = "0x8DB4A8")]
		public GameObject mainCamera;

		[Token(Token = "0x40010E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject uiCamera;

		[Token(Token = "0x40010E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GameObject uiGeoParent;

		[Token(Token = "0x40010EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public GameObject worldspaceGeoParent;

		[Token(Token = "0x40010EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public PVROverlay cameraRenderOverlay;

		[Token(Token = "0x40010EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public PVROverlay renderingLabelOverlay;

		[Token(Token = "0x40010ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Texture applicationLabelTexture;

		[Token(Token = "0x40010EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Texture compositorLabelTexture;

		[Token(Token = "0x40010EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DB4E0", Offset = "0x8DB4E0")]
		public GameObject prefabForLevelLoadSim;

		[Token(Token = "0x40010F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public PVROverlay cubemapOverlay;

		[Token(Token = "0x40010F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public PVROverlay loadingTextQuadOverlay;

		[Token(Token = "0x40010F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public float distanceFromCamToLoadText;

		[Token(Token = "0x40010F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public float cubeSpawnRadius;

		[Token(Token = "0x40010F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public float heightBetweenItems;

		[Token(Token = "0x40010F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public int numObjectsPerLevel;

		[Token(Token = "0x40010F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public int numLevels;

		[Token(Token = "0x40010F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public int numLoopsTrigger;

		[Token(Token = "0x40010F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private List<GameObject> spawnedCubes;

		[Token(Token = "0x6000E57")]
		[Address(RVA = "0x1DBFD88", Offset = "0x1DBFD88", VA = "0x1DBFD88")]
		private void Start()
		{
		}

		[Token(Token = "0x6000E58")]
		[Address(RVA = "0x1DC05D4", Offset = "0x1DC05D4", VA = "0x1DC05D4")]
		private void Update()
		{
		}

		[Token(Token = "0x6000E59")]
		[Address(RVA = "0x1DC071C", Offset = "0x1DC071C", VA = "0x1DC071C")]
		private void ActivateWorldGeo()
		{
		}

		[Token(Token = "0x6000E5A")]
		[Address(RVA = "0x1DC0858", Offset = "0x1DC0858", VA = "0x1DC0858")]
		private void ActivatePVROverlay()
		{
		}

		[Token(Token = "0x6000E5B")]
		[Address(RVA = "0x1DC0994", Offset = "0x1DC0994", VA = "0x1DC0994")]
		private void ActivateNone()
		{
		}

		[Token(Token = "0x6000E5C")]
		[Address(RVA = "0x1DC06F0", Offset = "0x1DC06F0", VA = "0x1DC06F0")]
		private void TriggerLoad()
		{
		}

		[Token(Token = "0x6000E5D")]
		[Address(RVA = "0x1DC0A74", Offset = "0x1DC0A74", VA = "0x1DC0A74")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E44C8", Offset = "0x8E44C8")]
		private IEnumerator WaitforPVROverlay()
		{
			return null;
		}

		[Token(Token = "0x6000E5E")]
		[Address(RVA = "0x1DC0AEC", Offset = "0x1DC0AEC", VA = "0x1DC0AEC")]
		private void TriggerUnload()
		{
		}

		[Token(Token = "0x6000E5F")]
		[Address(RVA = "0x1DC01E0", Offset = "0x1DC01E0", VA = "0x1DC01E0")]
		private void CameraAndRenderTargetSetup()
		{
		}

		[Token(Token = "0x6000E60")]
		[Address(RVA = "0x1DC0C40", Offset = "0x1DC0C40", VA = "0x1DC0C40")]
		private void SimulateLevelLoad()
		{
		}

		[Token(Token = "0x6000E61")]
		[Address(RVA = "0x1DC0B20", Offset = "0x1DC0B20", VA = "0x1DC0B20")]
		private void ClearObjects()
		{
		}

		[Token(Token = "0x6000E62")]
		[Address(RVA = "0x1DC0F58", Offset = "0x1DC0F58", VA = "0x1DC0F58")]
		public void RadioPressed(string radioLabel, string group, Toggle t)
		{
		}

		[Token(Token = "0x6000E63")]
		[Address(RVA = "0x1DC1048", Offset = "0x1DC1048", VA = "0x1DC1048")]
		public OVROverlaySample()
		{
		}

		[Token(Token = "0x6000E64")]
		[Address(RVA = "0x1DC10D8", Offset = "0x1DC10D8", VA = "0x1DC10D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E4528", Offset = "0x8E4528")]
		private void <Start>b__24_0(Toggle t)
		{
		}

		[Token(Token = "0x6000E65")]
		[Address(RVA = "0x1DC1130", Offset = "0x1DC1130", VA = "0x1DC1130")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E4538", Offset = "0x8E4538")]
		private void <Start>b__24_1(Toggle t)
		{
		}

		[Token(Token = "0x6000E66")]
		[Address(RVA = "0x1DC1188", Offset = "0x1DC1188", VA = "0x1DC1188")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E4548", Offset = "0x8E4548")]
		private void <Start>b__24_2(Toggle t)
		{
		}
	}
}
namespace OVRTouchSample
{
	[Token(Token = "0x2000298")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x8D6FE8", Offset = "0x8D6FE8")]
	public class Hand : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000299")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D7048", Offset = "0x8D7048")]
		private sealed class <>c
		{
			[Token(Token = "0x4001118")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001119")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Collider, bool> <>9__28_0;

			[Token(Token = "0x6000E7A")]
			[Address(RVA = "0xE7D634", Offset = "0xE7D634", VA = "0xE7D634")]
			public <>c()
			{
			}

			[Token(Token = "0x6000E7B")]
			[Address(RVA = "0xE7D63C", Offset = "0xE7D63C", VA = "0xE7D63C")]
			internal bool <Start>b__28_0(Collider childCollider)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x40010FC")]
		public const string ANIM_LAYER_NAME_POINT = "Point Layer";

		[Token(Token = "0x40010FD")]
		public const string ANIM_LAYER_NAME_THUMB = "Thumb Layer";

		[Token(Token = "0x40010FE")]
		public const string ANIM_PARAM_NAME_FLEX = "Flex";

		[Token(Token = "0x40010FF")]
		public const string ANIM_PARAM_NAME_POSE = "Pose";

		[Token(Token = "0x4001100")]
		public const float THRESH_COLLISION_FLEX = 0.9f;

		[Token(Token = "0x4001101")]
		public const float INPUT_RATE_CHANGE = 20f;

		[Token(Token = "0x4001102")]
		public const float COLLIDER_SCALE_MIN = 0.01f;

		[Token(Token = "0x4001103")]
		public const float COLLIDER_SCALE_MAX = 1f;

		[Token(Token = "0x4001104")]
		public const float COLLIDER_SCALE_PER_SECOND = 1f;

		[Token(Token = "0x4001105")]
		public const float TRIGGER_DEBOUNCE_TIME = 0.05f;

		[Token(Token = "0x4001106")]
		public const float THUMB_DEBOUNCE_TIME = 0.15f;

		[Token(Token = "0x4001107")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private PVRInput.Controller m_controller;

		[Token(Token = "0x4001108")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Animator m_animator;

		[Token(Token = "0x4001109")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private HandPose m_defaultGrabPose;

		[Token(Token = "0x400110A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Collider[] m_colliders;

		[Token(Token = "0x400110B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool m_collisionEnabled;

		[Token(Token = "0x400110C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private PVRGrabber m_grabber;

		[Token(Token = "0x400110D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<Renderer> m_showAfterInputFocusAcquired;

		[Token(Token = "0x400110E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int m_animLayerIndexThumb;

		[Token(Token = "0x400110F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private int m_animLayerIndexPoint;

		[Token(Token = "0x4001110")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int m_animParamIndexFlex;

		[Token(Token = "0x4001111")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private int m_animParamIndexPose;

		[Token(Token = "0x4001112")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool m_isPointing;

		[Token(Token = "0x4001113")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		private bool m_isGivingThumbsUp;

		[Token(Token = "0x4001114")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float m_pointBlend;

		[Token(Token = "0x4001115")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float m_thumbsUpBlend;

		[Token(Token = "0x4001116")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private bool m_restoreOnInputAcquired;

		[Token(Token = "0x4001117")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float m_collisionScaleCurrent;

		[Token(Token = "0x6000E6D")]
		[Address(RVA = "0x133CDB8", Offset = "0x133CDB8", VA = "0x133CDB8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000E6E")]
		[Address(RVA = "0x133CE14", Offset = "0x133CE14", VA = "0x133CE14")]
		private void Start()
		{
		}

		[Token(Token = "0x6000E6F")]
		[Address(RVA = "0x133D40C", Offset = "0x133D40C", VA = "0x133D40C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000E70")]
		[Address(RVA = "0x133D668", Offset = "0x133D668", VA = "0x133D668")]
		private void Update()
		{
		}

		[Token(Token = "0x6000E71")]
		[Address(RVA = "0x133D7CC", Offset = "0x133D7CC", VA = "0x133D7CC")]
		private void UpdateCapTouchStates()
		{
		}

		[Token(Token = "0x6000E72")]
		[Address(RVA = "0x133DAD4", Offset = "0x133DAD4", VA = "0x133DAD4")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000E73")]
		[Address(RVA = "0x133DBCC", Offset = "0x133DBCC", VA = "0x133DBCC")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x6000E74")]
		[Address(RVA = "0x133DE6C", Offset = "0x133DE6C", VA = "0x133DE6C")]
		private void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x6000E75")]
		[Address(RVA = "0x133D864", Offset = "0x133D864", VA = "0x133D864")]
		private float InputValueRateChange(bool isDown, float value)
		{
			return default(float);
		}

		[Token(Token = "0x6000E76")]
		[Address(RVA = "0x133D8B8", Offset = "0x133D8B8", VA = "0x133D8B8")]
		private void UpdateAnimStates()
		{
		}

		[Token(Token = "0x6000E77")]
		[Address(RVA = "0x133D2B0", Offset = "0x133D2B0", VA = "0x133D2B0")]
		private void CollisionEnable(bool enabled)
		{
		}

		[Token(Token = "0x6000E78")]
		[Address(RVA = "0x133E02C", Offset = "0x133E02C", VA = "0x133E02C")]
		public Hand()
		{
		}
	}
	[Token(Token = "0x200029A")]
	public enum HandPoseId
	{
		[Token(Token = "0x400111B")]
		Default,
		[Token(Token = "0x400111C")]
		Generic,
		[Token(Token = "0x400111D")]
		PingPongBall,
		[Token(Token = "0x400111E")]
		Controller
	}
	[Token(Token = "0x200029B")]
	public class HandPose : MonoBehaviour
	{
		[Token(Token = "0x400111F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool m_allowPointing;

		[Token(Token = "0x4001120")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[SerializeField]
		private bool m_allowThumbsUp;

		[Token(Token = "0x4001121")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private HandPoseId m_poseId;

		[Token(Token = "0x17000235")]
		public bool AllowPointing
		{
			[Token(Token = "0x6000E7C")]
			[Address(RVA = "0x133E044", Offset = "0x133E044", VA = "0x133E044")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000236")]
		public bool AllowThumbsUp
		{
			[Token(Token = "0x6000E7D")]
			[Address(RVA = "0x133E04C", Offset = "0x133E04C", VA = "0x133E04C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000237")]
		public HandPoseId PoseId
		{
			[Token(Token = "0x6000E7E")]
			[Address(RVA = "0x133E054", Offset = "0x133E054", VA = "0x133E054")]
			get
			{
				return default(HandPoseId);
			}
		}

		[Token(Token = "0x6000E7F")]
		[Address(RVA = "0x133E05C", Offset = "0x133E05C", VA = "0x133E05C")]
		public HandPose()
		{
		}
	}
	[Token(Token = "0x200029C")]
	public class TouchController : MonoBehaviour
	{
		[Token(Token = "0x4001122")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private PVRInput.Controller m_controller;

		[Token(Token = "0x4001123")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Animator m_animator;

		[Token(Token = "0x4001124")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool m_restoreOnInputAcquired;

		[Token(Token = "0x6000E80")]
		[Address(RVA = "0x12E0BD0", Offset = "0x12E0BD0", VA = "0x12E0BD0")]
		private void Update()
		{
		}

		[Token(Token = "0x6000E81")]
		[Address(RVA = "0x12E1028", Offset = "0x12E1028", VA = "0x12E1028")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x6000E82")]
		[Address(RVA = "0x12E1084", Offset = "0x12E1084", VA = "0x12E1084")]
		private void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x6000E83")]
		[Address(RVA = "0x12E10C8", Offset = "0x12E10C8", VA = "0x12E10C8")]
		public TouchController()
		{
		}
	}
}
namespace Oculus.Spatializer.Propagation
{
	[Token(Token = "0x200029D")]
	public enum FaceType : uint
	{
		[Token(Token = "0x4001126")]
		TRIANGLES,
		[Token(Token = "0x4001127")]
		QUADS
	}
	[Token(Token = "0x200029E")]
	public enum MaterialProperty : uint
	{
		[Token(Token = "0x4001129")]
		ABSORPTION,
		[Token(Token = "0x400112A")]
		TRANSMISSION,
		[Token(Token = "0x400112B")]
		SCATTERING
	}
	[Token(Token = "0x200029F")]
	public struct MeshGroup
	{
		[Token(Token = "0x400112C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public UIntPtr indexOffset;

		[Token(Token = "0x400112D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public UIntPtr faceCount;

		[Token(Token = "0x400112E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public FaceType faceType;

		[Token(Token = "0x400112F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public IntPtr material;
	}
}
namespace Oculus.Avatar
{
	[Token(Token = "0x20002A0")]
	public static class AvatarLogger
	{
		[Token(Token = "0x4001130")]
		public const string LogAvatar = "[Avatars] - ";

		[Token(Token = "0x4001131")]
		public const string Tab = "    ";

		[Token(Token = "0x6000E84")]
		[Address(RVA = "0x1AE0F34", Offset = "0x1AE0F34", VA = "0x1AE0F34")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x8E45A8", Offset = "0x8E45A8")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x8E45A8", Offset = "0x8E45A8")]
		public static void Log(string logMsg)
		{
		}

		[Token(Token = "0x6000E85")]
		[Address(RVA = "0x1AE0FC4", Offset = "0x1AE0FC4", VA = "0x1AE0FC4")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x8E4608", Offset = "0x8E4608")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x8E4608", Offset = "0x8E4608")]
		public static void Log(string logMsg, UnityEngine.Object context)
		{
		}

		[Token(Token = "0x6000E86")]
		[Address(RVA = "0x1AE1064", Offset = "0x1AE1064", VA = "0x1AE1064")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x8E4668", Offset = "0x8E4668")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x8E4668", Offset = "0x8E4668")]
		public static void LogWarning(string logMsg)
		{
		}

		[Token(Token = "0x6000E87")]
		[Address(RVA = "0x1AE10F4", Offset = "0x1AE10F4", VA = "0x1AE10F4")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x8E46C8", Offset = "0x8E46C8")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x8E46C8", Offset = "0x8E46C8")]
		public static void LogError(string logMsg)
		{
		}

		[Token(Token = "0x6000E88")]
		[Address(RVA = "0x1AE1184", Offset = "0x1AE1184", VA = "0x1AE1184")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x8E4728", Offset = "0x8E4728")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x8E4728", Offset = "0x8E4728")]
		public static void LogError(string logMsg, UnityEngine.Object context)
		{
		}
	}
	[Token(Token = "0x20002A1")]
	public class CAPI
	{
		[Token(Token = "0x20002A2")]
		public delegate void LoggingDelegate(IntPtr str);

		[Token(Token = "0x20002A3")]
		public enum Result
		{
			[Token(Token = "0x400113D")]
			Success = 0,
			[Token(Token = "0x400113E")]
			Failure = -1000,
			[Token(Token = "0x400113F")]
			Failure_InvalidParameter = -1001,
			[Token(Token = "0x4001140")]
			Failure_NotInitialized = -1002,
			[Token(Token = "0x4001141")]
			Failure_InvalidOperation = -1003,
			[Token(Token = "0x4001142")]
			Failure_Unsupported = -1004,
			[Token(Token = "0x4001143")]
			Failure_NotYetImplemented = -1005,
			[Token(Token = "0x4001144")]
			Failure_OperationFailed = -1006,
			[Token(Token = "0x4001145")]
			Failure_InsufficientSize = -1007
		}

		[Token(Token = "0x20002A4")]
		private static class OVRP_1_30_0
		{
			[Token(Token = "0x4001146")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly Version version;

			[PreserveSig]
			[Token(Token = "0x6000F1D")]
			[Address(RVA = "0x1049E98", Offset = "0x1049E98", VA = "0x1049E98")]
			public static extern Result ovrp_SendEvent2(string name, string param, string source);
		}

		[Token(Token = "0x4001132")]
		private const string LibFile = "ovravatarloader";

		[Token(Token = "0x4001133")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static IntPtr nativeVisemeData;

		[Token(Token = "0x4001134")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static IntPtr nativeGazeTargetsData;

		[Token(Token = "0x4001135")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static IntPtr nativeAvatarLightsData;

		[Token(Token = "0x4001136")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static IntPtr DebugLineCountData;

		[Token(Token = "0x4001137")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static float[] scratchBufferFloat;

		[Token(Token = "0x4001138")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static GameObject debugLineGo;

		[Token(Token = "0x4001139")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static string SDKRuntimePrefix;

		[Token(Token = "0x400113A")]
		private const string ovrPluginDLL = "OVRPlugin";

		[Token(Token = "0x400113B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static Version ovrPluginVersion;

		[PreserveSig]
		[Token(Token = "0x6000E89")]
		[Address(RVA = "0x12F2AF4", Offset = "0x12F2AF4", VA = "0x12F2AF4")]
		public static extern void ovrAvatar_InitializeAndroidUnity(string appID);

		[Token(Token = "0x6000E8A")]
		[Address(RVA = "0x12F2B84", Offset = "0x12F2B84", VA = "0x12F2B84")]
		public static void Initialize()
		{
		}

		[Token(Token = "0x6000E8B")]
		[Address(RVA = "0x12F2DA8", Offset = "0x12F2DA8", VA = "0x12F2DA8")]
		public static void Shutdown()
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000E8C")]
		[Address(RVA = "0x12F2E94", Offset = "0x12F2E94", VA = "0x12F2E94")]
		public static extern void ovrAvatar_Shutdown();

		[PreserveSig]
		[Token(Token = "0x6000E8D")]
		[Address(RVA = "0x12F2F04", Offset = "0x12F2F04", VA = "0x12F2F04")]
		public static extern IntPtr ovrAvatarMessage_Pop();

		[PreserveSig]
		[Token(Token = "0x6000E8E")]
		[Address(RVA = "0x12F2F78", Offset = "0x12F2F78", VA = "0x12F2F78")]
		public static extern ovrAvatarMessageType ovrAvatarMessage_GetType(IntPtr msg);

		[Token(Token = "0x6000E8F")]
		[Address(RVA = "0x12F2FF8", Offset = "0x12F2FF8", VA = "0x12F2FF8")]
		public static ovrAvatarMessage_AvatarSpecification ovrAvatarMessage_GetAvatarSpecification(IntPtr msg)
		{
			return default(ovrAvatarMessage_AvatarSpecification);
		}

		[PreserveSig]
		[Token(Token = "0x6000E90")]
		[Address(RVA = "0x12F313C", Offset = "0x12F313C", VA = "0x12F313C")]
		private static extern IntPtr ovrAvatarMessage_GetAvatarSpecification_Native(IntPtr msg);

		[Token(Token = "0x6000E91")]
		[Address(RVA = "0x12F31BC", Offset = "0x12F31BC", VA = "0x12F31BC")]
		public static ovrAvatarMessage_AssetLoaded ovrAvatarMessage_GetAssetLoaded(IntPtr msg)
		{
			return default(ovrAvatarMessage_AssetLoaded);
		}

		[PreserveSig]
		[Token(Token = "0x6000E92")]
		[Address(RVA = "0x12F3300", Offset = "0x12F3300", VA = "0x12F3300")]
		private static extern IntPtr ovrAvatarMessage_GetAssetLoaded_Native(IntPtr msg);

		[PreserveSig]
		[Token(Token = "0x6000E93")]
		[Address(RVA = "0x12F3380", Offset = "0x12F3380", VA = "0x12F3380")]
		public static extern void ovrAvatarMessage_Free(IntPtr msg);

		[PreserveSig]
		[Token(Token = "0x6000E94")]
		[Address(RVA = "0x12F3400", Offset = "0x12F3400", VA = "0x12F3400")]
		public static extern IntPtr ovrAvatarSpecificationRequest_Create(ulong userID);

		[PreserveSig]
		[Token(Token = "0x6000E95")]
		[Address(RVA = "0x12F3480", Offset = "0x12F3480", VA = "0x12F3480")]
		public static extern void ovrAvatarSpecificationRequest_Destroy(IntPtr specificationRequest);

		[PreserveSig]
		[Token(Token = "0x6000E96")]
		[Address(RVA = "0x12F3500", Offset = "0x12F3500", VA = "0x12F3500")]
		public static extern void ovrAvatarSpecificationRequest_SetCombineMeshes(IntPtr specificationRequest, bool useCombinedMesh);

		[PreserveSig]
		[Token(Token = "0x6000E97")]
		[Address(RVA = "0x12F3590", Offset = "0x12F3590", VA = "0x12F3590")]
		public static extern void ovrAvatarSpecificationRequest_SetLookAndFeelVersion(IntPtr specificationRequest, ovrAvatarLookAndFeelVersion version);

		[PreserveSig]
		[Token(Token = "0x6000E98")]
		[Address(RVA = "0x12F3620", Offset = "0x12F3620", VA = "0x12F3620")]
		public static extern void ovrAvatarSpecificationRequest_SetLevelOfDetail(IntPtr specificationRequest, ovrAvatarAssetLevelOfDetail lod);

		[PreserveSig]
		[Token(Token = "0x6000E99")]
		[Address(RVA = "0x12F36B0", Offset = "0x12F36B0", VA = "0x12F36B0")]
		public static extern void ovrAvatar_RequestAvatarSpecification(ulong userID);

		[PreserveSig]
		[Token(Token = "0x6000E9A")]
		[Address(RVA = "0x12F3730", Offset = "0x12F3730", VA = "0x12F3730")]
		public static extern void ovrAvatar_RequestAvatarSpecificationFromSpecRequest(IntPtr specificationRequest);

		[PreserveSig]
		[Token(Token = "0x6000E9B")]
		[Address(RVA = "0x12F37B0", Offset = "0x12F37B0", VA = "0x12F37B0")]
		public static extern void ovrAvatarSpecificationRequest_SetFallbackLookAndFeelVersion(IntPtr specificationRequest, ovrAvatarLookAndFeelVersion version);

		[PreserveSig]
		[Token(Token = "0x6000E9C")]
		[Address(RVA = "0x12F3840", Offset = "0x12F3840", VA = "0x12F3840")]
		public static extern void ovrAvatarSpecificationRequest_SetExpressiveFlag(IntPtr specificationRequest, bool enable);

		[PreserveSig]
		[Token(Token = "0x6000E9D")]
		[Address(RVA = "0x12F38D0", Offset = "0x12F38D0", VA = "0x12F38D0")]
		public static extern IntPtr ovrAvatar_Create(IntPtr avatarSpecification, ovrAvatarCapabilities capabilities);

		[PreserveSig]
		[Token(Token = "0x6000E9E")]
		[Address(RVA = "0x12F3960", Offset = "0x12F3960", VA = "0x12F3960")]
		public static extern void ovrAvatar_Destroy(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x6000E9F")]
		[Address(RVA = "0x12F39E0", Offset = "0x12F39E0", VA = "0x12F39E0")]
		public static extern void ovrAvatarPose_UpdateBody(IntPtr avatar, ovrAvatarTransform headPose);

		[Token(Token = "0x6000EA0")]
		[Address(RVA = "0x12F3A80", Offset = "0x12F3A80", VA = "0x12F3A80")]
		public static void ovrAvatarPose_UpdateVoiceVisualization(IntPtr avatar, float[] pcmData)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000EA1")]
		[Address(RVA = "0x12F3AFC", Offset = "0x12F3AFC", VA = "0x12F3AFC")]
		private static extern void ovrAvatarPose_UpdateVoiceVisualization_Native(IntPtr avatar, uint pcmDataSize, [In] float[] pcmData);

		[PreserveSig]
		[Token(Token = "0x6000EA2")]
		[Address(RVA = "0x12F3B9C", Offset = "0x12F3B9C", VA = "0x12F3B9C")]
		public static extern void ovrAvatarPose_UpdateHands(IntPtr avatar, ovrAvatarHandInputState inputStateLeft, ovrAvatarHandInputState inputStateRight);

		[PreserveSig]
		[Token(Token = "0x6000EA3")]
		[Address(RVA = "0x12F3C5C", Offset = "0x12F3C5C", VA = "0x12F3C5C")]
		public static extern void ovrAvatarPose_UpdateHandsWithType(IntPtr avatar, ovrAvatarHandInputState inputStateLeft, ovrAvatarHandInputState inputStateRight, ovrAvatarControllerType type);

		[PreserveSig]
		[Token(Token = "0x6000EA4")]
		[Address(RVA = "0x12F3D2C", Offset = "0x12F3D2C", VA = "0x12F3D2C")]
		public static extern void ovrAvatarPose_Finalize(IntPtr avatar, float elapsedSeconds);

		[PreserveSig]
		[Token(Token = "0x6000EA5")]
		[Address(RVA = "0x12F3DBC", Offset = "0x12F3DBC", VA = "0x12F3DBC")]
		public static extern void ovrAvatar_SetLeftControllerVisibility(IntPtr avatar, bool show);

		[PreserveSig]
		[Token(Token = "0x6000EA6")]
		[Address(RVA = "0x12F3E4C", Offset = "0x12F3E4C", VA = "0x12F3E4C")]
		public static extern void ovrAvatar_SetRightControllerVisibility(IntPtr avatar, bool show);

		[PreserveSig]
		[Token(Token = "0x6000EA7")]
		[Address(RVA = "0x12F3EDC", Offset = "0x12F3EDC", VA = "0x12F3EDC")]
		public static extern void ovrAvatar_SetLeftHandVisibility(IntPtr avatar, bool show);

		[PreserveSig]
		[Token(Token = "0x6000EA8")]
		[Address(RVA = "0x12F3F6C", Offset = "0x12F3F6C", VA = "0x12F3F6C")]
		public static extern void ovrAvatar_SetRightHandVisibility(IntPtr avatar, bool show);

		[PreserveSig]
		[Token(Token = "0x6000EA9")]
		[Address(RVA = "0x12F3FFC", Offset = "0x12F3FFC", VA = "0x12F3FFC")]
		public static extern uint ovrAvatarComponent_Count(IntPtr avatar);

		[Token(Token = "0x6000EAA")]
		[Address(RVA = "0x12F407C", Offset = "0x12F407C", VA = "0x12F407C")]
		public static void ovrAvatarComponent_Get(IntPtr avatar, uint index, bool includeName, ref ovrAvatarComponent component)
		{
		}

		[Token(Token = "0x6000EAB")]
		[Address(RVA = "0x12F4198", Offset = "0x12F4198", VA = "0x12F4198")]
		public static void ovrAvatarComponent_Get(IntPtr componentPtr, bool includeName, ref ovrAvatarComponent component)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000EAC")]
		[Address(RVA = "0x12F4108", Offset = "0x12F4108", VA = "0x12F4108")]
		public static extern IntPtr ovrAvatarComponent_Get_Native(IntPtr avatar, uint index);

		[Token(Token = "0x6000EAD")]
		[Address(RVA = "0x12F43B8", Offset = "0x12F43B8", VA = "0x12F43B8")]
		public static bool ovrAvatarPose_GetBaseComponent(IntPtr avatar, ref ovrAvatarBaseComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6000EAE")]
		[Address(RVA = "0x12F4528", Offset = "0x12F4528", VA = "0x12F4528")]
		private static extern IntPtr ovrAvatarPose_GetBaseComponent_Native(IntPtr avatar);

		[Token(Token = "0x6000EAF")]
		public static IntPtr MarshalRenderComponent<T>(IntPtr ptr) where T : struct
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6000EB0")]
		[Address(RVA = "0x12F45A8", Offset = "0x12F45A8", VA = "0x12F45A8")]
		public static bool ovrAvatarPose_GetBodyComponent(IntPtr avatar, ref ovrAvatarBodyComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6000EB1")]
		[Address(RVA = "0x12F4850", Offset = "0x12F4850", VA = "0x12F4850")]
		private static extern IntPtr ovrAvatarPose_GetBodyComponent_Native(IntPtr avatar);

		[Token(Token = "0x6000EB2")]
		[Address(RVA = "0x12F48D0", Offset = "0x12F48D0", VA = "0x12F48D0")]
		public static bool ovrAvatarPose_GetLeftControllerComponent(IntPtr avatar, ref ovrAvatarControllerComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6000EB3")]
		[Address(RVA = "0x12F4A40", Offset = "0x12F4A40", VA = "0x12F4A40")]
		private static extern IntPtr ovrAvatarPose_GetLeftControllerComponent_Native(IntPtr avatar);

		[Token(Token = "0x6000EB4")]
		[Address(RVA = "0x12F4AC0", Offset = "0x12F4AC0", VA = "0x12F4AC0")]
		public static bool ovrAvatarPose_GetRightControllerComponent(IntPtr avatar, ref ovrAvatarControllerComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6000EB5")]
		[Address(RVA = "0x12F4C30", Offset = "0x12F4C30", VA = "0x12F4C30")]
		private static extern IntPtr ovrAvatarPose_GetRightControllerComponent_Native(IntPtr avatar);

		[Token(Token = "0x6000EB6")]
		[Address(RVA = "0x12F4CB0", Offset = "0x12F4CB0", VA = "0x12F4CB0")]
		public static bool ovrAvatarPose_GetLeftHandComponent(IntPtr avatar, ref ovrAvatarHandComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6000EB7")]
		[Address(RVA = "0x12F4E20", Offset = "0x12F4E20", VA = "0x12F4E20")]
		private static extern IntPtr ovrAvatarPose_GetLeftHandComponent_Native(IntPtr avatar);

		[Token(Token = "0x6000EB8")]
		[Address(RVA = "0x12F4EA0", Offset = "0x12F4EA0", VA = "0x12F4EA0")]
		public static bool ovrAvatarPose_GetRightHandComponent(IntPtr avatar, ref ovrAvatarHandComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6000EB9")]
		[Address(RVA = "0x12F5010", Offset = "0x12F5010", VA = "0x12F5010")]
		private static extern IntPtr ovrAvatarPose_GetRightHandComponent_Native(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x6000EBA")]
		[Address(RVA = "0x12F5090", Offset = "0x12F5090", VA = "0x12F5090")]
		public static extern void ovrAvatarAsset_BeginLoading(ulong assetID);

		[PreserveSig]
		[Token(Token = "0x6000EBB")]
		[Address(RVA = "0x12F5110", Offset = "0x12F5110", VA = "0x12F5110")]
		public static extern bool ovrAvatarAsset_BeginLoadingLOD(ulong assetId, ovrAvatarAssetLevelOfDetail lod);

		[PreserveSig]
		[Token(Token = "0x6000EBC")]
		[Address(RVA = "0x12F51A8", Offset = "0x12F51A8", VA = "0x12F51A8")]
		public static extern ovrAvatarAssetType ovrAvatarAsset_GetType(IntPtr assetHandle);

		[Token(Token = "0x6000EBD")]
		[Address(RVA = "0x12F5228", Offset = "0x12F5228", VA = "0x12F5228")]
		public static ovrAvatarMeshAssetData ovrAvatarAsset_GetMeshData(IntPtr assetPtr)
		{
			return default(ovrAvatarMeshAssetData);
		}

		[Token(Token = "0x6000EBE")]
		[Address(RVA = "0x12F5400", Offset = "0x12F5400", VA = "0x12F5400")]
		public static ovrAvatarMeshAssetDataV2 ovrAvatarAsset_GetCombinedMeshData(IntPtr assetPtr)
		{
			return default(ovrAvatarMeshAssetDataV2);
		}

		[PreserveSig]
		[Token(Token = "0x6000EBF")]
		[Address(RVA = "0x12F5558", Offset = "0x12F5558", VA = "0x12F5558")]
		private static extern IntPtr ovrAvatarAsset_GetCombinedMeshData_Native(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x6000EC0")]
		[Address(RVA = "0x12F5380", Offset = "0x12F5380", VA = "0x12F5380")]
		private static extern IntPtr ovrAvatarAsset_GetMeshData_Native(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x6000EC1")]
		[Address(RVA = "0x12F55D8", Offset = "0x12F55D8", VA = "0x12F55D8")]
		public static extern uint ovrAvatarAsset_GetMeshBlendShapeCount(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x6000EC2")]
		[Address(RVA = "0x12F5658", Offset = "0x12F5658", VA = "0x12F5658")]
		public static extern IntPtr ovrAvatarAsset_GetMeshBlendShapeName(IntPtr assetPtr, uint index);

		[PreserveSig]
		[Token(Token = "0x6000EC3")]
		[Address(RVA = "0x12F56E8", Offset = "0x12F56E8", VA = "0x12F56E8")]
		public static extern uint ovrAvatarAsset_GetSubmeshCount(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x6000EC4")]
		[Address(RVA = "0x12F5768", Offset = "0x12F5768", VA = "0x12F5768")]
		public static extern uint ovrAvatarAsset_GetSubmeshLastIndex(IntPtr assetPtr, uint index);

		[PreserveSig]
		[Token(Token = "0x6000EC5")]
		[Address(RVA = "0x12F57F8", Offset = "0x12F57F8", VA = "0x12F57F8")]
		public static extern IntPtr ovrAvatarAsset_GetMeshBlendShapeVertices(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x6000EC6")]
		[Address(RVA = "0x12F5878", Offset = "0x12F5878", VA = "0x12F5878")]
		public static extern IntPtr ovrAvatarAsset_GetAvatar(IntPtr assetHandle);

		[Token(Token = "0x6000EC7")]
		[Address(RVA = "0x12F58F8", Offset = "0x12F58F8", VA = "0x12F58F8")]
		public static ulong[] ovrAvatarAsset_GetCombinedMeshIDs(IntPtr assetHandle)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000EC8")]
		[Address(RVA = "0x12F5B84", Offset = "0x12F5B84", VA = "0x12F5B84")]
		public static extern IntPtr ovrAvatarAsset_GetCombinedMeshIDs_Native(IntPtr assetHandle, IntPtr count);

		[Token(Token = "0x6000EC9")]
		[Address(RVA = "0x12F5C14", Offset = "0x12F5C14", VA = "0x12F5C14")]
		public static void ovrAvatar_GetCombinedMeshAlphaData(IntPtr avatar, ref ulong textureID, ref Vector4 offset)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000ECA")]
		[Address(RVA = "0x12F5E44", Offset = "0x12F5E44", VA = "0x12F5E44")]
		public static extern IntPtr ovrAvatar_GetCombinedMeshAlphaData_Native(IntPtr avatar, IntPtr textureIDPtr, IntPtr offsetPtr);

		[Token(Token = "0x6000ECB")]
		[Address(RVA = "0x12F5EDC", Offset = "0x12F5EDC", VA = "0x12F5EDC")]
		public static ovrAvatarTextureAssetData ovrAvatarAsset_GetTextureData(IntPtr assetPtr)
		{
			return default(ovrAvatarTextureAssetData);
		}

		[PreserveSig]
		[Token(Token = "0x6000ECC")]
		[Address(RVA = "0x12F602C", Offset = "0x12F602C", VA = "0x12F602C")]
		private static extern IntPtr ovrAvatarAsset_GetTextureData_Native(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x6000ECD")]
		[Address(RVA = "0x12F60AC", Offset = "0x12F60AC", VA = "0x12F60AC")]
		private static extern IntPtr ovrAvatarAsset_GetMaterialData_Native(IntPtr assetPtr);

		[Token(Token = "0x6000ECE")]
		[Address(RVA = "0x12F612C", Offset = "0x12F612C", VA = "0x12F612C")]
		public static ovrAvatarMaterialState ovrAvatarAsset_GetMaterialState(IntPtr assetPtr)
		{
			return default(ovrAvatarMaterialState);
		}

		[PreserveSig]
		[Token(Token = "0x6000ECF")]
		[Address(RVA = "0x12F6280", Offset = "0x12F6280", VA = "0x12F6280")]
		public static extern ovrAvatarRenderPartType ovrAvatarRenderPart_GetType(IntPtr renderPart);

		[Token(Token = "0x6000ED0")]
		[Address(RVA = "0x12F6300", Offset = "0x12F6300", VA = "0x12F6300")]
		public static ovrAvatarRenderPart_SkinnedMeshRender ovrAvatarRenderPart_GetSkinnedMeshRender(IntPtr renderPart)
		{
			return default(ovrAvatarRenderPart_SkinnedMeshRender);
		}

		[PreserveSig]
		[Token(Token = "0x6000ED1")]
		[Address(RVA = "0x12F6454", Offset = "0x12F6454", VA = "0x12F6454")]
		private static extern IntPtr ovrAvatarRenderPart_GetSkinnedMeshRender_Native(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000ED2")]
		[Address(RVA = "0x12F64D4", Offset = "0x12F64D4", VA = "0x12F64D4")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRender_GetTransform(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000ED3")]
		[Address(RVA = "0x12F6564", Offset = "0x12F6564", VA = "0x12F6564")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBS_GetTransform(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000ED4")]
		[Address(RVA = "0x12F65F4", Offset = "0x12F65F4", VA = "0x12F65F4")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBSV2_GetTransform(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000ED5")]
		[Address(RVA = "0x12F6684", Offset = "0x12F6684", VA = "0x12F6684")]
		public static extern ovrAvatarVisibilityFlags ovrAvatarSkinnedMeshRender_GetVisibilityMask(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000ED6")]
		[Address(RVA = "0x12F6704", Offset = "0x12F6704", VA = "0x12F6704")]
		public static extern bool ovrAvatarSkinnedMeshRender_MaterialStateChanged(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000ED7")]
		[Address(RVA = "0x12F678C", Offset = "0x12F678C", VA = "0x12F678C")]
		public static extern bool ovrAvatarSkinnedMeshRenderPBSV2_MaterialStateChanged(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000ED8")]
		[Address(RVA = "0x12F6814", Offset = "0x12F6814", VA = "0x12F6814")]
		public static extern ovrAvatarVisibilityFlags ovrAvatarSkinnedMeshRenderPBS_GetVisibilityMask(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000ED9")]
		[Address(RVA = "0x12F6894", Offset = "0x12F6894", VA = "0x12F6894")]
		public static extern ovrAvatarVisibilityFlags ovrAvatarSkinnedMeshRenderPBSV2_GetVisibilityMask(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000EDA")]
		[Address(RVA = "0x12F6914", Offset = "0x12F6914", VA = "0x12F6914")]
		public static extern ovrAvatarMaterialState ovrAvatarSkinnedMeshRender_GetMaterialState(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000EDB")]
		[Address(RVA = "0x12F69C8", Offset = "0x12F69C8", VA = "0x12F69C8")]
		public static extern ovrAvatarPBSMaterialState ovrAvatarSkinnedMeshRenderPBSV2_GetPBSMaterialState(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000EDC")]
		[Address(RVA = "0x12F6A58", Offset = "0x12F6A58", VA = "0x12F6A58")]
		public static extern ovrAvatarExpressiveParameters ovrAvatar_GetExpressiveParameters(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x6000EDD")]
		[Address(RVA = "0x12F6AE8", Offset = "0x12F6AE8", VA = "0x12F6AE8")]
		public static extern ulong ovrAvatarSkinnedMeshRender_GetDirtyJoints(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000EDE")]
		[Address(RVA = "0x12F6B68", Offset = "0x12F6B68", VA = "0x12F6B68")]
		public static extern ulong ovrAvatarSkinnedMeshRenderPBS_GetDirtyJoints(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000EDF")]
		[Address(RVA = "0x12F6BE8", Offset = "0x12F6BE8", VA = "0x12F6BE8")]
		public static extern ulong ovrAvatarSkinnedMeshRenderPBSV2_GetDirtyJoints(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000EE0")]
		[Address(RVA = "0x12F6C68", Offset = "0x12F6C68", VA = "0x12F6C68")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRender_GetJointTransform(IntPtr renderPart, uint jointIndex);

		[PreserveSig]
		[Token(Token = "0x6000EE1")]
		[Address(RVA = "0x12F6D00", Offset = "0x12F6D00", VA = "0x12F6D00")]
		public static extern void ovrAvatar_SetActionUnitOnsetSpeed(IntPtr avatar, float onsetSpeed);

		[PreserveSig]
		[Token(Token = "0x6000EE2")]
		[Address(RVA = "0x12F6D90", Offset = "0x12F6D90", VA = "0x12F6D90")]
		public static extern void ovrAvatar_SetActionUnitFalloffSpeed(IntPtr avatar, float falloffSpeed);

		[PreserveSig]
		[Token(Token = "0x6000EE3")]
		[Address(RVA = "0x12F6E20", Offset = "0x12F6E20", VA = "0x12F6E20")]
		public static extern void ovrAvatar_SetVisemeMultiplier(IntPtr avatar, float visemeMultiplier);

		[PreserveSig]
		[Token(Token = "0x6000EE4")]
		[Address(RVA = "0x12F6EB0", Offset = "0x12F6EB0", VA = "0x12F6EB0")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBS_GetJointTransform(IntPtr renderPart, uint jointIndex);

		[PreserveSig]
		[Token(Token = "0x6000EE5")]
		[Address(RVA = "0x12F6F48", Offset = "0x12F6F48", VA = "0x12F6F48")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBSV2_GetJointTransform(IntPtr renderPart, uint jointIndex);

		[PreserveSig]
		[Token(Token = "0x6000EE6")]
		[Address(RVA = "0x12F6FE0", Offset = "0x12F6FE0", VA = "0x12F6FE0")]
		public static extern ulong ovrAvatarSkinnedMeshRenderPBS_GetAlbedoTextureAssetID(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000EE7")]
		[Address(RVA = "0x12F7060", Offset = "0x12F7060", VA = "0x12F7060")]
		public static extern ulong ovrAvatarSkinnedMeshRenderPBS_GetSurfaceTextureAssetID(IntPtr renderPart);

		[Token(Token = "0x6000EE8")]
		[Address(RVA = "0x12F70E0", Offset = "0x12F70E0", VA = "0x12F70E0")]
		public static ovrAvatarRenderPart_SkinnedMeshRenderPBS ovrAvatarRenderPart_GetSkinnedMeshRenderPBS(IntPtr renderPart)
		{
			return default(ovrAvatarRenderPart_SkinnedMeshRenderPBS);
		}

		[PreserveSig]
		[Token(Token = "0x6000EE9")]
		[Address(RVA = "0x12F7234", Offset = "0x12F7234", VA = "0x12F7234")]
		private static extern IntPtr ovrAvatarRenderPart_GetSkinnedMeshRenderPBS_Native(IntPtr renderPart);

		[Token(Token = "0x6000EEA")]
		[Address(RVA = "0x12F72B4", Offset = "0x12F72B4", VA = "0x12F72B4")]
		public static ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2 ovrAvatarRenderPart_GetSkinnedMeshRenderPBSV2(IntPtr renderPart)
		{
			return default(ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2);
		}

		[PreserveSig]
		[Token(Token = "0x6000EEB")]
		[Address(RVA = "0x12F7408", Offset = "0x12F7408", VA = "0x12F7408")]
		private static extern IntPtr ovrAvatarRenderPart_GetSkinnedMeshRenderPBSV2_Native(IntPtr renderPart);

		[Token(Token = "0x6000EEC")]
		[Address(RVA = "0x12F7488", Offset = "0x12F7488", VA = "0x12F7488")]
		public static void ovrAvatarSkinnedMeshRender_GetBlendShapeParams(IntPtr renderPart, ref ovrAvatarBlendShapeParams blendParams)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000EED")]
		[Address(RVA = "0x12F75C4", Offset = "0x12F75C4", VA = "0x12F75C4")]
		private static extern IntPtr ovrAvatarSkinnedMeshRender_GetBlendShapeParams_Native(IntPtr renderPart);

		[Token(Token = "0x6000EEE")]
		[Address(RVA = "0x12F7644", Offset = "0x12F7644", VA = "0x12F7644")]
		public static ovrAvatarRenderPart_ProjectorRender ovrAvatarRenderPart_GetProjectorRender(IntPtr renderPart)
		{
			return default(ovrAvatarRenderPart_ProjectorRender);
		}

		[Token(Token = "0x6000EEF")]
		[Address(RVA = "0x12F7818", Offset = "0x12F7818", VA = "0x12F7818")]
		public static ovrAvatarPBSMaterialState[] ovrAvatar_GetBodyPBSMaterialStates(IntPtr renderPart)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000EF0")]
		[Address(RVA = "0x12F7AF8", Offset = "0x12F7AF8", VA = "0x12F7AF8")]
		private static extern IntPtr ovrAvatar_GetBodyPBSMaterialStates_Native(IntPtr avatar, IntPtr count);

		[PreserveSig]
		[Token(Token = "0x6000EF1")]
		[Address(RVA = "0x12F7798", Offset = "0x12F7798", VA = "0x12F7798")]
		private static extern IntPtr ovrAvatarRenderPart_GetProjectorRender_Native(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000EF2")]
		[Address(RVA = "0x12F7B88", Offset = "0x12F7B88", VA = "0x12F7B88")]
		public static extern uint ovrAvatar_GetReferencedAssetCount(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x6000EF3")]
		[Address(RVA = "0x12F7C08", Offset = "0x12F7C08", VA = "0x12F7C08")]
		public static extern ulong ovrAvatar_GetReferencedAsset(IntPtr avatar, uint index);

		[PreserveSig]
		[Token(Token = "0x6000EF4")]
		[Address(RVA = "0x12F7C98", Offset = "0x12F7C98", VA = "0x12F7C98")]
		public static extern void ovrAvatar_SetLeftHandGesture(IntPtr avatar, ovrAvatarHandGesture gesture);

		[PreserveSig]
		[Token(Token = "0x6000EF5")]
		[Address(RVA = "0x12F7D28", Offset = "0x12F7D28", VA = "0x12F7D28")]
		public static extern void ovrAvatar_SetRightHandGesture(IntPtr avatar, ovrAvatarHandGesture gesture);

		[PreserveSig]
		[Token(Token = "0x6000EF6")]
		[Address(RVA = "0x12F7DB8", Offset = "0x12F7DB8", VA = "0x12F7DB8")]
		public static extern void ovrAvatar_SetLeftHandCustomGesture(IntPtr avatar, uint jointCount, [In] ovrAvatarTransform[] customJointTransforms);

		[PreserveSig]
		[Token(Token = "0x6000EF7")]
		[Address(RVA = "0x12F7E58", Offset = "0x12F7E58", VA = "0x12F7E58")]
		public static extern void ovrAvatar_SetRightHandCustomGesture(IntPtr avatar, uint jointCount, [In] ovrAvatarTransform[] customJointTransforms);

		[PreserveSig]
		[Token(Token = "0x6000EF8")]
		[Address(RVA = "0x12F7EF8", Offset = "0x12F7EF8", VA = "0x12F7EF8")]
		public static extern void ovrAvatar_UpdatePoseFromPacket(IntPtr avatar, IntPtr packet, float secondsFromStart);

		[PreserveSig]
		[Token(Token = "0x6000EF9")]
		[Address(RVA = "0x12F7F98", Offset = "0x12F7F98", VA = "0x12F7F98")]
		public static extern void ovrAvatarPacket_BeginRecording(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x6000EFA")]
		[Address(RVA = "0x12F8018", Offset = "0x12F8018", VA = "0x12F8018")]
		public static extern IntPtr ovrAvatarPacket_EndRecording(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x6000EFB")]
		[Address(RVA = "0x12F8098", Offset = "0x12F8098", VA = "0x12F8098")]
		public static extern uint ovrAvatarPacket_GetSize(IntPtr packet);

		[PreserveSig]
		[Token(Token = "0x6000EFC")]
		[Address(RVA = "0x12F8118", Offset = "0x12F8118", VA = "0x12F8118")]
		public static extern float ovrAvatarPacket_GetDurationSeconds(IntPtr packet);

		[PreserveSig]
		[Token(Token = "0x6000EFD")]
		[Address(RVA = "0x12F8198", Offset = "0x12F8198", VA = "0x12F8198")]
		public static extern void ovrAvatarPacket_Free(IntPtr packet);

		[PreserveSig]
		[Token(Token = "0x6000EFE")]
		[Address(RVA = "0x12F8218", Offset = "0x12F8218", VA = "0x12F8218")]
		public static extern bool ovrAvatarPacket_Write(IntPtr packet, uint bufferSize, [Out] byte[] buffer);

		[PreserveSig]
		[Token(Token = "0x6000EFF")]
		[Address(RVA = "0x12F8340", Offset = "0x12F8340", VA = "0x12F8340")]
		public static extern IntPtr ovrAvatarPacket_Read(uint bufferSize, [In] byte[] buffer);

		[PreserveSig]
		[Token(Token = "0x6000F00")]
		[Address(RVA = "0x12F83D8", Offset = "0x12F83D8", VA = "0x12F83D8")]
		private static extern void ovrAvatar_SetInternalForceASTCTextures(bool value);

		[Token(Token = "0x6000F01")]
		[Address(RVA = "0x12F8458", Offset = "0x12F8458", VA = "0x12F8458")]
		public static void ovrAvatar_SetForceASTCTextures(bool value)
		{
		}

		[Token(Token = "0x6000F02")]
		[Address(RVA = "0x12F84B8", Offset = "0x12F84B8", VA = "0x12F84B8")]
		public static void ovrAvatar_OverrideExpressiveLogic(IntPtr avatar, ovrAvatarBlendShapeParams blendParams)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000F03")]
		[Address(RVA = "0x12F8600", Offset = "0x12F8600", VA = "0x12F8600")]
		private static extern void ovrAvatar_OverrideExpressiveLogic_Native(IntPtr avatar, IntPtr state);

		[Token(Token = "0x6000F04")]
		[Address(RVA = "0x12F8690", Offset = "0x12F8690", VA = "0x12F8690")]
		public static void ovrAvatar_SetVisemes(IntPtr avatar, ovrAvatarVisemes visemes)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000F05")]
		[Address(RVA = "0x12F87E8", Offset = "0x12F87E8", VA = "0x12F87E8")]
		private static extern void ovrAvatar_SetVisemes_Native(IntPtr avatar, IntPtr visemes);

		[PreserveSig]
		[Token(Token = "0x6000F06")]
		[Address(RVA = "0x12F8878", Offset = "0x12F8878", VA = "0x12F8878")]
		public static extern void ovrAvatar_UpdateWorldTransform(IntPtr avatar, ovrAvatarTransform transform);

		[Token(Token = "0x6000F07")]
		[Address(RVA = "0x12F8918", Offset = "0x12F8918", VA = "0x12F8918")]
		public static void ovrAvatar_UpdateGazeTargets(ovrAvatarGazeTargets targets)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000F08")]
		[Address(RVA = "0x12F8CE8", Offset = "0x12F8CE8", VA = "0x12F8CE8")]
		private static extern void ovrAvatar_UpdateGazeTargets_Native(IntPtr targets);

		[PreserveSig]
		[Token(Token = "0x6000F09")]
		[Address(RVA = "0x12F8D68", Offset = "0x12F8D68", VA = "0x12F8D68")]
		public static extern void ovrAvatar_RemoveGazeTargets(uint targetCount, uint[] ids);

		[Token(Token = "0x6000F0A")]
		[Address(RVA = "0x12F8E00", Offset = "0x12F8E00", VA = "0x12F8E00")]
		public static void ovrAvatar_UpdateLights(ovrAvatarLights lights)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000F0B")]
		[Address(RVA = "0x12F9660", Offset = "0x12F9660", VA = "0x12F9660")]
		private static extern void ovrAvatar_UpdateLights_Native(IntPtr lights);

		[PreserveSig]
		[Token(Token = "0x6000F0C")]
		[Address(RVA = "0x12F96E0", Offset = "0x12F96E0", VA = "0x12F96E0")]
		public static extern void ovrAvatar_RemoveLights(uint lightCount, uint[] ids);

		[Token(Token = "0x6000F0D")]
		[Address(RVA = "0x12F2A90", Offset = "0x12F2A90", VA = "0x12F2A90")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x8E4788", Offset = "0x8E4788")]
		public static void LoggingCallback(IntPtr str)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000F0E")]
		[Address(RVA = "0x12F9778", Offset = "0x12F9778", VA = "0x12F9778")]
		public static extern void ovrAvatar_RegisterLoggingCallback(LoggingDelegate callback);

		[PreserveSig]
		[Token(Token = "0x6000F0F")]
		[Address(RVA = "0x12F97FC", Offset = "0x12F97FC", VA = "0x12F97FC")]
		public static extern void ovrAvatar_SetLoggingLevel(ovrAvatarLogLevel level);

		[PreserveSig]
		[Token(Token = "0x6000F10")]
		[Address(RVA = "0x12F987C", Offset = "0x12F987C", VA = "0x12F987C")]
		public static extern IntPtr ovrAvatar_GetDebugTransforms_Native(IntPtr count);

		[PreserveSig]
		[Token(Token = "0x6000F11")]
		[Address(RVA = "0x12F98FC", Offset = "0x12F98FC", VA = "0x12F98FC")]
		public static extern IntPtr ovrAvatar_GetDebugLines_Native(IntPtr count);

		[Token(Token = "0x6000F12")]
		[Address(RVA = "0x12F997C", Offset = "0x12F997C", VA = "0x12F997C")]
		public static void ovrAvatar_DrawDebugLines()
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000F13")]
		[Address(RVA = "0x12FA340", Offset = "0x12FA340", VA = "0x12FA340")]
		public static extern void ovrAvatar_SetDebugDrawContext(uint context);

		[Token(Token = "0x6000F14")]
		[Address(RVA = "0x12FA3C0", Offset = "0x12FA3C0", VA = "0x12FA3C0")]
		public static bool SendEvent(string name, string param = "", string source = "")
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6000F15")]
		[Address(RVA = "0x12FA7FC", Offset = "0x12FA7FC", VA = "0x12FA7FC")]
		private static extern IntPtr _ovrp_GetVersion();

		[Token(Token = "0x6000F16")]
		[Address(RVA = "0x12FA764", Offset = "0x12FA764", VA = "0x12FA764")]
		public static string ovrp_GetVersion()
		{
			return null;
		}

		[Token(Token = "0x6000F17")]
		[Address(RVA = "0x12FA870", Offset = "0x12FA870", VA = "0x12FA870")]
		public CAPI()
		{
		}
	}
}
namespace OVR
{
	[Token(Token = "0x20002A5")]
	public class TestScript : MonoBehaviour
	{
		[Token(Token = "0x4001147")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "InspectorNoteAttribute", RVA = "0x8DB598", Offset = "0x8DB598")]
		public SoundFXRef testSound1;

		[Token(Token = "0x4001148")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SoundFXRef testSound2;

		[Token(Token = "0x6000F1F")]
		[Address(RVA = "0x12DFBC4", Offset = "0x12DFBC4", VA = "0x12DFBC4")]
		private void Start()
		{
		}

		[Token(Token = "0x6000F20")]
		[Address(RVA = "0x12DFBC8", Offset = "0x12DFBC8", VA = "0x12DFBC8")]
		private void Update()
		{
		}

		[Token(Token = "0x6000F21")]
		[Address(RVA = "0x12DFC70", Offset = "0x12DFC70", VA = "0x12DFC70")]
		public TestScript()
		{
		}
	}
	[Token(Token = "0x20002A6")]
	public class AmbienceEmitter : MonoBehaviour
	{
		[Token(Token = "0x4001149")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SoundFXRef[] ambientSounds;

		[Token(Token = "0x400114A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool autoActivate;

		[Token(Token = "0x400114B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DB5E4", Offset = "0x8DB5E4")]
		public bool autoRetrigger;

		[Token(Token = "0x400114C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x8DB61C", Offset = "0x8DB61C")]
		public Vector2 randomRetriggerDelaySecs;

		[Token(Token = "0x400114D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DB640", Offset = "0x8DB640")]
		public Transform[] playPositions;

		[Token(Token = "0x400114E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool activated;

		[Token(Token = "0x400114F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int playingIdx;

		[Token(Token = "0x4001150")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float nextPlayTime;

		[Token(Token = "0x4001151")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float fadeTime;

		[Token(Token = "0x4001152")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int lastPosIdx;

		[Token(Token = "0x6000F22")]
		[Address(RVA = "0x1ACD5BC", Offset = "0x1ACD5BC", VA = "0x1ACD5BC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000F23")]
		[Address(RVA = "0x1ACD78C", Offset = "0x1ACD78C", VA = "0x1ACD78C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000F24")]
		[Address(RVA = "0x1ACD968", Offset = "0x1ACD968", VA = "0x1ACD968")]
		public void OnTriggerEnter(Collider col)
		{
		}

		[Token(Token = "0x6000F25")]
		[Address(RVA = "0x1ACD7EC", Offset = "0x1ACD7EC", VA = "0x1ACD7EC")]
		public void Play()
		{
		}

		[Token(Token = "0x6000F26")]
		[Address(RVA = "0x1ACDA28", Offset = "0x1ACDA28", VA = "0x1ACDA28")]
		public void EnableEmitter(bool enable)
		{
		}

		[Token(Token = "0x6000F27")]
		[Address(RVA = "0x1ACDB98", Offset = "0x1ACDB98", VA = "0x1ACDB98")]
		public AmbienceEmitter()
		{
		}
	}
	[Token(Token = "0x20002A7")]
	public enum PreloadSounds
	{
		[Token(Token = "0x4001154")]
		Default,
		[Token(Token = "0x4001155")]
		Preload,
		[Token(Token = "0x4001156")]
		ManualPreload
	}
	[Token(Token = "0x20002A8")]
	public enum Fade
	{
		[Token(Token = "0x4001158")]
		In,
		[Token(Token = "0x4001159")]
		Out
	}
	[Serializable]
	[Token(Token = "0x20002A9")]
	public class SoundGroup
	{
		[Token(Token = "0x400115A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x400115B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SoundFX[] soundList;

		[Token(Token = "0x400115C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioMixerGroup mixerGroup;

		[Token(Token = "0x400115D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8DB678", Offset = "0x8DB678")]
		public int maxPlayingSounds;

		[Token(Token = "0x400115E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public PreloadSounds preloadAudio;

		[Token(Token = "0x400115F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float volumeOverride;

		[Token(Token = "0x4001160")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[HideInInspector]
		public int playingSoundCount;

		[Token(Token = "0x6000F28")]
		[Address(RVA = "0x167A72C", Offset = "0x167A72C", VA = "0x167A72C")]
		public SoundGroup(string name)
		{
		}

		[Token(Token = "0x6000F29")]
		[Address(RVA = "0x167A7E8", Offset = "0x167A7E8", VA = "0x167A7E8")]
		public SoundGroup()
		{
		}

		[Token(Token = "0x6000F2A")]
		[Address(RVA = "0x1678A10", Offset = "0x1678A10", VA = "0x1678A10")]
		public void IncrementPlayCount()
		{
		}

		[Token(Token = "0x6000F2B")]
		[Address(RVA = "0x1678D78", Offset = "0x1678D78", VA = "0x1678D78")]
		public void DecrementPlayCount()
		{
		}

		[Token(Token = "0x6000F2C")]
		[Address(RVA = "0x1679CB4", Offset = "0x1679CB4", VA = "0x1679CB4")]
		public bool CanPlaySound()
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20002AA")]
	public class AudioManager : MonoBehaviour
	{
		[Token(Token = "0x20002AB")]
		public enum Fade
		{
			[Token(Token = "0x4001181")]
			In,
			[Token(Token = "0x4001182")]
			Out
		}

		[Token(Token = "0x20002AC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D7058", Offset = "0x8D7058")]
		private sealed class <>c__DisplayClass77_0
		{
			[Token(Token = "0x4001183")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SoundPriority priority;

			[Token(Token = "0x6000F62")]
			[Address(RVA = "0x104901C", Offset = "0x104901C", VA = "0x104901C")]
			public <>c__DisplayClass77_0()
			{
			}

			[Token(Token = "0x6000F63")]
			[Address(RVA = "0x1049024", Offset = "0x1049024", VA = "0x1049024")]
			internal bool <FindFreeEmitter>b__0(SoundEmitter item)
			{
				return default(bool);
			}
		}

		[Serializable]
		[Token(Token = "0x20002AD")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D7068", Offset = "0x8D7068")]
		private sealed class <>c
		{
			[Token(Token = "0x4001184")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001185")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Predicate<SoundEmitter> <>9__77_1;

			[Token(Token = "0x6000F65")]
			[Address(RVA = "0x1048F88", Offset = "0x1048F88", VA = "0x1048F88")]
			public <>c()
			{
			}

			[Token(Token = "0x6000F66")]
			[Address(RVA = "0x1048F90", Offset = "0x1048F90", VA = "0x1048F90")]
			internal bool <FindFreeEmitter>b__77_1(SoundEmitter item)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4001161")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DB6A4", Offset = "0x8DB6A4")]
		public bool makePersistent;

		[Token(Token = "0x4001162")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DB6DC", Offset = "0x8DB6DC")]
		public bool enableSpatializedAudio;

		[Token(Token = "0x4001163")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DB714", Offset = "0x8DB714")]
		public bool enableSpatializedFastOverride;

		[Token(Token = "0x4001164")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DB74C", Offset = "0x8DB74C")]
		public AudioMixer audioMixer;

		[Token(Token = "0x4001165")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DB784", Offset = "0x8DB784")]
		public AudioMixerGroup defaultMixerGroup;

		[Token(Token = "0x4001166")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DB7BC", Offset = "0x8DB7BC")]
		public AudioMixerGroup reservedMixerGroup;

		[Token(Token = "0x4001167")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DB7F4", Offset = "0x8DB7F4")]
		public AudioMixerGroup voiceChatMixerGroup;

		[Token(Token = "0x4001168")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DB82C", Offset = "0x8DB82C")]
		public bool verboseLogging;

		[Token(Token = "0x4001169")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DB864", Offset = "0x8DB864")]
		public int maxSoundEmitters;

		[Token(Token = "0x400116A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DB89C", Offset = "0x8DB89C")]
		public float volumeSoundFX;

		[Token(Token = "0x400116B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DB8D4", Offset = "0x8DB8D4")]
		public float soundFxFadeSecs;

		[Token(Token = "0x400116C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float audioMinFallOffDistance;

		[Token(Token = "0x400116D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float audioMaxFallOffDistance;

		[Token(Token = "0x400116E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public SoundGroup[] soundGroupings;

		[Token(Token = "0x400116F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Dictionary<string, SoundFX> soundFXCache;

		[Token(Token = "0x4001170")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static AudioManager theAudioManager;

		[Token(Token = "0x4001171")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static FastList<string> names;

		[Token(Token = "0x4001172")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static string[] defaultSound;

		[Token(Token = "0x4001173")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static SoundFX nullSound;

		[Token(Token = "0x4001174")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static bool hideWarnings;

		[Token(Token = "0x4001175")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float audioMaxFallOffDistanceSqr;

		[Token(Token = "0x4001176")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private SoundEmitter[] soundEmitters;

		[Token(Token = "0x4001177")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private FastList<SoundEmitter> playingEmitters;

		[Token(Token = "0x4001178")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private FastList<SoundEmitter> nextFreeEmitters;

		[Token(Token = "0x4001179")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private MixerSnapshot currentSnapshot;

		[Token(Token = "0x400117A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static GameObject soundEmitterParent;

		[Token(Token = "0x400117B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static Transform staticListenerPosition;

		[Token(Token = "0x400117C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static bool showPlayingEmitterCount;

		[Token(Token = "0x400117D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		private static bool forceShowEmitterCount;

		[Token(Token = "0x400117E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
		private static bool soundEnabled;

		[Token(Token = "0x400117F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private static readonly AnimationCurve defaultReverbZoneMix;

		[Token(Token = "0x17000238")]
		public static bool enableSpatialization
		{
			[Token(Token = "0x6000F2D")]
			[Address(RVA = "0x1AD9CF8", Offset = "0x1AD9CF8", VA = "0x1AD9CF8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000239")]
		public static AudioManager Instance
		{
			[Token(Token = "0x6000F2E")]
			[Address(RVA = "0x1AD9DE0", Offset = "0x1AD9DE0", VA = "0x1AD9DE0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700023A")]
		public static float NearFallOff
		{
			[Token(Token = "0x6000F2F")]
			[Address(RVA = "0x1AD9E44", Offset = "0x1AD9E44", VA = "0x1AD9E44")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700023B")]
		public static float FarFallOff
		{
			[Token(Token = "0x6000F30")]
			[Address(RVA = "0x1AD9EB4", Offset = "0x1AD9EB4", VA = "0x1AD9EB4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700023C")]
		public static AudioMixerGroup EmitterGroup
		{
			[Token(Token = "0x6000F31")]
			[Address(RVA = "0x1AD9F24", Offset = "0x1AD9F24", VA = "0x1AD9F24")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700023D")]
		public static AudioMixerGroup ReservedGroup
		{
			[Token(Token = "0x6000F32")]
			[Address(RVA = "0x1AD9F94", Offset = "0x1AD9F94", VA = "0x1AD9F94")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700023E")]
		public static AudioMixerGroup VoipGroup
		{
			[Token(Token = "0x6000F33")]
			[Address(RVA = "0x1ADA004", Offset = "0x1ADA004", VA = "0x1ADA004")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700023F")]
		public static bool SoundEnabled
		{
			[Token(Token = "0x6000F3E")]
			[Address(RVA = "0x1ADBFB4", Offset = "0x1ADBFB4", VA = "0x1ADBFB4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000F34")]
		[Address(RVA = "0x1ADA074", Offset = "0x1ADA074", VA = "0x1ADA074")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000F35")]
		[Address(RVA = "0x1ADA2BC", Offset = "0x1ADA2BC", VA = "0x1ADA2BC")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000F36")]
		[Address(RVA = "0x1ADA078", Offset = "0x1ADA078", VA = "0x1ADA078")]
		private void Init()
		{
		}

		[Token(Token = "0x6000F37")]
		[Address(RVA = "0x1ADAFBC", Offset = "0x1ADAFBC", VA = "0x1ADAFBC")]
		private void Update()
		{
		}

		[Token(Token = "0x6000F38")]
		[Address(RVA = "0x1ADA41C", Offset = "0x1ADA41C", VA = "0x1ADA41C")]
		private void RebuildSoundFXCache()
		{
		}

		[Token(Token = "0x6000F39")]
		[Address(RVA = "0x1ADB6BC", Offset = "0x1ADB6BC", VA = "0x1ADB6BC")]
		public static SoundFX FindSoundFX(string name, bool rebuildCache = false)
		{
			return null;
		}

		[Token(Token = "0x6000F3A")]
		[Address(RVA = "0x1ADB850", Offset = "0x1ADB850", VA = "0x1ADB850")]
		private static bool FindAudioManager()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F3B")]
		[Address(RVA = "0x1ADBA24", Offset = "0x1ADBA24", VA = "0x1ADBA24")]
		public static GameObject GetGameObject()
		{
			return null;
		}

		[Token(Token = "0x6000F3C")]
		[Address(RVA = "0x1ADBB2C", Offset = "0x1ADBB2C", VA = "0x1ADBB2C")]
		public static string NameMinusGroup(string name)
		{
			return null;
		}

		[Token(Token = "0x6000F3D")]
		[Address(RVA = "0x1ADBBB8", Offset = "0x1ADBBB8", VA = "0x1ADBBB8")]
		public static string[] GetSoundFXNames(string currentValue, out int currentIdx)
		{
			return null;
		}

		[Token(Token = "0x6000F3F")]
		[Address(RVA = "0x1ADC018", Offset = "0x1ADC018", VA = "0x1ADC018")]
		private static int CalculateMaxEmittersSize()
		{
			return default(int);
		}

		[Token(Token = "0x6000F40")]
		[Address(RVA = "0x1ADC08C", Offset = "0x1ADC08C", VA = "0x1ADC08C")]
		private static bool ValidateEmitterIndex(int index)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F41")]
		[Address(RVA = "0x1ADA938", Offset = "0x1ADA938", VA = "0x1ADA938")]
		private void InitializeSoundSystem()
		{
		}

		[Token(Token = "0x6000F42")]
		[Address(RVA = "0x1ADAFC0", Offset = "0x1ADAFC0", VA = "0x1ADAFC0")]
		private void UpdateFreeEmitters()
		{
		}

		[Token(Token = "0x6000F43")]
		[Address(RVA = "0x1ADC1D4", Offset = "0x1ADC1D4", VA = "0x1ADC1D4")]
		private string Fmt(int count)
		{
			return null;
		}

		[Token(Token = "0x6000F44")]
		[Address(RVA = "0x1ADC304", Offset = "0x1ADC304", VA = "0x1ADC304")]
		private string FmtFree(int count)
		{
			return null;
		}

		[Token(Token = "0x6000F45")]
		[Address(RVA = "0x1ADC438", Offset = "0x1ADC438", VA = "0x1ADC438")]
		private void OnPreSceneLoad()
		{
		}

		[Token(Token = "0x6000F46")]
		[Address(RVA = "0x1ADC100", Offset = "0x1ADC100", VA = "0x1ADC100")]
		private void ResetFreeEmitters()
		{
		}

		[Token(Token = "0x6000F47")]
		[Address(RVA = "0x1ADC580", Offset = "0x1ADC580", VA = "0x1ADC580")]
		public static void FadeOutSoundChannel(int channel, float delaySecs, float fadeTime)
		{
		}

		[Token(Token = "0x6000F48")]
		[Address(RVA = "0x1ADC638", Offset = "0x1ADC638", VA = "0x1ADC638")]
		public static bool StopSound(int idx, bool fadeOut = true, bool stopReserved = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F49")]
		[Address(RVA = "0x1ADC754", Offset = "0x1ADC754", VA = "0x1ADC754")]
		public static void FadeInSound(int idx, float fadeTime, float volume)
		{
		}

		[Token(Token = "0x6000F4A")]
		[Address(RVA = "0x1ACD978", Offset = "0x1ACD978", VA = "0x1ACD978")]
		public static void FadeInSound(int idx, float fadeTime)
		{
		}

		[Token(Token = "0x6000F4B")]
		[Address(RVA = "0x1ACDAE8", Offset = "0x1ACDAE8", VA = "0x1ACDAE8")]
		public static void FadeOutSound(int idx, float fadeTime)
		{
		}

		[Token(Token = "0x6000F4C")]
		[Address(RVA = "0x1ADC80C", Offset = "0x1ADC80C", VA = "0x1ADC80C")]
		public static void StopAllSounds(bool fadeOut, bool stopReserved = false)
		{
		}

		[Token(Token = "0x6000F4D")]
		[Address(RVA = "0x1ADC8D4", Offset = "0x1ADC8D4", VA = "0x1ADC8D4")]
		public void MuteAllSounds(bool mute, bool muteReserved = false)
		{
		}

		[Token(Token = "0x6000F4E")]
		[Address(RVA = "0x1ADC968", Offset = "0x1ADC968", VA = "0x1ADC968")]
		public void UnMuteAllSounds(bool unmute, bool unmuteReserved = false)
		{
		}

		[Token(Token = "0x6000F4F")]
		[Address(RVA = "0x1ADCA2C", Offset = "0x1ADCA2C", VA = "0x1ADCA2C")]
		public static float GetEmitterEndTime(int idx)
		{
			return default(float);
		}

		[Token(Token = "0x6000F50")]
		[Address(RVA = "0x1ADCACC", Offset = "0x1ADCACC", VA = "0x1ADCACC")]
		public static float SetEmitterTime(int idx, float time)
		{
			return default(float);
		}

		[Token(Token = "0x6000F51")]
		[Address(RVA = "0x1ADCB84", Offset = "0x1ADCB84", VA = "0x1ADCB84")]
		public static int PlaySound(AudioClip clip, float volume, EmitterChannel src = EmitterChannel.Any, float delay = 0f, float pitchVariance = 1f, bool loop = false)
		{
			return default(int);
		}

		[Token(Token = "0x6000F52")]
		[Address(RVA = "0x1ADD6BC", Offset = "0x1ADD6BC", VA = "0x1ADD6BC")]
		private static int FindFreeEmitter(EmitterChannel src, SoundPriority priority)
		{
			return default(int);
		}

		[Token(Token = "0x6000F53")]
		[Address(RVA = "0x1ADDDBC", Offset = "0x1ADDDBC", VA = "0x1ADDDBC")]
		public static int PlaySound(SoundFX soundFX, EmitterChannel src = EmitterChannel.Any, float delay = 0f)
		{
			return default(int);
		}

		[Token(Token = "0x6000F54")]
		[Address(RVA = "0x1ADDF80", Offset = "0x1ADDF80", VA = "0x1ADDF80")]
		public static int PlaySoundAt(Vector3 position, SoundFX soundFX, EmitterChannel src = EmitterChannel.Any, float delay = 0f, float volumeOverride = 1f, float pitchMultiplier = 1f)
		{
			return default(int);
		}

		[Token(Token = "0x6000F55")]
		[Address(RVA = "0x1ADEB4C", Offset = "0x1ADEB4C", VA = "0x1ADEB4C")]
		public static int PlayRandomSoundAt(Vector3 position, AudioClip[] clips, float volume, EmitterChannel src = EmitterChannel.Any, float delay = 0f, float pitch = 1f, bool loop = false)
		{
			return default(int);
		}

		[Token(Token = "0x6000F56")]
		[Address(RVA = "0x1ADCD70", Offset = "0x1ADCD70", VA = "0x1ADCD70")]
		public static int PlaySoundAt(Vector3 position, AudioClip clip, float volume = 1f, EmitterChannel src = EmitterChannel.Any, float delay = 0f, float pitch = 1f, bool loop = false)
		{
			return default(int);
		}

		[Token(Token = "0x6000F57")]
		[Address(RVA = "0x1ADEC68", Offset = "0x1ADEC68", VA = "0x1ADEC68")]
		public static void SetOnFinished(int emitterIdx, Action onFinished)
		{
		}

		[Token(Token = "0x6000F58")]
		[Address(RVA = "0x1ADED4C", Offset = "0x1ADED4C", VA = "0x1ADED4C")]
		public static void SetOnFinished(int emitterIdx, Action<object> onFinished, object obj)
		{
		}

		[Token(Token = "0x6000F59")]
		[Address(RVA = "0x1ADEE38", Offset = "0x1ADEE38", VA = "0x1ADEE38")]
		public static void AttachSoundToParent(int idx, Transform parent)
		{
		}

		[Token(Token = "0x6000F5A")]
		[Address(RVA = "0x1ADF060", Offset = "0x1ADF060", VA = "0x1ADF060")]
		public static void DetachSoundFromParent(int idx)
		{
		}

		[Token(Token = "0x6000F5B")]
		[Address(RVA = "0x1ADF1B4", Offset = "0x1ADF1B4", VA = "0x1ADF1B4")]
		public static void DetachSoundsFromParent(SoundEmitter[] emitters, bool stopSounds = true)
		{
		}

		[Token(Token = "0x6000F5C")]
		[Address(RVA = "0x1ADF2D8", Offset = "0x1ADF2D8", VA = "0x1ADF2D8")]
		public static void SetEmitterMixerGroup(int idx, AudioMixerGroup mixerGroup)
		{
		}

		[Token(Token = "0x6000F5D")]
		[Address(RVA = "0x1ADF404", Offset = "0x1ADF404", VA = "0x1ADF404")]
		public static MixerSnapshot GetActiveSnapshot()
		{
			return null;
		}

		[Token(Token = "0x6000F5E")]
		[Address(RVA = "0x1ADF4E4", Offset = "0x1ADF4E4", VA = "0x1ADF4E4")]
		public static void SetCurrentSnapshot(MixerSnapshot mixerSnapshot)
		{
		}

		[Token(Token = "0x6000F5F")]
		[Address(RVA = "0x1ADF634", Offset = "0x1ADF634", VA = "0x1ADF634")]
		public static void BlendWithCurrentSnapshot(MixerSnapshot blendSnapshot, float weight, float blendTime = 0f)
		{
		}

		[Token(Token = "0x6000F60")]
		[Address(RVA = "0x1ADFA50", Offset = "0x1ADFA50", VA = "0x1ADFA50")]
		public AudioManager()
		{
		}
	}
	[Token(Token = "0x20002AE")]
	public enum EmitterChannel
	{
		[Token(Token = "0x4001187")]
		None = -1,
		[Token(Token = "0x4001188")]
		Reserved,
		[Token(Token = "0x4001189")]
		Any
	}
	[Serializable]
	[Token(Token = "0x20002AF")]
	public class MixerSnapshot
	{
		[Token(Token = "0x400118A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AudioMixerSnapshot snapshot;

		[Token(Token = "0x400118B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float transitionTime;

		[Token(Token = "0x6000F67")]
		[Address(RVA = "0x135B2BC", Offset = "0x135B2BC", VA = "0x135B2BC")]
		public MixerSnapshot()
		{
		}
	}
	[Token(Token = "0x20002B0")]
	public class MinMaxAttribute : PropertyAttribute
	{
		[Token(Token = "0x400118C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float minDefaultVal;

		[Token(Token = "0x400118D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float maxDefaultVal;

		[Token(Token = "0x400118E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float min;

		[Token(Token = "0x400118F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float max;

		[Token(Token = "0x6000F68")]
		[Address(RVA = "0x135A374", Offset = "0x135A374", VA = "0x135A374")]
		public MinMaxAttribute(float minDefaultVal, float maxDefaultVal, float min, float max)
		{
		}
	}
	[Token(Token = "0x20002B1")]
	public class SoundEmitter : MonoBehaviour
	{
		[Token(Token = "0x20002B2")]
		public enum FadeState
		{
			[Token(Token = "0x40011A0")]
			Null,
			[Token(Token = "0x40011A1")]
			FadingIn,
			[Token(Token = "0x40011A2")]
			FadingOut,
			[Token(Token = "0x40011A3")]
			Ducking
		}

		[Token(Token = "0x20002B3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D7078", Offset = "0x8D7078")]
		private sealed class <DelayedSyncTo>d__57 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40011A4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40011A5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40011A6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SoundEmitter <>4__this;

			[Token(Token = "0x40011A7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public SoundEmitter other;

			[Token(Token = "0x40011A8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float fadeTime;

			[Token(Token = "0x40011A9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public float toVolume;

			[Token(Token = "0x17000249")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000F95")]
				[Address(RVA = "0x1C2ECC0", Offset = "0x1C2ECC0", VA = "0x1C2ECC0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700024A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000F97")]
				[Address(RVA = "0x1C2ED08", Offset = "0x1C2ED08", VA = "0x1C2ED08", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000F92")]
			[Address(RVA = "0x1C2EBA0", Offset = "0x1C2EBA0", VA = "0x1C2EBA0")]
			[DebuggerHidden]
			public <DelayedSyncTo>d__57(int <>1__state)
			{
			}

			[Token(Token = "0x6000F93")]
			[Address(RVA = "0x1C2EBCC", Offset = "0x1C2EBCC", VA = "0x1C2EBCC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000F94")]
			[Address(RVA = "0x1C2EBD0", Offset = "0x1C2EBD0", VA = "0x1C2EBD0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000F96")]
			[Address(RVA = "0x1C2ECC8", Offset = "0x1C2ECC8", VA = "0x1C2ECC8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20002B4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D7088", Offset = "0x8D7088")]
		private sealed class <FadeSoundChannelTo>d__63 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40011AA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40011AB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40011AC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SoundEmitter <>4__this;

			[Token(Token = "0x40011AD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float toVolume;

			[Token(Token = "0x40011AE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float fadeTime;

			[Token(Token = "0x40011AF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <start>5__2;

			[Token(Token = "0x40011B0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <end>5__3;

			[Token(Token = "0x40011B1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <startTime>5__4;

			[Token(Token = "0x40011B2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <elapsedTime>5__5;

			[Token(Token = "0x1700024B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000F9B")]
				[Address(RVA = "0x1C2F150", Offset = "0x1C2F150", VA = "0x1C2F150", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700024C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000F9D")]
				[Address(RVA = "0x1C2F198", Offset = "0x1C2F198", VA = "0x1C2F198", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000F98")]
			[Address(RVA = "0x1C2EFE4", Offset = "0x1C2EFE4", VA = "0x1C2EFE4")]
			[DebuggerHidden]
			public <FadeSoundChannelTo>d__63(int <>1__state)
			{
			}

			[Token(Token = "0x6000F99")]
			[Address(RVA = "0x1C2F010", Offset = "0x1C2F010", VA = "0x1C2F010", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000F9A")]
			[Address(RVA = "0x1C2F014", Offset = "0x1C2F014", VA = "0x1C2F014", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000F9C")]
			[Address(RVA = "0x1C2F158", Offset = "0x1C2F158", VA = "0x1C2F158", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20002B5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D7098", Offset = "0x8D7098")]
		private sealed class <FadeSoundChannel>d__64 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40011B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40011B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40011B5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float delaySecs;

			[Token(Token = "0x40011B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public Fade fadeType;

			[Token(Token = "0x40011B7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float defaultVolume;

			[Token(Token = "0x40011B8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public SoundEmitter <>4__this;

			[Token(Token = "0x40011B9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public float fadeTime;

			[Token(Token = "0x40011BA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <start>5__2;

			[Token(Token = "0x40011BB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private float <end>5__3;

			[Token(Token = "0x40011BC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			private bool <restartPlay>5__4;

			[Token(Token = "0x40011BD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private float <startTime>5__5;

			[Token(Token = "0x40011BE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			private float <elapsedTime>5__6;

			[Token(Token = "0x1700024D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000FA1")]
				[Address(RVA = "0x1C2EF94", Offset = "0x1C2EF94", VA = "0x1C2EF94", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700024E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000FA3")]
				[Address(RVA = "0x1C2EFDC", Offset = "0x1C2EFDC", VA = "0x1C2EFDC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000F9E")]
			[Address(RVA = "0x1C2ED10", Offset = "0x1C2ED10", VA = "0x1C2ED10")]
			[DebuggerHidden]
			public <FadeSoundChannel>d__64(int <>1__state)
			{
			}

			[Token(Token = "0x6000F9F")]
			[Address(RVA = "0x1C2ED3C", Offset = "0x1C2ED3C", VA = "0x1C2ED3C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000FA0")]
			[Address(RVA = "0x1C2ED40", Offset = "0x1C2ED40", VA = "0x1C2ED40", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000FA2")]
			[Address(RVA = "0x1C2EF9C", Offset = "0x1C2EF9C", VA = "0x1C2EF9C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001190")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public EmitterChannel channel;

		[Token(Token = "0x4001191")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool disableSpatialization;

		[Token(Token = "0x4001192")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private FadeState state;

		[NonSerialized]
		[Token(Token = "0x4001193")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public AudioSource audioSource;

		[NonSerialized]
		[Token(Token = "0x4001194")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public SoundPriority priority;

		[NonSerialized]
		[Token(Token = "0x4001195")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		public ONSPAudioSource osp;

		[NonSerialized]
		[Token(Token = "0x4001196")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		public float endPlayTime;

		[Token(Token = "0x4001197")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Transform lastParentTransform;

		[NonSerialized]
		[Token(Token = "0x4001198")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[HideInInspector]
		public float defaultVolume;

		[NonSerialized]
		[Token(Token = "0x4001199")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[HideInInspector]
		public Transform defaultParent;

		[NonSerialized]
		[Token(Token = "0x400119A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[HideInInspector]
		public int originalIdx;

		[NonSerialized]
		[Token(Token = "0x400119B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[HideInInspector]
		public Action onFinished;

		[NonSerialized]
		[Token(Token = "0x400119C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[HideInInspector]
		public Action<object> onFinishedObject;

		[NonSerialized]
		[Token(Token = "0x400119D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[HideInInspector]
		public object onFinishedParam;

		[NonSerialized]
		[Token(Token = "0x400119E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[HideInInspector]
		public SoundGroup playingSoundGroup;

		[Token(Token = "0x17000240")]
		public float volume
		{
			[Token(Token = "0x6000F69")]
			[Address(RVA = "0x1678578", Offset = "0x1678578", VA = "0x1678578")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000F6A")]
			[Address(RVA = "0x1678594", Offset = "0x1678594", VA = "0x1678594")]
			set
			{
			}
		}

		[Token(Token = "0x17000241")]
		public float pitch
		{
			[Token(Token = "0x6000F6B")]
			[Address(RVA = "0x16785B0", Offset = "0x16785B0", VA = "0x16785B0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000F6C")]
			[Address(RVA = "0x16785CC", Offset = "0x16785CC", VA = "0x16785CC")]
			set
			{
			}
		}

		[Token(Token = "0x17000242")]
		public AudioClip clip
		{
			[Token(Token = "0x6000F6D")]
			[Address(RVA = "0x16785E8", Offset = "0x16785E8", VA = "0x16785E8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000F6E")]
			[Address(RVA = "0x1678604", Offset = "0x1678604", VA = "0x1678604")]
			set
			{
			}
		}

		[Token(Token = "0x17000243")]
		public float time
		{
			[Token(Token = "0x6000F6F")]
			[Address(RVA = "0x1678620", Offset = "0x1678620", VA = "0x1678620")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000F70")]
			[Address(RVA = "0x167863C", Offset = "0x167863C", VA = "0x167863C")]
			set
			{
			}
		}

		[Token(Token = "0x17000244")]
		public float length
		{
			[Token(Token = "0x6000F71")]
			[Address(RVA = "0x1678658", Offset = "0x1678658", VA = "0x1678658")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000245")]
		public bool loop
		{
			[Token(Token = "0x6000F72")]
			[Address(RVA = "0x167870C", Offset = "0x167870C", VA = "0x167870C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000F73")]
			[Address(RVA = "0x1678728", Offset = "0x1678728", VA = "0x1678728")]
			set
			{
			}
		}

		[Token(Token = "0x17000246")]
		public bool mute
		{
			[Token(Token = "0x6000F74")]
			[Address(RVA = "0x1678748", Offset = "0x1678748", VA = "0x1678748")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000F75")]
			[Address(RVA = "0x1678764", Offset = "0x1678764", VA = "0x1678764")]
			set
			{
			}
		}

		[Token(Token = "0x17000247")]
		public AudioVelocityUpdateMode velocityUpdateMode
		{
			[Token(Token = "0x6000F76")]
			[Address(RVA = "0x1678784", Offset = "0x1678784", VA = "0x1678784")]
			get
			{
				return default(AudioVelocityUpdateMode);
			}
			[Token(Token = "0x6000F77")]
			[Address(RVA = "0x16787A0", Offset = "0x16787A0", VA = "0x16787A0")]
			set
			{
			}
		}

		[Token(Token = "0x17000248")]
		public bool isPlaying
		{
			[Token(Token = "0x6000F78")]
			[Address(RVA = "0x16787BC", Offset = "0x16787BC", VA = "0x16787BC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000F79")]
		[Address(RVA = "0x16787D8", Offset = "0x16787D8", VA = "0x16787D8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000F7A")]
		[Address(RVA = "0x16789C8", Offset = "0x16789C8", VA = "0x16789C8")]
		public void SetPlayingSoundGroup(SoundGroup soundGroup)
		{
		}

		[Token(Token = "0x6000F7B")]
		[Address(RVA = "0x1678A4C", Offset = "0x1678A4C", VA = "0x1678A4C")]
		public void SetOnFinished(Action onFinished)
		{
		}

		[Token(Token = "0x6000F7C")]
		[Address(RVA = "0x1678A54", Offset = "0x1678A54", VA = "0x1678A54")]
		public void SetOnFinished(Action<object> onFinished, object obj)
		{
		}

		[Token(Token = "0x6000F7D")]
		[Address(RVA = "0x1678A88", Offset = "0x1678A88", VA = "0x1678A88")]
		public void SetChannel(int _channel)
		{
		}

		[Token(Token = "0x6000F7E")]
		[Address(RVA = "0x1678A90", Offset = "0x1678A90", VA = "0x1678A90")]
		public void SetDefaultParent(Transform parent)
		{
		}

		[Token(Token = "0x6000F7F")]
		[Address(RVA = "0x1678A98", Offset = "0x1678A98", VA = "0x1678A98")]
		public void SetAudioMixer(AudioMixerGroup _mixer)
		{
		}

		[Token(Token = "0x6000F80")]
		[Address(RVA = "0x1678B3C", Offset = "0x1678B3C", VA = "0x1678B3C")]
		public bool IsPlaying()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F81")]
		[Address(RVA = "0x1678BA8", Offset = "0x1678BA8", VA = "0x1678BA8")]
		public void Play()
		{
		}

		[Token(Token = "0x6000F82")]
		[Address(RVA = "0x1678C08", Offset = "0x1678C08", VA = "0x1678C08")]
		public void Pause()
		{
		}

		[Token(Token = "0x6000F83")]
		[Address(RVA = "0x1678C40", Offset = "0x1678C40", VA = "0x1678C40")]
		public void Stop()
		{
		}

		[Token(Token = "0x6000F84")]
		[Address(RVA = "0x1678DB4", Offset = "0x1678DB4", VA = "0x1678DB4")]
		private int GetSampleTime()
		{
			return default(int);
		}

		[Token(Token = "0x6000F85")]
		[Address(RVA = "0x1678E0C", Offset = "0x1678E0C", VA = "0x1678E0C")]
		public void ParentTo(Transform parent)
		{
		}

		[Token(Token = "0x6000F86")]
		[Address(RVA = "0x1678F2C", Offset = "0x1678F2C", VA = "0x1678F2C")]
		public void DetachFromParent()
		{
		}

		[Token(Token = "0x6000F87")]
		[Address(RVA = "0x1678FF8", Offset = "0x1678FF8", VA = "0x1678FF8")]
		public void ResetParent(Transform parent)
		{
		}

		[Token(Token = "0x6000F88")]
		[Address(RVA = "0x1679040", Offset = "0x1679040", VA = "0x1679040")]
		public void SyncTo(SoundEmitter other, float fadeTime, float toVolume)
		{
		}

		[Token(Token = "0x6000F89")]
		[Address(RVA = "0x167906C", Offset = "0x167906C", VA = "0x167906C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E47E8", Offset = "0x8E47E8")]
		private IEnumerator DelayedSyncTo(SoundEmitter other, float fadeTime, float toVolume)
		{
			return null;
		}

		[Token(Token = "0x6000F8A")]
		[Address(RVA = "0x1679114", Offset = "0x1679114", VA = "0x1679114")]
		public void FadeTo(float fadeTime, float toVolume)
		{
		}

		[Token(Token = "0x6000F8B")]
		[Address(RVA = "0x1679208", Offset = "0x1679208", VA = "0x1679208")]
		public void FadeIn(float fadeTime, float defaultVolume)
		{
		}

		[Token(Token = "0x6000F8C")]
		[Address(RVA = "0x1679334", Offset = "0x1679334", VA = "0x1679334")]
		public void FadeIn(float fadeTime)
		{
		}

		[Token(Token = "0x6000F8D")]
		[Address(RVA = "0x16793AC", Offset = "0x16793AC", VA = "0x16793AC")]
		public void FadeOut(float fadeTime)
		{
		}

		[Token(Token = "0x6000F8E")]
		[Address(RVA = "0x1679444", Offset = "0x1679444", VA = "0x1679444")]
		public void FadeOutDelayed(float delayedSecs, float fadeTime)
		{
		}

		[Token(Token = "0x6000F8F")]
		[Address(RVA = "0x167917C", Offset = "0x167917C", VA = "0x167917C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E4848", Offset = "0x8E4848")]
		private IEnumerator FadeSoundChannelTo(float fadeTime, float toVolume)
		{
			return null;
		}

		[Token(Token = "0x6000F90")]
		[Address(RVA = "0x1679284", Offset = "0x1679284", VA = "0x1679284")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E48A8", Offset = "0x8E48A8")]
		private IEnumerator FadeSoundChannel(float delaySecs, float fadeTime, Fade fadeType, float defaultVolume)
		{
			return null;
		}

		[Token(Token = "0x6000F91")]
		[Address(RVA = "0x16794E0", Offset = "0x16794E0", VA = "0x16794E0")]
		public SoundEmitter()
		{
		}
	}
	[Token(Token = "0x20002B6")]
	public enum SoundFXNext
	{
		[Token(Token = "0x40011C0")]
		Random,
		[Token(Token = "0x40011C1")]
		Sequential
	}
	[Token(Token = "0x20002B7")]
	public enum FreqHint
	{
		[Token(Token = "0x40011C3")]
		None,
		[Token(Token = "0x40011C4")]
		Wide,
		[Token(Token = "0x40011C5")]
		Narrow
	}
	[Token(Token = "0x20002B8")]
	public enum SoundPriority
	{
		[Token(Token = "0x40011C7")]
		VeryLow = -2,
		[Token(Token = "0x40011C8")]
		Low,
		[Token(Token = "0x40011C9")]
		Default,
		[Token(Token = "0x40011CA")]
		High,
		[Token(Token = "0x40011CB")]
		VeryHigh
	}
	[Serializable]
	[Token(Token = "0x20002B9")]
	public class OSPProps
	{
		[Token(Token = "0x40011CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DB9BC", Offset = "0x8DB9BC")]
		public bool enableSpatialization;

		[Token(Token = "0x40011CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DB9F4", Offset = "0x8DB9F4")]
		public bool useFastOverride;

		[Token(Token = "0x40011CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DBA2C", Offset = "0x8DBA2C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8DBA2C", Offset = "0x8DBA2C")]
		public float gain;

		[Token(Token = "0x40011CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DBA80", Offset = "0x8DBA80")]
		public bool enableInvSquare;

		[Token(Token = "0x40011D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DBAB8", Offset = "0x8DBAB8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8DBAB8", Offset = "0x8DBAB8")]
		public float volumetric;

		[Token(Token = "0x40011D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DBB10", Offset = "0x8DBB10")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x8DBB10", Offset = "0x8DBB10")]
		public Vector2 invSquareFalloff;

		[Token(Token = "0x6000FA4")]
		[Address(RVA = "0x1DBE594", Offset = "0x1DBE594", VA = "0x1DBE594")]
		public OSPProps()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002BA")]
	public class SoundFX
	{
		[Token(Token = "0x40011D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DBB70", Offset = "0x8DBB70")]
		public string name;

		[Token(Token = "0x40011D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DBBA8", Offset = "0x8DBBA8")]
		public SoundFXNext playback;

		[Token(Token = "0x40011D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DBBE0", Offset = "0x8DBBE0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8DBBE0", Offset = "0x8DBBE0")]
		public float volume;

		[Token(Token = "0x40011D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DBC34", Offset = "0x8DBC34")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x8DBC34", Offset = "0x8DBC34")]
		public Vector2 pitchVariance;

		[Token(Token = "0x40011D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DBC90", Offset = "0x8DBC90")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x8DBC90", Offset = "0x8DBC90")]
		public Vector2 falloffDistance;

		[Token(Token = "0x40011D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DBCF0", Offset = "0x8DBCF0")]
		public AudioRolloffMode falloffCurve;

		[Token(Token = "0x40011D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DBD28", Offset = "0x8DBD28")]
		public AnimationCurve volumeFalloffCurve;

		[Token(Token = "0x40011D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DBD60", Offset = "0x8DBD60")]
		public AnimationCurve reverbZoneMix;

		[Token(Token = "0x40011DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8DBD98", Offset = "0x8DBD98")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DBD98", Offset = "0x8DBD98")]
		public float spread;

		[Token(Token = "0x40011DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8DBDF0", Offset = "0x8DBDF0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DBDF0", Offset = "0x8DBDF0")]
		public float pctChanceToPlay;

		[Token(Token = "0x40011DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DBE44", Offset = "0x8DBE44")]
		public SoundPriority priority;

		[Token(Token = "0x40011DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DBE7C", Offset = "0x8DBE7C")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x8DBE7C", Offset = "0x8DBE7C")]
		public Vector2 delay;

		[Token(Token = "0x40011DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DBED8", Offset = "0x8DBED8")]
		public bool looping;

		[Token(Token = "0x40011DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public OSPProps ospProps;

		[Token(Token = "0x40011E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DBF10", Offset = "0x8DBF10")]
		public AudioClip[] soundClips;

		[Token(Token = "0x40011E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public bool visibilityToggle;

		[NonSerialized]
		[Token(Token = "0x40011E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private SoundGroup soundGroup;

		[Token(Token = "0x40011E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int lastIdx;

		[Token(Token = "0x40011E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private int playingIdx;

		[Token(Token = "0x1700024F")]
		public int Length
		{
			[Token(Token = "0x6000FA6")]
			[Address(RVA = "0x1679A30", Offset = "0x1679A30", VA = "0x1679A30")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000250")]
		public bool IsValid
		{
			[Token(Token = "0x6000FA7")]
			[Address(RVA = "0x1679A4C", Offset = "0x1679A4C", VA = "0x1679A4C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000251")]
		public SoundGroup Group
		{
			[Token(Token = "0x6000FA8")]
			[Address(RVA = "0x1679AEC", Offset = "0x1679AEC", VA = "0x1679AEC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000FA9")]
			[Address(RVA = "0x1679AF4", Offset = "0x1679AF4", VA = "0x1679AF4")]
			set
			{
			}
		}

		[Token(Token = "0x17000252")]
		public float MaxFalloffDistSquared
		{
			[Token(Token = "0x6000FAA")]
			[Address(RVA = "0x1679AFC", Offset = "0x1679AFC", VA = "0x1679AFC")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000253")]
		public float GroupVolumeOverride
		{
			[Token(Token = "0x6000FAB")]
			[Address(RVA = "0x1679B08", Offset = "0x1679B08", VA = "0x1679B08")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6000FA5")]
		[Address(RVA = "0x16794F8", Offset = "0x16794F8", VA = "0x16794F8")]
		public SoundFX()
		{
		}

		[Token(Token = "0x6000FAC")]
		[Address(RVA = "0x1679B20", Offset = "0x1679B20", VA = "0x1679B20")]
		public AudioClip GetClip()
		{
			return null;
		}

		[Token(Token = "0x6000FAD")]
		[Address(RVA = "0x1679BF0", Offset = "0x1679BF0", VA = "0x1679BF0")]
		public AudioMixerGroup GetMixerGroup(AudioMixerGroup defaultMixerGroup)
		{
			return null;
		}

		[Token(Token = "0x6000FAE")]
		[Address(RVA = "0x1679C8C", Offset = "0x1679C8C", VA = "0x1679C8C")]
		public bool ReachedGroupPlayLimit()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FAF")]
		[Address(RVA = "0x1679CD4", Offset = "0x1679CD4", VA = "0x1679CD4")]
		public float GetClipLength(int idx)
		{
			return default(float);
		}

		[Token(Token = "0x6000FB0")]
		[Address(RVA = "0x1679DCC", Offset = "0x1679DCC", VA = "0x1679DCC")]
		public float GetPitch()
		{
			return default(float);
		}

		[Token(Token = "0x6000FB1")]
		[Address(RVA = "0x1679DD8", Offset = "0x1679DD8", VA = "0x1679DD8")]
		public int PlaySound(float delaySecs = 0f)
		{
			return default(int);
		}

		[Token(Token = "0x6000FB2")]
		[Address(RVA = "0x1679EB4", Offset = "0x1679EB4", VA = "0x1679EB4")]
		public int PlaySoundAt(Vector3 pos, float delaySecs = 0f, float volumeOverride = 1f, float pitchMultiplier = 1f)
		{
			return default(int);
		}

		[Token(Token = "0x6000FB3")]
		[Address(RVA = "0x1679FC8", Offset = "0x1679FC8", VA = "0x1679FC8")]
		public void SetOnFinished(Action onFinished)
		{
		}

		[Token(Token = "0x6000FB4")]
		[Address(RVA = "0x167A054", Offset = "0x167A054", VA = "0x167A054")]
		public void SetOnFinished(Action<object> onFinished, object obj)
		{
		}

		[Token(Token = "0x6000FB5")]
		[Address(RVA = "0x167A0E8", Offset = "0x167A0E8", VA = "0x167A0E8")]
		public bool StopSound()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FB6")]
		[Address(RVA = "0x167A174", Offset = "0x167A174", VA = "0x167A174")]
		public void AttachToParent(Transform parent)
		{
		}

		[Token(Token = "0x6000FB7")]
		[Address(RVA = "0x167A200", Offset = "0x167A200", VA = "0x167A200")]
		public void DetachFromParent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002BB")]
	public class SoundFXRef
	{
		[Token(Token = "0x40011E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string soundFXName;

		[Token(Token = "0x40011E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool initialized;

		[Token(Token = "0x40011E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private SoundFX soundFXCached;

		[Token(Token = "0x17000254")]
		public SoundFX soundFX
		{
			[Token(Token = "0x6000FB8")]
			[Address(RVA = "0x167A278", Offset = "0x167A278", VA = "0x167A278")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000255")]
		public string name
		{
			[Token(Token = "0x6000FB9")]
			[Address(RVA = "0x167A39C", Offset = "0x167A39C", VA = "0x167A39C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000FBA")]
			[Address(RVA = "0x167A3A4", Offset = "0x167A3A4", VA = "0x167A3A4")]
			set
			{
			}
		}

		[Token(Token = "0x17000256")]
		public int Length
		{
			[Token(Token = "0x6000FBC")]
			[Address(RVA = "0x167A3CC", Offset = "0x167A3CC", VA = "0x167A3CC")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000257")]
		public bool IsValid
		{
			[Token(Token = "0x6000FBD")]
			[Address(RVA = "0x167A410", Offset = "0x167A410", VA = "0x167A410")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000FBB")]
		[Address(RVA = "0x167A2A8", Offset = "0x167A2A8", VA = "0x167A2A8")]
		private void Init()
		{
		}

		[Token(Token = "0x6000FBE")]
		[Address(RVA = "0x167A448", Offset = "0x167A448", VA = "0x167A448")]
		public AudioClip GetClip()
		{
			return null;
		}

		[Token(Token = "0x6000FBF")]
		[Address(RVA = "0x167A480", Offset = "0x167A480", VA = "0x167A480")]
		public float GetClipLength(int idx)
		{
			return default(float);
		}

		[Token(Token = "0x6000FC0")]
		[Address(RVA = "0x167A4C0", Offset = "0x167A4C0", VA = "0x167A4C0")]
		public int PlaySound(float delaySecs = 0f)
		{
			return default(int);
		}

		[Token(Token = "0x6000FC1")]
		[Address(RVA = "0x167A508", Offset = "0x167A508", VA = "0x167A508")]
		public int PlaySoundAt(Vector3 pos, float delaySecs = 0f, float volume = 1f, float pitchMultiplier = 1f)
		{
			return default(int);
		}

		[Token(Token = "0x6000FC2")]
		[Address(RVA = "0x167A588", Offset = "0x167A588", VA = "0x167A588")]
		public void SetOnFinished(Action onFinished)
		{
		}

		[Token(Token = "0x6000FC3")]
		[Address(RVA = "0x167A5C8", Offset = "0x167A5C8", VA = "0x167A5C8")]
		public void SetOnFinished(Action<object> onFinished, object obj)
		{
		}

		[Token(Token = "0x6000FC4")]
		[Address(RVA = "0x167A618", Offset = "0x167A618", VA = "0x167A618")]
		public bool StopSound()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FC5")]
		[Address(RVA = "0x167A650", Offset = "0x167A650", VA = "0x167A650")]
		public void AttachToParent(Transform parent)
		{
		}

		[Token(Token = "0x6000FC6")]
		[Address(RVA = "0x167A690", Offset = "0x167A690", VA = "0x167A690")]
		public void DetachFromParent()
		{
		}

		[Token(Token = "0x6000FC7")]
		[Address(RVA = "0x167A6C8", Offset = "0x167A6C8", VA = "0x167A6C8")]
		public SoundFXRef()
		{
		}
	}
}
namespace MagicLightProbes
{
	[Token(Token = "0x20002BC")]
	public class MLPDataSaver
	{
		[Token(Token = "0x6000FC8")]
		public static void SaveData<T>(T data, string fullFilePath, string consoleString = "")
		{
		}

		[Token(Token = "0x6000FC9")]
		public static T LoadData<T>(T dataRecipient, string fullFilePath, string consoleStringSuccess = "", string consoleStringFail = "")
		{
			return (T)null;
		}

		[Token(Token = "0x6000FCA")]
		[Address(RVA = "0x1351544", Offset = "0x1351544", VA = "0x1351544")]
		public MLPDataSaver()
		{
		}
	}
	[Token(Token = "0x20002BD")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x8D70A8", Offset = "0x8D70A8")]
	[ExecuteInEditMode]
	public class MLPCombinedVolume : MonoBehaviour
	{
		[Token(Token = "0x6000FCB")]
		[Address(RVA = "0x135153C", Offset = "0x135153C", VA = "0x135153C")]
		public MLPCombinedVolume()
		{
		}
	}
	[Token(Token = "0x20002BE")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x8D70F4", Offset = "0x8D70F4")]
	[DisallowMultipleComponent]
	public class MLPLight : MonoBehaviour
	{
		[Token(Token = "0x20002BF")]
		public enum CalculationType
		{
			[Token(Token = "0x400120C")]
			AccurateShadows,
			[Token(Token = "0x400120D")]
			LightIntensity
		}

		[Token(Token = "0x20002C0")]
		public enum MLPLightType
		{
			[Token(Token = "0x400120F")]
			Spot,
			[Token(Token = "0x4001210")]
			Directional,
			[Token(Token = "0x4001211")]
			Point,
			[Token(Token = "0x4001212")]
			Area,
			[Token(Token = "0x4001213")]
			Mesh
		}

		[Token(Token = "0x20002C1")]
		public enum MLPLightTypeMA
		{
			[Token(Token = "0x4001215")]
			Area = 3,
			[Token(Token = "0x4001216")]
			Mesh
		}

		[Token(Token = "0x20002C2")]
		public enum TracePointSettingType
		{
			[Token(Token = "0x4001218")]
			Auto,
			[Token(Token = "0x4001219")]
			Custom
		}

		[Token(Token = "0x40011E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MLPLightType lightType;

		[Token(Token = "0x40011E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public MLPLightTypeMA lightTypeMA;

		[Token(Token = "0x40011EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MLPLightType lastLightType;

		[Token(Token = "0x40011EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public CalculationType calculationType;

		[Token(Token = "0x40011EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TracePointSettingType tracePointSettingType;

		[Token(Token = "0x40011ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public LightmapBakeType lightMode;

		[Token(Token = "0x40011EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Light targetLight;

		[Token(Token = "0x40011EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject parentGameObject;

		[Token(Token = "0x40011F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Vector3 position;

		[Token(Token = "0x40011F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public Vector3 forward;

		[Token(Token = "0x40011F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public bool saveNearbyProbes;

		[Token(Token = "0x40011F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float saveRadius;

		[Token(Token = "0x40011F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float range;

		[Token(Token = "0x40011F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public bool useSourceParameters;

		[Token(Token = "0x40011F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
		public bool reverseDirection;

		[Token(Token = "0x40011F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public float angle;

		[Token(Token = "0x40011F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public bool customTracePoints;

		[Token(Token = "0x40011F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6D")]
		public bool accurateTrace;

		[Token(Token = "0x40011FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public int accuracy;

		[Token(Token = "0x40011FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public int lastAccuracy;

		[Token(Token = "0x40011FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public bool isDirectional;

		[Token(Token = "0x40011FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public float tracePointSize;

		[Token(Token = "0x40011FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public float lastTracePointSize;

		[Token(Token = "0x40011FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public MeshFilter lastMesh;

		[Token(Token = "0x4001200")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public List<GameObject> tracePoints;

		[Token(Token = "0x4001201")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public List<MLPTracePoint> tracePointsData;

		[Token(Token = "0x4001202")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public MLPTracePoint mainTracePoint;

		[Token(Token = "0x4001203")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public MagicLightProbes parentVolume;

		[Token(Token = "0x4001204")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public bool showOptionsInManagerWindow;

		[Token(Token = "0x4001205")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		public float intensity;

		[Token(Token = "0x4001206")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public bool resetEditor;

		[Token(Token = "0x4001207")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB9")]
		public bool showLightOnScene;

		[Token(Token = "0x4001208")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBA")]
		public bool saveOnOutOfRange;

		[Token(Token = "0x4001209")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBB")]
		public bool isHDRP;

		[Token(Token = "0x400120A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		public Vector2 hdrpAreaSize;

		[Token(Token = "0x6000FCC")]
		[Address(RVA = "0x135155C", Offset = "0x135155C", VA = "0x135155C")]
		public MLPLight()
		{
		}
	}
	[Token(Token = "0x20002C3")]
	public class MLPPointData
	{
		[Token(Token = "0x400121A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float lightIntensity;

		[Token(Token = "0x400121B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float maxIntencity;

		[Token(Token = "0x400121C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 position;

		[Token(Token = "0x400121D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int col;

		[Token(Token = "0x400121E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int row;

		[Token(Token = "0x400121F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int depth;

		[Token(Token = "0x4001220")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public List<float> distancesToLights;

		[Token(Token = "0x4001221")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public List<Vector3> collisionPoints;

		[Token(Token = "0x4001222")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public List<MLPPointData> nearbyPoints;

		[Token(Token = "0x4001223")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public List<MLPPointData> nearbyPointsOptimaziable;

		[Token(Token = "0x4001224")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public bool removed;

		[Token(Token = "0x4001225")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		public bool outOfRange;

		[Token(Token = "0x4001226")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x52")]
		public bool inSaveRange;

		[Token(Token = "0x4001227")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x53")]
		public bool savedNearGeometry;

		[Token(Token = "0x4001228")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public bool contrastOnOutOfRangeArea;

		[Token(Token = "0x4001229")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
		public bool inRangeOfLight;

		[Token(Token = "0x400122A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x56")]
		public bool contrastOnShadingArea;

		[Token(Token = "0x400122B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x57")]
		public bool equalIntensity;

		[Token(Token = "0x400122C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public bool equalColor;

		[Token(Token = "0x400122D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
		public bool borderPoint;

		[Token(Token = "0x400122E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5A")]
		public bool outOfMaxHeight;

		[Token(Token = "0x400122F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float angleToLight;

		[Token(Token = "0x4001230")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Vector3 contactPoint;

		[Token(Token = "0x4001231")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public bool inCorner;

		[Token(Token = "0x4001232")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6D")]
		public bool lockForCull;

		[Token(Token = "0x4001233")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6E")]
		public bool onGeometryEdge;

		[Token(Token = "0x4001234")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6F")]
		public bool lightLeakLocked;

		[Token(Token = "0x4001235")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Vector3 collisionNormal;

		[Token(Token = "0x4001236")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public List<MLPLight> inRangeForLights;

		[Token(Token = "0x4001237")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public List<MLPLight> inShadowForLights;

		[Token(Token = "0x4001238")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public GameObject temporaryObject;

		[Token(Token = "0x4001239")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public GameObject collisionObject;

		[Token(Token = "0x400123A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public Color averagedColor;

		[Token(Token = "0x400123B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public bool xEndPoint;

		[Token(Token = "0x400123C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB1")]
		public bool yEndPoint;

		[Token(Token = "0x400123D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB2")]
		public bool zEndPoint;

		[Token(Token = "0x400123E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB3")]
		public bool xStartPoint;

		[Token(Token = "0x400123F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		public bool yStartPoint;

		[Token(Token = "0x4001240")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB5")]
		public bool zStartPoint;

		[Token(Token = "0x4001241")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public int equivalent;

		[Token(Token = "0x4001242")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		public float avaragedColorValue;

		[Token(Token = "0x4001243")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public bool isUnlit;

		[Token(Token = "0x6000FCD")]
		[Address(RVA = "0x1351638", Offset = "0x1351638", VA = "0x1351638")]
		public void SetPosition(Vector3 position)
		{
		}

		[Token(Token = "0x6000FCE")]
		[Address(RVA = "0x1351644", Offset = "0x1351644", VA = "0x1351644")]
		public void SetOutOfRange(bool visibility)
		{
		}

		[Token(Token = "0x6000FCF")]
		[Address(RVA = "0x1351650", Offset = "0x1351650", VA = "0x1351650")]
		public void SetLightIntensity(float intensity)
		{
		}

		[Token(Token = "0x6000FD0")]
		[Address(RVA = "0x1351658", Offset = "0x1351658", VA = "0x1351658")]
		public void SetInSaveRange(bool value)
		{
		}

		[Token(Token = "0x6000FD1")]
		[Address(RVA = "0x1351664", Offset = "0x1351664", VA = "0x1351664")]
		public void SetInContrastArea(bool value)
		{
		}

		[Token(Token = "0x6000FD2")]
		[Address(RVA = "0x1351670", Offset = "0x1351670", VA = "0x1351670")]
		public MLPPointData()
		{
		}
	}
	[Token(Token = "0x20002C4")]
	[ExecuteInEditMode]
	public class MLPPortal : MonoBehaviour
	{
		[Token(Token = "0x4001244")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float yStep;

		[Token(Token = "0x4001245")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float zStep;

		[Token(Token = "0x4001246")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int yCounter;

		[Token(Token = "0x4001247")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int zCounter;

		[Token(Token = "0x4001248")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool calculate;

		[Token(Token = "0x6000FD3")]
		[Address(RVA = "0x1351828", Offset = "0x1351828", VA = "0x1351828")]
		private void Start()
		{
		}

		[Token(Token = "0x6000FD4")]
		[Address(RVA = "0x135182C", Offset = "0x135182C", VA = "0x135182C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000FD5")]
		[Address(RVA = "0x1351864", Offset = "0x1351864", VA = "0x1351864")]
		private void DrawRayX(Vector3 dir)
		{
		}

		[Token(Token = "0x6000FD6")]
		[Address(RVA = "0x1351A58", Offset = "0x1351A58", VA = "0x1351A58")]
		private void DrawRayZ(Vector3 dir)
		{
		}

		[Token(Token = "0x6000FD7")]
		[Address(RVA = "0x1351C48", Offset = "0x1351C48", VA = "0x1351C48")]
		public MLPPortal()
		{
		}
	}
	[Token(Token = "0x20002C5")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x8D7160", Offset = "0x8D7160")]
	public class MLPQuickEditing : MonoBehaviour
	{
		[Token(Token = "0x4001249")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MagicLightProbes parent;

		[Token(Token = "0x400124A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float gizmoScale;

		[Token(Token = "0x400124B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float drawDistance;

		[Token(Token = "0x6000FD8")]
		[Address(RVA = "0x1351C50", Offset = "0x1351C50", VA = "0x1351C50")]
		public MLPQuickEditing()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002C6")]
	public class MLPTracePoint
	{
		[Token(Token = "0x400124C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 position;

		[Token(Token = "0x400124D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector3 forward;

		[Token(Token = "0x400124E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string name;

		[Token(Token = "0x400124F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject pointGameObject;

		[Token(Token = "0x6000FD9")]
		[Address(RVA = "0x1351C60", Offset = "0x1351C60", VA = "0x1351C60")]
		public MLPTracePoint()
		{
		}
	}
	[Token(Token = "0x20002C7")]
	[ExecuteInEditMode]
	public class MLPVolume : MonoBehaviour
	{
		[Token(Token = "0x4001250")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public MagicLightProbes parentRootComponent;

		[Token(Token = "0x4001251")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public MeshRenderer selfRenderer;

		[Token(Token = "0x4001252")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public bool showGizmo;

		[Token(Token = "0x4001253")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		public bool showGizmoSelected;

		[Token(Token = "0x4001254")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
		public bool isPartVolume;

		[Token(Token = "0x4001255")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B")]
		public bool isSubdividedPart;

		[Token(Token = "0x4001256")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool isCalculated;

		[Token(Token = "0x4001257")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
		public bool isInProcess;

		[Token(Token = "0x4001258")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E")]
		public bool skipped;

		[Token(Token = "0x4001259")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int id;

		[Token(Token = "0x400125A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Color colorOnSelection;

		[Token(Token = "0x400125B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public List<MLPPointData> localAcceptedPoints;

		[Token(Token = "0x400125C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public List<MLPPointData> localNearbyGeometryPoints;

		[Token(Token = "0x400125D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public List<MLPPointData> localContrastPoints;

		[Token(Token = "0x400125E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public List<MLPPointData> localCornerPoints;

		[Token(Token = "0x400125F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public List<Vector3> localNearbyGeometryPointsPositions;

		[Token(Token = "0x4001260")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public List<Vector3> resultNearbyGeometryPointsPositions;

		[Token(Token = "0x4001261")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public List<Vector3> localCornerPointsPositions;

		[Token(Token = "0x4001262")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public List<Vector3> resultLocalCornerPointsPositions;

		[Token(Token = "0x4001263")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public List<Vector3> localEquivalentPointsPositions;

		[Token(Token = "0x4001264")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public List<Vector3> resultLocalEquivalentPointsPositions;

		[Token(Token = "0x4001265")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public List<Vector3> resultLocalFreePointsPositions;

		[Token(Token = "0x4001266")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public List<Vector3> localUnlitPointsPositions;

		[Token(Token = "0x4001267")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public List<Vector3> localFreePointsPositions;

		[Token(Token = "0x4001268")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public List<Vector3> resultLocalUnlitPointsPositions;

		[Token(Token = "0x4001269")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public List<Vector3> localDirections;

		[Token(Token = "0x400126A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public List<Vector3> localAvaragedDirections;

		[Token(Token = "0x400126B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public List<MLPPointData> localColorThresholdEditingPoints;

		[Token(Token = "0x400126C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public int objectsInside;

		[Token(Token = "0x6000FDA")]
		[Address(RVA = "0x1351C68", Offset = "0x1351C68", VA = "0x1351C68")]
		public MLPVolume()
		{
		}
	}
	[Token(Token = "0x20002C8")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x8D71A8", Offset = "0x8D71A8")]
	public class MagicLightProbes : MonoBehaviour
	{
		[Token(Token = "0x20002C9")]
		public struct VolumeParameters
		{
			[Token(Token = "0x4001316")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int volumeIndex;

			[Token(Token = "0x4001317")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public Vector3 position;

			[Token(Token = "0x4001318")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Vector3 demensions;

			[Token(Token = "0x6000FE0")]
			[Address(RVA = "0xE8069C", Offset = "0xE8069C", VA = "0xE8069C")]
			public VolumeParameters(int _volumeIndex, Vector3 _position, Vector3 _demensions)
			{
			}
		}

		[Token(Token = "0x20002CA")]
		public enum FillingMode
		{
			[Token(Token = "0x400131A")]
			VerticalDublicating,
			[Token(Token = "0x400131B")]
			FullFilling,
			[Token(Token = "0x400131C")]
			SeparateFilling
		}

		[Token(Token = "0x20002CB")]
		public enum Workflow
		{
			[Token(Token = "0x400131E")]
			Simple,
			[Token(Token = "0x400131F")]
			Advanced
		}

		[Token(Token = "0x20002CC")]
		public enum BoundsDisplayMode
		{
			[Token(Token = "0x4001321")]
			Always,
			[Token(Token = "0x4001322")]
			OnSelection
		}

		[Token(Token = "0x20002CD")]
		public enum DebugPasses
		{
			[Token(Token = "0x4001324")]
			MaximumHeight,
			[Token(Token = "0x4001325")]
			GeometryCollision,
			[Token(Token = "0x4001326")]
			GeometryIntersections,
			[Token(Token = "0x4001327")]
			NearGeometry,
			[Token(Token = "0x4001328")]
			OutOfRange,
			[Token(Token = "0x4001329")]
			OutOfRangeBorders,
			[Token(Token = "0x400132A")]
			ShadingBorders,
			[Token(Token = "0x400132B")]
			ContrastAreas,
			[Token(Token = "0x400132C")]
			NearLights,
			[Token(Token = "0x400132D")]
			LightIntensity,
			[Token(Token = "0x400132E")]
			UnlitProbes,
			[Token(Token = "0x400132F")]
			EqualProbes,
			[Token(Token = "0x4001330")]
			GeometryEdges,
			[Token(Token = "0x4001331")]
			EqualColor
		}

		[Token(Token = "0x20002CE")]
		public enum DrawModes
		{
			[Token(Token = "0x4001333")]
			Accepted,
			[Token(Token = "0x4001334")]
			Culled,
			[Token(Token = "0x4001335")]
			Both
		}

		[Token(Token = "0x20002CF")]
		public enum CalculationTarget
		{
			[Token(Token = "0x4001337")]
			GeometryEdges,
			[Token(Token = "0x4001338")]
			GeneralCalculation
		}

		[Serializable]
		[Token(Token = "0x20002D0")]
		private struct TempPointData
		{
			[Token(Token = "0x4001339")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float xPos;

			[Token(Token = "0x400133A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public float yPos;

			[Token(Token = "0x400133B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public float zPos;

			[Token(Token = "0x6000FE1")]
			[Address(RVA = "0xE80690", Offset = "0xE80690", VA = "0xE80690")]
			public TempPointData(Vector3 _position)
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20002D1")]
		public class WorkPathFoundEvent : UnityEvent<string>
		{
			[Token(Token = "0x6000FE2")]
			[Address(RVA = "0xE806B0", Offset = "0xE806B0", VA = "0xE806B0")]
			public WorkPathFoundEvent()
			{
			}
		}

		[Token(Token = "0x400126D")]
		private const string COMPUTE_SHADERS_FOLDER = "/Passes/Compute Shaders/";

		[Token(Token = "0x400126E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public IEnumerator colorThresholdRecalculationRoutine;

		[Token(Token = "0x400126F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public IEnumerator lightProbesVolumeCalculatingRoutine;

		[Token(Token = "0x4001270")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public IEnumerator lightProbesVolumeCalculatingSubRoutine;

		[Token(Token = "0x4001271")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public IEnumerator executingPassesRoutine;

		[Token(Token = "0x4001272")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public IEnumerator volumeDivideingRoutine;

		[Token(Token = "0x4001273")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public List<string> groundAndFloorKeywords;

		[Token(Token = "0x4001274")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public List<string> storedGroundAndFloorKeywords;

		[Token(Token = "0x4001275")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public GameObject probesVolume;

		[Token(Token = "0x4001276")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public bool useDynamicDensity;

		[Token(Token = "0x4001277")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float volumeSpacing;

		[Token(Token = "0x4001278")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float volumeSpacingMin;

		[Token(Token = "0x4001279")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public float volumeSpacingMax;

		[Token(Token = "0x400127A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public float cornersDetectionThreshold;

		[Token(Token = "0x400127B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public float cornersDetectionThresholdMin;

		[Token(Token = "0x400127C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public float cornersDetectionThresholdMax;

		[Token(Token = "0x400127D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public float lastCornersDetectionThreshold;

		[Token(Token = "0x400127E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public float lastCornersDetectionThresholdMin;

		[Token(Token = "0x400127F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public float lastCornersDetectionThresholdMax;

		[Token(Token = "0x4001280")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public int lastMaxProbesInVolume;

		[Token(Token = "0x4001281")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public int maxProbesInVolume;

		[Token(Token = "0x4001282")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public int defaultMaxProbesCount;

		[Token(Token = "0x4001283")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public float lastVolumeSpacing;

		[Token(Token = "0x4001284")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public float lastVolumeSpacingMin;

		[Token(Token = "0x4001285")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public float lastVolumeSpacingMax;

		[Token(Token = "0x4001286")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public bool volumeSpacingChanged;

		[Token(Token = "0x4001287")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x99")]
		public bool tooManySubVolumes;

		[Token(Token = "0x4001288")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public FillingMode fillingMode;

		[Token(Token = "0x4001289")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public Workflow workflow;

		[Token(Token = "0x400128A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		public float maxHeightAboveGeometry;

		[Token(Token = "0x400128B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public float lastMaxHeightAboveGeometry;

		[Token(Token = "0x400128C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		public float maxHeightAboveTerrain;

		[Token(Token = "0x400128D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public bool considerDistanceToLights;

		[Token(Token = "0x400128E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		public float lightIntensityTreshold;

		[Token(Token = "0x400128F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public float colorTreshold;

		[Token(Token = "0x4001290")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		public float collisionDetectionRadius;

		[Token(Token = "0x4001291")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public bool saveProbesNearbyGeometry;

		[Token(Token = "0x4001292")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		public float cornerProbesSpacing;

		[Token(Token = "0x4001293")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public float nearbyGeometryDetectionRadius;

		[Token(Token = "0x4001294")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		public float nearbyGeometryDetectionRadiusMin;

		[Token(Token = "0x4001295")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public float nearbyGeometryDetectionRadiusMax;

		[Token(Token = "0x4001296")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		public float distanceFromNearbyGeometry;

		[Token(Token = "0x4001297")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public bool fillEquivalentVolume;

		[Token(Token = "0x4001298")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		public float equivalentVolumeFillingRate;

		[Token(Token = "0x4001299")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public bool fillUnlitVolume;

		[Token(Token = "0x400129A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE1")]
		public bool fillFreeVolume;

		[Token(Token = "0x400129B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		public float unlitVolumeFillingRate;

		[Token(Token = "0x400129C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public float freeVolumeFillingRate;

		[Token(Token = "0x400129D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		public bool cullAcceptedVolume;

		[Token(Token = "0x400129E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public float acceptedVolumeFillingRate;

		[Token(Token = "0x400129F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		public float nearbyGeometryVolumeFillingRate;

		[Token(Token = "0x40012A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public float verticalDublicatingHeight;

		[Token(Token = "0x40012A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		public float verticalDublicatingStep;

		[Token(Token = "0x40012A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public LayerMask raycastFilter;

		[Token(Token = "0x40012A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public List<MLPLight> excludedLights;

		[Token(Token = "0x40012A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public LayerMask layerMask;

		[Token(Token = "0x40012A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		public int firstCollisionLayer;

		[Token(Token = "0x40012A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		public bool useMultithreading;

		[Token(Token = "0x40012A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		public GameObject previousSelection;

		[Token(Token = "0x40012A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		public bool unloaded;

		[Token(Token = "0x40012A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x129")]
		public bool sceneChanging;

		[Token(Token = "0x40012AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12A")]
		public bool waitForPrevious;

		[Token(Token = "0x40012AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		public MagicLightProbes previousVolume;

		[Token(Token = "0x40012AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		public bool optimizeForMixedLighting;

		[Token(Token = "0x40012AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x139")]
		public bool lastOptimizeForMixedLightingValue;

		[Token(Token = "0x40012AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13A")]
		public bool preventLeakageThroughWalls;

		[Token(Token = "0x40012AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13B")]
		public bool useVolumeBottom;

		[Token(Token = "0x40012B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
		public float lastColorThreshold;

		[Token(Token = "0x40012B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		public float lastLightIntensityThreshold;

		[Token(Token = "0x40012B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
		public float lastEquivalentVolumeFillingRate;

		[Token(Token = "0x40012B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		public float lastUnlitVolumeFillingRate;

		[Token(Token = "0x40012B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
		public float lastFreeVolumeFillingRate;

		[Token(Token = "0x40012B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		public float lastCornerProbesSpacing;

		[Token(Token = "0x40012B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
		public float lastDistanceFromGeometry;

		[Token(Token = "0x40012B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		public bool debugMode;

		[Token(Token = "0x40012B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
		public float debugObjectScale;

		[Token(Token = "0x40012B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		public BoundsDisplayMode boundsDisplayMode;

		[Token(Token = "0x40012BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
		public DebugPasses debugPass;

		[Token(Token = "0x40012BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		public DrawModes drawMode;

		[Token(Token = "0x40012BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
		public bool debugShowLightIntensity;

		[Token(Token = "0x40012BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16D")]
		public bool showPreviewGrid;

		[Token(Token = "0x40012BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16E")]
		public bool nextStep;

		[Token(Token = "0x40012BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16F")]
		public bool cullByColor;

		[Token(Token = "0x40012C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		public bool forceSaveProbesOnShadingBorders;

		[Token(Token = "0x40012C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		public string dataPath;

		[Token(Token = "0x40012C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		public string workPath;

		[Token(Token = "0x40012C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		public bool workPathFound;

		[Token(Token = "0x40012C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		public List<Vector3> localFinishedPositions;

		[Token(Token = "0x40012C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		public ComputeShader calculateVolumeFilling;

		[Token(Token = "0x40012C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		public ComputeShader calculateProbeSpacing;

		[Token(Token = "0x40012C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		public ComputeShader calculateDistanceFromGeometry;

		[Token(Token = "0x40012C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		public MLPVolume currentVolume;

		[Token(Token = "0x40012C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		public MLPQuickEditing quickEditingComponent;

		[Token(Token = "0x40012CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		public bool recalculationRequired;

		[Token(Token = "0x40012CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		private List<Collider> lightColliders;

		[Token(Token = "0x40012CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		private List<Collider> objectColliders;

		[Token(Token = "0x40012CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		private List<MLPPointData> finalDebugAcceptedPoints;

		[Token(Token = "0x40012CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		private List<MLPPointData> finalDebugCulledPoints;

		[Token(Token = "0x40012CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		private List<GameObject> tempObjects;

		[Token(Token = "0x40012D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		private List<GameObject> temporarilyDisabledDynamicObjects;

		[Token(Token = "0x40012D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		private List<GameObject> staticObjectsWithoutCollider;

		[Token(Token = "0x40012D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		private GameObject combinedVolumeObject;

		[Token(Token = "0x40012D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		private VolumeParameters currentEditingVolume;

		[Token(Token = "0x40012D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x224")]
		private Vector3 currentSelectedObjectLastPosition;

		[Token(Token = "0x40012D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
		private GameObject lastSelectedObject;

		[Token(Token = "0x40012D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
		public bool cancelCombination;

		[Token(Token = "0x40012D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
		public List<IEnumerator> passesToExecute;

		[Token(Token = "0x40012D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
		public List<GameObject> staticObjects;

		[Token(Token = "0x40012D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
		public List<MLPLight> lights;

		[Token(Token = "0x40012DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
		public List<MLPPointData> tmpSharedPointsArray;

		[Token(Token = "0x40012DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
		public List<MLPPointData> tmpOutOfRangePoints;

		[Token(Token = "0x40012DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
		public List<MLPPointData> tmpOutOfMaxHeightPoints;

		[Token(Token = "0x40012DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
		public List<MLPPointData> tmpGeometryCollisionPoints;

		[Token(Token = "0x40012DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
		public List<MLPPointData> tmpContrastOnOutOfRangePoints;

		[Token(Token = "0x40012DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
		public List<MLPPointData> tmpContrastShadingBordersPoints;

		[Token(Token = "0x40012E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
		public List<MLPPointData> tmpUnlitPoints;

		[Token(Token = "0x40012E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
		public List<MLPPointData> tmpFreePoints;

		[Token(Token = "0x40012E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
		public List<MLPPointData> tmpNearbyGeometryPoints;

		[Token(Token = "0x40012E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
		public List<MLPPointData> tmpPointsNearGeometryIntersections;

		[Token(Token = "0x40012E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
		public List<MLPPointData> tmpNearbyLightsPoints;

		[Token(Token = "0x40012E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B0")]
		public List<MLPPointData> tmpEqualPoints;

		[Token(Token = "0x40012E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B8")]
		public List<MLPPointData> debugCulledPoints;

		[Token(Token = "0x40012E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C0")]
		public List<MLPPointData> debugAcceptedPoints;

		[Token(Token = "0x40012E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C8")]
		public List<GameObject> subVolumesDivided;

		[Token(Token = "0x40012E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D0")]
		public List<Vector3> points;

		[Token(Token = "0x40012EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D8")]
		public List<VolumeParameters> innerVolumes;

		[Token(Token = "0x40012EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E0")]
		public List<VolumeParameters> subVolumesParameters;

		[Token(Token = "0x40012EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E8")]
		public List<MagicLightProbes> innerVolumesObjects;

		[Token(Token = "0x40012ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2F0")]
		public List<LayerMask> layerMasks;

		[Token(Token = "0x40012EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2F8")]
		public List<Vector3> transformedPoints;

		[Token(Token = "0x40012EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x300")]
		public string assetEditorPath;

		[Token(Token = "0x40012F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x308")]
		public MagicLightProbes parentVolume;

		[Token(Token = "0x40012F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static bool operationalDataLost;

		[Token(Token = "0x40012F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x310")]
		public bool localOperationalDataLost;

		[Token(Token = "0x40012F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x311")]
		public bool recombinationNeeded;

		[Token(Token = "0x40012F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x312")]
		public bool isInBackground;

		[Token(Token = "0x40012F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x313")]
		public bool realtimeEditing;

		[Token(Token = "0x40012F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x314")]
		public bool calculated;

		[Token(Token = "0x40012F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x315")]
		public bool calculatingError;

		[Token(Token = "0x40012F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x318")]
		public int xPointsCount;

		[Token(Token = "0x40012F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31C")]
		public int yPointsCount;

		[Token(Token = "0x40012FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x320")]
		public int zPointsCount;

		[Token(Token = "0x40012FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x324")]
		public float prevVolumeScaleX;

		[Token(Token = "0x40012FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x328")]
		public float prevVolumeScaleY;

		[Token(Token = "0x40012FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32C")]
		public float prevVolumeScaleZ;

		[Token(Token = "0x40012FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x330")]
		public int totalProbes;

		[Token(Token = "0x40012FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x334")]
		public int totalProbesInSubVolume;

		[Token(Token = "0x4001300")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x338")]
		public int totalProbesInVolume;

		[Token(Token = "0x4001301")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x33C")]
		public bool calculatingVolume;

		[Token(Token = "0x4001302")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x33D")]
		public bool calculatingVolumeSubPass;

		[Token(Token = "0x4001303")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x340")]
		public string currentPass;

		[Token(Token = "0x4001304")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x348")]
		public int currentPassProgressCounter;

		[Token(Token = "0x4001305")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34C")]
		public int currentPassProgressFrameSkipper;

		[Token(Token = "0x4001306")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x350")]
		public float totalProgress;

		[Token(Token = "0x4001307")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x354")]
		public float currentPassProgress;

		[Token(Token = "0x4001308")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x358")]
		public int selectedTab;

		[Token(Token = "0x4001309")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x35C")]
		public bool showOptionsInManagerWindow;

		[Token(Token = "0x400130A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x35D")]
		public bool restored;

		[Token(Token = "0x400130B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x360")]
		public int currentVolumePart;

		[Token(Token = "0x400130C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x364")]
		public float eta;

		[Token(Token = "0x400130D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x368")]
		public bool changed;

		[Token(Token = "0x400130E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x369")]
		public bool redivideParts;

		[Token(Token = "0x400130F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x36A")]
		public bool combinedVolumeError;

		[Token(Token = "0x4001310")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x36B")]
		private bool passesExecuting;

		[Token(Token = "0x4001311")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x36C")]
		private int totalProgressCounter;

		[Token(Token = "0x4001312")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x370")]
		private int totalProgressFrameSkipper;

		[Token(Token = "0x4001313")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x374")]
		private float startTime;

		[Token(Token = "0x4001314")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x378")]
		private float endTime;

		[Token(Token = "0x4001315")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x37C")]
		private bool scenePreparing;

		[Token(Token = "0x6000FDB")]
		[Address(RVA = "0x13520B8", Offset = "0x13520B8", VA = "0x13520B8")]
		public void CheckForNearContrast(MLPPointData pointForCheck)
		{
		}

		[Token(Token = "0x6000FDC")]
		[Address(RVA = "0x13523BC", Offset = "0x13523BC", VA = "0x13523BC")]
		public bool UpdateProgress(int count, int period = 100)
		{
			return default(bool);
		}

		[Token(Token = "0x6000FDD")]
		[Address(RVA = "0x1352404", Offset = "0x1352404", VA = "0x1352404")]
		private bool UpdateTotalProgress(int count, int period = 100)
		{
			return default(bool);
		}

		[Token(Token = "0x6000FDE")]
		[Address(RVA = "0x135244C", Offset = "0x135244C", VA = "0x135244C")]
		public MagicLightProbes()
		{
		}
	}
	[Token(Token = "0x20002D2")]
	public class CheckForLightLeakAreas
	{
		[Token(Token = "0x20002D3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D71F4", Offset = "0x8D71F4")]
		private sealed class <ExecutePass>d__0 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400133C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400133D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400133E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MagicLightProbes parent;

			[Token(Token = "0x400133F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <i>5__2;

			[Token(Token = "0x17000258")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000FE8")]
				[Address(RVA = "0x104ACEC", Offset = "0x104ACEC", VA = "0x104ACEC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000259")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000FEA")]
				[Address(RVA = "0x104AD34", Offset = "0x104AD34", VA = "0x104AD34", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000FE5")]
			[Address(RVA = "0x104A644", Offset = "0x104A644", VA = "0x104A644")]
			[DebuggerHidden]
			public <ExecutePass>d__0(int <>1__state)
			{
			}

			[Token(Token = "0x6000FE6")]
			[Address(RVA = "0x104A670", Offset = "0x104A670", VA = "0x104A670", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000FE7")]
			[Address(RVA = "0x104A674", Offset = "0x104A674", VA = "0x104A674", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000FE9")]
			[Address(RVA = "0x104ACF4", Offset = "0x104ACF4", VA = "0x104ACF4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x6000FE3")]
		[Address(RVA = "0x12FD9A8", Offset = "0x12FD9A8", VA = "0x12FD9A8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E49F8", Offset = "0x8E49F8")]
		public IEnumerator ExecutePass(MagicLightProbes parent)
		{
			return null;
		}

		[Token(Token = "0x6000FE4")]
		[Address(RVA = "0x12FDA20", Offset = "0x12FDA20", VA = "0x12FDA20")]
		public CheckForLightLeakAreas()
		{
		}
	}
	[Token(Token = "0x20002D4")]
	public class DublicateVertical
	{
		[Token(Token = "0x20002D5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D7204", Offset = "0x8D7204")]
		private sealed class <ExecutePass>d__0 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001340")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001341")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001342")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MagicLightProbes parent;

			[Token(Token = "0x4001343")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <steps>5__2;

			[Token(Token = "0x4001344")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private List<MLPPointData> <candidates>5__3;

			[Token(Token = "0x4001345")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private List<MLPPointData> <savedNearGeometry>5__4;

			[Token(Token = "0x4001346")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private int <i>5__5;

			[Token(Token = "0x4001347")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private List<MLPPointData>.Enumerator <>7__wrap5;

			[Token(Token = "0x1700025A")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000FF1")]
				[Address(RVA = "0x104E6A4", Offset = "0x104E6A4", VA = "0x104E6A4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700025B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000FF3")]
				[Address(RVA = "0x104E6EC", Offset = "0x104E6EC", VA = "0x104E6EC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000FED")]
			[Address(RVA = "0x104DCEC", Offset = "0x104DCEC", VA = "0x104DCEC")]
			[DebuggerHidden]
			public <ExecutePass>d__0(int <>1__state)
			{
			}

			[Token(Token = "0x6000FEE")]
			[Address(RVA = "0x104DD18", Offset = "0x104DD18", VA = "0x104DD18", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000FEF")]
			[Address(RVA = "0x104DD88", Offset = "0x104DD88", VA = "0x104DD88", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000FF0")]
			[Address(RVA = "0x104DD34", Offset = "0x104DD34", VA = "0x104DD34")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6000FF2")]
			[Address(RVA = "0x104E6AC", Offset = "0x104E6AC", VA = "0x104E6AC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x6000FEB")]
		[Address(RVA = "0x1092D10", Offset = "0x1092D10", VA = "0x1092D10")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E4AA8", Offset = "0x8E4AA8")]
		public IEnumerator ExecutePass(MagicLightProbes parent)
		{
			return null;
		}

		[Token(Token = "0x6000FEC")]
		[Address(RVA = "0x1092D88", Offset = "0x1092D88", VA = "0x1092D88")]
		public DublicateVertical()
		{
		}
	}
	[Token(Token = "0x20002D6")]
	public static class RandomGen
	{
		[Token(Token = "0x4001348")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static System.Random _global;

		[Token(Token = "0x4001349")]
		[ThreadStatic]
		private static System.Random _local;

		[Token(Token = "0x6000FF4")]
		[Address(RVA = "0x105ABE4", Offset = "0x105ABE4", VA = "0x105ABE4")]
		public static int Next(int min, int max)
		{
			return default(int);
		}
	}
	[Token(Token = "0x20002D7")]
	public class EquivalentProbesOptimization
	{
		[Token(Token = "0x20002D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D7214", Offset = "0x8D7214")]
		private sealed class <ExecutePass>d__0 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400134A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400134B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400134C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MagicLightProbes parent;

			[Token(Token = "0x400134D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public MLPVolume currentVolume;

			[Token(Token = "0x400134E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public bool realtimeEditing;

			[Token(Token = "0x400134F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private Vector3[] <exit>5__2;

			[Token(Token = "0x4001350")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private List<MLPPointData> <tempList>5__3;

			[Token(Token = "0x4001351")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private int <i>5__4;

			[Token(Token = "0x1700025C")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000FFB")]
				[Address(RVA = "0x104EDF8", Offset = "0x104EDF8", VA = "0x104EDF8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700025D")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000FFD")]
				[Address(RVA = "0x104EE40", Offset = "0x104EE40", VA = "0x104EE40", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000FF8")]
			[Address(RVA = "0x104E6F4", Offset = "0x104E6F4", VA = "0x104E6F4")]
			[DebuggerHidden]
			public <ExecutePass>d__0(int <>1__state)
			{
			}

			[Token(Token = "0x6000FF9")]
			[Address(RVA = "0x104E720", Offset = "0x104E720", VA = "0x104E720", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000FFA")]
			[Address(RVA = "0x104E724", Offset = "0x104E724", VA = "0x104E724", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000FFC")]
			[Address(RVA = "0x104EE00", Offset = "0x104EE00", VA = "0x104EE00", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x6000FF6")]
		[Address(RVA = "0x10933A0", Offset = "0x10933A0", VA = "0x10933A0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E4B58", Offset = "0x8E4B58")]
		public IEnumerator ExecutePass(MagicLightProbes parent, [Optional] MLPVolume currentVolume, bool realtimeEditing = false)
		{
			return null;
		}

		[Token(Token = "0x6000FF7")]
		[Address(RVA = "0x1093440", Offset = "0x1093440", VA = "0x1093440")]
		public EquivalentProbesOptimization()
		{
		}
	}
	[Token(Token = "0x20002D9")]
	public class PartialVolumeFilling
	{
		[Token(Token = "0x20002DA")]
		public enum TargetPoint
		{
			[Token(Token = "0x4001353")]
			Unlit,
			[Token(Token = "0x4001354")]
			Equivalent,
			[Token(Token = "0x4001355")]
			Free
		}

		[Token(Token = "0x20002DB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D7224", Offset = "0x8D7224")]
		private sealed class <ExecutePass>d__1 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001356")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001357")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001358")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TargetPoint targetPoint;

			[Token(Token = "0x4001359")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public MagicLightProbes parent;

			[Token(Token = "0x400135A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public MLPVolume currentVolume;

			[Token(Token = "0x400135B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public bool realtimeEditing;

			[Token(Token = "0x400135C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private List<MLPPointData> <tempList>5__2;

			[Token(Token = "0x400135D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private List<Vector3> <realTimeEditingList>5__3;

			[Token(Token = "0x400135E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private List<Vector3> <targetPoints>5__4;

			[Token(Token = "0x400135F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private float <fillingRate>5__5;

			[Token(Token = "0x4001360")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private Vector3[] <exit>5__6;

			[Token(Token = "0x4001361")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			private int <i>5__7;

			[Token(Token = "0x1700025E")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001003")]
				[Address(RVA = "0xE8BC8C", Offset = "0xE8BC8C", VA = "0xE8BC8C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700025F")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001005")]
				[Address(RVA = "0xE8BCD4", Offset = "0xE8BCD4", VA = "0xE8BCD4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001000")]
			[Address(RVA = "0xE8AF38", Offset = "0xE8AF38", VA = "0xE8AF38")]
			[DebuggerHidden]
			public <ExecutePass>d__1(int <>1__state)
			{
			}

			[Token(Token = "0x6001001")]
			[Address(RVA = "0xE8AF64", Offset = "0xE8AF64", VA = "0xE8AF64", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001002")]
			[Address(RVA = "0xE8AF68", Offset = "0xE8AF68", VA = "0xE8AF68", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001004")]
			[Address(RVA = "0xE8BC94", Offset = "0xE8BC94", VA = "0xE8BC94", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x6000FFE")]
		[Address(RVA = "0x1052444", Offset = "0x1052444", VA = "0x1052444")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E4C08", Offset = "0x8E4C08")]
		public IEnumerator ExecutePass(MagicLightProbes parent, TargetPoint targetPoint, [Optional] MLPVolume currentVolume, bool realtimeEditing = false)
		{
			return null;
		}

		[Token(Token = "0x6000FFF")]
		[Address(RVA = "0x10524F4", Offset = "0x10524F4", VA = "0x10524F4")]
		public PartialVolumeFilling()
		{
		}
	}
	[Token(Token = "0x20002DC")]
	public class RemoveUnusedPoints
	{
		[Token(Token = "0x20002DD")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D7234", Offset = "0x8D7234")]
		private sealed class <ExecutePass>d__0 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001362")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001363")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001364")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MagicLightProbes parent;

			[Token(Token = "0x4001365")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private List<MLPPointData> <pointsToRemove>5__2;

			[Token(Token = "0x4001366")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int <i>5__3;

			[Token(Token = "0x17000260")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600100B")]
				[Address(RVA = "0xE8D284", Offset = "0xE8D284", VA = "0xE8D284", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000261")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600100D")]
				[Address(RVA = "0xE8D2CC", Offset = "0xE8D2CC", VA = "0xE8D2CC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001008")]
			[Address(RVA = "0xE8CD04", Offset = "0xE8CD04", VA = "0xE8CD04")]
			[DebuggerHidden]
			public <ExecutePass>d__0(int <>1__state)
			{
			}

			[Token(Token = "0x6001009")]
			[Address(RVA = "0xE8CD30", Offset = "0xE8CD30", VA = "0xE8CD30", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600100A")]
			[Address(RVA = "0xE8CD34", Offset = "0xE8CD34", VA = "0xE8CD34", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600100C")]
			[Address(RVA = "0xE8D28C", Offset = "0xE8D28C", VA = "0xE8D28C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x6001006")]
		[Address(RVA = "0x105D8F8", Offset = "0x105D8F8", VA = "0x105D8F8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E4CB8", Offset = "0x8E4CB8")]
		public IEnumerator ExecutePass(MagicLightProbes parent)
		{
			return null;
		}

		[Token(Token = "0x6001007")]
		[Address(RVA = "0x105D970", Offset = "0x105D970", VA = "0x105D970")]
		public RemoveUnusedPoints()
		{
		}
	}
	[Token(Token = "0x20002DE")]
	public class SetDistanceFromGeometry
	{
		[Token(Token = "0x20002DF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D7244", Offset = "0x8D7244")]
		private sealed class <ExecutePass>d__0 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001367")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001368")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001369")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MLPVolume currentVolume;

			[Token(Token = "0x400136A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public MagicLightProbes parent;

			[Token(Token = "0x400136B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private Vector3[] <exit>5__2;

			[Token(Token = "0x400136C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private int <i>5__3;

			[Token(Token = "0x17000262")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001013")]
				[Address(RVA = "0x1C2C318", Offset = "0x1C2C318", VA = "0x1C2C318", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000263")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001015")]
				[Address(RVA = "0x1C2C360", Offset = "0x1C2C360", VA = "0x1C2C360", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001010")]
			[Address(RVA = "0x1C2BDD8", Offset = "0x1C2BDD8", VA = "0x1C2BDD8")]
			[DebuggerHidden]
			public <ExecutePass>d__0(int <>1__state)
			{
			}

			[Token(Token = "0x6001011")]
			[Address(RVA = "0x1C2BE04", Offset = "0x1C2BE04", VA = "0x1C2BE04", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001012")]
			[Address(RVA = "0x1C2BE08", Offset = "0x1C2BE08", VA = "0x1C2BE08", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001014")]
			[Address(RVA = "0x1C2C320", Offset = "0x1C2C320", VA = "0x1C2C320", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x600100E")]
		[Address(RVA = "0x10645C4", Offset = "0x10645C4", VA = "0x10645C4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E4D68", Offset = "0x8E4D68")]
		public IEnumerator ExecutePass(MagicLightProbes parent, MLPVolume currentVolume)
		{
			return null;
		}

		[Token(Token = "0x600100F")]
		[Address(RVA = "0x1064658", Offset = "0x1064658", VA = "0x1064658")]
		public SetDistanceFromGeometry()
		{
		}
	}
}
namespace Valve.VR.InteractionSystem.Sample
{
	[Token(Token = "0x20002E0")]
	public class LockToPoint3 : MonoBehaviour
	{
		[Token(Token = "0x20002E1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D7254", Offset = "0x8D7254")]
		private sealed class <WaitToStart>d__21 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001380")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001381")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001382")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public LockToPoint3 <>4__this;

			[Token(Token = "0x17000264")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600101E")]
				[Address(RVA = "0xE7F568", Offset = "0xE7F568", VA = "0xE7F568", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000265")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001020")]
				[Address(RVA = "0xE7F5B0", Offset = "0xE7F5B0", VA = "0xE7F5B0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600101B")]
			[Address(RVA = "0xE7F3D8", Offset = "0xE7F3D8", VA = "0xE7F3D8")]
			[DebuggerHidden]
			public <WaitToStart>d__21(int <>1__state)
			{
			}

			[Token(Token = "0x600101C")]
			[Address(RVA = "0xE7F404", Offset = "0xE7F404", VA = "0xE7F404", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600101D")]
			[Address(RVA = "0xE7F408", Offset = "0xE7F408", VA = "0xE7F408", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600101F")]
			[Address(RVA = "0xE7F570", Offset = "0xE7F570", VA = "0xE7F570", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400136D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform snapTo;

		[Token(Token = "0x400136E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform snapTo2;

		[Token(Token = "0x400136F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Rigidbody body;

		[Token(Token = "0x4001370")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float snapTime;

		[Token(Token = "0x4001371")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float dropTimer;

		[Token(Token = "0x4001372")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private PVRGrabbable interactable;

		[Token(Token = "0x4001373")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool notActive;

		[Token(Token = "0x4001374")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		public bool isAPog;

		[Token(Token = "0x4001375")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x42")]
		public bool hoverTime;

		[Token(Token = "0x4001376")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float degreesPerSecond;

		[Token(Token = "0x4001377")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float amplitude;

		[Token(Token = "0x4001378")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float frequency;

		[Token(Token = "0x4001379")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float speed;

		[Token(Token = "0x400137A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public bool testIt;

		[Token(Token = "0x400137B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float counter;

		[Token(Token = "0x400137C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float startTime;

		[Token(Token = "0x400137D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public int floatUpCounter;

		[Token(Token = "0x400137E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private Vector3 posOffset;

		[Token(Token = "0x400137F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Vector3 tempPos;

		[Token(Token = "0x6001016")]
		[Address(RVA = "0x1349778", Offset = "0x1349778", VA = "0x1349778")]
		private void Start()
		{
		}

		[Token(Token = "0x6001017")]
		[Address(RVA = "0x1349840", Offset = "0x1349840", VA = "0x1349840")]
		public void FirstFloatUp()
		{
		}

		[Token(Token = "0x6001018")]
		[Address(RVA = "0x13498C0", Offset = "0x13498C0", VA = "0x13498C0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E4E18", Offset = "0x8E4E18")]
		public IEnumerator WaitToStart()
		{
			return null;
		}

		[Token(Token = "0x6001019")]
		[Address(RVA = "0x1349938", Offset = "0x1349938", VA = "0x1349938")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x600101A")]
		[Address(RVA = "0x1349CE0", Offset = "0x1349CE0", VA = "0x1349CE0")]
		public LockToPoint3()
		{
		}
	}
}
namespace DinoFractureDemo
{
	[Token(Token = "0x20002E2")]
	public enum ButtonState
	{
		[Token(Token = "0x4001384")]
		Rest,
		[Token(Token = "0x4001385")]
		Hover,
		[Token(Token = "0x4001386")]
		Pressed
	}
	[Token(Token = "0x20002E3")]
	public class Button : MonoBehaviour
	{
		[Token(Token = "0x4001387")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Texture2D RestTexture;

		[Token(Token = "0x4001388")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Texture2D HoverTexture;

		[Token(Token = "0x4001389")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Texture2D PressedTexture;

		[Token(Token = "0x400138A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private ButtonState _state;

		[Token(Token = "0x17000266")]
		public ButtonState State
		{
			[Token(Token = "0x6001021")]
			[Address(RVA = "0x12F1A28", Offset = "0x12F1A28", VA = "0x12F1A28")]
			get
			{
				return default(ButtonState);
			}
		}

		[Token(Token = "0x6001022")]
		[Address(RVA = "0x12F1A30", Offset = "0x12F1A30", VA = "0x12F1A30")]
		private void Start()
		{
		}

		[Token(Token = "0x6001023")]
		[Address(RVA = "0x12F1AA0", Offset = "0x12F1AA0", VA = "0x12F1AA0")]
		public bool UpdateState()
		{
			return default(bool);
		}

		[Token(Token = "0x6001024")]
		[Address(RVA = "0x12F1C94", Offset = "0x12F1C94", VA = "0x12F1C94")]
		public Button()
		{
		}
	}
	[Token(Token = "0x20002E4")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x8D7264", Offset = "0x8D7264")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x8D7264", Offset = "0x8D7264")]
	public class FractureOnClick : MonoBehaviour
	{
		[Token(Token = "0x6001025")]
		[Address(RVA = "0x1095B38", Offset = "0x1095B38", VA = "0x1095B38")]
		private void Update()
		{
		}

		[Token(Token = "0x6001026")]
		[Address(RVA = "0x1095CF0", Offset = "0x1095CF0", VA = "0x1095CF0")]
		public FractureOnClick()
		{
		}
	}
	[Token(Token = "0x20002E5")]
	public class GameRoot : MonoBehaviour
	{
		[Token(Token = "0x20002E6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D72F8", Offset = "0x8D72F8")]
		private sealed class <ResetCoroutine>d__7 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400138E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400138F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001390")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GameRoot <>4__this;

			[Token(Token = "0x17000268")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600102F")]
				[Address(RVA = "0xE7D380", Offset = "0xE7D380", VA = "0xE7D380", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000269")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001031")]
				[Address(RVA = "0xE7D3C8", Offset = "0xE7D3C8", VA = "0xE7D3C8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600102C")]
			[Address(RVA = "0xE7D214", Offset = "0xE7D214", VA = "0xE7D214")]
			[DebuggerHidden]
			public <ResetCoroutine>d__7(int <>1__state)
			{
			}

			[Token(Token = "0x600102D")]
			[Address(RVA = "0xE7D240", Offset = "0xE7D240", VA = "0xE7D240", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600102E")]
			[Address(RVA = "0xE7D244", Offset = "0xE7D244", VA = "0xE7D244", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001030")]
			[Address(RVA = "0xE7D388", Offset = "0xE7D388", VA = "0xE7D388", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400138B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static GameRoot _Instance;

		[Token(Token = "0x400138C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject Main;

		[Token(Token = "0x400138D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private GameObject BackupRoot;

		[Token(Token = "0x17000267")]
		public static GameRoot Instance
		{
			[Token(Token = "0x6001027")]
			[Address(RVA = "0x1339E08", Offset = "0x1339E08", VA = "0x1339E08")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001028")]
		[Address(RVA = "0x1339E54", Offset = "0x1339E54", VA = "0x1339E54")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001029")]
		[Address(RVA = "0x1339F48", Offset = "0x1339F48", VA = "0x1339F48")]
		public void Reset()
		{
		}

		[Token(Token = "0x600102A")]
		[Address(RVA = "0x1339F84", Offset = "0x1339F84", VA = "0x1339F84")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E4EC8", Offset = "0x8E4EC8")]
		public IEnumerator ResetCoroutine()
		{
			return null;
		}

		[Token(Token = "0x600102B")]
		[Address(RVA = "0x1339FFC", Offset = "0x1339FFC", VA = "0x1339FFC")]
		public GameRoot()
		{
		}
	}
	[Token(Token = "0x20002E7")]
	public class TurnOffLightOnFracture : MonoBehaviour
	{
		[Token(Token = "0x6001032")]
		[Address(RVA = "0x103EE80", Offset = "0x103EE80", VA = "0x103EE80")]
		private void OnFracture(OnFractureEventArgs fractureRoot)
		{
		}

		[Token(Token = "0x6001033")]
		[Address(RVA = "0x103EF28", Offset = "0x103EF28", VA = "0x103EF28")]
		public TurnOffLightOnFracture()
		{
		}
	}
	[Token(Token = "0x20002E8")]
	public class UI : MonoBehaviour
	{
		[Token(Token = "0x4001391")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject CannonBallTemplate;

		[Token(Token = "0x4001392")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject BackButton;

		[Token(Token = "0x4001393")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject ForwardButton;

		[Token(Token = "0x4001394")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject ResetButton;

		[Token(Token = "0x4001395")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int PanelCount;

		[Token(Token = "0x4001396")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public int StartPanelIndex;

		[Token(Token = "0x4001397")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float PanelWidth;

		[Token(Token = "0x4001398")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public AnimationCurve MoveCurve;

		[Token(Token = "0x4001399")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float MoveTime;

		[Token(Token = "0x400139A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private int _targetPanel;

		[Token(Token = "0x400139B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float _moveStartPos;

		[Token(Token = "0x400139C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private float _moveT;

		[Token(Token = "0x6001034")]
		[Address(RVA = "0x103FA38", Offset = "0x103FA38", VA = "0x103FA38")]
		private void Start()
		{
		}

		[Token(Token = "0x6001035")]
		[Address(RVA = "0x103FAAC", Offset = "0x103FAAC", VA = "0x103FAAC")]
		private void Update()
		{
		}

		[Token(Token = "0x6001036")]
		[Address(RVA = "0x103FA50", Offset = "0x103FA50", VA = "0x103FA50")]
		private void SetButtonStates()
		{
		}

		[Token(Token = "0x6001037")]
		[Address(RVA = "0x103FFE4", Offset = "0x103FFE4", VA = "0x103FFE4")]
		public UI()
		{
		}
	}
}
namespace Common
{
	[Token(Token = "0x20002E9")]
	public class CaptionsPlacement : MonoBehaviour
	{
		[Token(Token = "0x20002EA")]
		private enum Anchor
		{
			[Token(Token = "0x40013AC")]
			TopLeft,
			[Token(Token = "0x40013AD")]
			Top,
			[Token(Token = "0x40013AE")]
			TopRight,
			[Token(Token = "0x40013AF")]
			Left,
			[Token(Token = "0x40013B0")]
			Center,
			[Token(Token = "0x40013B1")]
			Right,
			[Token(Token = "0x40013B2")]
			BottomLeft,
			[Token(Token = "0x40013B3")]
			Bottom,
			[Token(Token = "0x40013B4")]
			BottomRight
		}

		[Token(Token = "0x400139D")]
		private const Anchor LEFT_RIGHT_OFFSET = Anchor.Top;

		[Token(Token = "0x400139E")]
		private const Anchor TOP_BOTTOM_OFFSET = Anchor.Left;

		[Token(Token = "0x400139F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform target;

		[Token(Token = "0x40013A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DBF98", Offset = "0x8DBF98")]
		private Vector2 size;

		[Token(Token = "0x40013A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DBFE4", Offset = "0x8DBFE4")]
		[SerializeField]
		private float scale;

		[Token(Token = "0x40013A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private Vector2 viewAngleConstraints;

		[Token(Token = "0x40013A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DC040", Offset = "0x8DC040")]
		[SerializeField]
		private Image[] anchors;

		[Token(Token = "0x40013A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Transform playerHead;

		[Token(Token = "0x40013A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool endStuff;

		[Token(Token = "0x40013A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		private bool targetChanged;

		[Token(Token = "0x40013A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		private Vector2 currentOffset;

		[Token(Token = "0x40013A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[SerializeField]
		private float placementYAngle;

		[Token(Token = "0x40013A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private float placementXAngle;

		[Token(Token = "0x40013AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[SerializeField]
		private Anchor prevAnchor;

		[Token(Token = "0x6001038")]
		[Address(RVA = "0x12FB9C4", Offset = "0x12FB9C4", VA = "0x12FB9C4")]
		private void Start()
		{
		}

		[Token(Token = "0x6001039")]
		[Address(RVA = "0x12FB9F8", Offset = "0x12FB9F8", VA = "0x12FB9F8")]
		public void SetTarget(Transform target)
		{
		}

		[Token(Token = "0x600103A")]
		[Address(RVA = "0x12FBAA8", Offset = "0x12FBAA8", VA = "0x12FBAA8")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x600103B")]
		[Address(RVA = "0x12FBC8C", Offset = "0x12FBC8C", VA = "0x12FBC8C")]
		private (Vector3, Anchor) ConstrainPosition(Vector3 target)
		{
			return default((Vector3, Anchor));
		}

		[Token(Token = "0x600103C")]
		[Address(RVA = "0x12FC080", Offset = "0x12FC080", VA = "0x12FC080")]
		private void UpdateAnchor(Anchor activeAnchor)
		{
		}

		[Token(Token = "0x600103D")]
		[Address(RVA = "0x12FC164", Offset = "0x12FC164", VA = "0x12FC164")]
		public CaptionsPlacement()
		{
		}
	}
}
namespace UnityTemplateProjects
{
	[Token(Token = "0x20002EB")]
	public class SimpleCameraController : MonoBehaviour
	{
		[Token(Token = "0x20002EC")]
		private class CameraState
		{
			[Token(Token = "0x40013BC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float yaw;

			[Token(Token = "0x40013BD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float pitch;

			[Token(Token = "0x40013BE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float roll;

			[Token(Token = "0x40013BF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public float x;

			[Token(Token = "0x40013C0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float y;

			[Token(Token = "0x40013C1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public float z;

			[Token(Token = "0x6001042")]
			[Address(RVA = "0x1C2C368", Offset = "0x1C2C368", VA = "0x1C2C368")]
			public void SetFromTransform(Transform t)
			{
			}

			[Token(Token = "0x6001043")]
			[Address(RVA = "0x1C2C3F0", Offset = "0x1C2C3F0", VA = "0x1C2C3F0")]
			public void Translate(Vector3 translation)
			{
			}

			[Token(Token = "0x6001044")]
			[Address(RVA = "0x1C2C46C", Offset = "0x1C2C46C", VA = "0x1C2C46C")]
			public void LerpTowards(CameraState target, float positionLerpPct, float rotationLerpPct)
			{
			}

			[Token(Token = "0x6001045")]
			[Address(RVA = "0x1C2C534", Offset = "0x1C2C534", VA = "0x1C2C534")]
			public void UpdateTransform(Transform t)
			{
			}

			[Token(Token = "0x6001046")]
			[Address(RVA = "0x1C2C580", Offset = "0x1C2C580", VA = "0x1C2C580")]
			public CameraState()
			{
			}
		}

		[Token(Token = "0x40013B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private CameraState m_TargetCameraState;

		[Token(Token = "0x40013B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private CameraState m_InterpolatingCameraState;

		[Token(Token = "0x40013B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DC0CC", Offset = "0x8DC0CC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DC0CC", Offset = "0x8DC0CC")]
		public float boost;

		[Token(Token = "0x40013B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8DC12C", Offset = "0x8DC12C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DC12C", Offset = "0x8DC12C")]
		public float positionLerpTime;

		[Token(Token = "0x40013B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DC184", Offset = "0x8DC184")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DC184", Offset = "0x8DC184")]
		public AnimationCurve mouseSensitivityCurve;

		[Token(Token = "0x40013BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8DC1E4", Offset = "0x8DC1E4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DC1E4", Offset = "0x8DC1E4")]
		public float rotationLerpTime;

		[Token(Token = "0x40013BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DC23C", Offset = "0x8DC23C")]
		public bool invertY;

		[Token(Token = "0x600103E")]
		[Address(RVA = "0x1064660", Offset = "0x1064660", VA = "0x1064660")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600103F")]
		[Address(RVA = "0x10646C0", Offset = "0x10646C0", VA = "0x10646C0")]
		private Vector3 GetInputTranslationDirection()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001040")]
		[Address(RVA = "0x10647D4", Offset = "0x10647D4", VA = "0x10647D4")]
		private void Update()
		{
		}

		[Token(Token = "0x6001041")]
		[Address(RVA = "0x1064A50", Offset = "0x1064A50", VA = "0x1064A50")]
		public SimpleCameraController()
		{
		}
	}
}
namespace DinoFracture
{
	[Token(Token = "0x20002ED")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x8D7308", Offset = "0x8D7308")]
	public class FractureOnCollision : MonoBehaviour
	{
		[Token(Token = "0x40013C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float ForceThreshold;

		[Token(Token = "0x40013C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float ForceFalloffRadius;

		[Token(Token = "0x40013C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool AdjustForKinematic;

		[Token(Token = "0x40013C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private Vector3 _impactVelocity;

		[Token(Token = "0x40013C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float _impactMass;

		[Token(Token = "0x40013C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Vector3 _impactPoint;

		[Token(Token = "0x40013C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Rigidbody _impactBody;

		[Token(Token = "0x6001047")]
		[Address(RVA = "0x1095CF8", Offset = "0x1095CF8", VA = "0x1095CF8")]
		private void OnCollisionEnter(Collision col)
		{
		}

		[Token(Token = "0x6001048")]
		[Address(RVA = "0x1096078", Offset = "0x1096078", VA = "0x1096078")]
		private void OnFracture(OnFractureEventArgs args)
		{
		}

		[Token(Token = "0x6001049")]
		[Address(RVA = "0x10963C4", Offset = "0x10963C4", VA = "0x10963C4")]
		public FractureOnCollision()
		{
		}
	}
	[Token(Token = "0x20002EE")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x8D7368", Offset = "0x8D7368")]
	public class PlaySoundOnFracture : MonoBehaviour
	{
		[Token(Token = "0x600104A")]
		[Address(RVA = "0x10561C0", Offset = "0x10561C0", VA = "0x10561C0")]
		private void OnFracture(OnFractureEventArgs args)
		{
		}

		[Token(Token = "0x600104B")]
		[Address(RVA = "0x10565A8", Offset = "0x10565A8", VA = "0x10565A8")]
		public PlaySoundOnFracture()
		{
		}
	}
	[Token(Token = "0x20002EF")]
	public class PreFracturedGeometry : FractureGeometry
	{
		[Token(Token = "0x40013C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public GameObject GeneratedPieces;

		[Token(Token = "0x40013CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Bounds EntireMeshBounds;

		[Token(Token = "0x40013CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Action<PreFracturedGeometry> _completionCallback;

		[Token(Token = "0x40013CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private AsyncFractureResult _runningFracture;

		[Token(Token = "0x40013CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private bool _ignoreOnFractured;

		[Token(Token = "0x1700026A")]
		public AsyncFractureResult RunningFracture
		{
			[Token(Token = "0x600104C")]
			[Address(RVA = "0x1059AB4", Offset = "0x1059AB4", VA = "0x1059AB4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600104D")]
		[Address(RVA = "0x1059ABC", Offset = "0x1059ABC", VA = "0x1059ABC")]
		private void Start()
		{
		}

		[Token(Token = "0x600104E")]
		[Address(RVA = "0x1059AC0", Offset = "0x1059AC0", VA = "0x1059AC0")]
		public void Prime()
		{
		}

		[Token(Token = "0x600104F")]
		[Address(RVA = "0x1059BBC", Offset = "0x1059BBC", VA = "0x1059BBC")]
		public void GenerateFractureMeshes(Action<PreFracturedGeometry> completedCallback)
		{
		}

		[Token(Token = "0x6001050")]
		[Address(RVA = "0x1059BEC", Offset = "0x1059BEC", VA = "0x1059BEC")]
		public void GenerateFractureMeshes(Vector3 localPoint, Action<PreFracturedGeometry> completedCallback)
		{
		}

		[Token(Token = "0x6001051")]
		[Address(RVA = "0x1059EF4", Offset = "0x1059EF4", VA = "0x1059EF4")]
		public void StopRunningFracture()
		{
		}

		[Token(Token = "0x6001052")]
		[Address(RVA = "0x1059F40", Offset = "0x1059F40", VA = "0x1059F40")]
		private void EditorUpdate()
		{
		}

		[Token(Token = "0x6001053")]
		[Address(RVA = "0x1059E28", Offset = "0x1059E28", VA = "0x1059E28")]
		private void OnPreFractureComplete()
		{
		}

		[Token(Token = "0x6001054")]
		[Address(RVA = "0x1059F58", Offset = "0x1059F58", VA = "0x1059F58", Slot = "4")]
		protected override AsyncFractureResult FractureInternal(Vector3 localPos)
		{
			return null;
		}

		[Token(Token = "0x6001055")]
		[Address(RVA = "0x105A204", Offset = "0x105A204", VA = "0x105A204")]
		private void EnableFracturePieces()
		{
		}

		[Token(Token = "0x6001056")]
		[Address(RVA = "0x105A2A8", Offset = "0x105A2A8", VA = "0x105A2A8", Slot = "5")]
		internal override void OnFracture(OnFractureEventArgs args)
		{
		}

		[Token(Token = "0x6001057")]
		[Address(RVA = "0x105A30C", Offset = "0x105A30C", VA = "0x105A30C")]
		public PreFracturedGeometry()
		{
		}
	}
	[Token(Token = "0x20002F0")]
	public class DisableObjectsOnFracture : MonoBehaviour
	{
		[Token(Token = "0x40013CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject[] ObjectsToDisable;

		[Token(Token = "0x6001058")]
		[Address(RVA = "0x108C060", Offset = "0x108C060", VA = "0x108C060")]
		private void OnFracture(OnFractureEventArgs e)
		{
		}

		[Token(Token = "0x6001059")]
		[Address(RVA = "0x108C14C", Offset = "0x108C14C", VA = "0x108C14C")]
		public DisableObjectsOnFracture()
		{
		}
	}
	[Token(Token = "0x20002F1")]
	public sealed class OnFractureEventArgs
	{
		[Token(Token = "0x40013CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public FractureGeometry OriginalObject;

		[Token(Token = "0x40013D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject FracturePiecesRootObject;

		[Token(Token = "0x600105A")]
		[Address(RVA = "0x1918968", Offset = "0x1918968", VA = "0x1918968")]
		public OnFractureEventArgs(FractureGeometry orig, GameObject root)
		{
		}
	}
	[Token(Token = "0x20002F2")]
	public sealed class AsyncFractureResult
	{
		[Token(Token = "0x40013D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DC274", Offset = "0x8DC274")]
		private bool <IsComplete>k__BackingField;

		[Token(Token = "0x40013D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DC284", Offset = "0x8DC284")]
		private GameObject <PiecesRoot>k__BackingField;

		[Token(Token = "0x40013D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DC294", Offset = "0x8DC294")]
		private Bounds <EntireMeshBounds>k__BackingField;

		[Token(Token = "0x40013D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DC2A4", Offset = "0x8DC2A4")]
		private bool <StopRequested>k__BackingField;

		[Token(Token = "0x1700026B")]
		public bool IsComplete
		{
			[Token(Token = "0x600105B")]
			[Address(RVA = "0x1AD8EC8", Offset = "0x1AD8EC8", VA = "0x1AD8EC8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E4F78", Offset = "0x8E4F78")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600105C")]
			[Address(RVA = "0x1AD8ED0", Offset = "0x1AD8ED0", VA = "0x1AD8ED0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E4F88", Offset = "0x8E4F88")]
			private set
			{
			}
		}

		[Token(Token = "0x1700026C")]
		public GameObject PiecesRoot
		{
			[Token(Token = "0x600105D")]
			[Address(RVA = "0x1AD8EDC", Offset = "0x1AD8EDC", VA = "0x1AD8EDC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E4F98", Offset = "0x8E4F98")]
			get
			{
				return null;
			}
			[Token(Token = "0x600105E")]
			[Address(RVA = "0x1AD8EE4", Offset = "0x1AD8EE4", VA = "0x1AD8EE4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E4FA8", Offset = "0x8E4FA8")]
			private set
			{
			}
		}

		[Token(Token = "0x1700026D")]
		public Bounds EntireMeshBounds
		{
			[Token(Token = "0x600105F")]
			[Address(RVA = "0x1AD8EEC", Offset = "0x1AD8EEC", VA = "0x1AD8EEC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E4FB8", Offset = "0x8E4FB8")]
			get
			{
				return default(Bounds);
			}
			[Token(Token = "0x6001060")]
			[Address(RVA = "0x1AD8F00", Offset = "0x1AD8F00", VA = "0x1AD8F00")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E4FC8", Offset = "0x8E4FC8")]
			private set
			{
			}
		}

		[Token(Token = "0x1700026E")]
		internal bool StopRequested
		{
			[Token(Token = "0x6001061")]
			[Address(RVA = "0x1AD8F14", Offset = "0x1AD8F14", VA = "0x1AD8F14")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E4FD8", Offset = "0x8E4FD8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001062")]
			[Address(RVA = "0x1AD8F1C", Offset = "0x1AD8F1C", VA = "0x1AD8F1C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E4FE8", Offset = "0x8E4FE8")]
			private set
			{
			}
		}

		[Token(Token = "0x6001063")]
		[Address(RVA = "0x1AD8F28", Offset = "0x1AD8F28", VA = "0x1AD8F28")]
		internal void SetResult(GameObject rootGO, Bounds bounds)
		{
		}

		[Token(Token = "0x6001064")]
		[Address(RVA = "0x1AD8FF0", Offset = "0x1AD8FF0", VA = "0x1AD8FF0")]
		public void StopFracture()
		{
		}

		[Token(Token = "0x6001065")]
		[Address(RVA = "0x1AD8FFC", Offset = "0x1AD8FFC", VA = "0x1AD8FFC")]
		public AsyncFractureResult()
		{
		}
	}
	[Token(Token = "0x20002F3")]
	public sealed class FractureEngine : MonoBehaviour
	{
		[Token(Token = "0x20002F4")]
		private struct FractureInstance
		{
			[Token(Token = "0x40013D8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public AsyncFractureResult Result;

			[Token(Token = "0x40013D9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public IEnumerator Enumerator;

			[Token(Token = "0x6001071")]
			[Address(RVA = "0x1050488", Offset = "0x1050488", VA = "0x1050488")]
			public FractureInstance(AsyncFractureResult result, IEnumerator enumerator)
			{
			}
		}

		[Token(Token = "0x20002F5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D73C8", Offset = "0x8D73C8")]
		private sealed class <WaitForResults>d__16 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40013DA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40013DB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40013DC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public AsyncFractureOperation operation;

			[Token(Token = "0x40013DD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool transferMass;

			[Token(Token = "0x40013DE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public FractureGeometry callback;

			[Token(Token = "0x40013DF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Transform piecesParent;

			[Token(Token = "0x40013E0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public bool hideAfterFracture;

			[Token(Token = "0x40013E1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public AsyncFractureResult result;

			[Token(Token = "0x17000272")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001075")]
				[Address(RVA = "0x1050438", Offset = "0x1050438", VA = "0x1050438", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000273")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001077")]
				[Address(RVA = "0x1050480", Offset = "0x1050480", VA = "0x1050480", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001072")]
			[Address(RVA = "0x104F904", Offset = "0x104F904", VA = "0x104F904")]
			[DebuggerHidden]
			public <WaitForResults>d__16(int <>1__state)
			{
			}

			[Token(Token = "0x6001073")]
			[Address(RVA = "0x104F930", Offset = "0x104F930", VA = "0x104F930", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001074")]
			[Address(RVA = "0x104F934", Offset = "0x104F934", VA = "0x104F934", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001076")]
			[Address(RVA = "0x1050440", Offset = "0x1050440", VA = "0x1050440", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40013D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static FractureEngine _instance;

		[Token(Token = "0x40013D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool _suspended;

		[Token(Token = "0x40013D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<FractureInstance> _runningFractures;

		[Token(Token = "0x1700026F")]
		private static FractureEngine Instance
		{
			[Token(Token = "0x6001066")]
			[Address(RVA = "0x1094D28", Offset = "0x1094D28", VA = "0x1094D28")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000270")]
		public static bool Suspended
		{
			[Token(Token = "0x6001067")]
			[Address(RVA = "0x1094E40", Offset = "0x1094E40", VA = "0x1094E40")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001068")]
			[Address(RVA = "0x1094E60", Offset = "0x1094E60", VA = "0x1094E60")]
			set
			{
			}
		}

		[Token(Token = "0x17000271")]
		public static bool HasFracturesInProgress
		{
			[Token(Token = "0x6001069")]
			[Address(RVA = "0x1094E90", Offset = "0x1094E90", VA = "0x1094E90")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600106A")]
		[Address(RVA = "0x1094EE8", Offset = "0x1094EE8", VA = "0x1094EE8")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600106B")]
		[Address(RVA = "0x1094FA0", Offset = "0x1094FA0", VA = "0x1094FA0")]
		public static AsyncFractureResult StartFracture(FractureDetails details, FractureGeometry callback, Transform piecesParent, bool transferMass, bool hideAfterFracture)
		{
			return null;
		}

		[Token(Token = "0x600106C")]
		[Address(RVA = "0x1095384", Offset = "0x1095384", VA = "0x1095384")]
		private void OnEditorUpdate()
		{
		}

		[Token(Token = "0x600106D")]
		[Address(RVA = "0x10955B8", Offset = "0x10955B8", VA = "0x10955B8")]
		private void Update()
		{
		}

		[Token(Token = "0x600106E")]
		[Address(RVA = "0x1095430", Offset = "0x1095430", VA = "0x1095430")]
		private void UpdateFractures()
		{
		}

		[Token(Token = "0x600106F")]
		[Address(RVA = "0x10952A0", Offset = "0x10952A0", VA = "0x10952A0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E4FF8", Offset = "0x8E4FF8")]
		private IEnumerator WaitForResults(AsyncFractureOperation operation, FractureGeometry callback, Transform piecesParent, bool transferMass, bool hideAfterFracture, AsyncFractureResult result)
		{
			return null;
		}

		[Token(Token = "0x6001070")]
		[Address(RVA = "0x10955BC", Offset = "0x10955BC", VA = "0x10955BC")]
		public FractureEngine()
		{
		}
	}
	[Token(Token = "0x20002F6")]
	public abstract class FractureGeometry : MonoBehaviour
	{
		[Token(Token = "0x40013E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Material InsideMaterial;

		[Token(Token = "0x40013E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject FractureTemplate;

		[Token(Token = "0x40013E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform PiecesParent;

		[Token(Token = "0x40013E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int NumFracturePieces;

		[Token(Token = "0x40013E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public int NumIterations;

		[Token(Token = "0x40013E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int NumGenerations;

		[Token(Token = "0x40013E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float FractureRadius;

		[Token(Token = "0x40013E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public FractureUVScale UVScale;

		[Token(Token = "0x40013EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public bool DistributeMass;

		[Token(Token = "0x40013EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
		private bool _processingFracture;

		[Token(Token = "0x6001078")]
		[Address(RVA = "0x1095640", Offset = "0x1095640", VA = "0x1095640")]
		public AsyncFractureResult Fracture()
		{
			return null;
		}

		[Token(Token = "0x6001079")]
		[Address(RVA = "0x1095690", Offset = "0x1095690", VA = "0x1095690")]
		public AsyncFractureResult Fracture(Vector3 localPos)
		{
			return null;
		}

		[Token(Token = "0x600107A")]
		[Address(RVA = "0x10956B4", Offset = "0x10956B4", VA = "0x10956B4")]
		protected AsyncFractureResult Fracture(FractureDetails details, bool hideAfterFracture)
		{
			return null;
		}

		[Token(Token = "0x600107B")]
		[Address(RVA = "0x1095A80", Offset = "0x1095A80", VA = "0x1095A80")]
		protected void StopFracture()
		{
		}

		[Token(Token = "0x600107C")]
		protected abstract AsyncFractureResult FractureInternal(Vector3 localPos);

		[Token(Token = "0x600107D")]
		[Address(RVA = "0x1095A88", Offset = "0x1095A88", VA = "0x1095A88", Slot = "5")]
		internal virtual void OnFracture(OnFractureEventArgs args)
		{
		}

		[Token(Token = "0x600107E")]
		[Address(RVA = "0x1095B14", Offset = "0x1095B14", VA = "0x1095B14")]
		protected FractureGeometry()
		{
		}
	}
	[Token(Token = "0x20002F7")]
	public class GlueEdgeOnFracture : MonoBehaviour
	{
		[Token(Token = "0x40013EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string CollisionTag;

		[Token(Token = "0x40013ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int _collisionCount;

		[Token(Token = "0x40013EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private int _fractureFrame;

		[Token(Token = "0x40013EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private RigidbodyConstraints _rigidBodyConstraints;

		[Token(Token = "0x40013F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Vector3 _rigidBodyVelocity;

		[Token(Token = "0x40013F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3 _rigidBodyAngularVelocity;

		[Token(Token = "0x40013F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Vector3 _impactPoint;

		[Token(Token = "0x40013F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Vector3 _impactVelocity;

		[Token(Token = "0x40013F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private float _impactMass;

		[Token(Token = "0x600107F")]
		[Address(RVA = "0x133AAB4", Offset = "0x133AAB4", VA = "0x133AAB4")]
		private void OnCollisionEnter(Collision col)
		{
		}

		[Token(Token = "0x6001080")]
		[Address(RVA = "0x133AD14", Offset = "0x133AD14", VA = "0x133AD14")]
		private void OnTriggerEnter(Collider col)
		{
		}

		[Token(Token = "0x6001081")]
		[Address(RVA = "0x133AD84", Offset = "0x133AD84", VA = "0x133AD84")]
		private void Update()
		{
		}

		[Token(Token = "0x6001082")]
		[Address(RVA = "0x133B080", Offset = "0x133B080", VA = "0x133B080")]
		private void OnFracture(OnFractureEventArgs fractureRoot)
		{
		}

		[Token(Token = "0x6001083")]
		[Address(RVA = "0x133AF74", Offset = "0x133AF74", VA = "0x133AF74")]
		private void SetGlued(bool glued)
		{
		}

		[Token(Token = "0x6001084")]
		[Address(RVA = "0x133B1C0", Offset = "0x133B1C0", VA = "0x133B1C0")]
		public GlueEdgeOnFracture()
		{
		}
	}
	[Token(Token = "0x20002F8")]
	public class NotifyOnFracture : MonoBehaviour
	{
		[Token(Token = "0x40013F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject[] GameObjects;

		[Token(Token = "0x6001085")]
		[Address(RVA = "0x1360244", Offset = "0x1360244", VA = "0x1360244")]
		private void OnFracture(OnFractureEventArgs args)
		{
		}

		[Token(Token = "0x6001086")]
		[Address(RVA = "0x13603B0", Offset = "0x13603B0", VA = "0x13603B0")]
		public NotifyOnFracture()
		{
		}
	}
	[Token(Token = "0x20002F9")]
	public class RuntimeFracturedGeometry : FractureGeometry
	{
		[Token(Token = "0x40013F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x46")]
		public bool Asynchronous;

		[Token(Token = "0x6001087")]
		[Address(RVA = "0x1062BBC", Offset = "0x1062BBC", VA = "0x1062BBC", Slot = "4")]
		protected override AsyncFractureResult FractureInternal(Vector3 localPos)
		{
			return null;
		}

		[Token(Token = "0x6001088")]
		[Address(RVA = "0x1062C1C", Offset = "0x1062C1C", VA = "0x1062C1C")]
		public RuntimeFracturedGeometry()
		{
		}
	}
	[Token(Token = "0x20002FA")]
	public class TransferJointsOnFracture : MonoBehaviour
	{
		[Token(Token = "0x40013F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform IncomingJointsSearchRoot;

		[Token(Token = "0x40013F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float DistanceTolerance;

		[Token(Token = "0x6001089")]
		[Address(RVA = "0x12E58B0", Offset = "0x12E58B0", VA = "0x12E58B0")]
		private void OnFracture(OnFractureEventArgs args)
		{
		}

		[Token(Token = "0x600108A")]
		[Address(RVA = "0x12E5980", Offset = "0x12E5980", VA = "0x12E5980")]
		private void TransferOurJoint(OnFractureEventArgs args)
		{
		}

		[Token(Token = "0x600108B")]
		[Address(RVA = "0x12E6148", Offset = "0x12E6148", VA = "0x12E6148")]
		private void RewriteOtherJoints(OnFractureEventArgs args)
		{
		}

		[Token(Token = "0x600108C")]
		[Address(RVA = "0x12E657C", Offset = "0x12E657C", VA = "0x12E657C")]
		public TransferJointsOnFracture()
		{
		}
	}
	[Token(Token = "0x20002FB")]
	public class TriggerExplosionOnCollision : MonoBehaviour
	{
		[Token(Token = "0x40013F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public FractureGeometry[] Explosives;

		[Token(Token = "0x40013FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float Force;

		[Token(Token = "0x40013FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float Radius;

		[Token(Token = "0x600108D")]
		[Address(RVA = "0x12E6648", Offset = "0x12E6648", VA = "0x12E6648")]
		private void OnCollisionEnter(Collision col)
		{
		}

		[Token(Token = "0x600108E")]
		[Address(RVA = "0x12E687C", Offset = "0x12E687C", VA = "0x12E687C")]
		private void Explode(GameObject root, Bounds bounds)
		{
		}

		[Token(Token = "0x600108F")]
		[Address(RVA = "0x12E6A18", Offset = "0x12E6A18", VA = "0x12E6A18")]
		public TriggerExplosionOnCollision()
		{
		}
	}
}
namespace DinoFracture.Internal
{
	[Token(Token = "0x20002FC")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x8D73D8", Offset = "0x8D73D8")]
	public class DestroyOnAudioFinish : MonoBehaviour
	{
		[Token(Token = "0x40013FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private AudioSource _source;

		[Token(Token = "0x6001090")]
		[Address(RVA = "0x108BE64", Offset = "0x108BE64", VA = "0x108BE64")]
		private void Start()
		{
		}

		[Token(Token = "0x6001091")]
		[Address(RVA = "0x108BED4", Offset = "0x108BED4", VA = "0x108BED4")]
		private void Update()
		{
		}

		[Token(Token = "0x6001092")]
		[Address(RVA = "0x108BF70", Offset = "0x108BF70", VA = "0x108BF70")]
		public DestroyOnAudioFinish()
		{
		}
	}
}
namespace Com.AllSkyFree
{
	[Token(Token = "0x20002FD")]
	public class AllSkyFreeMenu : MonoBehaviour
	{
		[Token(Token = "0x6001093")]
		[Address(RVA = "0x1ACD5B4", Offset = "0x1ACD5B4", VA = "0x1ACD5B4")]
		public AllSkyFreeMenu()
		{
		}
	}
}
namespace RenderHeads.Media.AVProVideo
{
	[Token(Token = "0x20002FE")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x8D7438", Offset = "0x8D7438")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8D7438", Offset = "0x8D7438")]
	public class ApplyToMaterial : MonoBehaviour
	{
		[Token(Token = "0x40013FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DC2B4", Offset = "0x8DC2B4")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x8DC2B4", Offset = "0x8DC2B4")]
		private MediaPlayer _media;

		[Token(Token = "0x40013FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DC314", Offset = "0x8DC314")]
		private Texture2D _defaultTexture;

		[Token(Token = "0x40013FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DC360", Offset = "0x8DC360")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x8DC360", Offset = "0x8DC360")]
		private Material _material;

		[Token(Token = "0x4001400")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private string _texturePropertyName;

		[Token(Token = "0x4001401")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Vector2 _offset;

		[Token(Token = "0x4001402")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Vector2 _scale;

		[Token(Token = "0x4001403")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool _isDirty;

		[Token(Token = "0x4001404")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Texture _lastTextureApplied;

		[Token(Token = "0x4001405")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int _propTexture;

		[Token(Token = "0x4001406")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Texture _originalTexture;

		[Token(Token = "0x4001407")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Vector2 _originalScale;

		[Token(Token = "0x4001408")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Vector2 _originalOffset;

		[Token(Token = "0x4001409")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int _propStereo;

		[Token(Token = "0x400140A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static int _propAlphaPack;

		[Token(Token = "0x400140B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static int _propApplyGamma;

		[Token(Token = "0x400140C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private static int _propLayout;

		[Token(Token = "0x400140D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static int _propCroppingScalars;

		[Token(Token = "0x400140E")]
		private const string PropChromaTexName = "_ChromaTex";

		[Token(Token = "0x400140F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private static int _propChromaTex;

		[Token(Token = "0x4001410")]
		private const string PropYpCbCrTransformName = "_YpCbCrTransform";

		[Token(Token = "0x4001411")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static int _propYpCbCrTransform;

		[Token(Token = "0x4001412")]
		private const string PropUseYpCbCrName = "_UseYpCbCr";

		[Token(Token = "0x4001413")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private static int _propUseYpCbCr;

		[Token(Token = "0x17000274")]
		public MediaPlayer Player
		{
			[Token(Token = "0x6001094")]
			[Address(RVA = "0x1AD57C4", Offset = "0x1AD57C4", VA = "0x1AD57C4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001095")]
			[Address(RVA = "0x1AD57CC", Offset = "0x1AD57CC", VA = "0x1AD57CC")]
			set
			{
			}
		}

		[Token(Token = "0x17000275")]
		public Texture2D DefaultTexture
		{
			[Token(Token = "0x6001096")]
			[Address(RVA = "0x1AD59BC", Offset = "0x1AD59BC", VA = "0x1AD59BC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001097")]
			[Address(RVA = "0x1AD59C4", Offset = "0x1AD59C4", VA = "0x1AD59C4")]
			set
			{
			}
		}

		[Token(Token = "0x17000276")]
		public Material Material
		{
			[Token(Token = "0x6001098")]
			[Address(RVA = "0x1AD5A60", Offset = "0x1AD5A60", VA = "0x1AD5A60")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001099")]
			[Address(RVA = "0x1AD5A68", Offset = "0x1AD5A68", VA = "0x1AD5A68")]
			set
			{
			}
		}

		[Token(Token = "0x17000277")]
		public string TexturePropertyName
		{
			[Token(Token = "0x600109A")]
			[Address(RVA = "0x1AD5B04", Offset = "0x1AD5B04", VA = "0x1AD5B04")]
			get
			{
				return null;
			}
			[Token(Token = "0x600109B")]
			[Address(RVA = "0x1AD5B0C", Offset = "0x1AD5B0C", VA = "0x1AD5B0C")]
			set
			{
			}
		}

		[Token(Token = "0x17000278")]
		public Vector2 Offset
		{
			[Token(Token = "0x600109C")]
			[Address(RVA = "0x1AD5B70", Offset = "0x1AD5B70", VA = "0x1AD5B70")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x600109D")]
			[Address(RVA = "0x1AD5B78", Offset = "0x1AD5B78", VA = "0x1AD5B78")]
			set
			{
			}
		}

		[Token(Token = "0x17000279")]
		public Vector2 Scale
		{
			[Token(Token = "0x600109E")]
			[Address(RVA = "0x1AD5BB0", Offset = "0x1AD5BB0", VA = "0x1AD5BB0")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x600109F")]
			[Address(RVA = "0x1AD5BB8", Offset = "0x1AD5BB8", VA = "0x1AD5BB8")]
			set
			{
			}
		}

		[Token(Token = "0x60010A0")]
		[Address(RVA = "0x1AD5BF0", Offset = "0x1AD5BF0", VA = "0x1AD5BF0")]
		private void Awake()
		{
		}

		[Token(Token = "0x60010A1")]
		[Address(RVA = "0x1AD57D0", Offset = "0x1AD57D0", VA = "0x1AD57D0")]
		private void ChangeMediaPlayer(MediaPlayer player)
		{
		}

		[Token(Token = "0x60010A2")]
		[Address(RVA = "0x1AD5EE0", Offset = "0x1AD5EE0", VA = "0x1AD5EE0")]
		public void ForceUpdate()
		{
		}

		[Token(Token = "0x60010A3")]
		[Address(RVA = "0x1AD6458", Offset = "0x1AD6458", VA = "0x1AD6458")]
		private void OnMediaPlayerEvent(MediaPlayer mp, MediaPlayerEvent.EventType et, ErrorCode errorCode)
		{
		}

		[Token(Token = "0x60010A4")]
		[Address(RVA = "0x1AD5EEC", Offset = "0x1AD5EEC", VA = "0x1AD5EEC")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60010A5")]
		[Address(RVA = "0x1AD6478", Offset = "0x1AD6478", VA = "0x1AD6478")]
		private void ApplyMapping(Texture texture, bool requiresYFlip, int plane = 0)
		{
		}

		[Token(Token = "0x60010A6")]
		[Address(RVA = "0x1AD6BF8", Offset = "0x1AD6BF8", VA = "0x1AD6BF8")]
		private void Start()
		{
		}

		[Token(Token = "0x60010A7")]
		[Address(RVA = "0x1AD6D48", Offset = "0x1AD6D48", VA = "0x1AD6D48")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60010A8")]
		[Address(RVA = "0x1AD6D84", Offset = "0x1AD6D84", VA = "0x1AD6D84")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60010A9")]
		[Address(RVA = "0x1AD6C1C", Offset = "0x1AD6C1C", VA = "0x1AD6C1C")]
		private void SaveProperties()
		{
		}

		[Token(Token = "0x60010AA")]
		[Address(RVA = "0x1AD6D88", Offset = "0x1AD6D88", VA = "0x1AD6D88")]
		private void RestoreProperties()
		{
		}

		[Token(Token = "0x60010AB")]
		[Address(RVA = "0x1AD6EA8", Offset = "0x1AD6EA8", VA = "0x1AD6EA8")]
		public ApplyToMaterial()
		{
		}
	}
	[Token(Token = "0x20002FF")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8D749C", Offset = "0x8D749C")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x8D749C", Offset = "0x8D749C")]
	public class ApplyToMesh : MonoBehaviour
	{
		[Token(Token = "0x4001414")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DC3F0", Offset = "0x8DC3F0")]
		[SerializeField]
		private MediaPlayer _media;

		[Token(Token = "0x4001415")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DC43C", Offset = "0x8DC43C")]
		[SerializeField]
		private Texture2D _defaultTexture;

		[Token(Token = "0x4001416")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x8DC488", Offset = "0x8DC488")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DC488", Offset = "0x8DC488")]
		private Renderer _mesh;

		[Token(Token = "0x4001417")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private string _texturePropertyName;

		[Token(Token = "0x4001418")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Vector2 _offset;

		[Token(Token = "0x4001419")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Vector2 _scale;

		[Token(Token = "0x400141A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool _isDirty;

		[Token(Token = "0x400141B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Texture _lastTextureApplied;

		[Token(Token = "0x400141C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int _propTexture;

		[Token(Token = "0x400141D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int _propStereo;

		[Token(Token = "0x400141E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static int _propAlphaPack;

		[Token(Token = "0x400141F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static int _propApplyGamma;

		[Token(Token = "0x4001420")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private static int _propLayout;

		[Token(Token = "0x4001421")]
		private const string PropChromaTexName = "_ChromaTex";

		[Token(Token = "0x4001422")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static int _propChromaTex;

		[Token(Token = "0x4001423")]
		private const string PropYpCbCrTransformName = "_YpCbCrTransform";

		[Token(Token = "0x4001424")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private static int _propYpCbCrTransform;

		[Token(Token = "0x4001425")]
		private const string PropUseYpCbCrName = "_UseYpCbCr";

		[Token(Token = "0x4001426")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static int _propUseYpCbCr;

		[Token(Token = "0x4001427")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private static int _propCroppingScalars;

		[Token(Token = "0x1700027A")]
		public MediaPlayer Player
		{
			[Token(Token = "0x60010AC")]
			[Address(RVA = "0x1AD6F34", Offset = "0x1AD6F34", VA = "0x1AD6F34")]
			get
			{
				return null;
			}
			[Token(Token = "0x60010AD")]
			[Address(RVA = "0x1AD6F3C", Offset = "0x1AD6F3C", VA = "0x1AD6F3C")]
			set
			{
			}
		}

		[Token(Token = "0x1700027B")]
		public Texture2D DefaultTexture
		{
			[Token(Token = "0x60010AE")]
			[Address(RVA = "0x1AD712C", Offset = "0x1AD712C", VA = "0x1AD712C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60010AF")]
			[Address(RVA = "0x1AD7134", Offset = "0x1AD7134", VA = "0x1AD7134")]
			set
			{
			}
		}

		[Token(Token = "0x1700027C")]
		public Renderer MeshRenderer
		{
			[Token(Token = "0x60010B0")]
			[Address(RVA = "0x1AD71D0", Offset = "0x1AD71D0", VA = "0x1AD71D0")]
			get
			{
				return null;
			}
			[Token(Token = "0x60010B1")]
			[Address(RVA = "0x1AD71D8", Offset = "0x1AD71D8", VA = "0x1AD71D8")]
			set
			{
			}
		}

		[Token(Token = "0x1700027D")]
		public string TexturePropertyName
		{
			[Token(Token = "0x60010B2")]
			[Address(RVA = "0x1AD7274", Offset = "0x1AD7274", VA = "0x1AD7274")]
			get
			{
				return null;
			}
			[Token(Token = "0x60010B3")]
			[Address(RVA = "0x1AD727C", Offset = "0x1AD727C", VA = "0x1AD727C")]
			set
			{
			}
		}

		[Token(Token = "0x1700027E")]
		public Vector2 Offset
		{
			[Token(Token = "0x60010B4")]
			[Address(RVA = "0x1AD72E0", Offset = "0x1AD72E0", VA = "0x1AD72E0")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x60010B5")]
			[Address(RVA = "0x1AD72E8", Offset = "0x1AD72E8", VA = "0x1AD72E8")]
			set
			{
			}
		}

		[Token(Token = "0x1700027F")]
		public Vector2 Scale
		{
			[Token(Token = "0x60010B6")]
			[Address(RVA = "0x1AD7320", Offset = "0x1AD7320", VA = "0x1AD7320")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x60010B7")]
			[Address(RVA = "0x1AD7328", Offset = "0x1AD7328", VA = "0x1AD7328")]
			set
			{
			}
		}

		[Token(Token = "0x60010B8")]
		[Address(RVA = "0x1AD7360", Offset = "0x1AD7360", VA = "0x1AD7360")]
		private void Awake()
		{
		}

		[Token(Token = "0x60010B9")]
		[Address(RVA = "0x1AD7650", Offset = "0x1AD7650", VA = "0x1AD7650")]
		public void ForceUpdate()
		{
		}

		[Token(Token = "0x60010BA")]
		[Address(RVA = "0x1AD7B3C", Offset = "0x1AD7B3C", VA = "0x1AD7B3C")]
		private void OnMediaPlayerEvent(MediaPlayer mp, MediaPlayerEvent.EventType et, ErrorCode errorCode)
		{
		}

		[Token(Token = "0x60010BB")]
		[Address(RVA = "0x1AD6F40", Offset = "0x1AD6F40", VA = "0x1AD6F40")]
		private void ChangeMediaPlayer(MediaPlayer player)
		{
		}

		[Token(Token = "0x60010BC")]
		[Address(RVA = "0x1AD765C", Offset = "0x1AD765C", VA = "0x1AD765C")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60010BD")]
		[Address(RVA = "0x1AD7B5C", Offset = "0x1AD7B5C", VA = "0x1AD7B5C")]
		private void ApplyMapping(Texture texture, bool requiresYFlip, int plane = 0)
		{
		}

		[Token(Token = "0x60010BE")]
		[Address(RVA = "0x1AD8290", Offset = "0x1AD8290", VA = "0x1AD8290")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60010BF")]
		[Address(RVA = "0x1AD8418", Offset = "0x1AD8418", VA = "0x1AD8418")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60010C0")]
		[Address(RVA = "0x1AD8428", Offset = "0x1AD8428", VA = "0x1AD8428")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60010C1")]
		[Address(RVA = "0x1AD8430", Offset = "0x1AD8430", VA = "0x1AD8430")]
		public ApplyToMesh()
		{
		}
	}
	[Token(Token = "0x2000300")]
	public class AudioChannelMixer : MonoBehaviour
	{
		[Token(Token = "0x4001428")]
		private const int MaxChannels = 8;

		[Token(Token = "0x4001429")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8DC518", Offset = "0x8DC518")]
		private float[] _channels;

		[Token(Token = "0x17000280")]
		public float[] Channel
		{
			[Token(Token = "0x60010C2")]
			[Address(RVA = "0x1AD9A24", Offset = "0x1AD9A24", VA = "0x1AD9A24")]
			get
			{
				return null;
			}
			[Token(Token = "0x60010C3")]
			[Address(RVA = "0x1AD9A2C", Offset = "0x1AD9A2C", VA = "0x1AD9A2C")]
			set
			{
			}
		}

		[Token(Token = "0x60010C4")]
		[Address(RVA = "0x1AD9A34", Offset = "0x1AD9A34", VA = "0x1AD9A34")]
		private void Reset()
		{
		}

		[Token(Token = "0x60010C5")]
		[Address(RVA = "0x1AD9AD4", Offset = "0x1AD9AD4", VA = "0x1AD9AD4")]
		private void ChangeChannelCount(int numChannels)
		{
		}

		[Token(Token = "0x60010C6")]
		[Address(RVA = "0x1AD9C0C", Offset = "0x1AD9C0C", VA = "0x1AD9C0C")]
		private void OnAudioFilterRead(float[] data, int channels)
		{
		}

		[Token(Token = "0x60010C7")]
		[Address(RVA = "0x1AD9CF0", Offset = "0x1AD9CF0", VA = "0x1AD9CF0")]
		public AudioChannelMixer()
		{
		}
	}
	[Token(Token = "0x2000301")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x8D7500", Offset = "0x8D7500")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x8D7500", Offset = "0x8D7500")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8D7500", Offset = "0x8D7500")]
	public class AudioOutput : MonoBehaviour
	{
		[Token(Token = "0x2000302")]
		public enum AudioOutputMode
		{
			[Token(Token = "0x400142F")]
			Single,
			[Token(Token = "0x4001430")]
			Multiple
		}

		[Token(Token = "0x400142A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AudioOutputMode _audioOutputMode;

		[Token(Token = "0x400142B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private MediaPlayer _mediaPlayer;

		[Token(Token = "0x400142C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private AudioSource _audioSource;

		[Token(Token = "0x400142D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public int _channelMask;

		[Token(Token = "0x60010C8")]
		[Address(RVA = "0x1ADFE38", Offset = "0x1ADFE38", VA = "0x1ADFE38")]
		private void Awake()
		{
		}

		[Token(Token = "0x60010C9")]
		[Address(RVA = "0x1ADFE94", Offset = "0x1ADFE94", VA = "0x1ADFE94")]
		private void Start()
		{
		}

		[Token(Token = "0x60010CA")]
		[Address(RVA = "0x1AE0070", Offset = "0x1AE0070", VA = "0x1AE0070")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60010CB")]
		[Address(RVA = "0x1AE0078", Offset = "0x1AE0078", VA = "0x1AE0078")]
		private void Update()
		{
		}

		[Token(Token = "0x60010CC")]
		[Address(RVA = "0x1ADFE9C", Offset = "0x1ADFE9C", VA = "0x1ADFE9C")]
		public void ChangeMediaPlayer(MediaPlayer newPlayer)
		{
		}

		[Token(Token = "0x60010CD")]
		[Address(RVA = "0x1AE0428", Offset = "0x1AE0428", VA = "0x1AE0428")]
		private void OnMediaPlayerEvent(MediaPlayer mp, MediaPlayerEvent.EventType et, ErrorCode errorCode)
		{
		}

		[Token(Token = "0x60010CE")]
		[Address(RVA = "0x1AE01B0", Offset = "0x1AE01B0", VA = "0x1AE01B0")]
		private static void ApplyAudioSettings(MediaPlayer player, AudioSource audioSource)
		{
		}

		[Token(Token = "0x60010CF")]
		[Address(RVA = "0x1AE0490", Offset = "0x1AE0490", VA = "0x1AE0490")]
		public AudioOutput()
		{
		}
	}
	[Token(Token = "0x2000303")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x8D75AC", Offset = "0x8D75AC")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x8D75AC", Offset = "0x8D75AC")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8D75AC", Offset = "0x8D75AC")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x8D75AC", Offset = "0x8D75AC")]
	public class CubemapCube : MonoBehaviour
	{
		[Token(Token = "0x2000304")]
		public enum Layout
		{
			[Token(Token = "0x4001443")]
			FacebookTransform32,
			[Token(Token = "0x4001444")]
			Facebook360Capture
		}

		[Token(Token = "0x4001431")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Mesh _mesh;

		[Token(Token = "0x4001432")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected MeshRenderer _renderer;

		[Token(Token = "0x4001433")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		protected Material _material;

		[Token(Token = "0x4001434")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private MediaPlayer _mediaPlayer;

		[Token(Token = "0x4001435")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private float expansion_coeff;

		[Token(Token = "0x4001436")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private Layout _layout;

		[Token(Token = "0x4001437")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Texture _texture;

		[Token(Token = "0x4001438")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool _verticalFlip;

		[Token(Token = "0x4001439")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private int _textureWidth;

		[Token(Token = "0x400143A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int _textureHeight;

		[Token(Token = "0x400143B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int _propApplyGamma;

		[Token(Token = "0x400143C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static int _propStereo;

		[Token(Token = "0x400143D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static int _propUseYpCbCr;

		[Token(Token = "0x400143E")]
		private const string PropChromaTexName = "_ChromaTex";

		[Token(Token = "0x400143F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private static int _propChromaTex;

		[Token(Token = "0x4001440")]
		private const string PropYpCbCrTransformName = "_YpCbCrTransform";

		[Token(Token = "0x4001441")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static int _propYpCbCrTransform;

		[Token(Token = "0x17000281")]
		public MediaPlayer Player
		{
			[Token(Token = "0x60010D1")]
			[Address(RVA = "0x13030CC", Offset = "0x13030CC", VA = "0x13030CC")]
			get
			{
				return null;
			}
			[Token(Token = "0x60010D0")]
			[Address(RVA = "0x13030C4", Offset = "0x13030C4", VA = "0x13030C4")]
			set
			{
			}
		}

		[Token(Token = "0x60010D2")]
		[Address(RVA = "0x13030D4", Offset = "0x13030D4", VA = "0x13030D4")]
		private void Awake()
		{
		}

		[Token(Token = "0x60010D3")]
		[Address(RVA = "0x1303238", Offset = "0x1303238", VA = "0x1303238")]
		private void Start()
		{
		}

		[Token(Token = "0x60010D4")]
		[Address(RVA = "0x13039EC", Offset = "0x13039EC", VA = "0x13039EC")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60010D5")]
		[Address(RVA = "0x1303B70", Offset = "0x1303B70", VA = "0x1303B70")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60010D6")]
		[Address(RVA = "0x13033F8", Offset = "0x13033F8", VA = "0x13033F8")]
		private void BuildMesh()
		{
		}

		[Token(Token = "0x60010D7")]
		[Address(RVA = "0x13043B0", Offset = "0x13043B0", VA = "0x13043B0")]
		private void UpdateMeshUV(int textureWidth, int textureHeight, bool flipY)
		{
		}

		[Token(Token = "0x60010D8")]
		[Address(RVA = "0x13047E8", Offset = "0x13047E8", VA = "0x13047E8")]
		public CubemapCube()
		{
		}
	}
	[Token(Token = "0x2000305")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8D768C", Offset = "0x8D768C")]
	public class DebugOverlay : MonoBehaviour
	{
		[Token(Token = "0x4001445")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MediaPlayer _mediaPlayer;

		[Token(Token = "0x4001446")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private int _guiDepth;

		[Token(Token = "0x4001447")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private float _displaySize;

		[Token(Token = "0x4001448")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int _debugOverlayCount;

		[Token(Token = "0x4001449")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private bool _displayControls;

		[Token(Token = "0x400144A")]
		private const int s_GuiStartWidth = 10;

		[Token(Token = "0x400144B")]
		private const int s_GuiWidth = 180;

		[Token(Token = "0x400144C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int m_GuiPositionX;

		[Token(Token = "0x17000282")]
		public bool DisplayControls
		{
			[Token(Token = "0x60010D9")]
			[Address(RVA = "0x1086A54", Offset = "0x1086A54", VA = "0x1086A54")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60010DA")]
			[Address(RVA = "0x1086A5C", Offset = "0x1086A5C", VA = "0x1086A5C")]
			set
			{
			}
		}

		[Token(Token = "0x17000283")]
		public MediaPlayer CurrentMediaPlayer
		{
			[Token(Token = "0x60010DB")]
			[Address(RVA = "0x1086A68", Offset = "0x1086A68", VA = "0x1086A68")]
			get
			{
				return null;
			}
			[Token(Token = "0x60010DC")]
			[Address(RVA = "0x1086A70", Offset = "0x1086A70", VA = "0x1086A70")]
			set
			{
			}
		}

		[Token(Token = "0x60010DD")]
		[Address(RVA = "0x1086B0C", Offset = "0x1086B0C", VA = "0x1086B0C")]
		private void SetGuiPositionFromVideoIndex(int index)
		{
		}

		[Token(Token = "0x60010DE")]
		[Address(RVA = "0x1086B54", Offset = "0x1086B54", VA = "0x1086B54")]
		private void Update()
		{
		}

		[Token(Token = "0x60010DF")]
		[Address(RVA = "0x1086B5C", Offset = "0x1086B5C", VA = "0x1086B5C")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x60010E0")]
		[Address(RVA = "0x1088458", Offset = "0x1088458", VA = "0x1088458")]
		public DebugOverlay()
		{
		}
	}
	[Token(Token = "0x2000306")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8D76C8", Offset = "0x8D76C8")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x8D76C8", Offset = "0x8D76C8")]
	public class DisplayBackground : MonoBehaviour
	{
		[Token(Token = "0x400144D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public IMediaProducer _source;

		[Token(Token = "0x400144E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Texture2D _texture;

		[Token(Token = "0x400144F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Material _material;

		[Token(Token = "0x60010E1")]
		[Address(RVA = "0x108C54C", Offset = "0x108C54C", VA = "0x108C54C")]
		private void OnRenderObject()
		{
		}

		[Token(Token = "0x60010E2")]
		[Address(RVA = "0x108C6FC", Offset = "0x108C6FC", VA = "0x108C6FC")]
		public DisplayBackground()
		{
		}
	}
	[Token(Token = "0x2000307")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8D773C", Offset = "0x8D773C")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x8D773C", Offset = "0x8D773C")]
	[ExecuteInEditMode]
	public class DisplayIMGUI : MonoBehaviour
	{
		[Token(Token = "0x4001450")]
		private const string PropChromaTexName = "_ChromaTex";

		[Token(Token = "0x4001451")]
		private const string PropYpCbCrTransformName = "_YpCbCrTransform";

		[Token(Token = "0x4001452")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MediaPlayer _mediaPlayer;

		[Token(Token = "0x4001453")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool _displayInEditor;

		[Token(Token = "0x4001454")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public ScaleMode _scaleMode;

		[Token(Token = "0x4001455")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Color _color;

		[Token(Token = "0x4001456")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool _alphaBlend;

		[Token(Token = "0x4001457")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		[SerializeField]
		private bool _useDepth;

		[Token(Token = "0x4001458")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public int _depth;

		[Token(Token = "0x4001459")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool _fullScreen;

		[Token(Token = "0x400145A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8DC608", Offset = "0x8DC608")]
		public float _x;

		[Token(Token = "0x400145B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8DC620", Offset = "0x8DC620")]
		public float _y;

		[Token(Token = "0x400145C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8DC638", Offset = "0x8DC638")]
		public float _width;

		[Token(Token = "0x400145D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8DC650", Offset = "0x8DC650")]
		public float _height;

		[Token(Token = "0x400145E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int _propAlphaPack;

		[Token(Token = "0x400145F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static int _propVertScale;

		[Token(Token = "0x4001460")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static int _propApplyGamma;

		[Token(Token = "0x4001461")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private static int _propChromaTex;

		[Token(Token = "0x4001462")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static int _propYpCbCrTransform;

		[Token(Token = "0x4001463")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static Shader _shaderAlphaPacking;

		[Token(Token = "0x4001464")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Material _material;

		[Token(Token = "0x60010E3")]
		[Address(RVA = "0x108C704", Offset = "0x108C704", VA = "0x108C704")]
		private void Awake()
		{
		}

		[Token(Token = "0x60010E4")]
		[Address(RVA = "0x108C830", Offset = "0x108C830", VA = "0x108C830")]
		private void Start()
		{
		}

		[Token(Token = "0x60010E5")]
		[Address(RVA = "0x108C9A8", Offset = "0x108C9A8", VA = "0x108C9A8")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60010E6")]
		[Address(RVA = "0x108CA68", Offset = "0x108CA68", VA = "0x108CA68")]
		private Shader GetRequiredShader()
		{
			return null;
		}

		[Token(Token = "0x60010E7")]
		[Address(RVA = "0x108CCEC", Offset = "0x108CCEC", VA = "0x108CCEC")]
		private void Update()
		{
		}

		[Token(Token = "0x60010E8")]
		[Address(RVA = "0x108D038", Offset = "0x108D038", VA = "0x108D038")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x60010E9")]
		[Address(RVA = "0x108D95C", Offset = "0x108D95C", VA = "0x108D95C")]
		public Rect GetRect()
		{
			return default(Rect);
		}

		[Token(Token = "0x60010EA")]
		[Address(RVA = "0x108DA48", Offset = "0x108DA48", VA = "0x108DA48")]
		public DisplayIMGUI()
		{
		}
	}
	[Token(Token = "0x2000308")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8D77B0", Offset = "0x8D77B0")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x8D77B0", Offset = "0x8D77B0")]
	[ExecuteInEditMode]
	public class DisplayUGUI : MaskableGraphic
	{
		[Token(Token = "0x4001465")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		public MediaPlayer _mediaPlayer;

		[Token(Token = "0x4001466")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		public Rect m_UVRect;

		[Token(Token = "0x4001467")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[SerializeField]
		public bool _setNativeSize;

		[Token(Token = "0x4001468")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		[SerializeField]
		public ScaleMode _scaleMode;

		[Token(Token = "0x4001469")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[SerializeField]
		public bool _noDefaultDisplay;

		[Token(Token = "0x400146A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF1")]
		[SerializeField]
		public bool _displayInEditor;

		[Token(Token = "0x400146B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[SerializeField]
		public Texture _defaultTexture;

		[Token(Token = "0x400146C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private int _lastWidth;

		[Token(Token = "0x400146D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		private int _lastHeight;

		[Token(Token = "0x400146E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private bool _flipY;

		[Token(Token = "0x400146F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private Texture _lastTexture;

		[Token(Token = "0x4001470")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Shader _shaderStereoPacking;

		[Token(Token = "0x4001471")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Shader _shaderAlphaPacking;

		[Token(Token = "0x4001472")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static Shader _shaderAndroidOES;

		[Token(Token = "0x4001473")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static int _propAlphaPack;

		[Token(Token = "0x4001474")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private static int _propVertScale;

		[Token(Token = "0x4001475")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static int _propStereo;

		[Token(Token = "0x4001476")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private static int _propApplyGamma;

		[Token(Token = "0x4001477")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static int _propUseYpCbCr;

		[Token(Token = "0x4001478")]
		private const string PropChromaTexName = "_ChromaTex";

		[Token(Token = "0x4001479")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private static int _propChromaTex;

		[Token(Token = "0x400147A")]
		private const string PropYpCbCrTransformName = "_YpCbCrTransform";

		[Token(Token = "0x400147B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static int _propYpCbCrTransform;

		[Token(Token = "0x400147C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private static int _propCroppingScalars;

		[Token(Token = "0x400147D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private bool _userMaterial;

		[Token(Token = "0x400147E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private Material _material;

		[Token(Token = "0x400147F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private List<UIVertex> _vertices;

		[Token(Token = "0x4001480")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static List<int> QuadIndices;

		[Token(Token = "0x17000284")]
		public override Texture mainTexture
		{
			[Token(Token = "0x60010F4")]
			[Address(RVA = "0x108E61C", Offset = "0x108E61C", VA = "0x108E61C", Slot = "35")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000285")]
		public MediaPlayer CurrentMediaPlayer
		{
			[Token(Token = "0x60010F8")]
			[Address(RVA = "0x108F640", Offset = "0x108F640", VA = "0x108F640")]
			get
			{
				return null;
			}
			[Token(Token = "0x60010F9")]
			[Address(RVA = "0x108F648", Offset = "0x108F648", VA = "0x108F648")]
			set
			{
			}
		}

		[Token(Token = "0x17000286")]
		public Rect uvRect
		{
			[Token(Token = "0x60010FA")]
			[Address(RVA = "0x108F6FC", Offset = "0x108F6FC", VA = "0x108F6FC")]
			get
			{
				return default(Rect);
			}
			[Token(Token = "0x60010FB")]
			[Address(RVA = "0x108F708", Offset = "0x108F708", VA = "0x108F708")]
			set
			{
			}
		}

		[Token(Token = "0x60010EB")]
		[Address(RVA = "0x108DA98", Offset = "0x108DA98", VA = "0x108DA98", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x60010EC")]
		[Address(RVA = "0x108DCAC", Offset = "0x108DCAC", VA = "0x108DCAC")]
		private static bool HasMask(GameObject obj)
		{
			return default(bool);
		}

		[Token(Token = "0x60010ED")]
		[Address(RVA = "0x108DE0C", Offset = "0x108DE0C", VA = "0x108DE0C")]
		private static Shader EnsureShader(Shader shader, string name)
		{
			return null;
		}

		[Token(Token = "0x60010EE")]
		[Address(RVA = "0x108DF30", Offset = "0x108DF30", VA = "0x108DF30")]
		private static Shader EnsureAlphaPackingShader()
		{
			return null;
		}

		[Token(Token = "0x60010EF")]
		[Address(RVA = "0x108DFD4", Offset = "0x108DFD4", VA = "0x108DFD4")]
		private static Shader EnsureStereoPackingShader()
		{
			return null;
		}

		[Token(Token = "0x60010F0")]
		[Address(RVA = "0x108E078", Offset = "0x108E078", VA = "0x108E078")]
		private Shader EnsureAndroidOESShader()
		{
			return null;
		}

		[Token(Token = "0x60010F1")]
		[Address(RVA = "0x108E11C", Offset = "0x108E11C", VA = "0x108E11C", Slot = "6")]
		protected override void Start()
		{
		}

		[Token(Token = "0x60010F2")]
		[Address(RVA = "0x108E218", Offset = "0x108E218", VA = "0x108E218", Slot = "8")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x60010F3")]
		[Address(RVA = "0x108E2F0", Offset = "0x108E2F0", VA = "0x108E2F0")]
		private Shader GetRequiredShader()
		{
			return null;
		}

		[Token(Token = "0x60010F5")]
		[Address(RVA = "0x108E7D0", Offset = "0x108E7D0", VA = "0x108E7D0")]
		public bool HasValidTexture()
		{
			return default(bool);
		}

		[Token(Token = "0x60010F6")]
		[Address(RVA = "0x108E940", Offset = "0x108E940", VA = "0x108E940")]
		private void UpdateInternalMaterial()
		{
		}

		[Token(Token = "0x60010F7")]
		[Address(RVA = "0x108EB60", Offset = "0x108EB60", VA = "0x108EB60")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60010FC")]
		[Address(RVA = "0x108F798", Offset = "0x108F798", VA = "0x108F798", Slot = "45")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x8E50A8", Offset = "0x8E50A8")]
		public override void SetNativeSize()
		{
		}

		[Token(Token = "0x60010FD")]
		[Address(RVA = "0x108F990", Offset = "0x108F990", VA = "0x108F990", Slot = "44")]
		protected override void OnPopulateMesh(VertexHelper vh)
		{
		}

		[Token(Token = "0x60010FE")]
		[Address(RVA = "0x1090044", Offset = "0x1090044", VA = "0x1090044", Slot = "42")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x8E50E0", Offset = "0x8E50E0")]
		protected override void OnFillVBO(List<UIVertex> vbo)
		{
		}

		[Token(Token = "0x60010FF")]
		[Address(RVA = "0x108FA34", Offset = "0x108FA34", VA = "0x108FA34")]
		private void _OnFillVBO(List<UIVertex> vbo)
		{
		}

		[Token(Token = "0x6001100")]
		[Address(RVA = "0x1090048", Offset = "0x1090048", VA = "0x1090048")]
		private Vector4 GetDrawingDimensions(ScaleMode scaleMode, ref Rect uvRect)
		{
			return default(Vector4);
		}

		[Token(Token = "0x6001101")]
		[Address(RVA = "0x10905D8", Offset = "0x10905D8", VA = "0x10905D8")]
		public DisplayUGUI()
		{
		}
	}
	[Token(Token = "0x2000309")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x8D7824", Offset = "0x8D7824")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8D7824", Offset = "0x8D7824")]
	public class MediaPlayer : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200030A")]
		public class Setup
		{
			[Token(Token = "0x40014CA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool persistent;

			[Token(Token = "0x6001165")]
			[Address(RVA = "0xE82E08", Offset = "0xE82E08", VA = "0xE82E08")]
			public Setup()
			{
			}
		}

		[Token(Token = "0x200030B")]
		public enum FileLocation
		{
			[Token(Token = "0x40014CC")]
			AbsolutePathOrURL,
			[Token(Token = "0x40014CD")]
			RelativeToProjectFolder,
			[Token(Token = "0x40014CE")]
			RelativeToStreamingAssetsFolder,
			[Token(Token = "0x40014CF")]
			RelativeToDataFolder,
			[Token(Token = "0x40014D0")]
			RelativeToPersistentDataFolder
		}

		[Serializable]
		[Token(Token = "0x200030C")]
		public class PlatformOptions
		{
			[Serializable]
			[Token(Token = "0x200030D")]
			public struct HTTPHeader
			{
				[Token(Token = "0x40014D4")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				public string header;

				[Token(Token = "0x40014D5")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
				public string value;

				[Token(Token = "0x600116D")]
				[Address(RVA = "0x1C33158", Offset = "0x1C33158", VA = "0x1C33158")]
				public HTTPHeader(string header, string value)
				{
				}
			}

			[Token(Token = "0x200030E")]
			private enum ParseJSONHeadersState
			{
				[Token(Token = "0x40014D7")]
				Begin,
				[Token(Token = "0x40014D8")]
				FindKey,
				[Token(Token = "0x40014D9")]
				ReadKey,
				[Token(Token = "0x40014DA")]
				FindColon,
				[Token(Token = "0x40014DB")]
				FindValue,
				[Token(Token = "0x40014DC")]
				ReadValue,
				[Token(Token = "0x40014DD")]
				FindComma,
				[Token(Token = "0x40014DE")]
				Finished,
				[Token(Token = "0x40014DF")]
				Failed
			}

			[Token(Token = "0x40014D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool overridePath;

			[Token(Token = "0x40014D2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public FileLocation pathLocation;

			[Token(Token = "0x40014D3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string path;

			[Token(Token = "0x6001166")]
			[Address(RVA = "0xE82D4C", Offset = "0xE82D4C", VA = "0xE82D4C", Slot = "4")]
			public virtual bool IsModified()
			{
				return default(bool);
			}

			[Token(Token = "0x6001167")]
			[Address(RVA = "0xE82D54", Offset = "0xE82D54", VA = "0xE82D54", Slot = "5")]
			public virtual string GetKeyServerURL()
			{
				return null;
			}

			[Token(Token = "0x6001168")]
			[Address(RVA = "0xE82D5C", Offset = "0xE82D5C", VA = "0xE82D5C", Slot = "6")]
			public virtual string GetKeyServerAuthToken()
			{
				return null;
			}

			[Token(Token = "0x6001169")]
			[Address(RVA = "0xE82D64", Offset = "0xE82D64", VA = "0xE82D64", Slot = "7")]
			public virtual string GetDecryptionKey()
			{
				return null;
			}

			[Token(Token = "0x600116A")]
			[Address(RVA = "0xE81C30", Offset = "0xE81C30", VA = "0xE81C30")]
			protected static string StringAsJsonString(string str)
			{
				return null;
			}

			[Token(Token = "0x600116B")]
			[Address(RVA = "0xE821B4", Offset = "0xE821B4", VA = "0xE821B4")]
			protected static List<HTTPHeader> ParseJsonHTTPHeadersIntoHTTPHeaderList(string httpHeaderJson)
			{
				return null;
			}

			[Token(Token = "0x600116C")]
			[Address(RVA = "0xE825F4", Offset = "0xE825F4", VA = "0xE825F4")]
			public PlatformOptions()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200030F")]
		public class OptionsWindows : PlatformOptions
		{
			[Token(Token = "0x40014E0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Windows.VideoApi videoApi;

			[Token(Token = "0x40014E1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public bool useHardwareDecoding;

			[Token(Token = "0x40014E2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
			public bool useUnityAudio;

			[Token(Token = "0x40014E3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x26")]
			public bool forceAudioResample;

			[Token(Token = "0x40014E4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x27")]
			public bool useTextureMips;

			[Token(Token = "0x40014E5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool hintAlphaChannel;

			[Token(Token = "0x40014E6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
			public bool useLowLatency;

			[Token(Token = "0x40014E7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public string forceAudioOutputDeviceName;

			[Token(Token = "0x40014E8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public List<string> preferredFilters;

			[Token(Token = "0x40014E9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public bool enableAudio360;

			[Token(Token = "0x40014EA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			public Audio360ChannelMode audio360ChannelMode;

			[Token(Token = "0x600116E")]
			[Address(RVA = "0xE82B14", Offset = "0xE82B14", VA = "0xE82B14", Slot = "4")]
			public override bool IsModified()
			{
				return default(bool);
			}

			[Token(Token = "0x600116F")]
			[Address(RVA = "0xE82BD0", Offset = "0xE82BD0", VA = "0xE82BD0")]
			public OptionsWindows()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000310")]
		public class OptionsApple : PlatformOptions, ISerializationCallbackReceiver
		{
			[Token(Token = "0x2000311")]
			public enum AudioMode
			{
				[Token(Token = "0x40014F2")]
				SystemDirect,
				[Token(Token = "0x40014F3")]
				Unity
			}

			[Token(Token = "0x40014EB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public AudioMode audioMode;

			[Token(Token = "0x40014EC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public List<HTTPHeader> httpHeaders;

			[Token(Token = "0x40014ED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[Multiline]
			[SerializeField]
			private string httpHeaderJson;

			[Token(Token = "0x40014EE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public string keyServerURLOverride;

			[Token(Token = "0x40014EF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public string keyServerAuthToken;

			[Token(Token = "0x40014F0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			[Multiline]
			public string base64EncodedKeyBlob;

			[Token(Token = "0x6001170")]
			[Address(RVA = "0xE82604", Offset = "0xE82604", VA = "0xE82604")]
			public string GetHTTPHeadersAsJSON()
			{
				return null;
			}

			[Token(Token = "0x6001171")]
			[Address(RVA = "0xE8283C", Offset = "0xE8283C", VA = "0xE8283C", Slot = "4")]
			public override bool IsModified()
			{
				return default(bool);
			}

			[Token(Token = "0x6001172")]
			[Address(RVA = "0xE828E8", Offset = "0xE828E8", VA = "0xE828E8", Slot = "5")]
			public override string GetKeyServerURL()
			{
				return null;
			}

			[Token(Token = "0x6001173")]
			[Address(RVA = "0xE828F0", Offset = "0xE828F0", VA = "0xE828F0", Slot = "6")]
			public override string GetKeyServerAuthToken()
			{
				return null;
			}

			[Token(Token = "0x6001174")]
			[Address(RVA = "0xE828F8", Offset = "0xE828F8", VA = "0xE828F8", Slot = "7")]
			public override string GetDecryptionKey()
			{
				return null;
			}

			[Token(Token = "0x6001175")]
			[Address(RVA = "0xE82900", Offset = "0xE82900", VA = "0xE82900", Slot = "8")]
			public void OnBeforeSerialize()
			{
			}

			[Token(Token = "0x6001176")]
			[Address(RVA = "0xE82980", Offset = "0xE82980", VA = "0xE82980", Slot = "9")]
			public void OnAfterDeserialize()
			{
			}

			[Token(Token = "0x6001177")]
			[Address(RVA = "0xE829E4", Offset = "0xE829E4", VA = "0xE829E4")]
			public OptionsApple()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000312")]
		public class OptionsMacOSX : OptionsApple
		{
			[Token(Token = "0x6001178")]
			[Address(RVA = "0xE82ABC", Offset = "0xE82ABC", VA = "0xE82ABC")]
			public OptionsMacOSX()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000313")]
		public class OptionsIOS : OptionsApple
		{
			[Token(Token = "0x40014F4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public bool useYpCbCr420Textures;

			[Token(Token = "0x40014F5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
			public bool resumePlaybackOnAudioSessionRouteChange;

			[Token(Token = "0x6001179")]
			[Address(RVA = "0xE82A70", Offset = "0xE82A70", VA = "0xE82A70", Slot = "4")]
			public override bool IsModified()
			{
				return default(bool);
			}

			[Token(Token = "0x600117A")]
			[Address(RVA = "0xE82AB0", Offset = "0xE82AB0", VA = "0xE82AB0")]
			public OptionsIOS()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000314")]
		public class OptionsTVOS : OptionsIOS
		{
			[Token(Token = "0x600117B")]
			[Address(RVA = "0xE82AD0", Offset = "0xE82AD0", VA = "0xE82AD0")]
			public OptionsTVOS()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000315")]
		public class OptionsAndroid : PlatformOptions, ISerializationCallbackReceiver
		{
			[Token(Token = "0x40014F6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Android.VideoApi videoApi;

			[Token(Token = "0x40014F7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public bool useFastOesPath;

			[Token(Token = "0x40014F8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
			public bool showPosterFrame;

			[Token(Token = "0x40014F9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x26")]
			public bool enableAudio360;

			[Token(Token = "0x40014FA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Audio360ChannelMode audio360ChannelMode;

			[Token(Token = "0x40014FB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public bool preferSoftwareDecoder;

			[Token(Token = "0x40014FC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public List<HTTPHeader> httpHeaders;

			[Token(Token = "0x40014FD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			[SerializeField]
			[Multiline]
			private string httpHeaderJson;

			[Token(Token = "0x40014FE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			[SerializeField]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DCA38", Offset = "0x8DCA38")]
			public int fileOffset;

			[Token(Token = "0x600117C")]
			[Address(RVA = "0xE819F8", Offset = "0xE819F8", VA = "0xE819F8")]
			public string GetHTTPHeadersAsJSON()
			{
				return null;
			}

			[Token(Token = "0x600117D")]
			[Address(RVA = "0xE82030", Offset = "0xE82030", VA = "0xE82030", Slot = "4")]
			public override bool IsModified()
			{
				return default(bool);
			}

			[Token(Token = "0x600117E")]
			[Address(RVA = "0xE820D0", Offset = "0xE820D0", VA = "0xE820D0", Slot = "8")]
			public void OnBeforeSerialize()
			{
			}

			[Token(Token = "0x600117F")]
			[Address(RVA = "0xE82150", Offset = "0xE82150", VA = "0xE82150", Slot = "9")]
			public void OnAfterDeserialize()
			{
			}

			[Token(Token = "0x6001180")]
			[Address(RVA = "0xE8255C", Offset = "0xE8255C", VA = "0xE8255C")]
			public OptionsAndroid()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000316")]
		public class OptionsWindowsPhone : PlatformOptions
		{
			[Token(Token = "0x40014FF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool useHardwareDecoding;

			[Token(Token = "0x4001500")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
			public bool useUnityAudio;

			[Token(Token = "0x4001501")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
			public bool forceAudioResample;

			[Token(Token = "0x4001502")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x23")]
			public bool useTextureMips;

			[Token(Token = "0x4001503")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public bool useLowLatency;

			[Token(Token = "0x6001181")]
			[Address(RVA = "0xE82C94", Offset = "0xE82C94", VA = "0xE82C94", Slot = "4")]
			public override bool IsModified()
			{
				return default(bool);
			}

			[Token(Token = "0x6001182")]
			[Address(RVA = "0xE82CD4", Offset = "0xE82CD4", VA = "0xE82CD4")]
			public OptionsWindowsPhone()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000317")]
		public class OptionsWindowsUWP : PlatformOptions
		{
			[Token(Token = "0x4001504")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool useHardwareDecoding;

			[Token(Token = "0x4001505")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
			public bool useUnityAudio;

			[Token(Token = "0x4001506")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
			public bool forceAudioResample;

			[Token(Token = "0x4001507")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x23")]
			public bool useTextureMips;

			[Token(Token = "0x4001508")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public bool useLowLatency;

			[Token(Token = "0x6001183")]
			[Address(RVA = "0xE82CF0", Offset = "0xE82CF0", VA = "0xE82CF0", Slot = "4")]
			public override bool IsModified()
			{
				return default(bool);
			}

			[Token(Token = "0x6001184")]
			[Address(RVA = "0xE82D30", Offset = "0xE82D30", VA = "0xE82D30")]
			public OptionsWindowsUWP()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000318")]
		public class OptionsWebGL : PlatformOptions
		{
			[Token(Token = "0x4001509")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public WebGL.ExternalLibrary externalLibrary;

			[Token(Token = "0x400150A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public bool useTextureMips;

			[Token(Token = "0x6001185")]
			[Address(RVA = "0xE82ADC", Offset = "0xE82ADC", VA = "0xE82ADC", Slot = "4")]
			public override bool IsModified()
			{
				return default(bool);
			}

			[Token(Token = "0x6001186")]
			[Address(RVA = "0xE82B04", Offset = "0xE82B04", VA = "0xE82B04")]
			public OptionsWebGL()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000319")]
		public class OptionsPS4 : PlatformOptions
		{
			[Token(Token = "0x6001187")]
			[Address(RVA = "0xE82AC0", Offset = "0xE82AC0", VA = "0xE82AC0")]
			public OptionsPS4()
			{
			}
		}

		[Token(Token = "0x200031A")]
		public delegate void ProcessExtractedFrame(Texture2D extractedFrame);

		[Token(Token = "0x200031B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D7888", Offset = "0x8D7888")]
		private sealed class <LoadSubtitlesCoroutine>d__166 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400150B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400150C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400150D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string url;

			[Token(Token = "0x400150E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public MediaPlayer <>4__this;

			[Token(Token = "0x400150F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public FileLocation fileLocation;

			[Token(Token = "0x4001510")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public string filePath;

			[Token(Token = "0x4001511")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private UnityWebRequest <www>5__2;

			[Token(Token = "0x170002A5")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600118F")]
				[Address(RVA = "0xE819A8", Offset = "0xE819A8", VA = "0xE819A8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002A6")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001191")]
				[Address(RVA = "0xE819F0", Offset = "0xE819F0", VA = "0xE819F0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600118C")]
			[Address(RVA = "0xE816B8", Offset = "0xE816B8", VA = "0xE816B8")]
			[DebuggerHidden]
			public <LoadSubtitlesCoroutine>d__166(int <>1__state)
			{
			}

			[Token(Token = "0x600118D")]
			[Address(RVA = "0xE816E4", Offset = "0xE816E4", VA = "0xE816E4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600118E")]
			[Address(RVA = "0xE816E8", Offset = "0xE816E8", VA = "0xE816E8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001190")]
			[Address(RVA = "0xE819B0", Offset = "0xE819B0", VA = "0xE819B0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200031C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D7898", Offset = "0x8D7898")]
		private sealed class <FinalRenderCapture>d__188 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001512")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001513")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001514")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MediaPlayer <>4__this;

			[Token(Token = "0x4001515")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private YieldInstruction <wait>5__2;

			[Token(Token = "0x170002A7")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001195")]
				[Address(RVA = "0xE81668", Offset = "0xE81668", VA = "0xE81668", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002A8")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001197")]
				[Address(RVA = "0xE816B0", Offset = "0xE816B0", VA = "0xE816B0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001192")]
			[Address(RVA = "0xE814E4", Offset = "0xE814E4", VA = "0xE814E4")]
			[DebuggerHidden]
			public <FinalRenderCapture>d__188(int <>1__state)
			{
			}

			[Token(Token = "0x6001193")]
			[Address(RVA = "0xE81510", Offset = "0xE81510", VA = "0xE81510", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001194")]
			[Address(RVA = "0xE81514", Offset = "0xE81514", VA = "0xE81514", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001196")]
			[Address(RVA = "0xE81670", Offset = "0xE81670", VA = "0xE81670", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200031D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D78A8", Offset = "0x8D78A8")]
		private sealed class <ExtractFrameCoroutine>d__209 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001516")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001517")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001518")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Texture2D target;

			[Token(Token = "0x4001519")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public MediaPlayer <>4__this;

			[Token(Token = "0x400151A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float timeSeconds;

			[Token(Token = "0x400151B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public int timeThresholdMs;

			[Token(Token = "0x400151C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public bool accurateSeek;

			[Token(Token = "0x400151D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public ProcessExtractedFrame callback;

			[Token(Token = "0x400151E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private Texture2D <result>5__2;

			[Token(Token = "0x400151F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private int <currFc>5__3;

			[Token(Token = "0x4001520")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			private int <iterations>5__4;

			[Token(Token = "0x4001521")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private int <maxIterations>5__5;

			[Token(Token = "0x170002A9")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600119B")]
				[Address(RVA = "0xE81494", Offset = "0xE81494", VA = "0xE81494", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002AA")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600119D")]
				[Address(RVA = "0xE814DC", Offset = "0xE814DC", VA = "0xE814DC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001198")]
			[Address(RVA = "0xE8087C", Offset = "0xE8087C", VA = "0xE8087C")]
			[DebuggerHidden]
			public <ExtractFrameCoroutine>d__209(int <>1__state)
			{
			}

			[Token(Token = "0x6001199")]
			[Address(RVA = "0xE808A8", Offset = "0xE808A8", VA = "0xE808A8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600119A")]
			[Address(RVA = "0xE808AC", Offset = "0xE808AC", VA = "0xE808AC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600119C")]
			[Address(RVA = "0xE8149C", Offset = "0xE8149C", VA = "0xE8149C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001481")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public FileLocation m_VideoLocation;

		[Token(Token = "0x4001482")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string m_VideoPath;

		[Token(Token = "0x4001483")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool m_AutoOpen;

		[Token(Token = "0x4001484")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		public bool m_AutoStart;

		[Token(Token = "0x4001485")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
		public bool m_Loop;

		[Token(Token = "0x4001486")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8DC6D8", Offset = "0x8DC6D8")]
		public float m_Volume;

		[Token(Token = "0x4001487")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8DC6F0", Offset = "0x8DC6F0")]
		private float m_Balance;

		[Token(Token = "0x4001488")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public bool m_Muted;

		[Token(Token = "0x4001489")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8DC730", Offset = "0x8DC730")]
		public float m_PlaybackRate;

		[Token(Token = "0x400148A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool m_Resample;

		[Token(Token = "0x400148B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Resampler.ResampleMode m_ResampleMode;

		[Token(Token = "0x400148C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8DC770", Offset = "0x8DC770")]
		public int m_ResampleBufferSize;

		[Token(Token = "0x400148D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Resampler m_Resampler;

		[Token(Token = "0x400148E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private bool m_Persistent;

		[Token(Token = "0x400148F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[SerializeField]
		private VideoMapping m_videoMapping;

		[Token(Token = "0x4001490")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public StereoPacking m_StereoPacking;

		[Token(Token = "0x4001491")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public AlphaPacking m_AlphaPacking;

		[Token(Token = "0x4001492")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public bool m_DisplayDebugStereoColorTint;

		[Token(Token = "0x4001493")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public FilterMode m_FilterMode;

		[Token(Token = "0x4001494")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public TextureWrapMode m_WrapMode;

		[Token(Token = "0x4001495")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8DC7A8", Offset = "0x8DC7A8")]
		public int m_AnisoLevel;

		[Token(Token = "0x4001496")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private bool m_LoadSubtitles;

		[Token(Token = "0x4001497")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[SerializeField]
		private FileLocation m_SubtitleLocation;

		[Token(Token = "0x4001498")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private FileLocation m_queueSubtitleLocation;

		[Token(Token = "0x4001499")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private string m_SubtitlePath;

		[Token(Token = "0x400149A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private string m_queueSubtitlePath;

		[Token(Token = "0x400149B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Coroutine m_loadSubtitlesRoutine;

		[Token(Token = "0x400149C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private Transform m_AudioHeadTransform;

		[Token(Token = "0x400149D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private bool m_AudioFocusEnabled;

		[Token(Token = "0x400149E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private Transform m_AudioFocusTransform;

		[Token(Token = "0x400149F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8DC820", Offset = "0x8DC820")]
		[SerializeField]
		private float m_AudioFocusWidthDegrees;

		[Token(Token = "0x40014A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8DC868", Offset = "0x8DC868")]
		private float m_AudioFocusOffLevelDB;

		[Token(Token = "0x40014A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private MediaPlayerEvent m_events;

		[Token(Token = "0x40014A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private int m_eventMask;

		[Token(Token = "0x40014A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		[SerializeField]
		private FileFormat m_forceFileFormat;

		[Token(Token = "0x40014A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private bool _pauseMediaOnAppPause;

		[Token(Token = "0x40014A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC9")]
		[SerializeField]
		private bool _playMediaOnAppUnpause;

		[Token(Token = "0x40014A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private IMediaControl m_Control;

		[Token(Token = "0x40014A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private IMediaProducer m_Texture;

		[Token(Token = "0x40014A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private IMediaInfo m_Info;

		[Token(Token = "0x40014A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private IMediaPlayer m_Player;

		[Token(Token = "0x40014AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private IMediaSubtitles m_Subtitles;

		[Token(Token = "0x40014AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private IDisposable m_Dispose;

		[Token(Token = "0x40014AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private bool m_VideoOpened;

		[Token(Token = "0x40014AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x101")]
		private bool m_AutoStartTriggered;

		[Token(Token = "0x40014AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x102")]
		private bool m_WasPlayingOnExternalPause;

		[Token(Token = "0x40014AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private Coroutine _renderingCoroutine;

		[Token(Token = "0x40014B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool s_GlobalStartup;

		[Token(Token = "0x40014B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private bool m_EventFired_ReadyToPlay;

		[Token(Token = "0x40014B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x111")]
		private bool m_EventFired_Started;

		[Token(Token = "0x40014B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x112")]
		private bool m_EventFired_FirstFrameReady;

		[Token(Token = "0x40014B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x113")]
		private bool m_EventFired_FinishedPlaying;

		[Token(Token = "0x40014B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		private bool m_EventFired_MetaDataReady;

		[Token(Token = "0x40014B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x115")]
		private bool m_EventState_PlaybackStalled;

		[Token(Token = "0x40014B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x116")]
		private bool m_EventState_PlaybackBuffering;

		[Token(Token = "0x40014B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x117")]
		private bool m_EventState_PlaybackSeeking;

		[Token(Token = "0x40014B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private int m_EventState_PreviousWidth;

		[Token(Token = "0x40014BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		private int m_EventState_PreviousHeight;

		[Token(Token = "0x40014BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private int m_previousSubtitleIndex;

		[Token(Token = "0x40014BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Camera m_DummyCamera;

		[Token(Token = "0x40014BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		private bool m_FinishedFrameOpenCheck;

		[Token(Token = "0x40014BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[SerializeField]
		private uint m_sourceSampleRate;

		[Token(Token = "0x40014BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
		[SerializeField]
		private uint m_sourceChannels;

		[Token(Token = "0x40014C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[SerializeField]
		private bool m_manuallySetAudioSourceProperties;

		[Token(Token = "0x40014C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		[SerializeField]
		private OptionsWindows _optionsWindows;

		[Token(Token = "0x40014C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		[SerializeField]
		private OptionsMacOSX _optionsMacOSX;

		[Token(Token = "0x40014C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		[SerializeField]
		private OptionsIOS _optionsIOS;

		[Token(Token = "0x40014C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		[SerializeField]
		private OptionsTVOS _optionsTVOS;

		[Token(Token = "0x40014C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		[SerializeField]
		private OptionsAndroid _optionsAndroid;

		[Token(Token = "0x40014C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		[SerializeField]
		private OptionsWindowsPhone _optionsWindowsPhone;

		[Token(Token = "0x40014C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		[SerializeField]
		private OptionsWindowsUWP _optionsWindowsUWP;

		[Token(Token = "0x40014C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		[SerializeField]
		private OptionsWebGL _optionsWebGL;

		[Token(Token = "0x40014C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		[SerializeField]
		private OptionsPS4 _optionsPS4;

		[Token(Token = "0x17000287")]
		public Resampler FrameResampler
		{
			[Token(Token = "0x6001103")]
			[Address(RVA = "0x1353094", Offset = "0x1353094", VA = "0x1353094")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000288")]
		public bool Persistent
		{
			[Token(Token = "0x6001104")]
			[Address(RVA = "0x135309C", Offset = "0x135309C", VA = "0x135309C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001105")]
			[Address(RVA = "0x13530A4", Offset = "0x13530A4", VA = "0x13530A4")]
			set
			{
			}
		}

		[Token(Token = "0x17000289")]
		public VideoMapping VideoLayoutMapping
		{
			[Token(Token = "0x6001106")]
			[Address(RVA = "0x13530B0", Offset = "0x13530B0", VA = "0x13530B0")]
			get
			{
				return default(VideoMapping);
			}
			[Token(Token = "0x6001107")]
			[Address(RVA = "0x13530B8", Offset = "0x13530B8", VA = "0x13530B8")]
			set
			{
			}
		}

		[Token(Token = "0x1700028A")]
		public virtual IMediaInfo Info
		{
			[Token(Token = "0x6001108")]
			[Address(RVA = "0x13530C0", Offset = "0x13530C0", VA = "0x13530C0", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700028B")]
		public virtual IMediaControl Control
		{
			[Token(Token = "0x6001109")]
			[Address(RVA = "0x13530C8", Offset = "0x13530C8", VA = "0x13530C8", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700028C")]
		public virtual IMediaPlayer Player
		{
			[Token(Token = "0x600110A")]
			[Address(RVA = "0x13530D0", Offset = "0x13530D0", VA = "0x13530D0", Slot = "6")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700028D")]
		public virtual IMediaProducer TextureProducer
		{
			[Token(Token = "0x600110B")]
			[Address(RVA = "0x13530D8", Offset = "0x13530D8", VA = "0x13530D8", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700028E")]
		public virtual IMediaSubtitles Subtitles
		{
			[Token(Token = "0x600110C")]
			[Address(RVA = "0x13530E0", Offset = "0x13530E0", VA = "0x13530E0", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700028F")]
		public MediaPlayerEvent Events
		{
			[Token(Token = "0x600110D")]
			[Address(RVA = "0x13530E8", Offset = "0x13530E8", VA = "0x13530E8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000290")]
		public bool VideoOpened
		{
			[Token(Token = "0x600110E")]
			[Address(RVA = "0x13531F4", Offset = "0x13531F4", VA = "0x13531F4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000291")]
		public bool PauseMediaOnAppPause
		{
			[Token(Token = "0x600110F")]
			[Address(RVA = "0x13531FC", Offset = "0x13531FC", VA = "0x13531FC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001110")]
			[Address(RVA = "0x1353204", Offset = "0x1353204", VA = "0x1353204")]
			set
			{
			}
		}

		[Token(Token = "0x17000292")]
		public bool PlayMediaOnAppUnpause
		{
			[Token(Token = "0x6001111")]
			[Address(RVA = "0x1353210", Offset = "0x1353210", VA = "0x1353210")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001112")]
			[Address(RVA = "0x1353218", Offset = "0x1353218", VA = "0x1353218")]
			set
			{
			}
		}

		[Token(Token = "0x17000293")]
		public FileFormat ForceFileFormat
		{
			[Token(Token = "0x6001113")]
			[Address(RVA = "0x1353224", Offset = "0x1353224", VA = "0x1353224")]
			get
			{
				return default(FileFormat);
			}
			[Token(Token = "0x6001114")]
			[Address(RVA = "0x135322C", Offset = "0x135322C", VA = "0x135322C")]
			set
			{
			}
		}

		[Token(Token = "0x17000294")]
		public Transform AudioHeadTransform
		{
			[Token(Token = "0x6001116")]
			[Address(RVA = "0x135323C", Offset = "0x135323C", VA = "0x135323C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001115")]
			[Address(RVA = "0x1353234", Offset = "0x1353234", VA = "0x1353234")]
			set
			{
			}
		}

		[Token(Token = "0x17000295")]
		public bool AudioFocusEnabled
		{
			[Token(Token = "0x6001117")]
			[Address(RVA = "0x1353244", Offset = "0x1353244", VA = "0x1353244")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001118")]
			[Address(RVA = "0x135324C", Offset = "0x135324C", VA = "0x135324C")]
			set
			{
			}
		}

		[Token(Token = "0x17000296")]
		public float AudioFocusOffLevelDB
		{
			[Token(Token = "0x6001119")]
			[Address(RVA = "0x1353258", Offset = "0x1353258", VA = "0x1353258")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600111A")]
			[Address(RVA = "0x1353260", Offset = "0x1353260", VA = "0x1353260")]
			set
			{
			}
		}

		[Token(Token = "0x17000297")]
		public float AudioFocusWidthDegrees
		{
			[Token(Token = "0x600111B")]
			[Address(RVA = "0x1353268", Offset = "0x1353268", VA = "0x1353268")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600111C")]
			[Address(RVA = "0x1353270", Offset = "0x1353270", VA = "0x1353270")]
			set
			{
			}
		}

		[Token(Token = "0x17000298")]
		public Transform AudioFocusTransform
		{
			[Token(Token = "0x600111D")]
			[Address(RVA = "0x1353278", Offset = "0x1353278", VA = "0x1353278")]
			get
			{
				return null;
			}
			[Token(Token = "0x600111E")]
			[Address(RVA = "0x1353280", Offset = "0x1353280", VA = "0x1353280")]
			set
			{
			}
		}

		[Token(Token = "0x17000299")]
		public OptionsWindows PlatformOptionsWindows
		{
			[Token(Token = "0x600111F")]
			[Address(RVA = "0x1353288", Offset = "0x1353288", VA = "0x1353288")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700029A")]
		public OptionsMacOSX PlatformOptionsMacOSX
		{
			[Token(Token = "0x6001120")]
			[Address(RVA = "0x1353290", Offset = "0x1353290", VA = "0x1353290")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700029B")]
		public OptionsIOS PlatformOptionsIOS
		{
			[Token(Token = "0x6001121")]
			[Address(RVA = "0x1353298", Offset = "0x1353298", VA = "0x1353298")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700029C")]
		public OptionsTVOS PlatformOptionsTVOS
		{
			[Token(Token = "0x6001122")]
			[Address(RVA = "0x13532A0", Offset = "0x13532A0", VA = "0x13532A0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700029D")]
		public OptionsAndroid PlatformOptionsAndroid
		{
			[Token(Token = "0x6001123")]
			[Address(RVA = "0x13532A8", Offset = "0x13532A8", VA = "0x13532A8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700029E")]
		public OptionsWindowsPhone PlatformOptionsWindowsPhone
		{
			[Token(Token = "0x6001124")]
			[Address(RVA = "0x13532B0", Offset = "0x13532B0", VA = "0x13532B0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700029F")]
		public OptionsWindowsUWP PlatformOptionsWindowsUWP
		{
			[Token(Token = "0x6001125")]
			[Address(RVA = "0x13532B8", Offset = "0x13532B8", VA = "0x13532B8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002A0")]
		public OptionsWebGL PlatformOptionsWebGL
		{
			[Token(Token = "0x6001126")]
			[Address(RVA = "0x13532C0", Offset = "0x13532C0", VA = "0x13532C0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002A1")]
		public OptionsPS4 PlatformOptionsPS4
		{
			[Token(Token = "0x6001127")]
			[Address(RVA = "0x13532C8", Offset = "0x13532C8", VA = "0x13532C8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002A2")]
		public bool SubtitlesEnabled
		{
			[Token(Token = "0x6001130")]
			[Address(RVA = "0x1354668", Offset = "0x1354668", VA = "0x1354668")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002A3")]
		public string SubtitlePath
		{
			[Token(Token = "0x6001131")]
			[Address(RVA = "0x1354670", Offset = "0x1354670", VA = "0x1354670")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002A4")]
		public FileLocation SubtitleLocation
		{
			[Token(Token = "0x6001132")]
			[Address(RVA = "0x1354678", Offset = "0x1354678", VA = "0x1354678")]
			get
			{
				return default(FileLocation);
			}
		}

		[Token(Token = "0x6001128")]
		[Address(RVA = "0x13532D0", Offset = "0x13532D0", VA = "0x13532D0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001129")]
		[Address(RVA = "0x135335C", Offset = "0x135335C", VA = "0x135335C")]
		protected void Initialise()
		{
		}

		[Token(Token = "0x600112A")]
		[Address(RVA = "0x1353718", Offset = "0x1353718", VA = "0x1353718")]
		private void Start()
		{
		}

		[Token(Token = "0x600112B")]
		[Address(RVA = "0x1353F0C", Offset = "0x1353F0C", VA = "0x1353F0C")]
		public bool OpenVideoFromFile(FileLocation location, string path, bool autoPlay = true)
		{
			return default(bool);
		}

		[Token(Token = "0x600112C")]
		[Address(RVA = "0x1353F6C", Offset = "0x1353F6C", VA = "0x1353F6C")]
		public bool OpenVideoFromBuffer(byte[] buffer, bool autoPlay = true)
		{
			return default(bool);
		}

		[Token(Token = "0x600112D")]
		[Address(RVA = "0x13541F4", Offset = "0x13541F4", VA = "0x13541F4")]
		public bool StartOpenChunkedVideoFromBuffer(ulong length, bool autoPlay = true)
		{
			return default(bool);
		}

		[Token(Token = "0x600112E")]
		[Address(RVA = "0x1354470", Offset = "0x1354470", VA = "0x1354470")]
		public bool AddChunkToVideoBuffer(byte[] chunk, ulong offset, ulong chunkSize)
		{
			return default(bool);
		}

		[Token(Token = "0x600112F")]
		[Address(RVA = "0x1354584", Offset = "0x1354584", VA = "0x1354584")]
		public bool EndOpenChunkedVideoFromBuffer()
		{
			return default(bool);
		}

		[Token(Token = "0x6001133")]
		[Address(RVA = "0x1353AA8", Offset = "0x1353AA8", VA = "0x1353AA8")]
		public bool EnableSubtitles(FileLocation fileLocation, string filePath)
		{
			return default(bool);
		}

		[Token(Token = "0x6001134")]
		[Address(RVA = "0x135474C", Offset = "0x135474C", VA = "0x135474C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E5118", Offset = "0x8E5118")]
		private IEnumerator LoadSubtitlesCoroutine(string url, FileLocation fileLocation, string filePath)
		{
			return null;
		}

		[Token(Token = "0x6001135")]
		[Address(RVA = "0x1354804", Offset = "0x1354804", VA = "0x1354804")]
		public void DisableSubtitles()
		{
		}

		[Token(Token = "0x6001136")]
		[Address(RVA = "0x1353FF4", Offset = "0x1353FF4", VA = "0x1353FF4")]
		private bool OpenVideoFromBufferInternal(byte[] buffer)
		{
			return default(bool);
		}

		[Token(Token = "0x6001137")]
		[Address(RVA = "0x135427C", Offset = "0x135427C", VA = "0x135427C")]
		private bool StartOpenVideoFromBufferInternal(ulong length)
		{
			return default(bool);
		}

		[Token(Token = "0x6001138")]
		[Address(RVA = "0x1354474", Offset = "0x1354474", VA = "0x1354474")]
		private bool AddChunkToBufferInternal(byte[] chunk, ulong offset, ulong chunkSize)
		{
			return default(bool);
		}

		[Token(Token = "0x6001139")]
		[Address(RVA = "0x1354588", Offset = "0x1354588", VA = "0x1354588")]
		private bool EndOpenVideoFromBufferInternal()
		{
			return default(bool);
		}

		[Token(Token = "0x600113A")]
		[Address(RVA = "0x135379C", Offset = "0x135379C", VA = "0x135379C")]
		private bool OpenVideoFromFile()
		{
			return default(bool);
		}

		[Token(Token = "0x600113B")]
		[Address(RVA = "0x1354A84", Offset = "0x1354A84", VA = "0x1354A84")]
		private void SetPlaybackOptions()
		{
		}

		[Token(Token = "0x600113C")]
		[Address(RVA = "0x135492C", Offset = "0x135492C", VA = "0x135492C")]
		public void CloseVideo()
		{
		}

		[Token(Token = "0x600113D")]
		[Address(RVA = "0x1355138", Offset = "0x1355138", VA = "0x1355138")]
		public void Play()
		{
		}

		[Token(Token = "0x600113E")]
		[Address(RVA = "0x135527C", Offset = "0x135527C", VA = "0x135527C")]
		public void Pause()
		{
		}

		[Token(Token = "0x600113F")]
		[Address(RVA = "0x13553AC", Offset = "0x13553AC", VA = "0x13553AC")]
		public void Stop()
		{
		}

		[Token(Token = "0x6001140")]
		[Address(RVA = "0x1355464", Offset = "0x1355464", VA = "0x1355464")]
		public void Rewind(bool pause)
		{
		}

		[Token(Token = "0x6001141")]
		[Address(RVA = "0x1355544", Offset = "0x1355544", VA = "0x1355544", Slot = "9")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x6001142")]
		[Address(RVA = "0x13564AC", Offset = "0x13564AC", VA = "0x13564AC")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001143")]
		[Address(RVA = "0x13564B0", Offset = "0x13564B0", VA = "0x13564B0")]
		private void UpdateResampler()
		{
		}

		[Token(Token = "0x6001144")]
		[Address(RVA = "0x13565A4", Offset = "0x13565A4", VA = "0x13565A4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001145")]
		[Address(RVA = "0x1356674", Offset = "0x1356674", VA = "0x1356674")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001146")]
		[Address(RVA = "0x135673C", Offset = "0x135673C", VA = "0x135673C", Slot = "10")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x6001147")]
		[Address(RVA = "0x1356878", Offset = "0x1356878", VA = "0x1356878")]
		private void OnApplicationQuit()
		{
		}

		[Token(Token = "0x6001148")]
		[Address(RVA = "0x1353EC0", Offset = "0x1353EC0", VA = "0x1353EC0")]
		private void StartRenderCoroutine()
		{
		}

		[Token(Token = "0x6001149")]
		[Address(RVA = "0x13550F8", Offset = "0x13550F8", VA = "0x13550F8")]
		private void StopRenderCoroutine()
		{
		}

		[Token(Token = "0x600114A")]
		[Address(RVA = "0x13569F4", Offset = "0x13569F4", VA = "0x13569F4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E5178", Offset = "0x8E5178")]
		private IEnumerator FinalRenderCapture()
		{
			return null;
		}

		[Token(Token = "0x600114B")]
		[Address(RVA = "0x1354680", Offset = "0x1354680", VA = "0x1354680")]
		public static Platform GetPlatform()
		{
			return default(Platform);
		}

		[Token(Token = "0x600114C")]
		[Address(RVA = "0x1356A6C", Offset = "0x1356A6C", VA = "0x1356A6C")]
		public PlatformOptions GetCurrentPlatformOptions()
		{
			return null;
		}

		[Token(Token = "0x600114D")]
		[Address(RVA = "0x1356A74", Offset = "0x1356A74", VA = "0x1356A74")]
		public static string GetPath(FileLocation location)
		{
			return null;
		}

		[Token(Token = "0x600114E")]
		[Address(RVA = "0x1356BA0", Offset = "0x1356BA0", VA = "0x1356BA0")]
		public static string GetFilePath(string path, FileLocation location)
		{
			return null;
		}

		[Token(Token = "0x600114F")]
		[Address(RVA = "0x1354FCC", Offset = "0x1354FCC", VA = "0x1354FCC")]
		private string GetPlatformVideoApiString()
		{
			return null;
		}

		[Token(Token = "0x6001150")]
		[Address(RVA = "0x1354F58", Offset = "0x1354F58", VA = "0x1354F58")]
		private long GetPlatformFileOffset()
		{
			return default(long);
		}

		[Token(Token = "0x6001151")]
		[Address(RVA = "0x1354F74", Offset = "0x1354F74", VA = "0x1354F74")]
		private string GetPlatformHttpHeaderJson()
		{
			return null;
		}

		[Token(Token = "0x6001152")]
		[Address(RVA = "0x1354688", Offset = "0x1354688", VA = "0x1354688")]
		private string GetPlatformFilePath(Platform platform, ref string filePath, ref FileLocation fileLocation)
		{
			return null;
		}

		[Token(Token = "0x6001153")]
		[Address(RVA = "0x1356CA8", Offset = "0x1356CA8", VA = "0x1356CA8", Slot = "11")]
		public virtual BaseMediaPlayer CreatePlatformMediaPlayer()
		{
			return null;
		}

		[Token(Token = "0x6001154")]
		[Address(RVA = "0x1356FA0", Offset = "0x1356FA0", VA = "0x1356FA0")]
		private bool ForceWaitForNewFrame(int lastFrameCount, float timeoutMs)
		{
			return default(bool);
		}

		[Token(Token = "0x6001155")]
		[Address(RVA = "0x13559D4", Offset = "0x13559D4", VA = "0x13559D4")]
		private void UpdateAudioFocus()
		{
		}

		[Token(Token = "0x6001156")]
		[Address(RVA = "0x1355820", Offset = "0x1355820", VA = "0x1355820")]
		private void UpdateAudioHeadTransform()
		{
		}

		[Token(Token = "0x6001157")]
		[Address(RVA = "0x1355C0C", Offset = "0x1355C0C", VA = "0x1355C0C")]
		private void UpdateErrors()
		{
		}

		[Token(Token = "0x6001158")]
		[Address(RVA = "0x1355E0C", Offset = "0x1355E0C", VA = "0x1355E0C")]
		private void UpdateEvents()
		{
		}

		[Token(Token = "0x6001159")]
		[Address(RVA = "0x13550DC", Offset = "0x13550DC", VA = "0x13550DC")]
		protected bool IsHandleEvent(MediaPlayerEvent.EventType eventType)
		{
			return default(bool);
		}

		[Token(Token = "0x600115A")]
		[Address(RVA = "0x1357230", Offset = "0x1357230", VA = "0x1357230")]
		private bool FireEventIfPossible(MediaPlayerEvent.EventType eventType, bool hasFired)
		{
			return default(bool);
		}

		[Token(Token = "0x600115B")]
		[Address(RVA = "0x13572C0", Offset = "0x13572C0", VA = "0x13572C0")]
		private bool CanFireEvent(MediaPlayerEvent.EventType et, bool hasFired)
		{
			return default(bool);
		}

		[Token(Token = "0x600115C")]
		[Address(RVA = "0x1357BF0", Offset = "0x1357BF0", VA = "0x1357BF0")]
		private void OnApplicationFocus(bool focusStatus)
		{
		}

		[Token(Token = "0x600115D")]
		[Address(RVA = "0x1357CEC", Offset = "0x1357CEC", VA = "0x1357CEC")]
		private void OnApplicationPause(bool pauseStatus)
		{
		}

		[Token(Token = "0x600115E")]
		[Address(RVA = "0x1357E80", Offset = "0x1357E80", VA = "0x1357E80")]
		private static Camera GetDummyCamera()
		{
			return null;
		}

		[Token(Token = "0x600115F")]
		[Address(RVA = "0x1358140", Offset = "0x1358140", VA = "0x1358140")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E51D8", Offset = "0x8E51D8")]
		private IEnumerator ExtractFrameCoroutine(Texture2D target, ProcessExtractedFrame callback, float timeSeconds = -1f, bool accurateSeek = true, int timeoutMs = 1000, int timeThresholdMs = 100)
		{
			return null;
		}

		[Token(Token = "0x6001160")]
		[Address(RVA = "0x1358214", Offset = "0x1358214", VA = "0x1358214")]
		public void ExtractFrameAsync(Texture2D target, ProcessExtractedFrame callback, float timeSeconds = -1f, bool accurateSeek = true, int timeoutMs = 1000, int timeThresholdMs = 100)
		{
		}

		[Token(Token = "0x6001161")]
		[Address(RVA = "0x1358244", Offset = "0x1358244", VA = "0x1358244")]
		public Texture2D ExtractFrame(Texture2D target, float timeSeconds = -1f, bool accurateSeek = true, int timeoutMs = 1000, int timeThresholdMs = 100)
		{
			return null;
		}

		[Token(Token = "0x6001162")]
		[Address(RVA = "0x1358460", Offset = "0x1358460", VA = "0x1358460")]
		private Texture ExtractFrame(float timeSeconds = -1f, bool accurateSeek = true, int timeoutMs = 1000, int timeThresholdMs = 100)
		{
			return null;
		}

		[Token(Token = "0x6001163")]
		[Address(RVA = "0x13588EC", Offset = "0x13588EC", VA = "0x13588EC")]
		public MediaPlayer()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200031E")]
	public class MediaPlaylist
	{
		[Serializable]
		[Token(Token = "0x200031F")]
		public class MediaItem
		{
			[Token(Token = "0x4001523")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[SerializeField]
			public MediaPlayer.FileLocation fileLocation;

			[Token(Token = "0x4001524")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[SerializeField]
			public string filePath;

			[Token(Token = "0x4001525")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[SerializeField]
			public bool loop;

			[Token(Token = "0x4001526")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			[SerializeField]
			public PlaylistMediaPlayer.StartMode startMode;

			[Token(Token = "0x4001527")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[SerializeField]
			public PlaylistMediaPlayer.ProgressMode progressMode;

			[Token(Token = "0x4001528")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			[SerializeField]
			public float progressTimeSeconds;

			[Token(Token = "0x4001529")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[SerializeField]
			public bool autoPlay;

			[Token(Token = "0x400152A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			[SerializeField]
			public StereoPacking stereoPacking;

			[Token(Token = "0x400152B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			[SerializeField]
			public AlphaPacking alphaPacking;

			[Token(Token = "0x400152C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			[SerializeField]
			public bool isOverrideTransition;

			[Token(Token = "0x400152D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			[SerializeField]
			public PlaylistMediaPlayer.Transition overrideTransition;

			[Token(Token = "0x400152E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			[SerializeField]
			public float overrideTransitionDuration;

			[Token(Token = "0x400152F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			[SerializeField]
			public PlaylistMediaPlayer.Easing overrideTransitionEasing;

			[Token(Token = "0x60011A1")]
			[Address(RVA = "0xE82E10", Offset = "0xE82E10", VA = "0xE82E10")]
			public MediaItem()
			{
			}
		}

		[Token(Token = "0x4001522")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private List<MediaItem> _items;

		[Token(Token = "0x170002AB")]
		public List<MediaItem> Items
		{
			[Token(Token = "0x600119E")]
			[Address(RVA = "0x135A278", Offset = "0x135A278", VA = "0x135A278")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600119F")]
		[Address(RVA = "0x135A280", Offset = "0x135A280", VA = "0x135A280")]
		public bool HasItemAt(int index)
		{
			return default(bool);
		}

		[Token(Token = "0x60011A0")]
		[Address(RVA = "0x135A2EC", Offset = "0x135A2EC", VA = "0x135A2EC")]
		public MediaPlaylist()
		{
		}
	}
	[Token(Token = "0x2000320")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8D78B8", Offset = "0x8D78B8")]
	public class PlaylistMediaPlayer : MediaPlayer, IMediaProducer
	{
		[Token(Token = "0x2000321")]
		public enum Transition
		{
			[Token(Token = "0x400154B")]
			None,
			[Token(Token = "0x400154C")]
			Fade,
			[Token(Token = "0x400154D")]
			Black,
			[Token(Token = "0x400154E")]
			White,
			[Token(Token = "0x400154F")]
			Transparent,
			[Token(Token = "0x4001550")]
			Horiz,
			[Token(Token = "0x4001551")]
			Vert,
			[Token(Token = "0x4001552")]
			Diag,
			[Token(Token = "0x4001553")]
			MirrorH,
			[Token(Token = "0x4001554")]
			MirrorV,
			[Token(Token = "0x4001555")]
			MirrorD,
			[Token(Token = "0x4001556")]
			ScrollV,
			[Token(Token = "0x4001557")]
			ScrollH,
			[Token(Token = "0x4001558")]
			Circle,
			[Token(Token = "0x4001559")]
			Diamond,
			[Token(Token = "0x400155A")]
			Blinds,
			[Token(Token = "0x400155B")]
			Arrows,
			[Token(Token = "0x400155C")]
			SlideH,
			[Token(Token = "0x400155D")]
			SlideV,
			[Token(Token = "0x400155E")]
			Zoom,
			[Token(Token = "0x400155F")]
			RectV,
			[Token(Token = "0x4001560")]
			Random
		}

		[Token(Token = "0x2000322")]
		public enum PlaylistLoopMode
		{
			[Token(Token = "0x4001562")]
			None,
			[Token(Token = "0x4001563")]
			Loop
		}

		[Token(Token = "0x2000323")]
		public enum StartMode
		{
			[Token(Token = "0x4001565")]
			Immediate,
			[Token(Token = "0x4001566")]
			Manual
		}

		[Token(Token = "0x2000324")]
		public enum ProgressMode
		{
			[Token(Token = "0x4001568")]
			OnFinish,
			[Token(Token = "0x4001569")]
			BeforeFinish,
			[Token(Token = "0x400156A")]
			Manual
		}

		[Serializable]
		[Token(Token = "0x2000325")]
		public class Easing
		{
			[Token(Token = "0x2000326")]
			public enum Preset
			{
				[Token(Token = "0x400156D")]
				Step,
				[Token(Token = "0x400156E")]
				Linear,
				[Token(Token = "0x400156F")]
				InQuad,
				[Token(Token = "0x4001570")]
				OutQuad,
				[Token(Token = "0x4001571")]
				InOutQuad,
				[Token(Token = "0x4001572")]
				InCubic,
				[Token(Token = "0x4001573")]
				OutCubic,
				[Token(Token = "0x4001574")]
				InOutCubic,
				[Token(Token = "0x4001575")]
				InQuint,
				[Token(Token = "0x4001576")]
				OutQuint,
				[Token(Token = "0x4001577")]
				InOutQuint,
				[Token(Token = "0x4001578")]
				InQuart,
				[Token(Token = "0x4001579")]
				OutQuart,
				[Token(Token = "0x400157A")]
				InOutQuart,
				[Token(Token = "0x400157B")]
				InExpo,
				[Token(Token = "0x400157C")]
				OutExpo,
				[Token(Token = "0x400157D")]
				InOutExpo,
				[Token(Token = "0x400157E")]
				Random,
				[Token(Token = "0x400157F")]
				RandomNotStep
			}

			[Token(Token = "0x400156B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Preset preset;

			[Token(Token = "0x60011C6")]
			[Address(RVA = "0xE8BF84", Offset = "0xE8BF84", VA = "0xE8BF84")]
			public static Func<float, float> GetFunction(Preset preset)
			{
				return null;
			}

			[Token(Token = "0x60011C7")]
			[Address(RVA = "0xE8C270", Offset = "0xE8C270", VA = "0xE8C270")]
			public static float PowerEaseIn(float t, float power)
			{
				return default(float);
			}

			[Token(Token = "0x60011C8")]
			[Address(RVA = "0xE8C274", Offset = "0xE8C274", VA = "0xE8C274")]
			public static float PowerEaseOut(float t, float power)
			{
				return default(float);
			}

			[Token(Token = "0x60011C9")]
			[Address(RVA = "0xE8C29C", Offset = "0xE8C29C", VA = "0xE8C29C")]
			public static float PowerEaseInOut(float t, float power)
			{
				return default(float);
			}

			[Token(Token = "0x60011CA")]
			[Address(RVA = "0xE8C2F4", Offset = "0xE8C2F4", VA = "0xE8C2F4")]
			public static float Step(float t)
			{
				return default(float);
			}

			[Token(Token = "0x60011CB")]
			[Address(RVA = "0xE8C30C", Offset = "0xE8C30C", VA = "0xE8C30C")]
			public static float Linear(float t)
			{
				return default(float);
			}

			[Token(Token = "0x60011CC")]
			[Address(RVA = "0xE8C310", Offset = "0xE8C310", VA = "0xE8C310")]
			public static float InQuad(float t)
			{
				return default(float);
			}

			[Token(Token = "0x60011CD")]
			[Address(RVA = "0xE8C318", Offset = "0xE8C318", VA = "0xE8C318")]
			public static float OutQuad(float t)
			{
				return default(float);
			}

			[Token(Token = "0x60011CE")]
			[Address(RVA = "0xE8C334", Offset = "0xE8C334", VA = "0xE8C334")]
			public static float InOutQuad(float t)
			{
				return default(float);
			}

			[Token(Token = "0x60011CF")]
			[Address(RVA = "0xE8C378", Offset = "0xE8C378", VA = "0xE8C378")]
			public static float InCubic(float t)
			{
				return default(float);
			}

			[Token(Token = "0x60011D0")]
			[Address(RVA = "0xE8C380", Offset = "0xE8C380", VA = "0xE8C380")]
			public static float OutCubic(float t)
			{
				return default(float);
			}

			[Token(Token = "0x60011D1")]
			[Address(RVA = "0xE8C3AC", Offset = "0xE8C3AC", VA = "0xE8C3AC")]
			public static float InOutCubic(float t)
			{
				return default(float);
			}

			[Token(Token = "0x60011D2")]
			[Address(RVA = "0xE8C40C", Offset = "0xE8C40C", VA = "0xE8C40C")]
			public static float InQuart(float t)
			{
				return default(float);
			}

			[Token(Token = "0x60011D3")]
			[Address(RVA = "0xE8C414", Offset = "0xE8C414", VA = "0xE8C414")]
			public static float OutQuart(float t)
			{
				return default(float);
			}

			[Token(Token = "0x60011D4")]
			[Address(RVA = "0xE8C440", Offset = "0xE8C440", VA = "0xE8C440")]
			public static float InOutQuart(float t)
			{
				return default(float);
			}

			[Token(Token = "0x60011D5")]
			[Address(RVA = "0xE8C4A0", Offset = "0xE8C4A0", VA = "0xE8C4A0")]
			public static float InQuint(float t)
			{
				return default(float);
			}

			[Token(Token = "0x60011D6")]
			[Address(RVA = "0xE8C4A8", Offset = "0xE8C4A8", VA = "0xE8C4A8")]
			public static float OutQuint(float t)
			{
				return default(float);
			}

			[Token(Token = "0x60011D7")]
			[Address(RVA = "0xE8C4D4", Offset = "0xE8C4D4", VA = "0xE8C4D4")]
			public static float InOutQuint(float t)
			{
				return default(float);
			}

			[Token(Token = "0x60011D8")]
			[Address(RVA = "0xE8C534", Offset = "0xE8C534", VA = "0xE8C534")]
			public static float InExpo(float t)
			{
				return default(float);
			}

			[Token(Token = "0x60011D9")]
			[Address(RVA = "0xE8C558", Offset = "0xE8C558", VA = "0xE8C558")]
			public static float OutExpo(float t)
			{
				return default(float);
			}

			[Token(Token = "0x60011DA")]
			[Address(RVA = "0xE8C58C", Offset = "0xE8C58C", VA = "0xE8C58C")]
			public static float InOutExpo(float t)
			{
				return default(float);
			}

			[Token(Token = "0x60011DB")]
			[Address(RVA = "0xE8C5FC", Offset = "0xE8C5FC", VA = "0xE8C5FC")]
			public Easing()
			{
			}
		}

		[Token(Token = "0x4001530")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		[SerializeField]
		private MediaPlayer _playerA;

		[Token(Token = "0x4001531")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		[SerializeField]
		private MediaPlayer _playerB;

		[Token(Token = "0x4001532")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		[SerializeField]
		private bool _playlistAutoProgress;

		[Token(Token = "0x4001533")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x191")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DCB94", Offset = "0x8DCB94")]
		private bool _autoCloseVideo;

		[Token(Token = "0x4001534")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x194")]
		[SerializeField]
		private PlaylistLoopMode _playlistLoopMode;

		[Token(Token = "0x4001535")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		[SerializeField]
		private MediaPlaylist _playlist;

		[Token(Token = "0x4001536")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DCC00", Offset = "0x8DCC00")]
		private bool _pausePreviousOnTransition;

		[Token(Token = "0x4001537")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A4")]
		[SerializeField]
		private Transition _nextTransition;

		[Token(Token = "0x4001538")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		[SerializeField]
		private float _transitionDuration;

		[Token(Token = "0x4001539")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		[SerializeField]
		private Easing _transitionEasing;

		[Token(Token = "0x400153A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int _propFromTex;

		[Token(Token = "0x400153B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static int _propT;

		[Token(Token = "0x400153C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		private int _playlistIndex;

		[Token(Token = "0x400153D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		private MediaPlayer _nextPlayer;

		[Token(Token = "0x400153E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		private Shader _shader;

		[Token(Token = "0x400153F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		private Material _material;

		[Token(Token = "0x4001540")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		private Transition _currentTransition;

		[Token(Token = "0x4001541")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		private string _currentTransitionName;

		[Token(Token = "0x4001542")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		private float _currentTransitionDuration;

		[Token(Token = "0x4001543")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1EC")]
		private Easing.Preset _currentTransitionEasing;

		[Token(Token = "0x4001544")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		private float _textureTimer;

		[Token(Token = "0x4001545")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F4")]
		private float _transitionTimer;

		[Token(Token = "0x4001546")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		private Func<float, float> _easeFunc;

		[Token(Token = "0x4001547")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		private RenderTexture _rt;

		[Token(Token = "0x4001548")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		private MediaPlaylist.MediaItem _currentItem;

		[Token(Token = "0x4001549")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		private MediaPlaylist.MediaItem _nextItem;

		[Token(Token = "0x170002AC")]
		public MediaPlayer CurrentPlayer
		{
			[Token(Token = "0x60011A2")]
			[Address(RVA = "0x1057290", Offset = "0x1057290", VA = "0x1057290")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002AD")]
		public MediaPlayer NextPlayer
		{
			[Token(Token = "0x60011A3")]
			[Address(RVA = "0x1057320", Offset = "0x1057320", VA = "0x1057320")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002AE")]
		public MediaPlaylist Playlist
		{
			[Token(Token = "0x60011A4")]
			[Address(RVA = "0x1057328", Offset = "0x1057328", VA = "0x1057328")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002AF")]
		public int PlaylistIndex
		{
			[Token(Token = "0x60011A5")]
			[Address(RVA = "0x1057330", Offset = "0x1057330", VA = "0x1057330")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170002B0")]
		public MediaPlaylist.MediaItem PlaylistItem
		{
			[Token(Token = "0x60011A6")]
			[Address(RVA = "0x1057338", Offset = "0x1057338", VA = "0x1057338")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002B1")]
		public PlaylistLoopMode LoopMode
		{
			[Token(Token = "0x60011A7")]
			[Address(RVA = "0x10573CC", Offset = "0x10573CC", VA = "0x10573CC")]
			get
			{
				return default(PlaylistLoopMode);
			}
			[Token(Token = "0x60011A8")]
			[Address(RVA = "0x10573D4", Offset = "0x10573D4", VA = "0x10573D4")]
			set
			{
			}
		}

		[Token(Token = "0x170002B2")]
		public bool AutoProgress
		{
			[Token(Token = "0x60011A9")]
			[Address(RVA = "0x10573DC", Offset = "0x10573DC", VA = "0x10573DC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60011AA")]
			[Address(RVA = "0x10573E4", Offset = "0x10573E4", VA = "0x10573E4")]
			set
			{
			}
		}

		[Token(Token = "0x170002B3")]
		public override IMediaInfo Info
		{
			[Token(Token = "0x60011AB")]
			[Address(RVA = "0x10573F0", Offset = "0x10573F0", VA = "0x10573F0", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002B4")]
		public override IMediaControl Control
		{
			[Token(Token = "0x60011AC")]
			[Address(RVA = "0x1057498", Offset = "0x1057498", VA = "0x1057498", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002B5")]
		public override IMediaProducer TextureProducer
		{
			[Token(Token = "0x60011AD")]
			[Address(RVA = "0x1057540", Offset = "0x1057540", VA = "0x1057540", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60011AE")]
		[Address(RVA = "0x1057694", Offset = "0x1057694", VA = "0x1057694")]
		private void SwapPlayers()
		{
		}

		[Token(Token = "0x60011AF")]
		[Address(RVA = "0x1057A5C", Offset = "0x1057A5C", VA = "0x1057A5C")]
		private Texture GetCurrentTexture()
		{
			return null;
		}

		[Token(Token = "0x60011B0")]
		[Address(RVA = "0x1057BA4", Offset = "0x1057BA4", VA = "0x1057BA4")]
		private Texture GetNextTexture()
		{
			return null;
		}

		[Token(Token = "0x60011B1")]
		[Address(RVA = "0x1057CD8", Offset = "0x1057CD8", VA = "0x1057CD8")]
		private void Awake()
		{
		}

		[Token(Token = "0x60011B2")]
		[Address(RVA = "0x1057E20", Offset = "0x1057E20", VA = "0x1057E20", Slot = "10")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x60011B3")]
		[Address(RVA = "0x1057F30", Offset = "0x1057F30", VA = "0x1057F30")]
		private void Start()
		{
		}

		[Token(Token = "0x60011B4")]
		[Address(RVA = "0x10581CC", Offset = "0x10581CC", VA = "0x10581CC")]
		public void OnVideoEvent(MediaPlayer mp, MediaPlayerEvent.EventType et, ErrorCode errorCode)
		{
		}

		[Token(Token = "0x60011B5")]
		[Address(RVA = "0x105841C", Offset = "0x105841C", VA = "0x105841C")]
		public bool PrevItem()
		{
			return default(bool);
		}

		[Token(Token = "0x60011B6")]
		[Address(RVA = "0x1058394", Offset = "0x1058394", VA = "0x1058394")]
		public bool NextItem()
		{
			return default(bool);
		}

		[Token(Token = "0x60011B7")]
		[Address(RVA = "0x1058428", Offset = "0x1058428", VA = "0x1058428")]
		public bool CanJumpToItem(int index)
		{
			return default(bool);
		}

		[Token(Token = "0x60011B8")]
		[Address(RVA = "0x10580CC", Offset = "0x10580CC", VA = "0x10580CC")]
		public bool JumpToItem(int index)
		{
			return default(bool);
		}

		[Token(Token = "0x60011B9")]
		[Address(RVA = "0x10584BC", Offset = "0x10584BC", VA = "0x10584BC")]
		public void OpenVideoFile(MediaPlaylist.MediaItem mediaItem)
		{
		}

		[Token(Token = "0x60011BA")]
		[Address(RVA = "0x10575FC", Offset = "0x10575FC", VA = "0x10575FC")]
		private bool IsTransitioning()
		{
			return default(bool);
		}

		[Token(Token = "0x60011BB")]
		[Address(RVA = "0x10586A4", Offset = "0x10586A4", VA = "0x10586A4")]
		private void SetTransition(Transition transition, float duration, Easing.Preset easing)
		{
		}

		[Token(Token = "0x60011BC")]
		[Address(RVA = "0x10588C8", Offset = "0x10588C8", VA = "0x10588C8", Slot = "9")]
		protected override void Update()
		{
		}

		[Token(Token = "0x60011BD")]
		[Address(RVA = "0x1058E28", Offset = "0x1058E28", VA = "0x1058E28", Slot = "13")]
		public Texture GetTexture(int index = 0)
		{
			return null;
		}

		[Token(Token = "0x60011BE")]
		[Address(RVA = "0x1058E30", Offset = "0x1058E30", VA = "0x1058E30", Slot = "12")]
		public int GetTextureCount()
		{
			return default(int);
		}

		[Token(Token = "0x60011BF")]
		[Address(RVA = "0x1058EF4", Offset = "0x1058EF4", VA = "0x1058EF4", Slot = "14")]
		public int GetTextureFrameCount()
		{
			return default(int);
		}

		[Token(Token = "0x60011C0")]
		[Address(RVA = "0x1058FBC", Offset = "0x1058FBC", VA = "0x1058FBC", Slot = "15")]
		public bool SupportsTextureFrameCount()
		{
			return default(bool);
		}

		[Token(Token = "0x60011C1")]
		[Address(RVA = "0x1059084", Offset = "0x1059084", VA = "0x1059084", Slot = "16")]
		public long GetTextureTimeStamp()
		{
			return default(long);
		}

		[Token(Token = "0x60011C2")]
		[Address(RVA = "0x105914C", Offset = "0x105914C", VA = "0x105914C", Slot = "17")]
		public bool RequiresVerticalFlip()
		{
			return default(bool);
		}

		[Token(Token = "0x60011C3")]
		[Address(RVA = "0x1059214", Offset = "0x1059214", VA = "0x1059214", Slot = "18")]
		public Matrix4x4 GetYpCbCrTransform()
		{
			return default(Matrix4x4);
		}

		[Token(Token = "0x60011C4")]
		[Address(RVA = "0x1058764", Offset = "0x1058764", VA = "0x1058764")]
		private static string GetTransitionName(Transition transition)
		{
			return null;
		}

		[Token(Token = "0x60011C5")]
		[Address(RVA = "0x1059308", Offset = "0x1059308", VA = "0x1059308")]
		public PlaylistMediaPlayer()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000327")]
	public class StreamParserEvent : UnityEvent<StreamParser, StreamParserEvent.EventType>
	{
		[Token(Token = "0x2000328")]
		public enum EventType
		{
			[Token(Token = "0x4001581")]
			Success,
			[Token(Token = "0x4001582")]
			Failed
		}

		[Token(Token = "0x60011DC")]
		[Address(RVA = "0x167C268", Offset = "0x167C268", VA = "0x167C268")]
		public StreamParserEvent()
		{
		}
	}
	[Token(Token = "0x2000329")]
	public class StreamParser : MonoBehaviour
	{
		[Token(Token = "0x200032A")]
		public enum StreamType
		{
			[Token(Token = "0x400158C")]
			HLS
		}

		[Token(Token = "0x4001583")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string _url;

		[Token(Token = "0x4001584")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public StreamType _streamType;

		[Token(Token = "0x4001585")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool _autoLoad;

		[Token(Token = "0x4001586")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Stream _parser;

		[Token(Token = "0x4001587")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool _loaded;

		[Token(Token = "0x4001588")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private List<Stream> _substreams;

		[Token(Token = "0x4001589")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<Stream.Chunk> _chunks;

		[Token(Token = "0x400158A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private StreamParserEvent _events;

		[Token(Token = "0x170002B6")]
		public StreamParserEvent Events
		{
			[Token(Token = "0x60011DD")]
			[Address(RVA = "0x167C1F8", Offset = "0x167C1F8", VA = "0x167C1F8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002B7")]
		public bool Loaded
		{
			[Token(Token = "0x60011DF")]
			[Address(RVA = "0x167C5A0", Offset = "0x167C5A0", VA = "0x167C5A0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002B8")]
		public Stream Root
		{
			[Token(Token = "0x60011E0")]
			[Address(RVA = "0x167C5A8", Offset = "0x167C5A8", VA = "0x167C5A8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002B9")]
		public List<Stream> SubStreams
		{
			[Token(Token = "0x60011E1")]
			[Address(RVA = "0x167C5C0", Offset = "0x167C5C0", VA = "0x167C5C0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002BA")]
		public List<Stream.Chunk> Chunks
		{
			[Token(Token = "0x60011E2")]
			[Address(RVA = "0x167C5D8", Offset = "0x167C5D8", VA = "0x167C5D8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60011DE")]
		[Address(RVA = "0x167C2B4", Offset = "0x167C2B4", VA = "0x167C2B4")]
		private void LoadFile()
		{
		}

		[Token(Token = "0x60011E3")]
		[Address(RVA = "0x167C5F0", Offset = "0x167C5F0", VA = "0x167C5F0")]
		public void ParseStream()
		{
		}

		[Token(Token = "0x60011E4")]
		[Address(RVA = "0x167C6A0", Offset = "0x167C6A0", VA = "0x167C6A0")]
		private void Start()
		{
		}

		[Token(Token = "0x60011E5")]
		[Address(RVA = "0x167C6B0", Offset = "0x167C6B0", VA = "0x167C6B0")]
		public StreamParser()
		{
		}
	}
	[Token(Token = "0x200032B")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8D78F4", Offset = "0x8D78F4")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x8D78F4", Offset = "0x8D78F4")]
	public class SubtitlesUGUI : MonoBehaviour
	{
		[Token(Token = "0x400158D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MediaPlayer _mediaPlayer;

		[Token(Token = "0x400158E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Text _text;

		[Token(Token = "0x60011E6")]
		[Address(RVA = "0x167C720", Offset = "0x167C720", VA = "0x167C720")]
		private void Start()
		{
		}

		[Token(Token = "0x60011E7")]
		[Address(RVA = "0x167C8F8", Offset = "0x167C8F8", VA = "0x167C8F8")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60011E8")]
		[Address(RVA = "0x167C728", Offset = "0x167C728", VA = "0x167C728")]
		public void ChangeMediaPlayer(MediaPlayer newPlayer)
		{
		}

		[Token(Token = "0x60011E9")]
		[Address(RVA = "0x167C900", Offset = "0x167C900", VA = "0x167C900")]
		private void OnMediaPlayerEvent(MediaPlayer mp, MediaPlayerEvent.EventType et, ErrorCode errorCode)
		{
		}

		[Token(Token = "0x60011EA")]
		[Address(RVA = "0x167CAF4", Offset = "0x167CAF4", VA = "0x167CAF4")]
		public SubtitlesUGUI()
		{
		}
	}
	[Token(Token = "0x200032C")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8D7958", Offset = "0x8D7958")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x8D7958", Offset = "0x8D7958")]
	public class UpdateStereoMaterial : MonoBehaviour
	{
		[Token(Token = "0x400158F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DCC9C", Offset = "0x8DCC9C")]
		public Camera _camera;

		[Token(Token = "0x4001590")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DCCD4", Offset = "0x8DCCD4")]
		public MeshRenderer _renderer;

		[Token(Token = "0x4001591")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Graphic _uGuiComponent;

		[Token(Token = "0x4001592")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Material _material;

		[Token(Token = "0x4001593")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private StereoEye _forceEyeMode;

		[Token(Token = "0x4001594")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int _cameraPositionId;

		[Token(Token = "0x4001595")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static int _viewMatrixId;

		[Token(Token = "0x4001596")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private StereoEye _setForceEyeMode;

		[Token(Token = "0x4001597")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Camera _foundCamera;

		[Token(Token = "0x170002BB")]
		public StereoEye ForceEyeMode
		{
			[Token(Token = "0x60011EB")]
			[Address(RVA = "0x103FFF4", Offset = "0x103FFF4", VA = "0x103FFF4")]
			get
			{
				return default(StereoEye);
			}
			[Token(Token = "0x60011EC")]
			[Address(RVA = "0x103FFFC", Offset = "0x103FFFC", VA = "0x103FFFC")]
			set
			{
			}
		}

		[Token(Token = "0x60011ED")]
		[Address(RVA = "0x1040004", Offset = "0x1040004", VA = "0x1040004")]
		private void Awake()
		{
		}

		[Token(Token = "0x60011EE")]
		[Address(RVA = "0x1040158", Offset = "0x1040158", VA = "0x1040158")]
		private void SetupMaterial(Material m, Camera camera)
		{
		}

		[Token(Token = "0x60011EF")]
		[Address(RVA = "0x1040290", Offset = "0x1040290", VA = "0x1040290")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60011F0")]
		[Address(RVA = "0x1040694", Offset = "0x1040694", VA = "0x1040694")]
		public UpdateStereoMaterial()
		{
		}
	}
	[Token(Token = "0x200032D")]
	public class AndroidMediaPlayer : BaseMediaPlayer
	{
		[Token(Token = "0x200032E")]
		private struct Native
		{
			[Token(Token = "0x200032F")]
			public enum AVPPluginEvent
			{
				[Token(Token = "0x40015BD")]
				Nop,
				[Token(Token = "0x40015BE")]
				PlayerSetup,
				[Token(Token = "0x40015BF")]
				PlayerUpdate,
				[Token(Token = "0x40015C0")]
				PlayerDestroy,
				[Token(Token = "0x40015C1")]
				ExtractFrame
			}

			[PreserveSig]
			[Token(Token = "0x600123A")]
			[Address(RVA = "0x1048920", Offset = "0x1048920", VA = "0x1048920")]
			public static extern IntPtr GetRenderEventFunc();

			[PreserveSig]
			[Token(Token = "0x600123B")]
			[Address(RVA = "0x1048994", Offset = "0x1048994", VA = "0x1048994")]
			public static extern int _GetWidth(int iPlayerIndex);

			[PreserveSig]
			[Token(Token = "0x600123C")]
			[Address(RVA = "0x1048A14", Offset = "0x1048A14", VA = "0x1048A14")]
			public static extern int _GetHeight(int iPlayerIndex);

			[PreserveSig]
			[Token(Token = "0x600123D")]
			[Address(RVA = "0x1048A90", Offset = "0x1048A90", VA = "0x1048A90")]
			public static extern int _GetTextureHandle(int iPlayerIndex);

			[PreserveSig]
			[Token(Token = "0x600123E")]
			[Address(RVA = "0x1048B10", Offset = "0x1048B10", VA = "0x1048B10")]
			public static extern long _GetDuration(int iPlayerIndex);

			[PreserveSig]
			[Token(Token = "0x600123F")]
			[Address(RVA = "0x1048B90", Offset = "0x1048B90", VA = "0x1048B90")]
			public static extern int _GetLastErrorCode(int iPlayerIndex);

			[PreserveSig]
			[Token(Token = "0x6001240")]
			[Address(RVA = "0x1048C10", Offset = "0x1048C10", VA = "0x1048C10")]
			public static extern int _GetFrameCount(int iPlayerIndex);

			[PreserveSig]
			[Token(Token = "0x6001241")]
			[Address(RVA = "0x1048C90", Offset = "0x1048C90", VA = "0x1048C90")]
			public static extern float _GetVideoDisplayRate(int iPlayerIndex);

			[PreserveSig]
			[Token(Token = "0x6001242")]
			[Address(RVA = "0x1048D10", Offset = "0x1048D10", VA = "0x1048D10")]
			public static extern bool _CanPlay(int iPlayerIndex);
		}

		[Token(Token = "0x4001598")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected static AndroidJavaObject s_ActivityContext;

		[Token(Token = "0x4001599")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		protected static AndroidJavaObject s_Interface;

		[Token(Token = "0x400159A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected static bool s_bInitialised;

		[Token(Token = "0x400159B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static string s_Version;

		[Token(Token = "0x400159C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static IntPtr _nativeFunction_RenderEvent;

		[Token(Token = "0x400159D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected AndroidJavaObject m_Video;

		[Token(Token = "0x400159E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Texture2D m_Texture;

		[Token(Token = "0x400159F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private int m_TextureHandle;

		[Token(Token = "0x40015A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private bool m_UseFastOesPath;

		[Token(Token = "0x40015A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float m_DurationMs;

		[Token(Token = "0x40015A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private int m_Width;

		[Token(Token = "0x40015A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private int m_Height;

		[Token(Token = "0x40015A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		protected int m_iPlayerIndex;

		[Token(Token = "0x40015A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Android.VideoApi m_API;

		[Token(Token = "0x40015A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private bool m_HeadRotationEnabled;

		[Token(Token = "0x40015A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7D")]
		private bool m_FocusEnabled;

		[Token(Token = "0x40015A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private IntPtr m_Method_Update;

		[Token(Token = "0x40015A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private IntPtr m_Method_SetHeadRotation;

		[Token(Token = "0x40015AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private IntPtr m_Method_GetCurrentTimeMs;

		[Token(Token = "0x40015AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private IntPtr m_Method_GetSourceVideoFrameRate;

		[Token(Token = "0x40015AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private IntPtr m_Method_IsPlaying;

		[Token(Token = "0x40015AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private IntPtr m_Method_IsPaused;

		[Token(Token = "0x40015AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private IntPtr m_Method_IsFinished;

		[Token(Token = "0x40015AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private IntPtr m_Method_IsSeeking;

		[Token(Token = "0x40015B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private IntPtr m_Method_IsBuffering;

		[Token(Token = "0x40015B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private IntPtr m_Method_IsLooping;

		[Token(Token = "0x40015B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private IntPtr m_Method_HasVideo;

		[Token(Token = "0x40015B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private IntPtr m_Method_HasAudio;

		[Token(Token = "0x40015B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private IntPtr m_Method_SetFocusProps;

		[Token(Token = "0x40015B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private IntPtr m_Method_SetFocusEnabled;

		[Token(Token = "0x40015B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private IntPtr m_Method_SetFocusRotation;

		[Token(Token = "0x40015B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private jvalue[] m_Value0;

		[Token(Token = "0x40015B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private jvalue[] m_Value1;

		[Token(Token = "0x40015B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private jvalue[] m_Value2;

		[Token(Token = "0x40015BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private jvalue[] m_Value4;

		[Token(Token = "0x40015BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private int _textureQuality;

		[Token(Token = "0x60011F1")]
		[Address(RVA = "0x1ACDC58", Offset = "0x1ACDC58", VA = "0x1ACDC58")]
		public static bool InitialisePlatform()
		{
			return default(bool);
		}

		[Token(Token = "0x60011F2")]
		[Address(RVA = "0x1ACE120", Offset = "0x1ACE120", VA = "0x1ACE120")]
		public static void DeinitPlatform()
		{
		}

		[Token(Token = "0x60011F3")]
		[Address(RVA = "0x1ACE2E4", Offset = "0x1ACE2E4", VA = "0x1ACE2E4")]
		private static void IssuePluginEvent(Native.AVPPluginEvent type, int param)
		{
		}

		[Token(Token = "0x60011F4")]
		[Address(RVA = "0x1ACE380", Offset = "0x1ACE380", VA = "0x1ACE380")]
		private IntPtr GetMethod(string methodName, string signature)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x60011F5")]
		[Address(RVA = "0x1ACE4F8", Offset = "0x1ACE4F8", VA = "0x1ACE4F8")]
		public AndroidMediaPlayer(bool useFastOesPath, bool showPosterFrame, Android.VideoApi api, bool enable360Audio, Audio360ChannelMode channelMode, bool preferSoftware)
		{
		}

		[Token(Token = "0x60011F6")]
		[Address(RVA = "0x1ACED2C", Offset = "0x1ACED2C", VA = "0x1ACED2C")]
		public void SetOptions(bool useFastOesPath, bool showPosterFrame)
		{
		}

		[Token(Token = "0x60011F7")]
		[Address(RVA = "0x1ACEEAC", Offset = "0x1ACEEAC", VA = "0x1ACEEAC", Slot = "183")]
		public override long GetEstimatedTotalBandwidthUsed()
		{
			return default(long);
		}

		[Token(Token = "0x60011F8")]
		[Address(RVA = "0x1ACF00C", Offset = "0x1ACF00C", VA = "0x1ACF00C", Slot = "103")]
		public override string GetVersion()
		{
			return null;
		}

		[Token(Token = "0x60011F9")]
		[Address(RVA = "0x1ACF070", Offset = "0x1ACF070", VA = "0x1ACF070", Slot = "104")]
		public override bool OpenVideoFromFile(string path, long offset, string httpHeaderJson, uint sourceSamplerate = 0u, uint sourceChannels = 0u, int forceFileFormat = 0)
		{
			return default(bool);
		}

		[Token(Token = "0x60011FA")]
		[Address(RVA = "0x1ACF2D4", Offset = "0x1ACF2D4", VA = "0x1ACF2D4")]
		private void DisplayLoadFailureSuggestion(string path)
		{
		}

		[Token(Token = "0x60011FB")]
		[Address(RVA = "0x1ACF394", Offset = "0x1ACF394", VA = "0x1ACF394", Slot = "123")]
		public override TimeRange[] GetSeekableTimeRanges()
		{
			return null;
		}

		[Token(Token = "0x60011FC")]
		[Address(RVA = "0x1ACF514", Offset = "0x1ACF514", VA = "0x1ACF514", Slot = "109")]
		public override void CloseVideo()
		{
		}

		[Token(Token = "0x60011FD")]
		[Address(RVA = "0x1ACF6A4", Offset = "0x1ACF6A4", VA = "0x1ACF6A4", Slot = "110")]
		public override void SetLooping(bool bLooping)
		{
		}

		[Token(Token = "0x60011FE")]
		[Address(RVA = "0x1ACF7B0", Offset = "0x1ACF7B0", VA = "0x1ACF7B0", Slot = "111")]
		public override bool IsLooping()
		{
			return default(bool);
		}

		[Token(Token = "0x60011FF")]
		[Address(RVA = "0x1ACF928", Offset = "0x1ACF928", VA = "0x1ACF928", Slot = "132")]
		public override bool HasVideo()
		{
			return default(bool);
		}

		[Token(Token = "0x6001200")]
		[Address(RVA = "0x1ACFAA0", Offset = "0x1ACFAA0", VA = "0x1ACFAA0", Slot = "131")]
		public override bool HasAudio()
		{
			return default(bool);
		}

		[Token(Token = "0x6001201")]
		[Address(RVA = "0x1ACFC18", Offset = "0x1ACFC18", VA = "0x1ACFC18", Slot = "112")]
		public override bool HasMetaData()
		{
			return default(bool);
		}

		[Token(Token = "0x6001202")]
		[Address(RVA = "0x1ACFC7C", Offset = "0x1ACFC7C", VA = "0x1ACFC7C", Slot = "113")]
		public override bool CanPlay()
		{
			return default(bool);
		}

		[Token(Token = "0x6001203")]
		[Address(RVA = "0x1ACFC88", Offset = "0x1ACFC88", VA = "0x1ACFC88", Slot = "114")]
		public override void Play()
		{
		}

		[Token(Token = "0x6001204")]
		[Address(RVA = "0x1ACFD90", Offset = "0x1ACFD90", VA = "0x1ACFD90", Slot = "115")]
		public override void Pause()
		{
		}

		[Token(Token = "0x6001205")]
		[Address(RVA = "0x1ACFE98", Offset = "0x1ACFE98", VA = "0x1ACFE98", Slot = "116")]
		public override void Stop()
		{
		}

		[Token(Token = "0x6001206")]
		[Address(RVA = "0x1ACFFA0", Offset = "0x1ACFFA0", VA = "0x1ACFFA0", Slot = "118")]
		public override void Seek(float timeMs)
		{
		}

		[Token(Token = "0x6001207")]
		[Address(RVA = "0x1AD00D0", Offset = "0x1AD00D0", VA = "0x1AD00D0", Slot = "119")]
		public override void SeekFast(float timeMs)
		{
		}

		[Token(Token = "0x6001208")]
		[Address(RVA = "0x1AD0200", Offset = "0x1AD0200", VA = "0x1AD0200", Slot = "121")]
		public override float GetCurrentTimeMs()
		{
			return default(float);
		}

		[Token(Token = "0x6001209")]
		[Address(RVA = "0x1AD036C", Offset = "0x1AD036C", VA = "0x1AD036C", Slot = "125")]
		public override void SetPlaybackRate(float rate)
		{
		}

		[Token(Token = "0x600120A")]
		[Address(RVA = "0x1AD0484", Offset = "0x1AD0484", VA = "0x1AD0484", Slot = "124")]
		public override float GetPlaybackRate()
		{
			return default(float);
		}

		[Token(Token = "0x600120B")]
		[Address(RVA = "0x1AD05A4", Offset = "0x1AD05A4", VA = "0x1AD05A4", Slot = "169")]
		public override void SetAudioHeadRotation(Quaternion q)
		{
		}

		[Token(Token = "0x600120C")]
		[Address(RVA = "0x1AD0900", Offset = "0x1AD0900", VA = "0x1AD0900", Slot = "170")]
		public override void ResetAudioHeadRotation()
		{
		}

		[Token(Token = "0x600120D")]
		[Address(RVA = "0x1AD0A18", Offset = "0x1AD0A18", VA = "0x1AD0A18", Slot = "172")]
		public override void SetAudioFocusEnabled(bool enabled)
		{
		}

		[Token(Token = "0x600120E")]
		[Address(RVA = "0x1AD0BA4", Offset = "0x1AD0BA4", VA = "0x1AD0BA4", Slot = "173")]
		public override void SetAudioFocusProperties(float offFocusLevel, float widthDegrees)
		{
		}

		[Token(Token = "0x600120F")]
		[Address(RVA = "0x1AD0D98", Offset = "0x1AD0D98", VA = "0x1AD0D98", Slot = "174")]
		public override void SetAudioFocusRotation(Quaternion q)
		{
		}

		[Token(Token = "0x6001210")]
		[Address(RVA = "0x1AD1060", Offset = "0x1AD1060", VA = "0x1AD1060", Slot = "175")]
		public override void ResetAudioFocus()
		{
		}

		[Token(Token = "0x6001211")]
		[Address(RVA = "0x1AD1528", Offset = "0x1AD1528", VA = "0x1AD1528", Slot = "126")]
		public override float GetDurationMs()
		{
			return default(float);
		}

		[Token(Token = "0x6001212")]
		[Address(RVA = "0x1AD1530", Offset = "0x1AD1530", VA = "0x1AD1530", Slot = "127")]
		public override int GetVideoWidth()
		{
			return default(int);
		}

		[Token(Token = "0x6001213")]
		[Address(RVA = "0x1AD1538", Offset = "0x1AD1538", VA = "0x1AD1538", Slot = "128")]
		public override int GetVideoHeight()
		{
			return default(int);
		}

		[Token(Token = "0x6001214")]
		[Address(RVA = "0x1AD1540", Offset = "0x1AD1540", VA = "0x1AD1540", Slot = "182")]
		public override float GetVideoFrameRate()
		{
			return default(float);
		}

		[Token(Token = "0x6001215")]
		[Address(RVA = "0x1AD16B8", Offset = "0x1AD16B8", VA = "0x1AD16B8", Slot = "184")]
		public override float GetBufferingProgress()
		{
			return default(float);
		}

		[Token(Token = "0x6001216")]
		[Address(RVA = "0x1AD17DC", Offset = "0x1AD17DC", VA = "0x1AD17DC", Slot = "130")]
		public override float GetVideoDisplayRate()
		{
			return default(float);
		}

		[Token(Token = "0x6001217")]
		[Address(RVA = "0x1AD17E8", Offset = "0x1AD17E8", VA = "0x1AD17E8", Slot = "133")]
		public override bool IsSeeking()
		{
			return default(bool);
		}

		[Token(Token = "0x6001218")]
		[Address(RVA = "0x1AD1960", Offset = "0x1AD1960", VA = "0x1AD1960", Slot = "134")]
		public override bool IsPlaying()
		{
			return default(bool);
		}

		[Token(Token = "0x6001219")]
		[Address(RVA = "0x1AD1AD8", Offset = "0x1AD1AD8", VA = "0x1AD1AD8", Slot = "135")]
		public override bool IsPaused()
		{
			return default(bool);
		}

		[Token(Token = "0x600121A")]
		[Address(RVA = "0x1AD1C50", Offset = "0x1AD1C50", VA = "0x1AD1C50", Slot = "136")]
		public override bool IsFinished()
		{
			return default(bool);
		}

		[Token(Token = "0x600121B")]
		[Address(RVA = "0x1AD1DC8", Offset = "0x1AD1DC8", VA = "0x1AD1DC8", Slot = "137")]
		public override bool IsBuffering()
		{
			return default(bool);
		}

		[Token(Token = "0x600121C")]
		[Address(RVA = "0x1AD1F40", Offset = "0x1AD1F40", VA = "0x1AD1F40", Slot = "149")]
		public override Texture GetTexture(int index)
		{
			return null;
		}

		[Token(Token = "0x600121D")]
		[Address(RVA = "0x1AD1F80", Offset = "0x1AD1F80", VA = "0x1AD1F80", Slot = "150")]
		public override int GetTextureFrameCount()
		{
			return default(int);
		}

		[Token(Token = "0x600121E")]
		[Address(RVA = "0x1AD200C", Offset = "0x1AD200C", VA = "0x1AD200C", Slot = "153")]
		public override bool RequiresVerticalFlip()
		{
			return default(bool);
		}

		[Token(Token = "0x600121F")]
		[Address(RVA = "0x1AD2014", Offset = "0x1AD2014", VA = "0x1AD2014", Slot = "156")]
		public override void MuteAudio(bool bMuted)
		{
		}

		[Token(Token = "0x6001220")]
		[Address(RVA = "0x1AD2120", Offset = "0x1AD2120", VA = "0x1AD2120", Slot = "157")]
		public override bool IsMuted()
		{
			return default(bool);
		}

		[Token(Token = "0x6001221")]
		[Address(RVA = "0x1AD2240", Offset = "0x1AD2240", VA = "0x1AD2240", Slot = "158")]
		public override void SetVolume(float volume)
		{
		}

		[Token(Token = "0x6001222")]
		[Address(RVA = "0x1AD2358", Offset = "0x1AD2358", VA = "0x1AD2358", Slot = "160")]
		public override float GetVolume()
		{
			return default(float);
		}

		[Token(Token = "0x6001223")]
		[Address(RVA = "0x1AD2478", Offset = "0x1AD2478", VA = "0x1AD2478", Slot = "159")]
		public override void SetBalance(float balance)
		{
		}

		[Token(Token = "0x6001224")]
		[Address(RVA = "0x1AD2590", Offset = "0x1AD2590", VA = "0x1AD2590", Slot = "161")]
		public override float GetBalance()
		{
			return default(float);
		}

		[Token(Token = "0x6001225")]
		[Address(RVA = "0x1AD26B0", Offset = "0x1AD26B0", VA = "0x1AD26B0", Slot = "162")]
		public override int GetAudioTrackCount()
		{
			return default(int);
		}

		[Token(Token = "0x6001226")]
		[Address(RVA = "0x1AD27D0", Offset = "0x1AD27D0", VA = "0x1AD27D0", Slot = "164")]
		public override int GetCurrentAudioTrack()
		{
			return default(int);
		}

		[Token(Token = "0x6001227")]
		[Address(RVA = "0x1AD28F0", Offset = "0x1AD28F0", VA = "0x1AD28F0", Slot = "165")]
		public override void SetAudioTrack(int index)
		{
		}

		[Token(Token = "0x6001228")]
		[Address(RVA = "0x1AD29F8", Offset = "0x1AD29F8", VA = "0x1AD29F8", Slot = "166")]
		public override string GetCurrentAudioTrackId()
		{
			return null;
		}

		[Token(Token = "0x6001229")]
		[Address(RVA = "0x1AD2A30", Offset = "0x1AD2A30", VA = "0x1AD2A30", Slot = "167")]
		public override int GetCurrentAudioTrackBitrate()
		{
			return default(int);
		}

		[Token(Token = "0x600122A")]
		[Address(RVA = "0x1AD2A38", Offset = "0x1AD2A38", VA = "0x1AD2A38", Slot = "176")]
		public override int GetVideoTrackCount()
		{
			return default(int);
		}

		[Token(Token = "0x600122B")]
		[Address(RVA = "0x1AD2A6C", Offset = "0x1AD2A6C", VA = "0x1AD2A6C", Slot = "178")]
		public override int GetCurrentVideoTrack()
		{
			return default(int);
		}

		[Token(Token = "0x600122C")]
		[Address(RVA = "0x1AD2A74", Offset = "0x1AD2A74", VA = "0x1AD2A74", Slot = "179")]
		public override void SetVideoTrack(int index)
		{
		}

		[Token(Token = "0x600122D")]
		[Address(RVA = "0x1AD2A78", Offset = "0x1AD2A78", VA = "0x1AD2A78", Slot = "180")]
		public override string GetCurrentVideoTrackId()
		{
			return null;
		}

		[Token(Token = "0x600122E")]
		[Address(RVA = "0x1AD2ABC", Offset = "0x1AD2ABC", VA = "0x1AD2ABC", Slot = "181")]
		public override int GetCurrentVideoTrackBitrate()
		{
			return default(int);
		}

		[Token(Token = "0x600122F")]
		[Address(RVA = "0x1AD2BDC", Offset = "0x1AD2BDC", VA = "0x1AD2BDC", Slot = "138")]
		public override bool WaitForNextFrame(Camera dummyCamera, int previousFrameCount)
		{
			return default(bool);
		}

		[Token(Token = "0x6001230")]
		[Address(RVA = "0x1AD2E2C", Offset = "0x1AD2E2C", VA = "0x1AD2E2C", Slot = "152")]
		public override long GetTextureTimeStamp()
		{
			return default(long);
		}

		[Token(Token = "0x6001231")]
		[Address(RVA = "0x1AD2F4C", Offset = "0x1AD2F4C", VA = "0x1AD2F4C", Slot = "186")]
		public override void Render()
		{
		}

		[Token(Token = "0x6001232")]
		[Address(RVA = "0x1AD3704", Offset = "0x1AD3704", VA = "0x1AD3704", Slot = "192")]
		protected override void ApplyTextureProperties(Texture texture)
		{
		}

		[Token(Token = "0x6001233")]
		[Address(RVA = "0x1AD370C", Offset = "0x1AD370C", VA = "0x1AD370C", Slot = "198")]
		public override void OnEnable()
		{
		}

		[Token(Token = "0x6001234")]
		[Address(RVA = "0x1AD3818", Offset = "0x1AD3818", VA = "0x1AD3818", Slot = "122")]
		public override double GetCurrentDateTimeSecondsSince1970()
		{
			return default(double);
		}

		[Token(Token = "0x6001235")]
		[Address(RVA = "0x1AD3938", Offset = "0x1AD3938", VA = "0x1AD3938", Slot = "185")]
		public override void Update()
		{
		}

		[Token(Token = "0x6001236")]
		[Address(RVA = "0x1AD3AD0", Offset = "0x1AD3AD0", VA = "0x1AD3AD0", Slot = "189")]
		public override bool PlayerSupportsLinearColorSpace()
		{
			return default(bool);
		}

		[Token(Token = "0x6001237")]
		[Address(RVA = "0x1AD3AD8", Offset = "0x1AD3AD8", VA = "0x1AD3AD8", Slot = "154")]
		public override float[] GetTextureTransform()
		{
			return null;
		}

		[Token(Token = "0x6001238")]
		[Address(RVA = "0x1AD3BF0", Offset = "0x1AD3BF0", VA = "0x1AD3BF0", Slot = "187")]
		public override void Dispose()
		{
		}
	}
	[Token(Token = "0x2000330")]
	public class AudioOutputManager
	{
		[Token(Token = "0x40015C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static AudioOutputManager _instance;

		[Token(Token = "0x40015C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Dictionary<MediaPlayer, HashSet<AudioOutput>> _accessTrackers;

		[Token(Token = "0x40015C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Dictionary<MediaPlayer, float[]> _pcmData;

		[Token(Token = "0x170002BC")]
		public static AudioOutputManager Instance
		{
			[Token(Token = "0x6001243")]
			[Address(RVA = "0x1AE04A8", Offset = "0x1AE04A8", VA = "0x1AE04A8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001244")]
		[Address(RVA = "0x1AE056C", Offset = "0x1AE056C", VA = "0x1AE056C")]
		private AudioOutputManager()
		{
		}

		[Token(Token = "0x6001245")]
		[Address(RVA = "0x1AE063C", Offset = "0x1AE063C", VA = "0x1AE063C")]
		public void RequestAudio(AudioOutput _outputComponent, MediaPlayer mediaPlayer, float[] data, int channelMask, int totalChannels, AudioOutput.AudioOutputMode audioOutputMode)
		{
		}

		[Token(Token = "0x6001246")]
		[Address(RVA = "0x1AE0CE8", Offset = "0x1AE0CE8", VA = "0x1AE0CE8")]
		private void GrabAudio(MediaPlayer player, float[] data, int channels)
		{
		}
	}
	[Token(Token = "0x2000331")]
	public abstract class BaseMediaPlayer : IMediaPlayer, IMediaControl, IMediaInfo, IMediaProducer, IMediaSubtitles, IDisposable
	{
		[Token(Token = "0x40015C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected string _playerDescription;

		[Token(Token = "0x40015C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected ErrorCode _lastError;

		[Token(Token = "0x40015C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		protected FilterMode _defaultTextureFilterMode;

		[Token(Token = "0x40015C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected TextureWrapMode _defaultTextureWrapMode;

		[Token(Token = "0x40015C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		protected int _defaultTextureAnisoLevel;

		[Token(Token = "0x40015CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected TimeRange[] _seekableTimeRanges;

		[Token(Token = "0x40015CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected bool _isSeekingStarted;

		[Token(Token = "0x40015CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float _stallDetectionTimer;

		[Token(Token = "0x40015CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int _stallDetectionFrame;

		[Token(Token = "0x40015CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected List<Subtitle> _subtitles;

		[Token(Token = "0x40015CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected Subtitle _currentSubtitle;

		[Token(Token = "0x6001248")]
		public abstract string GetVersion();

		[Token(Token = "0x6001249")]
		public abstract bool OpenVideoFromFile(string path, long offset, string httpHeaderJson, uint sourceSamplerate = 0u, uint sourceChannels = 0u, int forceFileFormat = 0);

		[Token(Token = "0x600124A")]
		[Address(RVA = "0x12EF820", Offset = "0x12EF820", VA = "0x12EF820", Slot = "105")]
		public virtual bool OpenVideoFromBuffer(byte[] buffer)
		{
			return default(bool);
		}

		[Token(Token = "0x600124B")]
		[Address(RVA = "0x12EF828", Offset = "0x12EF828", VA = "0x12EF828", Slot = "106")]
		public virtual bool StartOpenVideoFromBuffer(ulong length)
		{
			return default(bool);
		}

		[Token(Token = "0x600124C")]
		[Address(RVA = "0x12EF830", Offset = "0x12EF830", VA = "0x12EF830", Slot = "107")]
		public virtual bool AddChunkToVideoBuffer(byte[] chunk, ulong offset, ulong length)
		{
			return default(bool);
		}

		[Token(Token = "0x600124D")]
		[Address(RVA = "0x12EF838", Offset = "0x12EF838", VA = "0x12EF838", Slot = "108")]
		public virtual bool EndOpenVideoFromBuffer()
		{
			return default(bool);
		}

		[Token(Token = "0x600124E")]
		[Address(RVA = "0x12EF840", Offset = "0x12EF840", VA = "0x12EF840", Slot = "109")]
		public virtual void CloseVideo()
		{
		}

		[Token(Token = "0x600124F")]
		public abstract void SetLooping(bool bLooping);

		[Token(Token = "0x6001250")]
		public abstract bool IsLooping();

		[Token(Token = "0x6001251")]
		public abstract bool HasMetaData();

		[Token(Token = "0x6001252")]
		public abstract bool CanPlay();

		[Token(Token = "0x6001253")]
		public abstract void Play();

		[Token(Token = "0x6001254")]
		public abstract void Pause();

		[Token(Token = "0x6001255")]
		public abstract void Stop();

		[Token(Token = "0x6001256")]
		[Address(RVA = "0x12EF850", Offset = "0x12EF850", VA = "0x12EF850", Slot = "117")]
		public virtual void Rewind()
		{
		}

		[Token(Token = "0x6001257")]
		public abstract void Seek(float timeMs);

		[Token(Token = "0x6001258")]
		public abstract void SeekFast(float timeMs);

		[Token(Token = "0x6001259")]
		[Address(RVA = "0x12EF864", Offset = "0x12EF864", VA = "0x12EF864", Slot = "120")]
		public virtual void SeekWithTolerance(float timeMs, float beforeMs, float afterMs)
		{
		}

		[Token(Token = "0x600125A")]
		public abstract float GetCurrentTimeMs();

		[Token(Token = "0x600125B")]
		[Address(RVA = "0x12EF874", Offset = "0x12EF874", VA = "0x12EF874", Slot = "122")]
		public virtual double GetCurrentDateTimeSecondsSince1970()
		{
			return default(double);
		}

		[Token(Token = "0x600125C")]
		[Address(RVA = "0x12EF87C", Offset = "0x12EF87C", VA = "0x12EF87C", Slot = "123")]
		public virtual TimeRange[] GetSeekableTimeRanges()
		{
			return null;
		}

		[Token(Token = "0x600125D")]
		public abstract float GetPlaybackRate();

		[Token(Token = "0x600125E")]
		public abstract void SetPlaybackRate(float rate);

		[Token(Token = "0x600125F")]
		public abstract float GetDurationMs();

		[Token(Token = "0x6001260")]
		public abstract int GetVideoWidth();

		[Token(Token = "0x6001261")]
		public abstract int GetVideoHeight();

		[Token(Token = "0x6001262")]
		[Address(RVA = "0x12EF884", Offset = "0x12EF884", VA = "0x12EF884", Slot = "129")]
		public virtual Rect GetCropRect()
		{
			return default(Rect);
		}

		[Token(Token = "0x6001263")]
		public abstract float GetVideoDisplayRate();

		[Token(Token = "0x6001264")]
		public abstract bool HasAudio();

		[Token(Token = "0x6001265")]
		public abstract bool HasVideo();

		[Token(Token = "0x6001266")]
		public abstract bool IsSeeking();

		[Token(Token = "0x6001267")]
		public abstract bool IsPlaying();

		[Token(Token = "0x6001268")]
		public abstract bool IsPaused();

		[Token(Token = "0x6001269")]
		public abstract bool IsFinished();

		[Token(Token = "0x600126A")]
		public abstract bool IsBuffering();

		[Token(Token = "0x600126B")]
		[Address(RVA = "0x12EF8C4", Offset = "0x12EF8C4", VA = "0x12EF8C4", Slot = "138")]
		public virtual bool WaitForNextFrame(Camera dummyCamera, int previousFrameCount)
		{
			return default(bool);
		}

		[Token(Token = "0x600126C")]
		[Address(RVA = "0x12EF8CC", Offset = "0x12EF8CC", VA = "0x12EF8CC", Slot = "139")]
		public virtual void SetPlayWithoutBuffering(bool playWithoutBuffering)
		{
		}

		[Token(Token = "0x600126D")]
		[Address(RVA = "0x12EF8D0", Offset = "0x12EF8D0", VA = "0x12EF8D0", Slot = "140")]
		public virtual void SetKeyServerURL(string url)
		{
		}

		[Token(Token = "0x600126E")]
		[Address(RVA = "0x12EF8D4", Offset = "0x12EF8D4", VA = "0x12EF8D4", Slot = "141")]
		public virtual void SetKeyServerAuthToken(string token)
		{
		}

		[Token(Token = "0x600126F")]
		[Address(RVA = "0x12EF8D8", Offset = "0x12EF8D8", VA = "0x12EF8D8", Slot = "142")]
		public virtual void SetDecryptionKeyBase64(string key)
		{
		}

		[Token(Token = "0x6001270")]
		[Address(RVA = "0x12EF8DC", Offset = "0x12EF8DC", VA = "0x12EF8DC", Slot = "143")]
		public virtual void SetDecryptionKey(byte[] key)
		{
		}

		[Token(Token = "0x6001271")]
		[Address(RVA = "0x12EF8E0", Offset = "0x12EF8E0", VA = "0x12EF8E0", Slot = "144")]
		public virtual bool IsExternalPlaybackSupported()
		{
			return default(bool);
		}

		[Token(Token = "0x6001272")]
		[Address(RVA = "0x12EF8E8", Offset = "0x12EF8E8", VA = "0x12EF8E8", Slot = "145")]
		public virtual bool IsExternalPlaybackActive()
		{
			return default(bool);
		}

		[Token(Token = "0x6001273")]
		[Address(RVA = "0x12EF8F0", Offset = "0x12EF8F0", VA = "0x12EF8F0", Slot = "146")]
		public virtual void SetAllowsExternalPlayback(bool allowsExternalPlayback)
		{
		}

		[Token(Token = "0x6001274")]
		[Address(RVA = "0x12EF8F4", Offset = "0x12EF8F4", VA = "0x12EF8F4", Slot = "147")]
		public virtual void SetExternalPlaybackFillMode(ExternalPlaybackFillMode fillMode)
		{
		}

		[Token(Token = "0x6001275")]
		[Address(RVA = "0x12EF8F8", Offset = "0x12EF8F8", VA = "0x12EF8F8", Slot = "148")]
		public virtual int GetTextureCount()
		{
			return default(int);
		}

		[Token(Token = "0x6001276")]
		public abstract Texture GetTexture(int index = 0);

		[Token(Token = "0x6001277")]
		public abstract int GetTextureFrameCount();

		[Token(Token = "0x6001278")]
		[Address(RVA = "0x12EF900", Offset = "0x12EF900", VA = "0x12EF900", Slot = "151")]
		public virtual bool SupportsTextureFrameCount()
		{
			return default(bool);
		}

		[Token(Token = "0x6001279")]
		[Address(RVA = "0x12EF908", Offset = "0x12EF908", VA = "0x12EF908", Slot = "152")]
		public virtual long GetTextureTimeStamp()
		{
			return default(long);
		}

		[Token(Token = "0x600127A")]
		public abstract bool RequiresVerticalFlip();

		[Token(Token = "0x600127B")]
		[Address(RVA = "0x12EF910", Offset = "0x12EF910", VA = "0x12EF910", Slot = "154")]
		public virtual float[] GetTextureTransform()
		{
			return null;
		}

		[Token(Token = "0x600127C")]
		[Address(RVA = "0x12EF98C", Offset = "0x12EF98C", VA = "0x12EF98C", Slot = "155")]
		public virtual Matrix4x4 GetYpCbCrTransform()
		{
			return default(Matrix4x4);
		}

		[Token(Token = "0x600127D")]
		public abstract void MuteAudio(bool bMuted);

		[Token(Token = "0x600127E")]
		public abstract bool IsMuted();

		[Token(Token = "0x600127F")]
		public abstract void SetVolume(float volume);

		[Token(Token = "0x6001280")]
		[Address(RVA = "0x12EF9CC", Offset = "0x12EF9CC", VA = "0x12EF9CC", Slot = "159")]
		public virtual void SetBalance(float balance)
		{
		}

		[Token(Token = "0x6001281")]
		public abstract float GetVolume();

		[Token(Token = "0x6001282")]
		[Address(RVA = "0x12EF9D0", Offset = "0x12EF9D0", VA = "0x12EF9D0", Slot = "161")]
		public virtual float GetBalance()
		{
			return default(float);
		}

		[Token(Token = "0x6001283")]
		public abstract int GetAudioTrackCount();

		[Token(Token = "0x6001284")]
		[Address(RVA = "0x12EF9D8", Offset = "0x12EF9D8", VA = "0x12EF9D8", Slot = "163")]
		public virtual string GetAudioTrackId(int index)
		{
			return null;
		}

		[Token(Token = "0x6001285")]
		public abstract int GetCurrentAudioTrack();

		[Token(Token = "0x6001286")]
		public abstract void SetAudioTrack(int index);

		[Token(Token = "0x6001287")]
		public abstract string GetCurrentAudioTrackId();

		[Token(Token = "0x6001288")]
		public abstract int GetCurrentAudioTrackBitrate();

		[Token(Token = "0x6001289")]
		[Address(RVA = "0x12EFA00", Offset = "0x12EFA00", VA = "0x12EFA00", Slot = "168")]
		public virtual int GetNumAudioChannels()
		{
			return default(int);
		}

		[Token(Token = "0x600128A")]
		[Address(RVA = "0x12EFA08", Offset = "0x12EFA08", VA = "0x12EFA08", Slot = "169")]
		public virtual void SetAudioHeadRotation(Quaternion q)
		{
		}

		[Token(Token = "0x600128B")]
		[Address(RVA = "0x12EFA0C", Offset = "0x12EFA0C", VA = "0x12EFA0C", Slot = "170")]
		public virtual void ResetAudioHeadRotation()
		{
		}

		[Token(Token = "0x600128C")]
		[Address(RVA = "0x12EFA10", Offset = "0x12EFA10", VA = "0x12EFA10", Slot = "171")]
		public virtual void SetAudioChannelMode(Audio360ChannelMode channelMode)
		{
		}

		[Token(Token = "0x600128D")]
		[Address(RVA = "0x12EFA14", Offset = "0x12EFA14", VA = "0x12EFA14", Slot = "172")]
		public virtual void SetAudioFocusEnabled(bool enabled)
		{
		}

		[Token(Token = "0x600128E")]
		[Address(RVA = "0x12EFA18", Offset = "0x12EFA18", VA = "0x12EFA18", Slot = "173")]
		public virtual void SetAudioFocusProperties(float offFocusLevel, float widthDegrees)
		{
		}

		[Token(Token = "0x600128F")]
		[Address(RVA = "0x12EFA1C", Offset = "0x12EFA1C", VA = "0x12EFA1C", Slot = "174")]
		public virtual void SetAudioFocusRotation(Quaternion q)
		{
		}

		[Token(Token = "0x6001290")]
		[Address(RVA = "0x12EFA20", Offset = "0x12EFA20", VA = "0x12EFA20", Slot = "175")]
		public virtual void ResetAudioFocus()
		{
		}

		[Token(Token = "0x6001291")]
		public abstract int GetVideoTrackCount();

		[Token(Token = "0x6001292")]
		[Address(RVA = "0x12EFA24", Offset = "0x12EFA24", VA = "0x12EFA24", Slot = "177")]
		public virtual string GetVideoTrackId(int index)
		{
			return null;
		}

		[Token(Token = "0x6001293")]
		public abstract int GetCurrentVideoTrack();

		[Token(Token = "0x6001294")]
		public abstract void SetVideoTrack(int index);

		[Token(Token = "0x6001295")]
		public abstract string GetCurrentVideoTrackId();

		[Token(Token = "0x6001296")]
		public abstract int GetCurrentVideoTrackBitrate();

		[Token(Token = "0x6001297")]
		public abstract float GetVideoFrameRate();

		[Token(Token = "0x6001298")]
		[Address(RVA = "0x12EFA4C", Offset = "0x12EFA4C", VA = "0x12EFA4C", Slot = "183")]
		public virtual long GetEstimatedTotalBandwidthUsed()
		{
			return default(long);
		}

		[Token(Token = "0x6001299")]
		public abstract float GetBufferingProgress();

		[Token(Token = "0x600129A")]
		public abstract void Update();

		[Token(Token = "0x600129B")]
		public abstract void Render();

		[Token(Token = "0x600129C")]
		public abstract void Dispose();

		[Token(Token = "0x600129D")]
		[Address(RVA = "0x12EFA54", Offset = "0x12EFA54", VA = "0x12EFA54", Slot = "49")]
		public ErrorCode GetLastError()
		{
			return default(ErrorCode);
		}

		[Token(Token = "0x600129E")]
		[Address(RVA = "0x12EFA5C", Offset = "0x12EFA5C", VA = "0x12EFA5C", Slot = "188")]
		public virtual long GetLastExtendedErrorCode()
		{
			return default(long);
		}

		[Token(Token = "0x600129F")]
		[Address(RVA = "0x12EFA64", Offset = "0x12EFA64", VA = "0x12EFA64", Slot = "87")]
		public string GetPlayerDescription()
		{
			return null;
		}

		[Token(Token = "0x60012A0")]
		[Address(RVA = "0x12EFA6C", Offset = "0x12EFA6C", VA = "0x12EFA6C", Slot = "189")]
		public virtual bool PlayerSupportsLinearColorSpace()
		{
			return default(bool);
		}

		[Token(Token = "0x60012A1")]
		[Address(RVA = "0x12EFA74", Offset = "0x12EFA74", VA = "0x12EFA74", Slot = "190")]
		public virtual int GetBufferedTimeRangeCount()
		{
			return default(int);
		}

		[Token(Token = "0x60012A2")]
		[Address(RVA = "0x12EFA7C", Offset = "0x12EFA7C", VA = "0x12EFA7C", Slot = "191")]
		public virtual bool GetBufferedTimeRange(int index, ref float startTimeMs, ref float endTimeMs)
		{
			return default(bool);
		}

		[Token(Token = "0x60012A3")]
		[Address(RVA = "0x12EFA84", Offset = "0x12EFA84", VA = "0x12EFA84", Slot = "51")]
		public void SetTextureProperties(FilterMode filterMode = FilterMode.Bilinear, TextureWrapMode wrapMode = TextureWrapMode.Clamp, int anisoLevel = 0)
		{
		}

		[Token(Token = "0x60012A4")]
		[Address(RVA = "0x12EFB14", Offset = "0x12EFB14", VA = "0x12EFB14", Slot = "192")]
		protected virtual void ApplyTextureProperties(Texture texture)
		{
		}

		[Token(Token = "0x60012A5")]
		[Address(RVA = "0x12EFBD4", Offset = "0x12EFBD4", VA = "0x12EFBD4", Slot = "193")]
		public virtual void GrabAudio(float[] buffer, int floatCount, int channelCount)
		{
		}

		[Token(Token = "0x60012A6")]
		[Address(RVA = "0x12EFBD8", Offset = "0x12EFBD8", VA = "0x12EFBD8")]
		protected bool IsExpectingNewVideoFrame()
		{
			return default(bool);
		}

		[Token(Token = "0x60012A7")]
		[Address(RVA = "0x12EFC5C", Offset = "0x12EFC5C", VA = "0x12EFC5C", Slot = "194")]
		public virtual bool IsPlaybackStalled()
		{
			return default(bool);
		}

		[Token(Token = "0x60012A8")]
		[Address(RVA = "0x12EFCFC", Offset = "0x12EFCFC", VA = "0x12EFCFC", Slot = "22")]
		public bool IsSeekingStarted()
		{
			return default(bool);
		}

		[Token(Token = "0x60012A9")]
		[Address(RVA = "0x12EFD1C", Offset = "0x12EFD1C", VA = "0x12EFD1C", Slot = "23")]
		public void ResetEventState()
		{
		}

		[Token(Token = "0x60012AA")]
		[Address(RVA = "0x12EFD24", Offset = "0x12EFD24", VA = "0x12EFD24", Slot = "99")]
		public bool LoadSubtitlesSRT(string data)
		{
			return default(bool);
		}

		[Token(Token = "0x60012AB")]
		[Address(RVA = "0x12EFDA4", Offset = "0x12EFDA4", VA = "0x12EFDA4", Slot = "195")]
		public virtual void UpdateSubtitles()
		{
		}

		[Token(Token = "0x60012AC")]
		[Address(RVA = "0x12EFF34", Offset = "0x12EFF34", VA = "0x12EFF34", Slot = "196")]
		public virtual int GetSubtitleIndex()
		{
			return default(int);
		}

		[Token(Token = "0x60012AD")]
		[Address(RVA = "0x12EFF4C", Offset = "0x12EFF4C", VA = "0x12EFF4C", Slot = "197")]
		public virtual string GetSubtitleText()
		{
			return null;
		}

		[Token(Token = "0x60012AE")]
		[Address(RVA = "0x12EFFAC", Offset = "0x12EFFAC", VA = "0x12EFFAC", Slot = "198")]
		public virtual void OnEnable()
		{
		}

		[Token(Token = "0x60012AF")]
		[Address(RVA = "0x12EFFB0", Offset = "0x12EFFB0", VA = "0x12EFFB0")]
		protected BaseMediaPlayer()
		{
		}
	}
	[Token(Token = "0x2000332")]
	public class HLSStream : Stream
	{
		[Token(Token = "0x40015D0")]
		private const string BANDWIDTH_NAME = "BANDWIDTH=";

		[Token(Token = "0x40015D1")]
		private const string RESOLUTION_NAME = "RESOLUTION=";

		[Token(Token = "0x40015D2")]
		private const string CHUNK_TAG = "#EXTINF";

		[Token(Token = "0x40015D3")]
		private const string STREAM_TAG = "#EXT-X-STREAM-INF";

		[Token(Token = "0x40015D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private List<Stream> _streams;

		[Token(Token = "0x40015D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private List<Chunk> _chunks;

		[Token(Token = "0x40015D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private string _streamURL;

		[Token(Token = "0x40015D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int _width;

		[Token(Token = "0x40015D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int _height;

		[Token(Token = "0x40015D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int _bandwidth;

		[Token(Token = "0x170002BD")]
		public override int Width
		{
			[Token(Token = "0x60012B0")]
			[Address(RVA = "0x133BA60", Offset = "0x133BA60", VA = "0x133BA60", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170002BE")]
		public override int Height
		{
			[Token(Token = "0x60012B1")]
			[Address(RVA = "0x133BA68", Offset = "0x133BA68", VA = "0x133BA68", Slot = "5")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170002BF")]
		public override int Bandwidth
		{
			[Token(Token = "0x60012B2")]
			[Address(RVA = "0x133BA70", Offset = "0x133BA70", VA = "0x133BA70", Slot = "6")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170002C0")]
		public override string URL
		{
			[Token(Token = "0x60012B3")]
			[Address(RVA = "0x133BA78", Offset = "0x133BA78", VA = "0x133BA78", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60012B4")]
		[Address(RVA = "0x133BA80", Offset = "0x133BA80", VA = "0x133BA80", Slot = "8")]
		public override List<Chunk> GetAllChunks()
		{
			return null;
		}

		[Token(Token = "0x60012B5")]
		[Address(RVA = "0x133BBAC", Offset = "0x133BBAC", VA = "0x133BBAC", Slot = "9")]
		public override List<Chunk> GetChunks()
		{
			return null;
		}

		[Token(Token = "0x60012B6")]
		[Address(RVA = "0x133BBB4", Offset = "0x133BBB4", VA = "0x133BBB4", Slot = "10")]
		public override List<Stream> GetAllStreams()
		{
			return null;
		}

		[Token(Token = "0x60012B7")]
		[Address(RVA = "0x133BCE0", Offset = "0x133BCE0", VA = "0x133BCE0", Slot = "11")]
		public override List<Stream> GetStreams()
		{
			return null;
		}

		[Token(Token = "0x60012B8")]
		[Address(RVA = "0x133BCE8", Offset = "0x133BCE8", VA = "0x133BCE8")]
		private bool ExtractStreamInfo(string line, ref int width, ref int height, ref int bandwidth)
		{
			return default(bool);
		}

		[Token(Token = "0x60012B9")]
		[Address(RVA = "0x133BF04", Offset = "0x133BF04", VA = "0x133BF04")]
		private static bool IsChunk(string line)
		{
			return default(bool);
		}

		[Token(Token = "0x60012BA")]
		[Address(RVA = "0x133BF5C", Offset = "0x133BF5C", VA = "0x133BF5C")]
		private void ParseFile(string[] text, string path)
		{
		}

		[Token(Token = "0x60012BB")]
		[Address(RVA = "0x133C478", Offset = "0x133C478", VA = "0x133C478")]
		public HLSStream(string filename, int width = 0, int height = 0, int bandwidth = 0)
		{
		}

		[Token(Token = "0x60012BC")]
		[Address(RVA = "0x133C984", Offset = "0x133C984", VA = "0x133C984")]
		private bool MyRemoteCertificateValidationCallback(object sender, X509Certificate certificate, X509Chain chain, SslPolicyErrors sslPolicyErrors)
		{
			return default(bool);
		}
	}
	[Serializable]
	[Token(Token = "0x2000333")]
	public class MediaPlayerEvent : UnityEvent<MediaPlayer, MediaPlayerEvent.EventType, ErrorCode>
	{
		[Token(Token = "0x2000334")]
		public enum EventType
		{
			[Token(Token = "0x40015DC")]
			MetaDataReady,
			[Token(Token = "0x40015DD")]
			ReadyToPlay,
			[Token(Token = "0x40015DE")]
			Started,
			[Token(Token = "0x40015DF")]
			FirstFrameReady,
			[Token(Token = "0x40015E0")]
			FinishedPlaying,
			[Token(Token = "0x40015E1")]
			Closing,
			[Token(Token = "0x40015E2")]
			Error,
			[Token(Token = "0x40015E3")]
			SubtitleChange,
			[Token(Token = "0x40015E4")]
			Stalled,
			[Token(Token = "0x40015E5")]
			Unstalled,
			[Token(Token = "0x40015E6")]
			ResolutionChanged,
			[Token(Token = "0x40015E7")]
			StartedSeeking,
			[Token(Token = "0x40015E8")]
			FinishedSeeking,
			[Token(Token = "0x40015E9")]
			StartedBuffering,
			[Token(Token = "0x40015EA")]
			FinishedBuffering,
			[Token(Token = "0x40015EB")]
			PropertiesChanged,
			[Token(Token = "0x40015EC")]
			PlaylistItemChanged,
			[Token(Token = "0x40015ED")]
			PlaylistFinished
		}

		[Token(Token = "0x40015DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<UnityAction<MediaPlayer, EventType, ErrorCode>> _listeners;

		[Token(Token = "0x60012BD")]
		[Address(RVA = "0x135506C", Offset = "0x135506C", VA = "0x135506C")]
		public bool HasListeners()
		{
			return default(bool);
		}

		[Token(Token = "0x60012BE")]
		[Address(RVA = "0x1358B68", Offset = "0x1358B68", VA = "0x1358B68")]
		public new void AddListener(UnityAction<MediaPlayer, EventType, ErrorCode> call)
		{
		}

		[Token(Token = "0x60012BF")]
		[Address(RVA = "0x1358C2C", Offset = "0x1358C2C", VA = "0x1358C2C")]
		public new void RemoveListener(UnityAction<MediaPlayer, EventType, ErrorCode> call)
		{
		}

		[Token(Token = "0x60012C0")]
		[Address(RVA = "0x1358CF0", Offset = "0x1358CF0", VA = "0x1358CF0")]
		public new void RemoveAllListeners()
		{
		}

		[Token(Token = "0x60012C1")]
		[Address(RVA = "0x1353158", Offset = "0x1353158", VA = "0x1353158")]
		public MediaPlayerEvent()
		{
		}
	}
	[Token(Token = "0x2000335")]
	public interface IMediaPlayer
	{
		[Token(Token = "0x60012C2")]
		void OnEnable();

		[Token(Token = "0x60012C3")]
		void Update();

		[Token(Token = "0x60012C4")]
		void Render();
	}
	[Token(Token = "0x2000336")]
	public interface IMediaSubtitles
	{
		[Token(Token = "0x60012C5")]
		bool LoadSubtitlesSRT(string data);

		[Token(Token = "0x60012C6")]
		int GetSubtitleIndex();

		[Token(Token = "0x60012C7")]
		string GetSubtitleText();
	}
	[Token(Token = "0x2000337")]
	public interface IMediaControl
	{
		[Token(Token = "0x60012C8")]
		bool OpenVideoFromFile(string path, long offset, string httpHeaderJson, uint sourceSamplerate = 0u, uint sourceChannels = 0u, int forceFileFormat = 0);

		[Token(Token = "0x60012C9")]
		bool OpenVideoFromBuffer(byte[] buffer);

		[Token(Token = "0x60012CA")]
		bool StartOpenVideoFromBuffer(ulong length);

		[Token(Token = "0x60012CB")]
		bool AddChunkToVideoBuffer(byte[] chunk, ulong offset, ulong length);

		[Token(Token = "0x60012CC")]
		bool EndOpenVideoFromBuffer();

		[Token(Token = "0x60012CD")]
		void CloseVideo();

		[Token(Token = "0x60012CE")]
		void SetLooping(bool bLooping);

		[Token(Token = "0x60012CF")]
		bool IsLooping();

		[Token(Token = "0x60012D0")]
		bool HasMetaData();

		[Token(Token = "0x60012D1")]
		bool CanPlay();

		[Token(Token = "0x60012D2")]
		bool IsPlaying();

		[Token(Token = "0x60012D3")]
		bool IsSeeking();

		[Token(Token = "0x60012D4")]
		bool IsPaused();

		[Token(Token = "0x60012D5")]
		bool IsFinished();

		[Token(Token = "0x60012D6")]
		bool IsBuffering();

		[Token(Token = "0x60012D7")]
		bool IsSeekingStarted();

		[Token(Token = "0x60012D8")]
		void ResetEventState();

		[Token(Token = "0x60012D9")]
		void Play();

		[Token(Token = "0x60012DA")]
		void Pause();

		[Token(Token = "0x60012DB")]
		void Stop();

		[Token(Token = "0x60012DC")]
		void Rewind();

		[Token(Token = "0x60012DD")]
		void Seek(float timeMs);

		[Token(Token = "0x60012DE")]
		void SeekFast(float timeMs);

		[Token(Token = "0x60012DF")]
		void SeekWithTolerance(float timeMs, float beforeMs, float afterMs);

		[Token(Token = "0x60012E0")]
		float GetCurrentTimeMs();

		[Token(Token = "0x60012E1")]
		double GetCurrentDateTimeSecondsSince1970();

		[Token(Token = "0x60012E2")]
		TimeRange[] GetSeekableTimeRanges();

		[Token(Token = "0x60012E3")]
		float GetPlaybackRate();

		[Token(Token = "0x60012E4")]
		void SetPlaybackRate(float rate);

		[Token(Token = "0x60012E5")]
		void MuteAudio(bool bMute);

		[Token(Token = "0x60012E6")]
		bool IsMuted();

		[Token(Token = "0x60012E7")]
		void SetVolume(float volume);

		[Token(Token = "0x60012E8")]
		void SetBalance(float balance);

		[Token(Token = "0x60012E9")]
		float GetVolume();

		[Token(Token = "0x60012EA")]
		float GetBalance();

		[Token(Token = "0x60012EB")]
		int GetCurrentAudioTrack();

		[Token(Token = "0x60012EC")]
		void SetAudioTrack(int index);

		[Token(Token = "0x60012ED")]
		int GetCurrentVideoTrack();

		[Token(Token = "0x60012EE")]
		void SetVideoTrack(int index);

		[Token(Token = "0x60012EF")]
		float GetBufferingProgress();

		[Token(Token = "0x60012F0")]
		int GetBufferedTimeRangeCount();

		[Token(Token = "0x60012F1")]
		bool GetBufferedTimeRange(int index, ref float startTimeMs, ref float endTimeMs);

		[Token(Token = "0x60012F2")]
		ErrorCode GetLastError();

		[Token(Token = "0x60012F3")]
		long GetLastExtendedErrorCode();

		[Token(Token = "0x60012F4")]
		void SetTextureProperties(FilterMode filterMode = FilterMode.Bilinear, TextureWrapMode wrapMode = TextureWrapMode.Clamp, int anisoLevel = 1);

		[Token(Token = "0x60012F5")]
		void GrabAudio(float[] buffer, int floatCount, int channelCount);

		[Token(Token = "0x60012F6")]
		int GetNumAudioChannels();

		[Token(Token = "0x60012F7")]
		void SetAudioHeadRotation(Quaternion q);

		[Token(Token = "0x60012F8")]
		void ResetAudioHeadRotation();

		[Token(Token = "0x60012F9")]
		void SetAudioChannelMode(Audio360ChannelMode channelMode);

		[Token(Token = "0x60012FA")]
		void SetAudioFocusEnabled(bool enabled);

		[Token(Token = "0x60012FB")]
		void SetAudioFocusProperties(float offFocusLevel, float widthDegrees);

		[Token(Token = "0x60012FC")]
		void SetAudioFocusRotation(Quaternion q);

		[Token(Token = "0x60012FD")]
		void ResetAudioFocus();

		[Token(Token = "0x60012FE")]
		bool WaitForNextFrame(Camera dummyCamera, int previousFrameCount);

		[Token(Token = "0x60012FF")]
		void SetPlayWithoutBuffering(bool playWithoutBuffering);

		[Token(Token = "0x6001300")]
		void SetKeyServerURL(string url);

		[Token(Token = "0x6001301")]
		void SetKeyServerAuthToken(string token);

		[Token(Token = "0x6001302")]
		void SetDecryptionKeyBase64(string key);

		[Token(Token = "0x6001303")]
		void SetDecryptionKey(byte[] key);

		[Token(Token = "0x6001304")]
		bool IsExternalPlaybackSupported();

		[Token(Token = "0x6001305")]
		bool IsExternalPlaybackActive();

		[Token(Token = "0x6001306")]
		void SetAllowsExternalPlayback(bool allowsExternalPlayback);

		[Token(Token = "0x6001307")]
		void SetExternalPlaybackFillMode(ExternalPlaybackFillMode fillMode);
	}
	[Token(Token = "0x2000338")]
	public interface IMediaInfo
	{
		[Token(Token = "0x6001308")]
		float GetDurationMs();

		[Token(Token = "0x6001309")]
		int GetVideoWidth();

		[Token(Token = "0x600130A")]
		int GetVideoHeight();

		[Token(Token = "0x600130B")]
		Rect GetCropRect();

		[Token(Token = "0x600130C")]
		float GetVideoFrameRate();

		[Token(Token = "0x600130D")]
		float GetVideoDisplayRate();

		[Token(Token = "0x600130E")]
		bool HasVideo();

		[Token(Token = "0x600130F")]
		bool HasAudio();

		[Token(Token = "0x6001310")]
		int GetAudioTrackCount();

		[Token(Token = "0x6001311")]
		string GetAudioTrackId(int index);

		[Token(Token = "0x6001312")]
		string GetCurrentAudioTrackId();

		[Token(Token = "0x6001313")]
		int GetCurrentAudioTrackBitrate();

		[Token(Token = "0x6001314")]
		int GetVideoTrackCount();

		[Token(Token = "0x6001315")]
		string GetVideoTrackId(int index);

		[Token(Token = "0x6001316")]
		string GetCurrentVideoTrackId();

		[Token(Token = "0x6001317")]
		int GetCurrentVideoTrackBitrate();

		[Token(Token = "0x6001318")]
		string GetPlayerDescription();

		[Token(Token = "0x6001319")]
		bool PlayerSupportsLinearColorSpace();

		[Token(Token = "0x600131A")]
		bool IsPlaybackStalled();

		[Token(Token = "0x600131B")]
		float[] GetTextureTransform();

		[Token(Token = "0x600131C")]
		long GetEstimatedTotalBandwidthUsed();
	}
	[Token(Token = "0x2000339")]
	public interface IMediaProducer
	{
		[Token(Token = "0x600131D")]
		int GetTextureCount();

		[Token(Token = "0x600131E")]
		Texture GetTexture(int index = 0);

		[Token(Token = "0x600131F")]
		int GetTextureFrameCount();

		[Token(Token = "0x6001320")]
		bool SupportsTextureFrameCount();

		[Token(Token = "0x6001321")]
		long GetTextureTimeStamp();

		[Token(Token = "0x6001322")]
		bool RequiresVerticalFlip();

		[Token(Token = "0x6001323")]
		Matrix4x4 GetYpCbCrTransform();
	}
	[Token(Token = "0x200033A")]
	public enum Platform
	{
		[Token(Token = "0x40015EF")]
		Windows = 0,
		[Token(Token = "0x40015F0")]
		MacOSX = 1,
		[Token(Token = "0x40015F1")]
		iOS = 2,
		[Token(Token = "0x40015F2")]
		tvOS = 3,
		[Token(Token = "0x40015F3")]
		Android = 4,
		[Token(Token = "0x40015F4")]
		WindowsPhone = 5,
		[Token(Token = "0x40015F5")]
		WindowsUWP = 6,
		[Token(Token = "0x40015F6")]
		WebGL = 7,
		[Token(Token = "0x40015F7")]
		PS4 = 8,
		[Token(Token = "0x40015F8")]
		Count = 9,
		[Token(Token = "0x40015F9")]
		Unknown = 100
	}
	[Token(Token = "0x200033B")]
	public enum StereoPacking
	{
		[Token(Token = "0x40015FB")]
		None,
		[Token(Token = "0x40015FC")]
		TopBottom,
		[Token(Token = "0x40015FD")]
		LeftRight,
		[Token(Token = "0x40015FE")]
		CustomUV
	}
	[Token(Token = "0x200033C")]
	public enum StereoEye
	{
		[Token(Token = "0x4001600")]
		Both,
		[Token(Token = "0x4001601")]
		Left,
		[Token(Token = "0x4001602")]
		Right
	}
	[Token(Token = "0x200033D")]
	public enum AlphaPacking
	{
		[Token(Token = "0x4001604")]
		None,
		[Token(Token = "0x4001605")]
		TopBottom,
		[Token(Token = "0x4001606")]
		LeftRight
	}
	[Token(Token = "0x200033E")]
	public enum ErrorCode
	{
		[Token(Token = "0x4001608")]
		None = 0,
		[Token(Token = "0x4001609")]
		LoadFailed = 100,
		[Token(Token = "0x400160A")]
		DecodeFailed = 200
	}
	[Token(Token = "0x200033F")]
	public enum Orientation
	{
		[Token(Token = "0x400160C")]
		Landscape,
		[Token(Token = "0x400160D")]
		LandscapeFlipped,
		[Token(Token = "0x400160E")]
		Portrait,
		[Token(Token = "0x400160F")]
		PortraitFlipped
	}
	[Token(Token = "0x2000340")]
	public enum VideoMapping
	{
		[Token(Token = "0x4001611")]
		Unknown,
		[Token(Token = "0x4001612")]
		Normal,
		[Token(Token = "0x4001613")]
		EquiRectangular360,
		[Token(Token = "0x4001614")]
		EquiRectangular180,
		[Token(Token = "0x4001615")]
		CubeMap3x2
	}
	[Token(Token = "0x2000341")]
	public enum ExternalPlaybackFillMode
	{
		[Token(Token = "0x4001617")]
		Resize,
		[Token(Token = "0x4001618")]
		ResizeAspect,
		[Token(Token = "0x4001619")]
		ResizeAspectFill
	}
	[Token(Token = "0x2000342")]
	public enum FileFormat
	{
		[Token(Token = "0x400161B")]
		Unknown,
		[Token(Token = "0x400161C")]
		HLS,
		[Token(Token = "0x400161D")]
		DASH,
		[Token(Token = "0x400161E")]
		SmoothStreaming
	}
	[Token(Token = "0x2000343")]
	public static class Windows
	{
		[Token(Token = "0x2000344")]
		public enum VideoApi
		{
			[Token(Token = "0x4001622")]
			MediaFoundation,
			[Token(Token = "0x4001623")]
			DirectShow
		}

		[Token(Token = "0x400161F")]
		public const string AudioDeviceOutputName_Vive = "HTC VIVE USB Audio";

		[Token(Token = "0x4001620")]
		public const string AudioDeviceOutputName_Rift = "Headphones (Rift Audio)";
	}
	[Token(Token = "0x2000345")]
	public static class Android
	{
		[Token(Token = "0x2000346")]
		public enum VideoApi
		{
			[Token(Token = "0x4001625")]
			MediaPlayer = 1,
			[Token(Token = "0x4001626")]
			ExoPlayer
		}
	}
	[Token(Token = "0x2000347")]
	public static class WebGL
	{
		[Token(Token = "0x2000348")]
		public enum ExternalLibrary
		{
			[Token(Token = "0x4001628")]
			None,
			[Token(Token = "0x4001629")]
			DashJs,
			[Token(Token = "0x400162A")]
			HlsJs,
			[Token(Token = "0x400162B")]
			Custom
		}
	}
	[Token(Token = "0x2000349")]
	public enum Audio360ChannelMode
	{
		[Token(Token = "0x400162D")]
		TBE_8_2,
		[Token(Token = "0x400162E")]
		TBE_8,
		[Token(Token = "0x400162F")]
		TBE_6_2,
		[Token(Token = "0x4001630")]
		TBE_6,
		[Token(Token = "0x4001631")]
		TBE_4_2,
		[Token(Token = "0x4001632")]
		TBE_4,
		[Token(Token = "0x4001633")]
		TBE_8_PAIR0,
		[Token(Token = "0x4001634")]
		TBE_8_PAIR1,
		[Token(Token = "0x4001635")]
		TBE_8_PAIR2,
		[Token(Token = "0x4001636")]
		TBE_8_PAIR3,
		[Token(Token = "0x4001637")]
		TBE_CHANNEL0,
		[Token(Token = "0x4001638")]
		TBE_CHANNEL1,
		[Token(Token = "0x4001639")]
		TBE_CHANNEL2,
		[Token(Token = "0x400163A")]
		TBE_CHANNEL3,
		[Token(Token = "0x400163B")]
		TBE_CHANNEL4,
		[Token(Token = "0x400163C")]
		TBE_CHANNEL5,
		[Token(Token = "0x400163D")]
		TBE_CHANNEL6,
		[Token(Token = "0x400163E")]
		TBE_CHANNEL7,
		[Token(Token = "0x400163F")]
		HEADLOCKED_STEREO,
		[Token(Token = "0x4001640")]
		HEADLOCKED_CHANNEL0,
		[Token(Token = "0x4001641")]
		HEADLOCKED_CHANNEL1,
		[Token(Token = "0x4001642")]
		AMBIX_4,
		[Token(Token = "0x4001643")]
		AMBIX_9,
		[Token(Token = "0x4001644")]
		AMBIX_9_2,
		[Token(Token = "0x4001645")]
		AMBIX_16,
		[Token(Token = "0x4001646")]
		AMBIX_16_2,
		[Token(Token = "0x4001647")]
		STEREO,
		[Token(Token = "0x4001648")]
		INVALID
	}
	[Token(Token = "0x200034A")]
	public struct TimeRange
	{
		[Token(Token = "0x4001649")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float startTime;

		[Token(Token = "0x400164A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float duration;
	}
	[Token(Token = "0x200034B")]
	public class Subtitle
	{
		[Token(Token = "0x400164B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int index;

		[Token(Token = "0x400164C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string text;

		[Token(Token = "0x400164D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int timeStartMs;

		[Token(Token = "0x400164E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int timeEndMs;

		[Token(Token = "0x6001324")]
		[Address(RVA = "0x167C6C0", Offset = "0x167C6C0", VA = "0x167C6C0")]
		public bool IsBefore(float time)
		{
			return default(bool);
		}

		[Token(Token = "0x6001325")]
		[Address(RVA = "0x167C6EC", Offset = "0x167C6EC", VA = "0x167C6EC")]
		public bool IsTime(float time)
		{
			return default(bool);
		}

		[Token(Token = "0x6001326")]
		[Address(RVA = "0x167C718", Offset = "0x167C718", VA = "0x167C718")]
		public Subtitle()
		{
		}
	}
	[Token(Token = "0x200034C")]
	public static class Helper
	{
		[Token(Token = "0x400164F")]
		public const string ScriptVersion = "1.11.7";

		[Token(Token = "0x6001327")]
		[Address(RVA = "0x133F82C", Offset = "0x133F82C", VA = "0x133F82C")]
		public static string GetName(Platform platform)
		{
			return null;
		}

		[Token(Token = "0x6001328")]
		[Address(RVA = "0x133F928", Offset = "0x133F928", VA = "0x133F928")]
		public static string GetErrorMessage(ErrorCode code)
		{
			return null;
		}

		[Token(Token = "0x6001329")]
		[Address(RVA = "0x133F9FC", Offset = "0x133F9FC", VA = "0x133F9FC")]
		public static string[] GetPlatformNames()
		{
			return null;
		}

		[Token(Token = "0x600132A")]
		[Address(RVA = "0x133FCAC", Offset = "0x133FCAC", VA = "0x133FCAC")]
		public static void LogInfo(string message, [Optional] UnityEngine.Object context)
		{
		}

		[Token(Token = "0x600132B")]
		[Address(RVA = "0x133FDC0", Offset = "0x133FDC0", VA = "0x133FDC0")]
		public static string GetTimeString(float totalSeconds, bool showMilliseconds = false)
		{
			return null;
		}

		[Token(Token = "0x600132C")]
		[Address(RVA = "0x13401B4", Offset = "0x13401B4", VA = "0x13401B4")]
		public static Orientation GetOrientation(float[] t)
		{
			return default(Orientation);
		}

		[Token(Token = "0x600132D")]
		[Address(RVA = "0x1340300", Offset = "0x1340300", VA = "0x1340300")]
		public static Matrix4x4 GetMatrixForOrientation(Orientation ori)
		{
			return default(Matrix4x4);
		}

		[Token(Token = "0x600132E")]
		[Address(RVA = "0x1340528", Offset = "0x1340528", VA = "0x1340528")]
		public static void SetupStereoEyeModeMaterial(Material material, StereoEye mode)
		{
		}

		[Token(Token = "0x600132F")]
		[Address(RVA = "0x1340678", Offset = "0x1340678", VA = "0x1340678")]
		public static void SetupLayoutMaterial(Material material, VideoMapping mapping)
		{
		}

		[Token(Token = "0x6001330")]
		[Address(RVA = "0x1340728", Offset = "0x1340728", VA = "0x1340728")]
		public static void SetupStereoMaterial(Material material, StereoPacking packing, bool displayDebugTinting)
		{
		}

		[Token(Token = "0x6001331")]
		[Address(RVA = "0x1340878", Offset = "0x1340878", VA = "0x1340878")]
		public static void SetupAlphaPackedMaterial(Material material, AlphaPacking packing)
		{
		}

		[Token(Token = "0x6001332")]
		[Address(RVA = "0x134095C", Offset = "0x134095C", VA = "0x134095C")]
		public static void SetupGammaMaterial(Material material, bool playerSupportsLinear)
		{
		}

		[Token(Token = "0x6001333")]
		[Address(RVA = "0x13409FC", Offset = "0x13409FC", VA = "0x13409FC")]
		public static int ConvertTimeSecondsToFrame(float seconds, float frameRate)
		{
			return default(int);
		}

		[Token(Token = "0x6001334")]
		[Address(RVA = "0x1340A44", Offset = "0x1340A44", VA = "0x1340A44")]
		public static float ConvertFrameToTimeSeconds(int frame, float frameRate)
		{
			return default(float);
		}

		[Token(Token = "0x6001335")]
		[Address(RVA = "0x1340AA8", Offset = "0x1340AA8", VA = "0x1340AA8")]
		public static float FindNextKeyFrameTimeSeconds(float seconds, float frameRate, int keyFrameInterval)
		{
			return default(float);
		}

		[Token(Token = "0x6001336")]
		[Address(RVA = "0x1340B70", Offset = "0x1340B70", VA = "0x1340B70")]
		public static DateTime ConvertSecondsSince1970ToDateTime(double secondsSince1970)
		{
			return default(DateTime);
		}

		[Token(Token = "0x6001337")]
		[Address(RVA = "0x1340C24", Offset = "0x1340C24", VA = "0x1340C24")]
		public static void DrawTexture(Rect screenRect, Texture texture, ScaleMode scaleMode, AlphaPacking alphaPacking, Material material)
		{
		}

		[Token(Token = "0x6001338")]
		[Address(RVA = "0x1340FA4", Offset = "0x1340FA4", VA = "0x1340FA4")]
		public static Texture2D GetReadableTexture(Texture inputTexture, bool requiresVerticalFlip, Orientation ori, Texture2D targetTexture)
		{
			return null;
		}

		[Token(Token = "0x6001339")]
		[Address(RVA = "0x13412CC", Offset = "0x13412CC", VA = "0x13412CC")]
		private static int ParseTimeToMs(string text)
		{
			return default(int);
		}

		[Token(Token = "0x600133A")]
		[Address(RVA = "0x13413FC", Offset = "0x13413FC", VA = "0x13413FC")]
		public static List<Subtitle> LoadSubtitlesSRT(string data)
		{
			return null;
		}
	}
	[Token(Token = "0x200034D")]
	public sealed class NullMediaPlayer : BaseMediaPlayer
	{
		[Token(Token = "0x4001650")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool _isPlaying;

		[Token(Token = "0x4001651")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		private bool _isPaused;

		[Token(Token = "0x4001652")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float _currentTime;

		[Token(Token = "0x4001653")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float _volume;

		[Token(Token = "0x4001654")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private float _playbackRate;

		[Token(Token = "0x4001655")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool _bLoop;

		[Token(Token = "0x4001656")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private int _Width;

		[Token(Token = "0x4001657")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private int _height;

		[Token(Token = "0x4001658")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Texture2D _texture;

		[Token(Token = "0x4001659")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Texture2D _texture_AVPro;

		[Token(Token = "0x400165A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Texture2D _texture_AVPro1;

		[Token(Token = "0x400165B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private float _fakeFlipTime;

		[Token(Token = "0x400165C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private int _frameCount;

		[Token(Token = "0x400165D")]
		private const float FrameRate = 10f;

		[Token(Token = "0x600133B")]
		[Address(RVA = "0x1360418", Offset = "0x1360418", VA = "0x1360418", Slot = "103")]
		public override string GetVersion()
		{
			return null;
		}

		[Token(Token = "0x600133C")]
		[Address(RVA = "0x136045C", Offset = "0x136045C", VA = "0x136045C", Slot = "104")]
		public override bool OpenVideoFromFile(string path, long offset, string httpHeaderJson, uint sourceSamplerate = 0u, uint sourceChannels = 0u, int forceFileFormat = 0)
		{
			return default(bool);
		}

		[Token(Token = "0x600133D")]
		[Address(RVA = "0x13605D8", Offset = "0x13605D8", VA = "0x13605D8", Slot = "109")]
		public override void CloseVideo()
		{
		}

		[Token(Token = "0x600133E")]
		[Address(RVA = "0x1360618", Offset = "0x1360618", VA = "0x1360618", Slot = "110")]
		public override void SetLooping(bool bLooping)
		{
		}

		[Token(Token = "0x600133F")]
		[Address(RVA = "0x1360624", Offset = "0x1360624", VA = "0x1360624", Slot = "111")]
		public override bool IsLooping()
		{
			return default(bool);
		}

		[Token(Token = "0x6001340")]
		[Address(RVA = "0x136062C", Offset = "0x136062C", VA = "0x136062C", Slot = "112")]
		public override bool HasMetaData()
		{
			return default(bool);
		}

		[Token(Token = "0x6001341")]
		[Address(RVA = "0x1360634", Offset = "0x1360634", VA = "0x1360634", Slot = "113")]
		public override bool CanPlay()
		{
			return default(bool);
		}

		[Token(Token = "0x6001342")]
		[Address(RVA = "0x136063C", Offset = "0x136063C", VA = "0x136063C", Slot = "131")]
		public override bool HasAudio()
		{
			return default(bool);
		}

		[Token(Token = "0x6001343")]
		[Address(RVA = "0x1360644", Offset = "0x1360644", VA = "0x1360644", Slot = "132")]
		public override bool HasVideo()
		{
			return default(bool);
		}

		[Token(Token = "0x6001344")]
		[Address(RVA = "0x136064C", Offset = "0x136064C", VA = "0x136064C", Slot = "114")]
		public override void Play()
		{
		}

		[Token(Token = "0x6001345")]
		[Address(RVA = "0x136065C", Offset = "0x136065C", VA = "0x136065C", Slot = "115")]
		public override void Pause()
		{
		}

		[Token(Token = "0x6001346")]
		[Address(RVA = "0x1360668", Offset = "0x1360668", VA = "0x1360668", Slot = "116")]
		public override void Stop()
		{
		}

		[Token(Token = "0x6001347")]
		[Address(RVA = "0x1360670", Offset = "0x1360670", VA = "0x1360670", Slot = "133")]
		public override bool IsSeeking()
		{
			return default(bool);
		}

		[Token(Token = "0x6001348")]
		[Address(RVA = "0x1360678", Offset = "0x1360678", VA = "0x1360678", Slot = "134")]
		public override bool IsPlaying()
		{
			return default(bool);
		}

		[Token(Token = "0x6001349")]
		[Address(RVA = "0x1360680", Offset = "0x1360680", VA = "0x1360680", Slot = "135")]
		public override bool IsPaused()
		{
			return default(bool);
		}

		[Token(Token = "0x600134A")]
		[Address(RVA = "0x1360688", Offset = "0x1360688", VA = "0x1360688", Slot = "136")]
		public override bool IsFinished()
		{
			return default(bool);
		}

		[Token(Token = "0x600134B")]
		[Address(RVA = "0x13606CC", Offset = "0x13606CC", VA = "0x13606CC", Slot = "137")]
		public override bool IsBuffering()
		{
			return default(bool);
		}

		[Token(Token = "0x600134C")]
		[Address(RVA = "0x13606D4", Offset = "0x13606D4", VA = "0x13606D4", Slot = "126")]
		public override float GetDurationMs()
		{
			return default(float);
		}

		[Token(Token = "0x600134D")]
		[Address(RVA = "0x13606E0", Offset = "0x13606E0", VA = "0x13606E0", Slot = "127")]
		public override int GetVideoWidth()
		{
			return default(int);
		}

		[Token(Token = "0x600134E")]
		[Address(RVA = "0x13606E8", Offset = "0x13606E8", VA = "0x13606E8", Slot = "128")]
		public override int GetVideoHeight()
		{
			return default(int);
		}

		[Token(Token = "0x600134F")]
		[Address(RVA = "0x13606F0", Offset = "0x13606F0", VA = "0x13606F0", Slot = "130")]
		public override float GetVideoDisplayRate()
		{
			return default(float);
		}

		[Token(Token = "0x6001350")]
		[Address(RVA = "0x13606F8", Offset = "0x13606F8", VA = "0x13606F8", Slot = "149")]
		public override Texture GetTexture(int index)
		{
			return null;
		}

		[Token(Token = "0x6001351")]
		[Address(RVA = "0x1360700", Offset = "0x1360700", VA = "0x1360700", Slot = "150")]
		public override int GetTextureFrameCount()
		{
			return default(int);
		}

		[Token(Token = "0x6001352")]
		[Address(RVA = "0x1360708", Offset = "0x1360708", VA = "0x1360708", Slot = "153")]
		public override bool RequiresVerticalFlip()
		{
			return default(bool);
		}

		[Token(Token = "0x6001353")]
		[Address(RVA = "0x1360710", Offset = "0x1360710", VA = "0x1360710", Slot = "118")]
		public override void Seek(float timeMs)
		{
		}

		[Token(Token = "0x6001354")]
		[Address(RVA = "0x1360720", Offset = "0x1360720", VA = "0x1360720", Slot = "119")]
		public override void SeekFast(float timeMs)
		{
		}

		[Token(Token = "0x6001355")]
		[Address(RVA = "0x1360730", Offset = "0x1360730", VA = "0x1360730", Slot = "120")]
		public override void SeekWithTolerance(float timeMs, float beforeMs, float afterMs)
		{
		}

		[Token(Token = "0x6001356")]
		[Address(RVA = "0x1360740", Offset = "0x1360740", VA = "0x1360740", Slot = "121")]
		public override float GetCurrentTimeMs()
		{
			return default(float);
		}

		[Token(Token = "0x6001357")]
		[Address(RVA = "0x1360748", Offset = "0x1360748", VA = "0x1360748", Slot = "125")]
		public override void SetPlaybackRate(float rate)
		{
		}

		[Token(Token = "0x6001358")]
		[Address(RVA = "0x1360750", Offset = "0x1360750", VA = "0x1360750", Slot = "124")]
		public override float GetPlaybackRate()
		{
			return default(float);
		}

		[Token(Token = "0x6001359")]
		[Address(RVA = "0x1360758", Offset = "0x1360758", VA = "0x1360758", Slot = "184")]
		public override float GetBufferingProgress()
		{
			return default(float);
		}

		[Token(Token = "0x600135A")]
		[Address(RVA = "0x1360760", Offset = "0x1360760", VA = "0x1360760", Slot = "156")]
		public override void MuteAudio(bool bMuted)
		{
		}

		[Token(Token = "0x600135B")]
		[Address(RVA = "0x1360764", Offset = "0x1360764", VA = "0x1360764", Slot = "157")]
		public override bool IsMuted()
		{
			return default(bool);
		}

		[Token(Token = "0x600135C")]
		[Address(RVA = "0x136076C", Offset = "0x136076C", VA = "0x136076C", Slot = "158")]
		public override void SetVolume(float volume)
		{
		}

		[Token(Token = "0x600135D")]
		[Address(RVA = "0x1360774", Offset = "0x1360774", VA = "0x1360774", Slot = "160")]
		public override float GetVolume()
		{
			return default(float);
		}

		[Token(Token = "0x600135E")]
		[Address(RVA = "0x136077C", Offset = "0x136077C", VA = "0x136077C", Slot = "162")]
		public override int GetAudioTrackCount()
		{
			return default(int);
		}

		[Token(Token = "0x600135F")]
		[Address(RVA = "0x1360784", Offset = "0x1360784", VA = "0x1360784", Slot = "164")]
		public override int GetCurrentAudioTrack()
		{
			return default(int);
		}

		[Token(Token = "0x6001360")]
		[Address(RVA = "0x136078C", Offset = "0x136078C", VA = "0x136078C", Slot = "165")]
		public override void SetAudioTrack(int index)
		{
		}

		[Token(Token = "0x6001361")]
		[Address(RVA = "0x1360790", Offset = "0x1360790", VA = "0x1360790", Slot = "176")]
		public override int GetVideoTrackCount()
		{
			return default(int);
		}

		[Token(Token = "0x6001362")]
		[Address(RVA = "0x1360798", Offset = "0x1360798", VA = "0x1360798", Slot = "178")]
		public override int GetCurrentVideoTrack()
		{
			return default(int);
		}

		[Token(Token = "0x6001363")]
		[Address(RVA = "0x13607A0", Offset = "0x13607A0", VA = "0x13607A0", Slot = "166")]
		public override string GetCurrentAudioTrackId()
		{
			return null;
		}

		[Token(Token = "0x6001364")]
		[Address(RVA = "0x13607E4", Offset = "0x13607E4", VA = "0x13607E4", Slot = "167")]
		public override int GetCurrentAudioTrackBitrate()
		{
			return default(int);
		}

		[Token(Token = "0x6001365")]
		[Address(RVA = "0x13607EC", Offset = "0x13607EC", VA = "0x13607EC", Slot = "179")]
		public override void SetVideoTrack(int index)
		{
		}

		[Token(Token = "0x6001366")]
		[Address(RVA = "0x13607F0", Offset = "0x13607F0", VA = "0x13607F0", Slot = "180")]
		public override string GetCurrentVideoTrackId()
		{
			return null;
		}

		[Token(Token = "0x6001367")]
		[Address(RVA = "0x1360834", Offset = "0x1360834", VA = "0x1360834", Slot = "181")]
		public override int GetCurrentVideoTrackBitrate()
		{
			return default(int);
		}

		[Token(Token = "0x6001368")]
		[Address(RVA = "0x136083C", Offset = "0x136083C", VA = "0x136083C", Slot = "182")]
		public override float GetVideoFrameRate()
		{
			return default(float);
		}

		[Token(Token = "0x6001369")]
		[Address(RVA = "0x1360844", Offset = "0x1360844", VA = "0x1360844", Slot = "185")]
		public override void Update()
		{
		}

		[Token(Token = "0x600136A")]
		[Address(RVA = "0x13609B0", Offset = "0x13609B0", VA = "0x13609B0", Slot = "186")]
		public override void Render()
		{
		}

		[Token(Token = "0x600136B")]
		[Address(RVA = "0x13609B4", Offset = "0x13609B4", VA = "0x13609B4", Slot = "187")]
		public override void Dispose()
		{
		}

		[Token(Token = "0x600136C")]
		[Address(RVA = "0x1356F88", Offset = "0x1356F88", VA = "0x1356F88")]
		public NullMediaPlayer()
		{
		}
	}
	[Token(Token = "0x200034E")]
	public class Resampler
	{
		[Token(Token = "0x200034F")]
		private class TimestampedRenderTexture
		{
			[Token(Token = "0x4001675")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RenderTexture texture;

			[Token(Token = "0x4001676")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public long timestamp;

			[Token(Token = "0x4001677")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool used;

			[Token(Token = "0x6001389")]
			[Address(RVA = "0xE8D2D4", Offset = "0xE8D2D4", VA = "0xE8D2D4")]
			public TimestampedRenderTexture()
			{
			}
		}

		[Token(Token = "0x2000350")]
		public enum ResampleMode
		{
			[Token(Token = "0x4001679")]
			POINT,
			[Token(Token = "0x400167A")]
			LINEAR
		}

		[Token(Token = "0x400165E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private List<TimestampedRenderTexture[]> _buffer;

		[Token(Token = "0x400165F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private MediaPlayer _mediaPlayer;

		[Token(Token = "0x4001660")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private RenderTexture[] _outputTexture;

		[Token(Token = "0x4001661")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int _start;

		[Token(Token = "0x4001662")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int _end;

		[Token(Token = "0x4001663")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int _bufferSize;

		[Token(Token = "0x4001664")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private long _baseTimestamp;

		[Token(Token = "0x4001665")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float _elapsedTimeSinceBase;

		[Token(Token = "0x4001666")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Material _blendMat;

		[Token(Token = "0x4001667")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private ResampleMode _resampleMode;

		[Token(Token = "0x4001668")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private string _name;

		[Token(Token = "0x4001669")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private long _lastTimeStamp;

		[Token(Token = "0x400166A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private int _droppedFrames;

		[Token(Token = "0x400166B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private long _lastDisplayedTimestamp;

		[Token(Token = "0x400166C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private int _frameDisplayedTimer;

		[Token(Token = "0x400166D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private long _currentDisplayedTimestamp;

		[Token(Token = "0x400166E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DCD1C", Offset = "0x8DCD1C")]
		private float <LastT>k__BackingField;

		[Token(Token = "0x400166F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DCD2C", Offset = "0x8DCD2C")]
		private long <TextureTimeStamp>k__BackingField;

		[Token(Token = "0x4001670")]
		private const string ShaderPropT = "_t";

		[Token(Token = "0x4001671")]
		private const string ShaderPropAftertex = "_AfterTex";

		[Token(Token = "0x4001672")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private int _propAfterTex;

		[Token(Token = "0x4001673")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private int _propT;

		[Token(Token = "0x4001674")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private float _videoFrameRate;

		[Token(Token = "0x170002C1")]
		public int DroppedFrames
		{
			[Token(Token = "0x600136D")]
			[Address(RVA = "0x105D978", Offset = "0x105D978", VA = "0x105D978")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170002C2")]
		public int FrameDisplayedTimer
		{
			[Token(Token = "0x600136E")]
			[Address(RVA = "0x105D980", Offset = "0x105D980", VA = "0x105D980")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170002C3")]
		public long BaseTimestamp
		{
			[Token(Token = "0x600136F")]
			[Address(RVA = "0x105D988", Offset = "0x105D988", VA = "0x105D988")]
			get
			{
				return default(long);
			}
			[Token(Token = "0x6001370")]
			[Address(RVA = "0x105D990", Offset = "0x105D990", VA = "0x105D990")]
			set
			{
			}
		}

		[Token(Token = "0x170002C4")]
		public float ElapsedTimeSinceBase
		{
			[Token(Token = "0x6001371")]
			[Address(RVA = "0x105D998", Offset = "0x105D998", VA = "0x105D998")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001372")]
			[Address(RVA = "0x105D9A0", Offset = "0x105D9A0", VA = "0x105D9A0")]
			set
			{
			}
		}

		[Token(Token = "0x170002C5")]
		public float LastT
		{
			[Token(Token = "0x6001373")]
			[Address(RVA = "0x105D9A8", Offset = "0x105D9A8", VA = "0x105D9A8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E5328", Offset = "0x8E5328")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001374")]
			[Address(RVA = "0x105D9B0", Offset = "0x105D9B0", VA = "0x105D9B0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E5338", Offset = "0x8E5338")]
			private set
			{
			}
		}

		[Token(Token = "0x170002C6")]
		public long TextureTimeStamp
		{
			[Token(Token = "0x6001375")]
			[Address(RVA = "0x105D9B8", Offset = "0x105D9B8", VA = "0x105D9B8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E5348", Offset = "0x8E5348")]
			get
			{
				return default(long);
			}
			[Token(Token = "0x6001376")]
			[Address(RVA = "0x105D9C0", Offset = "0x105D9C0", VA = "0x105D9C0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E5358", Offset = "0x8E5358")]
			private set
			{
			}
		}

		[Token(Token = "0x170002C7")]
		public Texture[] OutputTexture
		{
			[Token(Token = "0x6001379")]
			[Address(RVA = "0x105DE48", Offset = "0x105DE48", VA = "0x105DE48")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001377")]
		[Address(RVA = "0x105D9C8", Offset = "0x105D9C8", VA = "0x105D9C8")]
		public void OnVideoEvent(MediaPlayer mp, MediaPlayerEvent.EventType et, ErrorCode errorCode)
		{
		}

		[Token(Token = "0x6001378")]
		[Address(RVA = "0x105DAFC", Offset = "0x105DAFC", VA = "0x105DAFC")]
		public Resampler(MediaPlayer player, string name, int bufferSize = 2, ResampleMode resampleMode = ResampleMode.LINEAR)
		{
		}

		[Token(Token = "0x600137A")]
		[Address(RVA = "0x105DAEC", Offset = "0x105DAEC", VA = "0x105DAEC")]
		public void Reset()
		{
		}

		[Token(Token = "0x600137B")]
		[Address(RVA = "0x105DF90", Offset = "0x105DF90", VA = "0x105DF90")]
		public void Release()
		{
		}

		[Token(Token = "0x600137C")]
		[Address(RVA = "0x105E048", Offset = "0x105E048", VA = "0x105E048")]
		private void ReleaseRenderTextures()
		{
		}

		[Token(Token = "0x600137D")]
		[Address(RVA = "0x105E2C0", Offset = "0x105E2C0", VA = "0x105E2C0")]
		private void ConstructRenderTextures()
		{
		}

		[Token(Token = "0x600137E")]
		[Address(RVA = "0x105E8F8", Offset = "0x105E8F8", VA = "0x105E8F8")]
		private bool CheckRenderTexturesValid()
		{
			return default(bool);
		}

		[Token(Token = "0x600137F")]
		[Address(RVA = "0x105ED14", Offset = "0x105ED14", VA = "0x105ED14")]
		private int FindBeforeFrameIndex(int frameIdx)
		{
			return default(int);
		}

		[Token(Token = "0x6001380")]
		[Address(RVA = "0x105EF00", Offset = "0x105EF00", VA = "0x105EF00")]
		private int FindClosestFrame(int frameIdx)
		{
			return default(int);
		}

		[Token(Token = "0x6001381")]
		[Address(RVA = "0x105F0B4", Offset = "0x105F0B4", VA = "0x105F0B4")]
		private void PointUpdate()
		{
		}

		[Token(Token = "0x6001382")]
		[Address(RVA = "0x105F26C", Offset = "0x105F26C", VA = "0x105F26C")]
		private void SampleFrame(int frameIdx, int bufferIdx)
		{
		}

		[Token(Token = "0x6001383")]
		[Address(RVA = "0x105F3F8", Offset = "0x105F3F8", VA = "0x105F3F8")]
		private void SampleFrames(int bufferIdx, int frameIdx1, int frameIdx2, float t)
		{
		}

		[Token(Token = "0x6001384")]
		[Address(RVA = "0x105F6E4", Offset = "0x105F6E4", VA = "0x105F6E4")]
		private void LinearUpdate()
		{
		}

		[Token(Token = "0x6001385")]
		[Address(RVA = "0x105DE50", Offset = "0x105DE50", VA = "0x105DE50")]
		private void InvalidateBuffer()
		{
		}

		[Token(Token = "0x6001386")]
		[Address(RVA = "0x105F8F4", Offset = "0x105F8F4", VA = "0x105F8F4")]
		private float GuessFrameRate()
		{
			return default(float);
		}

		[Token(Token = "0x6001387")]
		[Address(RVA = "0x105FB9C", Offset = "0x105FB9C", VA = "0x105FB9C")]
		public void Update()
		{
		}

		[Token(Token = "0x6001388")]
		[Address(RVA = "0x1060910", Offset = "0x1060910", VA = "0x1060910")]
		public void UpdateTimestamp()
		{
		}
	}
	[Token(Token = "0x2000351")]
	public abstract class Stream
	{
		[Token(Token = "0x2000352")]
		public struct Chunk
		{
			[Token(Token = "0x400167B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string name;
		}

		[Token(Token = "0x170002C8")]
		public abstract int Width
		{
			[Token(Token = "0x600138A")]
			get;
		}

		[Token(Token = "0x170002C9")]
		public abstract int Height
		{
			[Token(Token = "0x600138B")]
			get;
		}

		[Token(Token = "0x170002CA")]
		public abstract int Bandwidth
		{
			[Token(Token = "0x600138C")]
			get;
		}

		[Token(Token = "0x170002CB")]
		public abstract string URL
		{
			[Token(Token = "0x600138D")]
			get;
		}

		[Token(Token = "0x600138E")]
		public abstract List<Chunk> GetAllChunks();

		[Token(Token = "0x600138F")]
		public abstract List<Chunk> GetChunks();

		[Token(Token = "0x6001390")]
		public abstract List<Stream> GetAllStreams();

		[Token(Token = "0x6001391")]
		public abstract List<Stream> GetStreams();

		[Token(Token = "0x6001392")]
		[Address(RVA = "0x167C1F0", Offset = "0x167C1F0", VA = "0x167C1F0")]
		protected Stream()
		{
		}
	}
}
namespace RenderHeads.Media.AVProVideo.Demos
{
	[Token(Token = "0x2000353")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x8D79BC", Offset = "0x8D79BC")]
	public class AutoRotate : MonoBehaviour
	{
		[Token(Token = "0x400167C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float x;

		[Token(Token = "0x400167D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float y;

		[Token(Token = "0x400167E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float z;

		[Token(Token = "0x400167F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float _timer;

		[Token(Token = "0x6001393")]
		[Address(RVA = "0x1AE0DD4", Offset = "0x1AE0DD4", VA = "0x1AE0DD4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001394")]
		[Address(RVA = "0x1AE0E5C", Offset = "0x1AE0E5C", VA = "0x1AE0E5C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001395")]
		[Address(RVA = "0x1AE0DD8", Offset = "0x1AE0DD8", VA = "0x1AE0DD8")]
		private void Randomise()
		{
		}

		[Token(Token = "0x6001396")]
		[Address(RVA = "0x1AE0F24", Offset = "0x1AE0F24", VA = "0x1AE0F24")]
		public AutoRotate()
		{
		}
	}
	[Token(Token = "0x2000354")]
	public class DemoInfo : MonoBehaviour
	{
		[Token(Token = "0x4001680")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string _title;

		[Token(Token = "0x4001681")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Multiline]
		public string _description;

		[Token(Token = "0x4001682")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public MediaPlayer _media;

		[Token(Token = "0x6001397")]
		[Address(RVA = "0x108B5D0", Offset = "0x108B5D0", VA = "0x108B5D0")]
		public DemoInfo()
		{
		}
	}
	[Token(Token = "0x2000355")]
	public class FrameExtract : MonoBehaviour
	{
		[Token(Token = "0x4001683")]
		private const int NumFrames = 8;

		[Token(Token = "0x4001684")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MediaPlayer _mediaPlayer;

		[Token(Token = "0x4001685")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool _accurateSeek;

		[Token(Token = "0x4001686")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int _timeoutMs;

		[Token(Token = "0x4001687")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GUISkin _skin;

		[Token(Token = "0x4001688")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool _asyncExtract;

		[Token(Token = "0x4001689")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		private bool _busyProcessingFrame;

		[Token(Token = "0x400168A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float _timeStepSeconds;

		[Token(Token = "0x400168B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int _frameIndex;

		[Token(Token = "0x400168C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Texture2D _texture;

		[Token(Token = "0x400168D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private RenderTexture _displaySheet;

		[Token(Token = "0x6001398")]
		[Address(RVA = "0x1096458", Offset = "0x1096458", VA = "0x1096458")]
		private void Start()
		{
		}

		[Token(Token = "0x6001399")]
		[Address(RVA = "0x10965CC", Offset = "0x10965CC", VA = "0x10965CC")]
		public void OnMediaPlayerEvent(MediaPlayer mp, MediaPlayerEvent.EventType et, ErrorCode errorCode)
		{
		}

		[Token(Token = "0x600139A")]
		[Address(RVA = "0x1096628", Offset = "0x1096628", VA = "0x1096628")]
		private void OnNewMediaReady()
		{
		}

		[Token(Token = "0x600139B")]
		[Address(RVA = "0x10968D0", Offset = "0x10968D0", VA = "0x10968D0")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600139C")]
		[Address(RVA = "0x10969E0", Offset = "0x10969E0", VA = "0x10969E0")]
		private void Update()
		{
		}

		[Token(Token = "0x600139D")]
		[Address(RVA = "0x1096BB0", Offset = "0x1096BB0", VA = "0x1096BB0")]
		private void ProcessExtractedFrame(Texture2D texture)
		{
		}

		[Token(Token = "0x600139E")]
		[Address(RVA = "0x1096A70", Offset = "0x1096A70", VA = "0x1096A70")]
		private void ExtractNextFrame()
		{
		}

		[Token(Token = "0x600139F")]
		[Address(RVA = "0x1096DD8", Offset = "0x1096DD8", VA = "0x1096DD8")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x60013A0")]
		[Address(RVA = "0x10971D0", Offset = "0x10971D0", VA = "0x10971D0")]
		public FrameExtract()
		{
		}
	}
	[Token(Token = "0x2000356")]
	public class Mapping3D : MonoBehaviour
	{
		[Token(Token = "0x400168E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _cubePrefab;

		[Token(Token = "0x400168F")]
		private const int MaxCubes = 48;

		[Token(Token = "0x4001690")]
		private const float SpawnTime = 0.25f;

		[Token(Token = "0x4001691")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float _timer;

		[Token(Token = "0x4001692")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<GameObject> _cubes;

		[Token(Token = "0x60013A1")]
		[Address(RVA = "0x1352CDC", Offset = "0x1352CDC", VA = "0x1352CDC")]
		private void Update()
		{
		}

		[Token(Token = "0x60013A2")]
		[Address(RVA = "0x1352D78", Offset = "0x1352D78", VA = "0x1352D78")]
		private void SpawnCube()
		{
		}

		[Token(Token = "0x60013A3")]
		[Address(RVA = "0x1352F44", Offset = "0x1352F44", VA = "0x1352F44")]
		private void RemoveCube()
		{
		}

		[Token(Token = "0x60013A4")]
		[Address(RVA = "0x1353004", Offset = "0x1353004", VA = "0x1353004")]
		public Mapping3D()
		{
		}
	}
	[Token(Token = "0x2000357")]
	public class SampleApp_Multiple : MonoBehaviour
	{
		[Token(Token = "0x4001693")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private string m_videoPath;

		[Token(Token = "0x4001694")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private MediaPlayer.FileLocation m_videoLocation;

		[Token(Token = "0x4001695")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private int m_NumVideosAdded;

		[Token(Token = "0x4001696")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<DisplayUGUI> m_aAddedVideos;

		[Token(Token = "0x60013A5")]
		[Address(RVA = "0x1062C2C", Offset = "0x1062C2C", VA = "0x1062C2C")]
		private void Update()
		{
		}

		[Token(Token = "0x60013A6")]
		[Address(RVA = "0x1062F5C", Offset = "0x1062F5C", VA = "0x1062F5C")]
		private void UpdateVideosLayout()
		{
		}

		[Token(Token = "0x60013A7")]
		[Address(RVA = "0x106318C", Offset = "0x106318C", VA = "0x106318C")]
		public void AddVideoClicked()
		{
		}

		[Token(Token = "0x60013A8")]
		[Address(RVA = "0x1063494", Offset = "0x1063494", VA = "0x1063494")]
		public void RemoveVideoClicked()
		{
		}

		[Token(Token = "0x60013A9")]
		[Address(RVA = "0x1063650", Offset = "0x1063650", VA = "0x1063650")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60013AA")]
		[Address(RVA = "0x10637EC", Offset = "0x10637EC", VA = "0x10637EC")]
		public SampleApp_Multiple()
		{
		}
	}
	[Token(Token = "0x2000358")]
	public class ChangeAudioTrack : MonoBehaviour
	{
		[Token(Token = "0x4001697")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MediaPlayer _mediaPlayer;

		[Token(Token = "0x4001698")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int _trackIndex;

		[Token(Token = "0x4001699")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private bool _isQueued;

		[Token(Token = "0x60013AB")]
		[Address(RVA = "0x12FC190", Offset = "0x12FC190", VA = "0x12FC190")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60013AC")]
		[Address(RVA = "0x12FC19C", Offset = "0x12FC19C", VA = "0x12FC19C")]
		private void Update()
		{
		}

		[Token(Token = "0x60013AD")]
		[Address(RVA = "0x12FC1D8", Offset = "0x12FC1D8", VA = "0x12FC1D8")]
		private bool IsVideoLoaded()
		{
			return default(bool);
		}

		[Token(Token = "0x60013AE")]
		[Address(RVA = "0x12FC308", Offset = "0x12FC308", VA = "0x12FC308")]
		private static bool DoChangeAudioTrack(MediaPlayer mp, int index)
		{
			return default(bool);
		}

		[Token(Token = "0x60013AF")]
		[Address(RVA = "0x12FC500", Offset = "0x12FC500", VA = "0x12FC500")]
		public ChangeAudioTrack()
		{
		}
	}
	[Token(Token = "0x2000359")]
	public class ChangeStereoMode : MonoBehaviour
	{
		[Token(Token = "0x400169A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MediaPlayer _mediaPlayer;

		[Token(Token = "0x400169B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ApplyToMesh _applyToMesh;

		[Token(Token = "0x60013B0")]
		[Address(RVA = "0x12FC5BC", Offset = "0x12FC5BC", VA = "0x12FC5BC")]
		private void Update()
		{
		}

		[Token(Token = "0x60013B1")]
		[Address(RVA = "0x12FC720", Offset = "0x12FC720", VA = "0x12FC720")]
		public ChangeStereoMode()
		{
		}
	}
	[Token(Token = "0x200035A")]
	public class ChangeVideoExample : MonoBehaviour
	{
		[Token(Token = "0x400169C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MediaPlayer _mediaPlayer;

		[Token(Token = "0x60013B2")]
		[Address(RVA = "0x12FC848", Offset = "0x12FC848", VA = "0x12FC848")]
		public void LoadVideo(string filePath)
		{
		}

		[Token(Token = "0x60013B3")]
		[Address(RVA = "0x12FC870", Offset = "0x12FC870", VA = "0x12FC870")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x60013B4")]
		[Address(RVA = "0x12FCA58", Offset = "0x12FCA58", VA = "0x12FCA58")]
		public ChangeVideoExample()
		{
		}
	}
	[Token(Token = "0x200035B")]
	public class LoadFromBuffer : MonoBehaviour
	{
		[Token(Token = "0x400169D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MediaPlayer _mp;

		[Token(Token = "0x400169E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private string _filename;

		[Token(Token = "0x60013B5")]
		[Address(RVA = "0x1347EC4", Offset = "0x1347EC4", VA = "0x1347EC4")]
		private void Start()
		{
		}

		[Token(Token = "0x60013B6")]
		[Address(RVA = "0x1347F94", Offset = "0x1347F94", VA = "0x1347F94")]
		public LoadFromBuffer()
		{
		}
	}
	[Token(Token = "0x200035C")]
	public class LoadFromBufferInChunks : MonoBehaviour
	{
		[Token(Token = "0x400169F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MediaPlayer _mp;

		[Token(Token = "0x40016A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private string _filename;

		[Token(Token = "0x60013B7")]
		[Address(RVA = "0x1347FF8", Offset = "0x1347FF8", VA = "0x1347FF8")]
		private void Start()
		{
		}

		[Token(Token = "0x60013B8")]
		[Address(RVA = "0x13481DC", Offset = "0x13481DC", VA = "0x13481DC")]
		public LoadFromBufferInChunks()
		{
		}
	}
	[Token(Token = "0x200035D")]
	public class NativeMediaOpen : MonoBehaviour
	{
		[Token(Token = "0x40016A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MediaPlayer _player;

		[Token(Token = "0x60013B9")]
		[Address(RVA = "0x135F048", Offset = "0x135F048", VA = "0x135F048")]
		private void Start()
		{
		}

		[Token(Token = "0x60013BA")]
		[Address(RVA = "0x135F04C", Offset = "0x135F04C", VA = "0x135F04C")]
		private void Update()
		{
		}

		[Token(Token = "0x60013BB")]
		[Address(RVA = "0x135F050", Offset = "0x135F050", VA = "0x135F050")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x60013BC")]
		[Address(RVA = "0x135F310", Offset = "0x135F310", VA = "0x135F310")]
		public NativeMediaOpen()
		{
		}
	}
	[Token(Token = "0x200035E")]
	public class PlaybackSync : MonoBehaviour
	{
		[Token(Token = "0x200035F")]
		private enum State
		{
			[Token(Token = "0x40016A9")]
			Loading,
			[Token(Token = "0x40016AA")]
			Playing,
			[Token(Token = "0x40016AB")]
			Finished
		}

		[Token(Token = "0x40016A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MediaPlayer _masterPlayer;

		[Token(Token = "0x40016A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MediaPlayer[] _slavePlayers;

		[Token(Token = "0x40016A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float _toleranceMs;

		[Token(Token = "0x40016A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool _matchVideo;

		[Token(Token = "0x40016A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
		public bool _muteSlaves;

		[Token(Token = "0x40016A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private State _state;

		[Token(Token = "0x60013BD")]
		[Address(RVA = "0x10565B0", Offset = "0x10565B0", VA = "0x10565B0")]
		private void Start()
		{
		}

		[Token(Token = "0x60013BE")]
		[Address(RVA = "0x1056664", Offset = "0x1056664", VA = "0x1056664")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60013BF")]
		[Address(RVA = "0x1056B08", Offset = "0x1056B08", VA = "0x1056B08")]
		private bool IsAllVideosLoaded()
		{
			return default(bool);
		}

		[Token(Token = "0x60013C0")]
		[Address(RVA = "0x1056CB0", Offset = "0x1056CB0", VA = "0x1056CB0")]
		private static bool IsVideoLoaded(MediaPlayer player)
		{
			return default(bool);
		}

		[Token(Token = "0x60013C1")]
		[Address(RVA = "0x1056B88", Offset = "0x1056B88", VA = "0x1056B88")]
		private static bool IsPlaybackFinished(MediaPlayer player)
		{
			return default(bool);
		}

		[Token(Token = "0x60013C2")]
		[Address(RVA = "0x1056EF8", Offset = "0x1056EF8", VA = "0x1056EF8")]
		public PlaybackSync()
		{
		}
	}
	[Token(Token = "0x2000360")]
	public class StartEndPoint : MonoBehaviour
	{
		[Token(Token = "0x40016AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MediaPlayer _mediaPlayer;

		[Token(Token = "0x40016AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float _startPointSeconds;

		[Token(Token = "0x40016AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float _endPointSeconds;

		[Token(Token = "0x40016AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool _loop;

		[Token(Token = "0x40016B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DCDDC", Offset = "0x8DCDDC")]
		public float _startLoopSeconds;

		[Token(Token = "0x40016B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool _isStartQueued;

		[Token(Token = "0x60013C3")]
		[Address(RVA = "0x167AF68", Offset = "0x167AF68", VA = "0x167AF68")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60013C4")]
		[Address(RVA = "0x167AF74", Offset = "0x167AF74", VA = "0x167AF74")]
		private void Update()
		{
		}

		[Token(Token = "0x60013C5")]
		[Address(RVA = "0x167AFE0", Offset = "0x167AFE0", VA = "0x167AFE0")]
		private static bool IsVideoLoaded(MediaPlayer mp)
		{
			return default(bool);
		}

		[Token(Token = "0x60013C6")]
		[Address(RVA = "0x167B108", Offset = "0x167B108", VA = "0x167B108")]
		private static void DoStart(MediaPlayer mp, float positionSeconds)
		{
		}

		[Token(Token = "0x60013C7")]
		[Address(RVA = "0x167B1F4", Offset = "0x167B1F4", VA = "0x167B1F4")]
		private static void DoCheckEnd(MediaPlayer mp, float positionSeconds)
		{
		}

		[Token(Token = "0x60013C8")]
		[Address(RVA = "0x167B380", Offset = "0x167B380", VA = "0x167B380")]
		private static void DoCheckLoop(MediaPlayer mp, float positionSeconds, float positionLoop)
		{
		}

		[Token(Token = "0x60013C9")]
		[Address(RVA = "0x167B594", Offset = "0x167B594", VA = "0x167B594")]
		public StartEndPoint()
		{
		}
	}
	[Token(Token = "0x2000361")]
	public class VideoTrigger : MonoBehaviour
	{
		[Token(Token = "0x40016B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MediaPlayer _mediaPlayer;

		[Token(Token = "0x40016B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float _fadeTimeMs;

		[Token(Token = "0x40016B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float _fade;

		[Token(Token = "0x40016B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float _fadeDirection;

		[Token(Token = "0x60013CA")]
		[Address(RVA = "0x1044294", Offset = "0x1044294", VA = "0x1044294")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x60013CB")]
		[Address(RVA = "0x1044324", Offset = "0x1044324", VA = "0x1044324")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x60013CC")]
		[Address(RVA = "0x10443A0", Offset = "0x10443A0", VA = "0x10443A0")]
		private void Update()
		{
		}

		[Token(Token = "0x60013CD")]
		[Address(RVA = "0x1044558", Offset = "0x1044558", VA = "0x1044558")]
		public VideoTrigger()
		{
		}
	}
	[Token(Token = "0x2000362")]
	public class SimpleController : MonoBehaviour
	{
		[Token(Token = "0x2000363")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D7A1C", Offset = "0x8D7A1C")]
		private sealed class <LoadVideoWithFading>d__23 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40016C4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40016C5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40016C6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SimpleController <>4__this;

			[Token(Token = "0x40016C7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <fade>5__2;

			[Token(Token = "0x170002CC")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60013DD")]
				[Address(RVA = "0x1C2CB0C", Offset = "0x1C2CB0C", VA = "0x1C2CB0C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002CD")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60013DF")]
				[Address(RVA = "0x1C2CB54", Offset = "0x1C2CB54", VA = "0x1C2CB54", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60013DA")]
			[Address(RVA = "0x1C2C588", Offset = "0x1C2C588", VA = "0x1C2C588")]
			[DebuggerHidden]
			public <LoadVideoWithFading>d__23(int <>1__state)
			{
			}

			[Token(Token = "0x60013DB")]
			[Address(RVA = "0x1C2C5B4", Offset = "0x1C2C5B4", VA = "0x1C2C5B4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60013DC")]
			[Address(RVA = "0x1C2C5B8", Offset = "0x1C2C5B8", VA = "0x1C2C5B8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60013DE")]
			[Address(RVA = "0x1C2CB14", Offset = "0x1C2CB14", VA = "0x1C2CB14", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40016B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string _folder;

		[Token(Token = "0x40016B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string[] _filenames;

		[Token(Token = "0x40016B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string[] _streams;

		[Token(Token = "0x40016B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public MediaPlayer _mediaPlayer;

		[Token(Token = "0x40016BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public DisplayIMGUI _display;

		[Token(Token = "0x40016BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GUISkin _guiSkin;

		[Token(Token = "0x40016BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int _width;

		[Token(Token = "0x40016BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private int _height;

		[Token(Token = "0x40016BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float _durationSeconds;

		[Token(Token = "0x40016BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public bool _useFading;

		[Token(Token = "0x40016C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Queue<string> _eventLog;

		[Token(Token = "0x40016C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float _eventTimer;

		[Token(Token = "0x40016C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private MediaPlayer.FileLocation _nextVideoLocation;

		[Token(Token = "0x40016C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private string _nextVideoPath;

		[Token(Token = "0x60013CE")]
		[Address(RVA = "0x16692C4", Offset = "0x16692C4", VA = "0x16692C4")]
		private void Start()
		{
		}

		[Token(Token = "0x60013CF")]
		[Address(RVA = "0x1669380", Offset = "0x1669380", VA = "0x1669380")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60013D0")]
		[Address(RVA = "0x166943C", Offset = "0x166943C", VA = "0x166943C")]
		public void OnMediaPlayerEvent(MediaPlayer mp, MediaPlayerEvent.EventType et, ErrorCode errorCode)
		{
		}

		[Token(Token = "0x60013D1")]
		[Address(RVA = "0x16696C0", Offset = "0x16696C0", VA = "0x16696C0")]
		private void AddEvent(MediaPlayerEvent.EventType et)
		{
		}

		[Token(Token = "0x60013D2")]
		[Address(RVA = "0x1669478", Offset = "0x1669478", VA = "0x1669478")]
		private void GatherProperties()
		{
		}

		[Token(Token = "0x60013D3")]
		[Address(RVA = "0x1669858", Offset = "0x1669858", VA = "0x1669858")]
		private void Update()
		{
		}

		[Token(Token = "0x60013D4")]
		[Address(RVA = "0x1669A60", Offset = "0x1669A60", VA = "0x1669A60")]
		private void LoadVideo(string filePath, bool url = false)
		{
		}

		[Token(Token = "0x60013D5")]
		[Address(RVA = "0x1669B78", Offset = "0x1669B78", VA = "0x1669B78")]
		private static bool VideoIsReady(MediaPlayer mp)
		{
			return default(bool);
		}

		[Token(Token = "0x60013D6")]
		[Address(RVA = "0x1669CA4", Offset = "0x1669CA4", VA = "0x1669CA4")]
		private static bool AudioIsReady(MediaPlayer mp)
		{
			return default(bool);
		}

		[Token(Token = "0x60013D7")]
		[Address(RVA = "0x1669EEC", Offset = "0x1669EEC", VA = "0x1669EEC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E5368", Offset = "0x8E5368")]
		private IEnumerator LoadVideoWithFading()
		{
			return null;
		}

		[Token(Token = "0x60013D8")]
		[Address(RVA = "0x1669F64", Offset = "0x1669F64", VA = "0x1669F64")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x60013D9")]
		[Address(RVA = "0x166C24C", Offset = "0x166C24C", VA = "0x166C24C")]
		public SimpleController()
		{
		}
	}
	[Token(Token = "0x2000364")]
	public class SphereDemo : MonoBehaviour
	{
		[Token(Token = "0x40016C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool _zeroCameraPosition;

		[Token(Token = "0x40016C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[SerializeField]
		private bool _allowRecenter;

		[Token(Token = "0x40016CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		[SerializeField]
		private bool _allowVrToggle;

		[Token(Token = "0x40016CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
		[SerializeField]
		private bool _lockPitch;

		[Token(Token = "0x40016CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float _spinX;

		[Token(Token = "0x40016CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float _spinY;

		[Token(Token = "0x60013E0")]
		[Address(RVA = "0x167A8AC", Offset = "0x167A8AC", VA = "0x167A8AC")]
		private static bool IsVrPresent()
		{
			return default(bool);
		}

		[Token(Token = "0x60013E1")]
		[Address(RVA = "0x167AA58", Offset = "0x167AA58", VA = "0x167AA58")]
		private void Start()
		{
		}

		[Token(Token = "0x60013E2")]
		[Address(RVA = "0x167AB54", Offset = "0x167AB54", VA = "0x167AB54")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60013E3")]
		[Address(RVA = "0x167AB90", Offset = "0x167AB90", VA = "0x167AB90")]
		private void Update()
		{
		}

		[Token(Token = "0x60013E4")]
		[Address(RVA = "0x167AE7C", Offset = "0x167AE7C", VA = "0x167AE7C")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60013E5")]
		[Address(RVA = "0x167AED8", Offset = "0x167AED8", VA = "0x167AED8")]
		public SphereDemo()
		{
		}
	}
	[Token(Token = "0x2000365")]
	public class VCR : MonoBehaviour
	{
		[Token(Token = "0x40016CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MediaPlayer _mediaPlayer;

		[Token(Token = "0x40016CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MediaPlayer _mediaPlayerB;

		[Token(Token = "0x40016D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public DisplayUGUI _mediaDisplay;

		[Token(Token = "0x40016D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public RectTransform _bufferedSliderRect;

		[Token(Token = "0x40016D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Slider _videoSeekSlider;

		[Token(Token = "0x40016D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float _setVideoSeekSliderValue;

		[Token(Token = "0x40016D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private bool _wasPlayingOnScrub;

		[Token(Token = "0x40016D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Slider _audioVolumeSlider;

		[Token(Token = "0x40016D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float _setAudioVolumeSliderValue;

		[Token(Token = "0x40016D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Toggle _AutoStartToggle;

		[Token(Token = "0x40016D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Toggle _MuteToggle;

		[Token(Token = "0x40016D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public MediaPlayer.FileLocation _location;

		[Token(Token = "0x40016DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public string _folder;

		[Token(Token = "0x40016DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public string[] _videoFiles;

		[Token(Token = "0x40016DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int _VideoIndex;

		[Token(Token = "0x40016DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Image _bufferedSliderImage;

		[Token(Token = "0x40016DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private MediaPlayer _loadingPlayer;

		[Token(Token = "0x170002CE")]
		public MediaPlayer PlayingPlayer
		{
			[Token(Token = "0x60013E6")]
			[Address(RVA = "0x104069C", Offset = "0x104069C", VA = "0x104069C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002CF")]
		public MediaPlayer LoadingPlayer
		{
			[Token(Token = "0x60013E7")]
			[Address(RVA = "0x104072C", Offset = "0x104072C", VA = "0x104072C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60013E8")]
		[Address(RVA = "0x1040734", Offset = "0x1040734", VA = "0x1040734")]
		private void SwapPlayers()
		{
		}

		[Token(Token = "0x60013E9")]
		[Address(RVA = "0x1040888", Offset = "0x1040888", VA = "0x1040888")]
		public void OnOpenVideoFile()
		{
		}

		[Token(Token = "0x60013EA")]
		[Address(RVA = "0x1040A44", Offset = "0x1040A44", VA = "0x1040A44")]
		public void OnAutoStartChange()
		{
		}

		[Token(Token = "0x60013EB")]
		[Address(RVA = "0x1040BFC", Offset = "0x1040BFC", VA = "0x1040BFC")]
		public void OnMuteChange()
		{
		}

		[Token(Token = "0x60013EC")]
		[Address(RVA = "0x1040E04", Offset = "0x1040E04", VA = "0x1040E04")]
		public void OnPlayButton()
		{
		}

		[Token(Token = "0x60013ED")]
		[Address(RVA = "0x1040F24", Offset = "0x1040F24", VA = "0x1040F24")]
		public void OnPauseButton()
		{
		}

		[Token(Token = "0x60013EE")]
		[Address(RVA = "0x1041044", Offset = "0x1041044", VA = "0x1041044")]
		public void OnVideoSeekSlider()
		{
		}

		[Token(Token = "0x60013EF")]
		[Address(RVA = "0x1041288", Offset = "0x1041288", VA = "0x1041288")]
		public void OnVideoSliderDown()
		{
		}

		[Token(Token = "0x60013F0")]
		[Address(RVA = "0x104144C", Offset = "0x104144C", VA = "0x104144C")]
		public void OnVideoSliderUp()
		{
		}

		[Token(Token = "0x60013F1")]
		[Address(RVA = "0x1041570", Offset = "0x1041570", VA = "0x1041570")]
		public void OnAudioVolumeSlider()
		{
		}

		[Token(Token = "0x60013F2")]
		[Address(RVA = "0x1041844", Offset = "0x1041844", VA = "0x1041844")]
		public void OnRewindButton()
		{
		}

		[Token(Token = "0x60013F3")]
		[Address(RVA = "0x1041964", Offset = "0x1041964", VA = "0x1041964")]
		private void Awake()
		{
		}

		[Token(Token = "0x60013F4")]
		[Address(RVA = "0x1041978", Offset = "0x1041978", VA = "0x1041978")]
		private void Start()
		{
		}

		[Token(Token = "0x60013F5")]
		[Address(RVA = "0x1041C54", Offset = "0x1041C54", VA = "0x1041C54")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60013F6")]
		[Address(RVA = "0x1041DFC", Offset = "0x1041DFC", VA = "0x1041DFC")]
		private void Update()
		{
		}

		[Token(Token = "0x60013F7")]
		[Address(RVA = "0x10424F0", Offset = "0x10424F0", VA = "0x10424F0")]
		public void OnVideoEvent(MediaPlayer mp, MediaPlayerEvent.EventType et, ErrorCode errorCode)
		{
		}

		[Token(Token = "0x60013F8")]
		[Address(RVA = "0x10425F0", Offset = "0x10425F0", VA = "0x10425F0")]
		public VCR()
		{
		}
	}
}
